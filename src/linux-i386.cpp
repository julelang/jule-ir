// Auto generated by JuleC.
// JuleC version: jule0.0.16 @master
// Date: 11/9/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <sys/time.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <signal.h>
#include <sys/wait.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _1ad896287_Range16;
struct _1ad8967b5_Range32;
struct _1ad896c38_RangeTable;
struct _1ed42d3d9_acceptRange;
struct _1ed486d49_StrBuilder;
struct _1ed492d66_lazyBuff;
struct _1ed37c9a9_DirEntry;
struct _1ed37cc40_Directory;
struct _1ed37e879_File;
struct _1ed381969_Status;
struct _1adc443e3_cmdAttrs;
struct _1ada72b17_Log;
struct _1a673e3ce_floatInfo;
struct _1a6e5244e_decimalSlice;
struct _1a6e645a4_leftCheat;
struct _1a6e650bb_decimal;
struct _1a6e77584_Const;
struct _1aa2d51c4_Token;
struct _1aa2da95a_File;
struct _1aa2dcab1_kindPair;
struct _1aa2e3a95_lex;
struct _1aa2e876a_AST;
struct _1aa2e967d_Node;
struct _1aa2e9a9b_Directive;
struct _1aa2ea67e_TypeDecl;
struct _1aa2eac89_IdentTypeDecl;
struct _1aa2eb053_SubIdentTypeDecl;
struct _1aa2eb42c_NamespaceTypeDecl;
struct _1aa2eb729_SptrTypeDecl;
struct _1aa2ebaae_SlcTypeDecl;
struct _1aa2ebdab_TupleTypeDecl;
struct _1aa2ec1a8_PtrTypeDecl;
struct _1aa2ec94a_ArrTypeDecl;
struct _1aa2ed198_MapTypeDecl;
struct _1aa2ed572_RetTypeDecl;
struct _1aa2ee9b3_Expr;
struct _1aa2eec7c_RangeExpr;
struct _1aa300387_UseExpr;
struct _1aa3005a7_TupleExpr;
struct _1aa30094d_LitExpr;
struct _1aa300d27_UnsafeExpr;
struct _1aa3012cd_IdentExpr;
struct _1aa301a70_UnaryExpr;
struct _1aa301e49_VariadicExpr;
struct _1aa302323_CastExpr;
struct _1aa3026ec_NsSelectionExpr;
struct _1aa302ac6_SubIdentExpr;
struct _1aa30307c_BinaryExpr;
struct _1aa3036dc_FnCallExpr;
struct _1aa3041d2_FieldExprPair;
struct _1aa304a0c_StructLit;
struct _1aa304eb3_BraceLit;
struct _1aa3057dd_KeyValPair;
struct _1aa306019_SliceExpr;
struct _1aa306976_IndexingExpr;
struct _1aa3070d6_SlicingExpr;
struct _1aa3073d3_Constraint;
struct _1aa307889_GenericDecl;
struct _1aa307c63_LabelSt;
struct _1aa30813c_GotoSt;
struct _1aa308439_FallSt;
struct _1aa308a99_AssignLeft;
struct _1aa30912c_AssignSt;
struct _1aa30a040_Stmt;
struct _1aa30a6a0_ScopeTree;
struct _1aa30addc_ParamDecl;
struct _1aa30c33e_FnDecl;
struct _1aa30d4e9_VarDecl;
struct _1aa30d8c3_RetSt;
struct _1aa30e143_Iter;
struct _1aa30e96d_WhileKind;
struct _1aa310375_RangeKind;
struct _1aa31074e_BreakSt;
struct _1aa310b28_ContSt;
struct _1aa3110ce_If;
struct _1aa3114a8_Else;
struct _1aa31195e_Conditional;
struct _1aa31219b_TypeAliasDecl;
struct _1aa312652_Case;
struct _1aa312e6b_MatchCase;
struct _1aa313785_UseDecl;
struct _1aa313c3b_EnumItemDecl;
struct _1aa3147ec_EnumDecl;
struct _1aa315127_TypeEnumItemDecl;
struct _1aa315787_TypeEnumDecl;
struct _1aa315a51_FieldDecl;
struct _1aa316447_StructDecl;
struct _1aa316b84_TraitDecl;
struct _1aa3172e4_Impl;
struct _1aa3185e2_Field;
struct _1aa31a605_Operators;
struct _1aa31b518_Struct;
struct _1aa31d7c3_FieldIns;
struct _1aa31e373_StructIns;
struct _1aa323234_OperandExprModel;
struct _1aa32372e_BinaryExprModel;
struct _1aa323b08_UnaryExprModel;
struct _1aa324136_StructArgExprModel;
struct _1aa3244cc_StructLitExprModel;
struct _1aa3247c9_AllocStructLitExprModel;
struct _1aa324d5c_CastingExprModel;
struct _1aa32570e_FnCallExprModel;
struct _1aa325ad8_SliceExprModel;
struct _1aa32608e_IndexingExprModel;
struct _1aa326545_AnonFnExprModel;
struct _1aa32691e_KeyValPairExprModel;
struct _1aa326dc5_MapExprModel;
struct _1aa327458_SlicingExprModel;
struct _1aa3279db_TraitSubIdentExprModel;
struct _1aa32837c_StructSubIdentExprModel;
struct _1aa328723_StructStaticIdentExprModel;
struct _1aa328aec_ArrayExprModel;
struct _1aa328de9_TupleExprModel;
struct _1aa3292c3_BuiltinOutCallExprModel;
struct _1aa32969c_BuiltinOutlnCallExprModel;
struct _1aa329a76_BuiltinNewCallExprModel;
struct _1aa329e50_BuiltinPanicCallExprModel;
struct _1aa32a406_BuiltinAssertCallExprModel;
struct _1aa32a8ac_BuiltinMakeCallExprModel;
struct _1aa32ac86_BuiltinAppendCallExprModel;
struct _1aa32b083_BuiltinLenCallExprModel;
struct _1aa32b380_BuiltinCapCallExprModel;
struct _1aa32b759_BuiltinDeleteCallExprModel;
struct _1aa32bb33_BuiltinCopyCallExprModel;
struct _1aa32c00c_BuiltinErrorCallExprModel;
struct _1aa32c6b1_SizeofExprModel;
struct _1aa32c89d_AlignofExprModel;
struct _1aa32cb45_RuneExprModel;
struct _1aa32ce42_IntegratedToStrExprModel;
struct _1aa32d31b_BackendEmitExprModel;
struct _1aa32d618_FreeExprModel;
struct _1aa32e3a5_RetType;
struct _1aa32eae2_Param;
struct _1aa3315b6_Fn;
struct _1aa33351e_ParamIns;
struct _1aa334597_FnIns;
struct _1aa337732_ReferenceStack;
struct _1aa338c3e_Pass;
struct _1aa33d6e4_symbolBuilder;
struct _1aa345047_Trait;
struct _1aa346bd6_EnumItem;
struct _1aa347753_Enum;
struct _1aa348886_TypeEnumItem;
struct _1aa348e5d_TypeEnum;
struct _1aa34c14d_comptimeRange;
struct _1aa34cb21_comptimeStructField;
struct _1aa34e3c5_comptimeStructFields;
struct _1aa3509c0_comptimeStatic;
struct _1aa352274_comptimeStatics;
struct _1aa35386e_comptimeEnumField;
struct _1aa354c16_comptimeEnumFields;
struct _1aa356311_comptimeParam;
struct _1aa35808d_comptimeParams;
struct _1aa359655_comptimeTypeInfos;
struct _1aa35ac50_comptimeTypeInfo;
struct _1aa361d55_comptimeValue;
struct _1aa3646a4_comptimeFiles;
struct _1aa365c9e_comptimeFile;
struct _1aa3679e8_comptimeDecls;
struct _1aa369841_comptimeDecl;
struct _1aa3713e7_constraintChecker;
struct _1aa37374b_Impl;
struct _1aa378ba2_Scope;
struct _1aa3790c0_If;
struct _1aa3793bc_Else;
struct _1aa3797da_Conditional;
struct _1aa379ad7_InfIter;
struct _1aa37a08d_WhileIter;
struct _1aa37a9d9_RangeIter;
struct _1aa37ad6e_ContSt;
struct _1aa37b248_BreakSt;
struct _1aa37b545_Label;
struct _1aa37b91e_GotoSt;
struct _1aa37bce8_Postfix;
struct _1aa37c29e_Assign;
struct _1aa37c755_MultiAssign;
struct _1aa37cdb5_Match;
struct _1aa37d8dd_Case;
struct _1aa37e0d6_FallSt;
struct _1aa37e47c_RetSt;
struct _1aa37eadc_scopeLabel;
struct _1aa380170_scopeGoto;
struct _1aa381160_scopeChecker;
struct _1aa39478e_directiveChecker;
struct _1aa39b0ae_ImportInfo;
struct _1aa39ded5_Package;
struct _1aa3ba908_commonSemaMeta;
struct _1aa3bb530_sema;
struct _1aa3e1ad8_missingRetChecker;
struct _1aa3e4d3e_Var;
struct _1aa3e5dc8_FuncPattern;
struct _1aa43460e_typeCompatibilityChecker;
struct _1aa4363ad_assignTypeChecker;
struct _1aa437c83_dynamicTypeAnnotation;
struct _1aa43cae0_fnCallArgChecker;
struct _1aa440a27_structLitChecker;
struct _1aa442809_rangeChecker;
struct _1aa44506a_retTypeChecker;
struct _1aa4475cd_SymbolTable;
struct _1aa44cc98_Data;
struct _1aa44de20_Value;
struct _1aa44e9c0_eval;
struct _1aa46d1e7_unaryEval;
struct _1aa470183_binaryEval;
struct _1a6018c64_InsGeneric;
struct _1a6019858_TypeAlias;
struct _1a601a64a_TypeKind;
struct _1a6022d5b_TypeSymbol;
struct _1a6023763_Prim;
struct _1a602728e_Sptr;
struct _1a6027c62_Slc;
struct _1a6028856_Tuple;
struct _1a6029406_Map;
struct _1a602a083_Arr;
struct _1a602aa56_Ptr;
struct _1a602ba57_referencer;
struct _1a602ca47_typeChecker;
struct _1a60356ed_identTypeLookup;
struct _1aa84c681_FileInfo;
struct _1aa84eed0_stmt;
struct _1aa850871_scopeParser;
struct _1aa85d2da_exprBuilder;
struct _1aa86aa01_assignInfo;
struct _1aa86de00_parser;
struct _1aa881022_typeBuilder;
struct _1a761aa4b_CompileInfo;
struct _1a761c025_directiveEval;
struct _1aa885015_JuleImporter;
struct _1aa88b978_ExprInspector;
struct _1aa892b27_OrderedDefines;
struct _1ab1a2c72_liveTable;
struct _1ab1a3190_ObjectDeadCode;
struct _1ab1a70a6_scopeDeadCode;
struct _1ab1ab74d_exprDeadCode;
struct _1aa5ecc17_ExceptionalForwardingExprModel;
struct _1aa5ed09c_SwapExprModel;
struct _1aa5ed476_EmptyCompareExprModel;
struct _1aa5ed7ea_RefExprModel;
struct _1aa5edc6d_StrCompExprModel;
struct _1aa5ee301_MutSlicingExprModel;
struct _1aa5ee5ed_UnsafeBinaryExprModel;
struct _1aa5ee983_UnsafeIndexingExprModel;
struct _1aa5eed5c_PushToSliceExprModel;
struct _1aa600236_AppendToSliceExprModel;
struct _1aa600610_StrRuneIter;
struct _1aa60090c_UnsafeDerefExprModel;
struct _1aa600c09_UnsafeCastingExprModel;
struct _1aa6018db_nilVar;
struct _1aa601c2c_nils;
struct _1aa8943cb_scopeOptimizer;
struct _1aa89adc7_exprOptimizer;
struct _1aa8a12b7_dynamicVar;
struct _1aa8a1608_dynamic;
struct _1aa8a4287_data;
struct _1aa8a58c6_boundaryVar;
struct _1aa8a5c17_boundary;
struct _1ab1ac870_Optimizer;
struct _1ab1d3d2a_AnsiEscape;
struct _1ab1d53d1_Logger;
struct _1abaeeaa8_AbsTime;
struct _1abb0027e_Time;
struct _1aba2699c_scopeCoder;
struct _1aba3327d_exprCoder;
struct _1aba4634b_TestCoder;
struct _1aba492c7_identCoder;
struct _1abb08d15_SerializationInfo;
struct _1abb09233_traitCast;
struct _1abb0960c_anonHash;
struct _1abb0aab4_ObjectCoder;
struct _1abb19b39_customType;
struct _1abb1a772_typeCoder;
struct _1abb2335c_resultCoder;
struct _1bcc09465_Flag;
struct _1bcc0d06d_Flag;
struct _1bcc11736_Flag;
struct _1bcc14e43_Flag;
struct _1bcc1860b_Flag;
struct _1abb8e340_FlagSet;
struct _1abb91d04_argParser;
struct _1adbe0658_Cmd;
struct _1aa8a3c8c_dataCheckpoint;
struct _1aa887941_IR;
struct _1ad896287_Range16 {
	jule::U16 _field_Lo;
	jule::U16 _field_Hi;
	jule::U16 _field_Stride;
	

};
inline jule::Bool _1ad896287_Range16_eq(_1ad896287_Range16 *_self_, _1ad896287_Range16 _other_);


struct _1ad8967b5_Range32 {
	jule::U32 _field_Lo;
	jule::U32 _field_Hi;
	jule::U32 _field_Stride;
	

};
inline jule::Bool _1ad8967b5_Range32_eq(_1ad8967b5_Range32 *_self_, _1ad8967b5_Range32 _other_);


struct _1ad896c38_RangeTable {
	jule::Slice<_1ad896287_Range16> _field_R16;
	jule::Slice<_1ad8967b5_Range32> _field_R32;
	jule::I32 _field_LatinOffset;
	

};
struct _1ed42d3d9_acceptRange {
	jule::U8 _field_lo;
	jule::U8 _field_hi;
	

};
inline jule::Bool _1ed42d3d9_acceptRange_eq(_1ed42d3d9_acceptRange *_self_, _1ed42d3d9_acceptRange _other_);


struct _1ed486d49_StrBuilder {
	jule::Slice<jule::U8> _field_buf;
	

};
struct _1ed492d66_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I32 _field_w;
	jule::Str _field_volAndPath;
	jule::I32 _field_volLen;
	

};
struct _1ed37c9a9_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_1ed381969_Status> _field_Stat;
	

};
inline jule::Bool _1ed37c9a9_DirEntry_eq(_1ed37c9a9_DirEntry *_self_, _1ed37c9a9_DirEntry _other_);


struct _1ed37cc40_Directory {
	

};
inline jule::Bool _1ed37cc40_Directory_eq(_1ed37cc40_Directory *_self_, _1ed37cc40_Directory _other_);


struct _1ed37e879_File {
	jule::Uintptr _field_handle;
	

};
inline jule::Bool _1ed37e879_File_eq(_1ed37e879_File *_self_, _1ed37e879_File _other_);


struct _1ed381969_Status {
	jule::I32 _field_mode;
	jule::U32 _field_size;
	

};
inline jule::Bool _1ed381969_Status_eq(_1ed381969_Status *_self_, _1ed381969_Status _other_);


struct _1adc443e3_cmdAttrs {
	jule::I32 _field_pid;
	

};
inline jule::Bool _1adc443e3_cmdAttrs_eq(_1adc443e3_cmdAttrs *_self_, _1adc443e3_cmdAttrs _other_);


struct _1ada72b17_Log {
	jule::I32 _field_Kind;
	jule::I32 _field_Row;
	jule::I32 _field_Column;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

};
inline jule::Bool _1ada72b17_Log_eq(_1ada72b17_Log *_self_, _1ada72b17_Log _other_);


struct _1a673e3ce_floatInfo {
	jule::U32 _field_mantbits;
	jule::U32 _field_expbits;
	jule::I32 _field_bias;
	

};
inline jule::Bool _1a673e3ce_floatInfo_eq(_1a673e3ce_floatInfo *_self_, _1a673e3ce_floatInfo _other_);


struct _1a6e5244e_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I32 _field_nd;
	jule::I32 _field_dp;
	jule::Bool _field_neg;
	

};
struct _1a6e645a4_leftCheat {
	jule::I32 _field_delta;
	jule::Str _field_cutoff;
	

};
inline jule::Bool _1a6e645a4_leftCheat_eq(_1a6e645a4_leftCheat *_self_, _1a6e645a4_leftCheat _other_);


struct _1a6e650bb_decimal {
	jule::Array<jule::U8,800> _field_d;
	jule::I32 _field_nd;
	jule::I32 _field_dp;
	jule::Bool _field_neg;
	jule::Bool _field_trunc;
	

};
inline jule::Bool _1a6e650bb_decimal_eq(_1a6e650bb_decimal *_self_, _1a6e650bb_decimal _other_);


inline jule::Bool _1a6e7d16c_Eq(_1a6e77584_Const* _self_, _1a6e77584_Const _26014_x);
inline jule::Bool _1a6e7d4ad_Lt(_1a6e77584_Const* _self_, _1a6e77584_Const _28714_x);
inline jule::Bool _1a6e7d7ee_LtEq(_1a6e77584_Const* _self_, _1a6e77584_Const _31016_x);
inline jule::Bool _1a6e7db40_Gt(_1a6e77584_Const* _self_, _1a6e77584_Const _33314_x);
inline jule::Bool _1a6e7de81_GtEq(_1a6e77584_Const* _self_, _1a6e77584_Const _35616_x);
struct _1a6e77584_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

};
struct _1aa2d51c4_Token {
	jule::Ptr<_1aa2da95a_File> _field_File;
	jule::I32 _field_Row;
	jule::I32 _field_Column;
	jule::Str _field_Kind;
	jule::U32 _field_Id;
	

};
inline jule::Bool _1aa2d51c4_Token_eq(_1aa2d51c4_Token *_self_, _1aa2d51c4_Token _other_);


struct _1aa2da95a_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _field_Tokens;
	

};
struct _1aa2dcab1_kindPair {
	jule::Str _field_kind;
	jule::U32 _field_id;
	

};
inline jule::Bool _1aa2dcab1_kindPair_eq(_1aa2dcab1_kindPair *_self_, _1aa2dcab1_kindPair _other_);


struct _1aa2e3a95_lex {
	jule::I32 _field_mode;
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _field_tokens;
	jule::Ptr<_1aa2da95a_File> _field_file;
	jule::I32 _field_pos;
	jule::I32 _field_column;
	jule::I32 _field_row;
	jule::Slice<_1ada72b17_Log> _field_errors;
	

};
struct _1aa2e876a_AST {
	jule::Ptr<_1aa2da95a_File> _field_File;
	jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1aa313785_UseDecl>> _field_UseDecls;
	jule::Slice<_1aa2e967d_Node> _field_Nodes;
	

};
struct _1aa2e967d_Node {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Any _field_Data;
	

};
inline jule::Bool _1aa2e967d_Node_eq(_1aa2e967d_Node *_self_, _1aa2e967d_Node _other_);


struct _1aa2e9a9b_Directive {
	jule::Ptr<_1aa2d51c4_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _field_Args;
	

};
struct _1aa2ea67e_TypeDecl {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Any _field_Kind;
	

};
inline jule::Bool _1aa2ea67e_TypeDecl_eq(_1aa2ea67e_TypeDecl *_self_, _1aa2ea67e_TypeDecl _other_);


struct _1aa2eac89_IdentTypeDecl {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>> _field_Generics;
	

};
struct _1aa2eb053_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1aa2eac89_IdentTypeDecl>> _field_Idents;
	

};
struct _1aa2eb42c_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _field_Idents;
	jule::Ptr<_1aa2ea67e_TypeDecl> _field_Kind;
	

};
struct _1aa2eb729_SptrTypeDecl {
	jule::Ptr<_1aa2ea67e_TypeDecl> _field_Elem;
	

};
inline jule::Bool _1aa2eb729_SptrTypeDecl_eq(_1aa2eb729_SptrTypeDecl *_self_, _1aa2eb729_SptrTypeDecl _other_);


struct _1aa2ebaae_SlcTypeDecl {
	jule::Ptr<_1aa2ea67e_TypeDecl> _field_Elem;
	

};
inline jule::Bool _1aa2ebaae_SlcTypeDecl_eq(_1aa2ebaae_SlcTypeDecl *_self_, _1aa2ebaae_SlcTypeDecl _other_);


struct _1aa2ebdab_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>> _field_Types;
	

};
struct _1aa2ec1a8_PtrTypeDecl {
	jule::Ptr<_1aa2ea67e_TypeDecl> _field_Elem;
	

};
inline jule::Bool _1aa2ec1a8_PtrTypeDecl_eq(_1aa2ec1a8_PtrTypeDecl *_self_, _1aa2ec1a8_PtrTypeDecl _other_);


struct _1aa2ec94a_ArrTypeDecl {
	jule::Ptr<_1aa2ea67e_TypeDecl> _field_Elem;
	jule::Ptr<_1aa2ee9b3_Expr> _field_Size;
	

};
inline jule::Bool _1aa2ec94a_ArrTypeDecl_eq(_1aa2ec94a_ArrTypeDecl *_self_, _1aa2ec94a_ArrTypeDecl _other_);


struct _1aa2ed198_MapTypeDecl {
	jule::Ptr<_1aa2ea67e_TypeDecl> _field_Key;
	jule::Ptr<_1aa2ea67e_TypeDecl> _field_Val;
	

};
inline jule::Bool _1aa2ed198_MapTypeDecl_eq(_1aa2ed198_MapTypeDecl *_self_, _1aa2ed198_MapTypeDecl _other_);


struct _1aa2ed572_RetTypeDecl {
	jule::Ptr<_1aa2ea67e_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _field_Idents;
	

};
struct _1aa2ee9b3_Expr {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Ptr<_1aa2d51c4_Token> _field_End;
	jule::Any _field_Kind;
	

};
inline jule::Bool _1aa2ee9b3_Expr_eq(_1aa2ee9b3_Expr *_self_, _1aa2ee9b3_Expr _other_);


struct _1aa2eec7c_RangeExpr {
	jule::Ptr<_1aa2ee9b3_Expr> _field_Expr;
	

};
inline jule::Bool _1aa2eec7c_RangeExpr_eq(_1aa2eec7c_RangeExpr *_self_, _1aa2eec7c_RangeExpr _other_);


struct _1aa300387_UseExpr {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Ptr<_1aa2ee9b3_Expr> _field_Expr;
	

};
inline jule::Bool _1aa300387_UseExpr_eq(_1aa300387_UseExpr *_self_, _1aa300387_UseExpr _other_);


struct _1aa3005a7_TupleExpr {
	jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>> _field_Expr;
	

};
struct _1aa30094d_LitExpr {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Str _field_Value;
	

};
inline jule::Bool _1aa30094d_LitExpr_eq(_1aa30094d_LitExpr *_self_, _1aa30094d_LitExpr _other_);


struct _1aa300d27_UnsafeExpr {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Ptr<_1aa2ee9b3_Expr> _field_Expr;
	

};
inline jule::Bool _1aa300d27_UnsafeExpr_eq(_1aa300d27_UnsafeExpr *_self_, _1aa300d27_UnsafeExpr _other_);


struct _1aa3012cd_IdentExpr {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	

};
inline jule::Bool _1aa3012cd_IdentExpr_eq(_1aa3012cd_IdentExpr *_self_, _1aa3012cd_IdentExpr _other_);


struct _1aa301a70_UnaryExpr {
	jule::Ptr<_1aa2d51c4_Token> _field_Op;
	jule::Ptr<_1aa2ee9b3_Expr> _field_Expr;
	

};
inline jule::Bool _1aa301a70_UnaryExpr_eq(_1aa301a70_UnaryExpr *_self_, _1aa301a70_UnaryExpr _other_);


struct _1aa301e49_VariadicExpr {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Ptr<_1aa2ee9b3_Expr> _field_Expr;
	

};
inline jule::Bool _1aa301e49_VariadicExpr_eq(_1aa301e49_VariadicExpr *_self_, _1aa301e49_VariadicExpr _other_);


struct _1aa302323_CastExpr {
	jule::Ptr<_1aa2ea67e_TypeDecl> _field_Kind;
	jule::Ptr<_1aa2ee9b3_Expr> _field_Expr;
	

};
inline jule::Bool _1aa302323_CastExpr_eq(_1aa302323_CastExpr *_self_, _1aa302323_CastExpr _other_);


struct _1aa3026ec_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _field_Ns;
	jule::Ptr<_1aa2d51c4_Token> _field_Ident;
	

};
struct _1aa302ac6_SubIdentExpr {
	jule::Ptr<_1aa2ee9b3_Expr> _field_Expr;
	jule::Ptr<_1aa2d51c4_Token> _field_Ident;
	

};
inline jule::Bool _1aa302ac6_SubIdentExpr_eq(_1aa302ac6_SubIdentExpr *_self_, _1aa302ac6_SubIdentExpr _other_);


struct _1aa30307c_BinaryExpr {
	jule::Ptr<_1aa2ee9b3_Expr> _field_Left;
	jule::Ptr<_1aa2ee9b3_Expr> _field_Right;
	jule::Ptr<_1aa2d51c4_Token> _field_Op;
	

};
inline jule::Bool _1aa30307c_BinaryExpr_eq(_1aa30307c_BinaryExpr *_self_, _1aa30307c_BinaryExpr _other_);


struct _1aa3036dc_FnCallExpr {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Ptr<_1aa2ee9b3_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>> _field_Args;
	jule::Ptr<_1aa30a6a0_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo;
	

};
struct _1aa3041d2_FieldExprPair {
	jule::Ptr<_1aa2d51c4_Token> _field_Field;
	jule::Ptr<_1aa2ee9b3_Expr> _field_Expr;
	

};
inline jule::Bool _1aa3041d2_FieldExprPair_eq(_1aa3041d2_FieldExprPair *_self_, _1aa3041d2_FieldExprPair _other_);


struct _1aa304a0c_StructLit {
	jule::Ptr<_1aa2d51c4_Token> _field_End;
	jule::Ptr<_1aa2ea67e_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>> _field_Exprs;
	

};
struct _1aa304eb3_BraceLit {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Ptr<_1aa2d51c4_Token> _field_End;
	jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>> _field_Exprs;
	

};
struct _1aa3057dd_KeyValPair {
	jule::Ptr<_1aa2ee9b3_Expr> _field_Key;
	jule::Ptr<_1aa2ee9b3_Expr> _field_Val;
	jule::Ptr<_1aa2d51c4_Token> _field_Colon;
	

};
inline jule::Bool _1aa3057dd_KeyValPair_eq(_1aa3057dd_KeyValPair *_self_, _1aa3057dd_KeyValPair _other_);


struct _1aa306019_SliceExpr {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Ptr<_1aa2d51c4_Token> _field_End;
	jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>> _field_Exprs;
	

};
struct _1aa306976_IndexingExpr {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Ptr<_1aa2d51c4_Token> _field_End;
	jule::Ptr<_1aa2ee9b3_Expr> _field_Expr;
	jule::Ptr<_1aa2ee9b3_Expr> _field_Index;
	

};
inline jule::Bool _1aa306976_IndexingExpr_eq(_1aa306976_IndexingExpr *_self_, _1aa306976_IndexingExpr _other_);


struct _1aa3070d6_SlicingExpr {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Ptr<_1aa2d51c4_Token> _field_End;
	jule::Ptr<_1aa2ee9b3_Expr> _field_Expr;
	jule::Ptr<_1aa2ee9b3_Expr> _field_Start;
	jule::Ptr<_1aa2ee9b3_Expr> _field_To;
	

};
inline jule::Bool _1aa3070d6_SlicingExpr_eq(_1aa3070d6_SlicingExpr *_self_, _1aa3070d6_SlicingExpr _other_);


struct _1aa3073d3_Constraint {
	jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>> _field_Mask;
	

};
struct _1aa307889_GenericDecl {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1aa3073d3_Constraint> _field_Constraint;
	

};
inline jule::Bool _1aa307889_GenericDecl_eq(_1aa307889_GenericDecl *_self_, _1aa307889_GenericDecl _other_);


struct _1aa307c63_LabelSt {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Str _field_Ident;
	

};
inline jule::Bool _1aa307c63_LabelSt_eq(_1aa307c63_LabelSt *_self_, _1aa307c63_LabelSt _other_);


struct _1aa30813c_GotoSt {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Ptr<_1aa2d51c4_Token> _field_Label;
	

};
inline jule::Bool _1aa30813c_GotoSt_eq(_1aa30813c_GotoSt *_self_, _1aa30813c_GotoSt _other_);


struct _1aa308439_FallSt {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	

};
inline jule::Bool _1aa308439_FallSt_eq(_1aa308439_FallSt *_self_, _1aa308439_FallSt _other_);


struct _1aa308a99_AssignLeft {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Reference;
	jule::Str _field_Ident;
	jule::Ptr<_1aa2ee9b3_Expr> _field_Expr;
	

};
inline jule::Bool _1aa308a99_AssignLeft_eq(_1aa308a99_AssignLeft *_self_, _1aa308a99_AssignLeft _other_);


struct _1aa30912c_AssignSt {
	jule::Bool _field_Declarative;
	jule::Ptr<_1aa2d51c4_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1aa308a99_AssignLeft>> _field_Left;
	jule::Ptr<_1aa2ee9b3_Expr> _field_Right;
	

};
struct _1aa30a040_Stmt {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Any _field_Data;
	

};
inline jule::Bool _1aa30a040_Stmt_eq(_1aa30a040_Stmt *_self_, _1aa30a040_Stmt _other_);


struct _1aa30a6a0_ScopeTree {
	jule::Ptr<_1aa30a6a0_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Deferred;
	jule::Slice<_1aa30a040_Stmt> _field_Stmts;
	jule::Ptr<_1aa2d51c4_Token> _field_End;
	

};
struct _1aa30addc_ParamDecl {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Variadic;
	jule::Bool _field_Reference;
	jule::Ptr<_1aa2ea67e_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

};
inline jule::Bool _1aa30addc_ParamDecl_eq(_1aa30addc_ParamDecl *_self_, _1aa30addc_ParamDecl _other_);


struct _1aa30c33e_FnDecl {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Bool _field_Global;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Statically;
	jule::Bool _field_Exceptional;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>> _field_Directives;
	jule::Ptr<_1aa30a6a0_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1aa307889_GenericDecl>> _field_Generics;
	jule::Ptr<_1aa2ed572_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1aa30addc_ParamDecl>> _field_Params;
	

};
struct _1aa30d4e9_VarDecl {
	jule::Ptr<_1aa30a6a0_ScopeTree> _field_Scope;
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Ptr<_1aa2d51c4_Token> _field_Setter;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Bool _field_Constant;
	jule::Bool _field_Statically;
	jule::Bool _field_Reference;
	jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>> _field_Directives;
	jule::Ptr<_1aa2ea67e_TypeDecl> _field_Kind;
	jule::Ptr<_1aa2ee9b3_Expr> _field_Expr;
	

};
struct _1aa30d8c3_RetSt {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Ptr<_1aa2ee9b3_Expr> _field_Expr;
	

};
inline jule::Bool _1aa30d8c3_RetSt_eq(_1aa30d8c3_RetSt *_self_, _1aa30d8c3_RetSt _other_);


struct _1aa30e143_Iter {
	jule::Bool _field_Comptime;
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Any _field_Kind;
	jule::Ptr<_1aa30a6a0_ScopeTree> _field_Scope;
	

};
inline jule::Bool _1aa30e143_Iter_eq(_1aa30e143_Iter *_self_, _1aa30e143_Iter _other_);


struct _1aa30e96d_WhileKind {
	jule::Ptr<_1aa2ee9b3_Expr> _field_Expr;
	jule::Any _field_Next;
	jule::Ptr<_1aa2d51c4_Token> _field_NextToken;
	

};
inline jule::Bool _1aa30e96d_WhileKind_eq(_1aa30e96d_WhileKind *_self_, _1aa30e96d_WhileKind _other_);


struct _1aa310375_RangeKind {
	jule::Ptr<_1aa2d51c4_Token> _field_InToken;
	jule::Ptr<_1aa2ee9b3_Expr> _field_Expr;
	jule::Ptr<_1aa30d4e9_VarDecl> _field_KeyA;
	jule::Ptr<_1aa30d4e9_VarDecl> _field_KeyB;
	

};
inline jule::Bool _1aa310375_RangeKind_eq(_1aa310375_RangeKind *_self_, _1aa310375_RangeKind _other_);


struct _1aa31074e_BreakSt {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Ptr<_1aa2d51c4_Token> _field_Label;
	

};
inline jule::Bool _1aa31074e_BreakSt_eq(_1aa31074e_BreakSt *_self_, _1aa31074e_BreakSt _other_);


struct _1aa310b28_ContSt {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Ptr<_1aa2d51c4_Token> _field_Label;
	

};
inline jule::Bool _1aa310b28_ContSt_eq(_1aa310b28_ContSt *_self_, _1aa310b28_ContSt _other_);


struct _1aa3110ce_If {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Ptr<_1aa2ee9b3_Expr> _field_Expr;
	jule::Ptr<_1aa30a6a0_ScopeTree> _field_Scope;
	

};
inline jule::Bool _1aa3110ce_If_eq(_1aa3110ce_If *_self_, _1aa3110ce_If _other_);


struct _1aa3114a8_Else {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Ptr<_1aa30a6a0_ScopeTree> _field_Scope;
	

};
inline jule::Bool _1aa3114a8_Else_eq(_1aa3114a8_Else *_self_, _1aa3114a8_Else _other_);


struct _1aa31195e_Conditional {
	jule::Ptr<_1aa3110ce_If> _field_Head;
	jule::Slice<jule::Ptr<_1aa3110ce_If>> _field_Tail;
	jule::Ptr<_1aa3114a8_Else> _field_Default;
	

};
struct _1aa31219b_TypeAliasDecl {
	jule::Ptr<_1aa30a6a0_ScopeTree> _field_Scope;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1aa2ea67e_TypeDecl> _field_Kind;
	

};
inline jule::Bool _1aa31219b_TypeAliasDecl_eq(_1aa31219b_TypeAliasDecl *_self_, _1aa31219b_TypeAliasDecl _other_);


struct _1aa312652_Case {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Ptr<_1aa30a6a0_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>> _field_Exprs;
	

};
struct _1aa312e6b_MatchCase {
	jule::Bool _field_Comptime;
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Ptr<_1aa2d51c4_Token> _field_End;
	jule::Bool _field_TypeMatch;
	jule::Ptr<_1aa2ee9b3_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1aa312652_Case>> _field_Cases;
	jule::Ptr<_1aa3114a8_Else> _field_Default;
	

};
struct _1aa313785_UseDecl {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full;
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _field_Selected;
	jule::Bool _field_Binded;
	jule::Bool _field_Std;
	

};
struct _1aa313c3b_EnumItemDecl {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1aa2ee9b3_Expr> _field_Expr;
	

};
inline jule::Bool _1aa313c3b_EnumItemDecl_eq(_1aa313c3b_EnumItemDecl *_self_, _1aa313c3b_EnumItemDecl _other_);


struct _1aa3147ec_EnumDecl {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Ptr<_1aa2ea67e_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1aa313c3b_EnumItemDecl>> _field_Items;
	jule::Ptr<_1aa2d51c4_Token> _field_End;
	

};
struct _1aa315127_TypeEnumItemDecl {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1aa2ea67e_TypeDecl> _field_Kind;
	

};
inline jule::Bool _1aa315127_TypeEnumItemDecl_eq(_1aa315127_TypeEnumItemDecl *_self_, _1aa315127_TypeEnumItemDecl _other_);


struct _1aa315787_TypeEnumDecl {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1aa315127_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1aa2d51c4_Token> _field_End;
	

};
struct _1aa315a51_FieldDecl {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Str _field_Ident;
	jule::Ptr<_1aa2ea67e_TypeDecl> _field_Kind;
	jule::Ptr<_1aa2ee9b3_Expr> _field_Default;
	

};
inline jule::Bool _1aa315a51_FieldDecl_eq(_1aa315a51_FieldDecl *_self_, _1aa315a51_FieldDecl _other_);


struct _1aa316447_StructDecl {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Ptr<_1aa2d51c4_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1aa315a51_FieldDecl>> _field_Fields;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1aa307889_GenericDecl>> _field_Generics;
	

};
struct _1aa316b84_TraitDecl {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Ptr<_1aa2d51c4_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public;
	jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1aa30c33e_FnDecl>> _field_Methods;
	

};
struct _1aa3172e4_Impl {
	jule::Ptr<_1aa2d51c4_Token> _field_End;
	jule::Ptr<_1aa2ea67e_TypeDecl> _field_Base;
	jule::Ptr<_1aa2ea67e_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1aa30c33e_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1aa30d4e9_VarDecl>> _field_Statics;
	

};
struct _1aa3185e2_Field {
	jule::Ptr<_1aa31b518_Struct> _field_Owner;
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Str _field_Ident;
	jule::Ptr<_1a6022d5b_TypeSymbol> _field_Kind;
	jule::Ptr<_1aa2ee9b3_Expr> _field_Default;
	

};
inline jule::Bool _1aa3185e2_Field_eq(_1aa3185e2_Field *_self_, _1aa3185e2_Field _other_);


struct _1aa31a605_Operators {
	jule::Ptr<_1aa334597_FnIns> _field_Eq;
	jule::Ptr<_1aa334597_FnIns> _field_Gt;
	jule::Ptr<_1aa334597_FnIns> _field_GtEq;
	jule::Ptr<_1aa334597_FnIns> _field_Lt;
	jule::Ptr<_1aa334597_FnIns> _field_LtEq;
	jule::Ptr<_1aa334597_FnIns> _field_Shl;
	jule::Ptr<_1aa334597_FnIns> _field_Shr;
	jule::Ptr<_1aa334597_FnIns> _field_Add;
	jule::Ptr<_1aa334597_FnIns> _field_Sub;
	jule::Ptr<_1aa334597_FnIns> _field_Div;
	jule::Ptr<_1aa334597_FnIns> _field_Mul;
	jule::Ptr<_1aa334597_FnIns> _field_Mod;
	jule::Ptr<_1aa334597_FnIns> _field_BitAnd;
	jule::Ptr<_1aa334597_FnIns> _field_BitOr;
	jule::Ptr<_1aa334597_FnIns> _field_BitXor;
	jule::Ptr<_1aa334597_FnIns> _field_Neg;
	jule::Ptr<_1aa334597_FnIns> _field_Pos;
	jule::Ptr<_1aa334597_FnIns> _field_BitNot;
	jule::Ptr<_1aa334597_FnIns> _field_AddAssign;
	jule::Ptr<_1aa334597_FnIns> _field_SubAssign;
	jule::Ptr<_1aa334597_FnIns> _field_DivAssign;
	jule::Ptr<_1aa334597_FnIns> _field_MulAssign;
	jule::Ptr<_1aa334597_FnIns> _field_ModAssign;
	jule::Ptr<_1aa334597_FnIns> _field_ShlAssign;
	jule::Ptr<_1aa334597_FnIns> _field_ShrAssign;
	jule::Ptr<_1aa334597_FnIns> _field_BitOrAssign;
	jule::Ptr<_1aa334597_FnIns> _field_BitAndAssign;
	jule::Ptr<_1aa334597_FnIns> _field_BitXorAssign;
	

};
inline jule::Bool _1aa31a605_Operators_eq(_1aa31a605_Operators *_self_, _1aa31a605_Operators _other_);


struct _1aa31b518_Struct {
	jule::Ptr<_1aa3bb530_sema> _field_sema;
	jule::Slice<jule::Ptr<_1aa31b518_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1aa31b518_Struct>> _field_Uses;
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1aa3185e2_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1aa3315b6_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1aa3e4d3e_Var>> _field_Statics;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1aa307889_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1aa345047_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1aa31e373_StructIns>> _field_Instances;
	

};
struct _1aa31d7c3_FieldIns {
	jule::Ptr<_1aa31e373_StructIns> _field_Owner;
	jule::Ptr<_1aa3185e2_Field> _field_Decl;
	jule::Ptr<_1a601a64a_TypeKind> _field_Kind;
	jule::Ptr<_1aa44cc98_Data> _field_Default;
	

};
inline jule::Bool _1aa31d7c3_FieldIns_eq(_1aa31d7c3_FieldIns *_self_, _1aa31d7c3_FieldIns _other_);


struct _1aa31e373_StructIns {
	jule::Bool _field_Checked;
	jule::Ptr<_1aa31b518_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1aa31d7c3_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1aa3e4d3e_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1aa3315b6_Fn>> _field_Methods;
	jule::Bool _field_Mutable;
	jule::Bool _field_Comparable;
	jule::Ptr<_1aa337732_ReferenceStack> _field_Refers;
	_1aa31a605_Operators _field_Operators;
	

};
struct _1aa323234_OperandExprModel {
	jule::Ptr<_1a601a64a_TypeKind> _field_Kind;
	jule::Any _field_Model;
	

};
inline jule::Bool _1aa323234_OperandExprModel_eq(_1aa323234_OperandExprModel *_self_, _1aa323234_OperandExprModel _other_);


struct _1aa32372e_BinaryExprModel {
	jule::Ptr<_1aa323234_OperandExprModel> _field_Left;
	jule::Ptr<_1aa323234_OperandExprModel> _field_Right;
	jule::Ptr<_1aa2d51c4_Token> _field_Op;
	

};
inline jule::Bool _1aa32372e_BinaryExprModel_eq(_1aa32372e_BinaryExprModel *_self_, _1aa32372e_BinaryExprModel _other_);


struct _1aa323b08_UnaryExprModel {
	jule::Ptr<_1aa44cc98_Data> _field_Expr;
	jule::Ptr<_1aa2d51c4_Token> _field_Op;
	

};
inline jule::Bool _1aa323b08_UnaryExprModel_eq(_1aa323b08_UnaryExprModel *_self_, _1aa323b08_UnaryExprModel _other_);


struct _1aa324136_StructArgExprModel {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Ptr<_1aa31d7c3_FieldIns> _field_Field;
	jule::Ptr<_1aa44cc98_Data> _field_Expr;
	

};
inline jule::Bool _1aa324136_StructArgExprModel_eq(_1aa324136_StructArgExprModel *_self_, _1aa324136_StructArgExprModel _other_);


struct _1aa3244cc_StructLitExprModel {
	jule::Ptr<_1aa31e373_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1aa324136_StructArgExprModel>> _field_Args;
	

};
struct _1aa3247c9_AllocStructLitExprModel {
	jule::Ptr<_1aa3244cc_StructLitExprModel> _field_Lit;
	

};
inline jule::Bool _1aa3247c9_AllocStructLitExprModel_eq(_1aa3247c9_AllocStructLitExprModel *_self_, _1aa3247c9_AllocStructLitExprModel _other_);


struct _1aa324d5c_CastingExprModel {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Ptr<_1aa44cc98_Data> _field_Expr;
	jule::Ptr<_1a601a64a_TypeKind> _field_Kind;
	jule::Ptr<_1a601a64a_TypeKind> _field_ExprKind;
	

};
inline jule::Bool _1aa324d5c_CastingExprModel_eq(_1aa324d5c_CastingExprModel *_self_, _1aa324d5c_CastingExprModel _other_);


struct _1aa32570e_FnCallExprModel {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Ptr<_1aa334597_FnIns> _field_Func;
	jule::Bool _field_IsCo;
	jule::Any _field_Expr;
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1aa378ba2_Scope> _field_Except;
	jule::Bool _field_Assigned;
	

};
struct _1aa325ad8_SliceExprModel {
	jule::Ptr<_1a601a64a_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	

};
struct _1aa32608e_IndexingExprModel {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Ptr<_1aa44cc98_Data> _field_Expr;
	jule::Ptr<_1aa44cc98_Data> _field_Index;
	

};
inline jule::Bool _1aa32608e_IndexingExprModel_eq(_1aa32608e_IndexingExprModel *_self_, _1aa32608e_IndexingExprModel _other_);


struct _1aa326545_AnonFnExprModel {
	jule::Slice<jule::Ptr<_1aa3e4d3e_Var>> _field_Captured;
	jule::Ptr<_1aa334597_FnIns> _field_Func;
	jule::Bool _field_Global;
	

};
struct _1aa32691e_KeyValPairExprModel {
	jule::Any _field_Key;
	jule::Any _field_Val;
	

};
inline jule::Bool _1aa32691e_KeyValPairExprModel_eq(_1aa32691e_KeyValPairExprModel *_self_, _1aa32691e_KeyValPairExprModel _other_);


struct _1aa326dc5_MapExprModel {
	jule::Ptr<_1a601a64a_TypeKind> _field_KeyKind;
	jule::Ptr<_1a601a64a_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_1aa32691e_KeyValPairExprModel>> _field_Entries;
	

};
struct _1aa327458_SlicingExprModel {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Any _field_Left;
	jule::Any _field_Right;
	

};
inline jule::Bool _1aa327458_SlicingExprModel_eq(_1aa327458_SlicingExprModel *_self_, _1aa327458_SlicingExprModel _other_);


struct _1aa3279db_TraitSubIdentExprModel {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Ptr<_1aa3315b6_Fn> _field_Method;
	jule::Ptr<_1aa345047_Trait> _field_Trt;
	

};
inline jule::Bool _1aa3279db_TraitSubIdentExprModel_eq(_1aa3279db_TraitSubIdentExprModel *_self_, _1aa3279db_TraitSubIdentExprModel _other_);


struct _1aa32837c_StructSubIdentExprModel {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Ptr<_1aa44cc98_Data> _field_Expr;
	jule::Ptr<_1aa334597_FnIns> _field_Method;
	jule::Ptr<_1aa31d7c3_FieldIns> _field_Field;
	jule::Ptr<_1aa31e373_StructIns> _field_Owner;
	

};
inline jule::Bool _1aa32837c_StructSubIdentExprModel_eq(_1aa32837c_StructSubIdentExprModel *_self_, _1aa32837c_StructSubIdentExprModel _other_);


struct _1aa328723_StructStaticIdentExprModel {
	jule::Ptr<_1aa31e373_StructIns> _field_Structure;
	jule::Any _field_Expr;
	jule::Ptr<_1aa334597_FnIns> _field_Method;
	

};
inline jule::Bool _1aa328723_StructStaticIdentExprModel_eq(_1aa328723_StructStaticIdentExprModel *_self_, _1aa328723_StructStaticIdentExprModel _other_);


struct _1aa328aec_ArrayExprModel {
	jule::Ptr<_1a602a083_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	

};
struct _1aa328de9_TupleExprModel {
	jule::Slice<jule::Ptr<_1aa44cc98_Data>> _field_Datas;
	

};
struct _1aa3292c3_BuiltinOutCallExprModel {
	jule::Any _field_Expr;
	jule::Bool _field_Debug;
	

};
inline jule::Bool _1aa3292c3_BuiltinOutCallExprModel_eq(_1aa3292c3_BuiltinOutCallExprModel *_self_, _1aa3292c3_BuiltinOutCallExprModel _other_);


struct _1aa32969c_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr;
	jule::Bool _field_Debug;
	

};
inline jule::Bool _1aa32969c_BuiltinOutlnCallExprModel_eq(_1aa32969c_BuiltinOutlnCallExprModel *_self_, _1aa32969c_BuiltinOutlnCallExprModel _other_);


struct _1aa329a76_BuiltinNewCallExprModel {
	jule::Ptr<_1a601a64a_TypeKind> _field_Kind;
	jule::Any _field_Init;
	

};
inline jule::Bool _1aa329a76_BuiltinNewCallExprModel_eq(_1aa329a76_BuiltinNewCallExprModel *_self_, _1aa329a76_BuiltinNewCallExprModel _other_);


struct _1aa329e50_BuiltinPanicCallExprModel {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Any _field_Expr;
	

};
inline jule::Bool _1aa329e50_BuiltinPanicCallExprModel_eq(_1aa329e50_BuiltinPanicCallExprModel *_self_, _1aa329e50_BuiltinPanicCallExprModel _other_);


struct _1aa32a406_BuiltinAssertCallExprModel {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Str _field_Log;
	

};
inline jule::Bool _1aa32a406_BuiltinAssertCallExprModel_eq(_1aa32a406_BuiltinAssertCallExprModel *_self_, _1aa32a406_BuiltinAssertCallExprModel _other_);


struct _1aa32a8ac_BuiltinMakeCallExprModel {
	jule::Ptr<_1a601a64a_TypeKind> _field_Kind;
	jule::Any _field_Len;
	jule::Any _field_Cap;
	

};
inline jule::Bool _1aa32a8ac_BuiltinMakeCallExprModel_eq(_1aa32a8ac_BuiltinMakeCallExprModel *_self_, _1aa32a8ac_BuiltinMakeCallExprModel _other_);


struct _1aa32ac86_BuiltinAppendCallExprModel {
	jule::Any _field_Dest;
	jule::Any _field_Elements;
	

};
inline jule::Bool _1aa32ac86_BuiltinAppendCallExprModel_eq(_1aa32ac86_BuiltinAppendCallExprModel *_self_, _1aa32ac86_BuiltinAppendCallExprModel _other_);


struct _1aa32b083_BuiltinLenCallExprModel {
	jule::Ptr<_1aa44cc98_Data> _field_Expr;
	

};
inline jule::Bool _1aa32b083_BuiltinLenCallExprModel_eq(_1aa32b083_BuiltinLenCallExprModel *_self_, _1aa32b083_BuiltinLenCallExprModel _other_);


struct _1aa32b380_BuiltinCapCallExprModel {
	jule::Ptr<_1aa44cc98_Data> _field_Expr;
	

};
inline jule::Bool _1aa32b380_BuiltinCapCallExprModel_eq(_1aa32b380_BuiltinCapCallExprModel *_self_, _1aa32b380_BuiltinCapCallExprModel _other_);


struct _1aa32b759_BuiltinDeleteCallExprModel {
	jule::Ptr<_1aa44cc98_Data> _field_Dest;
	jule::Ptr<_1aa44cc98_Data> _field_Key;
	

};
inline jule::Bool _1aa32b759_BuiltinDeleteCallExprModel_eq(_1aa32b759_BuiltinDeleteCallExprModel *_self_, _1aa32b759_BuiltinDeleteCallExprModel _other_);


struct _1aa32bb33_BuiltinCopyCallExprModel {
	jule::Ptr<_1aa44cc98_Data> _field_Dest;
	jule::Ptr<_1aa44cc98_Data> _field_Src;
	

};
inline jule::Bool _1aa32bb33_BuiltinCopyCallExprModel_eq(_1aa32bb33_BuiltinCopyCallExprModel *_self_, _1aa32bb33_BuiltinCopyCallExprModel _other_);


struct _1aa32c00c_BuiltinErrorCallExprModel {
	jule::Ptr<_1aa334597_FnIns> _field_Func;
	jule::Ptr<_1aa44cc98_Data> _field_Err;
	

};
inline jule::Bool _1aa32c00c_BuiltinErrorCallExprModel_eq(_1aa32c00c_BuiltinErrorCallExprModel *_self_, _1aa32c00c_BuiltinErrorCallExprModel _other_);


struct _1aa32c6b1_SizeofExprModel {
	jule::Any _field_Expr;
	

};
inline jule::Bool _1aa32c6b1_SizeofExprModel_eq(_1aa32c6b1_SizeofExprModel *_self_, _1aa32c6b1_SizeofExprModel _other_);


struct _1aa32c89d_AlignofExprModel {
	jule::Any _field_Expr;
	

};
inline jule::Bool _1aa32c89d_AlignofExprModel_eq(_1aa32c89d_AlignofExprModel *_self_, _1aa32c89d_AlignofExprModel _other_);


struct _1aa32cb45_RuneExprModel {
	jule::I32 _field_Code;
	

};
inline jule::Bool _1aa32cb45_RuneExprModel_eq(_1aa32cb45_RuneExprModel *_self_, _1aa32cb45_RuneExprModel _other_);


struct _1aa32ce42_IntegratedToStrExprModel {
	jule::Any _field_Expr;
	

};
inline jule::Bool _1aa32ce42_IntegratedToStrExprModel_eq(_1aa32ce42_IntegratedToStrExprModel *_self_, _1aa32ce42_IntegratedToStrExprModel _other_);


struct _1aa32d31b_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	

};
struct _1aa32d618_FreeExprModel {
	jule::Any _field_Expr;
	

};
inline jule::Bool _1aa32d618_FreeExprModel_eq(_1aa32d618_FreeExprModel *_self_, _1aa32d618_FreeExprModel _other_);


struct _1aa32e3a5_RetType {
	jule::Ptr<_1a6022d5b_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _field_Idents;
	

};
struct _1aa32eae2_Param {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Variadic;
	jule::Bool _field_Reference;
	jule::Ptr<_1a6022d5b_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

};
inline jule::Bool _1aa32eae2_Param_eq(_1aa32eae2_Param *_self_, _1aa32eae2_Param _other_);


struct _1aa3315b6_Fn {
	jule::Ptr<_1aa3bb530_sema> _field_sema;
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Bool _field_Global;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Statically;
	jule::Bool _field_Exceptional;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>> _field_Directives;
	jule::Ptr<_1aa30a6a0_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1aa307889_GenericDecl>> _field_Generics;
	jule::Ptr<_1aa32e3a5_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1aa32eae2_Param>> _field_Params;
	jule::Ptr<_1aa31b518_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1aa334597_FnIns>> _field_Instances;
	

};
struct _1aa33351e_ParamIns {
	jule::Ptr<_1aa32eae2_Param> _field_Decl;
	jule::Ptr<_1a601a64a_TypeKind> _field_Kind;
	

};
inline jule::Bool _1aa33351e_ParamIns_eq(_1aa33351e_ParamIns *_self_, _1aa33351e_ParamIns _other_);


struct _1aa334597_FnIns {
	jule::Ptr<_1aa31e373_StructIns> _field_Owner;
	jule::Ptr<_1aa3315b6_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1aa33351e_ParamIns>> _field_Params;
	jule::Ptr<_1a601a64a_TypeKind> _field_Result;
	jule::Ptr<_1aa378ba2_Scope> _field_Scope;
	jule::Ptr<_1aa337732_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon;
	jule::Bool _field_AsAnon;
	jule::Fn<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*> _field_caller;
	jule::Bool _field_reloaded;
	

};
struct _1aa337732_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	

};
struct _1aa338c3e_Pass {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Str _field_Text;
	

};
inline jule::Bool _1aa338c3e_Pass_eq(_1aa338c3e_Pass *_self_, _1aa338c3e_Pass _other_);


struct _1aa33d6e4_symbolBuilder {
	jule::Ptr<_1aa33d6e4_symbolBuilder> _field_owner;
	jule::Trait _field_importer;
	jule::Slice<_1ada72b17_Log> _field_errors;
	jule::Ptr<_1aa2e876a_AST> _field_ast;
	jule::Ptr<_1aa4475cd_SymbolTable> _field_table;
	

};
struct _1aa345047_Trait {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public;
	jule::Slice<jule::Ptr<_1a6022d5b_TypeSymbol>> _field_Inherits;
	jule::Slice<jule::Ptr<_1aa3315b6_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1aa31b518_Struct>> _field_Implemented;
	

};
struct _1aa346bd6_EnumItem {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1aa44de20_Value> _field_Value;
	

};
inline jule::Bool _1aa346bd6_EnumItem_eq(_1aa346bd6_EnumItem *_self_, _1aa346bd6_EnumItem _other_);


struct _1aa347753_Enum {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Ptr<_1a6022d5b_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1aa346bd6_EnumItem>> _field_Items;
	

};
struct _1aa348886_TypeEnumItem {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a6022d5b_TypeSymbol> _field_Kind;
	

};
inline jule::Bool _1aa348886_TypeEnumItem_eq(_1aa348886_TypeEnumItem *_self_, _1aa348886_TypeEnumItem _other_);


struct _1aa348e5d_TypeEnum {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1aa348886_TypeEnumItem>> _field_Items;
	

};
struct _1aa34c14d_comptimeRange {
	jule::Trait _field_kind;
	

};
inline jule::Bool _1aa34c14d_comptimeRange_eq(_1aa34c14d_comptimeRange *_self_, _1aa34c14d_comptimeRange _other_);


struct _1aa34cb21_comptimeStructField {
	jule::Ptr<_1aa31d7c3_FieldIns> _field_field;
	

};
inline jule::Bool _1aa34cb21_comptimeStructField_eq(_1aa34cb21_comptimeStructField *_self_, _1aa34cb21_comptimeStructField _other_);


struct _1aa34e3c5_comptimeStructFields {
	jule::Slice<jule::Ptr<_1aa31d7c3_FieldIns>> _field_fields;
	

};
struct _1aa3509c0_comptimeStatic {
	jule::Ptr<_1aa3e4d3e_Var> _field_field;
	

};
inline jule::Bool _1aa3509c0_comptimeStatic_eq(_1aa3509c0_comptimeStatic *_self_, _1aa3509c0_comptimeStatic _other_);


struct _1aa352274_comptimeStatics {
	jule::Slice<jule::Ptr<_1aa3e4d3e_Var>> _field_fields;
	

};
struct _1aa35386e_comptimeEnumField {
	jule::Ptr<_1aa346bd6_EnumItem> _field_field;
	

};
inline jule::Bool _1aa35386e_comptimeEnumField_eq(_1aa35386e_comptimeEnumField *_self_, _1aa35386e_comptimeEnumField _other_);


struct _1aa354c16_comptimeEnumFields {
	jule::Slice<jule::Ptr<_1aa346bd6_EnumItem>> _field_fields;
	

};
struct _1aa356311_comptimeParam {
	jule::Ptr<_1aa33351e_ParamIns> _field_param;
	

};
inline jule::Bool _1aa356311_comptimeParam_eq(_1aa356311_comptimeParam *_self_, _1aa356311_comptimeParam _other_);


struct _1aa35808d_comptimeParams {
	jule::Slice<jule::Ptr<_1aa33351e_ParamIns>> _field_params;
	

};
struct _1aa359655_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_1aa35ac50_comptimeTypeInfo>> _field_types;
	

};
struct _1aa35ac50_comptimeTypeInfo {
	jule::Ptr<_1a601a64a_TypeKind> _field_base;
	

};
inline jule::Bool _1aa35ac50_comptimeTypeInfo_eq(_1aa35ac50_comptimeTypeInfo *_self_, _1aa35ac50_comptimeTypeInfo _other_);


struct _1aa361d55_comptimeValue {
	jule::Ptr<_1aa44cc98_Data> _field_data;
	

};
inline jule::Bool _1aa361d55_comptimeValue_eq(_1aa361d55_comptimeValue *_self_, _1aa361d55_comptimeValue _other_);


struct _1aa3646a4_comptimeFiles {
	jule::Slice<jule::Ptr<_1aa4475cd_SymbolTable>> _field_files;
	

};
struct _1aa365c9e_comptimeFile {
	jule::Ptr<_1aa4475cd_SymbolTable> _field_file;
	

};
inline jule::Bool _1aa365c9e_comptimeFile_eq(_1aa365c9e_comptimeFile *_self_, _1aa365c9e_comptimeFile _other_);


struct _1aa3679e8_comptimeDecls {
	jule::Slice<jule::Ptr<_1aa369841_comptimeDecl>> _field_decls;
	

};
struct _1aa369841_comptimeDecl {
	jule::Any _field_decl;
	

};
inline jule::Bool _1aa369841_comptimeDecl_eq(_1aa369841_comptimeDecl *_self_, _1aa369841_comptimeDecl _other_);


struct _1aa3713e7_constraintChecker {
	jule::Ptr<_1aa3bb530_sema> _field_s;
	jule::Slice<jule::Ptr<_1aa307889_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1a6019858_TypeAlias>> _field_genericsA;
	jule::Ptr<_1aa334597_FnIns> _field_fi;
	jule::Ptr<_1aa31e373_StructIns> _field_si;
	jule::Ptr<_1aa2d51c4_Token> _field_et;
	jule::Bool _field_uniq;
	

};
struct _1aa37374b_Impl {
	jule::Ptr<_1aa2ea67e_TypeDecl> _field_Base;
	jule::Ptr<_1aa2ea67e_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1aa3315b6_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1aa3e4d3e_Var>> _field_Statics;
	

};
struct _1aa378ba2_Scope {
	jule::Ptr<_1aa378ba2_Scope> _field_Parent;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Deferred;
	jule::Slice<jule::Any> _field_Stmts;
	

};
struct _1aa3790c0_If {
	jule::Any _field_Expr;
	jule::Ptr<_1aa378ba2_Scope> _field_Scope;
	

};
inline jule::Bool _1aa3790c0_If_eq(_1aa3790c0_If *_self_, _1aa3790c0_If _other_);


struct _1aa3793bc_Else {
	jule::Ptr<_1aa378ba2_Scope> _field_Scope;
	

};
inline jule::Bool _1aa3793bc_Else_eq(_1aa3793bc_Else *_self_, _1aa3793bc_Else _other_);


struct _1aa3797da_Conditional {
	jule::Slice<jule::Ptr<_1aa3790c0_If>> _field_Elifs;
	jule::Ptr<_1aa3793bc_Else> _field_Default;
	

};
struct _1aa379ad7_InfIter {
	jule::Ptr<_1aa378ba2_Scope> _field_Scope;
	

};
inline jule::Bool _1aa379ad7_InfIter_eq(_1aa379ad7_InfIter *_self_, _1aa379ad7_InfIter _other_);


struct _1aa37a08d_WhileIter {
	jule::Any _field_Expr;
	jule::Any _field_Next;
	jule::Ptr<_1aa378ba2_Scope> _field_Scope;
	

};
inline jule::Bool _1aa37a08d_WhileIter_eq(_1aa37a08d_WhileIter *_self_, _1aa37a08d_WhileIter _other_);


struct _1aa37a9d9_RangeIter {
	jule::Ptr<_1aa44cc98_Data> _field_Expr;
	jule::Ptr<_1aa378ba2_Scope> _field_Scope;
	jule::Ptr<_1aa3e4d3e_Var> _field_KeyA;
	jule::Ptr<_1aa3e4d3e_Var> _field_KeyB;
	

};
inline jule::Bool _1aa37a9d9_RangeIter_eq(_1aa37a9d9_RangeIter *_self_, _1aa37a9d9_RangeIter _other_);


struct _1aa37ad6e_ContSt {
	jule::Uintptr _field_It;
	

};
inline jule::Bool _1aa37ad6e_ContSt_eq(_1aa37ad6e_ContSt *_self_, _1aa37ad6e_ContSt _other_);


struct _1aa37b248_BreakSt {
	jule::Uintptr _field_It;
	jule::Uintptr _field_Mtch;
	

};
inline jule::Bool _1aa37b248_BreakSt_eq(_1aa37b248_BreakSt *_self_, _1aa37b248_BreakSt _other_);


struct _1aa37b545_Label {
	jule::Str _field_Ident;
	

};
inline jule::Bool _1aa37b545_Label_eq(_1aa37b545_Label *_self_, _1aa37b545_Label _other_);


struct _1aa37b91e_GotoSt {
	jule::Str _field_Ident;
	jule::Ptr<_1aa37b545_Label> _field_Label;
	

};
inline jule::Bool _1aa37b91e_GotoSt_eq(_1aa37b91e_GotoSt *_self_, _1aa37b91e_GotoSt _other_);


struct _1aa37bce8_Postfix {
	jule::Any _field_Expr;
	jule::Str _field_Op;
	

};
inline jule::Bool _1aa37bce8_Postfix_eq(_1aa37bce8_Postfix *_self_, _1aa37bce8_Postfix _other_);


struct _1aa37c29e_Assign {
	jule::Ptr<_1aa323234_OperandExprModel> _field_Left;
	jule::Ptr<_1aa323234_OperandExprModel> _field_Right;
	jule::Ptr<_1aa2d51c4_Token> _field_Op;
	

};
inline jule::Bool _1aa37c29e_Assign_eq(_1aa37c29e_Assign *_self_, _1aa37c29e_Assign _other_);


struct _1aa37c755_MultiAssign {
	jule::Slice<jule::Ptr<_1aa3e4d3e_Var>> _field_Decls;
	jule::Slice<jule::Ptr<_1aa44cc98_Data>> _field_Left;
	jule::Any _field_Right;
	

};
struct _1aa37cdb5_Match {
	jule::Ptr<_1aa44cc98_Data> _field_Expr;
	jule::Bool _field_TypeMatch;
	jule::Bool _field_Comptime;
	jule::Slice<jule::Ptr<_1aa37d8dd_Case>> _field_Cases;
	jule::Ptr<_1aa37d8dd_Case> _field_Default;
	

};
struct _1aa37d8dd_Case {
	jule::Ptr<_1aa37cdb5_Match> _field_Owner;
	jule::Ptr<_1aa378ba2_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1aa44cc98_Data>> _field_Exprs;
	jule::Ptr<_1aa37d8dd_Case> _field_Next;
	

};
struct _1aa37e0d6_FallSt {
	jule::Uintptr _field_DestCase;
	

};
inline jule::Bool _1aa37e0d6_FallSt_eq(_1aa37e0d6_FallSt *_self_, _1aa37e0d6_FallSt _other_);


struct _1aa37e47c_RetSt {
	jule::Ptr<_1aa334597_FnIns> _field_Func;
	jule::Any _field_Expr;
	

};
inline jule::Bool _1aa37e47c_RetSt_eq(_1aa37e47c_RetSt *_self_, _1aa37e47c_RetSt _other_);


struct _1aa37eadc_scopeLabel {
	jule::Ptr<_1aa2d51c4_Token> _field_token;
	jule::Ptr<_1aa37b545_Label> _field_label;
	jule::I32 _field_pos;
	jule::Ptr<_1aa381160_scopeChecker> _field_scope;
	jule::Bool _field_used;
	

};
inline jule::Bool _1aa37eadc_scopeLabel_eq(_1aa37eadc_scopeLabel *_self_, _1aa37eadc_scopeLabel _other_);


struct _1aa380170_scopeGoto {
	jule::Ptr<_1aa37b91e_GotoSt> _field_st;
	jule::Ptr<_1aa30813c_GotoSt> _field_gt;
	jule::Ptr<_1aa381160_scopeChecker> _field_scope;
	jule::I32 _field_pos;
	

};
inline jule::Bool _1aa380170_scopeGoto_eq(_1aa380170_scopeGoto *_self_, _1aa380170_scopeGoto _other_);


struct _1aa381160_scopeChecker {
	jule::Ptr<_1aa2d51c4_Token> _field_calledFrom;
	jule::Ptr<_1aa3bb530_sema> _field_s;
	jule::Ptr<_1aa334597_FnIns> _field_owner;
	jule::Ptr<_1aa381160_scopeChecker> _field_parent;
	jule::I32 _field_childIndex;
	jule::Ptr<_1aa4475cd_SymbolTable> _field_table;
	jule::Ptr<_1aa378ba2_Scope> _field_scope;
	jule::Ptr<_1aa30a6a0_ScopeTree> _field_tree;
	jule::Ptr<_1aa334597_FnIns> _field_result;
	jule::Uintptr _field_it;
	jule::Uintptr _field_cse;
	jule::Ptr<jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>> _field_captured;
	jule::Ptr<jule::Slice<jule::Ptr<_1aa37eadc_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1aa380170_scopeGoto>>> _field_gotos;
	jule::I32 _field_i;
	

};
inline jule::Bool _1aa381160_scopeChecker_eq(_1aa381160_scopeChecker *_self_, _1aa381160_scopeChecker _other_);


struct _1aa39478e_directiveChecker {
	jule::Ptr<_1aa3bb530_sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>>> _field_d;
	jule::Any _field_o;
	

};
inline jule::Bool _1aa39478e_directiveChecker_eq(_1aa39478e_directiveChecker *_self_, _1aa39478e_directiveChecker _other_);


struct _1aa39b0ae_ImportInfo {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate;
	jule::Bool _field_Binded;
	jule::Bool _field_Std;
	jule::Bool _field_ImportAll;
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _field_Selected;
	jule::Ptr<_1aa39ded5_Package> _field_Package;
	jule::I32 _field_ModId;
	

};
struct _1aa39ded5_Package {
	jule::Slice<jule::Ptr<_1aa4475cd_SymbolTable>> _field_Files;
	

};
struct _1aa3ba908_commonSemaMeta {
	jule::Slice<jule::Ptr<_1aa35ac50_comptimeTypeInfo>> _field_comptimeTypeInfos;
	jule::Ptr<_1aa39b0ae_ImportInfo> _field_runtime;
	

};
struct _1aa3bb530_sema {
	jule::Slice<_1ada72b17_Log> _field_errors;
	jule::Slice<jule::Ptr<_1aa4475cd_SymbolTable>> _field_files;
	jule::Ptr<_1aa4475cd_SymbolTable> _field_file;
	jule::I32 _field_flags;
	jule::Ptr<_1aa3ba908_commonSemaMeta> _field_meta;
	

};
struct _1aa3e1ad8_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled;
	

};
struct _1aa3e4d3e_Var {
	jule::Ptr<_1aa378ba2_Scope> _field_Scope;
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Bool _field_Constant;
	jule::Bool _field_Mutable;
	jule::Bool _field_Public;
	jule::Bool _field_Used;
	jule::Bool _field_Statically;
	jule::Bool _field_Reference;
	jule::Ptr<_1a6022d5b_TypeSymbol> _field_Kind;
	jule::Ptr<_1aa44de20_Value> _field_Value;
	jule::Ptr<_1aa337732_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>> _field_Directives;
	jule::I32 _field_RetOrder;
	jule::Slice<jule::Ptr<_1aa3e4d3e_Var>> _field_Depends;
	

};
struct _1aa3e5dc8_FuncPattern {
	

};
struct _1aa43460e_typeCompatibilityChecker {
	jule::Ptr<_1aa3bb530_sema> _field_s;
	jule::Ptr<_1a601a64a_TypeKind> _field_dest;
	jule::Ptr<_1a601a64a_TypeKind> _field_src;
	jule::Ptr<_1aa2d51c4_Token> _field_errorToken;
	

};
inline jule::Bool _1aa43460e_typeCompatibilityChecker_eq(_1aa43460e_typeCompatibilityChecker *_self_, _1aa43460e_typeCompatibilityChecker _other_);


struct _1aa4363ad_assignTypeChecker {
	jule::Ptr<_1aa3bb530_sema> _field_s;
	jule::Ptr<_1a601a64a_TypeKind> _field_dest;
	jule::Ptr<_1aa44cc98_Data> _field_d;
	jule::Ptr<_1aa2d51c4_Token> _field_errorToken;
	

};
inline jule::Bool _1aa4363ad_assignTypeChecker_eq(_1aa4363ad_assignTypeChecker *_self_, _1aa4363ad_assignTypeChecker _other_);


struct _1aa437c83_dynamicTypeAnnotation {
	jule::Ptr<_1aa44e9c0_eval> _field_e;
	jule::Ptr<_1aa334597_FnIns> _field_f;
	jule::Ptr<_1aa33351e_ParamIns> _field_p;
	jule::Ptr<_1aa44cc98_Data> _field_a;
	jule::Ptr<_1aa2d51c4_Token> _field_errorToken;
	jule::Ptr<_1a601a64a_TypeKind>* _field_k;
	jule::Ptr<_1aa2ea67e_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1a601a64a_TypeKind>> _field_ignored;
	

};
struct _1aa43cae0_fnCallArgChecker {
	jule::Ptr<_1aa44e9c0_eval> _field_e;
	jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>> _field_args;
	jule::Ptr<_1aa2d51c4_Token> _field_errorToken;
	jule::Ptr<_1aa334597_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1a601a64a_TypeKind>> _field_ignored;
	

};
struct _1aa440a27_structLitChecker {
	jule::Ptr<_1aa44e9c0_eval> _field_e;
	jule::Ptr<_1aa2d51c4_Token> _field_errorToken;
	jule::Ptr<_1aa31e373_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1aa324136_StructArgExprModel>> _field_args;
	

};
struct _1aa442809_rangeChecker {
	jule::Ptr<_1aa381160_scopeChecker> _field_sc;
	jule::Ptr<_1aa310375_RangeKind> _field_rang;
	jule::Ptr<_1aa37a9d9_RangeIter> _field_Kind;
	jule::Ptr<_1aa44cc98_Data> _field_d;
	

};
inline jule::Bool _1aa442809_rangeChecker_eq(_1aa442809_rangeChecker *_self_, _1aa442809_rangeChecker _other_);


struct _1aa44506a_retTypeChecker {
	jule::Ptr<_1aa381160_scopeChecker> _field_sc;
	jule::Ptr<_1aa334597_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1a601a64a_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>> _field_exprs;
	jule::Ptr<_1aa2d51c4_Token> _field_errorToken;
	jule::Any _field_model;
	

};
struct _1aa4475cd_SymbolTable {
	jule::Ptr<_1aa2da95a_File> _field_File;
	jule::Slice<_1aa338c3e_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1aa39b0ae_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1aa3e4d3e_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1a6019858_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1aa31b518_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1aa3315b6_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1aa345047_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1aa347753_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1aa348e5d_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1aa37374b_Impl>> _field_Impls;
	

};
struct _1aa44cc98_Data {
	jule::Bool _field_untyped;
	jule::Ptr<_1a601a64a_TypeKind> _field_Kind;
	jule::Bool _field_Mutable;
	jule::Bool _field_Reference;
	jule::Bool _field_Lvalue;
	jule::Bool _field_IsRune;
	jule::Any _field_Model;
	jule::Bool _field_Decl;
	jule::Ptr<_1a6e77584_Const> _field_Constant;
	

};
inline jule::Bool _1aa44cc98_Data_eq(_1aa44cc98_Data *_self_, _1aa44cc98_Data _other_);


struct _1aa44de20_Value {
	jule::Ptr<_1aa2ee9b3_Expr> _field_Expr;
	jule::Ptr<_1aa44cc98_Data> _field_Data;
	

};
inline jule::Bool _1aa44de20_Value_eq(_1aa44de20_Value *_self_, _1aa44de20_Value _other_);


struct _1aa44e9c0_eval {
	jule::Ptr<_1aa3bb530_sema> _field_s;
	jule::Trait _field_lookup;
	jule::Ptr<_1a601a64a_TypeKind> _field_prefix;
	jule::Bool _field_unsafety;
	jule::Bool _field_immutable;
	jule::Bool _field_ignored;
	jule::Bool _field_disBuiltin;
	jule::Ptr<_1aa3e4d3e_Var> _field_owner;
	jule::Ptr<_1aa31d7c3_FieldIns> _field_field;
	jule::Bool _field_arg;
	

};
inline jule::Bool _1aa44e9c0_eval_eq(_1aa44e9c0_eval *_self_, _1aa44e9c0_eval _other_);


struct _1aa46d1e7_unaryEval {
	jule::Ptr<_1aa44e9c0_eval> _field_e;
	jule::Ptr<_1aa44cc98_Data> _field_d;
	jule::Ptr<_1aa301a70_UnaryExpr> _field_u;
	

};
inline jule::Bool _1aa46d1e7_unaryEval_eq(_1aa46d1e7_unaryEval *_self_, _1aa46d1e7_unaryEval _other_);


struct _1aa470183_binaryEval {
	jule::Ptr<_1aa44e9c0_eval> _field_e;
	jule::Ptr<_1aa44cc98_Data> _field_l;
	jule::Ptr<_1aa44cc98_Data> _field_r;
	jule::Ptr<_1aa2d51c4_Token> _field_op;
	

};
inline jule::Bool _1aa470183_binaryEval_eq(_1aa470183_binaryEval *_self_, _1aa470183_binaryEval _other_);


struct _1a6018c64_InsGeneric {
	jule::Ptr<_1a601a64a_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1a601a64a_TypeKind>> _field_Constraint;
	

};
struct _1a6019858_TypeAlias {
	jule::Ptr<_1aa30a6a0_ScopeTree> _field_Scope;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Used;
	jule::Bool _field_Generic;
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a6022d5b_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1a6019858_TypeAlias>> _field_Generics;
	

};
struct _1a601a64a_TypeKind {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic;
	jule::Bool _field_Variadic;
	jule::Trait _field_Kind;
	

};
inline jule::Bool _1a601a64a_TypeKind_eq(_1a601a64a_TypeKind *_self_, _1a601a64a_TypeKind _other_);


struct _1a6022d5b_TypeSymbol {
	jule::Ptr<_1aa2ea67e_TypeDecl> _field_Decl;
	jule::Ptr<_1a601a64a_TypeKind> _field_Kind;
	

};
inline jule::Bool _1a6022d5b_TypeSymbol_eq(_1a6022d5b_TypeSymbol *_self_, _1a6022d5b_TypeSymbol _other_);


struct _1a6023763_Prim {
	jule::Str _field_Kind;
	

};
inline jule::Bool _1a6023763_Prim_eq(_1a6023763_Prim *_self_, _1a6023763_Prim _other_);


struct _1a602728e_Sptr {
	jule::Ptr<_1a601a64a_TypeKind> _field_Elem;
	

};
inline jule::Bool _1a602728e_Sptr_eq(_1a602728e_Sptr *_self_, _1a602728e_Sptr _other_);


struct _1a6027c62_Slc {
	jule::Ptr<_1a601a64a_TypeKind> _field_Elem;
	

};
inline jule::Bool _1a6027c62_Slc_eq(_1a6027c62_Slc *_self_, _1a6027c62_Slc _other_);


struct _1a6028856_Tuple {
	jule::Slice<jule::Ptr<_1a601a64a_TypeKind>> _field_Types;
	

};
struct _1a6029406_Map {
	jule::Ptr<_1a601a64a_TypeKind> _field_Key;
	jule::Ptr<_1a601a64a_TypeKind> _field_Val;
	

};
inline jule::Bool _1a6029406_Map_eq(_1a6029406_Map *_self_, _1a6029406_Map _other_);


struct _1a602a083_Arr {
	jule::Bool _field_Auto;
	jule::I32 _field_N;
	jule::Ptr<_1a601a64a_TypeKind> _field_Elem;
	

};
inline jule::Bool _1a602a083_Arr_eq(_1a602a083_Arr *_self_, _1a602a083_Arr _other_);


struct _1a602aa56_Ptr {
	jule::Ptr<_1a601a64a_TypeKind> _field_Elem;
	

};
inline jule::Bool _1a602aa56_Ptr_eq(_1a602aa56_Ptr *_self_, _1a602aa56_Ptr _other_);


struct _1a602ba57_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs;
	

};
inline jule::Bool _1a602ba57_referencer_eq(_1a602ba57_referencer *_self_, _1a602ba57_referencer _other_);


struct _1a602ca47_typeChecker {
	jule::Ptr<_1aa3bb530_sema> _field_s;
	jule::Trait _field_rootLookup;
	jule::Trait _field_lookup;
	jule::Ptr<_1a602ba57_referencer> _field_referencer;
	jule::Ptr<_1aa337732_ReferenceStack> _field_refers;
	jule::Ptr<_1aa2d51c4_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1aa307889_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1a601a64a_TypeKind>>* _field_ignoredGenerics;
	jule::Slice<jule::Ptr<_1a6019858_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk;
	jule::Bool _field_disBuiltin;
	jule::Bool _field_selection;
	jule::Ptr<_1a6019858_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1a6019858_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch;
	

};
struct _1a60356ed_identTypeLookup {
	

};
inline jule::Bool _1a60356ed_identTypeLookup_eq(_1a60356ed_identTypeLookup *_self_, _1a60356ed_identTypeLookup _other_);


struct _1aa84c681_FileInfo {
	jule::Ptr<_1aa2e876a_AST> _field_Ast;
	jule::Slice<_1ada72b17_Log> _field_Errors;
	

};
struct _1aa84eed0_stmt {
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _field_tokens;
	jule::Bool _field_terminated;
	

};
struct _1aa850871_scopeParser {
	jule::Ptr<_1aa86de00_parser> _field_p;
	jule::Ptr<_1aa30a6a0_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1aa84eed0_stmt>> _field_stmts;
	jule::I32 _field_pos;
	

};
struct _1aa85d2da_exprBuilder {
	jule::Ptr<_1aa86de00_parser> _field_p;
	

};
inline jule::Bool _1aa85d2da_exprBuilder_eq(_1aa85d2da_exprBuilder *_self_, _1aa85d2da_exprBuilder _other_);


struct _1aa86aa01_assignInfo {
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _field_l;
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _field_r;
	jule::Ptr<_1aa2d51c4_Token> _field_setter;
	jule::Bool _field_ok;
	

};
struct _1aa86de00_parser {
	jule::Ptr<_1aa2e876a_AST> _field_ast;
	jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>> _field_directives;
	jule::Slice<_1ada72b17_Log> _field_errors;
	jule::Ptr<_1aa85d2da_exprBuilder> _field_ep;
	

};
struct _1aa881022_typeBuilder {
	jule::Ptr<_1aa86de00_parser> _field_p;
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _field_tokens;
	jule::I32* _field_i;
	jule::Bool _field_err;
	

};
struct _1a761aa4b_CompileInfo {
	jule::Bool _field_Prod;
	jule::Bool _field_Test;
	jule::Str _field_Compiler;
	jule::Str _field_CppStd;
	

};
inline jule::Bool _1a761aa4b_CompileInfo_eq(_1a761aa4b_CompileInfo *_self_, _1a761aa4b_CompileInfo _other_);


struct _1a761c025_directiveEval {
	jule::Slice<_1ada72b17_Log> _field_logs;
	jule::Ptr<_1aa2e9a9b_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	

};
struct _1aa885015_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1aa39b0ae_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	

};
struct _1aa88b978_ExprInspector {
	jule::Bool _field_SkipChild;
	jule::Fn<void,jule::Any*> _field_handler;
	

};
struct _1aa892b27_OrderedDefines {
	jule::Slice<jule::Ptr<_1aa31b518_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1aa3e4d3e_Var>> _field_Globals;
	

};
struct _1ab1a2c72_liveTable {
	jule::Slice<jule::Ptr<_1aa3e4d3e_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1aa334597_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1aa31e373_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1aa345047_Trait>> _field_traits;
	

};
struct _1ab1a3190_ObjectDeadCode {
	_1ab1a2c72_liveTable _field_live;
	jule::Ptr<_1aa887941_IR> _field_ir;
	

};
struct _1ab1a70a6_scopeDeadCode {
	jule::Ptr<_1ab1a70a6_scopeDeadCode> _field_parent;
	jule::Ptr<_1aa378ba2_Scope> _field_s;
	jule::I32 _field_i;
	jule::Ptr<jule::Slice<jule::Ptr<_1aa37b545_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1aa37b91e_GotoSt>>> _field_gotos;
	jule::Bool _field_except;
	

};
inline jule::Bool _1ab1a70a6_scopeDeadCode_eq(_1ab1a70a6_scopeDeadCode *_self_, _1ab1a70a6_scopeDeadCode _other_);


struct _1ab1ab74d_exprDeadCode {
	jule::Ptr<_1ab1a70a6_scopeDeadCode> _field_s;
	

};
inline jule::Bool _1ab1ab74d_exprDeadCode_eq(_1ab1ab74d_exprDeadCode *_self_, _1ab1ab74d_exprDeadCode _other_);


struct _1aa5ecc17_ExceptionalForwardingExprModel {
	jule::Ptr<_1aa32570e_FnCallExprModel> _field_Expr;
	

};
inline jule::Bool _1aa5ecc17_ExceptionalForwardingExprModel_eq(_1aa5ecc17_ExceptionalForwardingExprModel *_self_, _1aa5ecc17_ExceptionalForwardingExprModel _other_);


struct _1aa5ed09c_SwapExprModel {
	jule::Ptr<_1aa44cc98_Data> _field_Left;
	jule::Ptr<_1aa44cc98_Data> _field_Right;
	

};
inline jule::Bool _1aa5ed09c_SwapExprModel_eq(_1aa5ed09c_SwapExprModel *_self_, _1aa5ed09c_SwapExprModel _other_);


struct _1aa5ed476_EmptyCompareExprModel {
	jule::Any _field_Expr;
	jule::Bool _field_Neg;
	

};
inline jule::Bool _1aa5ed476_EmptyCompareExprModel_eq(_1aa5ed476_EmptyCompareExprModel *_self_, _1aa5ed476_EmptyCompareExprModel _other_);


struct _1aa5ed7ea_RefExprModel {
	jule::Ptr<_1aa3e4d3e_Var> _field_Var;
	

};
inline jule::Bool _1aa5ed7ea_RefExprModel_eq(_1aa5ed7ea_RefExprModel *_self_, _1aa5ed7ea_RefExprModel _other_);


struct _1aa5edc6d_StrCompExprModel {
	jule::Any _field_Left;
	jule::Ptr<_1a6e77584_Const> _field_Right;
	jule::Bool _field_NotEq;
	

};
inline jule::Bool _1aa5edc6d_StrCompExprModel_eq(_1aa5edc6d_StrCompExprModel *_self_, _1aa5edc6d_StrCompExprModel _other_);


struct _1aa5ee301_MutSlicingExprModel {
	jule::Ptr<_1aa2d51c4_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Any _field_Left;
	jule::Any _field_Right;
	

};
inline jule::Bool _1aa5ee301_MutSlicingExprModel_eq(_1aa5ee301_MutSlicingExprModel *_self_, _1aa5ee301_MutSlicingExprModel _other_);


struct _1aa5ee5ed_UnsafeBinaryExprModel {
	jule::Ptr<_1aa32372e_BinaryExprModel> _field_Node;
	

};
inline jule::Bool _1aa5ee5ed_UnsafeBinaryExprModel_eq(_1aa5ee5ed_UnsafeBinaryExprModel *_self_, _1aa5ee5ed_UnsafeBinaryExprModel _other_);


struct _1aa5ee983_UnsafeIndexingExprModel {
	jule::Ptr<_1aa32608e_IndexingExprModel> _field_Node;
	

};
inline jule::Bool _1aa5ee983_UnsafeIndexingExprModel_eq(_1aa5ee983_UnsafeIndexingExprModel *_self_, _1aa5ee983_UnsafeIndexingExprModel _other_);


struct _1aa5eed5c_PushToSliceExprModel {
	jule::Any _field_Dest;
	jule::Ptr<_1aa325ad8_SliceExprModel> _field_Elems;
	

};
inline jule::Bool _1aa5eed5c_PushToSliceExprModel_eq(_1aa5eed5c_PushToSliceExprModel *_self_, _1aa5eed5c_PushToSliceExprModel _other_);


struct _1aa600236_AppendToSliceExprModel {
	jule::Any _field_Dest;
	jule::Any _field_Slice;
	

};
inline jule::Bool _1aa600236_AppendToSliceExprModel_eq(_1aa600236_AppendToSliceExprModel *_self_, _1aa600236_AppendToSliceExprModel _other_);


struct _1aa600610_StrRuneIter {
	jule::Ptr<_1aa44cc98_Data> _field_Expr;
	jule::Ptr<_1aa37a9d9_RangeIter> _field_Base;
	

};
inline jule::Bool _1aa600610_StrRuneIter_eq(_1aa600610_StrRuneIter *_self_, _1aa600610_StrRuneIter _other_);


struct _1aa60090c_UnsafeDerefExprModel {
	jule::Ptr<_1aa323b08_UnaryExprModel> _field_Base;
	

};
inline jule::Bool _1aa60090c_UnsafeDerefExprModel_eq(_1aa60090c_UnsafeDerefExprModel *_self_, _1aa60090c_UnsafeDerefExprModel _other_);


struct _1aa600c09_UnsafeCastingExprModel {
	jule::Ptr<_1aa324d5c_CastingExprModel> _field_Base;
	

};
inline jule::Bool _1aa600c09_UnsafeCastingExprModel_eq(_1aa600c09_UnsafeCastingExprModel *_self_, _1aa600c09_UnsafeCastingExprModel _other_);


struct _1aa6018db_nilVar {
	jule::Uintptr _field_var;
	jule::Bool _field_safe;
	

};
inline jule::Bool _1aa6018db_nilVar_eq(_1aa6018db_nilVar *_self_, _1aa6018db_nilVar _other_);


struct _1aa601c2c_nils {
	jule::Slice<_1aa6018db_nilVar> _field_vars;
	

};
struct _1aa8943cb_scopeOptimizer {
	jule::Ptr<_1aa8943cb_scopeOptimizer> _field_parent;
	jule::I32 _field_i;
	jule::Ptr<_1aa378ba2_Scope> _field_scope;
	jule::Ptr<_1aa8a4287_data> _field_data;
	

};
inline jule::Bool _1aa8943cb_scopeOptimizer_eq(_1aa8943cb_scopeOptimizer *_self_, _1aa8943cb_scopeOptimizer _other_);


struct _1aa89adc7_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	jule::Ptr<_1aa8a4287_data> _field_data;
	jule::Ptr<_1aa88b978_ExprInspector> _field_inspector;
	

};
inline jule::Bool _1aa89adc7_exprOptimizer_eq(_1aa89adc7_exprOptimizer *_self_, _1aa89adc7_exprOptimizer _other_);


struct _1aa8a12b7_dynamicVar {
	jule::Uintptr _field_var;
	jule::Ptr<_1a601a64a_TypeKind> _field_kind;
	

};
inline jule::Bool _1aa8a12b7_dynamicVar_eq(_1aa8a12b7_dynamicVar *_self_, _1aa8a12b7_dynamicVar _other_);


struct _1aa8a1608_dynamic {
	jule::Slice<_1aa8a12b7_dynamicVar> _field_vars;
	

};
struct _1aa8a4287_data {
	jule::Ptr<_1aa8a5c17_boundary> _field_boundary;
	jule::Ptr<_1aa601c2c_nils> _field_nils;
	jule::Ptr<_1aa8a1608_dynamic> _field_dynamic;
	

};
inline jule::Bool _1aa8a4287_data_eq(_1aa8a4287_data *_self_, _1aa8a4287_data _other_);


struct _1aa8a58c6_boundaryVar {
	jule::Uintptr _field_var;
	jule::Slice<jule::Any> _field_maxSize;
	

};
struct _1aa8a5c17_boundary {
	jule::Slice<_1aa8a58c6_boundaryVar> _field_vars;
	

};
struct _1ab1ac870_Optimizer {
	jule::Ptr<_1aa887941_IR> _field_ir;
	

};
inline jule::Bool _1ab1ac870_Optimizer_eq(_1ab1ac870_Optimizer *_self_, _1ab1ac870_Optimizer _other_);


struct _1ab1d3d2a_AnsiEscape {
	

};
inline jule::Bool _1ab1d3d2a_AnsiEscape_eq(_1ab1d3d2a_AnsiEscape *_self_, _1ab1d3d2a_AnsiEscape _other_);


struct _1ab1d53d1_Logger {
	

};
inline jule::Bool _1ab1d53d1_Logger_eq(_1ab1d53d1_Logger *_self_, _1ab1d53d1_Logger _other_);


struct _1abaeeaa8_AbsTime {
	jule::U64 _field_Day;
	jule::U64 _field_WeekDay;
	jule::U64 _field_YearDay;
	jule::U64 _field_Month;
	jule::U64 _field_Year;
	jule::U64 _field_Second;
	jule::U64 _field_Minute;
	jule::U64 _field_Hour;
	

};
inline jule::Bool _1abaeeaa8_AbsTime_eq(_1abaeeaa8_AbsTime *_self_, _1abaeeaa8_AbsTime _other_);


struct _1abb0027e_Time {
	jule::U64 _field_sec;
	

};
inline jule::Bool _1abb0027e_Time_eq(_1abb0027e_Time *_self_, _1abb0027e_Time _other_);


struct _1aba2699c_scopeCoder {
	jule::Ptr<_1abb0aab4_ObjectCoder> _field_oc;
	

};
inline jule::Bool _1aba2699c_scopeCoder_eq(_1aba2699c_scopeCoder *_self_, _1aba2699c_scopeCoder _other_);


struct _1aba3327d_exprCoder {
	jule::Ptr<_1abb0aab4_ObjectCoder> _field_oc;
	jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1aa3e4d3e_Var>>> _field_varPrefixes;
	

};
struct _1aba4634b_TestCoder {
	jule::Ptr<_1aa31e373_StructIns> _field_t;
	jule::Ptr<_1aa3315b6_Fn> _field_tmReset;
	jule::Ptr<_1aa3315b6_Fn> _field_tmFailed;
	jule::Ptr<_1aa3315b6_Fn> _field_tmSkipped;
	jule::Ptr<_1abb0aab4_ObjectCoder> _field_oc;
	

};
inline jule::Bool _1aba4634b_TestCoder_eq(_1aba4634b_TestCoder *_self_, _1aba4634b_TestCoder _other_);


struct _1aba492c7_identCoder {
	

};
inline jule::Bool _1aba492c7_identCoder_eq(_1aba492c7_identCoder *_self_, _1aba492c7_identCoder _other_);


struct _1abb08d15_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

};
inline jule::Bool _1abb08d15_SerializationInfo_eq(_1abb08d15_SerializationInfo *_self_, _1abb08d15_SerializationInfo _other_);


struct _1abb09233_traitCast {
	jule::Ptr<_1aa345047_Trait> _field_t1;
	jule::Ptr<_1aa345047_Trait> _field_t2;
	

};
inline jule::Bool _1abb09233_traitCast_eq(_1abb09233_traitCast *_self_, _1abb09233_traitCast _other_);


struct _1abb0960c_anonHash {
	jule::Ptr<_1aa326545_AnonFnExprModel> _field_expr;
	jule::Str _field_ident;
	

};
inline jule::Bool _1abb0960c_anonHash_eq(_1abb0960c_anonHash *_self_, _1abb0960c_anonHash _other_);


struct _1abb0aab4_ObjectCoder {
	_1ed486d49_StrBuilder _field_Buf;
	_1ed486d49_StrBuilder _field_resultDecls;
	_1ed486d49_StrBuilder _field_anyObj;
	_1ed486d49_StrBuilder _field_anonObj;
	_1ed486d49_StrBuilder _field_deallocObj;
	jule::Ptr<_1aa887941_IR> _field_ir;
	_1abb08d15_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1abb0960c_anonHash>> _field_anons;
	jule::Slice<jule::Ptr<_1a601a64a_TypeKind>> _field_deallocated;
	jule::Slice<jule::U8> _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_1a601a64a_TypeKind>> _field_anyTypeMap;
	jule::Slice<_1abb09233_traitCast> _field_traitCastMap;
	jule::Map<jule::Ptr<_1aa334597_FnIns>,jule::Slice<jule::Uintptr>> _field_traitMetMap;
	jule::Ptr<_1aba3327d_exprCoder> _field_ec;
	jule::Ptr<_1aba2699c_scopeCoder> _field_sc;
	jule::Ptr<_1abb1a772_typeCoder> _field_tc;
	jule::I32 _field_headPos;
	jule::I32 _field_declPos;
	jule::I32 _field_wrapPos;
	

};
struct _1abb19b39_customType {
	jule::Str _field_kind;
	

};
inline jule::Bool _1abb19b39_customType_eq(_1abb19b39_customType *_self_, _1abb19b39_customType _other_);


struct _1abb1a772_typeCoder {
	jule::Ptr<_1abb0aab4_ObjectCoder> _field_oc;
	jule::Ptr<_1abb2335c_resultCoder> _field_rc;
	

};
inline jule::Bool _1abb1a772_typeCoder_eq(_1abb1a772_typeCoder *_self_, _1abb1a772_typeCoder _other_);


struct _1abb2335c_resultCoder {
	jule::Ptr<_1abb1a772_typeCoder> _field_tc;
	

};
inline jule::Bool _1abb2335c_resultCoder_eq(_1abb2335c_resultCoder *_self_, _1abb2335c_resultCoder _other_);


struct _1bcc09465_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::I64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

};
inline jule::Bool _1bcc09465_Flag_eq(_1bcc09465_Flag *_self_, _1bcc09465_Flag _other_);

struct _1bcc0d06d_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::U64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

};
inline jule::Bool _1bcc0d06d_Flag_eq(_1bcc0d06d_Flag *_self_, _1bcc0d06d_Flag _other_);

struct _1bcc11736_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::F64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

};
inline jule::Bool _1bcc11736_Flag_eq(_1bcc11736_Flag *_self_, _1bcc11736_Flag _other_);

struct _1bcc14e43_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::Bool _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

};
inline jule::Bool _1bcc14e43_Flag_eq(_1bcc14e43_Flag *_self_, _1bcc14e43_Flag _other_);

struct _1bcc1860b_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

};
inline jule::Bool _1bcc1860b_Flag_eq(_1bcc1860b_Flag *_self_, _1bcc1860b_Flag _other_);


struct _1abb8e340_FlagSet {
	jule::Slice<jule::Trait> _field_flags;
	

};
struct _1abb91d04_argParser {
	_1abb8e340_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I32 _field_i;
	

};
struct _1adbe0658_Cmd {
	_1adc443e3_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	

};
struct _1aa8a3c8c_dataCheckpoint {
	_1aa8a5c17_boundary _field_boundary;
	_1aa601c2c_nils _field_nils;
	_1aa8a1608_dynamic _field_dynamic;
	

};
struct _1aa887941_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1aa39ded5_Package> _field_Main;
	jule::Ptr<_1aa39b0ae_ImportInfo> _field_Runtime;
	jule::Slice<jule::Ptr<_1aa39b0ae_ImportInfo>> _field_Used;
	_1aa892b27_OrderedDefines _field_Ordered;
	

};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1aa44cc98_Data__jule_tuple_x_1aa44cc98_Data {
	jule::Ptr<_1aa44cc98_Data> __jule_result_arg0;
	jule::Ptr<_1aa44cc98_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1aa44cc98_Data__jule_tuple_bool {
	jule::Ptr<_1aa44cc98_Data> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1aa2ee9b3_Expr__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1aa312652_Case__jule_tuple_bool {
	jule::Ptr<_1aa312652_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1aa312652_Case__jule_tuple_x_1aa3114a8_Else {
	jule::Slice<jule::Ptr<_1aa312652_Case>> __jule_result_arg0;
	jule::Ptr<_1aa3114a8_Else> __jule_result_arg1;
};
struct __jule_tuple__1aa309cdc_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1aa30912c_AssignSt__jule_tuple_bool {
	jule::Ptr<_1aa30912c_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1aa2ea67e_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1aa2ea67e_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1aa2ed572_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1aa2ed572_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1aa2e876a_AST__jule_tuple_s_1ada72b17_Log {
	jule::Slice<jule::Ptr<_1aa2e876a_AST>> __jule_result_arg0;
	jule::Slice<_1ada72b17_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_1ada72b17_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_1ada72b17_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1aa334597_FnIns__jule_tuple_bool {
	jule::Ptr<_1aa334597_FnIns> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1aa887941_IR__jule_tuple_s_1ada72b17_Log {
	jule::Ptr<_1aa887941_IR> __jule_result_arg0;
	jule::Slice<_1ada72b17_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__1a672413e_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I32 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__1a672413e_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__1a672413e_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::I32 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__1a672413e_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::I32 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I32 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1aa4475cd_SymbolTable__jule_tuple_s_1ada72b17_Log {
	jule::Ptr<_1aa4475cd_SymbolTable> __jule_result_arg0;
	jule::Slice<_1ada72b17_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1aa39ded5_Package__jule_tuple_s_1ada72b17_Log {
	jule::Ptr<_1aa39ded5_Package> __jule_result_arg0;
	jule::Slice<_1ada72b17_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1aa2e876a_AST__jule_tuple_s_1ada72b17_Log {
	jule::Ptr<_1aa2e876a_AST> __jule_result_arg0;
	jule::Slice<_1ada72b17_Log> __jule_result_arg1;
};
struct __jule_tuple_sx_1aa2d51c4_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1aa2d51c4_Token__jule_tuple_sx_1aa2d51c4_Token {
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1aa2d51c4_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_ssx_1aa2d51c4_Token__jule_tuple_s_1ada72b17_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>> __jule_result_arg0;
	jule::Slice<_1ada72b17_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline _1ed486d49_StrBuilder static__1ed487146_New(jule::I32 _1516_cap);
inline void _1ed490704_Write(_1ed486d49_StrBuilder* _self_, jule::Slice<jule::U8> _2521_b);
inline void _1ed4909ac_WriteStr(_1ed486d49_StrBuilder* _self_, jule::Str _3024_s);
inline void _1ed490c65_WriteByte(_1ed486d49_StrBuilder* _self_, jule::U8 _3525_b);
inline jule::Str _1ed4912a4_Str(_1ed486d49_StrBuilder* _self_);
inline void _1ed4914a2_Clear(_1ed486d49_StrBuilder* _self_);
inline jule::I32 _1ed491738_Len(_1ed486d49_StrBuilder* _self_);
inline jule::Slice<jule::U8> _1ed491c55_Buf(_1ed486d49_StrBuilder* _self_);
inline void _1ed49200d_SetBuf(_1ed486d49_StrBuilder* _self_, jule::Slice<jule::U8> _7733_buf);
inline jule::U8 _1ed49332d_index(_1ed492d66_lazyBuff* _self_, jule::I32 _5521_i);
inline void _1ed4935d6_append(_1ed492d66_lazyBuff* _self_, jule::U8 _6222_c);
inline jule::Str _1ed49386c_string(_1ed492d66_lazyBuff* _self_);
inline jule::Exceptional<jule::Slice<jule::Ptr<_1ed37c9a9_DirEntry>>> static__1ed49770b_Read(jule::Str _1517_path);
inline jule::VoidExceptional static__1ed49793c_Create(jule::Str _4019_path);
inline jule::VoidExceptional static__1ed497b6d_Remove(jule::Str _5319_path);
inline jule::Exceptional<jule::Ptr<_1ed37e879_File>> static__1ed37b90e_Open(jule::Str _2017_path, jule::I32 _2028_flag, jule::I32 _2041_mode);
inline jule::VoidExceptional static__1ed37bb40_Remove(jule::Str _3319_path);
inline jule::Exceptional<jule::I32> _1ed37c0c4_Write(_1ed37e879_File* _self_, jule::Slice<jule::U8> _4821_buf);
inline jule::Exceptional<jule::I32> _1ed37c415_Read(_1ed37e879_File* _self_, jule::Slice<jule::U8> _6924_buf);
inline jule::Ptr<_1ed37e879_File> static__1ed37ecca_New(jule::Uintptr _4516_handle);
inline jule::Exceptional<jule::Ptr<_1ed37e879_File>> static__1ed380094_Create(jule::Str _5519_path);
inline jule::Exceptional<jule::Slice<jule::U8>> static__1ed38035d_Read(jule::Str _6717_path);
inline jule::VoidExceptional static__1ed380704_Write(jule::Str _10518_path, jule::Slice<jule::U8> _10529_data, jule::I32 _10543_perm);
inline jule::VoidExceptional _1ed380e41_Close(_1ed37e879_File* _self_);
inline jule::Exceptional<jule::Ptr<_1ed381969_Status>> static__1ed37d636_Of(jule::Str _1215_path);
inline jule::Bool _1ed381d76_IsDir(_1ed381969_Status* _self_);
inline jule::Bool _1ed38210c_IsReg(_1ed381969_Status* _self_);
inline jule::U32 _1ed382393_Size(_1ed381969_Status* _self_);
inline jule::Bool _1a6e5ba30_set(_1a6e650bb_decimal* _self_, jule::Slice<jule::U8> _23819_s);
inline __jule_tuple_u64__jule_tuple_bool _1a6e5bd71_floatBits(_1a6e650bb_decimal* _self_, _1a673e3ce_floatInfo* _33226_flt);
inline void _1a6e654a6_assign(_1a6e650bb_decimal* _self_, jule::U64 _15126_v);
inline void _1a6e6575e_shift(_1a6e650bb_decimal* _self_, jule::I32 _17625_k);
inline void _1a6e65a17_roundDown(_1a6e650bb_decimal* _self_, jule::I32 _19625_nd);
inline void _1a6e65cc0_roundUp(_1a6e650bb_decimal* _self_, jule::I32 _20523_nd);
inline void _1a6e66078_round(_1a6e650bb_decimal* _self_, jule::I32 _23221_nd);
inline jule::U64 _1a6e6630e_roundedInteger(_1a6e650bb_decimal* _self_);
inline jule::Ptr<_1a6e77584_Const> static__1a6e77a07_NewI64(jule::I64 _1619_x);
inline jule::Ptr<_1a6e77584_Const> static__1a6e77cc1_NewU64(jule::U64 _1919_x);
inline jule::Ptr<_1a6e77584_Const> static__1a6e7808a_NewBool(jule::Bool _2220_x);
inline jule::Ptr<_1a6e77584_Const> static__1a6e78354_NewStr(jule::Str _2519_x);
inline jule::Ptr<_1a6e77584_Const> static__1a6e7861d_NewF64(jule::F64 _2819_x);
inline jule::Ptr<_1a6e77584_Const> static__1a6e7882c_NewNil(void);
inline jule::I64 _1a6e78e8c_ReadI64(_1a6e77584_Const* _self_);
inline jule::U64 _1a6e79223_ReadU64(_1a6e77584_Const* _self_);
inline jule::Bool _1a6e794a9_ReadBool(_1a6e77584_Const* _self_);
inline jule::Str _1a6e79740_ReadStr(_1a6e77584_Const* _self_);
inline jule::F64 _1a6e799c6_ReadF64(_1a6e77584_Const* _self_);
inline jule::I64 _1a6e79c5c_AsI64(_1a6e77584_Const* _self_);
inline jule::U64 _1a6e79ee3_AsU64(_1a6e77584_Const* _self_);
inline jule::F64 _1a6e7a279_AsF64(_1a6e77584_Const* _self_);
inline void _1a6e7a532_SetI64(_1a6e77584_Const* _self_, jule::I64 _13822_x);
inline void _1a6e7a7da_SetU64(_1a6e77584_Const* _self_, jule::U64 _14122_x);
inline void _1a6e7aa93_SetBool(_1a6e77584_Const* _self_, jule::Bool _14423_x);
inline void _1a6e7ad4b_SetStr(_1a6e77584_Const* _self_, jule::Str _14722_x);
inline void _1a6e7b104_SetF64(_1a6e77584_Const* _self_, jule::F64 _15022_x);
inline jule::Bool _1a6e7b588_IsI64(_1a6e77584_Const* _self_);
inline jule::Bool _1a6e7b81e_IsU64(_1a6e77584_Const* _self_);
inline jule::Bool _1a6e7baa5_IsBool(_1a6e77584_Const* _self_);
inline jule::Bool _1a6e7bd3b_IsStr(_1a6e77584_Const* _self_);
inline jule::Bool _1a6e7c0c2_IsF64(_1a6e77584_Const* _self_);
inline jule::Bool _1a6e7c358_IsNil(_1a6e77584_Const* _self_);
inline jule::Bool _1a6e7c9da_And(_1a6e77584_Const* _self_, _1a6e77584_Const _23815_x);
inline jule::Bool _1a6e7cd2b_Or(_1a6e77584_Const* _self_, _1a6e77584_Const _24914_x);
inline jule::Bool _1a6e7e2c2_Add(_1a6e77584_Const* _self_, _1a6e77584_Const _37719_x);
inline jule::Bool _1a6e7e613_Sub(_1a6e77584_Const* _self_, _1a6e77584_Const _40619_x);
inline jule::Bool _1a6e7e954_Mul(_1a6e77584_Const* _self_, _1a6e77584_Const _43019_x);
inline jule::Bool _1a6e7ec95_Div(_1a6e77584_Const* _self_, _1a6e77584_Const _45819_x);
inline jule::Bool _1a6e800d6_Mod(_1a6e77584_Const* _self_, _1a6e77584_Const _48719_x);
inline jule::Bool _1a6e80427_BitwiseAnd(_1a6e77584_Const* _self_, _1a6e77584_Const _50926_x);
inline jule::Bool _1a6e80768_BitwiseOr(_1a6e77584_Const* _self_, _1a6e77584_Const _52325_x);
inline jule::Bool _1a6e80aa9_Xor(_1a6e77584_Const* _self_, _1a6e77584_Const _53719_x);
inline jule::Bool _1a6e80dea_Lshift(_1a6e77584_Const* _self_, _1a6e77584_Const _55122_x);
inline jule::Bool _1a6e8123b_Rshift(_1a6e77584_Const* _self_, _1a6e77584_Const _57122_x);
inline jule::U8 _1aa2d557b_Prec(_1aa2d51c4_Token* _self_);
inline void _1aa2dadab_Fill(_1aa2da95a_File* _self_, jule::Slice<jule::U8> _1724_data);
inline jule::Str _1aa2db142_Dir(_1aa2da95a_File* _self_);
inline jule::Str _1aa2db3c8_Name(_1aa2da95a_File* _self_);
inline jule::Str _1aa2db9a0_GetRow(_1aa2da95a_File* _self_, jule::I32 _3818_row);
inline void _1aa2e415b_pushErr(_1aa2e3a95_lex* _self_, jule::Str _44723_fmt, jule::Slice<jule::Any> _44736_args);
inline void _1aa2e46bc_lex(_1aa2e3a95_lex* _self_);
inline jule::Str _1aa2e4a0d_id(_1aa2e3a95_lex* _self_, jule::Slice<jule::U8>* _47119_ln);
inline jule::Slice<jule::U8> _1aa2e4c94_resume(_1aa2e3a95_lex* _self_);
inline void _1aa2e504c_lexLineComment(_1aa2e3a95_lex* _self_, jule::Ptr<_1aa2d51c4_Token>* _52135_token);
inline void _1aa2e5305_lexRangeComment(_1aa2e3a95_lex* _self_, jule::Ptr<_1aa2d51c4_Token>* _53636_token);
inline jule::Str _1aa2e5646_num(_1aa2e3a95_lex* _self_, jule::Slice<jule::U8>* _56420_txt);
inline jule::Str _1aa2e5987_escapeSeq(_1aa2e3a95_lex* _self_, jule::Slice<jule::U8>* _58626_txt);
inline jule::Str _1aa2e5d83_getRune(_1aa2e3a95_lex* _self_, jule::Slice<jule::U8>* _61624_txt, jule::Bool _61637_raw);
inline jule::Str _1aa2e61c4_lexRune(_1aa2e3a95_lex* _self_, jule::Slice<jule::U8>* _62524_txt);
inline jule::Str _1aa2e645a_lexStr(_1aa2e3a95_lex* _self_);
inline void _1aa2e68de_newLine(_1aa2e3a95_lex* _self_);
inline jule::Bool _1aa2e6e50_isOp(_1aa2e3a95_lex* _self_, jule::Slice<jule::U8>* _70721_txt, jule::Str _70734_kind, jule::U32 _70745_id, jule::Ptr<_1aa2d51c4_Token>* _70763_t);
inline jule::Bool _1aa2e734b_lexBasicOps(_1aa2e3a95_lex* _self_, jule::Slice<jule::U8> _71727_txt, jule::Ptr<_1aa2d51c4_Token>* _71745_tok);
inline jule::Bool _1aa2e7747_lexId(_1aa2e3a95_lex* _self_, jule::Slice<jule::U8>* _72622_txt, jule::Ptr<_1aa2d51c4_Token>* _72640_t);
inline jule::Bool _1aa2e7b43_lexNum(_1aa2e3a95_lex* _self_, jule::Slice<jule::U8>* _73623_txt, jule::Ptr<_1aa2d51c4_Token>* _73641_t);
inline jule::Ptr<_1aa2d51c4_Token> _1aa2e7dc9_token(_1aa2e3a95_lex* _self_);
inline jule::Bool _1aa2ec54e_IsUnsafe(_1aa2ec1a8_PtrTypeDecl* _self_);
inline jule::Bool _1aa2ecce1_AutoSized(_1aa2ec94a_ArrTypeDecl* _self_);
inline jule::Bool _1aa303a94_Unhandled(_1aa3036dc_FnCallExpr* _self_);
inline jule::Bool _1aa303d2a_Ignored(_1aa3036dc_FnCallExpr* _self_);
inline jule::Bool _1aa30b294_IsSelf(_1aa30addc_ParamDecl* _self_);
inline jule::Bool _1aa30c6d5_IsAnon(_1aa30c33e_FnDecl* _self_);
inline jule::Bool _1aa30e4d9_IsInf(_1aa30e143_Iter* _self_);
inline jule::Bool _1aa30ed14_IsWhileNext(_1aa30e96d_WhileKind* _self_);
inline jule::Ptr<_1aa31d7c3_FieldIns> _1aa3189cc_instance(jule::Ptr<_1aa3185e2_Field> _self_);
inline jule::Ptr<_1aa31e373_StructIns> _1aa31b9ad_instance(jule::Ptr<_1aa31b518_Struct> _self_);
inline jule::Ptr<_1aa31e373_StructIns> _1aa31bcbb_appendInstance(_1aa31b518_Struct* _self_, jule::Ptr<_1aa31e373_StructIns>* _13635_ins);
inline jule::Ptr<_1aa3315b6_Fn> _1aa31c1b7_FindMethod(_1aa31b518_Struct* _self_, jule::Str _15426_ident, jule::Bool _15438_statically);
inline jule::Ptr<_1aa3e4d3e_Var> _1aa31c508_FindStatic(_1aa31b518_Struct* _self_, jule::Str _16526_ident);
inline jule::Ptr<_1aa3185e2_Field> _1aa31c849_FindField(_1aa31b518_Struct* _self_, jule::Str _17625_ident);
inline jule::Bool _1aa31cb8a_IsImplements(_1aa31b518_Struct* _self_, jule::Ptr<_1aa345047_Trait> _18624_t);
inline jule::Bool _1aa31cecb_IsUses(_1aa31b518_Struct* _self_, jule::Ptr<_1aa31b518_Struct> _19618_s);
inline jule::Str _1aa31e72a_Str(_1aa31e373_StructIns* _self_);
inline jule::Bool _1aa31ea6b_Equal(jule::Ptr<_1aa31e373_StructIns> _self_, jule::Ptr<_1a601a64a_TypeKind> _25818_other);
inline jule::Bool _1aa320022_Same(_1aa31e373_StructIns* _self_, jule::Ptr<_1aa31e373_StructIns> _28616_s);
inline jule::Ptr<_1aa3315b6_Fn> _1aa32041d_FindMethod(_1aa31e373_StructIns* _self_, jule::Str _30126_ident, jule::Bool _30138_statically);
inline jule::Ptr<_1aa31d7c3_FieldIns> _1aa32075e_FindField(_1aa31e373_StructIns* _self_, jule::Str _31225_ident);
inline jule::Ptr<_1aa3e4d3e_Var> _1aa320aa0_FindStatic(_1aa31e373_StructIns* _self_, jule::Str _32326_ident);
inline jule::Ptr<_1aa33351e_ParamIns> _1aa32eeaa_instance(jule::Ptr<_1aa32eae2_Param> _self_);
inline jule::Bool _1aa330241_IsSelf(_1aa32eae2_Param* _self_);
inline jule::Bool _1aa3304c7_IsRef(_1aa32eae2_Param* _self_);
inline jule::Bool _1aa331a6c_IsVoid(_1aa3315b6_Fn* _self_);
inline jule::Bool _1aa331d03_IsMethod(_1aa3315b6_Fn* _self_);
inline jule::Bool _1aa332089_IsEntryPoint(_1aa3315b6_Fn* _self_);
inline jule::Bool _1aa332320_IsInit(_1aa3315b6_Fn* _self_);
inline jule::Bool _1aa3325a6_IsAnon(_1aa3315b6_Fn* _self_);
inline jule::Bool _1aa33283c_AnyVar(_1aa3315b6_Fn* _self_);
inline jule::Ptr<_1aa334597_FnIns> _1aa332ac3_instanceForce(jule::Ptr<_1aa3315b6_Fn> _self_);
inline jule::Ptr<_1aa334597_FnIns> _1aa332d59_instance(jule::Ptr<_1aa3315b6_Fn> _self_);
inline jule::Ptr<_1aa334597_FnIns> _1aa333167_appendInstance(_1aa3315b6_Fn* _self_, jule::Ptr<_1aa334597_FnIns>* _12935_ins);
inline jule::Str _1aa3338b5_Str(_1aa33351e_ParamIns* _self_);
inline jule::Str _1aa33491b_Str(_1aa334597_FnIns* _self_);
inline jule::Bool _1aa334c5c_Equal(jule::Ptr<_1aa334597_FnIns> _self_, jule::Ptr<_1a601a64a_TypeKind> _21918_other);
inline jule::Bool _1aa335202_EqualFn(jule::Ptr<_1aa334597_FnIns> _self_, jule::Ptr<_1aa334597_FnIns>* _23021_f);
inline jule::Bool _1aa335543_equalTrait(jule::Ptr<_1aa334597_FnIns> _self_, jule::Ptr<_1aa334597_FnIns>* _28924_other);
inline jule::Slice<jule::Ptr<_1a601a64a_TypeKind>> _1aa3357c9_Types(_1aa334597_FnIns* _self_);
inline jule::Bool _1aa335a60_IsBuiltin(_1aa334597_FnIns* _self_);
inline jule::Bool _1aa335ce6_IsAnon(_1aa334597_FnIns* _self_);
inline jule::Bool _1aa336137_Same(_1aa334597_FnIns* _self_, jule::Ptr<_1aa334597_FnIns> _33216_f);
inline jule::Str _1aa336478_GetKindStr(_1aa334597_FnIns* _self_, jule::Bool _34922_ident);
inline jule::Ptr<_1aa337732_ReferenceStack> static__1aa337a51_new(void);
inline jule::I32 _1aa337e4c_Len(_1aa337732_ReferenceStack* _self_);
inline jule::Any _1aa33828d_At(_1aa337732_ReferenceStack* _self_, jule::I32 _6818_i);
inline void _1aa338546_Push(_1aa337732_ReferenceStack* _self_, jule::Any _7324_ref);
inline jule::Bool _1bc8e6608_Exist(_1aa337732_ReferenceStack* _self_, jule::Ptr<_1aa334597_FnIns> _7820_t);
inline jule::Bool _1bc61b11e_Exist(_1aa337732_ReferenceStack* _self_, jule::Ptr<_1aa3e4d3e_Var> _7820_t);
inline jule::Bool _1bbaec0e5_Exist(_1aa337732_ReferenceStack* _self_, jule::Ptr<_1aa31e373_StructIns> _7820_t);
inline jule::Bool _1bcd0ee61_Exist(_1aa337732_ReferenceStack* _self_, jule::Ptr<_1aa345047_Trait> _7820_t);
inline void _1aa33e1d9_pushErr(_1aa33d6e4_symbolBuilder* _self_, jule::Ptr<_1aa2d51c4_Token>* _33224_token, jule::Str _33239_fmt, jule::Slice<jule::Any> _33252_args);
inline void _1aa33e96a_pushSuggestion(_1aa33d6e4_symbolBuilder* _self_, jule::Str _34130_fmt, jule::Slice<jule::Any> _34143_args);
inline jule::Bool _1aa33ed66_checkCppUseDeclPath(_1aa33d6e4_symbolBuilder* _self_, jule::Ptr<_1aa313785_UseDecl>* _34536_decl, jule::Str* _34553_path);
inline jule::Ptr<_1aa39b0ae_ImportInfo> _1aa340174_buildCppHeaderImport(_1aa33d6e4_symbolBuilder* _self_, jule::Ptr<_1aa313785_UseDecl>* _36541_decl);
inline jule::Ptr<_1aa39b0ae_ImportInfo> _1aa3404b5_buildStdImport(_1aa33d6e4_symbolBuilder* _self_, jule::Ptr<_1aa313785_UseDecl>* _39335_decl);
inline jule::Ptr<_1aa39b0ae_ImportInfo> _1aa340806_buildIdentImport(jule::Ptr<_1aa33d6e4_symbolBuilder> _self_, jule::Ptr<_1aa313785_UseDecl>* _43338_decl);
inline jule::Ptr<_1aa39b0ae_ImportInfo> _1aa340b47_buildImport(jule::Ptr<_1aa33d6e4_symbolBuilder> _self_, jule::Ptr<_1aa313785_UseDecl>* _48733_decl);
inline jule::Ptr<_1aa39b0ae_ImportInfo> _1aa340e88_findUseDecl(_1aa33d6e4_symbolBuilder* _self_, jule::Ptr<_1aa39b0ae_ImportInfo>* _49828_pkg);
inline jule::Bool _1aa3412c9_checkDuplicateUseDecl(_1aa33d6e4_symbolBuilder* _self_, jule::Ptr<_1aa39b0ae_ImportInfo>* _50642_pkg);
inline void _1aa34163c_implImportSelections(_1aa33d6e4_symbolBuilder* _self_, jule::Ptr<_1aa39b0ae_ImportInfo>* _51641_imp, jule::Ptr<_1aa313785_UseDecl>* _51664_decl);
inline jule::Str _1aa34197d_getAsLinkPath(jule::Ptr<_1aa33d6e4_symbolBuilder> _self_, jule::Str _53134_path);
inline void _1aa341d9b_pushCycleError(jule::Ptr<_1aa33d6e4_symbolBuilder> _self_, jule::Ptr<_1aa33d6e4_symbolBuilder>* _54532_sb, jule::Str _54552_path, _1ed486d49_StrBuilder* _54568_message);
inline void _1aa3422b9_pushCrossCycleError(jule::Ptr<_1aa33d6e4_symbolBuilder> _self_, jule::Ptr<_1aa33d6e4_symbolBuilder>* _55837_target, jule::Ptr<_1aa39b0ae_ImportInfo>* _55862_imp, jule::Ptr<_1aa2d51c4_Token>* _55881_errorToken);
inline jule::Bool _1aa3426b5_checkImportCycles(jule::Ptr<_1aa33d6e4_symbolBuilder> _self_, jule::Ptr<_1aa39b0ae_ImportInfo> _58134_imp, jule::Ptr<_1aa313785_UseDecl>* _58153_decl);
inline void _1aa342ad3_checkPackageAccessibility(_1aa33d6e4_symbolBuilder* _self_, jule::Ptr<_1aa313785_UseDecl>* _61242_decl, jule::Str* _61259_mod, jule::Str* _61270_path);
inline jule::Bool _1aa342ece_importPackage(jule::Ptr<_1aa33d6e4_symbolBuilder> _self_, jule::Ptr<_1aa39b0ae_ImportInfo>* _61835_imp, jule::Ptr<_1aa313785_UseDecl>* _61858_decl);
inline jule::Ptr<_1aa39b0ae_ImportInfo> _1aa343320_importUseDecl(jule::Ptr<_1aa33d6e4_symbolBuilder> _self_, jule::Ptr<_1aa313785_UseDecl>* _66535_decl);
inline void _1aa34351d_importUseDecls(jule::Ptr<_1aa33d6e4_symbolBuilder> _self_);
inline void _1aa3437c6_appendNode(_1aa33d6e4_symbolBuilder* _self_, _1aa2e967d_Node* _69431_node);
inline void _1aa3439c4_appendNodes(_1aa33d6e4_symbolBuilder* _self_);
inline void _1aa343c7c_pushDirectivePass(_1aa33d6e4_symbolBuilder* _self_, jule::Ptr<_1aa2e9a9b_Directive>* _73038_d);
inline void _1aa343e7a_appendTopDirectives(_1aa33d6e4_symbolBuilder* _self_);
inline void _1aa344178_build(jule::Ptr<_1aa33d6e4_symbolBuilder> _self_);
inline jule::Str _1aa345443_Str(_1aa345047_Trait* _self_);
inline jule::Bool _1aa345784_Equal(jule::Ptr<_1aa345047_Trait> _self_, jule::Ptr<_1a601a64a_TypeKind> _2518_other);
inline jule::Ptr<_1aa3315b6_Fn> _1aa345c29_FindMethod(_1aa345047_Trait* _self_, jule::Str _3426_ident);
inline jule::Ptr<_1aa3315b6_Fn> _1aa3463ab_findMethodInherit(_1aa345047_Trait* _self_, jule::Str* _5534_ident);
inline jule::Bool _1aa3470c1_AutoExpr(_1aa346bd6_EnumItem* _self_);
inline jule::Str _1aa347b0a_Str(_1aa347753_Enum* _self_);
inline jule::Bool _1aa347e4b_Equal(jule::Ptr<_1aa347753_Enum> _self_, jule::Ptr<_1a601a64a_TypeKind> _3818_other);
inline jule::Ptr<_1aa346bd6_EnumItem> _1aa34837a_FindItem(_1aa347753_Enum* _self_, jule::Str _4724_ident);
inline jule::Str _1aa3492d2_Str(_1aa348e5d_TypeEnum* _self_);
inline jule::Bool _1aa349623_Equal(jule::Ptr<_1aa348e5d_TypeEnum> _self_, jule::Ptr<_1a601a64a_TypeKind> _8018_other);
inline jule::Ptr<_1aa348886_TypeEnumItem> _1aa349a52_FindItem(_1aa348e5d_TypeEnum* _self_, jule::Str _8924_ident);
inline jule::Str _1aa34c505_Str(_1aa34c14d_comptimeRange* _self_);
inline jule::Bool _1aa34c846_Equal(jule::Ptr<_1aa34c14d_comptimeRange> _self_, jule::Ptr<_1a601a64a_TypeKind> _3618_other);
inline jule::Str _1aa34d01c_Str(_1aa34cb21_comptimeStructField* _self_);
inline jule::Bool _1aa34d35d_Equal(jule::Ptr<_1aa34cb21_comptimeStructField> _self_, jule::Ptr<_1a601a64a_TypeKind> _4618_other);
inline jule::Ptr<_1aa44cc98_Data> _1aa34d8e1__Decl(jule::Ptr<_1aa34cb21_comptimeStructField> _self_, jule::Ptr<_1aa44e9c0_eval>* _5027_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _5042_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa34dcdc__Type(jule::Ptr<_1aa34cb21_comptimeStructField> _self_, jule::Ptr<_1aa44e9c0_eval>* _6227_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _6242_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa34e0ea_subIdent(jule::Ptr<_1aa34cb21_comptimeStructField> _self_, jule::Str* _7026_ident);
inline jule::Str _1aa34e77c_Str(_1aa34e3c5_comptimeStructFields* _self_);
inline jule::Bool _1aa34eabd_Equal(jule::Ptr<_1aa34e3c5_comptimeStructFields> _self_, jule::Ptr<_1a601a64a_TypeKind> _9918_other);
inline void _1aa350041_ready(_1aa34e3c5_comptimeStructFields* _self_, jule::Ptr<_1aa3e4d3e_Var>* _10326_keyA, jule::Ptr<_1aa3e4d3e_Var>* _10343_keyB);
inline void _1aa35045e_step(_1aa34e3c5_comptimeStructFields* _self_, jule::I32 _12420_i, jule::Ptr<_1aa3e4d3e_Var>* _12433_keyA, jule::Ptr<_1aa3e4d3e_Var>* _12450_keyB);
inline jule::I32 _1aa3506e5_len(_1aa34e3c5_comptimeStructFields* _self_);
inline jule::Str _1aa350d77_Str(_1aa3509c0_comptimeStatic* _self_);
inline jule::Bool _1aa3511b8_Equal(jule::Ptr<_1aa3509c0_comptimeStatic> _self_, jule::Ptr<_1a601a64a_TypeKind> _14818_other);
inline jule::Ptr<_1aa44cc98_Data> _1aa3517d4__Decl(jule::Ptr<_1aa3509c0_comptimeStatic> _self_, jule::Ptr<_1aa44e9c0_eval>* _15227_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _15242_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa351bd0__Type(jule::Ptr<_1aa3509c0_comptimeStatic> _self_, jule::Ptr<_1aa44e9c0_eval>* _16427_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _16442_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa352021_subIdent(jule::Ptr<_1aa3509c0_comptimeStatic> _self_, jule::Str* _17226_ident);
inline jule::Str _1aa35262b_Str(_1aa352274_comptimeStatics* _self_);
inline jule::Bool _1aa35296c_Equal(jule::Ptr<_1aa352274_comptimeStatics> _self_, jule::Ptr<_1a601a64a_TypeKind> _20118_other);
inline void _1aa352de0_ready(_1aa352274_comptimeStatics* _self_, jule::Ptr<_1aa3e4d3e_Var>* _20526_keyA, jule::Ptr<_1aa3e4d3e_Var>* _20543_keyB);
inline void _1aa35330d_step(_1aa352274_comptimeStatics* _self_, jule::I32 _22620_i, jule::Ptr<_1aa3e4d3e_Var>* _22633_keyA, jule::Ptr<_1aa3e4d3e_Var>* _22650_keyB);
inline jule::I32 _1aa353594_len(_1aa352274_comptimeStatics* _self_);
inline jule::Str _1aa353d36_Str(_1aa35386e_comptimeEnumField* _self_);
inline jule::Bool _1aa354177_Equal(jule::Ptr<_1aa35386e_comptimeEnumField> _self_, jule::Ptr<_1a601a64a_TypeKind> _25018_other);
inline jule::Ptr<_1aa44cc98_Data> _1aa3545ea__Decl(jule::Ptr<_1aa35386e_comptimeEnumField> _self_, jule::Ptr<_1aa44e9c0_eval>* _25427_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _25442_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa35493b_subIdent(jule::Ptr<_1aa35386e_comptimeEnumField> _self_, jule::Str* _26626_ident);
inline jule::Str _1aa3550bd_Str(_1aa354c16_comptimeEnumFields* _self_);
inline jule::Bool _1aa35540e_Equal(jule::Ptr<_1aa354c16_comptimeEnumFields> _self_, jule::Ptr<_1a601a64a_TypeKind> _28818_other);
inline void _1aa355882_ready(_1aa354c16_comptimeEnumFields* _self_, jule::Ptr<_1aa3e4d3e_Var>* _29226_keyA, jule::Ptr<_1aa3e4d3e_Var>* _29243_keyB);
inline void _1aa355ca0_step(_1aa354c16_comptimeEnumFields* _self_, jule::I32 _31320_i, jule::Ptr<_1aa3e4d3e_Var>* _31333_keyA, jule::Ptr<_1aa3e4d3e_Var>* _31350_keyB);
inline jule::I32 _1aa356036_len(_1aa354c16_comptimeEnumFields* _self_);
inline jule::Str _1aa3566b8_Str(_1aa356311_comptimeParam* _self_);
inline jule::Bool _1aa356a09_Equal(jule::Ptr<_1aa356311_comptimeParam> _self_, jule::Ptr<_1a601a64a_TypeKind> _33718_other);
inline jule::Ptr<_1aa44cc98_Data> _1aa357257__Decl(jule::Ptr<_1aa356311_comptimeParam> _self_, jule::Ptr<_1aa44e9c0_eval>* _34127_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _34142_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa357653__Type(jule::Ptr<_1aa356311_comptimeParam> _self_, jule::Ptr<_1aa44e9c0_eval>* _35327_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _35342_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa357a4e__Recv(jule::Ptr<_1aa356311_comptimeParam> _self_, jule::Ptr<_1aa44e9c0_eval>* _36127_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _36142_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa357d90_subIdent(jule::Ptr<_1aa356311_comptimeParam> _self_, jule::Str* _37426_ident);
inline jule::Str _1aa358412_Str(_1aa35808d_comptimeParams* _self_);
inline jule::Bool _1aa358753_Equal(jule::Ptr<_1aa35808d_comptimeParams> _self_, jule::Ptr<_1a601a64a_TypeKind> _41018_other);
inline void _1aa358bc6_ready(_1aa35808d_comptimeParams* _self_, jule::Ptr<_1aa3e4d3e_Var>* _41426_keyA, jule::Ptr<_1aa3e4d3e_Var>* _41443_keyB);
inline void _1aa3590e4_step(_1aa35808d_comptimeParams* _self_, jule::I32 _43520_i, jule::Ptr<_1aa3e4d3e_Var>* _43533_keyA, jule::Ptr<_1aa3e4d3e_Var>* _43550_keyB);
inline jule::I32 _1aa35937a_len(_1aa35808d_comptimeParams* _self_);
inline jule::Str _1aa359a0c_Str(_1aa359655_comptimeTypeInfos* _self_);
inline jule::Bool _1aa359d4d_Equal(jule::Ptr<_1aa359655_comptimeTypeInfos> _self_, jule::Ptr<_1a601a64a_TypeKind> _45918_other);
inline void _1aa35a2c1_ready(_1aa359655_comptimeTypeInfos* _self_, jule::Ptr<_1aa3e4d3e_Var>* _46326_keyA, jule::Ptr<_1aa3e4d3e_Var>* _46343_keyB);
inline void _1aa35a6de_step(_1aa359655_comptimeTypeInfos* _self_, jule::I32 _48420_i, jule::Ptr<_1aa3e4d3e_Var>* _48433_keyA, jule::Ptr<_1aa3e4d3e_Var>* _48450_keyB);
inline jule::I32 _1aa35a975_len(_1aa359655_comptimeTypeInfos* _self_);
inline jule::Str _1aa35b107_Str(_1aa35ac50_comptimeTypeInfo* _self_);
inline jule::Bool _1aa35b448_Equal(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1a601a64a_TypeKind> _50818_other);
inline jule::Ptr<_1aa44cc98_Data> _1aa35ba86__Decl(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1aa44e9c0_eval>* _51227_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _51242_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa35be82__Str(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1aa44e9c0_eval>* _54822_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _54837_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa35c37d__Kind(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1aa44e9c0_eval>* _56127_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _56142_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa35c779__Bits(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1aa44e9c0_eval>* _63927_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _63942_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa35cb75__Elem(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1aa44e9c0_eval>* _66327_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _66342_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa35d071__Size(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1aa44e9c0_eval>* _69627_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _69642_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa35d46c__Key(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1aa44e9c0_eval>* _71526_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _71541_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa35d868__Value(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1aa44e9c0_eval>* _72828_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _72843_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa35dc64__Fields(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1aa44e9c0_eval>* _74129_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _74144_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa35e160__Statics(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1aa44e9c0_eval>* _77030_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _77045_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa35e55b__Binded(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1aa44e9c0_eval>* _78929_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _78944_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa35e957__Ordered(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1aa44e9c0_eval>* _80226_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _80241_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa35ed53__Comparable(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1aa44e9c0_eval>* _81529_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _81544_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa36024e__Mutable(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1aa44e9c0_eval>* _82826_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _82841_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa36064a__Types(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1aa44e9c0_eval>* _84128_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _84143_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa360a46__CanNil(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1aa44e9c0_eval>* _86429_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _86444_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa360e42__GC(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1aa44e9c0_eval>* _87725_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _87740_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa36133d__Result(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1aa44e9c0_eval>* _89029_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _89044_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa361739__Params(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1aa44e9c0_eval>* _90629_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _90644_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa361a7a_subIdent(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Str* _92326_ident);
inline jule::Str _1aa36220c_Str(_1aa361d55_comptimeValue* _self_);
inline jule::Bool _1aa36254d_Equal(jule::Ptr<_1aa361d55_comptimeValue> _self_, jule::Ptr<_1a601a64a_TypeKind> _107118_other);
inline jule::Ptr<_1aa44cc98_Data> _1aa362a9d__Unwrap(jule::Ptr<_1aa361d55_comptimeValue> _self_, jule::Ptr<_1aa44e9c0_eval>* _107529_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _107544_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa362e99__Type(jule::Ptr<_1aa361d55_comptimeValue> _self_, jule::Ptr<_1aa44e9c0_eval>* _108327_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _108342_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa363395__Lvalue(jule::Ptr<_1aa361d55_comptimeValue> _self_, jule::Ptr<_1aa44e9c0_eval>* _109129_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _109144_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa363791__Mutable(jule::Ptr<_1aa361d55_comptimeValue> _self_, jule::Ptr<_1aa44e9c0_eval>* _110430_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _110445_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa363b8c__Const(jule::Ptr<_1aa361d55_comptimeValue> _self_, jule::Ptr<_1aa44e9c0_eval>* _111728_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _111743_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa364088__Field(jule::Ptr<_1aa361d55_comptimeValue> _self_, jule::Ptr<_1aa44e9c0_eval>* _113028_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _113043_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa3643c9_subIdent(jule::Ptr<_1aa361d55_comptimeValue> _self_, jule::Str* _116526_ident);
inline jule::Str _1aa364a5b_Str(_1aa3646a4_comptimeFiles* _self_);
inline jule::Bool _1aa364d9c_Equal(jule::Ptr<_1aa3646a4_comptimeFiles> _self_, jule::Ptr<_1a601a64a_TypeKind> _122218_other);
inline void _1aa365320_ready(_1aa3646a4_comptimeFiles* _self_, jule::Ptr<_1aa3e4d3e_Var>* _122626_keyA, jule::Ptr<_1aa3e4d3e_Var>* _122643_keyB);
inline void _1aa36573d_step(_1aa3646a4_comptimeFiles* _self_, jule::I32 _124720_i, jule::Ptr<_1aa3e4d3e_Var>* _124733_keyA, jule::Ptr<_1aa3e4d3e_Var>* _124750_keyB);
inline jule::I32 _1aa3659c4_len(_1aa3646a4_comptimeFiles* _self_);
inline jule::Str _1aa366387_Str(_1aa365c9e_comptimeFile* _self_);
inline jule::Bool _1aa3666c8_Equal(jule::Ptr<_1aa365c9e_comptimeFile> _self_, jule::Ptr<_1a601a64a_TypeKind> _127118_other);
inline jule::Ptr<_1aa44cc98_Data> _1aa366ad5__Path(jule::Ptr<_1aa365c9e_comptimeFile> _self_, jule::Ptr<_1aa44e9c0_eval>* _127527_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _127542_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa366ed1__Name(jule::Ptr<_1aa365c9e_comptimeFile> _self_, jule::Ptr<_1aa44e9c0_eval>* _128827_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _128842_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa3673cc__Dir(jule::Ptr<_1aa365c9e_comptimeFile> _self_, jule::Ptr<_1aa44e9c0_eval>* _130126_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _130141_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa36771d_subIdent(jule::Ptr<_1aa365c9e_comptimeFile> _self_, jule::Str* _131426_ident);
inline jule::Str _1aa367da0_Str(_1aa3679e8_comptimeDecls* _self_);
inline jule::Bool _1aa3681e1_Equal(jule::Ptr<_1aa3679e8_comptimeDecls> _self_, jule::Ptr<_1a601a64a_TypeKind> _135018_other);
inline void _1aa368664_ready(_1aa3679e8_comptimeDecls* _self_, jule::Ptr<_1aa3e4d3e_Var>* _135426_keyA, jule::Ptr<_1aa3e4d3e_Var>* _135443_keyB);
inline void _1aa368a82_step(_1aa3679e8_comptimeDecls* _self_, jule::I32 _137520_i, jule::Ptr<_1aa3e4d3e_Var>* _137533_keyA, jule::Ptr<_1aa3e4d3e_Var>* _137550_keyB);
inline jule::I32 _1aa368d18_len(_1aa3679e8_comptimeDecls* _self_);
inline jule::Str _1aa369be8_Str(_1aa369841_comptimeDecl* _self_);
inline jule::Bool _1aa36a039_Equal(jule::Ptr<_1aa369841_comptimeDecl> _self_, jule::Ptr<_1a601a64a_TypeKind> _141418_other);
inline jule::Str _1aa36a6cc_declAsStr(_1aa369841_comptimeDecl* _self_);
inline jule::Ptr<_1aa44cc98_Data> _1aa36aac8__Name(jule::Ptr<_1aa369841_comptimeDecl> _self_, jule::Ptr<_1aa44e9c0_eval>* _144527_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _144542_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa36aec4__Public(jule::Ptr<_1aa369841_comptimeDecl> _self_, jule::Ptr<_1aa44e9c0_eval>* _148329_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _148344_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa36b3c0__Binded(jule::Ptr<_1aa369841_comptimeDecl> _self_, jule::Ptr<_1aa44e9c0_eval>* _152129_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _152144_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa36b7bb__Exceptional(jule::Ptr<_1aa369841_comptimeDecl> _self_, jule::Ptr<_1aa44e9c0_eval>* _155534_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _155549_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa36bbb7__Mutable(jule::Ptr<_1aa369841_comptimeDecl> _self_, jule::Ptr<_1aa44e9c0_eval>* _157630_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _157645_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa36c0b3__Variadic(jule::Ptr<_1aa369841_comptimeDecl> _self_, jule::Ptr<_1aa44e9c0_eval>* _160931_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _160946_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa36c4ae__Reference(jule::Ptr<_1aa369841_comptimeDecl> _self_, jule::Ptr<_1aa44e9c0_eval>* _164032_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _164047_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa36c8aa__Params(jule::Ptr<_1aa369841_comptimeDecl> _self_, jule::Ptr<_1aa44e9c0_eval>* _167229_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _167244_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa36cca6__Fields(jule::Ptr<_1aa369841_comptimeDecl> _self_, jule::Ptr<_1aa44e9c0_eval>* _170729_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _170744_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa36d1a2__Statics(jule::Ptr<_1aa369841_comptimeDecl> _self_, jule::Ptr<_1aa44e9c0_eval>* _174830_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _174845_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa36d8de_subIdent(jule::Ptr<_1aa369841_comptimeDecl> _self_, jule::Str* _182526_ident);
inline jule::Fn<jule::Bool,jule::Ptr<_1aa3bb530_sema>*,jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>*> _1aa371826_readyFn(jule::Ptr<_1aa3713e7_constraintChecker> _self_);
inline jule::Bool _1aa371aac_readyFi(jule::Ptr<_1aa3713e7_constraintChecker> _self_);
inline jule::Bool _1aa371d43_readySi(jule::Ptr<_1aa3713e7_constraintChecker> _self_);
inline jule::Bool _1aa3720c9_ready(jule::Ptr<_1aa3713e7_constraintChecker> _self_);
inline jule::Bool _1aa372360_check(jule::Ptr<_1aa3713e7_constraintChecker> _self_);
inline jule::Bool _1aa373b47_IsTraitImpl(_1aa37374b_Impl* _self_);
inline jule::Bool _1aa373dcd_IsStructImpl(_1aa37374b_Impl* _self_);
inline jule::Bool _1aa37a434_IsWhileNext(_1aa37a08d_WhileIter* _self_);
inline jule::Ptr<_1aa39b0ae_ImportInfo> _1aa381638_SelectPackage(_1aa381160_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1aa39b0ae_ImportInfo>> _46029_selector);
inline jule::Ptr<_1aa3e4d3e_Var> _1aa381a34_FindVar(_1aa381160_scopeChecker* _self_, jule::Str _47123_ident, jule::Bool _47135_binded);
inline jule::Ptr<_1a6019858_TypeAlias> _1aa381e30_FindTypeAlias(_1aa381160_scopeChecker* _self_, jule::Str _48829_ident, jule::Bool _48841_binded);
inline jule::Ptr<_1aa31b518_Struct> _1aa38232b_FindStruct(_1aa381160_scopeChecker* _self_, jule::Str _51326_ident, jule::Bool _51338_binded);
inline jule::Ptr<_1aa3315b6_Fn> _1aa382727_FindFn(_1aa381160_scopeChecker* _self_, jule::Str _52222_ident, jule::Bool _52234_binded);
inline jule::Ptr<_1aa345047_Trait> _1aa382a68_FindTrait(_1aa381160_scopeChecker* _self_, jule::Str _53125_ident);
inline jule::Ptr<_1aa347753_Enum> _1aa382da9_FindEnum(_1aa381160_scopeChecker* _self_, jule::Str _54024_ident);
inline jule::Ptr<_1aa348e5d_TypeEnum> _1aa3831ea_FindTypeEnum(_1aa381160_scopeChecker* _self_, jule::Str _54928_ident);
inline jule::Bool _1aa38354c_isUnsafe(jule::Ptr<_1aa381160_scopeChecker> _self_);
inline jule::Bool _1aa3837d3_isRoot(_1aa381160_scopeChecker* _self_);
inline void _1aa3839d1_stop(_1aa381160_scopeChecker* _self_);
inline jule::Bool _1aa383c67_stopped(_1aa381160_scopeChecker* _self_);
inline jule::Bool _1aa383eed_isDeferred(jule::Ptr<_1aa381160_scopeChecker> _self_);
inline void _1aa3842a6_pushCaptured(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa3e4d3e_Var>* _61134_v);
inline jule::Ptr<_1aa381160_scopeChecker> _1aa38453c_getRoot(jule::Ptr<_1aa381160_scopeChecker> _self_);
inline jule::Ptr<_1aa381160_scopeChecker> _1aa3847c3_getHardRoot(jule::Ptr<_1aa381160_scopeChecker> _self_);
inline jule::Ptr<_1aa3e4d3e_Var> _1aa384b14_findVar(_1aa381160_scopeChecker* _self_, jule::Str _65423_ident);
inline jule::Ptr<_1aa37b545_Label> _1aa384e55_findLabel(_1aa381160_scopeChecker* _self_, jule::Str* _67526_ident);
inline jule::Ptr<_1aa37eadc_scopeLabel> _1aa385296_findLabelScope(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Str* _69132_ident);
inline jule::Ptr<_1aa37eadc_scopeLabel> _1aa3855d7_findLabelAll(_1aa381160_scopeChecker* _self_, jule::Str* _70329_ident);
inline jule::Bool _1aa3859d3_isDuplicatedIdent(_1aa381160_scopeChecker* _self_, jule::Uintptr _71533_itself, jule::Str* _71551_ident);
inline void _1aa385c8b_checkVarDecl(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa30d4e9_VarDecl> _73533_decl);
inline void _1aa386044_checkTypeAlias(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1a6019858_TypeAlias>* _76636_ta);
inline void _1aa3862ec_checkTypeAliasDecl(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa31219b_TypeAliasDecl> _78239_decl);
inline jule::Ptr<_1aa378ba2_Scope> _1aa386583_getChild(_1aa381160_scopeChecker* _self_);
inline void _1aa3869a1_checkChildSsc(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa30a6a0_ScopeTree>* _79335_tree, jule::Ptr<_1aa378ba2_Scope>* _79358_s, jule::Ptr<_1aa381160_scopeChecker>* _79374_ssc);
inline jule::Ptr<_1aa378ba2_Scope> _1aa386d9c_checkChildSc(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa30a6a0_ScopeTree>* _79834_tree, jule::Ptr<_1aa381160_scopeChecker>* _79857_ssc);
inline jule::Ptr<_1aa378ba2_Scope> _1aa3871dd_checkChild(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa30a6a0_ScopeTree>* _80432_tree);
inline void _1aa387496_checkAnonScope(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa30a6a0_ScopeTree> _80935_tree);
inline void _1aa387809_processErrorCall(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa32c00c_BuiltinErrorCallExprModel>* _81438_m, jule::Ptr<_1aa2d51c4_Token> _81469_err);
inline void _1aa387ab2_checkExpr(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa2ee9b3_Expr> _82730_expr);
inline jule::Ptr<_1aa3790c0_If> _1aa387e03_checkIf(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa3110ce_If> _85828_i);
inline jule::Ptr<_1aa3793bc_Else> _1aa388244_checkElse(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa3114a8_Else> _87830_e);
inline void _1aa3884ec_checkConditional(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa31195e_Conditional> _88437_conditional);
inline void _1aa3889c5_checkIterScopeSsc(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Uintptr _90034_it, jule::Ptr<_1aa30a6a0_ScopeTree> _90051_tree, jule::Ptr<_1aa378ba2_Scope>* _90074_s, jule::Ptr<_1aa381160_scopeChecker> _90089_ssc);
inline jule::Ptr<_1aa378ba2_Scope> _1aa388e7b_checkIterScopeSc(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Uintptr _90533_it, jule::Ptr<_1aa30a6a0_ScopeTree> _90550_tree, jule::Ptr<_1aa381160_scopeChecker> _90572_ssc);
inline jule::Ptr<_1aa378ba2_Scope> _1aa389377_checkIterScope(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Uintptr _91131_it, jule::Ptr<_1aa30a6a0_ScopeTree>* _91149_tree);
inline void _1aa389630_checkInfIter(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa30e143_Iter>* _91634_it);
inline void _1aa3898d8_checkWhileIter(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa30e143_Iter>* _92236_it);
inline void _1aa389d06_checkComptimeRangeIter(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa30e143_Iter>* _97244_it, jule::Ptr<_1aa37a9d9_RangeIter>* _97260_kind, jule::Ptr<_1aa44cc98_Data>* _97283_d);
inline void _1aa38a0ae_checkRangeIter(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa30e143_Iter>* _102936_it);
inline void _1aa38a367_checkIter(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa30e143_Iter> _108930_it);
inline jule::Bool _1aa38a6a8_checkValidContLabel(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Uintptr _111336_it);
inline jule::Bool _1aa38a9e9_checkValidBreakLabel(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Uintptr _112937_ptr);
inline jule::Ptr<_1aa37ad6e_ContSt> _1aa38ad3a_checkContValidScope(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa310b28_ContSt> _115236_c);
inline void _1aa38b0e3_checkCont(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa310b28_ContSt> _117626_c);
inline void _1aa38b39b_checkLabel(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa307c63_LabelSt> _122331_l);
inline void _1aa38b654_pushGoto(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa30813c_GotoSt> _124229_gt);
inline void _1aa38b90c_checkPostfix(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa30912c_AssignSt> _125633_a);
inline jule::Bool _1aa38bc4d_isNewAssignIdent(_1aa381160_scopeChecker* _self_, jule::Str _128932_ident);
inline void _1aa38c006_removeInteriorMutRisk(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa44cc98_Data>* _130243_d);
inline jule::Bool _1aa38c4ac_checkStructureAssignOp(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa31e373_StructIns>* _131644_s, jule::Ptr<_1aa30912c_AssignSt>* _131664_a, jule::Ptr<_1aa44cc98_Data>* _131683_r);
inline void _1aa38c765_checkSingleAssign(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa30912c_AssignSt>* _135539_a);
inline void _1aa38cce8_processEndPartOfMultiAssign(_1aa381160_scopeChecker* _self_, jule::Ptr<_1aa37c755_MultiAssign>* _143348_st, jule::Ptr<_1aa30912c_AssignSt>* _14348_a, jule::Ptr<_1aa308a99_AssignLeft>* _143427_lexpr, jule::Ptr<_1aa44cc98_Data>* _143452_l, jule::Ptr<_1aa44cc98_Data>* _143467_r);
inline void _1aa38d0a1_checkMultiAssign(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa30912c_AssignSt>* _151438_a);
inline void _1aa38d359_checkAssignSt(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa30912c_AssignSt> _157534_a);
inline jule::Ptr<_1aa378ba2_Scope> _1aa38d755_checkCaseScope(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa37d8dd_Case>* _158632_c, jule::Ptr<_1aa30a6a0_ScopeTree>* _158647_tree);
inline jule::Ptr<_1aa37d8dd_Case> _1aa38dcb6_checkCase(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa37cdb5_Match> _159230_m, jule::I32 _159241_i, jule::Ptr<_1aa312652_Case> _159253_c, jule::Ptr<_1aa44cc98_Data> _159272_expr);
inline void _1aa38e1d4_checkCases(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa312e6b_MatchCase>* _166732_m, jule::Ptr<_1aa37cdb5_Match> _166751_rm, jule::Ptr<_1aa44cc98_Data> _166767_expr);
inline jule::Ptr<_1aa37d8dd_Case> _1aa38e5d0_checkDefault(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa37cdb5_Match> _168833_m, jule::Ptr<_1aa3114a8_Else> _168848_d);
inline void _1aa38e943_checkComptimePanic(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa2d51c4_Token> _169639_callToken, jule::Ptr<_1aa378ba2_Scope>* _169659_s);
inline void _1aa38eca6_processConstMatch(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa37cdb5_Match>* _172839_tm, jule::Ptr<_1aa312e6b_MatchCase>* _172856_m);
inline void _1aa39005e_checkTypeMatch(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa312e6b_MatchCase>* _175736_m);
inline void _1aa390317_checkCommonMatch(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa312e6b_MatchCase>* _179938_m);
inline void _1aa3905c0_checkMatch(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa312e6b_MatchCase> _184931_m);
inline void _1aa390878_checkFall(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa308439_FallSt> _185726_f);
inline jule::Ptr<_1aa37b248_BreakSt> _1aa390bb9_checkBreakWithLabel(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa31074e_BreakSt> _188036_b);
inline jule::Ptr<_1aa37b248_BreakSt> _1aa39100a_checkPlainBreak(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa31074e_BreakSt> _193832_b);
inline void _1aa3912b3_checkBreak(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa31074e_BreakSt> _196027_b);
inline void _1aa39156b_checkRet(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa30d8c3_RetSt> _197129_r);
inline void _1aa391824_checkUseExpr(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa300387_UseExpr> _199629_ue);
inline void _1aa391acc_checkNode(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Any* _201231_node);
inline void _1aa391cca_checkResult(jule::Ptr<_1aa381160_scopeChecker> _self_);
inline void _1aa391ec8_checkTree(jule::Ptr<_1aa381160_scopeChecker> _self_);
inline void _1aa39233b_checkGoto(_1aa381160_scopeChecker* _self_, jule::Ptr<_1aa380170_scopeGoto>* _211430_gt, jule::Ptr<_1aa37eadc_scopeLabel>* _211451_label);
inline void _1aa392539_checkGotos(_1aa381160_scopeChecker* _self_);
inline void _1aa392737_checkLabels(_1aa381160_scopeChecker* _self_);
inline void _1aa392935_checkVars(_1aa381160_scopeChecker* _self_);
inline void _1aa392b33_checkAliases(_1aa381160_scopeChecker* _self_);
inline void _1aa392e96_check(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa30a6a0_ScopeTree>* _219227_tree, jule::Ptr<_1aa378ba2_Scope>* _219250_s);
inline jule::Ptr<_1aa381160_scopeChecker> _1aa39322c_newChildChecker(jule::Ptr<_1aa381160_scopeChecker> _self_);
inline void _1aa394bce_checkCdef(_1aa39478e_directiveChecker* _self_, jule::Ptr<_1aa2e9a9b_Directive>* _1626_d);
inline void _1aa394e87_checkTypedef(_1aa39478e_directiveChecker* _self_, jule::Ptr<_1aa2e9a9b_Directive>* _3229_d);
inline void _1aa395240_checkNamespace(_1aa39478e_directiveChecker* _self_, jule::Ptr<_1aa2e9a9b_Directive>* _4835_d);
inline void _1aa3954e8_checkDeprecated(_1aa39478e_directiveChecker* _self_, jule::Ptr<_1aa2e9a9b_Directive>* _9936_d);
inline void _1aa3957a1_checkTest(_1aa39478e_directiveChecker* _self_, jule::Ptr<_1aa2e9a9b_Directive>* _13926_d);
inline void _1aa395a59_checkDirective(_1aa39478e_directiveChecker* _self_, jule::Ptr<_1aa2e9a9b_Directive>* _16035_d);
inline void _1aa395c57_check(_1aa39478e_directiveChecker* _self_);
inline jule::Ptr<_1aa39b0ae_ImportInfo> _1aa39b5cb_SelectPackage(_1aa39b0ae_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1aa39b0ae_ImportInfo>> );
inline jule::Ptr<_1aa3e4d3e_Var> _1aa39b9c7_FindVar(_1aa39b0ae_ImportInfo* _self_, jule::Str _19823_ident, jule::Bool );
inline jule::Ptr<_1a6019858_TypeAlias> _1aa39bdc3_FindTypeAlias(_1aa39b0ae_ImportInfo* _self_, jule::Str _21029_ident, jule::Bool );
inline jule::Ptr<_1aa31b518_Struct> _1aa39c2be_FindStruct(_1aa39b0ae_ImportInfo* _self_, jule::Str _22226_ident, jule::Bool );
inline jule::Ptr<_1aa3315b6_Fn> _1aa39c6ba_FindFn(_1aa39b0ae_ImportInfo* _self_, jule::Str _23422_ident, jule::Bool );
inline jule::Ptr<_1aa345047_Trait> _1aa39ca0b_FindTrait(_1aa39b0ae_ImportInfo* _self_, jule::Str _24525_ident);
inline jule::Ptr<_1aa347753_Enum> _1aa39cd4c_FindEnum(_1aa39b0ae_ImportInfo* _self_, jule::Str _25624_ident);
inline jule::Ptr<_1aa348e5d_TypeEnum> _1aa39d18d_FindTypeEnum(_1aa39b0ae_ImportInfo* _self_, jule::Str _26728_ident);
inline jule::Bool _1aa39d633_isLookupable(_1aa39b0ae_ImportInfo* _self_, jule::Str* _27625_ident);
inline jule::Bool _1aa39d974_existIdent(_1aa39b0ae_ImportInfo* _self_, jule::Str _29622_ident);
inline jule::Bool _1aa39dc0a_isAccessibleViaSelection(_1aa39b0ae_ImportInfo* _self_);
inline jule::Ptr<_1aa39b0ae_ImportInfo> _1aa39e4ad_SelectPackage(_1aa39ded5_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1aa39b0ae_ImportInfo>> );
inline jule::Ptr<_1aa3e4d3e_Var> _1aa39e8a9_FindVar(_1aa39ded5_Package* _self_, jule::Str _32323_ident, jule::Bool _32335_binded);
inline jule::Ptr<_1a6019858_TypeAlias> _1aa39eca5_FindTypeAlias(_1aa39ded5_Package* _self_, jule::Str _32929_ident, jule::Bool _32941_binded);
inline jule::Ptr<_1aa31b518_Struct> _1aa3a01a1_FindStruct(_1aa39ded5_Package* _self_, jule::Str _33526_ident, jule::Bool _33538_binded);
inline jule::Ptr<_1aa3315b6_Fn> _1aa3a059c_FindFn(_1aa39ded5_Package* _self_, jule::Str _34122_ident, jule::Bool _34134_binded);
inline jule::Ptr<_1aa345047_Trait> _1aa3a08dd_FindTrait(_1aa39ded5_Package* _self_, jule::Str _34725_ident);
inline jule::Ptr<_1aa347753_Enum> _1aa3a0c2e_FindEnum(_1aa39ded5_Package* _self_, jule::Str _35324_ident);
inline jule::Ptr<_1aa348e5d_TypeEnum> _1aa3a1070_FindTypeEnum(_1aa39ded5_Package* _self_, jule::Str _35928_ident);
inline jule::Ptr<_1aa35ac50_comptimeTypeInfo> _1aa3bad9d_pushComptimeTypeInfo(_1aa3ba908_commonSemaMeta* _self_, jule::Ptr<_1a601a64a_TypeKind>* _22341_t);
inline jule::Ptr<_1aa39b0ae_ImportInfo> _1aa3bba08_SelectPackage(_1aa3bb530_sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1aa39b0ae_ImportInfo>> _25229_selector);
inline jule::Ptr<_1aa3e4d3e_Var> _1aa3bbe04_FindVar(_1aa3bb530_sema* _self_, jule::Str _26223_ident, jule::Bool _26235_binded);
inline jule::Ptr<_1a6019858_TypeAlias> _1aa3bc300_FindTypeAlias(_1aa3bb530_sema* _self_, jule::Str _29429_ident, jule::Bool _29441_binded);
inline jule::Ptr<_1aa31b518_Struct> _1aa3bc6eb_FindStruct(_1aa3bb530_sema* _self_, jule::Str _32626_ident, jule::Bool _32638_binded);
inline jule::Ptr<_1aa3315b6_Fn> _1aa3bcae7_FindFn(_1aa3bb530_sema* _self_, jule::Str _35722_ident, jule::Bool _35734_binded);
inline jule::Ptr<_1aa345047_Trait> _1aa3bce38_FindTrait(_1aa3bb530_sema* _self_, jule::Str _38925_ident);
inline jule::Ptr<_1aa347753_Enum> _1aa3bd279_FindEnum(_1aa3bb530_sema* _self_, jule::Str _42124_ident);
inline jule::Ptr<_1aa348e5d_TypeEnum> _1aa3bd5ba_FindTypeEnum(_1aa3bb530_sema* _self_, jule::Str _45328_ident);
inline jule::Bool _1aa3bd9c7_isFlag(_1aa3bb530_sema* _self_, jule::I32 _48218_flags);
inline jule::Ptr<_1aa4475cd_SymbolTable> _1aa3bdc5d_getCurrentFile(_1aa3bb530_sema* _self_);
inline void _1aa3be016_setCurrentFile(_1aa3bb530_sema* _self_, jule::Ptr<_1aa4475cd_SymbolTable> _48534_f);
inline void _1aa3be434_pushErr(_1aa3bb530_sema* _self_, jule::Ptr<_1aa2d51c4_Token> _48723_token, jule::Str _48738_fmt, jule::Slice<jule::Any> _48751_args);
inline void _1aa3be797_pushSuggestion(_1aa3bb530_sema* _self_, jule::Str _49230_fmt, jule::Slice<jule::Any> _49243_args);
inline jule::Bool _1aa3beb93_isAccessibleDefine(_1aa3bb530_sema* _self_, jule::Bool _49830_public, jule::Ptr<_1aa2d51c4_Token> _49844_token);
inline jule::Bool _1aa3c0149_isDuplicatedIdent(_1aa3bb530_sema* _self_, jule::Uintptr _52129_itself, jule::Str* _52147_ident, jule::Bool _52159_binded);
inline void _1aa3c04ac_checkDirectives(jule::Ptr<_1aa3bb530_sema> _self_, jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>>* _53837_d, jule::Any _53863_o);
inline jule::Bool _1aa3c0963_checkGenericQuantity(_1aa3bb530_sema* _self_, jule::I32 _54736_required, jule::I32 _54751_given, jule::Ptr<_1aa2d51c4_Token> _54763_token);
inline jule::Bool _1aa3c0d5e_isDuplicatedImportSelection(_1aa3bb530_sema* _self_, jule::Uintptr _56639_itself, jule::Str* _56657_ident);
inline jule::Any _1aa3c125a_getImportDef(_1aa3bb530_sema* _self_, jule::Str* _57925_ident, jule::Ptr<_1aa39b0ae_ImportInfo>* _57942_imp);
inline jule::Bool _1acd86a0e_checkImportSelection(_1aa3bb530_sema* _self_, jule::Ptr<_1aa2d51c4_Token>* _59440_ident, jule::Ptr<_1aa3e4d3e_Var>* _59456_s);
inline jule::Bool _1acd8acee_checkImportSelection(_1aa3bb530_sema* _self_, jule::Ptr<_1aa2d51c4_Token>* _59440_ident, jule::Ptr<_1a6019858_TypeAlias>* _59456_s);
inline jule::Bool _1acd90078_checkImportSelection(_1aa3bb530_sema* _self_, jule::Ptr<_1aa2d51c4_Token>* _59440_ident, jule::Ptr<_1aa31b518_Struct>* _59456_s);
inline jule::Bool _1acd945dd_checkImportSelection(_1aa3bb530_sema* _self_, jule::Ptr<_1aa2d51c4_Token>* _59440_ident, jule::Ptr<_1aa345047_Trait>* _59456_s);
inline jule::Bool _1acd98889_checkImportSelection(_1aa3bb530_sema* _self_, jule::Ptr<_1aa2d51c4_Token>* _59440_ident, jule::Ptr<_1aa347753_Enum>* _59456_s);
inline jule::Bool _1acd9cb35_checkImportSelection(_1aa3bb530_sema* _self_, jule::Ptr<_1aa2d51c4_Token>* _59440_ident, jule::Ptr<_1aa348e5d_TypeEnum>* _59456_s);
inline jule::Bool _1acda1dae_checkImportSelection(_1aa3bb530_sema* _self_, jule::Ptr<_1aa2d51c4_Token>* _59440_ident, jule::Ptr<_1aa3315b6_Fn>* _59456_s);
inline jule::Bool _1aa3c1997_checkImportSelectedSelections(_1aa3bb530_sema* _self_, jule::Ptr<_1aa39b0ae_ImportInfo>* _60850_imp);
inline jule::Bool _1acda6677_checkImportsAllSelectionsFromCollection(_1aa3bb530_sema* _self_, jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>* _65759_s, jule::Ptr<_1aa2d51c4_Token>* _65768_et);
inline jule::Bool _1acda7d0a_checkImportsAllSelectionsFromCollection(_1aa3bb530_sema* _self_, jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>* _65759_s, jule::Ptr<_1aa2d51c4_Token>* _65768_et);
inline jule::Bool _1acdabade_checkImportsAllSelectionsFromCollection(_1aa3bb530_sema* _self_, jule::Slice<jule::Ptr<_1aa31b518_Struct>>* _65759_s, jule::Ptr<_1aa2d51c4_Token>* _65768_et);
inline jule::Bool _1acdae2c8_checkImportsAllSelectionsFromCollection(_1aa3bb530_sema* _self_, jule::Slice<jule::Ptr<_1aa3315b6_Fn>>* _65759_s, jule::Ptr<_1aa2d51c4_Token>* _65768_et);
inline jule::Bool _1acdb03ea_checkImportsAllSelectionsFromCollection(_1aa3bb530_sema* _self_, jule::Slice<jule::Ptr<_1aa345047_Trait>>* _65759_s, jule::Ptr<_1aa2d51c4_Token>* _65768_et);
inline jule::Bool _1acdb4179_checkImportsAllSelectionsFromCollection(_1aa3bb530_sema* _self_, jule::Slice<jule::Ptr<_1aa347753_Enum>>* _65759_s, jule::Ptr<_1aa2d51c4_Token>* _65768_et);
inline jule::Bool _1acdb681e_checkImportsAllSelectionsFromCollection(_1aa3bb530_sema* _self_, jule::Slice<jule::Ptr<_1aa348e5d_TypeEnum>>* _65759_s, jule::Ptr<_1aa2d51c4_Token>* _65768_et);
inline jule::Bool _1aa3c21d4_checkImportAllSelections(_1aa3bb530_sema* _self_, jule::Ptr<_1aa39b0ae_ImportInfo>* _66741_imp);
inline jule::Bool _1aa3c2525_checkImportSelections(_1aa3bb530_sema* _self_, jule::Ptr<_1aa39b0ae_ImportInfo>* _68142_imp);
inline jule::Bool _1aa3c2866_isUseAliasDuplication(_1aa3bb530_sema* _self_, jule::Ptr<_1aa39b0ae_ImportInfo>* _69038_imp);
inline jule::Bool _1aa3c2ba7_checkImport(_1aa3bb530_sema* _self_, jule::Ptr<_1aa39b0ae_ImportInfo>* _70632_imp);
inline void _1aa3c2da5_checkImports(_1aa3bb530_sema* _self_);
inline void _1aa3c30a3_implFileImpls(jule::Ptr<_1aa3bb530_sema> _self_);
inline void _1aa3c32a1_implImpls(jule::Ptr<_1aa3bb530_sema> _self_);
inline void _1aa3c349e_checkEnums(jule::Ptr<_1aa3bb530_sema> _self_);
inline void _1aa3c369c_checkFileInherits(jule::Ptr<_1aa3bb530_sema> _self_);
inline void _1aa3c389a_checkInherits(jule::Ptr<_1aa3bb530_sema> _self_);
inline _1a602ca47_typeChecker _1aa3c3d51_typeChecker(jule::Ptr<_1aa3bb530_sema> _self_, jule::Trait _79532_l, jule::Slice<jule::Ptr<_1a6019858_TypeAlias>> _79547_generics, jule::Ptr<_1a602ba57_referencer> _7967_referencer);
inline jule::Ptr<_1a601a64a_TypeKind> _1aa3c9252_buildTypeWithRefers(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa2ea67e_TypeDecl>* _82241_t, jule::Trait _82264_l, jule::Slice<jule::Ptr<_1a6019858_TypeAlias>> _8237_generics, jule::Ptr<_1a602ba57_referencer> _82335_referencer);
inline jule::Bool _1aa3c9780_checkTypeWithRefers(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1a6022d5b_TypeSymbol>* _82941_t, jule::Trait _82961_l, jule::Slice<jule::Ptr<_1a6019858_TypeAlias>> _8307_generics, jule::Ptr<_1a602ba57_referencer> _83035_referencer);
inline jule::Ptr<_1aa3713e7_constraintChecker> _1aa3c9a16_constraintChecker(jule::Ptr<_1aa3bb530_sema> _self_);
inline jule::Bool _1aa3c9e12_checkType(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1a6022d5b_TypeSymbol>* _84431_t, jule::Trait _84451_l);
inline jule::Ptr<_1a601a64a_TypeKind> _1aa3ca3b8_buildTypeWithGenerics(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa2ea67e_TypeDecl>* _85043_t, jule::Slice<jule::Ptr<_1a6019858_TypeAlias>> _8517_generics, jule::Ptr<_1aa337732_ReferenceStack> _85135_refers);
inline jule::Ptr<_1a601a64a_TypeKind> _1aa3caa4a_selectType(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa2ea67e_TypeDecl>* _86832_t);
inline jule::Ptr<_1aa44e9c0_eval> _1aa3cb001_evalpd(jule::Ptr<_1aa3bb530_sema> _self_, jule::Trait _88027_l, jule::Ptr<_1a601a64a_TypeKind> _88042_p, jule::Ptr<_1aa3e4d3e_Var> _88060_owner);
inline jule::Ptr<_1aa44e9c0_eval> _1aa3cb3ec_evalp(jule::Ptr<_1aa3bb530_sema> _self_, jule::Trait _89526_l, jule::Ptr<_1a601a64a_TypeKind> _89541_p);
inline jule::Ptr<_1aa44e9c0_eval> _1aa3cb73d_eval(jule::Ptr<_1aa3bb530_sema> _self_, jule::Trait _90025_l);
inline jule::Bool _1aa3cbc9e_checkAssignType(jule::Ptr<_1aa3bb530_sema> _self_, jule::Bool _90432_destIsRef, jule::Ptr<_1a601a64a_TypeKind>* _90454_dest, jule::Ptr<_1aa44cc98_Data>* _9058_d, jule::Ptr<_1aa2d51c4_Token> _90522_errorToken);
inline jule::Bool _1aa3cc255__checkTypeCompatibility(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1a601a64a_TypeKind>* _94645_dest, jule::Ptr<_1a601a64a_TypeKind>* _94667_src, jule::Ptr<_1aa2d51c4_Token> _9477_errorToken);
inline jule::Bool _1aa3cc70b_checkTypeCompatibility(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1a601a64a_TypeKind>* _96444_dest, jule::Ptr<_1a601a64a_TypeKind>* _9658_src, jule::Ptr<_1aa2d51c4_Token>* _96529_errorToken);
inline void _1aa3ccb29_pushCompatiblityError(_1aa3bb530_sema* _self_, jule::Ptr<_1a601a64a_TypeKind>* _97342_dest, jule::Ptr<_1aa44cc98_Data>* _97364_src, jule::Ptr<_1aa2d51c4_Token>* _9748_errorToken);
inline jule::Bool _1aa3cd0d0_checkTypeCompatibility1(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1a601a64a_TypeKind>* _99145_dest, jule::Ptr<_1aa44cc98_Data>* _99167_src, jule::Ptr<_1aa2d51c4_Token>* _9928_errorToken);
inline jule::Ptr<_1a601a64a_TypeKind> _1aa3cd586_buildNonGenericTypeKind(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa2ea67e_TypeDecl>* _100645_ast, jule::Slice<jule::Ptr<_1aa307889_GenericDecl>>* _10078_generics, jule::Slice<jule::Ptr<_1a601a64a_TypeKind>>* _100744_ignored);
inline jule::Bool _1aa3cd982_buildFnNonGenericTypeKinds(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa334597_FnIns> _101847_f, jule::Slice<jule::Ptr<_1a601a64a_TypeKind>>* _101863_ignored);
inline jule::Ptr<_1aa334597_FnIns> _1aa3cdcc3_getTraitCheckFnKind(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa3315b6_Fn>* _104141_f);
inline jule::Bool _1aa3ce279_checkConstraintsFn(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa334597_FnIns>* _107040_f, jule::Ptr<_1aa2d51c4_Token>* _107056_et, jule::Ptr<_1aa334597_FnIns> _107072_exist);
inline jule::Bool _1aa3ce730_checkConstraintsStruct(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa31e373_StructIns>* _108444_s, jule::Ptr<_1aa2d51c4_Token>* _108464_et, jule::Ptr<_1aa31e373_StructIns> _108480_exist);
inline jule::Bool _1aa3ceb2b_basicFnEnvironment(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa334597_FnIns>* _110140_f, jule::Fn<jule::Bool,jule::Ptr<_1aa3bb530_sema>*> _110151_algo);
inline jule::Bool _1aa3d0027_fnEnvironment(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa334597_FnIns>* _112135_f, jule::Fn<jule::Bool,jule::Ptr<_1aa3bb530_sema>*,jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>*> _112146_algo);
inline void _1aa3d02d0_checkFnParamKind(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa33351e_ParamIns>* _113338_p);
inline jule::Bool _1aa3d0621_reloadFnInsTypes(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa334597_FnIns> _114037_f);
inline jule::Bool _1aa3d0ac7_checkRefValidityForInitExpr(jule::Ptr<_1aa3bb530_sema> _self_, jule::Bool _117644_leftMut, jule::Ptr<_1aa44cc98_Data>* _117664_d, jule::Ptr<_1aa2d51c4_Token>* _117679_errorToken);
inline jule::Bool _1aa3d0e18_isMutRiskyStruct(_1aa3bb530_sema* _self_, jule::Ptr<_1aa31e373_StructIns>* _119329_s);
inline jule::Bool _1aa3d1534_checkValidityForInitExpr(jule::Ptr<_1aa3bb530_sema> _self_, jule::Bool _122041_leftMut, jule::Bool _122056_leftRef, jule::Ptr<_1a601a64a_TypeKind>* _12214_leftKind, jule::Ptr<_1aa44cc98_Data>* _122130_d, jule::Ptr<_1aa2d51c4_Token>* _122145_errorToken);
inline jule::Bool _1aa3d1930_checkTypeAliasDeclKind(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1a6019858_TypeAlias>* _124844_ta, jule::Trait _124864_l);
inline void _1aa3d1c93_checkTypeAliasDecl(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1a6019858_TypeAlias>* _127140_ta, jule::Trait _127160_l);
inline void _1aa3d204b_checkTypeAliasDeclDup(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1a6019858_TypeAlias>* _127943_ta);
inline jule::Bool _1aa3d22d2_checkTypeAliasDecls(jule::Ptr<_1aa3bb530_sema> _self_);
inline void _1bb9d60cd_checkEnumItemsDup(_1aa3bb530_sema* _self_, jule::Slice<jule::Ptr<_1aa346bd6_EnumItem>> _130336_items);
inline void _1bb9e33d7_checkEnumItemsDup(_1aa3bb530_sema* _self_, jule::Slice<jule::Ptr<_1aa348886_TypeEnumItem>> _130336_items);
inline void _1aa3d2843_checkEnumItemsStr(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa347753_Enum>* _132339_e);
inline void _1bb9b6a09_checkEnumItemInt(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa44e9c0_eval>* _134943_eval, jule::Ptr<_1aa347753_Enum>* _134961_e, jule::Ptr<_1a6023763_Prim>* _134972_prim, jule::Ptr<_1aa346bd6_EnumItem>* _134990_item, jule::U64* _1349112_n);
inline void _1bb9c6aa2_checkEnumItemInt(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa44e9c0_eval>* _134943_eval, jule::Ptr<_1aa347753_Enum>* _134961_e, jule::Ptr<_1a6023763_Prim>* _134972_prim, jule::Ptr<_1aa346bd6_EnumItem>* _134990_item, jule::I64* _1349112_n);
inline void _1bb9b2b7b_checkEnumItemsInt1(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1a6023763_Prim>* _138441_prim, jule::Ptr<_1aa347753_Enum>* _138459_e);
inline void _1bb9b2e67_checkEnumItemsInt1(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1a6023763_Prim>* _138441_prim, jule::Ptr<_1aa347753_Enum>* _138459_e);
inline void _1aa3d34e2_checkEnumItemsInt(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa347753_Enum>* _141939_e);
inline void _1aa3d379a_checkEnumDecl(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa347753_Enum>* _142935_e);
inline void _1aa3d3a53_checkTypeEnumDecl(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa348e5d_TypeEnum>* _147039_e);
inline jule::Bool _1aa3d3cd9_checkEnumDecls(jule::Ptr<_1aa3bb530_sema> _self_);
inline jule::Bool _1aa3d4070_checkTypeEnumDecls(jule::Ptr<_1aa3bb530_sema> _self_);
inline jule::Bool _1aa3d43b1_checkDeclGenerics(_1aa3bb530_sema* _self_, jule::Slice<jule::Ptr<_1aa307889_GenericDecl>>* _153334_generics);
inline jule::Bool _1aa3d4702_checkFnDeclParamsDup(_1aa3bb530_sema* _self_, jule::Ptr<_1aa3315b6_Fn>* _156037_f);
inline jule::Bool _1aa3d4a43_checkFnDeclResultDup(_1aa3bb530_sema* _self_, jule::Ptr<_1aa3315b6_Fn>* _159737_f);
inline jule::Bool _1aa3d4d84_checkFnVariadicParam(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa3315b6_Fn>* _164242_f);
inline void _1aa3d513c_checkFnDeclPrototype(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa3315b6_Fn>* _165542_f);
inline jule::Bool _1aa3d55e3_catchTraitInheritCycle(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa345047_Trait> _167739_t1, jule::Ptr<_1aa345047_Trait> _167755_t2, _1ed486d49_StrBuilder* _167772_message);
inline jule::Bool _1aa3d5934__checkTraitDeclInherits(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa345047_Trait>* _169645_t);
inline void _1aa3d5bdc_checkTraitDeclInherits(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa345047_Trait>* _173744_t);
inline void _1aa3d5e95_checkTraitDeclMethod(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa3315b6_Fn>* _176242_f);
inline void _1aa3d624d_checkTraitDeclMethods(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa345047_Trait>* _177643_t);
inline void _1aa3d6506_checkTraitDecl(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa345047_Trait>* _181236_t);
inline jule::Bool _1aa3d678c_checkTraitDecls(jule::Ptr<_1aa3bb530_sema> _self_);
inline jule::Bool _1aa3d6b88_checkTraitImplMethods(_1aa3bb530_sema* _self_, jule::Ptr<_1aa345047_Trait>* _183642_base, jule::Ptr<_1aa37374b_Impl>* _183657_ipl);
inline jule::Bool _1aa3d7084_implToStruct(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa31b518_Struct>* _184734_dest, jule::Ptr<_1aa37374b_Impl>* _184754_ipl);
inline void _1aa3d733c_implTrait(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa37374b_Impl>* _188931_decl);
inline void _1aa3d75e5_implStruct(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa37374b_Impl>* _193232_decl);
inline void _1aa3d789d_implImpl(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa37374b_Impl>* _195630_decl);
inline void _1aa3d7c11_checkVarDecl(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa3e4d3e_Var>* _196734_decl, jule::Trait _196750_l);
inline void _1aa3d7eb9_checkGlobalVarDecl(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa3e4d3e_Var>* _200440_decl);
inline jule::Bool _1aa3d8250_checkGlobalDecls(jule::Ptr<_1aa3bb530_sema> _self_);
inline jule::Bool _1aa3d864b_checkStructTraitImpl(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa31b518_Struct>* _203242_strct, jule::Ptr<_1aa345047_Trait>* _203263_trt);
inline jule::Bool _1aa3d898c_checkStructImpls(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa31b518_Struct>* _205838_s);
inline jule::Bool _1aa3d8ccd_checkStructFields(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa31b518_Struct>* _206639_st);
inline void _1aa3d9086_checkStructDecl(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa31b518_Struct>* _208337_s);
inline jule::Bool _1aa3d931c_checkStructDecls(jule::Ptr<_1aa3bb530_sema> _self_);
inline void _1aa3d95c5_checkAnonFuncDecl(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa3315b6_Fn>* _211339_f);
inline void _1aa3d987d_checkFuncDecl(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa3315b6_Fn>* _211835_f);
inline jule::Bool _1aa3d9bbe_checkFuncDeclsBy(jule::Ptr<_1aa3bb530_sema> _self_, jule::Slice<jule::Ptr<_1aa3315b6_Fn>>* _214038_funcs);
inline jule::Bool _1aa3d9e55_checkFuncDecls(jule::Ptr<_1aa3bb530_sema> _self_);
inline void _1aa3da373_pushCycleError(_1aa3bb530_sema* _self_, jule::Str* _215627_st1, jule::Str* _215638_st2, _1ed486d49_StrBuilder* _215653_message);
inline void _1aa3daa27_checkPackageDecls(jule::Ptr<_1aa3bb530_sema> _self_);
inline void _1aa3dad8a_checkDataForTypeInference(_1aa3bb530_sema* _self_, jule::Ptr<_1aa44cc98_Data>* _221642_d, jule::Ptr<_1aa2d51c4_Token>* _221653_err_token);
inline void _1aa3db143_checkVarValue(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa3e4d3e_Var>* _222835_v);
inline void _1aa3db4a6_evalVarValue(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa3e4d3e_Var>* _228134_decl, jule::Trait _228150_l);
inline void _1aa3db819_checkVar(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa3e4d3e_Var>* _229830_decl, jule::Trait _229846_l);
inline void _1aa3dba17_checkGlobals(jule::Ptr<_1aa3bb530_sema> _self_);
inline jule::Ptr<_1aa334597_FnIns> _1aa3dbe13_readyToCheckFn(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa31e373_StructIns>* _232236_s, jule::Ptr<_1aa3315b6_Fn>* _232256_f);
inline __jule_tuple_bool__jule_tuple_bool _1aa3dc30e_checkGenericFn(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa334597_FnIns>* _233836_f, jule::Ptr<_1aa2d51c4_Token>* _233852_et);
inline void _1aa3dc672_checkTypeMethod(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa31e373_StructIns>* _236137_s, jule::Ptr<_1aa3315b6_Fn>* _236157_f);
inline jule::Ptr<_1aa334597_FnIns> _1aa3dcb28_checkStructInsOp(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa31e373_StructIns>* _237438_s, jule::Ptr<_1aa3315b6_Fn>* _237458_f, jule::Fn<jule::Bool,jule::Ptr<_1aa3315b6_Fn>> _237466_p);
inline jule::Bool _1aa3dd024_checkStructEnv(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa31e373_StructIns>* _238436_s, jule::Ptr<_1aa2d51c4_Token> _238455_errorToken);
inline jule::Bool _1aa3dd420_precheckStructIns(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa31e373_StructIns>* _248139_s, jule::Ptr<_1aa2d51c4_Token> _248158_errorToken);
inline void _1aa3dd6c8_checkStructIns(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa31e373_StructIns>* _251736_s);
inline void _1aa3dd981_checkTypeStruct(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa31b518_Struct>* _252337_s);
inline void _1aa3ddb7e_checkStructTypes(jule::Ptr<_1aa3bb530_sema> _self_);
inline void _1aa3dde37_checkStructInsOperators(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa31e373_StructIns> _254744_s);
inline void _1aa3de1e0_precheckStructType(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa31b518_Struct>* _261140_s);
inline void _1aa3de3dd_precheckStructTypes(jule::Ptr<_1aa3bb530_sema> _self_);
inline void _1aa3de696_checkRets(_1aa3bb530_sema* _self_, jule::Ptr<_1aa334597_FnIns>* _263730_f);
inline void _1aa3dea09_checkFnInsSc(_1aa3bb530_sema* _self_, jule::Ptr<_1aa334597_FnIns>* _264833_f, jule::Ptr<_1aa381160_scopeChecker>* _264849_sc);
inline void _1aa3ded6c_checkFnInsCaller(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa334597_FnIns>* _266138_f, jule::Ptr<_1aa2d51c4_Token> _266153_caller);
inline void _1aa3e0125_checkFnIns(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa334597_FnIns>* _268332_f);
inline void _1aa3e03cd_checkFunc(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa3315b6_Fn>* _268731_f);
inline void _1aa3e0686_checkTestFn(_1aa3bb530_sema* _self_, jule::Ptr<_1aa334597_FnIns>* _270232_f);
inline void _1aa3e093e_precheckFunc(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa3315b6_Fn>* _273534_f);
inline void _1aa3e0b3c_precheckFuncs(jule::Ptr<_1aa3bb530_sema> _self_);
inline void _1aa3e0d3a_checkFuncs(jule::Ptr<_1aa3bb530_sema> _self_);
inline void _1aa3e1038_checkPackageTypes(jule::Ptr<_1aa3bb530_sema> _self_);
inline void _1aa3e1236_setFileSemaFields(jule::Ptr<_1aa3bb530_sema> _self_);
inline void _1aa3e1434_setSemaFields(jule::Ptr<_1aa3bb530_sema> _self_);
inline void _1aa3e16dc_check(jule::Ptr<_1aa3bb530_sema> _self_, jule::Slice<jule::Ptr<_1aa4475cd_SymbolTable>>* _281327_files);
inline _1aa3e1ad8_missingRetChecker static__1aa3e1ed4_new(void);
inline jule::Bool _1aa3e22e2_checkConditional(_1aa3e1ad8_missingRetChecker* _self_, jule::Ptr<_1aa3797da_Conditional> _286132_c);
inline jule::Bool _1aa3e2633_checkMatch(_1aa3e1ad8_missingRetChecker* _self_, jule::Ptr<_1aa37cdb5_Match> _287326_m);
inline jule::Bool _1aa3e2a2e_checkInfIter(_1aa3e1ad8_missingRetChecker* _self_, jule::Uintptr _289924_it, jule::Ptr<_1aa378ba2_Scope>* _289942_s);
inline jule::Bool _1aa3e2d70_checkScope(_1aa3e1ad8_missingRetChecker* _self_, jule::Ptr<_1aa378ba2_Scope> _291726_s);
inline jule::Bool _1aa3e31b1_check(_1aa3e1ad8_missingRetChecker* _self_, jule::Ptr<_1aa378ba2_Scope> _297221_s);
inline jule::Bool _1aa3e524b_IsInitialized(_1aa3e4d3e_Var* _self_);
inline jule::Bool _1aa3e54d2_IsTypeInferred(_1aa3e4d3e_Var* _self_);
inline jule::Bool _1aa3e5768_untypedConstant(_1aa3e4d3e_Var* _self_);
inline jule::Bool static__1aa3e6439_Dispose(jule::Ptr<_1aa3315b6_Fn> _1020_f);
inline jule::Bool static__1aa3e6703_Str(jule::Ptr<_1aa3315b6_Fn> _2416_f);
inline jule::Bool static__1aa3e6a77_logical(jule::Ptr<_1aa3315b6_Fn>* _4621_f, jule::Str _4629_ident);
inline jule::Bool static__1aa3e6d41_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _7215_f);
inline jule::Bool static__1aa3e710a_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _7715_f);
inline jule::Bool static__1aa3e73c4_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _8217_f);
inline jule::Bool static__1aa3e768d_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _8715_f);
inline jule::Bool static__1aa3e7957_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _9217_f);
inline jule::Bool static__1aa3e7ccb_result(jule::Ptr<_1aa3315b6_Fn>* _9620_f, jule::Str _9628_ident);
inline jule::Bool static__1aa3e8095_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _11816_f);
inline jule::Bool static__1aa3e835e_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _12316_f);
inline jule::Bool static__1aa3e8628_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _12816_f);
inline jule::Bool static__1aa3e88e2_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _13316_f);
inline jule::Bool static__1aa3e8bab_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _13816_f);
inline jule::Bool static__1aa3e8e75_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _14316_f);
inline jule::Bool static__1aa3e923e_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _14816_f);
inline jule::Bool static__1aa3e9508_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _15319_f);
inline jule::Bool static__1aa3e97c2_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _15818_f);
inline jule::Bool static__1aa3e9a8b_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _16319_f);
inline jule::Bool static__1aa3e9e10_unary(jule::Ptr<_1aa3315b6_Fn>* _16719_f, jule::Str _16727_ident);
inline jule::Bool static__1aa3ea1c9_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _18716_f);
inline jule::Bool static__1aa3ea493_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _19216_f);
inline jule::Bool static__1aa3ea75c_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _19719_f);
inline jule::Bool static__1aa3eaad1_assign(jule::Ptr<_1aa3315b6_Fn>* _20120_f, jule::Str _20128_ident);
inline jule::Bool static__1aa3ead9a_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _22122_f);
inline jule::Bool static__1aa3eb164_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _22622_f);
inline jule::Bool static__1aa3eb42d_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _23122_f);
inline jule::Bool static__1aa3eb6e7_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _23622_f);
inline jule::Bool static__1aa3eb9b1_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _24122_f);
inline jule::Bool static__1aa3ebc7a_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _24622_f);
inline jule::Bool static__1aa3ec044_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _25122_f);
inline jule::Bool static__1aa3ec30d_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _25624_f);
inline jule::Bool static__1aa3ec5c7_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _26125_f);
inline jule::Bool static__1aa3ec891_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _26625_f);
inline void _1aa434b3c_pushErr(_1aa43460e_typeCompatibilityChecker* _self_, jule::Str _11923_fmt, jule::Slice<jule::Any> _11936_args);
inline jule::Bool _1aa434dc3_checkTrait(_1aa43460e_typeCompatibilityChecker* _self_);
inline jule::Bool _1aa435159_checkPtr(_1aa43460e_typeCompatibilityChecker* _self_);
inline jule::Bool _1aa4353e0_checkPrim(_1aa43460e_typeCompatibilityChecker* _self_);
inline jule::Bool _1aa4357db_typeEnum(_1aa43460e_typeCompatibilityChecker* _self_, jule::Ptr<_1aa348e5d_TypeEnum>* _19925_e, jule::Ptr<_1a601a64a_TypeKind>* _19944_t2);
inline jule::Bool _1aa435a72_checkTypeEnum(_1aa43460e_typeCompatibilityChecker* _self_);
inline jule::Bool _1aa435d08_check(_1aa43460e_typeCompatibilityChecker* _self_);
inline void _1aa436875_pushErr(_1aa4363ad_assignTypeChecker* _self_, jule::Str _25523_fmt, jule::Slice<jule::Any> _25536_args);
inline jule::Bool _1aa436b0b_checkValidity(_1aa4363ad_assignTypeChecker* _self_);
inline jule::Bool _1aa436d92_checkConst(_1aa4363ad_assignTypeChecker* _self_);
inline jule::Bool _1aa437128_checkCompatibility(_1aa4363ad_assignTypeChecker* _self_);
inline jule::Bool _1aa4373ae_check(_1aa4363ad_assignTypeChecker* _self_);
inline jule::Bool _1bc75eac0_annotateConstraintElem(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _35746_k);
inline jule::Bool _1bc75e471_annotateConstraintElem(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _35746_k);
inline jule::Bool _1bc7643ee_annotateConstraintElem(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _35746_k);
inline jule::Bool _1bc768029_annotateConstraintElem(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _35746_k);
inline jule::Bool _1aa4386ac_annotateConstraintMap(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _37742_k);
inline jule::Bool _1aa4389ed_annotateConstraintTup(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _39242_k);
inline jule::Bool _1aa438d3e_annotateConstraintFn(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _40941_k);
inline jule::Bool _1aa439180_annotateConstraintIdent(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _43044_k);
inline jule::Bool _1aa4394c1_annotateConstraint(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _45939_k);
inline void _1aa439834_pushGeneric(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _48432_k, jule::I32 _48446_i);
inline jule::Bool _1aa439b75_annotatePrim(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _49940_k);
inline jule::Bool _1aa439eb6_annotateArr(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _50339_k);
inline jule::Bool _1aa43a307_annotateSlc(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _51339_k);
inline jule::Bool _1aa43a703_checkMapKey(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _52338_k, jule::Ptr<_1a601a64a_TypeKind>* _52358_ck);
inline jule::Bool _1aa43aa44_annotateMap(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _53139_k);
inline jule::Bool _1aa43ad85_annotateFn(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _54138_k);
inline jule::Bool _1aa43b1c6_annotatePtr(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _57039_k);
inline jule::Bool _1aa43b517_annotateSptr(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _58040_k);
inline jule::Bool _1aa43b858_annotateStruct(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _59042_k);
inline jule::Bool _1aa43bb99_annotateAny(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _61239_k);
inline jule::Bool _1aa43beda_annotateKind(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _63340_k);
inline jule::Bool _1aa43c271_annotate(_1aa437c83_dynamicTypeAnnotation* _self_);
inline void _1aa43d184_pushErrToken(_1aa43cae0_fnCallArgChecker* _self_, jule::Ptr<_1aa2d51c4_Token> _67828_token, jule::Str _67843_fmt, jule::Slice<jule::Any> _67856_args);
inline void _1aa43d4e7_pushErr(_1aa43cae0_fnCallArgChecker* _self_, jule::Str _68223_fmt, jule::Slice<jule::Any> _68236_args);
inline jule::Slice<jule::Ptr<_1aa33351e_ParamIns>> _1aa43d77d_getParams(_1aa43cae0_fnCallArgChecker* _self_);
inline jule::Bool _1aa43dabe_checkCounts(_1aa43cae0_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>* _69528_params);
inline jule::Bool _1aa43e075_checkArg(_1aa43cae0_fnCallArgChecker* _self_, jule::Ptr<_1aa33351e_ParamIns>* _72729_p, jule::Ptr<_1aa44cc98_Data>* _72748_arg, jule::Ptr<_1aa2d51c4_Token>* _72765_errorToken);
inline jule::Bool _1aa43e471_push(_1aa43cae0_fnCallArgChecker* _self_, jule::Ptr<_1aa33351e_ParamIns>* _75625_p, jule::Ptr<_1aa2ee9b3_Expr> _75643_arg);
inline jule::Bool _1aa43e86c_pushVariadic(_1aa43cae0_fnCallArgChecker* _self_, jule::Ptr<_1aa33351e_ParamIns>* _78033_p, jule::I32 _78051_i);
inline jule::Bool _1aa43ebad_checkArgs(_1aa43cae0_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>* _86130_params);
inline jule::Bool _1aa43ee44_checkDynamicTypeAnnotation(_1aa43cae0_fnCallArgChecker* _self_);
inline jule::Bool _1aa4401ca_check(_1aa43cae0_fnCallArgChecker* _self_);
inline void _1aa4410aa_pushErr(_1aa440a27_structLitChecker* _self_, jule::Ptr<_1aa2d51c4_Token> _94123_token, jule::Str _94138_fmt, jule::Slice<jule::Any> _94151_args);
inline void _1aa44141d_pushSuggestion(_1aa440a27_structLitChecker* _self_, jule::Str _94630_fmt, jule::Slice<jule::Any> _94643_args);
inline void _1aa44183b_pushMatch(_1aa440a27_structLitChecker* _self_, jule::Ptr<_1aa31d7c3_FieldIns>* _95030_f, jule::Ptr<_1aa44cc98_Data>* _95049_d, jule::Ptr<_1aa2d51c4_Token>* _95064_errorToken);
inline void _1aa441b9e_checkPair(_1aa440a27_structLitChecker* _self_, jule::Ptr<_1aa3041d2_FieldExprPair>* _96930_pair, jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>>* _96957_exprs);
inline jule::Bool _1aa441ee0_readyExprs(_1aa440a27_structLitChecker* _self_, jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>>* _100831_exprs);
inline void _1aa442298_check(_1aa440a27_structLitChecker* _self_, jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>>* _103226_exprs);
inline jule::Ptr<_1aa3e4d3e_Var> _1aa442d26_buildVar(_1aa442809_rangeChecker* _self_, jule::Ptr<_1aa30d4e9_VarDecl>* _110825_decl);
inline void _1aa443024_setSizeKey(_1aa442809_rangeChecker* _self_);
inline void _1aa443442_checkRangeExprValidity(_1aa442809_rangeChecker* _self_, jule::Ptr<_1aa44cc98_Data>* _112743_d, jule::Ptr<_1aa3e4d3e_Var>* _112754_key, jule::Ptr<_1a601a64a_TypeKind>* _112770_k);
inline void _1aa443640_checkSlice(_1aa442809_rangeChecker* _self_);
inline void _1aa44383d_checkArray(_1aa442809_rangeChecker* _self_);
inline void _1aa443a3b_checkMapKeyA(_1aa442809_rangeChecker* _self_);
inline void _1aa443c39_checkMapKeyB(_1aa442809_rangeChecker* _self_);
inline void _1aa443e37_checkMap(_1aa442809_rangeChecker* _self_);
inline void _1aa444135_checkStr(_1aa442809_rangeChecker* _self_);
inline void _1aa444333_checkComptime(_1aa442809_rangeChecker* _self_);
inline jule::Bool _1aa4445b9_checkComptimeRange(_1aa442809_rangeChecker* _self_);
inline jule::Bool _1aa444850_check(_1aa442809_rangeChecker* _self_);
inline void _1aa4454cc_prepareTypes(_1aa44506a_retTypeChecker* _self_);
inline void _1aa445785_prepareExprs(_1aa44506a_retTypeChecker* _self_, jule::Ptr<_1aa2ee9b3_Expr>* _128633_e);
inline void _1aa445983_checkExprs(_1aa44506a_retTypeChecker* _self_);
inline jule::Bool _1aa445c19_tryFuncMultiRetForward(_1aa44506a_retTypeChecker* _self_);
inline jule::Bool _1aa44605a_check(_1aa44506a_retTypeChecker* _self_, jule::Ptr<_1aa2ee9b3_Expr>* _138726_e);
inline jule::Ptr<_1aa39b0ae_ImportInfo> _1aa447aea_SelectPackage(_1aa4475cd_SymbolTable* _self_, jule::Fn<jule::Bool,jule::Ptr<_1aa39b0ae_ImportInfo>> _2729_selector);
inline jule::Ptr<_1aa3e4d3e_Var> _1aa447ee6_FindVar(_1aa4475cd_SymbolTable* _self_, jule::Str _4123_ident, jule::Bool _4135_binded);
inline jule::Ptr<_1a6019858_TypeAlias> _1aa4483e2_FindTypeAlias(_1aa4475cd_SymbolTable* _self_, jule::Str _4729_ident, jule::Bool _4741_binded);
inline jule::Ptr<_1aa31b518_Struct> _1aa4487dd_FindStruct(_1aa4475cd_SymbolTable* _self_, jule::Str _5326_ident, jule::Bool _5338_binded);
inline jule::Ptr<_1aa3315b6_Fn> _1aa448bd9_FindFn(_1aa4475cd_SymbolTable* _self_, jule::Str _6422_ident, jule::Bool _6434_binded);
inline jule::Ptr<_1aa345047_Trait> _1aa44902a_FindTrait(_1aa4475cd_SymbolTable* _self_, jule::Str _7525_ident);
inline jule::Ptr<_1aa347753_Enum> _1aa44936b_FindEnum(_1aa4475cd_SymbolTable* _self_, jule::Str _8624_ident);
inline jule::Ptr<_1aa348e5d_TypeEnum> _1aa4496ac_FindTypeEnum(_1aa4475cd_SymbolTable* _self_, jule::Str _9728_ident);
inline jule::I32 _1aa449b74_findVar1(_1aa4475cd_SymbolTable* _self_, jule::Ptr<_1aa3e4d3e_Var>* _10825_v);
inline jule::Ptr<_1aa3e4d3e_Var> _1aa44a12a_findVar(_1aa4475cd_SymbolTable* _self_, jule::Str* _11724_ident, jule::Bool _11736_binded, jule::Bool _11750_reverse);
inline jule::Ptr<_1a6019858_TypeAlias> _1aa44a5d1_findTypeAlias(_1aa4475cd_SymbolTable* _self_, jule::Str* _13630_ident, jule::Bool _13642_binded, jule::Bool _13656_reverse);
inline jule::Any _1aa44a9cc_defByIdent(_1aa4475cd_SymbolTable* _self_, jule::Str* _15727_ident, jule::Bool _15739_binded);
inline jule::Bool _1aa44ae83_isDuplicatedIdent(_1aa4475cd_SymbolTable* _self_, jule::Uintptr _21029_itself, jule::Str* _21047_ident, jule::Bool _21059_binded);
inline jule::Bool _1aa44d1b6_IsNil(_1aa44cc98_Data* _self_);
inline jule::Bool _1aa44d44c_IsVoid(_1aa44cc98_Data* _self_);
inline jule::Bool _1aa44d6d3_IsConst(_1aa44cc98_Data* _self_);
inline jule::Bool _1aa44da24_GoodOperand(_1aa44cc98_Data* _self_, jule::Ptr<_1aa44cc98_Data>* _10628_other);
inline void _1aa450053_pushErr(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa2d51c4_Token> _13723_token, jule::Str _13738_fmt, jule::Slice<jule::Any> _13751_args);
inline void _1aa4503b6_pushSuggestion(_1aa44e9c0_eval* _self_, jule::Str _14230_fmt, jule::Slice<jule::Any> _14243_args);
inline void _1aa4505b4_allowBuiltin(_1aa44e9c0_eval* _self_);
inline void _1aa4507b2_disallowBuiltin(_1aa44e9c0_eval* _self_);
inline jule::Bool _1aa450a48_isUnsafe(_1aa44e9c0_eval* _self_);
inline jule::Bool _1aa450cce_isGlobal(_1aa44e9c0_eval* _self_);
inline jule::Bool _1aa4510dc_applyNumericPrefix(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa44cc98_Data>* _16939_d);
inline jule::Ptr<_1aa44cc98_Data> _1aa45142d_litStr(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa30094d_LitExpr>* _20419_l);
inline jule::Ptr<_1aa44cc98_Data> _1aa45176e_litRune(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa30094d_LitExpr>* _22120_l);
inline jule::Ptr<_1aa44cc98_Data> _1aa451ab0_litFloat(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa30094d_LitExpr>* _24021_l);
inline jule::Ptr<_1aa44cc98_Data> _1aa451e01_litInt(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa30094d_LitExpr>* _25223_l);
inline jule::Ptr<_1aa44cc98_Data> _1aa452242_litNum(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa30094d_LitExpr>* _30723_l);
inline jule::Ptr<_1aa44cc98_Data> _1aa452583_evalLit(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa30094d_LitExpr> _31623_lit);
inline jule::Any _1aa4528c4_findBuiltins(_1aa44e9c0_eval* _self_, jule::Str* _32929_ident);
inline jule::Any _1aa452cc0_getDef(_1aa44e9c0_eval* _self_, jule::Str* _35623_ident, jule::Bool _35635_binded);
inline jule::Ptr<_1aa337732_ReferenceStack> _1aa453056_getOwnerRefers(_1aa44e9c0_eval* _self_);
inline void _1bc8e4073_pushReference(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa334597_FnIns>* _41537_ref);
inline void _1bc618ccb_pushReference(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa3e4d3e_Var>* _41537_ref);
inline void _1bbae9c19_pushReference(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa31e373_StructIns>* _41537_ref);
inline jule::Ptr<_1aa44cc98_Data> _1aa453650__evalEnum(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa347753_Enum> _42225_enm);
inline jule::Ptr<_1aa44cc98_Data> _1aa453a4b_evalEnum(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa347753_Enum> _43128_enm, jule::Ptr<_1aa2d51c4_Token> _43140_errorToken);
inline jule::Ptr<_1aa44cc98_Data> _1aa453d8c__evalTypeEnum(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa348e5d_TypeEnum> _44029_enm);
inline jule::Ptr<_1aa44cc98_Data> _1aa454288_evalTypeEnum(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa348e5d_TypeEnum> _44932_enm, jule::Ptr<_1aa2d51c4_Token> _44948_errorToken);
inline jule::Ptr<_1aa44cc98_Data> _1aa4545c9__evalStruct(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa31e373_StructIns> _45827_s);
inline jule::Ptr<_1aa44cc98_Data> _1aa4549c5_evalStruct(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa31b518_Struct> _47230_s, jule::Ptr<_1aa2d51c4_Token> _47246_errorToken);
inline jule::Ptr<_1aa44cc98_Data> _1aa454d16_evalFnIns(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa334597_FnIns> _50125_f);
inline void _1aa455179_checkDeprecated(_1aa44e9c0_eval* _self_, jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>>* _51036_directives, jule::Ptr<_1aa2d51c4_Token> _51067_tok);
inline jule::Ptr<_1aa44cc98_Data> _1aa455575_evalFn(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa3315b6_Fn> _52626_f, jule::Ptr<_1aa2d51c4_Token> _52634_errorToken);
inline void _1aa455993_pushIllegalCycleError(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa3e4d3e_Var>* _55138_v1, jule::Ptr<_1aa3e4d3e_Var>* _55149_v2, _1ed486d49_StrBuilder* _55164_message);
inline jule::Bool _1aa455d8e_checkCrossCycle(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa3e4d3e_Var>* _56132_v, _1ed486d49_StrBuilder* _56146_message);
inline jule::Bool _1aa45628a_checkIllegalCycles(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa3e4d3e_Var>* _57839_v, jule::Ptr<_1aa2d51c4_Token> _57848_declToken);
inline jule::Ptr<_1aa44cc98_Data> _1aa456686_evalVar(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa3e4d3e_Var> _60627_v, jule::Ptr<_1aa2d51c4_Token> _60636_errorToken);
inline jule::Ptr<_1aa44cc98_Data> _1aa456a82_evalTypeAlias(_1aa44e9c0_eval* _self_, jule::Ptr<_1a6019858_TypeAlias> _73033_ta, jule::Ptr<_1aa2d51c4_Token> _73049_errorToken);
inline jule::Ptr<_1aa44cc98_Data> _1aa456e7d_evalDef(_1aa44e9c0_eval* _self_, jule::Any* _76928_def, jule::Ptr<_1aa2d51c4_Token> _76942_ident);
inline jule::Ptr<_1aa44cc98_Data> _1aa4572be_evalIdent(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa3012cd_IdentExpr> _79329_ident);
inline jule::Ptr<_1aa44cc98_Data> _1aa457610_evalUnary(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa301a70_UnaryExpr> _79830_u);
inline jule::Ptr<_1aa44cc98_Data> _1aa457951_evalVariadic(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa301e49_VariadicExpr> _80333_v);
inline jule::Ptr<_1aa44cc98_Data> _1aa457c92_evalUnsafe(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa300d27_UnsafeExpr> _82531_u);
inline jule::Ptr<_1aa44cc98_Data> _1aa4580d3_evalArr(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa306019_SliceExpr> _83328_s);
inline jule::Ptr<_1aa44cc98_Data> _1aa458589_evalExpSlc(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa306019_SliceExpr> _91031_s, jule::Ptr<_1a601a64a_TypeKind> _91050_t, jule::Any _91068_first);
inline jule::Ptr<_1aa44cc98_Data> _1aa4588ca_evalSliceExpr(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa306019_SliceExpr> _94834_s);
inline void _1aa458c3d_checkIntegerIndexingByData(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa44cc98_Data>* _98447_d, jule::Ptr<_1aa2d51c4_Token> _98461_token);
inline void _1aa45915b_indexingPtr(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa44cc98_Data>* _99632_d, jule::Ptr<_1aa44cc98_Data>* _99647_index, jule::Ptr<_1aa306976_IndexingExpr>* _99666_i);
inline void _1aa459579_indexingArr(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa44cc98_Data>* _101232_d, jule::Ptr<_1aa44cc98_Data>* _101247_index, jule::Ptr<_1aa306976_IndexingExpr>* _101266_i);
inline void _1aa459997_indexingSlc(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa44cc98_Data>* _102232_d, jule::Ptr<_1aa44cc98_Data>* _102247_index, jule::Ptr<_1aa306976_IndexingExpr>* _102266_i);
inline void _1aa459db5_indexingMap(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa44cc98_Data>* _104532_d, jule::Ptr<_1aa44cc98_Data>* _104547_index, jule::Ptr<_1aa306976_IndexingExpr>* _104566_i);
inline void _1aa45a2d3_indexingStr(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa44cc98_Data>* _106132_d, jule::Ptr<_1aa44cc98_Data>* _106147_index, jule::Ptr<_1aa306976_IndexingExpr>* _106166_i);
inline void _1aa45a701_toIndexing(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa44cc98_Data>* _109031_d, jule::Ptr<_1aa44cc98_Data>* _109046_index, jule::Ptr<_1aa306976_IndexingExpr>* _109065_i);
inline jule::Bool _1aa45aba7_pushGenericsFromExprSubIdent(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa302ac6_SubIdentExpr>* _111550_sexpr, jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>>* _11168_generics, jule::Ptr<_1aa2ee9b3_Expr>* _111636_expr);
inline jule::Bool _1aa45b0a3_pushGenericsFromData(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>>* _112642_generics, jule::Ptr<_1aa2ee9b3_Expr>* _112670_expr);
inline void _1aa45b416_evalIdentDeclFromIndexing(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa44cc98_Data>* _119647_d, jule::Ptr<_1aa306976_IndexingExpr>* _119662_i);
inline __jule_tuple_bool__jule_tuple_bool _1aa45b8bc_checkGenericFn(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa334597_FnIns>* _123936_f, jule::Ptr<_1aa2d51c4_Token>* _123952_et, jule::Any* _123969_model);
inline void _1aa45bc30_evalFnGenericFromIndexing(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa44cc98_Data>* _125547_d, jule::Ptr<_1aa306976_IndexingExpr>* _125562_i);
inline jule::Ptr<_1aa44cc98_Data> _1aa45c071_evalIndexing(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa306976_IndexingExpr> _129533_i);
inline __jule_tuple_x_1aa44cc98_Data__jule_tuple_x_1aa44cc98_Data _1aa45c3b2_evalSlicingExprs(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa3070d6_SlicingExpr>* _134938_s);
inline void _1aa45c66a_slicingArr(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa44cc98_Data>* _138527_d);
inline void _1aa45ca88_slicingStr(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa44cc98_Data>* _140027_d, jule::Ptr<_1aa44cc98_Data>* _140038_l, jule::Ptr<_1aa44cc98_Data>* _140049_r);
inline void _1aa45d061_checkSlicing(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa44cc98_Data>* _143833_d, jule::Ptr<_1aa44cc98_Data>* _143844_l, jule::Ptr<_1aa44cc98_Data>* _143855_r, jule::Ptr<_1aa3070d6_SlicingExpr>* _143866_s);
inline jule::Ptr<_1aa44cc98_Data> _1aa45d3a2_evalSlicing(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa3070d6_SlicingExpr> _145732_s);
inline void _1aa45d7c0_castPtr(_1aa44e9c0_eval* _self_, jule::Ptr<_1a601a64a_TypeKind> _149427_t, jule::Ptr<_1aa44cc98_Data> _149445_d, jule::Ptr<_1aa2d51c4_Token> _149455_errorToken);
inline void _1aa45dbdd_castStruct(_1aa44e9c0_eval* _self_, jule::Ptr<_1a601a64a_TypeKind> _151630_t, jule::Ptr<_1aa44cc98_Data> _151648_d, jule::Ptr<_1aa2d51c4_Token> _151658_errorToken);
inline void _1aa45e10b_castRef(_1aa44e9c0_eval* _self_, jule::Ptr<_1a601a64a_TypeKind> _153327_t, jule::Ptr<_1aa44cc98_Data> _153345_d, jule::Ptr<_1aa2d51c4_Token> _153355_errorToken);
inline void _1aa45e529_castSlc(_1aa44e9c0_eval* _self_, jule::Ptr<_1a601a64a_TypeKind> _155627_t, jule::Ptr<_1aa44cc98_Data> _155645_d, jule::Ptr<_1aa2d51c4_Token> _155655_errorToken);
inline void _1aa45e88c_castStr(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa44cc98_Data> _161127_d, jule::Ptr<_1aa2d51c4_Token> _161137_errorToken);
inline void _1aa45ecaa_castInt(_1aa44e9c0_eval* _self_, jule::Ptr<_1a601a64a_TypeKind> _165827_t, jule::Ptr<_1aa44cc98_Data> _165845_d, jule::Ptr<_1aa2d51c4_Token> _165855_errorToken);
inline void _1aa4601c8_castNum(_1aa44e9c0_eval* _self_, jule::Ptr<_1a601a64a_TypeKind> _170427_t, jule::Ptr<_1aa44cc98_Data> _170445_d, jule::Ptr<_1aa2d51c4_Token> _170455_errorToken);
inline void _1aa4605e6_castPrim(_1aa44e9c0_eval* _self_, jule::Ptr<_1a601a64a_TypeKind> _173528_t, jule::Ptr<_1aa44cc98_Data> _173546_d, jule::Ptr<_1aa2d51c4_Token> _173556_errorToken);
inline void _1aa460959_castConstant(_1aa44e9c0_eval* _self_, jule::Ptr<_1a601a64a_TypeKind>* _175333_t, jule::Ptr<_1aa44cc98_Data>* _175352_d);
inline void _1aa460d77_castTypeEnum(_1aa44e9c0_eval* _self_, jule::Ptr<_1a601a64a_TypeKind>* _176233_t, jule::Ptr<_1aa44cc98_Data>* _176252_d, jule::Ptr<_1aa2d51c4_Token>* _176267_errorToken);
inline void _1aa461295_castTypeEnumT(_1aa44e9c0_eval* _self_, jule::Ptr<_1a601a64a_TypeKind>* _177234_t, jule::Ptr<_1aa44cc98_Data>* _177253_d, jule::Ptr<_1aa2d51c4_Token>* _177268_errorToken);
inline jule::Ptr<_1aa44cc98_Data> _1aa46174b_evalCastByTypeNData(_1aa44e9c0_eval* _self_, jule::Ptr<_1a601a64a_TypeKind> _178239_t, jule::Ptr<_1aa44cc98_Data> _178257_d, jule::Ptr<_1aa2d51c4_Token> _178271_errorToken);
inline jule::Ptr<_1aa44cc98_Data> _1aa461c02_evalCastT(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1a601a64a_TypeKind>* _185531_t, jule::Ptr<_1aa2ee9b3_Expr>* _185550_e, jule::Ptr<_1aa2d51c4_Token>* _185565_et);
inline jule::Ptr<_1aa44cc98_Data> _1aa462043_evalCast(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa302323_CastExpr> _187229_c);
inline jule::Ptr<_1aa44cc98_Data> _1aa462384_evalNsSelection(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa3026ec_NsSelectionExpr> _188135_s);
inline jule::Ptr<_1aa44cc98_Data> _1aa46283a_evalStructLitExplicit(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa31e373_StructIns> _190742_s, jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>> _19087_exprs, jule::Ptr<_1aa2d51c4_Token> _190827_errorToken);
inline jule::Ptr<_1aa44cc98_Data> _1aa462b7b_evalStructLit(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa304a0c_StructLit> _194534_lit);
inline _1a602ca47_typeChecker _1aa462e12_typeChecker(_1aa44e9c0_eval* _self_);
inline jule::Ptr<_1aa44cc98_Data> _1aa463253_evalType(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa2ea67e_TypeDecl> _197728_t);
inline void _1aa4635b6_callTypeFn(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa3036dc_FnCallExpr>* _199032_fc, jule::Ptr<_1aa44cc98_Data>* _199054_d);
inline void _1aa463929_callBuiltinFn(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa3036dc_FnCallExpr>* _201635_fc, jule::Ptr<_1aa44cc98_Data>* _201657_d);
inline void _1aa463c8c_checkFnOfConcurrentCall(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa334597_FnIns>* _202840_f, jule::Ptr<_1aa2d51c4_Token> _202851_errorToken);
inline void _1aa4641aa_processExceptionalHandler(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa334597_FnIns>* _204746_f, jule::Ptr<_1aa3036dc_FnCallExpr>* _204762_fc, jule::Ptr<_1aa44cc98_Data>* _204784_d);
inline void _1aa46451d_callFn(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa3036dc_FnCallExpr>* _207428_fc, jule::Ptr<_1aa44cc98_Data>* _207450_d);
inline jule::Ptr<_1aa44cc98_Data> _1aa46485e_evalFnCall(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa3036dc_FnCallExpr> _222731_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa464c5a_evalEnumStatic(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa347753_Enum> _226034_enm, jule::Ptr<_1aa2d51c4_Token> _226050_ident);
inline jule::Ptr<_1aa44cc98_Data> _1aa465156_evalTypeEnumStatic(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa348e5d_TypeEnum> _226838_enm, jule::Ptr<_1aa2d51c4_Token> _226854_ident);
inline jule::Ptr<_1aa44cc98_Data> _1aa465552_evalStructStatic(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa31e373_StructIns> _229136_s, jule::Ptr<_1aa2d51c4_Token> _229151_ident);
inline jule::Ptr<_1aa44cc98_Data> _1aa465a08_evalTraitSubIdent(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa44cc98_Data> _232637_d, jule::Ptr<_1aa345047_Trait> _232651_trt, jule::Ptr<_1aa2d51c4_Token> _232668_ident);
inline jule::Ptr<_1aa44cc98_Data> _1aa466069_evalStructSubIdentField(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa44cc98_Data>* _234644_d, jule::Ptr<_1aa31e373_StructIns>* _234659_s, jule::Ptr<_1aa2d51c4_Token>* _234679_tok, jule::Ptr<_1aa31d7c3_FieldIns>* _234697_f);
inline jule::Ptr<_1aa44cc98_Data> _1aa4665ca_evalStructSubIdent(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa44cc98_Data> _236938_d, jule::Ptr<_1aa31e373_StructIns> _236952_s, jule::Ptr<_1aa302ac6_SubIdentExpr> _236971_si, jule::Bool _236990_ref);
inline jule::Ptr<_1aa44cc98_Data> _1aa46691b_evalIntTypeStatic(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa2d51c4_Token> _241033_ident);
inline jule::Ptr<_1aa44cc98_Data> _1aa466c5c_evalUintTypeStatic(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa2d51c4_Token> _243734_ident);
inline jule::Ptr<_1aa44cc98_Data> _1aa46709d_evalI8TypeStatic(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa2d51c4_Token> _245532_ident);
inline jule::Ptr<_1aa44cc98_Data> _1aa4673de_evalI16TypeStatic(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa2d51c4_Token> _248433_ident);
inline jule::Ptr<_1aa44cc98_Data> _1aa467730_evalI32TypeStatic(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa2d51c4_Token> _251333_ident);
inline jule::Ptr<_1aa44cc98_Data> _1aa467a71_evalI64TypeStatic(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa2d51c4_Token> _254233_ident);
inline jule::Ptr<_1aa44cc98_Data> _1aa467db2_evalU8TypeStatic(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa2d51c4_Token> _257132_ident);
inline jule::Ptr<_1aa44cc98_Data> _1aa468203_evalU16TypeStatic(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa2d51c4_Token> _259033_ident);
inline jule::Ptr<_1aa44cc98_Data> _1aa468544_evalU32TypeStatic(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa2d51c4_Token> _260933_ident);
inline jule::Ptr<_1aa44cc98_Data> _1aa468885_evalU64TypeStatic(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa2d51c4_Token> _262833_ident);
inline jule::Ptr<_1aa44cc98_Data> _1aa468bc6_evalF32TypeStatic(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa2d51c4_Token> _264733_ident);
inline jule::Ptr<_1aa44cc98_Data> _1aa469017_evalF64TypeStatic(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa2d51c4_Token> _268633_ident);
inline jule::Ptr<_1aa44cc98_Data> _1aa469413_evalPrimStatic(_1aa44e9c0_eval* _self_, jule::Str _272530_kind, jule::Ptr<_1aa2d51c4_Token> _272541_ident);
inline jule::Ptr<_1aa44cc98_Data> _1aa46980e_evalTypeStatic(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa44cc98_Data> _275734_d, jule::Ptr<_1aa302ac6_SubIdentExpr> _275748_si);
inline jule::Ptr<_1aa44cc98_Data> _1bcae8662_comptimeObjSubIdent(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa35ac50_comptimeTypeInfo>* _277354_ct, jule::Ptr<_1aa44cc98_Data>* _277374_d, jule::Ptr<_1aa302ac6_SubIdentExpr>* _277385_si);
inline jule::Ptr<_1aa44cc98_Data> _1bcaeccd7_comptimeObjSubIdent(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa34cb21_comptimeStructField>* _277354_ct, jule::Ptr<_1aa44cc98_Data>* _277374_d, jule::Ptr<_1aa302ac6_SubIdentExpr>* _277385_si);
inline jule::Ptr<_1aa44cc98_Data> _1bcb023e6_comptimeObjSubIdent(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa35386e_comptimeEnumField>* _277354_ct, jule::Ptr<_1aa44cc98_Data>* _277374_d, jule::Ptr<_1aa302ac6_SubIdentExpr>* _277385_si);
inline jule::Ptr<_1aa44cc98_Data> _1bcb06a49_comptimeObjSubIdent(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa356311_comptimeParam>* _277354_ct, jule::Ptr<_1aa44cc98_Data>* _277374_d, jule::Ptr<_1aa302ac6_SubIdentExpr>* _277385_si);
inline jule::Ptr<_1aa44cc98_Data> _1bcb0b3cd_comptimeObjSubIdent(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa3509c0_comptimeStatic>* _277354_ct, jule::Ptr<_1aa44cc98_Data>* _277374_d, jule::Ptr<_1aa302ac6_SubIdentExpr>* _277385_si);
inline jule::Ptr<_1aa44cc98_Data> _1bcb109dc_comptimeObjSubIdent(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa361d55_comptimeValue>* _277354_ct, jule::Ptr<_1aa44cc98_Data>* _277374_d, jule::Ptr<_1aa302ac6_SubIdentExpr>* _277385_si);
inline jule::Ptr<_1aa44cc98_Data> _1bcb150eb_comptimeObjSubIdent(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa365c9e_comptimeFile>* _277354_ct, jule::Ptr<_1aa44cc98_Data>* _277374_d, jule::Ptr<_1aa302ac6_SubIdentExpr>* _277385_si);
inline jule::Ptr<_1aa44cc98_Data> _1bcb19793_comptimeObjSubIdent(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa369841_comptimeDecl>* _277354_ct, jule::Ptr<_1aa44cc98_Data>* _277374_d, jule::Ptr<_1aa302ac6_SubIdentExpr>* _277385_si);
inline __jule_tuple_x_1aa44cc98_Data__jule_tuple_bool _1aa46a1b1_tryComptimeObjSubIdent(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa44cc98_Data>* _278143_d, jule::Ptr<_1aa302ac6_SubIdentExpr> _278157_si);
inline jule::Ptr<_1aa44cc98_Data> _1aa46a5ac_evalObjSubIdent(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa44cc98_Data> _281235_d, jule::Ptr<_1aa302ac6_SubIdentExpr> _281249_si);
inline jule::Ptr<_1aa44cc98_Data> _1aa46a8ed_evalSubIdent(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa302ac6_SubIdentExpr> _285633_si);
inline jule::Ptr<_1aa44cc98_Data> _1aa46ac3e_evalTuple(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa3005a7_TupleExpr> _287030_tup);
inline jule::Ptr<_1aa44cc98_Data> _1aa46b13a_evalMap(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1a6029406_Map> _289928_m, jule::Ptr<_1aa304eb3_BraceLit> _289941_lit);
inline jule::Ptr<_1aa44cc98_Data> _1aa46b47b_evalBraceLit(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa304eb3_BraceLit> _294833_lit);
inline jule::Ptr<_1aa44cc98_Data> _1aa46b7bc_evalAnonFunc(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa30c33e_FnDecl> _296333_decl);
inline jule::Ptr<_1aa44cc98_Data> _1aa46bb0d_evalBinary(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa30307c_BinaryExpr> _300131_op);
inline jule::Ptr<_1aa44cc98_Data> _1aa46be4e_evalExprKind(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Any _301633_kind);
inline jule::Ptr<_1aa44cc98_Data> _1aa46c290_eval1(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa2ee9b3_Expr> _306426_expr);
inline jule::Ptr<_1aa44cc98_Data> _1aa46c5d1_eval(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa2ee9b3_Expr> _310725_expr);
inline jule::Ptr<_1aa44cc98_Data> _1aa46c922_evalExpr1(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa2ee9b3_Expr> _312230_expr);
inline jule::Ptr<_1aa44cc98_Data> _1aa46cc63_evalExpr(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa2ee9b3_Expr> _313829_expr);
inline _1aa46d1e7_unaryEval static__1aa46d66a_new(jule::Ptr<_1aa44e9c0_eval> _315920_e);
inline void _1aa46d868_minus(_1aa46d1e7_unaryEval* _self_);
inline void _1aa46da66_plus(_1aa46d1e7_unaryEval* _self_);
inline void _1aa46dc64_caret(_1aa46d1e7_unaryEval* _self_);
inline void _1aa46de62_excl(_1aa46d1e7_unaryEval* _self_);
inline void _1aa46e160_star(_1aa46d1e7_unaryEval* _self_);
inline void _1aa46e35d_amper(_1aa46d1e7_unaryEval* _self_);
inline void _1aa46e55b_typeDecl(_1aa46d1e7_unaryEval* _self_);
inline void _1aa46e759_evalData(_1aa46d1e7_unaryEval* _self_);
inline jule::Ptr<_1aa44cc98_Data> _1aa46ea9a_eval(_1aa46d1e7_unaryEval* _self_, jule::Ptr<_1aa301a70_UnaryExpr> _341924_u);
inline _1aa470183_binaryEval static__1aa47076b_newPlain(jule::Ptr<_1aa44e9c0_eval> _346725_e);
inline _1aa470183_binaryEval static__1aa470ae0_new(jule::Ptr<_1aa44e9c0_eval> _347320_e, jule::Ptr<_1aa2d51c4_Token> _347334_op);
inline jule::Bool _1aa470d76_checkTypeCompatibility(_1aa470183_binaryEval* _self_);
inline jule::Bool _1aa47110c_checkStructCommonOperatorCompatibility(_1aa470183_binaryEval* _self_);
inline jule::Ptr<_1aa44cc98_Data> _1aa471393_evalComptimeTypeInfo(_1aa470183_binaryEval* _self_);
inline jule::Ptr<_1aa44cc98_Data> _1aa471629_evalNil(_1aa470183_binaryEval* _self_);
inline jule::Ptr<_1aa44cc98_Data> _1aa4718b0_evalEnum(_1aa470183_binaryEval* _self_);
inline jule::Ptr<_1aa44cc98_Data> _1aa471b46_evalTypeEnum(_1aa470183_binaryEval* _self_);
inline jule::Ptr<_1aa44cc98_Data> _1aa471dcc_evalSptr(_1aa470183_binaryEval* _self_);
inline jule::Ptr<_1aa44cc98_Data> _1aa472163_evalPtr(_1aa470183_binaryEval* _self_);
inline jule::Ptr<_1aa44cc98_Data> _1aa4723e9_evalArr(_1aa470183_binaryEval* _self_);
inline jule::Ptr<_1aa44cc98_Data> _1aa472680_evalStruct(_1aa470183_binaryEval* _self_);
inline jule::Ptr<_1aa44cc98_Data> _1aa472916_evalTrait(_1aa470183_binaryEval* _self_);
inline jule::Ptr<_1aa44cc98_Data> _1aa472b9c_evalAny(_1aa470183_binaryEval* _self_);
inline jule::Ptr<_1aa44cc98_Data> _1aa472e33_evalBool(_1aa470183_binaryEval* _self_);
inline jule::Ptr<_1aa44cc98_Data> _1aa4731b9_evalStr(_1aa470183_binaryEval* _self_);
inline void _1aa4733b7_setTypeToGreater(_1aa470183_binaryEval* _self_);
inline void _1aa473670_checkModData(_1aa470183_binaryEval* _self_, jule::Ptr<_1aa44cc98_Data>* _388633_d);
inline void _1aa47386d_mod(_1aa470183_binaryEval* _self_);
inline jule::Bool _1aa473c69_numbersAreCompatibile(_1aa470183_binaryEval* _self_, jule::Str* _390834_lk, jule::Str* _390844_rk);
inline jule::Ptr<_1aa44cc98_Data> _1aa474000_shift(_1aa470183_binaryEval* _self_);
inline jule::Ptr<_1aa44cc98_Data> _1aa474286_evalFloat(_1aa470183_binaryEval* _self_);
inline jule::Ptr<_1aa44cc98_Data> _1aa47451c_evalInt(_1aa470183_binaryEval* _self_);
inline jule::Ptr<_1aa44cc98_Data> _1aa4747a3_evalPrim(_1aa470183_binaryEval* _self_);
inline jule::Bool _1aa474a39_checkSpecialCases(_1aa470183_binaryEval* _self_);
inline jule::Ptr<_1aa44cc98_Data> _1aa474cc0_evalOp(_1aa470183_binaryEval* _self_);
inline void _1aa475078_evalConst(_1aa470183_binaryEval* _self_, jule::Ptr<_1aa44cc98_Data>* _420930_d);
inline void _1aa475331_checkData(_1aa470183_binaryEval* _self_, jule::Ptr<_1aa44cc98_Data>* _428730_d);
inline void _1aa47552e_checkDatas(_1aa470183_binaryEval* _self_);
inline void _1aa4757d7_setModel(_1aa470183_binaryEval* _self_, jule::Ptr<_1aa44cc98_Data>* _429929_d);
inline void _1aa475a90_postEval(_1aa470183_binaryEval* _self_, jule::Ptr<_1aa44cc98_Data>* _432829_d);
inline jule::Ptr<_1aa44cc98_Data> _1aa475e8b_solveExplicit(_1aa470183_binaryEval* _self_, jule::Ptr<_1aa44cc98_Data>* _433334_l, jule::Ptr<_1aa44cc98_Data>* _433349_r);
inline jule::Ptr<_1aa44cc98_Data> _1aa4762cc_eval(_1aa470183_binaryEval* _self_, jule::Ptr<_1aa30307c_BinaryExpr>* _435325_op);
inline jule::Str _1a601aa46_Str(_1a601a64a_TypeKind* _self_);
inline jule::Bool _1a601ad87_Equal(jule::Ptr<_1a601a64a_TypeKind> _self_, jule::Ptr<_1a601a64a_TypeKind> _9018_other);
inline jule::Bool _1a601b4e7_Binded(_1a601a64a_TypeKind* _self_);
inline jule::Bool _1a601b77d_IsNil(_1a601a64a_TypeKind* _self_);
inline jule::Bool _1a601ba14_Void(_1a601a64a_TypeKind* _self_);
inline jule::Bool _1a601bc9a_Comparable(_1a601a64a_TypeKind* _self_);
inline jule::Bool _1a601c031_Mutable(_1a601a64a_TypeKind* _self_);
inline jule::Bool _1a601c2b7_Ordered(_1a601a64a_TypeKind* _self_);
inline jule::Bool _1a601c54d_NilCompatible(_1a601a64a_TypeKind* _self_);
inline jule::Bool _1a601c7d4_GC(_1a601a64a_TypeKind* _self_);
inline jule::Bool _1a601ca6a_Variadicable(_1a601a64a_TypeKind* _self_);
inline jule::Ptr<_1a6023763_Prim> _1a601cd01_Prim(_1a601a64a_TypeKind* _self_);
inline jule::Ptr<_1a602728e_Sptr> _1a601d087_Sptr(_1a601a64a_TypeKind* _self_);
inline jule::Ptr<_1a602aa56_Ptr> _1a601d31d_Ptr(_1a601a64a_TypeKind* _self_);
inline jule::Ptr<_1aa347753_Enum> _1a601d5a4_Enum(_1a601a64a_TypeKind* _self_);
inline jule::Ptr<_1aa348e5d_TypeEnum> _1a601d83a_TypeEnum(_1a601a64a_TypeKind* _self_);
inline jule::Ptr<_1a602a083_Arr> _1a601dac1_Arr(_1a601a64a_TypeKind* _self_);
inline jule::Ptr<_1a6027c62_Slc> _1a601dd57_Slc(_1a601a64a_TypeKind* _self_);
inline jule::Ptr<_1aa334597_FnIns> _1a601e0dd_Fn(_1a601a64a_TypeKind* _self_);
inline jule::Ptr<_1aa31e373_StructIns> _1a601e374_Struct(_1a601a64a_TypeKind* _self_);
inline jule::Ptr<_1aa345047_Trait> _1a601e60a_Trait(_1a601a64a_TypeKind* _self_);
inline jule::Ptr<_1a6029406_Map> _1a601e891_Map(_1a601a64a_TypeKind* _self_);
inline jule::Ptr<_1a6028856_Tuple> _1a601eb27_Tup(_1a601a64a_TypeKind* _self_);
inline jule::Bool _1a601edad_comptime(_1a601a64a_TypeKind* _self_);
inline jule::Ptr<_1aa34e3c5_comptimeStructFields> _1a6020144_comptimeStructFields(_1a601a64a_TypeKind* _self_);
inline jule::Ptr<_1aa34cb21_comptimeStructField> _1a60203ca_comptimeStructField(_1a601a64a_TypeKind* _self_);
inline jule::Ptr<_1aa354c16_comptimeEnumFields> _1a6020661_comptimeEnumFields(_1a601a64a_TypeKind* _self_);
inline jule::Ptr<_1aa35386e_comptimeEnumField> _1a60208e7_comptimeEnumField(_1a601a64a_TypeKind* _self_);
inline jule::Ptr<_1aa35808d_comptimeParams> _1a6020b7d_comptimeParams(_1a601a64a_TypeKind* _self_);
inline jule::Ptr<_1aa356311_comptimeParam> _1a6020e14_comptimeParam(_1a601a64a_TypeKind* _self_);
inline jule::Ptr<_1aa34c14d_comptimeRange> _1a602119a_comptimeRange(_1a601a64a_TypeKind* _self_);
inline jule::Ptr<_1aa359655_comptimeTypeInfos> _1a6021431_comptimeTypeInfos(_1a601a64a_TypeKind* _self_);
inline jule::Ptr<_1aa35ac50_comptimeTypeInfo> _1a60216b7_comptimeTypeInfo(_1a601a64a_TypeKind* _self_);
inline jule::Ptr<_1aa352274_comptimeStatics> _1a602194d_comptimeStatics(_1a601a64a_TypeKind* _self_);
inline jule::Ptr<_1aa3509c0_comptimeStatic> _1a6021bd4_comptimeStatic(_1a601a64a_TypeKind* _self_);
inline jule::Ptr<_1aa361d55_comptimeValue> _1a6021e6a_comptimeValue(_1a601a64a_TypeKind* _self_);
inline jule::Ptr<_1aa369841_comptimeDecl> _1a6022201_comptimeDecl(_1a601a64a_TypeKind* _self_);
inline jule::Ptr<_1aa3679e8_comptimeDecls> _1a6022487_comptimeDecls(_1a601a64a_TypeKind* _self_);
inline jule::Ptr<_1aa365c9e_comptimeFile> _1a602271d_comptimeFile(_1a601a64a_TypeKind* _self_);
inline jule::Ptr<_1aa3646a4_comptimeFiles> _1a60229a4_comptimeFiles(_1a601a64a_TypeKind* _self_);
inline jule::Bool _1a6023213_checked(_1a6022d5b_TypeSymbol* _self_);
inline jule::Str _1a6023ad7_Str(_1a6023763_Prim* _self_);
inline jule::Bool _1a6023e28_Equal(jule::Ptr<_1a6023763_Prim> _self_, jule::Ptr<_1a601a64a_TypeKind> _53118_other);
inline jule::Bool _1a60243bd_IsConstraint(_1a6023763_Prim* _self_);
inline jule::Bool _1a6024654_IsI8(_1a6023763_Prim* _self_);
inline jule::Bool _1a60248da_IsI16(_1a6023763_Prim* _self_);
inline jule::Bool _1a6024b71_IsI32(_1a6023763_Prim* _self_);
inline jule::Bool _1a6024e07_IsI64(_1a6023763_Prim* _self_);
inline jule::Bool _1a602518d_IsU8(_1a6023763_Prim* _self_);
inline jule::Bool _1a6025424_IsU16(_1a6023763_Prim* _self_);
inline jule::Bool _1a60256aa_IsU32(_1a6023763_Prim* _self_);
inline jule::Bool _1a6025941_IsU64(_1a6023763_Prim* _self_);
inline jule::Bool _1a6025bc7_IsF32(_1a6023763_Prim* _self_);
inline jule::Bool _1a6025e5d_IsF64(_1a6023763_Prim* _self_);
inline jule::Bool _1a60261e4_IsInt(_1a6023763_Prim* _self_);
inline jule::Bool _1a602647a_IsUint(_1a6023763_Prim* _self_);
inline jule::Bool _1a6026711_IsUintptr(_1a6023763_Prim* _self_);
inline jule::Bool _1a6026997_IsBool(_1a6023763_Prim* _self_);
inline jule::Bool _1a6026c2d_IsStr(_1a6023763_Prim* _self_);
inline jule::Bool _1a6026eb4_IsAny(_1a6023763_Prim* _self_);
inline jule::Str _1a6027646_Str(_1a602728e_Sptr* _self_);
inline jule::Bool _1a6027987_Equal(jule::Ptr<_1a602728e_Sptr> _self_, jule::Ptr<_1a601a64a_TypeKind> _60818_other);
inline jule::Str _1a6028229_Str(_1a6027c62_Slc* _self_);
inline jule::Bool _1a602856a_Equal(jule::Ptr<_1a6027c62_Slc> _self_, jule::Ptr<_1a601a64a_TypeKind> _62718_other);
inline jule::Str _1a6028c0d_Str(_1a6028856_Tuple* _self_);
inline jule::Bool _1a602904e_Equal(jule::Ptr<_1a6028856_Tuple> _self_, jule::Ptr<_1a601a64a_TypeKind> _65618_other);
inline jule::Str _1a60297ad_Str(_1a6029406_Map* _self_);
inline jule::Bool _1a6029aee_Equal(jule::Ptr<_1a6029406_Map> _self_, jule::Ptr<_1a601a64a_TypeKind> _69318_other);
inline jule::Str _1a602a43a_Str(_1a602a083_Arr* _self_);
inline jule::Bool _1a602a77b_Equal(jule::Ptr<_1a602a083_Arr> _self_, jule::Ptr<_1a601a64a_TypeKind> _72118_other);
inline jule::Str _1a602ae0d_Str(_1a602aa56_Ptr* _self_);
inline jule::Bool _1a602b24e_Equal(jule::Ptr<_1a602aa56_Ptr> _self_, jule::Ptr<_1a601a64a_TypeKind> _74518_other);
inline jule::Bool _1a602b5c3_IsUnsafe(_1a602aa56_Ptr* _self_);
inline void _1a602d2b7_pushErr(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa2d51c4_Token> _83523_token, jule::Str _83538_fmt, jule::Slice<jule::Any> _83551_args);
inline void _1a602d4b5_allowBuiltin(_1a602ca47_typeChecker* _self_);
inline void _1a602d6b3_disallowBuiltin(_1a602ca47_typeChecker* _self_);
inline void _1bcd0a7ec_pushReference(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa31e373_StructIns>* _84737_t);
inline void _1bcd0d1c3_pushReference(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa345047_Trait>* _84737_t);
inline void _1a602dc24_pushReferenceByKind(_1a602ca47_typeChecker* _self_, jule::Ptr<_1a601a64a_TypeKind>* _85740_k);
inline void _1a602e142_pushCycleError(_1a602ca47_typeChecker* _self_, jule::Any _86826_def1, jule::Any _86837_def2, _1ed486d49_StrBuilder* _86853_message);
inline jule::Bool _1a602e53d_checkCrossCycle(_1a602ca47_typeChecker* _self_, jule::Any _89027_decl, _1ed486d49_StrBuilder* _89043_message);
inline jule::Bool _1a602e939_checkIllegalCycles(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa2eac89_IdentTypeDecl>* _92435_ident, jule::Any _92462_decl);
inline jule::Trait _1a602ed35_fromTypeAlias(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa2eac89_IdentTypeDecl>* _97430_decl, jule::Ptr<_1a6019858_TypeAlias>* _97457_ta);
inline jule::Ptr<_1aa347753_Enum> _1a6030231_fromEnum(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa2eac89_IdentTypeDecl>* _105125_decl, jule::Ptr<_1aa347753_Enum>* _105152_e);
inline jule::Ptr<_1aa348e5d_TypeEnum> _1a603062c_fromTypeEnum(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa2eac89_IdentTypeDecl>* _106329_decl, jule::Ptr<_1aa348e5d_TypeEnum>* _106356_e);
inline jule::Ptr<_1aa345047_Trait> _1a6030a28_fromTrait(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa2eac89_IdentTypeDecl>* _107526_decl, jule::Ptr<_1aa345047_Trait>* _107553_t);
inline jule::Bool _1a6030e24_checkStructIns(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa31e373_StructIns>* _108835_ins, jule::Ptr<_1aa2d51c4_Token>* _108857_errorToken);
inline void _1a60311cc_appendUsedStructReference(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa31b518_Struct>* _110946_s);
inline jule::Ptr<_1aa31e373_StructIns> _1a60315c8_buildStructInstance(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa2eac89_IdentTypeDecl>* _112240_decl, jule::Ptr<_1aa31b518_Struct>* _112267_s);
inline jule::Ptr<_1aa31e373_StructIns> _1a60319c4_fromStruct(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa2eac89_IdentTypeDecl>* _117031_decl, jule::Ptr<_1aa31b518_Struct>* _117058_s);
inline jule::Trait _1a6031d15_getDef(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa2eac89_IdentTypeDecl>* _122827_decl);
inline jule::Trait _1a6032156_buildIdent(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa2eac89_IdentTypeDecl> _128930_decl);
inline jule::Trait _1a6032497_buildSubIdent(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa2eb053_SubIdentTypeDecl> _129333_decl);
inline jule::Ptr<_1a602728e_Sptr> _1a60327d8_buildSptrFromType(_1a602ca47_typeChecker* _self_, jule::Ptr<_1a601a64a_TypeKind>* _132738_elem);
inline jule::Ptr<_1a602728e_Sptr> _1a6032b29_buildSptr(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa2eb729_SptrTypeDecl> _134729_decl);
inline jule::Ptr<_1a602aa56_Ptr> _1a6032e6a_buildPtrFromType(_1a602ca47_typeChecker* _self_, jule::Ptr<_1a601a64a_TypeKind>* _135637_elem);
inline jule::Ptr<_1a602aa56_Ptr> _1a60332ab_buildPtr(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa2ec1a8_PtrTypeDecl> _137128_decl);
inline jule::Ptr<_1a6027c62_Slc> _1a60335ec_buildSlc(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa2ebaae_SlcTypeDecl> _138828_decl);
inline jule::Ptr<_1a602a083_Arr> _1a603393d_buildArr(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa2ec94a_ArrTypeDecl> _140928_decl);
inline jule::Ptr<_1a6029406_Map> _1a6033c7e_buildMap(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa2ed198_MapTypeDecl> _145828_decl);
inline jule::Ptr<_1a6028856_Tuple> _1a60340c0_buildTuple(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa2ebdab_TupleTypeDecl> _148230_decl);
inline jule::Bool _1a6034411_checkFuncTypes(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa334597_FnIns>* _149535_f);
inline jule::Ptr<_1aa334597_FnIns> _1a6034752_buildFunc(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa30c33e_FnDecl> _151329_decl);
inline jule::Trait _1a6034a93_buildByNamespace(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa2eb42c_NamespaceTypeDecl> _154336_decl);
inline jule::Ptr<_1a601a64a_TypeKind> _1a6034dd4_build(_1a602ca47_typeChecker* _self_, jule::Any* _156726_declKind);
inline jule::Ptr<_1a601a64a_TypeKind> _1a6035225_checkDecl(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa2ea67e_TypeDecl>* _165530_decl);
inline jule::Bool static__1a6035b71_prim(jule::Str* _168218_ident, jule::Ptr<_1a6023763_Prim> _168230_t);
inline jule::Bool static__1a6035ee5_exist(jule::Str* _168619_ident, jule::Ptr<_1a601a64a_TypeKind>* _168636_k);
inline void _1aa851025_stop(_1aa850871_scopeParser* _self_);
inline jule::Bool _1aa8512ab_stopped(_1aa850871_scopeParser* _self_);
inline jule::Bool _1aa851542_finished(_1aa850871_scopeParser* _self_);
inline jule::Bool _1aa8517c8_isLastSt(_1aa850871_scopeParser* _self_);
inline void _1aa851b3b_pushErr(_1aa850871_scopeParser* _self_, jule::Ptr<_1aa2d51c4_Token> _18823_token, jule::Str _18838_fmt);
inline void _1aa851e9e_pushSuggestion(_1aa850871_scopeParser* _self_, jule::Str _19330_fmt, jule::Slice<jule::Any> _19343_args);
inline void _1aa852257_insertAsNext(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _19733_tokens);
inline jule::Ptr<_1aa84eed0_stmt> _1aa8524dd_next(_1aa850871_scopeParser* _self_);
inline jule::Ptr<_1aa30a6a0_ScopeTree> _1aa8528d9_buildScope(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _20731_tokens, jule::Ptr<_1aa2d51c4_Token> _20753_end);
inline jule::Ptr<_1aa30d4e9_VarDecl> _1aa852c2a_buildVarSt(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _21831_tokens);
inline jule::Ptr<_1aa30d8c3_RetSt> _1aa85306b_buildRetSt(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _22630_tokens);
inline jule::Ptr<_1aa30e143_Iter> _1aa8533ac_buildWhileNextIter(_1aa850871_scopeParser* _self_, jule::Ptr<_1aa84eed0_stmt>* _23739_s);
inline jule::Ptr<_1aa30e96d_WhileKind> _1aa8536ed_buildWhileIterKind(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _28239_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>> _1aa853a3e_getRangeKindKeysTokens(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _28843_toks);
inline jule::Ptr<_1aa30d4e9_VarDecl> _1aa853d80_buildRangeKindKey(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _29438_tokens);
inline jule::Slice<jule::Ptr<_1aa30d4e9_VarDecl>> _1aa8541c1_buildRangeKindKeys(_1aa850871_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>>* _32039_parts);
inline void _1aa854534_setupRangeKindKeysPlain(_1aa850871_scopeParser* _self_, jule::Ptr<_1aa310375_RangeKind>* _32844_rng, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _32866_tokens);
inline void _1aa854897_setupRangeKindKeysExplicit(_1aa850871_scopeParser* _self_, jule::Ptr<_1aa310375_RangeKind>* _34347_rng, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _34369_tokens);
inline void _1aa854c0a_setupRangeKindKeys(_1aa850871_scopeParser* _self_, jule::Ptr<_1aa310375_RangeKind>* _35239_rng, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _35261_tokens);
inline jule::Ptr<_1aa310375_RangeKind> _1aa8551b1_buildRangeIterKind(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _36039_var_tokens, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _3618_exprTokens, jule::Ptr<_1aa2d51c4_Token>* _36135_inToken);
inline jule::Any _1aa8555ac_buildCommonIterKind(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _37640_tokens, jule::Ptr<_1aa2d51c4_Token>* _37659_err_tok);
inline jule::Ptr<_1aa30e143_Iter> _1aa8558ed_buildCommonIter(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _40335_tokens);
inline jule::Ptr<_1aa30e143_Iter> _1aa855c3e_buildIterSt(_1aa850871_scopeParser* _self_, jule::Ptr<_1aa84eed0_stmt>* _43332_st);
inline jule::Ptr<_1aa31074e_BreakSt> _1aa856080_buildBreakSt(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _44033_tokens);
inline jule::Ptr<_1aa310b28_ContSt> _1aa8563c1_buildContSt(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _45832_tokens);
inline jule::Ptr<_1aa3110ce_If> _1aa856712_buildIf(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _47628_tokens);
inline jule::Ptr<_1aa3114a8_Else> _1aa856a53_buildElse(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _50930_tokens);
inline jule::Ptr<_1aa31195e_Conditional> _1aa856d94_buildIfElseChain(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _53336_tokens);
inline jule::Ptr<_1aa2ee9b3_Expr> _1aa8571d5_buildCoCallSt(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _55633_tokens);
inline jule::Ptr<_1aa30813c_GotoSt> _1aa857526_buildGotoSt(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _57232_tokens);
inline jule::Ptr<_1aa308439_FallSt> _1aa857867_buildFallSt(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _59232_tokens);
inline jule::Ptr<_1aa31219b_TypeAliasDecl> _1aa857ba8_buildTypeAliasSt(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _60237_tokens);
inline void _1aa858181_pushCaseExpr(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _60832_tokens, jule::Ptr<_1aa2d51c4_Token> _60854_token, jule::Bool _6093_typeMatch, jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>>* _60925_exprs);
inline __jule_tuple_sx_1aa2ee9b3_Expr__jule_tuple_bool _1aa858637_buildCaseExprs(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _63135_tokens, jule::Ptr<_1aa2d51c4_Token>* _63158_colon, jule::Bool _63173_typeMatch);
inline jule::Ptr<_1aa30a6a0_ScopeTree> _1aa858978_buildCaseScope(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _67335_tokens);
inline __jule_tuple_x_1aa312652_Case__jule_tuple_bool _1aa858d74_buildCase(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _70030_tokens, jule::Bool _70048_typeMatch);
inline __jule_tuple_sx_1aa312652_Case__jule_tuple_x_1aa3114a8_Else _1aa859270_buildCases(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _71530_tokens, jule::Bool _71548_typeMatch);
inline jule::Ptr<_1aa312e6b_MatchCase> _1aa8595b1_buildMatchCase(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _74934_tokens);
inline jule::Ptr<_1aa30a6a0_ScopeTree> _1aa859902_buildScopeSt(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _78232_tokens);
inline jule::Ptr<_1aa307c63_LabelSt> _1aa859c43_buildLabelSt(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _82533_tokens);
inline __jule_tuple__1aa309cdc_StmtData__jule_tuple_bool _1aa85a084_buildIdSt(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _84030_tokens);
inline jule::Ptr<_1aa86aa01_assignInfo> _1aa85a3c5_buildAssignInfo(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _85436_tokens);
inline jule::Ptr<_1aa308a99_AssignLeft> _1aa85a716_buildAssignL(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _89933_tokens);
inline jule::Slice<jule::Ptr<_1aa308a99_AssignLeft>> _1aa85aa57_buildAssignLs(_1aa850871_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>>* _91034_parts);
inline __jule_tuple__1aa309cdc_StmtData__jule_tuple_bool _1aa85ad98_buildPlainAssign(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _91937_tokens);
inline jule::Bool _1aa85b294_buildDeclAssign1(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _96937_lefts, jule::Ptr<_1aa30912c_AssignSt>* _96959_assign);
inline __jule_tuple_x_1aa30912c_AssignSt__jule_tuple_bool _1aa85b5d5_buildDeclAssign(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _101435_tokens);
inline __jule_tuple__1aa309cdc_StmtData__jule_tuple_bool _1aa85b926_buildAssignSt(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _104834_tokens);
inline jule::Ptr<_1aa300387_UseExpr> _1aa85bc67_buildUseExpr(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _106133_tokens);
inline jule::Any _1aa85c0a8_buildConstSt(_1aa850871_scopeParser* _self_, jule::Ptr<_1aa84eed0_stmt>* _107433_st);
inline jule::Any _1aa85c3e9_buildSt(_1aa850871_scopeParser* _self_, jule::Ptr<_1aa84eed0_stmt>* _109928_st);
inline void _1aa85c75c_build(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _116326_tokens, jule::Ptr<_1aa30a6a0_ScopeTree>* _116349_s);
inline void _1aa85dab0_pushErr(_1aa85d2da_exprBuilder* _self_, jule::Ptr<_1aa2d51c4_Token> _4523_token, jule::Str _4538_fmt, jule::Slice<jule::Any> _4551_args);
inline void _1aa85de23_pushSuggestion(_1aa85d2da_exprBuilder* _self_, jule::Str _5030_fmt, jule::Slice<jule::Any> _5043_args);
inline jule::Ptr<_1aa3005a7_TupleExpr> _1aa85e264_buildTuple(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>>* _5431_parts);
inline jule::Ptr<_1aa30094d_LitExpr> _1aa85e5a5_buildLit(_1aa85d2da_exprBuilder* _self_, jule::Ptr<_1aa2d51c4_Token> _6424_token);
inline jule::Any _1aa85ec37_buildSingle(_1aa85d2da_exprBuilder* _self_, jule::Ptr<_1aa2d51c4_Token> _7531_token);
inline jule::Ptr<_1aa3012cd_IdentExpr> _1aa860078_buildBindIdent(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _9235_tokens);
inline jule::Ptr<_1aa301a70_UnaryExpr> _1aa8603b9_buildUnary(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _11130_tokens);
inline jule::Ptr<_1aa302ac6_SubIdentExpr> _1aa86070a_buildObjSubIdent(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _13236_tokens);
inline jule::Ptr<_1aa3026ec_NsSelectionExpr> _1aa860a4b_buildNsSubIdent(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _14736_tokens);
inline jule::Ptr<_1aa2ea67e_TypeDecl> _1aa860d8c_buildType(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _17230_tokens);
inline jule::Any _1aa8611cd_buildSubIdent(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _18634_tokens);
inline jule::Ptr<_1aa301e49_VariadicExpr> _1aa86151e_buildVariadic(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _20833_tokens);
inline jule::Ptr<_1aa2eec7c_RangeExpr> _1aa861860_buildBetweenParentheses(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _21743_tokens);
inline jule::Ptr<_1aa302323_CastExpr> _1aa861ba1_tryBuildCast(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _22933_tokens);
inline void _1aa8620be_pushArg(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>>* _30328_args, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _30347_tokens, jule::Ptr<_1aa2d51c4_Token> _30365_err_token);
inline jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>> _1aa862410_buildArgs(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _31229_tokens);
inline jule::Ptr<_1aa3036dc_FnCallExpr> _1aa862c07_buildFnCall(_1aa85d2da_exprBuilder* _self_, jule::Ptr<_1aa2d51c4_Token>* _37832_token, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _37852_expr, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _37873_args);
inline jule::Any _1aa863048_buildParenthesesRange(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _38642_tokens);
inline jule::Ptr<_1aa300d27_UnsafeExpr> _1aa863389_buildUnsafeExpr(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _40835_tokens);
inline jule::Ptr<_1aa30c33e_FnDecl> _1aa8636ca_buildAnonFn(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _42332_tokens);
inline jule::Any _1aa863a1b_buildUnsafe(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _43232_tokens);
inline void _1aa863e39_pushRangeLitPart(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _44236_part, jule::Ptr<_1aa2d51c4_Token> _4433_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>>* _44328_parts);
inline jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>> _1aa86427a_getBraceRangeLitExprParts(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _45345_tokens);
inline jule::Ptr<_1aa3041d2_FieldExprPair> _1aa8645bb_buildFieldExprPair(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _49538_tokens);
inline jule::Ptr<_1aa2ee9b3_Expr> _1aa86490c_buildStructLitExpr(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _50839_tokens);
inline jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>> _1aa864c4d_buildStructLitExprs(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _52340_tokens);
inline jule::Ptr<_1aa304a0c_StructLit> _1aa86508e_buildTypedStructLiteral(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _53643_tokens);
inline jule::Ptr<_1aa2ee9b3_Expr> _1aa8653d0_buildBraceLitPart(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _56038_tokens);
inline jule::Ptr<_1aa304eb3_BraceLit> _1aa865721_buildBraceLit(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _57734_tokens);
inline jule::Any _1aa865a62_buildBraceRange(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _59636_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>> _1aa865da3_getEnumerableParts(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _64838_tokens);
inline jule::Ptr<_1aa306019_SliceExpr> _1aa8661e4_buildSlice(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _65530_tokens);
inline jule::Ptr<_1aa306976_IndexingExpr> _1aa86669a_buildIndexing(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _67733_exprTokens, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _6787_tokens, jule::Ptr<_1aa2d51c4_Token> _67829_errorToken);
inline jule::Ptr<_1aa3070d6_SlicingExpr> _1aa866cb6_buildSlicing(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _70133_exprTokens, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _70160_start, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _7028_to, jule::Ptr<_1aa2d51c4_Token>* _70227_errorToken, jule::Ptr<_1aa2d51c4_Token> _70251_end);
inline jule::Any _1aa867107_buildBracketRange(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _71737_tokens);
inline jule::Any _1aa867448_buildExclRight(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _74235_tokens);
inline jule::Any _1aa867789_buildData(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _76030_tokens);
inline jule::Any _1aa867b85_buildBinary(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _82932_tokens, jule::I32 _82950_i);
inline jule::Any _1aa867ec6_build(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _85426_tokens);
inline jule::Any _1aa868317_buildKind(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _86530_tokens);
inline jule::Ptr<_1aa2ee9b3_Expr> _1aa868658_buildFromTokens(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _87635_tokens);
inline void _1aa86e230_stop(_1aa86de00_parser* _self_);
inline jule::Bool _1aa86e4b6_stopped(_1aa86de00_parser* _self_);
inline void _1aa86e8d4_pushErr(_1aa86de00_parser* _self_, jule::Ptr<_1aa2d51c4_Token> _20823_token, jule::Str _20838_fmt, jule::Slice<jule::Any> _20851_args);
inline void _1aa86ec47_pushSuggestion(_1aa86de00_parser* _self_, jule::Str _21330_fmt, jule::Slice<jule::Any> _21343_args);
inline jule::Ptr<_1aa2ee9b3_Expr> _1aa870088_buildExpr(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _21731_tokens);
inline jule::Ptr<_1aa2e9a9b_Directive> _1aa8703c9_buildDirective(_1aa86de00_parser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _22134_tokens);
inline void _1aa870682_pushDirective(_1aa86de00_parser* _self_, jule::Ptr<_1aa2e9a9b_Directive> _23633_d);
inline jule::Ptr<_1aa30a6a0_ScopeTree> _1aa870a7d_buildScope(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _24932_tokens, jule::Ptr<_1aa2d51c4_Token> _24954_end);
inline __jule_tuple_x_1aa2ea67e_TypeDecl__jule_tuple_bool _1aa871034__buildType(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _25939_tokens, jule::I32* _2607_i, jule::Bool _26016_err);
inline __jule_tuple_x_1aa2ea67e_TypeDecl__jule_tuple_bool _1aa8714da_buildType(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _27138_tokens, jule::I32* _2727_i, jule::Bool _27216_err);
inline jule::Ptr<_1aa31219b_TypeAliasDecl> _1aa87182b_buildTypeAliasDecl(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _28140_tokens);
inline void _1aa871b8e_buildVarTypeAndExpr(jule::Ptr<_1aa86de00_parser> _self_, jule::Ptr<_1aa30d4e9_VarDecl>* _32141_v, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _32159_tokens);
inline void _1aa872002_buildVarCommon(jule::Ptr<_1aa86de00_parser> _self_, jule::Ptr<_1aa30d4e9_VarDecl>* _35436_v, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _35453_tokens);
inline void _1aa872365_buildVarBegin(_1aa86de00_parser* _self_, jule::Ptr<_1aa30d4e9_VarDecl>* _37034_v, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _37052_tokens);
inline jule::Ptr<_1aa30d4e9_VarDecl> _1aa8726a6_buildVar(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _39829_tokens);
inline jule::Ptr<_1aa307889_GenericDecl> _1aa8729e7_buildGeneric(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _41734_tokens);
inline jule::Slice<jule::Ptr<_1aa307889_GenericDecl>> _1aa872de3_buildGenerics(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _45435_tokens, jule::Ptr<_1aa2d51c4_Token>* _45454_errorToken);
inline jule::Ptr<_1aa30addc_ParamDecl> _1aa873234_buildSelfParam(_1aa86de00_parser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _47434_tokens);
inline void _1aa873652_paramTypeBegin(_1aa86de00_parser* _self_, jule::Ptr<_1aa30addc_ParamDecl>* _51435_param, jule::I32* _51459_i, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _51468_tokens);
inline void _1aa8739b5_buildParamType(jule::Ptr<_1aa86de00_parser> _self_, jule::Ptr<_1aa30addc_ParamDecl>* _52936_param, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _52960_tokens);
inline void _1aa873d28_buildParamBody(jule::Ptr<_1aa86de00_parser> _self_, jule::Ptr<_1aa30addc_ParamDecl>* _54236_param, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _54259_tokens);
inline jule::Ptr<_1aa30addc_ParamDecl> _1aa874169_buildParam(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _56231_tokens);
inline void _1aa874422_checkParams(_1aa86de00_parser* _self_, jule::Slice<jule::Ptr<_1aa30addc_ParamDecl>>* _60532_params);
inline jule::Slice<jule::Ptr<_1aa30addc_ParamDecl>> _1aa87481d_buildParams(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _62533_tokens, jule::Bool _62551_method);
inline __jule_tuple_x_1aa2ed572_RetTypeDecl__jule_tuple_bool _1aa874c19_buildMultiRetType(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _65539_tokens, jule::I32* _65562_i);
inline __jule_tuple_x_1aa2ed572_RetTypeDecl__jule_tuple_bool _1aa875115_buildRetType(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _72634_tokens, jule::I32* _72657_i);
inline jule::Ptr<_1aa30c33e_FnDecl> _1aa8755bb_buildFnPrototype(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _76538_tokens, jule::I32* _76561_i, jule::Bool _76569_method);
inline jule::Ptr<_1aa30c33e_FnDecl> _1aa875a72_buildFn(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _84229_tokens, jule::Bool _84247_method, jule::Bool _84261_prototype);
inline jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _1aa875db3_getUseDeclSelectors(_1aa86de00_parser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _87639_tokens);
inline void _1aa876226_buildBindUseDecl(_1aa86de00_parser* _self_, jule::Ptr<_1aa313785_UseDecl>* _90137_decl, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _90154_tokens);
inline jule::Str _1aa876567_useDeclTokstoa(_1aa86de00_parser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _91431_tokens);
inline void _1aa8768ca_buildStdUseDecl(_1aa86de00_parser* _self_, jule::Ptr<_1aa313785_UseDecl>* _92936_decl, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _92956_tokens);
inline void _1aa876c3d_buildIdentUseDecl(_1aa86de00_parser* _self_, jule::Ptr<_1aa313785_UseDecl>* _98738_decl, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _98758_tokens);
inline void _1aa8770a1_parseUseDecl(_1aa86de00_parser* _self_, jule::Ptr<_1aa313785_UseDecl>* _103533_decl, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _103553_tokens);
inline jule::Ptr<_1aa313785_UseDecl> _1aa87749c_buildUseDecl(_1aa86de00_parser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _106932_tokens, jule::Bool _106950_binded);
inline jule::Ptr<_1aa2ea67e_TypeDecl> _1aa877898_buildTypeEnumItemKind(jule::Ptr<_1aa86de00_parser> _self_, jule::I32* _108343_i, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _108356_tokens);
inline jule::Slice<jule::Ptr<_1aa315127_TypeEnumItemDecl>> _1aa877bd9_buildTypeEnumItems(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _112040_tokens);
inline jule::Ptr<_1aa315787_TypeEnumDecl> _1aa87802a_buildTypeEnumDecl(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _114439_tokens);
inline jule::Ptr<_1aa2ee9b3_Expr> _1aa878426_buildEnumItemExpr(jule::Ptr<_1aa86de00_parser> _self_, jule::I32* _117139_i, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _117152_tokens);
inline jule::Slice<jule::Ptr<_1aa313c3b_EnumItemDecl>> _1aa878767_buildEnumItems(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _120336_tokens);
inline jule::Ptr<_1aa3147ec_EnumDecl> _1aa878aa8_buildEnumDecl(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _124035_tokens);
inline jule::Any _1aa878de9_buildNodeEnumDecl(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _128539_tokens);
inline jule::Ptr<_1aa315a51_FieldDecl> _1aa87923a_buildField(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _129431_tokens);
inline jule::Slice<jule::Ptr<_1aa315a51_FieldDecl>> _1aa87957b_buildStructDeclFields(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _134342_tokens);
inline jule::Ptr<_1aa316447_StructDecl> _1aa8798bc_buildStructDecl(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _135437_tokens);
inline void _1aa879b75_checkMethodReceiver(_1aa86de00_parser* _self_, jule::Ptr<_1aa30c33e_FnDecl>* _140236_f);
inline void _1aa879ed8_buildTraitBody(jule::Ptr<_1aa86de00_parser> _self_, jule::Ptr<_1aa316b84_TraitDecl>* _142136_t, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _142155_tokens);
inline jule::Ptr<_1aa316b84_TraitDecl> _1aa87a329_buildTraitDecl(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _145336_tokens);
inline jule::Ptr<_1aa30c33e_FnDecl> _1aa87a66a_buildBindFn(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _148332_tokens);
inline jule::Ptr<_1aa30d4e9_VarDecl> _1aa87a9ab_buildBindVar(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _149333_tokens);
inline jule::Ptr<_1aa316447_StructDecl> _1aa87acec_buildBindStruct(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _150636_tokens);
inline jule::Ptr<_1aa31219b_TypeAliasDecl> _1aa87b13d_buildBindTypeAlias(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _152039_tokens);
inline jule::Ptr<_1aa313785_UseDecl> _1aa87b47e_buildBindUse(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _153033_tokens);
inline jule::Any _1aa87b7c0_buildBind(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _154131_tokens);
inline jule::Ptr<_1aa30c33e_FnDecl> _1aa87bb11_getMethod(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _156531_tokens);
inline void _1aa87be74_parseImplBody(jule::Ptr<_1aa86de00_parser> _self_, jule::Ptr<_1aa3172e4_Impl>* _159435_ipl, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _159452_tokens);
inline jule::Ptr<_1aa3172e4_Impl> _1aa87c2b5_buildImpl(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _162730_tokens);
inline jule::Any _1aa87c606_buildNodeData(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _169835_tokens);
inline void _1aa87c8ae_applyFnMeta(_1aa86de00_parser* _self_, jule::Ptr<_1aa30c33e_FnDecl>* _173132_f);
inline void _1aa87cb67_applyMeta(_1aa86de00_parser* _self_, _1aa2e967d_Node* _173630_node);
inline void _1aa87ce20_pushUseDecl(jule::Ptr<_1aa86de00_parser> _self_, jule::Ptr<_1aa313785_UseDecl>* _176133_decl);
inline jule::Bool _1aa87d261_pushMetaNodes(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _176935_tokens);
inline _1aa2e967d_Node _1aa87d5a2_parseNode(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _178931_st);
inline void _1aa87d85a_appendNode(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _181332_st);
inline void _1aa87dd33_removeRange(_1aa86de00_parser* _self_, jule::I32 _182327_i, jule::U32 _182335_id, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _182349_tokens, jule::Slice<jule::I32>* _182372_ranges);
inline void _1aa87e251_pushWrongOrderCloseErr(_1aa86de00_parser* _self_, jule::Ptr<_1aa2d51c4_Token>* _183539_t, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _183551_tokens, jule::Slice<jule::I32>* _183570_ranges);
inline void _1aa87e729_pushRangeClose(_1aa86de00_parser* _self_, jule::Ptr<_1aa2d51c4_Token> _184630_t, jule::U32 _184641_left, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _184657_tokens, jule::Slice<jule::I32>* _184680_ranges);
inline void _1aa87e9d2_checkRanges(_1aa86de00_parser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _186428_tokens);
inline void _1aa87ec8a_parse(jule::Ptr<_1aa86de00_parser> _self_, jule::Ptr<_1aa2da95a_File>* _189527_f);
inline void _1aa8815e9_pushErr(_1aa881022_typeBuilder* _self_, jule::Ptr<_1aa2d51c4_Token> _4123_token, jule::Str _4138_fmt);
inline void _1aa88195c_pushSuggestion(_1aa881022_typeBuilder* _self_, jule::Str _4830_fmt, jule::Slice<jule::Any> _4843_args);
inline jule::Ptr<_1aa2ea67e_TypeDecl> _1aa881be3_buildNamespace(_1aa881022_typeBuilder* _self_);
inline jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>> _1aa881e79_buildGenerics(_1aa881022_typeBuilder* _self_);
inline jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>> _1aa882210_identGenerics(_1aa881022_typeBuilder* _self_);
inline jule::Ptr<_1aa2ea67e_TypeDecl> _1aa882496_buildIdent(_1aa881022_typeBuilder* _self_);
inline jule::Ptr<_1aa2ea67e_TypeDecl> _1aa88272c_buildCppLink(_1aa881022_typeBuilder* _self_);
inline jule::Ptr<_1aa2ea67e_TypeDecl> _1aa8829b3_buildFn(_1aa881022_typeBuilder* _self_);
inline jule::Ptr<_1aa2ea67e_TypeDecl> _1aa882c49_buildPtr(_1aa881022_typeBuilder* _self_);
inline jule::Ptr<_1aa2ea67e_TypeDecl> _1aa882ed0_buildSptr(_1aa881022_typeBuilder* _self_);
inline jule::Ptr<_1aa2ea67e_TypeDecl> _1aa883266_buildSlc(_1aa881022_typeBuilder* _self_);
inline jule::Ptr<_1aa2ea67e_TypeDecl> _1aa8834ec_buildArr(_1aa881022_typeBuilder* _self_);
inline jule::Ptr<_1aa2ea67e_TypeDecl> _1aa883783_buildMap(_1aa881022_typeBuilder* _self_);
inline jule::Ptr<_1aa2ea67e_TypeDecl> _1aa883a19_buildEnumerable(_1aa881022_typeBuilder* _self_);
inline jule::Ptr<_1aa2ea67e_TypeDecl> _1aa883ca0_step(_1aa881022_typeBuilder* _self_);
inline __jule_tuple_x_1aa2ea67e_TypeDecl__jule_tuple_bool _1aa884036_build(_1aa881022_typeBuilder* _self_);
inline void _1a761c5a8_pushErr(_1a761c025_directiveEval* _self_, jule::Ptr<_1aa2d51c4_Token> _2123_t, jule::Str _2134_fmt, jule::Slice<jule::Any> _2147_args);
inline jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>> _1a761c9a4_splitOperans(_1a761c025_directiveEval* _self_, jule::U32 _3328_op, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _3346_tokens);
inline jule::Bool _1a761cce5_evalDirectiveIdent(_1a761c025_directiveEval* _self_, jule::Str _6430_ident);
inline jule::Bool _1a761d136_evalDirectivePart(_1a761c025_directiveEval* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _7837_part);
inline jule::Bool _1a761d3bc_eval(_1a761c025_directiveEval* _self_);
inline jule::Ptr<_1aa885015_JuleImporter> static__1aa885444_New(_1a761aa4b_CompileInfo _5816_info);
inline jule::Slice<jule::Ptr<_1aa39b0ae_ImportInfo>> _1aa8856ca_AllPackages(_1aa885015_JuleImporter* _self_);
inline void _1aa885b1a_SetModPath(_1aa885015_JuleImporter* _self_, jule::Str _7526_path);
inline jule::Str _1aa885da1_GetModPath(_1aa885015_JuleImporter* _self_);
inline jule::Str _1aa8861e2_ModById(_1aa885015_JuleImporter* _self_, jule::I32 _8319_id);
inline jule::Ptr<_1aa39b0ae_ImportInfo> _1aa886533_GetImport(_1aa885015_JuleImporter* _self_, jule::Str _8725_path);
inline __jule_tuple_sx_1aa2e876a_AST__jule_tuple_s_1ada72b17_Log _1aa88692e_ImportPackage(_1aa885015_JuleImporter* _self_, jule::Str _9629_path, jule::Bool _9640_updateMod);
inline void _1aa886bd7_Imported(_1aa885015_JuleImporter* _self_, jule::Ptr<_1aa39b0ae_ImportInfo> _15328_imp);
inline __jule_tuple_bool__jule_tuple_s_1ada72b17_Log _1aa887116_isPassBuildDirectives(_1aa885015_JuleImporter* _self_, jule::Ptr<_1aa2e876a_AST>* _17942_file);
inline jule::Ptr<_1aa88b978_ExprInspector> static__1aa88bd1e_New(void);
inline void _1aa88c0c7_args(_1aa88b978_ExprInspector* _self_, jule::Slice<jule::Any> _5724_args);
inline void _1aa88c380_inspect(_1aa88b978_ExprInspector* _self_, jule::Any* _6328_m);
inline void _1aa88c6e3_Inspect(_1aa88b978_ExprInspector* _self_, jule::Any* _19328_m, jule::Fn<void,jule::Any*> _19342_f);
inline jule::Ptr<_1ab1a3190_ObjectDeadCode> static__1ab1a3679_new(jule::Ptr<_1aa887941_IR>* _3621_ir);
inline jule::Bool _1bc91b155_isLive(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_, jule::Ptr<_1aa31e373_StructIns>* _4227_t);
inline jule::Bool _1bc92258a_isLive(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_, jule::Ptr<_1aa334597_FnIns>* _4227_t);
inline jule::Bool _1bc94811b_isLive(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_, jule::Ptr<_1aa345047_Trait>* _4227_t);
inline jule::Bool _1bc953214_isLive(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_, jule::Ptr<_1aa3e4d3e_Var>* _4227_t);
inline void _1bc91baa1_pushLive(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_, jule::Ptr<_1aa31e373_StructIns> _6232_t);
inline void _1bc922986_pushLive(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_, jule::Ptr<_1aa334597_FnIns> _6232_t);
inline void _1bc948a12_pushLive(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_, jule::Ptr<_1aa345047_Trait> _6232_t);
inline void _1bc95349a_pushLive(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_, jule::Ptr<_1aa3e4d3e_Var> _6232_t);
inline void _1ab1a402b_pushStructAsLive(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_, jule::Ptr<_1aa31e373_StructIns>* _7538_s);
inline void _1ab1a42d4_setReferencesAsLive(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_, jule::Ptr<_1aa337732_ReferenceStack>* _13041_rs);
inline void _1ab1a458c_inits(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_, jule::Ptr<_1aa39ded5_Package>* _18027_pkg);
inline void _1ab1a4845_collectLivePackage(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_, jule::Ptr<_1aa39ded5_Package>* _19440_pkg);
inline void _1ab1a4a43_collectLive(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_);
inline void _1ab1a4ceb_removeDeadGlobals(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>* _24839_vars);
inline void _1ab1a50a4_removeDeadFns(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1aa3315b6_Fn>>* _26035_funcs);
inline void _1ab1a535c_removeDeadStructs(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1aa31b518_Struct>>* _28139_structs);
inline void _1ab1a5615_removeDeadTraits(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1aa345047_Trait>>* _30338_traits);
inline void _1ab1a58bd_removeDeadsFile(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_, jule::Ptr<_1aa4475cd_SymbolTable>* _32437_file);
inline void _1ab1a5b76_removeDeadsPackage(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_, jule::Ptr<_1aa39ded5_Package>* _33140_pkg);
inline void _1ab1a5d74_removeDeads(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_);
inline void _1ab1a6072_elimanate(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_);
inline void _1ab1a75c3_optimizeChild(jule::Ptr<_1ab1a70a6_scopeDeadCode> _self_, jule::Ptr<_1aa378ba2_Scope>* _3935_s);
inline void _1ab1a787b_optimizeBodyChildExceptional(jule::Ptr<_1ab1a70a6_scopeDeadCode> _self_, jule::Ptr<_1aa378ba2_Scope>* _4950_s);
inline void _1ab1a7b34_optimizeBodyChild(jule::Ptr<_1ab1a70a6_scopeDeadCode> _self_, jule::Ptr<_1aa378ba2_Scope>* _5939_s);
inline void _1ab1a7ddc_optimizeExprModel(jule::Ptr<_1ab1a70a6_scopeDeadCode> _self_, jule::Any* _6839_model);
inline void _1ab1a80da_eliminateFollowed(_1ab1a70a6_scopeDeadCode* _self_);
inline void _1ab1a8393_pushGoto(jule::Ptr<_1ab1a70a6_scopeDeadCode> _self_, jule::Ptr<_1aa37b91e_GotoSt> _8929_gt);
inline void _1ab1a864b_pushLabel(jule::Ptr<_1ab1a70a6_scopeDeadCode> _self_, jule::Ptr<_1aa37b545_Label> _9930_l);
inline void _1ab1a8904_optimizeRangeIter(jule::Ptr<_1ab1a70a6_scopeDeadCode> _self_, jule::Ptr<_1aa37a9d9_RangeIter> _11238_it);
inline void _1ab1a8bac_optimizeWhileIter(jule::Ptr<_1ab1a70a6_scopeDeadCode> _self_, jule::Ptr<_1aa37a08d_WhileIter> _11738_it);
inline void _1ab1a8e65_optimizeInfIter(jule::Ptr<_1ab1a70a6_scopeDeadCode> _self_, jule::Ptr<_1aa379ad7_InfIter> _12536_it);
inline void _1ab1a921d_optimizeConditional(jule::Ptr<_1ab1a70a6_scopeDeadCode> _self_, jule::Ptr<_1aa3797da_Conditional> _12940_c);
inline void _1ab1a94c6_optimizeMatch(jule::Ptr<_1ab1a70a6_scopeDeadCode> _self_, jule::Ptr<_1aa37cdb5_Match> _14734_m);
inline void _1ab1a977e_optimizeAssign(jule::Ptr<_1ab1a70a6_scopeDeadCode> _self_, jule::Ptr<_1aa37c29e_Assign> _16535_assign);
inline void _1ab1a9a37_optimizeMultiAssign(jule::Ptr<_1ab1a70a6_scopeDeadCode> _self_, jule::Ptr<_1aa37c755_MultiAssign> _17040_assign);
inline void _1ab1a9ce0_optimizeStmt(jule::Ptr<_1ab1a70a6_scopeDeadCode> _self_, jule::Any _17933_st);
inline void _1ab1a9edd_optimizeStmts(jule::Ptr<_1ab1a70a6_scopeDeadCode> _self_);
inline _1ab1ab74d_exprDeadCode static__1ab1abb16_new(jule::Ptr<_1ab1a70a6_scopeDeadCode>* _1821_s);
inline void _1ab1abdbe_optimize(_1ab1ab74d_exprDeadCode* _self_, jule::Any* _2425_model);
inline void _1aa6021c2_pushVar(_1aa601c2c_nils* _self_, jule::Uintptr _2923_var, jule::Bool _2937_safe);
inline jule::Bool _1aa602513_removeVar(_1aa601c2c_nils* _self_, jule::Uintptr _5225_var);
inline jule::Bool _1aa602854_isSafe(_1aa601c2c_nils* _self_, jule::Uintptr _6622_var);
inline jule::Ptr<_1aa8943cb_scopeOptimizer> static__1aa894981_new(jule::Ptr<_1aa378ba2_Scope> _5120_scope);
inline void _1aa894c39_setCurrentStmt(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_, jule::Any _6335_stmt);
inline void _1aa894e37_removeCurrent(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_);
inline jule::Bool _1aa8951bd_isLastStmt(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_);
inline jule::Bool _1aa895454_isIter(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_);
inline void _1aa89570c_optimizeData(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_, jule::Ptr<_1aa44cc98_Data> _9533_d);
inline void _1aa8959b5_optimizeVar(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_, jule::Ptr<_1aa3e4d3e_Var> _12132_v);
inline void _1aa895c6d_optimizeConditional(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_, jule::Ptr<_1aa3797da_Conditional> _14240_c);
inline void _1aa89618b_buildDefaultConstantTrueCase(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_, jule::Ptr<_1aa37d8dd_Case> _21649_case, jule::I32* _21667_i, jule::Ptr<_1aa37cdb5_Match>* _21680_m);
inline void _1aa896444_optimizeMatch(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_, jule::Ptr<_1aa37cdb5_Match> _24234_m);
inline void _1aa8966ec_optimizeRangeIter(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_, jule::Ptr<_1aa37a9d9_RangeIter> _32438_it);
inline void _1aa8969a5_optimizeWhileIter(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_, jule::Ptr<_1aa37a08d_WhileIter> _36938_it);
inline jule::Bool _1aa896ce6_substr(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_, jule::Ptr<_1aa37c29e_Assign> _37527_a);
inline jule::Bool _1aa897137_strAssign(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_, jule::Ptr<_1aa37c29e_Assign> _39530_a);
inline jule::Bool _1aa897478_sliceAssign(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_, jule::Ptr<_1aa37c29e_Assign> _40632_a);
inline void _1aa897731_optimizePostfix(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_, jule::Ptr<_1aa37bce8_Postfix> _41436_postfix);
inline void _1aa8979d9_optimizeAssign(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_, jule::Ptr<_1aa37c29e_Assign> _42135_assign);
inline jule::Bool _1aa897d2a_tryOptimizeSwap(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_, jule::Ptr<_1aa37c755_MultiAssign>* _53537_assign);
inline void _1aa8980d3_optimizeMultiAssign(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_, jule::Ptr<_1aa37c755_MultiAssign> _57240_assign);
inline void _1aa89838b_optimizeRet(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_, jule::Ptr<_1aa37e47c_RetSt> _61832_r);
inline void _1aa898644_optimizeStmt(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_, jule::Any _64233_stmt);
inline void _1aa8988ec_optimizeChild(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_, jule::Ptr<_1aa378ba2_Scope> _67134_child);
inline void _1aa898aea_optimize(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_);
inline void static__1aa89b3a0_optimize(jule::Any* _3626_model);
inline void static__1aa89b68b_optimizeData(jule::Any* _4030_model, jule::Ptr<_1aa8a4287_data>* _4053_d);
inline jule::Bool _1aa89b9cc_selfCmpCond(_1aa89adc7_exprOptimizer* _self_, jule::Ptr<_1aa32372e_BinaryExprModel>* _5228_m);
inline jule::Bool _1aa89bd1d_boolCond(_1aa89adc7_exprOptimizer* _self_, jule::Ptr<_1aa32372e_BinaryExprModel>* _7625_m);
inline jule::Bool _1aa89c15e_strCond(_1aa89adc7_exprOptimizer* _self_, jule::Ptr<_1aa32372e_BinaryExprModel> _12923_m);
inline jule::Bool _1aa89c615_tryNeutralElement1(_1aa89adc7_exprOptimizer* _self_, jule::Ptr<_1aa32372e_BinaryExprModel>* _18635_m, jule::Ptr<_1a6e77584_Const> _18660_c, jule::Ptr<_1aa323234_OperandExprModel>* _18672_nc);
inline jule::Bool _1aa89c956_tryNeutralElement(_1aa89adc7_exprOptimizer* _self_, jule::Ptr<_1aa32372e_BinaryExprModel>* _23034_m);
inline void _1aa89cc0e_checkBinaryForBoundary(_1aa89adc7_exprOptimizer* _self_, jule::Ptr<_1aa32372e_BinaryExprModel>* _24539_m);
inline void _1aa89ceb7_checkBinaryForNil(_1aa89adc7_exprOptimizer* _self_, jule::Ptr<_1aa32372e_BinaryExprModel>* _29734_m);
inline void _1aa89d270_binary(_1aa89adc7_exprOptimizer* _self_, jule::Ptr<_1aa32372e_BinaryExprModel> _32922_m);
inline void _1aa89d528_unary(_1aa89adc7_exprOptimizer* _self_, jule::Ptr<_1aa323b08_UnaryExprModel> _42421_m);
inline void _1aa89d7d1_structureLit(_1aa89adc7_exprOptimizer* _self_, jule::Ptr<_1aa3244cc_StructLitExprModel> _46728_m);
inline void _1aa89da89_casting(_1aa89adc7_exprOptimizer* _self_, jule::Ptr<_1aa324d5c_CastingExprModel> _48323_m);
inline void _1aa89ddec_args(_1aa89adc7_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1aa33351e_ParamIns>> _49720_params, jule::Slice<jule::Any>* _49746_args);
inline void _1aa89e1a5_scope(_1aa89adc7_exprOptimizer* _self_, jule::Ptr<_1aa378ba2_Scope>* _51922_s);
inline void _1aa89e45d_funcCall(_1aa89adc7_exprOptimizer* _self_, jule::Ptr<_1aa32570e_FnCallExprModel> _52524_m);
inline void _1aa89e716_indexing(_1aa89adc7_exprOptimizer* _self_, jule::Ptr<_1aa32608e_IndexingExprModel> _53224_m);
inline void _1aa89e9be_anonFunc(_1aa89adc7_exprOptimizer* _self_, jule::Ptr<_1aa326545_AnonFnExprModel> _55624_m);
inline void _1aa89ebbc_do(_1aa89adc7_exprOptimizer* _self_);
inline void _1aa8a1a9d_pushVar(jule::Ptr<_1aa8a1608_dynamic> _self_, jule::Uintptr _3224_var, jule::Ptr<_1a601a64a_TypeKind> _3242_kind);
inline jule::Bool _1aa8a1dde_removeVar(_1aa8a1608_dynamic* _self_, jule::Uintptr _5525_var);
inline jule::Bool _1aa8a22da_isFits(_1aa8a1608_dynamic* _self_, jule::Uintptr _6922_var, jule::Ptr<_1a601a64a_TypeKind> _6936_kind);
inline _1aa8a3c8c_dataCheckpoint _1aa8a463e_getCheckpoint(_1aa8a4287_data* _self_);
inline void _1aa8a48e7_loadCheckpoint(_1aa8a4287_data* _self_, _1aa8a3c8c_dataCheckpoint* _3535_c);
inline void _1aa8a61ac_pushVar(_1aa8a5c17_boundary* _self_, jule::Uintptr _2423_var, jule::Any _2441_maxSize);
inline jule::Bool _1aa8a68e9_fitsMaxSize(_1aa8a5c17_boundary* _self_, jule::Uintptr _7127_var, jule::Any _7141_expr);
inline jule::Ptr<_1ab1ac870_Optimizer> static__1ab1acd26_New(jule::Ptr<_1aa887941_IR>* _2621_ir);
inline void _1ab1ad0ce_optimizeGlobal(_1ab1ac870_Optimizer* _self_, jule::Ptr<_1aa3e4d3e_Var>* _3235_v);
inline void _1ab1ad387_optimizeFunction(_1ab1ac870_Optimizer* _self_, jule::Ptr<_1aa3315b6_Fn>* _3837_func);
inline void _1ab1ad640_optimizeStruct(_1ab1ac870_Optimizer* _self_, jule::Ptr<_1aa31b518_Struct>* _4835_s);
inline void _1ab1ad8e8_optimizeGlobals(_1ab1ac870_Optimizer* _self_, jule::Ptr<_1aa39ded5_Package>* _6436_p);
inline void _1ab1adba1_optimizeFunctions(_1ab1ac870_Optimizer* _self_, jule::Ptr<_1aa39ded5_Package>* _7238_p);
inline void _1ab1ade59_optimizeStructs(_1ab1ac870_Optimizer* _self_, jule::Ptr<_1aa39ded5_Package>* _8036_p);
inline void _1ab1ae212_optimizePackage(_1ab1ac870_Optimizer* _self_, jule::Ptr<_1aa39ded5_Package>* _8836_p);
inline void _1ab1ae410_Optimize(_1ab1ac870_Optimizer* _self_);
inline void static__1ab1aeb2a_Reset(void);
inline void static__1ab1d2ba3_Print(jule::Str _1918_escape, jule::Str _1931_text);
inline void static__1ab1d56ab_LogFlat(_1ada72b17_Log* _1421_l);
inline void static__1ab1d58dc_LogError(_1ada72b17_Log* _1922_l);
inline void static__1ab1d5b1d_Log(_1ada72b17_Log* _6417_l);
inline void static__1ab1d5d4e_PrintLogs(jule::Slice<_1ada72b17_Log>* _7423_logs);
inline _1abb0027e_Time static__1abb00669_Unix(jule::U64 _9117_sec);
inline _1abb0027e_Time static__1abb00878_Now(void);
inline _1abaeeaa8_AbsTime _1abb02061_Abs(_1abb0027e_Time* _self_);
inline jule::Ptr<_1aba2699c_scopeCoder> static__1aba27195_new(jule::Ptr<_1abb0aab4_ObjectCoder>* _7321_oc);
inline void _1bd742189_iterHead(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37a9d9_RangeIter>* _8029_it, jule::Bool* _8041_ref, jule::Str _8052_begin);
inline void _1aba2786b_rangeIndexIter(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37a9d9_RangeIter>* _12936_it);
inline void _1aba27b24_rangeHashmapIter(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37a9d9_RangeIter>* _19638_it);
inline void _1aba27dcc_strRuneIter(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa600610_StrRuneIter> _24332_it);
inline void _1aba28185_ifCase(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa3790c0_If> _35127_i);
inline void _1aba2843d_conditional(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa3797da_Conditional> _36032_c);
inline void _1aba286e6_infIter(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa379ad7_InfIter> _38028_it);
inline void _1aba2899e_whileIter(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37a08d_WhileIter> _39730_it);
inline void _1aba28c57_rangeIter(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37a9d9_RangeIter> _43630_it);
inline void _1aba29010_cont(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37ad6e_ContSt> _44921_c);
inline void _1aba292b8_label(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37b545_Label> _45422_l);
inline void _1aba29571_gotoSt(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37b91e_GotoSt> _45923_gt);
inline void _1aba29829_postfix(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37bce8_Postfix> _46428_p);
inline void _1aba29ad2_assignLeft(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Any* _47132_model);
inline void _1aba29d8a_shl(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37c29e_Assign> _49024_a);
inline void _1aba2a143_shr(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37c29e_Assign> _49624_a);
inline void _1aba2a3eb_divByZeroAssign(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37c29e_Assign> _50236_a);
inline void _1aba2a8c4_operatorOverloadingAssign(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa31e373_StructIns>* _50847_s, jule::Ptr<_1aa323234_OperandExprModel>* _50873_l, jule::Ptr<_1aa323234_OperandExprModel>* _5098_r, jule::U32 _50936_op);
inline void _1aba2ab7c_assign(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37c29e_Assign> _52327_a);
inline void _1aba2ae35_mapLookupAssign(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37c755_MultiAssign>* _55637_a);
inline void _1aba2b1dd_multiAssignTup(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37c755_MultiAssign>* _57936_a);
inline void _1aba2b496_multiAssignFn(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37c755_MultiAssign>* _62835_a);
inline void _1aba2b74e_multiAssign(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37c755_MultiAssign> _68732_a);
inline jule::Fn<void> _1aba2ba90_matchExpr(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37cdb5_Match> _71330_m);
inline void _1aba2be03_case(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37cdb5_Match> _72325_m, jule::Ptr<_1aa37d8dd_Case> _72340_c);
inline void _1aba2c1ab_matchSt(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37cdb5_Match> _79328_m);
inline void _1aba2c464_fallSt(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37e0d6_FallSt> _84823_f);
inline void _1aba2c71c_breakSt(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37b248_BreakSt> _85324_b);
inline void _1aba2c9c5_setResult(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37e47c_RetSt> _86230_r);
inline void _1aba2cc7d_retSt(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37e47c_RetSt> _89026_r);
inline void _1aba2d036_var(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa3e4d3e_Var> _92624_v);
inline void _1aba2d2de_mutSlicing(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa5ee301_MutSlicingExprModel> _93231_m);
inline void _1aba2d597_swap(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa5ed09c_SwapExprModel> _94925_m);
inline void _1aba2d850_exceptionalForwarding(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa5ecc17_ExceptionalForwardingExprModel> _95742_m);
inline void _1aba2db08_st(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Any _96323_st);
inline void _1aba2ddb1_scopeStmts(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa378ba2_Scope>* _101932_s);
inline void _1aba2e169_scope(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa378ba2_Scope> _102826_s);
inline void _1aba2e422_commonFuncScope(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa334597_FnIns>* _104337_f);
inline void _1aba2e785_anonFuncScope(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa326545_AnonFnExprModel> _108334_m, jule::Str _108355_ident);
inline void _1aba2ea3d_funcScope(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa334597_FnIns> _111530_f);
inline jule::Ptr<_1aba3327d_exprCoder> static__1aba33679_new(jule::Ptr<_1abb0aab4_ObjectCoder>* _11421_oc);
inline void _1aba33932_string(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1a6e77584_Const>* _12024_c);
inline void _1aba33bda_boolean(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Bool _13524_b);
inline void _1aba33dd8_nilLit(jule::Ptr<_1aba3327d_exprCoder> _self_);
inline jule::Bool _1aba34229_ftoaSpecialCases(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::F64* _14734_x);
inline void _1aba344d2_float32(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1a6e77584_Const>* _16125_c);
inline void _1aba3478a_float64(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1a6e77584_Const>* _18025_c);
inline void _1aba34a43_constant(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1a6e77584_Const> _19829_c);
inline void _1aba34e61_operatorOverloadingUnary(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa31e373_StructIns>* _22246_s, jule::U32 _22261_op, jule::Any _22278_e);
inline void _1aba3537e_divByZeroBinary(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa2d51c4_Token>* _23433_op, jule::Ptr<_1aa323234_OperandExprModel>* _23450_l, jule::Ptr<_1aa323234_OperandExprModel>* _23477_r);
inline void _1aba35a77__unsafeBinary(jule::Ptr<_1aba3327d_exprCoder> _self_, _1ed486d49_StrBuilder* _25635_buf, jule::Str* _25653_l, jule::Str* _25662_r, jule::Ptr<_1a601a64a_TypeKind>* _2578_lk, jule::Ptr<_1a601a64a_TypeKind>* _25728_rk, jule::U32 _25743_op, jule::Str _25756_kind);
inline void _1aba35d30_unsafeBinary(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32372e_BinaryExprModel> _32733_m);
inline void _1aba36193_shl(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa323234_OperandExprModel>* _33925_l, jule::Ptr<_1aa323234_OperandExprModel>* _33952_r);
inline void _1aba36506_shr(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa323234_OperandExprModel>* _35025_l, jule::Ptr<_1aa323234_OperandExprModel>* _35052_r);
inline void _1aba367ae_binary(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32372e_BinaryExprModel> _36127_m);
inline void _1aba36a67_var(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa3e4d3e_Var> _38524_m);
inline void _1aba36d20_structureIns(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa31e373_StructIns> _40133_m);
inline void _1aba370c8_unary(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa323b08_UnaryExprModel> _40526_m);
inline void _1aba37381_structureLit(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa3244cc_StructLitExprModel> _43633_m);
inline void _1aba37639_allocStructure(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa3247c9_AllocStructLitExprModel> _47935_m);
inline void _1aba378e2_possibleRefExpr(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Any _48732_expr);
inline void _1aba37d10_castTraitFromTrait(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa324d5c_CastingExprModel>* _50140_m, jule::Ptr<_1aa345047_Trait> _50166_t1, jule::Ptr<_1aa345047_Trait> _50182_t2);
inline void _1aba380b8_casting(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa324d5c_CastingExprModel> _51428_m);
inline void _1aba38629_args(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32570e_FnCallExprModel>* _64226_m);
inline void _1aba388d2_modelForCall(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Any _67333_expr);
inline void _1aba38b8a_pushCallInf(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32570e_FnCallExprModel>* _68829_m);
inline jule::Bool _1aba38ecb_isWrapped(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32570e_FnCallExprModel>* _71131_m);
inline jule::Bool _1aba3931c_writeReceiver(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Any _73534_m);
inline void _1aba395c5_pureFuncCall(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32570e_FnCallExprModel>* _74834_m);
inline void _1aba3987d_coFuncCall(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32570e_FnCallExprModel>* _83832_m);
inline void _1aba39be1_writeUseExpr(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa334597_FnIns>* _88934_f, jule::Ptr<_1aa44cc98_Data> _88949_d);
inline void _1aba39e99_funcCall(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32570e_FnCallExprModel> _91029_m);
inline void _1aba3a252_slice(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa325ad8_SliceExprModel> _98326_m);
inline void _1aba3a50a_indexing(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32608e_IndexingExprModel> _101229_m);
inline void _1aba3a7b3_unsafeIndexing(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa5ee983_UnsafeIndexingExprModel> _108535_m);
inline void _1aba3aa6b_anonFunc(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa326545_AnonFnExprModel> _110229_m);
inline void _1aba3ad24_mapExpr(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa326dc5_MapExprModel> _113328_m);
inline void _1aba3b0cc_slicing(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa327458_SlicingExprModel> _115428_m);
inline void _1aba3b385_traitSub(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa3279db_TraitSubIdentExprModel> _117029_m);
inline void _1aba3b63d_structureSub(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32837c_StructSubIdentExprModel> _118633_m);
inline void _1aba3b8e6_array(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa328aec_ArrayExprModel> _119526_m);
inline void _1aba3bb9e_funcInsCommon(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa334597_FnIns> _124534_m);
inline void _1aba3be57_funcIns(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa334597_FnIns> _125228_m);
inline void _1aba3c210_tuple(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa328de9_TupleExprModel> _126326_m);
inline void _1aba3c4b8_newCall(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa329a76_BuiltinNewCallExprModel> _127428_m);
inline void _1aba3c771_outCall(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa3292c3_BuiltinOutCallExprModel> _128628_m);
inline void _1aba3ca29_outlnCall(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32969c_BuiltinOutlnCallExprModel> _129530_m);
inline void _1aba3ccd2_panicCall(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa329e50_BuiltinPanicCallExprModel> _130430_m);
inline void _1aba3d08a_assertCall(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32a406_BuiltinAssertCallExprModel> _131231_m);
inline void _1aba3d343_errorCall(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32c00c_BuiltinErrorCallExprModel> _132530_m);
inline void _1aba3d5eb_copyCall(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32bb33_BuiltinCopyCallExprModel> _135729_m);
inline void _1aba3d8a4_lenCall(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32b083_BuiltinLenCallExprModel> _136528_m);
inline void _1aba3db5c_capCall(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32b380_BuiltinCapCallExprModel> _137028_m);
inline void _1aba3de15_deleteCall(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32b759_BuiltinDeleteCallExprModel> _137531_m);
inline void _1aba3e1bd_makeCallSlice(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32a8ac_BuiltinMakeCallExprModel>* _138635_m);
inline void _1aba3e476_makeCallStr(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32a8ac_BuiltinMakeCallExprModel>* _141033_m);
inline void _1aba3e72e_makeCall(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32a8ac_BuiltinMakeCallExprModel> _142129_m);
inline void _1aba3e9d7_pushToSlice(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa5eed5c_PushToSliceExprModel> _142932_m);
inline void _1aba3ec90_appendToSlice(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa600236_AppendToSliceExprModel> _148934_m);
inline void _1aba40048_appendCall(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32ac86_BuiltinAppendCallExprModel> _149731_m);
inline void _1aba40301_sizeof(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32c6b1_SizeofExprModel> _150527_m);
inline void _1aba405a9_alignof(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32c89d_AlignofExprModel> _151128_m);
inline void _1aba40862_runeLit(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32cb45_RuneExprModel> _151724_m);
inline void _1aba40b1a_structureStatic(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa328723_StructStaticIdentExprModel> _153136_m);
inline void _1aba40dc3_integratedToStr(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32ce42_IntegratedToStrExprModel> _153536_m);
inline void _1aba4117b_backendEmit(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32d31b_BackendEmitExprModel> _154132_m);
inline void _1aba41434_free(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32d618_FreeExprModel> _155725_m);
inline void _1aba416dc_strComp(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa5edc6d_StrCompExprModel> _156628_m);
inline void _1aba41995_emptyCompare(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa5ed476_EmptyCompareExprModel> _158233_m);
inline void _1aba41c4d_unsafeDeref(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa60090c_UnsafeDerefExprModel> _159132_m);
inline void _1aba42006_unsafeCasting(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa600c09_UnsafeCastingExprModel> _160234_m);
inline void _1aba422ae_model(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Any _161926_m);
inline jule::Bool _1aba42600_handleFieldByDefault(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa31d7c3_FieldIns>* _172342_f);
inline void _1aba428a8_initStructLit(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa31e373_StructIns>* _174435_s);
inline void _1aba42b61_fillCollectionByDefault(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1a601a64a_TypeKind>* _176645_elem);
inline void _1aba42e19_initCollection(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1a601a64a_TypeKind>* _178136_elem);
inline void _1aba431c2_initArray(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1a602a083_Arr>* _179531_arr);
inline void _1aba4347a_initExpr(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1a601a64a_TypeKind> _180929_t);
inline jule::Ptr<_1aba4634b_TestCoder> static__1aba46802_New(jule::Ptr<_1abb0aab4_ObjectCoder>* _2921_oc);
inline jule::Ptr<_1aa39b0ae_ImportInfo> _1aba46a88_findTestingPackage(jule::Ptr<_1aba4634b_TestCoder> _self_);
inline void _1aba46d41_appendTest(jule::Ptr<_1aba4634b_TestCoder> _self_, jule::Ptr<_1aa334597_FnIns> _4431_f);
inline void _1aba470e9_appendPackageTests(jule::Ptr<_1aba4634b_TestCoder> _self_, jule::Ptr<_1aa39ded5_Package>* _5940_p);
inline jule::Bool _1aba47380_readyTestingPackage(jule::Ptr<_1aba4634b_TestCoder> _self_);
inline void _1aba4757d_callTmReset(jule::Ptr<_1aba4634b_TestCoder> _self_);
inline void _1aba4777b_callTmFailed(jule::Ptr<_1aba4634b_TestCoder> _self_);
inline void _1aba47979_callTmSkipped(jule::Ptr<_1aba4634b_TestCoder> _self_);
inline void _1aba47b77_Serialize(jule::Ptr<_1aba4634b_TestCoder> _self_);
inline void static__1aba49816_writeIdentTo(_1ed486d49_StrBuilder* _3530_buf, jule::Str* _3548_ident);
inline void static__1aba49bac_toOut(_1ed486d49_StrBuilder* _6323_buf, jule::Str _6340_ident, jule::Uintptr _6352_addr);
inline void static__1aba4a10d_toLocal(_1ed486d49_StrBuilder* _7825_buf, jule::I32 _7842_row, jule::I32 _7852_col, jule::Str* _7863_ident);
inline void static__1aba4a3e9_func(_1ed486d49_StrBuilder* _8622_buf, jule::Ptr<_1aa3315b6_Fn>* _8640_f);
inline void static__1aba4a6d5_funcIns(_1ed486d49_StrBuilder* _10225_buf, jule::Ptr<_1aa334597_FnIns>* _10243_f);
inline void static__1aba4a9c1_traitDecl(_1ed486d49_StrBuilder* _11727_buf, jule::Ptr<_1aa345047_Trait> _11744_t);
inline void static__1aba4acac_param(_1ed486d49_StrBuilder* _12123_buf, jule::Ptr<_1aa32eae2_Param>* _12141_p);
inline void static__1aba4b098_structure(_1ed486d49_StrBuilder* _13627_buf, jule::Ptr<_1aa31b518_Struct>* _13645_s);
inline void static__1aba4b384_structureIns(_1ed486d49_StrBuilder* _14730_buf, jule::Ptr<_1aa31e373_StructIns>* _14748_s);
inline void static__1aba4b670_field(_1ed486d49_StrBuilder* _15523_buf, jule::Ptr<_1aa3185e2_Field>* _15541_f);
inline void static__1aba4b95b_var(_1ed486d49_StrBuilder* _16521_buf, jule::Ptr<_1aa3e4d3e_Var> _16542_v);
inline void static__1aba4bc47_iterBegin(_1ed486d49_StrBuilder* _18727_buf, jule::Uintptr _18744_it);
inline void static__1aba4c033_iterEnd(_1ed486d49_StrBuilder* _19225_buf, jule::Uintptr _19242_it);
inline void static__1aba4c31e_iterNext(_1ed486d49_StrBuilder* _19726_buf, jule::Uintptr _19743_it);
inline void static__1aba4c60a_label(_1ed486d49_StrBuilder* _20223_buf, jule::Uintptr _20240_u);
inline void static__1aba4c8e6_matchEnd(_1ed486d49_StrBuilder* _20726_buf, jule::Uintptr _20743_m);
inline void static__1aba4cbd2_caseBegin(_1ed486d49_StrBuilder* _21227_buf, jule::Uintptr _21244_c);
inline jule::Ptr<_1abb0aab4_ObjectCoder> static__1abb0aee3_New(jule::Ptr<_1aa887941_IR>* _11721_ir, _1abb08d15_SerializationInfo _11730_info);
inline void _1abb0b29b_write(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Str _12822_s);
inline void _1abb0b554_writeBytes(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Slice<jule::U8> _13227_b);
inline void _1abb0b752_addIndent(jule::Ptr<_1abb0aab4_ObjectCoder> _self_);
inline void _1abb0b950_doneIndent(jule::Ptr<_1abb0aab4_ObjectCoder> _self_);
inline void _1abb0bb4d_indent(jule::Ptr<_1abb0aab4_ObjectCoder> _self_);
inline jule::I32 _1abb0be8e_findAnyType(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1a601a64a_TypeKind>* _15133_t);
inline jule::I32 _1abb0c2d0_pushDealloc(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1a601a64a_TypeKind> _16032_t);
inline jule::Str _1abb0c621_pushAnonFn(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa326545_AnonFnExprModel>* _17632_m);
inline jule::I32 _1abb0c962_pushAnyType(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1a601a64a_TypeKind> _21632_t);
inline void _1abb0cc1a_pushResultIns(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa334597_FnIns>* _32235_f);
inline void _1abb0cec3_pushResult(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa3315b6_Fn>* _34332_f);
inline void _1abb0d336_pushAndWriteMaskMapper(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa345047_Trait> _35643_t1, jule::Ptr<_1aa345047_Trait> _35659_t2);
inline void _1abb0d5de_locInfo(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa2d51c4_Token>* _40725_t);
inline void _1abb0d7dc_head(jule::Ptr<_1abb0aab4_ObjectCoder> _self_);
inline void _1abb0d9da_links(jule::Ptr<_1abb0aab4_ObjectCoder> _self_);
inline void _1abb0dc93_prepareStructure(_1abb0aab4_ObjectCoder* _self_, jule::Ptr<_1aa31b518_Struct>* _48837_s);
inline void _1abb0de91_prepareStructures(jule::Ptr<_1abb0aab4_ObjectCoder> _self_);
inline void _1abb0e249_structurePlainDecl(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa31b518_Struct>* _51940_s);
inline void _1abb0e447_structurePlainDecls(jule::Ptr<_1abb0aab4_ObjectCoder> _self_);
inline void _1abb0e700_fieldDecl(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa31d7c3_FieldIns>* _53531_f);
inline void _1abb0e9a8_structureDestructor(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa31e373_StructIns>* _54241_s);
inline void _1abb0edc6_structureOperatorEq(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Str _55836_ident, jule::Ptr<_1aa31e373_StructIns>* _55853_s, jule::Bool _55868_decl);
inline void _1abb10239_structureOperators(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa31e373_StructIns>* _62640_s, jule::Bool _62655_decl);
inline void _1abb104e2_structureInsDecl(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa31e373_StructIns>* _63538_s);
inline void _1abb1079a_structureDecl(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa31b518_Struct>* _66535_s);
inline void _1abb10998_structureDecls(jule::Ptr<_1abb0aab4_ObjectCoder> _self_);
inline void _1abb10b96_structureMethodDecls(jule::Ptr<_1abb0aab4_ObjectCoder> _self_);
inline void _1abb1116e_funcHead(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, _1ed486d49_StrBuilder* _69930_buf, jule::Ptr<_1aa334597_FnIns>* _69952_f, jule::Bool _69963_ptr, jule::Str _69974_ident);
inline void _1abb114d2_funcDeclIns(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa334597_FnIns>* _71833_f, jule::Bool _71844_ptr);
inline void _1abb11845_funcDecl(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa3315b6_Fn>* _72530_f, jule::Bool _72538_ptr);
inline void _1abb11aed_funcDeclTrait(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa3315b6_Fn>* _73135_f);
inline void _1abb11ceb_funcDecls(jule::Ptr<_1abb0aab4_ObjectCoder> _self_);
inline void _1abb120a4_traitDataTypeMethods(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa345047_Trait>* _75342_t);
inline void _1abb122a2_traitDataTypes(jule::Ptr<_1abb0aab4_ObjectCoder> _self_);
inline void _1abb12615_paramIns(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, _1ed486d49_StrBuilder* _78930_buf, jule::Ptr<_1aa33351e_ParamIns>* _78952_p);
inline void _1abb12978_paramsIns(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, _1ed486d49_StrBuilder* _79531_buf, jule::Ptr<_1aa334597_FnIns>* _79553_f);
inline void _1abb12cdb_varInitExpr(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa3e4d3e_Var>* _81633_v, jule::Fn<void> _81642_init);
inline void _1abb13094_var(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa3e4d3e_Var> _83424_v);
inline void _1abb13407_anonFuncInsDecl(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa326545_AnonFnExprModel>* _86537_m, jule::Str _86558_ident);
inline void _1abb1376a_anonFuncIns(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa326545_AnonFnExprModel>* _87133_m, jule::Str _87154_ident);
inline void _1abb13acd_funcIns(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa334597_FnIns>* _88129_f, jule::Str _88140_ident);
inline void _1abb13d86_func(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa3315b6_Fn>* _89126_f);
inline void _1abb141e9_funcTrait(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa31e373_StructIns>* _89727_s, jule::Ptr<_1aa334597_FnIns>* _89747_f);
inline __jule_tuple_x_1aa334597_FnIns__jule_tuple_bool _1abb1453a_findTraitMetMap(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa3315b6_Fn>* _91237_m);
inline void _1abb1489d_traitWrapper(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa345047_Trait>* _92434_t, jule::Ptr<_1aa3315b6_Fn>* _92450_m);
inline void _1abb14a9b_traitWrappers(jule::Ptr<_1abb0aab4_ObjectCoder> _self_);
inline void _1abb14e0e_traitDataMethods(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa345047_Trait>* _99038_t, jule::Ptr<_1aa31e373_StructIns> _99049_s);
inline void _1abb1532c_traitData(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa345047_Trait>* _100731_t, jule::I32 _100742_i, jule::Ptr<_1aa31e373_StructIns>* _100755_s);
inline void _1abb1552a_traitDatas(jule::Ptr<_1abb0aab4_ObjectCoder> _self_);
inline void _1abb15728_globalDecls(jule::Ptr<_1abb0aab4_ObjectCoder> _self_);
inline void _1abb15926_decls(jule::Ptr<_1abb0aab4_ObjectCoder> _self_);
inline void _1abb15bce_structureMethods(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa31e373_StructIns>* _107038_s);
inline void _1abb15e87_structureOstream(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa31e373_StructIns>* _107738_s);
inline void _1abb16240_structureIns(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa31e373_StructIns>* _112834_s);
inline void _1abb164e8_structure(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa31b518_Struct>* _113631_s);
inline void _1abb166e6_structures(jule::Ptr<_1abb0aab4_ObjectCoder> _self_);
inline void _1abb168e4_funcs(jule::Ptr<_1abb0aab4_ObjectCoder> _self_);
inline void _1abb16b9c_pushInit(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa39ded5_Package>* _116830_pkg);
inline void _1abb16d9a_anonHashes(jule::Ptr<_1abb0aab4_ObjectCoder> _self_);
inline void _1abb17098_initGlobals(jule::Ptr<_1abb0aab4_ObjectCoder> _self_);
inline void _1abb17296_initCaller(jule::Ptr<_1abb0aab4_ObjectCoder> _self_);
inline void _1abb17494_end(jule::Ptr<_1abb0aab4_ObjectCoder> _self_);
inline void _1abb17807_insertBuf(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, _1ed486d49_StrBuilder* _123731_buf, jule::I32 _123748_pos);
inline void _1abb17a05_serializeHead(jule::Ptr<_1abb0aab4_ObjectCoder> _self_);
inline void _1abb17c03_Serialize(jule::Ptr<_1abb0aab4_ObjectCoder> _self_);
inline jule::Str _1abb1a035_Str(_1abb19b39_customType* _self_);
inline jule::Bool _1abb1a376_Equal(jule::Ptr<_1abb19b39_customType> _self_, jule::Ptr<_1a601a64a_TypeKind> _4418_k);
inline jule::Ptr<_1abb1a772_typeCoder> static__1abb1acc2_new(jule::Ptr<_1abb0aab4_ObjectCoder>* _6921_oc);
inline void _1abb1b135_toType(_1abb1a772_typeCoder* _self_, _1ed486d49_StrBuilder* _7627_buf, jule::Str _7648_id);
inline void _1abb1b498_prim(_1abb1a772_typeCoder* _self_, _1ed486d49_StrBuilder* _9025_buf, jule::Ptr<_1a6023763_Prim> _9042_p);
inline void _1abb1b80b_tuple(_1abb1a772_typeCoder* _self_, _1ed486d49_StrBuilder* _9526_buf, jule::Ptr<_1a6028856_Tuple> _9547_t);
inline void _1abb1bb6e_asSptr(_1abb1a772_typeCoder* _self_, _1ed486d49_StrBuilder* _10727_buf, jule::Slice<jule::U8> _10744_elem);
inline void _1abb1bed2_sptr(_1abb1a772_typeCoder* _self_, _1ed486d49_StrBuilder* _11425_buf, jule::Ptr<_1a602728e_Sptr> _11446_sptr);
inline void _1abb1c345_ptr(_1abb1a772_typeCoder* _self_, _1ed486d49_StrBuilder* _12124_buf, jule::Ptr<_1a602aa56_Ptr> _12145_p);
inline void _1abb1c6a8_enumDecl(_1abb1a772_typeCoder* _self_, _1ed486d49_StrBuilder* _13229_buf, jule::Ptr<_1aa347753_Enum> _13250_e);
inline void _1abb1ca1b_typeEnumDecl(_1abb1a772_typeCoder* _self_, _1ed486d49_StrBuilder* _13733_buf, jule::Ptr<_1aa348e5d_TypeEnum> _13754_e);
inline void _1abb1cd7e_asSlice(_1abb1a772_typeCoder* _self_, _1ed486d49_StrBuilder* _14128_buf, jule::Ptr<_1a601a64a_TypeKind> _14149_elem);
inline void _1abb1d1e2_slice(_1abb1a772_typeCoder* _self_, _1ed486d49_StrBuilder* _14826_buf, jule::Ptr<_1a6027c62_Slc> _14847_s);
inline void _1abb1d555_mapType(_1abb1a772_typeCoder* _self_, _1ed486d49_StrBuilder* _15328_buf, jule::Ptr<_1a6029406_Map> _15349_m);
inline void _1abb1dc2b_structureIns(_1abb1a772_typeCoder* _self_, _1ed486d49_StrBuilder* _16733_buf, jule::Ptr<_1aa31e373_StructIns> _16754_s);
inline void _1abb1e08e_array(_1abb1a772_typeCoder* _self_, _1ed486d49_StrBuilder* _19126_buf, jule::Ptr<_1a602a083_Arr> _19147_a);
inline void _1abb1e765_paramIns(_1abb1a772_typeCoder* _self_, _1ed486d49_StrBuilder* _21429_buf, jule::Ptr<_1aa33351e_ParamIns>* _21451_p);
inline void _1abb1ee3b_funcInsResult(_1abb1a772_typeCoder* _self_, _1ed486d49_StrBuilder* _24634_s, jule::Ptr<_1aa334597_FnIns>* _24654_f);
inline void _1abb2029e_anonFunc(_1abb1a772_typeCoder* _self_, _1ed486d49_StrBuilder* _26429_buf, jule::Ptr<_1aa334597_FnIns> _26450_f);
inline void _1abb20612_func(_1abb1a772_typeCoder* _self_, _1ed486d49_StrBuilder* _28525_buf, jule::Ptr<_1aa334597_FnIns> _28546_f);
inline void _1abb20975_kind(_1abb1a772_typeCoder* _self_, _1ed486d49_StrBuilder* _29225_buf, jule::Ptr<_1a601a64a_TypeKind> _29246_k);
inline jule::Ptr<_1abb2335c_resultCoder> static__1abb23868_new(jule::Ptr<_1abb1a772_typeCoder>* _36021_tc);
inline void _1abb23bcb_ptr(_1abb2335c_resultCoder* _self_, _1ed486d49_StrBuilder* _36424_s, jule::Ptr<_1a602aa56_Ptr> _36443_p);
inline void _1abb2403e_sptr(_1abb2335c_resultCoder* _self_, _1ed486d49_StrBuilder* _36925_s, jule::Ptr<_1a602728e_Sptr> _36944_p);
inline void _1abb243a2_mapType(_1abb2335c_resultCoder* _self_, _1ed486d49_StrBuilder* _37428_s, jule::Ptr<_1a6029406_Map> _37447_p);
inline void _1abb24715_slice(_1abb2335c_resultCoder* _self_, _1ed486d49_StrBuilder* _38026_s, jule::Ptr<_1a6027c62_Slc> _38045_slc);
inline void _1abb24a78_arr(_1abb2335c_resultCoder* _self_, _1ed486d49_StrBuilder* _38524_s, jule::Ptr<_1a602a083_Arr> _38543_arr);
inline void _1abb24ddb_func(_1abb2335c_resultCoder* _self_, _1ed486d49_StrBuilder* _39125_s, jule::Ptr<_1aa334597_FnIns> _39144_f);
inline void _1abb2524e_tup(_1abb2335c_resultCoder* _self_, _1ed486d49_StrBuilder* _40424_s, jule::Ptr<_1a6028856_Tuple> _40443_tup);
inline void _1abb255b2_codeMut(_1abb2335c_resultCoder* _self_, _1ed486d49_StrBuilder* _41128_s, jule::Ptr<_1a601a64a_TypeKind>* _41148_t);
inline void _1abb25925_codeMut1(_1abb2335c_resultCoder* _self_, _1ed486d49_StrBuilder* _45129_s, jule::Ptr<_1a601a64a_TypeKind>* _45149_t);
inline jule::Slice<jule::U8> _1abb25c33_code(_1abb2335c_resultCoder* _self_, jule::Ptr<_1a601a64a_TypeKind>* _46025_t);
inline jule::Str _1bcc098d8_Name(_1bcc09465_Flag* _self_);
inline jule::Str _1bcc09a3c_What(_1bcc09465_Flag* _self_);
inline void _1bcc09b91_Reset(_1bcc09465_Flag* _self_);
inline jule::I32 _1bcc09ce5_Short(_1bcc09465_Flag* _self_);
inline jule::Str _1bcc0cbe9_Name(_1bcc0d06d_Flag* _self_);
inline jule::Str _1bcc0d359_What(_1bcc0d06d_Flag* _self_);
inline void _1bcc0d49c_Reset(_1bcc0d06d_Flag* _self_);
inline jule::I32 _1bcc0d5e0_Short(_1bcc0d06d_Flag* _self_);
inline jule::Str _1bcc113b2_Name(_1bcc11736_Flag* _self_);
inline jule::Str _1bcc11a22_What(_1bcc11736_Flag* _self_);
inline void _1bcc11b65_Reset(_1bcc11736_Flag* _self_);
inline jule::I32 _1bcc11ca8_Short(_1bcc11736_Flag* _self_);
inline jule::Str _1bcc14abe_Name(_1bcc14e43_Flag* _self_);
inline jule::Str _1bcc1522e_What(_1bcc14e43_Flag* _self_);
inline void _1bcc15372_Reset(_1bcc14e43_Flag* _self_);
inline jule::I32 _1bcc154b5_Short(_1bcc14e43_Flag* _self_);
inline jule::Str _1bcc18287_Name(_1bcc1860b_Flag* _self_);
inline jule::Str _1bcc188e7_What(_1bcc1860b_Flag* _self_);
inline void _1bcc18a3a_Reset(_1bcc1860b_Flag* _self_);
inline jule::I32 _1bcc18b7d_Short(_1bcc1860b_Flag* _self_);
inline jule::Ptr<_1abb8e340_FlagSet> static__1abb8e65e_New(void);
inline jule::Trait _1abb8eb15_FindFlag(_1abb8e340_FlagSet* _self_, jule::Str _7124_name);
inline jule::Trait _1abb8ee56_FindFlagShort(_1abb8e340_FlagSet* _self_, jule::I32 _8129_name);
inline jule::Exceptional<jule::Slice<jule::Str>> _1abb9052d_Parse(_1abb8e340_FlagSet* _self_, jule::Slice<jule::Str> _11521_args);
inline jule::Ptr<_1bcc1860b_Flag> _1bcc81ce5_addFlagCommon(_1abb8e340_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline jule::Ptr<_1bcc14e43_Flag> _1bdcbd57d_addFlagCommon(_1abb8e340_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline void _1bcc7e5d9_AddVar(_1abb8e340_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline void _1bdcbadb6_AddVar(_1abb8e340_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline __jule_tuple_i64__jule_tuple_bool _1bcc2b399_parseInteger(_1abb91d04_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I32> _18536_parser);
inline __jule_tuple_u64__jule_tuple_bool _1bcc33d1e_parseInteger(_1abb91d04_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I32> _18536_parser);
inline jule::Str _1abb92651_getData(_1abb91d04_argParser* _self_);
inline jule::VoidExceptional _1abb928c6_processFlag(_1abb91d04_argParser* _self_, jule::Trait* _21232_flag);
inline jule::VoidExceptional _1abb92b7e_singleDash(_1abb91d04_argParser* _self_, jule::Str* _25227_arg);
inline jule::VoidExceptional _1abb92e37_doubleDash(_1abb91d04_argParser* _self_, jule::Str* _26627_arg);
inline jule::VoidExceptional _1abb93135_tryArg(_1abb91d04_argParser* _self_);
inline jule::VoidExceptional _1abb93333_parse(_1abb91d04_argParser* _self_);
inline jule::Ptr<_1adbe0658_Cmd> static__1adbe0aa9_New(jule::Str _2616_path);
inline jule::VoidExceptional _1adbe0ca7_Spawn(_1adbe0658_Cmd* _self_);
inline jule::Exceptional<jule::I32> _1adbe123b_Wait(_1adbe0658_Cmd* _self_);
inline jule::VoidExceptional _1adc45191_spawn(_1adbe0658_Cmd* _self_);
inline jule::Exceptional<jule::I32> _1adc45625_wait(_1adbe0658_Cmd* _self_);
inline __jule_tuple_x_1aa887941_IR__jule_tuple_s_1ada72b17_Log static__1aa887e19_Build(jule::Str _2918_path, jule::I32 _2929_flags);
inline void _1aa888403_appendStructs(_1aa887941_IR* _self_, jule::Ptr<_1aa39ded5_Package>* _6730_p, jule::Slice<jule::Ptr<_1aa31b518_Struct>>* _6754_buffer);
inline jule::Slice<jule::Ptr<_1aa31b518_Struct>> _1aa888689_GetAllStructures(_1aa887941_IR* _self_);
inline void _1aa8889ec_appendGlobals(_1aa887941_IR* _self_, jule::Ptr<_1aa39ded5_Package>* _9030_p, jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>* _9054_buffer);
inline jule::Slice<jule::Ptr<_1aa3e4d3e_Var>> _1aa888c83_GetAllGlobals(_1aa887941_IR* _self_);
inline void _1aa888e81_Order(_1aa887941_IR* _self_);
inline void _1e02195ce_Free(void* _4520_ptr);
inline jule::Str _1e024ec30_BytePtrToStr(jule::U8* _6924_s);
inline jule::Slice<jule::U8> _1e024eeb6_StrToBytes(jule::Str _9315_s);
inline jule::I32 _1abb9ed12_shiftLeft(jule::I32 _1020_value, jule::I32 _1030_shift);
inline jule::I32 _1a86e36d3_shiftLeft(jule::I32 _1020_value, jule::I32 _1030_shift);
inline jule::U32 _1abe8e464_shiftLeft(jule::U32 _1020_value, jule::U32 _1030_shift);
inline jule::I32 _1ac23e11a_shiftLeft(jule::I32 _1020_value, jule::U32 _1030_shift);
inline jule::U8 _1ac26983d_shiftLeft(jule::U8 _1020_value, jule::U32 _1030_shift);
inline jule::U16 _1ac26ccc5_shiftLeft(jule::U16 _1020_value, jule::U32 _1030_shift);
inline jule::U32 _1ac27125c_shiftLeft(jule::U32 _1020_value, jule::U32 _1030_shift);
inline jule::U64 _1ac274815_shiftLeft(jule::U64 _1020_value, jule::U32 _1030_shift);
inline jule::U16 _1ac278d69_shiftLeft(jule::U16 _1020_value, jule::U16 _1030_shift);
inline jule::U64 _1ac27cd7e_shiftLeft(jule::U64 _1020_value, jule::U64 _1030_shift);
inline jule::I64 _1ac8b8167_shiftLeft(jule::I64 _1020_value, jule::I64 _1030_shift);
inline jule::U32 _1bb97618e_shiftLeft(jule::U32 _1020_value, jule::U32 _1030_shift);
inline jule::I64 _1ab7ac0d4_shiftLeft(jule::I64 _1020_value, jule::U64 _1030_shift);
inline jule::I32 _1abba35da_shiftRight(jule::I32 _2121_value, jule::I32 _2131_shift);
inline jule::U8 _1abe54c43_shiftRight(jule::U8 _2121_value, jule::U8 _2131_shift);
inline jule::I32 _1acb8549a_shiftRight(jule::I32 _2121_value, jule::I32 _2131_shift);
inline jule::U32 _1ac23d108_shiftRight(jule::U32 _2121_value, jule::U32 _2131_shift);
inline jule::U32 _1ac25b19d_shiftRight(jule::U32 _2121_value, jule::U32 _2131_shift);
inline jule::U64 _1ac25e190_shiftRight(jule::U64 _2121_value, jule::U64 _2131_shift);
inline jule::U16 _1ac2619cd_shiftRight(jule::U16 _2121_value, jule::U16 _2131_shift);
inline jule::U8 _1ac26a4a9_shiftRight(jule::U8 _2121_value, jule::U32 _2131_shift);
inline jule::U16 _1ac26d941_shiftRight(jule::U16 _2121_value, jule::U32 _2131_shift);
inline jule::U32 _1ac271b86_shiftRight(jule::U32 _2121_value, jule::U32 _2131_shift);
inline jule::U64 _1ac275481_shiftRight(jule::U64 _2121_value, jule::U32 _2131_shift);
inline jule::I64 _1ac94824c_shiftRight(jule::I64 _2121_value, jule::U32 _2131_shift);
inline jule::I64 _1bb74e198_shiftRight(jule::I64 _2121_value, jule::I64 _2131_shift);
inline jule::I64 _1ab7b0758_shiftRight(jule::I64 _2121_value, jule::U64 _2131_shift);
inline jule::Bool _1a871a9e6_arrayCmp(jule::I32* _1020_a1, jule::I32* _1032_a2, jule::I32 _1040_n);
inline jule::Bool _1bb774e49_arrayCmp(jule::U8* _1020_a1, jule::U8* _1032_a2, jule::I32 _1040_n);
inline jule::I32 _1ed0c8e86_GetLastErrno(void);
inline jule::I32 _1e0261868_Fcntl(jule::I32 _5410_handle, jule::I32 _5423_cmd, jule::I32 _5433_arg);
inline jule::I32 _1e0261bdc_Stat(jule::U8* _5916_path, struct stat* _5933_stat);
inline jule::I32 _1e026211b_Open(jule::U8* _6416_path, jule::I32 _6429_flag, jule::I32 _6440_mode);
inline jule::U8* _1e0262490_Getcwd(jule::U8* _7018_buff, jule::U32 _7031_bufflen);
inline DIR* _1e026298a_Opendir(jule::U8* _7519_path);
inline struct dirent* _1e0262b66_Readdir(DIR* _7823_dir);
inline jule::I32 _1e0262e0d_Closedir(DIR* _8124_dir);
inline jule::I32 _1e0263815_Mkdir(jule::U8* _9017_path, jule::I32 _9030_mode);
inline jule::I32 _1e0263ace_Rmdir(jule::U8* _9517_path);
inline jule::I32 _1e0263d98_Unlink(jule::U8* _9818_path);
inline jule::I32 _1ed36d02c_Read(jule::I32 _2016_handle, void* _2033_buff, jule::U32 _2048_n);
inline jule::I32 _1ed36d406_Close(jule::I32 _2510_handle);
inline jule::I32 _1ed36d7ad_Write(jule::I32 _2817_handle, void* _2830_buff, jule::U32 _2845_n);
inline void _1ed36d9de_Exit(jule::I32 _339_code);
inline void _1ed37a655_handleRW(jule::Slice<jule::U8>* _1414_b);
inline void _1ed37b524_HandleRW(jule::Slice<jule::U8>* _814_b);
inline jule::Str _1ed554587_Str(jule::U8* _108_b, jule::I32 _1018_n);
inline jule::Slice<jule::U8> _1a8709122_Slice(jule::U8* _2216_e, jule::I32 _2226_len, jule::I32 _2236_cap);
inline jule::Slice<jule::U8> _1ed560939_StrBytes(jule::Str _4013_s);
inline jule::Str _1ed560bc0_BytesStr(jule::Slice<jule::U8> _4913_b);
inline jule::Str _1ed560e89_StrFromBytes(jule::Slice<jule::U8> _5717_b);
inline jule::I32 _1ed11a824_getLastOsError(void);
inline jule::Slice<jule::Str> _1ed11bdca_Args(void);
inline jule::Exceptional<jule::Str> _1ed11c33c_WorkingDir(void);
inline jule::Exceptional<jule::Str> _1ed11cc88_getwd(void);
inline jule::Bool _1c6b26697_IsLetter(jule::I32 _7613_r);
inline jule::Bool _1ad898025_is16(jule::Slice<_1ad896287_Range16> _1919_ranges, jule::U16 _19128_r);
inline jule::Bool _1ad898399_is32(jule::Slice<_1ad8967b5_Range32> _2289_ranges, jule::U32 _22828_r);
inline jule::Bool _1ad898ba2_isExcludingLatin(jule::Ptr<_1ad896c38_RangeTable> _27821_rangeTab, jule::I32 _27844_r);
inline jule::Bool _1ad898de4_IsUpper(jule::I32 _29512_r);
inline __jule_tuple_i32__jule_tuple_int _1ed42e0bb_DecodeRune(jule::Slice<jule::U8> _18215_p);
inline __jule_tuple_i32__jule_tuple_int _1ed42e40c_DecodeRuneStr(jule::Str _22918_s);
inline __jule_tuple_i32__jule_tuple_int _1ed42e95c_DecodeLastRuneStr(jule::Str _31722_s);
inline jule::Slice<jule::U8> _1ed4304a7_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r);
inline jule::Slice<jule::U8> _1ed43082b_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r);
inline jule::I32 _1ed430dae_RuneCountStr(jule::Str _47317_s);
inline jule::Bool _1ed431178_RuneStart(jule::U8 _51714_b);
inline jule::I32 _1ed471eee_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b);
inline jule::I32 _1ed47262b_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b);
inline jule::I32 _1ed4729a0_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b);
inline jule::Str _1ed472ce1_Repeat(jule::Str _1111_s, jule::I32 _1123_n);
inline jule::Bool _1ed4731a9_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub);
inline jule::Bool _1ed47352d_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub);
inline jule::I32 _1ed4739d4_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I32 _3933_i);
inline jule::I32 _1ed473d25_Find(jule::Str _549_s, jule::Str _5417_sub);
inline jule::I32 _1ed474254_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I32 _6233_i);
inline jule::I32 _1ed4745c8_FindLast(jule::Str _8413_s, jule::Str _8421_sub);
inline jule::I32 _1ed475db0_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b);
inline jule::I32 _1ed476234_FindRune(jule::Str _15513_s, jule::I32 _15521_r);
inline jule::I32 _1ed476b5d_FindAny(jule::Str _18512_s, jule::Str _18520_runes);
inline jule::Slice<jule::Str> _1ed477301_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I32 _21532_n);
inline jule::Bool _1ed477675_Contains(jule::Str _24313_s, jule::Str _24321_sub);
inline jule::Bool _1ed4781e2_ContainsAny(jule::Str _25816_s, jule::Str _25824_runes);
inline jule::I32 _1ed478566_Count(jule::Str _26410_s, jule::Str _26418_sub);
inline jule::Str _1ed478a50_Replace(jule::Str _28412_s, jule::Str _28420_sub, jule::Str _28430_new, jule::I32 _28444_n);
inline jule::Str _1ed4797cb_TrimLeft(jule::Str _34117_s, jule::Str _34125_cutset);
inline jule::Str _1ed479b50_TrimRight(jule::Str _35514_s, jule::Str _35522_cutset);
inline jule::Str _1ed479ec4_Trim(jule::Str _3699_s, jule::Str _36917_cutset);
inline jule::Str _1ed47a348_Join(jule::Slice<jule::Str> _3759_parts, jule::Str _37523_sep);
inline jule::Str _1ed493c02_Clean(jule::Str _10914_path);
inline jule::Str _1ed4942c9_FromSlash(jule::Str _21214_path);
inline jule::Str _1ed49461a_Join(jule::Slice<jule::Str> _2269_elem);
inline jule::Str _1ed4948a1_Ext(jule::Str _2318_path);
inline __jule_tuple_str__jule_tuple_bool _1ed494b6a_Abs(jule::Str _2468_path);
inline jule::Str _1ed494e34_Base(jule::Str _25213_path);
inline jule::Str _1ed49530d_Dir(jule::Str _2838_path);
inline jule::Str _1ed495550_VolumeName(jule::Str _30115_path);
inline jule::Bool _1ed496496_IsPathSep(jule::U8 _4814_c);
inline jule::Bool _1ed4967a4_IsAbs(jule::Str _5310_path);
inline jule::I32 _1ed496a6d_volumeNameLen(jule::Str _5918_path);
inline __jule_tuple_str__jule_tuple_bool _1ed496dae_abs(jule::Str _638_path);
inline jule::Str _1ed497145_join(jule::Slice<jule::Str> _739_elem);
inline jule::I32 _1ed373c8b_getLastFsError(void);
inline __jule_tuple_int__jule_tuple_bool _1adbe1c86_AtoiBp(jule::U8* _722_b, jule::I32 _736_n);
inline jule::Str _1adc40c19_Itoa(jule::I32 _89_x);
inline jule::Str _1adc41027_Utoa(jule::U32 _1613_x);
inline void _1adc41258_rev(jule::Slice<jule::U8>* _3513_b);
inline jule::Slice<char*> _1adc44855_strSliceToCstrSlice(jule::Slice<jule::Str>* _3525_s, jule::Slice<jule::Slice<jule::U8>>* _3540_bargs);
inline jule::I32 _1adc44bc9_execvp(jule::Str* _4712_file, jule::Slice<jule::Str>* _4724_argv);
inline jule::VoidExceptional _1adc44e0a_setenv(jule::Slice<jule::Str>* _5612_envv);
inline jule::I32 _1adc45d84_processErrorFromCode(jule::I32 _1125_code);
inline jule::I32 _1adc460d7_getLastProcessError(void);
inline void _1adc46901_Exit(jule::I32 _129_code);
inline jule::Str _1adc46b10_Executable(void);
inline jule::Bool _1ada65500_IsStdHeaderPath(jule::Str _2620_p);
inline jule::Bool _1ada657ca_IsValidHeaderExt(jule::Str _3121_ext);
inline jule::Bool _1ada65a94_IsValidCppExt(jule::Str _4118_ext);
inline jule::Str _1ada73079_Logf(jule::Str _3239_fmt, jule::Slice<jule::Any> _32322_args);
inline jule::Str _1ada73387_argToStr(jule::Any _32713_arg);
inline jule::I32 _1ada73651_findNextFmt(jule::Str _34016_fmt);
inline jule::Str _1ada73a19_applyFmt(jule::Str _34917_fmt, jule::Slice<jule::Any> _34927_args);
inline jule::Bool _1ada74872_IsTopDirective(jule::Str _2219_directive);
inline jule::Bool _1ada75c91_IsWindows(jule::Str _3714_os);
inline jule::Bool _1ada7609e_IsDarwin(jule::Str _4013_os);
inline jule::Bool _1ada76368_IsLinux(jule::Str _4312_os);
inline jule::Bool _1ada766a9_IsI386(jule::Str _4611_arch);
inline jule::Bool _1ada76940_IsAmd64(jule::Str _4912_arch);
inline jule::Bool _1ada76c09_IsArm64(jule::Str _5212_arch);
inline jule::Bool _1ada76ec3_IsUnix(jule::Str _5511_os);
inline jule::Bool _1ada7739c_Is32Bit(jule::Str _5812_arch);
inline jule::Bool _1ada775de_Is64Bit(jule::Str _6112_arch);
inline void _1adc47ea7_init(void);
inline jule::I32 _1a68791a6_LeadingZeros64(jule::U64 _6119_x);
inline jule::I32 _1a687a0ec_TrailingZeros(jule::U32 _8318_x);
inline jule::I32 _1a687a9d2_TrailingZeros32(jule::U32 _10520_x);
inline jule::I32 _1a687ac9b_TrailingZeros64(jule::U64 _11420_x);
inline jule::I32 _1a6881774_Len32(jule::U32 _35214_x);
inline jule::I32 _1a6881a3d_Len64(jule::U64 _36614_x);
inline __jule_tuple_u64__jule_tuple_u64 _1a68827ca_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry);
inline __jule_tuple_u64__jule_tuple_u64 _1a68840d4_Mul64(jule::U64 _49910_x, jule::U64 _49918_y);
inline jule::U32 _1adade227_F32Bits(jule::F32 _4112_f);
inline jule::F32 _1adade535_F32FromBits(jule::U32 _4716_b);
inline jule::U64 _1adade7ee_F64Bits(jule::F64 _5212_f);
inline jule::F64 _1adadeb40_F64FromBits(jule::U64 _5816_b);
inline __jule_tuple_f64__jule_tuple_int _1a6d022dd_Frexp(jule::F64 _4714_f);
inline jule::F64 _1a688b33e_NaN(void);
inline jule::Bool _1a688b64c_IsNaN(jule::F64 _5210_f);
inline jule::F64 _1a6e1e4c6_Inf(jule::I32 _618_sign);
inline jule::Bool _1a6e1e790_IsInf(jule::F64 _7210_f, jule::I32 _7218_sign);
inline __jule_tuple_f64__jule_tuple_int _1a6e1ea59_normalize(jule::F64 _8214_x);
inline jule::F64 _1a6e2153e_Log(jule::F64 _1118_x);
inline jule::F64 _1a6e22034_Abs(jule::F64 _438_x);
inline __jule_tuple_f64__jule_tuple_f64 _1a6e28b0c_Modf(jule::F64 _449_f);
inline jule::F64 _1a6e29415_Log2(jule::F64 _449_x);
inline jule::Str _1a6e529d2_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I32 _7932_prec, jule::I32 _7943_bitSize);
inline jule::Slice<jule::U8> _1a6e530ba_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I32 _8758_prec, jule::I32 _8769_bitSize);
inline jule::Slice<jule::U8> _1a6e537c4_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I32 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I32 _18813_exp, _1a673e3ce_floatInfo* _18824_flt);
inline jule::Slice<jule::U8> _1a6e53e9a_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1a6e5244e_decimalSlice _2252_digs, jule::I32 _22526_prec, jule::U8 _22537_fmt);
inline void _1a6e543b8_roundShortest(_1a6e650bb_decimal* _26223_d, jule::U64 _26235_mant, jule::I32 _26246_exp, _1a673e3ce_floatInfo* _26257_flt);
inline jule::Slice<jule::U8> _1a6e5495c_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1a6e5244e_decimalSlice _40137_d, jule::I32 _40154_prec, jule::U8 _40165_fmt);
inline jule::Slice<jule::U8> _1a6e54e46_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1a6e5244e_decimalSlice _45637_d, jule::I32 _45654_prec);
inline jule::Slice<jule::U8> _1a6e555ea_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I32 _48952_exp, _1a673e3ce_floatInfo* _48963_flt);
inline jule::Slice<jule::U8> _1a6e55c7c_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I32 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I32 _51221_exp, _1a673e3ce_floatInfo* _51232_flt);
inline jule::I32 _1a6e56101_min(jule::I32 _5968_a, jule::I32 _59616_b);
inline jule::I32 _1a6e56475_max(jule::I32 _6038_a, jule::I32 _60316_b);
inline jule::U8 _1a6e57025_lower(jule::U8 _4710_c);
inline __jule_tuple_u64__jule_tuple__1a672413e_ConvError _1a6e57498_parseUint(jule::Str* _5119_s, jule::I32 _5131_base, jule::I32 _5146_bitSize);
inline jule::Exceptional<jule::U64> _1a6e578c7_ParseUint(jule::Str _14618_s, jule::I32 _14630_base, jule::I32 _14645_bitSize);
inline jule::Exceptional<jule::I64> _1a6e57d7d_ParseInt(jule::Str _17217_s, jule::I32 _17225_base, jule::I32 _17240_bitSize);
inline __jule_tuple_f64__jule_tuple_bool _1a6e58a3d_eiselLemire64(jule::U64 _4122_man, jule::I32 _4132_exp10, jule::Bool _4144_neg);
inline __jule_tuple_f32__jule_tuple_bool _1a6e58eb1_eiselLemire32(jule::U64 _11022_man, jule::I32 _11032_exp10, jule::Bool _11044_neg);
inline jule::I32 _1a6e5ac93_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1a6e5b0a1_special(jule::Str _6912_s);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1a6e5b36a_readFloat(jule::Str* _10815_s);
inline __jule_tuple_f64__jule_tuple_bool _1a6e5cdb6_atof64exact(jule::U64 _48616_mantissa, jule::I32 _48635_exp, jule::Bool _48645_neg);
inline __jule_tuple_f32__jule_tuple_bool _1a6e5d2e5_atof32exact(jule::U64 _52016_mantissa, jule::I32 _52035_exp, jule::Bool _52049_neg);
inline __jule_tuple_f64__jule_tuple__1a672413e_ConvError _1a6e5d889_atofHex(_1a673e3ce_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I32 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1a672413e_ConvError _1a6e5dc63_atof32(jule::Str _62111_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a672413e_ConvError _1a6e5dea5_atof64(jule::Str _67911_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a672413e_ConvError _1a6e5e329_parseFloatPrefix(jule::Str* _73622_s, jule::I32 _73630_bitSize);
inline jule::Exceptional<jule::F64> _1a6e5e69d_ParseFloat(jule::Str _76815_s, jule::I32 _76823_bitSize);
inline void _1a6e6002d_ryuFtoaFixed32(_1a6e5244e_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I32 _4956_exp, jule::I32 _4966_prec);
inline void _1a6e604c3_ryuFtoaFixed64(_1a6e5244e_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I32 _12156_exp, jule::I32 _12166_prec);
inline void _1a6e60d0e_formatDecimal(_1a6e5244e_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I32 _20088_prec);
inline void _1a6e612d7_ryuFtoaShortest(_1a6e5244e_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I32 _26157_exp, _1a673e3ce_floatInfo* _26168_flt);
inline jule::I32 _1a6e6156d_mulByLog2Log10(jule::I32 _37719_x);
inline jule::I32 _1a6e61837_mulByLog10Log2(jule::I32 _38719_x);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1a6e61c66_computeBounds(jule::U64 _39518_mant, jule::I32 _39529_exp, _1a673e3ce_floatInfo* _3963_flt);
inline void _1a6e623b5_ryuDigits(_1a6e5244e_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup);
inline void _1a6e62a36_ryuDigits32(_1a6e5244e_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I32 _45551_endindex);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1a6e62e65_mult64bitPow10(jule::U32 _53419_m, jule::I32 _53431_e2, jule::I32 _53440_q);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1a6e63394_mult128bitPow10(jule::U64 _56220_m, jule::I32 _56232_e2, jule::I32 _56241_q);
inline jule::Bool _1a6e63718_divisibleByPow5(jule::U64 _58624_m, jule::I32 _58632_k);
inline __jule_tuple_u32__jule_tuple_u32 _1a6e639d2_divmod1e9(jule::U64 _60214_x);
inline void _1a6e66919_trim(_1a6e650bb_decimal* _27414_a);
inline void _1a6e66c05_rightShift(_1a6e650bb_decimal* _28420_a, jule::U32 _28432_k);
inline jule::Bool _1a6e671ab_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I32 _33835_end, jule::Str* _33846_s);
inline void _1a6e67464_leftShift(_1a6e650bb_decimal* _35219_a, jule::U32 _35231_k);
inline jule::Bool _1a6e677d8_shouldRoundUp(_1a6e650bb_decimal* _39919_a, jule::I32 _39931_nd);
inline jule::Str _1a6e6906a_FmtUint(jule::U64 _6112_i, jule::I32 _6120_base);
inline jule::Str _1a6e69433_FmtInt(jule::I64 _7211_i, jule::I32 _7219_base);
inline jule::Str _1a6e696ec_Itoa(jule::I32 _819_i);
inline jule::Str _1a6e69a3d_small(jule::I32 _8610_i);
inline jule::Bool _1a6e69cc4_isPowerOfTwo(jule::I32 _9617_x);
inline __jule_tuple_su8__jule_tuple_str _1a6e6a368_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I32 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_);
inline jule::Str _1a6e6b765_RealKindOf(jule::Str _4515_kind);
inline jule::I32 _1a6e6ba2e_BitsizeOf(jule::Str _5914_k);
inline jule::Str _1a6e6bd70_IntFromBits(jule::I32 _8716_bits);
inline jule::Str _1a6e6c106_UintFromBits(jule::I32 _10517_bits);
inline jule::Str _1a6e6c3c0_FloatFromBits(jule::I32 _12318_bits);
inline jule::Bool _1a6e6cec5_CheckBitFloat(jule::Str _15118_val, jule::I32 _15128_bit);
inline jule::I32 _1a6e6d28e_BitsizeOfFloat(jule::F64 _16119_x);
inline jule::I32 _1a6e6d558_BitsizeOfInt(jule::I64 _17717_x);
inline jule::I32 _1a6e6d822_BitsizeOfUint(jule::U64 _19718_x);
inline void _1a6e6d9ba_UpdateTarget(void);
inline void _1a6e6db41_init(void);
inline jule::I64 _1a6e72705_MinI(jule::Str _6113_k);
inline jule::I64 _1a6e72a13_MaxI(jule::Str _7913_k);
inline jule::U64 _1a6e72ccc_MaxU(jule::Str _9713_k);
inline jule::F64 _1a6e7311d_Min(jule::Str _11512_k);
inline jule::F64 _1a6e733a4_Max(jule::Str _13312_k);
inline jule::Bool _1a6e7385a_IsI16Greater(jule::Str _621_k);
inline jule::Bool _1a6e73b68_IsI32Greater(jule::Str _1121_k);
inline jule::Bool _1a6e73e32_IsI64Greater(jule::Str _1621_k);
inline jule::Bool _1a6e74273_IsU16Greater(jule::Str _2321_k);
inline jule::Bool _1a6e74509_IsU32Greater(jule::Str _2821_k);
inline jule::Bool _1a6e747c3_IsU64Greater(jule::Str _3421_k);
inline jule::Bool _1a6e74a8c_IsF32Greater(jule::Str _4117_k);
inline jule::Bool _1a6e74e66_IsF64Greater(jule::Str _4617_k);
inline jule::Bool _1a6e75263_IsGreater(jule::Str _5118_k1, jule::Str _5127_k2);
inline jule::Bool _1a6e763c9_IsSigInt(jule::Str _2717_k);
inline jule::Bool _1a6e766d7_IsUnsigInt(jule::Str _3619_k);
inline jule::Bool _1a6e769a1_IsInt(jule::Str _4610_k);
inline jule::Bool _1a6e76ce2_IsFloat(jule::Str _5112_k);
inline jule::Bool _1a6e77078_IsNum(jule::Str _5610_k);
inline jule::Bool _1a6e77342_IsSigNum(jule::Str _6113_k);
inline void _1a6e8159e_lshiftUnsig(_1a6e77584_Const* _59021_c, _1a6e77584_Const* _59032_x);
inline void _1a6e818ce_rshiftUnsig(_1a6e77584_Const* _59621_c, _1a6e77584_Const* _59632_x);
inline jule::Bool _1aa2d5911_IsUnaryOp(jule::U32 _33414_id);
inline jule::Bool _1aa2d5c1e_IsBinOp(jule::U32 _34412_id);
inline jule::Bool _1aa2d6329_IsStr(jule::Str _36410_k);
inline jule::Bool _1aa2d65b0_IsRawStr(jule::Str _36713_k);
inline jule::Bool _1aa2d6879_IsRune(jule::Str _37111_k);
inline jule::Bool _1aa2d725e_IsFloat(jule::Str _38012_k);
inline jule::Bool _1aa2d7528_IsNum(jule::Str _38810_k);
inline jule::Bool _1aa2d7aab_IsIgnoreIdent(jule::Str _40318_ident);
inline jule::Bool _1aa2d7d75_IsAnonIdent(jule::Str _40616_ident);
inline jule::Bool _1aa2d8408_IsSpace(jule::I32 _41912_r);
inline jule::Bool _1aa2d8903_IsLetter(jule::I32 _42913_r);
inline jule::Bool _1aa2d8d76_IsDecimal(jule::U8 _44914_b);
inline jule::Bool _1aa2d9140_IsBinary(jule::U8 _45213_b);
inline jule::Bool _1aa2d9409_IsOctal(jule::U8 _45512_b);
inline jule::Bool _1aa2d96c3_IsHex(jule::U8 _45810_b);
inline jule::Bool _1aa2d998c_IsAssign(jule::U32 _47313_id);
inline jule::Bool _1aa2d9c56_IsPostfixOp(jule::U32 _48516_id);
inline jule::Bool _1aa2da020_IsAssignOp(jule::U32 _49515_id);
inline jule::Ptr<_1aa2da95a_File> _1aa2dbd35_NewFileSet(jule::Str _5715_path);
inline _1ada72b17_Log _1aa2dd85e_makeErr(jule::I32 _10012_row, jule::I32 _10022_col, jule::Ptr<_1aa2da95a_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args);
inline jule::Bool _1aa2ddc27_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix);
inline jule::Str _1aa2de09b_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I32 _12232_i);
inline jule::Str _1aa2de464_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I32 _15628_i);
inline jule::Str _1aa2de7d8_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I32 _16036_i);
inline jule::Str _1aa2deb5c_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I32 _18136_i);
inline jule::Str _1aa2deed1_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I32 _18635_i);
inline jule::Str _1aa2e0465_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I32 _19131_i);
inline jule::Str _1aa2e06a7_commonNum(jule::Slice<jule::U8>* _21615_txt);
inline jule::Str _1aa2e0971_binaryNum(jule::Slice<jule::U8>* _23915_txt);
inline jule::Bool _1aa2e0ce5_isFloatFmtE(jule::U8 _26116_b, jule::I32 _26125_i);
inline jule::Bool _1aa2e1169_isFloatFmtP(jule::U8 _26516_b, jule::I32 _26525_i);
inline jule::Bool _1aa2e14dd_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I32 _26938_i);
inline jule::Bool _1aa2e1862_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I32 _29033_i);
inline jule::Bool _1aa2e1bd6_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I32 _30334_i);
inline jule::Str _1aa2e21d1_octalNum(jule::Slice<jule::U8>* _31814_txt);
inline jule::Str _1aa2e23ac_hexNum(jule::Slice<jule::U8>* _36012_txt);
inline jule::Str _1aa2e270e_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I32 _39328_n);
inline jule::Str _1aa2e29c8_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt);
inline jule::Str _1aa2e2c92_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt);
inline jule::Str _1aa2e305b_hexByteEscape(jule::Slice<jule::U8>* _42119_txt);
inline jule::Str _1aa2e3325_byteEscape(jule::Slice<jule::U8>* _42616_txt);
inline jule::Slice<_1ada72b17_Log> _1aa2e8319_Lex(jule::Ptr<_1aa2da95a_File> _80612_f, jule::I32 _80622_mode);
inline jule::Bool _1aa3b764c_FindModuleFile(jule::Slice<jule::Ptr<_1ed37c9a9_DirEntry>>* _1320_dirents);
inline jule::Str _1aa3b7905_FindModuleFileDeep(jule::Str _2527_path);
inline jule::Slice<_1ada72b17_Log> _1aa3b7bbe_CheckModuleFile(jule::Str* _4721_path);
inline jule::Bool _1aa3b851b_IsPub(jule::Str _910_ident);
inline jule::Bool _1aa416800_IsAscii(jule::I32 _1112_r);
inline jule::I32 _1aa43192a_ToRune(jule::Str _2015_lit);
inline jule::Str _1aa431b39_ToRawStr(jule::Str _3613_lit);
inline jule::Str _1aa431e7a_ToStr(jule::Str _4714_lit);
inline __jule_tuple_u8__jule_tuple_bool _1aa432211_tryBtoaCommonEsq(jule::Str _8321_s);
inline jule::I32 _1aa432585_runeFromEsqSeq(jule::Str _11319_s, jule::I32* _11332_i);
inline void _1aa43292b_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I32* _14545_i);
inline jule::I32 _1aa5d731c_findFormatPrefix(jule::Slice<jule::U8>* _1122_bytes, jule::I32 _1141_i);
inline jule::Slice<jule::U8> _1aa5d764c_getFormatRange(jule::I32* _2724_i, jule::Slice<jule::U8>* _2737_bytes);
inline void _1aa5d7938_FmtByDefault(_1ed486d49_StrBuilder* _4722_buf, jule::Any* _4740_arg);
inline void _1aa5d7d56_applyFmtByDefault(_1ed486d49_StrBuilder* _8627_buf, jule::I32* _8649_j, jule::Slice<jule::Any> _8657_args);
inline void _1aa5d8274_applyFmt(jule::Slice<jule::U8>* _9418_fmt, _1ed486d49_StrBuilder* _9436_buf, jule::I32* _9458_j, jule::Slice<jule::Any> _9466_args);
inline jule::Slice<jule::U8> _1aa5d85e8_Format(jule::Str _11511_fmt, jule::Slice<jule::Any> _11521_args);
inline jule::Str _1aa5da61c_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args);
inline jule::Ptr<_1aa3315b6_Fn> _1a9e88a8c_runtimeFindFn(jule::Ptr<_1aa39b0ae_ImportInfo>* _1123_runtime, jule::Str _1145_ident);
inline jule::Bool _1aa336874_parameterUsesGenerics(jule::Ptr<_1aa33351e_ParamIns>* _38531_p, jule::Slice<jule::Ptr<_1aa307889_GenericDecl>>* _38546_generics);
inline jule::Ptr<_1a6022d5b_TypeSymbol> _1aa3390a2_buildType(jule::Ptr<_1aa2ea67e_TypeDecl> _9418_t);
inline jule::Ptr<_1aa44de20_Value> _1aa3393b0_buildExpr(jule::Ptr<_1aa2ee9b3_Expr> _10318_expr);
inline jule::Ptr<_1a6019858_TypeAlias> _1aa339679_buildTypeAlias(jule::Ptr<_1aa31219b_TypeAliasDecl> _11223_decl);
inline jule::Ptr<_1aa3185e2_Field> _1aa3399ba_buildField(jule::Ptr<_1aa315a51_FieldDecl> _12319_decl);
inline jule::Slice<jule::Ptr<_1aa3185e2_Field>> _1aa339c51_buildFields(jule::Slice<jule::Ptr<_1aa315a51_FieldDecl>>* _13421_decls);
inline jule::Ptr<_1aa31b518_Struct> _1aa33a01a_buildStruct(jule::Ptr<_1aa316447_StructDecl> _14220_decl);
inline jule::Ptr<_1aa32eae2_Param> _1aa33a2d4_buildParam(jule::Ptr<_1aa30addc_ParamDecl> _15419_decl);
inline jule::Slice<jule::Ptr<_1aa32eae2_Param>> _1aa33a6ad_buildParams(jule::Slice<jule::Ptr<_1aa30addc_ParamDecl>>* _16521_decls);
inline jule::Ptr<_1aa32e3a5_RetType> _1aa33a900_buildRetType(jule::Ptr<_1aa2ed572_RetTypeDecl> _17321_decl);
inline jule::Ptr<_1aa3315b6_Fn> _1aa33abb9_buildFunc(jule::Ptr<_1aa30c33e_FnDecl> _18318_decl);
inline jule::Slice<jule::Ptr<_1aa3315b6_Fn>> _1aa33ae83_buildMethods(jule::Slice<jule::Ptr<_1aa30c33e_FnDecl>>* _20122_decls);
inline jule::Slice<jule::Ptr<_1a6022d5b_TypeSymbol>> _1aa33b24c_buildTraitInherits(jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>>* _20928_inherits);
inline jule::Ptr<_1aa345047_Trait> _1aa33b516_buildTrait(jule::Ptr<_1aa316b84_TraitDecl> _21719_decl);
inline jule::Ptr<_1aa346bd6_EnumItem> _1aa33b7d0_buildEnumItem(jule::Ptr<_1aa313c3b_EnumItemDecl> _22722_decl);
inline jule::Slice<jule::Ptr<_1aa346bd6_EnumItem>> _1aa33ba99_buildEnumItems(jule::Slice<jule::Ptr<_1aa313c3b_EnumItemDecl>>* _23524_decls);
inline jule::Ptr<_1aa347753_Enum> _1aa33c094_buildEnum(jule::Ptr<_1aa3147ec_EnumDecl> _24318_decl);
inline jule::Ptr<_1aa348886_TypeEnumItem> _1aa33c270_buildTypeEnumItem(jule::Ptr<_1aa315127_TypeEnumItemDecl> _25326_decl);
inline jule::Slice<jule::Ptr<_1aa348886_TypeEnumItem>> _1aa33c517_buildTypeEnumItems(jule::Slice<jule::Ptr<_1aa315127_TypeEnumItemDecl>>* _26128_decls);
inline jule::Ptr<_1aa348e5d_TypeEnum> _1aa33c7d1_buildTypeEnum(jule::Ptr<_1aa315787_TypeEnumDecl> _26922_decl);
inline jule::Ptr<_1aa3e4d3e_Var> _1aa33ca9a_buildVar(jule::Ptr<_1aa30d4e9_VarDecl> _27817_decl);
inline jule::Slice<jule::Ptr<_1aa3e4d3e_Var>> _1aa33cd64_buildVars(jule::Slice<jule::Ptr<_1aa30d4e9_VarDecl>> _29518_decls);
inline jule::Ptr<_1aa37374b_Impl> _1aa33d12d_buildImpl(jule::Ptr<_1aa3172e4_Impl> _30318_decl);
inline jule::Bool _1aa344541_isImplicitImport(jule::Ptr<_1aa39b0ae_ImportInfo> _78821_imp);
inline jule::Ptr<_1aa44cc98_Data> _1aa36dc30_buildAsComptimeMethodData(jule::Ptr<_1aa334597_FnIns>* _190335_f);
inline jule::Ptr<_1aa39b0ae_ImportInfo> _1aa36e03d_findComptimePackage(jule::Ptr<_1aa3bb530_sema>* _191129_s);
inline jule::Ptr<_1aa44cc98_Data> _1aa36e3b2_buildComptimeTypeInfoData(jule::Ptr<_1aa3bb530_sema>* _191735_s, jule::Ptr<_1a601a64a_TypeKind>* _191750_t);
inline jule::Ptr<_1aa44cc98_Data> _1aa36e703_buildComptimeValue(jule::Ptr<_1aa44cc98_Data>* _192528_d);
inline jule::Str _1aa3726e5_toStrConstraints(jule::Ptr<_1a6018c64_InsGeneric> _14321_g);
inline jule::Bool _1aa372aad_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1a601a64a_TypeKind>* _15434_g);
inline jule::Bool _1aa372d77_isBuiltinConstraint(jule::Str* _19325_ident);
inline jule::Ptr<_1aa381160_scopeChecker> _1aa37597e_newScopeCheckerBase(jule::Ptr<_1aa3bb530_sema>* _5829_s, jule::Ptr<_1aa334597_FnIns> _5843_owner);
inline jule::Ptr<_1aa381160_scopeChecker> _1aa375d47_newScopeChecker(jule::Ptr<_1aa3bb530_sema>* _6625_s, jule::Ptr<_1aa334597_FnIns> _6639_owner);
inline jule::Ptr<_1aa37eadc_scopeLabel> _1aa3761bb_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_1aa381160_scopeChecker> _7637_scope);
inline jule::Bool _1aa376584_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1aa378ba2_Scope>* _9034_sc);
inline jule::Bool _1aa376908_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_1aa378ba2_Scope>* _10434_sc);
inline jule::I32 _1aa376c7c_countMatchType(jule::Ptr<_1aa37cdb5_Match>* _14720_m, jule::Ptr<_1a601a64a_TypeKind>* _14732_t);
inline jule::Slice<jule::Ptr<_1aa44cc98_Data>> _1aa377046_getDatasFromTupleData(jule::Ptr<_1aa44cc98_Data>* _17131_d);
inline jule::Bool _1aa377882_checkMut(jule::Ptr<_1aa3bb530_sema>* _20618_s, jule::Ptr<_1aa44cc98_Data>* _20629_left, jule::Ptr<_1aa44cc98_Data> _20646_right, jule::Ptr<_1aa2d51c4_Token> _20660_op);
inline jule::Bool _1aa377d6b_checkAssign(jule::Ptr<_1aa3bb530_sema>* _22521_s, jule::Ptr<_1aa44cc98_Data>* _22536_left, jule::Ptr<_1aa44cc98_Data> _22553_right, jule::Ptr<_1aa2d51c4_Token> _22567_op);
inline jule::Bool _1aa378135_isValidAstStForNextSt(jule::Any* _24731_n);
inline jule::Bool _1aa3783ee_isValidStForNextSt(jule::Any* _25824_st);
inline jule::Bool _1aa3786b8_stmtIsDef(jule::Any* _27615_st);
inline jule::U32 _1aa39356d_removeEqFromOp(jule::U32 _222519_op);
inline void _1aa39379e_makeComptimeRange(jule::Ptr<_1aa44cc98_Data>* _225427_d);
inline jule::Bool _1aa393c99_canComptimeMatch(jule::Ptr<_1aa44cc98_Data>* _227726_d);
inline jule::Ptr<_1aa4475cd_SymbolTable> _1aa398166_findVarFileInPackage(jule::Slice<jule::Ptr<_1aa4475cd_SymbolTable>>* _4430_files, jule::Ptr<_1aa3e4d3e_Var>* _4454_v);
inline jule::Ptr<_1aa3e4d3e_Var> _1aa3985d9_findVarInPackage(jule::Slice<jule::Ptr<_1aa4475cd_SymbolTable>>* _5526_files, jule::Str* _5550_ident, jule::Bool _5562_binded);
inline jule::Ptr<_1a6019858_TypeAlias> _1aa398a18_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1aa4475cd_SymbolTable>>* _6732_files, jule::Str* _6756_ident, jule::Bool _6768_binded);
inline jule::Ptr<_1aa31b518_Struct> _1aa398ebe_findStructInPackage(jule::Slice<jule::Ptr<_1aa4475cd_SymbolTable>>* _7929_files, jule::Str* _7953_ident, jule::Bool _7965_binded);
inline jule::Ptr<_1aa3315b6_Fn> _1aa3993ba_findFnInPackage(jule::Slice<jule::Ptr<_1aa4475cd_SymbolTable>>* _9125_files, jule::Str* _9149_ident, jule::Bool _9161_binded);
inline jule::Ptr<_1aa345047_Trait> _1aa39973e_findTraitInPackage(jule::Slice<jule::Ptr<_1aa4475cd_SymbolTable>>* _10328_files, jule::Str* _10352_ident);
inline jule::Ptr<_1aa347753_Enum> _1aa399ab3_findEnumInPackage(jule::Slice<jule::Ptr<_1aa4475cd_SymbolTable>>* _11527_files, jule::Str* _11551_ident);
inline jule::Ptr<_1aa348e5d_TypeEnum> _1aa39a047_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1aa4475cd_SymbolTable>>* _12731_files, jule::Str* _12755_ident);
inline jule::Any _1aa39a3ee_defByIdentPackage(jule::Slice<jule::Ptr<_1aa4475cd_SymbolTable>>* _13827_files, jule::Str* _13851_ident, jule::Bool _13863_binded);
inline jule::Bool _1aa3a14b0_isStdPackage(jule::Str* _36918_f, jule::Str _36926_p);
inline jule::Bool _1aa3b8ae3_isValidModelForRef(jule::Any* _1328_m);
inline _1ada72b17_Log _1aa3b9099_compilerErr(jule::Ptr<_1aa2d51c4_Token>* _4717_token, jule::Bool _4732_line, jule::Str _4744_fmt, jule::Slice<jule::Any> _4757_args);
inline jule::Bool _1aa3b941d_impIsLookupable(jule::Ptr<_1aa39b0ae_ImportInfo>* _6121_i, jule::Str* _6138_ident);
inline void _1aa3b974d_appendRetVars(jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>* _7323_dest, jule::Ptr<_1aa334597_FnIns>* _7342_f);
inline void _1aa3b9a39_appendParamVars(jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>* _10325_dest, jule::Ptr<_1aa334597_FnIns>* _10344_f);
inline void _1aa3b9d25_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>* _16334_dest, jule::Ptr<_1aa334597_FnIns>* _16359_f);
inline jule::Ptr<_1aa4475cd_SymbolTable> _1aa3ba199_findFile(jule::Slice<jule::Ptr<_1aa4475cd_SymbolTable>>* _20418_files, jule::Ptr<_1aa2da95a_File>* _20442_handler);
inline void _1aa3ba650_pushSuggestion(_1ada72b17_Log* _21330_log, jule::Str _21341_fmt, jule::Slice<jule::Any> _21354_args);
inline void _1aa3e3524_pushImplemented(jule::Ptr<_1aa345047_Trait> _297724_t, jule::Ptr<_1aa31b518_Struct>* _297740_d);
inline void _1aa3e3810_pushImplements(jule::Ptr<_1aa31b518_Struct>* _299524_s, jule::Ptr<_1aa345047_Trait> _299540_t);
inline jule::Bool _1aa4331ce_traitHasReferenceReceiver(jule::Ptr<_1aa345047_Trait>* _2831_t);
inline jule::Bool _1aa433564_floatAssignable(jule::Str* _4321_kind, jule::Ptr<_1aa44cc98_Data>* _4333_d);
inline jule::Bool _1aa4338d8_sigAssignable(jule::Str _4818_kind, jule::Ptr<_1aa44cc98_Data>* _4830_d);
inline jule::Bool _1aa433ca1_unsigAssignable(jule::Str _7120_kind, jule::Ptr<_1aa44cc98_Data>* _7132_d);
inline jule::Bool _1aa434125_intAssignable(jule::Str _10018_kind, jule::Ptr<_1aa44cc98_Data>* _10030_d);
inline void _1aa44053d_checkMutRiskOfStructLit(jule::Ptr<_1aa3bb530_sema>* _92033_s, jule::Ptr<_1aa3244cc_StructLitExprModel>* _92044_m);
inline jule::Ptr<_1a601a64a_TypeKind> _1aa446379_lenKind(void);
inline jule::Bool _1aa4466cb_isGoodValueToInfer(jule::Ptr<_1aa44cc98_Data>* _142424_d);
inline jule::Ptr<_1aa2e9a9b_Directive> _1aa4766c8_findDirective(jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>>* _438723_directives, jule::Str _438754_d);
inline jule::Any _1aa476a91_findBuiltinsImport(jule::Str* _439624_ident, jule::Ptr<_1aa39b0ae_ImportInfo> _439636_imp);
inline void _1aa476cc2_fitBitsize(jule::Ptr<_1aa44cc98_Data>* _440520_d);
inline void _1aa477102_makeStructLitAlloc(jule::Ptr<_1aa44cc98_Data>* _443428_d, jule::Ptr<_1aa3244cc_StructLitExprModel>* _443443_lit);
inline jule::Ptr<_1aa3e4d3e_Var> _1aa477476_buildErrorVar(jule::Ptr<_1aa378ba2_Scope>* _444523_s, jule::Ptr<_1aa3036dc_FnCallExpr>* _444539_fc);
inline jule::Any _1a6013ad8_findBuiltinsSema(jule::Str* _446022_ident, jule::Ptr<_1aa3bb530_sema> _446038_s);
inline jule::Bool _1a6013da2_isOkForShifting(jule::Ptr<_1aa44cc98_Data>* _448525_d);
inline jule::Bool _1a601428c_isInstancedStruct(jule::Ptr<_1aa31e373_StructIns> _450222_s);
inline jule::Bool _1a6014611_isPtrArithmeticCompatible(jule::Ptr<_1aa44cc98_Data>* _450635_l, jule::Ptr<_1aa44cc98_Data>* _450650_r);
inline void _1a60149a7_applyCastKindModel(jule::Ptr<_1aa44cc98_Data>* _452728_d, jule::Ptr<_1a601a64a_TypeKind>* _452743_t, jule::Ptr<_1aa2d51c4_Token>* _452762_token);
inline void _1a6014d4d_applyCastKind(jule::Ptr<_1aa44cc98_Data>* _453623_d, jule::Ptr<_1a601a64a_TypeKind>* _453638_t, jule::Ptr<_1aa2d51c4_Token>* _453657_token);
inline jule::Ptr<_1aa44cc98_Data> _1a601505c_buildVoidData(void);
inline jule::Str _1a60153d1_checkDataForIntegerIndexing(jule::Ptr<_1aa44cc98_Data>* _454737_d, jule::Ptr<_1aa2d51c4_Token>* _454752_token);
inline void _1a6015777_applyCastModelByEnum(jule::Ptr<_1aa44cc98_Data>* _457230_d, jule::Ptr<_1aa347753_Enum> _457244_e, jule::Ptr<_1aa2d51c4_Token>* _457259_token);
inline void _1a6015a63_castConstByType(jule::Str* _458321_t, jule::Ptr<_1aa44cc98_Data>* _458334_d);
inline void _1a6016080_updateModelToGenericIns(jule::Any* _461733_m, jule::Ptr<_1aa334597_FnIns>* _461752_f);
inline jule::Bool _1a60162e4_pushSubIdentFromExpr(jule::Any _462829_expr, jule::Ptr<_1aa2eb053_SubIdentTypeDecl>* _462850_t);
inline jule::Str _1a60165ad_constoa(jule::Ptr<_1a6e77584_Const>* _465113_c);
inline jule::Ptr<_1aa44cc98_Data> _1a60169dc_evalEnumStatic(jule::Ptr<_1aa347753_Enum>* _466224_enm, jule::Ptr<_1aa346bd6_EnumItem>* _466241_item, jule::Ptr<_1aa2d51c4_Token>* _466263_token);
inline jule::Ptr<_1aa3244cc_StructLitExprModel> _1a6016ca6_isLitBased(jule::Any* _467920_m);
inline void _1a6017092_makeImplicitDeref(jule::Ptr<_1aa44cc98_Data>* _469627_d, jule::Ptr<_1aa2d51c4_Token> _469641_baseToken);
inline void _1bbab44ec_updateRefer(jule::Ptr<_1aa337732_ReferenceStack> _470723_ref, jule::Ptr<_1aa334597_FnIns>* _470746_old, jule::Ptr<_1aa334597_FnIns>* _470759_new);
inline void _1a6017724_makeVariadic(jule::Ptr<_1aa44cc98_Data>* _471522_d, jule::Ptr<_1a601a64a_TypeKind> _471536_elem);
inline jule::Bool _1a6017b53_isVarCaptured(jule::Ptr<_1aa381160_scopeChecker> _472918_r, jule::Ptr<_1aa381160_scopeChecker> _472940_s, jule::Ptr<_1aa3e4d3e_Var> _472958_v);
inline jule::Bool _1a60363e1_kindUsesGenerics(jule::Ptr<_1a601a64a_TypeKind>* _174226_k, jule::Slice<jule::Ptr<_1aa307889_GenericDecl>>* _174241_generics);
inline jule::Bool _1a60367a9_hasDirective(jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>>* _175222_directives, jule::Str _175253_tag);
inline jule::Bool _1a6036a73_canGetPtr(jule::Ptr<_1aa44cc98_Data>* _176119_d);
inline jule::Bool _1a6036db4_isValidForSptrType(jule::Ptr<_1a601a64a_TypeKind>* _177328_t);
inline jule::Bool _1a603714a_isValidForRef(jule::Ptr<_1a601a64a_TypeKind>* _178223_t);
inline jule::Bool _1a6037414_isBuiltinStrConvertable(jule::Ptr<_1a601a64a_TypeKind>* _178533_t);
inline jule::Str _1a60376cd_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _178927_tokens);
inline jule::Ptr<_1a6023763_Prim> _1a6037aa7_buildPrimType(jule::Str _180818_kind);
inline void _1a6038190_applyImplicitCast(jule::Ptr<_1a601a64a_TypeKind>* _183627_dest, jule::Ptr<_1aa44cc98_Data>* _183649_d, jule::Ptr<_1aa2d51c4_Token>* _183664_token);
inline jule::Bool _1a6038459_validTypeForXof(jule::Ptr<_1a601a64a_TypeKind>* _186425_t);
inline __jule_tuple_x_1aa4475cd_SymbolTable__jule_tuple_s_1ada72b17_Log _1a603b56c_buildSymbols(jule::Ptr<_1aa2e876a_AST>* _1622_ast, jule::Trait* _1638_importer, jule::Ptr<_1aa33d6e4_symbolBuilder> _1662_owner);
inline void _1a603b89c_collectImplicitImports(jule::Ptr<_1aa3bb530_sema>* _3132_s, jule::Ptr<_1aa4475cd_SymbolTable>* _3147_file);
inline __jule_tuple_x_1aa39ded5_Package__jule_tuple_s_1ada72b17_Log _1a603bccb_analyzePackage(jule::Slice<jule::Ptr<_1aa2e876a_AST>>* _4524_files, jule::Trait* _4544_importer, jule::I32* _4565_flags);
inline __jule_tuple_x_1aa39ded5_Package__jule_tuple_s_1ada72b17_Log _1a603c282_AnalyzePackage(jule::Slice<jule::Ptr<_1aa2e876a_AST>> _9523_files, jule::Trait _9542_importer, jule::I32 _9562_flags);
inline jule::Ptr<_1aa334597_FnIns> _1aa5db0ac_findBuiltinFunc(jule::Str* _2621_ident);
inline jule::Ptr<_1a6019858_TypeAlias> _1aa5db3ba_primTypeAlias(jule::Ptr<_1a601a64a_TypeKind>* _6623_k);
inline jule::Ptr<_1aa3e4d3e_Var> _1aa5dec70_findBuiltinVar(jule::Str* _9420_ident);
inline jule::Ptr<_1a6019858_TypeAlias> _1aa5e00b1_findBuiltinTypeAlias(jule::Str _14225_ident);
inline jule::Any _1aa5e0347_findBuiltinDef(jule::Str* _19720_ident);
inline jule::Any _1aa5e0611_findBuiltinDefStdDebug(jule::Str* _21328_ident);
inline jule::Any _1aa5e08ca_findBuiltinDefStdMem(jule::Str* _22626_ident);
inline jule::Any _1aa5e0ca4_findBuiltinDefStdComptime(jule::Str* _24231_ident);
inline jule::Any _1aa5e0ee6_findBuiltinDefStdJuleIntegrated(jule::Str* _26737_ident);
inline jule::Any _1aa5e136a_findPackageBuiltinDef(jule::Str* _28527_linkPath, jule::Str* _28543_ident);
inline jule::Ptr<_1aa44cc98_Data> _1aa5e16de_builtinCallerError(jule::Ptr<_1aa44e9c0_eval>* _30028_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _30043_fc);
inline jule::Ptr<_1aa44cc98_Data> _1aa5e1b1d_builtinCallerOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _32226_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _32241_fc, jule::Ptr<_1aa44cc98_Data>* );
inline jule::Ptr<_1aa44cc98_Data> _1aa5e204c_builtinCallerOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _34628_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _34643_fc, jule::Ptr<_1aa44cc98_Data>* _34665_d);
inline jule::Ptr<_1aa44cc98_Data> _1aa5e247b_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _35826_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _35841_fc, jule::Ptr<_1aa44cc98_Data>* _35863_d);
inline jule::Ptr<_1aa44cc98_Data> _1aa5e28aa_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _42028_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _42043_fc, jule::Ptr<_1aa44cc98_Data>* );
inline jule::Ptr<_1aa44cc98_Data> _1aa5e301a_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _44627_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _44642_fc, jule::Ptr<_1aa44cc98_Data>* _44664_d);
inline jule::Ptr<_1aa44cc98_Data> _1aa5e3339_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _49729_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _49744_fc, jule::Ptr<_1aa44cc98_Data>* _49766_d);
inline jule::Ptr<_1aa44cc98_Data> _1aa5e3823_callerCopySlice(jule::Ptr<_1aa44cc98_Data>* _60825_dest, jule::Ptr<_1aa44e9c0_eval>* _60843_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _60858_fc, jule::Ptr<_1aa44cc98_Data>* _60880_d);
inline jule::Ptr<_1aa44cc98_Data> _1aa5e3c52_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _64227_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _64242_fc, jule::Ptr<_1aa44cc98_Data>* _64264_d);
inline jule::Ptr<_1aa44cc98_Data> _1aa5e40c6_callerLenSlice(jule::Ptr<_1aa44cc98_Data>* _66724_expr, jule::Ptr<_1aa44cc98_Data>* _66742_d);
inline jule::Ptr<_1aa44cc98_Data> _1aa5e444a_callerLenMap(jule::Ptr<_1aa44cc98_Data>* _67522_expr, jule::Ptr<_1aa44cc98_Data>* _67540_d);
inline jule::Ptr<_1aa44cc98_Data> _1aa5e47be_callerLenArr(jule::Ptr<_1aa44cc98_Data>* _68322_expr, jule::Ptr<_1aa44cc98_Data>* _68340_d);
inline jule::Ptr<_1aa44cc98_Data> _1aa5e4b43_callerLenStr(jule::Ptr<_1aa44cc98_Data>* _69022_expr, jule::Ptr<_1aa44cc98_Data>* _69040_d);
inline jule::Ptr<_1aa44cc98_Data> _1aa5e4eb7_callerLenComptime(jule::Ptr<_1aa44cc98_Data>* _70327_d, jule::I32 _70337_n);
inline jule::Ptr<_1aa44cc98_Data> _1aa5e53e6_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _71026_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _71041_fc, jule::Ptr<_1aa44cc98_Data>* _71063_d);
inline jule::Ptr<_1aa44cc98_Data> _1aa5e576a_callerCapSlice(jule::Ptr<_1aa44cc98_Data>* _75024_expr, jule::Ptr<_1aa44cc98_Data>* _75042_d);
inline jule::Ptr<_1aa44cc98_Data> _1aa5e5b99_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _75826_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _75841_fc, jule::Ptr<_1aa44cc98_Data>* _75863_d);
inline jule::Ptr<_1aa44cc98_Data> _1aa5e6183_callerDeleteMap(jule::Ptr<_1aa44e9c0_eval>* _78125_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _78140_fc, jule::Ptr<_1aa44cc98_Data>* _78162_expr, jule::Ptr<_1aa44cc98_Data>* _78180_d);
inline jule::Ptr<_1aa44cc98_Data> _1aa5e65b2_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _81029_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _81044_fc, jule::Ptr<_1aa44cc98_Data>* _81066_d);
inline jule::Ptr<_1aa44cc98_Data> _1aa5e69e1_builtinCallerAssert(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _83329_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _83344_fc, jule::Ptr<_1aa44cc98_Data>* );
inline jule::Ptr<_1aa44cc98_Data> _1aa5e6e20_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _87740_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _87755_fc, jule::Ptr<_1aa44cc98_Data>* );
inline jule::Ptr<_1aa44cc98_Data> _1aa5e7591_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _91341_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _91356_fc, jule::Ptr<_1aa44cc98_Data>* );
inline jule::Ptr<_1aa44cc98_Data> _1aa5e79c0_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _93338_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _93353_fc, jule::Ptr<_1aa44cc98_Data>* );
inline jule::Ptr<_1aa44cc98_Data> _1aa5e7dee_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _94538_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _94553_fc, jule::Ptr<_1aa44cc98_Data>* );
inline jule::Ptr<_1aa44cc98_Data> _1aa5e832d_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _95839_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _95854_fc, jule::Ptr<_1aa44cc98_Data>* );
inline jule::Ptr<_1aa44cc98_Data> _1aa5e875c_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _97143_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _97158_fc, jule::Ptr<_1aa44cc98_Data>* );
inline jule::Ptr<_1aa44cc98_Data> _1aa5e8b8b_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _103135_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _103150_fc, jule::Ptr<_1aa44cc98_Data>* );
inline jule::Ptr<_1aa44cc98_Data> _1aa5e90ba_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _105636_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _105651_fc, jule::Ptr<_1aa44cc98_Data>* );
inline jule::Ptr<_1aa44cc98_Data> _1aa5e94e9_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _108133_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _108148_fc, jule::Ptr<_1aa44cc98_Data>* );
inline jule::Ptr<_1aa44cc98_Data> _1aa5e9928_builtinCallerStdJuleIntegratedToStr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _110445_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _110460_fc, jule::Ptr<_1aa44cc98_Data>* );
inline jule::Ptr<_1aa44cc98_Data> _1aa5e9d57_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _113144_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _113159_fc, jule::Ptr<_1aa44cc98_Data>* _113181_d);
inline jule::Ptr<_1aa44cc98_Data> _1aa5ea286_builtinCallerStdDebugOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _118234_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _118249_fc, jule::Ptr<_1aa44cc98_Data>* _118271_d);
inline jule::Ptr<_1aa44cc98_Data> _1aa5ea6b5_builtinCallerStdDebugOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _119136_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _119151_fc, jule::Ptr<_1aa44cc98_Data>* _119173_d);
inline jule::Ptr<_1aa84c681_FileInfo> _1aa84cbe2_ParseFile(jule::Ptr<_1aa2da95a_File> _2318_f);
inline __jule_tuple_x_1aa2e876a_AST__jule_tuple_s_1ada72b17_Log _1aa84d2b9_parseFileset(jule::Ptr<_1aa2da95a_File> _5521_f);
inline jule::Ptr<_1aa30a6a0_ScopeTree> _1aa84dc8c_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1aa84e0de_isSt(jule::Ptr<_1aa2d51c4_Token> _499_current, jule::Ptr<_1aa2d51c4_Token> _4926_prev);
inline jule::Bool _1aa84e463_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _5526_tokens, jule::I32* _5545_i);
inline __jule_tuple_int__jule_tuple_bool _1aa84e82b_nextStPos(jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _6815_tokens, jule::I32 _6833_start);
inline __jule_tuple_sx_1aa2d51c4_Token__jule_tuple_bool _1aa84eba0_skipSt(jule::I32* _13016_i, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _13028_tokens);
inline jule::Slice<jule::Ptr<_1aa84eed0_stmt>> _1aa850387_splitStmts(jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _15120_tokens);
inline jule::Bool _1aa8689dd_isTypeOp(jule::U32* _89314_id);
inline jule::Bool _1aa868ceb_isTypeRange(jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _90021_tokens);
inline jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _1aa8690b5_getBlockExpr(jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _93322_tokens);
inline __jule_tuple_sx_1aa2d51c4_Token__jule_tuple_sx_1aa2d51c4_Token _1aa86947d_splitDelim(jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _96520_tokens, jule::U32 _96538_delim);
inline jule::I32 _1aa869747_findLowestPrecOp(jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _100422_tokens);
inline jule::Ptr<_1aa3012cd_IdentExpr> _1aa869a11_buildIdentExpr(jule::Ptr<_1aa2d51c4_Token>* _106924_token);
inline __jule_tuple_sx_1aa2d51c4_Token__jule_tuple_int _1aa869cca_getRangeExprTokens(jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _107728_tokens);
inline jule::Bool _1aa86a1a4_isAnonFnHead(jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _110018_tokens);
inline jule::Bool _1aa86ada8_checkAssignTokens(jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _1623_tokens);
inline _1ada72b17_Log _1aa86c074_makeErr(jule::I32 _5112_row, jule::I32 _5122_col, jule::Ptr<_1aa2da95a_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args);
inline jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _1aa86c5a2_range(jule::I32* _6915_i, jule::U32 _6923_open, jule::U32 _6938_close, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _6959_tokens);
inline __jule_tuple_sx_1aa2d51c4_Token__jule_tuple_sx_1aa2d51c4_Token _1aa86c86b_rangeLast(jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _9919_tokens);
inline __jule_tuple_ssx_1aa2d51c4_Token__jule_tuple_s_1ada72b17_Log _1aa86cd22_parts(jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _13715_tokens, jule::U32 _13733_id, jule::Bool _13746_exprMust);
inline jule::U32 _1aa86d0a8_getCloseOfBrace(jule::U32 _16720_left);
inline _1ada72b17_Log _1aa86d4d7_compilerErr(jule::Ptr<_1aa2d51c4_Token>* _18017_token, jule::Str* _18033_fmt, jule::Slice<jule::Any> _18046_args);
inline void _1aa86d87d_pushSuggestion(_1ada72b17_Log* _19130_log, jule::Str _19141_fmt, jule::Slice<jule::Any> _19154_args);
inline jule::Ptr<_1aa2ea67e_TypeDecl> _1aa880791_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _1a7619561_checkOs(jule::Str _912_arg);
inline __jule_tuple_bool__jule_tuple_bool _1a7619819_checkArch(jule::Str _2814_arg);
inline jule::Bool _1a7619ad3_isPassFileAnnotation(jule::Str _5029_p);
inline void _1a761ad6a_setOsVars(jule::Slice<jule::Str>* _3619_vars);
inline void _1a761b0e0_setArchVars(jule::Slice<jule::Str>* _4421_vars);
inline void _1a761b3cb_initVars(jule::Slice<jule::Str>* _5518_vars, _1a761aa4b_CompileInfo* _5532_info);
inline jule::Slice<jule::U8> _1aa88471d_readBuff(jule::Str _3013_path);
inline _1ada72b17_Log _1aa884a2b_flatCompilerErr(jule::Str _4120_text);
inline jule::Ptr<_1aa3315b6_Fn> _1aa603da5_RuntimeFindFn(jule::Ptr<_1aa39b0ae_ImportInfo>* _1323_runtime, jule::Str _1345_ident);
inline void _1aa8892e4_pushPasses(jule::Ptr<_1aa39ded5_Package>* _12220_p, jule::Slice<jule::Str>* _12244_passes);
inline jule::Slice<jule::Str> _1aa8896ac_getAllUniquePasses(jule::Ptr<_1aa39ded5_Package>* _13928_pkg, jule::Slice<jule::Ptr<_1aa39b0ae_ImportInfo>> _13953_uses);
inline _1a761aa4b_CompileInfo _1aa8898bb_buildCompileInfo(void);
inline void _1aa889b74_pushRuntimeToAST(jule::Ptr<_1aa2e876a_AST>* _17826_f);
inline void _1aa88a36c_IterPackages(jule::Ptr<_1aa887941_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1aa39ded5_Package>*> _731_f);
inline void _1aa88a69c_IterFiles(jule::Ptr<_1aa39ded5_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1aa4475cd_SymbolTable>*> _1634_f);
inline void _1aa88aa43_iterTraitInheritMethods(jule::Ptr<_1aa345047_Trait>* _2233_base, jule::Ptr<_1aa345047_Trait>* _2252_t, jule::Fn<void,jule::Ptr<_1aa3315b6_Fn>*> _2263_f);
inline void _1aa88ae61_iterTraitInheritMethods1(jule::Ptr<_1aa345047_Trait>* _3134_base, jule::Ptr<_1aa345047_Trait>* _3153_t, jule::Fn<void,jule::Ptr<_1aa3315b6_Fn>*> _3164_f);
inline void _1aa88b219_IterTraitMethods(jule::Ptr<_1aa345047_Trait>* _3926_t, jule::Fn<void,jule::Ptr<_1aa3315b6_Fn>*> _3937_f);
inline jule::Bool _1aa88d4e6_IsForwarded(jule::Ptr<_1aa378ba2_Scope>* _2417_s);
inline jule::Bool _1aa88d804_IsExprComesFromBind(jule::Ptr<_1aa44cc98_Data>* _4025_d);
inline jule::Bool _1aa88dabd_IsAny(jule::Ptr<_1a601a64a_TypeKind>* _5215_t);
inline jule::Bool _1aa88de0e_IsClosure(jule::Ptr<_1aa326545_AnonFnExprModel>* _6115_m);
inline jule::Bool _1aa88e195_IsOpMethod(jule::Ptr<_1aa3315b6_Fn>* _6416_m);
inline jule::Bool _1aa88e519_IsTraitMethod(jule::Ptr<_1aa31e373_StructIns>* _8023_owner, jule::Ptr<_1aa334597_FnIns>* _8043_f);
inline jule::Bool _1aa88e88d_IsStdPackage(jule::Str _9417_f, jule::Str _9425_p);
inline jule::Bool _1aa88ec67_IsImplicitImport(jule::Ptr<_1aa39b0ae_ImportInfo> _10221_imp);
inline jule::Ptr<_1aa2e9a9b_Directive> _1aa89088e_FindDirective(jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>>* _1123_directives, jule::Str _1154_tag);
inline jule::Bool _1aa890c57_HasDirective(jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>>* _2118_directives, jule::Str _2149_tag);
inline jule::Bool _1aa8910cb_ContainsTraitMethod(jule::Ptr<_1aa345047_Trait>* _2629_t, jule::Str* _2641_ident);
inline jule::I32 _1aa891791_FindTraitTypeOffsetS(jule::Ptr<_1aa345047_Trait> _3925_t, jule::Ptr<_1aa31e373_StructIns> _3940_s);
inline jule::I32 _1aa891b15_FindTraitTypeOffset(jule::Ptr<_1aa345047_Trait> _6224_t, jule::Ptr<_1a601a64a_TypeKind> _6239_k);
inline jule::Ptr<_1aa334597_FnIns> _1aa892044_FindOperator(jule::Ptr<_1aa31e373_StructIns>* _7822_s, jule::U32 _7837_op, jule::Bool _7850_unary);
inline jule::Ptr<_1aa334597_FnIns> _1aa8923b8_FindGenericInstance(jule::Ptr<_1aa3315b6_Fn>* _14729_f, jule::Slice<jule::Ptr<_1a601a64a_TypeKind>> _14737_generics);
inline jule::Bool _1bd513499_isOrdered(jule::Ptr<_1aa3e4d3e_Var>* _1418_t, jule::Slice<jule::Ptr<_1aa3e4d3e_Var>> _1425_s);
inline jule::Bool _1bd51a12c_isOrdered(jule::Ptr<_1aa31b518_Struct>* _1418_t, jule::Slice<jule::Ptr<_1aa31b518_Struct>> _1425_s);
inline void _1bd510b6c_order(jule::Slice<jule::Ptr<_1aa3e4d3e_Var>> _3717_s);
inline void _1bd5178aa_order(jule::Slice<jule::Ptr<_1aa31b518_Struct>> _3717_s);
inline void _1ab1a636e_EliminateDefines(jule::Ptr<_1aa887941_IR>* _35326_ir);
inline void _1ab1aa2da_eliminateDeadCodeOfScope(jule::Ptr<_1aa378ba2_Scope> _23833_s);
inline void _1ab1aa560_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1aa3315b6_Fn>>* _25033_funcs);
inline void _1ab1aa791_eliminateScopeStructMethods(jule::Slice<jule::Ptr<_1aa31b518_Struct>>* _25937_structs);
inline void _1ab1aaa49_eliminateFunctionsScopePackage(jule::Ptr<_1aa39ded5_Package>* _26740_pkg);
inline void _1ab1aac47_eliminateScopePackage(jule::Ptr<_1aa39ded5_Package>* _27431_pkg);
inline void _1ab1aae78_EliminateScopes(jule::Ptr<_1aa887941_IR>* _27925_ir);
inline jule::Uintptr _1aa5ea96d_typeData(jule::Any* _1714_m);
inline jule::Bool _1aa5ead36_equalConst(jule::Ptr<_1a6e77584_Const> _2115_l, jule::Ptr<_1a6e77584_Const> _2126_r);
inline jule::Bool _1aa5eb1aa_equalCasting(jule::Ptr<_1aa324d5c_CastingExprModel> _4017_l, jule::Ptr<_1aa324d5c_CastingExprModel> _4039_r);
inline jule::Bool _1aa5eb573_equalUnary(jule::Ptr<_1aa323b08_UnaryExprModel> _4715_l, jule::Ptr<_1aa323b08_UnaryExprModel> _4735_r);
inline jule::Bool _1aa5eb8e7_equalIndexing(jule::Ptr<_1aa32608e_IndexingExprModel> _5418_l, jule::Ptr<_1aa32608e_IndexingExprModel> _5441_r);
inline jule::Bool _1aa5ebc6b_equalBinary(jule::Ptr<_1aa32372e_BinaryExprModel> _5916_l, jule::Ptr<_1aa32372e_BinaryExprModel> _5937_r);
inline jule::Bool _1aa5ec0e0_equalModels(jule::Any _7016_l, jule::Any _7030_r);
inline void _1aa602c0b_possibleNilRemove(jule::Ptr<_1aa601c2c_nils>* _7827_n, jule::Any _7837_m);
inline jule::Bool _1aa6030c4_isGuaranteedNonNilExpr(jule::Ptr<_1aa601c2c_nils>* _8432_n, jule::Any _8442_m);
inline jule::Bool _1aa60338d_isNilValidType(jule::Ptr<_1a601a64a_TypeKind> _9223_t);
inline jule::Uintptr _1aa6036ce_getNilVar(jule::Any _9414_m);
inline jule::Bool _1aa898e80_isConstantValidConditionalCase(jule::Ptr<_1aa3790c0_If>* _68736_i);
inline jule::Bool _1aa89928d_isUnreachableExpr(jule::Any* _69623_expr);
inline jule::Bool _1aa899557_isConstantValidMatchCase(jule::Ptr<_1aa37d8dd_Case>* _71130_case);
inline jule::Bool _1aa899898_isUnreachableConditionalCase(jule::Ptr<_1aa3790c0_If>* _72034_i);
inline jule::Bool _1aa899b2e_isUnreachableMatchCase(jule::Ptr<_1aa37d8dd_Case>* _72428_case);
inline __jule_tuple_bool__jule_tuple_u64 _1aa8a010c_checkForBitShiftOpt(jule::Ptr<_1aa323234_OperandExprModel>* _59325_l, jule::Ptr<_1aa323234_OperandExprModel>* _59348_r);
inline jule::Bool _1aa8a04c5_areSameLvalueExprModel(jule::Any* _61028_l, jule::Any* _61043_r);
inline void _1aa8a2692_possibleDynamicRemove(jule::Ptr<_1aa8a1608_dynamic>* _8131_d, jule::Any _8144_m);
inline jule::Bool _1aa8a29a0_isDynamicValidType(jule::Ptr<_1a601a64a_TypeKind> _8727_t);
inline jule::Ptr<_1a601a64a_TypeKind> _1aa8a2dce_isTypeGuaranteedDynamicData(jule::Ptr<_1aa8a1608_dynamic>* _8937_dy, jule::Ptr<_1a601a64a_TypeKind> _8955_t, jule::Any _8973_m);
inline jule::Uintptr _1aa8a3220_getDynamicVar(jule::Any _11418_m);
inline jule::Bool _1aa8a6c7e_isValidBoundaryInfo(jule::Any _8424_m);
inline jule::I32 _1aa8a7147_fitsMaxSize(jule::Slice<jule::Any> _8916_max, jule::Any _8934_expr);
inline jule::Bool _1aa8a74bb_fitsSize(jule::Any _9813_e1, jule::Any _9828_e2);
inline void _1aa8a77eb_possibleBoundaryRemove(jule::Ptr<_1aa8a5c17_boundary>* _12432_b, jule::Any _12446_model);
inline jule::Bool _1aa8a7ab5_isBoundaryRiskyType(jule::Ptr<_1a601a64a_TypeKind> _13628_t);
inline jule::Bool _1aa8a7d7e_isBoundaryValidType(jule::Ptr<_1a601a64a_TypeKind> _14128_t);
inline jule::Uintptr _1aa8a8148_getBoundaryVar(jule::Any _14319_m);
inline void _1aa8ab1c3_PushOptLevel(jule::I32 _3217_level);
inline void _1ab1ae674_detectEnabled(void);
inline void _1ab1d67cd_Throw(jule::Str _910_msg);
inline jule::U64 _1abb0236e_unix(void);
inline jule::Bool _1aba2edc3_isCopyOptimizable(jule::Ptr<_1aa44cc98_Data>* _112823_expr);
inline jule::Bool _1aba3028b_isIterCopyOptimizable(jule::Ptr<_1aa44cc98_Data>* _113927_expr, jule::Ptr<_1aa3e4d3e_Var>* _113941_v);
inline jule::Bool _1aba306ba_captureVarHandling(jule::Ptr<_1abb0aab4_ObjectCoder>* _114628_oc, jule::Ptr<_1aa326545_AnonFnExprModel>* _114651_m, jule::Ptr<_1aa3e4d3e_Var>* _114677_v);
inline jule::Str _1aba43810_decomposeCommonEsq(jule::U8 _186923_b);
inline jule::Str _1aba43b1d_sbtoa(jule::U8 _189610_b);
inline void _1aba43e09_cstrBytes(_1ed486d49_StrBuilder* _191619_s, jule::Str _191634_ctx);
inline void _1aba44239_cstrLit(_1ed486d49_StrBuilder* _192217_s, jule::Str _192232_ctx);
inline void _1aba445d0_ftoa(_1ed486d49_StrBuilder* _192814_s, jule::F64 _192829_f, jule::I32 _192837_bitsize);
inline void _1aba448bb_itoa(_1ed486d49_StrBuilder* _194614_s, jule::I64 _194629_x);
inline void _1aba44ba7_utoa(_1ed486d49_StrBuilder* _196314_s, jule::U64 _196329_x);
inline void _1aba45306_operatorOverloadingBinary(_1ed486d49_StrBuilder* _197735_buf, jule::Ptr<_1aa31e373_StructIns>* _197757_s, jule::Str* _197773_l, jule::Str* _19783_r, jule::U32 _197811_op, jule::Str _197824_kind);
inline jule::Slice<jule::U8> _1abb18088_concatAllParts(jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _128319_parts);
inline jule::Bool _1abb18396_isHeadDecl(jule::Ptr<_1aa3315b6_Fn>* _129920_m);
inline jule::Bool _1abb18660_defaultEq(jule::Ptr<_1aa31e373_StructIns>* _131215_s);
inline jule::Bool _1abb27828_ableToInit(jule::Ptr<_1a601a64a_TypeKind>* _46820_t);
inline jule::Bool _1abb27b03_shouldInitialized(jule::Ptr<_1a601a64a_TypeKind>* _47527_t);
inline void _1adc51a1b_printErrorMessage(jule::Str _3022_msg);
inline void _1adc51c91_help(jule::Slice<jule::Str>* _3510_args);
inline void _1adc51ec2_version(jule::Slice<jule::Str>* _6313_args);
inline void _1adc521d1_toolDistos(void);
inline void _1adc52346_toolDistarch(void);
inline void _1adc52544_tool(jule::Slice<jule::Str>* _9410_args);
inline void _1adc52775_julenv(jule::Slice<jule::Str>* _11712_args);
inline void _1adc52ab6_mod(jule::Slice<jule::Str>* _1309_args);
inline jule::Bool _1adc52d08_processCommand(jule::Slice<jule::Str>* _15320_args);
inline void _1adc52ea1_showInfo(void);
void entry_point(void);
inline void _1abb94aa4_init(void);
inline jule::Ptr<_1ed37e879_File> _1abb94d6d_openOutput(jule::Str* _4316_path);
inline void _1abb95016_clearObjects(void);
inline void _1abb95324_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd);
inline jule::Bool _1abb955dd_isCppSourceFile(jule::Str _9920_path);
inline void _1abb9581e_pushCompCmdClang(_1ed486d49_StrBuilder* _10726_cmd);
inline void _1abb95a50_pushCompCmdGcc(_1ed486d49_StrBuilder* _13324_cmd);
inline __jule_tuple_str__jule_tuple_str _1abb95ed4_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1aa887941_IR>* _15936_ir);
inline jule::Str _1abb9616b_getCompilePath(void);
inline void _1abb9639c_applyTargetIndependentOptimizations(jule::Ptr<_1aa887941_IR>* _20545_ir);
inline void _1abb96545_checkCompilerFlag(void);
inline void _1abb96754_checkTargetArch(jule::Str _22720_arch);
inline void _1abb96985_checkTargetOs(jule::Str _23518_os);
inline void _1abb96bb6_checkTargetFlag(jule::Str* _24321_target);
inline void _1abb96de7_checkOptFlag(jule::Str* _26618_opt);
inline void _1abb972b0_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1abb9747a_checkFlags(jule::Slice<jule::Str>* _29216_args);
inline void _1abb97689_setupSemaFlags(jule::I32* _33724_flags);
inline jule::Ptr<_1aa887941_IR> _1abb97953_buildIr(jule::Slice<jule::Str>* _34313_args);
inline void _1abb97b84_compileCommand(jule::Slice<jule::Str>* _38324_args);


struct _1aa34be2d_comptimeRangeKindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1aa34b625_ready)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aa3e4d3e_Var>* _2426_keyA, jule::Ptr<_1aa3e4d3e_Var>* _2443_keyB);
	void(*_1aa34ba43_step)(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2520_i, jule::Ptr<_1aa3e4d3e_Var>* _2533_keyA, jule::Ptr<_1aa3e4d3e_Var>* _2550_keyB);
	jule::I32(*_1aa34bcc9_len)(jule::Ptr<jule::Uintptr> _self_);
};

struct _1aa397d25_ImporterMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1aa396b04_SetModPath)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path);
	jule::Str(*_1aa396d8a_GetModPath)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1aa3971cb_ModById)(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2519_id);
	jule::Ptr<_1aa39b0ae_ImportInfo>(*_1aa39751c_GetImport)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path);
	__jule_tuple_sx_1aa2e876a_AST__jule_tuple_s_1ada72b17_Log(*_1aa397918_ImportPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_update_mod);
	void(*_1aa397bc1_Imported)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aa39b0ae_ImportInfo> _4128__0);
};

struct _1a601a194_KindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1a6019bee_Str)(jule::Ptr<jule::Uintptr> _self_);
	jule::Bool(*_1a601a040_Equal)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a601a64a_TypeKind> _5618_other);
};

struct _1a603a77a_LookupMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Ptr<_1aa39b0ae_ImportInfo>(*_1a6038a64_SelectPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1aa39b0ae_ImportInfo>> _929_selector);
	jule::Ptr<_1aa3e4d3e_Var>(*_1a6038e60_FindVar)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded);
	jule::Ptr<_1a6019858_TypeAlias>(*_1a603935b_FindTypeAlias)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded);
	jule::Ptr<_1aa31b518_Struct>(*_1a6039757_FindStruct)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded);
	jule::Ptr<_1aa3315b6_Fn>(*_1a6039b53_FindFn)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded);
	jule::Ptr<_1aa345047_Trait>(*_1a6039e94_FindTrait)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident);
	jule::Ptr<_1aa347753_Enum>(*_1a603a2d5_FindEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident);
	jule::Ptr<_1aa348e5d_TypeEnum>(*_1a603a626_FindTypeEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident);
};

struct _1abb8c76c_CommonFlagMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1abb5b62b_Name)(jule::Ptr<jule::Uintptr> _self_);
	jule::I32(*_1abb5b76e_Short)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1abb5b8b2_What)(jule::Ptr<jule::Uintptr> _self_);
	void(*_1abb8c618_Reset)(jule::Ptr<jule::Uintptr> _self_);
};



void __jule_type_deallocator0(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa34e3c5_comptimeStructFields>().dealloc(); }
void __jule_type_deallocator1(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa352274_comptimeStatics>().dealloc(); }
void __jule_type_deallocator2(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa354c16_comptimeEnumFields>().dealloc(); }
void __jule_type_deallocator3(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa35808d_comptimeParams>().dealloc(); }
void __jule_type_deallocator4(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa359655_comptimeTypeInfos>().dealloc(); }
void __jule_type_deallocator5(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa3646a4_comptimeFiles>().dealloc(); }
void __jule_type_deallocator6(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa3679e8_comptimeDecls>().dealloc(); }
void __jule_type_deallocator7(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa885015_JuleImporter>().dealloc(); }
void __jule_type_deallocator8(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa31e373_StructIns>().dealloc(); }
void __jule_type_deallocator9(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa334597_FnIns>().dealloc(); }
void __jule_type_deallocator10(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa345047_Trait>().dealloc(); }
void __jule_type_deallocator11(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa347753_Enum>().dealloc(); }
void __jule_type_deallocator12(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa348e5d_TypeEnum>().dealloc(); }
void __jule_type_deallocator13(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa34c14d_comptimeRange>().dealloc(); }
void __jule_type_deallocator14(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa34cb21_comptimeStructField>().dealloc(); }
void __jule_type_deallocator15(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa3509c0_comptimeStatic>().dealloc(); }
void __jule_type_deallocator16(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa35386e_comptimeEnumField>().dealloc(); }
void __jule_type_deallocator17(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa356311_comptimeParam>().dealloc(); }
void __jule_type_deallocator18(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa35ac50_comptimeTypeInfo>().dealloc(); }
void __jule_type_deallocator19(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa361d55_comptimeValue>().dealloc(); }
void __jule_type_deallocator20(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa365c9e_comptimeFile>().dealloc(); }
void __jule_type_deallocator21(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa369841_comptimeDecl>().dealloc(); }
void __jule_type_deallocator22(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a601a64a_TypeKind>().dealloc(); }
void __jule_type_deallocator23(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a6023763_Prim>().dealloc(); }
void __jule_type_deallocator24(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a602728e_Sptr>().dealloc(); }
void __jule_type_deallocator25(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a6027c62_Slc>().dealloc(); }
void __jule_type_deallocator26(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a6028856_Tuple>().dealloc(); }
void __jule_type_deallocator27(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a6029406_Map>().dealloc(); }
void __jule_type_deallocator28(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a602a083_Arr>().dealloc(); }
void __jule_type_deallocator29(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a602aa56_Ptr>().dealloc(); }
void __jule_type_deallocator30(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abb19b39_customType>().dealloc(); }
void __jule_type_deallocator31(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa381160_scopeChecker>().dealloc(); }
void __jule_type_deallocator32(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa39b0ae_ImportInfo>().dealloc(); }
void __jule_type_deallocator33(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa39ded5_Package>().dealloc(); }
void __jule_type_deallocator34(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa3bb530_sema>().dealloc(); }
void __jule_type_deallocator35(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa4475cd_SymbolTable>().dealloc(); }
void __jule_type_deallocator36(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bcc09465_Flag>().dealloc(); }
void __jule_type_deallocator37(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bcc0d06d_Flag>().dealloc(); }
void __jule_type_deallocator38(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bcc11736_Flag>().dealloc(); }
void __jule_type_deallocator39(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bcc14e43_Flag>().dealloc(); }
void __jule_type_deallocator40(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bcc1860b_Flag>().dealloc(); }
void __jule_type_deallocator41(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator42(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator43(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
void __jule_type_deallocator44(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
void __jule_type_deallocator45(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
void __jule_type_deallocator46(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
void __jule_type_deallocator47(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator48(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa3e4d3e_Var>().dealloc(); }
void __jule_type_deallocator49(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa3172e4_Impl>().dealloc(); }
void __jule_type_deallocator50(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa31219b_TypeAliasDecl>().dealloc(); }
void __jule_type_deallocator51(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa316447_StructDecl>().dealloc(); }
void __jule_type_deallocator52(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa30c33e_FnDecl>().dealloc(); }
void __jule_type_deallocator53(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa316b84_TraitDecl>().dealloc(); }
void __jule_type_deallocator54(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa30d4e9_VarDecl>().dealloc(); }
void __jule_type_deallocator55(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa3147ec_EnumDecl>().dealloc(); }
void __jule_type_deallocator56(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa315787_TypeEnumDecl>().dealloc(); }
void __jule_type_deallocator57(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa3185e2_Field>().dealloc(); }
void __jule_type_deallocator58(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a6e77584_Const>().dealloc(); }
void __jule_type_deallocator59(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa346bd6_EnumItem>().dealloc(); }
void __jule_type_deallocator60(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa32eae2_Param>().dealloc(); }
void __jule_type_deallocator61(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa31b518_Struct>().dealloc(); }
void __jule_type_deallocator62(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa3315b6_Fn>().dealloc(); }
void __jule_type_deallocator63(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a6019858_TypeAlias>().dealloc(); }
void __jule_type_deallocator64(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa37b545_Label>().dealloc(); }
void __jule_type_deallocator65(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa378ba2_Scope>().dealloc(); }
void __jule_type_deallocator66(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa32c00c_BuiltinErrorCallExprModel>().dealloc(); }
void __jule_type_deallocator67(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa44cc98_Data>().dealloc(); }
void __jule_type_deallocator68(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa32d31b_BackendEmitExprModel>().dealloc(); }
void __jule_type_deallocator69(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa32ac86_BuiltinAppendCallExprModel>().dealloc(); }
void __jule_type_deallocator70(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa3292c3_BuiltinOutCallExprModel>().dealloc(); }
void __jule_type_deallocator71(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa32969c_BuiltinOutlnCallExprModel>().dealloc(); }
void __jule_type_deallocator72(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa329e50_BuiltinPanicCallExprModel>().dealloc(); }
void __jule_type_deallocator73(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa32a406_BuiltinAssertCallExprModel>().dealloc(); }
void __jule_type_deallocator74(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa32bb33_BuiltinCopyCallExprModel>().dealloc(); }
void __jule_type_deallocator75(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa32b759_BuiltinDeleteCallExprModel>().dealloc(); }
void __jule_type_deallocator76(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa32d618_FreeExprModel>().dealloc(); }
void __jule_type_deallocator77(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa32570e_FnCallExprModel>().dealloc(); }
void __jule_type_deallocator78(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa3797da_Conditional>().dealloc(); }
void __jule_type_deallocator79(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa379ad7_InfIter>().dealloc(); }
void __jule_type_deallocator80(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa30e96d_WhileKind>().dealloc(); }
void __jule_type_deallocator81(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa37a08d_WhileIter>().dealloc(); }
void __jule_type_deallocator82(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa310375_RangeKind>().dealloc(); }
void __jule_type_deallocator83(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa37a9d9_RangeIter>().dealloc(); }
void __jule_type_deallocator84(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa37ad6e_ContSt>().dealloc(); }
void __jule_type_deallocator85(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa37b91e_GotoSt>().dealloc(); }
void __jule_type_deallocator86(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa37bce8_Postfix>().dealloc(); }
void __jule_type_deallocator87(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa37c29e_Assign>().dealloc(); }
void __jule_type_deallocator88(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa3012cd_IdentExpr>().dealloc(); }
void __jule_type_deallocator89(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa32608e_IndexingExprModel>().dealloc(); }
void __jule_type_deallocator90(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa37c755_MultiAssign>().dealloc(); }
void __jule_type_deallocator91(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa37cdb5_Match>().dealloc(); }
void __jule_type_deallocator92(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa37e0d6_FallSt>().dealloc(); }
void __jule_type_deallocator93(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa37b248_BreakSt>().dealloc(); }
void __jule_type_deallocator94(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa37e47c_RetSt>().dealloc(); }
void __jule_type_deallocator95(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa30a6a0_ScopeTree>().dealloc(); }
void __jule_type_deallocator96(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa2ee9b3_Expr>().dealloc(); }
void __jule_type_deallocator97(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa31195e_Conditional>().dealloc(); }
void __jule_type_deallocator98(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa30e143_Iter>().dealloc(); }
void __jule_type_deallocator99(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa310b28_ContSt>().dealloc(); }
void __jule_type_deallocator100(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa307c63_LabelSt>().dealloc(); }
void __jule_type_deallocator101(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa30813c_GotoSt>().dealloc(); }
void __jule_type_deallocator102(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa30912c_AssignSt>().dealloc(); }
void __jule_type_deallocator103(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa312e6b_MatchCase>().dealloc(); }
void __jule_type_deallocator104(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa308439_FallSt>().dealloc(); }
void __jule_type_deallocator105(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa31074e_BreakSt>().dealloc(); }
void __jule_type_deallocator106(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa30d8c3_RetSt>().dealloc(); }
void __jule_type_deallocator107(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa300387_UseExpr>().dealloc(); }
void __jule_type_deallocator108(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa2ec94a_ArrTypeDecl>().dealloc(); }
void __jule_type_deallocator109(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa2ebaae_SlcTypeDecl>().dealloc(); }
void __jule_type_deallocator110(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa2ec1a8_PtrTypeDecl>().dealloc(); }
void __jule_type_deallocator111(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa2eb729_SptrTypeDecl>().dealloc(); }
void __jule_type_deallocator112(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa2ed198_MapTypeDecl>().dealloc(); }
void __jule_type_deallocator113(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa2ebdab_TupleTypeDecl>().dealloc(); }
void __jule_type_deallocator114(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa2eac89_IdentTypeDecl>().dealloc(); }
void __jule_type_deallocator115(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa301e49_VariadicExpr>().dealloc(); }
void __jule_type_deallocator116(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa325ad8_SliceExprModel>().dealloc(); }
void __jule_type_deallocator117(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa3041d2_FieldExprPair>().dealloc(); }
void __jule_type_deallocator118(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa3057dd_KeyValPair>().dealloc(); }
void __jule_type_deallocator119(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa3005a7_TupleExpr>().dealloc(); }
void __jule_type_deallocator120(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa328de9_TupleExprModel>().dealloc(); }
void __jule_type_deallocator121(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa3036dc_FnCallExpr>().dealloc(); }
void __jule_type_deallocator122(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa32cb45_RuneExprModel>().dealloc(); }
void __jule_type_deallocator123(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa328aec_ArrayExprModel>().dealloc(); }
void __jule_type_deallocator124(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa302ac6_SubIdentExpr>().dealloc(); }
void __jule_type_deallocator125(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa2eb053_SubIdentTypeDecl>().dealloc(); }
void __jule_type_deallocator126(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa301a70_UnaryExpr>().dealloc(); }
void __jule_type_deallocator127(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa2ea67e_TypeDecl>().dealloc(); }
void __jule_type_deallocator128(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa3026ec_NsSelectionExpr>().dealloc(); }
void __jule_type_deallocator129(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa2eb42c_NamespaceTypeDecl>().dealloc(); }
void __jule_type_deallocator130(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa327458_SlicingExprModel>().dealloc(); }
void __jule_type_deallocator131(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa324d5c_CastingExprModel>().dealloc(); }
void __jule_type_deallocator132(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa306019_SliceExpr>().dealloc(); }
void __jule_type_deallocator133(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa3244cc_StructLitExprModel>().dealloc(); }
void __jule_type_deallocator134(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa328723_StructStaticIdentExprModel>().dealloc(); }
void __jule_type_deallocator135(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa3279db_TraitSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator136(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa32837c_StructSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator137(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa326dc5_MapExprModel>().dealloc(); }
void __jule_type_deallocator138(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa326545_AnonFnExprModel>().dealloc(); }
void __jule_type_deallocator139(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa2eec7c_RangeExpr>().dealloc(); }
void __jule_type_deallocator140(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa30094d_LitExpr>().dealloc(); }
void __jule_type_deallocator141(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa300d27_UnsafeExpr>().dealloc(); }
void __jule_type_deallocator142(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa306976_IndexingExpr>().dealloc(); }
void __jule_type_deallocator143(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa3070d6_SlicingExpr>().dealloc(); }
void __jule_type_deallocator144(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa302323_CastExpr>().dealloc(); }
void __jule_type_deallocator145(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa304a0c_StructLit>().dealloc(); }
void __jule_type_deallocator146(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa304eb3_BraceLit>().dealloc(); }
void __jule_type_deallocator147(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa30307c_BinaryExpr>().dealloc(); }
void __jule_type_deallocator148(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa323b08_UnaryExprModel>().dealloc(); }
void __jule_type_deallocator149(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa32372e_BinaryExprModel>().dealloc(); }
void __jule_type_deallocator150(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa3247c9_AllocStructLitExprModel>().dealloc(); }
void __jule_type_deallocator151(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa329a76_BuiltinNewCallExprModel>().dealloc(); }
void __jule_type_deallocator152(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa32a8ac_BuiltinMakeCallExprModel>().dealloc(); }
void __jule_type_deallocator153(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa32b083_BuiltinLenCallExprModel>().dealloc(); }
void __jule_type_deallocator154(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa32b380_BuiltinCapCallExprModel>().dealloc(); }
void __jule_type_deallocator155(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa32c6b1_SizeofExprModel>().dealloc(); }
void __jule_type_deallocator156(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa32c89d_AlignofExprModel>().dealloc(); }
void __jule_type_deallocator157(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa32ce42_IntegratedToStrExprModel>().dealloc(); }
void __jule_type_deallocator158(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa5ecc17_ExceptionalForwardingExprModel>().dealloc(); }
void __jule_type_deallocator159(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa600610_StrRuneIter>().dealloc(); }
void __jule_type_deallocator160(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa5ee301_MutSlicingExprModel>().dealloc(); }
void __jule_type_deallocator161(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa5eed5c_PushToSliceExprModel>().dealloc(); }
void __jule_type_deallocator162(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa600236_AppendToSliceExprModel>().dealloc(); }
void __jule_type_deallocator163(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa5ed09c_SwapExprModel>().dealloc(); }
void __jule_type_deallocator164(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa5ed476_EmptyCompareExprModel>().dealloc(); }
void __jule_type_deallocator165(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa5edc6d_StrCompExprModel>().dealloc(); }
void __jule_type_deallocator166(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa5ee5ed_UnsafeBinaryExprModel>().dealloc(); }
void __jule_type_deallocator167(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa60090c_UnsafeDerefExprModel>().dealloc(); }
void __jule_type_deallocator168(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa5ed7ea_RefExprModel>().dealloc(); }
void __jule_type_deallocator169(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa324136_StructArgExprModel>().dealloc(); }
void __jule_type_deallocator170(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa600c09_UnsafeCastingExprModel>().dealloc(); }
void __jule_type_deallocator171(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa5ee983_UnsafeIndexingExprModel>().dealloc(); }
void __jule_type_deallocator172(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
void __jule_type_deallocator173(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
void __jule_type_deallocator174(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
void __jule_type_deallocator175(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
void __jule_type_deallocator176(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
void __jule_type_deallocator177(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
inline void __jule_trait_method_1bbe975c2_1bbe438c0(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aa3e4d3e_Var>* _2426_keyA, jule::Ptr<_1aa3e4d3e_Var>* _2443_keyB) {
	_1aa350041_ready(_self_.as<_1aa34e3c5_comptimeStructFields>().alloc, _2426_keyA, _2443_keyB);
}
inline void __jule_trait_method_1bbe975c2_1bbe5a5b8(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aa3e4d3e_Var>* _2426_keyA, jule::Ptr<_1aa3e4d3e_Var>* _2443_keyB) {
	_1aa352de0_ready(_self_.as<_1aa352274_comptimeStatics>().alloc, _2426_keyA, _2443_keyB);
}
inline void __jule_trait_method_1bbe975c2_1bbe4951e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aa3e4d3e_Var>* _2426_keyA, jule::Ptr<_1aa3e4d3e_Var>* _2443_keyB) {
	_1aa355882_ready(_self_.as<_1aa354c16_comptimeEnumFields>().alloc, _2426_keyA, _2443_keyB);
}
inline void __jule_trait_method_1bbe975c2_1bbe4e854(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aa3e4d3e_Var>* _2426_keyA, jule::Ptr<_1aa3e4d3e_Var>* _2443_keyB) {
	_1aa358bc6_ready(_self_.as<_1aa35808d_comptimeParams>().alloc, _2426_keyA, _2443_keyB);
}
inline void __jule_trait_method_1bbe975c2_1bbe57472(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aa3e4d3e_Var>* _2426_keyA, jule::Ptr<_1aa3e4d3e_Var>* _2443_keyB) {
	_1aa35a2c1_ready(_self_.as<_1aa359655_comptimeTypeInfos>().alloc, _2426_keyA, _2443_keyB);
}
inline void __jule_trait_method_1bbe975c2_1bbe75a78(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aa3e4d3e_Var>* _2426_keyA, jule::Ptr<_1aa3e4d3e_Var>* _2443_keyB) {
	_1aa365320_ready(_self_.as<_1aa3646a4_comptimeFiles>().alloc, _2426_keyA, _2443_keyB);
}
inline void __jule_trait_method_1bbe975c2_1bbe6e610(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aa3e4d3e_Var>* _2426_keyA, jule::Ptr<_1aa3e4d3e_Var>* _2443_keyB) {
	_1aa368664_ready(_self_.as<_1aa3679e8_comptimeDecls>().alloc, _2426_keyA, _2443_keyB);
}
inline void __jule_trait_method_1bbe97d42_1bbe438c0(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2520_i, jule::Ptr<_1aa3e4d3e_Var>* _2533_keyA, jule::Ptr<_1aa3e4d3e_Var>* _2550_keyB) {
	_1aa35045e_step(_self_.as<_1aa34e3c5_comptimeStructFields>().alloc, _2520_i, _2533_keyA, _2550_keyB);
}
inline void __jule_trait_method_1bbe97d42_1bbe5a5b8(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2520_i, jule::Ptr<_1aa3e4d3e_Var>* _2533_keyA, jule::Ptr<_1aa3e4d3e_Var>* _2550_keyB) {
	_1aa35330d_step(_self_.as<_1aa352274_comptimeStatics>().alloc, _2520_i, _2533_keyA, _2550_keyB);
}
inline void __jule_trait_method_1bbe97d42_1bbe4951e(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2520_i, jule::Ptr<_1aa3e4d3e_Var>* _2533_keyA, jule::Ptr<_1aa3e4d3e_Var>* _2550_keyB) {
	_1aa355ca0_step(_self_.as<_1aa354c16_comptimeEnumFields>().alloc, _2520_i, _2533_keyA, _2550_keyB);
}
inline void __jule_trait_method_1bbe97d42_1bbe4e854(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2520_i, jule::Ptr<_1aa3e4d3e_Var>* _2533_keyA, jule::Ptr<_1aa3e4d3e_Var>* _2550_keyB) {
	_1aa3590e4_step(_self_.as<_1aa35808d_comptimeParams>().alloc, _2520_i, _2533_keyA, _2550_keyB);
}
inline void __jule_trait_method_1bbe97d42_1bbe57472(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2520_i, jule::Ptr<_1aa3e4d3e_Var>* _2533_keyA, jule::Ptr<_1aa3e4d3e_Var>* _2550_keyB) {
	_1aa35a6de_step(_self_.as<_1aa359655_comptimeTypeInfos>().alloc, _2520_i, _2533_keyA, _2550_keyB);
}
inline void __jule_trait_method_1bbe97d42_1bbe75a78(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2520_i, jule::Ptr<_1aa3e4d3e_Var>* _2533_keyA, jule::Ptr<_1aa3e4d3e_Var>* _2550_keyB) {
	_1aa36573d_step(_self_.as<_1aa3646a4_comptimeFiles>().alloc, _2520_i, _2533_keyA, _2550_keyB);
}
inline void __jule_trait_method_1bbe97d42_1bbe6e610(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2520_i, jule::Ptr<_1aa3e4d3e_Var>* _2533_keyA, jule::Ptr<_1aa3e4d3e_Var>* _2550_keyB) {
	_1aa368a82_step(_self_.as<_1aa3679e8_comptimeDecls>().alloc, _2520_i, _2533_keyA, _2550_keyB);
}
inline jule::I32 __jule_trait_method_1bbe9857e_1bbe438c0(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa3506e5_len(_self_.as<_1aa34e3c5_comptimeStructFields>().alloc);
}
inline jule::I32 __jule_trait_method_1bbe9857e_1bbe5a5b8(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa353594_len(_self_.as<_1aa352274_comptimeStatics>().alloc);
}
inline jule::I32 __jule_trait_method_1bbe9857e_1bbe4951e(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa356036_len(_self_.as<_1aa354c16_comptimeEnumFields>().alloc);
}
inline jule::I32 __jule_trait_method_1bbe9857e_1bbe4e854(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa35937a_len(_self_.as<_1aa35808d_comptimeParams>().alloc);
}
inline jule::I32 __jule_trait_method_1bbe9857e_1bbe57472(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa35a975_len(_self_.as<_1aa359655_comptimeTypeInfos>().alloc);
}
inline jule::I32 __jule_trait_method_1bbe9857e_1bbe75a78(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa3659c4_len(_self_.as<_1aa3646a4_comptimeFiles>().alloc);
}
inline jule::I32 __jule_trait_method_1bbe9857e_1bbe6e610(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa368d18_len(_self_.as<_1aa3679e8_comptimeDecls>().alloc);
}
inline void __jule_trait_method_1bbe98914_1bd4951a6(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path) {
	_1aa885b1a_SetModPath(_self_.as<_1aa885015_JuleImporter>().alloc, _1726_path);
}
inline jule::Str __jule_trait_method_1bbe98dba_1bd4951a6(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa885da1_GetModPath(_self_.as<_1aa885015_JuleImporter>().alloc);
}
inline jule::Str __jule_trait_method_1bbe9932c_1bd4951a6(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2519_id) {
	return _1aa8861e2_ModById(_self_.as<_1aa885015_JuleImporter>().alloc, _2519_id);
}
inline jule::Ptr<_1aa39b0ae_ImportInfo> __jule_trait_method_1bbe99849_1bd4951a6(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path) {
	return _1aa886533_GetImport(_self_.as<_1aa885015_JuleImporter>().alloc, _3125_path);
}
inline __jule_tuple_sx_1aa2e876a_AST__jule_tuple_s_1ada72b17_Log __jule_trait_method_1bbe99e98_1bd4951a6(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_update_mod) {
	return _1aa88692e_ImportPackage(_self_.as<_1aa885015_JuleImporter>().alloc, _3729_path, _3740_update_mod);
}
inline void __jule_trait_method_1bbe9a84a_1bd4951a6(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aa39b0ae_ImportInfo> _4128__0) {
	_1aa886bd7_Imported(_self_.as<_1aa885015_JuleImporter>().alloc, _4128__0);
}
inline jule::Str __jule_trait_method_1bbe9ae00_1bbbb8502(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa31e72a_Str(_self_.as<_1aa31e373_StructIns>().alloc);
}
inline jule::Str __jule_trait_method_1bbe9ae00_1bbbb78ca(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa33491b_Str(_self_.as<_1aa334597_FnIns>().alloc);
}
inline jule::Str __jule_trait_method_1bbe9ae00_1bbbd0b57(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa345443_Str(_self_.as<_1aa345047_Trait>().alloc);
}
inline jule::Str __jule_trait_method_1bbe9ae00_1bbba9977(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa347b0a_Str(_self_.as<_1aa347753_Enum>().alloc);
}
inline jule::Str __jule_trait_method_1bbe9ae00_1bbbb1a6c(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa3492d2_Str(_self_.as<_1aa348e5d_TypeEnum>().alloc);
}
inline jule::Str __jule_trait_method_1bbe9ae00_1bbe55cbc(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa34c505_Str(_self_.as<_1aa34c14d_comptimeRange>().alloc);
}
inline jule::Str __jule_trait_method_1bbe9ae00_1bbe4651b(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa34d01c_Str(_self_.as<_1aa34cb21_comptimeStructField>().alloc);
}
inline jule::Str __jule_trait_method_1bbe9ae00_1bbe438c0(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa34e77c_Str(_self_.as<_1aa34e3c5_comptimeStructFields>().alloc);
}
inline jule::Str __jule_trait_method_1bbe9ae00_1bbe5d214(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa350d77_Str(_self_.as<_1aa3509c0_comptimeStatic>().alloc);
}
inline jule::Str __jule_trait_method_1bbe9ae00_1bbe5a5b8(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa35262b_Str(_self_.as<_1aa352274_comptimeStatics>().alloc);
}
inline jule::Str __jule_trait_method_1bbe9ae00_1bbe4c16a(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa353d36_Str(_self_.as<_1aa35386e_comptimeEnumField>().alloc);
}
inline jule::Str __jule_trait_method_1bbe9ae00_1bbe4951e(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa3550bd_Str(_self_.as<_1aa354c16_comptimeEnumFields>().alloc);
}
inline jule::Str __jule_trait_method_1bbe9ae00_1bbe524a0(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa3566b8_Str(_self_.as<_1aa356311_comptimeParam>().alloc);
}
inline jule::Str __jule_trait_method_1bbe9ae00_1bbe4e854(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa358412_Str(_self_.as<_1aa35808d_comptimeParams>().alloc);
}
inline jule::Str __jule_trait_method_1bbe9ae00_1bbe57472(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa359a0c_Str(_self_.as<_1aa359655_comptimeTypeInfos>().alloc);
}
inline jule::Str __jule_trait_method_1bbe9ae00_1bbbe3065(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa35b107_Str(_self_.as<_1aa35ac50_comptimeTypeInfo>().alloc);
}
inline jule::Str __jule_trait_method_1bbe9ae00_1bbe61217(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa36220c_Str(_self_.as<_1aa361d55_comptimeValue>().alloc);
}
inline jule::Str __jule_trait_method_1bbe9ae00_1bbe75a78(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa364a5b_Str(_self_.as<_1aa3646a4_comptimeFiles>().alloc);
}
inline jule::Str __jule_trait_method_1bbe9ae00_1bbe7225b(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa366387_Str(_self_.as<_1aa365c9e_comptimeFile>().alloc);
}
inline jule::Str __jule_trait_method_1bbe9ae00_1bbe6e610(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa367da0_Str(_self_.as<_1aa3679e8_comptimeDecls>().alloc);
}
inline jule::Str __jule_trait_method_1bbe9ae00_1bbe66481(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa369be8_Str(_self_.as<_1aa369841_comptimeDecl>().alloc);
}
inline jule::Str __jule_trait_method_1bbe9ae00_1bbb9a43a(jule::Ptr<jule::Uintptr> _self_) {
	return _1a601aa46_Str(_self_.as<_1a601a64a_TypeKind>().alloc);
}
inline jule::Str __jule_trait_method_1bbe9ae00_1bbb9ed13(jule::Ptr<jule::Uintptr> _self_) {
	return _1a6023ad7_Str(_self_.as<_1a6023763_Prim>().alloc);
}
inline jule::Str __jule_trait_method_1bbe9ae00_1bbba64ac(jule::Ptr<jule::Uintptr> _self_) {
	return _1a6027646_Str(_self_.as<_1a602728e_Sptr>().alloc);
}
inline jule::Str __jule_trait_method_1bbe9ae00_1bbbb608d(jule::Ptr<jule::Uintptr> _self_) {
	return _1a6028229_Str(_self_.as<_1a6027c62_Slc>().alloc);
}
inline jule::Str __jule_trait_method_1bbe9ae00_1bbc2c445(jule::Ptr<jule::Uintptr> _self_) {
	return _1a6028c0d_Str(_self_.as<_1a6028856_Tuple>().alloc);
}
inline jule::Str __jule_trait_method_1bbe9ae00_1bbc2a8d8(jule::Ptr<jule::Uintptr> _self_) {
	return _1a60297ad_Str(_self_.as<_1a6029406_Map>().alloc);
}
inline jule::Str __jule_trait_method_1bbe9ae00_1bbbb4674(jule::Ptr<jule::Uintptr> _self_) {
	return _1a602a43a_Str(_self_.as<_1a602a083_Arr>().alloc);
}
inline jule::Str __jule_trait_method_1bbe9ae00_1bbba7c3e(jule::Ptr<jule::Uintptr> _self_) {
	return _1a602ae0d_Str(_self_.as<_1a602aa56_Ptr>().alloc);
}
inline jule::Str __jule_trait_method_1bbe9ae00_1bc9bd180(jule::Ptr<jule::Uintptr> _self_) {
	return _1abb1a035_Str(_self_.as<_1abb19b39_customType>().alloc);
}
inline jule::Bool __jule_trait_method_1bbe9b3a6_1bbbb8502(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a601a64a_TypeKind> _5618_other) {
	return _1aa31ea6b_Equal(_self_.as<_1aa31e373_StructIns>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1bbe9b3a6_1bbbb78ca(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a601a64a_TypeKind> _5618_other) {
	return _1aa334c5c_Equal(_self_.as<_1aa334597_FnIns>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1bbe9b3a6_1bbbd0b57(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a601a64a_TypeKind> _5618_other) {
	return _1aa345784_Equal(_self_.as<_1aa345047_Trait>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1bbe9b3a6_1bbba9977(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a601a64a_TypeKind> _5618_other) {
	return _1aa347e4b_Equal(_self_.as<_1aa347753_Enum>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1bbe9b3a6_1bbbb1a6c(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a601a64a_TypeKind> _5618_other) {
	return _1aa349623_Equal(_self_.as<_1aa348e5d_TypeEnum>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1bbe9b3a6_1bbe55cbc(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a601a64a_TypeKind> _5618_other) {
	return _1aa34c846_Equal(_self_.as<_1aa34c14d_comptimeRange>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1bbe9b3a6_1bbe4651b(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a601a64a_TypeKind> _5618_other) {
	return _1aa34d35d_Equal(_self_.as<_1aa34cb21_comptimeStructField>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1bbe9b3a6_1bbe438c0(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a601a64a_TypeKind> _5618_other) {
	return _1aa34eabd_Equal(_self_.as<_1aa34e3c5_comptimeStructFields>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1bbe9b3a6_1bbe5d214(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a601a64a_TypeKind> _5618_other) {
	return _1aa3511b8_Equal(_self_.as<_1aa3509c0_comptimeStatic>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1bbe9b3a6_1bbe5a5b8(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a601a64a_TypeKind> _5618_other) {
	return _1aa35296c_Equal(_self_.as<_1aa352274_comptimeStatics>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1bbe9b3a6_1bbe4c16a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a601a64a_TypeKind> _5618_other) {
	return _1aa354177_Equal(_self_.as<_1aa35386e_comptimeEnumField>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1bbe9b3a6_1bbe4951e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a601a64a_TypeKind> _5618_other) {
	return _1aa35540e_Equal(_self_.as<_1aa354c16_comptimeEnumFields>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1bbe9b3a6_1bbe524a0(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a601a64a_TypeKind> _5618_other) {
	return _1aa356a09_Equal(_self_.as<_1aa356311_comptimeParam>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1bbe9b3a6_1bbe4e854(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a601a64a_TypeKind> _5618_other) {
	return _1aa358753_Equal(_self_.as<_1aa35808d_comptimeParams>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1bbe9b3a6_1bbe57472(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a601a64a_TypeKind> _5618_other) {
	return _1aa359d4d_Equal(_self_.as<_1aa359655_comptimeTypeInfos>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1bbe9b3a6_1bbbe3065(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a601a64a_TypeKind> _5618_other) {
	return _1aa35b448_Equal(_self_.as<_1aa35ac50_comptimeTypeInfo>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1bbe9b3a6_1bbe61217(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a601a64a_TypeKind> _5618_other) {
	return _1aa36254d_Equal(_self_.as<_1aa361d55_comptimeValue>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1bbe9b3a6_1bbe75a78(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a601a64a_TypeKind> _5618_other) {
	return _1aa364d9c_Equal(_self_.as<_1aa3646a4_comptimeFiles>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1bbe9b3a6_1bbe7225b(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a601a64a_TypeKind> _5618_other) {
	return _1aa3666c8_Equal(_self_.as<_1aa365c9e_comptimeFile>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1bbe9b3a6_1bbe6e610(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a601a64a_TypeKind> _5618_other) {
	return _1aa3681e1_Equal(_self_.as<_1aa3679e8_comptimeDecls>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1bbe9b3a6_1bbe66481(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a601a64a_TypeKind> _5618_other) {
	return _1aa36a039_Equal(_self_.as<_1aa369841_comptimeDecl>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1bbe9b3a6_1bbb9a43a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a601a64a_TypeKind> _5618_other) {
	return _1a601ad87_Equal(_self_.as<_1a601a64a_TypeKind>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1bbe9b3a6_1bbb9ed13(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a601a64a_TypeKind> _5618_other) {
	return _1a6023e28_Equal(_self_.as<_1a6023763_Prim>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1bbe9b3a6_1bbba64ac(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a601a64a_TypeKind> _5618_other) {
	return _1a6027987_Equal(_self_.as<_1a602728e_Sptr>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1bbe9b3a6_1bbbb608d(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a601a64a_TypeKind> _5618_other) {
	return _1a602856a_Equal(_self_.as<_1a6027c62_Slc>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1bbe9b3a6_1bbc2c445(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a601a64a_TypeKind> _5618_other) {
	return _1a602904e_Equal(_self_.as<_1a6028856_Tuple>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1bbe9b3a6_1bbc2a8d8(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a601a64a_TypeKind> _5618_other) {
	return _1a6029aee_Equal(_self_.as<_1a6029406_Map>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1bbe9b3a6_1bbbb4674(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a601a64a_TypeKind> _5618_other) {
	return _1a602a77b_Equal(_self_.as<_1a602a083_Arr>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1bbe9b3a6_1bbba7c3e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a601a64a_TypeKind> _5618_other) {
	return _1a602b24e_Equal(_self_.as<_1a602aa56_Ptr>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1bbe9b3a6_1bc9bd180(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a601a64a_TypeKind> _5618_other) {
	return _1abb1a376_Equal(_self_.as<_1abb19b39_customType>(), _5618_other);
}
inline jule::Ptr<_1aa39b0ae_ImportInfo> __jule_trait_method_1bbe9b939_1bbded957(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1aa39b0ae_ImportInfo>> _929_selector) {
	return _1aa381638_SelectPackage(_self_.as<_1aa381160_scopeChecker>().alloc, _929_selector);
}
inline jule::Ptr<_1aa39b0ae_ImportInfo> __jule_trait_method_1bbe9b939_1bbbbbeb7(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1aa39b0ae_ImportInfo>> _929_selector) {
	return _1aa39b5cb_SelectPackage(_self_.as<_1aa39b0ae_ImportInfo>().alloc, _929_selector);
}
inline jule::Ptr<_1aa39b0ae_ImportInfo> __jule_trait_method_1bbe9b939_1bbbbd161(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1aa39b0ae_ImportInfo>> _929_selector) {
	return _1aa39e4ad_SelectPackage(_self_.as<_1aa39ded5_Package>().alloc, _929_selector);
}
inline jule::Ptr<_1aa39b0ae_ImportInfo> __jule_trait_method_1bbe9b939_1bbbb9d1c(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1aa39b0ae_ImportInfo>> _929_selector) {
	return _1aa3bba08_SelectPackage(_self_.as<_1aa3bb530_sema>().alloc, _929_selector);
}
inline jule::Ptr<_1aa39b0ae_ImportInfo> __jule_trait_method_1bbe9b939_1bbbba834(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1aa39b0ae_ImportInfo>> _929_selector) {
	return _1aa447aea_SelectPackage(_self_.as<_1aa4475cd_SymbolTable>().alloc, _929_selector);
}
inline jule::Ptr<_1aa3e4d3e_Var> __jule_trait_method_1bbe9c808_1bbded957(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1aa381a34_FindVar(_self_.as<_1aa381160_scopeChecker>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1aa3e4d3e_Var> __jule_trait_method_1bbe9c808_1bbbbbeb7(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1aa39b9c7_FindVar(_self_.as<_1aa39b0ae_ImportInfo>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1aa3e4d3e_Var> __jule_trait_method_1bbe9c808_1bbbbd161(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1aa39e8a9_FindVar(_self_.as<_1aa39ded5_Package>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1aa3e4d3e_Var> __jule_trait_method_1bbe9c808_1bbbb9d1c(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1aa3bbe04_FindVar(_self_.as<_1aa3bb530_sema>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1aa3e4d3e_Var> __jule_trait_method_1bbe9c808_1bbbba834(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1aa447ee6_FindVar(_self_.as<_1aa4475cd_SymbolTable>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1a6019858_TypeAlias> __jule_trait_method_1bbe9ce35_1bbded957(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1aa381e30_FindTypeAlias(_self_.as<_1aa381160_scopeChecker>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a6019858_TypeAlias> __jule_trait_method_1bbe9ce35_1bbbbbeb7(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1aa39bdc3_FindTypeAlias(_self_.as<_1aa39b0ae_ImportInfo>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a6019858_TypeAlias> __jule_trait_method_1bbe9ce35_1bbbbd161(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1aa39eca5_FindTypeAlias(_self_.as<_1aa39ded5_Package>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a6019858_TypeAlias> __jule_trait_method_1bbe9ce35_1bbbb9d1c(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1aa3bc300_FindTypeAlias(_self_.as<_1aa3bb530_sema>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a6019858_TypeAlias> __jule_trait_method_1bbe9ce35_1bbbba834(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1aa4483e2_FindTypeAlias(_self_.as<_1aa4475cd_SymbolTable>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1aa31b518_Struct> __jule_trait_method_1bbe9d595_1bbded957(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1aa38232b_FindStruct(_self_.as<_1aa381160_scopeChecker>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1aa31b518_Struct> __jule_trait_method_1bbe9d595_1bbbbbeb7(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1aa39c2be_FindStruct(_self_.as<_1aa39b0ae_ImportInfo>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1aa31b518_Struct> __jule_trait_method_1bbe9d595_1bbbbd161(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1aa3a01a1_FindStruct(_self_.as<_1aa39ded5_Package>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1aa31b518_Struct> __jule_trait_method_1bbe9d595_1bbbb9d1c(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1aa3bc6eb_FindStruct(_self_.as<_1aa3bb530_sema>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1aa31b518_Struct> __jule_trait_method_1bbe9d595_1bbbba834(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1aa4487dd_FindStruct(_self_.as<_1aa4475cd_SymbolTable>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1aa3315b6_Fn> __jule_trait_method_1bbe9dc05_1bbded957(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1aa382727_FindFn(_self_.as<_1aa381160_scopeChecker>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1aa3315b6_Fn> __jule_trait_method_1bbe9dc05_1bbbbbeb7(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1aa39c6ba_FindFn(_self_.as<_1aa39b0ae_ImportInfo>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1aa3315b6_Fn> __jule_trait_method_1bbe9dc05_1bbbbd161(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1aa3a059c_FindFn(_self_.as<_1aa39ded5_Package>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1aa3315b6_Fn> __jule_trait_method_1bbe9dc05_1bbbb9d1c(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1aa3bcae7_FindFn(_self_.as<_1aa3bb530_sema>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1aa3315b6_Fn> __jule_trait_method_1bbe9dc05_1bbbba834(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1aa448bd9_FindFn(_self_.as<_1aa4475cd_SymbolTable>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1aa345047_Trait> __jule_trait_method_1bbe9e365_1bbded957(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1aa382a68_FindTrait(_self_.as<_1aa381160_scopeChecker>().alloc, _2925_ident);
}
inline jule::Ptr<_1aa345047_Trait> __jule_trait_method_1bbe9e365_1bbbbbeb7(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1aa39ca0b_FindTrait(_self_.as<_1aa39b0ae_ImportInfo>().alloc, _2925_ident);
}
inline jule::Ptr<_1aa345047_Trait> __jule_trait_method_1bbe9e365_1bbbbd161(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1aa3a08dd_FindTrait(_self_.as<_1aa39ded5_Package>().alloc, _2925_ident);
}
inline jule::Ptr<_1aa345047_Trait> __jule_trait_method_1bbe9e365_1bbbb9d1c(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1aa3bce38_FindTrait(_self_.as<_1aa3bb530_sema>().alloc, _2925_ident);
}
inline jule::Ptr<_1aa345047_Trait> __jule_trait_method_1bbe9e365_1bbbba834(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1aa44902a_FindTrait(_self_.as<_1aa4475cd_SymbolTable>().alloc, _2925_ident);
}
inline jule::Ptr<_1aa347753_Enum> __jule_trait_method_1bbe9e91a_1bbded957(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1aa382da9_FindEnum(_self_.as<_1aa381160_scopeChecker>().alloc, _3324_ident);
}
inline jule::Ptr<_1aa347753_Enum> __jule_trait_method_1bbe9e91a_1bbbbbeb7(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1aa39cd4c_FindEnum(_self_.as<_1aa39b0ae_ImportInfo>().alloc, _3324_ident);
}
inline jule::Ptr<_1aa347753_Enum> __jule_trait_method_1bbe9e91a_1bbbbd161(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1aa3a0c2e_FindEnum(_self_.as<_1aa39ded5_Package>().alloc, _3324_ident);
}
inline jule::Ptr<_1aa347753_Enum> __jule_trait_method_1bbe9e91a_1bbbb9d1c(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1aa3bd279_FindEnum(_self_.as<_1aa3bb530_sema>().alloc, _3324_ident);
}
inline jule::Ptr<_1aa347753_Enum> __jule_trait_method_1bbe9e91a_1bbbba834(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1aa44936b_FindEnum(_self_.as<_1aa4475cd_SymbolTable>().alloc, _3324_ident);
}
inline jule::Ptr<_1aa348e5d_TypeEnum> __jule_trait_method_1bbe9eec0_1bbded957(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1aa3831ea_FindTypeEnum(_self_.as<_1aa381160_scopeChecker>().alloc, _3728_ident);
}
inline jule::Ptr<_1aa348e5d_TypeEnum> __jule_trait_method_1bbe9eec0_1bbbbbeb7(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1aa39d18d_FindTypeEnum(_self_.as<_1aa39b0ae_ImportInfo>().alloc, _3728_ident);
}
inline jule::Ptr<_1aa348e5d_TypeEnum> __jule_trait_method_1bbe9eec0_1bbbbd161(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1aa3a1070_FindTypeEnum(_self_.as<_1aa39ded5_Package>().alloc, _3728_ident);
}
inline jule::Ptr<_1aa348e5d_TypeEnum> __jule_trait_method_1bbe9eec0_1bbbb9d1c(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1aa3bd5ba_FindTypeEnum(_self_.as<_1aa3bb530_sema>().alloc, _3728_ident);
}
inline jule::Ptr<_1aa348e5d_TypeEnum> __jule_trait_method_1bbe9eec0_1bbbba834(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1aa4496ac_FindTypeEnum(_self_.as<_1aa4475cd_SymbolTable>().alloc, _3728_ident);
}
inline jule::Str __jule_trait_method_1bcc1a5db_1bcc09465(jule::Ptr<jule::Uintptr> _self_) {
	return _1bcc098d8_Name(_self_.as<_1bcc09465_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1bcc1a5db_1bcc0d06d(jule::Ptr<jule::Uintptr> _self_) {
	return _1bcc0cbe9_Name(_self_.as<_1bcc0d06d_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1bcc1a5db_1bcc11736(jule::Ptr<jule::Uintptr> _self_) {
	return _1bcc113b2_Name(_self_.as<_1bcc11736_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1bcc1a5db_1bcc14e43(jule::Ptr<jule::Uintptr> _self_) {
	return _1bcc14abe_Name(_self_.as<_1bcc14e43_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1bcc1a5db_1bcc1860b(jule::Ptr<jule::Uintptr> _self_) {
	return _1bcc18287_Name(_self_.as<_1bcc1860b_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1bcc1bcc4_1bcc09465(jule::Ptr<jule::Uintptr> _self_) {
	return _1bcc09ce5_Short(_self_.as<_1bcc09465_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1bcc1bcc4_1bcc0d06d(jule::Ptr<jule::Uintptr> _self_) {
	return _1bcc0d5e0_Short(_self_.as<_1bcc0d06d_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1bcc1bcc4_1bcc11736(jule::Ptr<jule::Uintptr> _self_) {
	return _1bcc11ca8_Short(_self_.as<_1bcc11736_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1bcc1bcc4_1bcc14e43(jule::Ptr<jule::Uintptr> _self_) {
	return _1bcc154b5_Short(_self_.as<_1bcc14e43_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1bcc1bcc4_1bcc1860b(jule::Ptr<jule::Uintptr> _self_) {
	return _1bcc18b7d_Short(_self_.as<_1bcc1860b_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1bcc1c148_1bcc09465(jule::Ptr<jule::Uintptr> _self_) {
	return _1bcc09a3c_What(_self_.as<_1bcc09465_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1bcc1c148_1bcc0d06d(jule::Ptr<jule::Uintptr> _self_) {
	return _1bcc0d359_What(_self_.as<_1bcc0d06d_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1bcc1c148_1bcc11736(jule::Ptr<jule::Uintptr> _self_) {
	return _1bcc11a22_What(_self_.as<_1bcc11736_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1bcc1c148_1bcc14e43(jule::Ptr<jule::Uintptr> _self_) {
	return _1bcc1522e_What(_self_.as<_1bcc14e43_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1bcc1c148_1bcc1860b(jule::Ptr<jule::Uintptr> _self_) {
	return _1bcc188e7_What(_self_.as<_1bcc1860b_Flag>().alloc);
}
inline void __jule_trait_method_1bcc1c5aa_1bcc09465(jule::Ptr<jule::Uintptr> _self_) {
	_1bcc09b91_Reset(_self_.as<_1bcc09465_Flag>().alloc);
}
inline void __jule_trait_method_1bcc1c5aa_1bcc0d06d(jule::Ptr<jule::Uintptr> _self_) {
	_1bcc0d49c_Reset(_self_.as<_1bcc0d06d_Flag>().alloc);
}
inline void __jule_trait_method_1bcc1c5aa_1bcc11736(jule::Ptr<jule::Uintptr> _self_) {
	_1bcc11b65_Reset(_self_.as<_1bcc11736_Flag>().alloc);
}
inline void __jule_trait_method_1bcc1c5aa_1bcc14e43(jule::Ptr<jule::Uintptr> _self_) {
	_1bcc15372_Reset(_self_.as<_1bcc14e43_Flag>().alloc);
}
inline void __jule_trait_method_1bcc1c5aa_1bcc1860b(jule::Ptr<jule::Uintptr> _self_) {
	_1bcc18a3a_Reset(_self_.as<_1bcc1860b_Flag>().alloc);
}


static _1aa34be2d_comptimeRangeKindMptrData _1aa34be2d_comptimeRangeKind_mptr_data0 {
	.dealloc=__jule_type_deallocator0,
	._1aa34b625_ready=__jule_trait_method_1bbe975c2_1bbe438c0,
	._1aa34ba43_step=__jule_trait_method_1bbe97d42_1bbe438c0,
	._1aa34bcc9_len=__jule_trait_method_1bbe9857e_1bbe438c0,
};
static _1aa34be2d_comptimeRangeKindMptrData _1aa34be2d_comptimeRangeKind_mptr_data1 {
	.dealloc=__jule_type_deallocator1,
	._1aa34b625_ready=__jule_trait_method_1bbe975c2_1bbe5a5b8,
	._1aa34ba43_step=__jule_trait_method_1bbe97d42_1bbe5a5b8,
	._1aa34bcc9_len=__jule_trait_method_1bbe9857e_1bbe5a5b8,
};
static _1aa34be2d_comptimeRangeKindMptrData _1aa34be2d_comptimeRangeKind_mptr_data2 {
	.dealloc=__jule_type_deallocator2,
	._1aa34b625_ready=__jule_trait_method_1bbe975c2_1bbe4951e,
	._1aa34ba43_step=__jule_trait_method_1bbe97d42_1bbe4951e,
	._1aa34bcc9_len=__jule_trait_method_1bbe9857e_1bbe4951e,
};
static _1aa34be2d_comptimeRangeKindMptrData _1aa34be2d_comptimeRangeKind_mptr_data3 {
	.dealloc=__jule_type_deallocator3,
	._1aa34b625_ready=__jule_trait_method_1bbe975c2_1bbe4e854,
	._1aa34ba43_step=__jule_trait_method_1bbe97d42_1bbe4e854,
	._1aa34bcc9_len=__jule_trait_method_1bbe9857e_1bbe4e854,
};
static _1aa34be2d_comptimeRangeKindMptrData _1aa34be2d_comptimeRangeKind_mptr_data4 {
	.dealloc=__jule_type_deallocator4,
	._1aa34b625_ready=__jule_trait_method_1bbe975c2_1bbe57472,
	._1aa34ba43_step=__jule_trait_method_1bbe97d42_1bbe57472,
	._1aa34bcc9_len=__jule_trait_method_1bbe9857e_1bbe57472,
};
static _1aa34be2d_comptimeRangeKindMptrData _1aa34be2d_comptimeRangeKind_mptr_data5 {
	.dealloc=__jule_type_deallocator5,
	._1aa34b625_ready=__jule_trait_method_1bbe975c2_1bbe75a78,
	._1aa34ba43_step=__jule_trait_method_1bbe97d42_1bbe75a78,
	._1aa34bcc9_len=__jule_trait_method_1bbe9857e_1bbe75a78,
};
static _1aa34be2d_comptimeRangeKindMptrData _1aa34be2d_comptimeRangeKind_mptr_data6 {
	.dealloc=__jule_type_deallocator6,
	._1aa34b625_ready=__jule_trait_method_1bbe975c2_1bbe6e610,
	._1aa34ba43_step=__jule_trait_method_1bbe97d42_1bbe6e610,
	._1aa34bcc9_len=__jule_trait_method_1bbe9857e_1bbe6e610,
};
static _1aa397d25_ImporterMptrData _1aa397d25_Importer_mptr_data0 {
	.dealloc=__jule_type_deallocator7,
	._1aa396b04_SetModPath=__jule_trait_method_1bbe98914_1bd4951a6,
	._1aa396d8a_GetModPath=__jule_trait_method_1bbe98dba_1bd4951a6,
	._1aa3971cb_ModById=__jule_trait_method_1bbe9932c_1bd4951a6,
	._1aa39751c_GetImport=__jule_trait_method_1bbe99849_1bd4951a6,
	._1aa397918_ImportPackage=__jule_trait_method_1bbe99e98_1bd4951a6,
	._1aa397bc1_Imported=__jule_trait_method_1bbe9a84a_1bd4951a6,
};
static _1a601a194_KindMptrData _1a601a194_Kind_mptr_data0 {
	.dealloc=__jule_type_deallocator8,
	._1a6019bee_Str=__jule_trait_method_1bbe9ae00_1bbbb8502,
	._1a601a040_Equal=__jule_trait_method_1bbe9b3a6_1bbbb8502,
};
static _1a601a194_KindMptrData _1a601a194_Kind_mptr_data1 {
	.dealloc=__jule_type_deallocator9,
	._1a6019bee_Str=__jule_trait_method_1bbe9ae00_1bbbb78ca,
	._1a601a040_Equal=__jule_trait_method_1bbe9b3a6_1bbbb78ca,
};
static _1a601a194_KindMptrData _1a601a194_Kind_mptr_data2 {
	.dealloc=__jule_type_deallocator10,
	._1a6019bee_Str=__jule_trait_method_1bbe9ae00_1bbbd0b57,
	._1a601a040_Equal=__jule_trait_method_1bbe9b3a6_1bbbd0b57,
};
static _1a601a194_KindMptrData _1a601a194_Kind_mptr_data3 {
	.dealloc=__jule_type_deallocator11,
	._1a6019bee_Str=__jule_trait_method_1bbe9ae00_1bbba9977,
	._1a601a040_Equal=__jule_trait_method_1bbe9b3a6_1bbba9977,
};
static _1a601a194_KindMptrData _1a601a194_Kind_mptr_data4 {
	.dealloc=__jule_type_deallocator12,
	._1a6019bee_Str=__jule_trait_method_1bbe9ae00_1bbbb1a6c,
	._1a601a040_Equal=__jule_trait_method_1bbe9b3a6_1bbbb1a6c,
};
static _1a601a194_KindMptrData _1a601a194_Kind_mptr_data5 {
	.dealloc=__jule_type_deallocator13,
	._1a6019bee_Str=__jule_trait_method_1bbe9ae00_1bbe55cbc,
	._1a601a040_Equal=__jule_trait_method_1bbe9b3a6_1bbe55cbc,
};
static _1a601a194_KindMptrData _1a601a194_Kind_mptr_data6 {
	.dealloc=__jule_type_deallocator14,
	._1a6019bee_Str=__jule_trait_method_1bbe9ae00_1bbe4651b,
	._1a601a040_Equal=__jule_trait_method_1bbe9b3a6_1bbe4651b,
};
static _1a601a194_KindMptrData _1a601a194_Kind_mptr_data7 {
	.dealloc=__jule_type_deallocator0,
	._1a6019bee_Str=__jule_trait_method_1bbe9ae00_1bbe438c0,
	._1a601a040_Equal=__jule_trait_method_1bbe9b3a6_1bbe438c0,
};
static _1a601a194_KindMptrData _1a601a194_Kind_mptr_data8 {
	.dealloc=__jule_type_deallocator15,
	._1a6019bee_Str=__jule_trait_method_1bbe9ae00_1bbe5d214,
	._1a601a040_Equal=__jule_trait_method_1bbe9b3a6_1bbe5d214,
};
static _1a601a194_KindMptrData _1a601a194_Kind_mptr_data9 {
	.dealloc=__jule_type_deallocator1,
	._1a6019bee_Str=__jule_trait_method_1bbe9ae00_1bbe5a5b8,
	._1a601a040_Equal=__jule_trait_method_1bbe9b3a6_1bbe5a5b8,
};
static _1a601a194_KindMptrData _1a601a194_Kind_mptr_data10 {
	.dealloc=__jule_type_deallocator16,
	._1a6019bee_Str=__jule_trait_method_1bbe9ae00_1bbe4c16a,
	._1a601a040_Equal=__jule_trait_method_1bbe9b3a6_1bbe4c16a,
};
static _1a601a194_KindMptrData _1a601a194_Kind_mptr_data11 {
	.dealloc=__jule_type_deallocator2,
	._1a6019bee_Str=__jule_trait_method_1bbe9ae00_1bbe4951e,
	._1a601a040_Equal=__jule_trait_method_1bbe9b3a6_1bbe4951e,
};
static _1a601a194_KindMptrData _1a601a194_Kind_mptr_data12 {
	.dealloc=__jule_type_deallocator17,
	._1a6019bee_Str=__jule_trait_method_1bbe9ae00_1bbe524a0,
	._1a601a040_Equal=__jule_trait_method_1bbe9b3a6_1bbe524a0,
};
static _1a601a194_KindMptrData _1a601a194_Kind_mptr_data13 {
	.dealloc=__jule_type_deallocator3,
	._1a6019bee_Str=__jule_trait_method_1bbe9ae00_1bbe4e854,
	._1a601a040_Equal=__jule_trait_method_1bbe9b3a6_1bbe4e854,
};
static _1a601a194_KindMptrData _1a601a194_Kind_mptr_data14 {
	.dealloc=__jule_type_deallocator4,
	._1a6019bee_Str=__jule_trait_method_1bbe9ae00_1bbe57472,
	._1a601a040_Equal=__jule_trait_method_1bbe9b3a6_1bbe57472,
};
static _1a601a194_KindMptrData _1a601a194_Kind_mptr_data15 {
	.dealloc=__jule_type_deallocator18,
	._1a6019bee_Str=__jule_trait_method_1bbe9ae00_1bbbe3065,
	._1a601a040_Equal=__jule_trait_method_1bbe9b3a6_1bbbe3065,
};
static _1a601a194_KindMptrData _1a601a194_Kind_mptr_data16 {
	.dealloc=__jule_type_deallocator19,
	._1a6019bee_Str=__jule_trait_method_1bbe9ae00_1bbe61217,
	._1a601a040_Equal=__jule_trait_method_1bbe9b3a6_1bbe61217,
};
static _1a601a194_KindMptrData _1a601a194_Kind_mptr_data17 {
	.dealloc=__jule_type_deallocator5,
	._1a6019bee_Str=__jule_trait_method_1bbe9ae00_1bbe75a78,
	._1a601a040_Equal=__jule_trait_method_1bbe9b3a6_1bbe75a78,
};
static _1a601a194_KindMptrData _1a601a194_Kind_mptr_data18 {
	.dealloc=__jule_type_deallocator20,
	._1a6019bee_Str=__jule_trait_method_1bbe9ae00_1bbe7225b,
	._1a601a040_Equal=__jule_trait_method_1bbe9b3a6_1bbe7225b,
};
static _1a601a194_KindMptrData _1a601a194_Kind_mptr_data19 {
	.dealloc=__jule_type_deallocator6,
	._1a6019bee_Str=__jule_trait_method_1bbe9ae00_1bbe6e610,
	._1a601a040_Equal=__jule_trait_method_1bbe9b3a6_1bbe6e610,
};
static _1a601a194_KindMptrData _1a601a194_Kind_mptr_data20 {
	.dealloc=__jule_type_deallocator21,
	._1a6019bee_Str=__jule_trait_method_1bbe9ae00_1bbe66481,
	._1a601a040_Equal=__jule_trait_method_1bbe9b3a6_1bbe66481,
};
static _1a601a194_KindMptrData _1a601a194_Kind_mptr_data21 {
	.dealloc=__jule_type_deallocator22,
	._1a6019bee_Str=__jule_trait_method_1bbe9ae00_1bbb9a43a,
	._1a601a040_Equal=__jule_trait_method_1bbe9b3a6_1bbb9a43a,
};
static _1a601a194_KindMptrData _1a601a194_Kind_mptr_data22 {
	.dealloc=__jule_type_deallocator23,
	._1a6019bee_Str=__jule_trait_method_1bbe9ae00_1bbb9ed13,
	._1a601a040_Equal=__jule_trait_method_1bbe9b3a6_1bbb9ed13,
};
static _1a601a194_KindMptrData _1a601a194_Kind_mptr_data23 {
	.dealloc=__jule_type_deallocator24,
	._1a6019bee_Str=__jule_trait_method_1bbe9ae00_1bbba64ac,
	._1a601a040_Equal=__jule_trait_method_1bbe9b3a6_1bbba64ac,
};
static _1a601a194_KindMptrData _1a601a194_Kind_mptr_data24 {
	.dealloc=__jule_type_deallocator25,
	._1a6019bee_Str=__jule_trait_method_1bbe9ae00_1bbbb608d,
	._1a601a040_Equal=__jule_trait_method_1bbe9b3a6_1bbbb608d,
};
static _1a601a194_KindMptrData _1a601a194_Kind_mptr_data25 {
	.dealloc=__jule_type_deallocator26,
	._1a6019bee_Str=__jule_trait_method_1bbe9ae00_1bbc2c445,
	._1a601a040_Equal=__jule_trait_method_1bbe9b3a6_1bbc2c445,
};
static _1a601a194_KindMptrData _1a601a194_Kind_mptr_data26 {
	.dealloc=__jule_type_deallocator27,
	._1a6019bee_Str=__jule_trait_method_1bbe9ae00_1bbc2a8d8,
	._1a601a040_Equal=__jule_trait_method_1bbe9b3a6_1bbc2a8d8,
};
static _1a601a194_KindMptrData _1a601a194_Kind_mptr_data27 {
	.dealloc=__jule_type_deallocator28,
	._1a6019bee_Str=__jule_trait_method_1bbe9ae00_1bbbb4674,
	._1a601a040_Equal=__jule_trait_method_1bbe9b3a6_1bbbb4674,
};
static _1a601a194_KindMptrData _1a601a194_Kind_mptr_data28 {
	.dealloc=__jule_type_deallocator29,
	._1a6019bee_Str=__jule_trait_method_1bbe9ae00_1bbba7c3e,
	._1a601a040_Equal=__jule_trait_method_1bbe9b3a6_1bbba7c3e,
};
static _1a601a194_KindMptrData _1a601a194_Kind_mptr_data29 {
	.dealloc=__jule_type_deallocator30,
	._1a6019bee_Str=__jule_trait_method_1bbe9ae00_1bc9bd180,
	._1a601a040_Equal=__jule_trait_method_1bbe9b3a6_1bc9bd180,
};
static _1a603a77a_LookupMptrData _1a603a77a_Lookup_mptr_data0 {
	.dealloc=__jule_type_deallocator31,
	._1a6038a64_SelectPackage=__jule_trait_method_1bbe9b939_1bbded957,
	._1a6038e60_FindVar=__jule_trait_method_1bbe9c808_1bbded957,
	._1a603935b_FindTypeAlias=__jule_trait_method_1bbe9ce35_1bbded957,
	._1a6039757_FindStruct=__jule_trait_method_1bbe9d595_1bbded957,
	._1a6039b53_FindFn=__jule_trait_method_1bbe9dc05_1bbded957,
	._1a6039e94_FindTrait=__jule_trait_method_1bbe9e365_1bbded957,
	._1a603a2d5_FindEnum=__jule_trait_method_1bbe9e91a_1bbded957,
	._1a603a626_FindTypeEnum=__jule_trait_method_1bbe9eec0_1bbded957,
};
static _1a603a77a_LookupMptrData _1a603a77a_Lookup_mptr_data1 {
	.dealloc=__jule_type_deallocator32,
	._1a6038a64_SelectPackage=__jule_trait_method_1bbe9b939_1bbbbbeb7,
	._1a6038e60_FindVar=__jule_trait_method_1bbe9c808_1bbbbbeb7,
	._1a603935b_FindTypeAlias=__jule_trait_method_1bbe9ce35_1bbbbbeb7,
	._1a6039757_FindStruct=__jule_trait_method_1bbe9d595_1bbbbbeb7,
	._1a6039b53_FindFn=__jule_trait_method_1bbe9dc05_1bbbbbeb7,
	._1a6039e94_FindTrait=__jule_trait_method_1bbe9e365_1bbbbbeb7,
	._1a603a2d5_FindEnum=__jule_trait_method_1bbe9e91a_1bbbbbeb7,
	._1a603a626_FindTypeEnum=__jule_trait_method_1bbe9eec0_1bbbbbeb7,
};
static _1a603a77a_LookupMptrData _1a603a77a_Lookup_mptr_data2 {
	.dealloc=__jule_type_deallocator33,
	._1a6038a64_SelectPackage=__jule_trait_method_1bbe9b939_1bbbbd161,
	._1a6038e60_FindVar=__jule_trait_method_1bbe9c808_1bbbbd161,
	._1a603935b_FindTypeAlias=__jule_trait_method_1bbe9ce35_1bbbbd161,
	._1a6039757_FindStruct=__jule_trait_method_1bbe9d595_1bbbbd161,
	._1a6039b53_FindFn=__jule_trait_method_1bbe9dc05_1bbbbd161,
	._1a6039e94_FindTrait=__jule_trait_method_1bbe9e365_1bbbbd161,
	._1a603a2d5_FindEnum=__jule_trait_method_1bbe9e91a_1bbbbd161,
	._1a603a626_FindTypeEnum=__jule_trait_method_1bbe9eec0_1bbbbd161,
};
static _1a603a77a_LookupMptrData _1a603a77a_Lookup_mptr_data3 {
	.dealloc=__jule_type_deallocator34,
	._1a6038a64_SelectPackage=__jule_trait_method_1bbe9b939_1bbbb9d1c,
	._1a6038e60_FindVar=__jule_trait_method_1bbe9c808_1bbbb9d1c,
	._1a603935b_FindTypeAlias=__jule_trait_method_1bbe9ce35_1bbbb9d1c,
	._1a6039757_FindStruct=__jule_trait_method_1bbe9d595_1bbbb9d1c,
	._1a6039b53_FindFn=__jule_trait_method_1bbe9dc05_1bbbb9d1c,
	._1a6039e94_FindTrait=__jule_trait_method_1bbe9e365_1bbbb9d1c,
	._1a603a2d5_FindEnum=__jule_trait_method_1bbe9e91a_1bbbb9d1c,
	._1a603a626_FindTypeEnum=__jule_trait_method_1bbe9eec0_1bbbb9d1c,
};
static _1a603a77a_LookupMptrData _1a603a77a_Lookup_mptr_data4 {
	.dealloc=__jule_type_deallocator35,
	._1a6038a64_SelectPackage=__jule_trait_method_1bbe9b939_1bbbba834,
	._1a6038e60_FindVar=__jule_trait_method_1bbe9c808_1bbbba834,
	._1a603935b_FindTypeAlias=__jule_trait_method_1bbe9ce35_1bbbba834,
	._1a6039757_FindStruct=__jule_trait_method_1bbe9d595_1bbbba834,
	._1a6039b53_FindFn=__jule_trait_method_1bbe9dc05_1bbbba834,
	._1a6039e94_FindTrait=__jule_trait_method_1bbe9e365_1bbbba834,
	._1a603a2d5_FindEnum=__jule_trait_method_1bbe9e91a_1bbbba834,
	._1a603a626_FindTypeEnum=__jule_trait_method_1bbe9eec0_1bbbba834,
};
static _1abb8c76c_CommonFlagMptrData _1abb8c76c_CommonFlag_mptr_data0 {
	.dealloc=__jule_type_deallocator36,
	._1abb5b62b_Name=__jule_trait_method_1bcc1a5db_1bcc09465,
	._1abb5b76e_Short=__jule_trait_method_1bcc1bcc4_1bcc09465,
	._1abb5b8b2_What=__jule_trait_method_1bcc1c148_1bcc09465,
	._1abb8c618_Reset=__jule_trait_method_1bcc1c5aa_1bcc09465,
};
static _1abb8c76c_CommonFlagMptrData _1abb8c76c_CommonFlag_mptr_data1 {
	.dealloc=__jule_type_deallocator37,
	._1abb5b62b_Name=__jule_trait_method_1bcc1a5db_1bcc0d06d,
	._1abb5b76e_Short=__jule_trait_method_1bcc1bcc4_1bcc0d06d,
	._1abb5b8b2_What=__jule_trait_method_1bcc1c148_1bcc0d06d,
	._1abb8c618_Reset=__jule_trait_method_1bcc1c5aa_1bcc0d06d,
};
static _1abb8c76c_CommonFlagMptrData _1abb8c76c_CommonFlag_mptr_data2 {
	.dealloc=__jule_type_deallocator38,
	._1abb5b62b_Name=__jule_trait_method_1bcc1a5db_1bcc11736,
	._1abb5b76e_Short=__jule_trait_method_1bcc1bcc4_1bcc11736,
	._1abb5b8b2_What=__jule_trait_method_1bcc1c148_1bcc11736,
	._1abb8c618_Reset=__jule_trait_method_1bcc1c5aa_1bcc11736,
};
static _1abb8c76c_CommonFlagMptrData _1abb8c76c_CommonFlag_mptr_data3 {
	.dealloc=__jule_type_deallocator39,
	._1abb5b62b_Name=__jule_trait_method_1bcc1a5db_1bcc14e43,
	._1abb5b76e_Short=__jule_trait_method_1bcc1bcc4_1bcc14e43,
	._1abb5b8b2_What=__jule_trait_method_1bcc1c148_1bcc14e43,
	._1abb8c618_Reset=__jule_trait_method_1bcc1c5aa_1bcc14e43,
};
static _1abb8c76c_CommonFlagMptrData _1abb8c76c_CommonFlag_mptr_data4 {
	.dealloc=__jule_type_deallocator40,
	._1abb5b62b_Name=__jule_trait_method_1bcc1a5db_1bcc1860b,
	._1abb5b76e_Short=__jule_trait_method_1bcc1bcc4_1bcc1860b,
	._1abb5b8b2_What=__jule_trait_method_1bcc1c148_1bcc1860b,
	._1abb8c618_Reset=__jule_trait_method_1bcc1c5aa_1bcc1860b,
};


jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_type_deallocator41, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other)); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_type_deallocator42, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other)); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_type_deallocator43, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other)); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_type_deallocator44, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other)); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_type_deallocator45, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other)); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_type_deallocator46, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_type_deallocator47, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_type_deallocator9, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1aa334597_FnIns> &other) { return any.type == &__jule_any_type7 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_type_deallocator48, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1aa3e4d3e_Var> &other) { return any.type == &__jule_any_type8 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_type_deallocator8, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1aa31e373_StructIns> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_type_deallocator10, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1aa345047_Trait> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_type_deallocator49, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1aa3172e4_Impl> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_type_deallocator50, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1aa31219b_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_type_deallocator51, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1aa316447_StructDecl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_type_deallocator52, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1aa30c33e_FnDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_type_deallocator53, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1aa316b84_TraitDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_type_deallocator54, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1aa30d4e9_VarDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_type_deallocator55, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1aa3147ec_EnumDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_type_deallocator56, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1aa315787_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_type_deallocator57, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1aa3185e2_Field> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_type_deallocator58, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1a6e77584_Const> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_type_deallocator59, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1aa346bd6_EnumItem> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_type_deallocator60, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1aa32eae2_Param> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_type_deallocator61, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1aa31b518_Struct> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_type_deallocator11, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1aa347753_Enum> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_type_deallocator12, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1aa348e5d_TypeEnum> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_type_deallocator62, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1aa3315b6_Fn> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_type_deallocator63, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1a6019858_TypeAlias> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_type_deallocator64, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1aa37b545_Label> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_type_deallocator65, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1aa378ba2_Scope> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_type_deallocator66, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1aa32c00c_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_type_deallocator67, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1aa44cc98_Data> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_type_deallocator68, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1aa32d31b_BackendEmitExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_type_deallocator69, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1aa32ac86_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_type_deallocator70, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1aa3292c3_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_type_deallocator71, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1aa32969c_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_type_deallocator72, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1aa329e50_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_type_deallocator73, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1aa32a406_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_type_deallocator74, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1aa32bb33_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_type_deallocator75, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1aa32b759_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_type_deallocator76, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1aa32d618_FreeExprModel> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_type_deallocator77, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1aa32570e_FnCallExprModel> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_type_deallocator78, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1aa3797da_Conditional> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_type_deallocator79, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1aa379ad7_InfIter> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_type_deallocator80, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1aa30e96d_WhileKind> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_type_deallocator81, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1aa37a08d_WhileIter> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_type_deallocator82, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1aa310375_RangeKind> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_type_deallocator83, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1aa37a9d9_RangeIter> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_type_deallocator84, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1aa37ad6e_ContSt> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_type_deallocator85, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1aa37b91e_GotoSt> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_type_deallocator86, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1aa37bce8_Postfix> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_type_deallocator87, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1aa37c29e_Assign> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_type_deallocator88, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1aa3012cd_IdentExpr> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_type_deallocator89, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1aa32608e_IndexingExprModel> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_type_deallocator90, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1aa37c755_MultiAssign> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_type_deallocator91, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1aa37cdb5_Match> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_type_deallocator92, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1aa37e0d6_FallSt> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_type_deallocator93, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1aa37b248_BreakSt> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_type_deallocator94, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1aa37e47c_RetSt> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_type_deallocator95, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1aa30a6a0_ScopeTree> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_type_deallocator96, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1aa2ee9b3_Expr> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_type_deallocator97, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1aa31195e_Conditional> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_type_deallocator98, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1aa30e143_Iter> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_type_deallocator99, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1aa310b28_ContSt> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_type_deallocator100, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1aa307c63_LabelSt> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_type_deallocator101, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1aa30813c_GotoSt> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_type_deallocator102, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1aa30912c_AssignSt> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_type_deallocator103, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1aa312e6b_MatchCase> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_type_deallocator104, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1aa308439_FallSt> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_type_deallocator105, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1aa31074e_BreakSt> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_type_deallocator106, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1aa30d8c3_RetSt> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_type_deallocator107, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1aa300387_UseExpr> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_type_deallocator108, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1aa2ec94a_ArrTypeDecl> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_type_deallocator109, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1aa2ebaae_SlcTypeDecl> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_type_deallocator110, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1aa2ec1a8_PtrTypeDecl> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_type_deallocator111, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1aa2eb729_SptrTypeDecl> &other) { return any.type == &__jule_any_type75 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_type_deallocator112, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1aa2ed198_MapTypeDecl> &other) { return any.type == &__jule_any_type76 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_type_deallocator113, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1aa2ebdab_TupleTypeDecl> &other) { return any.type == &__jule_any_type77 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_type_deallocator114, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1aa2eac89_IdentTypeDecl> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_type_deallocator115, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1aa301e49_VariadicExpr> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_type_deallocator116, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1aa325ad8_SliceExprModel> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_type_deallocator117, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1aa3041d2_FieldExprPair> &other) { return any.type == &__jule_any_type81 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_type_deallocator118, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1aa3057dd_KeyValPair> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_type_deallocator119, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1aa3005a7_TupleExpr> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_type_deallocator120, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1aa328de9_TupleExprModel> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_type_deallocator121, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1aa3036dc_FnCallExpr> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_type_deallocator122, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1aa32cb45_RuneExprModel> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_type_deallocator22, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1a601a64a_TypeKind> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_type_deallocator123, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1aa328aec_ArrayExprModel> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_type_deallocator124, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1aa302ac6_SubIdentExpr> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_type_deallocator125, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1aa2eb053_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_type_deallocator126, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1aa301a70_UnaryExpr> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_type_deallocator127, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1aa2ea67e_TypeDecl> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_type_deallocator128, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1aa3026ec_NsSelectionExpr> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_type_deallocator129, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1aa2eb42c_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_type_deallocator130, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1aa327458_SlicingExprModel> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_type_deallocator131, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1aa324d5c_CastingExprModel> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_type_deallocator132, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1aa306019_SliceExpr> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_type_deallocator133, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1aa3244cc_StructLitExprModel> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_type_deallocator134, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1aa328723_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type99 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_type_deallocator135, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1aa3279db_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type100 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_type_deallocator136, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1aa32837c_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type101 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_type_deallocator137, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1aa326dc5_MapExprModel> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_type_deallocator138, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1aa326545_AnonFnExprModel> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_type_deallocator139, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1aa2eec7c_RangeExpr> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_type_deallocator140, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1aa30094d_LitExpr> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_type_deallocator141, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1aa300d27_UnsafeExpr> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_type_deallocator142, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1aa306976_IndexingExpr> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_type_deallocator143, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1aa3070d6_SlicingExpr> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_type_deallocator144, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1aa302323_CastExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_type_deallocator145, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1aa304a0c_StructLit> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_type_deallocator146, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1aa304eb3_BraceLit> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_type_deallocator147, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1aa30307c_BinaryExpr> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_type_deallocator148, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1aa323b08_UnaryExprModel> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_type_deallocator149, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1aa32372e_BinaryExprModel> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_type_deallocator150, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1aa3247c9_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_type_deallocator151, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1aa329a76_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type116 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_type_deallocator152, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1aa32a8ac_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type117 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_type_deallocator153, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1aa32b083_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type118 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_type_deallocator154, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1aa32b380_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_type_deallocator155, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1aa32c6b1_SizeofExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_type_deallocator156, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1aa32c89d_AlignofExprModel> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_type_deallocator157, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1aa32ce42_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_type_deallocator158, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1aa5ecc17_ExceptionalForwardingExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_type_deallocator159, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1aa600610_StrRuneIter> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_type_deallocator160, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1aa5ee301_MutSlicingExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_type_deallocator161, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1aa5eed5c_PushToSliceExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_type_deallocator162, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1aa600236_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_type_deallocator163, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1aa5ed09c_SwapExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_type_deallocator164, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_1aa5ed476_EmptyCompareExprModel> &other) { return any.type == &__jule_any_type129 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_type_deallocator165, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_1aa5edc6d_StrCompExprModel> &other) { return any.type == &__jule_any_type130 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_type_deallocator166, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::Ptr<_1aa5ee5ed_UnsafeBinaryExprModel> &other) { return any.type == &__jule_any_type131 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_type_deallocator167, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::Ptr<_1aa60090c_UnsafeDerefExprModel> &other) { return any.type == &__jule_any_type132 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_type_deallocator168, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::Ptr<_1aa5ed7ea_RefExprModel> &other) { return any.type == &__jule_any_type133 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_type_deallocator169, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::Ptr<_1aa324136_StructArgExprModel> &other) { return any.type == &__jule_any_type134 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_type_deallocator170, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::Ptr<_1aa600c09_UnsafeCastingExprModel> &other) { return any.type == &__jule_any_type135 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_type_deallocator171, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::Ptr<_1aa5ee983_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type136 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type137{.dealloc=__jule_type_deallocator45, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type137_compare(const jule::Any &any, const jule::Ptr<jule::Str> &other) { return any.type == &__jule_any_type137 && jule::ptr_equal(any.data.alloc, other.alloc); }
jule::Bool __jule_any_type138_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other)); }
jule::Str __jule_any_type138_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type138{.dealloc=__jule_type_deallocator172, .eq=__jule_any_type138_eq, .to_str=__jule_any_type138_to_str};
jule::Bool __jule_any_type138_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type138 && __jule_any_type138_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type139_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other)); }
jule::Str __jule_any_type139_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type139{.dealloc=__jule_type_deallocator173, .eq=__jule_any_type139_eq, .to_str=__jule_any_type139_to_str};
jule::Bool __jule_any_type139_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type139 && __jule_any_type139_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type140_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other)); }
jule::Str __jule_any_type140_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type140{.dealloc=__jule_type_deallocator174, .eq=__jule_any_type140_eq, .to_str=__jule_any_type140_to_str};
jule::Bool __jule_any_type140_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type140 && __jule_any_type140_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type141_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other)); }
jule::Str __jule_any_type141_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type141{.dealloc=__jule_type_deallocator175, .eq=__jule_any_type141_eq, .to_str=__jule_any_type141_to_str};
jule::Bool __jule_any_type141_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type141 && __jule_any_type141_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type142_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other)); }
jule::Str __jule_any_type142_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type142{.dealloc=__jule_type_deallocator176, .eq=__jule_any_type142_eq, .to_str=__jule_any_type142_to_str};
jule::Bool __jule_any_type142_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type142 && __jule_any_type142_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type143_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other)); }
jule::Str __jule_any_type143_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type143{.dealloc=__jule_type_deallocator177, .eq=__jule_any_type143_eq, .to_str=__jule_any_type143_to_str};
jule::Bool __jule_any_type143_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type143 && __jule_any_type143_eq(any.data.alloc, (void*)&other); }
inline jule::Bool __jule_anon1bc086727(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa33351e_ParamIns> _24021_p1, jule::Ptr<_1aa33351e_ParamIns> _24036_p2);
struct __jule_anon_1bc0dda7b_ctx{
	jule::Ptr<_1aa39b0ae_ImportInfo> *_49828_pkg;
};
static void __jule_anon_1bc0dda7b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bc0dda7b_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1bc0dda7b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa39b0ae_ImportInfo> _49935_spkg);
struct __jule_anon_1bc1409ac_ctx{
	jule::Ptr<_1aa34cb21_comptimeStructField> _self_;
};
static void __jule_anon_1bc1409ac_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bc1409ac_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc1409ac(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _7421_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _7436_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bc142915_ctx{
	jule::Ptr<_1aa34cb21_comptimeStructField> _self_;
};
static void __jule_anon_1bc142915_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bc142915_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc142915(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _8121_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _8136_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bc151935_ctx{
	jule::Ptr<_1aa3509c0_comptimeStatic> _self_;
};
static void __jule_anon_1bc151935_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bc151935_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc151935(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _17621_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _17636_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bc15388d_ctx{
	jule::Ptr<_1aa3509c0_comptimeStatic> _self_;
};
static void __jule_anon_1bc15388d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bc15388d_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc15388d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _18321_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _18336_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bc1603b1_ctx{
	jule::Ptr<_1aa35386e_comptimeEnumField> _self_;
};
static void __jule_anon_1bc1603b1_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bc1603b1_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc1603b1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _27021_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _27036_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bc1720a4_ctx{
	jule::Ptr<_1aa356311_comptimeParam> _self_;
};
static void __jule_anon_1bc1720a4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bc1720a4_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc1720a4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _37821_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _37836_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bc17400c_ctx{
	jule::Ptr<_1aa356311_comptimeParam> _self_;
};
static void __jule_anon_1bc17400c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bc17400c_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc17400c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _38521_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _38536_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bc175e65_ctx{
	jule::Ptr<_1aa356311_comptimeParam> _self_;
};
static void __jule_anon_1bc175e65_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bc175e65_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc175e65(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _39221_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _39236_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bc20c2c6_ctx{
	jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bc20c2c6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bc20c2c6_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc20c2c6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _92721_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _92736_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bc20e22e_ctx{
	jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bc20e22e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bc20e22e_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc20e22e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _93421_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _93436_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bc211187_ctx{
	jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bc211187_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bc211187_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc211187(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _94121_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _94136_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bc2130e0_ctx{
	jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bc2130e0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bc2130e0_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc2130e0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _94821_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _94836_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bc215048_ctx{
	jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bc215048_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bc215048_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc215048(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _95521_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _95536_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bc216ea1_ctx{
	jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bc216ea1_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bc216ea1_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc216ea1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _96221_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _96236_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1acca88cb_ctx{
	jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_;
};
static void __jule_anon_1acca88cb_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1acca88cb_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1acca88cb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _96921_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _96936_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1accaa89a_ctx{
	jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_;
};
static void __jule_anon_1accaa89a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1accaa89a_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1accaa89a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _97621_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _97636_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1accaca78_ctx{
	jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_;
};
static void __jule_anon_1accaca78_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1accaca78_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1accaca78(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _98321_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _98336_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1accae9d1_ctx{
	jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_;
};
static void __jule_anon_1accae9d1_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1accae9d1_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1accae9d1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _99021_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _99036_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1accb1939_ctx{
	jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_;
};
static void __jule_anon_1accb1939_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1accb1939_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1accb1939(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _99721_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _99736_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1accb3892_ctx{
	jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_;
};
static void __jule_anon_1accb3892_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1accb3892_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1accb3892(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _100421_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _100436_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bbd03ede_ctx{
	jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bbd03ede_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bbd03ede_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bbd03ede(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _101121_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _101136_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bbd05b28_ctx{
	jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bbd05b28_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bbd05b28_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bbd05b28(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _101821_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _101836_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bbd07a81_ctx{
	jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bbd07a81_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bbd07a81_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bbd07a81(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _102521_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _102536_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bbd099d9_ctx{
	jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bbd099d9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bbd099d9_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bbd099d9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _103221_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _103236_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bbd0b942_ctx{
	jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bbd0b942_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bbd0b942_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bbd0b942(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _103921_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _103936_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bbd0d89a_ctx{
	jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bbd0d89a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bbd0d89a_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bbd0d89a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _104621_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _104636_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bbd10803_ctx{
	jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bbd10803_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bbd10803_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bbd10803(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _105321_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _105336_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bbd2b126_ctx{
	jule::Ptr<_1aa361d55_comptimeValue> _self_;
};
static void __jule_anon_1bbd2b126_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bbd2b126_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bbd2b126(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _116921_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _116936_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bbd2d07e_ctx{
	jule::Ptr<_1aa361d55_comptimeValue> _self_;
};
static void __jule_anon_1bbd2d07e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bbd2d07e_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bbd2d07e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _117621_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _117636_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bbd2eed7_ctx{
	jule::Ptr<_1aa361d55_comptimeValue> _self_;
};
static void __jule_anon_1bbd2eed7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bbd2eed7_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bbd2eed7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _118321_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _118336_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bbd31e40_ctx{
	jule::Ptr<_1aa361d55_comptimeValue> _self_;
};
static void __jule_anon_1bbd31e40_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bbd31e40_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bbd31e40(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _119021_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _119036_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bbd33d98_ctx{
	jule::Ptr<_1aa361d55_comptimeValue> _self_;
};
static void __jule_anon_1bbd33d98_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bbd33d98_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bbd33d98(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _119721_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _119736_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bbd35d01_ctx{
	jule::Ptr<_1aa361d55_comptimeValue> _self_;
};
static void __jule_anon_1bbd35d01_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bbd35d01_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bbd35d01(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _120421_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _120436_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bbd4885d_ctx{
	jule::Ptr<_1aa365c9e_comptimeFile> _self_;
};
static void __jule_anon_1bbd4885d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bbd4885d_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bbd4885d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _131821_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _131836_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bbd4a7b6_ctx{
	jule::Ptr<_1aa365c9e_comptimeFile> _self_;
};
static void __jule_anon_1bbd4a7b6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bbd4a7b6_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bbd4a7b6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _132521_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _132536_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bbd4c71e_ctx{
	jule::Ptr<_1aa365c9e_comptimeFile> _self_;
};
static void __jule_anon_1bbd4c71e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bbd4c71e_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bbd4c71e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _133221_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _133236_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bbdaecc0_ctx{
	jule::Ptr<_1aa369841_comptimeDecl> _self_;
};
static void __jule_anon_1bbdaecc0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bbdaecc0_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bbdaecc0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _182921_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _182936_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bbdb1c28_ctx{
	jule::Ptr<_1aa369841_comptimeDecl> _self_;
};
static void __jule_anon_1bbdb1c28_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bbdb1c28_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bbdb1c28(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _183621_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _183636_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bbdb3b81_ctx{
	jule::Ptr<_1aa369841_comptimeDecl> _self_;
};
static void __jule_anon_1bbdb3b81_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bbdb3b81_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bbdb3b81(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _184321_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _184336_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bc2dca49_ctx{
	jule::Ptr<_1aa369841_comptimeDecl> _self_;
};
static void __jule_anon_1bc2dca49_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bc2dca49_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc2dca49(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _185021_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _185036_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bc2de9a2_ctx{
	jule::Ptr<_1aa369841_comptimeDecl> _self_;
};
static void __jule_anon_1bc2de9a2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bc2de9a2_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc2de9a2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _185721_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _185736_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bc2e190a_ctx{
	jule::Ptr<_1aa369841_comptimeDecl> _self_;
};
static void __jule_anon_1bc2e190a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bc2e190a_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc2e190a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _186421_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _186436_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bc2e3863_ctx{
	jule::Ptr<_1aa369841_comptimeDecl> _self_;
};
static void __jule_anon_1bc2e3863_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bc2e3863_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc2e3863(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _187121_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _187136_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bc2e57bb_ctx{
	jule::Ptr<_1aa369841_comptimeDecl> _self_;
};
static void __jule_anon_1bc2e57bb_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bc2e57bb_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc2e57bb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _187821_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _187836_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bc2e7999_ctx{
	jule::Ptr<_1aa369841_comptimeDecl> _self_;
};
static void __jule_anon_1bc2e7999_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bc2e7999_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc2e7999(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _188521_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _188536_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bc2e9902_ctx{
	jule::Ptr<_1aa369841_comptimeDecl> _self_;
};
static void __jule_anon_1bc2e9902_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bc2e9902_ctx>().dealloc(); }
inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc2e9902(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _189221_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _189236_fc, jule::Ptr<_1aa44cc98_Data>* );
struct __jule_anon_1bc305435_ctx{
	jule::Ptr<_1aa3713e7_constraintChecker> _self_;
};
static void __jule_anon_1bc305435_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bc305435_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1bc305435(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3bb530_sema>* _6415_sema, jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>* _6433_generics);
struct __jule_anon_1bc5c6aad_ctx{
	jule::Ptr<_1aa334597_FnIns> _101847_f;
	jule::Slice<jule::Ptr<_1aa307889_GenericDecl>> _101911_generics;
	jule::Slice<jule::Ptr<_1a601a64a_TypeKind>> *_101863_ignored;
};
static void __jule_anon_1bc5c6aad_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bc5c6aad_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1bc5c6aad(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3bb530_sema>* _102542_sema);
struct __jule_anon_1bc5de92d_ctx{
	jule::Fn<jule::Bool,jule::Ptr<_1aa3bb530_sema>*,jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>*> _112146_algo;
	jule::Slice<jule::Ptr<_1a6019858_TypeAlias>> _11267_generics;
};
static void __jule_anon_1bc5de92d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bc5de92d_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1bc5de92d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3bb530_sema>* _112842_sema);
struct __jule_anon_1bc5e40a3_ctx{
	jule::Ptr<_1aa334597_FnIns> _114037_f;
	jule::Ptr<_1aa3bb530_sema> _self_;
};
static void __jule_anon_1bc5e40a3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bc5e40a3_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1bc5e40a3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3bb530_sema>* _114437_sema, jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>* _114455_generics);
struct __jule_anon_1bca34da6_ctx{
	jule::Ptr<_1aa3026ec_NsSelectionExpr> _188135_s;
	jule::Str _18823_path;
};
static void __jule_anon_1bca34da6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bca34da6_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1bca34da6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa39b0ae_ImportInfo> _188343_imp);
inline jule::Str __jule_anon1bcd12260(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _87019_def);
struct __jule_anon_1bcd8ec27_ctx{
	jule::Ptr<_1aa2eb42c_NamespaceTypeDecl> _154336_decl;
	jule::Str _15443_path;
};
static void __jule_anon_1bcd8ec27_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bcd8ec27_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1bcd8ec27(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa39b0ae_ImportInfo> _154543_imp);
struct __jule_anon_1ac9d2160_ctx{
	_1ab1ab74d_exprDeadCode *_self_;
};
static void __jule_anon_1ac9d2160_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac9d2160_ctx>().dealloc(); }
inline void __jule_anon_1ac9d2160(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2636_expr);
struct __jule_anon_1bd61b3e8_ctx{
	_1aa89adc7_exprOptimizer *_self_;
};
static void __jule_anon_1bd61b3e8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd61b3e8_ctx>().dealloc(); }
inline void __jule_anon_1bd61b3e8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _56147_m);
struct __jule_anon_1bd752b6c_ctx{
	jule::Ptr<_1aba2699c_scopeCoder> _self_;
	jule::Bool _1377_ref;
};
static void __jule_anon_1bd752b6c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd752b6c_ctx>().dealloc(); }
inline void __jule_anon_1bd752b6c(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1bd756764_ctx{
	jule::Ptr<_1aba2699c_scopeCoder> _self_;
	jule::Ptr<_1aa37a9d9_RangeIter> *_12936_it;
};
static void __jule_anon_1bd756764_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd756764_ctx>().dealloc(); }
inline void __jule_anon_1bd756764(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1bd765c3a_ctx{
	jule::Ptr<_1aba2699c_scopeCoder> _self_;
};
static void __jule_anon_1bd765c3a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd765c3a_ctx>().dealloc(); }
inline void __jule_anon_1bd765c3a(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1bd7681b0_ctx{
	jule::Ptr<_1aba2699c_scopeCoder> _self_;
};
static void __jule_anon_1bd7681b0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd7681b0_ctx>().dealloc(); }
inline void __jule_anon_1bd7681b0(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1bd782152_ctx{
	jule::Ptr<_1aba2699c_scopeCoder> _self_;
};
static void __jule_anon_1bd782152_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd782152_ctx>().dealloc(); }
inline void __jule_anon_1bd782152(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1bd811cd6_ctx{
	jule::Ptr<_1aba2699c_scopeCoder> _self_;
};
static void __jule_anon_1bd811cd6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd811cd6_ctx>().dealloc(); }
inline void __jule_anon_1bd811cd6(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1bd8130e5_ctx{
	jule::Ptr<_1aba2699c_scopeCoder> _self_;
	jule::Ptr<_1aa37cdb5_Match> _71330_m;
};
static void __jule_anon_1bd8130e5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd8130e5_ctx>().dealloc(); }
inline void __jule_anon_1bd8130e5(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1bd883a7d_ctx{
	jule::Ptr<_1aba2699c_scopeCoder> _self_;
	jule::Ptr<_1aa326545_AnonFnExprModel> _108334_m;
};
static void __jule_anon_1bd883a7d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd883a7d_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1bd883a7d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3e4d3e_Var> _108967_v);
struct __jule_anon_1bdbb6762_ctx{
	jule::Ptr<_1abb0aab4_ObjectCoder> _self_;
};
static void __jule_anon_1bdbb6762_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdbb6762_ctx>().dealloc(); }
inline void __jule_anon_1bdbb6762(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa39ded5_Package>* _74138_pkg);
struct __jule_anon_1bdbb7c2a_ctx{
	jule::Ptr<_1abb0aab4_ObjectCoder> _self_;
};
static void __jule_anon_1bdbb7c2a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdbb7c2a_ctx>().dealloc(); }
inline void __jule_anon_1bdbb7c2a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn>* _75436_m);
struct __jule_anon_1bdbbd329_ctx{
	jule::Ptr<_1abb0aab4_ObjectCoder> _self_;
};
static void __jule_anon_1bdbbd329_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdbbd329_ctx>().dealloc(); }
inline void __jule_anon_1bdbbd329(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa39ded5_Package>* _76738_pkg);
struct __jule_anon_1bdbcd911_ctx{
	jule::Ptr<_1abb0aab4_ObjectCoder> _self_;
	jule::Ptr<_1aa3e4d3e_Var> _83424_v;
};
static void __jule_anon_1bdbcd911_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdbcd911_ctx>().dealloc(); }
inline void __jule_anon_1bdbcd911(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1bdbd09ce_ctx{
	jule::Ptr<_1abb0aab4_ObjectCoder> _self_;
	jule::Ptr<_1aa3e4d3e_Var> _83424_v;
};
static void __jule_anon_1bdbd09ce_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdbd09ce_ctx>().dealloc(); }
inline void __jule_anon_1bdbd09ce(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1bdbd31b8_ctx{
	jule::Ptr<_1abb0aab4_ObjectCoder> _self_;
};
static void __jule_anon_1bdbd31b8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdbd31b8_ctx>().dealloc(); }
inline void __jule_anon_1bdbd31b8(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1bdbd4340_ctx{
	jule::Ptr<_1abb0aab4_ObjectCoder> _self_;
	jule::Ptr<_1aa3e4d3e_Var> _83424_v;
};
static void __jule_anon_1bdbd4340_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdbd4340_ctx>().dealloc(); }
inline void __jule_anon_1bdbd4340(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1bdc0257d_ctx{
	jule::Ptr<_1abb0aab4_ObjectCoder> _self_;
};
static void __jule_anon_1bdc0257d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdc0257d_ctx>().dealloc(); }
inline void __jule_anon_1bdc0257d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa39ded5_Package>* _97638_pkg);
struct __jule_anon_1bdc03914_ctx{
	jule::Ptr<_1abb0aab4_ObjectCoder> _self_;
	jule::Ptr<_1aa31e373_StructIns> _99049_s;
};
static void __jule_anon_1bdc03914_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdc03914_ctx>().dealloc(); }
inline void __jule_anon_1bdc03914(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn>* _99136_m);
struct __jule_anon_1bdc1134a_ctx{
	jule::Ptr<_1abb0aab4_ObjectCoder> _self_;
};
static void __jule_anon_1bdc1134a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdc1134a_ctx>().dealloc(); }
inline void __jule_anon_1bdc1134a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa39ded5_Package>* _102838_pkg);
struct __jule_anon_1bdc2db5e_ctx{
	jule::Ptr<_1abb0aab4_ObjectCoder> _self_;
};
static void __jule_anon_1bdc2db5e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdc2db5e_ctx>().dealloc(); }
inline void __jule_anon_1bdc2db5e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa39ded5_Package>* _115338_pkg);
struct __jule_anon_1bdc30127_ctx{
	jule::Ptr<_1abb0aab4_ObjectCoder> _self_;
};
static void __jule_anon_1bdc30127_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdc30127_ctx>().dealloc(); }
inline void __jule_anon_1bdc30127(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa4475cd_SymbolTable>* _116931_file);
struct __jule_anon_1bdc3a8e6_ctx{
	jule::Ptr<_1abb0aab4_ObjectCoder> _self_;
};
static void __jule_anon_1bdc3a8e6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdc3a8e6_ctx>().dealloc(); }
inline void __jule_anon_1bdc3a8e6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa39ded5_Package>* _120838_pkg);
inline __jule_tuple_i64__jule_tuple_bool __jule_anon1bcc2b6da(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I32 _22864_base);
inline __jule_tuple_u64__jule_tuple_bool __jule_anon1bcc34616(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I32 _23665_base);
inline jule::Bool __jule_anon1bc136d05(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa39b0ae_ImportInfo> _191225_pkg);
struct __jule_anon_1bdbb7664_ctx{
	jule::Ptr<_1abb0aab4_ObjectCoder> _self_;
};
static void __jule_anon_1bdbb7664_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdbb7664_ctx>().dealloc(); }
inline void __jule_anon_1bdbb7664(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa4475cd_SymbolTable>* _74232_file);
struct __jule_anon_1bdbbe22b_ctx{
	jule::Ptr<_1abb0aab4_ObjectCoder> _self_;
};
static void __jule_anon_1bdbbe22b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdbbe22b_ctx>().dealloc(); }
inline void __jule_anon_1bdbbe22b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa4475cd_SymbolTable>* _76832_file);
struct __jule_anon_1bdc03480_ctx{
	jule::Ptr<_1abb0aab4_ObjectCoder> _self_;
};
static void __jule_anon_1bdc03480_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdc03480_ctx>().dealloc(); }
inline void __jule_anon_1bdc03480(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa4475cd_SymbolTable>* _97732_file);
struct __jule_anon_1bdc1224c_ctx{
	jule::Ptr<_1abb0aab4_ObjectCoder> _self_;
};
static void __jule_anon_1bdc1224c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdc1224c_ctx>().dealloc(); }
inline void __jule_anon_1bdc1224c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa4475cd_SymbolTable>* _102932_file);
struct __jule_anon_1bdc2ea61_ctx{
	jule::Ptr<_1abb0aab4_ObjectCoder> _self_;
};
static void __jule_anon_1bdc2ea61_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdc2ea61_ctx>().dealloc(); }
inline void __jule_anon_1bdc2ea61(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa4475cd_SymbolTable>* _115432_file);
struct __jule_anon_1bdc0542c_ctx{
	jule::Ptr<_1abb0aab4_ObjectCoder> _self_;
	jule::Ptr<_1aa345047_Trait> _97817_t;
};
static void __jule_anon_1bdc0542c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdc0542c_ctx>().dealloc(); }
inline void __jule_anon_1bdc0542c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn>* _98239_m);
jule::Array<jule::Array<jule::Str,2>,5> _1adc51840_HelpMap;jule::Str _1abb94378_OutDir;jule::Str _1abb94642_OutName;jule::Str _1abb948ea_Out;jule::Ptr<_1ad896c38_RangeTable> _1c6b28776__L;jule::Ptr<_1ad896c38_RangeTable> _1c6b29689__LU;jule::Ptr<_1ad896c38_RangeTable> _1c6b3066d_Letter;jule::Ptr<_1ad896c38_RangeTable> _1c6b3693d_Upper;jule::Array<jule::U8,256> _1ad890759__PROPERTIES;jule::Array<jule::U8,256> _1ed42cd34_first;jule::Array<_1ed42d3d9_acceptRange,16> _1ed42d780_acceptRanges;jule::Array<jule::Str,4> _1ed4984cb_CppHeaderExts;jule::Array<jule::Str,3> _1ed499840_CppExts;jule::Array<jule::Str,1> _1ada63784_ObjectiveCppExts;jule::Str _1adc46e51_PathStdlib;jule::Str _1adc4724d_PathExec;jule::Str _1adc47506_PathWd;jule::Str _1adc47803_PathApi;jule::Str _1adc47aab_Os;jule::Str _1adc47d64_Arch;jule::Str _1adc4cd7a_Compiler;jule::Str _1adc4e277_CompilerPath;jule::Str _1adc4e486_CppStd;jule::Bool _1adc4e6b7_Shadowing;jule::Bool _1adc4e970_Transpilation;jule::Bool _1adc4ec28_Test;jule::Bool _1adc4eed1_RC;jule::Bool _1adc50399_Safety;jule::Bool _1adc505db_Production;jule::Array<jule::U8,32> _1a68797e4__DE_BRUIJN32_TAB;jule::Array<jule::U8,64> _1a6879d88__DE_BRUIJN64_TAB;_1a673e3ce_floatInfo _1a6e51bbd_f32info;_1a673e3ce_floatInfo _1a6e51eba_f64info;jule::Array<jule::Array<jule::U64,2>,696> _1a6e598a7_detailedPowsOfTen;jule::Slice<jule::I32> _1a6e5b6bc_powtab;jule::Slice<jule::F64> _1a6e5c27d_f64pow10;jule::Slice<jule::F32> _1a6e5c5ad_f32pow10;jule::Array<jule::U64,20> _1a6e60814_u64pow10;jule::Slice<_1a6e645a4_leftCheat> _1a6e649d3_leftCheats;jule::I32 _1a6e6a984_BitSize;jule::Str _1a6e6ac81_SysInt;jule::Str _1a6e6b039_SysUint;jule::Array<jule::I32,5> _1aa236367_Spaces;jule::Array<jule::U32,6> _1aa236587_UnaryOps;jule::Array<jule::U32,18> _1aa2368b7_BinOps;jule::Array<jule::U32,2> _1aa2ce6a7_PostfixOps;jule::Array<jule::U32,11> _1aa2ce993_AssignOps;jule::Array<_1aa2dcab1_kindPair,28> _1aa2dcee0_keywords;jule::Array<_1aa2dcab1_kindPair,46> _1aa2dd320_basicOps;jule::Slice<jule::Str> _1aa370aab_builtinConstraints;jule::Ptr<_1a601a64a_TypeKind> _1aa5db6c8_primNil;jule::Ptr<_1a601a64a_TypeKind> _1aa5db9c5_primVoid;jule::Ptr<_1a601a64a_TypeKind> _1aa5dbc7d_primAny;jule::Ptr<_1a601a64a_TypeKind> _1aa5dc07a_primStr;jule::Ptr<_1a601a64a_TypeKind> _1aa5dc333_primBool;jule::Ptr<_1a601a64a_TypeKind> _1aa5dc5db_primUintptr;jule::Ptr<_1a601a64a_TypeKind> _1aa5dc894_primUint;jule::Ptr<_1a601a64a_TypeKind> _1aa5dcc5c_primInt;jule::Ptr<_1a601a64a_TypeKind> _1aa5dce9e_primI8;jule::Ptr<_1a601a64a_TypeKind> _1aa5dd246_primI16;jule::Ptr<_1a601a64a_TypeKind> _1aa5dd4ee_primI32;jule::Ptr<_1a601a64a_TypeKind> _1aa5dd7a7_primI64;jule::Ptr<_1a601a64a_TypeKind> _1aa5dda60_primU8;jule::Ptr<_1a601a64a_TypeKind> _1aa5ddd18_primU16;jule::Ptr<_1a601a64a_TypeKind> _1aa5de0c1_primU32;jule::Ptr<_1a601a64a_TypeKind> _1aa5de5aa_primU64;jule::Ptr<_1a601a64a_TypeKind> _1aa5de7ec_primF32;jule::Ptr<_1a601a64a_TypeKind> _1aa5dea0b_primF64;jule::Ptr<_1aa8a4287_data> _1aa8a3891_emptyData;jule::Bool _1aa8a88a7_Copy;jule::Bool _1aa8a8ba4_Deadcode;jule::Bool _1aa8a8e5c_Append;jule::Bool _1aa8a9259_Math;jule::Bool _1aa8a9512_Access;jule::Bool _1aa8a97ba_Inline;jule::Bool _1aa8a9a73_Ptr;jule::Bool _1aa8a9e3b_Cond;jule::Bool _1aa8aa17d_Str;jule::Bool _1aa8aa425_Slice;jule::Bool _1aa8aa6cd_Assign;jule::Bool _1aa8aa986_Exceptional;jule::Bool _1aa8aac3e_Iter;jule::Bool _1aa8aaee7_Dynamic;jule::Bool _1ab1ac441_exprEnabled;jule::Bool _1ab1ac683_scopeEnabled;jule::Array<jule::U64,12> _1abaee019_mdays;jule::Str _1aba2623d_assignArgName;jule::Ptr<_1a601a64a_TypeKind> _1abb08a4b_generalGCPtr;

inline jule::Bool _1ad896287_Range16_eq(_1ad896287_Range16 *_self_, _1ad896287_Range16 _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		(_self_->_field_Stride == _self_->_field_Stride);
}



std::ostream &operator<<(std::ostream &_Stream, _1ad896287_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1ad8967b5_Range32_eq(_1ad8967b5_Range32 *_self_, _1ad8967b5_Range32 _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		(_self_->_field_Stride == _self_->_field_Stride);
}



std::ostream &operator<<(std::ostream &_Stream, _1ad8967b5_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ad896c38_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1ed42d3d9_acceptRange_eq(_1ed42d3d9_acceptRange *_self_, _1ed42d3d9_acceptRange _other_) {
	return 
		(_self_->_field_lo == _other_._field_lo) &&
		(_self_->_field_hi == _self_->_field_hi);
}



std::ostream &operator<<(std::ostream &_Stream, _1ed42d3d9_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline _1ed486d49_StrBuilder static__1ed487146_New(jule::I32 _1516_cap) {
	if ((_1516_cap < 0LL)) {
		jule::panic(jule::Str::lit("std::strings: StrBuilder.New: cap < 0", 37) + jule::Str("\nlocation: std/internal/strings/builder.jule:17:4"));;
	};
	return _1ed486d49_StrBuilder{._field_buf=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _1516_cap); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; })};;
}



inline void _1ed490704_Write(_1ed486d49_StrBuilder* _self_, jule::Slice<jule::U8> _2521_b) {
	((*(_self_))._field_buf).append(_2521_b);;
}



inline void _1ed4909ac_WriteStr(_1ed486d49_StrBuilder* _self_, jule::Str _3024_s) {
	((*(_self_))._field_buf).append(_3024_s);;
}



inline void _1ed490c65_WriteByte(_1ed486d49_StrBuilder* _self_, jule::U8 _3525_b) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(_3525_b); };
}



inline jule::Str _1ed4912a4_Str(_1ed486d49_StrBuilder* _self_) {
	jule::Str _507_s = _1ed560e89_StrFromBytes((*(_self_))._field_buf);;
	_1ed4914a2_Clear(_self_);
	return _507_s;;
}



inline void _1ed4914a2_Clear(_1ed486d49_StrBuilder* _self_) {
	(*(_self_))._field_buf=nullptr;
}



inline jule::I32 _1ed491738_Len(_1ed486d49_StrBuilder* _self_) {
	return (*(_self_))._field_buf.len();;
}



inline jule::Slice<jule::U8> _1ed491c55_Buf(_1ed486d49_StrBuilder* _self_) {
	return (*(_self_))._field_buf;;
}



inline void _1ed49200d_SetBuf(_1ed486d49_StrBuilder* _self_, jule::Slice<jule::U8> _7733_buf) {
	(*(_self_))._field_buf=_7733_buf;
}





std::ostream &operator<<(std::ostream &_Stream, _1ed486d49_StrBuilder _Src) {
	_Stream << "StrBuilder{";
	_Stream << "buf:" << _Src._field_buf;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1ed49332d_index(_1ed492d66_lazyBuff* _self_, jule::I32 _5521_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5521_i];;
	};
	return (*(_self_))._field_path[_5521_i];;
}



inline void _1ed4935d6_append(_1ed492d66_lazyBuff* _self_, jule::U8 _6222_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6222_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=({ auto __jule_collection = jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
		jule::copy((*(_self_))._field_buff, (*(_self_))._field_path.slice(0LL, (*(_self_))._field_w));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6222_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _1ed49386c_string(_1ed492d66_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + _1ed560bc0_BytesStr((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}





std::ostream &operator<<(std::ostream &_Stream, _1ed492d66_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1ed37c9a9_DirEntry_eq(_1ed37c9a9_DirEntry *_self_, _1ed37c9a9_DirEntry _other_) {
	return 
		(_self_->_field_Name == _other_._field_Name) &&
		(_self_->_field_Stat == _self_->_field_Stat);
}



std::ostream &operator<<(std::ostream &_Stream, _1ed37c9a9_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1ed37cc40_Directory_eq(_1ed37cc40_Directory *_self_, _1ed37cc40_Directory _other_) { return true; }

inline jule::Exceptional<jule::Slice<jule::Ptr<_1ed37c9a9_DirEntry>>> static__1ed49770b_Read(jule::Str _1517_path) {
	jule::Slice<jule::Ptr<_1ed37c9a9_DirEntry>> __jule_func_result;
	jule::Slice<jule::U8> _163_s = _1e024eeb6_StrToBytes(_1517_path);;
	DIR* _177_dir = _1e026298a_Opendir((&(_163_s[0LL])));;
	if ((_177_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_1ed37c9a9_DirEntry>>>{.error=jule::Any(_1ed373c8b_getLastFsError(), &__jule_any_type0)};
	};
	for (;;) {
		{
			struct dirent* _224_dirent = _1e0262b66_Readdir(_177_dir);;
			if ((_224_dirent == nullptr)) {
				goto _iter_end_1acb5747d;
			};
			jule::Str _264_name = _1e024ec30_BytePtrToStr(((jule::U8*)((*(_224_dirent)).d_name)));;
			jule::Ptr<_1ed381969_Status> _278_stat = ({
				auto except = static__1ed37d636_Of(_1ed49461a_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1517_path; (*it++) = _264_name; __jule_collection; })));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_1ed37c9a9_DirEntry>>>{.error=except.error};
				} jule::Ptr<_1ed381969_Status>(nullptr);});
			});;
			{ jule::Slice<jule::Ptr<_1ed37c9a9_DirEntry>> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(jule::new_ptr<_1ed37c9a9_DirEntry>(_1ed37c9a9_DirEntry{._field_Name=_264_name, ._field_Stat=_278_stat})); };
		}
	_iter_next_1acb5747d:;
	}
	_iter_end_1acb5747d:;;
	_1e0262e0d_Closedir(_177_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_1ed37c9a9_DirEntry>>>{.result=__jule_func_result};;
}



inline jule::VoidExceptional static__1ed49793c_Create(jule::Str _4019_path) {
	jule::Slice<jule::U8> _443_s = _1e024eeb6_StrToBytes(_4019_path);;
	if ((_1e0263815_Mkdir((&(_443_s[0LL])), 448LL) != 0LL)) {
		return jule::VoidExceptional{.error=jule::Any(_1ed373c8b_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional static__1ed497b6d_Remove(jule::Str _5319_path) {
	jule::Slice<jule::U8> _543_s = _1e024eeb6_StrToBytes(_5319_path);;
	if ((_1e0263ace_Rmdir((&(_543_s[0LL]))) != 0LL)) {
		return jule::VoidExceptional{.error=jule::Any(_1ed373c8b_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}





std::ostream &operator<<(std::ostream &_Stream, _1ed37cc40_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1ed37e879_File_eq(_1ed37e879_File *_self_, _1ed37e879_File _other_) {
	return 
		(_self_->_field_handle == _other_._field_handle);
}

inline jule::Exceptional<jule::Ptr<_1ed37e879_File>> static__1ed37b90e_Open(jule::Str _2017_path, jule::I32 _2028_flag, jule::I32 _2041_mode) {
	jule::Slice<jule::U8> _213_s = _1e024eeb6_StrToBytes(_2017_path);;
	jule::I32 _223_handle = _1e026211b_Open((&(_213_s[0LL])), _2028_flag, _2041_mode);;
	if ((_223_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_1ed37e879_File>>{.error=jule::Any(_1ed373c8b_getLastFsError(), &__jule_any_type0)};
	};
	return jule::Exceptional<jule::Ptr<_1ed37e879_File>>{.result=static__1ed37ecca_New(static_cast<jule::Uintptr>(_223_handle))};;
}



inline jule::VoidExceptional static__1ed37bb40_Remove(jule::Str _3319_path) {
	jule::Slice<jule::U8> _343_s = _1e024eeb6_StrToBytes(_3319_path);;
	if ((_1e0263d98_Unlink((&(_343_s[0LL]))) != 0LL)) {
		return jule::VoidExceptional{.error=jule::Any(_1ed373c8b_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I32> _1ed37c0c4_Write(_1ed37e879_File* _self_, jule::Slice<jule::U8> _4821_buf) {
	jule::I32 __jule_func_result = 0;
	if ((_4821_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
	};
	_1ed37b524_HandleRW(&(_4821_buf));
	__jule_func_result=_1ed36d7ad_Write(static_cast<jule::I32>((*(_self_))._field_handle), (&(_4821_buf[0LL])), static_cast<jule::U32>(_4821_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I32>{.error=jule::Any(_1ed373c8b_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
}



inline jule::Exceptional<jule::I32> _1ed37c415_Read(_1ed37e879_File* _self_, jule::Slice<jule::U8> _6924_buf) {
	jule::I32 __jule_func_result = 0;
	if ((_6924_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
	};
	_1ed37b524_HandleRW(&(_6924_buf));
	__jule_func_result=_1ed36d02c_Read(static_cast<jule::I32>((*(_self_))._field_handle), (&(_6924_buf[0LL])), static_cast<jule::U32>(_6924_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I32>{.error=jule::Any(_1ed373c8b_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
}



inline jule::Ptr<_1ed37e879_File> static__1ed37ecca_New(jule::Uintptr _4516_handle) {
	return jule::new_ptr<_1ed37e879_File>(_1ed37e879_File{._field_handle=_4516_handle});;
}



inline jule::Exceptional<jule::Ptr<_1ed37e879_File>> static__1ed380094_Create(jule::Str _5519_path) {
	return static__1ed37b90e_Open(_5519_path, static_cast<jule::I32>(578LL), 438LL);
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__1ed38035d_Read(jule::Str _6717_path) {
	jule::Ptr<_1ed381969_Status> _683_s = ({
		auto except = static__1ed37d636_Of(_6717_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_1ed381969_Status>(nullptr);});
	});;
	if ((!(_1ed38210c_IsReg(_683_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>{.error=jule::Any(static_cast<jule::I32>(14LL), &__jule_any_type0)};
	};
	jule::I32 _737_sz = static_cast<jule::I32>(_1ed382393_Size(_683_s));;
	if ((_737_sz != static_cast<jule::I32>(_1ed382393_Size(_683_s)))) {
		_737_sz=0LL;
	};
	if ((_737_sz < 512LLU)) {
		_737_sz=512LLU;
	};
	jule::Ptr<_1ed37e879_File> _867_f = ({
		auto except = static__1ed37b90e_Open(_6717_path, static_cast<jule::I32>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_1ed37e879_File>(nullptr);});
	});;
	jule::Slice<jule::U8> _877_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_737_sz, _737_sz); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _887_n = 0LL;;
	while ((_887_n < _737_sz)) {
		{
			jule::I32 _904_rn = ({
				auto except = _1ed37c415_Read(_867_f.ptr(), _877_buf.slice(_887_n));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
				} 0;});
			});;
			if ((_904_rn == 0LL)) {
				goto _iter_end_1acb66305;
			};
			_887_n+=_904_rn;
		}
	_iter_next_1acb66305:;
	}
	_iter_end_1acb66305:;;
	({
		auto except = _1ed380e41_Close(_867_f);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::U8>>{.result=_877_buf.slice(0LL, _887_n)};;
}



inline jule::VoidExceptional static__1ed380704_Write(jule::Str _10518_path, jule::Slice<jule::U8> _10529_data, jule::I32 _10543_perm) {
	jule::Ptr<_1ed37e879_File> _1067_f = ({
		auto except = static__1ed37b90e_Open(_10518_path, static_cast<jule::I32>(577LL), _10543_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Ptr<_1ed37e879_File>(nullptr);});
	});;
	jule::I32 _1077_n = 0LL;;
	while ((_1077_n < _10529_data.len())) {
		{
			_1077_n+=({
				auto except = _1ed37c0c4_Write(_1067_f.ptr(), _10529_data.slice(_1077_n));
				(except.ok()) ? (except.result) : ({{

					return jule::VoidExceptional{.error=std::move(except.error)};
				} 0;});
			});
		}
	_iter_next_1acb6b162:;
	}
	_iter_end_1acb6b162:;;
	return _1ed380e41_Close(_1067_f);
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1ed380e41_Close(_1ed37e879_File* _self_) {
	if ((_1ed36d406_Close(static_cast<jule::I32>((*(_self_))._field_handle)) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(_1ed373c8b_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}





std::ostream &operator<<(std::ostream &_Stream, _1ed37e879_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1ed381969_Status_eq(_1ed381969_Status *_self_, _1ed381969_Status _other_) {
	return 
		(_self_->_field_mode == _other_._field_mode) &&
		(_self_->_field_size == _self_->_field_size);
}

inline jule::Exceptional<jule::Ptr<_1ed381969_Status>> static__1ed37d636_Of(jule::Str _1215_path) {
	if ((_1215_path).empty()) {
		return jule::Exceptional<jule::Ptr<_1ed381969_Status>>{.error=jule::Any(static_cast<jule::I32>(4LL), &__jule_any_type0)};
	};
	struct stat _167_handle = (struct stat){};;
	jule::Slice<jule::U8> _173_s = _1e024eeb6_StrToBytes(_1215_path);;
	jule::I32 _183_code = _1e0261bdc_Stat((&(_173_s[0LL])), (&(_167_handle)));;
	if ((_183_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_1ed381969_Status>>{.error=jule::Any(_1ed373c8b_getLastFsError(), &__jule_any_type0)};
	};
	jule::Ptr<_1ed381969_Status> _227_stat = jule::new_ptr<_1ed381969_Status>(_1ed381969_Status{._field_mode=0LL, ._field_size=0});;
	(*_227_stat.alloc)._field_size=_167_handle.st_size;
	if (((_167_handle.st_mode & 16384LLU) == 16384LLU)) {
		(*_227_stat.alloc)._field_mode|=static_cast<jule::I32>(1LL);
	} else if (((_167_handle.st_mode & 32768LLU) == 32768LLU)) {
		(*_227_stat.alloc)._field_mode|=static_cast<jule::I32>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_1ed381969_Status>>{.result=_227_stat};;
}



inline jule::Bool _1ed381d76_IsDir(_1ed381969_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL));;
}



inline jule::Bool _1ed38210c_IsReg(_1ed381969_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I32>(2LL)) == static_cast<jule::I32>(2LL));;
}



inline jule::U32 _1ed382393_Size(_1ed381969_Status* _self_) {
	return (*(_self_))._field_size;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ed381969_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1adc443e3_cmdAttrs_eq(_1adc443e3_cmdAttrs *_self_, _1adc443e3_cmdAttrs _other_) {
	return 
		(_self_->_field_pid == _other_._field_pid);
}



std::ostream &operator<<(std::ostream &_Stream, _1adc443e3_cmdAttrs _Src) {
	_Stream << "cmdAttrs{";
	_Stream << "pid:" << _Src._field_pid;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1ada72b17_Log_eq(_1ada72b17_Log *_self_, _1ada72b17_Log _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Row == _self_->_field_Row) &&
		(_self_->_field_Column == _self_->_field_Column) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_Text == _self_->_field_Text) &&
		(_self_->_field_Line == _self_->_field_Line) &&
		(_self_->_field_Suggestion == _self_->_field_Suggestion);
}



std::ostream &operator<<(std::ostream &_Stream, _1ada72b17_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a673e3ce_floatInfo_eq(_1a673e3ce_floatInfo *_self_, _1a673e3ce_floatInfo _other_) {
	return 
		(_self_->_field_mantbits == _other_._field_mantbits) &&
		(_self_->_field_expbits == _self_->_field_expbits) &&
		(_self_->_field_bias == _self_->_field_bias);
}



std::ostream &operator<<(std::ostream &_Stream, _1a673e3ce_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a6e5244e_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a6e645a4_leftCheat_eq(_1a6e645a4_leftCheat *_self_, _1a6e645a4_leftCheat _other_) {
	return 
		(_self_->_field_delta == _other_._field_delta) &&
		(_self_->_field_cutoff == _self_->_field_cutoff);
}



std::ostream &operator<<(std::ostream &_Stream, _1a6e645a4_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a6e650bb_decimal_eq(_1a6e650bb_decimal *_self_, _1a6e650bb_decimal _other_) {
	return 
		_1bb774e49_arrayCmp(_self_->_field_d.begin(), _other_._field_d.begin(), 800) &&
		(_self_->_field_nd == _self_->_field_nd) &&
		(_self_->_field_dp == _self_->_field_dp) &&
		(_self_->_field_neg == _self_->_field_neg) &&
		(_self_->_field_trunc == _self_->_field_trunc);
}

inline jule::Bool _1a6e5ba30_set(_1a6e650bb_decimal* _self_, jule::Slice<jule::U8> _23819_s) {
	jule::Bool __jule_func_result = false;
	jule::I32 _2397_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_2397_i >= _23819_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23819_s[_2397_i] == '+')) {
			_case_begin_1bb9800cc:;
			{
				(_2397_i)++;
			}
		}
		else if ((_23819_s[_2397_i] == '-')) {
			_case_begin_1bb980286:;
			{
				(*(_self_))._field_neg=true;
				(_2397_i)++;
			}
		}
		_match_end_1bb97ee45:;
	};
	jule::Bool _2567_sawdot = false;;
	jule::Bool _2577_sawdigits = false;;
	for (; (_2397_i < _23819_s.len()); (_2397_i)++) {
		{
			{
				
				if ((_23819_s[_2397_i] == '_')) {
					_case_begin_1bb981b7d:;
					{
						goto _iter_next_1bb98152e;
					}
				}
				else if ((_23819_s[_2397_i] == '.')) {
					_case_begin_1bb981c27:;
					{
						if (_2567_sawdot) {
							return __jule_func_result;;
						};
						_2567_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1bb98152e;
					}
				}
				else if ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9'))) {
					_case_begin_1bb981c8d:;
					{
						_2577_sawdigits=true;
						if (((_23819_s[_2397_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1bb98152e;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23819_s[_2397_i];
							((*(_self_))._field_nd)++;
						} else if ((_23819_s[_2397_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1bb98152e;
					}
				}
				_match_end_1bb981a5c:;
			};
			goto _iter_end_1bb98152e;
		}
	_iter_next_1bb98152e:;
	}
	_iter_end_1bb98152e:;;
	if ((!(_2577_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_2567_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_2397_i < _23819_s.len()) && (_1a6e57025_lower(_23819_s[_2397_i]) == 'e'))) {
		(_2397_i)++;
		if ((_2397_i >= _23819_s.len())) {
			return __jule_func_result;;
		};
		jule::I32 _3028_esign = 1LL;;
		if ((_23819_s[_2397_i] == '+')) {
			(_2397_i)++;
		} else if ((_23819_s[_2397_i] == '-')) {
			(_2397_i)++;
			_3028_esign=-1LL;
		};
		if ((((_2397_i >= _23819_s.len()) || (_23819_s[_2397_i] < '0')) || (_23819_s[_2397_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I32 _3128_e = 0LL;;
		for (; ((_2397_i < _23819_s.len()) && ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9')) || (_23819_s[_2397_i] == '_'))); (_2397_i)++) {
			{
				if ((_23819_s[_2397_i] == '_')) {
					goto _iter_next_1bb98714a;
				};
				if ((_3128_e < 10000LL)) {
					_3128_e=(((_3128_e * 10LL) + static_cast<jule::I32>(_23819_s[_2397_i])) - '0');
				};
			}
		_iter_next_1bb98714a:;
		}
		_iter_end_1bb98714a:;;
		(*(_self_))._field_dp+=(_3128_e * _3028_esign);
	};
	if ((_2397_i != _23819_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1a6e5bd71_floatBits(_1a6e650bb_decimal* _self_, _1a673e3ce_floatInfo* _33226_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _3337_exp = 0LL;;
	jule::U64 _3347_mant = static_cast<jule::U64>(0LLU);;
	if (((*(_self_))._field_nd == 0LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_1bbb08343;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_1bbb05c03;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_1bbb08343;
	};
	_3337_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I32 _3598_n = 0LL;;
			if (((*(_self_))._field_dp >= _1a6e5b6bc_powtab.len())) {
				_3598_n=27LL;
			} else {
				_3598_n=_1a6e5b6bc_powtab[(*(_self_))._field_dp];
			};
			_1a6e6575e_shift(_self_, (-(_3598_n)));
			_3337_exp+=_3598_n;
		}
	_iter_next_1bb98d77d:;
	}
	_iter_end_1bb98d77d:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I32 _3698_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _1a6e5b6bc_powtab.len())) {
				_3698_n=27LL;
			} else {
				_3698_n=_1a6e5b6bc_powtab[(-((*(_self_))._field_dp))];
			};
			_1a6e6575e_shift(_self_, _3698_n);
			_3337_exp-=_3698_n;
		}
	_iter_next_1bb98e1b8:;
	}
	_iter_end_1bb98e1b8:;;
	(_3337_exp)--;
	if ((_3337_exp < ((*(_33226_flt))._field_bias + 1LL))) {
		jule::I32 _3864_n = (((*(_33226_flt))._field_bias + 1LL) - _3337_exp);;
		_1a6e6575e_shift(_self_, (-(_3864_n)));
		_3337_exp+=_3864_n;
	};
	if (((_3337_exp - (*(_33226_flt))._field_bias) >= static_cast<jule::I32>((_1ac23e11a_shiftLeft(1LL, (*(_33226_flt))._field_expbits) - 1LL)))) {
		goto _julec_label_1bbb05c03;
	};
	_1a6e6575e_shift(_self_, static_cast<jule::I32>((jule::U32)(1LL + (*(_33226_flt))._field_mantbits)));
	_3347_mant=_1a6e6630e_roundedInteger(_self_);
	if ((_3347_mant == _1ac274815_shiftLeft(2LLU, (*(_33226_flt))._field_mantbits))) {
		_3347_mant=(_3347_mant >> 1LLU);
		(_3337_exp)++;
		if (((_3337_exp - (*(_33226_flt))._field_bias) >= static_cast<jule::I32>((_1ac23e11a_shiftLeft(1LL, (*(_33226_flt))._field_expbits) - 1LL)))) {
			goto _julec_label_1bbb05c03;
		};
	};
	if (((_3347_mant & _1ac274815_shiftLeft(1LLU, (*(_33226_flt))._field_mantbits)) == 0LLU)) {
		_3337_exp=(*(_33226_flt))._field_bias;
	};
	goto _julec_label_1bbb08343;
	_julec_label_1bbb05c03:;
	_3347_mant=0LLU;
	_3337_exp=static_cast<jule::I32>((jule::U32)((jule::U32)(_1bb97618e_shiftLeft(static_cast<jule::U32>(1LLU), (*(_33226_flt))._field_expbits) - 1LLU) + static_cast<jule::U32>((*(_33226_flt))._field_bias)));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_1bbb08343:;
	jule::U64 _4227_bits = (_3347_mant & (jule::U64)(_1ac274815_shiftLeft(1LLU, (*(_33226_flt))._field_mantbits) - 1LLU));;
	_4227_bits|=_1ac274815_shiftLeft(static_cast<jule::U64>(((_3337_exp - (*(_33226_flt))._field_bias) & static_cast<jule::I32>((_1ac23e11a_shiftLeft(1LL, (*(_33226_flt))._field_expbits) - 1LL)))), (*(_33226_flt))._field_mantbits);
	if ((*(_self_))._field_neg) {
		_4227_bits|=_1ac274815_shiftLeft(_1ac274815_shiftLeft(1LLU, (*(_33226_flt))._field_mantbits), (*(_33226_flt))._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _4227_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1a6e654a6_assign(_1a6e650bb_decimal* _self_, jule::U64 _15126_v) {
	jule::Array<jule::U8,24> _15211_buf = ({ auto __jule_collection = jule::Array<jule::U8,24>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _1557_n = 0LL;;
	while ((_15126_v > 0LLU)) {
		{
			jule::U64 _1574_v1 = (_15126_v / 10LLU);;
			_15126_v-=(jule::U64)(10LLU * _1574_v1);
			_15211_buf[_1557_n]=static_cast<jule::U8>((jule::U64)(_15126_v + '0'));
			(_1557_n)++;
			_15126_v=_1574_v1;
		}
	_iter_next_1bbb0b2be:;
	}
	_iter_end_1bbb0b2be:;;
	(*(_self_))._field_nd=0LL;
	(_1557_n)--;
	for (; (_1557_n >= 0LL); (_1557_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15211_buf[_1557_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1bbb0be18:;
	}
	_iter_end_1bbb0be18:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_1a6e66919_trim(_self_);
}



inline void _1a6e6575e_shift(_1a6e650bb_decimal* _self_, jule::I32 _17625_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1bbb0dd82:;
		}
		else if ((_17625_k > 0LL)) {
			_case_begin_1bbb0de2b:;
			{
				while ((_17625_k > 60LL)) {
					{
						_1a6e67464_leftShift(_self_, 60LLU);
						_17625_k-=60LL;
					}
				_iter_next_1bbb0e9ed:;
				}
				_iter_end_1bbb0e9ed:;;
				_1a6e67464_leftShift(_self_, static_cast<jule::U32>(_17625_k));
			}
		}
		else if ((_17625_k < 0LL)) {
			_case_begin_1bbb0de92:;
			{
				while ((_17625_k < -60LL)) {
					{
						_1a6e66c05_rightShift(_self_, 60LLU);
						_17625_k+=60LL;
					}
				_iter_next_1bbb0e921:;
				}
				_iter_end_1bbb0e921:;;
				_1a6e66c05_rightShift(_self_, static_cast<jule::U32>((-(_17625_k))));
			}
		}
		_match_end_1bbb0dc2d:;
	};
}



inline void _1a6e65a17_roundDown(_1a6e650bb_decimal* _self_, jule::I32 _19625_nd) {
	if (((_19625_nd < 0LL) || (_19625_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19625_nd;
	_1a6e66919_trim(_self_);
}



inline void _1a6e65cc0_roundUp(_1a6e650bb_decimal* _self_, jule::I32 _20523_nd) {
	if (((_20523_nd < 0LL) || (_20523_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I32 _2117_i = (_20523_nd - 1LL);;
	for (; (_2117_i >= 0LL); (_2117_i)--) {
		{
			jule::U8 _2134_c = (*(_self_))._field_d[_2117_i];;
			if ((_2134_c < '9')) {
				((*(_self_))._field_d[_2117_i])++;
				(*(_self_))._field_nd=(_2117_i + 1LL);
				return;;
			};
		}
	_iter_next_1bbb12e63:;
	}
	_iter_end_1bbb12e63:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _1a6e66078_round(_1a6e650bb_decimal* _self_, jule::I32 _23221_nd) {
	if (((_23221_nd < 0LL) || (_23221_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_1a6e677d8_shouldRoundUp(_self_, _23221_nd)) {
		_1a6e65cc0_roundUp(_self_, _23221_nd);
	} else {
		_1a6e65a17_roundDown(_self_, _23221_nd);
	};
}



inline jule::U64 _1a6e6630e_roundedInteger(_1a6e650bb_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I32 _2497_i = 0LL;;
	jule::U64 _2507_n = static_cast<jule::U64>(0LLU);;
	for (; ((_2497_i < (*(_self_))._field_dp) && (_2497_i < (*(_self_))._field_nd)); (_2497_i)++) {
		{
			_2507_n=(jule::U64)((jule::U64)(_2507_n * 10LLU) + static_cast<jule::U64>((jule::U8)((*(_self_))._field_d[_2497_i] - '0')));
		}
	_iter_next_1bbb15d56:;
	}
	_iter_end_1bbb15d56:;;
	for (; (_2497_i < (*(_self_))._field_dp); (_2497_i)++) {
		{
			_2507_n*=10LLU;
		}
	_iter_next_1bbb17d8b:;
	}
	_iter_end_1bbb17d8b:;;
	if (_1a6e677d8_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_2507_n)++;
	};
	return _2507_n;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a6e650bb_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a6e77584_Const> static__1a6e77a07_NewI64(jule::I64 _1619_x) {
	return jule::new_ptr<_1a6e77584_Const>(_1a6e77584_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_1619_x, &__jule_any_type1)});;
}



inline jule::Ptr<_1a6e77584_Const> static__1a6e77cc1_NewU64(jule::U64 _1919_x) {
	return jule::new_ptr<_1a6e77584_Const>(_1a6e77584_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_1919_x, &__jule_any_type2)});;
}



inline jule::Ptr<_1a6e77584_Const> static__1a6e7808a_NewBool(jule::Bool _2220_x) {
	return jule::new_ptr<_1a6e77584_Const>(_1a6e77584_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2220_x, &__jule_any_type3)});;
}



inline jule::Ptr<_1a6e77584_Const> static__1a6e78354_NewStr(jule::Str _2519_x) {
	return jule::new_ptr<_1a6e77584_Const>(_1a6e77584_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2519_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1a6e77584_Const> static__1a6e7861d_NewF64(jule::F64 _2819_x) {
	return jule::new_ptr<_1a6e77584_Const>(_1a6e77584_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2819_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1a6e77584_Const> static__1a6e7882c_NewNil(void) {
	return jule::new_ptr<_1a6e77584_Const>(_1a6e77584_Const{._field_Kind=jule::Str(), ._field_data=nullptr});;
}



inline jule::I64 _1a6e78e8c_ReadI64(_1a6e77584_Const* _self_) {
	if ((!(_1a6e7b588_IsI64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1);;
}



inline jule::U64 _1a6e79223_ReadU64(_1a6e77584_Const* _self_) {
	if ((!(_1a6e7b81e_IsU64(_self_)))) {
		return 0LLU;;
	};
	return (*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2);;
}



inline jule::Bool _1a6e794a9_ReadBool(_1a6e77584_Const* _self_) {
	if ((!(_1a6e7baa5_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type3);;
}



inline jule::Str _1a6e79740_ReadStr(_1a6e77584_Const* _self_) {
	if ((!(_1a6e7bd3b_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type4);;
}



inline jule::F64 _1a6e799c6_ReadF64(_1a6e77584_Const* _self_) {
	if ((!(_1a6e7c0c2_IsF64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5);;
}



inline jule::I64 _1a6e79c5c_AsI64(_1a6e77584_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ab76e78e:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::I64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ab76e55d:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ab76e5c4:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1ab76e0da:;
			{
				return 0LL;;
			}
		}
		_match_end_1ab76de42:;
	};
}



inline jule::U64 _1a6e79ee3_AsU64(_1a6e77584_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ab770031:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::U64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ab770d56:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ab770dbc:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1ab76e2b6:;
			{
				return 0LLU;;
			}
		}
		_match_end_1ab76e261:;
	};
}



inline jule::F64 _1a6e7a279_AsF64(_1a6e77584_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ab772880:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::F64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ab771829:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ab77264e:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else {
			_case_begin_1ab770b9c:;
			{
				return 0LL;;
			}
		}
		_match_end_1ab770b47:;
	};
}



inline void _1a6e7a532_SetI64(_1a6e77584_Const* _self_, jule::I64 _13822_x) {
	(*(_self_))._field_data=jule::Any(_13822_x, &__jule_any_type1);
}



inline void _1a6e7a7da_SetU64(_1a6e77584_Const* _self_, jule::U64 _14122_x) {
	(*(_self_))._field_data=jule::Any(_14122_x, &__jule_any_type2);
}



inline void _1a6e7aa93_SetBool(_1a6e77584_Const* _self_, jule::Bool _14423_x) {
	(*(_self_))._field_data=jule::Any(_14423_x, &__jule_any_type3);
}



inline void _1a6e7ad4b_SetStr(_1a6e77584_Const* _self_, jule::Str _14722_x) {
	(*(_self_))._field_data=jule::Any(_14722_x, &__jule_any_type4);
}



inline void _1a6e7b104_SetF64(_1a6e77584_Const* _self_, jule::F64 _15022_x) {
	(*(_self_))._field_data=jule::Any(_15022_x, &__jule_any_type5);
}



inline jule::Bool _1a6e7b588_IsI64(_1a6e77584_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ab776202:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ab776466:;
			{
				return false;;
			}
		}
		_match_end_1ab776411:;
	};
}



inline jule::Bool _1a6e7b81e_IsU64(_1a6e77584_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ab776db2:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ab7766b9:;
			{
				return false;;
			}
		}
		_match_end_1ab776664:;
	};
}



inline jule::Bool _1a6e7baa5_IsBool(_1a6e77584_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1ab77780d:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ab77717b:;
			{
				return false;;
			}
		}
		_match_end_1ab777126:;
	};
}



inline jule::Bool _1a6e7bd3b_IsStr(_1a6e77584_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1ab778259:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ab777ac7:;
			{
				return false;;
			}
		}
		_match_end_1ab777a72:;
	};
}



inline jule::Bool _1a6e7c0c2_IsF64(_1a6e77584_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ab778ba5:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ab778523:;
			{
				return false;;
			}
		}
		_match_end_1ab7784bd:;
	};
}



inline jule::Bool _1a6e7c358_IsNil(_1a6e77584_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _1a6e7c9da_And(_1a6e77584_Const* _self_, _1a6e77584_Const _23815_x) {
	{
		
		if ((_1a6e7baa5_IsBool(_self_) && _1a6e7baa5_IsBool(&_23815_x))) {
			_case_begin_1ab77ce1d:;
			{
				return (_1a6e794a9_ReadBool(_self_) && _1a6e794a9_ReadBool(&_23815_x));;
			}
		}
		else {
			_case_begin_1ab77cda7:;
			{
				return false;;
			}
		}
		_match_end_1ab77c9bc:;
	};
}



inline jule::Bool _1a6e7cd2b_Or(_1a6e77584_Const* _self_, _1a6e77584_Const _24914_x) {
	{
		
		if ((_1a6e7baa5_IsBool(_self_) && _1a6e7baa5_IsBool(&_24914_x))) {
			_case_begin_1ab77e1d8:;
			{
				return (_1a6e794a9_ReadBool(_self_) || _1a6e794a9_ReadBool(&_24914_x));;
			}
		}
		else {
			_case_begin_1ab77d8be:;
			{
				return false;;
			}
		}
		_match_end_1ab77d7e2:;
	};
}



inline jule::Bool _1a6e7d16c_Eq(_1a6e77584_Const* _self_, _1a6e77584_Const _26014_x) {
	{
		
		if (_1a6e7c358_IsNil(_self_)) {
			_case_begin_1ab780519:;
			{
				return _1a6e7c358_IsNil(&_26014_x);;
			}
		}
		else if (_1a6e7baa5_IsBool(_self_)) {
			_case_begin_1ab780580:;
			{
				return (_1a6e7baa5_IsBool(&_26014_x) && (_1a6e794a9_ReadBool(_self_) == _1a6e794a9_ReadBool(&_26014_x)));;
			}
		}
		else if (_1a6e7bd3b_IsStr(_self_)) {
			_case_begin_1ab7805e6:;
			{
				return (_1a6e7bd3b_IsStr(&_26014_x) && (_1a6e79740_ReadStr(_self_) == _1a6e79740_ReadStr(&_26014_x)));;
			}
		}
		else if (_1a6e7b588_IsI64(_self_)) {
			_case_begin_1ab78066d:;
			{
				return (_1a6e78e8c_ReadI64(_self_) == _1a6e79c5c_AsI64(&_26014_x));;
			}
		}
		else if (_1a6e7b81e_IsU64(_self_)) {
			_case_begin_1ab7806e5:;
			{
				return (_1a6e79223_ReadU64(_self_) == _1a6e79ee3_AsU64(&_26014_x));;
			}
		}
		else if (_1a6e7c0c2_IsF64(_self_)) {
			_case_begin_1ab78086b:;
			{
				return (_1a6e799c6_ReadF64(_self_) == _1a6e7a279_AsF64(&_26014_x));;
			}
		}
		else {
			_case_begin_1ab77eb78:;
			{
				return false;;
			}
		}
		_match_end_1ab77ea9b:;
	};
}



inline jule::Bool _1a6e7d4ad_Lt(_1a6e77584_Const* _self_, _1a6e77584_Const _28714_x) {
	{
		
		if (_1a6e7bd3b_IsStr(_self_)) {
			_case_begin_1ab7841aa:;
			{
				return (_1a6e7bd3b_IsStr(&_28714_x) && (_1a6e79740_ReadStr(_self_) < _1a6e79740_ReadStr(&_28714_x)));;
			}
		}
		else if (_1a6e7b588_IsI64(_self_)) {
			_case_begin_1ab784221:;
			{
				return (_1a6e78e8c_ReadI64(_self_) < _1a6e79c5c_AsI64(&_28714_x));;
			}
		}
		else if (_1a6e7b81e_IsU64(_self_)) {
			_case_begin_1ab784287:;
			{
				return (_1a6e79223_ReadU64(_self_) < _1a6e79ee3_AsU64(&_28714_x));;
			}
		}
		else if (_1a6e7c0c2_IsF64(_self_)) {
			_case_begin_1ab78430e:;
			{
				return (_1a6e799c6_ReadF64(_self_) < _1a6e7a279_AsF64(&_28714_x));;
			}
		}
		else {
			_case_begin_1ab780e98:;
			{
				return false;;
			}
		}
		_match_end_1ab780dcc:;
	};
}



inline jule::Bool _1a6e7d7ee_LtEq(_1a6e77584_Const* _self_, _1a6e77584_Const _31016_x) {
	{
		
		if (_1a6e7bd3b_IsStr(_self_)) {
			_case_begin_1ab786d4a:;
			{
				return (_1a6e7bd3b_IsStr(&_31016_x) && (_1a6e79740_ReadStr(_self_) <= _1a6e79740_ReadStr(&_31016_x)));;
			}
		}
		else if (_1a6e7b588_IsI64(_self_)) {
			_case_begin_1ab786db1:;
			{
				return (_1a6e78e8c_ReadI64(_self_) <= _1a6e79c5c_AsI64(&_31016_x));;
			}
		}
		else if (_1a6e7b81e_IsU64(_self_)) {
			_case_begin_1ab786e27:;
			{
				return (_1a6e79223_ReadU64(_self_) <= _1a6e79ee3_AsU64(&_31016_x));;
			}
		}
		else if (_1a6e7c0c2_IsF64(_self_)) {
			_case_begin_1ab786e9e:;
			{
				return (_1a6e799c6_ReadF64(_self_) <= _1a6e7a279_AsF64(&_31016_x));;
			}
		}
		else {
			_case_begin_1ab784a3a:;
			{
				return false;;
			}
		}
		_match_end_1ab78496e:;
	};
}



inline jule::Bool _1a6e7db40_Gt(_1a6e77584_Const* _self_, _1a6e77584_Const _33314_x) {
	{
		
		if (_1a6e7bd3b_IsStr(_self_)) {
			_case_begin_1ab7899da:;
			{
				return (_1a6e7bd3b_IsStr(&_33314_x) && (_1a6e79740_ReadStr(_self_) > _1a6e79740_ReadStr(&_33314_x)));;
			}
		}
		else if (_1a6e7b588_IsI64(_self_)) {
			_case_begin_1ab789a51:;
			{
				return (_1a6e78e8c_ReadI64(_self_) > _1a6e79c5c_AsI64(&_33314_x));;
			}
		}
		else if (_1a6e7b81e_IsU64(_self_)) {
			_case_begin_1ab789ab7:;
			{
				return (_1a6e79223_ReadU64(_self_) > _1a6e79ee3_AsU64(&_33314_x));;
			}
		}
		else if (_1a6e7c0c2_IsF64(_self_)) {
			_case_begin_1ab789b3e:;
			{
				return (_1a6e799c6_ReadF64(_self_) > _1a6e7a279_AsF64(&_33314_x));;
			}
		}
		else {
			_case_begin_1ab7876ca:;
			{
				return false;;
			}
		}
		_match_end_1ab78760e:;
	};
}



inline jule::Bool _1a6e7de81_GtEq(_1a6e77584_Const* _self_, _1a6e77584_Const _35616_x) {
	{
		
		if (_1a6e7bd3b_IsStr(_self_)) {
			_case_begin_1ab78c67a:;
			{
				return (_1a6e7bd3b_IsStr(&_35616_x) && (_1a6e79740_ReadStr(_self_) >= _1a6e79740_ReadStr(&_35616_x)));;
			}
		}
		else if (_1a6e7b588_IsI64(_self_)) {
			_case_begin_1ab78c6e1:;
			{
				return (_1a6e78e8c_ReadI64(_self_) >= _1a6e79c5c_AsI64(&_35616_x));;
			}
		}
		else if (_1a6e7b81e_IsU64(_self_)) {
			_case_begin_1ab78c757:;
			{
				return (_1a6e79223_ReadU64(_self_) >= _1a6e79ee3_AsU64(&_35616_x));;
			}
		}
		else if (_1a6e7c0c2_IsF64(_self_)) {
			_case_begin_1ab78c7ce:;
			{
				return (_1a6e799c6_ReadF64(_self_) >= _1a6e7a279_AsF64(&_35616_x));;
			}
		}
		else {
			_case_begin_1ab78a36a:;
			{
				return false;;
			}
		}
		_match_end_1ab78a29e:;
	};
}



inline jule::Bool _1a6e7e2c2_Add(_1a6e77584_Const* _self_, _1a6e77584_Const _37719_x) {
	{
		
		if (_1a6e7bd3b_IsStr(_self_)) {
			_case_begin_1ab79031a:;
			{
				if ((!(_1a6e7bd3b_IsStr(&_37719_x)))) {
					return false;;
				};
				_1a6e7ad4b_SetStr(_self_, (_1a6e79740_ReadStr(_self_) + _1a6e79740_ReadStr(&_37719_x)));
			}
		}
		else if (_1a6e7c0c2_IsF64(_self_)) {
			_case_begin_1ab790381:;
			{
				_1a6e7b104_SetF64(_self_, (_1a6e799c6_ReadF64(_self_) + _1a6e7a279_AsF64(&_37719_x)));
			}
		}
		else if (_1a6e7b588_IsI64(_self_)) {
			_case_begin_1ab7903e7:;
			{
				if (_1a6e7c0c2_IsF64(&_37719_x)) {
					_1a6e7b104_SetF64(_self_, (_1a6e7a279_AsF64(_self_) + _1a6e799c6_ReadF64(&_37719_x)));
				} else {
					_1a6e7a532_SetI64(_self_, (_1a6e78e8c_ReadI64(_self_) + _1a6e79c5c_AsI64(&_37719_x)));
				};
			}
		}
		else if (_1a6e7b81e_IsU64(_self_)) {
			_case_begin_1ab79046e:;
			{
				if (_1a6e7c0c2_IsF64(&_37719_x)) {
					_1a6e7b104_SetF64(_self_, (_1a6e7a279_AsF64(_self_) + _1a6e799c6_ReadF64(&_37719_x)));
				} else {
					_1a6e7a7da_SetU64(_self_, (jule::U64)(_1a6e79223_ReadU64(_self_) + _1a6e79ee3_AsU64(&_37719_x)));
				};
			}
		}
		else {
			_case_begin_1ab78d00a:;
			{
				return false;;
			}
		}
		_match_end_1ab78ce3e:;
	};
	return true;;
}



inline jule::Bool _1a6e7e613_Sub(_1a6e77584_Const* _self_, _1a6e77584_Const _40619_x) {
	{
		
		if (_1a6e7c0c2_IsF64(_self_)) {
			_case_begin_1ab795045:;
			{
				_1a6e7b104_SetF64(_self_, (_1a6e799c6_ReadF64(_self_) - _1a6e7a279_AsF64(&_40619_x)));
			}
		}
		else if (_1a6e7b588_IsI64(_self_)) {
			_case_begin_1ab7950de:;
			{
				if (_1a6e7c0c2_IsF64(&_40619_x)) {
					_1a6e7b104_SetF64(_self_, (_1a6e7a279_AsF64(_self_) - _1a6e799c6_ReadF64(&_40619_x)));
				} else {
					_1a6e7a532_SetI64(_self_, (_1a6e78e8c_ReadI64(_self_) - _1a6e79c5c_AsI64(&_40619_x)));
				};
			}
		}
		else if (_1a6e7b81e_IsU64(_self_)) {
			_case_begin_1ab795166:;
			{
				if (_1a6e7c0c2_IsF64(&_40619_x)) {
					_1a6e7b104_SetF64(_self_, (_1a6e7a279_AsF64(_self_) - _1a6e799c6_ReadF64(&_40619_x)));
				} else {
					_1a6e7a7da_SetU64(_self_, (jule::U64)(_1a6e79223_ReadU64(_self_) - _1a6e79ee3_AsU64(&_40619_x)));
				};
			}
		}
		else {
			_case_begin_1ab7947a3:;
			{
				return false;;
			}
		}
		_match_end_1ab7946c6:;
	};
	return true;;
}



inline jule::Bool _1a6e7e954_Mul(_1a6e77584_Const* _self_, _1a6e77584_Const _43019_x) {
	{
		
		if (_1a6e7c0c2_IsF64(_self_)) {
			_case_begin_1ab798d90:;
			{
				_1a6e7b104_SetF64(_self_, (_1a6e799c6_ReadF64(_self_) * _1a6e7a279_AsF64(&_43019_x)));
			}
		}
		else if (_1a6e7b588_IsI64(_self_)) {
			_case_begin_1ab798e39:;
			{
				if (_1a6e7c0c2_IsF64(&_43019_x)) {
					_1a6e7b104_SetF64(_self_, (_1a6e7a279_AsF64(_self_) * _1a6e799c6_ReadF64(&_43019_x)));
				} else {
					_1a6e7a532_SetI64(_self_, (_1a6e78e8c_ReadI64(_self_) * _1a6e79c5c_AsI64(&_43019_x)));
				};
			}
		}
		else if (_1a6e7b81e_IsU64(_self_)) {
			_case_begin_1ab798eb1:;
			{
				if (_1a6e7c0c2_IsF64(&_43019_x)) {
					_1a6e7b104_SetF64(_self_, (_1a6e7a279_AsF64(_self_) * _1a6e799c6_ReadF64(&_43019_x)));
				} else {
					_1a6e7a7da_SetU64(_self_, (jule::U64)(_1a6e79223_ReadU64(_self_) * _1a6e79ee3_AsU64(&_43019_x)));
				};
			}
		}
		else {
			_case_begin_1ab7984cc:;
			{
				return false;;
			}
		}
		_match_end_1ab7983de:;
	};
	return true;;
}



inline jule::Bool _1a6e7ec95_Div(_1a6e77584_Const* _self_, _1a6e77584_Const _45819_x) {
	{
		
		if (_1a6e7c0c2_IsF64(_self_)) {
			_case_begin_1ab79cbeb:;
			{
				jule::F64 _4614_l = _1a6e7a279_AsF64(&_45819_x);;
				if ((_4614_l == 0LL)) {
					return false;;
				};
				_1a6e7b104_SetF64(_self_, jule::div(_1a6e799c6_ReadF64(_self_),_4614_l));
			}
		}
		else if (_1a6e7b588_IsI64(_self_)) {
			_case_begin_1ab79cc95:;
			{
				jule::F64 _4674_l = _1a6e7a279_AsF64(&_45819_x);;
				if ((_4674_l == 0LL)) {
					return false;;
				};
				_1a6e7b104_SetF64(_self_, jule::div(_1a6e7a279_AsF64(_self_),_4674_l));
			}
		}
		else if (_1a6e7b81e_IsU64(_self_)) {
			_case_begin_1ab79cd1c:;
			{
				jule::F64 _4734_l = _1a6e7a279_AsF64(&_45819_x);;
				if ((_4734_l == 0LL)) {
					return false;;
				};
				_1a6e7b104_SetF64(_self_, jule::div(_1a6e7a279_AsF64(_self_),_4734_l));
			}
		}
		else {
			_case_begin_1ab79c338:;
			{
				return false;;
			}
		}
		_match_end_1ab79c24a:;
	};
	return true;;
}



inline jule::Bool _1a6e800d6_Mod(_1a6e77584_Const* _self_, _1a6e77584_Const _48719_x) {
	{
		
		if (_1a6e7b588_IsI64(_self_)) {
			_case_begin_1ab7a1bcd:;
			{
				jule::I64 _4904_l = _1a6e79c5c_AsI64(&_48719_x);;
				if ((_4904_l == 0LL)) {
					return false;;
				};
				_1a6e7a532_SetI64(_self_, jule::mod(_1a6e78e8c_ReadI64(_self_),_4904_l));
			}
		}
		else if (_1a6e7b81e_IsU64(_self_)) {
			_case_begin_1ab7a20c9:;
			{
				jule::U64 _4964_l = _1a6e79ee3_AsU64(&_48719_x);;
				if ((_4964_l == 0LLU)) {
					return false;;
				};
				_1a6e7a7da_SetU64(_self_, jule::mod(_1a6e79223_ReadU64(_self_),_4964_l));
			}
		}
		else {
			_case_begin_1ab7a1b56:;
			{
				return false;;
			}
		}
		_match_end_1ab7a1a57:;
	};
	return true;;
}



inline jule::Bool _1a6e80427_BitwiseAnd(_1a6e77584_Const* _self_, _1a6e77584_Const _50926_x) {
	{
		
		if (_1a6e7b588_IsI64(_self_)) {
			_case_begin_1ab7a49d3:;
			{
				_1a6e7a532_SetI64(_self_, (_1a6e78e8c_ReadI64(_self_) & _1a6e79c5c_AsI64(&_50926_x)));
			}
		}
		else if (_1a6e7b81e_IsU64(_self_)) {
			_case_begin_1ab7a4dce:;
			{
				_1a6e7a7da_SetU64(_self_, (_1a6e79223_ReadU64(_self_) & _1a6e79ee3_AsU64(&_50926_x)));
			}
		}
		else {
			_case_begin_1ab7a495b:;
			{
				return false;;
			}
		}
		_match_end_1ab7a485c:;
	};
	return true;;
}



inline jule::Bool _1a6e80768_BitwiseOr(_1a6e77584_Const* _self_, _1a6e77584_Const _52325_x) {
	{
		
		if (_1a6e7b588_IsI64(_self_)) {
			_case_begin_1ab7a6760:;
			{
				_1a6e7a532_SetI64(_self_, (_1a6e78e8c_ReadI64(_self_) | _1a6e79c5c_AsI64(&_52325_x)));
			}
		}
		else if (_1a6e7b81e_IsU64(_self_)) {
			_case_begin_1ab7a6b5b:;
			{
				_1a6e7a7da_SetU64(_self_, (_1a6e79223_ReadU64(_self_) | _1a6e79ee3_AsU64(&_52325_x)));
			}
		}
		else {
			_case_begin_1ab7a66d8:;
			{
				return false;;
			}
		}
		_match_end_1ab7a65d9:;
	};
	return true;;
}



inline jule::Bool _1a6e80aa9_Xor(_1a6e77584_Const* _self_, _1a6e77584_Const _53719_x) {
	{
		
		if (_1a6e7b588_IsI64(_self_)) {
			_case_begin_1ab7a84dc:;
			{
				_1a6e7a532_SetI64(_self_, (_1a6e78e8c_ReadI64(_self_) ^ _1a6e79c5c_AsI64(&_53719_x)));
			}
		}
		else if (_1a6e7b81e_IsU64(_self_)) {
			_case_begin_1ab7a88d8:;
			{
				_1a6e7a7da_SetU64(_self_, (_1a6e79223_ReadU64(_self_) ^ _1a6e79ee3_AsU64(&_53719_x)));
			}
		}
		else {
			_case_begin_1ab7a8465:;
			{
				return false;;
			}
		}
		_match_end_1ab7a8366:;
	};
	return true;;
}



inline jule::Bool _1a6e80dea_Lshift(_1a6e77584_Const* _self_, _1a6e77584_Const _55122_x) {
	{
		
		if (_1a6e7b588_IsI64(_self_)) {
			_case_begin_1ab7aa269:;
			{
				jule::I64 _5544_l = _1a6e79c5c_AsI64(_self_);;
				if ((_5544_l < 0LL)) {
					jule::U64 _5565_r = _1a6e79ee3_AsU64(&_55122_x);;
					_1a6e7a532_SetI64(_self_, _1ab7ac0d4_shiftLeft(_5544_l, _5565_r));
				} else {
					_1a6e8159e_lshiftUnsig(_self_, &(_55122_x));
				};
			}
		}
		else if (_1a6e7b81e_IsU64(_self_)) {
			_case_begin_1ab7aa665:;
			{
				_1a6e8159e_lshiftUnsig(_self_, &(_55122_x));
			}
		}
		else {
			_case_begin_1ab7aa1e2:;
			{
				return false;;
			}
		}
		_match_end_1ab7aa0e3:;
	};
	return true;;
}



inline jule::Bool _1a6e8123b_Rshift(_1a6e77584_Const* _self_, _1a6e77584_Const _57122_x) {
	{
		
		if (_1a6e7b588_IsI64(_self_)) {
			_case_begin_1ab7ac4e1:;
			{
				jule::I64 _5744_l = _1a6e79c5c_AsI64(_self_);;
				if ((_5744_l < 0LL)) {
					jule::U64 _5765_r = _1a6e79ee3_AsU64(&_57122_x);;
					_1a6e7a532_SetI64(_self_, _1ab7b0758_shiftRight(_5744_l, _5765_r));
				} else {
					_1a6e818ce_rshiftUnsig(_self_, &(_57122_x));
				};
			}
		}
		else if (_1a6e7b81e_IsU64(_self_)) {
			_case_begin_1ab7adcd9:;
			{
				_1a6e818ce_rshiftUnsig(_self_, &(_57122_x));
			}
		}
		else {
			_case_begin_1ab7aab3d:;
			{
				return false;;
			}
		}
		_match_end_1ab7aaa3e:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a6e77584_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa2d51c4_Token_eq(_1aa2d51c4_Token *_self_, _1aa2d51c4_Token _other_) {
	return 
		(_self_->_field_File == _other_._field_File) &&
		(_self_->_field_Row == _self_->_field_Row) &&
		(_self_->_field_Column == _self_->_field_Column) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Id == _self_->_field_Id);
}

inline jule::U8 _1aa2d557b_Prec(_1aa2d51c4_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(64LLU) || _match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(57LLU) || _match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1ab81ac58:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(66LLU) || _match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1ab81a74c:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(71LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(53LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1ab81a7c4:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1ab81ad02:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1ab81ad79:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1ab81a252:;
			{
				return 0LLU;;
			}
		}
		_match_end_1ab81a670:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1aa2d51c4_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline void _1aa2dadab_Fill(_1aa2da95a_File* _self_, jule::Slice<jule::U8> _1724_data) {
	(*(_self_))._field_Data=_1724_data;
}



inline jule::Str _1aa2db142_Dir(_1aa2da95a_File* _self_) {
	return _1ed49530d_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1aa2db3c8_Name(_1aa2da95a_File* _self_) {
	return _1ed494e34_Base((*(_self_))._field_Path);;
}



inline jule::Str _1aa2db9a0_GetRow(_1aa2da95a_File* _self_, jule::I32 _3818_row) {
	jule::I32 _397_n = 0LL;;
	jule::I32 _407_lineStart = 0LL;;
	jule::I32 _417_i = 0LL;;
	for (; (_417_i < (*(_self_))._field_Data.len()); (_417_i)++) {
		{
			if (((*(_self_))._field_Data[_417_i] != '\n')) {
				goto _iter_next_1ab821489;
			};
			(_397_n)++;
			if ((_397_n == _3818_row)) {
				return static_cast<jule::Str>((*(_self_))._field_Data.slice(_407_lineStart, _417_i));;
			};
			_407_lineStart=(_417_i + 1LL);
		}
	_iter_next_1ab821489:;
	}
	_iter_end_1ab821489:;;
	return jule::Str();;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa2da95a_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa2dcab1_kindPair_eq(_1aa2dcab1_kindPair *_self_, _1aa2dcab1_kindPair _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind) &&
		(_self_->_field_id == _self_->_field_id);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa2dcab1_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1aa2e415b_pushErr(_1aa2e3a95_lex* _self_, jule::Str _44723_fmt, jule::Slice<jule::Any> _44736_args) {
	{ jule::Slice<_1ada72b17_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1aa2dd85e_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44723_fmt, _44736_args)); };
}



inline void _1aa2e46bc_lex(_1aa2e3a95_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1aa2e68de_newLine(_self_);
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::Ptr<_1aa2d51c4_Token> _4628_token = _1aa2e7dc9_token(_self_);;
			if (((*(_4628_token))._field_Id != static_cast<jule::U32>(0LLU))) {
				{ jule::Slice<jule::Ptr<_1aa2d51c4_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_4628_token); };
			};
		}
	_iter_next_1bbc89a13:;
	}
	_iter_end_1bbc89a13:;;
}



inline jule::Str _1aa2e4a0d_id(_1aa2e3a95_lex* _self_, jule::Slice<jule::U8>* _47119_ln) {
	if (((*(_47119_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _4753_r;
	jule::I32 _47510_i;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1ed42e0bb_DecodeRune((*(_47119_ln)));
		_4753_r = __jule_assign_result.__jule_result_arg0;
		_47510_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_4753_r != '_') && (!(_1aa2d8903_IsLetter(_4753_r))))) {
		return jule::Str();;
	};
	while ((_47510_i < (*(_47119_ln)).len())) {
		{
			jule::I32 _4814_pr;
			jule::I32 _4818_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1ed42e0bb_DecodeRune((*(_47119_ln)).slice(_47510_i));
				_4814_pr = __jule_assign_result.__jule_result_arg0;
				_4818_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_4814_pr != '_') && (!(_1aa2d8d76_IsDecimal(static_cast<jule::U8>(_4814_pr))))) && (!(_1aa2d8903_IsLetter(_4814_pr))))) {
				(*(_self_))._field_pos+=_47510_i;
				return static_cast<jule::Str>((*(_47119_ln)).slice(0LL, _47510_i));;
			};
			_47510_i+=_4818_n;
		}
	_iter_next_1bbc8ce23:;
	}
	_iter_end_1bbc8ce23:;;
	(*(_self_))._field_pos+=(*(_47119_ln)).len();
	return static_cast<jule::Str>((*(_47119_ln)));;
}



inline jule::Slice<jule::U8> _1aa2e4c94_resume(_1aa2e3a95_lex* _self_) {
	jule::I32 _4967_i = (*(_self_))._field_pos;;
	for (; (_4967_i < (*((*(_self_))._field_file))._field_Data.len()); (_4967_i)++) {
		{
			jule::I32 _4984_r = static_cast<jule::I32>((*((*(_self_))._field_file))._field_Data[_4967_i]);;
			if (_1aa2d8408_IsSpace(_4984_r)) {
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _4984_r };
					
					if (_match_expr == '\n') {
						_case_begin_1bbc921be:;
						{
							_1aa2e68de_newLine(_self_);
						}
					}
					else {
						_case_begin_1bbc919b5:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1bbc91c90:;
				};
				goto _iter_next_1bbc90871;
			};
			jule::I32 _5108_j = _4967_i;;
			for (; (_5108_j < (*(*(_self_))._field_file.alloc)._field_Data.len()); (_5108_j)++) {
				{
					if (((*(*(_self_))._field_file.alloc)._field_Data[_5108_j] == '\n')) {
						goto _iter_end_1bbc90e59;
					};
				}
			_iter_next_1bbc90e59:;
			}
			_iter_end_1bbc90e59:;;
			return (*(*(_self_))._field_file.alloc)._field_Data.slice(_4967_i, _5108_j);;
		}
	_iter_next_1bbc90871:;
	}
	_iter_end_1bbc90871:;;
	return nullptr;;
}



inline void _1aa2e504c_lexLineComment(_1aa2e3a95_lex* _self_, jule::Ptr<_1aa2d51c4_Token>* _52135_token) {
	jule::I32 _5223_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5254_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if (((_5254_r == '\n') || (_5254_r == '\r'))) {
				goto _iter_end_1bbc94765;
			};
		}
	_iter_next_1bbc94765:;
	}
	_iter_end_1bbc94765:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL))) {
		(*((*(_52135_token))))._field_Id=static_cast<jule::U32>(15LLU);
		(*((*(_52135_token))))._field_Kind=static_cast<jule::Str>((*(*(_self_))._field_file.alloc)._field_Data.slice(_5223_start, (*(_self_))._field_pos));
	};
}



inline void _1aa2e5305_lexRangeComment(_1aa2e3a95_lex* _self_, jule::Ptr<_1aa2d51c4_Token>* _53636_token) {
	jule::I32 _5373_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5404_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_5404_r == '\r')) {
				goto _iter_next_1bbc97dc8;
			};
			if ((_5404_r == '\n')) {
				_1aa2e68de_newLine(_self_);
				goto _iter_next_1bbc97dc8;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(*(_self_))._field_file.alloc)._field_Data.len()) && (_5404_r == '*')) && ((*(*(_self_))._field_file.alloc)._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL))) {
					(*((*(_53636_token))))._field_Id=static_cast<jule::U32>(15LLU);
					(*((*(_53636_token))))._field_Kind=static_cast<jule::Str>((*(*(_self_))._field_file.alloc)._field_Data.slice(_5373_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1bbc97dc8:;
	}
	_iter_end_1bbc97dc8:;;
	_1aa2e415b_pushErr(_self_, jule::Str::lit("missing block comment close", 27), jule::Slice<jule::Any>());
}



inline jule::Str _1aa2e5646_num(_1aa2e3a95_lex* _self_, jule::Slice<jule::U8>* _56420_txt) {
	jule::Str __jule_func_result;
	if (((*(_56420_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1aa2e23ac_hexNum(_56420_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1bbca081a;
	};
	__jule_func_result=_1aa2e21d1_octalNum(_56420_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1bbca081a;
	};
	__jule_func_result=_1aa2e0971_binaryNum(_56420_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1bbca081a;
	};
	__jule_func_result=_1aa2e06a7_commonNum(_56420_txt);
	_julec_label_1bbca081a:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1aa2e5987_escapeSeq(_1aa2e3a95_lex* _self_, jule::Slice<jule::U8>* _58626_txt) {
	jule::Str _5877_seq = jule::Str();;
	if (((*(_58626_txt)).len() < 2LL)) {
		goto _julec_label_1bbca45aa;
	};
	{
		auto &_match_expr{ (*(_58626_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1bbca26da:;
			{
				(*(_self_))._field_pos+=2LL;
				return static_cast<jule::Str>((*(_58626_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1bbca2850:;
			{
				_5877_seq=_1aa2e29c8_bigUnicodePointEscape(_58626_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1bbca2421:;
			{
				_5877_seq=_1aa2e2c92_littleUnicodePointEscape(_58626_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1bbca2487:;
			{
				_5877_seq=_1aa2e305b_hexByteEscape(_58626_txt);
			}
		}
		else {
			_case_begin_1bbca1cd3:;
			{
				_5877_seq=_1aa2e3325_byteEscape(_58626_txt);
			}
		}
		_match_end_1bbca22ab:;
	};
	_julec_label_1bbca45aa:;
	if ((_5877_seq).empty()) {
		((*(_self_))._field_pos)++;
		_1aa2e415b_pushErr(_self_, jule::Str::lit("invalid escape sequence", 23), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_5877_seq.len();
	return _5877_seq;;
}



inline jule::Str _1aa2e5d83_getRune(_1aa2e3a95_lex* _self_, jule::Slice<jule::U8>* _61624_txt, jule::Bool _61637_raw) {
	if (((!(_61637_raw)) && ((*(_61624_txt))[0LL] == '\\'))) {
		return _1aa2e5987_escapeSeq(_self_, _61624_txt);;
	};
	jule::I32 _6203_r;
	jule::I32 _6206_n;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1ed42e0bb_DecodeRune((*(_61624_txt)));
		_6203_r = __jule_assign_result.__jule_result_arg0;
		_6206_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_6206_n;
	return jule::Str::from_rune(_6203_r);;
}



inline jule::Str _1aa2e61c4_lexRune(_1aa2e3a95_lex* _self_, jule::Slice<jule::U8>* _62524_txt) {
	_1ed486d49_StrBuilder _6267_run = static__1ed487146_New(8LL);;
	_1ed490c65_WriteByte(&_6267_run, '\'');
	((*(_self_))._field_column)++;
	jule::I32 _6297_n = 0LL;;
	jule::I32 _6307_i = 1LL;;
	for (; (_6307_i < (*(_62524_txt)).len()); (_6307_i)++) {
		{
			if (((*(_62524_txt))[_6307_i] == '\r')) {
				goto _iter_next_1bbca8966;
			};
			if (((*(_62524_txt))[_6307_i] == '\n')) {
				_1aa2e415b_pushErr(_self_, jule::Str::lit("rune is not finished", 20), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1aa2e68de_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _6424_part = (*(_62524_txt)).slice(_6307_i);;
			jule::Str _6434_r = _1aa2e5d83_getRune(_self_, &(_6424_part), false);;
			_1ed4909ac_WriteStr(&_6267_run, _6434_r);
			(*(_self_))._field_column+=_1ed430dae_RuneCountStr(_6434_r);
			if (_6434_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1bbca8966;
			};
			if ((_6434_r.len() > 1LL)) {
				_6307_i+=(_6434_r.len() - 1LL);
			};
			(_6297_n)++;
		}
	_iter_next_1bbca8966:;
	}
	_iter_end_1bbca8966:;;
	if ((_6297_n == 0LL)) {
		_1aa2e415b_pushErr(_self_, jule::Str::lit("rune is cannot empty", 20), jule::Slice<jule::Any>());
	} else if ((_6297_n > 1LL)) {
		_1aa2e415b_pushErr(_self_, jule::Str::lit("rune is should be single", 24), jule::Slice<jule::Any>());
	};
	return _1ed4912a4_Str(&_6267_run);;
}



inline jule::Str _1aa2e645a_lexStr(_1aa2e3a95_lex* _self_) {
	_1ed486d49_StrBuilder _6667_s = static__1ed487146_New(16LL);;
	jule::U8 _6673_mark = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _6693_raw = (_6673_mark == '`');;
	_1ed490c65_WriteByte(&_6667_s, _6673_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(*(_self_))._field_file.alloc)._field_Data.len())) {
		{
			jule::U8 _6744_ch = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_6744_ch == '\r')) {
				goto _iter_next_1bbcadc79;
			};
			if ((_6744_ch == '\n')) {
				_1aa2e68de_newLine(_self_);
				if ((!(_6693_raw))) {
					_1aa2e415b_pushErr(_self_, jule::Str::lit("string is not finished", 22), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _6868_part = (*(*(_self_))._field_file.alloc)._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _6874_r = _1aa2e5d83_getRune(_self_, &(_6868_part), _6693_raw);;
			_1ed4909ac_WriteStr(&_6667_s, _6874_r);
			(*(_self_))._field_column+=_1ed430dae_RuneCountStr(_6874_r);
			if ((_6744_ch == _6673_mark)) {
				goto _iter_end_1bbcadc79;
			};
		}
	_iter_next_1bbcadc79:;
	}
	_iter_end_1bbcadc79:;;
	return _1ed4912a4_Str(&_6667_s);;
}



inline void _1aa2e68de_newLine(_1aa2e3a95_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1aa2e6e50_isOp(_1aa2e3a95_lex* _self_, jule::Slice<jule::U8>* _70721_txt, jule::Str _70734_kind, jule::U32 _70745_id, jule::Ptr<_1aa2d51c4_Token>* _70763_t) {
	if ((!(_1aa2ddc27_bytesHasPrefix(_70721_txt, _70734_kind)))) {
		return false;;
	};
	(*((*(_70763_t))))._field_Kind=_70734_kind;
	(*((*(_70763_t))))._field_Id=_70745_id;
	(*(_self_))._field_pos+=_70734_kind.len();
	return true;;
}



inline jule::Bool _1aa2e734b_lexBasicOps(_1aa2e3a95_lex* _self_, jule::Slice<jule::U8> _71727_txt, jule::Ptr<_1aa2d51c4_Token>* _71745_tok) {
	{
		auto expr = &(_1aa2dd320_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbcb5aa5:;
		if (it != expr_end) {
			_1aa2dcab1_kindPair *_71810_pair = it;
			{
				if (_1aa2e6e50_isOp(_self_, &(_71727_txt), (*(_71810_pair))._field_kind, (*(_71810_pair))._field_id, _71745_tok)) {
					return true;;
				};
			}
			_iter_next_1bbcb5aa5:;
			++it;
			goto _iter_begin_1bbcb5aa5;
		}
		_iter_end_1bbcb5aa5:;
	};
	return false;;
}



inline jule::Bool _1aa2e7747_lexId(_1aa2e3a95_lex* _self_, jule::Slice<jule::U8>* _72622_txt, jule::Ptr<_1aa2d51c4_Token>* _72640_t) {
	jule::Str _7273_lex = _1aa2e4a0d_id(_self_, _72622_txt);;
	if ((_7273_lex).empty()) {
		return false;;
	};
	(*((*(_72640_t))))._field_Kind=_7273_lex;
	(*((*(_72640_t))))._field_Id=static_cast<jule::U32>(1LLU);
	return true;;
}



inline jule::Bool _1aa2e7b43_lexNum(_1aa2e3a95_lex* _self_, jule::Slice<jule::U8>* _73623_txt, jule::Ptr<_1aa2d51c4_Token>* _73641_t) {
	jule::Str _7373_lex = _1aa2e5646_num(_self_, _73623_txt);;
	if ((_7373_lex).empty()) {
		return false;;
	};
	(*((*(_73641_t))))._field_Kind=_7373_lex;
	(*((*(_73641_t))))._field_Id=static_cast<jule::U32>(4LLU);
	return true;;
}



inline jule::Ptr<_1aa2d51c4_Token> _1aa2e7dc9_token(_1aa2e3a95_lex* _self_) {
	jule::Ptr<_1aa2d51c4_Token> _7487_t = jule::new_ptr<_1aa2d51c4_Token>(_1aa2d51c4_Token{._field_File=(*(_self_))._field_file, ._field_Row=0, ._field_Column=0, ._field_Kind=jule::Str(), ._field_Id=static_cast<jule::U32>(0LLU)});;
	jule::Slice<jule::U8> _7533_txt = _1aa2e4c94_resume(_self_);;
	if ((_7533_txt == nullptr)) {
		return _7487_t;;
	};
	(*(_7487_t))._field_Column=(*(_self_))._field_column;
	(*_7487_t.alloc)._field_Row=(*(_self_))._field_row;
	{
		
		if (_1aa2e7b43_lexNum(_self_, &(_7533_txt), &(_7487_t))) {
			_case_begin_1bbcbcb23:;
			{
				goto _match_end_1bbcbaadd;
			}
		}
		else if ((_7533_txt[0LL] == '\'')) {
			_case_begin_1bbcbcc11:;
			{
				(*_7487_t.alloc)._field_Kind=_1aa2e61c4_lexRune(_self_, &(_7533_txt));
				(*_7487_t.alloc)._field_Id=static_cast<jule::U32>(4LLU);
				return _7487_t;;
			}
		}
		else if (((_7533_txt[0LL] == '\"') || (_7533_txt[0LL] == '`'))) {
			_case_begin_1bbcbcc77:;
			{
				(*_7487_t.alloc)._field_Kind=_1aa2e645a_lexStr(_self_);
				(*_7487_t.alloc)._field_Id=static_cast<jule::U32>(4LLU);
				return _7487_t;;
			}
		}
		else if (_1aa2ddc27_bytesHasPrefix(&(_7533_txt), jule::Str::lit("//", 2))) {
			_case_begin_1bbcbccdd:;
			{
				_1aa2e504c_lexLineComment(_self_, &(_7487_t));
				return _7487_t;;
			}
		}
		else if (_1aa2ddc27_bytesHasPrefix(&(_7533_txt), jule::Str::lit("/*", 2))) {
			_case_begin_1bbcbb726:;
			{
				_1aa2e5305_lexRangeComment(_self_, &(_7487_t));
				return _7487_t;;
			}
		}
		else if (_1aa2e734b_lexBasicOps(_self_, _7533_txt, &(_7487_t))) {
			_case_begin_1bbcbb78c:;
			{
				goto _match_end_1bbcbaadd;
			}
		}
		else if (_1aa2e7747_lexId(_self_, &(_7533_txt), &(_7487_t))) {
			_case_begin_1bbcbb803:;
			{
				{
					auto expr = &(_1aa2dcee0_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bbcbe7b2:;
					if (it != expr_end) {
						_1aa2dcab1_kindPair *_78511_pair = it;
						{
							if (((*(_78511_pair))._field_kind == (*_7487_t.alloc)._field_Kind)) {
								(*_7487_t.alloc)._field_Id=(*(_78511_pair))._field_id;
								goto _iter_end_1bbcbe7b2;
							};
						}
						_iter_next_1bbcbe7b2:;
						++it;
						goto _iter_begin_1bbcbe7b2;
					}
					_iter_end_1bbcbe7b2:;
				};
			}
		}
		else {
			_case_begin_1bbcbb6b0:;
			{
				jule::I32 _7924_r;
				jule::I32 _7927_sz;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1ed42e0bb_DecodeRune(_7533_txt);
					_7924_r = __jule_assign_result.__jule_result_arg0;
					_7927_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1aa2e415b_pushErr(_self_, jule::Str::lit("undefined token: @", 18), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7924_r, &__jule_any_type6); __jule_collection; }));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_7927_sz;
				return _7487_t;;
			}
		}
		_match_end_1bbcbaadd:;
	};
	(*(_self_))._field_column+=_1ed430dae_RuneCountStr((*_7487_t.alloc)._field_Kind);
	return _7487_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa2e3a95_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa2e876a_AST _Src) {
	_Stream << "AST{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa2e967d_Node_eq(_1aa2e967d_Node *_self_, _1aa2e967d_Node _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Data == _self_->_field_Data);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa2e967d_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa2e9a9b_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa2ea67e_TypeDecl_eq(_1aa2ea67e_TypeDecl *_self_, _1aa2ea67e_TypeDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa2ea67e_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa2eac89_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa2eb053_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa2eb42c_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa2eb729_SptrTypeDecl_eq(_1aa2eb729_SptrTypeDecl *_self_, _1aa2eb729_SptrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa2eb729_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa2ebaae_SlcTypeDecl_eq(_1aa2ebaae_SlcTypeDecl *_self_, _1aa2ebaae_SlcTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa2ebaae_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa2ebdab_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa2ec1a8_PtrTypeDecl_eq(_1aa2ec1a8_PtrTypeDecl *_self_, _1aa2ec1a8_PtrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Bool _1aa2ec54e_IsUnsafe(_1aa2ec1a8_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa2ec1a8_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa2ec94a_ArrTypeDecl_eq(_1aa2ec94a_ArrTypeDecl *_self_, _1aa2ec94a_ArrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem) &&
		(_self_->_field_Size == _self_->_field_Size);
}

inline jule::Bool _1aa2ecce1_AutoSized(_1aa2ec94a_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa2ec94a_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa2ed198_MapTypeDecl_eq(_1aa2ed198_MapTypeDecl *_self_, _1aa2ed198_MapTypeDecl _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa2ed198_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa2ed572_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa2ee9b3_Expr_eq(_1aa2ee9b3_Expr *_self_, _1aa2ee9b3_Expr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa2ee9b3_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa2eec7c_RangeExpr_eq(_1aa2eec7c_RangeExpr *_self_, _1aa2eec7c_RangeExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa2eec7c_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa300387_UseExpr_eq(_1aa300387_UseExpr *_self_, _1aa300387_UseExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa300387_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa3005a7_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa30094d_LitExpr_eq(_1aa30094d_LitExpr *_self_, _1aa30094d_LitExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Value == _self_->_field_Value);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa30094d_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa300d27_UnsafeExpr_eq(_1aa300d27_UnsafeExpr *_self_, _1aa300d27_UnsafeExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa300d27_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa3012cd_IdentExpr_eq(_1aa3012cd_IdentExpr *_self_, _1aa3012cd_IdentExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Binded == _self_->_field_Binded);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa3012cd_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa301a70_UnaryExpr_eq(_1aa301a70_UnaryExpr *_self_, _1aa301a70_UnaryExpr _other_) {
	return 
		(_self_->_field_Op == _other_._field_Op) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa301a70_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa301e49_VariadicExpr_eq(_1aa301e49_VariadicExpr *_self_, _1aa301e49_VariadicExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa301e49_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa302323_CastExpr_eq(_1aa302323_CastExpr *_self_, _1aa302323_CastExpr _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa302323_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa3026ec_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa302ac6_SubIdentExpr_eq(_1aa302ac6_SubIdentExpr *_self_, _1aa302ac6_SubIdentExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa302ac6_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa30307c_BinaryExpr_eq(_1aa30307c_BinaryExpr *_self_, _1aa30307c_BinaryExpr _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa30307c_BinaryExpr _Src) {
	_Stream << "BinaryExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aa303a94_Unhandled(_1aa3036dc_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1aa303d2a_Ignored(_1aa3036dc_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*(*(_self_))._field_Exception.alloc)._field_Deferred);;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa3036dc_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa3041d2_FieldExprPair_eq(_1aa3041d2_FieldExprPair *_self_, _1aa3041d2_FieldExprPair _other_) {
	return 
		(_self_->_field_Field == _other_._field_Field) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa3041d2_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa304a0c_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa304eb3_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa3057dd_KeyValPair_eq(_1aa3057dd_KeyValPair *_self_, _1aa3057dd_KeyValPair _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val) &&
		(_self_->_field_Colon == _self_->_field_Colon);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa3057dd_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa306019_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa306976_IndexingExpr_eq(_1aa306976_IndexingExpr *_self_, _1aa306976_IndexingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Index == _self_->_field_Index);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa306976_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa3070d6_SlicingExpr_eq(_1aa3070d6_SlicingExpr *_self_, _1aa3070d6_SlicingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Start == _self_->_field_Start) &&
		(_self_->_field_To == _self_->_field_To);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa3070d6_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa3073d3_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa307889_GenericDecl_eq(_1aa307889_GenericDecl *_self_, _1aa307889_GenericDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Constraint == _self_->_field_Constraint);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa307889_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa307c63_LabelSt_eq(_1aa307c63_LabelSt *_self_, _1aa307c63_LabelSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa307c63_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa30813c_GotoSt_eq(_1aa30813c_GotoSt *_self_, _1aa30813c_GotoSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa30813c_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa308439_FallSt_eq(_1aa308439_FallSt *_self_, _1aa308439_FallSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa308439_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa308a99_AssignLeft_eq(_1aa308a99_AssignLeft *_self_, _1aa308a99_AssignLeft _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa308a99_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa30912c_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa30a040_Stmt_eq(_1aa30a040_Stmt *_self_, _1aa30a040_Stmt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Data == _self_->_field_Data);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa30a040_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa30a6a0_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa30addc_ParamDecl_eq(_1aa30addc_ParamDecl *_self_, _1aa30addc_ParamDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}

inline jule::Bool _1aa30b294_IsSelf(_1aa30addc_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa30addc_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aa30c6d5_IsAnon(_1aa30c33e_FnDecl* _self_) {
	return (*(_self_))._field_Ident.equal("<anonymous>", 11);;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa30c33e_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa30d4e9_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa30d8c3_RetSt_eq(_1aa30d8c3_RetSt *_self_, _1aa30d8c3_RetSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa30d8c3_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa30e143_Iter_eq(_1aa30e143_Iter *_self_, _1aa30e143_Iter _other_) {
	return 
		(_self_->_field_Comptime == _other_._field_Comptime) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}

inline jule::Bool _1aa30e4d9_IsInf(_1aa30e143_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa30e143_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa30e96d_WhileKind_eq(_1aa30e96d_WhileKind *_self_, _1aa30e96d_WhileKind _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Next == _self_->_field_Next) &&
		(_self_->_field_NextToken == _self_->_field_NextToken);
}

inline jule::Bool _1aa30ed14_IsWhileNext(_1aa30e96d_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa30e96d_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa310375_RangeKind_eq(_1aa310375_RangeKind *_self_, _1aa310375_RangeKind _other_) {
	return 
		(_self_->_field_InToken == _other_._field_InToken) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_KeyA == _self_->_field_KeyA) &&
		(_self_->_field_KeyB == _self_->_field_KeyB);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa310375_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa31074e_BreakSt_eq(_1aa31074e_BreakSt *_self_, _1aa31074e_BreakSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa31074e_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa310b28_ContSt_eq(_1aa310b28_ContSt *_self_, _1aa310b28_ContSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa310b28_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa3110ce_If_eq(_1aa3110ce_If *_self_, _1aa3110ce_If _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa3110ce_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa3114a8_Else_eq(_1aa3114a8_Else *_self_, _1aa3114a8_Else _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa3114a8_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa31195e_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa31219b_TypeAliasDecl_eq(_1aa31219b_TypeAliasDecl *_self_, _1aa31219b_TypeAliasDecl _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Binded == _self_->_field_Binded) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa31219b_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa312652_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa312e6b_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa313785_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa313c3b_EnumItemDecl_eq(_1aa313c3b_EnumItemDecl *_self_, _1aa313c3b_EnumItemDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa313c3b_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa3147ec_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa315127_TypeEnumItemDecl_eq(_1aa315127_TypeEnumItemDecl *_self_, _1aa315127_TypeEnumItemDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa315127_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa315787_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa315a51_FieldDecl_eq(_1aa315a51_FieldDecl *_self_, _1aa315a51_FieldDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Default == _self_->_field_Default);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa315a51_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa316447_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa316b84_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Inherits:" << _Src._field_Inherits << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa3172e4_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa3185e2_Field_eq(_1aa3185e2_Field *_self_, _1aa3185e2_Field _other_) {
	return 
		(_self_->_field_Owner == _other_._field_Owner) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Default == _self_->_field_Default);
}

inline jule::Ptr<_1aa31d7c3_FieldIns> _1aa3189cc_instance(jule::Ptr<_1aa3185e2_Field> _self_) {
	return jule::new_ptr<_1aa31d7c3_FieldIns>(_1aa31d7c3_FieldIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=_self_, ._field_Kind=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Default=jule::Ptr<_1aa44cc98_Data>(nullptr)});;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa3185e2_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa31a605_Operators_eq(_1aa31a605_Operators *_self_, _1aa31a605_Operators _other_) {
	return 
		(_self_->_field_Eq == _other_._field_Eq) &&
		(_self_->_field_Gt == _self_->_field_Gt) &&
		(_self_->_field_GtEq == _self_->_field_GtEq) &&
		(_self_->_field_Lt == _self_->_field_Lt) &&
		(_self_->_field_LtEq == _self_->_field_LtEq) &&
		(_self_->_field_Shl == _self_->_field_Shl) &&
		(_self_->_field_Shr == _self_->_field_Shr) &&
		(_self_->_field_Add == _self_->_field_Add) &&
		(_self_->_field_Sub == _self_->_field_Sub) &&
		(_self_->_field_Div == _self_->_field_Div) &&
		(_self_->_field_Mul == _self_->_field_Mul) &&
		(_self_->_field_Mod == _self_->_field_Mod) &&
		(_self_->_field_BitAnd == _self_->_field_BitAnd) &&
		(_self_->_field_BitOr == _self_->_field_BitOr) &&
		(_self_->_field_BitXor == _self_->_field_BitXor) &&
		(_self_->_field_Neg == _self_->_field_Neg) &&
		(_self_->_field_Pos == _self_->_field_Pos) &&
		(_self_->_field_BitNot == _self_->_field_BitNot) &&
		(_self_->_field_AddAssign == _self_->_field_AddAssign) &&
		(_self_->_field_SubAssign == _self_->_field_SubAssign) &&
		(_self_->_field_DivAssign == _self_->_field_DivAssign) &&
		(_self_->_field_MulAssign == _self_->_field_MulAssign) &&
		(_self_->_field_ModAssign == _self_->_field_ModAssign) &&
		(_self_->_field_ShlAssign == _self_->_field_ShlAssign) &&
		(_self_->_field_ShrAssign == _self_->_field_ShrAssign) &&
		(_self_->_field_BitOrAssign == _self_->_field_BitOrAssign) &&
		(_self_->_field_BitAndAssign == _self_->_field_BitAndAssign) &&
		(_self_->_field_BitXorAssign == _self_->_field_BitXorAssign);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa31a605_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa31e373_StructIns> _1aa31b9ad_instance(jule::Ptr<_1aa31b518_Struct> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	jule::Ptr<_1aa31e373_StructIns> _1007_ins = jule::new_ptr<_1aa31e373_StructIns>(_1aa31e373_StructIns{._field_Checked=false, ._field_Decl=_self_, ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa31d7c3_FieldIns>>::alloc(0LL, (*_self_.alloc)._field_Fields.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa31d7c3_FieldIns>(nullptr); __jule_collection; }), ._field_Statics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>::alloc(0LL, (*_self_.alloc)._field_Statics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa3e4d3e_Var>(nullptr); __jule_collection; }), ._field_Methods=jule::Slice<jule::Ptr<_1aa3315b6_Fn>>(nullptr), ._field_Mutable=false, ._field_Comparable=false, ._field_Refers=static__1aa337a51_new(), ._field_Operators=_1aa31a605_Operators{._field_Eq=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_Gt=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_GtEq=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_Lt=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_LtEq=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_Shl=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_Shr=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_Add=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_Sub=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_Div=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_Mul=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_Mod=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_BitAnd=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_BitOr=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_BitXor=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_Neg=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_Pos=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_BitNot=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_AddAssign=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_SubAssign=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_DivAssign=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_MulAssign=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_ModAssign=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_ShlAssign=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_ShrAssign=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_BitOrAssign=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_BitAndAssign=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_BitXorAssign=jule::Ptr<_1aa334597_FnIns>(nullptr)}});;
	{
		auto expr = &((*_self_.alloc)._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc051516:;
		if (it != expr_end) {
			jule::Ptr<_1aa3e4d3e_Var> _10715_s = *it;
			{
				(*(_1007_ins))._field_Statics=jule::append((*_1007_ins.alloc)._field_Statics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1aa3e4d3e_Var>((*(_10715_s))); __jule_collection; }));
			}
			_iter_next_1bc051516:;
			++it;
			goto _iter_begin_1bc051516;
		}
		_iter_end_1bc051516:;
	};
	{
		auto expr = &((*_self_.alloc)._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc05234c:;
		if (it != expr_end) {
			jule::Ptr<_1aa3185e2_Field> _11115_f = *it;
			{
				jule::Ptr<_1aa31d7c3_FieldIns> _1128_f2 = _1aa3189cc_instance(_11115_f);;
				(*(_1128_f2))._field_Owner=_1007_ins;
				(*_1007_ins.alloc)._field_Fields=jule::append((*_1007_ins.alloc)._field_Fields,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa31d7c3_FieldIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1128_f2; __jule_collection; }));
				if ((((!((*_11115_f.alloc)._field_Mutable)) && ((*((*_11115_f.alloc)._field_Kind))._field_Kind != nullptr)) && _1a601c031_Mutable((*((*(_11115_f))._field_Kind))._field_Kind))) {
					(*_1007_ins.alloc)._field_Mutable=true;
				};
			}
			_iter_next_1bc05234c:;
			++it;
			goto _iter_begin_1bc05234c;
		}
		_iter_end_1bc05234c:;
	};
	if (((*_self_.alloc)._field_Generics.len() == 0LL)) {
		(*_1007_ins.alloc)._field_Methods=(*_self_.alloc)._field_Methods;
	} else {
		(*_1007_ins.alloc)._field_Methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa3315b6_Fn>>::alloc(0LL, (*_self_.alloc)._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa3315b6_Fn>(nullptr); __jule_collection; });
		{
			auto expr = &((*_self_.alloc)._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc0566c5:;
			if (it != expr_end) {
				jule::Ptr<_1aa3315b6_Fn> _12416_f = *it;
				{
					jule::Ptr<_1aa3315b6_Fn> _1259_fins = jule::new_ptr<_1aa3315b6_Fn>((*(_12416_f)));;
					(*_1259_fins.alloc)._field_Instances=nullptr;
					(*_1007_ins.alloc)._field_Methods=jule::append((*_1007_ins.alloc)._field_Methods,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa3315b6_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1259_fins; __jule_collection; }));
				}
				_iter_next_1bc0566c5:;
				++it;
				goto _iter_begin_1bc0566c5;
			}
			_iter_end_1bc0566c5:;
		};
	};
	return _1007_ins;;
}



inline jule::Ptr<_1aa31e373_StructIns> _1aa31bcbb_appendInstance(_1aa31b518_Struct* _self_, jule::Ptr<_1aa31e373_StructIns>* _13635_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc056a6b:;
		if (it != expr_end) {
			jule::Ptr<_1aa31e373_StructIns> _14215_ains = *it;
			{
				if (_1aa320022_Same(_14215_ains.ptr(), (*(_13635_ins)))) {
					return _14215_ains;;
				};
			}
			_iter_next_1bc056a6b:;
			++it;
			goto _iter_begin_1bc056a6b;
		}
		_iter_end_1bc056a6b:;
	};
	{ jule::Slice<jule::Ptr<_1aa31e373_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13635_ins))); };
	return nullptr;;
}



inline jule::Ptr<_1aa3315b6_Fn> _1aa31c1b7_FindMethod(_1aa31b518_Struct* _self_, jule::Str _15426_ident, jule::Bool _15438_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc058e7a:;
		if (it != expr_end) {
			jule::Ptr<_1aa3315b6_Fn> _15515_f = *it;
			{
				if ((((*(_15515_f))._field_Statically == _15438_statically) && ((*_15515_f.alloc)._field_Ident == _15426_ident))) {
					return _15515_f;;
				};
			}
			_iter_next_1bc058e7a:;
			++it;
			goto _iter_begin_1bc058e7a;
		}
		_iter_end_1bc058e7a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa3e4d3e_Var> _1aa31c508_FindStatic(_1aa31b518_Struct* _self_, jule::Str _16526_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc05b389:;
		if (it != expr_end) {
			jule::Ptr<_1aa3e4d3e_Var> _16615_v = *it;
			{
				if (((*(_16615_v))._field_Ident == _16526_ident)) {
					return _16615_v;;
				};
			}
			_iter_next_1bc05b389:;
			++it;
			goto _iter_begin_1bc05b389;
		}
		_iter_end_1bc05b389:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa3185e2_Field> _1aa31c849_FindField(_1aa31b518_Struct* _self_, jule::Str _17625_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc05c368:;
		if (it != expr_end) {
			jule::Ptr<_1aa3185e2_Field> _17715_f = *it;
			{
				if (((*(_17715_f))._field_Ident == _17625_ident)) {
					return _17715_f;;
				};
			}
			_iter_next_1bc05c368:;
			++it;
			goto _iter_begin_1bc05c368;
		}
		_iter_end_1bc05c368:;
	};
	return nullptr;;
}



inline jule::Bool _1aa31cb8a_IsImplements(_1aa31b518_Struct* _self_, jule::Ptr<_1aa345047_Trait> _18624_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc05d336:;
		if (it != expr_end) {
			jule::Ptr<_1aa345047_Trait> *_18710_it = it;
			{
				if ((_18624_t == (*(_18710_it)))) {
					return true;;
				};
			}
			_iter_next_1bc05d336:;
			++it;
			goto _iter_begin_1bc05d336;
		}
		_iter_end_1bc05d336:;
	};
	return false;;
}



inline jule::Bool _1aa31cecb_IsUses(_1aa31b518_Struct* _self_, jule::Ptr<_1aa31b518_Struct> _19618_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc05dca4:;
		if (it != expr_end) {
			jule::Ptr<_1aa31b518_Struct> *_19710_u = it;
			{
				while ((_19618_s == (*(_19710_u)))) {
					{
						return true;;
					}
				_iter_next_1bc05e7aa:;
				}
				_iter_end_1bc05e7aa:;;
			}
			_iter_next_1bc05dca4:;
			++it;
			goto _iter_begin_1bc05dca4;
		}
		_iter_end_1bc05dca4:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa31b518_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa31d7c3_FieldIns_eq(_1aa31d7c3_FieldIns *_self_, _1aa31d7c3_FieldIns _other_) {
	return 
		(_self_->_field_Owner == _other_._field_Owner) &&
		(_self_->_field_Decl == _self_->_field_Decl) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Default == _self_->_field_Default);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa31d7c3_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1aa31e72a_Str(_1aa31e373_StructIns* _self_) {
	_1ed486d49_StrBuilder _2427_kind = static__1ed487146_New(32LL);;
	_1ed4909ac_WriteStr(&_2427_kind, (*((*(_self_))._field_Decl))._field_Ident);
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		_1ed490c65_WriteByte(&_2427_kind, '[');
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc06247d:;
			if (it != expr_end) {
				jule::I32 _2468_i = it - expr->begin();
				jule::Ptr<_1a6018c64_InsGeneric> *_24611_g = it;
				{
					_1ed4909ac_WriteStr(&_2427_kind, _1a601aa46_Str((*((*(_24611_g))))._field_Kind.ptr()));
					if ((_2468_i < ((*(_self_))._field_Generics.len() - 1LL))) {
						_1ed490c65_WriteByte(&_2427_kind, ',');
					};
				}
				_iter_next_1bc06247d:;
				++it;
				_2468_i++;
				goto _iter_begin_1bc06247d;
			}
			_iter_end_1bc06247d:;
		};
		_1ed490c65_WriteByte(&_2427_kind, ']');
	};
	return _1ed4912a4_Str(&_2427_kind);;
}



inline jule::Bool _1aa31ea6b_Equal(jule::Ptr<_1aa31e373_StructIns> _self_, jule::Ptr<_1a601a64a_TypeKind> _25818_other) {
	jule::Ptr<_1aa31e373_StructIns> _2593_s = _1a601e374_Struct(_25818_other.ptr());;
	if ((_2593_s == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Decl != (*(_2593_s))._field_Decl)) {
		return false;;
	};
	if (((*_self_.alloc)._field_Generics.len() != (*(_2593_s))._field_Generics.len())) {
		return false;;
	};
	jule::I32 _2727_i = 0LL;;
	for (; (_2727_i < (*_self_.alloc)._field_Generics.len()); (_2727_i)++) {
		{
			if ((!(_1a601ad87_Equal((*((*(_self_))._field_Generics[_2727_i]))._field_Kind, (*((*(_2593_s))._field_Generics[_2727_i]))._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1bc065c9a:;
	}
	_iter_end_1bc065c9a:;;
	return true;;
}



inline jule::Bool _1aa320022_Same(_1aa31e373_StructIns* _self_, jule::Ptr<_1aa31e373_StructIns> _28616_s) {
	if ((((*(_self_))._field_Decl != (*(_28616_s))._field_Decl) || ((*_28616_s.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc068a28:;
		if (it != expr_end) {
			jule::I32 _2907_i = it - expr->begin();
			jule::Ptr<_1a6018c64_InsGeneric> *_29010_g = it;
			{
				jule::Ptr<_1a6018c64_InsGeneric> _2914_g2 = (*(_28616_s))._field_Generics[_2907_i];;
				if ((((*((*((*(_29010_g))))._field_Kind))._field_BindIdent != (*(*(_2914_g2))._field_Kind.alloc)._field_BindIdent) || (!(_1a601ad87_Equal((*((*(_29010_g))))._field_Kind, (*(_2914_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1bc068a28:;
			++it;
			_2907_i++;
			goto _iter_begin_1bc068a28;
		}
		_iter_end_1bc068a28:;
	};
	return true;;
}



inline jule::Ptr<_1aa3315b6_Fn> _1aa32041d_FindMethod(_1aa31e373_StructIns* _self_, jule::Str _30126_ident, jule::Bool _30138_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc06bcc3:;
		if (it != expr_end) {
			jule::Ptr<_1aa3315b6_Fn> _30215_f = *it;
			{
				if ((((*(_30215_f))._field_Statically == _30138_statically) && ((*_30215_f.alloc)._field_Ident == _30126_ident))) {
					return _30215_f;;
				};
			}
			_iter_next_1bc06bcc3:;
			++it;
			goto _iter_begin_1bc06bcc3;
		}
		_iter_end_1bc06bcc3:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa31d7c3_FieldIns> _1aa32075e_FindField(_1aa31e373_StructIns* _self_, jule::Str _31225_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc06d0d2:;
		if (it != expr_end) {
			jule::Ptr<_1aa31d7c3_FieldIns> _31315_f = *it;
			{
				if (((*((*(_31315_f))._field_Decl))._field_Ident == _31225_ident)) {
					return _31315_f;;
				};
			}
			_iter_next_1bc06d0d2:;
			++it;
			goto _iter_begin_1bc06d0d2;
		}
		_iter_end_1bc06d0d2:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa3e4d3e_Var> _1aa320aa0_FindStatic(_1aa31e373_StructIns* _self_, jule::Str _32326_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc06d885:;
		if (it != expr_end) {
			jule::Ptr<_1aa3e4d3e_Var> _32415_v = *it;
			{
				if (((*(_32415_v))._field_Ident == _32326_ident)) {
					return _32415_v;;
				};
			}
			_iter_next_1bc06d885:;
			++it;
			goto _iter_begin_1bc06d885;
		}
		_iter_end_1bc06d885:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa31e373_StructIns _Src) {
	_Stream << _1aa31e72a_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1aa323234_OperandExprModel_eq(_1aa323234_OperandExprModel *_self_, _1aa323234_OperandExprModel _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Model == _self_->_field_Model);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa323234_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa32372e_BinaryExprModel_eq(_1aa32372e_BinaryExprModel *_self_, _1aa32372e_BinaryExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa32372e_BinaryExprModel _Src) {
	_Stream << "BinaryExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa323b08_UnaryExprModel_eq(_1aa323b08_UnaryExprModel *_self_, _1aa323b08_UnaryExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Op == _self_->_field_Op);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa323b08_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa324136_StructArgExprModel_eq(_1aa324136_StructArgExprModel *_self_, _1aa324136_StructArgExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Field == _self_->_field_Field) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa324136_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa3244cc_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa3247c9_AllocStructLitExprModel_eq(_1aa3247c9_AllocStructLitExprModel *_self_, _1aa3247c9_AllocStructLitExprModel _other_) {
	return 
		(_self_->_field_Lit == _other_._field_Lit);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa3247c9_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa324d5c_CastingExprModel_eq(_1aa324d5c_CastingExprModel *_self_, _1aa324d5c_CastingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_ExprKind == _self_->_field_ExprKind);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa324d5c_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa32570e_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa325ad8_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa32608e_IndexingExprModel_eq(_1aa32608e_IndexingExprModel *_self_, _1aa32608e_IndexingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Index == _self_->_field_Index);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa32608e_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa326545_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Captured:" << _Src._field_Captured << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa32691e_KeyValPairExprModel_eq(_1aa32691e_KeyValPairExprModel *_self_, _1aa32691e_KeyValPairExprModel _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa32691e_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa326dc5_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa327458_SlicingExprModel_eq(_1aa327458_SlicingExprModel *_self_, _1aa327458_SlicingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Left == _self_->_field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa327458_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa3279db_TraitSubIdentExprModel_eq(_1aa3279db_TraitSubIdentExprModel *_self_, _1aa3279db_TraitSubIdentExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method) &&
		(_self_->_field_Trt == _self_->_field_Trt);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa3279db_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa32837c_StructSubIdentExprModel_eq(_1aa32837c_StructSubIdentExprModel *_self_, _1aa32837c_StructSubIdentExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method) &&
		(_self_->_field_Field == _self_->_field_Field) &&
		(_self_->_field_Owner == _self_->_field_Owner);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa32837c_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa328723_StructStaticIdentExprModel_eq(_1aa328723_StructStaticIdentExprModel *_self_, _1aa328723_StructStaticIdentExprModel _other_) {
	return 
		(_self_->_field_Structure == _other_._field_Structure) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa328723_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa328aec_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa328de9_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa3292c3_BuiltinOutCallExprModel_eq(_1aa3292c3_BuiltinOutCallExprModel *_self_, _1aa3292c3_BuiltinOutCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Debug == _self_->_field_Debug);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa3292c3_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa32969c_BuiltinOutlnCallExprModel_eq(_1aa32969c_BuiltinOutlnCallExprModel *_self_, _1aa32969c_BuiltinOutlnCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Debug == _self_->_field_Debug);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa32969c_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa329a76_BuiltinNewCallExprModel_eq(_1aa329a76_BuiltinNewCallExprModel *_self_, _1aa329a76_BuiltinNewCallExprModel _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Init == _self_->_field_Init);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa329a76_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa329e50_BuiltinPanicCallExprModel_eq(_1aa329e50_BuiltinPanicCallExprModel *_self_, _1aa329e50_BuiltinPanicCallExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa329e50_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa32a406_BuiltinAssertCallExprModel_eq(_1aa32a406_BuiltinAssertCallExprModel *_self_, _1aa32a406_BuiltinAssertCallExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Log == _self_->_field_Log);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa32a406_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa32a8ac_BuiltinMakeCallExprModel_eq(_1aa32a8ac_BuiltinMakeCallExprModel *_self_, _1aa32a8ac_BuiltinMakeCallExprModel _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Len == _self_->_field_Len) &&
		(_self_->_field_Cap == _self_->_field_Cap);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa32a8ac_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa32ac86_BuiltinAppendCallExprModel_eq(_1aa32ac86_BuiltinAppendCallExprModel *_self_, _1aa32ac86_BuiltinAppendCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Elements == _self_->_field_Elements);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa32ac86_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa32b083_BuiltinLenCallExprModel_eq(_1aa32b083_BuiltinLenCallExprModel *_self_, _1aa32b083_BuiltinLenCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa32b083_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa32b380_BuiltinCapCallExprModel_eq(_1aa32b380_BuiltinCapCallExprModel *_self_, _1aa32b380_BuiltinCapCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa32b380_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa32b759_BuiltinDeleteCallExprModel_eq(_1aa32b759_BuiltinDeleteCallExprModel *_self_, _1aa32b759_BuiltinDeleteCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Key == _self_->_field_Key);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa32b759_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa32bb33_BuiltinCopyCallExprModel_eq(_1aa32bb33_BuiltinCopyCallExprModel *_self_, _1aa32bb33_BuiltinCopyCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Src == _self_->_field_Src);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa32bb33_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa32c00c_BuiltinErrorCallExprModel_eq(_1aa32c00c_BuiltinErrorCallExprModel *_self_, _1aa32c00c_BuiltinErrorCallExprModel _other_) {
	return 
		(_self_->_field_Func == _other_._field_Func) &&
		(_self_->_field_Err == _self_->_field_Err);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa32c00c_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa32c6b1_SizeofExprModel_eq(_1aa32c6b1_SizeofExprModel *_self_, _1aa32c6b1_SizeofExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa32c6b1_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa32c89d_AlignofExprModel_eq(_1aa32c89d_AlignofExprModel *_self_, _1aa32c89d_AlignofExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa32c89d_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa32cb45_RuneExprModel_eq(_1aa32cb45_RuneExprModel *_self_, _1aa32cb45_RuneExprModel _other_) {
	return 
		(_self_->_field_Code == _other_._field_Code);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa32cb45_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa32ce42_IntegratedToStrExprModel_eq(_1aa32ce42_IntegratedToStrExprModel *_self_, _1aa32ce42_IntegratedToStrExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa32ce42_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa32d31b_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa32d618_FreeExprModel_eq(_1aa32d618_FreeExprModel *_self_, _1aa32d618_FreeExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa32d618_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa32e3a5_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa32eae2_Param_eq(_1aa32eae2_Param *_self_, _1aa32eae2_Param _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}

inline jule::Ptr<_1aa33351e_ParamIns> _1aa32eeaa_instance(jule::Ptr<_1aa32eae2_Param> _self_) {
	return jule::new_ptr<_1aa33351e_ParamIns>(_1aa33351e_ParamIns{._field_Decl=_self_, ._field_Kind=jule::Ptr<_1a601a64a_TypeKind>(nullptr)});;
}



inline jule::Bool _1aa330241_IsSelf(_1aa32eae2_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1aa3304c7_IsRef(_1aa32eae2_Param* _self_) {
	return (!((*(_self_))._field_Ident).empty() && ((*(_self_))._field_Ident[0LL] == '&'));;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa32eae2_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aa331a6c_IsVoid(_1aa3315b6_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1aa331d03_IsMethod(_1aa3315b6_Fn* _self_) {
	return ((*(_self_))._field_Owner != nullptr);;
}



inline jule::Bool _1aa332089_IsEntryPoint(_1aa3315b6_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1aa332320_IsInit(_1aa3315b6_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1aa3325a6_IsAnon(_1aa3315b6_Fn* _self_) {
	return _1aa2d7d75_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1aa33283c_AnyVar(_1aa3315b6_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*(*(_self_))._field_Result.alloc)._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1aa334597_FnIns> _1aa332ac3_instanceForce(jule::Ptr<_1aa3315b6_Fn> _self_) {
	jule::Ptr<_1aa334597_FnIns> _1017_ins = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=_self_, ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::new_ptr<_1aa378ba2_Scope>(_1aa378ba2_Scope{._field_Parent=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<jule::Any>(nullptr)}), ._field_Refers=static__1aa337a51_new(), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>(nullptr), ._field_reloaded=false});;
	(*(_1017_ins))._field_Params=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>::alloc(0LL, (*(_self_))._field_Params.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa33351e_ParamIns>(nullptr); __jule_collection; });
	{
		auto expr = &((*_self_.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc076272:;
		if (it != expr_end) {
			jule::Ptr<_1aa32eae2_Param> _10815_p = *it;
			{
				(*_1017_ins.alloc)._field_Params=jule::append((*_1017_ins.alloc)._field_Params,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1aa32eeaa_instance(_10815_p); __jule_collection; }));
			}
			_iter_next_1bc076272:;
			++it;
			goto _iter_begin_1bc076272;
		}
		_iter_end_1bc076272:;
	};
	if (((*((*_1017_ins.alloc)._field_Decl))._field_Result != nullptr)) {
		(*_1017_ins.alloc)._field_Result=(*((*(*((*(_1017_ins))._field_Decl))._field_Result.alloc)._field_Kind))._field_Kind;
	};
	return _1017_ins;;
}



inline jule::Ptr<_1aa334597_FnIns> _1aa332d59_instance(jule::Ptr<_1aa3315b6_Fn> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	return _1aa332ac3_instanceForce(_self_);;
}



inline jule::Ptr<_1aa334597_FnIns> _1aa333167_appendInstance(_1aa3315b6_Fn* _self_, jule::Ptr<_1aa334597_FnIns>* _12935_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_1aa334597_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12935_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_1aa334597_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12935_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc07b211:;
		if (it != expr_end) {
			jule::Ptr<_1aa334597_FnIns> _14515_ains = *it;
			{
				if (_1aa336137_Same(_14515_ains.ptr(), (*(_12935_ins)))) {
					return _14515_ains;;
				};
			}
			_iter_next_1bc07b211:;
			++it;
			goto _iter_begin_1bc07b211;
		}
		_iter_end_1bc07b211:;
	};
	{ jule::Slice<jule::Ptr<_1aa334597_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12935_ins))); };
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa3315b6_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa33351e_ParamIns_eq(_1aa33351e_ParamIns *_self_, _1aa33351e_ParamIns _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}

inline jule::Str _1aa3338b5_Str(_1aa33351e_ParamIns* _self_) {
	_1ed486d49_StrBuilder _1677_s = static__1ed487146_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Mutable) {
		_1ed4909ac_WriteStr(&_1677_s, jule::Str::lit("mut ", 4));
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Reference) {
		_1ed4909ac_WriteStr(&_1677_s, jule::Str::lit("&_:", 3));
	};
	if (_1aa330241_IsSelf((*(_self_))._field_Decl)) {
		if (_1aa3304c7_IsRef((*(_self_))._field_Decl)) {
			_1ed490c65_WriteByte(&_1677_s, '&');
		};
		_1ed4909ac_WriteStr(&_1677_s, jule::Str::lit("self", 4));
		return _1ed4912a4_Str(&_1677_s);;
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Variadic) {
		_1ed4909ac_WriteStr(&_1677_s, jule::Str::lit("...", 3));
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_1ed4909ac_WriteStr(&_1677_s, _1a601aa46_Str((*(_self_))._field_Kind));
	};
	return _1ed4912a4_Str(&_1677_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa33351e_ParamIns _Src) {
	_Stream << _1aa3338b5_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aa33491b_Str(_1aa334597_FnIns* _self_) {
	;
	return _1aa336478_GetKindStr(_self_, false);;
}



inline jule::Bool _1aa334c5c_Equal(jule::Ptr<_1aa334597_FnIns> _self_, jule::Ptr<_1a601a64a_TypeKind> _21918_other) {
	jule::Ptr<_1aa334597_FnIns> _2203_f = _1a601e0dd_Fn(_21918_other.ptr());;
	if ((_2203_f == nullptr)) {
		return false;;
	};
	return _1aa335202_EqualFn(_self_, &(_2203_f));;
}



inline jule::Bool _1aa335202_EqualFn(jule::Ptr<_1aa334597_FnIns> _self_, jule::Ptr<_1aa334597_FnIns>* _23021_f) {
	if (((*((*(_self_))._field_Decl))._field_Exceptional != (*(*((*(_23021_f))))._field_Decl.alloc)._field_Exceptional)) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Unsafety != (*(*((*(_23021_f))))._field_Decl.alloc)._field_Unsafety)) {
		return false;;
	};
	if ((_1aa331a6c_IsVoid((*(_self_))._field_Decl) != _1aa331a6c_IsVoid((*((*(_23021_f))))._field_Decl))) {
		return false;;
	};
	jule::Fn<jule::Bool,jule::Ptr<_1aa33351e_ParamIns>,jule::Ptr<_1aa33351e_ParamIns>> _2403_checkParams = jule::__new_closure<jule::Bool,jule::Ptr<_1aa33351e_ParamIns>,jule::Ptr<_1aa33351e_ParamIns>>((void*)__jule_anon1bc086727, nullptr, nullptr);;
	if (((*((*(_23021_f))))._field_Params.len() != (*_self_.alloc)._field_Params.len())) {
		return false;;
	};
	jule::I32 _2727_i = 0LL;;
	for (; (_2727_i < (*_self_.alloc)._field_Params.len()); (_2727_i)++) {
		{
			if ((!(_2403_checkParams((*(_self_))._field_Params[_2727_i], (*((*(_23021_f))))._field_Params[_2727_i])))) {
				return false;;
			};
		}
	_iter_next_1bc08bdc0:;
	}
	_iter_end_1bc08bdc0:;;
	if ((!(_1aa331a6c_IsVoid((*(_self_))._field_Decl)))) {
		if ((!(_1a601ad87_Equal((*_self_.alloc)._field_Result, (*((*(_23021_f))))._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1aa335543_equalTrait(jule::Ptr<_1aa334597_FnIns> _self_, jule::Ptr<_1aa334597_FnIns>* _28924_other) {
	if (((*((*(_self_))._field_Decl))._field_Public != (*(*((*(_28924_other))))._field_Decl.alloc)._field_Public)) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Ident != (*(*((*(_28924_other))))._field_Decl.alloc)._field_Ident)) {
		return false;;
	};
	if ((!(_1aa335202_EqualFn(_self_, _28924_other)))) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Generics.len() != (*(*((*(_28924_other))))._field_Decl.alloc)._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1a601a64a_TypeKind>> _1aa3357c9_Types(_1aa334597_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1bc0930e6:;
			{
				return nullptr;;
			}
		}
		else if ((_1a601eb27_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1bc09315c:;
			{
				return ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a601a64a_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_self_))._field_Result; __jule_collection; });;
			}
		}
		else {
			_case_begin_1bc092b84:;
			{
				return (*(_1a601eb27_Tup((*(_self_))._field_Result.ptr())))._field_Types;;
			}
		}
		_match_end_1bc092a85:;
	};
}



inline jule::Bool _1aa335a60_IsBuiltin(_1aa334597_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1aa335ce6_IsAnon(_1aa334597_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1aa3325a6_IsAnon((*(_self_))._field_Decl)));;
}



inline jule::Bool _1aa336137_Same(_1aa334597_FnIns* _self_, jule::Ptr<_1aa334597_FnIns> _33216_f) {
	if ((((*(_self_))._field_Decl != (*(_33216_f))._field_Decl) || ((*_33216_f.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc095cca:;
		if (it != expr_end) {
			jule::I32 _3377_i = it - expr->begin();
			jule::Ptr<_1a6018c64_InsGeneric> *_33710_g = it;
			{
				jule::Ptr<_1a6018c64_InsGeneric> _3384_g2 = (*(_33216_f))._field_Generics[_3377_i];;
				if ((((*((*((*(_33710_g))))._field_Kind))._field_BindIdent != (*(*(_3384_g2))._field_Kind.alloc)._field_BindIdent) || (!(_1a601ad87_Equal((*((*(_33710_g))))._field_Kind, (*(_3384_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1bc095cca:;
			++it;
			_3377_i++;
			goto _iter_begin_1bc095cca;
		}
		_iter_end_1bc095cca:;
	};
	return true;;
}



inline jule::Str _1aa336478_GetKindStr(_1aa334597_FnIns* _self_, jule::Bool _34922_ident) {
	_1ed486d49_StrBuilder _3507_s = static__1ed487146_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Unsafety) {
		_1ed4909ac_WriteStr(&_3507_s, jule::Str::lit("unsafe ", 7));
	};
	_1ed4909ac_WriteStr(&_3507_s, jule::Str::lit("fn", 2));
	if ((_34922_ident && ((*(_self_))._field_Decl != nullptr))) {
		_1ed490c65_WriteByte(&_3507_s, ' ');
		_1ed4909ac_WriteStr(&_3507_s, (*(*(_self_))._field_Decl.alloc)._field_Ident);
	};
	_1ed490c65_WriteByte(&_3507_s, '(');
	jule::I32 _3643_n = (*(_self_))._field_Params.len();;
	if ((_3643_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc09b8a2:;
			if (it != expr_end) {
				jule::I32 _3668_i = it - expr->begin();
				jule::Ptr<_1aa33351e_ParamIns> *_36611_p = it;
				{
					_1ed4909ac_WriteStr(&_3507_s, _1aa3338b5_Str((*(_36611_p)).ptr()));
					if ((_3668_i < ((*(_self_))._field_Params.len() - 1LL))) {
						_1ed490c65_WriteByte(&_3507_s, ',');
					};
				}
				_iter_next_1bc09b8a2:;
				++it;
				_3668_i++;
				goto _iter_begin_1bc09b8a2;
			}
			_iter_end_1bc09b8a2:;
		};
	};
	_1ed490c65_WriteByte(&_3507_s, ')');
	if ((*(*(_self_))._field_Decl.alloc)._field_Exceptional) {
		_1ed490c65_WriteByte(&_3507_s, '!');
	};
	if ((!(_1aa331a6c_IsVoid((*(_self_))._field_Decl)))) {
		_1ed490c65_WriteByte(&_3507_s, ':');
		_1ed4909ac_WriteStr(&_3507_s, _1a601aa46_Str((*(_self_))._field_Result.ptr()));
	};
	return _1ed4912a4_Str(&_3507_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa334597_FnIns _Src) {
	_Stream << _1aa33491b_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1aa337732_ReferenceStack> static__1aa337a51_new(void) {
	return jule::new_ptr<_1aa337732_ReferenceStack>(_1aa337732_ReferenceStack{._field_buffer=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 10LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
}



inline jule::I32 _1aa337e4c_Len(_1aa337732_ReferenceStack* _self_) {
	return (*(_self_))._field_buffer.len();;
}



inline jule::Any _1aa33828d_At(_1aa337732_ReferenceStack* _self_, jule::I32 _6818_i) {
	return (*(_self_))._field_buffer[_6818_i];;
}



inline void _1aa338546_Push(_1aa337732_ReferenceStack* _self_, jule::Any _7324_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_7324_ref); };
}



inline jule::Bool _1bc8e6608_Exist(_1aa337732_ReferenceStack* _self_, jule::Ptr<_1aa334597_FnIns> _7820_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc8e797d:;
		if (it != expr_end) {
			jule::Any *_7910_ref = it;
			{
				if ((__jule_any_type7_compare((*(_7910_ref)), _7820_t))) {
					return true;;
				};
			}
			_iter_next_1bc8e797d:;
			++it;
			goto _iter_begin_1bc8e797d;
		}
		_iter_end_1bc8e797d:;
	};
	return false;;
}

inline jule::Bool _1bc61b11e_Exist(_1aa337732_ReferenceStack* _self_, jule::Ptr<_1aa3e4d3e_Var> _7820_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc61c450:;
		if (it != expr_end) {
			jule::Any *_7910_ref = it;
			{
				if ((__jule_any_type8_compare((*(_7910_ref)), _7820_t))) {
					return true;;
				};
			}
			_iter_next_1bc61c450:;
			++it;
			goto _iter_begin_1bc61c450;
		}
		_iter_end_1bc61c450:;
	};
	return false;;
}

inline jule::Bool _1bbaec0e5_Exist(_1aa337732_ReferenceStack* _self_, jule::Ptr<_1aa31e373_StructIns> _7820_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc9c5176:;
		if (it != expr_end) {
			jule::Any *_7910_ref = it;
			{
				if ((__jule_any_type9_compare((*(_7910_ref)), _7820_t))) {
					return true;;
				};
			}
			_iter_next_1bc9c5176:;
			++it;
			goto _iter_begin_1bc9c5176;
		}
		_iter_end_1bc9c5176:;
	};
	return false;;
}

inline jule::Bool _1bcd0ee61_Exist(_1aa337732_ReferenceStack* _self_, jule::Ptr<_1aa345047_Trait> _7820_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcd1125e:;
		if (it != expr_end) {
			jule::Any *_7910_ref = it;
			{
				if ((__jule_any_type10_compare((*(_7910_ref)), _7820_t))) {
					return true;;
				};
			}
			_iter_next_1bcd1125e:;
			++it;
			goto _iter_begin_1bcd1125e;
		}
		_iter_end_1bcd1125e:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa337732_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa338c3e_Pass_eq(_1aa338c3e_Pass *_self_, _1aa338c3e_Pass _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Text == _self_->_field_Text);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa338c3e_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline void _1aa33e1d9_pushErr(_1aa33d6e4_symbolBuilder* _self_, jule::Ptr<_1aa2d51c4_Token>* _33224_token, jule::Str _33239_fmt, jule::Slice<jule::Any> _33252_args) {
	{ jule::Slice<_1ada72b17_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1aa3b9099_compilerErr(_33224_token, true, _33239_fmt, _33252_args)); };
}



inline void _1aa33e96a_pushSuggestion(_1aa33d6e4_symbolBuilder* _self_, jule::Str _34130_fmt, jule::Slice<jule::Any> _34143_args) {
	{
		_1aa3ba650_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _34130_fmt, _34143_args);
	};
}



inline jule::Bool _1aa33ed66_checkCppUseDeclPath(_1aa33d6e4_symbolBuilder* _self_, jule::Ptr<_1aa313785_UseDecl>* _34536_decl, jule::Str* _34553_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _3463_ext = _1ed4948a1_Ext((*(_34553_path)));;
	if (((!(_1ada657ca_IsValidHeaderExt(_3463_ext))) && (!(_1ada65a94_IsValidCppExt(_3463_ext))))) {
		_1aa33e1d9_pushErr(_self_, &((*((*(_34536_decl))))._field_Token), jule::Str::lit("invalid C++ extension: @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_3463_ext, &__jule_any_type4); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ed381969_Status> _3533_info = ({
		auto except = static__1ed37d636_Of((*(_34553_path)));
		(except.ok()) ? (except.result) : ({{
			_1aa33e1d9_pushErr(_self_, &((*((*(_34536_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_34536_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_1ed381969_Status>(nullptr);});
	});;
	if (_1ed381d76_IsDir(_3533_info.ptr())) {
		_1aa33e1d9_pushErr(_self_, &((*((*(_34536_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_34536_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1aa39b0ae_ImportInfo> _1aa340174_buildCppHeaderImport(_1aa33d6e4_symbolBuilder* _self_, jule::Ptr<_1aa313785_UseDecl>* _36541_decl) {
	jule::Str _3667_path = (*((*(_36541_decl))))._field_LinkPath;;
	if ((!(_1ada65500_IsStdHeaderPath((*((*(_36541_decl))))._field_LinkPath)))) {
		_3667_path=_1ed49461a_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1aa2db142_Dir((*((*((*(_36541_decl))))._field_Token))._field_File.ptr()); (*it++) = (*((*(_36541_decl))))._field_LinkPath; __jule_collection; }));
		jule::Bool _3708_ok = _1aa33ed66_checkCppUseDeclPath(_self_, _36541_decl, &(_3667_path));;
		if ((!(_3708_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1ed494b6a_Abs(_3667_path);
			_3667_path = __jule_assign_result.__jule_result_arg0;
			_3708_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_3708_ok))) {
			_1aa33e1d9_pushErr(_self_, &((*((*(_36541_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_36541_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
		};
	};
	return jule::new_ptr<_1aa39b0ae_ImportInfo>(_1aa39b0ae_ImportInfo{._field_Token=(*((*(_36541_decl))))._field_Token, ._field_Path=_3667_path, ._field_LinkPath=(*((*(_36541_decl))))._field_LinkPath, ._field_Ident=jule::Str(), ._field_Alias=jule::Str(), ._field_Duplicate=false, ._field_Binded=true, ._field_Std=false, ._field_ImportAll=false, ._field_Selected=jule::Slice<jule::Ptr<_1aa2d51c4_Token>>(nullptr), ._field_Package=nullptr, ._field_ModId=0});;
}



inline jule::Ptr<_1aa39b0ae_ImportInfo> _1aa3404b5_buildStdImport(_1aa33d6e4_symbolBuilder* _self_, jule::Ptr<_1aa313785_UseDecl>* _39335_decl) {
	jule::Str _3957_path = (*((*(_39335_decl))))._field_LinkPath.slice(5LL);;
	_3957_path=_1ed478a50_Replace(_3957_path, jule::Str::lit("::", 2), jule::Str::lit("/", 1), -1LL);
	_3957_path=_1ed49461a_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1adc46e51_PathStdlib; (*it++) = _3957_path; __jule_collection; }));
	jule::Bool _3989_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1ed494b6a_Abs(_3957_path);
		_3957_path = __jule_assign_result.__jule_result_arg0;
		_3989_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_3989_ok))) {
		_1aa33e1d9_pushErr(_self_, &((*((*(_39335_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_39335_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ed381969_Status> _4053_info = ({
		auto except = static__1ed37d636_Of(_3957_path);
		(except.ok()) ? (except.result) : ({{
			_1aa33e1d9_pushErr(_self_, &((*((*(_39335_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_39335_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		} jule::Ptr<_1ed381969_Status>(nullptr);});
	});;
	if ((!(_1ed381d76_IsDir(_4053_info.ptr())))) {
		_1aa33e1d9_pushErr(_self_, &((*((*(_39335_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_39335_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::I32 _4153_i = (_1ed4745c8_FindLast((*((*(_39335_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4163_ident = (*((*(_39335_decl))))._field_LinkPath.slice(_4153_i);;
	return jule::new_ptr<_1aa39b0ae_ImportInfo>(_1aa39b0ae_ImportInfo{._field_Token=(*((*(_39335_decl))))._field_Token, ._field_Path=_3957_path, ._field_LinkPath=(*((*(_39335_decl))))._field_LinkPath, ._field_Ident=_4163_ident, ._field_Alias=(*((*(_39335_decl))))._field_Alias, ._field_Duplicate=false, ._field_Binded=false, ._field_Std=true, ._field_ImportAll=(*((*(_39335_decl))))._field_Full, ._field_Selected=jule::Slice<jule::Ptr<_1aa2d51c4_Token>>(nullptr), ._field_Package=jule::new_ptr<_1aa39ded5_Package>(_1aa39ded5_Package{._field_Files=nullptr}), ._field_ModId=0});;
}



inline jule::Ptr<_1aa39b0ae_ImportInfo> _1aa340806_buildIdentImport(jule::Ptr<_1aa33d6e4_symbolBuilder> _self_, jule::Ptr<_1aa313785_UseDecl>* _43338_decl) {
	if ((((*((*(_43338_decl))))._field_LinkPath.equal("_", 1) || (_1ed473d25_Find((*((*(_43338_decl))))._field_LinkPath, jule::Str::lit("::_::", 5)) != -1LL)) || _1ed47352d_HasSuffix((*((*(_43338_decl))))._field_LinkPath, jule::Str::lit("::_", 3)))) {
		_1aa33e1d9_pushErr(_self_.ptr(), &((*((*(_43338_decl))))._field_Token), jule::Str::lit("use declaration paths cannot contain blank identifier", 53), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _4413_modPath = ((_1aa397d25_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1aa396d8a_GetModPath((*_self_.alloc)._field_importer.data);;
	if ((_4413_modPath.len() == 0LL)) {
		_1aa33e1d9_pushErr(_self_, &((*((*(_43338_decl))))._field_Token), jule::Str::lit("no module file found in current directory or any parent directory", 65), jule::Slice<jule::Any>());
		_1aa33e96a_pushSuggestion(_self_, jule::Str::lit("use \"julec mod init\" command to initialize module", 49), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _4487_path = (*((*(_43338_decl))))._field_LinkPath;;
	_4487_path=_1ed478a50_Replace(_4487_path, jule::Str::lit("::", 2), jule::Str::lit("/", 1), -1LL);
	_4487_path=_1ed49461a_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _4413_modPath; (*it++) = _4487_path; __jule_collection; }));
	jule::Bool _4529_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1ed494b6a_Abs(_4487_path);
		_4487_path = __jule_assign_result.__jule_result_arg0;
		_4529_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_4529_ok))) {
		_1aa33e1d9_pushErr(_self_, &((*((*(_43338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_43338_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ed381969_Status> _4593_info = ({
		auto except = static__1ed37d636_Of(_4487_path);
		(except.ok()) ? (except.result) : ({{
			_1aa33e1d9_pushErr(_self_, &((*((*(_43338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_43338_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		} jule::Ptr<_1ed381969_Status>(nullptr);});
	});;
	if ((!(_1ed381d76_IsDir(_4593_info.ptr())))) {
		_1aa33e1d9_pushErr(_self_, &((*((*(_43338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_43338_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::I32 _4693_i = (_1ed4745c8_FindLast((*((*(_43338_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4703_ident = (*((*(_43338_decl))))._field_LinkPath.slice(_4693_i);;
	return jule::new_ptr<_1aa39b0ae_ImportInfo>(_1aa39b0ae_ImportInfo{._field_Token=(*((*(_43338_decl))))._field_Token, ._field_Path=_4487_path, ._field_LinkPath=(*((*(_43338_decl))))._field_LinkPath, ._field_Ident=_4703_ident, ._field_Alias=(*((*(_43338_decl))))._field_Alias, ._field_Duplicate=false, ._field_Binded=false, ._field_Std=false, ._field_ImportAll=(*((*(_43338_decl))))._field_Full, ._field_Selected=jule::Slice<jule::Ptr<_1aa2d51c4_Token>>(nullptr), ._field_Package=jule::new_ptr<_1aa39ded5_Package>(_1aa39ded5_Package{._field_Files=nullptr}), ._field_ModId=0});;
}



inline jule::Ptr<_1aa39b0ae_ImportInfo> _1aa340b47_buildImport(jule::Ptr<_1aa33d6e4_symbolBuilder> _self_, jule::Ptr<_1aa313785_UseDecl>* _48733_decl) {
	{
		
		if ((*((*(_48733_decl))))._field_Binded) {
			_case_begin_1bc0db76b:;
			{
				return _1aa340174_buildCppHeaderImport(_self_.ptr(), _48733_decl);;
			}
		}
		else if ((*((*(_48733_decl))))._field_Std) {
			_case_begin_1bc0dbb67:;
			{
				return _1aa3404b5_buildStdImport(_self_.ptr(), _48733_decl);;
			}
		}
		else {
			_case_begin_1bc0db705:;
			{
				return _1aa340806_buildIdentImport(_self_, _48733_decl);;
			}
		}
		_match_end_1bc0db606:;
	};
}



inline jule::Ptr<_1aa39b0ae_ImportInfo> _1aa340e88_findUseDecl(_1aa33d6e4_symbolBuilder* _self_, jule::Ptr<_1aa39b0ae_ImportInfo>* _49828_pkg) {
	return _1aa447aea_SelectPackage((*(_self_))._field_table.ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1aa39b0ae_ImportInfo>>((void*)__jule_anon_1bc0dda7b, jule::Ptr<__jule_anon_1bc0dda7b_ctx>::make(__jule_anon_1bc0dda7b_ctx{._49828_pkg=_49828_pkg}).as<jule::Uintptr>(), __jule_anon_1bc0dda7b_ctx_handler));;
}



inline jule::Bool _1aa3412c9_checkDuplicateUseDecl(_1aa33d6e4_symbolBuilder* _self_, jule::Ptr<_1aa39b0ae_ImportInfo>* _50642_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aa39b0ae_ImportInfo> _5077_lpkg = _1aa340e88_findUseDecl(_self_, _50642_pkg);;
	if ((_5077_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1aa33e1d9_pushErr(_self_, &((*((*(_50642_pkg))))._field_Token), jule::Str::lit("use declaration duplication: @ is already used above", 52), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_50642_pkg))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
	_1aa33e96a_pushSuggestion(_self_, jule::Str::lit("remove this use declaration, already used, it is safe", 53), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _1aa34163c_implImportSelections(_1aa33d6e4_symbolBuilder* _self_, jule::Ptr<_1aa39b0ae_ImportInfo>* _51641_imp, jule::Ptr<_1aa313785_UseDecl>* _51664_decl) {
	(*((*(_51641_imp))))._field_Selected=(*((*(_51664_decl))))._field_Selected;
	{
		auto expr = &((*((*(_51641_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc0e2211:;
		if (it != expr_end) {
			jule::Ptr<_1aa2d51c4_Token> _51810_item = *it;
			{
				{
					auto expr = &((*((*(_51641_imp))))._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc0e2b07:;
					if (it != expr_end) {
						jule::Ptr<_1aa2d51c4_Token> _51911_citem = *it;
						{
							if ((_51810_item == _51911_citem)) {
								goto _iter_end_1bc0e2b07;
							} else if (((*(_51810_item))._field_Kind == (*(_51911_citem))._field_Kind)) {
								_1aa33e1d9_pushErr(_self_, &(_51810_item), jule::Str::lit("duplicated selection: @ is already selected", 43), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_51810_item.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
								_1aa33e96a_pushSuggestion(_self_, jule::Str::lit("remove this use selection, already selected, it is safe", 55), jule::Slice<jule::Any>());
								goto _iter_end_1bc0e2b07;
							};
						}
						_iter_next_1bc0e2b07:;
						++it;
						goto _iter_begin_1bc0e2b07;
					}
					_iter_end_1bc0e2b07:;
				};
			}
			_iter_next_1bc0e2211:;
			++it;
			goto _iter_begin_1bc0e2211;
		}
		_iter_end_1bc0e2211:;
	};
}



inline jule::Str _1aa34197d_getAsLinkPath(jule::Ptr<_1aa33d6e4_symbolBuilder> _self_, jule::Str _53134_path) {
	if (_1ed4731a9_HasPrefix(_53134_path, _1adc46e51_PathStdlib)) {
		(_53134_path).mut_slice(_1adc46e51_PathStdlib.len());;
		return (jule::Str::lit("std", 3) + _1ed478a50_Replace(_53134_path, jule::Str::lit("/", 1), jule::Str::lit("::", 2), -1LL));;
	};
	jule::Str _5373_root;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1ed494b6a_Abs(((_1aa397d25_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1aa396d8a_GetModPath((*(_self_))._field_importer.data));
		_5373_root = __jule_assign_result.__jule_result_arg0;
	});
	(_53134_path).mut_slice(_5373_root.len());;
	if ((_53134_path[0LL] == 47LLU)) {
		(_53134_path).mut_slice(1LL);;
	};
	return _1ed478a50_Replace(_53134_path, jule::Str::lit("/", 1), jule::Str::lit("::", 2), -1LL);;
}



inline void _1aa341d9b_pushCycleError(jule::Ptr<_1aa33d6e4_symbolBuilder> _self_, jule::Ptr<_1aa33d6e4_symbolBuilder>* _54532_sb, jule::Str _54552_path, _1ed486d49_StrBuilder* _54568_message) {
	;
	jule::Str _5473_refersTo = _1ada73079_Logf(jule::Str::lit("@ refers to @", 13), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aa34197d_getAsLinkPath(_self_, _1aa2db142_Dir((*((*((*(_54532_sb))))._field_table))._field_File.ptr())), &__jule_any_type4); (*it++) = jule::Any(_1aa34197d_getAsLinkPath(_self_, _54552_path), &__jule_any_type4); __jule_collection; }));;
	jule::Str _5513_m = _1ed4912a4_Str(_54568_message);;
	_1ed4909ac_WriteStr(_54568_message, _1ed472ce1_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1ed4909ac_WriteStr(_54568_message, _5473_refersTo);
	_1ed490c65_WriteByte(_54568_message, '\n');
	_1ed4909ac_WriteStr(_54568_message, _5513_m);
}



inline void _1aa3422b9_pushCrossCycleError(jule::Ptr<_1aa33d6e4_symbolBuilder> _self_, jule::Ptr<_1aa33d6e4_symbolBuilder>* _55837_target, jule::Ptr<_1aa39b0ae_ImportInfo>* _55862_imp, jule::Ptr<_1aa2d51c4_Token>* _55881_errorToken) {
	_1ed486d49_StrBuilder _5597_message = static__1ed487146_New(32LL);;
	_1aa341d9b_pushCycleError(_self_, &(_self_), (*((*(_55862_imp))))._field_Path, &(_5597_message));
	jule::Ptr<_1aa33d6e4_symbolBuilder> _5637_owner = (*_self_.alloc)._field_owner;;
	jule::Ptr<_1aa33d6e4_symbolBuilder> _5647_old = _self_;;
	while (((*(_5637_owner))._field_owner != nullptr)) {
		{
			_1aa341d9b_pushCycleError(_self_, &((*_5647_old.alloc)._field_owner), _1aa2db142_Dir((*((*_5647_old.alloc)._field_table))._field_File.ptr()), &(_5597_message));
			if (((*_5637_owner.alloc)._field_owner == (*(_55837_target)))) {
				_1aa341d9b_pushCycleError(_self_, _55837_target, _1aa2db142_Dir((*((*(_5637_owner))._field_table))._field_File), &(_5597_message));
				goto _iter_end_1bc0eb759;
			};
			_5647_old=_5637_owner;
			_5637_owner=(*_5637_owner.alloc)._field_owner;
		}
	_iter_next_1bc0eb759:;
	}
	_iter_end_1bc0eb759:;;
	_1aa33e1d9_pushErr(_self_, _55881_errorToken, jule::Str::lit("illegal cross cycle in use declarations;\n@", 42), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ed4912a4_Str(&_5597_message), &__jule_any_type4); __jule_collection; }));
}



inline jule::Bool _1aa3426b5_checkImportCycles(jule::Ptr<_1aa33d6e4_symbolBuilder> _self_, jule::Ptr<_1aa39b0ae_ImportInfo> _58134_imp, jule::Ptr<_1aa313785_UseDecl>* _58153_decl) {
	if (((*(_58134_imp))._field_Path == _1aa2db142_Dir((*((*(_self_))._field_table))._field_File.ptr()))) {
		_1aa33e1d9_pushErr(_self_, &((*((*(_58153_decl))))._field_Token), jule::Str::lit("illegal cycle in use declaration, package @ refers to itself", 60), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aa34197d_getAsLinkPath(_self_, (*_58134_imp.alloc)._field_Path), &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	if (((*_self_.alloc)._field_owner == nullptr)) {
		return true;;
	};
	jule::Ptr<_1aa33d6e4_symbolBuilder> _5917_owner = (*_self_.alloc)._field_owner;;
	_julec_label_1bc102155:;
	if ((_1aa2db142_Dir((*((*(_5917_owner))._field_table))._field_File) == (*_58134_imp.alloc)._field_Path)) {
		_1aa3422b9_pushCrossCycleError(_self_, &(_5917_owner), &(_58134_imp), &((*((*(_58153_decl))))._field_Token));
		return false;;
	};
	if (((*(_5917_owner))._field_owner != nullptr)) {
		_5917_owner=(*_5917_owner.alloc)._field_owner;
		goto _julec_label_1bc102155;
	};
	return true;;
}



inline void _1aa342ad3_checkPackageAccessibility(_1aa33d6e4_symbolBuilder* _self_, jule::Ptr<_1aa313785_UseDecl>* _61242_decl, jule::Str* _61259_mod, jule::Str* _61270_path) {
	if (((((_1aa397d25_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1aa396d8a_GetModPath((*(_self_))._field_importer.data) != (*(_61259_mod))) && _1ed477675_Contains((*(_61270_path)), jule::Str::lit("internal", 8)))) {
		_1aa33e1d9_pushErr(_self_, &((*((*(_61242_decl))))._field_Token), jule::Str::lit("you cannot access to internal packages", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1aa342ece_importPackage(jule::Ptr<_1aa33d6e4_symbolBuilder> _self_, jule::Ptr<_1aa39b0ae_ImportInfo>* _61835_imp, jule::Ptr<_1aa313785_UseDecl>* _61858_decl) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_61835_imp))))._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1aa39b0ae_ImportInfo> _6237_port = ((_1aa397d25_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1aa39751c_GetImport((*(_self_))._field_importer.data, (*((*(_61835_imp))))._field_Path);;
	if ((_6237_port != nullptr)) {
		(*((*(_61835_imp))))._field_Package=(*_6237_port.alloc)._field_Package;
		(*((*(_61835_imp))))._field_Duplicate=true;
		jule::Str _6284_oldMod = ((_1aa397d25_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1aa396d8a_GetModPath((*_self_.alloc)._field_importer.data);;
		((_1aa397d25_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1aa396b04_SetModPath((*_self_.alloc)._field_importer.data, ((_1aa397d25_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1aa3971cb_ModById((*_self_.alloc)._field_importer.data, (*((*(_61835_imp))))._field_ModId));
		_1aa342ad3_checkPackageAccessibility(_self_, _61858_decl, &(_6284_oldMod), &((*_6237_port.alloc)._field_Path));
		((_1aa397d25_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1aa396b04_SetModPath((*_self_.alloc)._field_importer.data, _6284_oldMod);
	} else {
		if ((!(_1aa3426b5_checkImportCycles(_self_, (*(_61835_imp)), _61858_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _6374_oldMod = ((_1aa397d25_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1aa396d8a_GetModPath((*_self_.alloc)._field_importer.data);;
		__JULE_DEFER({
			((_1aa397d25_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1aa396b04_SetModPath((*_self_.alloc)._field_importer.data, _6374_oldMod);
		});;
		if ((*((*(_61835_imp))))._field_Std) {
			((_1aa397d25_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1aa396b04_SetModPath((*_self_.alloc)._field_importer.data, _1adc46e51_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1aa2e876a_AST>> _6428_asts;
		jule::Slice<_1ada72b17_Log> _64218_errors;
		({
			__jule_tuple_sx_1aa2e876a_AST__jule_tuple_s_1ada72b17_Log __jule_assign_result = ((_1aa397d25_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1aa397918_ImportPackage((*_self_.alloc)._field_importer.data, (*((*(_61835_imp))))._field_Path, (!((*((*(_61835_imp))))._field_Std)));
			_6428_asts = __jule_assign_result.__jule_result_arg0;
			_64218_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_64218_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_64218_errors);
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1aa342ad3_checkPackageAccessibility(_self_, _61858_decl, &(_6374_oldMod), &((*((*(_61835_imp))))._field_Path));
		{
			auto expr = &(_6428_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc10d56d:;
			if (it != expr_end) {
				jule::Ptr<_1aa2e876a_AST> _65016_ast = *it;
				{
					jule::Ptr<_1aa4475cd_SymbolTable> _65113_table = nullptr;;
					({
						__jule_tuple_x_1aa4475cd_SymbolTable__jule_tuple_s_1ada72b17_Log __jule_assign_result = _1a603b56c_buildSymbols(&(_65016_ast), &((*_self_.alloc)._field_importer), _self_);
						_65113_table = __jule_assign_result.__jule_result_arg0;
						_64218_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_64218_errors.len() > 0LL)) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_64218_errors);
						__jule_func_result = false;
						return __jule_func_result;;
					};
					(*((*((*(_61835_imp))))._field_Package))._field_Files=jule::append((*(*((*(_61835_imp))))._field_Package.alloc)._field_Files,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa4475cd_SymbolTable>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _65113_table; __jule_collection; }));
				}
				_iter_next_1bc10d56d:;
				++it;
				goto _iter_begin_1bc10d56d;
			}
			_iter_end_1bc10d56d:;
		};
	};
	_1aa34163c_implImportSelections(_self_, _61835_imp, _61858_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1aa39b0ae_ImportInfo> _1aa343320_importUseDecl(jule::Ptr<_1aa33d6e4_symbolBuilder> _self_, jule::Ptr<_1aa313785_UseDecl>* _66535_decl) {
	jule::Ptr<_1aa39b0ae_ImportInfo> _6667_imp = _1aa340b47_buildImport(_self_, _66535_decl);;
	if ((_6667_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _6717_ok = _1aa3412c9_checkDuplicateUseDecl(_self_, &(_6667_imp));;
	if ((!(_6717_ok))) {
		return nullptr;;
	};
	_6717_ok=_1aa342ece_importPackage(_self_, &(_6667_imp), _66535_decl);
	(*((*_self_.alloc)._field_table))._field_Imports=jule::append((*(*(_self_))._field_table.alloc)._field_Imports,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa39b0ae_ImportInfo>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6667_imp; __jule_collection; }));
	if (_6717_ok) {
		((_1aa397d25_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1aa397bc1_Imported((*_self_.alloc)._field_importer.data, _6667_imp);
		return _6667_imp;;
	};
	return nullptr;;
}



inline void _1aa34351d_importUseDecls(jule::Ptr<_1aa33d6e4_symbolBuilder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ast))._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc114211:;
		if (it != expr_end) {
			jule::Ptr<_1aa313785_UseDecl> _68515_decl = *it;
			{
				_1aa343320_importUseDecl(_self_, &(_68515_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					goto _iter_end_1bc114211;
				};
			}
			_iter_next_1bc114211:;
			++it;
			goto _iter_begin_1bc114211;
		}
		_iter_end_1bc114211:;
	};
}



inline void _1aa3437c6_appendNode(_1aa33d6e4_symbolBuilder* _self_, _1aa2e967d_Node* _69431_node) {
	{
		auto &_match_expr{ (*(_69431_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1bc11472d:;
			{
				(*((*(_self_))._field_table))._field_Impls=jule::append((*(*(_self_))._field_table.alloc)._field_Impls,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa37374b_Impl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1aa33d12d_buildImpl((*(_69431_node))._field_Data.cast_ptr<_1aa3172e4_Impl>(&__jule_any_type11)); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1bc115773:;
			{
				jule::Ptr<_1a6019858_TypeAlias> _6998_ta = _1aa339679_buildTypeAlias((*(_69431_node))._field_Data.cast_ptr<_1aa31219b_TypeAliasDecl>(&__jule_any_type12));;
				(*((*(_self_))._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6998_ta; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1bc1157d9:;
			{
				jule::Ptr<_1aa31b518_Struct> _7028_srct = _1aa33a01a_buildStruct((*(_69431_node))._field_Data.cast_ptr<_1aa316447_StructDecl>(&__jule_any_type13));;
				(*((*(_self_))._field_table))._field_Structs=jule::append((*(*(_self_))._field_table.alloc)._field_Structs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa31b518_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7028_srct; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1bc115850:;
			{
				jule::Ptr<_1aa3315b6_Fn> _7058_f = _1aa33abb9_buildFunc((*(_69431_node))._field_Data.cast_ptr<_1aa30c33e_FnDecl>(&__jule_any_type14));;
				(*((*(_self_))._field_table))._field_Funcs=jule::append((*(*(_self_))._field_table.alloc)._field_Funcs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa3315b6_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7058_f; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1bc1158b6:;
			{
				jule::Ptr<_1aa345047_Trait> _7088_t = _1aa33b516_buildTrait((*(_69431_node))._field_Data.cast_ptr<_1aa316b84_TraitDecl>(&__jule_any_type15));;
				(*((*(_self_))._field_table))._field_Traits=jule::append((*(*(_self_))._field_table.alloc)._field_Traits,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa345047_Trait>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7088_t; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1bc11592c:;
			{
				jule::Ptr<_1aa3e4d3e_Var> _7118_v = _1aa33ca9a_buildVar((*(_69431_node))._field_Data.cast_ptr<_1aa30d4e9_VarDecl>(&__jule_any_type16));;
				(*((*(_self_))._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7118_v; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1bc11606a:;
			{
				jule::Ptr<_1aa347753_Enum> _7148_e = _1aa33c094_buildEnum((*(_69431_node))._field_Data.cast_ptr<_1aa3147ec_EnumDecl>(&__jule_any_type17));;
				(*((*(_self_))._field_table))._field_Enums=jule::append((*(*(_self_))._field_table.alloc)._field_Enums,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa347753_Enum>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7148_e; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1bc1160d1:;
			{
				jule::Ptr<_1aa348e5d_TypeEnum> _7178_e = _1aa33c7d1_buildTypeEnum((*(_69431_node))._field_Data.cast_ptr<_1aa315787_TypeEnumDecl>(&__jule_any_type18));;
				(*((*(_self_))._field_table))._field_TypeEnums=jule::append((*(*(_self_))._field_table.alloc)._field_TypeEnums,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa348e5d_TypeEnum>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7178_e; __jule_collection; }));
			}
		}
		else {
			_case_begin_1bc115663:;
			{
				_1aa33e1d9_pushErr(_self_, &((*(_69431_node))._field_Token), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bc11560d:;
	};
}



inline void _1aa3439c4_appendNodes(_1aa33d6e4_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc120360:;
		if (it != expr_end) {
			_1aa2e967d_Node _72515_node = *it;
			{
				_1aa3437c6_appendNode(_self_, &(_72515_node));
			}
			_iter_next_1bc120360:;
			++it;
			goto _iter_begin_1bc120360;
		}
		_iter_end_1bc120360:;
	};
}



inline void _1aa343c7c_pushDirectivePass(_1aa33d6e4_symbolBuilder* _self_, jule::Ptr<_1aa2e9a9b_Directive>* _73038_d) {
	if (((*((*(_73038_d))))._field_Args.len() == 0LL)) {
		_1aa33e1d9_pushErr(_self_, &((*((*(_73038_d))))._field_Tag), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_73038_d))))._field_Args.len() > 1LL)) {
		jule::Ptr<_1aa2d51c4_Token> _7354_arg = (*((*(_73038_d))))._field_Args[1LL];;
		_1aa33e1d9_pushErr(_self_, &(_7354_arg), jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_73038_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1aa2d51c4_Token> _7393_arg = (*((*(_73038_d))))._field_Args[0LL];;
	if (((*(_7393_arg))._field_Id != static_cast<jule::U32>(4LLU))) {
		_1aa33e1d9_pushErr(_self_, &(_7393_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_7393_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1aa33e1d9_pushErr(_self_, &(_7393_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_self_))._field_table))._field_Passes=jule::append((*(*(_self_))._field_table.alloc)._field_Passes,({ auto __jule_collection = jule::Slice<_1aa338c3e_Pass>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1aa338c3e_Pass{._field_Token=(*((*(_73038_d))))._field_Tag, ._field_Text=(*_7393_arg.alloc)._field_Kind.slice(1LL, ((*_7393_arg.alloc)._field_Kind.len() - 1LL))}; __jule_collection; }));
}



inline void _1aa343e7a_appendTopDirectives(_1aa33d6e4_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc1259c5:;
		if (it != expr_end) {
			jule::Ptr<_1aa2e9a9b_Directive> _75715_d = *it;
			{
				{
					auto &_match_expr{ (*((*(_75715_d))._field_Tag))._field_Kind };
					
					if (_match_expr == jule::Str::lit("pass", 4)) {
						_case_begin_1bc127477:;
						{
							_1aa343c7c_pushDirectivePass(_self_, &(_75715_d));
						}
					}
					_match_end_1bc1273ab:;
				};
			}
			_iter_next_1bc1259c5:;
			++it;
			goto _iter_begin_1bc1259c5;
		}
		_iter_end_1bc1259c5:;
	};
}



inline void _1aa344178_build(jule::Ptr<_1aa33d6e4_symbolBuilder> _self_) {
	(*(_self_))._field_table=jule::new_ptr<_1aa4475cd_SymbolTable>(_1aa4475cd_SymbolTable{._field_File=(*((*_self_.alloc)._field_ast))._field_File, ._field_Passes=jule::Slice<_1aa338c3e_Pass>(nullptr), ._field_Imports=jule::Slice<jule::Ptr<_1aa39b0ae_ImportInfo>>(nullptr), ._field_Vars=jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>(nullptr), ._field_TypeAliases=jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>(nullptr), ._field_Structs=jule::Slice<jule::Ptr<_1aa31b518_Struct>>(nullptr), ._field_Funcs=jule::Slice<jule::Ptr<_1aa3315b6_Fn>>(nullptr), ._field_Traits=jule::Slice<jule::Ptr<_1aa345047_Trait>>(nullptr), ._field_Enums=jule::Slice<jule::Ptr<_1aa347753_Enum>>(nullptr), ._field_TypeEnums=jule::Slice<jule::Ptr<_1aa348e5d_TypeEnum>>(nullptr), ._field_Impls=jule::Slice<jule::Ptr<_1aa37374b_Impl>>(nullptr)});
	_1aa343e7a_appendTopDirectives(_self_);
	_1aa34351d_importUseDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	_1aa3439c4_appendNodes(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1aa33d6e4_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1aa345443_Str(_1aa345047_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1aa345784_Equal(jule::Ptr<_1aa345047_Trait> _self_, jule::Ptr<_1a601a64a_TypeKind> _2518_other) {
	jule::Ptr<_1aa345047_Trait> _263_trt = _1a601e60a_Trait(_2518_other.ptr());;
	return (_self_ == _263_trt);;
}



inline jule::Ptr<_1aa3315b6_Fn> _1aa345c29_FindMethod(_1aa345047_Trait* _self_, jule::Str _3426_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc12ad4e:;
		if (it != expr_end) {
			jule::Ptr<_1aa3315b6_Fn> _3515_f = *it;
			{
				if (((*(_3515_f))._field_Ident == _3426_ident)) {
					return _3515_f;;
				};
			}
			_iter_next_1bc12ad4e:;
			++it;
			goto _iter_begin_1bc12ad4e;
		}
		_iter_end_1bc12ad4e:;
	};
	return _1aa3463ab_findMethodInherit(_self_, &(_3426_ident));;
}



inline jule::Ptr<_1aa3315b6_Fn> _1aa3463ab_findMethodInherit(_1aa345047_Trait* _self_, jule::Str* _5534_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc12d071:;
		if (it != expr_end) {
			jule::Ptr<_1a6022d5b_TypeSymbol> _5615_i = *it;
			{
				if (((*(_5615_i))._field_Kind == nullptr)) {
					goto _iter_next_1bc12d071;
				};
				jule::Ptr<_1aa345047_Trait> _608_t = _1a601e60a_Trait((*_5615_i.alloc)._field_Kind.ptr());;
				if ((_608_t != nullptr)) {
					jule::Ptr<_1aa3315b6_Fn> _629_f2 = _1aa345c29_FindMethod(_608_t, (*(_5534_ident)));;
					if ((_629_f2 != nullptr)) {
						return _629_f2;;
					};
				};
			}
			_iter_next_1bc12d071:;
			++it;
			goto _iter_begin_1bc12d071;
		}
		_iter_end_1bc12d071:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa345047_Trait _Src) {
	_Stream << _1aa345443_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1aa346bd6_EnumItem_eq(_1aa346bd6_EnumItem *_self_, _1aa346bd6_EnumItem _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Value == _self_->_field_Value);
}

inline jule::Bool _1aa3470c1_AutoExpr(_1aa346bd6_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa346bd6_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1aa347b0a_Str(_1aa347753_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1aa347e4b_Equal(jule::Ptr<_1aa347753_Enum> _self_, jule::Ptr<_1a601a64a_TypeKind> _3818_other) {
	jule::Ptr<_1aa347753_Enum> _393_enm = _1a601d5a4_Enum(_3818_other.ptr());;
	return (_self_ == _393_enm);;
}



inline jule::Ptr<_1aa346bd6_EnumItem> _1aa34837a_FindItem(_1aa347753_Enum* _self_, jule::Str _4724_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc13277e:;
		if (it != expr_end) {
			jule::Ptr<_1aa346bd6_EnumItem> _4815_item = *it;
			{
				if (((*(_4815_item))._field_Ident == _4724_ident)) {
					return _4815_item;;
				};
			}
			_iter_next_1bc13277e:;
			++it;
			goto _iter_begin_1bc13277e;
		}
		_iter_end_1bc13277e:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa347753_Enum _Src) {
	_Stream << _1aa347b0a_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1aa348886_TypeEnumItem_eq(_1aa348886_TypeEnumItem *_self_, _1aa348886_TypeEnumItem _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa348886_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1aa3492d2_Str(_1aa348e5d_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1aa349623_Equal(jule::Ptr<_1aa348e5d_TypeEnum> _self_, jule::Ptr<_1a601a64a_TypeKind> _8018_other) {
	jule::Ptr<_1aa348e5d_TypeEnum> _813_tenm = _1a601d83a_TypeEnum(_8018_other.ptr());;
	return (_self_ == _813_tenm);;
}



inline jule::Ptr<_1aa348886_TypeEnumItem> _1aa349a52_FindItem(_1aa348e5d_TypeEnum* _self_, jule::Str _8924_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc134a06:;
		if (it != expr_end) {
			jule::Ptr<_1aa348886_TypeEnumItem> _9015_item = *it;
			{
				if (((*(_9015_item))._field_Ident == _8924_ident)) {
					return _9015_item;;
				};
			}
			_iter_next_1bc134a06:;
			++it;
			goto _iter_begin_1bc134a06;
		}
		_iter_end_1bc134a06:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa348e5d_TypeEnum _Src) {
	_Stream << _1aa3492d2_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1aa34c14d_comptimeRange_eq(_1aa34c14d_comptimeRange *_self_, _1aa34c14d_comptimeRange _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind);
}

inline jule::Str _1aa34c505_Str(_1aa34c14d_comptimeRange* _self_) {
	return jule::Str::lit("comptimeRange", 13);;
}



inline jule::Bool _1aa34c846_Equal(jule::Ptr<_1aa34c14d_comptimeRange> _self_, jule::Ptr<_1a601a64a_TypeKind> _3618_other) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa34c14d_comptimeRange _Src) {
	_Stream << _1aa34c505_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1aa34cb21_comptimeStructField_eq(_1aa34cb21_comptimeStructField *_self_, _1aa34cb21_comptimeStructField _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1aa34d01c_Str(_1aa34cb21_comptimeStructField* _self_) {
	return jule::Str::lit("comptimeStructField", 19);;
}



inline jule::Bool _1aa34d35d_Equal(jule::Ptr<_1aa34cb21_comptimeStructField> _self_, jule::Ptr<_1a601a64a_TypeKind> _4618_other) {
	return false;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa34d8e1__Decl(jule::Ptr<_1aa34cb21_comptimeStructField> _self_, jule::Ptr<_1aa44e9c0_eval>* _5027_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _5042_fc) {
	if (((*((*(_5042_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_5027_e)).ptr(), (*((*((*(_5042_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aa369841_comptimeDecl>(_1aa369841_comptimeDecl{._field_decl=jule::Any((*((*(_self_))._field_field))._field_Decl, &__jule_any_type19)}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa34dcdc__Type(jule::Ptr<_1aa34cb21_comptimeStructField> _self_, jule::Ptr<_1aa44e9c0_eval>* _6227_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _6242_fc) {
	if (((*((*(_6242_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_6227_e)).ptr(), (*((*((*(_6242_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1aa36e3b2_buildComptimeTypeInfoData(&((*((*(_6227_e))))._field_s), &((*((*(_self_))._field_field))._field_Kind));;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa34e0ea_subIdent(jule::Ptr<_1aa34cb21_comptimeStructField> _self_, jule::Str* _7026_ident) {
	{
		auto &_match_expr{ (*(_7026_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1bc13e769:;
			{
				jule::Ptr<_1aa334597_FnIns> _738_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bc1409ac, jule::Ptr<__jule_anon_1bc1409ac_ctx>::make(__jule_anon_1bc1409ac_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bc1409ac_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_738_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1bc13e802:;
			{
				jule::Ptr<_1aa334597_FnIns> _808_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bc142915, jule::Ptr<__jule_anon_1bc142915_ctx>::make(__jule_anon_1bc142915_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bc142915_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_808_method));;
			}
		}
		else {
			_case_begin_1bc13e59e:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc13e6c0:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1aa34cb21_comptimeStructField _Src) {
	_Stream << _1aa34d01c_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aa34e77c_Str(_1aa34e3c5_comptimeStructFields* _self_) {
	return jule::Str::lit("comptimeStructFields", 20);;
}



inline jule::Bool _1aa34eabd_Equal(jule::Ptr<_1aa34e3c5_comptimeStructFields> _self_, jule::Ptr<_1a601a64a_TypeKind> _9918_other) {
	return false;;
}



inline void _1aa350041_ready(_1aa34e3c5_comptimeStructFields* _self_, jule::Ptr<_1aa3e4d3e_Var>* _10326_keyA, jule::Ptr<_1aa3e4d3e_Var>* _10343_keyB) {
	if (((*(_10326_keyA)) != nullptr)) {
		(*((*(_10326_keyA))))._field_Constant=true;
		(*((*(_10326_keyA))))._field_Value=jule::new_ptr<_1aa44de20_Value>(_1aa44de20_Value{._field_Expr=jule::Ptr<_1aa2ee9b3_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)})});
		(*((*(_10326_keyA))))._field_Kind=(*(_1aa5e00b1_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_10343_keyB)) != nullptr)) {
		(*((*(_10343_keyB))))._field_Constant=true;
		(*((*(_10343_keyB))))._field_Value=jule::new_ptr<_1aa44de20_Value>(_1aa44de20_Value{._field_Expr=jule::Ptr<_1aa2ee9b3_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)})});
		(*((*(_10343_keyB))))._field_Kind=jule::new_ptr<_1a6022d5b_TypeSymbol>(_1a6022d5b_TypeSymbol{._field_Decl=jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aa34cb21_comptimeStructField>(_1aa34cb21_comptimeStructField{._field_field=jule::Ptr<_1aa31d7c3_FieldIns>(nullptr)}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data6)})});
	};
}



inline void _1aa35045e_step(_1aa34e3c5_comptimeStructFields* _self_, jule::I32 _12420_i, jule::Ptr<_1aa3e4d3e_Var>* _12433_keyA, jule::Ptr<_1aa3e4d3e_Var>* _12450_keyB) {
	if (((*(_12433_keyA)) != nullptr)) {
		(*((*((*((*(_12433_keyA))))._field_Value))._field_Data))._field_Constant=static__1a6e77a07_NewI64(static_cast<jule::I64>(_12420_i));
		(*(*((*((*(_12433_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_12433_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*(_12450_keyB)) != nullptr)) {
		(*(_1a60203ca_comptimeStructField((*((*((*(_12450_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_12420_i];
	};
}



inline jule::I32 _1aa3506e5_len(_1aa34e3c5_comptimeStructFields* _self_) {
	return (*(_self_))._field_fields.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa34e3c5_comptimeStructFields _Src) {
	_Stream << _1aa34e77c_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1aa3509c0_comptimeStatic_eq(_1aa3509c0_comptimeStatic *_self_, _1aa3509c0_comptimeStatic _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1aa350d77_Str(_1aa3509c0_comptimeStatic* _self_) {
	return jule::Str::lit("comptimeStatic", 14);;
}



inline jule::Bool _1aa3511b8_Equal(jule::Ptr<_1aa3509c0_comptimeStatic> _self_, jule::Ptr<_1a601a64a_TypeKind> _14818_other) {
	return false;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa3517d4__Decl(jule::Ptr<_1aa3509c0_comptimeStatic> _self_, jule::Ptr<_1aa44e9c0_eval>* _15227_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _15242_fc) {
	if (((*((*(_15242_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_15227_e)).ptr(), (*((*((*(_15242_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aa369841_comptimeDecl>(_1aa369841_comptimeDecl{._field_decl=jule::Any((*(_self_))._field_field, &__jule_any_type8)}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa351bd0__Type(jule::Ptr<_1aa3509c0_comptimeStatic> _self_, jule::Ptr<_1aa44e9c0_eval>* _16427_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _16442_fc) {
	if (((*((*(_16442_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_16427_e)).ptr(), (*((*((*(_16442_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1aa36e3b2_buildComptimeTypeInfoData(&((*((*(_16427_e))))._field_s), &((*((*((*(_self_))._field_field))._field_Kind))._field_Kind));;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa352021_subIdent(jule::Ptr<_1aa3509c0_comptimeStatic> _self_, jule::Str* _17226_ident) {
	{
		auto &_match_expr{ (*(_17226_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1bc1506e2:;
			{
				jule::Ptr<_1aa334597_FnIns> _1758_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bc151935, jule::Ptr<__jule_anon_1bc151935_ctx>::make(__jule_anon_1bc151935_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bc151935_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_1758_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1bc15077a:;
			{
				jule::Ptr<_1aa334597_FnIns> _1828_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bc15388d, jule::Ptr<__jule_anon_1bc15388d_ctx>::make(__jule_anon_1bc15388d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bc15388d_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_1828_method));;
			}
		}
		else {
			_case_begin_1bc150527:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc150648:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1aa3509c0_comptimeStatic _Src) {
	_Stream << _1aa350d77_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aa35262b_Str(_1aa352274_comptimeStatics* _self_) {
	return jule::Str::lit("comptimeStatics", 15);;
}



inline jule::Bool _1aa35296c_Equal(jule::Ptr<_1aa352274_comptimeStatics> _self_, jule::Ptr<_1a601a64a_TypeKind> _20118_other) {
	return false;;
}



inline void _1aa352de0_ready(_1aa352274_comptimeStatics* _self_, jule::Ptr<_1aa3e4d3e_Var>* _20526_keyA, jule::Ptr<_1aa3e4d3e_Var>* _20543_keyB) {
	if (((*(_20526_keyA)) != nullptr)) {
		(*((*(_20526_keyA))))._field_Constant=true;
		(*((*(_20526_keyA))))._field_Value=jule::new_ptr<_1aa44de20_Value>(_1aa44de20_Value{._field_Expr=jule::Ptr<_1aa2ee9b3_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)})});
		(*((*(_20526_keyA))))._field_Kind=(*(_1aa5e00b1_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_20543_keyB)) != nullptr)) {
		(*((*(_20543_keyB))))._field_Constant=true;
		(*((*(_20543_keyB))))._field_Value=jule::new_ptr<_1aa44de20_Value>(_1aa44de20_Value{._field_Expr=jule::Ptr<_1aa2ee9b3_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)})});
		(*((*(_20543_keyB))))._field_Kind=jule::new_ptr<_1a6022d5b_TypeSymbol>(_1a6022d5b_TypeSymbol{._field_Decl=jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aa3509c0_comptimeStatic>(_1aa3509c0_comptimeStatic{._field_field=jule::Ptr<_1aa3e4d3e_Var>(nullptr)}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data8)})});
	};
}



inline void _1aa35330d_step(_1aa352274_comptimeStatics* _self_, jule::I32 _22620_i, jule::Ptr<_1aa3e4d3e_Var>* _22633_keyA, jule::Ptr<_1aa3e4d3e_Var>* _22650_keyB) {
	if (((*(_22633_keyA)) != nullptr)) {
		(*((*((*((*(_22633_keyA))))._field_Value))._field_Data))._field_Constant=static__1a6e77a07_NewI64(static_cast<jule::I64>(_22620_i));
		(*(*((*((*(_22633_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_22633_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*(_22650_keyB)) != nullptr)) {
		(*(_1a6021bd4_comptimeStatic((*((*((*(_22650_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_22620_i];
	};
}



inline jule::I32 _1aa353594_len(_1aa352274_comptimeStatics* _self_) {
	return (*(_self_))._field_fields.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa352274_comptimeStatics _Src) {
	_Stream << _1aa35262b_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1aa35386e_comptimeEnumField_eq(_1aa35386e_comptimeEnumField *_self_, _1aa35386e_comptimeEnumField _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1aa353d36_Str(_1aa35386e_comptimeEnumField* _self_) {
	return jule::Str::lit("comptimeEnumField", 17);;
}



inline jule::Bool _1aa354177_Equal(jule::Ptr<_1aa35386e_comptimeEnumField> _self_, jule::Ptr<_1a601a64a_TypeKind> _25018_other) {
	return false;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa3545ea__Decl(jule::Ptr<_1aa35386e_comptimeEnumField> _self_, jule::Ptr<_1aa44e9c0_eval>* _25427_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _25442_fc) {
	if (((*((*(_25442_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_25427_e)).ptr(), (*((*((*(_25442_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aa369841_comptimeDecl>(_1aa369841_comptimeDecl{._field_decl=jule::Any((*(_self_))._field_field, &__jule_any_type21)}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa35493b_subIdent(jule::Ptr<_1aa35386e_comptimeEnumField> _self_, jule::Str* _26626_ident) {
	{
		auto &_match_expr{ (*(_26626_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1bc15e206:;
			{
				jule::Ptr<_1aa334597_FnIns> _2698_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bc1603b1, jule::Ptr<__jule_anon_1bc1603b1_ctx>::make(__jule_anon_1bc1603b1_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bc1603b1_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_2698_method));;
			}
		}
		else {
			_case_begin_1bc15d25a:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc15e15c:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1aa35386e_comptimeEnumField _Src) {
	_Stream << _1aa353d36_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aa3550bd_Str(_1aa354c16_comptimeEnumFields* _self_) {
	return jule::Str::lit("comptimeEnumFields", 18);;
}



inline jule::Bool _1aa35540e_Equal(jule::Ptr<_1aa354c16_comptimeEnumFields> _self_, jule::Ptr<_1a601a64a_TypeKind> _28818_other) {
	return false;;
}



inline void _1aa355882_ready(_1aa354c16_comptimeEnumFields* _self_, jule::Ptr<_1aa3e4d3e_Var>* _29226_keyA, jule::Ptr<_1aa3e4d3e_Var>* _29243_keyB) {
	if (((*(_29226_keyA)) != nullptr)) {
		(*((*(_29226_keyA))))._field_Constant=true;
		(*((*(_29226_keyA))))._field_Value=jule::new_ptr<_1aa44de20_Value>(_1aa44de20_Value{._field_Expr=jule::Ptr<_1aa2ee9b3_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)})});
		(*((*(_29226_keyA))))._field_Kind=(*(_1aa5e00b1_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_29243_keyB)) != nullptr)) {
		(*((*(_29243_keyB))))._field_Constant=true;
		(*((*(_29243_keyB))))._field_Value=jule::new_ptr<_1aa44de20_Value>(_1aa44de20_Value{._field_Expr=jule::Ptr<_1aa2ee9b3_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)})});
		(*((*(_29243_keyB))))._field_Kind=jule::new_ptr<_1a6022d5b_TypeSymbol>(_1a6022d5b_TypeSymbol{._field_Decl=jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aa35386e_comptimeEnumField>(_1aa35386e_comptimeEnumField{._field_field=jule::Ptr<_1aa346bd6_EnumItem>(nullptr)}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data10)})});
	};
}



inline void _1aa355ca0_step(_1aa354c16_comptimeEnumFields* _self_, jule::I32 _31320_i, jule::Ptr<_1aa3e4d3e_Var>* _31333_keyA, jule::Ptr<_1aa3e4d3e_Var>* _31350_keyB) {
	if (((*(_31333_keyA)) != nullptr)) {
		(*((*((*((*(_31333_keyA))))._field_Value))._field_Data))._field_Constant=static__1a6e77a07_NewI64(static_cast<jule::I64>(_31320_i));
		(*(*((*((*(_31333_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_31333_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*(_31350_keyB)) != nullptr)) {
		(*(_1a60208e7_comptimeEnumField((*((*((*(_31350_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_31320_i];
	};
}



inline jule::I32 _1aa356036_len(_1aa354c16_comptimeEnumFields* _self_) {
	return (*(_self_))._field_fields.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa354c16_comptimeEnumFields _Src) {
	_Stream << _1aa3550bd_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1aa356311_comptimeParam_eq(_1aa356311_comptimeParam *_self_, _1aa356311_comptimeParam _other_) {
	return 
		(_self_->_field_param == _other_._field_param);
}

inline jule::Str _1aa3566b8_Str(_1aa356311_comptimeParam* _self_) {
	return jule::Str::lit("comptimeParam", 13);;
}



inline jule::Bool _1aa356a09_Equal(jule::Ptr<_1aa356311_comptimeParam> _self_, jule::Ptr<_1a601a64a_TypeKind> _33718_other) {
	return false;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa357257__Decl(jule::Ptr<_1aa356311_comptimeParam> _self_, jule::Ptr<_1aa44e9c0_eval>* _34127_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _34142_fc) {
	if (((*((*(_34142_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_34127_e)).ptr(), (*((*((*(_34142_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aa369841_comptimeDecl>(_1aa369841_comptimeDecl{._field_decl=jule::Any((*((*(_self_))._field_param))._field_Decl, &__jule_any_type22)}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa357653__Type(jule::Ptr<_1aa356311_comptimeParam> _self_, jule::Ptr<_1aa44e9c0_eval>* _35327_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _35342_fc) {
	if (((*((*(_35342_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_35327_e)).ptr(), (*((*((*(_35342_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1aa36e3b2_buildComptimeTypeInfoData(&((*((*(_35327_e))))._field_s), &((*((*(_self_))._field_param))._field_Kind));;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa357a4e__Recv(jule::Ptr<_1aa356311_comptimeParam> _self_, jule::Ptr<_1aa44e9c0_eval>* _36127_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _36142_fc) {
	if (((*((*(_36142_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_36127_e)).ptr(), (*((*((*(_36142_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Recv", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a6e77584_Const> _3667_constant = static__1a6e7808a_NewBool(_1aa330241_IsSelf((*((*(_self_))._field_param))._field_Decl.ptr()));;
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc333_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_3667_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_3667_constant});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa357d90_subIdent(jule::Ptr<_1aa356311_comptimeParam> _self_, jule::Str* _37426_ident) {
	{
		auto &_match_expr{ (*(_37426_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1bc170cb7:;
			{
				jule::Ptr<_1aa334597_FnIns> _3778_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bc1720a4, jule::Ptr<__jule_anon_1bc1720a4_ctx>::make(__jule_anon_1bc1720a4_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bc1720a4_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_3778_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Recv", 4)) {
			_case_begin_1bc170d61:;
			{
				jule::Ptr<_1aa334597_FnIns> _3848_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bc17400c, jule::Ptr<__jule_anon_1bc17400c_ctx>::make(__jule_anon_1bc17400c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bc17400c_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_3848_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1bc170dd8:;
			{
				jule::Ptr<_1aa334597_FnIns> _3918_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bc175e65, jule::Ptr<__jule_anon_1bc175e65_ctx>::make(__jule_anon_1bc175e65_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bc175e65_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_3918_method));;
			}
		}
		else {
			_case_begin_1bc1709cb:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc170b52:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1aa356311_comptimeParam _Src) {
	_Stream << _1aa3566b8_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aa358412_Str(_1aa35808d_comptimeParams* _self_) {
	return jule::Str::lit("comptimeParams", 14);;
}



inline jule::Bool _1aa358753_Equal(jule::Ptr<_1aa35808d_comptimeParams> _self_, jule::Ptr<_1a601a64a_TypeKind> _41018_other) {
	return false;;
}



inline void _1aa358bc6_ready(_1aa35808d_comptimeParams* _self_, jule::Ptr<_1aa3e4d3e_Var>* _41426_keyA, jule::Ptr<_1aa3e4d3e_Var>* _41443_keyB) {
	if (((*(_41426_keyA)) != nullptr)) {
		(*((*(_41426_keyA))))._field_Constant=true;
		(*((*(_41426_keyA))))._field_Value=jule::new_ptr<_1aa44de20_Value>(_1aa44de20_Value{._field_Expr=jule::Ptr<_1aa2ee9b3_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)})});
		(*((*(_41426_keyA))))._field_Kind=(*(_1aa5e00b1_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_41443_keyB)) != nullptr)) {
		(*((*(_41443_keyB))))._field_Constant=true;
		(*((*(_41443_keyB))))._field_Value=jule::new_ptr<_1aa44de20_Value>(_1aa44de20_Value{._field_Expr=jule::Ptr<_1aa2ee9b3_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)})});
		(*((*(_41443_keyB))))._field_Kind=jule::new_ptr<_1a6022d5b_TypeSymbol>(_1a6022d5b_TypeSymbol{._field_Decl=jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aa356311_comptimeParam>(_1aa356311_comptimeParam{._field_param=jule::Ptr<_1aa33351e_ParamIns>(nullptr)}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data12)})});
	};
}



inline void _1aa3590e4_step(_1aa35808d_comptimeParams* _self_, jule::I32 _43520_i, jule::Ptr<_1aa3e4d3e_Var>* _43533_keyA, jule::Ptr<_1aa3e4d3e_Var>* _43550_keyB) {
	if (((*(_43533_keyA)) != nullptr)) {
		(*((*((*((*(_43533_keyA))))._field_Value))._field_Data))._field_Constant=static__1a6e77a07_NewI64(static_cast<jule::I64>(_43520_i));
		(*(*((*((*(_43533_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_43533_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*(_43550_keyB)) != nullptr)) {
		(*(_1a6020e14_comptimeParam((*((*((*(_43550_keyB))))._field_Kind))._field_Kind.ptr())))._field_param=(*(_self_))._field_params[_43520_i];
	};
}



inline jule::I32 _1aa35937a_len(_1aa35808d_comptimeParams* _self_) {
	return (*(_self_))._field_params.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa35808d_comptimeParams _Src) {
	_Stream << _1aa358412_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aa359a0c_Str(_1aa359655_comptimeTypeInfos* _self_) {
	return jule::Str::lit("comptimeTypeInfos", 17);;
}



inline jule::Bool _1aa359d4d_Equal(jule::Ptr<_1aa359655_comptimeTypeInfos> _self_, jule::Ptr<_1a601a64a_TypeKind> _45918_other) {
	return false;;
}



inline void _1aa35a2c1_ready(_1aa359655_comptimeTypeInfos* _self_, jule::Ptr<_1aa3e4d3e_Var>* _46326_keyA, jule::Ptr<_1aa3e4d3e_Var>* _46343_keyB) {
	if (((*(_46326_keyA)) != nullptr)) {
		(*((*(_46326_keyA))))._field_Constant=true;
		(*((*(_46326_keyA))))._field_Value=jule::new_ptr<_1aa44de20_Value>(_1aa44de20_Value{._field_Expr=jule::Ptr<_1aa2ee9b3_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)})});
		(*((*(_46326_keyA))))._field_Kind=(*(_1aa5e00b1_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_46343_keyB)) != nullptr)) {
		(*((*(_46343_keyB))))._field_Constant=true;
		(*((*(_46343_keyB))))._field_Value=jule::new_ptr<_1aa44de20_Value>(_1aa44de20_Value{._field_Expr=jule::Ptr<_1aa2ee9b3_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)})});
		(*((*(_46343_keyB))))._field_Kind=jule::new_ptr<_1a6022d5b_TypeSymbol>(_1a6022d5b_TypeSymbol{._field_Decl=jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aa35ac50_comptimeTypeInfo>(_1aa35ac50_comptimeTypeInfo{._field_base=jule::Ptr<_1a601a64a_TypeKind>(nullptr)}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data15)})});
	};
}



inline void _1aa35a6de_step(_1aa359655_comptimeTypeInfos* _self_, jule::I32 _48420_i, jule::Ptr<_1aa3e4d3e_Var>* _48433_keyA, jule::Ptr<_1aa3e4d3e_Var>* _48450_keyB) {
	if (((*(_48433_keyA)) != nullptr)) {
		(*((*((*((*(_48433_keyA))))._field_Value))._field_Data))._field_Constant=static__1a6e77a07_NewI64(static_cast<jule::I64>(_48420_i));
		(*(*((*((*(_48433_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_48433_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*(_48450_keyB)) != nullptr)) {
		(*((*((*((*(_48450_keyB))))._field_Kind))._field_Kind))._field_Kind=jule::Trait((*(_self_))._field_types[_48420_i], (jule::Trait::Type*)&_1a601a194_Kind_mptr_data15);
	};
}



inline jule::I32 _1aa35a975_len(_1aa359655_comptimeTypeInfos* _self_) {
	return (*(_self_))._field_types.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa359655_comptimeTypeInfos _Src) {
	_Stream << _1aa359a0c_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1aa35ac50_comptimeTypeInfo_eq(_1aa35ac50_comptimeTypeInfo *_self_, _1aa35ac50_comptimeTypeInfo _other_) {
	return 
		(_self_->_field_base == _other_._field_base);
}

inline jule::Str _1aa35b107_Str(_1aa35ac50_comptimeTypeInfo* _self_) {
	return ((jule::Str::lit("comptimeTypeInfo[", 17) + _1a601aa46_Str((*(_self_))._field_base.ptr())) + jule::Str::lit("]", 1));;
}



inline jule::Bool _1aa35b448_Equal(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1a601a64a_TypeKind> _50818_other) {
	return false;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa35ba86__Decl(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1aa44e9c0_eval>* _51227_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _51242_fc) {
	if (((*((*(_51242_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_51227_e)).ptr(), (*((*((*(_51242_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Any _5177_decl = jule::Any();;
	{
		
		if ((_1a601e374_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bc18cce5:;
			{
				_5177_decl=jule::Any((*(_1a601e374_Struct((*(_self_))._field_base)))._field_Decl, &__jule_any_type23);
			}
		}
		else if ((_1a601e60a_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bc18cd5b:;
			{
				_5177_decl=jule::Any(_1a601e60a_Trait((*(_self_))._field_base), &__jule_any_type10);
			}
		}
		else if ((_1a601d5a4_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bc18cdc2:;
			{
				_5177_decl=jule::Any(_1a601d5a4_Enum((*(_self_))._field_base), &__jule_any_type24);
			}
		}
		else if ((_1a601d83a_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bc18ce38:;
			{
				_5177_decl=jule::Any(_1a601d83a_TypeEnum((*(_self_))._field_base), &__jule_any_type25);
			}
		}
		else if ((_1a601e0dd_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bc18ce9e:;
			{
				jule::Ptr<_1aa334597_FnIns> _5288_f = _1a601e0dd_Fn((*(_self_))._field_base);;
				{
					
					if (_1aa335a60_IsBuiltin(_5288_f.ptr())) {
						_case_begin_1bc193e94:;
						{
							_1aa450053_pushErr((*(_51227_e)).ptr(), (*((*(_51242_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("<built-in function>", 19), &__jule_any_type4); __jule_collection; }));
							return nullptr;;
						}
					}
					else if (_1aa335ce6_IsAnon(_5288_f.ptr())) {
						_case_begin_1bc19403d:;
						{
							_1aa450053_pushErr((*(_51227_e)).ptr(), (*((*(_51242_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("<anonymous function>", 20), &__jule_any_type4); __jule_collection; }));
							return nullptr;;
						}
					}
					_match_end_1bc193e1c:;
				};
				_5177_decl=jule::Any((*(_5288_f))._field_Decl, &__jule_any_type26);
			}
		}
		else {
			_case_begin_1bc18cc7e:;
			{
				_1aa450053_pushErr((*(_51227_e)).ptr(), (*((*(_51242_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_self_))._field_base.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1bc18cb6e:;
	};
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aa369841_comptimeDecl>(_1aa369841_comptimeDecl{._field_decl=_5177_decl}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa35be82__Str(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1aa44e9c0_eval>* _54822_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _54837_fc) {
	if (((*((*(_54837_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_54822_e)).ptr(), (*((*((*(_54837_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Str", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a6e77584_Const> _5537_constant = static__1a6e78354_NewStr(_1a601aa46_Str((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc07a_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_5537_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_5537_constant});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa35c37d__Kind(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1aa44e9c0_eval>* _56127_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _56142_fc) {
	if (((*((*(_56142_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_56127_e)).ptr(), (*((*((*(_56142_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Kind", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa347753_Enum> _5667_enm = _1aa39cd4c_FindEnum(_1aa36e03d_findComptimePackage(&((*((*(_56127_e))))._field_s)).ptr(), jule::Str::lit("Kind", 4));;
	jule::Ptr<_1aa346bd6_EnumItem> _56711_item = nullptr;;
	{
		
		if (_1a601ba14_Void((*(_self_))._field_base.ptr())) {
			_case_begin_1bc19cc28:;
			{
				_56711_item=_1aa34837a_FindItem(_5667_enm.ptr(), jule::Str::lit("Void", 4));
			}
		}
		else if ((_1a601e374_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bc19cb3a:;
			{
				_56711_item=_1aa34837a_FindItem(_5667_enm.ptr(), jule::Str::lit("Struct", 6));
			}
		}
		else if ((_1a601e60a_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bc19c7e9:;
			{
				_56711_item=_1aa34837a_FindItem(_5667_enm.ptr(), jule::Str::lit("Trait", 5));
			}
		}
		else if ((_1a601d31d_Ptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bc19c860:;
			{
				if (_1a602b5c3_IsUnsafe(_1a601d31d_Ptr((*(_self_))._field_base).ptr())) {
					_56711_item=_1aa34837a_FindItem(_5667_enm.ptr(), jule::Str::lit("UnsafePtr", 9));
				} else {
					_56711_item=_1aa34837a_FindItem(_5667_enm.ptr(), jule::Str::lit("Ptr", 3));
				};
			}
		}
		else if ((_1a601d087_Sptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bc19c8c6:;
			{
				_56711_item=_1aa34837a_FindItem(_5667_enm.ptr(), jule::Str::lit("SmartPtr", 8));
			}
		}
		else if ((_1a601d5a4_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bc19c93c:;
			{
				_56711_item=_1aa34837a_FindItem(_5667_enm.ptr(), jule::Str::lit("Enum", 4));
			}
		}
		else if ((_1a601e891_Map((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bc19d487:;
			{
				_56711_item=_1aa34837a_FindItem(_5667_enm.ptr(), jule::Str::lit("Map", 3));
			}
		}
		else if ((_1a601dd57_Slc((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bc19d4ed:;
			{
				_56711_item=_1aa34837a_FindItem(_5667_enm.ptr(), jule::Str::lit("Slice", 5));
			}
		}
		else if ((_1a601dac1_Arr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bc19d564:;
			{
				_56711_item=_1aa34837a_FindItem(_5667_enm.ptr(), jule::Str::lit("Array", 5));
			}
		}
		else if ((_1a601e0dd_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bc19d5ca:;
			{
				_56711_item=_1aa34837a_FindItem(_5667_enm.ptr(), jule::Str::lit("Func", 4));
			}
		}
		else if ((_1a601eb27_Tup((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bc19d641:;
			{
				_56711_item=_1aa34837a_FindItem(_5667_enm.ptr(), jule::Str::lit("Tuple", 5));
			}
		}
		else if ((_1a601cd01_Prim((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bc19d6b8:;
			{
				jule::Ptr<_1a6023763_Prim> _5964_prim = _1a601cd01_Prim((*(_self_))._field_base);;
				{
					
					if (_1a6026eb4_IsAny(_5964_prim.ptr())) {
						_case_begin_1bc1a95e7:;
						{
							_56711_item=_1aa34837a_FindItem(_5667_enm.ptr(), jule::Str::lit("Any", 3));
						}
					}
					else if (_1a6026997_IsBool(_5964_prim.ptr())) {
						_case_begin_1bc1a9509:;
						{
							_56711_item=_1aa34837a_FindItem(_5667_enm.ptr(), jule::Str::lit("Bool", 4));
						}
					}
					else if (_1a6026c2d_IsStr(_5964_prim.ptr())) {
						_case_begin_1bc1a92ea:;
						{
							_56711_item=_1aa34837a_FindItem(_5667_enm.ptr(), jule::Str::lit("Str", 3));
						}
					}
					else if (_1a6025bc7_IsF32(_5964_prim.ptr())) {
						_case_begin_1bc1a9361:;
						{
							_56711_item=_1aa34837a_FindItem(_5667_enm.ptr(), jule::Str::lit("F32", 3));
						}
					}
					else if (_1a6025e5d_IsF64(_5964_prim.ptr())) {
						_case_begin_1bc1a93c7:;
						{
							_56711_item=_1aa34837a_FindItem(_5667_enm.ptr(), jule::Str::lit("F64", 3));
						}
					}
					else if (_1a6024654_IsI8(_5964_prim.ptr())) {
						_case_begin_1bc1a943d:;
						{
							_56711_item=_1aa34837a_FindItem(_5667_enm.ptr(), jule::Str::lit("I8", 2));
						}
					}
					else if (_1a60248da_IsI16(_5964_prim.ptr())) {
						_case_begin_1bc1a9d56:;
						{
							_56711_item=_1aa34837a_FindItem(_5667_enm.ptr(), jule::Str::lit("I16", 3));
						}
					}
					else if (_1a6024b71_IsI32(_5964_prim.ptr())) {
						_case_begin_1bc1a9dcd:;
						{
							_56711_item=_1aa34837a_FindItem(_5667_enm.ptr(), jule::Str::lit("I32", 3));
						}
					}
					else if (_1a6024e07_IsI64(_5964_prim.ptr())) {
						_case_begin_1bc1a9e55:;
						{
							_56711_item=_1aa34837a_FindItem(_5667_enm.ptr(), jule::Str::lit("I64", 3));
						}
					}
					else if (_1a602518d_IsU8(_5964_prim.ptr())) {
						_case_begin_1bc1a9ecc:;
						{
							_56711_item=_1aa34837a_FindItem(_5667_enm.ptr(), jule::Str::lit("U8", 2));
						}
					}
					else if (_1a6025424_IsU16(_5964_prim.ptr())) {
						_case_begin_1bc1aa054:;
						{
							_56711_item=_1aa34837a_FindItem(_5667_enm.ptr(), jule::Str::lit("U16", 3));
						}
					}
					else if (_1a60256aa_IsU32(_5964_prim.ptr())) {
						_case_begin_1bc1aa0cb:;
						{
							_56711_item=_1aa34837a_FindItem(_5667_enm.ptr(), jule::Str::lit("U32", 3));
						}
					}
					else if (_1a6025941_IsU64(_5964_prim.ptr())) {
						_case_begin_1bc1aa153:;
						{
							_56711_item=_1aa34837a_FindItem(_5667_enm.ptr(), jule::Str::lit("U64", 3));
						}
					}
					else if (_1a60261e4_IsInt(_5964_prim.ptr())) {
						_case_begin_1bc1aa1ca:;
						{
							_56711_item=_1aa34837a_FindItem(_5667_enm.ptr(), jule::Str::lit("Int", 3));
						}
					}
					else if (_1a602647a_IsUint(_5964_prim.ptr())) {
						_case_begin_1bc1aa252:;
						{
							_56711_item=_1aa34837a_FindItem(_5667_enm.ptr(), jule::Str::lit("Uint", 4));
						}
					}
					else if (_1a6026711_IsUintptr(_5964_prim.ptr())) {
						_case_begin_1bc1aa2c9:;
						{
							_56711_item=_1aa34837a_FindItem(_5667_enm.ptr(), jule::Str::lit("Uintptr", 7));
						}
					}
					else {
						_case_begin_1bc1a9152:;
						{
							jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1a601aa46_Str((*(_self_))._field_base)) + jule::Str("\nlocation: std/jule/sema/comptime.jule:631:5"));;
						}
					}
					_match_end_1bc1a90db:;
				};
			}
		}
		else {
			_case_begin_1bc19c783:;
			{
				jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1a601aa46_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:634:4"));;
			}
		}
		_match_end_1bc19c6d9:;
	};
	return _1a60169dc_evalEnumStatic(&(_5667_enm), &(_56711_item), &((*((*(_56142_fc))))._field_Token));;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa35c779__Bits(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1aa44e9c0_eval>* _63927_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _63942_fc) {
	if (((*((*(_63942_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_63927_e)).ptr(), (*((*((*(_63942_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a6023763_Prim> _6443_prim = _1a601cd01_Prim((*(_self_))._field_base.ptr());;
	if ((_6443_prim == nullptr)) {
		_1aa450053_pushErr((*(_63927_e)).ptr(), (*((*(_63942_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::I32 _6493_n = _1a6e6ba2e_BitsizeOf((*(_6443_prim))._field_Kind);;
	if ((_6493_n == -1LL)) {
		_1aa450053_pushErr((*(_63927_e)).ptr(), (*((*(_63942_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a6e77584_Const> _6547_constant = static__1a6e77a07_NewI64(static_cast<jule::I64>(_6493_n));;
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=true, ._field_Kind=_1aa5dcc5c_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_6547_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_6547_constant});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa35cb75__Elem(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1aa44e9c0_eval>* _66327_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _66342_fc) {
	if (((*((*(_66342_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_66327_e)).ptr(), (*((*((*(_66342_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a602aa56_Ptr> _6687_ptr = _1a601d31d_Ptr((*(_self_))._field_base.ptr());;
	if ((_6687_ptr != nullptr)) {
		if (_1a602b5c3_IsUnsafe(_6687_ptr)) {
			_1aa450053_pushErr((*(_66327_e)).ptr(), (*((*(_66342_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		};
		return _1aa36e3b2_buildComptimeTypeInfoData(&((*((*(_66327_e))))._field_s), &((*_6687_ptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1a602728e_Sptr> _6767_sptr = _1a601d087_Sptr((*(_self_))._field_base);;
	if ((_6767_sptr != nullptr)) {
		return _1aa36e3b2_buildComptimeTypeInfoData(&((*((*(_66327_e))))._field_s), &((*_6767_sptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1a6027c62_Slc> _6807_slice = _1a601dd57_Slc((*(_self_))._field_base);;
	if ((_6807_slice != nullptr)) {
		return _1aa36e3b2_buildComptimeTypeInfoData(&((*((*(_66327_e))))._field_s), &((*_6807_slice.alloc)._field_Elem));;
	};
	jule::Ptr<_1a602a083_Arr> _6847_array = _1a601dac1_Arr((*(_self_))._field_base);;
	if ((_6847_array != nullptr)) {
		return _1aa36e3b2_buildComptimeTypeInfoData(&((*((*(_66327_e))))._field_s), &((*_6847_array.alloc)._field_Elem));;
	};
	jule::Ptr<_1aa347753_Enum> _6887_enm = _1a601d5a4_Enum((*(_self_))._field_base);;
	if ((_6887_enm != nullptr)) {
		return _1aa36e3b2_buildComptimeTypeInfoData(&((*((*(_66327_e))))._field_s), &((*((*_6887_enm.alloc)._field_Kind))._field_Kind));;
	};
	_1aa450053_pushErr((*(_66327_e)).ptr(), (*((*(_66342_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa35d071__Size(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1aa44e9c0_eval>* _69627_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _69642_fc) {
	if (((*((*(_69642_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_69627_e)).ptr(), (*((*((*(_69642_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a602a083_Arr> _7017_arr = _1a601dac1_Arr((*(_self_))._field_base.ptr());;
	if ((_7017_arr == nullptr)) {
		_1aa450053_pushErr((*(_69627_e)).ptr(), (*((*(_69642_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a6e77584_Const> _7067_constant = static__1a6e77a07_NewI64(static_cast<jule::I64>((*(_7017_arr))._field_N));;
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=true, ._field_Kind=_1aa5dcc5c_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_7067_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_7067_constant});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa35d46c__Key(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1aa44e9c0_eval>* _71526_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _71541_fc) {
	if (((*((*(_71541_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_71526_e)).ptr(), (*((*((*(_71541_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a6029406_Map> _7207_m = _1a601e891_Map((*(_self_))._field_base.ptr());;
	if ((_7207_m == nullptr)) {
		_1aa450053_pushErr((*(_71526_e)).ptr(), (*((*(_71541_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1aa36e3b2_buildComptimeTypeInfoData(&((*((*(_71526_e))))._field_s), &((*(_7207_m))._field_Key));;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa35d868__Value(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1aa44e9c0_eval>* _72828_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _72843_fc) {
	if (((*((*(_72843_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_72828_e)).ptr(), (*((*((*(_72843_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a6029406_Map> _7337_m = _1a601e891_Map((*(_self_))._field_base.ptr());;
	if ((_7337_m == nullptr)) {
		_1aa450053_pushErr((*(_72828_e)).ptr(), (*((*(_72843_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1aa36e3b2_buildComptimeTypeInfoData(&((*((*(_72828_e))))._field_s), &((*(_7337_m))._field_Val));;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa35dc64__Fields(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1aa44e9c0_eval>* _74129_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _74144_fc) {
	if (((*((*(_74144_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_74129_e)).ptr(), (*((*((*(_74144_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa31e373_StructIns> _7467_s = _1a601e374_Struct((*(_self_))._field_base.ptr());;
	if ((_7467_s != nullptr)) {
		return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aa34e3c5_comptimeStructFields>(_1aa34e3c5_comptimeStructFields{._field_fields=(*_7467_s.alloc)._field_Fields}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data7)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
	};
	jule::Ptr<_1aa347753_Enum> _7567_enm = _1a601d5a4_Enum((*(_self_))._field_base);;
	if ((_7567_enm != nullptr)) {
		return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aa354c16_comptimeEnumFields>(_1aa354c16_comptimeEnumFields{._field_fields=(*_7567_enm.alloc)._field_Items}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data11)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
	};
	_1aa450053_pushErr((*(_74129_e)).ptr(), (*((*(_74144_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa35e160__Statics(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1aa44e9c0_eval>* _77030_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _77045_fc) {
	if (((*((*(_77045_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_77030_e)).ptr(), (*((*((*(_77045_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa31e373_StructIns> _7757_s = _1a601e374_Struct((*(_self_))._field_base.ptr());;
	if ((_7757_s == nullptr)) {
		_1aa450053_pushErr((*(_77030_e)).ptr(), (*((*(_77045_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aa352274_comptimeStatics>(_1aa352274_comptimeStatics{._field_fields=(*(_7757_s))._field_Statics}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data9)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa35e55b__Binded(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1aa44e9c0_eval>* _78929_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _78944_fc) {
	if (((*((*(_78944_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_78929_e)).ptr(), (*((*((*(_78944_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a6e77584_Const> _7947_constant = static__1a6e7808a_NewBool(_1a601b4e7_Binded((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc333_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_7947_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_7947_constant});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa35e957__Ordered(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1aa44e9c0_eval>* _80226_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _80241_fc) {
	if (((*((*(_80241_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_80226_e)).ptr(), (*((*((*(_80241_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Ordered", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a6e77584_Const> _8077_constant = static__1a6e7808a_NewBool(_1a601c2b7_Ordered((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc333_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8077_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_8077_constant});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa35ed53__Comparable(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1aa44e9c0_eval>* _81529_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _81544_fc) {
	if (((*((*(_81544_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_81529_e)).ptr(), (*((*((*(_81544_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Comparable", 10), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a6e77584_Const> _8207_constant = static__1a6e7808a_NewBool(_1a601bc9a_Comparable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc333_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8207_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_8207_constant});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa36024e__Mutable(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1aa44e9c0_eval>* _82826_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _82841_fc) {
	if (((*((*(_82841_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_82826_e)).ptr(), (*((*((*(_82841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a6e77584_Const> _8337_constant = static__1a6e7808a_NewBool(_1a601c031_Mutable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc333_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8337_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_8337_constant});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa36064a__Types(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1aa44e9c0_eval>* _84128_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _84143_fc) {
	if (((*((*(_84143_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_84128_e)).ptr(), (*((*((*(_84143_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a6028856_Tuple> _8467_tup = _1a601eb27_Tup((*(_self_))._field_base.ptr());;
	if ((_8467_tup == nullptr)) {
		_1aa450053_pushErr((*(_84128_e)).ptr(), (*((*(_84143_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa359655_comptimeTypeInfos> _8517_infos = jule::new_ptr<_1aa359655_comptimeTypeInfos>(_1aa359655_comptimeTypeInfos{._field_types=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa35ac50_comptimeTypeInfo>>::alloc(0LL, (*(_8467_tup))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa35ac50_comptimeTypeInfo>(nullptr); __jule_collection; })});;
	{
		auto expr = &((*(_8467_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc1ea0e9:;
		if (it != expr_end) {
			jule::Ptr<_1a601a64a_TypeKind> _85415_t = *it;
			{
				(*(_8517_infos))._field_types=jule::append((*_8517_infos.alloc)._field_types,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa35ac50_comptimeTypeInfo>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1aa3bad9d_pushComptimeTypeInfo((*((*((*(_84128_e))))._field_s))._field_meta.ptr(), &(_85415_t)); __jule_collection; }));
			}
			_iter_next_1bc1ea0e9:;
			++it;
			goto _iter_begin_1bc1ea0e9;
		}
		_iter_end_1bc1ea0e9:;
	};
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_8517_infos, (jule::Trait::Type*)&_1a601a194_Kind_mptr_data14)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa360a46__CanNil(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1aa44e9c0_eval>* _86429_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _86444_fc) {
	if (((*((*(_86444_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_86429_e)).ptr(), (*((*((*(_86444_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("CanNil", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a6e77584_Const> _8697_constant = static__1a6e7808a_NewBool(_1a601c54d_NilCompatible((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc333_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8697_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_8697_constant});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa360e42__GC(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1aa44e9c0_eval>* _87725_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _87740_fc) {
	if (((*((*(_87740_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_87725_e)).ptr(), (*((*((*(_87740_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("GC", 2), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a6e77584_Const> _8827_constant = static__1a6e7808a_NewBool(_1a601c7d4_GC((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc333_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8827_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_8827_constant});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa36133d__Result(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1aa44e9c0_eval>* _89029_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _89044_fc) {
	if (((*((*(_89044_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_89029_e)).ptr(), (*((*((*(_89044_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa334597_FnIns> _8957_f = _1a601e0dd_Fn((*(_self_))._field_base.ptr());;
	if ((_8957_f == nullptr)) {
		_1aa450053_pushErr((*(_89029_e)).ptr(), (*((*(_89044_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*(_8957_f))._field_Result == nullptr)) {
		return _1aa36e3b2_buildComptimeTypeInfoData(&((*((*(_89029_e))))._field_s), &(_1aa5db9c5_primVoid));;
	};
	return _1aa36e3b2_buildComptimeTypeInfoData(&((*((*(_89029_e))))._field_s), &((*(_8957_f))._field_Result));;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa361739__Params(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Ptr<_1aa44e9c0_eval>* _90629_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _90644_fc) {
	if (((*((*(_90644_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_90629_e)).ptr(), (*((*((*(_90644_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa334597_FnIns> _9117_f = _1a601e0dd_Fn((*(_self_))._field_base.ptr());;
	if ((_9117_f == nullptr)) {
		_1aa450053_pushErr((*(_90629_e)).ptr(), (*((*(_90644_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aa35808d_comptimeParams>(_1aa35808d_comptimeParams{._field_params=(*(_9117_f))._field_Params}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data13)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa361a7a_subIdent(jule::Ptr<_1aa35ac50_comptimeTypeInfo> _self_, jule::Str* _92326_ident) {
	{
		auto &_match_expr{ (*(_92326_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1bc20a747:;
			{
				jule::Ptr<_1aa334597_FnIns> _9268_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bc20c2c6, jule::Ptr<__jule_anon_1bc20c2c6_ctx>::make(__jule_anon_1bc20c2c6_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bc20c2c6_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_9268_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Str", 3)) {
			_case_begin_1bc20a7ad:;
			{
				jule::Ptr<_1aa334597_FnIns> _9338_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bc20e22e, jule::Ptr<__jule_anon_1bc20e22e_ctx>::make(__jule_anon_1bc20e22e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bc20e22e_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_9338_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Bits", 4)) {
			_case_begin_1bc20a824:;
			{
				jule::Ptr<_1aa334597_FnIns> _9408_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bc211187, jule::Ptr<__jule_anon_1bc211187_ctx>::make(__jule_anon_1bc211187_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bc211187_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_9408_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Elem", 4)) {
			_case_begin_1bc20a99a:;
			{
				jule::Ptr<_1aa334597_FnIns> _9478_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bc2130e0, jule::Ptr<__jule_anon_1bc2130e0_ctx>::make(__jule_anon_1bc2130e0_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bc2130e0_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_9478_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Size", 4)) {
			_case_begin_1bc20aa22:;
			{
				jule::Ptr<_1aa334597_FnIns> _9548_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bc215048, jule::Ptr<__jule_anon_1bc215048_ctx>::make(__jule_anon_1bc215048_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bc215048_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_9548_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Key", 3)) {
			_case_begin_1bc20aa99:;
			{
				jule::Ptr<_1aa334597_FnIns> _9618_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bc216ea1, jule::Ptr<__jule_anon_1bc216ea1_ctx>::make(__jule_anon_1bc216ea1_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bc216ea1_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_9618_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Value", 5)) {
			_case_begin_1bc20ab21:;
			{
				jule::Ptr<_1aa334597_FnIns> _9688_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1acca88cb, jule::Ptr<__jule_anon_1acca88cb_ctx>::make(__jule_anon_1acca88cb_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1acca88cb_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_9688_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1bc20ac31:;
			{
				jule::Ptr<_1aa334597_FnIns> _9758_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1accaa89a, jule::Ptr<__jule_anon_1accaa89a_ctx>::make(__jule_anon_1accaa89a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1accaa89a_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_9758_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1bc20ac97:;
			{
				jule::Ptr<_1aa334597_FnIns> _9828_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1accaca78, jule::Ptr<__jule_anon_1accaca78_ctx>::make(__jule_anon_1accaca78_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1accaca78_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_9828_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1bc20ad0d:;
			{
				jule::Ptr<_1aa334597_FnIns> _9898_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1accae9d1, jule::Ptr<__jule_anon_1accae9d1_ctx>::make(__jule_anon_1accae9d1_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1accae9d1_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_9898_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Types", 5)) {
			_case_begin_1bc20ad74:;
			{
				jule::Ptr<_1aa334597_FnIns> _9968_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1accb1939, jule::Ptr<__jule_anon_1accb1939_ctx>::make(__jule_anon_1accb1939_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1accb1939_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_9968_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1bc20adeb:;
			{
				jule::Ptr<_1aa334597_FnIns> _10038_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1accb3892, jule::Ptr<__jule_anon_1accb3892_ctx>::make(__jule_anon_1accb3892_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1accb3892_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_10038_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Ordered", 7)) {
			_case_begin_1bc20ae73:;
			{
				jule::Ptr<_1aa334597_FnIns> _10108_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bbd03ede, jule::Ptr<__jule_anon_1bbd03ede_ctx>::make(__jule_anon_1bbd03ede_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bbd03ede_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_10108_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Comparable", 10)) {
			_case_begin_1bc20aeea:;
			{
				jule::Ptr<_1aa334597_FnIns> _10178_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bbd05b28, jule::Ptr<__jule_anon_1bbd05b28_ctx>::make(__jule_anon_1bbd05b28_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bbd05b28_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_10178_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1bc20b072:;
			{
				jule::Ptr<_1aa334597_FnIns> _10248_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bbd07a81, jule::Ptr<__jule_anon_1bbd07a81_ctx>::make(__jule_anon_1bbd07a81_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bbd07a81_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_10248_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("CanNil", 6)) {
			_case_begin_1bc20b0e9:;
			{
				jule::Ptr<_1aa334597_FnIns> _10318_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bbd099d9, jule::Ptr<__jule_anon_1bbd099d9_ctx>::make(__jule_anon_1bbd099d9_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bbd099d9_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_10318_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("GC", 2)) {
			_case_begin_1bc20b171:;
			{
				jule::Ptr<_1aa334597_FnIns> _10388_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bbd0b942, jule::Ptr<__jule_anon_1bbd0b942_ctx>::make(__jule_anon_1bbd0b942_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bbd0b942_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_10388_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Result", 6)) {
			_case_begin_1bc20b1e8:;
			{
				jule::Ptr<_1aa334597_FnIns> _10458_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bbd0d89a, jule::Ptr<__jule_anon_1bbd0d89a_ctx>::make(__jule_anon_1bbd0d89a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bbd0d89a_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_10458_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Kind", 4)) {
			_case_begin_1bc20b270:;
			{
				jule::Ptr<_1aa334597_FnIns> _10528_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bbd10803, jule::Ptr<__jule_anon_1bbd10803_ctx>::make(__jule_anon_1bbd10803_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bbd10803_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_10528_method));;
			}
		}
		else {
			_case_begin_1bc209801:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc20a538:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1aa35ac50_comptimeTypeInfo _Src) {
	_Stream << _1aa35b107_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1aa361d55_comptimeValue_eq(_1aa361d55_comptimeValue *_self_, _1aa361d55_comptimeValue _other_) {
	return 
		(_self_->_field_data == _other_._field_data);
}

inline jule::Str _1aa36220c_Str(_1aa361d55_comptimeValue* _self_) {
	return jule::Str::lit("comptimeValue", 13);;
}



inline jule::Bool _1aa36254d_Equal(jule::Ptr<_1aa361d55_comptimeValue> _self_, jule::Ptr<_1a601a64a_TypeKind> _107118_other) {
	return false;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa362a9d__Unwrap(jule::Ptr<_1aa361d55_comptimeValue> _self_, jule::Ptr<_1aa44e9c0_eval>* _107529_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _107544_fc) {
	if (((*((*(_107544_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_107529_e)).ptr(), (*((*((*(_107544_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Unwrap", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return (*(_self_))._field_data;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa362e99__Type(jule::Ptr<_1aa361d55_comptimeValue> _self_, jule::Ptr<_1aa44e9c0_eval>* _108327_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _108342_fc) {
	if (((*((*(_108342_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_108327_e)).ptr(), (*((*((*(_108342_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1aa36e3b2_buildComptimeTypeInfoData(&((*((*(_108327_e))))._field_s), &((*((*(_self_))._field_data))._field_Kind));;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa363395__Lvalue(jule::Ptr<_1aa361d55_comptimeValue> _self_, jule::Ptr<_1aa44e9c0_eval>* _109129_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _109144_fc) {
	if (((*((*(_109144_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_109129_e)).ptr(), (*((*((*(_109144_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Lvalue", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a6e77584_Const> _10967_constant = static__1a6e7808a_NewBool((*((*(_self_))._field_data))._field_Lvalue);;
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc333_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_10967_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_10967_constant});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa363791__Mutable(jule::Ptr<_1aa361d55_comptimeValue> _self_, jule::Ptr<_1aa44e9c0_eval>* _110430_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _110445_fc) {
	if (((*((*(_110445_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_110430_e)).ptr(), (*((*((*(_110445_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a6e77584_Const> _11097_constant = static__1a6e7808a_NewBool((*((*(_self_))._field_data))._field_Mutable);;
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc333_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11097_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_11097_constant});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa363b8c__Const(jule::Ptr<_1aa361d55_comptimeValue> _self_, jule::Ptr<_1aa44e9c0_eval>* _111728_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _111743_fc) {
	if (((*((*(_111743_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_111728_e)).ptr(), (*((*((*(_111743_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Const", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a6e77584_Const> _11227_constant = static__1a6e7808a_NewBool(_1aa44d6d3_IsConst((*(_self_))._field_data.ptr()));;
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc333_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11227_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_11227_constant});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa364088__Field(jule::Ptr<_1aa361d55_comptimeValue> _self_, jule::Ptr<_1aa44e9c0_eval>* _113028_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _113043_fc) {
	if (((*((*(_113043_fc))))._field_Args.len() > 1LL)) {
		_1aa450053_pushErr((*(_113028_e)).ptr(), (*((*((*(_113043_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa31e373_StructIns> _11357_s = _1a601e374_Struct((*((*(_self_))._field_data))._field_Kind.ptr());;
	if ((_11357_s == nullptr)) {
		_1aa450053_pushErr((*(_113028_e)).ptr(), (*((*(_113043_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*((*(_self_))._field_data))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa2ee9b3_Expr> _11407_arg = (*((*(_113043_fc))))._field_Args[0LL];;
	jule::Ptr<_1aa44cc98_Data> _11417_d = _1aa46cc63_evalExpr((*(_113028_e)), _11407_arg);;
	if ((_11417_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1aa44d6d3_IsConst(_11417_d.ptr())))) {
		_1aa450053_pushErr((*(_113028_e)).ptr(), (*(_11407_arg))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a6023763_Prim> _11493_prim = _1a601cd01_Prim((*(_11417_d))._field_Kind);;
	if (((_11493_prim == nullptr) || (!(_1a6026c2d_IsStr(_11493_prim.ptr()))))) {
		_1aa450053_pushErr((*(_113028_e)).ptr(), (*_11407_arg.alloc)._field_Token, jule::Str::lit("mismatched types: @ and @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("str", 3), &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str((*(_11417_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _11543_ident = _1a6e79740_ReadStr((*(_11417_d))._field_Constant.ptr());;
	jule::Ptr<_1aa31d7c3_FieldIns> _11557_f = _1aa32075e_FindField(_11357_s.ptr(), _11543_ident);;
	if ((_11557_f == nullptr)) {
		_1aa450053_pushErr((*(_113028_e)).ptr(), (*_11407_arg.alloc)._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_11357_s))._field_Decl))._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_11543_ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	_11417_d=jule::new_ptr<_1aa44cc98_Data>((*(*(_self_))._field_data.alloc));
	_11417_d=_1aa466069_evalStructSubIdentField((*(_113028_e)).ptr(), &(_11417_d), &(_11357_s), &((*_11407_arg.alloc)._field_Token), &(_11557_f));
	return _1aa36e703_buildComptimeValue(&(_11417_d));;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa3643c9_subIdent(jule::Ptr<_1aa361d55_comptimeValue> _self_, jule::Str* _116526_ident) {
	{
		auto &_match_expr{ (*(_116526_ident)) };
		
		if (_match_expr == jule::Str::lit("Unwrap", 6)) {
			_case_begin_1bbd29c18:;
			{
				jule::Ptr<_1aa334597_FnIns> _11688_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bbd2b126, jule::Ptr<__jule_anon_1bbd2b126_ctx>::make(__jule_anon_1bbd2b126_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bbd2b126_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_11688_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1bbd29c7e:;
			{
				jule::Ptr<_1aa334597_FnIns> _11758_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bbd2d07e, jule::Ptr<__jule_anon_1bbd2d07e_ctx>::make(__jule_anon_1bbd2d07e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bbd2d07e_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_11758_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Lvalue", 6)) {
			_case_begin_1bbd29ce5:;
			{
				jule::Ptr<_1aa334597_FnIns> _11828_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bbd2eed7, jule::Ptr<__jule_anon_1bbd2eed7_ctx>::make(__jule_anon_1bbd2eed7_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bbd2eed7_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_11828_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1bbd29d6c:;
			{
				jule::Ptr<_1aa334597_FnIns> _11898_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bbd31e40, jule::Ptr<__jule_anon_1bbd31e40_ctx>::make(__jule_anon_1bbd31e40_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bbd31e40_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_11898_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Const", 5)) {
			_case_begin_1bbd29de4:;
			{
				jule::Ptr<_1aa334597_FnIns> _11968_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bbd33d98, jule::Ptr<__jule_anon_1bbd33d98_ctx>::make(__jule_anon_1bbd33d98_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bbd33d98_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_11968_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Field", 5)) {
			_case_begin_1bbd2a06a:;
			{
				jule::Ptr<_1aa334597_FnIns> _12038_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bbd35d01, jule::Ptr<__jule_anon_1bbd35d01_ctx>::make(__jule_anon_1bbd35d01_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bbd35d01_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_12038_method));;
			}
		}
		else {
			_case_begin_1bbd299b5:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbd29ae7:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1aa361d55_comptimeValue _Src) {
	_Stream << _1aa36220c_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aa364a5b_Str(_1aa3646a4_comptimeFiles* _self_) {
	return jule::Str::lit("comptimeFiles", 13);;
}



inline jule::Bool _1aa364d9c_Equal(jule::Ptr<_1aa3646a4_comptimeFiles> _self_, jule::Ptr<_1a601a64a_TypeKind> _122218_other) {
	return false;;
}



inline void _1aa365320_ready(_1aa3646a4_comptimeFiles* _self_, jule::Ptr<_1aa3e4d3e_Var>* _122626_keyA, jule::Ptr<_1aa3e4d3e_Var>* _122643_keyB) {
	if (((*(_122626_keyA)) != nullptr)) {
		(*((*(_122626_keyA))))._field_Constant=true;
		(*((*(_122626_keyA))))._field_Value=jule::new_ptr<_1aa44de20_Value>(_1aa44de20_Value{._field_Expr=jule::Ptr<_1aa2ee9b3_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)})});
		(*((*(_122626_keyA))))._field_Kind=(*(_1aa5e00b1_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_122643_keyB)) != nullptr)) {
		(*((*(_122643_keyB))))._field_Constant=true;
		(*((*(_122643_keyB))))._field_Value=jule::new_ptr<_1aa44de20_Value>(_1aa44de20_Value{._field_Expr=jule::Ptr<_1aa2ee9b3_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)})});
		(*((*(_122643_keyB))))._field_Kind=jule::new_ptr<_1a6022d5b_TypeSymbol>(_1a6022d5b_TypeSymbol{._field_Decl=jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aa365c9e_comptimeFile>(_1aa365c9e_comptimeFile{._field_file=jule::Ptr<_1aa4475cd_SymbolTable>(nullptr)}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data18)})});
	};
}



inline void _1aa36573d_step(_1aa3646a4_comptimeFiles* _self_, jule::I32 _124720_i, jule::Ptr<_1aa3e4d3e_Var>* _124733_keyA, jule::Ptr<_1aa3e4d3e_Var>* _124750_keyB) {
	if (((*(_124733_keyA)) != nullptr)) {
		(*((*((*((*(_124733_keyA))))._field_Value))._field_Data))._field_Constant=static__1a6e77a07_NewI64(static_cast<jule::I64>(_124720_i));
		(*(*((*((*(_124733_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_124733_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*(_124750_keyB)) != nullptr)) {
		(*((*((*((*((*(_124750_keyB))))._field_Kind))._field_Kind))._field_Kind.cast_ptr<_1aa365c9e_comptimeFile>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data18)))._field_file=(*(_self_))._field_files[_124720_i];
	};
}



inline jule::I32 _1aa3659c4_len(_1aa3646a4_comptimeFiles* _self_) {
	return (*(_self_))._field_files.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa3646a4_comptimeFiles _Src) {
	_Stream << _1aa364a5b_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1aa365c9e_comptimeFile_eq(_1aa365c9e_comptimeFile *_self_, _1aa365c9e_comptimeFile _other_) {
	return 
		(_self_->_field_file == _other_._field_file);
}

inline jule::Str _1aa366387_Str(_1aa365c9e_comptimeFile* _self_) {
	return jule::Str::lit("comptimeFile", 12);;
}



inline jule::Bool _1aa3666c8_Equal(jule::Ptr<_1aa365c9e_comptimeFile> _self_, jule::Ptr<_1a601a64a_TypeKind> _127118_other) {
	return false;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa366ad5__Path(jule::Ptr<_1aa365c9e_comptimeFile> _self_, jule::Ptr<_1aa44e9c0_eval>* _127527_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _127542_fc) {
	if (((*((*(_127542_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_127527_e)).ptr(), (*((*((*(_127542_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Path", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a6e77584_Const> _12807_constant = static__1a6e78354_NewStr((*((*((*(_self_))._field_file))._field_File))._field_Path);;
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc07a_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_12807_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_12807_constant});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa366ed1__Name(jule::Ptr<_1aa365c9e_comptimeFile> _self_, jule::Ptr<_1aa44e9c0_eval>* _128827_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _128842_fc) {
	if (((*((*(_128842_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_128827_e)).ptr(), (*((*((*(_128842_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a6e77584_Const> _12937_constant = static__1a6e78354_NewStr(_1aa2db3c8_Name((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc07a_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_12937_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_12937_constant});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa3673cc__Dir(jule::Ptr<_1aa365c9e_comptimeFile> _self_, jule::Ptr<_1aa44e9c0_eval>* _130126_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _130141_fc) {
	if (((*((*(_130141_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_130126_e)).ptr(), (*((*((*(_130141_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Dir", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a6e77584_Const> _13067_constant = static__1a6e78354_NewStr(_1aa2db142_Dir((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc07a_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_13067_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_13067_constant});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa36771d_subIdent(jule::Ptr<_1aa365c9e_comptimeFile> _self_, jule::Str* _131426_ident) {
	{
		auto &_match_expr{ (*(_131426_ident)) };
		
		if (_match_expr == jule::Str::lit("Path", 4)) {
			_case_begin_1bbd47571:;
			{
				jule::Ptr<_1aa334597_FnIns> _13178_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bbd4885d, jule::Ptr<__jule_anon_1bbd4885d_ctx>::make(__jule_anon_1bbd4885d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bbd4885d_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_13178_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1bbd4761a:;
			{
				jule::Ptr<_1aa334597_FnIns> _13248_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bbd4a7b6, jule::Ptr<__jule_anon_1bbd4a7b6_ctx>::make(__jule_anon_1bbd4a7b6_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bbd4a7b6_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_13248_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Dir", 3)) {
			_case_begin_1bbd47692:;
			{
				jule::Ptr<_1aa334597_FnIns> _13318_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bbd4c71e, jule::Ptr<__jule_anon_1bbd4c71e_ctx>::make(__jule_anon_1bbd4c71e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bbd4c71e_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_13318_method));;
			}
		}
		else {
			_case_begin_1bbd47285:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbd4740b:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1aa365c9e_comptimeFile _Src) {
	_Stream << _1aa366387_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aa367da0_Str(_1aa3679e8_comptimeDecls* _self_) {
	return jule::Str::lit("comptimeDecls", 13);;
}



inline jule::Bool _1aa3681e1_Equal(jule::Ptr<_1aa3679e8_comptimeDecls> _self_, jule::Ptr<_1a601a64a_TypeKind> _135018_other) {
	return false;;
}



inline void _1aa368664_ready(_1aa3679e8_comptimeDecls* _self_, jule::Ptr<_1aa3e4d3e_Var>* _135426_keyA, jule::Ptr<_1aa3e4d3e_Var>* _135443_keyB) {
	if (((*(_135426_keyA)) != nullptr)) {
		(*((*(_135426_keyA))))._field_Constant=true;
		(*((*(_135426_keyA))))._field_Value=jule::new_ptr<_1aa44de20_Value>(_1aa44de20_Value{._field_Expr=jule::Ptr<_1aa2ee9b3_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)})});
		(*((*(_135426_keyA))))._field_Kind=(*(_1aa5e00b1_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_135443_keyB)) != nullptr)) {
		(*((*(_135443_keyB))))._field_Constant=true;
		(*((*(_135443_keyB))))._field_Value=jule::new_ptr<_1aa44de20_Value>(_1aa44de20_Value{._field_Expr=jule::Ptr<_1aa2ee9b3_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)})});
		(*((*(_135443_keyB))))._field_Kind=jule::new_ptr<_1a6022d5b_TypeSymbol>(_1a6022d5b_TypeSymbol{._field_Decl=jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aa369841_comptimeDecl>(_1aa369841_comptimeDecl{._field_decl=jule::Any(nullptr)}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data20)})});
	};
}



inline void _1aa368a82_step(_1aa3679e8_comptimeDecls* _self_, jule::I32 _137520_i, jule::Ptr<_1aa3e4d3e_Var>* _137533_keyA, jule::Ptr<_1aa3e4d3e_Var>* _137550_keyB) {
	if (((*(_137533_keyA)) != nullptr)) {
		(*((*((*((*(_137533_keyA))))._field_Value))._field_Data))._field_Constant=static__1a6e77a07_NewI64(static_cast<jule::I64>(_137520_i));
		(*(*((*((*(_137533_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_137533_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*(_137550_keyB)) != nullptr)) {
		(*((*((*((*((*(_137550_keyB))))._field_Kind))._field_Kind))._field_Kind.cast_ptr<_1aa369841_comptimeDecl>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data20)))._field_decl=(*((*(_self_))._field_decls[_137520_i]))._field_decl;
	};
}



inline jule::I32 _1aa368d18_len(_1aa3679e8_comptimeDecls* _self_) {
	return (*(_self_))._field_decls.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa3679e8_comptimeDecls _Src) {
	_Stream << _1aa367da0_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1aa369841_comptimeDecl_eq(_1aa369841_comptimeDecl *_self_, _1aa369841_comptimeDecl _other_) {
	return 
		(_self_->_field_decl == _other_._field_decl);
}

inline jule::Str _1aa369be8_Str(_1aa369841_comptimeDecl* _self_) {
	return jule::Str::lit("comptimeDecl", 12);;
}



inline jule::Bool _1aa36a039_Equal(jule::Ptr<_1aa369841_comptimeDecl> _self_, jule::Ptr<_1a601a64a_TypeKind> _141418_other) {
	return false;;
}



inline jule::Str _1aa36a6cc_declAsStr(_1aa369841_comptimeDecl* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1bbd55738:;
			{
				return jule::Str::lit("<struct>", 8);;
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1bbd55b45:;
			{
				return jule::Str::lit("<fn>", 4);;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1bbd55bab:;
			{
				return jule::Str::lit("<enum>", 6);;
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1bbd55e31:;
			{
				return jule::Str::lit("<type enum>", 11);;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bbd55e97:;
			{
				return jule::Str::lit("<trait>", 7);;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bbd5600d:;
			{
				return jule::Str::lit("<field>", 7);;
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1bbd5621c:;
			{
				return jule::Str::lit("<type alias>", 12);;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bbd56283:;
			{
				return jule::Str::lit("<var>", 5);;
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1bbd562e9:;
			{
				return jule::Str::lit("<enum item>", 11);;
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1bbd56360:;
			{
				return jule::Str::lit("<param>", 7);;
			}
		}
		else {
			_case_begin_1bbd55ace:;
			{
				jule::panic(jule::Str::lit("sema: comptimeDecl.Name: unimplemented declaration kind", 55) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1441:4"));;
			}
		}
		_match_end_1bbd5586a:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa36aac8__Name(jule::Ptr<_1aa369841_comptimeDecl> _self_, jule::Ptr<_1aa44e9c0_eval>* _144527_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _144542_fc) {
	if (((*((*(_144542_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_144527_e)).ptr(), (*((*((*(_144542_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _14507_name = jule::Str();;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1bbd593c9:;
			{
				_14507_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aa31b518_Struct>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1bbd5ab17:;
			{
				_14507_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aa3315b6_Fn>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1bbd5ab7d:;
			{
				_14507_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aa347753_Enum>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1bbd5ac05:;
			{
				_14507_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aa348e5d_TypeEnum>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bbd5ac7c:;
			{
				_14507_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aa345047_Trait>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bbd5ad04:;
			{
				_14507_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aa3185e2_Field>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1bbd5b19a:;
			{
				_14507_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a6019858_TypeAlias>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bbd5b211:;
			{
				_14507_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aa3e4d3e_Var>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1bbd5b277:;
			{
				_14507_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aa346bd6_EnumItem>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1bbd5b2dd:;
			{
				_14507_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aa32eae2_Param>()))._field_Ident;
			}
		}
		else {
			_case_begin_1bbd5aaa1:;
			{
				jule::panic(jule::Str::lit("sema: comptimeDecl.Name: unimplemented declaration kind", 55) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1473:4"));;
			}
		}
		_match_end_1bbd5aa4b:;
	};
	jule::Ptr<_1a6e77584_Const> _14757_constant = static__1a6e78354_NewStr(_14507_name);;
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc07a_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_14757_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_14757_constant});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa36aec4__Public(jule::Ptr<_1aa369841_comptimeDecl> _self_, jule::Ptr<_1aa44e9c0_eval>* _148329_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _148344_fc) {
	if (((*((*(_148344_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_148329_e)).ptr(), (*((*((*(_148344_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _14887_public = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type22) {
			_case_begin_1bbd63955:;
			{
				_1aa450053_pushErr((*(_148329_e)).ptr(), (*((*(_148344_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aa36a6cc_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1bbd65160:;
			{
				_14887_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aa31b518_Struct>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1bbd651c6:;
			{
				_14887_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aa3315b6_Fn>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1bbd6523c:;
			{
				_14887_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aa347753_Enum>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1bbd652b4:;
			{
				_14887_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aa348e5d_TypeEnum>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bbd6533b:;
			{
				_14887_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aa345047_Trait>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bbd653b3:;
			{
				_14887_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aa3185e2_Field>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1bbd65704:;
			{
				_14887_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a6019858_TypeAlias>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bbd6577b:;
			{
				_14887_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aa3e4d3e_Var>()))._field_Public;
			}
		}
		else {
			_case_begin_1bbd650e9:;
			{
				jule::panic(jule::Str::lit("sema: comptimeDecl.Public: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1511:4"));;
			}
		}
		_match_end_1bbd65094:;
	};
	jule::Ptr<_1a6e77584_Const> _15137_constant = static__1a6e7808a_NewBool(_14887_public);;
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc333_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_15137_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_15137_constant});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa36b3c0__Binded(jule::Ptr<_1aa369841_comptimeDecl> _self_, jule::Ptr<_1aa44e9c0_eval>* _152129_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _152144_fc) {
	if (((*((*(_152144_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_152129_e)).ptr(), (*((*((*(_152144_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _15267_binded = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type19 || _match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type22) {
			_case_begin_1bbd6e7da:;
			{
				_1aa450053_pushErr((*(_152129_e)).ptr(), (*((*(_152144_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aa36a6cc_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1bbd6e4cc:;
			{
				_15267_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aa31b518_Struct>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1bbd6e543:;
			{
				_15267_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aa3315b6_Fn>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1bbd6e5a9:;
			{
				_15267_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1a6019858_TypeAlias>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bbd6e620:;
			{
				_15267_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aa3e4d3e_Var>()))._field_Binded;
			}
		}
		else {
			_case_begin_1bbd6e466:;
			{
				jule::panic(jule::Str::lit("sema: comptimeDecl.Binded: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1545:4"));;
			}
		}
		_match_end_1bbd6e411:;
	};
	jule::Ptr<_1a6e77584_Const> _15477_constant = static__1a6e7808a_NewBool(_15267_binded);;
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc333_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_15477_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_15477_constant});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa36b7bb__Exceptional(jule::Ptr<_1aa369841_comptimeDecl> _self_, jule::Ptr<_1aa44e9c0_eval>* _155534_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _155549_fc) {
	if (((*((*(_155549_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_155534_e)).ptr(), (*((*((*(_155549_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1bbd74ea5:;
			{
				goto _match_end_1bbd7624d;
			}
		}
		else {
			_case_begin_1bbd762a3:;
			{
				_1aa450053_pushErr((*(_155534_e)).ptr(), (*((*(_155549_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aa36a6cc_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bbd7624d:;
	};
	jule::Ptr<_1aa3315b6_Fn> _15677_f = (*(_self_))._field_decl.cast_ptr<_1aa3315b6_Fn>(&__jule_any_type26);;
	jule::Ptr<_1a6e77584_Const> _15687_constant = static__1a6e7808a_NewBool((*(_15677_f))._field_Exceptional);;
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc333_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_15687_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_15687_constant});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa36bbb7__Mutable(jule::Ptr<_1aa369841_comptimeDecl> _self_, jule::Ptr<_1aa44e9c0_eval>* _157630_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _157645_fc) {
	if (((*((*(_157645_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_157630_e)).ptr(), (*((*((*(_157645_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _15817_mutable = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type21) {
			_case_begin_1bbd7ad46:;
			{
				_1aa450053_pushErr((*(_157630_e)).ptr(), (*((*(_157645_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aa36a6cc_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1bbd7aa38:;
			{
				_15817_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aa32eae2_Param>()))._field_Mutable;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bbd7aa9e:;
			{
				_15817_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aa3185e2_Field>()))._field_Mutable;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bbd7ab15:;
			{
				_15817_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aa3e4d3e_Var>()))._field_Mutable;
			}
		}
		else {
			_case_begin_1bbd7a9c2:;
			{
				jule::panic(jule::Str::lit("sema: comptimeDecl.Mutable: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1599:4"));;
			}
		}
		_match_end_1bbd7a96c:;
	};
	jule::Ptr<_1a6e77584_Const> _16017_constant = static__1a6e7808a_NewBool(_15817_mutable);;
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc333_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16017_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_16017_constant});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa36c0b3__Variadic(jule::Ptr<_1aa369841_comptimeDecl> _self_, jule::Ptr<_1aa44e9c0_eval>* _160931_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _160946_fc) {
	if (((*((*(_160946_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_160931_e)).ptr(), (*((*((*(_160946_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _16147_variadic = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type19 || _match_expr.type == &__jule_any_type8) {
			_case_begin_1bbd82743:;
			{
				_1aa450053_pushErr((*(_160931_e)).ptr(), (*((*(_160946_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aa36a6cc_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1bbd82435:;
			{
				_16147_variadic=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aa32eae2_Param>()))._field_Variadic;
			}
		}
		else {
			_case_begin_1bbd823be:;
			{
				jule::panic(jule::Str::lit("sema: comptimeDecl.Variadic: unimplemented declaration kind", 59) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1630:4"));;
			}
		}
		_match_end_1bbd82369:;
	};
	jule::Ptr<_1a6e77584_Const> _16327_constant = static__1a6e7808a_NewBool(_16147_variadic);;
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc333_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16327_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_16327_constant});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa36c4ae__Reference(jule::Ptr<_1aa369841_comptimeDecl> _self_, jule::Ptr<_1aa44e9c0_eval>* _164032_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _164047_fc) {
	if (((*((*(_164047_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_164032_e)).ptr(), (*((*((*(_164047_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _16457_ref = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type19) {
			_case_begin_1bbd88073:;
			{
				_1aa450053_pushErr((*(_164032_e)).ptr(), (*((*(_164047_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aa36a6cc_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bbd87c65:;
			{
				_16457_ref=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aa3e4d3e_Var>()))._field_Reference;
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1bbd87ccb:;
			{
				_16457_ref=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aa32eae2_Param>()))._field_Reference;
			}
		}
		else {
			_case_begin_1bbd87bee:;
			{
				jule::panic(jule::Str::lit("sema: comptimeDecl.Reference: unimplemented declaration kind", 60) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1662:4"));;
			}
		}
		_match_end_1bbd87b99:;
	};
	jule::Ptr<_1a6e77584_Const> _16647_constant = static__1a6e7808a_NewBool(_16457_ref);;
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc333_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16647_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_16647_constant});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa36c8aa__Params(jule::Ptr<_1aa369841_comptimeDecl> _self_, jule::Ptr<_1aa44e9c0_eval>* _167229_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _167244_fc) {
	if (((*((*(_167244_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_167229_e)).ptr(), (*((*((*(_167244_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type19 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type22) {
			_case_begin_1bbd8c671:;
			{
				_1aa450053_pushErr((*(_167229_e)).ptr(), (*((*(_167244_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aa36a6cc_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1bbd8d9d5:;
			{
				jule::Ptr<_1aa3315b6_Fn> _16908_f = (*(_self_))._field_decl.unsafe_cast_ptr<_1aa3315b6_Fn>();;
				jule::Slice<jule::Ptr<_1aa369841_comptimeDecl>> _16918_params = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa369841_comptimeDecl>>::alloc((*(_16908_f))._field_Params.len(), (*(_16908_f))._field_Params.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa369841_comptimeDecl>(nullptr); __jule_collection; });;
				{
					auto expr = &((*_16908_f.alloc)._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bbd92588:;
					if (it != expr_end) {
						jule::I32 _16929_i = it - expr->begin();
						jule::Ptr<_1aa32eae2_Param> _169216_param = *it;
						{
							_16918_params[_16929_i]=jule::new_ptr<_1aa369841_comptimeDecl>(_1aa369841_comptimeDecl{._field_decl=jule::Any(_169216_param, &__jule_any_type22)});
						}
						_iter_next_1bbd92588:;
						++it;
						_16929_i++;
						goto _iter_begin_1bbd92588;
					}
					_iter_end_1bbd92588:;
				};
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aa3679e8_comptimeDecls>(_1aa3679e8_comptimeDecls{._field_decls=_16918_params}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1bbd8d96e:;
			{
				jule::panic(jule::Str::lit("sema: comptimeDecl.Params: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1703:4"));;
			}
		}
		_match_end_1bbd8d919:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa36cca6__Fields(jule::Ptr<_1aa369841_comptimeDecl> _self_, jule::Ptr<_1aa44e9c0_eval>* _170729_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _170744_fc) {
	if (((*((*(_170744_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_170729_e)).ptr(), (*((*((*(_170744_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1aa369841_comptimeDecl>> _17127_fields = static_cast<jule::Slice<jule::Ptr<_1aa369841_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type19 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type22 || _match_expr.type == &__jule_any_type26) {
			_case_begin_1bbd95e4e:;
			{
				_1aa450053_pushErr((*(_170729_e)).ptr(), (*((*(_170744_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aa36a6cc_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1bbd95b41:;
			{
				jule::Ptr<_1aa347753_Enum> _17258_enm = (*(_self_))._field_decl.unsafe_cast_ptr<_1aa347753_Enum>();;
				_17127_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa369841_comptimeDecl>>::alloc((*(_17258_enm))._field_Items.len(), (*(_17258_enm))._field_Items.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa369841_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_17258_enm.alloc)._field_Items);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bbd99392:;
					if (it != expr_end) {
						jule::I32 _17279_i = it - expr->begin();
						jule::Ptr<_1aa346bd6_EnumItem> _172716_item = *it;
						{
							_17127_fields[_17279_i]=jule::new_ptr<_1aa369841_comptimeDecl>(_1aa369841_comptimeDecl{._field_decl=jule::Any(_172716_item, &__jule_any_type21)});
						}
						_iter_next_1bbd99392:;
						++it;
						_17279_i++;
						goto _iter_begin_1bbd99392;
					}
					_iter_end_1bbd99392:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1bbd95ba7:;
			{
				jule::Ptr<_1aa31b518_Struct> _17318_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1aa31b518_Struct>();;
				_17127_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa369841_comptimeDecl>>::alloc((*(_17318_s))._field_Fields.len(), (*(_17318_s))._field_Fields.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa369841_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_17318_s.alloc)._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bbd9b284:;
					if (it != expr_end) {
						jule::I32 _17339_i = it - expr->begin();
						jule::Ptr<_1aa3185e2_Field> _173316_field = *it;
						{
							_17127_fields[_17339_i]=jule::new_ptr<_1aa369841_comptimeDecl>(_1aa369841_comptimeDecl{._field_decl=jule::Any(_173316_field, &__jule_any_type19)});
						}
						_iter_next_1bbd9b284:;
						++it;
						_17339_i++;
						goto _iter_begin_1bbd9b284;
					}
					_iter_end_1bbd9b284:;
				};
			}
		}
		else {
			_case_begin_1bbd95aca:;
			{
				jule::panic(jule::Str::lit("sema: comptimeDecl.Fields: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1737:4"));;
			}
		}
		_match_end_1bbd95a75:;
	};
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aa3679e8_comptimeDecls>(_1aa3679e8_comptimeDecls{._field_decls=_17127_fields}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa36d1a2__Statics(jule::Ptr<_1aa369841_comptimeDecl> _self_, jule::Ptr<_1aa44e9c0_eval>* _174830_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _174845_fc) {
	if (((*((*(_174845_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_174830_e)).ptr(), (*((*((*(_174845_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1aa369841_comptimeDecl>> _17537_fields = static_cast<jule::Slice<jule::Ptr<_1aa369841_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type19 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type22 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type24) {
			_case_begin_1bbd9eb8e:;
			{
				_1aa450053_pushErr((*(_174830_e)).ptr(), (*((*(_174845_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aa36a6cc_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1bbd9e881:;
			{
				jule::Ptr<_1aa31b518_Struct> _17678_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1aa31b518_Struct>();;
				_17537_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa369841_comptimeDecl>>::alloc((*(_17678_s))._field_Statics.len(), (*(_17678_s))._field_Statics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa369841_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_17678_s.alloc)._field_Statics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bbda31c0:;
					if (it != expr_end) {
						jule::I32 _17699_i = it - expr->begin();
						jule::Ptr<_1aa3e4d3e_Var> _176916_field = *it;
						{
							_17537_fields[_17699_i]=jule::new_ptr<_1aa369841_comptimeDecl>(_1aa369841_comptimeDecl{._field_decl=jule::Any(_176916_field, &__jule_any_type8)});
						}
						_iter_next_1bbda31c0:;
						++it;
						_17699_i++;
						goto _iter_begin_1bbda31c0;
					}
					_iter_end_1bbda31c0:;
				};
			}
		}
		else {
			_case_begin_1bbd9e81a:;
			{
				jule::panic(jule::Str::lit("sema: comptimeDecl.Statics: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1773:4"));;
			}
		}
		_match_end_1bbd9e7b5:;
	};
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aa3679e8_comptimeDecls>(_1aa3679e8_comptimeDecls{._field_decls=_17537_fields}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa36d8de_subIdent(jule::Ptr<_1aa369841_comptimeDecl> _self_, jule::Str* _182526_ident) {
	{
		auto &_match_expr{ (*(_182526_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1bbdad6b4:;
			{
				jule::Ptr<_1aa334597_FnIns> _18288_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bbdaecc0, jule::Ptr<__jule_anon_1bbdaecc0_ctx>::make(__jule_anon_1bbdaecc0_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bbdaecc0_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_18288_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1bbdad72a:;
			{
				jule::Ptr<_1aa334597_FnIns> _18358_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bbdb1c28, jule::Ptr<__jule_anon_1bbdb1c28_ctx>::make(__jule_anon_1bbdb1c28_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bbdb1c28_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_18358_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1bbdad791:;
			{
				jule::Ptr<_1aa334597_FnIns> _18428_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bbdb3b81, jule::Ptr<__jule_anon_1bbdb3b81_ctx>::make(__jule_anon_1bbdb3b81_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bbdb3b81_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_18428_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Exceptional", 11)) {
			_case_begin_1bbdad818:;
			{
				jule::Ptr<_1aa334597_FnIns> _18498_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bc2dca49, jule::Ptr<__jule_anon_1bc2dca49_ctx>::make(__jule_anon_1bc2dca49_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bc2dca49_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_18498_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1bbdad9b1:;
			{
				jule::Ptr<_1aa334597_FnIns> _18568_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bc2de9a2, jule::Ptr<__jule_anon_1bc2de9a2_ctx>::make(__jule_anon_1bc2de9a2_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bc2de9a2_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_18568_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Variadic", 8)) {
			_case_begin_1bbdada27:;
			{
				jule::Ptr<_1aa334597_FnIns> _18638_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bc2e190a, jule::Ptr<__jule_anon_1bc2e190a_ctx>::make(__jule_anon_1bc2e190a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bc2e190a_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_18638_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Reference", 9)) {
			_case_begin_1bbdada8d:;
			{
				jule::Ptr<_1aa334597_FnIns> _18708_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bc2e3863, jule::Ptr<__jule_anon_1bc2e3863_ctx>::make(__jule_anon_1bc2e3863_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bc2e3863_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_18708_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1bbdadb15:;
			{
				jule::Ptr<_1aa334597_FnIns> _18778_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bc2e57bb, jule::Ptr<__jule_anon_1bc2e57bb_ctx>::make(__jule_anon_1bc2e57bb_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bc2e57bb_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_18778_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1bbdadc47:;
			{
				jule::Ptr<_1aa334597_FnIns> _18848_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bc2e7999, jule::Ptr<__jule_anon_1bc2e7999_ctx>::make(__jule_anon_1bc2e7999_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bc2e7999_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_18848_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1bbdadcad:;
			{
				jule::Ptr<_1aa334597_FnIns> _18918_method = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>((void*)__jule_anon_1bc2e9902, jule::Ptr<__jule_anon_1bc2e9902_ctx>::make(__jule_anon_1bc2e9902_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bc2e9902_ctx_handler), ._field_reloaded=false});;
				return _1aa36dc30_buildAsComptimeMethodData(&(_18918_method));;
			}
		}
		else {
			_case_begin_1bbda7c85:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbdad54e:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1aa369841_comptimeDecl _Src) {
	_Stream << _1aa369be8_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool,jule::Ptr<_1aa3bb530_sema>*,jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>*> _1aa371826_readyFn(jule::Ptr<_1aa3713e7_constraintChecker> _self_) {
	return jule::__new_closure<jule::Bool,jule::Ptr<_1aa3bb530_sema>*,jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>*>((void*)__jule_anon_1bc305435, jule::Ptr<__jule_anon_1bc305435_ctx>::make(__jule_anon_1bc305435_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bc305435_ctx_handler);;
}



inline jule::Bool _1aa371aac_readyFi(jule::Ptr<_1aa3713e7_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_fi))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*(_self_))._field_fi.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1aa3d0027_fnEnvironment((*_self_.alloc)._field_s, &((*_self_.alloc)._field_fi), _1aa371826_readyFn(_self_)));;
}



inline jule::Bool _1aa371d43_readySi(jule::Ptr<_1aa3713e7_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_si))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*(_self_))._field_si.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1aa371826_readyFn(_self_)(&((*_self_.alloc)._field_s), &((*_self_.alloc)._field_genericsA)));;
}



inline jule::Bool _1aa3720c9_ready(jule::Ptr<_1aa3713e7_constraintChecker> _self_) {
	if (((*(_self_))._field_fi != nullptr)) {
		return _1aa371aac_readyFi(_self_);;
	};
	return _1aa371d43_readySi(_self_);;
}



inline jule::Bool _1aa372360_check(jule::Ptr<_1aa3713e7_constraintChecker> _self_) {
	if ((!(_1aa3720c9_ready(_self_)))) {
		return false;;
	};
	_julec_label_1bc314ad7:;
	{
		auto expr = &((*_self_.alloc)._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc3154ab:;
		if (it != expr_end) {
			jule::I32 _1208_i = it - expr->begin();
			jule::Ptr<_1a6018c64_InsGeneric> _12015_g = *it;
			{
				if (((*(_12015_g))._field_Constraint == nullptr)) {
					goto _iter_next_1bc3154ab;
				};
				{
					auto expr = &((*_12015_g.alloc)._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc316699:;
					if (it != expr_end) {
						jule::Ptr<_1a601a64a_TypeKind> _12416_c2 = *it;
						{
							jule::Ptr<_1a6023763_Prim> _1259_prim = _1a601cd01_Prim(_12416_c2.ptr());;
							if (((_1259_prim != nullptr) && _1a60243bd_IsConstraint(_1259_prim))) {
								if (_1aa372aad_matchConstraint(&((*_1259_prim.alloc)._field_Kind), &((*_12015_g.alloc)._field_Kind))) {
									goto _iter_next_1bc3154ab;
								};
								goto _iter_next_1bc316699;
							};
							if (_1a601ad87_Equal(_12416_c2, (*_12015_g.alloc)._field_Kind)) {
								goto _iter_next_1bc3154ab;
							};
						}
						_iter_next_1bc316699:;
						++it;
						goto _iter_begin_1bc316699;
					}
					_iter_end_1bc316699:;
				};
				_1aa3be434_pushErr((*_self_.alloc)._field_s.ptr(), (*_self_.alloc)._field_et, jule::Str::lit("type @ is not matched with @'s constraint\n       constraint: @", 62), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*_12015_g.alloc)._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*((*_self_.alloc)._field_genericsD[_1208_i]))._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_1aa3726e5_toStrConstraints(_12015_g), &__jule_any_type4); __jule_collection; }));
				return false;;
			}
			_iter_next_1bc3154ab:;
			++it;
			_1208_i++;
			goto _iter_begin_1bc3154ab;
		}
		_iter_end_1bc3154ab:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa3713e7_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aa373b47_IsTraitImpl(_1aa37374b_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1aa373dcd_IsStructImpl(_1aa37374b_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa37374b_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa378ba2_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa3790c0_If_eq(_1aa3790c0_If *_self_, _1aa3790c0_If _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa3790c0_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa3793bc_Else_eq(_1aa3793bc_Else *_self_, _1aa3793bc_Else _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa3793bc_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa3797da_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa379ad7_InfIter_eq(_1aa379ad7_InfIter *_self_, _1aa379ad7_InfIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa379ad7_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa37a08d_WhileIter_eq(_1aa37a08d_WhileIter *_self_, _1aa37a08d_WhileIter _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Next == _self_->_field_Next) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}

inline jule::Bool _1aa37a434_IsWhileNext(_1aa37a08d_WhileIter* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa37a08d_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa37a9d9_RangeIter_eq(_1aa37a9d9_RangeIter *_self_, _1aa37a9d9_RangeIter _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Scope == _self_->_field_Scope) &&
		(_self_->_field_KeyA == _self_->_field_KeyA) &&
		(_self_->_field_KeyB == _self_->_field_KeyB);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa37a9d9_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa37ad6e_ContSt_eq(_1aa37ad6e_ContSt *_self_, _1aa37ad6e_ContSt _other_) {
	return 
		(_self_->_field_It == _other_._field_It);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa37ad6e_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa37b248_BreakSt_eq(_1aa37b248_BreakSt *_self_, _1aa37b248_BreakSt _other_) {
	return 
		(_self_->_field_It == _other_._field_It) &&
		(_self_->_field_Mtch == _self_->_field_Mtch);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa37b248_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa37b545_Label_eq(_1aa37b545_Label *_self_, _1aa37b545_Label _other_) {
	return 
		(_self_->_field_Ident == _other_._field_Ident);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa37b545_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa37b91e_GotoSt_eq(_1aa37b91e_GotoSt *_self_, _1aa37b91e_GotoSt _other_) {
	return 
		(_self_->_field_Ident == _other_._field_Ident) &&
		(_self_->_field_Label == _self_->_field_Label);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa37b91e_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa37bce8_Postfix_eq(_1aa37bce8_Postfix *_self_, _1aa37bce8_Postfix _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Op == _self_->_field_Op);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa37bce8_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa37c29e_Assign_eq(_1aa37c29e_Assign *_self_, _1aa37c29e_Assign _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa37c29e_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa37c755_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "Decls:" << _Src._field_Decls << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa37cdb5_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa37d8dd_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa37e0d6_FallSt_eq(_1aa37e0d6_FallSt *_self_, _1aa37e0d6_FallSt _other_) {
	return 
		(_self_->_field_DestCase == _other_._field_DestCase);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa37e0d6_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa37e47c_RetSt_eq(_1aa37e47c_RetSt *_self_, _1aa37e47c_RetSt _other_) {
	return 
		(_self_->_field_Func == _other_._field_Func) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa37e47c_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa37eadc_scopeLabel_eq(_1aa37eadc_scopeLabel *_self_, _1aa37eadc_scopeLabel _other_) {
	return 
		(_self_->_field_token == _other_._field_token) &&
		(_self_->_field_label == _self_->_field_label) &&
		(_self_->_field_pos == _self_->_field_pos) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_used == _self_->_field_used);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa37eadc_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa380170_scopeGoto_eq(_1aa380170_scopeGoto *_self_, _1aa380170_scopeGoto _other_) {
	return 
		(_self_->_field_st == _other_._field_st) &&
		(_self_->_field_gt == _self_->_field_gt) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_pos == _self_->_field_pos);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa380170_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "st:" << _Src._field_st << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa381160_scopeChecker_eq(_1aa381160_scopeChecker *_self_, _1aa381160_scopeChecker _other_) {
	return 
		(_self_->_field_calledFrom == _other_._field_calledFrom) &&
		(_self_->_field_s == _self_->_field_s) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_parent == _self_->_field_parent) &&
		(_self_->_field_childIndex == _self_->_field_childIndex) &&
		(_self_->_field_table == _self_->_field_table) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_tree == _self_->_field_tree) &&
		(_self_->_field_result == _self_->_field_result) &&
		(_self_->_field_it == _self_->_field_it) &&
		(_self_->_field_cse == _self_->_field_cse) &&
		(_self_->_field_captured == _self_->_field_captured) &&
		(_self_->_field_labels == _self_->_field_labels) &&
		(_self_->_field_gotos == _self_->_field_gotos) &&
		(_self_->_field_i == _self_->_field_i);
}

inline jule::Ptr<_1aa39b0ae_ImportInfo> _1aa381638_SelectPackage(_1aa381160_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1aa39b0ae_ImportInfo>> _46029_selector) {
	return _1aa3bba08_SelectPackage((*(_self_))._field_s.ptr(), _46029_selector);;
}



inline jule::Ptr<_1aa3e4d3e_Var> _1aa381a34_FindVar(_1aa381160_scopeChecker* _self_, jule::Str _47123_ident, jule::Bool _47135_binded) {
	if ((!(_47135_binded))) {
		jule::Ptr<_1aa3e4d3e_Var> _4738_v = _1aa384b14_findVar(_self_, _47123_ident);;
		if ((_4738_v != nullptr)) {
			return _4738_v;;
		};
	};
	return _1aa3bbe04_FindVar((*(_self_))._field_s.ptr(), _47123_ident, _47135_binded);;
}



inline jule::Ptr<_1a6019858_TypeAlias> _1aa381e30_FindTypeAlias(_1aa381160_scopeChecker* _self_, jule::Str _48829_ident, jule::Bool _48841_binded) {
	;
	jule::Ptr<_1a6019858_TypeAlias> _4917_ta = _1aa44a5d1_findTypeAlias((*(_self_))._field_table.ptr(), &(_48829_ident), _48841_binded, true);;
	if ((_4917_ta != nullptr)) {
		return _4917_ta;;
	};
	jule::Ptr<_1aa381160_scopeChecker> _4967_parent = (*(_self_))._field_parent;;
	while ((_4967_parent != nullptr)) {
		{
			_4917_ta=_1aa44a5d1_findTypeAlias((*(_4967_parent))._field_table, &(_48829_ident), _48841_binded, true);
			if ((_4917_ta != nullptr)) {
				return _4917_ta;;
			};
			_4967_parent=(*_4967_parent.alloc)._field_parent;
		}
	_iter_next_1bc35693c:;
	}
	_iter_end_1bc35693c:;;
	return _1aa3bc300_FindTypeAlias((*(_self_))._field_s.ptr(), _48829_ident, _48841_binded);;
}



inline jule::Ptr<_1aa31b518_Struct> _1aa38232b_FindStruct(_1aa381160_scopeChecker* _self_, jule::Str _51326_ident, jule::Bool _51338_binded) {
	return _1aa3bc6eb_FindStruct((*(_self_))._field_s.ptr(), _51326_ident, _51338_binded);;
}



inline jule::Ptr<_1aa3315b6_Fn> _1aa382727_FindFn(_1aa381160_scopeChecker* _self_, jule::Str _52222_ident, jule::Bool _52234_binded) {
	return _1aa3bcae7_FindFn((*(_self_))._field_s.ptr(), _52222_ident, _52234_binded);;
}



inline jule::Ptr<_1aa345047_Trait> _1aa382a68_FindTrait(_1aa381160_scopeChecker* _self_, jule::Str _53125_ident) {
	return _1aa3bce38_FindTrait((*(_self_))._field_s.ptr(), _53125_ident);;
}



inline jule::Ptr<_1aa347753_Enum> _1aa382da9_FindEnum(_1aa381160_scopeChecker* _self_, jule::Str _54024_ident) {
	return _1aa3bd279_FindEnum((*(_self_))._field_s.ptr(), _54024_ident);;
}



inline jule::Ptr<_1aa348e5d_TypeEnum> _1aa3831ea_FindTypeEnum(_1aa381160_scopeChecker* _self_, jule::Str _54928_ident) {
	return _1aa3bd5ba_FindTypeEnum((*(_self_))._field_s.ptr(), _54928_ident);;
}



inline jule::Bool _1aa38354c_isUnsafe(jule::Ptr<_1aa381160_scopeChecker> _self_) {
	jule::Ptr<_1aa381160_scopeChecker> _5577_scope = _self_;;
	_julec_label_1bc35ba63:;
	if ((*((*(_5577_scope))._field_scope))._field_Unsafety) {
		return true;;
	};
	if (((*_5577_scope.alloc)._field_parent != nullptr)) {
		_5577_scope=(*_5577_scope.alloc)._field_parent;
		goto _julec_label_1bc35ba63;
	};
	return false;;
}



inline jule::Bool _1aa3837d3_isRoot(_1aa381160_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1aa3839d1_stop(_1aa381160_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1aa383c67_stopped(_1aa381160_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1aa383eed_isDeferred(jule::Ptr<_1aa381160_scopeChecker> _self_) {
	jule::Ptr<_1aa381160_scopeChecker> _5907_scope = _self_;;
	_julec_label_1bc35eda7:;
	if ((*((*(_5907_scope))._field_scope))._field_Deferred) {
		return true;;
	};
	if (((*_5907_scope.alloc)._field_parent != nullptr)) {
		_5907_scope=(*_5907_scope.alloc)._field_parent;
		goto _julec_label_1bc35eda7;
	};
	return false;;
}



inline void _1aa3842a6_pushCaptured(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa3e4d3e_Var>* _61134_v) {
	jule::Ptr<_1aa381160_scopeChecker> _6127_sc = _self_;;
	for (;;) {
		{
			if (((*(_6127_sc))._field_captured != nullptr)) {
				{
					auto expr = &((*(*(_6127_sc))._field_captured.alloc));
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc362d00:;
					if (it != expr_end) {
						jule::Ptr<_1aa3e4d3e_Var> _61512_cv = *it;
						{
							if ((_61512_cv == (*(_61134_v)))) {
								goto _julec_label_1bc36443e;
							};
						}
						_iter_next_1bc362d00:;
						++it;
						goto _iter_begin_1bc362d00;
					}
					_iter_end_1bc362d00:;
				};
				(*(*(_6127_sc))._field_captured.alloc)=jule::append((*(*(_6127_sc))._field_captured.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_61134_v)); __jule_collection; }));
				_julec_label_1bc36443e:;
			};
			if (((*_6127_sc.alloc)._field_parent == nullptr)) {
				goto _iter_end_1bc360baa;
			};
			_6127_sc=(*_6127_sc.alloc)._field_parent;
			if ((!(_1a6017b53_isVarCaptured(_6127_sc, _6127_sc, (*(_61134_v)))))) {
				goto _iter_end_1bc360baa;
			};
		}
	_iter_next_1bc360baa:;
	}
	_iter_end_1bc360baa:;;
}



inline jule::Ptr<_1aa381160_scopeChecker> _1aa38453c_getRoot(jule::Ptr<_1aa381160_scopeChecker> _self_) {
	jule::Ptr<_1aa381160_scopeChecker> _6367_root = _self_;;
	while ((((*(_6367_root))._field_parent != nullptr) && ((*_6367_root.alloc)._field_owner == nullptr))) {
		{
			_6367_root=(*_6367_root.alloc)._field_parent;
		}
	_iter_next_1bc365eac:;
	}
	_iter_end_1bc365eac:;;
	return _6367_root;;
}



inline jule::Ptr<_1aa381160_scopeChecker> _1aa3847c3_getHardRoot(jule::Ptr<_1aa381160_scopeChecker> _self_) {
	jule::Ptr<_1aa381160_scopeChecker> _6467_root = _self_;;
	while (((*(_6467_root))._field_parent != nullptr)) {
		{
			_6467_root=(*_6467_root.alloc)._field_parent;
		}
	_iter_next_1bc3672dd:;
	}
	_iter_end_1bc3672dd:;;
	return _6467_root;;
}



inline jule::Ptr<_1aa3e4d3e_Var> _1aa384b14_findVar(_1aa381160_scopeChecker* _self_, jule::Str _65423_ident) {
	;
	;
	jule::Ptr<_1aa3e4d3e_Var> _6577_v = _1aa44a12a_findVar((*(_self_))._field_table.ptr(), &(_65423_ident), false, true);;
	if ((_6577_v != nullptr)) {
		return _6577_v;;
	};
	jule::Ptr<_1aa381160_scopeChecker> _6617_parent = (*(_self_))._field_parent;;
	while ((_6617_parent != nullptr)) {
		{
			_6577_v=_1aa44a12a_findVar((*(_6617_parent))._field_table, &(_65423_ident), false, true);
			if ((_6577_v != nullptr)) {
				return _6577_v;;
			};
			_6617_parent=(*_6617_parent.alloc)._field_parent;
		}
	_iter_next_1bc36929b:;
	}
	_iter_end_1bc36929b:;;
	return nullptr;;
}



inline jule::Ptr<_1aa37b545_Label> _1aa384e55_findLabel(_1aa381160_scopeChecker* _self_, jule::Str* _67526_ident) {
	{
		auto expr = &((*((*(_self_))._field_scope))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc36b2d1:;
		if (it != expr_end) {
			jule::Any _67615_st = *it;
			{
				{
					auto &_match_expr{ _67615_st };
					
					if (_match_expr.type == &__jule_any_type28) {
						_case_begin_1bc36baa6:;
						{
							jule::Ptr<_1aa37b545_Label> _6799_label = _67615_st.unsafe_cast_ptr<_1aa37b545_Label>();;
							if (((*(_6799_label))._field_Ident == (*(_67526_ident)))) {
								return _6799_label;;
							};
						}
					}
					_match_end_1bc36ba51:;
				};
			}
			_iter_next_1bc36b2d1:;
			++it;
			goto _iter_begin_1bc36b2d1;
		}
		_iter_end_1bc36b2d1:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa37eadc_scopeLabel> _1aa385296_findLabelScope(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Str* _69132_ident) {
	jule::Ptr<_1aa37eadc_scopeLabel> _6927_label = _1aa3855d7_findLabelAll(_self_.ptr(), _69132_ident);;
	if (((_6927_label != nullptr) && ((*_6927_label.alloc)._field_scope == _self_))) {
		return _6927_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa37eadc_scopeLabel> _1aa3855d7_findLabelAll(_1aa381160_scopeChecker* _self_, jule::Str* _70329_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc36e191:;
		if (it != expr_end) {
			jule::Ptr<_1aa37eadc_scopeLabel> _70415_lbl = *it;
			{
				if (((*((*(_70415_lbl))._field_label))._field_Ident == (*(_70329_ident)))) {
					return _70415_lbl;;
				};
			}
			_iter_next_1bc36e191:;
			++it;
			goto _iter_begin_1bc36e191;
		}
		_iter_end_1bc36e191:;
	};
	return nullptr;;
}



inline jule::Bool _1aa3859d3_isDuplicatedIdent(_1aa381160_scopeChecker* _self_, jule::Uintptr _71533_itself, jule::Str* _71551_ident) {
	jule::Ptr<_1aa3e4d3e_Var> _7163_v = _1aa381a34_FindVar(_self_, (*(_71551_ident)), false);;
	if (((_7163_v != nullptr) && (static_cast<jule::Uintptr>(_7163_v) != _71533_itself))) {
		if (((*_7163_v.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_7163_v.alloc)._field_Scope == (*(_self_))._field_scope) || (!(_1aa3bd9c7_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))));;
	};
	jule::Ptr<_1a6019858_TypeAlias> _7243_ta = _1aa381e30_FindTypeAlias(_self_, (*(_71551_ident)), false);;
	if (((_7243_ta != nullptr) && (static_cast<jule::Uintptr>(_7243_ta) != _71533_itself))) {
		if (((*_7243_ta.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_7243_ta.alloc)._field_Scope == (*(_self_))._field_tree) || (!(_1aa3bd9c7_isFlag((*(_self_))._field_s, static_cast<jule::I32>(1LL)))));;
	};
	return false;;
}



inline void _1aa385c8b_checkVarDecl(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa30d4e9_VarDecl> _73533_decl) {
	jule::Ptr<_1aa3e4d3e_Var> _7367_v = _1aa33ca9a_buildVar(_73533_decl);;
	(*(_7367_v))._field_Scope=(*(_self_))._field_scope;
	__JULE_DEFER({
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7367_v; __jule_collection; }));
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7367_v, &__jule_any_type8); __jule_collection; }));
	});;
	if (_1aa3859d3_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>(_7367_v), &((*_7367_v.alloc)._field_Ident))) {
		_1aa3be434_pushErr((*_self_.alloc)._field_s.ptr(), (*_7367_v.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_7367_v.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1aa3be797_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1aa3839d1_stop(_self_);
		return;;
	};
	_1aa3d7c11_checkVarDecl((*(_self_))._field_s, &(_7367_v), jule::Trait(_self_, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data0));
	if (((!(_1aa3e54d2_IsTypeInferred(_7367_v))) && (((*_7367_v.alloc)._field_Kind == nullptr) || ((*((*_7367_v.alloc)._field_Kind))._field_Kind == nullptr)))) {
		return;;
	};
	_1aa3db4a6_evalVarValue((*(_self_))._field_s, &(_7367_v), jule::Trait(_self_, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data0));
	if (((!(_1aa3e524b_IsInitialized(_7367_v))) || ((*((*_7367_v.alloc)._field_Value))._field_Data == nullptr))) {
		return;;
	};
	_1aa38c006_removeInteriorMutRisk(_self_, &((*(*(_7367_v))._field_Value.alloc)._field_Data));
	_1aa3db143_checkVarValue((*(_self_))._field_s, &(_7367_v));
}



inline void _1aa386044_checkTypeAlias(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1a6019858_TypeAlias>* _76636_ta) {
	if (_1aa3859d3_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_76636_ta))), &((*((*(_76636_ta))))._field_Ident))) {
		_1aa3be434_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_76636_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_76636_ta))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1aa3be797_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1aa3839d1_stop(_self_);
		return;;
	};
	_1aa3d1c93_checkTypeAliasDecl((*(_self_))._field_s, _76636_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data0));
	(*((*_self_.alloc)._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_76636_ta)); __jule_collection; }));
	if (((*((*((*(_76636_ta))))._field_Kind))._field_Kind == nullptr)) {
		_1aa3839d1_stop(_self_);
	};
}



inline void _1aa3862ec_checkTypeAliasDecl(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa31219b_TypeAliasDecl> _78239_decl) {
	jule::Ptr<_1a6019858_TypeAlias> _7837_ta = _1aa339679_buildTypeAlias(_78239_decl);;
	_1aa386044_checkTypeAlias(_self_, &(_7837_ta));
}



inline jule::Ptr<_1aa378ba2_Scope> _1aa386583_getChild(_1aa381160_scopeChecker* _self_) {
	return jule::new_ptr<_1aa378ba2_Scope>(_1aa378ba2_Scope{._field_Parent=(*(_self_))._field_scope, ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<jule::Any>(nullptr)});;
}



inline void _1aa3869a1_checkChildSsc(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa30a6a0_ScopeTree>* _79335_tree, jule::Ptr<_1aa378ba2_Scope>* _79358_s, jule::Ptr<_1aa381160_scopeChecker>* _79374_ssc) {
	(*((*(_79374_ssc))))._field_parent=_self_;
	_1aa392e96_check((*(_79374_ssc)), _79335_tree, _79358_s);
}



inline jule::Ptr<_1aa378ba2_Scope> _1aa386d9c_checkChildSc(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa30a6a0_ScopeTree>* _79834_tree, jule::Ptr<_1aa381160_scopeChecker>* _79857_ssc) {
	jule::Ptr<_1aa378ba2_Scope> _7997_s = _1aa386583_getChild(_self_.ptr());;
	_1aa3869a1_checkChildSsc(_self_, _79834_tree, &(_7997_s), _79857_ssc);
	return _7997_s;;
}



inline jule::Ptr<_1aa378ba2_Scope> _1aa3871dd_checkChild(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa30a6a0_ScopeTree>* _80432_tree) {
	jule::Ptr<_1aa381160_scopeChecker> _8057_ssc = _1aa39322c_newChildChecker(_self_);;
	return _1aa386d9c_checkChildSc(_self_, _80432_tree, &(_8057_ssc));;
}



inline void _1aa387496_checkAnonScope(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa30a6a0_ScopeTree> _80935_tree) {
	jule::Ptr<_1aa378ba2_Scope> _8107_s = _1aa3871dd_checkChild(_self_, &(_80935_tree));;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8107_s, &__jule_any_type29); __jule_collection; }));
}



inline void _1aa387809_processErrorCall(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa32c00c_BuiltinErrorCallExprModel>* _81438_m, jule::Ptr<_1aa2d51c4_Token> _81469_err) {
	if (_1aa383eed_isDeferred(_self_)) {
		_1aa3be434_pushErr((*_self_.alloc)._field_s.ptr(), _81469_err, jule::Str::lit("deferred scopes are not supports error calls", 44), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1aa381160_scopeChecker> _8197_root = _1aa38453c_getRoot(_self_);;
	if ((!((*((*((*(_8197_root))._field_owner))._field_Decl))._field_Exceptional))) {
		_1aa3be434_pushErr((*(_self_))._field_s, _81469_err, jule::Str::lit("error call can only useable for exceptional functions", 53), jule::Slice<jule::Any>());
		_1aa3be797_pushSuggestion((*(_self_))._field_s, jule::Str::lit("you can declare an exceptional function with \"!\" operator", 57), jule::Slice<jule::Any>());
	};
	(*((*(_81438_m))))._field_Func=(*_8197_root.alloc)._field_owner;
}



inline void _1aa387ab2_checkExpr(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa2ee9b3_Expr> _82730_expr) {
	jule::Ptr<_1aa44e9c0_eval> _8287_eval = _1aa3cb73d_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data0));;
	(*(_8287_eval))._field_ignored=true;
	jule::Ptr<_1aa44cc98_Data> _8307_d = _1aa46cc63_evalExpr(_8287_eval, _82730_expr);;
	if (((_8307_d == nullptr) || ((*(_8307_d))._field_Model == nullptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_8307_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1bc38ba2c:;
			{
				jule::Ptr<_1aa32c00c_BuiltinErrorCallExprModel> _8398_m = (*(_8307_d))._field_Model.unsafe_cast_ptr<_1aa32c00c_BuiltinErrorCallExprModel>();;
				_1aa387809_processErrorCall(_self_, &(_8398_m), (*(_82730_expr))._field_Token);
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8307_d, &__jule_any_type31); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33 || _match_expr.type == &__jule_any_type34 || _match_expr.type == &__jule_any_type35 || _match_expr.type == &__jule_any_type36 || _match_expr.type == &__jule_any_type37 || _match_expr.type == &__jule_any_type38 || _match_expr.type == &__jule_any_type39 || _match_expr.type == &__jule_any_type40 || _match_expr.type == &__jule_any_type41) {
			_case_begin_1bc38c137:;
			{
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8307_d, &__jule_any_type31); __jule_collection; }));
			}
		}
		else {
			_case_begin_1bc38c0c1:;
			{
				_1aa3be434_pushErr((*(_self_))._field_s, (*(_82730_expr))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bc38c06b:;
	};
}



inline jule::Ptr<_1aa3790c0_If> _1aa387e03_checkIf(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa3110ce_If> _85828_i) {
	jule::Ptr<_1aa378ba2_Scope> _8597_s = _1aa3871dd_checkChild(_self_, &((*(_85828_i))._field_Scope));;
	jule::Ptr<_1aa44cc98_Data> _8617_d = _1aa46cc63_evalExpr(_1aa3cb73d_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data0)), (*_85828_i.alloc)._field_Expr);;
	if ((_8617_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a6023763_Prim> _8667_prim = _1a601cd01_Prim((*(_8617_d))._field_Kind.ptr());;
	if (((_8667_prim == nullptr) || (!(_1a6026997_IsBool(_8667_prim.ptr()))))) {
		_1aa3be434_pushErr((*(_self_))._field_s, (*((*_85828_i.alloc)._field_Expr))._field_Token, jule::Str::lit("if conditions must be have boolean expression", 45), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1aa3790c0_If>(_1aa3790c0_If{._field_Expr=(*(_8617_d))._field_Model, ._field_Scope=_8597_s});;
}



inline jule::Ptr<_1aa3793bc_Else> _1aa388244_checkElse(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa3114a8_Else> _87830_e) {
	return jule::new_ptr<_1aa3793bc_Else>(_1aa3793bc_Else{._field_Scope=_1aa3871dd_checkChild(_self_, &((*(_87830_e))._field_Scope))});;
}



inline void _1aa3884ec_checkConditional(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa31195e_Conditional> _88437_conditional) {
	jule::Ptr<_1aa3797da_Conditional> _8857_c = jule::new_ptr<_1aa3797da_Conditional>(_1aa3797da_Conditional{._field_Elifs=jule::Slice<jule::Ptr<_1aa3790c0_If>>(nullptr), ._field_Default=jule::Ptr<_1aa3793bc_Else>(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8857_c, &__jule_any_type42); __jule_collection; }));
	(*_8857_c.alloc)._field_Elifs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa3790c0_If>>::alloc(0LL, ((*(_88437_conditional))._field_Tail.len() + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa3790c0_If>(nullptr); __jule_collection; });
	(*_8857_c.alloc)._field_Elifs=jule::append((*_8857_c.alloc)._field_Elifs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa3790c0_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1aa387e03_checkIf(_self_, (*_88437_conditional.alloc)._field_Head); __jule_collection; }));
	{
		auto expr = &((*_88437_conditional.alloc)._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc398781:;
		if (it != expr_end) {
			jule::Ptr<_1aa3110ce_If> _89115_elif = *it;
			{
				(*_8857_c.alloc)._field_Elifs=jule::append((*_8857_c.alloc)._field_Elifs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa3790c0_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1aa387e03_checkIf(_self_, _89115_elif); __jule_collection; }));
			}
			_iter_next_1bc398781:;
			++it;
			goto _iter_begin_1bc398781;
		}
		_iter_end_1bc398781:;
	};
	if (((*_88437_conditional.alloc)._field_Default != nullptr)) {
		(*_8857_c.alloc)._field_Default=_1aa388244_checkElse(_self_, (*_88437_conditional.alloc)._field_Default);
	};
}



inline void _1aa3889c5_checkIterScopeSsc(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Uintptr _90034_it, jule::Ptr<_1aa30a6a0_ScopeTree> _90051_tree, jule::Ptr<_1aa378ba2_Scope>* _90074_s, jule::Ptr<_1aa381160_scopeChecker> _90089_ssc) {
	(*(_90089_ssc))._field_it=_90034_it;
	_1aa3869a1_checkChildSsc(_self_, &(_90051_tree), _90074_s, &(_90089_ssc));
}



inline jule::Ptr<_1aa378ba2_Scope> _1aa388e7b_checkIterScopeSc(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Uintptr _90533_it, jule::Ptr<_1aa30a6a0_ScopeTree> _90550_tree, jule::Ptr<_1aa381160_scopeChecker> _90572_ssc) {
	jule::Ptr<_1aa378ba2_Scope> _9067_scope = _1aa386583_getChild(_self_.ptr());;
	_1aa3889c5_checkIterScopeSsc(_self_, _90533_it, _90550_tree, &(_9067_scope), _90572_ssc);
	return _9067_scope;;
}



inline jule::Ptr<_1aa378ba2_Scope> _1aa389377_checkIterScope(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Uintptr _91131_it, jule::Ptr<_1aa30a6a0_ScopeTree>* _91149_tree) {
	jule::Ptr<_1aa381160_scopeChecker> _9127_ssc = _1aa39322c_newChildChecker(_self_);;
	return _1aa388e7b_checkIterScopeSc(_self_, _91131_it, (*(_91149_tree)), _9127_ssc);;
}



inline void _1aa389630_checkInfIter(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa30e143_Iter>* _91634_it) {
	jule::Ptr<_1aa379ad7_InfIter> _9177_kind = jule::new_ptr<_1aa379ad7_InfIter>(_1aa379ad7_InfIter{._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9177_kind, &__jule_any_type43); __jule_collection; }));
	(*_9177_kind.alloc)._field_Scope=_1aa389377_checkIterScope(_self_, static_cast<jule::Uintptr>(_9177_kind), &((*((*(_91634_it))))._field_Scope));
}



inline void _1aa3898d8_checkWhileIter(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa30e143_Iter>* _92236_it) {
	jule::Ptr<_1aa30e96d_WhileKind> _9237_wh = (*((*(_92236_it))))._field_Kind.cast_ptr<_1aa30e96d_WhileKind>(&__jule_any_type44);;
	if ((((*(_9237_wh))._field_Expr == nullptr) && ((*_9237_wh.alloc)._field_Next == nullptr))) {
		_1aa389630_checkInfIter(_self_, _92236_it);
		return;;
	};
	jule::Ptr<_1aa37a08d_WhileIter> _9297_kind = jule::new_ptr<_1aa37a08d_WhileIter>(_1aa37a08d_WhileIter{._field_Expr=jule::Any(nullptr), ._field_Next=jule::Any(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9297_kind, &__jule_any_type45); __jule_collection; }));
	(*_9297_kind.alloc)._field_Scope=_1aa389377_checkIterScope(_self_, static_cast<jule::Uintptr>(_9297_kind), &((*((*(_92236_it))))._field_Scope));
	if (((*_9237_wh.alloc)._field_Expr != nullptr)) {
		jule::Ptr<_1aa44cc98_Data> _9348_d = _1aa46cc63_evalExpr(_1aa3cb73d_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data0)), (*_9237_wh.alloc)._field_Expr);;
		if ((_9348_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1a6023763_Prim> _9394_prim = _1a601cd01_Prim((*(_9348_d))._field_Kind.ptr());;
		if ((_9394_prim == nullptr)) {
			_1aa3be434_pushErr((*(_self_))._field_s, (*((*(_92236_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1a6026997_IsBool(_9394_prim.ptr())))) {
			_1aa3be434_pushErr((*(_self_))._field_s, (*((*(_92236_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		(*_9297_kind.alloc)._field_Expr=(*(_9348_d))._field_Model;
	};
	if (_1aa30ed14_IsWhileNext(_9237_wh)) {
		if ((!(_1aa378135_isValidAstStForNextSt(&((*_9237_wh.alloc)._field_Next))))) {
			_1aa3be434_pushErr((*(_self_))._field_s, (*_9237_wh.alloc)._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			return;;
		};
		jule::I32 _9594_n = (*(*(_self_))._field_scope.alloc)._field_Stmts.len();;
		_1aa391acc_checkNode(_self_, &((*_9237_wh.alloc)._field_Next));
		if ((_9594_n < (*(*(_self_))._field_scope.alloc)._field_Stmts.len())) {
			jule::Any _9629_st = (*((*(_self_))._field_scope))._field_Stmts[_9594_n];;
			((*((*(_self_))._field_scope))._field_Stmts).mut_slice(0LL, _9594_n);;
			if ((!(_1aa3783ee_isValidStForNextSt(&(_9629_st))))) {
				_1aa3be434_pushErr((*(_self_))._field_s, (*_9237_wh.alloc)._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			};
			(*_9297_kind.alloc)._field_Next=_9629_st;
		};
	};
}



inline void _1aa389d06_checkComptimeRangeIter(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa30e143_Iter>* _97244_it, jule::Ptr<_1aa37a9d9_RangeIter>* _97260_kind, jule::Ptr<_1aa44cc98_Data>* _97283_d) {
	if (((*((*(_97260_kind))))._field_KeyA != nullptr)) {
		if (((!(_1aa3bd9c7_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _1aa3859d3_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_97260_kind))))._field_KeyA.alloc)._field_Ident)))) {
			_1aa3be434_pushErr((*(_self_))._field_s, (*(*((*(_97260_kind))))._field_KeyA.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_97260_kind))))._field_KeyA.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
			_1aa3be797_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	if (((*((*(_97260_kind))))._field_KeyB != nullptr)) {
		if (((!(_1aa3bd9c7_isFlag((*(_self_))._field_s, static_cast<jule::I32>(1LL)))) && _1aa3859d3_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_97260_kind))))._field_KeyB.alloc)._field_Ident)))) {
			_1aa3be434_pushErr((*(_self_))._field_s, (*(*((*(_97260_kind))))._field_KeyB.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_97260_kind))))._field_KeyB.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
			_1aa3be797_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1aa310375_RangeKind> _9867_rang = (*((*(_97244_it))))._field_Kind.cast_ptr<_1aa310375_RangeKind>(&__jule_any_type46);;
	_1aa39379e_makeComptimeRange(_97283_d);
	if ((*((*(_97283_d))))._field_Decl) {
		_1aa3be434_pushErr((*(_self_))._field_s, (*((*(_9867_rang))._field_Expr))._field_Token, jule::Str::lit("type @ is not supports comptime iterations", 42), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*((*(_97283_d))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
		return;;
	};
	_1aa442809_rangeChecker _9937_rc = _1aa442809_rangeChecker{._field_sc=_self_, ._field_rang=_9867_rang, ._field_Kind=(*(_97260_kind)), ._field_d=(*(_97283_d))};;
	jule::Bool _9993_ok = _1aa444850_check(&_9937_rc);;
	if ((!(_9993_ok))) {
		return;;
	};
	jule::Ptr<_1aa34c14d_comptimeRange> _10047_comptime = _1a602119a_comptimeRange((*((*(_97283_d))))._field_Kind);;
	((_1aa34be2d_comptimeRangeKindMptrData*)(*(_10047_comptime))._field_kind.safe_type())->_1aa34b625_ready((*(_10047_comptime))._field_kind.data, &((*((*(_97260_kind))))._field_KeyA), &((*((*(_97260_kind))))._field_KeyB));
	jule::I32 _10067_i = 0LL;;
	jule::I32 _10073_errors = (*(*(_self_))._field_s.alloc)._field_errors.len();;
	for (; (_10067_i < ((_1aa34be2d_comptimeRangeKindMptrData*)(*_10047_comptime.alloc)._field_kind.safe_type())->_1aa34bcc9_len((*_10047_comptime.alloc)._field_kind.data)); (_10067_i)++) {
		{
			jule::Ptr<_1aa381160_scopeChecker> _10098_ssc = _1aa39322c_newChildChecker(_self_);;
			jule::Ptr<_1aa378ba2_Scope> _10108_scope = _1aa386583_getChild(_self_);;
			if (((*((*(_97260_kind))))._field_KeyA != nullptr)) {
				(*(*((*(_97260_kind))))._field_KeyA.alloc)._field_Scope=_10108_scope;
				(*((*(_10098_ssc))._field_table))._field_Vars=jule::append((*(*(_10098_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_97260_kind))))._field_KeyA; __jule_collection; }));
			};
			if (((*((*(_97260_kind))))._field_KeyB != nullptr)) {
				(*(*((*(_97260_kind))))._field_KeyB.alloc)._field_Scope=_10108_scope;
				(*(*(_10098_ssc))._field_table.alloc)._field_Vars=jule::append((*(*(_10098_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_97260_kind))))._field_KeyB; __jule_collection; }));
			};
			((_1aa34be2d_comptimeRangeKindMptrData*)(*_10047_comptime.alloc)._field_kind.safe_type())->_1aa34ba43_step((*_10047_comptime.alloc)._field_kind.data, _10067_i, &((*((*(_97260_kind))))._field_KeyA), &((*((*(_97260_kind))))._field_KeyB));
			_1aa3869a1_checkChildSsc(_self_, &((*((*(_97244_it))))._field_Scope), &(_10108_scope), &(_10098_ssc));
			if ((_10073_errors != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
				goto _iter_end_1bc3b94e9;
			};
			(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_10108_scope, &__jule_any_type29); __jule_collection; }));
		}
	_iter_next_1bc3b94e9:;
	}
	_iter_end_1bc3b94e9:;;
}



inline void _1aa38a0ae_checkRangeIter(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa30e143_Iter>* _102936_it) {
	jule::Ptr<_1aa310375_RangeKind> _10307_rang = (*((*(_102936_it))))._field_Kind.cast_ptr<_1aa310375_RangeKind>(&__jule_any_type46);;
	jule::Ptr<_1aa44cc98_Data> _10327_d = _1aa46c922_evalExpr1(_1aa3cb73d_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data0)), (*(_10307_rang))._field_Expr);;
	if ((_10327_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1aa37a9d9_RangeIter> _10377_kind = jule::new_ptr<_1aa37a9d9_RangeIter>(_1aa37a9d9_RangeIter{._field_Expr=_10327_d, ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_KeyA=jule::Ptr<_1aa3e4d3e_Var>(nullptr), ._field_KeyB=jule::Ptr<_1aa3e4d3e_Var>(nullptr)});;
	if ((*((*(_102936_it))))._field_Comptime) {
		_1aa389d06_checkComptimeRangeIter(_self_, _102936_it, &(_10377_kind), &(_10327_d));
		return;;
	};
	if (_1a601edad_comptime((*(_10327_d))._field_Kind.ptr())) {
		_1aa3be434_pushErr((*(_self_))._field_s, (*((*_10307_rang.alloc)._field_Expr))._field_Token, jule::Str::lit("comptime expressions cannot be iterated at runtime", 50), jule::Slice<jule::Any>());
		_1aa3be797_pushSuggestion((*(_self_))._field_s, jule::Str::lit("declarate comptime iteration like: const for ...", 48), jule::Slice<jule::Any>());
		return;;
	};
	_1aa442809_rangeChecker _10517_rc = _1aa442809_rangeChecker{._field_sc=_self_, ._field_rang=_10307_rang, ._field_Kind=_10377_kind, ._field_d=_10327_d};;
	jule::Bool _10573_ok = _1aa444850_check(&_10517_rc);;
	if ((!(_10573_ok))) {
		return;;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_10377_kind, &__jule_any_type47); __jule_collection; }));
	jule::Ptr<_1aa381160_scopeChecker> _10647_ssc = _1aa39322c_newChildChecker(_self_);;
	jule::Ptr<_1aa378ba2_Scope> _10657_scope = _1aa386583_getChild(_self_);;
	if (((*(_10377_kind))._field_KeyA != nullptr)) {
		if (((!(_1aa3bd9c7_isFlag((*(_self_))._field_s, static_cast<jule::I32>(1LL)))) && _1aa3859d3_isDuplicatedIdent(_self_, 0LLU, &((*(*(_10377_kind))._field_KeyA.alloc)._field_Ident)))) {
			_1aa3be434_pushErr((*(_self_))._field_s, (*(*(_10377_kind))._field_KeyA.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_10377_kind))._field_KeyA.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
			_1aa3be797_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*(*(_10377_kind))._field_KeyA.alloc)._field_Scope=_10657_scope;
		(*((*(_10647_ssc))._field_table))._field_Vars=jule::append((*(*(_10647_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_10377_kind.alloc)._field_KeyA; __jule_collection; }));
	};
	if (((*_10377_kind.alloc)._field_KeyB != nullptr)) {
		if (((!(_1aa3bd9c7_isFlag((*(_self_))._field_s, static_cast<jule::I32>(1LL)))) && _1aa3859d3_isDuplicatedIdent(_self_, 0LLU, &((*(*(_10377_kind))._field_KeyB.alloc)._field_Ident)))) {
			_1aa3be434_pushErr((*(_self_))._field_s, (*(*(_10377_kind))._field_KeyB.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_10377_kind))._field_KeyB.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
			_1aa3be797_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*(*(_10377_kind))._field_KeyB.alloc)._field_Scope=_10657_scope;
		(*(*(_10647_ssc))._field_table.alloc)._field_Vars=jule::append((*(*(_10647_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_10377_kind.alloc)._field_KeyB; __jule_collection; }));
	};
	_1aa3889c5_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(_10377_kind), (*((*(_102936_it))))._field_Scope, &(_10657_scope), _10647_ssc);
	(*_10377_kind.alloc)._field_Scope=_10657_scope;
}



inline void _1aa38a367_checkIter(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa30e143_Iter> _108930_it) {
	if (_1aa30e4d9_IsInf(_108930_it.ptr())) {
		if ((*_108930_it.alloc)._field_Comptime) {
			_1aa3be434_pushErr((*(_self_))._field_s.ptr(), (*_108930_it.alloc)._field_Token, jule::Str::lit("comptime iterations can only be range iteration", 47), jule::Slice<jule::Any>());
			return;;
		};
		_1aa389630_checkInfIter(_self_, &(_108930_it));
		return;;
	};
	{
		auto &_match_expr{ (*(_108930_it))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1bc3d24ac:;
			{
				if ((*_108930_it.alloc)._field_Comptime) {
					_1aa3be434_pushErr((*(_self_))._field_s, (*_108930_it.alloc)._field_Token, jule::Str::lit("comptime iterations can only be range iteration", 47), jule::Slice<jule::Any>());
					return;;
				};
				_1aa3898d8_checkWhileIter(_self_, &(_108930_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1bc3d39a8:;
			{
				_1aa38a0ae_checkRangeIter(_self_, &(_108930_it));
			}
		}
		else {
			_case_begin_1bc3d34ad:;
			{
				jule::outln(jule::Str::lit("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1bc3d3458:;
	};
}



inline jule::Bool _1aa38a6a8_checkValidContLabel(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Uintptr _111336_it) {
	jule::Ptr<_1aa381160_scopeChecker> _11147_scope = _self_;;
	_julec_label_1bc3d5999:;
	if (((*(_11147_scope))._field_it == _111336_it)) {
		return true;;
	};
	if (((*_11147_scope.alloc)._field_parent != nullptr)) {
		_11147_scope=(*_11147_scope.alloc)._field_parent;
		goto _julec_label_1bc3d5999;
	};
	return false;;
}



inline jule::Bool _1aa38a9e9_checkValidBreakLabel(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Uintptr _112937_ptr) {
	jule::Ptr<_1aa381160_scopeChecker> _11307_scope = _self_;;
	_julec_label_1bc3d7a45:;
	if (((*(_11307_scope))._field_it == _112937_ptr)) {
		return true;;
	};
	if (((*_11307_scope.alloc)._field_cse != 0LLU)) {
		jule::Uintptr _11384_mtch = static_cast<jule::Uintptr>((*(((_1aa37d8dd_Case*)((*_11307_scope.alloc)._field_cse))))._field_Owner);;
		if ((_11384_mtch == _112937_ptr)) {
			return true;;
		};
	};
	if (((*_11307_scope.alloc)._field_parent != nullptr)) {
		_11307_scope=(*_11307_scope.alloc)._field_parent;
		goto _julec_label_1bc3d7a45;
	};
	return false;;
}



inline jule::Ptr<_1aa37ad6e_ContSt> _1aa38ad3a_checkContValidScope(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa310b28_ContSt> _115236_c) {
	if (_1aa383eed_isDeferred(_self_)) {
		_1aa3be434_pushErr((*_self_.alloc)._field_s.ptr(), (*(_115236_c))._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*_115236_c.alloc)._field_Label != nullptr)) {
		return jule::new_ptr<_1aa37ad6e_ContSt>(_1aa37ad6e_ContSt{._field_It=0});;
	};
	jule::Ptr<_1aa381160_scopeChecker> _11627_scope = _self_;;
	_julec_label_1bc3dbecd:;
	{
		
		if (((((*_11627_scope.alloc)._field_it == 0LLU) && ((*_11627_scope.alloc)._field_parent != nullptr)) && ((*_11627_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1bc3dc792:;
			{
				_11627_scope=(*_11627_scope.alloc)._field_parent;
				goto _julec_label_1bc3dbecd;
			}
		}
		else if (((*_11627_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1bc3dc82a:;
			{
				return jule::new_ptr<_1aa37ad6e_ContSt>(_1aa37ad6e_ContSt{._field_It=(*_11627_scope.alloc)._field_it});;
			}
		}
		_match_end_1bc3dc6e8:;
	};
	_1aa3be434_pushErr((*(_self_))._field_s, (*_115236_c.alloc)._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1aa38b0e3_checkCont(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa310b28_ContSt> _117626_c) {
	jule::Ptr<_1aa37ad6e_ContSt> _11777_cont = _1aa38ad3a_checkContValidScope(_self_, _117626_c);;
	if ((_11777_cont == nullptr)) {
		return;;
	};
	if (((*(_117626_c))._field_Label != nullptr)) {
		jule::Ptr<_1aa37eadc_scopeLabel> _11838_label = _1aa3761bb_findLabelParent(&((*(*(_117626_c))._field_Label.alloc)._field_Kind), (*_self_.alloc)._field_parent);;
		if ((_11838_label == nullptr)) {
			_1aa3be434_pushErr((*_self_.alloc)._field_s.ptr(), (*_117626_c.alloc)._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_117626_c))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
			return;;
		};
		(*(_11838_label))._field_used=true;
		if ((((*(_11838_label))._field_pos + 1LL) >= (*((*((*(_11838_label))._field_scope))._field_scope))._field_Stmts.len())) {
			_1aa3be434_pushErr((*(_self_))._field_s, (*_117626_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_117626_c))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
			return;;
		};
		jule::I32 _11964_i = ((*(_11838_label))._field_pos + 1LL);;
		if ((_11964_i >= (*(*((*(_11838_label))._field_scope))._field_scope.alloc)._field_Stmts.len())) {
			_1aa3be434_pushErr((*(_self_))._field_s, (*_117626_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>());
		} else {
			jule::Any _12009_st = (*(*((*(_11838_label))._field_scope))._field_scope.alloc)._field_Stmts[_11964_i];;
			{
				auto &_match_expr{ _12009_st };
				
				if (_match_expr.type == &__jule_any_type43) {
					_case_begin_1bc3e80e9:;
					{
						(*(_11777_cont))._field_It=static_cast<jule::Uintptr>(_12009_st.unsafe_cast_ptr<_1aa379ad7_InfIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type47) {
					_case_begin_1bc3e82c5:;
					{
						(*(_11777_cont))._field_It=static_cast<jule::Uintptr>(_12009_st.unsafe_cast_ptr<_1aa37a9d9_RangeIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type45) {
					_case_begin_1bc3e833b:;
					{
						(*(_11777_cont))._field_It=static_cast<jule::Uintptr>(_12009_st.unsafe_cast_ptr<_1aa37a08d_WhileIter>());
					}
				}
				else {
					_case_begin_1bc3e825e:;
					{
						_1aa3be434_pushErr((*(_self_))._field_s, (*_117626_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_117626_c))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
					}
				}
				_match_end_1bc3e8209:;
			};
		};
	};
	if (((*(_11777_cont))._field_It != 0LLU)) {
		if ((!(_1aa38a6a8_checkValidContLabel(_self_, (*(_11777_cont))._field_It)))) {
			_1aa3be434_pushErr((*(_self_))._field_s, (*_117626_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_117626_c))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		};
	};
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_11777_cont, &__jule_any_type48); __jule_collection; }));
}



inline void _1aa38b39b_checkLabel(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa307c63_LabelSt> _122331_l) {
	if ((_1aa384e55_findLabel(_self_.ptr(), &((*(_122331_l))._field_Ident)) != nullptr)) {
		_1aa3be434_pushErr((*_self_.alloc)._field_s.ptr(), (*_122331_l.alloc)._field_Token, jule::Str::lit("label is already exist in this identifier: @", 44), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_122331_l.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1aa37b545_Label> _12297_label = jule::new_ptr<_1aa37b545_Label>(_1aa37b545_Label{._field_Ident=(*_122331_l.alloc)._field_Ident});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_12297_label, &__jule_any_type28); __jule_collection; }));
	(*((*_self_.alloc)._field_labels))=jule::append((*(*(_self_))._field_labels.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa37eadc_scopeLabel>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1aa37eadc_scopeLabel>(_1aa37eadc_scopeLabel{._field_token=(*_122331_l.alloc)._field_Token, ._field_label=_12297_label, ._field_pos=((*(*(_self_))._field_scope.alloc)._field_Stmts.len() - 1LL), ._field_scope=_self_, ._field_used=false}); __jule_collection; }));
}



inline void _1aa38b654_pushGoto(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa30813c_GotoSt> _124229_gt) {
	jule::Ptr<_1aa37b91e_GotoSt> _12437_st = jule::new_ptr<_1aa37b91e_GotoSt>(_1aa37b91e_GotoSt{._field_Ident=(*((*(_124229_gt))._field_Label))._field_Kind, ._field_Label=jule::Ptr<_1aa37b545_Label>(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_12437_st, &__jule_any_type49); __jule_collection; }));
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*(_self_))._field_gotos.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa380170_scopeGoto>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1aa380170_scopeGoto>(_1aa380170_scopeGoto{._field_st=_12437_st, ._field_gt=_124229_gt, ._field_scope=_self_, ._field_pos=((*(*(_self_))._field_scope.alloc)._field_Stmts.len() - 1LL)}); __jule_collection; }));
}



inline void _1aa38b90c_checkPostfix(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa30912c_AssignSt> _125633_a) {
	if (((*(_125633_a))._field_Left.len() > 1LL)) {
		_1aa3be434_pushErr((*(_self_))._field_s.ptr(), (*_125633_a.alloc)._field_Setter, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aa2ee9b3_Expr> _12627_expr = (*((*(_125633_a))._field_Left[0LL]))._field_Expr;;
	jule::Ptr<_1aa44cc98_Data> _12637_d = _1aa46cc63_evalExpr(_1aa3cb73d_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data0)), _12627_expr);;
	if ((_12637_d == nullptr)) {
		return;;
	};
	_1aa377d6b_checkAssign(&((*_self_.alloc)._field_s), &(_12637_d), nullptr, (*_125633_a.alloc)._field_Setter);
	if ((_1a601d31d_Ptr((*(_12637_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a602aa56_Ptr> _12718_ptr = _1a601d31d_Ptr((*(_12637_d))._field_Kind);;
		if (_1a602b5c3_IsUnsafe(_12718_ptr.ptr())) {
			_1aa3be434_pushErr((*(_self_))._field_s, (*_125633_a.alloc)._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_125633_a.alloc)._field_Setter))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str((*(_12637_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
			return;;
		};
	} else {
		if (((_1a601cd01_Prim((*(_12637_d))._field_Kind.ptr()) == nullptr) || (!(_1a6e77078_IsNum((*(_1a601cd01_Prim((*(_12637_d))._field_Kind)))._field_Kind))))) {
			_1aa3be434_pushErr((*(_self_))._field_s, (*_125633_a.alloc)._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_125633_a.alloc)._field_Setter))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str((*(_12637_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
			return;;
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1aa37bce8_Postfix>(_1aa37bce8_Postfix{._field_Expr=(*(_12637_d))._field_Model, ._field_Op=(*((*_125633_a.alloc)._field_Setter))._field_Kind}), &__jule_any_type50); __jule_collection; }));
}



inline jule::Bool _1aa38bc4d_isNewAssignIdent(_1aa381160_scopeChecker* _self_, jule::Str _128932_ident) {
	if ((_1aa2d7aab_IsIgnoreIdent(_128932_ident) || (_128932_ident).empty())) {
		return false;;
	};
	return (_1aa44a9cc_defByIdent((*(_self_))._field_table.ptr(), &(_128932_ident), false) == nullptr);;
}



inline void _1aa38c006_removeInteriorMutRisk(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa44cc98_Data>* _130243_d) {
	jule::Ptr<_1aa31e373_StructIns> _13033_s = _1a601e374_Struct((*((*(_130243_d))))._field_Kind.ptr());;
	if ((_13033_s == nullptr)) {
		return;;
	};
	jule::Ptr<_1aa381160_scopeChecker> _13073_root = _1aa3847c3_getHardRoot(_self_);;
	if (((*((*(_13073_root))._field_owner))._field_Owner != _13033_s)) {
		return;;
	};
	(*((*(_130243_d))))._field_Mutable=true;
}



inline jule::Bool _1aa38c4ac_checkStructureAssignOp(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa31e373_StructIns>* _131644_s, jule::Ptr<_1aa30912c_AssignSt>* _131664_a, jule::Ptr<_1aa44cc98_Data>* _131683_r) {
	jule::Ptr<_1aa334597_FnIns> _131911_overload = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_131664_a))))._field_Setter))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(40LLU)) {
			_case_begin_1bc4146dc:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(41LLU)) {
			_case_begin_1bc41439b:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_1bc414412:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(42LLU)) {
			_case_begin_1bc414478:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1bc4144de:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(45LLU)) {
			_case_begin_1bc414555:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(46LLU)) {
			_case_begin_1bc4145bb:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(49LLU)) {
			_case_begin_1bc415c3d:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(48LLU)) {
			_case_begin_1bc415ca4:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(47LLU)) {
			_case_begin_1bc415d1a:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1bc413b70:;
			{
				_1aa3be434_pushErr((*(_self_))._field_s.ptr(), (*((*(_131664_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_131664_a))))._field_Setter))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1aa31e72a_Str((*(_131644_s)).ptr()), &__jule_any_type4); __jule_collection; }));
				return false;;
			}
		}
		_match_end_1bc414335:;
	};
	if ((_131911_overload == nullptr)) {
		_1aa3be434_pushErr((*(_self_))._field_s.ptr(), (*((*(_131664_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_131664_a))))._field_Setter))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1aa31e72a_Str((*(_131644_s)).ptr()), &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	jule::Ptr<_1aa33351e_ParamIns> _13517_p = (*(_131911_overload))._field_Params[1LL];;
	return _1aa3cbc9e_checkAssignType((*(_self_))._field_s, (*((*(_13517_p))._field_Decl))._field_Reference, &((*_13517_p.alloc)._field_Kind), _131683_r, (*((*(_131664_a))))._field_Setter);;
}



inline void _1aa38c765_checkSingleAssign(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa30912c_AssignSt>* _135539_a) {
	jule::Ptr<_1aa44cc98_Data> _135611_l = nullptr;;
	if ((!(_1aa2d7aab_IsIgnoreIdent((*((*((*(_135539_a))))._field_Left[0LL]))._field_Ident)))) {
		jule::Ptr<_1aa2ee9b3_Expr> _13598_expr = (*((*((*(_135539_a))))._field_Left[0LL]))._field_Expr;;
		_135611_l=_1aa46cc63_evalExpr(_1aa3cb73d_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data0)), _13598_expr);
		if ((_135611_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1aa44e9c0_eval> _13667_eval = static_cast<jule::Ptr<_1aa44e9c0_eval>>(nullptr);;
	if ((_135611_l != nullptr)) {
		_13667_eval=_1aa3cb3ec_evalp((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data0), (*(_135611_l))._field_Kind);
	} else {
		_13667_eval=_1aa3cb73d_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data0));
	};
	(*(_13667_eval))._field_unsafety=_1aa38354c_isUnsafe(_self_);
	jule::Ptr<_1aa44cc98_Data> _13737_r = _1aa46cc63_evalExpr(_13667_eval, (*((*(_135539_a))))._field_Right);;
	if ((_13737_r == nullptr)) {
		return;;
	};
	_1aa38c006_removeInteriorMutRisk(_self_, &(_13737_r));
	if ((_135611_l == nullptr)) {
		if (_1a601ba14_Void((*(_13737_r))._field_Kind.ptr())) {
			_1aa3be434_pushErr((*(_self_))._field_s, (*((*((*(_135539_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_13737_r, &__jule_any_type31); __jule_collection; }));
		return;;
	};
	if ((!(_1aa377d6b_checkAssign(&((*_self_.alloc)._field_s), &(_135611_l), _13737_r, (*((*(_135539_a))))._field_Setter)))) {
		return;;
	};
	if ((_1a601eb27_Tup((*(_13737_r))._field_Kind) != nullptr)) {
		_1aa3be434_pushErr((*(_self_))._field_s, (*((*(_135539_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aa323234_OperandExprModel> _13977_lm = jule::new_ptr<_1aa323234_OperandExprModel>(_1aa323234_OperandExprModel{._field_Kind=(*(_135611_l))._field_Kind, ._field_Model=(*(_135611_l))._field_Model});;
	jule::Ptr<_1aa323234_OperandExprModel> _14017_rm = jule::new_ptr<_1aa323234_OperandExprModel>(_1aa323234_OperandExprModel{._field_Kind=(*(_13737_r))._field_Kind, ._field_Model=(*(_13737_r))._field_Model});;
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1aa37c29e_Assign>(_1aa37c29e_Assign{._field_Left=_13977_lm, ._field_Right=_14017_rm, ._field_Op=(*((*(_135539_a))))._field_Setter}), &__jule_any_type51); __jule_collection; }));
	if (((*((*((*(_135539_a))))._field_Setter))._field_Id == static_cast<jule::U32>(71LLU))) {
		_1aa4363ad_assignTypeChecker _14088_checker = _1aa4363ad_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*(_135611_l))._field_Kind, ._field_d=_13737_r, ._field_errorToken=(*((*(_135539_a))))._field_Setter};;
		if (_1aa4373ae_check(&_14088_checker)) {
			(*(_14017_rm))._field_Model=(*(_13737_r))._field_Model;
			(*(_13977_lm))._field_Model=(*(_135611_l))._field_Model;
		};
		return;;
	};
	jule::Ptr<_1aa31e373_StructIns> _14207_strct = _1a601e374_Struct((*(_135611_l))._field_Kind);;
	if ((_14207_strct != nullptr)) {
		_1aa38c4ac_checkStructureAssignOp(_self_, &(_14207_strct), _135539_a, &(_13737_r));
		return;;
	};
	jule::U32 _14253_id = (*(*((*(_135539_a))))._field_Setter.alloc)._field_Id;;
	(*(*((*(_135539_a))))._field_Setter.alloc)._field_Id=_1aa39356d_removeEqFromOp((*(*((*(_135539_a))))._field_Setter.alloc)._field_Id);
	_1aa470183_binaryEval _14277_solver = static__1aa470ae0_new(_13667_eval, (*((*(_135539_a))))._field_Setter);;
	({
		jule::Ptr<_1aa44cc98_Data> ___jule_assign_arg = _135611_l;
		jule::Ptr<_1aa44cc98_Data> _1___jule_assign_arg = _13737_r;
		_14277_solver._field_l = ___jule_assign_arg;
		_14277_solver._field_r = _1___jule_assign_arg;
	});
	_1aa474cc0_evalOp(&_14277_solver);
	(*(*((*(_135539_a))))._field_Setter.alloc)._field_Id=_14253_id;
}



inline void _1aa38cce8_processEndPartOfMultiAssign(_1aa381160_scopeChecker* _self_, jule::Ptr<_1aa37c755_MultiAssign>* _143348_st, jule::Ptr<_1aa30912c_AssignSt>* _14348_a, jule::Ptr<_1aa308a99_AssignLeft>* _143427_lexpr, jule::Ptr<_1aa44cc98_Data>* _143452_l, jule::Ptr<_1aa44cc98_Data>* _143467_r) {
	if (((!((*((*(_143427_lexpr))))._field_Reference)) && _1aa2d7aab_IsIgnoreIdent((*((*(_143427_lexpr))))._field_Ident))) {
		if (_1a601ba14_Void((*((*(_143467_r))))._field_Kind.ptr())) {
			_1aa3be434_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_14348_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_1aa44cc98_Data>> &__jule_push_dest = (*((*(_143348_st))))._field_Left; __jule_push_dest.push(nullptr); };
		return;;
	};
	if ((*((*(_14348_a))))._field_Declarative) {
		{
			auto &_match_expr{ (*((*((*(_143427_lexpr))))._field_Expr))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type52) {
				_case_begin_1bc4352e0:;
				{
					if ((!(_1aa38bc4d_isNewAssignIdent(_self_, (*((*(_143427_lexpr))))._field_Ident)))) {
						goto _julec_label_1bc431e02;
					};
				}
			}
			else {
				_case_begin_1bc433e59:;
				{
					if (((*((*(_143427_lexpr))))._field_Mutable || (*((*(_143427_lexpr))))._field_Reference)) {
						_1aa3be434_pushErr((*(_self_))._field_s, (*((*(_143427_lexpr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						return;;
					};
					goto _julec_label_1bc431e02;
				}
			}
			_match_end_1bc433e04:;
		};
		if (_1aa3859d3_isDuplicatedIdent(_self_, 0LLU, &((*((*(_143427_lexpr))))._field_Ident))) {
			_1aa3be434_pushErr((*(_self_))._field_s, (*((*(_143427_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_143427_lexpr))))._field_Ident, &__jule_any_type4); __jule_collection; }));
			_1aa3be797_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
			_1aa3839d1_stop(_self_);
			return;;
		};
		if (_1aa2d7aab_IsIgnoreIdent((*((*(_143427_lexpr))))._field_Ident)) {
			_1aa3be434_pushErr((*(_self_))._field_s, (*((*(_143427_lexpr))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1aa3e4d3e_Var> _14668_v = jule::new_ptr<_1aa3e4d3e_Var>(_1aa3e4d3e_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*((*(_143427_lexpr))))._field_Token, ._field_Ident=(*((*(_143427_lexpr))))._field_Ident, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=(*((*(_143427_lexpr))))._field_Mutable, ._field_Public=false, ._field_Used=false, ._field_Statically=false, ._field_Reference=(*((*(_143427_lexpr))))._field_Reference, ._field_Kind=jule::Ptr<_1a6022d5b_TypeSymbol>(nullptr), ._field_Value=jule::new_ptr<_1aa44de20_Value>(_1aa44de20_Value{._field_Expr=(*((*(_14348_a))))._field_Right, ._field_Data=(*(_143467_r))}), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>(nullptr)});;
		_1aa3db143_checkVarValue((*(_self_))._field_s, &(_14668_v));
		{ jule::Slice<jule::Ptr<_1aa44cc98_Data>> &__jule_push_dest = (*((*(_143348_st))))._field_Left; __jule_push_dest.push(jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=(*((*_14668_v.alloc)._field_Kind))._field_Kind, ._field_Mutable=(*_14668_v.alloc)._field_Mutable, ._field_Reference=(*_14668_v.alloc)._field_Reference, ._field_Lvalue=(!((*(_14668_v))._field_Constant)), ._field_IsRune=false, ._field_Model=jule::Any(_14668_v, &__jule_any_type8), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)})); };
		{ jule::Slice<jule::Ptr<_1aa3e4d3e_Var>> &__jule_push_dest = (*((*(_143348_st))))._field_Decls; __jule_push_dest.push(_14668_v); };
		(*((*(_self_))._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _14668_v; __jule_collection; }));
		return;;
	};
	_julec_label_1bc431e02:;
	if (((*((*(_143427_lexpr))))._field_Mutable || (*((*(_143427_lexpr))))._field_Reference)) {
		_1aa3be434_pushErr((*(_self_))._field_s, (*((*(_143427_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_143427_lexpr))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1aa3be797_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if ((!(_1aa377d6b_checkAssign(&((*(_self_))._field_s), _143452_l, (*(_143467_r)), (*((*(_143427_lexpr))))._field_Token)))) {
		return;;
	};
	;
	_1aa3d1534_checkValidityForInitExpr((*(_self_))._field_s, (*((*(_143452_l))))._field_Mutable, false, &((*((*(_143452_l))))._field_Kind), _143467_r, &((*((*(_14348_a))))._field_Setter));
	_1aa4363ad_assignTypeChecker _15047_checker = _1aa4363ad_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*((*(_143452_l))))._field_Kind, ._field_d=(*(_143467_r)), ._field_errorToken=(*((*(_14348_a))))._field_Setter};;
	_1aa4373ae_check(&_15047_checker);
	{ jule::Slice<jule::Ptr<_1aa44cc98_Data>> &__jule_push_dest = (*((*(_143348_st))))._field_Left; __jule_push_dest.push((*(_143452_l))); };
}



inline void _1aa38d0a1_checkMultiAssign(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa30912c_AssignSt>* _151438_a) {
	jule::Ptr<_1aa44cc98_Data> _15157_rd = _1aa46cc63_evalExpr(_1aa3cb73d_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data0)), (*((*(_151438_a))))._field_Right);;
	if ((_15157_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1aa44cc98_Data>> _15197_right = _1aa377046_getDatasFromTupleData(&(_15157_rd));;
	if ((_15197_right.len() == 1LL)) {
		{
			auto &_match_expr{ (*(_15197_right[0LL]))._field_Model };
			
			if (_match_expr.type == &__jule_any_type53) {
				_case_begin_1bc44a13a:;
				{
					jule::Ptr<_1aa32608e_IndexingExprModel> _15239_iem = (*(_15197_right[0LL]))._field_Model.unsafe_cast_ptr<_1aa32608e_IndexingExprModel>();;
					if ((_1a601e891_Map((*((*(_15239_iem))._field_Expr))._field_Kind.ptr()) != nullptr)) {
						_15197_right=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa44cc98_Data>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=(*(_1a601e891_Map((*((*(_15239_iem))._field_Expr))._field_Kind)))._field_Val, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)}); (*it++) = jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc333_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)}); __jule_collection; });
					};
				}
			}
			_match_end_1bc44a091:;
		};
	};
	{
		
		if (((*((*(_151438_a))))._field_Left.len() > _15197_right.len())) {
			_case_begin_1bc44a69b:;
			{
				_1aa3be434_pushErr((*(_self_))._field_s, (*((*(_151438_a))))._field_Setter, jule::Str::lit("overflow multi assignment identifers", 36), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*((*(_151438_a))))._field_Left.len() < _15197_right.len())) {
			_case_begin_1bc4498cb:;
			{
				_1aa3be434_pushErr((*(_self_))._field_s, (*((*(_151438_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1bc44a1d4:;
	};
	jule::Ptr<_1aa37c755_MultiAssign> _15427_st = jule::new_ptr<_1aa37c755_MultiAssign>(_1aa37c755_MultiAssign{._field_Decls=jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>(nullptr), ._field_Left=jule::Slice<jule::Ptr<_1aa44cc98_Data>>(nullptr), ._field_Right=(*(_15157_rd))._field_Model});;
	{
		auto expr = &((*((*(_151438_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc45010c:;
		if (it != expr_end) {
			jule::I32 _15457_i = it - expr->begin();
			{
				jule::Ptr<_1aa308a99_AssignLeft> _15468_lexpr = (*((*(_151438_a))))._field_Left[_15457_i];;
				jule::Ptr<_1aa44cc98_Data> _154712_l = nullptr;;
				if ((!(_1aa2d7aab_IsIgnoreIdent((*(_15468_lexpr))._field_Ident)))) {
					if ((!((*((*(_151438_a))))._field_Declarative))) {
						goto _julec_label_1bc454254;
					};
					if (((*_15468_lexpr.alloc)._field_Mutable && (*_15468_lexpr.alloc)._field_Reference)) {
						goto _julec_label_1bc4547e8;
					};
					{
						auto &_match_expr{ (*((*(_15468_lexpr))._field_Expr))._field_Kind };
						
						if (_match_expr.type == &__jule_any_type52) {
							_case_begin_1bc453253:;
							{
								if (_1aa38bc4d_isNewAssignIdent(_self_, (*_15468_lexpr.alloc)._field_Ident)) {
									goto _julec_label_1bc4547e8;
								};
							}
						}
						_match_end_1bc4531dc:;
					};
					_julec_label_1bc454254:;
					_154712_l=_1aa46cc63_evalExpr(_1aa3cb73d_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data0)), (*_15468_lexpr.alloc)._field_Expr);
					if ((_154712_l == nullptr)) {
						goto _iter_next_1bc45010c;
					};
					_julec_label_1bc4547e8:;
				};
				jule::Ptr<_1aa44cc98_Data> _15688_r = _15197_right[_15457_i];;
				_1aa38c006_removeInteriorMutRisk(_self_, &(_15688_r));
				_1aa38cce8_processEndPartOfMultiAssign(_self_, &(_15427_st), _151438_a, &(_15468_lexpr), &(_154712_l), &(_15688_r));
			}
			_iter_next_1bc45010c:;
			++it;
			_15457_i++;
			goto _iter_begin_1bc45010c;
		}
		_iter_end_1bc45010c:;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_15427_st, &__jule_any_type54); __jule_collection; }));
}



inline void _1aa38d359_checkAssignSt(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa30912c_AssignSt> _157534_a) {
	{
		
		if (_1aa2d9c56_IsPostfixOp((*((*(_157534_a))._field_Setter))._field_Id)) {
			_case_begin_1bc4581c0:;
			{
				_1aa38b90c_checkPostfix(_self_, _157534_a);
			}
		}
		else if (((*(_157534_a))._field_Left.len() == 1LL)) {
			_case_begin_1bc457d7e:;
			{
				_1aa38c765_checkSingleAssign(_self_, &(_157534_a));
			}
		}
		else {
			_case_begin_1bc457d18:;
			{
				_1aa38d0a1_checkMultiAssign(_self_, &(_157534_a));
			}
		}
		_match_end_1bc457c19:;
	};
}



inline jule::Ptr<_1aa378ba2_Scope> _1aa38d755_checkCaseScope(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa37d8dd_Case>* _158632_c, jule::Ptr<_1aa30a6a0_ScopeTree>* _158647_tree) {
	jule::Ptr<_1aa381160_scopeChecker> _15877_ssc = _1aa39322c_newChildChecker(_self_);;
	(*(_15877_ssc))._field_cse=static_cast<jule::Uintptr>((*(_158632_c)));
	return _1aa386d9c_checkChildSc(_self_, _158647_tree, &(_15877_ssc));;
}



inline jule::Ptr<_1aa37d8dd_Case> _1aa38dcb6_checkCase(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa37cdb5_Match> _159230_m, jule::I32 _159241_i, jule::Ptr<_1aa312652_Case> _159253_c, jule::Ptr<_1aa44cc98_Data> _159272_expr) {
	jule::Ptr<_1aa37d8dd_Case> _15937_case = (*(_159230_m))._field_Cases[_159241_i];;
	(*(_15937_case))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa44cc98_Data>>::alloc(0LL, (*(_159253_c))._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa44cc98_Data>(nullptr); __jule_collection; });
	jule::Bool _15957_constMatched = false;;
	jule::Ptr<_1aa44e9c0_eval> _15967_eval = _1aa3cb73d_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data0));;
	{
		auto expr = &((*_159253_c.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc45d945:;
		if (it != expr_end) {
			jule::Ptr<_1aa2ee9b3_Expr> _159715_e = *it;
			{
				jule::Ptr<_1aa44cc98_Data> _15988_d = _1aa46be4e_evalExprKind(_15967_eval, (*(_159715_e))._field_Kind);;
				if ((_15988_d == nullptr)) {
					goto _iter_next_1bc45d945;
				};
				if ((*_159230_m.alloc)._field_TypeMatch) {
					(*_15937_case.alloc)._field_Exprs=jule::append((*_15937_case.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa44cc98_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15988_d; __jule_collection; }));
					if ((_1aa376c7c_countMatchType(&(_159230_m), &((*(_15988_d))._field_Kind)) > 1LL)) {
						_1aa3be434_pushErr((*(_self_))._field_s, (*_159715_e.alloc)._field_Token, jule::Str::lit("duplicated pattern: type @ is already matched", 45), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_15988_d))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
					};
					if ((*_159230_m.alloc)._field_Comptime) {
						_15957_constMatched=(_15957_constMatched || _1a601ad87_Equal((*(_159272_expr))._field_Kind, (*(_15988_d))._field_Kind));
					} else {
						if ((_1a601d83a_TypeEnum((*(_159272_expr))._field_Kind) != nullptr)) {
							_1aa3cc70b_checkTypeCompatibility((*(_self_))._field_s, &((*(_159272_expr))._field_Kind), &((*(_15988_d))._field_Kind), &((*_159715_e.alloc)._field_Token));
						} else {
							jule::Ptr<_1aa345047_Trait> _16177_trt = _1a601e60a_Trait((*(_159272_expr))._field_Kind);;
							if ((_16177_trt != nullptr)) {
								_1aa3cc70b_checkTypeCompatibility((*(_self_))._field_s, &((*(_159272_expr))._field_Kind), &((*(_15988_d))._field_Kind), &((*_159715_e.alloc)._field_Token));
							};
						};
					};
					goto _iter_next_1bc45d945;
				};
				if ((*(_15988_d))._field_Decl) {
					_1aa3be434_pushErr((*(_self_))._field_s, (*_159715_e.alloc)._field_Token, jule::Str::lit("expecting expression, found type declaration", 44), jule::Slice<jule::Any>());
					_1aa3be797_pushSuggestion((*(_self_))._field_s, jule::Str::lit("you can use type-match if you want to match types", 49), jule::Slice<jule::Any>());
					goto _iter_next_1bc45d945;
				};
				if ((*_159230_m.alloc)._field_Comptime) {
					if (((!(_1aa44d6d3_IsConst(_15988_d.ptr()))) && (_1a60216b7_comptimeTypeInfo((*(_15988_d))._field_Kind) == nullptr))) {
						_1aa3be434_pushErr((*(_self_))._field_s, (*_159715_e.alloc)._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
						_1aa3be797_pushSuggestion((*(_self_))._field_s, jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
						goto _iter_next_1bc45d945;
					};
					if ((!(_15957_constMatched))) {
						if (_1aa44d6d3_IsConst(_15988_d.ptr())) {
							_15957_constMatched=(_1aa44d6d3_IsConst(_159272_expr.ptr()) && _1a6e7d16c_Eq((*(_15988_d))._field_Constant.ptr(), (*((*(_159272_expr))._field_Constant))));
						} else {
							jule::Ptr<_1aa35ac50_comptimeTypeInfo> _16427_exprCti = _1a60216b7_comptimeTypeInfo((*(_159272_expr))._field_Kind);;
							_15957_constMatched=((_16427_exprCti != nullptr) && _1a601ad87_Equal((*(_1a60216b7_comptimeTypeInfo((*(_15988_d))._field_Kind)))._field_base, (*_16427_exprCti.alloc)._field_base));
						};
					};
				};
				(*_15937_case.alloc)._field_Exprs=jule::append((*_15937_case.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa44cc98_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15988_d; __jule_collection; }));
				if ((((!((*_159230_m.alloc)._field_Comptime)) || (_1a60216b7_comptimeTypeInfo((*(_159272_expr))._field_Kind) == nullptr)) || (_1a60216b7_comptimeTypeInfo((*(_15988_d))._field_Kind) == nullptr))) {
					_1aa4363ad_assignTypeChecker _16529_checker = _1aa4363ad_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*(_159272_expr))._field_Kind, ._field_d=_15988_d, ._field_errorToken=(*_159715_e.alloc)._field_Token};;
					_1aa4373ae_check(&_16529_checker);
				};
			}
			_iter_next_1bc45d945:;
			++it;
			goto _iter_begin_1bc45d945;
		}
		_iter_end_1bc45d945:;
	};
	if (((!((*_159230_m.alloc)._field_Comptime)) || _15957_constMatched)) {
		(*_15937_case.alloc)._field_Scope=_1aa38d755_checkCaseScope(_self_, &(_15937_case), &((*_159253_c.alloc)._field_Scope));
	};
	return _15937_case;;
}



inline void _1aa38e1d4_checkCases(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa312e6b_MatchCase>* _166732_m, jule::Ptr<_1aa37cdb5_Match> _166751_rm, jule::Ptr<_1aa44cc98_Data> _166767_expr) {
	(*(_166751_rm))._field_Cases=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa37d8dd_Case>>::alloc(0LL, (*((*(_166732_m))))._field_Cases.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa37d8dd_Case>(nullptr); __jule_collection; });
	{
		auto expr = &((*((*(_166732_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc471183:;
		if (it != expr_end) {
			jule::I32 _16697_i = it - expr->begin();
			{
				jule::Ptr<_1aa37d8dd_Case> _16708_case = jule::new_ptr<_1aa37d8dd_Case>(_1aa37d8dd_Case{._field_Owner=_166751_rm, ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1aa44cc98_Data>>(nullptr), ._field_Next=jule::Ptr<_1aa37d8dd_Case>(nullptr)});;
				if ((_16697_i > 0LL)) {
					(*((*_166751_rm.alloc)._field_Cases[(_16697_i - 1LL)]))._field_Next=_16708_case;
				};
				(*_166751_rm.alloc)._field_Cases=jule::append((*_166751_rm.alloc)._field_Cases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa37d8dd_Case>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _16708_case; __jule_collection; }));
			}
			_iter_next_1bc471183:;
			++it;
			_16697_i++;
			goto _iter_begin_1bc471183;
		}
		_iter_end_1bc471183:;
	};
	if ((((*_166751_rm.alloc)._field_Default != nullptr) && ((*((*(_166732_m))))._field_Cases.len() > 0LL))) {
		(*((*_166751_rm.alloc)._field_Cases[((*_166751_rm.alloc)._field_Cases.len() - 1LL)]))._field_Next=(*_166751_rm.alloc)._field_Default;
	};
	{
		auto expr = &((*((*(_166732_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc47476e:;
		if (it != expr_end) {
			jule::I32 _16838_i = it - expr->begin();
			jule::Ptr<_1aa312652_Case> _168315_c = *it;
			{
				_1aa38dcb6_checkCase(_self_, _166751_rm, _16838_i, _168315_c, _166767_expr);
			}
			_iter_next_1bc47476e:;
			++it;
			_16838_i++;
			goto _iter_begin_1bc47476e;
		}
		_iter_end_1bc47476e:;
	};
}



inline jule::Ptr<_1aa37d8dd_Case> _1aa38e5d0_checkDefault(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa37cdb5_Match> _168833_m, jule::Ptr<_1aa3114a8_Else> _168848_d) {
	jule::Ptr<_1aa37d8dd_Case> _16897_def = jule::new_ptr<_1aa37d8dd_Case>(_1aa37d8dd_Case{._field_Owner=_168833_m, ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1aa44cc98_Data>>(nullptr), ._field_Next=jule::Ptr<_1aa37d8dd_Case>(nullptr)});;
	(*(_16897_def))._field_Scope=_1aa38d755_checkCaseScope(_self_, &(_16897_def), &((*(_168848_d))._field_Scope));
	return _16897_def;;
}



inline void _1aa38e943_checkComptimePanic(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa2d51c4_Token> _169639_callToken, jule::Ptr<_1aa378ba2_Scope>* _169659_s) {
	if (((*((*(_169659_s))))._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _17003_stmt = (*((*(_169659_s))))._field_Stmts[0LL];;
	{
		auto &_match_expr{ _17003_stmt };
		
		if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1bc477e6a:;
			{
				jule::Ptr<_1aa44cc98_Data> _17034_d = _17003_stmt.unsafe_cast_ptr<_1aa44cc98_Data>();;
				{
					auto &_match_expr{ (*(_17034_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type36) {
						_case_begin_1bc478de4:;
						{
							jule::Ptr<_1aa329e50_BuiltinPanicCallExprModel> _17069_m = (*(_17034_d))._field_Model.unsafe_cast_ptr<_1aa329e50_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ (*(_17069_m))._field_Expr };
								
								if (_match_expr.type == &__jule_any_type20) {
									_case_begin_1bc47a08d:;
									{
										jule::Ptr<_1a6e77584_Const> _17096_c = (*(_17069_m))._field_Expr.unsafe_cast_ptr<_1a6e77584_Const>();;
										if ((!(_1a6e7bd3b_IsStr(_17096_c.ptr())))) {
											goto _match_end_1bc47a027;
										};
										if ((_169639_callToken == nullptr)) {
											jule::Ptr<_1aa381160_scopeChecker> _171411_root = _1aa3847c3_getHardRoot(_self_);;
											if (((*(_171411_root))._field_calledFrom == nullptr)) {
												_169639_callToken=(*(_17069_m))._field_Token;
											} else {
												_169639_callToken=(*(_171411_root))._field_calledFrom;
											};
										};
										_1aa3be434_pushErr((*_self_.alloc)._field_s.ptr(), _169639_callToken, jule::Str::lit("compile-time panic: @", 21), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a6e79740_ReadStr(_17096_c), &__jule_any_type4); __jule_collection; }));
										_1aa3839d1_stop(_self_);
									}
								}
								_match_end_1bc47a027:;
							};
						}
					}
					_match_end_1bc478d7d:;
				};
			}
		}
		_match_end_1bc477e15:;
	};
}



inline void _1aa38eca6_processConstMatch(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa37cdb5_Match>* _172839_tm, jule::Ptr<_1aa312e6b_MatchCase>* _172856_m) {
	{
		auto expr = &((*((*(_172839_tm))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc47a3e0:;
		if (it != expr_end) {
			jule::I32 _17298_i = it - expr->begin();
			jule::Ptr<_1aa37d8dd_Case> _172915_c = *it;
			{
				if (((*(_172915_c))._field_Scope != nullptr)) {
					jule::Ptr<_1aa2d51c4_Token> _173113_token = nullptr;;
					if (((!((*((*(_172839_tm))))._field_TypeMatch)) && ((*(*(_172915_c))._field_Scope.alloc)._field_Stmts.len() > 0LL))) {
						_173113_token=(*((*((*((*(_172856_m))))._field_Cases[_17298_i]))._field_Scope))._field_Stmts[0LL]._field_Token;
					};
					_1aa38e943_checkComptimePanic(_self_, _173113_token, &((*_172915_c.alloc)._field_Scope));
					(*((*(_172839_tm))))._field_Default=_172915_c;
					(*((*(_172839_tm))))._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1bc47a3e0:;
			++it;
			_17298_i++;
			goto _iter_begin_1bc47a3e0;
		}
		_iter_end_1bc47a3e0:;
	};
	if (((*((*(_172856_m))))._field_Default != nullptr)) {
		(*((*(_172839_tm))))._field_Cases=nullptr;
		(*((*(_172839_tm))))._field_Default=_1aa38e5d0_checkDefault(_self_, (*(_172839_tm)), (*((*(_172856_m))))._field_Default);
		if (((*((*(_172839_tm))))._field_Default != nullptr)) {
			jule::Ptr<_1aa2d51c4_Token> _174513_token = nullptr;;
			if ((!((*((*(_172839_tm))))._field_TypeMatch))) {
				_174513_token=(*((*((*((*(_172856_m))))._field_Default))._field_Scope))._field_Stmts[0LL]._field_Token;
			};
			_1aa38e943_checkComptimePanic(_self_, _174513_token, &((*(*((*(_172839_tm))))._field_Default.alloc)._field_Scope));
		};
	} else {
		(*((*(_172839_tm))))._field_Cases=nullptr;
	};
}



inline void _1aa39005e_checkTypeMatch(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa312e6b_MatchCase>* _175736_m) {
	jule::Ptr<_1aa44cc98_Data> _17587_d = _1aa46c290_eval1(_1aa3cb73d_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data0)), (*((*(_175736_m))))._field_Expr);;
	if ((_17587_d == nullptr)) {
		return;;
	};
	if ((*((*(_175736_m))))._field_Comptime) {
		jule::Ptr<_1aa35ac50_comptimeTypeInfo> _17648_cti = _1a60216b7_comptimeTypeInfo((*(_17587_d))._field_Kind.ptr());;
		if ((_17648_cti == nullptr)) {
			if ((!((*(_17587_d))._field_Decl))) {
				_1aa3be434_pushErr((*(_self_))._field_s, (*((*((*(_175736_m))))._field_Expr))._field_Token, jule::Str::lit("comptime type-match expressions can take only type declarations", 63), jule::Slice<jule::Any>());
				return;;
			};
		} else {
			(*(_17587_d))._field_Kind=(*(_17648_cti))._field_base;
		};
	} else if (((*(_17587_d))._field_Decl || (!(((((_1a601cd01_Prim((*(_17587_d))._field_Kind.ptr()) != nullptr) && _1a6026eb4_IsAny(_1a601cd01_Prim((*(_17587_d))._field_Kind).ptr())) || (_1a601e60a_Trait((*(_17587_d))._field_Kind) != nullptr)) || (_1a601d83a_TypeEnum((*(_17587_d))._field_Kind) != nullptr)))))) {
		_1aa3be434_pushErr((*(_self_))._field_s, (*((*((*(_175736_m))))._field_Expr))._field_Token, jule::Str::lit("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aa37cdb5_Match> _17787_tm = jule::new_ptr<_1aa37cdb5_Match>(_1aa37cdb5_Match{._field_Expr=_17587_d, ._field_TypeMatch=true, ._field_Comptime=(*((*(_175736_m))))._field_Comptime, ._field_Cases=jule::Slice<jule::Ptr<_1aa37d8dd_Case>>(nullptr), ._field_Default=jule::Ptr<_1aa37d8dd_Case>(nullptr)});;
	if (((!((*(_17787_tm))._field_Comptime)) && ((*((*(_175736_m))))._field_Default != nullptr))) {
		(*_17787_tm.alloc)._field_Default=_1aa38e5d0_checkDefault(_self_, _17787_tm, (*((*(_175736_m))))._field_Default);
	};
	_1aa38e1d4_checkCases(_self_, _175736_m, _17787_tm, _17587_d);
	if ((*_17787_tm.alloc)._field_Comptime) {
		_1aa38eca6_processConstMatch(_self_, &(_17787_tm), _175736_m);
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_17787_tm, &__jule_any_type55); __jule_collection; }));
}



inline void _1aa390317_checkCommonMatch(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa312e6b_MatchCase>* _179938_m) {
	jule::Ptr<_1aa44cc98_Data> _180011_d = nullptr;;
	if (((*((*(_179938_m))))._field_Expr == nullptr)) {
		_180011_d=jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc333_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1a6e7808a_NewBool(true)});
		(*(_180011_d))._field_Model=jule::Any((*_180011_d.alloc)._field_Constant, &__jule_any_type20);
	} else {
		_180011_d=_1aa46c922_evalExpr1(_1aa3cb73d_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data0)), (*((*(_179938_m))))._field_Expr);
		if ((_180011_d == nullptr)) {
			return;;
		};
	};
	if ((*((*(_179938_m))))._field_Comptime) {
		if ((!(_1aa393c99_canComptimeMatch(&(_180011_d))))) {
			_1aa3be434_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_179938_m))))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			_1aa3be797_pushSuggestion((*(_self_))._field_s, jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
			return;;
		};
	} else if (_1a601edad_comptime((*(_180011_d))._field_Kind.ptr())) {
		_1aa3be434_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_179938_m))))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		_1aa3be797_pushSuggestion((*(_self_))._field_s, jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aa37cdb5_Match> _18267_mc = jule::new_ptr<_1aa37cdb5_Match>(_1aa37cdb5_Match{._field_Expr=_180011_d, ._field_TypeMatch=false, ._field_Comptime=(*((*(_179938_m))))._field_Comptime, ._field_Cases=jule::Slice<jule::Ptr<_1aa37d8dd_Case>>(nullptr), ._field_Default=jule::Ptr<_1aa37d8dd_Case>(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18267_mc, &__jule_any_type55); __jule_collection; }));
	if (((!((*(_18267_mc))._field_Comptime)) && ((*((*(_179938_m))))._field_Default != nullptr))) {
		(*_18267_mc.alloc)._field_Default=_1aa38e5d0_checkDefault(_self_, _18267_mc, (*((*(_179938_m))))._field_Default);
	};
	_1aa38e1d4_checkCases(_self_, _179938_m, _18267_mc, _180011_d);
	if ((*_18267_mc.alloc)._field_Comptime) {
		_1aa38eca6_processConstMatch(_self_, &(_18267_mc), _179938_m);
	};
}



inline void _1aa3905c0_checkMatch(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa312e6b_MatchCase> _184931_m) {
	if ((*(_184931_m))._field_TypeMatch) {
		_1aa39005e_checkTypeMatch(_self_, &(_184931_m));
		return;;
	};
	_1aa390317_checkCommonMatch(_self_, &(_184931_m));
}



inline void _1aa390878_checkFall(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa308439_FallSt> _185726_f) {
	if (((((*(_self_))._field_cse == 0LLU) || (((*((*_self_.alloc)._field_scope))._field_Stmts.len() + 1LL) < (*(*(_self_))._field_scope.alloc)._field_Stmts.len())) || _1aa383eed_isDeferred(_self_))) {
		_1aa3be434_pushErr((*_self_.alloc)._field_s.ptr(), (*(_185726_f))._field_Token, jule::Str::lit("fall keyword can only useable at end of the case scopes", 55), jule::Slice<jule::Any>());
		return;;
	};
	_1aa37d8dd_Case* _18657_case = ((_1aa37d8dd_Case*)((*_self_.alloc)._field_cse));;
	if ((*((*(_18657_case))._field_Owner))._field_Comptime) {
		_1aa3be434_pushErr((*(_self_))._field_s, (*_185726_f.alloc)._field_Token, jule::Str::lit("the fall statement is not allowed for comptime-matching", 55), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_18657_case))._field_Next == nullptr)) {
		_1aa3be434_pushErr((*(_self_))._field_s, (*_185726_f.alloc)._field_Token, jule::Str::lit("fall cannot useable at final case", 33), jule::Slice<jule::Any>());
		_1aa3be797_pushSuggestion((*(_self_))._field_s, jule::Str::lit("remove \"fall\" keyword", 21), jule::Slice<jule::Any>());
		return;;
	};
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1aa37e0d6_FallSt>(_1aa37e0d6_FallSt{._field_DestCase=static_cast<jule::Uintptr>((*(_18657_case))._field_Next)}), &__jule_any_type56); __jule_collection; }));
}



inline jule::Ptr<_1aa37b248_BreakSt> _1aa390bb9_checkBreakWithLabel(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa31074e_BreakSt> _188036_b) {
	jule::Ptr<_1aa37b248_BreakSt> _18817_brk = _1aa39100a_checkPlainBreak(_self_, _188036_b);;
	if ((_18817_brk == nullptr)) {
		return nullptr;;
	};
	(*(_18817_brk))._field_It=0LLU;
	(*(_18817_brk))._field_Mtch=0LLU;
	jule::Ptr<_1aa37eadc_scopeLabel> _18917_label = _1aa3761bb_findLabelParent(&((*((*(_188036_b))._field_Label))._field_Kind), (*_self_.alloc)._field_parent);;
	if ((_18917_label == nullptr)) {
		_1aa3be434_pushErr((*_self_.alloc)._field_s.ptr(), (*_188036_b.alloc)._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_188036_b))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	(*(_18917_label))._field_used=true;
	if ((((*(_18917_label))._field_pos + 1LL) >= (*((*((*(_18917_label))._field_scope))._field_scope))._field_Stmts.len())) {
		_1aa3be434_pushErr((*(_self_))._field_s, (*_188036_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_188036_b))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::I32 _19043_i = ((*(_18917_label))._field_pos + 1LL);;
	if ((_19043_i >= (*(*((*(_18917_label))._field_scope))._field_scope.alloc)._field_Stmts.len())) {
		_1aa3be434_pushErr((*(_self_))._field_s, (*_188036_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_188036_b))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	} else {
		jule::Any _19088_st = (*(*((*(_18917_label))._field_scope))._field_scope.alloc)._field_Stmts[_19043_i];;
		{
			auto &_match_expr{ _19088_st };
			
			if (_match_expr.type == &__jule_any_type43) {
				_case_begin_1bc4a952e:;
				{
					(*(_18817_brk))._field_It=static_cast<jule::Uintptr>(_19088_st.unsafe_cast_ptr<_1aa379ad7_InfIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type47) {
				_case_begin_1bc4a970a:;
				{
					(*(_18817_brk))._field_It=static_cast<jule::Uintptr>(_19088_st.unsafe_cast_ptr<_1aa37a9d9_RangeIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type45) {
				_case_begin_1bc4a9771:;
				{
					(*(_18817_brk))._field_It=static_cast<jule::Uintptr>(_19088_st.unsafe_cast_ptr<_1aa37a08d_WhileIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type55) {
				_case_begin_1bc4a97d7:;
				{
					(*(_18817_brk))._field_Mtch=static_cast<jule::Uintptr>(_19088_st.unsafe_cast_ptr<_1aa37cdb5_Match>());
				}
			}
			else {
				_case_begin_1bc4a9694:;
				{
					_1aa3be434_pushErr((*(_self_))._field_s, (*_188036_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_188036_b))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
				}
			}
			_match_end_1bc4a963e:;
		};
	};
	if (((*(_18817_brk))._field_It != 0LLU)) {
		if ((!(_1aa38a9e9_checkValidBreakLabel(_self_, (*(_18817_brk))._field_It)))) {
			_1aa3be434_pushErr((*(_self_))._field_s, (*_188036_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_188036_b))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		};
	};
	if (((*(_18817_brk))._field_Mtch != 0LLU)) {
		if ((!(_1aa38a9e9_checkValidBreakLabel(_self_, (*(_18817_brk))._field_Mtch)))) {
			_1aa3be434_pushErr((*(_self_))._field_s, (*_188036_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_188036_b))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		};
	};
	return _18817_brk;;
}



inline jule::Ptr<_1aa37b248_BreakSt> _1aa39100a_checkPlainBreak(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa31074e_BreakSt> _193832_b) {
	if (_1aa383eed_isDeferred(_self_)) {
		_1aa3be434_pushErr((*_self_.alloc)._field_s.ptr(), (*(_193832_b))._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa381160_scopeChecker> _19447_scope = _self_;;
	_julec_label_1bc4b238e:;
	{
		
		if ((((((*_19447_scope.alloc)._field_it == 0LLU) && ((*_19447_scope.alloc)._field_cse == 0LLU)) && ((*_19447_scope.alloc)._field_parent != nullptr)) && ((*_19447_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1bc4b2966:;
			{
				_19447_scope=(*_19447_scope.alloc)._field_parent;
				goto _julec_label_1bc4b238e;
			}
		}
		else if (((*_19447_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1bc4b29ee:;
			{
				return jule::new_ptr<_1aa37b248_BreakSt>(_1aa37b248_BreakSt{._field_It=(*_19447_scope.alloc)._field_it, ._field_Mtch=0});;
			}
		}
		else if (((*_19447_scope.alloc)._field_cse != 0LLU)) {
			_case_begin_1bc4b2a65:;
			{
				return jule::new_ptr<_1aa37b248_BreakSt>(_1aa37b248_BreakSt{._field_It=0, ._field_Mtch=static_cast<jule::Uintptr>((*(((_1aa37d8dd_Case*)((*_19447_scope.alloc)._field_cse))))._field_Owner)});;
			}
		}
		_match_end_1bc4b2878:;
	};
	_1aa3be434_pushErr((*(_self_))._field_s, (*_193832_b.alloc)._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1aa3912b3_checkBreak(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa31074e_BreakSt> _196027_b) {
	if (((*(_196027_b))._field_Label != nullptr)) {
		jule::Ptr<_1aa37b248_BreakSt> _19628_brk = _1aa390bb9_checkBreakWithLabel(_self_, _196027_b);;
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19628_brk, &__jule_any_type57); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1aa37b248_BreakSt> _19677_brk = _1aa39100a_checkPlainBreak(_self_, _196027_b);;
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19677_brk, &__jule_any_type57); __jule_collection; }));
}



inline void _1aa39156b_checkRet(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa30d8c3_RetSt> _197129_r) {
	if (_1aa383eed_isDeferred(_self_)) {
		_1aa3be434_pushErr((*_self_.alloc)._field_s.ptr(), (*(_197129_r))._field_Token, jule::Str::lit("deferred scopes are not supports return statements", 50), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1aa37e47c_RetSt> _19767_rt = jule::new_ptr<_1aa37e47c_RetSt>(_1aa37e47c_RetSt{._field_Func=(*(_1aa38453c_getRoot(_self_)))._field_owner, ._field_Expr=jule::Any(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19767_rt, &__jule_any_type58); __jule_collection; }));
	jule::Ptr<_1aa44506a_retTypeChecker> _19817_rtc = jule::new_ptr<_1aa44506a_retTypeChecker>(_1aa44506a_retTypeChecker{._field_sc=_self_, ._field_f=(*(_19767_rt))._field_Func, ._field_types=jule::Slice<jule::Ptr<_1a601a64a_TypeKind>>(nullptr), ._field_exprs=jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>>(nullptr), ._field_errorToken=(*_197129_r.alloc)._field_Token, ._field_model=jule::Any(nullptr)});;
	jule::Bool _19863_ok = _1aa44605a_check(_19817_rtc.ptr(), &((*_197129_r.alloc)._field_Expr));;
	if ((!(_19863_ok))) {
		return;;
	};
	if (((*_197129_r.alloc)._field_Expr != nullptr)) {
		(*_19767_rt.alloc)._field_Expr=(*_19817_rtc.alloc)._field_model;
	};
}



inline void _1aa391824_checkUseExpr(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa300387_UseExpr> _199629_ue) {
	if (((*(_self_))._field_result == nullptr)) {
		_1aa3be434_pushErr((*_self_.alloc)._field_s.ptr(), (*(_199629_ue))._field_Token, jule::Str::lit("use expressions cannot useable out of exceptional handler scopes", 64), jule::Slice<jule::Any>());
		return;;
	};
	if (_1aa383eed_isDeferred(_self_)) {
		_1aa3be434_pushErr((*(_self_))._field_s, (*_199629_ue.alloc)._field_Token, jule::Str::lit("use expressions cannot useable in deferred scopes", 49), jule::Slice<jule::Any>());
	};
	if ((((*_self_.alloc)._field_i + 1LL) < (*((*_self_.alloc)._field_tree))._field_Stmts.len())) {
		_1aa3be434_pushErr((*(_self_))._field_s, (*_199629_ue.alloc)._field_Token, jule::Str::lit("use expressions must be last statement of scope", 47), jule::Slice<jule::Any>());
	};
}



inline void _1aa391acc_checkNode(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Any* _201231_node) {
	{
		auto &_match_expr{ (*(_201231_node)) };
		
		if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1bc4c3647:;
			{
				_1aa387496_checkAnonScope(_self_, (*(_201231_node)).cast_ptr<_1aa30a6a0_ScopeTree>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1bc4c2eb5:;
			{
				_1aa385c8b_checkVarDecl(_self_, (*(_201231_node)).cast_ptr<_1aa30d4e9_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1bc4c3317:;
			{
				_1aa3862ec_checkTypeAliasDecl(_self_, (*(_201231_node)).cast_ptr<_1aa31219b_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1bc4c337d:;
			{
				_1aa387ab2_checkExpr(_self_, (*(_201231_node)).cast_ptr<_1aa2ee9b3_Expr>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1bc4c33e4:;
			{
				_1aa3884ec_checkConditional(_self_, (*(_201231_node)).cast_ptr<_1aa31195e_Conditional>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1bc4c3757:;
			{
				_1aa38a367_checkIter(_self_, (*(_201231_node)).cast_ptr<_1aa30e143_Iter>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1bc4c37bd:;
			{
				_1aa38b0e3_checkCont(_self_, (*(_201231_node)).cast_ptr<_1aa310b28_ContSt>(&__jule_any_type63));
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1bc4c3834:;
			{
				_1aa38b39b_checkLabel(_self_, (*(_201231_node)).cast_ptr<_1aa307c63_LabelSt>(&__jule_any_type64));
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1bc4c389a:;
			{
				_1aa38b654_pushGoto(_self_, (*(_201231_node)).cast_ptr<_1aa30813c_GotoSt>(&__jule_any_type65));
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1bc4c3911:;
			{
				_1aa38d359_checkAssignSt(_self_, (*(_201231_node)).cast_ptr<_1aa30912c_AssignSt>(&__jule_any_type66));
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1bc4c3977:;
			{
				_1aa3905c0_checkMatch(_self_, (*(_201231_node)).cast_ptr<_1aa312e6b_MatchCase>(&__jule_any_type67));
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1bc4c39dd:;
			{
				_1aa390878_checkFall(_self_, (*(_201231_node)).cast_ptr<_1aa308439_FallSt>(&__jule_any_type68));
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1bc4c3a54:;
			{
				_1aa3912b3_checkBreak(_self_, (*(_201231_node)).cast_ptr<_1aa31074e_BreakSt>(&__jule_any_type69));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1bc4c3acb:;
			{
				_1aa39156b_checkRet(_self_, (*(_201231_node)).cast_ptr<_1aa30d8c3_RetSt>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1bc4c3b53:;
			{
				_1aa391824_checkUseExpr(_self_, (*(_201231_node)).cast_ptr<_1aa300387_UseExpr>(&__jule_any_type71));
			}
		}
		else {
			_case_begin_1bc4c3180:;
			{
				jule::outln(jule::Str::lit("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1bc4c312a:;
	};
}



inline void _1aa391cca_checkResult(jule::Ptr<_1aa381160_scopeChecker> _self_) {
	_1aa30a040_Stmt _20507_stmt = (*((*(_self_))._field_tree))._field_Stmts[((*(*(_self_))._field_tree.alloc)._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _20507_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1bc4cc91a:;
			{
				jule::Ptr<_1aa300387_UseExpr> _20538_ue = _20507_stmt._field_Data.unsafe_cast_ptr<_1aa300387_UseExpr>();;
				jule::Ptr<_1aa44cc98_Data> _20548_d = _1aa46cc63_evalExpr(_1aa3cb73d_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data0)), (*(_20538_ue))._field_Expr);;
				if ((_20548_d == nullptr)) {
					return;;
				};
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_20548_d, &__jule_any_type31); __jule_collection; }));
				jule::Ptr<_1aa44506a_retTypeChecker> _20598_rtc = jule::new_ptr<_1aa44506a_retTypeChecker>(_1aa44506a_retTypeChecker{._field_sc=_self_, ._field_f=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_types=_1aa3357c9_Types((*_self_.alloc)._field_result.ptr()), ._field_exprs=jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>>(nullptr), ._field_errorToken=(*((*_20538_ue.alloc)._field_Expr))._field_Token, ._field_model=jule::Any(nullptr)});;
				_1aa44605a_check(_20598_rtc.ptr(), &((*_20538_ue.alloc)._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1bc4cd4dc:;
			{
				jule::Ptr<_1aa2ee9b3_Expr> _20668_expr = _20507_stmt._field_Data.unsafe_cast_ptr<_1aa2ee9b3_Expr>();;
				jule::Ptr<_1aa44cc98_Data> _20678_d = _1aa46cc63_evalExpr(_1aa3cb73d_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data0)), _20668_expr);;
				if ((_20678_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ (*(_20678_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type30) {
						_case_begin_1accb49b4:;
						{
							jule::Ptr<_1aa32c00c_BuiltinErrorCallExprModel> _20739_m = (*(_20678_d))._field_Model.unsafe_cast_ptr<_1aa32c00c_BuiltinErrorCallExprModel>();;
							_1aa387809_processErrorCall(_self_, &(_20739_m), (*(_20668_expr))._field_Token);
							(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_20678_d, &__jule_any_type31); __jule_collection; }));
						}
					}
					else {
						_case_begin_1accb4b7e:;
						{
							return;;
						}
					}
					_match_end_1accb4b29:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65 || _match_expr.type == &__jule_any_type69 || _match_expr.type == &__jule_any_type63 || _match_expr.type == &__jule_any_type70) {
			_case_begin_1bc4ccba1:;
			{
				_1aa391acc_checkNode(_self_, &(_20507_stmt._field_Data));
			}
		}
		else {
			_case_begin_1bc4ccb3a:;
			{
				_1aa391acc_checkNode(_self_, &(_20507_stmt._field_Data));
				return;;
			}
		}
		_match_end_1bc4ccad5:;
	};
	(*_self_.alloc)._field_result=nullptr;
}



inline void _1aa391ec8_checkTree(jule::Ptr<_1aa381160_scopeChecker> _self_) {
	(*(_self_))._field_i=0LL;
	jule::I32 _20957_n = (*((*_self_.alloc)._field_tree))._field_Stmts.len();;
	if (((*_self_.alloc)._field_result != nullptr)) {
		(_20957_n)--;
	};
	for (; ((*_self_.alloc)._field_i < _20957_n); ((*_self_.alloc)._field_i)++) {
		{
			_1aa30a040_Stmt _21038_stmt = (*(*(_self_))._field_tree.alloc)._field_Stmts[(*_self_.alloc)._field_i];;
			_1aa391acc_checkNode(_self_, &(_21038_stmt._field_Data));
			if (_1aa383c67_stopped(_self_)) {
				return;;
			};
		}
	_iter_next_1accb9634:;
	}
	_iter_end_1accb9634:;;
	if ((((*_self_.alloc)._field_result != nullptr) && ((*(*(_self_))._field_tree.alloc)._field_Stmts.len() != 0LL))) {
		_1aa391cca_checkResult(_self_);
	};
}



inline void _1aa39233b_checkGoto(_1aa381160_scopeChecker* _self_, jule::Ptr<_1aa380170_scopeGoto>* _211430_gt, jule::Ptr<_1aa37eadc_scopeLabel>* _211451_label) {
	jule::Ptr<_1aa381160_scopeChecker> _21157_gtsc = (*((*(_211430_gt))))._field_scope;;
	while ((((*(_21157_gtsc))._field_childIndex - 1LL) > (*((*((*(_211451_label))))._field_scope))._field_childIndex)) {
		{
			_21157_gtsc=(*_21157_gtsc.alloc)._field_parent;
		}
	_iter_next_1accbccca:;
	}
	_iter_end_1accbccca:;;
	jule::I32 _21207_n = 0LL;;
	if (((*_21157_gtsc.alloc)._field_scope == (*(*((*(_211451_label))))._field_scope.alloc)._field_scope)) {
		if (((*((*(_211430_gt))))._field_pos > (*((*(_211451_label))))._field_pos)) {
			return;;
		};
		_21207_n=(*((*(_211430_gt))))._field_pos;
	};
	jule::I32 _21337_i = ((*((*(_211451_label))))._field_pos - 1LL);;
	if ((_21207_n == 0LL)) {
		{
			auto expr = &((*((*(*((*(_211451_label))))._field_scope.alloc)._field_scope))._field_Stmts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1accc142c:;
			if (it != expr_end) {
				jule::I32 _21368_j = it - expr->begin();
				jule::Any _213611_stmt = *it;
				{
					if (_1aa376908_stmtIsGotoScope(&(_213611_stmt), &((*_21157_gtsc.alloc)._field_scope))) {
						_21207_n=_21368_j;
						goto _iter_end_1accc142c;
					};
				}
				_iter_next_1accc142c:;
				++it;
				_21368_j++;
				goto _iter_begin_1accc142c;
			}
			_iter_end_1accc142c:;
		};
	};
	for (; (_21337_i >= _21207_n); (_21337_i)--) {
		{
			jule::Any _21468_stmt = (*(*((*((*(_211451_label))))._field_scope))._field_scope.alloc)._field_Stmts[_21337_i];;
			if (_1aa3786b8_stmtIsDef(&(_21468_stmt))) {
				_1aa3be434_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_211430_gt))))._field_gt))._field_Token, jule::Str::lit("goto @ jumps over declaration(s)", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*((*(_211430_gt))))._field_gt.alloc)._field_Label))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return;;
			};
		}
	_iter_next_1accc19c1:;
	}
	_iter_end_1accc19c1:;;
}



inline void _1aa392539_checkGotos(_1aa381160_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1accc0ad0:;
		if (it != expr_end) {
			jule::Ptr<_1aa380170_scopeGoto> _215515_gt = *it;
			{
				jule::Ptr<_1aa37eadc_scopeLabel> _21568_label = _1aa3855d7_findLabelAll(_self_, &((*((*((*(_215515_gt))._field_gt))._field_Label))._field_Kind));;
				if ((_21568_label == nullptr)) {
					_1aa3be434_pushErr((*(_self_))._field_s.ptr(), (*(*(_215515_gt))._field_gt.alloc)._field_Token, jule::Str::lit("not exist any label in this identifier: @", 41), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_215515_gt))._field_gt))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
					goto _iter_next_1accc0ad0;
				};
				(*((*_215515_gt.alloc)._field_st))._field_Label=(*(_21568_label))._field_label;
				(*(_21568_label))._field_used=true;
				_1aa39233b_checkGoto(_self_, &(_215515_gt), &(_21568_label));
			}
			_iter_next_1accc0ad0:;
			++it;
			goto _iter_begin_1accc0ad0;
		}
		_iter_end_1accc0ad0:;
	};
}



inline void _1aa392737_checkLabels(_1aa381160_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1accc7d07:;
		if (it != expr_end) {
			jule::Ptr<_1aa37eadc_scopeLabel> _216810_l = *it;
			{
				if ((!((*(_216810_l))._field_used))) {
					_1aa3be434_pushErr((*(_self_))._field_s.ptr(), (*_216810_l.alloc)._field_token, jule::Str::lit("@ declared but not used", 23), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_216810_l.alloc)._field_label))._field_Ident, &__jule_any_type4); __jule_collection; }));
				};
			}
			_iter_next_1accc7d07:;
			++it;
			goto _iter_begin_1accc7d07;
		}
		_iter_end_1accc7d07:;
	};
}



inline void _1aa392935_checkVars(_1aa381160_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1accc9952:;
		if (it != expr_end) {
			jule::Ptr<_1aa3e4d3e_Var> _217610_v = *it;
			{
				if (((((!((*(_217610_v))._field_Used)) && (!((*_217610_v.alloc)._field_Constant))) && (!(_1aa2d7aab_IsIgnoreIdent((*_217610_v.alloc)._field_Ident)))) && (!(_1aa2d7d75_IsAnonIdent((*_217610_v.alloc)._field_Ident))))) {
					_1aa3be434_pushErr((*(_self_))._field_s.ptr(), (*_217610_v.alloc)._field_Token, jule::Str::lit("@ declared but not used", 23), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_217610_v.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
				};
			}
			_iter_next_1accc9952:;
			++it;
			goto _iter_begin_1accc9952;
		}
		_iter_end_1accc9952:;
	};
}



inline void _1aa392b33_checkAliases(_1aa381160_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acccc108:;
		if (it != expr_end) {
			jule::Ptr<_1a6019858_TypeAlias> _218410_a = *it;
			{
				if ((((!((*(_218410_a))._field_Used)) && (!(_1aa2d7aab_IsIgnoreIdent((*_218410_a.alloc)._field_Ident)))) && (!(_1aa2d7d75_IsAnonIdent((*_218410_a.alloc)._field_Ident))))) {
					_1aa3be434_pushErr((*(_self_))._field_s.ptr(), (*_218410_a.alloc)._field_Token, jule::Str::lit("@ declared but not used", 23), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_218410_a.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
				};
			}
			_iter_next_1acccc108:;
			++it;
			goto _iter_begin_1acccc108;
		}
		_iter_end_1acccc108:;
	};
}



inline void _1aa392e96_check(jule::Ptr<_1aa381160_scopeChecker> _self_, jule::Ptr<_1aa30a6a0_ScopeTree>* _219227_tree, jule::Ptr<_1aa378ba2_Scope>* _219250_s) {
	(*((*(_219250_s))))._field_Deferred=(*((*(_219227_tree))))._field_Deferred;
	(*((*(_219250_s))))._field_Unsafety=(*((*(_219227_tree))))._field_Unsafety;
	jule::I32 _21963_errors = (*((*(_self_))._field_s))._field_errors.len();;
	(*_self_.alloc)._field_tree=(*(_219227_tree));
	(*_self_.alloc)._field_scope=(*(_219250_s));
	_1aa391ec8_checkTree(_self_);
	if ((_21963_errors == (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		_1aa392935_checkVars(_self_);
		_1aa392b33_checkAliases(_self_);
		if (_1aa3837d3_isRoot(_self_)) {
			_1aa392539_checkGotos(_self_);
			_1aa392737_checkLabels(_self_);
		};
	};
}



inline jule::Ptr<_1aa381160_scopeChecker> _1aa39322c_newChildChecker(jule::Ptr<_1aa381160_scopeChecker> _self_) {
	jule::Ptr<_1aa381160_scopeChecker> _22167_base = _1aa37597e_newScopeCheckerBase(&((*(_self_))._field_s), nullptr);;
	(*(_22167_base))._field_parent=_self_;
	(*_22167_base.alloc)._field_labels=(*_self_.alloc)._field_labels;
	(*_22167_base.alloc)._field_gotos=(*_self_.alloc)._field_gotos;
	(*_22167_base.alloc)._field_childIndex=((*_self_.alloc)._field_childIndex + 1LL);
	return _22167_base;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa381160_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "captured:" << _Src._field_captured << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa39478e_directiveChecker_eq(_1aa39478e_directiveChecker *_self_, _1aa39478e_directiveChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_o == _self_->_field_o);
}

inline void _1aa394bce_checkCdef(_1aa39478e_directiveChecker* _self_, jule::Ptr<_1aa2e9a9b_Directive>* _1626_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1accd4d8b:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1aa3315b6_Fn>()))._field_Binded) {
					goto _match_end_1accd50bc;
				};
				goto _case_begin_1accd5122;
			}
		}
		else {
			_case_begin_1accd5122:;
			{
				_1aa3be434_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_1626_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1accd50bc:;
	};
	if (((*((*(_1626_d))))._field_Args.len() > 0LL)) {
		_1aa3be434_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1aa394e87_checkTypedef(_1aa39478e_directiveChecker* _self_, jule::Ptr<_1aa2e9a9b_Directive>* _3229_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1accd7ce5:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1aa31b518_Struct>()))._field_Binded) {
					goto _match_end_1accd8026;
				};
				goto _case_begin_1accd807b;
			}
		}
		else {
			_case_begin_1accd807b:;
			{
				_1aa3be434_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_3229_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1accd8026:;
	};
	if (((*((*(_3229_d))))._field_Args.len() > 0LL)) {
		_1aa3be434_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1aa395240_checkNamespace(_1aa39478e_directiveChecker* _self_, jule::Ptr<_1aa2e9a9b_Directive>* _4835_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1accdac4e:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1aa31b518_Struct>()))._field_Binded))) {
					_1aa3be434_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1accdb04b:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1aa3315b6_Fn>()))._field_Binded))) {
					_1aa3be434_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1accdb0b2:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1aa3e4d3e_Var>()))._field_Binded))) {
					_1aa3be434_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1accdaed5:;
			{
				_1aa3be434_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1accdae80:;
	};
	if (((*((*(_4835_d))))._field_Args.len() == 0LL)) {
		_1aa3be434_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_4835_d))))._field_Args.len() > 1LL)) {
		_1aa3be434_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1aa2d51c4_Token> _733_arg = (*((*(_4835_d))))._field_Args[0LL];;
	if (((*(_733_arg))._field_Id != static_cast<jule::U32>(4LLU))) {
		_1aa3be434_pushErr((*(_self_))._field_s.ptr(), _733_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_733_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1aa3be434_pushErr((*(_self_))._field_s, _733_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_4835_d))))._field_Args[0LL]))._field_Kind=(*_733_arg.alloc)._field_Kind.slice(1LL, ((*_733_arg.alloc)._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1acce6a4b:;
			{
				if ((_1aa4766c8_findDirective(&((*((*(_self_))._field_d))), jule::Str::lit("typedef", 7)) == nullptr)) {
					jule::Ptr<_1aa2e9a9b_Directive> _909_typedef = jule::new_ptr<_1aa2e9a9b_Directive>(_1aa2e9a9b_Directive{._field_Tag=(*((*(_4835_d))))._field_Tag, ._field_Args=jule::Slice<jule::Ptr<_1aa2d51c4_Token>>(nullptr)});;
					(*((*(_909_typedef))._field_Tag))._field_Kind=jule::Str::lit("typedef", 7);
					(*(*(_self_))._field_d.alloc)=jule::append((*(*(_self_))._field_d.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _909_typedef; __jule_collection; }));
				};
			}
		}
		_match_end_1acce69d5:;
	};
}



inline void _1aa3954e8_checkDeprecated(_1aa39478e_directiveChecker* _self_, jule::Ptr<_1aa2e9a9b_Directive>* _9936_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1acce8c29:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1aa31b518_Struct>()))._field_Binded) {
					_1aa3be434_pushErr((*(_self_))._field_s.ptr(), (*((*(_9936_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_9936_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1acce8e7c:;
			{
				jule::Ptr<_1aa3315b6_Fn> _1068_f = (*(_self_))._field_o.unsafe_cast_ptr<_1aa3315b6_Fn>();;
				if ((((*(_1068_f))._field_Binded || _1aa332089_IsEntryPoint(_1068_f)) || _1aa332320_IsInit(_1068_f))) {
					_1aa3be434_pushErr((*(_self_))._field_s.ptr(), (*((*(_9936_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_9936_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1acce8ee3:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1aa3e4d3e_Var>()))._field_Binded) {
					_1aa3be434_pushErr((*(_self_))._field_s.ptr(), (*((*(_9936_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_9936_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1acce8e16:;
			{
				_1aa3be434_pushErr((*(_self_))._field_s.ptr(), (*((*(_9936_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_9936_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1acce8db1:;
	};
	if (((*((*(_9936_d))))._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*((*(_9936_d))))._field_Args.len() > 1LL)) {
		_1aa3be434_pushErr((*(_self_))._field_s.ptr(), (*((*(_9936_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_9936_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1aa2d51c4_Token> _1253_arg = (*((*(_9936_d))))._field_Args[0LL];;
	if (((*(_1253_arg))._field_Id != static_cast<jule::U32>(4LLU))) {
		_1aa3be434_pushErr((*(_self_))._field_s, _1253_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_1253_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1aa3be434_pushErr((*(_self_))._field_s, _1253_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_9936_d))))._field_Args[0LL]))._field_Kind=(*_1253_arg.alloc)._field_Kind.slice(1LL, ((*_1253_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _1aa3957a1_checkTest(_1aa39478e_directiveChecker* _self_, jule::Ptr<_1aa2e9a9b_Directive>* _13926_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1acd0059e:;
			{
				jule::Ptr<_1aa3315b6_Fn> _1424_f = (*(_self_))._field_o.unsafe_cast_ptr<_1aa3315b6_Fn>();;
				if ((((!((*(_1424_f))._field_Binded)) && (!(_1aa332320_IsInit(_1424_f)))) && (!(_1aa332089_IsEntryPoint(_1424_f))))) {
					goto _match_end_1acd05054;
				};
				if (_1aa331d03_IsMethod(_1424_f)) {
					_1aa3be434_pushErr((*(_self_))._field_s.ptr(), (*_1424_f.alloc)._field_Token, jule::Str::lit("you cannot declare test methods", 31), jule::Slice<jule::Any>());
					goto _match_end_1acd05054;
				};
				goto _case_begin_1acd050a9;
			}
		}
		else {
			_case_begin_1acd050a9:;
			{
				_1aa3be434_pushErr((*(_self_))._field_s.ptr(), (*((*(_13926_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_13926_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1acd05054:;
	};
	if (((*((*(_13926_d))))._field_Args.len() > 0LL)) {
		_1aa3be434_pushErr((*(_self_))._field_s.ptr(), (*((*(_13926_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1aa395a59_checkDirective(_1aa39478e_directiveChecker* _self_, jule::Ptr<_1aa2e9a9b_Directive>* _16035_d) {
	{
		auto &_match_expr{ (*((*((*(_16035_d))))._field_Tag))._field_Kind };
		
		if (_match_expr == jule::Str::lit("cdef", 4)) {
			_case_begin_1acd09c29:;
			{
				_1aa394bce_checkCdef(_self_, _16035_d);
			}
		}
		else if (_match_expr == jule::Str::lit("typedef", 7)) {
			_case_begin_1acd09c90:;
			{
				_1aa394e87_checkTypedef(_self_, _16035_d);
			}
		}
		else if (_match_expr == jule::Str::lit("namespace", 9)) {
			_case_begin_1acd09d06:;
			{
				_1aa395240_checkNamespace(_self_, _16035_d);
			}
		}
		else if (_match_expr == jule::Str::lit("deprecated", 10)) {
			_case_begin_1acd09d6c:;
			{
				_1aa3954e8_checkDeprecated(_self_, _16035_d);
			}
		}
		else if (_match_expr == jule::Str::lit("test", 4)) {
			_case_begin_1acd09dd3:;
			{
				_1aa3957a1_checkTest(_self_, _16035_d);
			}
		}
		else if (_match_expr == jule::Str::lit("build", 5) || _match_expr == jule::Str::lit("pass", 4)) {
			_case_begin_1acd09e49:;
			{
				_1aa3be434_pushErr((*(_self_))._field_s.ptr(), (*((*(_16035_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16035_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		else {
			_case_begin_1acd09663:;
			{
				_1aa3be434_pushErr((*(_self_))._field_s.ptr(), (*((*(_16035_d))))._field_Tag, jule::Str::lit("invalid label: @", 16), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16035_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1acd09b5d:;
	};
}



inline void _1aa395c57_check(_1aa39478e_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd0dbea:;
		if (it != expr_end) {
			jule::Ptr<_1aa2e9a9b_Directive> _18115_d = *it;
			{
				_1aa395a59_checkDirective(_self_, &(_18115_d));
			}
			_iter_next_1acd0dbea:;
			++it;
			goto _iter_begin_1acd0dbea;
		}
		_iter_end_1acd0dbea:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1aa39478e_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa39b0ae_ImportInfo> _1aa39b5cb_SelectPackage(_1aa39b0ae_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1aa39b0ae_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1aa3e4d3e_Var> _1aa39b9c7_FindVar(_1aa39b0ae_ImportInfo* _self_, jule::Str _19823_ident, jule::Bool ) {
	if ((!(_1aa39d633_isLookupable(_self_, &(_19823_ident))))) {
		return nullptr;;
	};
	return _1aa3985d9_findVarInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_19823_ident), false);;
}



inline jule::Ptr<_1a6019858_TypeAlias> _1aa39bdc3_FindTypeAlias(_1aa39b0ae_ImportInfo* _self_, jule::Str _21029_ident, jule::Bool ) {
	if ((!(_1aa39d633_isLookupable(_self_, &(_21029_ident))))) {
		return nullptr;;
	};
	return _1aa398a18_findTypeAliasInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_21029_ident), false);;
}



inline jule::Ptr<_1aa31b518_Struct> _1aa39c2be_FindStruct(_1aa39b0ae_ImportInfo* _self_, jule::Str _22226_ident, jule::Bool ) {
	if ((!(_1aa39d633_isLookupable(_self_, &(_22226_ident))))) {
		return nullptr;;
	};
	return _1aa398ebe_findStructInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_22226_ident), false);;
}



inline jule::Ptr<_1aa3315b6_Fn> _1aa39c6ba_FindFn(_1aa39b0ae_ImportInfo* _self_, jule::Str _23422_ident, jule::Bool ) {
	if ((!(_1aa39d633_isLookupable(_self_, &(_23422_ident))))) {
		return nullptr;;
	};
	return _1aa3993ba_findFnInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_23422_ident), false);;
}



inline jule::Ptr<_1aa345047_Trait> _1aa39ca0b_FindTrait(_1aa39b0ae_ImportInfo* _self_, jule::Str _24525_ident) {
	if ((!(_1aa39d633_isLookupable(_self_, &(_24525_ident))))) {
		return nullptr;;
	};
	return _1aa39973e_findTraitInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_24525_ident));;
}



inline jule::Ptr<_1aa347753_Enum> _1aa39cd4c_FindEnum(_1aa39b0ae_ImportInfo* _self_, jule::Str _25624_ident) {
	if ((!(_1aa39d633_isLookupable(_self_, &(_25624_ident))))) {
		return nullptr;;
	};
	return _1aa399ab3_findEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_25624_ident));;
}



inline jule::Ptr<_1aa348e5d_TypeEnum> _1aa39d18d_FindTypeEnum(_1aa39b0ae_ImportInfo* _self_, jule::Str _26728_ident) {
	if ((!(_1aa39d633_isLookupable(_self_, &(_26728_ident))))) {
		return nullptr;;
	};
	return _1aa39a047_findTypeEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_26728_ident));;
}



inline jule::Bool _1aa39d633_isLookupable(_1aa39b0ae_ImportInfo* _self_, jule::Str* _27625_ident) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _1aa39d974_existIdent(_self_, jule::Str::lit("self", 4)))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_1aa39d974_existIdent(_self_, (*(_27625_ident)))))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _1aa39d974_existIdent(_1aa39b0ae_ImportInfo* _self_, jule::Str _29622_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd24c77:;
		if (it != expr_end) {
			jule::Ptr<_1aa2d51c4_Token> *_29710_sident = it;
			{
				if (((*((*(_29710_sident))))._field_Kind == _29622_ident)) {
					return true;;
				};
			}
			_iter_next_1acd24c77:;
			++it;
			goto _iter_begin_1acd24c77;
		}
		_iter_end_1acd24c77:;
	};
	return false;;
}



inline jule::Bool _1aa39dc0a_isAccessibleViaSelection(_1aa39b0ae_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _1aa39d974_existIdent(_self_, jule::Str::lit("self", 4)));;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa39b0ae_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa39b0ae_ImportInfo> _1aa39e4ad_SelectPackage(_1aa39ded5_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1aa39b0ae_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1aa3e4d3e_Var> _1aa39e8a9_FindVar(_1aa39ded5_Package* _self_, jule::Str _32323_ident, jule::Bool _32335_binded) {
	return _1aa3985d9_findVarInPackage(&((*(_self_))._field_Files), &(_32323_ident), _32335_binded);;
}



inline jule::Ptr<_1a6019858_TypeAlias> _1aa39eca5_FindTypeAlias(_1aa39ded5_Package* _self_, jule::Str _32929_ident, jule::Bool _32941_binded) {
	return _1aa398a18_findTypeAliasInPackage(&((*(_self_))._field_Files), &(_32929_ident), _32941_binded);;
}



inline jule::Ptr<_1aa31b518_Struct> _1aa3a01a1_FindStruct(_1aa39ded5_Package* _self_, jule::Str _33526_ident, jule::Bool _33538_binded) {
	return _1aa398ebe_findStructInPackage(&((*(_self_))._field_Files), &(_33526_ident), _33538_binded);;
}



inline jule::Ptr<_1aa3315b6_Fn> _1aa3a059c_FindFn(_1aa39ded5_Package* _self_, jule::Str _34122_ident, jule::Bool _34134_binded) {
	return _1aa3993ba_findFnInPackage(&((*(_self_))._field_Files), &(_34122_ident), _34134_binded);;
}



inline jule::Ptr<_1aa345047_Trait> _1aa3a08dd_FindTrait(_1aa39ded5_Package* _self_, jule::Str _34725_ident) {
	return _1aa39973e_findTraitInPackage(&((*(_self_))._field_Files), &(_34725_ident));;
}



inline jule::Ptr<_1aa347753_Enum> _1aa3a0c2e_FindEnum(_1aa39ded5_Package* _self_, jule::Str _35324_ident) {
	return _1aa399ab3_findEnumInPackage(&((*(_self_))._field_Files), &(_35324_ident));;
}



inline jule::Ptr<_1aa348e5d_TypeEnum> _1aa3a1070_FindTypeEnum(_1aa39ded5_Package* _self_, jule::Str _35928_ident) {
	return _1aa39a047_findTypeEnumInPackage(&((*(_self_))._field_Files), &(_35928_ident));;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa39ded5_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa35ac50_comptimeTypeInfo> _1aa3bad9d_pushComptimeTypeInfo(_1aa3ba908_commonSemaMeta* _self_, jule::Ptr<_1a601a64a_TypeKind>* _22341_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd57606:;
		if (it != expr_end) {
			jule::Ptr<_1aa35ac50_comptimeTypeInfo> _22415_t2 = *it;
			{
				if ((((*((*(_22415_t2))._field_base))._field_BindIdent == (*((*(_22341_t))))._field_BindIdent) && _1a601ad87_Equal((*(_22415_t2))._field_base, (*(_22341_t))))) {
					return _22415_t2;;
				};
			}
			_iter_next_1acd57606:;
			++it;
			goto _iter_begin_1acd57606;
		}
		_iter_end_1acd57606:;
	};
	jule::Ptr<_1aa35ac50_comptimeTypeInfo> _2297_t1 = jule::new_ptr<_1aa35ac50_comptimeTypeInfo>(_1aa35ac50_comptimeTypeInfo{._field_base=(*(_22341_t))});;
	{ jule::Slice<jule::Ptr<_1aa35ac50_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_2297_t1); };
	return _2297_t1;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa3ba908_commonSemaMeta _Src) {
	_Stream << "commonSemaMeta{";
	_Stream << "comptimeTypeInfos:" << _Src._field_comptimeTypeInfos << ", ";
	_Stream << "runtime:" << _Src._field_runtime;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa39b0ae_ImportInfo> _1aa3bba08_SelectPackage(_1aa3bb530_sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1aa39b0ae_ImportInfo>> _25229_selector) {
	return _1aa447aea_SelectPackage((*(_self_))._field_file.ptr(), _25229_selector);;
}



inline jule::Ptr<_1aa3e4d3e_Var> _1aa3bbe04_FindVar(_1aa3bb530_sema* _self_, jule::Str _26223_ident, jule::Bool _26235_binded) {
	jule::Ptr<_1aa3e4d3e_Var> _2647_v = _1aa3985d9_findVarInPackage(&((*(_self_))._field_files), &(_26223_ident), _26235_binded);;
	if ((_2647_v != nullptr)) {
		return _2647_v;;
	};
	if ((!(_1aa3b851b_IsPub(_26223_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd5b594:;
		if (it != expr_end) {
			jule::Ptr<_1aa39b0ae_ImportInfo> _27515_imp = *it;
			{
				if ((!(_1aa3b941d_impIsLookupable(&(_27515_imp), &(_26223_ident))))) {
					goto _iter_next_1acd5b594;
				};
				_2647_v=_1aa39b9c7_FindVar(_27515_imp.ptr(), _26223_ident, _26235_binded);
				if (((_2647_v != nullptr) && _1aa3beb93_isAccessibleDefine(_self_, (*_2647_v.alloc)._field_Public, (*_2647_v.alloc)._field_Token))) {
					return _2647_v;;
				};
			}
			_iter_next_1acd5b594:;
			++it;
			goto _iter_begin_1acd5b594;
		}
		_iter_end_1acd5b594:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a6019858_TypeAlias> _1aa3bc300_FindTypeAlias(_1aa3bb530_sema* _self_, jule::Str _29429_ident, jule::Bool _29441_binded) {
	jule::Ptr<_1a6019858_TypeAlias> _2967_ta = _1aa398a18_findTypeAliasInPackage(&((*(_self_))._field_files), &(_29429_ident), _29441_binded);;
	if ((_2967_ta != nullptr)) {
		return _2967_ta;;
	};
	if ((!(_1aa3b851b_IsPub(_29429_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd5e498:;
		if (it != expr_end) {
			jule::Ptr<_1aa39b0ae_ImportInfo> _30715_imp = *it;
			{
				if ((!(_1aa3b941d_impIsLookupable(&(_30715_imp), &(_29429_ident))))) {
					goto _iter_next_1acd5e498;
				};
				_2967_ta=_1aa39bdc3_FindTypeAlias(_30715_imp.ptr(), _29429_ident, _29441_binded);
				if (((_2967_ta != nullptr) && _1aa3beb93_isAccessibleDefine(_self_, (*_2967_ta.alloc)._field_Public, (*_2967_ta.alloc)._field_Token))) {
					return _2967_ta;;
				};
			}
			_iter_next_1acd5e498:;
			++it;
			goto _iter_begin_1acd5e498;
		}
		_iter_end_1acd5e498:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa31b518_Struct> _1aa3bc6eb_FindStruct(_1aa3bb530_sema* _self_, jule::Str _32626_ident, jule::Bool _32638_binded) {
	jule::Ptr<_1aa31b518_Struct> _3287_s = _1aa398ebe_findStructInPackage(&((*(_self_))._field_files), &(_32626_ident), _32638_binded);;
	if ((_3287_s != nullptr)) {
		return _3287_s;;
	};
	if ((!(_1aa3b851b_IsPub(_32626_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd6239c:;
		if (it != expr_end) {
			jule::Ptr<_1aa39b0ae_ImportInfo> _33915_imp = *it;
			{
				if ((!(_1aa3b941d_impIsLookupable(&(_33915_imp), &(_32626_ident))))) {
					goto _iter_next_1acd6239c;
				};
				_3287_s=_1aa39c2be_FindStruct(_33915_imp.ptr(), _32626_ident, _32638_binded);
				if (((_3287_s != nullptr) && _1aa3beb93_isAccessibleDefine(_self_, (*_3287_s.alloc)._field_Public, (*_3287_s.alloc)._field_Token))) {
					return _3287_s;;
				};
			}
			_iter_next_1acd6239c:;
			++it;
			goto _iter_begin_1acd6239c;
		}
		_iter_end_1acd6239c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa3315b6_Fn> _1aa3bcae7_FindFn(_1aa3bb530_sema* _self_, jule::Str _35722_ident, jule::Bool _35734_binded) {
	jule::Ptr<_1aa3315b6_Fn> _3597_f = _1aa3993ba_findFnInPackage(&((*(_self_))._field_files), &(_35722_ident), _35734_binded);;
	if ((_3597_f != nullptr)) {
		return _3597_f;;
	};
	if ((!(_1aa3b851b_IsPub(_35722_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd652a1:;
		if (it != expr_end) {
			jule::Ptr<_1aa39b0ae_ImportInfo> _37015_imp = *it;
			{
				if ((!(_1aa3b941d_impIsLookupable(&(_37015_imp), &(_35722_ident))))) {
					goto _iter_next_1acd652a1;
				};
				_3597_f=_1aa39c6ba_FindFn(_37015_imp.ptr(), _35722_ident, _35734_binded);
				if (((_3597_f != nullptr) && _1aa3beb93_isAccessibleDefine(_self_, (*_3597_f.alloc)._field_Public, (*_3597_f.alloc)._field_Token))) {
					return _3597_f;;
				};
			}
			_iter_next_1acd652a1:;
			++it;
			goto _iter_begin_1acd652a1;
		}
		_iter_end_1acd652a1:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa345047_Trait> _1aa3bce38_FindTrait(_1aa3bb530_sema* _self_, jule::Str _38925_ident) {
	jule::Ptr<_1aa345047_Trait> _3917_t = _1aa39973e_findTraitInPackage(&((*(_self_))._field_files), &(_38925_ident));;
	if ((_3917_t != nullptr)) {
		return _3917_t;;
	};
	if ((!(_1aa3b851b_IsPub(_38925_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd67e63:;
		if (it != expr_end) {
			jule::Ptr<_1aa39b0ae_ImportInfo> _40215_imp = *it;
			{
				if ((!(_1aa3b941d_impIsLookupable(&(_40215_imp), &(_38925_ident))))) {
					goto _iter_next_1acd67e63;
				};
				_3917_t=_1aa39ca0b_FindTrait(_40215_imp.ptr(), _38925_ident);
				if (((_3917_t != nullptr) && _1aa3beb93_isAccessibleDefine(_self_, (*_3917_t.alloc)._field_Public, (*_3917_t.alloc)._field_Token))) {
					return _3917_t;;
				};
			}
			_iter_next_1acd67e63:;
			++it;
			goto _iter_begin_1acd67e63;
		}
		_iter_end_1acd67e63:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa347753_Enum> _1aa3bd279_FindEnum(_1aa3bb530_sema* _self_, jule::Str _42124_ident) {
	jule::Ptr<_1aa347753_Enum> _4237_e = _1aa399ab3_findEnumInPackage(&((*(_self_))._field_files), &(_42124_ident));;
	if ((_4237_e != nullptr)) {
		return _4237_e;;
	};
	if ((!(_1aa3b851b_IsPub(_42124_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd6ab25:;
		if (it != expr_end) {
			jule::Ptr<_1aa39b0ae_ImportInfo> _43415_imp = *it;
			{
				if ((!(_1aa3b941d_impIsLookupable(&(_43415_imp), &(_42124_ident))))) {
					goto _iter_next_1acd6ab25;
				};
				_4237_e=_1aa39cd4c_FindEnum(_43415_imp.ptr(), _42124_ident);
				if (((_4237_e != nullptr) && _1aa3beb93_isAccessibleDefine(_self_, (*_4237_e.alloc)._field_Public, (*_4237_e.alloc)._field_Token))) {
					return _4237_e;;
				};
			}
			_iter_next_1acd6ab25:;
			++it;
			goto _iter_begin_1acd6ab25;
		}
		_iter_end_1acd6ab25:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa348e5d_TypeEnum> _1aa3bd5ba_FindTypeEnum(_1aa3bb530_sema* _self_, jule::Str _45328_ident) {
	jule::Ptr<_1aa348e5d_TypeEnum> _4557_e = _1aa39a047_findTypeEnumInPackage(&((*(_self_))._field_files), &(_45328_ident));;
	if ((_4557_e != nullptr)) {
		return _4557_e;;
	};
	if ((!(_1aa3b851b_IsPub(_45328_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd6d7d7:;
		if (it != expr_end) {
			jule::Ptr<_1aa39b0ae_ImportInfo> _46615_imp = *it;
			{
				if ((!(_1aa3b941d_impIsLookupable(&(_46615_imp), &(_45328_ident))))) {
					goto _iter_next_1acd6d7d7;
				};
				_4557_e=_1aa39d18d_FindTypeEnum(_46615_imp.ptr(), _45328_ident);
				if (((_4557_e != nullptr) && _1aa3beb93_isAccessibleDefine(_self_, (*_4557_e.alloc)._field_Public, (*_4557_e.alloc)._field_Token))) {
					return _4557_e;;
				};
			}
			_iter_next_1acd6d7d7:;
			++it;
			goto _iter_begin_1acd6d7d7;
		}
		_iter_end_1acd6d7d7:;
	};
	return nullptr;;
}



inline jule::Bool _1aa3bd9c7_isFlag(_1aa3bb530_sema* _self_, jule::I32 _48218_flags) {
	return (((*(_self_))._field_flags & _48218_flags) == _48218_flags);;
}



inline jule::Ptr<_1aa4475cd_SymbolTable> _1aa3bdc5d_getCurrentFile(_1aa3bb530_sema* _self_) {
	return (*(_self_))._field_file;;
}



inline void _1aa3be016_setCurrentFile(_1aa3bb530_sema* _self_, jule::Ptr<_1aa4475cd_SymbolTable> _48534_f) {
	(*(_self_))._field_file=_48534_f;
}



inline void _1aa3be434_pushErr(_1aa3bb530_sema* _self_, jule::Ptr<_1aa2d51c4_Token> _48723_token, jule::Str _48738_fmt, jule::Slice<jule::Any> _48751_args) {
	{ jule::Slice<_1ada72b17_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1aa3b9099_compilerErr(&(_48723_token), true, _48738_fmt, _48751_args)); };
}



inline void _1aa3be797_pushSuggestion(_1aa3bb530_sema* _self_, jule::Str _49230_fmt, jule::Slice<jule::Any> _49243_args) {
	{
		_1aa3ba650_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _49230_fmt, _49243_args);
	};
}



inline jule::Bool _1aa3beb93_isAccessibleDefine(_1aa3bb530_sema* _self_, jule::Bool _49830_public, jule::Ptr<_1aa2d51c4_Token> _49844_token) {
	if ((_49830_public || ((*(_49844_token))._field_File == nullptr))) {
		return true;;
	};
	jule::Str _5033_selfDir = _1aa2db142_Dir((*((*(_self_))._field_file))._field_File.ptr());;
	jule::Str _5043_tokenDir = _1aa2db142_Dir((*_49844_token.alloc)._field_File.ptr());;
	if ((_5033_selfDir == _5043_tokenDir)) {
		return true;;
	};
	if ((_1aa3a14b0_isStdPackage(&(_5043_tokenDir), jule::Str::lit("runtime", 7)) && _1aa3a14b0_isStdPackage(&(_5033_selfDir), jule::Str()))) {
		return true;;
	};
	return false;;
}



inline jule::Bool _1aa3c0149_isDuplicatedIdent(_1aa3bb530_sema* _self_, jule::Uintptr _52129_itself, jule::Str* _52147_ident, jule::Bool _52159_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd76603:;
		if (it != expr_end) {
			jule::Ptr<_1aa4475cd_SymbolTable> *_52210_f = it;
			{
				if (_1aa44ae83_isDuplicatedIdent((*(_52210_f)).ptr(), _52129_itself, _52147_ident, _52159_binded)) {
					return true;;
				};
				{
					auto expr = &((*(*(_52210_f)).alloc)._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acd77604:;
					if (it != expr_end) {
						jule::Ptr<_1aa39b0ae_ImportInfo> *_52711_imp = it;
						{
							{
								auto expr = &((*((*(_52711_imp))))._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1acd77eea:;
								if (it != expr_end) {
									jule::Ptr<_1aa2d51c4_Token> *_52812_selected = it;
									{
										if (((*((*(_52812_selected))))._field_Kind == (*(_52147_ident)))) {
											return true;;
										};
									}
									_iter_next_1acd77eea:;
									++it;
									goto _iter_begin_1acd77eea;
								}
								_iter_end_1acd77eea:;
							};
						}
						_iter_next_1acd77604:;
						++it;
						goto _iter_begin_1acd77604;
					}
					_iter_end_1acd77604:;
				};
			}
			_iter_next_1acd76603:;
			++it;
			goto _iter_begin_1acd76603;
		}
		_iter_end_1acd76603:;
	};
	return false;;
}



inline void _1aa3c04ac_checkDirectives(jule::Ptr<_1aa3bb530_sema> _self_, jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>>* _53837_d, jule::Any _53863_o) {
	_1aa39478e_directiveChecker _5397_dc = _1aa39478e_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>>>)(_53837_d)), ._field_o=_53863_o};;
	_1aa395c57_check(&_5397_dc);
}



inline jule::Bool _1aa3c0963_checkGenericQuantity(_1aa3bb530_sema* _self_, jule::I32 _54736_required, jule::I32 _54751_given, jule::Ptr<_1aa2d51c4_Token> _54763_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_54736_required == 0LL) && (_54751_given > 0LL))) {
			_case_begin_1acd7a4d6:;
			{
				_1aa3be434_pushErr(_self_, _54763_token, jule::Str::lit("type have not generics but instantiate like generics", 52), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_54736_required > 0LL) && (_54751_given == 0LL))) {
			_case_begin_1acd7a55d:;
			{
				_1aa3be434_pushErr(_self_, _54763_token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_54736_required < _54751_given)) {
			_case_begin_1acd7a5d5:;
			{
				_1aa3be434_pushErr(_self_, _54763_token, jule::Str::lit("overflow generics", 17), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_54736_required > _54751_given)) {
			_case_begin_1acd7a65c:;
			{
				_1aa3be434_pushErr(_self_, _54763_token, jule::Str::lit("missing generics", 16), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1acd7a41a:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1acd7a34e:;
	};
}



inline jule::Bool _1aa3c0d5e_isDuplicatedImportSelection(_1aa3bb530_sema* _self_, jule::Uintptr _56639_itself, jule::Str* _56657_ident) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd7d352:;
		if (it != expr_end) {
			jule::Ptr<_1aa39b0ae_ImportInfo> *_56710_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_56710_imp))) == _56639_itself)) {
					goto _iter_end_1acd7d352;
				};
				if (_1aa39d974_existIdent((*(_56710_imp)).ptr(), (*(_56657_ident)))) {
					return true;;
				};
			}
			_iter_next_1acd7d352:;
			++it;
			goto _iter_begin_1acd7d352;
		}
		_iter_end_1acd7d352:;
	};
	return false;;
}



inline jule::Any _1aa3c125a_getImportDef(_1aa3bb530_sema* _self_, jule::Str* _57925_ident, jule::Ptr<_1aa39b0ae_ImportInfo>* _57942_imp) {
	if ((_1aa5e136a_findPackageBuiltinDef(&((*((*(_57942_imp))))._field_LinkPath), _57925_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type3);;
	};
	{
		auto expr = &((*((*((*(_57942_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd804a8:;
		if (it != expr_end) {
			jule::Ptr<_1aa4475cd_SymbolTable> _58315_f = *it;
			{
				;
				jule::Any _5868_def = _1aa44a9cc_defByIdent(_58315_f.ptr(), _57925_ident, false);;
				if ((_5868_def != nullptr)) {
					return _5868_def;;
				};
			}
			_iter_next_1acd804a8:;
			++it;
			goto _iter_begin_1acd804a8;
		}
		_iter_end_1acd804a8:;
	};
	return nullptr;;
}



inline jule::Bool _1acd86a0e_checkImportSelection(_1aa3bb530_sema* _self_, jule::Ptr<_1aa2d51c4_Token>* _59440_ident, jule::Ptr<_1aa3e4d3e_Var>* _59456_s) {
	if ((!(_1aa3beb93_isAccessibleDefine(_self_, (*((*(_59456_s))))._field_Public, (*((*(_59456_s))))._field_Token)))) {
		_1aa3be434_pushErr(_self_, (*(_59440_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59440_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1aa3be797_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1aa39a3ee_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_59456_s))))._field_Ident), false) != nullptr)) {
		_1aa3be434_pushErr(_self_, (*(_59440_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59456_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}

inline jule::Bool _1acd8acee_checkImportSelection(_1aa3bb530_sema* _self_, jule::Ptr<_1aa2d51c4_Token>* _59440_ident, jule::Ptr<_1a6019858_TypeAlias>* _59456_s) {
	if ((!(_1aa3beb93_isAccessibleDefine(_self_, (*((*(_59456_s))))._field_Public, (*((*(_59456_s))))._field_Token)))) {
		_1aa3be434_pushErr(_self_, (*(_59440_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59440_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1aa3be797_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1aa39a3ee_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_59456_s))))._field_Ident), false) != nullptr)) {
		_1aa3be434_pushErr(_self_, (*(_59440_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59456_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}

inline jule::Bool _1acd90078_checkImportSelection(_1aa3bb530_sema* _self_, jule::Ptr<_1aa2d51c4_Token>* _59440_ident, jule::Ptr<_1aa31b518_Struct>* _59456_s) {
	if ((!(_1aa3beb93_isAccessibleDefine(_self_, (*((*(_59456_s))))._field_Public, (*((*(_59456_s))))._field_Token)))) {
		_1aa3be434_pushErr(_self_, (*(_59440_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59440_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1aa3be797_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1aa39a3ee_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_59456_s))))._field_Ident), false) != nullptr)) {
		_1aa3be434_pushErr(_self_, (*(_59440_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59456_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}

inline jule::Bool _1acd945dd_checkImportSelection(_1aa3bb530_sema* _self_, jule::Ptr<_1aa2d51c4_Token>* _59440_ident, jule::Ptr<_1aa345047_Trait>* _59456_s) {
	if ((!(_1aa3beb93_isAccessibleDefine(_self_, (*((*(_59456_s))))._field_Public, (*((*(_59456_s))))._field_Token)))) {
		_1aa3be434_pushErr(_self_, (*(_59440_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59440_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1aa3be797_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1aa39a3ee_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_59456_s))))._field_Ident), false) != nullptr)) {
		_1aa3be434_pushErr(_self_, (*(_59440_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59456_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}

inline jule::Bool _1acd98889_checkImportSelection(_1aa3bb530_sema* _self_, jule::Ptr<_1aa2d51c4_Token>* _59440_ident, jule::Ptr<_1aa347753_Enum>* _59456_s) {
	if ((!(_1aa3beb93_isAccessibleDefine(_self_, (*((*(_59456_s))))._field_Public, (*((*(_59456_s))))._field_Token)))) {
		_1aa3be434_pushErr(_self_, (*(_59440_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59440_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1aa3be797_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1aa39a3ee_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_59456_s))))._field_Ident), false) != nullptr)) {
		_1aa3be434_pushErr(_self_, (*(_59440_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59456_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}

inline jule::Bool _1acd9cb35_checkImportSelection(_1aa3bb530_sema* _self_, jule::Ptr<_1aa2d51c4_Token>* _59440_ident, jule::Ptr<_1aa348e5d_TypeEnum>* _59456_s) {
	if ((!(_1aa3beb93_isAccessibleDefine(_self_, (*((*(_59456_s))))._field_Public, (*((*(_59456_s))))._field_Token)))) {
		_1aa3be434_pushErr(_self_, (*(_59440_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59440_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1aa3be797_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1aa39a3ee_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_59456_s))))._field_Ident), false) != nullptr)) {
		_1aa3be434_pushErr(_self_, (*(_59440_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59456_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}

inline jule::Bool _1acda1dae_checkImportSelection(_1aa3bb530_sema* _self_, jule::Ptr<_1aa2d51c4_Token>* _59440_ident, jule::Ptr<_1aa3315b6_Fn>* _59456_s) {
	if ((!(_1aa3beb93_isAccessibleDefine(_self_, (*((*(_59456_s))))._field_Public, (*((*(_59456_s))))._field_Token)))) {
		_1aa3be434_pushErr(_self_, (*(_59440_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59440_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1aa3be797_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1aa39a3ee_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_59456_s))))._field_Ident), false) != nullptr)) {
		_1aa3be434_pushErr(_self_, (*(_59440_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59456_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}



inline jule::Bool _1aa3c1997_checkImportSelectedSelections(_1aa3bb530_sema* _self_, jule::Ptr<_1aa39b0ae_ImportInfo>* _60850_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_60850_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd820e2:;
		if (it != expr_end) {
			jule::Ptr<_1aa2d51c4_Token> _61010_ident = *it;
			{
				if ((*(_61010_ident))._field_Kind.equal("self", 4)) {
					goto _iter_next_1acd820e2;
				};
				if (_1aa3c0d5e_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>((*(_60850_imp))), &((*(_61010_ident))._field_Kind))) {
					_1aa3be434_pushErr(_self_, _61010_ident, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_61010_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
					_1aa3be797_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1acd820e2;
				};
				jule::Any _6228_def = _1aa3c125a_getImportDef(_self_, &((*_61010_ident.alloc)._field_Kind), _60850_imp);;
				{
					auto &_match_expr{ _6228_def };
					
					if (_match_expr.type == &__jule_any_type3) {
						_case_begin_1acd831e2:;
						{
							goto _iter_next_1acd820e2;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1acd84ac8:;
						{
							jule::Ptr<_1aa3e4d3e_Var> _6289_v = _6228_def.unsafe_cast_ptr<_1aa3e4d3e_Var>();;
							__jule_func_result=(_1acd86a0e_checkImportSelection(_self_, &(_61010_ident), &(_6289_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type27) {
						_case_begin_1acd84b3e:;
						{
							jule::Ptr<_1a6019858_TypeAlias> _6319_ta = _6228_def.unsafe_cast_ptr<_1a6019858_TypeAlias>();;
							__jule_func_result=(_1acd8acee_checkImportSelection(_self_, &(_61010_ident), &(_6319_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1acd84ba5:;
						{
							jule::Ptr<_1aa31b518_Struct> _6349_s = _6228_def.unsafe_cast_ptr<_1aa31b518_Struct>();;
							__jule_func_result=(_1acd90078_checkImportSelection(_self_, &(_61010_ident), &(_6349_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1acd84c1b:;
						{
							jule::Ptr<_1aa345047_Trait> _6379_t = _6228_def.unsafe_cast_ptr<_1aa345047_Trait>();;
							__jule_func_result=(_1acd945dd_checkImportSelection(_self_, &(_61010_ident), &(_6379_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type24) {
						_case_begin_1acd84c82:;
						{
							jule::Ptr<_1aa347753_Enum> _6409_e = _6228_def.unsafe_cast_ptr<_1aa347753_Enum>();;
							__jule_func_result=(_1acd98889_checkImportSelection(_self_, &(_61010_ident), &(_6409_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type25) {
						_case_begin_1acd85898:;
						{
							jule::Ptr<_1aa348e5d_TypeEnum> _6439_e = _6228_def.unsafe_cast_ptr<_1aa348e5d_TypeEnum>();;
							__jule_func_result=(_1acd9cb35_checkImportSelection(_self_, &(_61010_ident), &(_6439_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type26) {
						_case_begin_1acd8590e:;
						{
							jule::Ptr<_1aa3315b6_Fn> _6469_f = _6228_def.unsafe_cast_ptr<_1aa3315b6_Fn>();;
							__jule_func_result=(_1acda1dae_checkImportSelection(_self_, &(_61010_ident), &(_6469_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_1acd849b8:;
						{
							_1aa3be434_pushErr(_self_, _61010_ident, jule::Str::lit("undefined identifier: @", 23), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_61010_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
							__jule_func_result=false;
							goto _iter_next_1acd820e2;
						}
					}
					_match_end_1acd82785:;
				};
			}
			_iter_next_1acd820e2:;
			++it;
			goto _iter_begin_1acd820e2;
		}
		_iter_end_1acd820e2:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1acda6677_checkImportsAllSelectionsFromCollection(_1aa3bb530_sema* _self_, jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>* _65759_s, jule::Ptr<_1aa2d51c4_Token>* _65768_et) {
	jule::Bool _6587_ok = true;;
	{
		auto expr = _65759_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acda83d2:;
		if (it != expr_end) {
			jule::Ptr<_1aa3e4d3e_Var> *_65910_d = it;
			{
				if ((*((*(_65910_d))))._field_Public) {
					_6587_ok=(_1acd86a0e_checkImportSelection(_self_, _65768_et, _65910_d) && _6587_ok);
				};
			}
			_iter_next_1acda83d2:;
			++it;
			goto _iter_begin_1acda83d2;
		}
		_iter_end_1acda83d2:;
	};
	return _6587_ok;;
}

inline jule::Bool _1acda7d0a_checkImportsAllSelectionsFromCollection(_1aa3bb530_sema* _self_, jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>* _65759_s, jule::Ptr<_1aa2d51c4_Token>* _65768_et) {
	jule::Bool _6587_ok = true;;
	{
		auto expr = _65759_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acdaaacc:;
		if (it != expr_end) {
			jule::Ptr<_1a6019858_TypeAlias> *_65910_d = it;
			{
				if ((*((*(_65910_d))))._field_Public) {
					_6587_ok=(_1acd8acee_checkImportSelection(_self_, _65768_et, _65910_d) && _6587_ok);
				};
			}
			_iter_next_1acdaaacc:;
			++it;
			goto _iter_begin_1acdaaacc;
		}
		_iter_end_1acdaaacc:;
	};
	return _6587_ok;;
}

inline jule::Bool _1acdabade_checkImportsAllSelectionsFromCollection(_1aa3bb530_sema* _self_, jule::Slice<jule::Ptr<_1aa31b518_Struct>>* _65759_s, jule::Ptr<_1aa2d51c4_Token>* _65768_et) {
	jule::Bool _6587_ok = true;;
	{
		auto expr = _65759_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acdad2b6:;
		if (it != expr_end) {
			jule::Ptr<_1aa31b518_Struct> *_65910_d = it;
			{
				if ((*((*(_65910_d))))._field_Public) {
					_6587_ok=(_1acd90078_checkImportSelection(_self_, _65768_et, _65910_d) && _6587_ok);
				};
			}
			_iter_next_1acdad2b6:;
			++it;
			goto _iter_begin_1acdad2b6;
		}
		_iter_end_1acdad2b6:;
	};
	return _6587_ok;;
}

inline jule::Bool _1acdae2c8_checkImportsAllSelectionsFromCollection(_1aa3bb530_sema* _self_, jule::Slice<jule::Ptr<_1aa3315b6_Fn>>* _65759_s, jule::Ptr<_1aa2d51c4_Token>* _65768_et) {
	jule::Bool _6587_ok = true;;
	{
		auto expr = _65759_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acdb09c2:;
		if (it != expr_end) {
			jule::Ptr<_1aa3315b6_Fn> *_65910_d = it;
			{
				if ((*((*(_65910_d))))._field_Public) {
					_6587_ok=(_1acda1dae_checkImportSelection(_self_, _65768_et, _65910_d) && _6587_ok);
				};
			}
			_iter_next_1acdb09c2:;
			++it;
			goto _iter_begin_1acdb09c2;
		}
		_iter_end_1acdb09c2:;
	};
	return _6587_ok;;
}

inline jule::Bool _1acdb03ea_checkImportsAllSelectionsFromCollection(_1aa3bb530_sema* _self_, jule::Slice<jule::Ptr<_1aa345047_Trait>>* _65759_s, jule::Ptr<_1aa2d51c4_Token>* _65768_et) {
	jule::Bool _6587_ok = true;;
	{
		auto expr = _65759_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acdb3167:;
		if (it != expr_end) {
			jule::Ptr<_1aa345047_Trait> *_65910_d = it;
			{
				if ((*((*(_65910_d))))._field_Public) {
					_6587_ok=(_1acd945dd_checkImportSelection(_self_, _65768_et, _65910_d) && _6587_ok);
				};
			}
			_iter_next_1acdb3167:;
			++it;
			goto _iter_begin_1acdb3167;
		}
		_iter_end_1acdb3167:;
	};
	return _6587_ok;;
}

inline jule::Bool _1acdb4179_checkImportsAllSelectionsFromCollection(_1aa3bb530_sema* _self_, jule::Slice<jule::Ptr<_1aa347753_Enum>>* _65759_s, jule::Ptr<_1aa2d51c4_Token>* _65768_et) {
	jule::Bool _6587_ok = true;;
	{
		auto expr = _65759_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acdb580c:;
		if (it != expr_end) {
			jule::Ptr<_1aa347753_Enum> *_65910_d = it;
			{
				if ((*((*(_65910_d))))._field_Public) {
					_6587_ok=(_1acd98889_checkImportSelection(_self_, _65768_et, _65910_d) && _6587_ok);
				};
			}
			_iter_next_1acdb580c:;
			++it;
			goto _iter_begin_1acdb580c;
		}
		_iter_end_1acdb580c:;
	};
	return _6587_ok;;
}

inline jule::Bool _1acdb681e_checkImportsAllSelectionsFromCollection(_1aa3bb530_sema* _self_, jule::Slice<jule::Ptr<_1aa348e5d_TypeEnum>>* _65759_s, jule::Ptr<_1aa2d51c4_Token>* _65768_et) {
	jule::Bool _6587_ok = true;;
	{
		auto expr = _65759_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acdb803a:;
		if (it != expr_end) {
			jule::Ptr<_1aa348e5d_TypeEnum> *_65910_d = it;
			{
				if ((*((*(_65910_d))))._field_Public) {
					_6587_ok=(_1acd9cb35_checkImportSelection(_self_, _65768_et, _65910_d) && _6587_ok);
				};
			}
			_iter_next_1acdb803a:;
			++it;
			goto _iter_begin_1acdb803a;
		}
		_iter_end_1acdb803a:;
	};
	return _6587_ok;;
}



inline jule::Bool _1aa3c21d4_checkImportAllSelections(_1aa3bb530_sema* _self_, jule::Ptr<_1aa39b0ae_ImportInfo>* _66741_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*((*(_66741_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acda2ad5:;
		if (it != expr_end) {
			jule::Ptr<_1aa4475cd_SymbolTable> *_66910_file = it;
			{
				__jule_func_result=(_1acda6677_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_66910_file))))._field_Vars), &((*((*(_66741_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1acda7d0a_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_66910_file)).alloc)._field_TypeAliases), &((*((*(_66741_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1acdabade_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_66910_file)).alloc)._field_Structs), &((*((*(_66741_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1acdae2c8_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_66910_file)).alloc)._field_Funcs), &((*((*(_66741_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1acdb03ea_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_66910_file)).alloc)._field_Traits), &((*((*(_66741_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1acdb4179_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_66910_file)).alloc)._field_Enums), &((*((*(_66741_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1acdb681e_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_66910_file)).alloc)._field_TypeEnums), &((*((*(_66741_imp))))._field_Token)) && __jule_func_result);
			}
			_iter_next_1acda2ad5:;
			++it;
			goto _iter_begin_1acda2ad5;
		}
		_iter_end_1acda2ad5:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1aa3c2525_checkImportSelections(_1aa3bb530_sema* _self_, jule::Ptr<_1aa39b0ae_ImportInfo>* _68142_imp) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_68142_imp))))._field_Selected.len() > 0LL)) {
		__jule_func_result = _1aa3c1997_checkImportSelectedSelections(_self_, _68142_imp);
		return __jule_func_result;;
	} else if ((*((*(_68142_imp))))._field_ImportAll) {
		__jule_func_result = _1aa3c21d4_checkImportAllSelections(_self_, _68142_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1aa3c2866_isUseAliasDuplication(_1aa3bb530_sema* _self_, jule::Ptr<_1aa39b0ae_ImportInfo>* _69038_imp) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acdba0c5:;
		if (it != expr_end) {
			jule::Ptr<_1aa39b0ae_ImportInfo> _69115_imp2 = *it;
			{
				if ((_69115_imp2 == (*(_69038_imp)))) {
					goto _iter_end_1acdba0c5;
				};
				if (((*(_69115_imp2))._field_Alias == (*((*(_69038_imp))))._field_Alias)) {
					return true;;
				};
				if ((((*_69115_imp2.alloc)._field_Ident == (*_69115_imp2.alloc)._field_LinkPath) && ((*_69115_imp2.alloc)._field_Ident == (*((*(_69038_imp))))._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1acdba0c5:;
			++it;
			goto _iter_begin_1acdba0c5;
		}
		_iter_end_1acdba0c5:;
	};
	return false;;
}



inline jule::Bool _1aa3c2ba7_checkImport(_1aa3bb530_sema* _self_, jule::Ptr<_1aa39b0ae_ImportInfo>* _70632_imp) {
	if (((*((*(_70632_imp))))._field_Binded || ((*((*((*(_70632_imp))))._field_Package))._field_Files.len() == 0LL))) {
		return true;;
	};
	if ((*((*(_70632_imp))))._field_LinkPath.equal("std::unsafe", 11)) {
		if ((((*((*(_70632_imp))))._field_ImportAll || !((*((*(_70632_imp))))._field_Alias).empty()) || ((*((*(_70632_imp))))._field_Selected.len() > 0LL))) {
			_1aa3be434_pushErr(_self_, (*((*(_70632_imp))))._field_Token, jule::Str::lit("expected plain use declaration for this package like: @", 55), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("use std::unsafe", 15), &__jule_any_type4); __jule_collection; }));
			return false;;
		};
	};
	if (((*((*(_70632_imp))))._field_Alias.len() != 0LL)) {
		if (_1aa2d7aab_IsIgnoreIdent((*((*(_70632_imp))))._field_Alias)) {
			_1aa3be434_pushErr(_self_, (*((*(_70632_imp))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		} else if (_1aa3c2866_isUseAliasDuplication(_self_, _70632_imp)) {
			_1aa3be434_pushErr(_self_, (*((*(_70632_imp))))._field_Token, jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_70632_imp))))._field_Alias, &__jule_any_type4); __jule_collection; }));
			_1aa3be797_pushSuggestion(_self_, jule::Str::lit("rename alias for this use declaration to avoid duplication", 58), jule::Slice<jule::Any>());
		};
	};
	if ((!((*((*(_70632_imp))))._field_Duplicate))) {
		jule::Ptr<_1aa3bb530_sema> _7298_sema = jule::new_ptr<_1aa3bb530_sema>(_1aa3bb530_sema{._field_errors=jule::Slice<_1ada72b17_Log>(nullptr), ._field_files=jule::Slice<jule::Ptr<_1aa4475cd_SymbolTable>>(nullptr), ._field_file=jule::Ptr<_1aa4475cd_SymbolTable>(nullptr), ._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_1aa3e16dc_check(_7298_sema, &((*(*((*(_70632_imp))))._field_Package.alloc)._field_Files));
		if (((*_7298_sema.alloc)._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append((*_7298_sema.alloc)._field_errors);;
			(*_7298_sema.alloc)._field_errors=nullptr;
			return false;;
		};
	};
	return _1aa3c2525_checkImportSelections(_self_, _70632_imp);;
}



inline void _1aa3c2da5_checkImports(_1aa3bb530_sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acdc45b8:;
		if (it != expr_end) {
			jule::Ptr<_1aa4475cd_SymbolTable> _74415_file = *it;
			{
				_1aa3be016_setCurrentFile(_self_, _74415_file);
				{
					auto expr = &((*(_74415_file))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acdc52ab:;
					if (it != expr_end) {
						jule::Ptr<_1aa39b0ae_ImportInfo> _74616_imp = *it;
						{
							jule::Bool _7475_ok = _1aa3c2ba7_checkImport(_self_, &(_74616_imp));;
							if ((!(_7475_ok))) {
								return;;
							};
						}
						_iter_next_1acdc52ab:;
						++it;
						goto _iter_begin_1acdc52ab;
					}
					_iter_end_1acdc52ab:;
				};
			}
			_iter_next_1acdc45b8:;
			++it;
			goto _iter_begin_1acdc45b8;
		}
		_iter_end_1acdc45b8:;
	};
}



inline void _1aa3c30a3_implFileImpls(jule::Ptr<_1aa3bb530_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acdc56da:;
		if (it != expr_end) {
			jule::Ptr<_1aa37374b_Impl> _75715_imp = *it;
			{
				_1aa3d789d_implImpl(_self_, &(_75715_imp));
			}
			_iter_next_1acdc56da:;
			++it;
			goto _iter_begin_1acdc56da;
		}
		_iter_end_1acdc56da:;
	};
}



inline void _1aa3c32a1_implImpls(jule::Ptr<_1aa3bb530_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acdc70e3:;
		if (it != expr_end) {
			jule::Ptr<_1aa4475cd_SymbolTable> _76315_file = *it;
			{
				_1aa3be016_setCurrentFile(_self_.ptr(), _76315_file);
				_1aa3c30a3_implFileImpls(_self_);
			}
			_iter_next_1acdc70e3:;
			++it;
			goto _iter_begin_1acdc70e3;
		}
		_iter_end_1acdc70e3:;
	};
}



inline void _1aa3c349e_checkEnums(jule::Ptr<_1aa3bb530_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acdc818d:;
		if (it != expr_end) {
			jule::Ptr<_1aa4475cd_SymbolTable> _77015_file = *it;
			{
				_1aa3be016_setCurrentFile(_self_.ptr(), _77015_file);
				{
					
					if ((!(_1aa3d3cd9_checkEnumDecls(_self_)))) {
						_case_begin_1acdc87cb:;
					}
					else if ((!(_1aa3d4070_checkTypeEnumDecls(_self_)))) {
						_case_begin_1acdc8d92:;
					}
					_match_end_1acdc8cc6:;
				};
			}
			_iter_next_1acdc818d:;
			++it;
			goto _iter_begin_1acdc818d;
		}
		_iter_end_1acdc818d:;
	};
}



inline void _1aa3c369c_checkFileInherits(jule::Ptr<_1aa3bb530_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acdc9bea:;
		if (it != expr_end) {
			jule::Ptr<_1aa345047_Trait> _78015_t = *it;
			{
				jule::Bool _7814_ok = _1aa3d5934__checkTraitDeclInherits(_self_, &(_78015_t));;
				if ((!(_7814_ok))) {
					return;;
				};
			}
			_iter_next_1acdc9bea:;
			++it;
			goto _iter_begin_1acdc9bea;
		}
		_iter_end_1acdc9bea:;
	};
}



inline void _1aa3c389a_checkInherits(jule::Ptr<_1aa3bb530_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acdca26c:;
		if (it != expr_end) {
			jule::Ptr<_1aa4475cd_SymbolTable> _78915_file = *it;
			{
				_1aa3be016_setCurrentFile(_self_.ptr(), _78915_file);
				_1aa3c369c_checkFileInherits(_self_);
			}
			_iter_next_1acdca26c:;
			++it;
			goto _iter_begin_1acdca26c;
		}
		_iter_end_1acdca26c:;
	};
}



inline _1a602ca47_typeChecker _1aa3c3d51_typeChecker(jule::Ptr<_1aa3bb530_sema> _self_, jule::Trait _79532_l, jule::Slice<jule::Ptr<_1a6019858_TypeAlias>> _79547_generics, jule::Ptr<_1a602ba57_referencer> _7967_referencer) {
	_1a602ca47_typeChecker _7977_tc = _1a602ca47_typeChecker{._field_s=_self_, ._field_rootLookup=_79532_l, ._field_lookup=_79532_l, ._field_referencer=_7967_referencer, ._field_refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1aa2d51c4_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1aa307889_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=_79547_generics, ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1a6019858_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>(nullptr), ._field_inscatch=false};;
	{
		auto &_match_expr{ _79532_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data0)) {
			_case_begin_1acdccdc9:;
			{
				jule::Ptr<_1aa381160_scopeChecker> _8068_hard = _1aa3847c3_getHardRoot(_79532_l.cast_ptr<_1aa381160_scopeChecker>((jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data0));;
				_7977_tc._field_refers=(*((*(_8068_hard))._field_owner))._field_Refers;
			}
		}
		_match_end_1acdcc846:;
	};
	if (((_7967_referencer != nullptr) && ((*_7967_referencer.alloc)._field_refs != nullptr))) {
		{
			auto &_match_expr{ (*(_7967_referencer))._field_owner };
			
			if (_match_expr.type == &__jule_any_type27) {
				_case_begin_1bc5a2902:;
				{
					_7977_tc._field_ownerAlias=(*(_7967_referencer))._field_owner.unsafe_cast_ptr<_1a6019858_TypeAlias>();
				}
			}
			_match_end_1bc5a289c:;
		};
	};
	return _7977_tc;;
}



inline jule::Ptr<_1a601a64a_TypeKind> _1aa3c9252_buildTypeWithRefers(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa2ea67e_TypeDecl>* _82241_t, jule::Trait _82264_l, jule::Slice<jule::Ptr<_1a6019858_TypeAlias>> _8237_generics, jule::Ptr<_1a602ba57_referencer> _82335_referencer) {
	return ({ auto _wrap_copy = _1aa3c3d51_typeChecker(_self_, _82264_l, _8237_generics, _82335_referencer); _1a6035225_checkDecl(&_wrap_copy, _82241_t); });;
}



inline jule::Bool _1aa3c9780_checkTypeWithRefers(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1a6022d5b_TypeSymbol>* _82941_t, jule::Trait _82961_l, jule::Slice<jule::Ptr<_1a6019858_TypeAlias>> _8307_generics, jule::Ptr<_1a602ba57_referencer> _83035_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1a6023213_checked((*(_82941_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_82941_t))))._field_Kind=_1aa3c9252_buildTypeWithRefers(_self_, &((*((*(_82941_t))))._field_Decl), _82961_l, _8307_generics, _83035_referencer);
	__jule_func_result = _1a6023213_checked((*(_82941_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1aa3713e7_constraintChecker> _1aa3c9a16_constraintChecker(jule::Ptr<_1aa3bb530_sema> _self_) {
	return jule::new_ptr<_1aa3713e7_constraintChecker>(_1aa3713e7_constraintChecker{._field_s=_self_, ._field_genericsD=jule::Slice<jule::Ptr<_1aa307889_GenericDecl>>(nullptr), ._field_generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_genericsA=jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>(nullptr), ._field_fi=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_si=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_et=jule::Ptr<_1aa2d51c4_Token>(nullptr), ._field_uniq=false});;
}



inline jule::Bool _1aa3c9e12_checkType(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1a6022d5b_TypeSymbol>* _84431_t, jule::Trait _84451_l) {
	return _1aa3c9780_checkTypeWithRefers(_self_, _84431_t, _84451_l, nullptr, nullptr);;
}



inline jule::Ptr<_1a601a64a_TypeKind> _1aa3ca3b8_buildTypeWithGenerics(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa2ea67e_TypeDecl>* _85043_t, jule::Slice<jule::Ptr<_1a6019858_TypeAlias>> _8517_generics, jule::Ptr<_1aa337732_ReferenceStack> _85135_refers) {
	jule::Ptr<_1a602ca47_typeChecker> _8527_tc = jule::new_ptr<_1a602ca47_typeChecker>(_1a602ca47_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data3), ._field_referencer=jule::Ptr<_1a602ba57_referencer>(nullptr), ._field_refers=_85135_refers, ._field_errorToken=jule::Ptr<_1aa2d51c4_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1aa307889_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=_8517_generics, ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1a6019858_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1a6035225_checkDecl(_8527_tc.ptr(), _85043_t);;
}



inline jule::Ptr<_1a601a64a_TypeKind> _1aa3caa4a_selectType(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa2ea67e_TypeDecl>* _86832_t) {
	jule::Ptr<_1a602ca47_typeChecker> _8697_tc = jule::new_ptr<_1a602ca47_typeChecker>(_1a602ca47_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data3), ._field_referencer=jule::Ptr<_1a602ba57_referencer>(nullptr), ._field_refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1aa2d51c4_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1aa307889_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=true, ._field_ownerAlias=jule::Ptr<_1a6019858_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1a6035225_checkDecl(_8697_tc.ptr(), _86832_t);;
}



inline jule::Ptr<_1aa44e9c0_eval> _1aa3cb001_evalpd(jule::Ptr<_1aa3bb530_sema> _self_, jule::Trait _88027_l, jule::Ptr<_1a601a64a_TypeKind> _88042_p, jule::Ptr<_1aa3e4d3e_Var> _88060_owner) {
	jule::Ptr<_1aa44e9c0_eval> _8817_e = jule::new_ptr<_1aa44e9c0_eval>(_1aa44e9c0_eval{._field_s=_self_, ._field_lookup=_88027_l, ._field_prefix=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_unsafety=false, ._field_immutable=false, ._field_ignored=false, ._field_disBuiltin=false, ._field_owner=_88060_owner, ._field_field=jule::Ptr<_1aa31d7c3_FieldIns>(nullptr), ._field_arg=false});;
	{
		auto &_match_expr{ _88027_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data0)) {
			_case_begin_1bc5abbe7:;
			{
				(*(_8817_e))._field_unsafety=_1aa38354c_isUnsafe(_88027_l.cast_ptr<_1aa381160_scopeChecker>((jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data0));
			}
		}
		_match_end_1bc5ab9a5:;
	};
	(*_8817_e.alloc)._field_prefix=_88042_p;
	return _8817_e;;
}



inline jule::Ptr<_1aa44e9c0_eval> _1aa3cb3ec_evalp(jule::Ptr<_1aa3bb530_sema> _self_, jule::Trait _89526_l, jule::Ptr<_1a601a64a_TypeKind> _89541_p) {
	return _1aa3cb001_evalpd(_self_, _89526_l, _89541_p, nullptr);;
}



inline jule::Ptr<_1aa44e9c0_eval> _1aa3cb73d_eval(jule::Ptr<_1aa3bb530_sema> _self_, jule::Trait _90025_l) {
	return _1aa3cb3ec_evalp(_self_, _90025_l, nullptr);;
}



inline jule::Bool _1aa3cbc9e_checkAssignType(jule::Ptr<_1aa3bb530_sema> _self_, jule::Bool _90432_destIsRef, jule::Ptr<_1a601a64a_TypeKind>* _90454_dest, jule::Ptr<_1aa44cc98_Data>* _9058_d, jule::Ptr<_1aa2d51c4_Token> _90522_errorToken) {
	if ((*((*(_9058_d))))._field_Decl) {
		_1aa3be434_pushErr(_self_.ptr(), _90522_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return false;;
	};
	if (_90432_destIsRef) {
		if ((!(_1a601ad87_Equal((*(_90454_dest)), (*((*(_9058_d))))._field_Kind)))) {
			_1aa3be434_pushErr(_self_, _90522_errorToken, jule::Str::lit("mismatched types: @ and @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_90454_dest)).ptr()), &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str((*((*(_9058_d))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
			return false;;
		};
	} else {
		jule::Ptr<_1aa4363ad_assignTypeChecker> _9168_atc = jule::new_ptr<_1aa4363ad_assignTypeChecker>(_1aa4363ad_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_90454_dest)), ._field_d=(*(_9058_d)), ._field_errorToken=_90522_errorToken});;
		jule::Bool _9224_ok = _1aa4373ae_check(_9168_atc.ptr());;
		if ((!(_9224_ok))) {
			return false;;
		};
	};
	if (((!(_1aa44d6d3_IsConst((*(_9058_d)).ptr()))) || (_1a601cd01_Prim((*(_90454_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _9327_kind = (*(_1a601cd01_Prim((*(_90454_dest)).ptr())))._field_Kind;;
	{
		
		if (_1a6e763c9_IsSigInt(_9327_kind)) {
			_case_begin_1bc5b454b:;
			{
				_1a6e7a532_SetI64((*((*(_9058_d))))._field_Constant.ptr(), _1a6e79c5c_AsI64((*((*(_9058_d))))._field_Constant));
			}
		}
		else if (_1a6e766d7_IsUnsigInt(_9327_kind)) {
			_case_begin_1bc5b45e5:;
			{
				_1a6e7a7da_SetU64((*((*(_9058_d))))._field_Constant.ptr(), _1a6e79ee3_AsU64((*((*(_9058_d))))._field_Constant));
			}
		}
		else if (_1a6e76ce2_IsFloat(_9327_kind)) {
			_case_begin_1bc5b465b:;
			{
				_1a6e7b104_SetF64((*((*(_9058_d))))._field_Constant.ptr(), _1a6e7a279_AsF64((*((*(_9058_d))))._field_Constant));
			}
		}
		_match_end_1bc5b4480:;
	};
	return true;;
}



inline jule::Bool _1aa3cc255__checkTypeCompatibility(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1a601a64a_TypeKind>* _94645_dest, jule::Ptr<_1a601a64a_TypeKind>* _94667_src, jule::Ptr<_1aa2d51c4_Token> _9477_errorToken) {
	if (((*(_94667_src)) == nullptr)) {
		return false;;
	};
	if ((_1a601eb27_Tup((*(_94667_src)).ptr()) != nullptr)) {
		return false;;
	};
	_1aa43460e_typeCompatibilityChecker _9557_tcc = _1aa43460e_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_94645_dest)), ._field_src=(*(_94667_src)), ._field_errorToken=_9477_errorToken};;
	return _1aa435d08_check(&_9557_tcc);;
}



inline jule::Bool _1aa3cc70b_checkTypeCompatibility(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1a601a64a_TypeKind>* _96444_dest, jule::Ptr<_1a601a64a_TypeKind>* _9658_src, jule::Ptr<_1aa2d51c4_Token>* _96529_errorToken) {
	if (_1aa3cc255__checkTypeCompatibility(_self_, _96444_dest, _9658_src, (*(_96529_errorToken)))) {
		return true;;
	};
	_1aa3be434_pushErr(_self_, (*(_96529_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_96444_dest)).ptr()), &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str((*(_9658_src)).ptr()), &__jule_any_type4); __jule_collection; }));
	return false;;
}



inline void _1aa3ccb29_pushCompatiblityError(_1aa3bb530_sema* _self_, jule::Ptr<_1a601a64a_TypeKind>* _97342_dest, jule::Ptr<_1aa44cc98_Data>* _97364_src, jule::Ptr<_1aa2d51c4_Token>* _9748_errorToken) {
	if ((*((*(_97364_src))))._field_untyped) {
		{
			
			if (_1a6e7b588_IsI64((*((*(_97364_src))))._field_Constant.ptr())) {
				_case_begin_1bc5bbac5:;
				{
					_1aa3be434_pushErr(_self_, (*(_9748_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_97342_dest)).ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("untyped integer", 15), &__jule_any_type4); __jule_collection; }));
					return;;
				}
			}
			else if (_1a6e7b81e_IsU64((*((*(_97364_src))))._field_Constant.ptr())) {
				_case_begin_1bc5bbb6e:;
				{
					_1aa3be434_pushErr(_self_, (*(_9748_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_97342_dest)).ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("untyped unsigned integer", 24), &__jule_any_type4); __jule_collection; }));
					return;;
				}
			}
			else if (_1a6e7c0c2_IsF64((*((*(_97364_src))))._field_Constant.ptr())) {
				_case_begin_1bc5bbbd5:;
				{
					_1aa3be434_pushErr(_self_, (*(_9748_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_97342_dest)).ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("untyped float", 13), &__jule_any_type4); __jule_collection; }));
					return;;
				}
			}
			_match_end_1bc5bb9a4:;
		};
	};
	_1aa3be434_pushErr(_self_, (*(_9748_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_97342_dest)).ptr()), &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str((*((*(_97364_src))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
}



inline jule::Bool _1aa3cd0d0_checkTypeCompatibility1(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1a601a64a_TypeKind>* _99145_dest, jule::Ptr<_1aa44cc98_Data>* _99167_src, jule::Ptr<_1aa2d51c4_Token>* _9928_errorToken) {
	if (_1aa3cc255__checkTypeCompatibility(_self_, _99145_dest, &((*((*(_99167_src))))._field_Kind), (*(_9928_errorToken)))) {
		return true;;
	};
	_1aa3ccb29_pushCompatiblityError(_self_, _99145_dest, _99167_src, _9928_errorToken);
	return false;;
}



inline jule::Ptr<_1a601a64a_TypeKind> _1aa3cd586_buildNonGenericTypeKind(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa2ea67e_TypeDecl>* _100645_ast, jule::Slice<jule::Ptr<_1aa307889_GenericDecl>>* _10078_generics, jule::Slice<jule::Ptr<_1a601a64a_TypeKind>>* _100744_ignored) {
	jule::Ptr<_1a602ca47_typeChecker> _10087_tc = jule::new_ptr<_1a602ca47_typeChecker>(_1a602ca47_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data3), ._field_referencer=jule::Ptr<_1a602ba57_referencer>(nullptr), ._field_refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1aa2d51c4_Token>(nullptr), ._field_ignoreGenerics=(*(_10078_generics)), ._field_ignoredGenerics=_100744_ignored, ._field_useGenerics=jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1a6019858_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1a6035225_checkDecl(_10087_tc.ptr(), _100645_ast);;
}



inline jule::Bool _1aa3cd982_buildFnNonGenericTypeKinds(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa334597_FnIns> _101847_f, jule::Slice<jule::Ptr<_1a601a64a_TypeKind>>* _101863_ignored) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1aa307889_GenericDecl>> _101911_generics = nullptr;;
	if (_1aa331d03_IsMethod((*(_101847_f))._field_Decl.ptr())) {
		_101911_generics=jule::append((*(*(_101847_f))._field_Decl.alloc)._field_Generics,(*((*(*(_101847_f))._field_Decl.alloc)._field_Owner))._field_Generics);
	} else {
		_101911_generics=(*((*(_101847_f))._field_Decl))._field_Generics;
	};
	__jule_func_result = _1aa3ceb2b_basicFnEnvironment(_self_, &(_101847_f), jule::__new_closure<jule::Bool,jule::Ptr<_1aa3bb530_sema>*>((void*)__jule_anon_1bc5c6aad, jule::Ptr<__jule_anon_1bc5c6aad_ctx>::make(__jule_anon_1bc5c6aad_ctx{._101847_f=_101847_f,._101911_generics=_101911_generics,._101863_ignored=_101863_ignored}).as<jule::Uintptr>(), __jule_anon_1bc5c6aad_ctx_handler));
	return __jule_func_result;;
}



inline jule::Ptr<_1aa334597_FnIns> _1aa3cdcc3_getTraitCheckFnKind(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa3315b6_Fn>* _104141_f) {
	if (((*((*(_104141_f))))._field_Instances.len() == 1LL)) {
		return (*((*(_104141_f))))._field_Instances[0LL];;
	};
	jule::Ptr<_1aa334597_FnIns> _10457_ins = _1aa332ac3_instanceForce((*(_104141_f)));;
	jule::Ptr<_1a602ca47_typeChecker> _10477_tc = jule::new_ptr<_1a602ca47_typeChecker>(_1a602ca47_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data3), ._field_referencer=jule::Ptr<_1a602ba57_referencer>(nullptr), ._field_refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1aa2d51c4_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1aa307889_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1a6019858_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>(nullptr), ._field_inscatch=false});;
	{
		auto expr = &((*(_10457_ins))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc5cce7c:;
		if (it != expr_end) {
			jule::Ptr<_1aa33351e_ParamIns> _105215_p = *it;
			{
				if ((!(_1aa330241_IsSelf((*(_105215_p))._field_Decl.ptr())))) {
					(*_105215_p.alloc)._field_Kind=_1a6035225_checkDecl(_10477_tc.ptr(), &((*((*(*(_105215_p))._field_Decl.alloc)._field_Kind))._field_Decl));
					if (((*_105215_p.alloc)._field_Kind == nullptr)) {
						return nullptr;;
					};
				};
			}
			_iter_next_1bc5cce7c:;
			++it;
			goto _iter_begin_1bc5cce7c;
		}
		_iter_end_1bc5cce7c:;
	};
	if ((!(_1aa331a6c_IsVoid((*(_104141_f)).ptr())))) {
		(*_10457_ins.alloc)._field_Result=_1a6035225_checkDecl(_10477_tc, &((*((*((*((*(_104141_f))))._field_Result))._field_Kind))._field_Decl));
		if (((*_10457_ins.alloc)._field_Result == nullptr)) {
			return nullptr;;
		};
	};
	return _10457_ins;;
}



inline jule::Bool _1aa3ce279_checkConstraintsFn(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa334597_FnIns>* _107040_f, jule::Ptr<_1aa2d51c4_Token>* _107056_et, jule::Ptr<_1aa334597_FnIns> _107072_exist) {
	jule::Ptr<_1aa3713e7_constraintChecker> _10717_cc = _1aa3c9a16_constraintChecker(_self_);;
	(*(_10717_cc))._field_et=(*(_107056_et));
	(*_10717_cc.alloc)._field_fi=(*(_107040_f));
	if ((_107072_exist != nullptr)) {
		{
			auto expr = &((*_107072_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc5d3070:;
			if (it != expr_end) {
				jule::I32 _10759_i = it - expr->begin();
				jule::Ptr<_1a6018c64_InsGeneric> _107516_g = *it;
				{
					(*((*((*(_107040_f))))._field_Generics[_10759_i]))._field_Constraint=(*(_107516_g))._field_Constraint;
				}
				_iter_next_1bc5d3070:;
				++it;
				_10759_i++;
				goto _iter_begin_1bc5d3070;
			}
			_iter_end_1bc5d3070:;
		};
	} else {
		(*_10717_cc.alloc)._field_uniq=true;
	};
	return _1aa372360_check(_10717_cc);;
}



inline jule::Bool _1aa3ce730_checkConstraintsStruct(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa31e373_StructIns>* _108444_s, jule::Ptr<_1aa2d51c4_Token>* _108464_et, jule::Ptr<_1aa31e373_StructIns> _108480_exist) {
	jule::Ptr<_1aa3713e7_constraintChecker> _10857_cc = _1aa3c9a16_constraintChecker(_self_);;
	(*(_10857_cc))._field_et=(*(_108464_et));
	(*_10857_cc.alloc)._field_si=(*(_108444_s));
	if ((_108480_exist != nullptr)) {
		{
			auto expr = &((*_108480_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc5d620a:;
			if (it != expr_end) {
				jule::I32 _10899_i = it - expr->begin();
				jule::Ptr<_1a6018c64_InsGeneric> _108916_g = *it;
				{
					(*((*((*(_108444_s))))._field_Generics[_10899_i]))._field_Constraint=(*(_108916_g))._field_Constraint;
				}
				_iter_next_1bc5d620a:;
				++it;
				_10899_i++;
				goto _iter_begin_1bc5d620a;
			}
			_iter_end_1bc5d620a:;
		};
	} else {
		(*_10857_cc.alloc)._field_uniq=true;
	};
	return _1aa372360_check(_10857_cc);;
}



inline jule::Bool _1aa3ceb2b_basicFnEnvironment(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa334597_FnIns>* _110140_f, jule::Fn<jule::Bool,jule::Ptr<_1aa3bb530_sema>*> _110151_algo) {
	jule::Ptr<_1aa3bb530_sema> _11027_sema = (*((*((*(_110140_f))))._field_Decl))._field_sema;;
	jule::Ptr<_1aa4475cd_SymbolTable> _11037_old = _1aa3bdc5d_getCurrentFile(_11027_sema.ptr());;
	jule::Ptr<_1aa4475cd_SymbolTable> _11047_file = _1aa3ba199_findFile(&((*_11027_sema.alloc)._field_files), &((*((*(*((*(_110140_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_11047_file != nullptr)) {
		_1aa3be016_setCurrentFile(_11027_sema, _11047_file);
	};
	jule::Bool _11093_ok = _110151_algo(&(_11027_sema));;
	if ((_11027_sema != _self_)) {
		(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,(*_11027_sema.alloc)._field_errors);
		(*_11027_sema.alloc)._field_errors=nullptr;
	};
	_1aa3be016_setCurrentFile(_11027_sema, _11037_old);
	return _11093_ok;;
}



inline jule::Bool _1aa3d0027_fnEnvironment(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa334597_FnIns>* _112135_f, jule::Fn<jule::Bool,jule::Ptr<_1aa3bb530_sema>*,jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>*> _112146_algo) {
	jule::I32 _11227_size = (*((*(_112135_f))))._field_Generics.len();;
	if ((((*((*(_112135_f))))._field_Decl != nullptr) && ((*(*((*(_112135_f))))._field_Decl.alloc)._field_Owner != nullptr))) {
		_11227_size+=(*(*((*((*(_112135_f))))._field_Decl))._field_Owner.alloc)._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1a6019858_TypeAlias>> _11267_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>::alloc(0LL, _11227_size); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a6019858_TypeAlias>(nullptr); __jule_collection; });;
	_1aa3b9d25_appendGenericTypeAliases(&(_11267_generics), _112135_f);
	return _1aa3ceb2b_basicFnEnvironment(_self_, _112135_f, jule::__new_closure<jule::Bool,jule::Ptr<_1aa3bb530_sema>*>((void*)__jule_anon_1bc5de92d, jule::Ptr<__jule_anon_1bc5de92d_ctx>::make(__jule_anon_1bc5de92d_ctx{._112146_algo=_112146_algo,._11267_generics=_11267_generics}).as<jule::Uintptr>(), __jule_anon_1bc5de92d_ctx_handler));;
}



inline void _1aa3d02d0_checkFnParamKind(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa33351e_ParamIns>* _113338_p) {
	(*((*((*(_113338_p))))._field_Kind))._field_Variadic=(*((*((*(_113338_p))))._field_Decl))._field_Variadic;
	if (((*(*((*(_113338_p))))._field_Decl.alloc)._field_Reference && (!(_1a603714a_isValidForRef(&((*((*(_113338_p))))._field_Kind)))))) {
		_1aa3be434_pushErr(_self_.ptr(), (*(*((*(_113338_p))))._field_Decl.alloc)._field_Token, jule::Str::lit("references cannot points to type @", 34), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*((*(_113338_p))))._field_Kind), &__jule_any_type4); __jule_collection; }));
	};
}



inline jule::Bool _1aa3d0621_reloadFnInsTypes(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa334597_FnIns> _114037_f) {
	if ((_1aa335a60_IsBuiltin(_114037_f.ptr()) || _1aa335ce6_IsAnon(_114037_f))) {
		return true;;
	};
	return _1aa3d0027_fnEnvironment(_self_, &(_114037_f), jule::__new_closure<jule::Bool,jule::Ptr<_1aa3bb530_sema>*,jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>*>((void*)__jule_anon_1bc5e40a3, jule::Ptr<__jule_anon_1bc5e40a3_ctx>::make(__jule_anon_1bc5e40a3_ctx{._114037_f=_114037_f,._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bc5e40a3_ctx_handler));;
}



inline jule::Bool _1aa3d0ac7_checkRefValidityForInitExpr(jule::Ptr<_1aa3bb530_sema> _self_, jule::Bool _117644_leftMut, jule::Ptr<_1aa44cc98_Data>* _117664_d, jule::Ptr<_1aa2d51c4_Token>* _117679_errorToken) {
	if ((!(_1aa3b8ae3_isValidModelForRef(&((*((*(_117664_d))))._field_Model))))) {
		_1aa3be434_pushErr(_self_.ptr(), (*(_117679_errorToken)), jule::Str::lit("references requires variable based expression for assignment", 60), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_117644_leftMut && (!((*((*(_117664_d))))._field_Mutable)))) {
		_1aa3be434_pushErr(_self_, (*(_117679_errorToken)), jule::Str::lit("mutable reference cannot point to immutable data", 48), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1aa3d0e18_isMutRiskyStruct(_1aa3bb530_sema* _self_, jule::Ptr<_1aa31e373_StructIns>* _119329_s) {
	{
		auto expr = &((*((*(_119329_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc5ed9b4:;
		if (it != expr_end) {
			jule::Ptr<_1aa31d7c3_FieldIns> *_119410_f = it;
			{
				if ((((*((*((*(_119410_f))))._field_Decl))._field_Mutable && _1a601c031_Mutable((*(*(_119410_f)).alloc)._field_Kind.ptr())) && _1aa3beb93_isAccessibleDefine(_self_, (*(*((*(_119410_f))))._field_Decl.alloc)._field_Public, (*(*((*(_119410_f))))._field_Decl.alloc)._field_Token))) {
					return true;;
				};
			}
			_iter_next_1bc5ed9b4:;
			++it;
			goto _iter_begin_1bc5ed9b4;
		}
		_iter_end_1bc5ed9b4:;
	};
	return false;;
}



inline jule::Bool _1aa3d1534_checkValidityForInitExpr(jule::Ptr<_1aa3bb530_sema> _self_, jule::Bool _122041_leftMut, jule::Bool _122056_leftRef, jule::Ptr<_1a601a64a_TypeKind>* _12214_leftKind, jule::Ptr<_1aa44cc98_Data>* _122130_d, jule::Ptr<_1aa2d51c4_Token>* _122145_errorToken) {
	if ((_122041_leftMut && (!((*((*(_122130_d))))._field_Mutable)))) {
		if (_1a601c031_Mutable((*((*(_122130_d))))._field_Kind.ptr())) {
			_1aa3be434_pushErr(_self_.ptr(), (*(_122145_errorToken)), jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*((*(_122130_d))))._field_Kind), &__jule_any_type4); __jule_collection; }));
			return false;;
		};
		jule::Ptr<_1aa31e373_StructIns> _12294_s = _1a601e374_Struct((*((*(_122130_d))))._field_Kind);;
		if (((_12294_s != nullptr) && _1aa3d0e18_isMutRiskyStruct(_self_, &(_12294_s)))) {
			_1aa3be434_pushErr(_self_, (*(_122145_errorToken)), jule::Str::lit("struct @ cannot copied due to field which is stores mutable data", 64), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*((*(_122130_d))))._field_Kind), &__jule_any_type4); __jule_collection; }));
			return false;;
		};
	};
	if (_122056_leftRef) {
		if ((!(_1aa3d0ac7_checkRefValidityForInitExpr(_self_, _122041_leftMut, _122130_d, _122145_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1aa4363ad_assignTypeChecker> _12407_atc = jule::new_ptr<_1aa4363ad_assignTypeChecker>(_1aa4363ad_assignTypeChecker{._field_s=_self_, ._field_dest=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_d=(*(_122130_d)), ._field_errorToken=(*(_122145_errorToken))});;
	return _1aa436b0b_checkValidity(_12407_atc.ptr());;
}



inline jule::Bool _1aa3d1930_checkTypeAliasDeclKind(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1a6019858_TypeAlias>* _124844_ta, jule::Trait _124864_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aa4475cd_SymbolTable> _12497_old = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1aa3be016_setCurrentFile(_self_, _12497_old);
	});;
	if (((*((*(_124844_ta))))._field_Token != nullptr)) {
		jule::Ptr<_1aa4475cd_SymbolTable> _12548_file = _1aa3ba199_findFile(&((*_self_.alloc)._field_files), &((*(*((*(_124844_ta))))._field_Token.alloc)._field_File));;
		if ((_12548_file != nullptr)) {
			_1aa3be016_setCurrentFile(_self_, _12548_file);
		};
	};
	__jule_func_result=_1aa3c9780_checkTypeWithRefers(_self_, &((*((*(_124844_ta))))._field_Kind), _124864_l, nullptr, jule::new_ptr<_1a602ba57_referencer>(_1a602ba57_referencer{._field_ident=(*((*(_124844_ta))))._field_Ident, ._field_owner=jule::Any((*(_124844_ta)), &__jule_any_type27), ._field_refs=(&((*((*(_124844_ta))))._field_Refers))}));
	if (((__jule_func_result && (_1a601dac1_Arr((*((*((*(_124844_ta))))._field_Kind))._field_Kind.ptr()) != nullptr)) && (*(_1a601dac1_Arr((*((*((*(_124844_ta))))._field_Kind))._field_Kind)))._field_Auto)) {
		_1aa3be434_pushErr(_self_, (*((*(*((*(_124844_ta))))._field_Kind.alloc)._field_Decl))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1aa3d1c93_checkTypeAliasDecl(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1a6019858_TypeAlias>* _127140_ta, jule::Trait _127160_l) {
	if (_1aa2d7aab_IsIgnoreIdent((*((*(_127140_ta))))._field_Ident)) {
		_1aa3be434_pushErr(_self_.ptr(), (*((*(_127140_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_1aa3d1930_checkTypeAliasDeclKind(_self_, _127140_ta, _127160_l);
}



inline void _1aa3d204b_checkTypeAliasDeclDup(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1a6019858_TypeAlias>* _127943_ta) {
	if (_1aa2d7aab_IsIgnoreIdent((*((*(_127943_ta))))._field_Ident)) {
		_1aa3be434_pushErr(_self_.ptr(), (*((*(_127943_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1aa3c0149_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_127943_ta))), &((*((*(_127943_ta))))._field_Ident), (*((*(_127943_ta))))._field_Binded)) {
		_1aa3be434_pushErr(_self_, (*((*(_127943_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_127943_ta))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1aa3be797_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1aa3d1930_checkTypeAliasDeclKind(_self_, _127943_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data3));
}



inline jule::Bool _1aa3d22d2_checkTypeAliasDecls(jule::Ptr<_1aa3bb530_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb9a94ad:;
		if (it != expr_end) {
			jule::Ptr<_1a6019858_TypeAlias> _129215_ta = *it;
			{
				_1aa3d204b_checkTypeAliasDeclDup(_self_, &(_129215_ta));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bb9a94ad:;
			++it;
			goto _iter_begin_1bb9a94ad;
		}
		_iter_end_1bb9a94ad:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1bb9d60cd_checkEnumItemsDup(_1aa3bb530_sema* _self_, jule::Slice<jule::Ptr<_1aa346bd6_EnumItem>> _130336_items) {
	{
		auto expr = &(_130336_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb9d74b9:;
		if (it != expr_end) {
			jule::Ptr<_1aa346bd6_EnumItem> *_130410_item = it;
			{
				if (((*((*(_130410_item))))._field_Ident).empty()) {
					goto _iter_next_1bb9d74b9;
				} else if (_1aa2d7aab_IsIgnoreIdent((*((*(_130410_item))))._field_Ident)) {
					_1aa3be434_pushErr(_self_, (*(*(_130410_item)).alloc)._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_130336_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bb9d8ee3:;
						if (it != expr_end) {
							jule::Ptr<_1aa346bd6_EnumItem> *_131012_citem = it;
							{
								if (((*(_130410_item)) == (*(_131012_citem)))) {
									goto _iter_end_1bb9d8ee3;
								} else if (((*((*(_130410_item))))._field_Ident == (*((*(_131012_citem))))._field_Ident)) {
									_1aa3be434_pushErr(_self_, (*(*(_130410_item)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_130410_item)).alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
									_1aa3be797_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1bb9d8ee3;
								};
							}
							_iter_next_1bb9d8ee3:;
							++it;
							goto _iter_begin_1bb9d8ee3;
						}
						_iter_end_1bb9d8ee3:;
					};
				};
			}
			_iter_next_1bb9d74b9:;
			++it;
			goto _iter_begin_1bb9d74b9;
		}
		_iter_end_1bb9d74b9:;
	};
}

inline void _1bb9e33d7_checkEnumItemsDup(_1aa3bb530_sema* _self_, jule::Slice<jule::Ptr<_1aa348886_TypeEnumItem>> _130336_items) {
	{
		auto expr = &(_130336_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb9e47a1:;
		if (it != expr_end) {
			jule::Ptr<_1aa348886_TypeEnumItem> *_130410_item = it;
			{
				if (((*((*(_130410_item))))._field_Ident).empty()) {
					goto _iter_next_1bb9e47a1;
				} else if (_1aa2d7aab_IsIgnoreIdent((*((*(_130410_item))))._field_Ident)) {
					_1aa3be434_pushErr(_self_, (*(*(_130410_item)).alloc)._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_130336_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bb9e62ca:;
						if (it != expr_end) {
							jule::Ptr<_1aa348886_TypeEnumItem> *_131012_citem = it;
							{
								if (((*(_130410_item)) == (*(_131012_citem)))) {
									goto _iter_end_1bb9e62ca;
								} else if (((*((*(_130410_item))))._field_Ident == (*((*(_131012_citem))))._field_Ident)) {
									_1aa3be434_pushErr(_self_, (*(*(_130410_item)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_130410_item)).alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
									_1aa3be797_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1bb9e62ca;
								};
							}
							_iter_next_1bb9e62ca:;
							++it;
							goto _iter_begin_1bb9e62ca;
						}
						_iter_end_1bb9e62ca:;
					};
				};
			}
			_iter_next_1bb9e47a1:;
			++it;
			goto _iter_begin_1bb9e47a1;
		}
		_iter_end_1bb9e47a1:;
	};
}



inline void _1aa3d2843_checkEnumItemsStr(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa347753_Enum>* _132339_e) {
	jule::Ptr<_1aa44e9c0_eval> _13247_eval = _1aa3cb73d_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data3));;
	{
		auto expr = &((*((*(_132339_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb9ab229:;
		if (it != expr_end) {
			jule::Ptr<_1aa346bd6_EnumItem> _132515_item = *it;
			{
				if (_1aa3470c1_AutoExpr(_132515_item.ptr())) {
					(*_132515_item.alloc)._field_Value=jule::new_ptr<_1aa44de20_Value>(_1aa44de20_Value{._field_Expr=jule::Ptr<_1aa2ee9b3_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1a6e78354_NewStr((*_132515_item.alloc)._field_Ident)})});
					(*((*((*_132515_item.alloc)._field_Value))._field_Data))._field_Model=jule::Any((*(*((*(_132515_item))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
				} else {
					jule::Ptr<_1aa44cc98_Data> _13349_d = _1aa46cc63_evalExpr(_13247_eval, (*((*(_132515_item))._field_Value))._field_Expr);;
					if ((_13349_d == nullptr)) {
						goto _iter_next_1bb9ab229;
					};
					if ((!(_1aa44d6d3_IsConst(_13349_d.ptr())))) {
						_1aa3be434_pushErr(_self_, (*((*(*(_132515_item))._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
					};
					_1aa3cbc9e_checkAssignType(_self_, false, &((*((*((*(_132339_e))))._field_Kind))._field_Kind), &(_13349_d), (*_132515_item.alloc)._field_Token);
					(*(*(_132515_item))._field_Value.alloc)._field_Data=_13349_d;
				};
			}
			_iter_next_1bb9ab229:;
			++it;
			goto _iter_begin_1bb9ab229;
		}
		_iter_end_1bb9ab229:;
	};
}



inline void _1bb9b6a09_checkEnumItemInt(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa44e9c0_eval>* _134943_eval, jule::Ptr<_1aa347753_Enum>* _134961_e, jule::Ptr<_1a6023763_Prim>* _134972_prim, jule::Ptr<_1aa346bd6_EnumItem>* _134990_item, jule::U64* _1349112_n) {
	if (_1aa3470c1_AutoExpr((*(_134990_item)).ptr())) {
		(*((*(_134990_item))))._field_Value=jule::new_ptr<_1aa44de20_Value>(_1aa44de20_Value{._field_Expr=jule::Ptr<_1aa2ee9b3_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)})});
		{
			
{
				_case_begin_1bb9b8e3a:;
				{
					(*((*((*((*(_134990_item))))._field_Value))._field_Data))._field_Constant=static__1a6e77cc1_NewU64((*(_1349112_n)));
				}
			}
			_match_end_1bb9b929d:;
		};
		(*((*((*((*(_134990_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*((*((*(_134990_item))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	} else {
		jule::Ptr<_1aa44cc98_Data> _13648_d = _1aa46cc63_evalExpr((*(_134943_eval)), (*((*((*(_134990_item))))._field_Value))._field_Expr);;
		if ((_13648_d == nullptr)) {
			return;;
		};
		if ((!(_1aa44d6d3_IsConst(_13648_d.ptr())))) {
			_1aa3be434_pushErr(_self_.ptr(), (*((*(*((*(_134990_item))))._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1aa3cbc9e_checkAssignType(_self_, false, &((*((*((*(_134961_e))))._field_Kind))._field_Kind), &(_13648_d), (*((*(_134990_item))))._field_Token);
		(*(*((*(_134990_item))))._field_Value.alloc)._field_Data=_13648_d;
		{
			
{
				_case_begin_1bb9bc0e7:;
				{
					(*(_1349112_n))=_1a6e79223_ReadU64((*((*(*((*(_134990_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1bb9be5c2:;
		};
	};
}

inline void _1bb9c6aa2_checkEnumItemInt(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa44e9c0_eval>* _134943_eval, jule::Ptr<_1aa347753_Enum>* _134961_e, jule::Ptr<_1a6023763_Prim>* _134972_prim, jule::Ptr<_1aa346bd6_EnumItem>* _134990_item, jule::I64* _1349112_n) {
	if (_1aa3470c1_AutoExpr((*(_134990_item)).ptr())) {
		(*((*(_134990_item))))._field_Value=jule::new_ptr<_1aa44de20_Value>(_1aa44de20_Value{._field_Expr=jule::Ptr<_1aa2ee9b3_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)})});
		{
			
{
				_case_begin_1bb9c981e:;
				{
					(*((*((*((*(_134990_item))))._field_Value))._field_Data))._field_Constant=static__1a6e77a07_NewI64((*(_1349112_n)));
				}
			}
			_match_end_1bb9c92ad:;
		};
		(*((*((*((*(_134990_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*((*((*(_134990_item))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	} else {
		jule::Ptr<_1aa44cc98_Data> _13648_d = _1aa46cc63_evalExpr((*(_134943_eval)), (*((*((*(_134990_item))))._field_Value))._field_Expr);;
		if ((_13648_d == nullptr)) {
			return;;
		};
		if ((!(_1aa44d6d3_IsConst(_13648_d.ptr())))) {
			_1aa3be434_pushErr(_self_.ptr(), (*((*(*((*(_134990_item))))._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1aa3cbc9e_checkAssignType(_self_, false, &((*((*((*(_134961_e))))._field_Kind))._field_Kind), &(_13648_d), (*((*(_134990_item))))._field_Token);
		(*(*((*(_134990_item))))._field_Value.alloc)._field_Data=_13648_d;
		{
			
{
				_case_begin_1bb9ce7d0:;
				{
					(*(_1349112_n))=_1a6e78e8c_ReadI64((*((*(*((*(_134990_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1bb9ce769:;
		};
	};
}



inline void _1bb9b2b7b_checkEnumItemsInt1(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1a6023763_Prim>* _138441_prim, jule::Ptr<_1aa347753_Enum>* _138459_e) {
	jule::U64 _13857_max = static_cast<jule::U64>(0LLU);;
	{
		
{
			_case_begin_1bb9b48b4:;
			{
				_13857_max=_1a6e72ccc_MaxU(_1a6023ad7_Str((*(_138441_prim)).ptr()));
			}
		}
		_match_end_1bb9b46d8:;
	};
	jule::Ptr<_1aa44e9c0_eval> _13957_eval = _1aa3cb73d_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data3));;
	jule::U64 _13967_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1aa346bd6_EnumItem> _13977_first = (*((*(_138459_e))))._field_Items[0LL];;
	_1bb9b6a09_checkEnumItemInt(_self_, &(_13957_eval), _138459_e, _138441_prim, &(_13977_first), &(_13967_n));
	if (((*((*(_13977_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1bb9b41dd:;
				{
					_13967_n=_1a6e79ee3_AsU64((*(*((*(_13977_first))._field_Value))._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1bb9b6dc2:;
		};
	};
	{
		auto expr = (*((*(_138459_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1bb9bb525:;
		if (it != expr_end) {
			jule::Ptr<_1aa346bd6_EnumItem> _140915_item = *it;
			{
				if (((_1aa3470c1_AutoExpr(_140915_item.ptr()) && (_13967_n > 0LLU)) && ((jule::U64)(_13857_max - _13967_n) <= 0LLU))) {
					_1aa3be434_pushErr(_self_, (*_140915_item.alloc)._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1bb9bb525;
				};
				(_13967_n)++;
				_1bb9b6a09_checkEnumItemInt(_self_, &(_13957_eval), _138459_e, _138441_prim, &(_140915_item), &(_13967_n));
			}
			_iter_next_1bb9bb525:;
			++it;
			goto _iter_begin_1bb9bb525;
		}
		_iter_end_1bb9bb525:;
	};
}

inline void _1bb9b2e67_checkEnumItemsInt1(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1a6023763_Prim>* _138441_prim, jule::Ptr<_1aa347753_Enum>* _138459_e) {
	jule::I64 _13857_max = static_cast<jule::I64>(0LL);;
	{
		
{
			_case_begin_1bb9c494b:;
			{
				_13857_max=_1a6e72a13_MaxI(_1a6023ad7_Str((*(_138441_prim)).ptr()));
			}
		}
		_match_end_1bb9c45e9:;
	};
	jule::Ptr<_1aa44e9c0_eval> _13957_eval = _1aa3cb73d_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data3));;
	jule::I64 _13967_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1aa346bd6_EnumItem> _13977_first = (*((*(_138459_e))))._field_Items[0LL];;
	_1bb9c6aa2_checkEnumItemInt(_self_, &(_13957_eval), _138459_e, _138441_prim, &(_13977_first), &(_13967_n));
	if (((*((*(_13977_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1bb9c5991:;
				{
					_13967_n=_1a6e79c5c_AsI64((*(*((*(_13977_first))._field_Value))._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1bb9ced63:;
		};
	};
	{
		auto expr = (*((*(_138459_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1bb9d13a3:;
		if (it != expr_end) {
			jule::Ptr<_1aa346bd6_EnumItem> _140915_item = *it;
			{
				if (((_1aa3470c1_AutoExpr(_140915_item.ptr()) && (_13967_n > 0LL)) && ((_13857_max - _13967_n) <= 0LL))) {
					_1aa3be434_pushErr(_self_, (*_140915_item.alloc)._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1bb9d13a3;
				};
				(_13967_n)++;
				_1bb9c6aa2_checkEnumItemInt(_self_, &(_13957_eval), _138459_e, _138441_prim, &(_140915_item), &(_13967_n));
			}
			_iter_next_1bb9d13a3:;
			++it;
			goto _iter_begin_1bb9d13a3;
		}
		_iter_end_1bb9d13a3:;
	};
}



inline void _1aa3d34e2_checkEnumItemsInt(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa347753_Enum>* _141939_e) {
	jule::Ptr<_1a6023763_Prim> _14203_prim = _1a601cd01_Prim((*((*((*(_141939_e))))._field_Kind))._field_Kind.ptr());;
	{
		
		if (_1a6e763c9_IsSigInt((*(_14203_prim))._field_Kind)) {
			_case_begin_1bb9c1a47:;
			{
				_1bb9b2e67_checkEnumItemsInt1(_self_, &(_14203_prim), _141939_e);
			}
		}
		else {
			_case_begin_1bb9b240b:;
			{
				_1bb9b2b7b_checkEnumItemsInt1(_self_, &(_14203_prim), _141939_e);
			}
		}
		_match_end_1bb9b2395:;
	};
}



inline void _1aa3d379a_checkEnumDecl(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa347753_Enum>* _142935_e) {
	if (_1aa2d7aab_IsIgnoreIdent((*((*(_142935_e))))._field_Ident)) {
		_1aa3be434_pushErr(_self_.ptr(), (*((*(_142935_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1aa3c0149_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_142935_e))), &((*((*(_142935_e))))._field_Ident), false)) {
		_1aa3be434_pushErr(_self_, (*((*(_142935_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_142935_e))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1aa3be797_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_142935_e))))._field_Items.len() == 0LL)) {
		_1aa3be434_pushErr(_self_.ptr(), (*((*(_142935_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_142935_e))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return;;
	};
	_1bb9d60cd_checkEnumItemsDup(_self_, (*((*(_142935_e))))._field_Items);
	if (((*((*(_142935_e))))._field_Kind != nullptr)) {
		if ((!(_1aa3c9e12_checkType(_self_, &((*((*(_142935_e))))._field_Kind), jule::Trait(_self_, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data3))))) {
			return;;
		};
	} else {
		(*((*(_142935_e))))._field_Kind=(*(_1aa5e00b1_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	jule::Ptr<_1a6023763_Prim> _14537_t = _1a601cd01_Prim((*((*((*(_142935_e))))._field_Kind))._field_Kind.ptr());;
	if ((_14537_t == nullptr)) {
		_1aa3be434_pushErr(_self_, (*((*(_142935_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1a6026c2d_IsStr(_14537_t.ptr())) {
			_case_begin_1bb9dcc50:;
			{
				_1aa3d2843_checkEnumItemsStr(_self_, _142935_e);
			}
		}
		else if (_1a6e769a1_IsInt(_1a6023ad7_Str(_14537_t.ptr()))) {
			_case_begin_1bb9dc05c:;
			{
				_1aa3d34e2_checkEnumItemsInt(_self_, _142935_e);
			}
		}
		else {
			_case_begin_1bb9dbee6:;
			{
				_1aa3be434_pushErr(_self_, (*((*(_142935_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bb9dca41:;
	};
}



inline void _1aa3d3a53_checkTypeEnumDecl(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa348e5d_TypeEnum>* _147039_e) {
	if (_1aa2d7aab_IsIgnoreIdent((*((*(_147039_e))))._field_Ident)) {
		_1aa3be434_pushErr(_self_.ptr(), (*((*(_147039_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1aa3c0149_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_147039_e))), &((*((*(_147039_e))))._field_Ident), false)) {
		_1aa3be434_pushErr(_self_, (*((*(_147039_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_147039_e))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1aa3be797_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_147039_e))))._field_Items.len() == 0LL)) {
		_1aa3be434_pushErr(_self_.ptr(), (*((*(_147039_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_147039_e))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return;;
	};
	_1bb9e33d7_checkEnumItemsDup(_self_, (*((*(_147039_e))))._field_Items);
	{
		auto expr = &((*((*(_147039_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb9e4350:;
		if (it != expr_end) {
			jule::Ptr<_1aa348886_TypeEnumItem> _148415_item = *it;
			{
				if (((*(_148415_item))._field_Kind == nullptr)) {
					_1aa3be434_pushErr(_self_, (*_148415_item.alloc)._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					goto _iter_next_1bb9e4350;
				};
				jule::Bool _14894_ok = _1aa3c9e12_checkType(_self_, &((*_148415_item.alloc)._field_Kind), jule::Trait(_self_, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data3));;
				if ((!(_14894_ok))) {
					goto _iter_next_1bb9e4350;
				};
				jule::Ptr<_1a6023763_Prim> _14934_p = _1a601cd01_Prim((*((*_148415_item.alloc)._field_Kind))._field_Kind.ptr());;
				if (((_14934_p != nullptr) && _1a6026eb4_IsAny(_14934_p))) {
					_1aa3be434_pushErr(_self_, (*_148415_item.alloc)._field_Token, jule::Str::lit("the <any> type is not allowed for type-enum declarations", 56), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1bb9e4350:;
			++it;
			goto _iter_begin_1bb9e4350;
		}
		_iter_end_1bb9e4350:;
	};
	if (((*((*(_147039_e))))._field_Items.len() == 1LL)) {
		jule::Ptr<_1aa348886_TypeEnumItem> _14998_item = (*((*(_147039_e))))._field_Items[0LL];;
		_1a601a64a_TypeKind _15004_tk = _1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_147039_e)), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data4)};;
		if ((((*((*(_14998_item))._field_Kind))._field_Kind != nullptr) && _1a601ad87_Equal((*((*(_14998_item))._field_Kind))._field_Kind, ((jule::Ptr<_1a601a64a_TypeKind>)((&(_15004_tk))))))) {
			_1aa3be434_pushErr(_self_, (*_14998_item.alloc)._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aa3492d2_Str((*(_147039_e)).ptr()), &__jule_any_type4); __jule_collection; }));
		};
	};
}



inline jule::Bool _1aa3d3cd9_checkEnumDecls(jule::Ptr<_1aa3bb530_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb9ee679:;
		if (it != expr_end) {
			jule::Ptr<_1aa347753_Enum> _151115_e = *it;
			{
				_1aa3d379a_checkEnumDecl(_self_, &(_151115_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bb9ee679:;
			++it;
			goto _iter_begin_1bb9ee679;
		}
		_iter_end_1bb9ee679:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1aa3d4070_checkTypeEnumDecls(jule::Ptr<_1aa3bb530_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bba00d2e:;
		if (it != expr_end) {
			jule::Ptr<_1aa348e5d_TypeEnum> _152315_e = *it;
			{
				_1aa3d3a53_checkTypeEnumDecl(_self_, &(_152315_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bba00d2e:;
			++it;
			goto _iter_begin_1bba00d2e;
		}
		_iter_end_1bba00d2e:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1aa3d43b1_checkDeclGenerics(_1aa3bb530_sema* _self_, jule::Slice<jule::Ptr<_1aa307889_GenericDecl>>* _153334_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _153334_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bba013b2:;
		if (it != expr_end) {
			jule::I32 _15357_i = it - expr->begin();
			jule::Ptr<_1aa307889_GenericDecl> *_153510_g = it;
			{
				if (_1aa2d7aab_IsIgnoreIdent((*((*(_153510_g))))._field_Ident)) {
					_1aa3be434_pushErr(_self_, (*(*(_153510_g)).alloc)._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1bba013b2;
				};
				_julec_label_1bba02d97:;
				{
					auto expr = _153334_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bba03bbc:;
					if (it != expr_end) {
						jule::I32 _15448_j = it - expr->begin();
						jule::Ptr<_1aa307889_GenericDecl> *_154411_ct = it;
						{
							{
								
								if ((_15448_j >= _15357_i)) {
									_case_begin_1bba0475b:;
									{
										goto _iter_end_1bba03bbc;
									}
								}
								else if (((*(*(_153510_g)).alloc)._field_Ident == (*((*(_154411_ct))))._field_Ident)) {
									_case_begin_1bba047e4:;
									{
										_1aa3be434_pushErr(_self_, (*(*(_153510_g)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_153510_g)).alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
										_1aa3be797_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1bba03bbc;
									}
								}
								_match_end_1bba0465c:;
							};
						}
						_iter_next_1bba03bbc:;
						++it;
						_15448_j++;
						goto _iter_begin_1bba03bbc;
					}
					_iter_end_1bba03bbc:;
				};
			}
			_iter_next_1bba013b2:;
			++it;
			_15357_i++;
			goto _iter_begin_1bba013b2;
		}
		_iter_end_1bba013b2:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1aa3d4702_checkFnDeclParamsDup(_1aa3bb530_sema* _self_, jule::Ptr<_1aa3315b6_Fn>* _156037_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_1bba06a16:;
	{
		auto expr = &((*((*(_156037_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bba06d46:;
		if (it != expr_end) {
			jule::I32 _15637_i = it - expr->begin();
			jule::Ptr<_1aa32eae2_Param> *_156310_p = it;
			{
				{
					auto expr = &((*((*(_156037_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bba07a28:;
					if (it != expr_end) {
						jule::Ptr<_1aa307889_GenericDecl> *_156511_g = it;
						{
							if (((*((*(_156310_p))))._field_Ident == (*((*(_156511_g))))._field_Ident)) {
								__jule_func_result=false;
								_1aa3be434_pushErr(_self_, (*(*(_156310_p)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_156310_p)).alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
								_1aa3be797_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								goto _iter_next_1bba06d46;
							};
						}
						_iter_next_1bba07a28:;
						++it;
						goto _iter_begin_1bba07a28;
					}
					_iter_end_1bba07a28:;
				};
				_julec_label_1bba09398:;
				{
					auto expr = &((*((*(_156037_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bba07ebd:;
					if (it != expr_end) {
						jule::I32 _15758_j = it - expr->begin();
						jule::Ptr<_1aa32eae2_Param> *_157511_jp = it;
						{
							{
								
								if ((_15758_j >= _15637_i)) {
									_case_begin_1bba0a333:;
									{
										goto _iter_end_1bba07ebd;
									}
								}
								else if (_1aa2d7aab_IsIgnoreIdent((*(*(_156310_p)).alloc)._field_Ident) || _1aa2d7aab_IsIgnoreIdent((*((*(_157511_jp))))._field_Ident) || _1aa2d7d75_IsAnonIdent((*(*(_156310_p)).alloc)._field_Ident) || _1aa2d7d75_IsAnonIdent((*(*(_157511_jp)).alloc)._field_Ident)) {
									_case_begin_1bba0a3bb:;
									{
										goto _iter_end_1bba07ebd;
									}
								}
								else if (((*(*(_156310_p)).alloc)._field_Ident == (*((*(_157511_jp))))._field_Ident)) {
									_case_begin_1bba0a432:;
									{
										__jule_func_result=false;
										_1aa3be434_pushErr(_self_, (*(*(_156310_p)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_156310_p)).alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
										_1aa3be797_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_next_1bba06d46;
									}
								}
								_match_end_1bba0a1e0:;
							};
						}
						_iter_next_1bba07ebd:;
						++it;
						_15758_j++;
						goto _iter_begin_1bba07ebd;
					}
					_iter_end_1bba07ebd:;
				};
			}
			_iter_next_1bba06d46:;
			++it;
			_15637_i++;
			goto _iter_begin_1bba06d46;
		}
		_iter_end_1bba06d46:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1aa3d4a43_checkFnDeclResultDup(_1aa3bb530_sema* _self_, jule::Ptr<_1aa3315b6_Fn>* _159737_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1aa331a6c_IsVoid((*(_159737_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*(*((*(_159737_f))))._field_Result.alloc)._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bba0de19:;
		if (it != expr_end) {
			jule::I32 _16047_i = it - expr->begin();
			jule::Ptr<_1aa2d51c4_Token> *_160410_v = it;
			{
				if ((_1aa2d7aab_IsIgnoreIdent((*((*(_160410_v))))._field_Kind) || _1aa2d7d75_IsAnonIdent((*(*(_160410_v)).alloc)._field_Kind))) {
					goto _iter_next_1bba0de19;
				};
				{
					auto expr = &((*((*(_159737_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bba104ae:;
					if (it != expr_end) {
						jule::Ptr<_1aa307889_GenericDecl> *_160911_g = it;
						{
							if (((*(*(_160410_v)).alloc)._field_Kind == (*((*(_160911_g))))._field_Ident)) {
								goto _julec_label_1bba1431a;
							};
						}
						_iter_next_1bba104ae:;
						++it;
						goto _iter_begin_1bba104ae;
					}
					_iter_end_1bba104ae:;
				};
				{
					auto expr = &((*((*(_159737_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bba11933:;
					if (it != expr_end) {
						jule::Ptr<_1aa32eae2_Param> *_161511_p = it;
						{
							if (((*(*(_160410_v)).alloc)._field_Kind == (*((*(_161511_p))))._field_Ident)) {
								goto _julec_label_1bba1431a;
							};
						}
						_iter_next_1bba11933:;
						++it;
						goto _iter_begin_1bba11933;
					}
					_iter_end_1bba11933:;
				};
				_julec_label_1bba12181:;
				{
					auto expr = &((*((*((*(_159737_f))))._field_Result))._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bba13171:;
					if (it != expr_end) {
						jule::I32 _16238_j = it - expr->begin();
						jule::Ptr<_1aa2d51c4_Token> *_162311_jv = it;
						{
							{
								
								if ((_16238_j >= _16047_i)) {
									_case_begin_1bba13bdd:;
									{
										goto _iter_end_1bba13171;
									}
								}
								else if (((*((*(_162311_jv))))._field_Kind == (*(*(_160410_v)).alloc)._field_Kind)) {
									_case_begin_1bba13c76:;
									{
										goto _julec_label_1bba1431a;
									}
								}
								_match_end_1bba13ade:;
							};
						}
						_iter_next_1bba13171:;
						++it;
						_16238_j++;
						goto _iter_begin_1bba13171;
					}
					_iter_end_1bba13171:;
				};
				goto _iter_next_1bba0de19;
				_julec_label_1bba1431a:;
				_1aa3be434_pushErr(_self_, (*(_160410_v)), jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_160410_v)).alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
				_1aa3be797_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1bba0de19:;
			++it;
			_16047_i++;
			goto _iter_begin_1bba0de19;
		}
		_iter_end_1bba0de19:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1aa3d4d84_checkFnVariadicParam(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa3315b6_Fn>* _164242_f) {
	if (((*((*(_164242_f))))._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_1aa32eae2_Param> _16467_param = (*((*(_164242_f))))._field_Params[((*((*(_164242_f))))._field_Params.len() - 1LL)];;
	if (((*(_16467_param))._field_Variadic && (*_16467_param.alloc)._field_Reference)) {
		_1aa3be434_pushErr(_self_.ptr(), (*_16467_param.alloc)._field_Token, jule::Str::lit("variadic storage cannot be reference", 36), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _1aa3d513c_checkFnDeclPrototype(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa3315b6_Fn>* _165542_f) {
	if (((*((*(_165542_f))))._field_Exceptional && (*((*(_165542_f))))._field_Binded)) {
		_1aa3be434_pushErr(_self_.ptr(), (*((*(_165542_f))))._field_Token, jule::Str::lit("binded defines cannot be exceptional", 36), jule::Slice<jule::Any>());
		return;;
	};
	if ((*((*(_165542_f))))._field_Exceptional) {
		if (_1aa332089_IsEntryPoint((*(_165542_f)).ptr())) {
			_1aa3be434_pushErr(_self_, (*((*(_165542_f))))._field_Token, jule::Str::lit("entry point cannot be exceptional", 33), jule::Slice<jule::Any>());
		} else if (_1aa332320_IsInit((*(_165542_f)).ptr())) {
			_1aa3be434_pushErr(_self_, (*((*(_165542_f))))._field_Token, jule::Str::lit("initializer function cannot be exceptional", 42), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1aa3d43b1_checkDeclGenerics(_self_, &((*((*(_165542_f))))._field_Generics))))) {
			_case_begin_1bba1b2ab:;
		}
		else if ((!(_1aa3d4702_checkFnDeclParamsDup(_self_, _165542_f)))) {
			_case_begin_1bba1b322:;
		}
		else if ((!(_1aa3d4a43_checkFnDeclResultDup(_self_, _165542_f)))) {
			_case_begin_1bba1b388:;
		}
		else if ((!(_1aa3d4d84_checkFnVariadicParam(_self_, _165542_f)))) {
			_case_begin_1bba1b3ee:;
		}
		_match_end_1bba19881:;
	};
}



inline jule::Bool _1aa3d55e3_catchTraitInheritCycle(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa345047_Trait> _167739_t1, jule::Ptr<_1aa345047_Trait> _167755_t2, _1ed486d49_StrBuilder* _167772_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*_167755_t2.alloc)._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bba1d92e:;
		if (it != expr_end) {
			jule::Ptr<_1a6022d5b_TypeSymbol> _167915_i = *it;
			{
				if (((*(_167915_i))._field_Kind == nullptr)) {
					goto _iter_next_1bba1d92e;
				};
				jule::Ptr<_1aa345047_Trait> _16838_t3 = _1a601e60a_Trait((*_167915_i.alloc)._field_Kind.ptr());;
				if ((_167739_t1 == _16838_t3)) {
					_1aa3da373_pushCycleError(_self_.ptr(), &((*(_167755_t2))._field_Ident), &((*(_16838_t3))._field_Ident), _167772_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1aa3d55e3_catchTraitInheritCycle(_self_, _167739_t1, _16838_t3, _167772_message)))) {
					_1aa3da373_pushCycleError(_self_, &((*_167755_t2.alloc)._field_Ident), &((*_16838_t3.alloc)._field_Ident), _167772_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bba1d92e:;
			++it;
			goto _iter_begin_1bba1d92e;
		}
		_iter_end_1bba1d92e:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1aa3d5934__checkTraitDeclInherits(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa345047_Trait>* _169645_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_169645_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bba221a2:;
		if (it != expr_end) {
			jule::I32 _16988_i = it - expr->begin();
			jule::Ptr<_1a6022d5b_TypeSymbol> _169815_it = *it;
			{
				if ((!(_1aa3c9e12_checkType(_self_, &(_169815_it), jule::Trait(_self_, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data3))))) {
					__jule_func_result=false;
					goto _iter_next_1bba221a2;
				};
				jule::Ptr<_1aa345047_Trait> _17038_t2 = _1a601e60a_Trait((*(_169815_it))._field_Kind.ptr());;
				if ((_17038_t2 == nullptr)) {
					_1aa3be434_pushErr(_self_, (*((*_169815_it.alloc)._field_Decl))._field_Token, jule::Str::lit("trait @ cannot implement @, type should be trait", 48), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_169645_t))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str((*(_169815_it))._field_Kind), &__jule_any_type4); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1bba221a2;
				};
				{
					auto expr = &((*((*(_169645_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bba24083:;
					if (it != expr_end) {
						jule::I32 _17098_j = it - expr->begin();
						jule::Ptr<_1a6022d5b_TypeSymbol> _170911_it2 = *it;
						{
							if ((_17098_j >= _16988_i)) {
								goto _iter_end_1bba24083;
							};
							if ((((*(_170911_it2))._field_Kind != nullptr) && _1a601ad87_Equal((*(_169815_it))._field_Kind, (*_170911_it2.alloc)._field_Kind))) {
								_1aa3be434_pushErr(_self_, (*(*(_169815_it))._field_Decl.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_17038_t2))._field_Ident, &__jule_any_type4); __jule_collection; }));
								__jule_func_result=false;
								goto _iter_end_1bba24083;
							};
						}
						_iter_next_1bba24083:;
						++it;
						_17098_j++;
						goto _iter_begin_1bba24083;
					}
					_iter_end_1bba24083:;
				};
				if (((*(_169645_t)) == _17038_t2)) {
					_1aa3be434_pushErr(_self_, (*(*(_169815_it))._field_Decl.alloc)._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_169645_t))))._field_Ident, &__jule_any_type4); __jule_collection; }));
					__jule_func_result=false;
				} else {
					_1ed486d49_StrBuilder _17239_message = static__1ed487146_New(64LL);;
					__jule_func_result=(__jule_func_result && _1aa3d55e3_catchTraitInheritCycle(_self_, (*(_169645_t)), _17038_t2, &(_17239_message)));
					if ((_1ed491738_Len(&_17239_message) > 0LL)) {
						jule::Str _172610_errMsg = _1ed4912a4_Str(&_17239_message);;
						_1ed4914a2_Clear(&_17239_message);
						_1aa3da373_pushCycleError(_self_, &((*((*(_169645_t))))._field_Ident), &((*(_17038_t2))._field_Ident), &(_17239_message));
						_172610_errMsg+=_1ed4912a4_Str(&_17239_message);
						_1aa3be434_pushErr(_self_, (*(*(_169815_it))._field_Decl.alloc)._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_172610_errMsg, &__jule_any_type4); __jule_collection; }));
					};
				};
			}
			_iter_next_1bba221a2:;
			++it;
			_16988_i++;
			goto _iter_begin_1bba221a2;
		}
		_iter_end_1bba221a2:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1aa3d5bdc_checkTraitDeclInherits(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa345047_Trait>* _173744_t) {
	{
		auto expr = &((*((*(_173744_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bba2c0e1:;
		if (it != expr_end) {
			jule::I32 _17388_i = it - expr->begin();
			jule::Ptr<_1a6022d5b_TypeSymbol> _173815_it = *it;
			{
				jule::Ptr<_1aa345047_Trait> _17398_t1 = _1a601e60a_Trait((*(_173815_it))._field_Kind.ptr());;
				{
					auto expr = &((*((*(_173744_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bba2d620:;
					if (it != expr_end) {
						jule::I32 _17409_j = it - expr->begin();
						jule::Ptr<_1a6022d5b_TypeSymbol> _174016_it2 = *it;
						{
							if ((_17409_j == _17388_i)) {
								goto _iter_next_1bba2d620;
							};
							jule::Ptr<_1aa345047_Trait> _17449_t2 = _1a601e60a_Trait((*(_174016_it2))._field_Kind);;
							{
								auto expr = &((*(_17398_t1))._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bba2ed91:;
								if (it != expr_end) {
									jule::Ptr<_1aa3315b6_Fn> _174517_t1m = *it;
									{
										jule::Ptr<_1aa3315b6_Fn> _174610_t2m = _1aa345c29_FindMethod(_17449_t2.ptr(), (*(_174517_t1m))._field_Ident);;
										if ((_174610_t2m == nullptr)) {
											goto _iter_next_1bba2ed91;
										};
										jule::Ptr<_1aa334597_FnIns> _17506_t1f = _1aa3cdcc3_getTraitCheckFnKind(_self_, &(_174517_t1m));;
										jule::Ptr<_1aa334597_FnIns> _17516_t2f = _1aa3cdcc3_getTraitCheckFnKind(_self_, &(_174610_t2m));;
										if ((!(_1aa335543_equalTrait(_17506_t1f, &(_17516_t2f))))) {
											_1aa3be434_pushErr(_self_, (*((*_173815_it.alloc)._field_Decl))._field_Token, jule::Str::lit("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_173744_t))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_17449_t2.alloc)._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_1aa336478_GetKindStr(_17506_t1f, true), &__jule_any_type4); (*it++) = jule::Any(_1aa336478_GetKindStr(_17516_t2f.ptr(), true), &__jule_any_type4); __jule_collection; }));
											return;;
										};
									}
									_iter_next_1bba2ed91:;
									++it;
									goto _iter_begin_1bba2ed91;
								}
								_iter_end_1bba2ed91:;
							};
						}
						_iter_next_1bba2d620:;
						++it;
						_17409_j++;
						goto _iter_begin_1bba2d620;
					}
					_iter_end_1bba2d620:;
				};
			}
			_iter_next_1bba2c0e1:;
			++it;
			_17388_i++;
			goto _iter_begin_1bba2c0e1;
		}
		_iter_end_1bba2c0e1:;
	};
}



inline void _1aa3d5e95_checkTraitDeclMethod(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa3315b6_Fn>* _176242_f) {
	if (_1aa2d7aab_IsIgnoreIdent((*((*(_176242_f))))._field_Ident)) {
		_1aa3be434_pushErr(_self_.ptr(), (*((*(_176242_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1aa2d7d75_IsAnonIdent((*((*(_176242_f))))._field_Ident)) {
		_1aa3be434_pushErr(_self_.ptr(), (*((*(_176242_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	(*((*(_176242_f))))._field_sema=_self_;
	_1aa3d513c_checkFnDeclPrototype(_self_, _176242_f);
	jule::Ptr<_1aa334597_FnIns> _17707_ins = _1aa332d59_instance((*(_176242_f)));;
	_1aa3d0621_reloadFnInsTypes(_self_, _17707_ins);
	(*(_17707_ins))._field_reloaded=true;
	_1aa333167_appendInstance((*(_176242_f)).ptr(), &(_17707_ins));
}



inline void _1aa3d624d_checkTraitDeclMethods(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa345047_Trait>* _177643_t) {
	{
		auto expr = &((*((*(_177643_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bba36eb9:;
		if (it != expr_end) {
			jule::I32 _17778_i = it - expr->begin();
			jule::Ptr<_1aa3315b6_Fn> _177715_f = *it;
			{
				_1aa3d5e95_checkTraitDeclMethod(_self_, &(_177715_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1aa3463ab_findMethodInherit((*(_177643_t)).ptr(), &((*(_177715_f))._field_Ident)) != nullptr)) {
					_1aa3be434_pushErr(_self_, (*_177715_f.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_177715_f.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					_1aa3be797_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					goto _iter_next_1bba36eb9;
				};
				_julec_label_1bba37d88:;
				{
					auto expr = &((*((*(_177643_t))))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bba39ebc:;
					if (it != expr_end) {
						jule::I32 _17938_j = it - expr->begin();
						jule::Ptr<_1aa3315b6_Fn> _179311_jf = *it;
						{
							{
								
								if ((_17938_j >= _17778_i)) {
									_case_begin_1bba3aa39:;
									{
										goto _iter_end_1bba39ebc;
									}
								}
								else if (((*_177715_f.alloc)._field_Ident == (*(_179311_jf))._field_Ident)) {
									_case_begin_1bba3aac2:;
									{
										_1aa3be434_pushErr(_self_, (*_177715_f.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_177715_f.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
										_1aa3be797_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_end_1bba39ebc;
									}
								}
								_match_end_1bba3a93a:;
							};
						}
						_iter_next_1bba39ebc:;
						++it;
						_17938_j++;
						goto _iter_begin_1bba39ebc;
					}
					_iter_end_1bba39ebc:;
				};
			}
			_iter_next_1bba36eb9:;
			++it;
			_17778_i++;
			goto _iter_begin_1bba36eb9;
		}
		_iter_end_1bba36eb9:;
	};
}



inline void _1aa3d6506_checkTraitDecl(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa345047_Trait>* _181236_t) {
	if (_1aa2d7aab_IsIgnoreIdent((*((*(_181236_t))))._field_Ident)) {
		_1aa3be434_pushErr(_self_.ptr(), (*((*(_181236_t))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1aa3c0149_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_181236_t))), &((*((*(_181236_t))))._field_Ident), false)) {
		_1aa3be434_pushErr(_self_, (*((*(_181236_t))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_181236_t))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1aa3be797_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1aa3d5bdc_checkTraitDeclInherits(_self_, _181236_t);
	_1aa3d624d_checkTraitDeclMethods(_self_, _181236_t);
}



inline jule::Bool _1aa3d678c_checkTraitDecls(jule::Ptr<_1aa3bb530_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bba40e29:;
		if (it != expr_end) {
			jule::Ptr<_1aa345047_Trait> _182615_t = *it;
			{
				_1aa3d6506_checkTraitDecl(_self_, &(_182615_t));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bba40e29:;
			++it;
			goto _iter_begin_1bba40e29;
		}
		_iter_end_1bba40e29:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1aa3d6b88_checkTraitImplMethods(_1aa3bb530_sema* _self_, jule::Ptr<_1aa345047_Trait>* _183642_base, jule::Ptr<_1aa37374b_Impl>* _183657_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_183657_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bba428dc:;
		if (it != expr_end) {
			jule::Ptr<_1aa3315b6_Fn> *_183810_f = it;
			{
				if ((_1aa345c29_FindMethod((*(_183642_base)).ptr(), (*((*(_183810_f))))._field_Ident) == nullptr)) {
					_1aa3be434_pushErr(_self_, (*(*(_183810_f)).alloc)._field_Token, jule::Str::lit("undefined identifier: trait @ has no define @", 45), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_183642_base))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*(*(_183810_f)).alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					__jule_func_result=false;
				};
			}
			_iter_next_1bba428dc:;
			++it;
			goto _iter_begin_1bba428dc;
		}
		_iter_end_1bba428dc:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1aa3d7084_implToStruct(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa31b518_Struct>* _184734_dest, jule::Ptr<_1aa37374b_Impl>* _184754_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_184754_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bba45109:;
		if (it != expr_end) {
			jule::Ptr<_1aa3315b6_Fn> _185115_f = *it;
			{
				if (((_1aa31c1b7_FindMethod((*(_184734_dest)).ptr(), (*(_185115_f))._field_Ident, (*_185115_f.alloc)._field_Statically) != nullptr) || (_1aa31c849_FindField((*(_184734_dest)).ptr(), (*_185115_f.alloc)._field_Ident) != nullptr))) {
					_1aa3be434_pushErr(_self_.ptr(), (*_185115_f.alloc)._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_184734_dest))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_185115_f.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1bba45109;
				};
				if ((((*((*(_184734_dest))))._field_Generics.len() > 0LL) && ((*_185115_f.alloc)._field_Generics.len() > 0LL))) {
					{
						auto expr = &((*_185115_f.alloc)._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bba48030:;
						if (it != expr_end) {
							jule::Ptr<_1aa307889_GenericDecl> _185912_fg = *it;
							{
								{
									auto expr = &((*((*(_184734_dest))))._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1bba4897b:;
									if (it != expr_end) {
										jule::Ptr<_1aa307889_GenericDecl> _186013_dg = *it;
										{
											if (((*(_185912_fg))._field_Ident == (*(_186013_dg))._field_Ident)) {
												_1aa3be434_pushErr(_self_, (*_185912_fg.alloc)._field_Token, jule::Str::lit("methods cannot have same generic identifier with owner same time", 64), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1bba4897b:;
										++it;
										goto _iter_begin_1bba4897b;
									}
									_iter_end_1bba4897b:;
								};
							}
							_iter_next_1bba48030:;
							++it;
							goto _iter_begin_1bba48030;
						}
						_iter_end_1bba48030:;
					};
				};
				_1aa3c04ac_checkDirectives(_self_, &((*_185115_f.alloc)._field_Directives), jule::Any(_185115_f, &__jule_any_type26));
				(*_185115_f.alloc)._field_sema=_self_;
				(*_185115_f.alloc)._field_Owner=(*(_184734_dest));
				{ jule::Slice<jule::Ptr<_1aa3315b6_Fn>> &__jule_push_dest = (*((*(_184734_dest))))._field_Methods; __jule_push_dest.push(_185115_f); };
			}
			_iter_next_1bba45109:;
			++it;
			goto _iter_begin_1bba45109;
		}
		_iter_end_1bba45109:;
	};
	{
		auto expr = &((*((*(_184754_ipl))))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bba454d3:;
		if (it != expr_end) {
			jule::Ptr<_1aa3e4d3e_Var> _187615_v = *it;
			{
				;
				if (((_1aa31c1b7_FindMethod((*(_184734_dest)).ptr(), (*(_187615_v))._field_Ident, true) != nullptr) || (_1aa31c508_FindStatic((*(_184734_dest)).ptr(), (*_187615_v.alloc)._field_Ident) != nullptr))) {
					_1aa3be434_pushErr(_self_, (*_187615_v.alloc)._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_184734_dest))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_187615_v.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1bba454d3;
				};
				{ jule::Slice<jule::Ptr<_1aa3e4d3e_Var>> &__jule_push_dest = (*((*(_184734_dest))))._field_Statics; __jule_push_dest.push(_187615_v); };
			}
			_iter_next_1bba454d3:;
			++it;
			goto _iter_begin_1bba454d3;
		}
		_iter_end_1bba454d3:;
	};
	return __jule_func_result;;
}



inline void _1aa3d733c_implTrait(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa37374b_Impl>* _188931_decl) {
	jule::Ptr<_1a601a64a_TypeKind> _18907_base_t = _1aa3caa4a_selectType(_self_, &((*((*(_188931_decl))))._field_Base));;
	if ((_18907_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1aa345047_Trait> _18947_base = _1a601e60a_Trait(_18907_base_t.ptr());;
	if ((_18947_base == nullptr)) {
		_1aa3be434_pushErr(_self_, (*((*((*(_188931_decl))))._field_Base))._field_Token, jule::Str::lit("invalid base type for impl: @", 29), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str(_18907_base_t.ptr()), &__jule_any_type4); __jule_collection; }));
		_1aa3be797_pushSuggestion(_self_, jule::Str::lit("expected trait, use a trait", 27), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a601a64a_TypeKind> _19017_destT = _1aa3caa4a_selectType(_self_, &((*((*(_188931_decl))))._field_Dest));;
	if ((_19017_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1aa31e373_StructIns> _19057_destS = _1a601e374_Struct(_19017_destT.ptr());;
	if ((_19057_destS == nullptr)) {
		_1aa3be434_pushErr(_self_, (*((*((*(_188931_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str(_19017_destT.ptr()), &__jule_any_type4); __jule_collection; }));
		_1aa3be797_pushSuggestion(_self_, jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aa31b518_Struct> _19127_dest = (*(_19057_destS))._field_Decl;;
	if ((_1aa2db142_Dir((*((*(_19127_dest))._field_Token))._field_File.ptr()) != _1aa2db142_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1aa3be434_pushErr(_self_, (*(*((*(_188931_decl))))._field_Dest.alloc)._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	_1aa3e3524_pushImplemented(_18947_base, &(_19127_dest));
	_1aa3e3810_pushImplements(&(_19127_dest), _18947_base);
	if (((*((*(_188931_decl))))._field_Statics.len() > 0LL)) {
		_1aa3be434_pushErr(_self_, (*((*((*(_188931_decl))))._field_Statics[0LL]))._field_Token, jule::Str::lit("trait implementations cannot implement static field", 51), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1aa3d6b88_checkTraitImplMethods(_self_, &(_18947_base), _188931_decl)))) {
			_case_begin_1bba57b22:;
		}
		else if ((!(_1aa3d7084_implToStruct(_self_, &(_19127_dest), _188931_decl)))) {
			_case_begin_1bba57b88:;
		}
		_match_end_1bba56d63:;
	};
}



inline void _1aa3d75e5_implStruct(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa37374b_Impl>* _193232_decl) {
	jule::Ptr<_1a601a64a_TypeKind> _19337_destT = _1aa3caa4a_selectType(_self_, &((*((*(_193232_decl))))._field_Dest));;
	if ((_19337_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1aa31e373_StructIns> _19377_destS = _1a601e374_Struct(_19337_destT.ptr());;
	if ((_19377_destS == nullptr)) {
		_1aa3be434_pushErr(_self_, (*((*((*(_193232_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str(_19337_destT.ptr()), &__jule_any_type4); __jule_collection; }));
		_1aa3be797_pushSuggestion(_self_, jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aa31b518_Struct> _19447_dest = (*(_19377_destS))._field_Decl;;
	if ((_1aa2db142_Dir((*((*(_19447_dest))._field_Token))._field_File.ptr()) != _1aa2db142_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1aa3be434_pushErr(_self_, (*(*((*(_193232_decl))))._field_Dest.alloc)._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1aa3d7084_implToStruct(_self_, &(_19447_dest), _193232_decl)))) {
			_case_begin_1bba5d7d7:;
		}
		_match_end_1bba5c000:;
	};
}



inline void _1aa3d789d_implImpl(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa37374b_Impl>* _195630_decl) {
	{
		
		if (_1aa373b47_IsTraitImpl((*(_195630_decl)).ptr())) {
			_case_begin_1bba5e365:;
			{
				_1aa3d733c_implTrait(_self_, _195630_decl);
			}
		}
		else if (_1aa373dcd_IsStructImpl((*(_195630_decl)).ptr())) {
			_case_begin_1bba5e40e:;
			{
				_1aa3d75e5_implStruct(_self_, _195630_decl);
			}
		}
		_match_end_1bba5e255:;
	};
}



inline void _1aa3d7c11_checkVarDecl(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa3e4d3e_Var>* _196734_decl, jule::Trait _196750_l) {
	if (_1aa2d7aab_IsIgnoreIdent((*((*(_196734_decl))))._field_Ident)) {
		_1aa3be434_pushErr(_self_.ptr(), (*((*(_196734_decl))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1aa3e54d2_IsTypeInferred((*(_196734_decl)).ptr())) {
		if ((!(_1aa3e524b_IsInitialized((*(_196734_decl)).ptr())))) {
			_1aa3be434_pushErr(_self_, (*((*(_196734_decl))))._field_Token, jule::Str::lit("type inferred declarations should have a initializer expression", 63), jule::Slice<jule::Any>());
		};
	} else {
		_1aa3c9e12_checkType(_self_, &((*((*(_196734_decl))))._field_Kind), _196750_l);
	};
	if ((*((*(_196734_decl))))._field_Reference) {
		if ((*((*(_196734_decl))))._field_Constant) {
			_1aa3be434_pushErr(_self_, (*((*(_196734_decl))))._field_Token, jule::Str::lit("references cannot be constant", 29), jule::Slice<jule::Any>());
		};
		if ((*((*(_196734_decl))))._field_Statically) {
			_1aa3be434_pushErr(_self_, (*((*(_196734_decl))))._field_Token, jule::Str::lit("static variables cannot be reference", 36), jule::Slice<jule::Any>());
		};
	};
	if ((!(_1aa3e524b_IsInitialized((*(_196734_decl)).ptr())))) {
		if ((*((*(_196734_decl))))._field_Constant) {
			_1aa3be434_pushErr(_self_, (*((*(_196734_decl))))._field_Token, jule::Str::lit("missing expression for constant variable initialization", 55), jule::Slice<jule::Any>());
		};
		if ((*((*(_196734_decl))))._field_Statically) {
			_1aa3be434_pushErr(_self_, (*((*(_196734_decl))))._field_Token, jule::Str::lit("static variables must be have initialize expression", 51), jule::Slice<jule::Any>());
		};
		if ((*((*(_196734_decl))))._field_Reference) {
			_1aa3be434_pushErr(_self_, (*((*(_196734_decl))))._field_Token, jule::Str::lit("reference variables must be have lvalue initialize expression", 61), jule::Slice<jule::Any>());
		};
	};
}



inline void _1aa3d7eb9_checkGlobalVarDecl(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa3e4d3e_Var>* _200440_decl) {
	if (_1aa3c0149_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_200440_decl))), &((*((*(_200440_decl))))._field_Ident), (*((*(_200440_decl))))._field_Binded)) {
		_1aa3be434_pushErr(_self_, (*((*(_200440_decl))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_200440_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1aa3be797_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_200440_decl))))._field_Binded && (*((*(_200440_decl))))._field_Constant)) {
		_1aa3be434_pushErr(_self_, (*((*(_200440_decl))))._field_Token, jule::Str::lit("binded variables cannot be constant", 35), jule::Slice<jule::Any>());
	};
	if ((((!((*((*(_200440_decl))))._field_Binded)) && (!((*((*(_200440_decl))))._field_Constant))) && (!((*((*(_200440_decl))))._field_Statically)))) {
		_1aa3be434_pushErr(_self_, (*((*(_200440_decl))))._field_Token, jule::Str::lit("global variables must be static", 31), jule::Slice<jule::Any>());
		_1aa3be797_pushSuggestion(_self_, jule::Str::lit("use \"static\" keyword to define", 30), jule::Slice<jule::Any>());
	};
	_1aa3c04ac_checkDirectives(_self_, &((*((*(_200440_decl))))._field_Directives), jule::Any((*(_200440_decl)), &__jule_any_type8));
	_1aa3d7c11_checkVarDecl(_self_, _200440_decl, jule::Trait(_self_, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data3));
}



inline jule::Bool _1aa3d8250_checkGlobalDecls(jule::Ptr<_1aa3bb530_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bba6c4d8:;
		if (it != expr_end) {
			jule::Ptr<_1aa3e4d3e_Var> _202215_decl = *it;
			{
				_1aa3d7eb9_checkGlobalVarDecl(_self_, &(_202215_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bba6c4d8:;
			++it;
			goto _iter_begin_1bba6c4d8;
		}
		_iter_end_1bba6c4d8:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1aa3d864b_checkStructTraitImpl(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa31b518_Struct>* _203242_strct, jule::Ptr<_1aa345047_Trait>* _203263_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_203263_trt))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bba6dd9c:;
		if (it != expr_end) {
			jule::Ptr<_1aa3315b6_Fn> _203315_tf = *it;
			{
				jule::Bool _20348_exist = false;;
				jule::Ptr<_1aa3315b6_Fn> _20358_sf = _1aa31c1b7_FindMethod((*(_203242_strct)).ptr(), (*(_203315_tf))._field_Ident, (*_203315_tf.alloc)._field_Statically);;
				jule::Ptr<_1aa334597_FnIns> _20364_tfK = _1aa3cdcc3_getTraitCheckFnKind(_self_, &(_203315_tf));;
				if ((_20358_sf != nullptr)) {
					jule::Ptr<_1aa334597_FnIns> _20389_sfK = _1aa3cdcc3_getTraitCheckFnKind(_self_, &(_20358_sf));;
					if ((_20389_sfK != nullptr)) {
						_20348_exist=_1aa335543_equalTrait(_20364_tfK, &(_20389_sfK));
					};
				};
				if (_20348_exist) {
					jule::Ptr<_1aa2e9a9b_Directive> _20445_d = _1aa4766c8_findDirective(&((*_20358_sf.alloc)._field_Directives), jule::Str::lit("deprecated", 10));;
					if ((_20445_d != nullptr)) {
						_1aa3be434_pushErr(_self_, (*_20445_d.alloc)._field_Tag, jule::Str::lit("trait implementations cannot have deprecated code", 49), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1aa3be434_pushErr(_self_, (*((*(_203242_strct))))._field_Token, jule::Str::lit("trait @ derived but not implemented define @", 44), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_203263_trt))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_1aa336478_GetKindStr(_20364_tfK, true), &__jule_any_type4); __jule_collection; }));
					__jule_func_result=false;
				};
			}
			_iter_next_1bba6dd9c:;
			++it;
			goto _iter_begin_1bba6dd9c;
		}
		_iter_end_1bba6dd9c:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1aa3d898c_checkStructImpls(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa31b518_Struct>* _205838_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_205838_s))))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bba74da3:;
		if (it != expr_end) {
			jule::Ptr<_1aa345047_Trait> _206015_trt = *it;
			{
				__jule_func_result=(_1aa3d864b_checkStructTraitImpl(_self_, _205838_s, &(_206015_trt)) && __jule_func_result);
			}
			_iter_next_1bba74da3:;
			++it;
			goto _iter_begin_1bba74da3;
		}
		_iter_end_1bba74da3:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1aa3d8ccd_checkStructFields(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa31b518_Struct>* _206639_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_206639_st))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bba76338:;
		if (it != expr_end) {
			jule::Ptr<_1aa3185e2_Field> _206815_f = *it;
			{
				(*(_206815_f))._field_Owner=(*(_206639_st));
				{
					auto expr = &((*((*(_206639_st))))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bba7704d:;
					if (it != expr_end) {
						jule::Ptr<_1aa3185e2_Field> _207011_cf = *it;
						{
							if ((_206815_f == _207011_cf)) {
								goto _iter_end_1bba7704d;
							} else if (((*_206815_f.alloc)._field_Ident == (*(_207011_cf))._field_Ident)) {
								_1aa3be434_pushErr(_self_.ptr(), (*_206815_f.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_206815_f.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
								_1aa3be797_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1bba7704d:;
						++it;
						goto _iter_begin_1bba7704d;
					}
					_iter_end_1bba7704d:;
				};
			}
			_iter_next_1bba76338:;
			++it;
			goto _iter_begin_1bba76338;
		}
		_iter_end_1bba76338:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1aa3d9086_checkStructDecl(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa31b518_Struct>* _208337_s) {
	if (_1aa2d7aab_IsIgnoreIdent((*((*(_208337_s))))._field_Ident)) {
		_1aa3be434_pushErr(_self_.ptr(), (*((*(_208337_s))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1aa3c0149_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_208337_s))), &((*((*(_208337_s))))._field_Ident), (*((*(_208337_s))))._field_Binded)) {
		_1aa3be434_pushErr(_self_, (*((*(_208337_s))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_208337_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1aa3be797_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1aa3c04ac_checkDirectives(_self_, &((*((*(_208337_s))))._field_Directives), jule::Any((*(_208337_s)), &__jule_any_type23));
	{
		
		if ((!(_1aa3d43b1_checkDeclGenerics(_self_, &((*((*(_208337_s))))._field_Generics))))) {
			_case_begin_1bba7bcab:;
		}
		else if ((!(_1aa3d8ccd_checkStructFields(_self_, _208337_s)))) {
			_case_begin_1bba7bd22:;
		}
		else if ((!(_1aa3d898c_checkStructImpls(_self_, _208337_s)))) {
			_case_begin_1bba7bd88:;
		}
		else if ((!(_1aa3d9bbe_checkFuncDeclsBy(_self_, &((*((*(_208337_s))))._field_Methods))))) {
			_case_begin_1bba7bdee:;
		}
		_match_end_1bba7bb79:;
	};
}



inline jule::Bool _1aa3d931c_checkStructDecls(jule::Ptr<_1aa3bb530_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bba7e0bb:;
		if (it != expr_end) {
			jule::Ptr<_1aa31b518_Struct> _210315_s = *it;
			{
				_1aa3d9086_checkStructDecl(_self_, &(_210315_s));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bba7e0bb:;
			++it;
			goto _iter_begin_1bba7e0bb;
		}
		_iter_end_1bba7e0bb:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1aa3d95c5_checkAnonFuncDecl(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa3315b6_Fn>* _211339_f) {
	(*((*(_211339_f))))._field_sema=_self_;
	_1aa3d513c_checkFnDeclPrototype(_self_, _211339_f);
}



inline void _1aa3d987d_checkFuncDecl(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa3315b6_Fn>* _211835_f) {
	if (_1aa2d7aab_IsIgnoreIdent((*((*(_211835_f))))._field_Ident)) {
		_1aa3be434_pushErr(_self_.ptr(), (*((*(_211835_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1aa3325a6_IsAnon((*(_211835_f)).ptr())) {
		_1aa3be434_pushErr(_self_.ptr(), (*((*(_211835_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	_1aa3c04ac_checkDirectives(_self_, &((*((*(_211835_f))))._field_Directives), jule::Any((*(_211835_f)), &__jule_any_type26));
	_1aa3d95c5_checkAnonFuncDecl(_self_, _211835_f);
	if ((((*((*(_211835_f))))._field_Owner == nullptr) && _1aa3c0149_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_211835_f))), &((*((*(_211835_f))))._field_Ident), (*((*(_211835_f))))._field_Binded))) {
		if ((*((*(_211835_f))))._field_Ident.equal("init", 4)) {
			jule::Ptr<_1aa3315b6_Fn> _21305_init = _1aa3bcae7_FindFn(_self_, jule::Str::lit("init", 4), false);;
			if ((_21305_init != nullptr)) {
				return;;
			};
		};
		_1aa3be434_pushErr(_self_, (*((*(_211835_f))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_211835_f))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1aa3be797_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1aa3d9bbe_checkFuncDeclsBy(jule::Ptr<_1aa3bb530_sema> _self_, jule::Slice<jule::Ptr<_1aa3315b6_Fn>>* _214038_funcs) {
	{
		auto expr = _214038_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bba86337:;
		if (it != expr_end) {
			jule::Ptr<_1aa3315b6_Fn> _214115_f = *it;
			{
				_1aa3d987d_checkFuncDecl(_self_, &(_214115_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1bba86337:;
			++it;
			goto _iter_begin_1bba86337;
		}
		_iter_end_1bba86337:;
	};
	return true;;
}



inline jule::Bool _1aa3d9e55_checkFuncDecls(jule::Ptr<_1aa3bb530_sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1aa3d9bbe_checkFuncDeclsBy(_self_, &((*((*_self_.alloc)._field_file))._field_Funcs));
	return __jule_func_result;;
}



inline void _1aa3da373_pushCycleError(_1aa3bb530_sema* _self_, jule::Str* _215627_st1, jule::Str* _215638_st2, _1ed486d49_StrBuilder* _215653_message) {
	;
	jule::Str _21583_refersTo = _1ada73079_Logf(jule::Str::lit("@ refers to @", 13), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_215627_st1)), &__jule_any_type4); (*it++) = jule::Any((*(_215638_st2)), &__jule_any_type4); __jule_collection; }));;
	jule::Str _21593_m = _1ed4912a4_Str(_215653_message);;
	_1ed4909ac_WriteStr(_215653_message, _1ed472ce1_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1ed4909ac_WriteStr(_215653_message, _21583_refersTo);
	_1ed490c65_WriteByte(_215653_message, '\n');
	_1ed4909ac_WriteStr(_215653_message, _21593_m);
}



inline void _1aa3daa27_checkPackageDecls(jule::Ptr<_1aa3bb530_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bba8ce87:;
		if (it != expr_end) {
			jule::Ptr<_1aa4475cd_SymbolTable> _218315_f = *it;
			{
				_1aa3be016_setCurrentFile(_self_.ptr(), _218315_f);
				if ((!(_1aa3d22d2_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1bba8ce87:;
			++it;
			goto _iter_begin_1bba8ce87;
		}
		_iter_end_1bba8ce87:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bba8d3e9:;
		if (it != expr_end) {
			jule::Ptr<_1aa4475cd_SymbolTable> _219015_f = *it;
			{
				_1aa3be016_setCurrentFile(_self_, _219015_f);
				if ((!(_1aa3d678c_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1bba8d3e9:;
			++it;
			goto _iter_begin_1bba8d3e9;
		}
		_iter_end_1bba8d3e9:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bba8e40b:;
		if (it != expr_end) {
			jule::Ptr<_1aa4475cd_SymbolTable> _219715_f = *it;
			{
				_1aa3be016_setCurrentFile(_self_, _219715_f);
				if ((!(_1aa3d8250_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1bba8e40b:;
			++it;
			goto _iter_begin_1bba8e40b;
		}
		_iter_end_1bba8e40b:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bba90440:;
		if (it != expr_end) {
			jule::Ptr<_1aa4475cd_SymbolTable> _220415_f = *it;
			{
				_1aa3be016_setCurrentFile(_self_, _220415_f);
				{
					
					if ((!(_1aa3d9e55_checkFuncDecls(_self_)))) {
						_case_begin_1bba91a4b:;
					}
					else if ((!(_1aa3d931c_checkStructDecls(_self_)))) {
						_case_begin_1bba91ae5:;
					}
					else {
						_case_begin_1bba914b8:;
						{
							goto _iter_next_1bba90440;
						}
					}
					_match_end_1bba919b3:;
				};
				return;;
			}
			_iter_next_1bba90440:;
			++it;
			goto _iter_begin_1bba90440;
		}
		_iter_end_1bba90440:;
	};
}



inline void _1aa3dad8a_checkDataForTypeInference(_1aa3bb530_sema* _self_, jule::Ptr<_1aa44cc98_Data>* _221642_d, jule::Ptr<_1aa2d51c4_Token>* _221653_err_token) {
	{
		
		if (_1aa44d1b6_IsNil((*(_221642_d)).ptr())) {
			_case_begin_1bba92ba1:;
			{
				_1aa3be434_pushErr(_self_, (*(_221653_err_token)), jule::Str::lit("nil is cannot use with type inferred definitions", 48), jule::Slice<jule::Any>());
			}
		}
		else if (_1aa44d44c_IsVoid((*(_221642_d)).ptr())) {
			_case_begin_1bba92c4a:;
			{
				_1aa3be434_pushErr(_self_, (*(_221653_err_token)), jule::Str::lit("void data is cannot use for type inferred definitions", 53), jule::Slice<jule::Any>());
			}
		}
		else if ((*((*((*(_221642_d))))._field_Kind))._field_Variadic) {
			_case_begin_1bba92cb1:;
			{
				_1aa3be434_pushErr(_self_, (*(_221653_err_token)), jule::Str::lit("invalid expression for type inference", 37), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bba92a80:;
	};
}



inline void _1aa3db143_checkVarValue(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa3e4d3e_Var>* _222835_v) {
	if (_1aa3e54d2_IsTypeInferred((*(_222835_v)).ptr())) {
		(*((*(_222835_v))))._field_Kind=jule::new_ptr<_1a6022d5b_TypeSymbol>(_1a6022d5b_TypeSymbol{._field_Decl=jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr), ._field_Kind=(*((*((*((*(_222835_v))))._field_Value))._field_Data))._field_Kind});
		_1aa3dad8a_checkDataForTypeInference(_self_.ptr(), &((*(*((*(_222835_v))))._field_Value.alloc)._field_Data), &((*((*(*((*(_222835_v))))._field_Value.alloc)._field_Expr))._field_Token));
		_1aa3d1534_checkValidityForInitExpr(_self_, (*((*(_222835_v))))._field_Mutable, (*((*(_222835_v))))._field_Reference, &((*((*((*(_222835_v))))._field_Kind))._field_Kind), &((*(*((*(_222835_v))))._field_Value.alloc)._field_Data), &((*(*((*((*(_222835_v))))._field_Value))._field_Expr.alloc)._field_Token));
	} else {
		jule::Ptr<_1a602a083_Arr> _22418_arr = _1a601dac1_Arr((*((*((*(_222835_v))))._field_Kind))._field_Kind.ptr());;
		if ((_22418_arr != nullptr)) {
			if ((*_22418_arr.alloc)._field_Auto) {
				jule::Ptr<_1a602a083_Arr> _22446_dataArr = _1a601dac1_Arr((*((*((*((*(_222835_v))))._field_Value))._field_Data))._field_Kind.ptr());;
				if ((_22446_dataArr != nullptr)) {
					(*_22418_arr.alloc)._field_N=(*_22446_dataArr.alloc)._field_N;
				};
			};
		};
		if (_1aa3cbc9e_checkAssignType(_self_, (*((*(_222835_v))))._field_Reference, &((*(*((*(_222835_v))))._field_Kind.alloc)._field_Kind), &((*(*((*(_222835_v))))._field_Value.alloc)._field_Data), (*((*(*((*(_222835_v))))._field_Value.alloc)._field_Expr))._field_Token)) {
			_1aa3d1534_checkValidityForInitExpr(_self_, (*((*(_222835_v))))._field_Mutable, (*((*(_222835_v))))._field_Reference, &((*(*((*(_222835_v))))._field_Kind.alloc)._field_Kind), &((*(*((*(_222835_v))))._field_Value.alloc)._field_Data), &((*(*((*((*(_222835_v))))._field_Value))._field_Expr.alloc)._field_Token));
		};
	};
	if (((*((*(_222835_v))))._field_Reference && (!(_1a603714a_isValidForRef(&((*((*((*(_222835_v))))._field_Kind))._field_Kind)))))) {
		_1aa3be434_pushErr(_self_.ptr(), (*((*(_222835_v))))._field_Token, jule::Str::lit("references cannot points to type @", 34), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(*((*(_222835_v))))._field_Kind.alloc)._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
	};
	if ((*((*(_222835_v))))._field_Constant) {
		if (((!(_1aa44d6d3_IsConst((*((*((*(_222835_v))))._field_Value))._field_Data.ptr()))) && (!(_1a601edad_comptime((*(*((*((*(_222835_v))))._field_Value))._field_Data.alloc)._field_Kind.ptr()))))) {
			_1aa3be434_pushErr(_self_, (*((*(*((*(_222835_v))))._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
	} else {
		(*((*((*((*(_222835_v))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*(*((*((*(_222835_v))))._field_Value))._field_Data.alloc)._field_untyped=false;
	};
	if ((_1a601eb27_Tup((*((*((*(_222835_v))))._field_Kind))._field_Kind) != nullptr)) {
		(*(*((*(_222835_v))))._field_Kind.alloc)._field_Kind=nullptr;
	};
}



inline void _1aa3db4a6_evalVarValue(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa3e4d3e_Var>* _228134_decl, jule::Trait _228150_l) {
	if ((!(_1aa3e524b_IsInitialized((*(_228134_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_1aa44e9c0_eval> _22867_eval = static_cast<jule::Ptr<_1aa44e9c0_eval>>(nullptr);;
	if (((*((*(_228134_decl))))._field_Kind != nullptr)) {
		_22867_eval=_1aa3cb001_evalpd(_self_, _228150_l, (*(*((*(_228134_decl))))._field_Kind.alloc)._field_Kind, (*(_228134_decl)));
	} else {
		_22867_eval=_1aa3cb001_evalpd(_self_, _228150_l, nullptr, (*(_228134_decl)));
	};
	(*(_22867_eval))._field_immutable=(!((*((*(_228134_decl))))._field_Mutable));
	(*((*((*(_228134_decl))))._field_Value))._field_Data=_1aa46cc63_evalExpr(_22867_eval, (*(*((*(_228134_decl))))._field_Value.alloc)._field_Expr);
}



inline void _1aa3db819_checkVar(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa3e4d3e_Var>* _229830_decl, jule::Trait _229846_l) {
	_1aa3db4a6_evalVarValue(_self_, _229830_decl, _229846_l);
	if (((*((*((*(_229830_decl))))._field_Value))._field_Data == nullptr)) {
		return;;
	};
	_1aa3db143_checkVarValue(_self_, _229830_decl);
}



inline void _1aa3dba17_checkGlobals(jule::Ptr<_1aa3bb530_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbaa9822:;
		if (it != expr_end) {
			jule::Ptr<_1aa3e4d3e_Var> _230815_decl = *it;
			{
				if ((*(_230815_decl))._field_Binded) {
					goto _iter_next_1bbaa9822;
				};
				if (((_1aa3e524b_IsInitialized(_230815_decl) && ((*((*_230815_decl.alloc)._field_Value))._field_Data == nullptr)) || (_1aa3e54d2_IsTypeInferred(_230815_decl) && ((*((*_230815_decl.alloc)._field_Kind))._field_Kind == nullptr)))) {
					_1aa3db819_checkVar(_self_, &(_230815_decl), jule::Trait(_self_, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data3));
				};
			}
			_iter_next_1bbaa9822:;
			++it;
			goto _iter_begin_1bbaa9822;
		}
		_iter_end_1bbaa9822:;
	};
}



inline jule::Ptr<_1aa334597_FnIns> _1aa3dbe13_readyToCheckFn(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa31e373_StructIns>* _232236_s, jule::Ptr<_1aa3315b6_Fn>* _232256_f) {
	jule::Ptr<_1aa334597_FnIns> _23237_ins = _1aa332d59_instance((*(_232256_f)));;
	if (((*((*(_232256_f))))._field_Instances.len() != 0LL)) {
		return _23237_ins;;
	};
	(*(_23237_ins))._field_Owner=(*(_232236_s));
	_1aa333167_appendInstance((*(_232256_f)).ptr(), &(_23237_ins));
	(*_23237_ins.alloc)._field_reloaded=true;
	if (_1aa3d0621_reloadFnInsTypes(_self_, _23237_ins)) {
		return _23237_ins;;
	};
	return nullptr;;
}



inline __jule_tuple_bool__jule_tuple_bool _1aa3dc30e_checkGenericFn(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa334597_FnIns>* _233836_f, jule::Ptr<_1aa2d51c4_Token>* _233852_et) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=_1aa3d0621_reloadFnInsTypes(_self_, (*(_233836_f)));
	(*((*(_233836_f))))._field_reloaded=true;
	if ((!(__jule_func_result.__jule_result_arg0))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1aa334597_FnIns> _23447_existInstance = _1aa333167_appendInstance((*((*(_233836_f))))._field_Decl.ptr(), _233836_f);;
	if ((!(_1aa3ce279_checkConstraintsFn(_self_, _233836_f, _233852_et, _23447_existInstance)))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	if ((_23447_existInstance != nullptr)) {
		(*(_233836_f))=_23447_existInstance;
		__jule_func_result.__jule_result_arg1=true;
	} else {
		_1aa3ded6c_checkFnInsCaller(_self_, _233836_f, (*(_233852_et)));
	};
	__jule_func_result.__jule_result_arg0=true;
	return __jule_func_result;;
}



inline void _1aa3dc672_checkTypeMethod(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa31e373_StructIns>* _236137_s, jule::Ptr<_1aa3315b6_Fn>* _236157_f) {
	if (((*((*(_236157_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1aa334597_FnIns> _23667_ins = (*((*(_236157_f))))._field_Instances[0LL];;
	if (((*((*(_23667_ins))._field_Scope))._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1aa3e0125_checkFnIns(_self_, &(_23667_ins));
}



inline jule::Ptr<_1aa334597_FnIns> _1aa3dcb28_checkStructInsOp(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa31e373_StructIns>* _237438_s, jule::Ptr<_1aa3315b6_Fn>* _237458_f, jule::Fn<jule::Bool,jule::Ptr<_1aa3315b6_Fn>> _237466_p) {
	if (((((*(_237458_f)) == nullptr) || ((*((*(_237458_f))))._field_Generics.len() > 0LL)) || (!(_237466_p((*(_237458_f))))))) {
		return nullptr;;
	};
	return (*((*(_237458_f))))._field_Instances[0LL];;
}



inline jule::Bool _1aa3dd024_checkStructEnv(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa31e373_StructIns>* _238436_s, jule::Ptr<_1aa2d51c4_Token> _238455_errorToken) {
	jule::Bool __jule_func_result = false;
	_1a602ca47_typeChecker _23857_tc = _1a602ca47_typeChecker{._field_s=(*((*((*(_238436_s))))._field_Decl))._field_sema, ._field_rootLookup=jule::Trait((*(*((*(_238436_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data3), ._field_lookup=jule::Trait((*(*((*(_238436_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data3), ._field_referencer=jule::new_ptr<_1a602ba57_referencer>(_1a602ba57_referencer{._field_ident=(*(*((*(_238436_s))))._field_Decl.alloc)._field_Ident, ._field_owner=jule::Any((*((*(_238436_s))))._field_Decl, &__jule_any_type23), ._field_refs=nullptr}), ._field_refers=(*((*(_238436_s))))._field_Refers, ._field_errorToken=jule::Ptr<_1aa2d51c4_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1aa307889_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1a6019858_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>(nullptr), ._field_inscatch=false};;
	if (((*((*(_238436_s))))._field_Generics.len() > 0LL)) {
		_23857_tc._field_useGenerics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>::alloc(0LL, (*((*(_238436_s))))._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a6019858_TypeAlias>(nullptr); __jule_collection; });
		{
			auto expr = &((*((*(_238436_s))))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1acbc3e89:;
			if (it != expr_end) {
				jule::I32 _23989_i = it - expr->begin();
				jule::Ptr<_1a6018c64_InsGeneric> _239816_g = *it;
				{
					jule::Ptr<_1aa307889_GenericDecl> _23999_decl = (*(*((*(_238436_s))))._field_Decl.alloc)._field_Generics[_23989_i];;
					{ jule::Slice<jule::Ptr<_1a6019858_TypeAlias>> &__jule_push_dest = _23857_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_1a6019858_TypeAlias>(_1a6019858_TypeAlias{._field_Scope=jule::Ptr<_1aa30a6a0_ScopeTree>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=(*_23999_decl.alloc)._field_Token, ._field_Ident=(*(_23999_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1a6022d5b_TypeSymbol>(_1a6022d5b_TypeSymbol{._field_Decl=jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr), ._field_Kind=(*(_239816_g))._field_Kind}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>(nullptr)})); };
				}
				_iter_next_1acbc3e89:;
				++it;
				_23989_i++;
				goto _iter_begin_1acbc3e89;
			}
			_iter_end_1acbc3e89:;
		};
	};
	jule::Ptr<_1aa4475cd_SymbolTable> _24087_oldFile = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1aa3be016_setCurrentFile(_self_, _24087_oldFile);
	});;
	if (((*((*_self_.alloc)._field_file))._field_File != (*((*(*((*(_238436_s))))._field_Decl.alloc)._field_Token))._field_File)) {
		jule::Ptr<_1aa4475cd_SymbolTable> _24128_file = _1aa3ba199_findFile(&((*_self_.alloc)._field_files), &((*(*((*((*(_238436_s))))._field_Decl))._field_Token.alloc)._field_File));;
		if ((_24128_file != nullptr)) {
			_1aa3be016_setCurrentFile(_self_, _24128_file);
		};
	};
	if (((*((*(_238436_s))))._field_Generics.len() > 0LL)) {
		jule::Ptr<_1aa3713e7_constraintChecker> _24198_cc = _1aa3c9a16_constraintChecker(_self_);;
		(*(_24198_cc))._field_et=_238455_errorToken;
		(*_24198_cc.alloc)._field_si=(*(_238436_s));
		(*_24198_cc.alloc)._field_genericsA=_23857_tc._field_useGenerics;
		(*_24198_cc.alloc)._field_uniq=true;
		if ((!(_1aa372360_check(_24198_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*((*(_238436_s))))._field_Statics.len() > 0LL)) {
		jule::I32 _24328_n = (*_self_.alloc)._field_errors.len();;
		(*((*_self_.alloc)._field_files[0LL]))._field_TypeAliases=jule::append(_23857_tc._field_useGenerics,(*((*(_self_))._field_files[0LL]))._field_TypeAliases);
		{
			auto expr = &((*((*(_238436_s))))._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1acbcc7bc:;
			if (it != expr_end) {
				jule::Ptr<_1aa3e4d3e_Var> _243416_v = *it;
				{
					_1aa3d7c11_checkVarDecl(_self_, &(_243416_v), jule::Trait(_self_, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data3));
					_1aa3db819_checkVar(_self_, &(_243416_v), jule::Trait(_self_, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data3));
					__jule_func_result=((((*_self_.alloc)._field_errors.len() - _24328_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1acbcc7bc:;
				++it;
				goto _iter_begin_1acbcc7bc;
			}
			_iter_end_1acbcc7bc:;
		};
		((*((*(_self_))._field_files[0LL]))._field_TypeAliases).mut_slice(_23857_tc._field_useGenerics.len());;
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1aa44e9c0_eval> _24457_eval = _1aa3cb73d_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data3));;
	(*((*(_238436_s))))._field_Comparable=(!((*(*((*(_238436_s))))._field_Decl.alloc)._field_Binded));
	{
		auto expr = &((*((*(_238436_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acbd14d5:;
		if (it != expr_end) {
			jule::Ptr<_1aa31d7c3_FieldIns> _244715_f = *it;
			{
				jule::Ptr<_1a601a64a_TypeKind> _24488_kind = _1a6035225_checkDecl(&_23857_tc, &((*((*((*(_244715_f))._field_Decl))._field_Kind))._field_Decl));;
				__jule_func_result=((_24488_kind != nullptr) && __jule_func_result);
				if ((_24488_kind == nullptr)) {
					if (((_self_ != (*(*((*(_238436_s))))._field_Decl.alloc)._field_sema) && ((*((*(*((*(_238436_s))))._field_Decl.alloc)._field_sema))._field_errors.len() > 0LL))) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*((*((*(_238436_s))))._field_Decl))._field_sema.alloc)._field_errors);
						(*(*((*((*(_238436_s))))._field_Decl))._field_sema.alloc)._field_errors=nullptr;
					};
					goto _iter_next_1acbd14d5;
				};
				(*_244715_f.alloc)._field_Kind=_24488_kind;
				(*((*(_238436_s))))._field_Mutable=((*((*(_238436_s))))._field_Mutable || ((!((*(*(_244715_f))._field_Decl.alloc)._field_Mutable)) && _1a601c031_Mutable((*(_244715_f))._field_Kind)));
				(*((*(_238436_s))))._field_Comparable=((*((*(_238436_s))))._field_Comparable && _1a601bc9a_Comparable((*(_244715_f))._field_Kind));
				if (((*(*(_244715_f))._field_Decl.alloc)._field_Default == nullptr)) {
					goto _iter_next_1acbd14d5;
				};
				(*(_24457_eval))._field_prefix=(*_244715_f.alloc)._field_Kind;
				(*_24457_eval.alloc)._field_field=_244715_f;
				(*_244715_f.alloc)._field_Default=_1aa46cc63_evalExpr(_24457_eval, (*(*(_244715_f))._field_Decl.alloc)._field_Default);
				if (((*_244715_f.alloc)._field_Default == nullptr)) {
					goto _iter_next_1acbd14d5;
				};
				;
				_1aa3cbc9e_checkAssignType(_self_, false, &((*_244715_f.alloc)._field_Kind), &((*_244715_f.alloc)._field_Default), (*((*(*(_244715_f))._field_Decl.alloc)._field_Default))._field_Token);
			}
			_iter_next_1acbd14d5:;
			++it;
			goto _iter_begin_1acbd14d5;
		}
		_iter_end_1acbd14d5:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1aa3dd420_precheckStructIns(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa31e373_StructIns>* _248139_s, jule::Ptr<_1aa2d51c4_Token> _248158_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1aa3dd024_checkStructEnv(_self_, _248139_s, _248158_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if ((((*((*(_248139_s))))._field_Comparable && ((*((*(_248139_s))))._field_Operators._field_Eq == nullptr)) && ((*((*_self_.alloc)._field_meta))._field_runtime != nullptr))) {
		jule::Ptr<_1aa3315b6_Fn> _24928_decl = _1a9e88a8c_runtimeFindFn(&((*(*(_self_))._field_meta.alloc)._field_runtime), jule::Str::lit("arrayCmp", 8));;
		{
			auto expr = &((*((*(_248139_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1acbdb765:;
			if (it != expr_end) {
				jule::Ptr<_1aa31d7c3_FieldIns> _249316_field = *it;
				{
					jule::Ptr<_1a602a083_Arr> _24949_arr = _1a601dac1_Arr((*(_249316_field))._field_Kind.ptr());;
					if ((_24949_arr == nullptr)) {
						goto _iter_next_1acbdb765;
					};
					jule::Ptr<_1aa334597_FnIns> _24989_f = _1aa332ac3_instanceForce(_24928_decl);;
					(*(_24989_f))._field_Generics=jule::append((*_24989_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a6018c64_InsGeneric>(_1a6018c64_InsGeneric{._field_Kind=(*(_24949_arr))._field_Elem, ._field_Constraint=jule::Slice<jule::Ptr<_1a601a64a_TypeKind>>(nullptr)}); __jule_collection; }));
					({
						__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aa3dc30e_checkGenericFn(_self_, &(_24989_f), &((*((*_249316_field.alloc)._field_Decl))._field_Token));
						__jule_func_result = __jule_assign_result.__jule_result_arg0;
					});
					if ((!(__jule_func_result))) {
						jule::panic(jule::Str::lit("arrayCmp evaluation failed, this is an implementation mistake", 61) + jule::Str("\nlocation: std/jule/sema/sema.jule:2502:6"));;
					};
				}
				_iter_next_1acbdb765:;
				++it;
				goto _iter_begin_1acbdb765;
			}
			_iter_end_1acbdb765:;
		};
	};
	{
		auto expr = &((*((*(_248139_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acbe0857:;
		if (it != expr_end) {
			jule::Ptr<_1aa3315b6_Fn> _250715_f = *it;
			{
				if (((*(_250715_f))._field_Generics.len() == 0LL)) {
					if ((_1aa3dbe13_readyToCheckFn(_self_, _248139_s, &(_250715_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1acbe0857:;
			++it;
			goto _iter_begin_1acbe0857;
		}
		_iter_end_1acbe0857:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1aa3dd6c8_checkStructIns(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa31e373_StructIns>* _251736_s) {
	{
		auto expr = &((*((*(_251736_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acbe2194:;
		if (it != expr_end) {
			jule::Ptr<_1aa3315b6_Fn> _251815_f = *it;
			{
				_1aa3dc672_checkTypeMethod(_self_, _251736_s, &(_251815_f));
			}
			_iter_next_1acbe2194:;
			++it;
			goto _iter_begin_1acbe2194;
		}
		_iter_end_1acbe2194:;
	};
}



inline void _1aa3dd981_checkTypeStruct(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa31b518_Struct>* _252337_s) {
	if ((*((*(_252337_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_252337_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_252337_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acbe3b68:;
		if (it != expr_end) {
			jule::Ptr<_1aa31e373_StructIns> _253615_ins = *it;
			{
				_1aa3dd6c8_checkStructIns(_self_, &(_253615_ins));
			}
			_iter_next_1acbe3b68:;
			++it;
			goto _iter_begin_1acbe3b68;
		}
		_iter_end_1acbe3b68:;
	};
}



inline void _1aa3ddb7e_checkStructTypes(jule::Ptr<_1aa3bb530_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acbe4b03:;
		if (it != expr_end) {
			jule::Ptr<_1aa31b518_Struct> _254215_s = *it;
			{
				_1aa3dd981_checkTypeStruct(_self_, &(_254215_s));
			}
			_iter_next_1acbe4b03:;
			++it;
			goto _iter_begin_1acbe4b03;
		}
		_iter_end_1acbe4b03:;
	};
}



inline void _1aa3dde37_checkStructInsOperators(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa31e373_StructIns> _254744_s) {
	{
		auto expr = &((*(_254744_s))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acbe5a7c:;
		if (it != expr_end) {
			jule::Ptr<_1aa3315b6_Fn> _254815_m = *it;
			{
				{
					auto &_match_expr{ (*(_254815_m))._field_Ident };
					
					if (_match_expr == jule::Str::lit("Eq", 2)) {
						_case_begin_1acbe61ed:;
						{
							(*(_254744_s))._field_Operators._field_Eq=_1aa3dcb28_checkStructInsOp(_self_, &(_254744_s), &(_254815_m), static__1aa3e6d41_Eq);
							(*_254744_s.alloc)._field_Comparable=((*_254744_s.alloc)._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str::lit("Gt", 2)) {
						_case_begin_1acbe67d6:;
						{
							(*(_254744_s))._field_Operators._field_Gt=_1aa3dcb28_checkStructInsOp(_self_, &(_254744_s), &(_254815_m), static__1aa3e710a_Gt);
						}
					}
					else if (_match_expr == jule::Str::lit("GtEq", 4)) {
						_case_begin_1acbe684c:;
						{
							(*(_254744_s))._field_Operators._field_GtEq=_1aa3dcb28_checkStructInsOp(_self_, &(_254744_s), &(_254815_m), static__1aa3e73c4_GtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Lt", 2)) {
						_case_begin_1acbe68b3:;
						{
							(*(_254744_s))._field_Operators._field_Lt=_1aa3dcb28_checkStructInsOp(_self_, &(_254744_s), &(_254815_m), static__1aa3e768d_Lt);
						}
					}
					else if (_match_expr == jule::Str::lit("LtEq", 4)) {
						_case_begin_1acbe6929:;
						{
							(*(_254744_s))._field_Operators._field_LtEq=_1aa3dcb28_checkStructInsOp(_self_, &(_254744_s), &(_254815_m), static__1aa3e7957_LtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Shl", 3)) {
						_case_begin_1acbe69a1:;
						{
							(*(_254744_s))._field_Operators._field_Shl=_1aa3dcb28_checkStructInsOp(_self_, &(_254744_s), &(_254815_m), static__1aa3e8095_Shl);
						}
					}
					else if (_match_expr == jule::Str::lit("Shr", 3)) {
						_case_begin_1acbe6a28:;
						{
							(*(_254744_s))._field_Operators._field_Shr=_1aa3dcb28_checkStructInsOp(_self_, &(_254744_s), &(_254815_m), static__1aa3e835e_Shr);
						}
					}
					else if (_match_expr == jule::Str::lit("Add", 3)) {
						_case_begin_1acbe6aa0:;
						{
							(*(_254744_s))._field_Operators._field_Add=_1aa3dcb28_checkStructInsOp(_self_, &(_254744_s), &(_254815_m), static__1aa3e8628_Add);
						}
					}
					else if (_match_expr == jule::Str::lit("Sub", 3)) {
						_case_begin_1acbe6b27:;
						{
							(*(_254744_s))._field_Operators._field_Sub=_1aa3dcb28_checkStructInsOp(_self_, &(_254744_s), &(_254815_m), static__1aa3e88e2_Sub);
						}
					}
					else if (_match_expr == jule::Str::lit("Div", 3)) {
						_case_begin_1acbe6b9e:;
						{
							(*(_254744_s))._field_Operators._field_Div=_1aa3dcb28_checkStructInsOp(_self_, &(_254744_s), &(_254815_m), static__1aa3e8bab_Div);
						}
					}
					else if (_match_expr == jule::Str::lit("Mul", 3)) {
						_case_begin_1acbe6c26:;
						{
							(*(_254744_s))._field_Operators._field_Mul=_1aa3dcb28_checkStructInsOp(_self_, &(_254744_s), &(_254815_m), static__1aa3e8e75_Mul);
						}
					}
					else if (_match_expr == jule::Str::lit("Mod", 3)) {
						_case_begin_1acbe6c9d:;
						{
							(*(_254744_s))._field_Operators._field_Mod=_1aa3dcb28_checkStructInsOp(_self_, &(_254744_s), &(_254815_m), static__1aa3e923e_Mod);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAnd", 6)) {
						_case_begin_1acbe6d25:;
						{
							(*(_254744_s))._field_Operators._field_BitAnd=_1aa3dcb28_checkStructInsOp(_self_, &(_254744_s), &(_254815_m), static__1aa3e9508_BitAnd);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOr", 5)) {
						_case_begin_1acbe6d9c:;
						{
							(*(_254744_s))._field_Operators._field_BitOr=_1aa3dcb28_checkStructInsOp(_self_, &(_254744_s), &(_254815_m), static__1aa3e97c2_BitOr);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXor", 6)) {
						_case_begin_1acbe6e24:;
						{
							(*(_254744_s))._field_Operators._field_BitXor=_1aa3dcb28_checkStructInsOp(_self_, &(_254744_s), &(_254815_m), static__1aa3e9a8b_BitXor);
						}
					}
					else if (_match_expr == jule::Str::lit("Neg", 3)) {
						_case_begin_1acbe6e9b:;
						{
							(*(_254744_s))._field_Operators._field_Neg=_1aa3dcb28_checkStructInsOp(_self_, &(_254744_s), &(_254815_m), static__1aa3ea1c9_Neg);
						}
					}
					else if (_match_expr == jule::Str::lit("Pos", 3)) {
						_case_begin_1acbe7023:;
						{
							(*(_254744_s))._field_Operators._field_Pos=_1aa3dcb28_checkStructInsOp(_self_, &(_254744_s), &(_254815_m), static__1aa3ea493_Pos);
						}
					}
					else if (_match_expr == jule::Str::lit("BitNot", 6)) {
						_case_begin_1acbe709a:;
						{
							(*(_254744_s))._field_Operators._field_BitNot=_1aa3dcb28_checkStructInsOp(_self_, &(_254744_s), &(_254815_m), static__1aa3ea75c_BitNot);
						}
					}
					else if (_match_expr == jule::Str::lit("AddAssign", 9)) {
						_case_begin_1acbe7122:;
						{
							(*(_254744_s))._field_Operators._field_AddAssign=_1aa3dcb28_checkStructInsOp(_self_, &(_254744_s), &(_254815_m), static__1aa3ead9a_AddAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("SubAssign", 9)) {
						_case_begin_1acbe7199:;
						{
							(*(_254744_s))._field_Operators._field_SubAssign=_1aa3dcb28_checkStructInsOp(_self_, &(_254744_s), &(_254815_m), static__1aa3eb164_SubAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("DivAssign", 9)) {
						_case_begin_1acbe7221:;
						{
							(*(_254744_s))._field_Operators._field_DivAssign=_1aa3dcb28_checkStructInsOp(_self_, &(_254744_s), &(_254815_m), static__1aa3eb42d_DivAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("MulAssign", 9)) {
						_case_begin_1acbe7298:;
						{
							(*(_254744_s))._field_Operators._field_MulAssign=_1aa3dcb28_checkStructInsOp(_self_, &(_254744_s), &(_254815_m), static__1aa3eb6e7_MulAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ModAssign", 9)) {
						_case_begin_1acbe7320:;
						{
							(*(_254744_s))._field_Operators._field_ModAssign=_1aa3dcb28_checkStructInsOp(_self_, &(_254744_s), &(_254815_m), static__1aa3eb9b1_ModAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShlAssign", 9)) {
						_case_begin_1acbe7397:;
						{
							(*(_254744_s))._field_Operators._field_ShlAssign=_1aa3dcb28_checkStructInsOp(_self_, &(_254744_s), &(_254815_m), static__1aa3ebc7a_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShrAssign", 9)) {
						_case_begin_1acbe741e:;
						{
							(*(_254744_s))._field_Operators._field_ShrAssign=_1aa3dcb28_checkStructInsOp(_self_, &(_254744_s), &(_254815_m), static__1aa3ec044_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOrAssign", 11)) {
						_case_begin_1acbe7496:;
						{
							(*(_254744_s))._field_Operators._field_BitOrAssign=_1aa3dcb28_checkStructInsOp(_self_, &(_254744_s), &(_254815_m), static__1aa3ec30d_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAndAssign", 12)) {
						_case_begin_1acbe751d:;
						{
							(*(_254744_s))._field_Operators._field_BitAndAssign=_1aa3dcb28_checkStructInsOp(_self_, &(_254744_s), &(_254815_m), static__1aa3ec5c7_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXorAssign", 12)) {
						_case_begin_1acbe7595:;
						{
							(*(_254744_s))._field_Operators._field_BitXorAssign=_1aa3dcb28_checkStructInsOp(_self_, &(_254744_s), &(_254815_m), static__1aa3ec891_BitXorAssign);
						}
					}
					_match_end_1acbe64c8:;
				};
			}
			_iter_next_1acbe5a7c:;
			++it;
			goto _iter_begin_1acbe5a7c;
		}
		_iter_end_1acbe5a7c:;
	};
}



inline void _1aa3de1e0_precheckStructType(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa31b518_Struct>* _261140_s) {
	if ((*((*(_261140_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_261140_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_261140_s))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1aa31e373_StructIns> _26228_ins = _1aa31b9ad_instance((*(_261140_s)));;
		(*(_26228_ins))._field_Checked=true;
		_1aa31bcbb_appendInstance((*(_261140_s)).ptr(), &(_26228_ins));
		_1aa3dd420_precheckStructIns(_self_, &(_26228_ins), nullptr);
	};
	_1aa3dde37_checkStructInsOperators(_self_, (*((*(_261140_s))))._field_Instances[0LL]);
}



inline void _1aa3de3dd_precheckStructTypes(jule::Ptr<_1aa3bb530_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc0d5cd:;
		if (it != expr_end) {
			jule::Ptr<_1aa31b518_Struct> _263215_s = *it;
			{
				_1aa3de1e0_precheckStructType(_self_, &(_263215_s));
			}
			_iter_next_1acc0d5cd:;
			++it;
			goto _iter_begin_1acc0d5cd;
		}
		_iter_end_1acc0d5cd:;
	};
}



inline void _1aa3de696_checkRets(_1aa3bb530_sema* _self_, jule::Ptr<_1aa334597_FnIns>* _263730_f) {
	if (_1aa331a6c_IsVoid((*((*(_263730_f))))._field_Decl.ptr())) {
		return;;
	};
	_1aa3e1ad8_missingRetChecker _26413_mrc = static__1aa3e1ed4_new();;
	jule::Bool _26423_ok = _1aa3e31b1_check(&_26413_mrc, (*((*(_263730_f))))._field_Scope);;
	if ((!(_26423_ok))) {
		_1aa3be434_pushErr(_self_, (*(*((*(_263730_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("missing return at end of function", 33), jule::Slice<jule::Any>());
	};
}



inline void _1aa3dea09_checkFnInsSc(_1aa3bb530_sema* _self_, jule::Ptr<_1aa334597_FnIns>* _264833_f, jule::Ptr<_1aa381160_scopeChecker>* _264849_sc) {
	_1aa3b974d_appendRetVars(&((*((*((*(_264849_sc))))._field_table))._field_Vars), _264833_f);
	_1aa3b9a39_appendParamVars(&((*(*((*(_264849_sc))))._field_table.alloc)._field_Vars), _264833_f);
	_1aa3b9d25_appendGenericTypeAliases(&((*(*((*(_264849_sc))))._field_table.alloc)._field_TypeAliases), _264833_f);
	_1aa392e96_check((*(_264849_sc)), &((*((*((*(_264833_f))))._field_Decl))._field_Scope), &((*((*(_264833_f))))._field_Scope));
	if ((!(_1aa383c67_stopped((*(_264849_sc)).ptr())))) {
		_1aa3de696_checkRets(_self_, _264833_f);
	};
}



inline void _1aa3ded6c_checkFnInsCaller(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa334597_FnIns>* _266138_f, jule::Ptr<_1aa2d51c4_Token> _266153_caller) {
	if ((*((*((*(_266138_f))))._field_Decl))._field_Binded) {
		return;;
	};
	jule::Ptr<_1aa4475cd_SymbolTable> _26667_old = (*((*(*((*(_266138_f))))._field_Decl.alloc)._field_sema))._field_file;;
	__JULE_DEFER({
		_1aa3be016_setCurrentFile((*((*((*(_266138_f))))._field_Decl))._field_sema, _26667_old);
	});;
	jule::Ptr<_1aa4475cd_SymbolTable> _26687_file = _1aa3ba199_findFile(&((*(*((*((*(_266138_f))))._field_Decl))._field_sema.alloc)._field_files), &((*((*(*((*(_266138_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_26687_file != nullptr)) {
		_1aa3be016_setCurrentFile((*((*((*(_266138_f))))._field_Decl))._field_sema, _26687_file);
	};
	jule::Ptr<_1aa381160_scopeChecker> _26737_sc = _1aa375d47_newScopeChecker(&((*(*((*(_266138_f))))._field_Decl.alloc)._field_sema), (*(_266138_f)));;
	(*(_26737_sc))._field_calledFrom=_266153_caller;
	_1aa3dea09_checkFnInsSc(_self_.ptr(), _266138_f, &(_26737_sc));
	if (((*(*((*(_266138_f))))._field_Decl.alloc)._field_sema != _self_)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*((*((*(_266138_f))))._field_Decl))._field_sema.alloc)._field_errors);
		(*(*((*((*(_266138_f))))._field_Decl))._field_sema.alloc)._field_errors=nullptr;
	};
}



inline void _1aa3e0125_checkFnIns(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa334597_FnIns>* _268332_f) {
	_1aa3ded6c_checkFnInsCaller(_self_, _268332_f, nullptr);
}



inline void _1aa3e03cd_checkFunc(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa3315b6_Fn>* _268731_f) {
	if ((*((*(_268731_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_268731_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_268731_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc1ba2b:;
		if (it != expr_end) {
			jule::Ptr<_1aa334597_FnIns> _269715_ins = *it;
			{
				_1aa3e0125_checkFnIns(_self_, &(_269715_ins));
			}
			_iter_next_1acc1ba2b:;
			++it;
			goto _iter_begin_1acc1ba2b;
		}
		_iter_end_1acc1ba2b:;
	};
}



inline void _1aa3e0686_checkTestFn(_1aa3bb530_sema* _self_, jule::Ptr<_1aa334597_FnIns>* _270232_f) {
	if ((*((*((*(_270232_f))))._field_Decl))._field_Public) {
		_1aa3be434_pushErr(_self_, (*(*((*(_270232_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("test function cannot be public", 30), jule::Slice<jule::Any>());
		_1aa3be797_pushSuggestion(_self_, jule::Str::lit("dont use identifier which is starts with capital letter to avoid define as public", 81), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*(*((*(_270232_f))))._field_Decl.alloc)._field_Unsafety || (!(_1aa331a6c_IsVoid((*((*(_270232_f))))._field_Decl)))) || ((*(*((*(_270232_f))))._field_Decl.alloc)._field_Generics.len() != 0LL)) || ((*((*(_270232_f))))._field_Params.len() != 1LL)) || (*((*(*((*(_270232_f))))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable) || (*((*((*((*(_270232_f))))._field_Decl))._field_Params[0LL]))._field_Reference)) {
		_1aa3be434_pushErr(_self_, (*(*((*(_270232_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1aa3be797_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a602728e_Sptr> _27207_sptr = _1a601d087_Sptr((*((*((*(_270232_f))))._field_Params[0LL]))._field_Kind.ptr());;
	if ((_27207_sptr == nullptr)) {
		_1aa3be434_pushErr(_self_, (*(*((*(_270232_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1aa3be797_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aa31e373_StructIns> _27273_s = _1a601e374_Struct((*(_27207_sptr))._field_Elem.ptr());;
	if (((_27273_s == nullptr) || (!(_1aa3a14b0_isStdPackage(&((*((*((*((*(_27273_s))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("testing", 7)))))) {
		_1aa3be434_pushErr(_self_, (*(*((*(_270232_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1aa3be797_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1aa3e093e_precheckFunc(jule::Ptr<_1aa3bb530_sema> _self_, jule::Ptr<_1aa3315b6_Fn>* _273534_f) {
	if ((*((*(_273534_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_273534_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_273534_f))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1aa334597_FnIns> _27468_ins = _1aa332ac3_instanceForce((*(_273534_f)));;
		{ jule::Slice<jule::Ptr<_1aa334597_FnIns>> &__jule_push_dest = (*((*(_273534_f))))._field_Instances; __jule_push_dest.push(_27468_ins); };
		jule::Bool _27484_ok = _1aa3d0621_reloadFnInsTypes(_self_, _27468_ins);;
		(*(_27468_ins))._field_reloaded=true;
		if ((_27484_ok && _1a60367a9_hasDirective(&((*((*(_273534_f))))._field_Directives), jule::Str::lit("test", 4)))) {
			_1aa3e0686_checkTestFn(_self_, &(_27468_ins));
		};
	};
}



inline void _1aa3e0b3c_precheckFuncs(jule::Ptr<_1aa3bb530_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc29ae4:;
		if (it != expr_end) {
			jule::Ptr<_1aa345047_Trait> _275915_decl = *it;
			{
				{
					auto expr = &((*(_275915_decl))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acc2a540:;
					if (it != expr_end) {
						jule::Ptr<_1aa3315b6_Fn> _276016_m = *it;
						{
							_1aa3e093e_precheckFunc(_self_, &(_276016_m));
						}
						_iter_next_1acc2a540:;
						++it;
						goto _iter_begin_1acc2a540;
					}
					_iter_end_1acc2a540:;
				};
			}
			_iter_next_1acc29ae4:;
			++it;
			goto _iter_begin_1acc29ae4;
		}
		_iter_end_1acc29ae4:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc2a8b4:;
		if (it != expr_end) {
			jule::Ptr<_1aa3315b6_Fn> _276415_decl = *it;
			{
				_1aa3e093e_precheckFunc(_self_, &(_276415_decl));
			}
			_iter_next_1acc2a8b4:;
			++it;
			goto _iter_begin_1acc2a8b4;
		}
		_iter_end_1acc2a8b4:;
	};
}



inline void _1aa3e0d3a_checkFuncs(jule::Ptr<_1aa3bb530_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc2bd05:;
		if (it != expr_end) {
			jule::Ptr<_1aa3315b6_Fn> _277115_decl = *it;
			{
				_1aa3e03cd_checkFunc(_self_, &(_277115_decl));
			}
			_iter_next_1acc2bd05:;
			++it;
			goto _iter_begin_1acc2bd05;
		}
		_iter_end_1acc2bd05:;
	};
}



inline void _1aa3e1038_checkPackageTypes(jule::Ptr<_1aa3bb530_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc2cad6:;
		if (it != expr_end) {
			jule::Ptr<_1aa4475cd_SymbolTable> _277915_f = *it;
			{
				_1aa3be016_setCurrentFile(_self_.ptr(), _277915_f);
				_1aa3dba17_checkGlobals(_self_);
				_1aa3e0b3c_precheckFuncs(_self_);
				_1aa3de3dd_precheckStructTypes(_self_);
			}
			_iter_next_1acc2cad6:;
			++it;
			goto _iter_begin_1acc2cad6;
		}
		_iter_end_1acc2cad6:;
	};
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc2e643:;
		if (it != expr_end) {
			jule::Ptr<_1aa4475cd_SymbolTable> _279015_f = *it;
			{
				_1aa3be016_setCurrentFile(_self_, _279015_f);
				_1aa3e0d3a_checkFuncs(_self_);
				_1aa3ddb7e_checkStructTypes(_self_);
			}
			_iter_next_1acc2e643:;
			++it;
			goto _iter_begin_1acc2e643;
		}
		_iter_end_1acc2e643:;
	};
}



inline void _1aa3e1236_setFileSemaFields(jule::Ptr<_1aa3bb530_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc30c0a:;
		if (it != expr_end) {
			jule::Ptr<_1aa3315b6_Fn> _279815_f = *it;
			{
				(*(_279815_f))._field_sema=_self_;
			}
			_iter_next_1acc30c0a:;
			++it;
			goto _iter_begin_1acc30c0a;
		}
		_iter_end_1acc30c0a:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc31865:;
		if (it != expr_end) {
			jule::Ptr<_1aa31b518_Struct> _280115_st = *it;
			{
				(*(_280115_st))._field_sema=_self_;
			}
			_iter_next_1acc31865:;
			++it;
			goto _iter_begin_1acc31865;
		}
		_iter_end_1acc31865:;
	};
}



inline void _1aa3e1434_setSemaFields(jule::Ptr<_1aa3bb530_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc32525:;
		if (it != expr_end) {
			jule::Ptr<_1aa4475cd_SymbolTable> _280715_file = *it;
			{
				_1aa3be016_setCurrentFile(_self_.ptr(), _280715_file);
				_1aa3e1236_setFileSemaFields(_self_);
			}
			_iter_next_1acc32525:;
			++it;
			goto _iter_begin_1acc32525;
		}
		_iter_end_1acc32525:;
	};
}



inline void _1aa3e16dc_check(jule::Ptr<_1aa3bb530_sema> _self_, jule::Slice<jule::Ptr<_1aa4475cd_SymbolTable>>* _281327_files) {
	(*(_self_))._field_files=(*(_281327_files));
	_1aa3e1434_setSemaFields(_self_);
	_1aa3c2da5_checkImports(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1aa3c389a_checkInherits(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1aa3c32a1_implImpls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1aa3c349e_checkEnums(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1aa3daa27_checkPackageDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1aa3e1038_checkPackageTypes(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1aa3bb530_sema _Src) {
	_Stream << "sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags << ", ";
	_Stream << "meta:" << _Src._field_meta;
	_Stream << "}";
	return _Stream;
}



inline _1aa3e1ad8_missingRetChecker static__1aa3e1ed4_new(void) {
	return _1aa3e1ad8_missingRetChecker{._field_breaked=({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_falled=false};;
}



inline jule::Bool _1aa3e22e2_checkConditional(_1aa3e1ad8_missingRetChecker* _self_, jule::Ptr<_1aa3797da_Conditional> _286132_c) {
	{
		auto expr = &((*(_286132_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc37b68:;
		if (it != expr_end) {
			jule::Ptr<_1aa3790c0_If> _286215_elif = *it;
			{
				if ((_286215_elif == nullptr)) {
					return false;;
				};
				if ((!(_1aa3e2d70_checkScope(_self_, (*(_286215_elif))._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1acc37b68:;
			++it;
			goto _iter_begin_1acc37b68;
		}
		_iter_end_1acc37b68:;
	};
	return (((*_286132_c.alloc)._field_Default != nullptr) && _1aa3e2d70_checkScope(_self_, (*(*(_286132_c))._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1aa3e2633_checkMatch(_1aa3e1ad8_missingRetChecker* _self_, jule::Ptr<_1aa37cdb5_Match> _287326_m) {
	{
		auto expr = &((*(_287326_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc39c03:;
		if (it != expr_end) {
			jule::Ptr<_1aa37d8dd_Case> _287415_c = *it;
			{
				if ((_287415_c == nullptr)) {
					return false;;
				};
				jule::I32 _28784_n = (*(_self_))._field_breaked.len();;
				jule::Bool _28794_ok = _1aa3e2d70_checkScope(_self_, (*(_287415_c))._field_Scope);;
				{
					
					if ((_28784_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1acc3b683:;
						{
							return false;;
						}
					}
					else if ((!(_28794_ok))) {
						_case_begin_1acc3b72c:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1acc3b793;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1acc3b793:;
						{
							(*(_self_))._field_falled=false;
							if (((*(_287415_c))._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1acc39c03;
						}
					}
					_match_end_1acc3b5d9:;
				};
			}
			_iter_next_1acc39c03:;
			++it;
			goto _iter_begin_1acc39c03;
		}
		_iter_end_1acc39c03:;
	};
	return (((*_287326_m.alloc)._field_Default != nullptr) && _1aa3e2d70_checkScope(_self_, (*(*(_287326_m))._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1aa3e2a2e_checkInfIter(_1aa3e1ad8_missingRetChecker* _self_, jule::Uintptr _289924_it, jule::Ptr<_1aa378ba2_Scope>* _289942_s) {
	jule::I32 _29003_n = (*(_self_))._field_breaked.len();;
	if (_1aa3e2d70_checkScope(_self_, (*(_289942_s)))) {
		((*(_self_))._field_breaked).mut_slice(0LL, _29003_n);;
		return true;;
	};
	if ((_29003_n != (*(_self_))._field_breaked.len())) {
		{
			auto expr = (*(_self_))._field_breaked.slice(_29003_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1acc3e1e1:;
			if (it != expr_end) {
				jule::Uintptr _290611_addr = *it;
				{
					if ((_289924_it == _290611_addr)) {
						((*(_self_))._field_breaked).mut_slice(0LL, _29003_n);;
						return false;;
					};
				}
				_iter_next_1acc3e1e1:;
				++it;
				goto _iter_begin_1acc3e1e1;
			}
			_iter_end_1acc3e1e1:;
		};
		((*(_self_))._field_breaked).mut_slice(0LL, _29003_n);;
	};
	return true;;
}



inline jule::Bool _1aa3e2d70_checkScope(_1aa3e1ad8_missingRetChecker* _self_, jule::Ptr<_1aa378ba2_Scope> _291726_s) {
	if ((_291726_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &((*(_291726_s))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc41666:;
		if (it != expr_end) {
			jule::Any _292115_st = *it;
			{
				{
					auto &_match_expr{ _292115_st };
					
					if (_match_expr.type == &__jule_any_type56) {
						_case_begin_1acc42315:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type57) {
						_case_begin_1acc420e5:;
						{
							jule::Uintptr _29275_addr = (*(_292115_st.unsafe_cast_ptr<_1aa37b248_BreakSt>()))._field_It;;
							if ((_29275_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_29275_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1acc4238c:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type43) {
						_case_begin_1acc42414:;
						{
							jule::Ptr<_1aa379ad7_InfIter> _29359_ii = _292115_st.unsafe_cast_ptr<_1aa379ad7_InfIter>();;
							if (_1aa3e2a2e_checkInfIter(_self_, static_cast<jule::Uintptr>(_29359_ii), &((*(_29359_ii))._field_Scope))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type45) {
						_case_begin_1acc4248b:;
						{
							jule::Ptr<_1aa37a08d_WhileIter> _29409_wn = _292115_st.unsafe_cast_ptr<_1aa37a08d_WhileIter>();;
							if ((_1aa37a434_IsWhileNext(_29409_wn.ptr()) && ((*_29409_wn.alloc)._field_Expr == nullptr))) {
								if (_1aa3e2a2e_checkInfIter(_self_, static_cast<jule::Uintptr>(_29409_wn), &((*_29409_wn.alloc)._field_Scope))) {
									return true;;
								};
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type58) {
						_case_begin_1acc42513:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type29) {
						_case_begin_1acc4258a:;
						{
							if (_1aa3e2d70_checkScope(_self_, _292115_st.cast_ptr<_1aa378ba2_Scope>(&__jule_any_type29))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type31) {
						_case_begin_1acc42612:;
						{
							{
								auto &_match_expr{ (*(_292115_st.cast_ptr<_1aa44cc98_Data>(&__jule_any_type31)))._field_Model };
								
								if (_match_expr.type == &__jule_any_type36 || _match_expr.type == &__jule_any_type30) {
									_case_begin_1acc485a2:;
									{
										return true;;
									}
								}
								_match_end_1acc4853b:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type42) {
						_case_begin_1acc42689:;
						{
							if (_1aa3e22e2_checkConditional(_self_, _292115_st.cast_ptr<_1aa3797da_Conditional>(&__jule_any_type42))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type55) {
						_case_begin_1acc42711:;
						{
							if (_1aa3e2633_checkMatch(_self_, _292115_st.cast_ptr<_1aa37cdb5_Match>(&__jule_any_type55))) {
								return true;;
							};
						}
					}
					_match_end_1acc4216c:;
				};
			}
			_iter_next_1acc41666:;
			++it;
			goto _iter_begin_1acc41666;
		}
		_iter_end_1acc41666:;
	};
	return false;;
}



inline jule::Bool _1aa3e31b1_check(_1aa3e1ad8_missingRetChecker* _self_, jule::Ptr<_1aa378ba2_Scope> _297221_s) {
	return _1aa3e2d70_checkScope(_self_, _297221_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa3e1ad8_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aa3e524b_IsInitialized(_1aa3e4d3e_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1aa3e54d2_IsTypeInferred(_1aa3e4d3e_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*((*(_self_))._field_Kind))._field_Decl == nullptr));;
}



inline jule::Bool _1aa3e5768_untypedConstant(_1aa3e4d3e_Var* _self_) {
	return (_1aa3e54d2_IsTypeInferred(_self_) && (*((*((*(_self_))._field_Value))._field_Data))._field_untyped);;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa3e4d3e_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1aa3e6439_Dispose(jule::Ptr<_1aa3315b6_Fn> _1020_f) {
	return ((((((((((_1020_f != nullptr) && ((*_1020_f.alloc)._field_Owner != nullptr)) && (*(_1020_f))._field_Ident.equal("Dispose", 7)) && (!((*_1020_f.alloc)._field_Statically))) && (!((*_1020_f.alloc)._field_Unsafety))) && _1aa331a6c_IsVoid(_1020_f)) && ((*_1020_f.alloc)._field_Generics.len() == 0LL)) && ((*_1020_f.alloc)._field_Params.len() == 1LL)) && (*((*(_1020_f))._field_Params[0LL]))._field_Mutable) && (!(_1aa3304c7_IsRef((*(_1020_f))._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1aa3e6703_Str(jule::Ptr<_1aa3315b6_Fn> _2416_f) {
	if (((((((((((_2416_f == nullptr) || ((*(_2416_f))._field_Owner == nullptr)) || (!(*(_2416_f))._field_Ident.equal("Str", 3))) || (*(_2416_f))._field_Statically) || (*(_2416_f))._field_Unsafety) || _1aa331a6c_IsVoid(_2416_f.ptr())) || ((*(_2416_f))._field_Generics.len() != 0LL)) || ((*(_2416_f))._field_Params.len() != 1LL)) || (*((*(_2416_f))._field_Params[0LL]))._field_Mutable) || _1aa3304c7_IsRef((*(_2416_f))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1aa334597_FnIns> _387_ins = (*(_2416_f))._field_Instances[0LL];;
	jule::Ptr<_1a6023763_Prim> _393_prim = _1a601cd01_Prim((*(_387_ins))._field_Result.ptr());;
	if ((_393_prim == nullptr)) {
		return false;;
	};
	return _1a6026c2d_IsStr(_393_prim.ptr());;
}



inline jule::Bool static__1aa3e6a77_logical(jule::Ptr<_1aa3315b6_Fn>* _4621_f, jule::Str _4629_ident) {
	if (((((((((((((((*(_4621_f)) == nullptr) || ((*((*(_4621_f))))._field_Ident != _4629_ident)) || ((*((*(_4621_f))))._field_Owner == nullptr)) || ((*((*(_4621_f))))._field_Instances.len() == 0LL)) || (*((*(_4621_f))))._field_Statically) || (*((*(_4621_f))))._field_Unsafety) || _1aa331a6c_IsVoid((*(_4621_f)).ptr())) || ((*((*(_4621_f))))._field_Generics.len() != 0LL)) || ((*((*(_4621_f))))._field_Params.len() != 2LL)) || (*((*((*(_4621_f))))._field_Params[0LL]))._field_Mutable) || _1aa3304c7_IsRef((*((*(_4621_f))))._field_Params[0LL].ptr())) || (*((*((*(_4621_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_4621_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1aa334597_FnIns> _637_ins = (*((*(_4621_f))))._field_Instances[0LL];;
	jule::Ptr<_1a6023763_Prim> _643_prim = _1a601cd01_Prim((*(_637_ins))._field_Result.ptr());;
	if (((_643_prim == nullptr) || (!(_1a6026997_IsBool(_643_prim.ptr()))))) {
		return false;;
	};
	return ((*_637_ins.alloc)._field_Owner == _1a601e374_Struct((*((*_637_ins.alloc)._field_Params[1LL]))._field_Kind.ptr()));;
}



inline jule::Bool static__1aa3e6d41_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _7215_f) {
	return static__1aa3e6a77_logical(&(_7215_f), jule::Str::lit("Eq", 2));;
}



inline jule::Bool static__1aa3e710a_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _7715_f) {
	return static__1aa3e6a77_logical(&(_7715_f), jule::Str::lit("Gt", 2));;
}



inline jule::Bool static__1aa3e73c4_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _8217_f) {
	return static__1aa3e6a77_logical(&(_8217_f), jule::Str::lit("GtEq", 4));;
}



inline jule::Bool static__1aa3e768d_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _8715_f) {
	return static__1aa3e6a77_logical(&(_8715_f), jule::Str::lit("Lt", 2));;
}



inline jule::Bool static__1aa3e7957_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _9217_f) {
	return static__1aa3e6a77_logical(&(_9217_f), jule::Str::lit("LtEq", 4));;
}



inline jule::Bool static__1aa3e7ccb_result(jule::Ptr<_1aa3315b6_Fn>* _9620_f, jule::Str _9628_ident) {
	if (((((((((((((((*(_9620_f)) == nullptr) || ((*((*(_9620_f))))._field_Ident != _9628_ident)) || ((*((*(_9620_f))))._field_Owner == nullptr)) || ((*((*(_9620_f))))._field_Instances.len() == 0LL)) || (*((*(_9620_f))))._field_Statically) || (*((*(_9620_f))))._field_Unsafety) || _1aa331a6c_IsVoid((*(_9620_f)).ptr())) || ((*((*(_9620_f))))._field_Generics.len() != 0LL)) || ((*((*(_9620_f))))._field_Params.len() != 2LL)) || (*((*((*(_9620_f))))._field_Params[0LL]))._field_Mutable) || _1aa3304c7_IsRef((*((*(_9620_f))))._field_Params[0LL].ptr())) || (*((*((*(_9620_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_9620_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1aa334597_FnIns> _1137_ins = (*((*(_9620_f))))._field_Instances[0LL];;
	return (_1a601e374_Struct((*(_1137_ins))._field_Result.ptr()) == (*_1137_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1aa3e8095_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _11816_f) {
	return static__1aa3e7ccb_result(&(_11816_f), jule::Str::lit("Shl", 3));;
}



inline jule::Bool static__1aa3e835e_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _12316_f) {
	return static__1aa3e7ccb_result(&(_12316_f), jule::Str::lit("Shr", 3));;
}



inline jule::Bool static__1aa3e8628_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _12816_f) {
	return static__1aa3e7ccb_result(&(_12816_f), jule::Str::lit("Add", 3));;
}



inline jule::Bool static__1aa3e88e2_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _13316_f) {
	return static__1aa3e7ccb_result(&(_13316_f), jule::Str::lit("Sub", 3));;
}



inline jule::Bool static__1aa3e8bab_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _13816_f) {
	return static__1aa3e7ccb_result(&(_13816_f), jule::Str::lit("Div", 3));;
}



inline jule::Bool static__1aa3e8e75_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _14316_f) {
	return static__1aa3e7ccb_result(&(_14316_f), jule::Str::lit("Mul", 3));;
}



inline jule::Bool static__1aa3e923e_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _14816_f) {
	return static__1aa3e7ccb_result(&(_14816_f), jule::Str::lit("Mod", 3));;
}



inline jule::Bool static__1aa3e9508_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _15319_f) {
	return static__1aa3e7ccb_result(&(_15319_f), jule::Str::lit("BitAnd", 6));;
}



inline jule::Bool static__1aa3e97c2_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _15818_f) {
	return static__1aa3e7ccb_result(&(_15818_f), jule::Str::lit("BitOr", 5));;
}



inline jule::Bool static__1aa3e9a8b_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _16319_f) {
	return static__1aa3e7ccb_result(&(_16319_f), jule::Str::lit("BitXor", 6));;
}



inline jule::Bool static__1aa3e9e10_unary(jule::Ptr<_1aa3315b6_Fn>* _16719_f, jule::Str _16727_ident) {
	if (((((((((((((*(_16719_f)) == nullptr) || ((*((*(_16719_f))))._field_Ident != _16727_ident)) || ((*((*(_16719_f))))._field_Owner == nullptr)) || ((*((*(_16719_f))))._field_Instances.len() == 0LL)) || (*((*(_16719_f))))._field_Statically) || (*((*(_16719_f))))._field_Unsafety) || _1aa331a6c_IsVoid((*(_16719_f)).ptr())) || ((*((*(_16719_f))))._field_Generics.len() != 0LL)) || ((*((*(_16719_f))))._field_Params.len() != 1LL)) || (*((*((*(_16719_f))))._field_Params[0LL]))._field_Mutable) || _1aa3304c7_IsRef((*((*(_16719_f))))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1aa334597_FnIns> _1827_ins = (*((*(_16719_f))))._field_Instances[0LL];;
	return (_1a601e374_Struct((*(_1827_ins))._field_Result.ptr()) == (*_1827_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1aa3ea1c9_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _18716_f) {
	return static__1aa3e9e10_unary(&(_18716_f), jule::Str::lit("Neg", 3));;
}



inline jule::Bool static__1aa3ea493_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _19216_f) {
	return static__1aa3e9e10_unary(&(_19216_f), jule::Str::lit("Pos", 3));;
}



inline jule::Bool static__1aa3ea75c_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _19719_f) {
	return static__1aa3e9e10_unary(&(_19719_f), jule::Str::lit("BitNot", 6));;
}



inline jule::Bool static__1aa3eaad1_assign(jule::Ptr<_1aa3315b6_Fn>* _20120_f, jule::Str _20128_ident) {
	if (((((((((((((((*(_20120_f)) == nullptr) || ((*((*(_20120_f))))._field_Ident != _20128_ident)) || ((*((*(_20120_f))))._field_Owner == nullptr)) || ((*((*(_20120_f))))._field_Instances.len() == 0LL)) || (*((*(_20120_f))))._field_Statically) || (*((*(_20120_f))))._field_Unsafety) || (!(_1aa331a6c_IsVoid((*(_20120_f)).ptr())))) || ((*((*(_20120_f))))._field_Generics.len() != 0LL)) || ((*((*(_20120_f))))._field_Params.len() != 2LL)) || (!((*((*((*(_20120_f))))._field_Params[0LL]))._field_Mutable))) || _1aa3304c7_IsRef((*((*(_20120_f))))._field_Params[0LL].ptr())) || (*((*((*(_20120_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_20120_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1aa3ead9a_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _22122_f) {
	return static__1aa3eaad1_assign(&(_22122_f), jule::Str::lit("AddAssign", 9));;
}



inline jule::Bool static__1aa3eb164_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _22622_f) {
	return static__1aa3eaad1_assign(&(_22622_f), jule::Str::lit("SubAssign", 9));;
}



inline jule::Bool static__1aa3eb42d_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _23122_f) {
	return static__1aa3eaad1_assign(&(_23122_f), jule::Str::lit("DivAssign", 9));;
}



inline jule::Bool static__1aa3eb6e7_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _23622_f) {
	return static__1aa3eaad1_assign(&(_23622_f), jule::Str::lit("MulAssign", 9));;
}



inline jule::Bool static__1aa3eb9b1_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _24122_f) {
	return static__1aa3eaad1_assign(&(_24122_f), jule::Str::lit("ModAssign", 9));;
}



inline jule::Bool static__1aa3ebc7a_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _24622_f) {
	return static__1aa3eaad1_assign(&(_24622_f), jule::Str::lit("ShlAssign", 9));;
}



inline jule::Bool static__1aa3ec044_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _25122_f) {
	return static__1aa3eaad1_assign(&(_25122_f), jule::Str::lit("ShrAssign", 9));;
}



inline jule::Bool static__1aa3ec30d_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _25624_f) {
	return static__1aa3eaad1_assign(&(_25624_f), jule::Str::lit("BitOrAssign", 11));;
}



inline jule::Bool static__1aa3ec5c7_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _26125_f) {
	return static__1aa3eaad1_assign(&(_26125_f), jule::Str::lit("BitAndAssign", 12));;
}



inline jule::Bool static__1aa3ec891_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn> _26625_f) {
	return static__1aa3eaad1_assign(&(_26625_f), jule::Str::lit("BitXorAssign", 12));;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa3e5dc8_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa43460e_typeCompatibilityChecker_eq(_1aa43460e_typeCompatibilityChecker *_self_, _1aa43460e_typeCompatibilityChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_dest == _self_->_field_dest) &&
		(_self_->_field_src == _self_->_field_src) &&
		(_self_->_field_errorToken == _self_->_field_errorToken);
}

inline void _1aa434b3c_pushErr(_1aa43460e_typeCompatibilityChecker* _self_, jule::Str _11923_fmt, jule::Slice<jule::Any> _11936_args) {
	_1aa3be434_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11923_fmt, _11936_args);
}



inline jule::Bool _1aa434dc3_checkTrait(_1aa43460e_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1a601b77d_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1aa345047_Trait> _1277_trt = _1a601e60a_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _1287_ref = false;;
	{
		
		if ((_1a601d087_Sptr((*(_self_))._field_src) != nullptr)) {
			_case_begin_1bc7244e1:;
			{
				_1287_ref=true;
				(*(_self_))._field_src=(*(_1a601d087_Sptr((*(_self_))._field_src)))._field_Elem;
				if ((_1a601e374_Struct((*(_self_))._field_src) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1bc72458a;
			}
		}
		else if ((_1a601e374_Struct((*(_self_))._field_src) != nullptr)) {
			_case_begin_1bc72458a:;
			{
				jule::Ptr<_1aa31e373_StructIns> _1384_s = _1a601e374_Struct((*(_self_))._field_src);;
				if ((!(_1aa31cb8a_IsImplements((*(_1384_s))._field_Decl.ptr(), _1277_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_1287_ref)) && _1aa4331ce_traitHasReferenceReceiver(&(_1277_trt)))) {
					_1aa434b3c_pushErr(_self_, jule::Str::lit("trait has reference receiver parameter used method, cannot assign non-reference instance", 88), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a601e60a_Trait((*(_self_))._field_src) != nullptr)) {
			_case_begin_1bc724612:;
			{
				jule::Ptr<_1aa345047_Trait> _1488_base = _1a601e60a_Trait((*(_self_))._field_src);;
				if ((_1277_trt == _1488_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_1bc7290d9:;
				{
					auto expr = &((*(_1488_base))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc72978d:;
					if (it != expr_end) {
						jule::Ptr<_1aa31b518_Struct> _15311_s1 = *it;
						{
							{
								auto expr = &((*(_1277_trt))._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bc72a173:;
								if (it != expr_end) {
									jule::Ptr<_1aa31b518_Struct> _15412_s2 = *it;
									{
										if ((_15311_s1 == _15412_s2)) {
											goto _iter_next_1bc72978d;
										};
									}
									_iter_next_1bc72a173:;
									++it;
									goto _iter_begin_1bc72a173;
								}
								_iter_end_1bc72a173:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1bc72978d:;
						++it;
						goto _iter_begin_1bc72978d;
					}
					_iter_end_1bc72978d:;
				};
				{
					auto expr = &((*_1277_trt.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc72a53b:;
					if (it != expr_end) {
						jule::Ptr<_1aa3315b6_Fn> _16116_m1 = *it;
						{
							jule::Ptr<_1aa3315b6_Fn> _1629_m2 = _1aa345c29_FindMethod(_1488_base, (*(_16116_m1))._field_Ident);;
							if ((_1629_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1aa334597_FnIns> _1665_m1k = _1aa3cdcc3_getTraitCheckFnKind((*(_self_))._field_s, &(_16116_m1));;
							jule::Ptr<_1aa334597_FnIns> _1675_m2k = _1aa3cdcc3_getTraitCheckFnKind((*(_self_))._field_s, &(_1629_m2));;
							if ((!(_1aa335543_equalTrait(_1665_m1k, &(_1675_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1bc72a53b:;
						++it;
						goto _iter_begin_1bc72a53b;
					}
					_iter_end_1bc72a53b:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1bc724469:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1bc7243d1:;
	};
}



inline jule::Bool _1aa435159_checkPtr(_1aa43460e_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1a601b77d_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a602aa56_Ptr> _1827_dest = _1a601d31d_Ptr((*(_self_))._field_dest.ptr());;
	if (_1a602b5c3_IsUnsafe(_1827_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1a601ad87_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1aa4353e0_checkPrim(_1aa43460e_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*((*(_self_))._field_dest))._field_Variadic))) {
		jule::Ptr<_1a6023763_Prim> _1914_prim = _1a601cd01_Prim((*(_self_))._field_dest);;
		if (((_1914_prim != nullptr) && _1a6026eb4_IsAny(_1914_prim))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1a601ad87_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1aa4357db_typeEnum(_1aa43460e_typeCompatibilityChecker* _self_, jule::Ptr<_1aa348e5d_TypeEnum>* _19925_e, jule::Ptr<_1a601a64a_TypeKind>* _19944_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_19925_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc732433:;
		if (it != expr_end) {
			jule::Ptr<_1aa348886_TypeEnumItem> _20015_item = *it;
			{
				if (_1a601ad87_Equal((*((*(_20015_item))._field_Kind))._field_Kind, (*(_19944_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1aa348e5d_TypeEnum> _2048_ke = _1a601d83a_TypeEnum((*((*(_20015_item))._field_Kind))._field_Kind);;
				if ((_2048_ke == nullptr)) {
					goto _iter_next_1bc732433;
				};
				if (_1aa4357db_typeEnum(_self_, &(_2048_ke), _19944_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1bc732433:;
			++it;
			goto _iter_begin_1bc732433;
		}
		_iter_end_1bc732433:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1aa435a72_checkTypeEnum(_1aa43460e_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1a601ad87_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1aa348e5d_TypeEnum> _2197_e = _1a601d83a_TypeEnum((*(_self_))._field_dest);;
	__jule_func_result = _1aa4357db_typeEnum(_self_, &(_2197_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1aa435d08_check(_1aa43460e_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1a601d31d_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1aa435159_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1a601c54d_NilCompatible((*(_self_))._field_dest)) {
		if (_1a601b77d_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1a601cd01_Prim((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1bc737b86:;
			{
				__jule_func_result = _1aa4353e0_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1a601d83a_TypeEnum((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1bc737c1e:;
			{
				__jule_func_result = _1aa435a72_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1a601e60a_Trait((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1bc737647:;
			{
				__jule_func_result = _1aa434dc3_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1bc73726d:;
			{
				__jule_func_result = _1a601ad87_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1bc736811:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1aa43460e_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa4363ad_assignTypeChecker_eq(_1aa4363ad_assignTypeChecker *_self_, _1aa4363ad_assignTypeChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_dest == _self_->_field_dest) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_errorToken == _self_->_field_errorToken);
}

inline void _1aa436875_pushErr(_1aa4363ad_assignTypeChecker* _self_, jule::Str _25523_fmt, jule::Slice<jule::Any> _25536_args) {
	_1aa3be434_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25523_fmt, _25536_args);
}



inline jule::Bool _1aa436b0b_checkValidity(_1aa4363ad_assignTypeChecker* _self_) {
	jule::Bool _2607_valid = true;;
	{
		
		if ((_1a601e0dd_Fn((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc73a947:;
			{
				jule::Ptr<_1aa334597_FnIns> _2634_f = _1a601e0dd_Fn((*((*(_self_))._field_d))._field_Kind);;
				{
					
					if (_1aa335a60_IsBuiltin(_2634_f.ptr())) {
						_case_begin_1bc73c295:;
						{
							_1aa436875_pushErr(_self_, jule::Str::lit("builtin define cannot use as anonymous function", 47), jule::Slice<jule::Any>());
							_2607_valid=false;
						}
					}
					else if ((*((*(_2634_f))._field_Decl))._field_Binded) {
						_case_begin_1bc73c33e:;
						{
							_1aa436875_pushErr(_self_, jule::Str::lit("binded functions cannot use as anonymous function", 49), jule::Slice<jule::Any>());
							_2607_valid=false;
						}
					}
					else if (((!((*((*(_2634_f))._field_Decl))._field_Statically)) && _1aa331d03_IsMethod((*(_2634_f))._field_Decl))) {
						_case_begin_1bc73c3a5:;
						{
							_1aa436875_pushErr(_self_, jule::Str::lit("non-static methods cannot use as anonymous function", 51), jule::Slice<jule::Any>());
							_2607_valid=false;
						}
					}
					else if ((((*((*(_2634_f))._field_Decl))._field_Generics.len() > 0LL) && ((*_2634_f.alloc)._field_Generics.len() == 0LL))) {
						_case_begin_1bc73c41b:;
						{
							_1aa436875_pushErr(_self_, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
							_1aa3be797_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("instantiate generic function to use as anonymous function", 57), jule::Slice<jule::Any>());
							_2607_valid=false;
						}
					}
					_match_end_1bc73c1b8:;
				};
			}
		}
		else if ((_1a601eb27_Tup((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc73a9e1:;
			{
				_1aa436875_pushErr(_self_, jule::Str::lit("tuples cannot assign to single define in same time", 50), jule::Slice<jule::Any>());
				_2607_valid=false;
			}
		}
		_match_end_1bc73a8c0:;
	};
	return _2607_valid;;
}



inline jule::Bool _1aa436d92_checkConst(_1aa4363ad_assignTypeChecker* _self_) {
	if (((!((*((*(_self_))._field_d))._field_untyped)) || (_1a601cd01_Prim((*(_self_))._field_dest.ptr()) == nullptr))) {
		return false;;
	};
	jule::Str _2923_kind = (*(_1a601cd01_Prim((*(_self_))._field_dest)))._field_Kind;;
	{
		
		if (_1a6e76ce2_IsFloat(_2923_kind)) {
			_case_begin_1bc74339a:;
			{
				if ((!(_1aa433564_floatAssignable(&(_2923_kind), &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2923_kind;
			}
		}
		else if (_1a6e769a1_IsInt(_2923_kind)) {
			_case_begin_1bc743433:;
			{
				if ((!(_1aa434125_intAssignable(_2923_kind, &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2923_kind;
			}
		}
		else {
			_case_begin_1bc743334:;
			{
				return false;;
			}
		}
		_match_end_1bc743202:;
	};
	return true;;
}



inline jule::Bool _1aa437128_checkCompatibility(_1aa4363ad_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1bc745666:;
			{
				return false;;
			}
		}
		else if ((!(_1aa436b0b_checkValidity(_self_)))) {
			_case_begin_1bc7456cc:;
			{
				return false;;
			}
		}
		else if (_1aa436d92_checkConst(_self_)) {
			_case_begin_1bc745743:;
			{
				return true;;
			}
		}
		else if ((_1a601d5a4_Enum((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc7457a9:;
			{
				jule::Ptr<_1a601a64a_TypeKind> _3218_dkind = (*(_self_))._field_dest;;
				if ((_1a601d5a4_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_3218_dkind=(*((*(_1a601d5a4_Enum((*(_self_))._field_dest)))._field_Kind))._field_Kind;
				};
				jule::Ptr<_1a6023763_Prim> _3254_prim = _1a601cd01_Prim((*(_self_))._field_dest);;
				if (((_3254_prim == nullptr) || _1a6026eb4_IsAny(_3254_prim.ptr()))) {
					goto _match_end_1bc7449a6;
				};
				jule::Ptr<_1a601a64a_TypeKind> _3308_dest = (*(*(_1a601d5a4_Enum((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Kind.alloc)._field_Kind;;
				return _1aa3cc70b_checkTypeCompatibility((*(_self_))._field_s, &(_3308_dest), &(_3218_dkind), &((*(_self_))._field_errorToken));;
			}
		}
		_match_end_1bc7449a6:;
	};
	return _1aa3cd0d0_checkTypeCompatibility1((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1aa4373ae_check(_1aa4363ad_assignTypeChecker* _self_) {
	jule::Bool _3373_ok = _1aa437128_checkCompatibility(_self_);;
	if ((_3373_ok && (!((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic)))) {
		_1a6038190_applyImplicitCast(&((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));
	};
	return _3373_ok;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa4363ad_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1bc75eac0_annotateConstraintElem(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _35746_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1bc7612db:;
			{
				jule::Ptr<_1a601a64a_TypeKind> _36012_elem = nullptr;;
				{
					
{
						_case_begin_1bc762100:;
						{
							_36012_elem=(*(_1a601dac1_Arr((*(_35746_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1bc762045:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1aa2ec94a_ArrTypeDecl>()))._field_Elem;
				return _1aa4394c1_annotateConstraint(_self_, &(_36012_elem));;
			}
		}
		_match_end_1bc761275:;
	};
	return false;;
}

inline jule::Bool _1bc75e471_annotateConstraintElem(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _35746_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1bc764cc3:;
			{
				jule::Ptr<_1a601a64a_TypeKind> _36012_elem = nullptr;;
				{
					
{
						_case_begin_1bc765950:;
						{
							_36012_elem=(*(_1a601dd57_Slc((*(_35746_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1bc765a2c:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1aa2ebaae_SlcTypeDecl>()))._field_Elem;
				return _1aa4394c1_annotateConstraint(_self_, &(_36012_elem));;
			}
		}
		_match_end_1bc764c5c:;
	};
	return false;;
}

inline jule::Bool _1bc7643ee_annotateConstraintElem(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _35746_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1bc768876:;
			{
				jule::Ptr<_1a601a64a_TypeKind> _36012_elem = nullptr;;
				{
					
{
						_case_begin_1bc769723:;
						{
							_36012_elem=(*(_1a601d31d_Ptr((*(_35746_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1bc7695d0:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1aa2ec1a8_PtrTypeDecl>()))._field_Elem;
				return _1aa4394c1_annotateConstraint(_self_, &(_36012_elem));;
			}
		}
		_match_end_1bc768810:;
	};
	return false;;
}

inline jule::Bool _1bc768029_annotateConstraintElem(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _35746_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1bc76bec8:;
			{
				jule::Ptr<_1a601a64a_TypeKind> _36012_elem = nullptr;;
				{
					
{
						_case_begin_1bc76cdec:;
						{
							_36012_elem=(*(_1a601d087_Sptr((*(_35746_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1bc76cc32:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1aa2eb729_SptrTypeDecl>()))._field_Elem;
				return _1aa4394c1_annotateConstraint(_self_, &(_36012_elem));;
			}
		}
		_match_end_1bc76be62:;
	};
	return false;;
}



inline jule::Bool _1aa4386ac_annotateConstraintMap(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _37742_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1bc74ca58:;
			{
				jule::Ptr<_1a6029406_Map> _3808_m = _1a601e891_Map((*(_37742_k)).ptr());;
				jule::Ptr<_1aa2ed198_MapTypeDecl> _3818_m2 = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1aa2ed198_MapTypeDecl>();;
				(*(_self_))._field_c=(*(_3818_m2))._field_Key;
				if ((!(_1aa4394c1_annotateConstraint(_self_, &((*(_3808_m))._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=(*_3818_m2.alloc)._field_Val;
				__jule_func_result = _1aa4394c1_annotateConstraint(_self_, &((*_3808_m.alloc)._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1bc74c9e2:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1aa4389ed_annotateConstraintTup(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _39242_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1bc75096d:;
			{
				jule::Ptr<_1aa2ebdab_TupleTypeDecl> _3958_tup = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1aa2ebdab_TupleTypeDecl>();;
				jule::Ptr<_1a6028856_Tuple> _3968_tup2 = _1a601eb27_Tup((*(_39242_k)).ptr());;
				{
					auto expr = &((*(_3968_tup2))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc752288:;
					if (it != expr_end) {
						jule::Ptr<_1a601a64a_TypeKind> _39716_t2 = *it;
						{
							{
								auto expr = &((*(_3958_tup))._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bc752be5:;
								if (it != expr_end) {
									jule::Ptr<_1aa2ea67e_TypeDecl> _39817_t = *it;
									{
										(*(_self_))._field_c=_39817_t;
										if (_1aa4394c1_annotateConstraint(_self_, &(_39716_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1bc752be5:;
									++it;
									goto _iter_begin_1bc752be5;
								}
								_iter_end_1bc752be5:;
							};
						}
						_iter_next_1bc752288:;
						++it;
						goto _iter_begin_1bc752288;
					}
					_iter_end_1bc752288:;
				};
			}
		}
		_match_end_1bc750907:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1aa438d3e_annotateConstraintFn(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _40941_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1bc7531ce:;
			{
				jule::Ptr<_1aa30c33e_FnDecl> _4128_pf = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1aa30c33e_FnDecl>();;
				jule::Ptr<_1aa334597_FnIns> _4138_f = _1a601e0dd_Fn((*(_40941_k)).ptr());;
				{
					auto expr = &((*(_4138_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc7551ae:;
					if (it != expr_end) {
						jule::I32 _4149_i = it - expr->begin();
						jule::Ptr<_1aa33351e_ParamIns> _41416_fp = *it;
						{
							(*(_self_))._field_c=(*((*(_4128_pf))._field_Params[_4149_i]))._field_Kind;
							if (_1aa4394c1_annotateConstraint(_self_, &((*(_41416_fp))._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1bc7551ae:;
						++it;
						_4149_i++;
						goto _iter_begin_1bc7551ae;
					}
					_iter_end_1bc7551ae:;
				};
				if (((*_4128_pf.alloc)._field_Result != nullptr)) {
					(*(_self_))._field_c=(*(*(_4128_pf))._field_Result.alloc)._field_Kind;
					if (_1aa4394c1_annotateConstraint(_self_, &((*_4138_f.alloc)._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1bc753179:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1aa439180_annotateConstraintIdent(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _43044_k) {
	jule::Ptr<_1aa2eac89_IdentTypeDecl> _4317_ident = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1aa2eac89_IdentTypeDecl>(&__jule_any_type78);;
	jule::Ptr<_1aa31e373_StructIns> _4327_s = _1a601e374_Struct((*(_43044_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc758b30:;
		if (it != expr_end) {
			jule::I32 _4337_i = it - expr->begin();
			jule::Ptr<_1aa307889_GenericDecl> _43310_g = *it;
			{
				if (((*(_43310_g))._field_Ident == (*(_4317_ident))._field_Ident)) {
					jule::Ptr<_1a6018c64_InsGeneric> _4359_fg = (*((*(_self_))._field_f))._field_Generics[_4337_i];;
					if ((_4359_fg != nullptr)) {
						return false;;
					};
					_1aa439834_pushGeneric(_self_, _43044_k, _4337_i);
					return true;;
				};
				if ((_4327_s == nullptr)) {
					goto _iter_next_1bc758b30;
				};
				jule::Ptr<_1aa2ea67e_TypeDecl> _4458_c = (*(_self_))._field_c;;
				{
					auto expr = &((*_4317_ident.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc75b6b0:;
					if (it != expr_end) {
						jule::Ptr<_1aa2ea67e_TypeDecl> _44616_ig = *it;
						{
							(*(_self_))._field_c=_44616_ig;
							{
								auto expr = &((*(_4327_s))._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bc75c282:;
								if (it != expr_end) {
									jule::Ptr<_1a6018c64_InsGeneric> _44817_sg = *it;
									{
										if (_1aa4394c1_annotateConstraint(_self_, &((*(_44817_sg))._field_Kind))) {
											return true;;
										};
									}
									_iter_next_1bc75c282:;
									++it;
									goto _iter_begin_1bc75c282;
								}
								_iter_end_1bc75c282:;
							};
						}
						_iter_next_1bc75b6b0:;
						++it;
						goto _iter_begin_1bc75b6b0;
					}
					_iter_end_1bc75b6b0:;
				};
				(*(_self_))._field_c=_4458_c;
			}
			_iter_next_1bc758b30:;
			++it;
			_4337_i++;
			goto _iter_begin_1bc758b30;
		}
		_iter_end_1bc758b30:;
	};
	return false;;
}



inline jule::Bool _1aa4394c1_annotateConstraint(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _45939_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1bc75c705:;
			{
				return _1aa439180_annotateConstraintIdent(_self_, _45939_k);;
			}
		}
		_match_end_1bc75c68e:;
	};
	{
		
		if ((_1a601dac1_Arr((*(_45939_k)).ptr()) != nullptr)) {
			_case_begin_1bc75d3c6:;
			{
				return _1bc75eac0_annotateConstraintElem(_self_, _45939_k);;
			}
		}
		else if ((_1a601dd57_Slc((*(_45939_k)).ptr()) != nullptr)) {
			_case_begin_1bc75d43c:;
			{
				return _1bc75e471_annotateConstraintElem(_self_, _45939_k);;
			}
		}
		else if ((_1a601d31d_Ptr((*(_45939_k)).ptr()) != nullptr)) {
			_case_begin_1bc75d4a3:;
			{
				return _1bc7643ee_annotateConstraintElem(_self_, _45939_k);;
			}
		}
		else if ((_1a601d087_Sptr((*(_45939_k)).ptr()) != nullptr)) {
			_case_begin_1bc75d519:;
			{
				return _1bc768029_annotateConstraintElem(_self_, _45939_k);;
			}
		}
		else if ((_1a601e891_Map((*(_45939_k)).ptr()) != nullptr)) {
			_case_begin_1bc75d580:;
			{
				return _1aa4386ac_annotateConstraintMap(_self_, _45939_k);;
			}
		}
		else if ((_1a601e0dd_Fn((*(_45939_k)).ptr()) != nullptr)) {
			_case_begin_1bc75db68:;
			{
				return _1aa438d3e_annotateConstraintFn(_self_, _45939_k);;
			}
		}
		else if ((_1a601eb27_Tup((*(_45939_k)).ptr()) != nullptr)) {
			_case_begin_1bc75dbce:;
			{
				return _1aa4389ed_annotateConstraintTup(_self_, _45939_k);;
			}
		}
		else {
			_case_begin_1bc75d728:;
			{
				return false;;
			}
		}
		_match_end_1bc75d6c3:;
	};
}



inline void _1aa439834_pushGeneric(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _48432_k, jule::I32 _48446_i) {
	(*((*(_self_))._field_f))._field_Generics[_48446_i]=jule::new_ptr<_1a6018c64_InsGeneric>(_1a6018c64_InsGeneric{._field_Kind=(*(_48432_k)), ._field_Constraint=jule::Slice<jule::Ptr<_1a601a64a_TypeKind>>(nullptr)});
	jule::Ptr<_1aa307889_GenericDecl> _4867_gd = (*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics[_48446_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc771010:;
		if (it != expr_end) {
			jule::Ptr<_1a601a64a_TypeKind> _48715_ignored = *it;
			{
				if (((*(_4867_gd))._field_Ident == _1a601aa46_Str(_48715_ignored.ptr()))) {
					(*_48715_ignored.alloc)._field_Kind=(*((*(_48432_k))))._field_Kind;
				};
			}
			_iter_next_1bc771010:;
			++it;
			goto _iter_begin_1bc771010;
		}
		_iter_end_1bc771010:;
	};
	if ((((*_4867_gd.alloc)._field_Constraint == nullptr) || ((*((*_4867_gd.alloc)._field_Constraint))._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=(*((*_4867_gd.alloc)._field_Constraint))._field_Mask[0LL];
	_1aa4394c1_annotateConstraint(_self_, _48432_k);
}



inline jule::Bool _1aa439b75_annotatePrim(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _49940_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1aa43bb99_annotateAny(_self_, _49940_k);
	return __jule_func_result;;
}



inline jule::Bool _1aa439eb6_annotateArr(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _50339_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a602a083_Arr> _5047_parr = _1a601dac1_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_5047_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a602a083_Arr> _5087_arr = _1a601dac1_Arr((*(_50339_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5047_parr))._field_Elem));
	__jule_func_result = _1aa43beda_annotateKind(_self_, &((*(_5087_arr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1aa43a307_annotateSlc(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _51339_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a6027c62_Slc> _5147_pslc = _1a601dd57_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_5147_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a6027c62_Slc> _5187_slc = _1a601dd57_Slc((*(_51339_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5147_pslc))._field_Elem));
	__jule_func_result = _1aa43beda_annotateKind(_self_, &((*(_5187_slc))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1aa43a703_checkMapKey(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _52338_k, jule::Ptr<_1a601a64a_TypeKind>* _52358_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a601a64a_TypeKind>* _5247_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_52338_k;
	__jule_func_result=_1aa43beda_annotateKind(_self_, _52358_ck);
	(*(_self_))._field_k=_5247_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1aa43aa44_annotateMap(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _53139_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a6029406_Map> _5327_pmap = _1a601e891_Map((*((*(_self_))._field_k)).ptr());;
	if ((_5327_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a6029406_Map> _5367_m = _1a601e891_Map((*(_53139_k)).ptr());;
	__jule_func_result = (_1aa43a703_checkMapKey(_self_, (&((*(_5327_pmap))._field_Key)), &((*(_5367_m))._field_Key)) && _1aa43a703_checkMapKey(_self_, (&((*(_5327_pmap))._field_Val)), &((*_5367_m.alloc)._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1aa43ad85_annotateFn(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _54138_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aa334597_FnIns> _5427_pf = _1a601e0dd_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_5427_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1aa334597_FnIns> _5467_f = _1a601e0dd_Fn((*(_54138_k)).ptr());;
	{
		
		if (((*(_5427_pf))._field_Params.len() != (*(_5467_f))._field_Params.len())) {
			_case_begin_1bc77c846:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1aa331a6c_IsVoid((*(_5427_pf))._field_Decl.ptr()) != _1aa331a6c_IsVoid((*(_5467_f))._field_Decl))) {
			_case_begin_1bc77c8ce:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1bc77c7ad:;
	};
	__jule_func_result=true;
	jule::Ptr<_1a601a64a_TypeKind>* _5557_old = (*(_self_))._field_k;;
	{
		auto expr = &((*(_5467_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc77e749:;
		if (it != expr_end) {
			jule::I32 _5568_i = it - expr->begin();
			jule::Ptr<_1aa33351e_ParamIns> _55615_fp = *it;
			{
				(*(_self_))._field_k=(&((*((*(_5427_pf))._field_Params[_5568_i]))._field_Kind));
				__jule_func_result=(_1aa43beda_annotateKind(_self_, &((*(_55615_fp))._field_Kind)) && __jule_func_result);
			}
			_iter_next_1bc77e749:;
			++it;
			_5568_i++;
			goto _iter_begin_1bc77e749;
		}
		_iter_end_1bc77e749:;
	};
	if ((!(_1aa331a6c_IsVoid((*(_5427_pf))._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&((*(_5427_pf))._field_Result));
		__jule_func_result=(_1aa43beda_annotateKind(_self_, &((*_5467_f.alloc)._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_5557_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1aa43b1c6_annotatePtr(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _57039_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a602aa56_Ptr> _5717_pptr = _1a601d31d_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_5717_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a602aa56_Ptr> _5757_ptr = _1a601d31d_Ptr((*(_57039_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5717_pptr))._field_Elem));
	__jule_func_result = _1aa43beda_annotateKind(_self_, &((*(_5757_ptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1aa43b517_annotateSptr(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _58040_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a602728e_Sptr> _5817_ssptr = _1a601d087_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_5817_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a602728e_Sptr> _5857_sptr = _1a601d087_Sptr((*(_58040_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5817_ssptr))._field_Elem));
	__jule_func_result = _1aa43beda_annotateKind(_self_, &((*(_5857_sptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1aa43b858_annotateStruct(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _59042_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aa31e373_StructIns> _5917_s = _1a601e374_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_5917_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1aa31e373_StructIns> _5957_s2 = _1a601e374_Struct((*(_59042_k)).ptr());;
	if (((*(_5917_s))._field_Generics.len() != (*(_5957_s2))._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_5917_s))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc7886a9:;
		if (it != expr_end) {
			jule::I32 _5998_i = it - expr->begin();
			jule::Ptr<_1a6018c64_InsGeneric> _59915_g = *it;
			{
				jule::Ptr<_1a6018c64_InsGeneric> _6008_g2 = (*(_5957_s2))._field_Generics[_5998_i];;
				if (_1a601ad87_Equal((*(_59915_g))._field_Kind, (*(_6008_g2))._field_Kind)) {
					goto _iter_next_1bc7886a9;
				};
				(*(_self_))._field_k=(&((*_59915_g.alloc)._field_Kind));
				if ((!(_1aa43beda_annotateKind(_self_, &((*_6008_g2.alloc)._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bc7886a9:;
			++it;
			_5998_i++;
			goto _iter_begin_1bc7886a9;
		}
		_iter_end_1bc7886a9:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1aa43bb99_annotateAny(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _61239_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _6133_kind = _1a601aa46_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc78bc40:;
		if (it != expr_end) {
			jule::I32 _6147_i = it - expr->begin();
			jule::Ptr<_1aa307889_GenericDecl> _61410_g = *it;
			{
				if ((_6133_kind != (*(_61410_g))._field_Ident)) {
					goto _iter_next_1bc78bc40;
				};
				jule::Ptr<_1a6018c64_InsGeneric> _6184_t = (*((*(_self_))._field_f))._field_Generics[_6147_i];;
				{
					
					if ((_6184_t == nullptr) || ((*(_6184_t))._field_Kind == nullptr)) {
						_case_begin_1bc78d56b:;
						{
							_1aa439834_pushGeneric(_self_, _61239_k, _6147_i);
						}
					}
					else if ((!(_1a601ad87_Equal((*(_6184_t))._field_Kind, (*(_61239_k)))))) {
						_case_begin_1bc78d604:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1bc78d45b:;
				};
				(*((*((*(_self_))._field_k))))._field_Kind=(*((*(_61239_k))))._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1bc78bc40:;
			++it;
			_6147_i++;
			goto _iter_begin_1bc78bc40;
		}
		_iter_end_1bc78bc40:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1aa43beda_annotateKind(_1aa437c83_dynamicTypeAnnotation* _self_, jule::Ptr<_1a601a64a_TypeKind>* _63340_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1aa43bb99_annotateAny(_self_, _63340_k)) {
			_case_begin_1bc790b67:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a601cd01_Prim((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1bc790bcd:;
			{
				__jule_func_result = _1aa439b75_annotatePrim(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a601dac1_Arr((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1bc790c44:;
			{
				__jule_func_result = _1aa439eb6_annotateArr(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a601dd57_Slc((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1bc790cbb:;
			{
				__jule_func_result = _1aa43a307_annotateSlc(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a601e891_Map((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1bc790e53:;
			{
				__jule_func_result = _1aa43aa44_annotateMap(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a601e0dd_Fn((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1bc790eb9:;
			{
				__jule_func_result = _1aa43ad85_annotateFn(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a601d31d_Ptr((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1bc791030:;
			{
				__jule_func_result = _1aa43b1c6_annotatePtr(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a601d087_Sptr((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1bc791096:;
			{
				__jule_func_result = _1aa43b517_annotateSptr(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a601e374_Struct((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1bc79111d:;
			{
				__jule_func_result = _1aa43b858_annotateStruct(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1bc790a46:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1bc7905c3:;
	};
}



inline jule::Bool _1aa43c271_annotate(_1aa437c83_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*((*(_self_))._field_p))._field_Kind));
	__jule_func_result = _1aa43beda_annotateKind(_self_, &((*((*(_self_))._field_a))._field_Kind));
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa437c83_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1aa43d184_pushErrToken(_1aa43cae0_fnCallArgChecker* _self_, jule::Ptr<_1aa2d51c4_Token> _67828_token, jule::Str _67843_fmt, jule::Slice<jule::Any> _67856_args) {
	_1aa3be434_pushErr((*((*(_self_))._field_e))._field_s.ptr(), _67828_token, _67843_fmt, _67856_args);
}



inline void _1aa43d4e7_pushErr(_1aa43cae0_fnCallArgChecker* _self_, jule::Str _68223_fmt, jule::Slice<jule::Any> _68236_args) {
	_1aa43d184_pushErrToken(_self_, (*(_self_))._field_errorToken, _68223_fmt, _68236_args);
}



inline jule::Slice<jule::Ptr<_1aa33351e_ParamIns>> _1aa43d77d_getParams(_1aa43cae0_fnCallArgChecker* _self_) {
	if (((((*((*(_self_))._field_f))._field_Params.len() > 0LL) && ((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl != nullptr)) && _1aa330241_IsSelf((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl))) {
		return (*(*(_self_))._field_f.alloc)._field_Params.slice(1LL);;
	};
	return (*(*(_self_))._field_f.alloc)._field_Params;;
}



inline jule::Bool _1aa43dabe_checkCounts(_1aa43cae0_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>* _69528_params) {
	jule::Bool __jule_func_result = false;
	jule::I32 _6967_n = (*(_69528_params)).len();;
	if (((_6967_n > 0LL) && _1aa330241_IsSelf((*((*(_69528_params))[0LL]))._field_Decl.ptr()))) {
		(_6967_n)--;
	};
	jule::I32 _7017_diff = (_6967_n - (*(_self_))._field_args.len());;
	jule::Str _7027_log = jule::Str();;
	{
		
		if ((_7017_diff == 0LL)) {
			_case_begin_1bc79cadb:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_6967_n > 0LL) && (*(*((*(_69528_params))[(_6967_n - 1LL)]))._field_Decl.alloc)._field_Variadic)) {
			_case_begin_1bc79ca0e:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_7017_diff < 0LL) || (_7017_diff > (*(_69528_params)).len()))) {
			_case_begin_1bc79c6bd:;
			{
				_7027_log=jule::Str::lit("argument overflow: passed more argument than expected to call @", 63);
			}
		}
		else {
			_case_begin_1bc79c657:;
			{
				_7027_log=jule::Str::lit("missing arguments to call @", 27);
			}
		}
		_match_end_1bc79c5e1:;
	};
	_1ed486d49_StrBuilder _7137_err = static__1ed487146_New(32LL);;
	_1ed4909ac_WriteStr(&_7137_err, (*((*((*(_self_))._field_f))._field_Decl))._field_Ident);
	_1ed4909ac_WriteStr(&_7137_err, jule::Str::lit("\n       want (", 14));
	{
		auto expr = _69528_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc7a03c4:;
		if (it != expr_end) {
			jule::I32 _7167_i = it - expr->begin();
			jule::Ptr<_1aa33351e_ParamIns> *_71610_p = it;
			{
				_1ed4909ac_WriteStr(&_7137_err, _1a601aa46_Str((*((*(_71610_p))))._field_Kind.ptr()));
				if ((((*(_69528_params)).len() - _7167_i) > 1LL)) {
					_1ed4909ac_WriteStr(&_7137_err, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1bc7a03c4:;
			++it;
			_7167_i++;
			goto _iter_begin_1bc7a03c4;
		}
		_iter_end_1bc7a03c4:;
	};
	_1ed490c65_WriteByte(&_7137_err, ')');
	_1aa43d4e7_pushErr(_self_, _7027_log, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ed4912a4_Str(&_7137_err), &__jule_any_type4); __jule_collection; }));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1aa43e075_checkArg(_1aa43cae0_fnCallArgChecker* _self_, jule::Ptr<_1aa33351e_ParamIns>* _72729_p, jule::Ptr<_1aa44cc98_Data>* _72748_arg, jule::Ptr<_1aa2d51c4_Token>* _72765_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1aa336874_parameterUsesGenerics(_72729_p, &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics)))) {
		__jule_func_result=((!((*((*((*(_72729_p))))._field_Decl))._field_Variadic)) && _1aa4466cb_isGoodValueToInfer(_72748_arg));
		if (__jule_func_result) {
			_1aa437c83_dynamicTypeAnnotation _7329_dta = _1aa437c83_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_72729_p)), ._field_a=(*(_72748_arg)), ._field_errorToken=(*(_72765_errorToken)), ._field_k=nullptr, ._field_c=jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1aa43c271_annotate(&_7329_dta);
		};
		if ((!(__jule_func_result))) {
			_1aa43d184_pushErrToken(_self_, (*(_72765_errorToken)), jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1aa3d1534_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, (*(*((*(_72729_p))))._field_Decl.alloc)._field_Mutable, (*(*((*(_72729_p))))._field_Decl.alloc)._field_Reference, &((*((*(_72729_p))))._field_Kind), _72748_arg, _72765_errorToken)) {
		__jule_func_result = _1aa3cbc9e_checkAssignType((*((*(_self_))._field_e))._field_s, (*(*((*(_72729_p))))._field_Decl.alloc)._field_Reference, &((*((*(_72729_p))))._field_Kind), _72748_arg, (*(_72765_errorToken)));
		return __jule_func_result;;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1aa43e471_push(_1aa43cae0_fnCallArgChecker* _self_, jule::Ptr<_1aa33351e_ParamIns>* _75625_p, jule::Ptr<_1aa2ee9b3_Expr> _75643_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a601a64a_TypeKind> _7577_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _7583_oldImmut = (*(*(_self_))._field_e.alloc)._field_immutable;;
	(*(*(_self_))._field_e.alloc)._field_immutable=(!((*((*((*(_75625_p))))._field_Decl))._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(*((*(_75625_p))))._field_Decl.alloc)._field_Variadic)))) {
		(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_75625_p))))._field_Kind;
	} else {
		(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
	};
	jule::Ptr<_1aa44cc98_Data> _7667_d = _1aa46cc63_evalExpr((*(_self_))._field_e, _75643_arg);;
	(*(*(_self_))._field_e.alloc)._field_prefix=_7577_old;
	(*(*(_self_))._field_e.alloc)._field_immutable=_7583_oldImmut;
	if ((_7667_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1aa43e075_checkArg(_self_, _75625_p, &(_7667_d), &((*(_75643_arg))._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_7667_d))._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _1aa43e86c_pushVariadic(_1aa43cae0_fnCallArgChecker* _self_, jule::Ptr<_1aa33351e_ParamIns>* _78033_p, jule::I32 _78051_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _7827_variadiced = false;;
	jule::Bool _7833_more = ((_78051_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1aa325ad8_SliceExprModel> _7847_model = jule::new_ptr<_1aa325ad8_SliceExprModel>(_1aa325ad8_SliceExprModel{._field_ElemKind=(*((*(_78033_p))))._field_Kind, ._field_Elems=jule::Slice<jule::Any>(nullptr)});;
	jule::Ptr<_1a601a64a_TypeKind> _7887_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Ptr<_1a601a64a_TypeKind> _7957_oldKind = (*((*(_78033_p))))._field_Kind;;
	(*((*(_78033_p))))._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>((*(*((*(_78033_p))))._field_Kind.alloc));
	(*(*((*(_78033_p))))._field_Kind.alloc)._field_Variadic=false;
	__JULE_DEFER({
		(*(*((*(_78033_p))))._field_Kind.alloc)._field_Variadic=false;
		(*((*(_78033_p))))._field_Kind=_7957_oldKind;
	});;
	for (; (_78051_i < (*(_self_))._field_args.len()); (_78051_i)++) {
		{
			jule::Ptr<_1aa2ee9b3_Expr> _8048_arg = (*(_self_))._field_args[_78051_i];;
			{
				auto &_match_expr{ (*(_8048_arg))._field_Kind };
				
				if (_match_expr.type == &__jule_any_type79) {
					_case_begin_1bc7b24c4:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a6027c62_Slc>(_1a6027c62_Slc{._field_Elem=(*((*(_78033_p))))._field_Kind}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data24)});
					}
				}
				else {
					_case_begin_1bc7b27c1:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_78033_p))))._field_Kind;
					}
				}
				_match_end_1bc7b276b:;
			};
			jule::Ptr<_1aa44cc98_Data> _8178_d = _1aa46c5d1_eval((*(_self_))._field_e, _8048_arg);;
			if ((_8178_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1bc7b1979;
			};
			if ((*((*(_8178_d))._field_Kind))._field_Variadic) {
				_7827_variadiced=true;
				(*(*((*(_78033_p))))._field_Kind.alloc)._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1aa43e075_checkArg(_self_, _78033_p, &(_8178_d), &((*(_8048_arg))._field_Token)));
				(*(*((*(_78033_p))))._field_Kind.alloc)._field_Variadic=false;
				{
					auto &_match_expr{ (*(_8178_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type80) {
						_case_begin_1bc7b4a59:;
						{
							_7847_model=(*(_8178_d))._field_Model.unsafe_cast_ptr<_1aa325ad8_SliceExprModel>();
							(*(_7847_model))._field_ElemKind=(*((*(_78033_p))))._field_Kind;
						}
					}
					else {
						_case_begin_1bc7b65a5:;
						{
							_7847_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_8178_d))._field_Model); };
						}
					}
					_match_end_1bc7b6550:;
				};
				(_78051_i)++;
				goto _iter_end_1bc7b1979;
			};
			__jule_func_result=(__jule_func_result && _1aa43e075_checkArg(_self_, _78033_p, &(_8178_d), &((*_8048_arg.alloc)._field_Token)));
			(*(_7847_model))._field_Elems=jule::append((*_7847_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8178_d))._field_Model; __jule_collection; }));
		}
	_iter_next_1bc7b1979:;
	}
	_iter_end_1bc7b1979:;;
	(*(*(_self_))._field_e.alloc)._field_prefix=_7887_old;
	if ((_7827_variadiced && _7833_more)) {
		_1aa43d184_pushErrToken(_self_, (*((*(_self_))._field_args[_78051_i]))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
	};
	if ((_7847_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_7847_model, &__jule_any_type80)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1aa43ebad_checkArgs(_1aa43cae0_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>* _86130_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _8623_arg = (*((*(_self_))._field_e))._field_arg;;
	(*(*(_self_))._field_e.alloc)._field_arg=true;
	__jule_func_result=true;
	jule::I32 _8667_i = 0LL;;
	if ((((*(_86130_params)).len() > 0LL) && _1aa330241_IsSelf((*((*(_86130_params))[0LL]))._field_Decl.ptr()))) {
		(_8667_i)++;
	};
	_julec_label_1bc7bb90c:;
	while ((_8667_i < (*(_86130_params)).len())) {
		{
			jule::Ptr<_1aa33351e_ParamIns> _8738_p = (*(_86130_params))[_8667_i];;
			{
				
				if ((*(*(_8738_p))._field_Decl.alloc)._field_Variadic) {
					_case_begin_1bc7bd535:;
					{
						__jule_func_result=(_1aa43e86c_pushVariadic(_self_, &(_8738_p), _8667_i) && __jule_func_result);
						goto _iter_end_1bc7bbd3b;
					}
				}
				else if (((*(_self_))._field_args.len() <= _8667_i)) {
					_case_begin_1bc7bd623:;
					{
						__jule_func_result=false;
						goto _iter_end_1bc7bbd3b;
					}
				}
				else {
					_case_begin_1bc7bd17d:;
					{
						__jule_func_result=(_1aa43e471_push(_self_, &(_8738_p), (*(_self_))._field_args[_8667_i]) && __jule_func_result);
					}
				}
				_match_end_1bc7bd117:;
			};
			(_8667_i)++;
		}
	_iter_next_1bc7bbd3b:;
	}
	_iter_end_1bc7bbd3b:;;
	(*(*(_self_))._field_e.alloc)._field_arg=_8623_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1aa43ee44_checkDynamicTypeAnnotation(_1aa43cae0_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_f))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc7c07e0:;
		if (it != expr_end) {
			jule::Ptr<_1a6018c64_InsGeneric> _89310_g = *it;
			{
				if ((_89310_g == nullptr)) {
					_1aa43d4e7_pushErr(_self_, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bc7c07e0:;
			++it;
			goto _iter_begin_1bc7c07e0;
		}
		_iter_end_1bc7c07e0:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1aa4401ca_check(_1aa43cae0_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1aa33351e_ParamIns>> _9037_params = _1aa43d77d_getParams(_self_);;
	__jule_func_result=_1aa43dabe_checkCounts(_self_, &(_9037_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1aa43ebad_checkArgs(_self_, &(_9037_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1aa43ee44_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa43cae0_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1aa4410aa_pushErr(_1aa440a27_structLitChecker* _self_, jule::Ptr<_1aa2d51c4_Token> _94123_token, jule::Str _94138_fmt, jule::Slice<jule::Any> _94151_args) {
	_1aa450053_pushErr((*(_self_))._field_e.ptr(), _94123_token, _94138_fmt, _94151_args);
}



inline void _1aa44141d_pushSuggestion(_1aa440a27_structLitChecker* _self_, jule::Str _94630_fmt, jule::Slice<jule::Any> _94643_args) {
	_1aa4503b6_pushSuggestion((*(_self_))._field_e.ptr(), _94630_fmt, _94643_args);
}



inline void _1aa44183b_pushMatch(_1aa440a27_structLitChecker* _self_, jule::Ptr<_1aa31d7c3_FieldIns>* _95030_f, jule::Ptr<_1aa44cc98_Data>* _95049_d, jule::Ptr<_1aa2d51c4_Token>* _95064_errorToken) {
	;
	jule::Bool _9563_mutable = ((!((*((*(_self_))._field_e))._field_immutable)) || ((*((*((*(_95030_f))))._field_Decl))._field_Mutable && ((*((*(_self_))._field_s))._field_Methods.len() > 0LL)));;
	if (_1aa3d1534_checkValidityForInitExpr((*(*(_self_))._field_e.alloc)._field_s, _9563_mutable, false, &((*((*(_95030_f))))._field_Kind), _95049_d, _95064_errorToken)) {
		_1aa3cbc9e_checkAssignType((*((*(_self_))._field_e))._field_s, false, &((*((*(_95030_f))))._field_Kind), _95049_d, (*(_95064_errorToken)));
	};
	{ jule::Slice<jule::Ptr<_1aa324136_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_1aa324136_StructArgExprModel>(_1aa324136_StructArgExprModel{._field_Token=(*(_95064_errorToken)), ._field_Field=(*(_95030_f)), ._field_Expr=(*(_95049_d))})); };
}



inline void _1aa441b9e_checkPair(_1aa440a27_structLitChecker* _self_, jule::Ptr<_1aa3041d2_FieldExprPair>* _96930_pair, jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>>* _96957_exprs) {
	jule::Ptr<_1aa31d7c3_FieldIns> _9717_f = _1aa32075e_FindField((*(_self_))._field_s.ptr(), (*((*((*(_96930_pair))))._field_Field))._field_Kind);;
	if ((_9717_f == nullptr)) {
		_1aa4410aa_pushErr(_self_, (*((*(_96930_pair))))._field_Field, jule::Str::lit("undefined identifier: @", 23), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_96930_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return;;
	};
	if ((!(_1aa3beb93_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_9717_f))._field_Decl))._field_Public, (*(*(_9717_f))._field_Decl.alloc)._field_Token)))) {
		_1aa4410aa_pushErr(_self_, (*((*(_96930_pair))))._field_Field, jule::Str::lit("inaccessible identifier: @ is private", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_96930_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1aa44141d_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	_julec_label_1bc7c9a19:;
	{
		auto expr = _96957_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc7cc3ac:;
		if (it != expr_end) {
			jule::Ptr<_1aa2ee9b3_Expr> _98315_expr = *it;
			{
				{
					auto &_match_expr{ (*(_98315_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type81) {
						_case_begin_1bc7ccd80:;
						{
							jule::Ptr<_1aa3041d2_FieldExprPair> _9869_dpair = (*(_98315_expr))._field_Kind.unsafe_cast_ptr<_1aa3041d2_FieldExprPair>();;
							{
								
								if (((*(_96930_pair)) == _9869_dpair)) {
									_case_begin_1bc7cdd70:;
									{
										goto _iter_end_1bc7cc3ac;
									}
								}
								else if (((*(*((*(_96930_pair))))._field_Field.alloc)._field_Kind == (*(*(_9869_dpair))._field_Field.alloc)._field_Kind)) {
									_case_begin_1bc7cde19:;
									{
										_1aa4410aa_pushErr(_self_, (*((*(_96930_pair))))._field_Field, jule::Str::lit("@ already has expression", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_96930_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
										goto _iter_end_1bc7cc3ac;
									}
								}
								_match_end_1bc7cdce8:;
							};
						}
					}
					_match_end_1bc7ccd19:;
				};
			}
			_iter_next_1bc7cc3ac:;
			++it;
			goto _iter_begin_1bc7cc3ac;
		}
		_iter_end_1bc7cc3ac:;
	};
	jule::Ptr<_1a601a64a_TypeKind> _9977_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_9977_prefix;
	});;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_9717_f))._field_Kind;
	jule::Ptr<_1aa44cc98_Data> _10017_d = _1aa46cc63_evalExpr((*(_self_))._field_e, (*((*(_96930_pair))))._field_Expr);;
	if ((_10017_d == nullptr)) {
		return;;
	};
	_1aa44183b_pushMatch(_self_, &(_9717_f), &(_10017_d), &((*((*(_96930_pair))))._field_Field));
}



inline jule::Bool _1aa441ee0_readyExprs(_1aa440a27_structLitChecker* _self_, jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>>* _100831_exprs) {
	jule::Bool _10097_ok = true;;
	{
		auto expr = _100831_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc7d32d6:;
		if (it != expr_end) {
			jule::I32 _10108_i = it - expr->begin();
			jule::Ptr<_1aa2ee9b3_Expr> _101015_expr = *it;
			{
				{
					auto &_match_expr{ (*(_101015_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type82) {
						_case_begin_1bc7d3eb8:;
						{
							jule::Ptr<_1aa3057dd_KeyValPair> _10139_pair = (*(_101015_expr))._field_Kind.unsafe_cast_ptr<_1aa3057dd_KeyValPair>();;
							{
								auto &_match_expr{ (*((*(_10139_pair))._field_Key))._field_Kind };
								
								if (_match_expr.type == &__jule_any_type52) {
									_case_begin_1bc7d4d43:;
									{
										goto _match_end_1bc7d530a;
									}
								}
								else {
									_case_begin_1bc7d5360:;
									{
										_1aa4410aa_pushErr(_self_, (*(_10139_pair))._field_Colon, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
										_10097_ok=false;
										goto _iter_next_1bc7d32d6;
									}
								}
								_match_end_1bc7d530a:;
							};
							(*((*(_100831_exprs))[_10108_i]))._field_Kind=jule::Any(jule::new_ptr<_1aa3041d2_FieldExprPair>(_1aa3041d2_FieldExprPair{._field_Field=(*((*(_10139_pair))._field_Key))._field_Token, ._field_Expr=(*_10139_pair.alloc)._field_Val}), &__jule_any_type81);
						}
					}
					_match_end_1bc7d3e52:;
				};
			}
			_iter_next_1bc7d32d6:;
			++it;
			_10108_i++;
			goto _iter_begin_1bc7d32d6;
		}
		_iter_end_1bc7d32d6:;
	};
	return _10097_ok;;
}



inline void _1aa442298_check(_1aa440a27_structLitChecker* _self_, jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>>* _103226_exprs) {
	if (((*(_103226_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1aa441ee0_readyExprs(_self_, _103226_exprs)))) {
		return;;
	};
	jule::Bool _10397_paired = false;;
	{
		auto expr = _103226_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc7d761a:;
		if (it != expr_end) {
			jule::I32 _10408_i = it - expr->begin();
			jule::Ptr<_1aa2ee9b3_Expr> _104015_expr = *it;
			{
				{
					auto &_match_expr{ (*(_104015_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type81) {
						_case_begin_1bc7ddaa5:;
						{
							jule::Ptr<_1aa3041d2_FieldExprPair> _10439_pair = (*(_104015_expr))._field_Kind.unsafe_cast_ptr<_1aa3041d2_FieldExprPair>();;
							if (((_10408_i > 0LL) && (!(_10397_paired)))) {
								_1aa4410aa_pushErr(_self_, (*(_10439_pair))._field_Field, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							_10397_paired=true;
							_1aa441b9e_checkPair(_self_, &(_10439_pair), _103226_exprs);
						}
					}
					else {
						_case_begin_1bc7d87a3:;
						{
							if (_10397_paired) {
								_1aa4410aa_pushErr(_self_, (*(_104015_expr))._field_Token, jule::Str::lit("argument must target to field", 29), jule::Slice<jule::Any>());
							};
							if ((_10408_i >= (*((*(_self_))._field_s))._field_Fields.len())) {
								_1aa4410aa_pushErr(_self_, (*_104015_expr.alloc)._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>());
								goto _iter_next_1bc7d761a;
							};
							jule::Ptr<_1aa31d7c3_FieldIns> _10589_field = (*(*(_self_))._field_s.alloc)._field_Fields[_10408_i];;
							if ((!(_1aa3beb93_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_10589_field))._field_Decl))._field_Public, (*(*(_10589_field))._field_Decl.alloc)._field_Token)))) {
								_1aa4410aa_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("structure cannot instantiating because it has non-public fields", 63), jule::Slice<jule::Any>());
								_1aa44141d_pushSuggestion(_self_, jule::Str::lit("use field:expression pairs to instantiate", 41), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1a601a64a_TypeKind> _10669_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
							__JULE_DEFER({
								(*(*(_self_))._field_e.alloc)._field_prefix=_10669_prefix;
							});;
							(*(*(_self_))._field_e.alloc)._field_prefix=(*_10589_field.alloc)._field_Kind;
							jule::Ptr<_1aa44cc98_Data> _10709_d = _1aa46cc63_evalExpr((*(_self_))._field_e, _104015_expr);;
							if ((_10709_d == nullptr)) {
								goto _iter_next_1bc7d761a;
							};
							_1aa44183b_pushMatch(_self_, &(_10589_field), &(_10709_d), &((*_104015_expr.alloc)._field_Token));
						}
					}
					_match_end_1bc7d874d:;
				};
			}
			_iter_next_1bc7d761a:;
			++it;
			_10408_i++;
			goto _iter_begin_1bc7d761a;
		}
		_iter_end_1bc7d761a:;
	};
	if ((!(_10397_paired))) {
		jule::I32 _10814_n = (*((*(_self_))._field_s))._field_Fields.len();;
		jule::I32 _10828_diff = (_10814_n - (*(_103226_exprs)).len());;
		{
			
			if ((_10828_diff <= 0LL)) {
				_case_begin_1bc7e1910:;
				{
					return;;
				}
			}
			_match_end_1bc7e1800:;
		};
		_1ed486d49_StrBuilder _10888_idents = static__1ed487146_New(32LL);;
		for (; (_10828_diff > 0LL); (_10828_diff)--) {
			{
				_1ed4909ac_WriteStr(&_10888_idents, jule::Str::lit(", ", 2));
				_1ed4909ac_WriteStr(&_10888_idents, (*((*((*(*(_self_))._field_s.alloc)._field_Fields[(_10814_n - _10828_diff)]))._field_Decl))._field_Ident);
			}
		_iter_next_1bc7e225c:;
		}
		_iter_end_1bc7e225c:;;
		_1aa4410aa_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(_1ed491c55_Buf(&_10888_idents).slice(2LL)), &__jule_any_type4); __jule_collection; }));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1aa440a27_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa442809_rangeChecker_eq(_1aa442809_rangeChecker *_self_, _1aa442809_rangeChecker _other_) {
	return 
		(_self_->_field_sc == _other_._field_sc) &&
		(_self_->_field_rang == _self_->_field_rang) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_d == _self_->_field_d);
}

inline jule::Ptr<_1aa3e4d3e_Var> _1aa442d26_buildVar(_1aa442809_rangeChecker* _self_, jule::Ptr<_1aa30d4e9_VarDecl>* _110825_decl) {
	jule::Ptr<_1aa3e4d3e_Var> _11097_v = _1aa33ca9a_buildVar((*(_110825_decl)));;
	return _11097_v;;
}



inline void _1aa443024_setSizeKey(_1aa442809_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1aa2d7aab_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyA=_1aa442d26_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_Kind=(*(_1aa5e00b1_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
}



inline void _1aa443442_checkRangeExprValidity(_1aa442809_rangeChecker* _self_, jule::Ptr<_1aa44cc98_Data>* _112743_d, jule::Ptr<_1aa3e4d3e_Var>* _112754_key, jule::Ptr<_1a601a64a_TypeKind>* _112770_k) {
	jule::Bool _11287__mut = (*((*(_112754_key))))._field_Mutable;;
	if ((_11287__mut && (!(_1a601c031_Mutable((*(_112770_k)).ptr()))))) {
		_11287__mut=false;
	};
	_1aa3d1534_checkValidityForInitExpr((*((*(_self_))._field_sc))._field_s, _11287__mut, (*((*(_112754_key))))._field_Reference, &((*((*((*(_112754_key))))._field_Kind))._field_Kind), _112743_d, &((*((*(_self_))._field_rang))._field_InToken));
}



inline void _1aa443640_checkSlice(_1aa442809_rangeChecker* _self_) {
	_1aa443024_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1aa2d7aab_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a6027c62_Slc> _11467_slc = _1a601dd57_Slc((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1aa442d26_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1a6022d5b_TypeSymbol>(_1a6022d5b_TypeSymbol{._field_Decl=jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr), ._field_Kind=(*(_11467_slc))._field_Elem});
	_1aa443442_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11467_slc.alloc)._field_Elem));
}



inline void _1aa44383d_checkArray(_1aa442809_rangeChecker* _self_) {
	_1aa443024_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1aa2d7aab_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a602a083_Arr> _11597_arr = _1a601dac1_Arr((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1aa442d26_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1a6022d5b_TypeSymbol>(_1a6022d5b_TypeSymbol{._field_Decl=jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr), ._field_Kind=(*(_11597_arr))._field_Elem});
	_1aa443442_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11597_arr.alloc)._field_Elem));
}



inline void _1aa443a3b_checkMapKeyA(_1aa442809_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1aa2d7aab_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a6029406_Map> _11717_m = _1a601e891_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyA=_1aa442d26_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_Kind=jule::new_ptr<_1a6022d5b_TypeSymbol>(_1a6022d5b_TypeSymbol{._field_Decl=jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr), ._field_Kind=(*(_11717_m))._field_Key});
	jule::Ptr<_1aa44cc98_Data> _11757_d = jule::new_ptr<_1aa44cc98_Data>((*(*(_self_))._field_d.alloc));;
	(*_11757_d.alloc)._field_Kind=(*_11717_m.alloc)._field_Key;
	_1aa443442_checkRangeExprValidity(_self_, &(_11757_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyA), &((*_11717_m.alloc)._field_Key));
}



inline void _1aa443c39_checkMapKeyB(_1aa442809_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1aa2d7aab_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a6029406_Map> _11867_m = _1a601e891_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1aa442d26_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1a6022d5b_TypeSymbol>(_1a6022d5b_TypeSymbol{._field_Decl=jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr), ._field_Kind=(*(_11867_m))._field_Val});
	jule::Ptr<_1aa44cc98_Data> _11907_d = jule::new_ptr<_1aa44cc98_Data>((*(*(_self_))._field_d.alloc));;
	(*_11907_d.alloc)._field_Kind=(*_11867_m.alloc)._field_Val;
	_1aa443442_checkRangeExprValidity(_self_, &(_11907_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11867_m.alloc)._field_Val));
}



inline void _1aa443e37_checkMap(_1aa442809_rangeChecker* _self_) {
	_1aa443a3b_checkMapKeyA(_self_);
	_1aa443c39_checkMapKeyB(_self_);
}



inline void _1aa444135_checkStr(_1aa442809_rangeChecker* _self_) {
	_1aa443024_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1aa2d7aab_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1aa442d26_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=(*(_1aa5e00b1_findBuiltinTypeAlias(jule::Str::lit("u8", 2))))._field_Kind;
}



inline void _1aa444333_checkComptime(_1aa442809_rangeChecker* _self_) {
	_1aa443024_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyA != nullptr) && (*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Mutable)) {
		_1aa3be434_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Token, jule::Str::lit("define @ cannot be mutable", 26), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB != nullptr) && (*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Mutable)) {
		_1aa3be434_pushErr((*((*(_self_))._field_sc))._field_s, (*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Token, jule::Str::lit("define @ cannot be mutable", 26), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB == nullptr) || _1aa2d7aab_IsIgnoreIdent((*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1aa442d26_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
}



inline jule::Bool _1aa4445b9_checkComptimeRange(_1aa442809_rangeChecker* _self_) {
	jule::Ptr<_1aa34c14d_comptimeRange> _12257_range = _1a602119a_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_12257_range))._field_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aa34be2d_comptimeRangeKind_mptr_data0) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1aa34be2d_comptimeRangeKind_mptr_data2) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1aa34be2d_comptimeRangeKind_mptr_data3) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1aa34be2d_comptimeRangeKind_mptr_data4) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1aa34be2d_comptimeRangeKind_mptr_data1) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1aa34be2d_comptimeRangeKind_mptr_data5) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1aa34be2d_comptimeRangeKind_mptr_data6)) {
			_case_begin_1bc814658:;
			{
				_1aa444333_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1bc81369b:;
			{
				_1aa3be434_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1bc813646:;
	};
}



inline jule::Bool _1aa444850_check(_1aa442809_rangeChecker* _self_) {
	{
		
		if ((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic) {
			_case_begin_1bc81698a:;
		}
		else if ((_1a601dd57_Slc((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc81535c:;
			{
				_1aa443640_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1a601dac1_Arr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc8153c3:;
			{
				_1aa44383d_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1a601e891_Map((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc815923:;
			{
				_1aa443e37_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1a602119a_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc815989:;
			{
				return _1aa4445b9_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1bc8152c4:;
			{
				jule::Ptr<_1a6023763_Prim> _12584_prim = _1a601cd01_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (((_12584_prim != nullptr) && _1a6026c2d_IsStr(_12584_prim))) {
					_1aa444135_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1bc8151c5:;
	};
	_1aa3be434_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa442809_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1aa4454cc_prepareTypes(_1aa44506a_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1aa3357c9_Types((*(_self_))._field_f);
	};
}



inline void _1aa445785_prepareExprs(_1aa44506a_retTypeChecker* _self_, jule::Ptr<_1aa2ee9b3_Expr>* _128633_e) {
	if (((*(_128633_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_128633_e))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1bc81c4da:;
			{
				(*(_self_))._field_exprs=(*((*((*(_128633_e))))._field_Kind.unsafe_cast_ptr<_1aa3005a7_TupleExpr>()))._field_Expr;
			}
		}
		else {
			_case_begin_1bc81c650:;
			{
				{ jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_128633_e))); };
			}
		}
		_match_end_1bc81c1dd:;
	};
}



inline void _1aa445983_checkExprs(_1aa44506a_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1aa44cc98_Data>> _13027_datas = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa44cc98_Data>>::alloc(0LL, (*(_self_))._field_exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa44cc98_Data>(nullptr); __jule_collection; });;
	jule::Ptr<_1aa44e9c0_eval> _13037_eval = _1aa3cb73d_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data0));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc81c7b5:;
		if (it != expr_end) {
			jule::I32 _13048_i = it - expr->begin();
			jule::Ptr<_1aa2ee9b3_Expr> _130415_expr = *it;
			{
				if ((_13048_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1bc81c7b5;
				};
				jule::Ptr<_1a601a64a_TypeKind> _13098_t = (*(_self_))._field_types[_13048_i];;
				(*(_13037_eval))._field_prefix=_13098_t;
				jule::Ptr<_1aa44cc98_Data> _13128_d = _1aa46cc63_evalExpr(_13037_eval, _130415_expr);;
				if ((_13128_d == nullptr)) {
					goto _iter_next_1bc81c7b5;
				};
				{ jule::Slice<jule::Ptr<_1aa44cc98_Data>> &__jule_push_dest = _13027_datas; __jule_push_dest.push(_13128_d); };
				if (((!((*(_13128_d))._field_Mutable)) && _1a601c031_Mutable((*(_13128_d))._field_Kind.ptr()))) {
					_1aa3be434_pushErr((*((*(_self_))._field_sc))._field_s, (*(_self_))._field_errorToken, jule::Str::lit("mutable typed return expressions should be mutable", 50), jule::Slice<jule::Any>());
					return;;
				};
				_1aa4363ad_assignTypeChecker _13248_ac = _1aa4363ad_assignTypeChecker{._field_s=(*(*(_self_))._field_sc.alloc)._field_s, ._field_dest=_13098_t, ._field_d=_13128_d, ._field_errorToken=(*(_self_))._field_errorToken};;
				_1aa4373ae_check(&_13248_ac);
			}
			_iter_next_1bc81c7b5:;
			++it;
			_13048_i++;
			goto _iter_begin_1bc81c7b5;
		}
		_iter_end_1bc81c7b5:;
	};
	if ((_13027_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1aa328de9_TupleExprModel>(_1aa328de9_TupleExprModel{._field_Datas=_13027_datas}), &__jule_any_type84);
	} else if ((_13027_datas.len() == 1LL)) {
		(*(_self_))._field_model=(*(_13027_datas[0LL]))._field_Model;
	};
}



inline jule::Bool _1aa445c19_tryFuncMultiRetForward(_1aa44506a_retTypeChecker* _self_) {
	jule::Ptr<_1aa44e9c0_eval> _13457_eval = _1aa3cb73d_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data0));;
	jule::Ptr<_1aa44cc98_Data> _13467_d = _1aa46cc63_evalExpr(_13457_eval, (*(_self_))._field_exprs[0LL]);;
	if ((_13467_d == nullptr)) {
		return true;;
	};
	jule::Ptr<_1a6028856_Tuple> _13527_tup = _1a601eb27_Tup((*(_13467_d))._field_Kind.ptr());;
	if ((_13527_tup == nullptr)) {
		return false;;
	};
	if (((*(_13527_tup))._field_Types.len() != (*(_self_))._field_types.len())) {
		goto _julec_label_1bc82a4d7;
	};
	(*(_self_))._field_model=(*(_13467_d))._field_Model;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc82711b:;
		if (it != expr_end) {
			jule::I32 _13607_i = it - expr->begin();
			{
				jule::Ptr<_1a601a64a_TypeKind> _13618_t1 = (*(_self_))._field_types[_13607_i];;
				jule::Ptr<_1a601a64a_TypeKind> _13628_t2 = (*(_13527_tup))._field_Types[_13607_i];;
				if ((!(_1aa3cc255__checkTypeCompatibility((*((*(_self_))._field_sc))._field_s, &(_13618_t1), &(_13628_t2), (*(_self_))._field_errorToken)))) {
					goto _julec_label_1bc82a4d7;
				};
			}
			_iter_next_1bc82711b:;
			++it;
			_13607_i++;
			goto _iter_begin_1bc82711b;
		}
		_iter_end_1bc82711b:;
	};
	return true;;
	_julec_label_1bc82a4d7:;
	_1ed486d49_StrBuilder _13697_wanted = static__1ed487146_New(32LL);;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc82bb8c:;
		if (it != expr_end) {
			jule::I32 _13707_i = it - expr->begin();
			jule::Ptr<_1a601a64a_TypeKind> _137010_t = *it;
			{
				_1ed4909ac_WriteStr(&_13697_wanted, _1a601aa46_Str(_137010_t.ptr()));
				if ((((*(_self_))._field_types.len() - _13707_i) > 1LL)) {
					_1ed4909ac_WriteStr(&_13697_wanted, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1bc82bb8c:;
			++it;
			_13707_i++;
			goto _iter_begin_1bc82bb8c;
		}
		_iter_end_1bc82bb8c:;
	};
	_1ed486d49_StrBuilder _13767_given = static__1ed487146_New(32LL);;
	{
		auto expr = &((*(_13527_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc82d8a3:;
		if (it != expr_end) {
			jule::I32 _13777_i = it - expr->begin();
			jule::Ptr<_1a601a64a_TypeKind> _137710_t = *it;
			{
				_1ed4909ac_WriteStr(&_13767_given, _1a601aa46_Str(_137710_t.ptr()));
				if ((((*(_self_))._field_types.len() - _13777_i) > 1LL)) {
					_1ed4909ac_WriteStr(&_13767_given, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1bc82d8a3:;
			++it;
			_13777_i++;
			goto _iter_begin_1bc82d8a3;
		}
		_iter_end_1bc82d8a3:;
	};
	_1aa3be434_pushErr((*((*(_self_))._field_sc))._field_s, (*(_self_))._field_errorToken, jule::Str::lit("function return forwaring is wrong\n       want (@)\n       have (@)", 66), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ed4912a4_Str(&_13697_wanted), &__jule_any_type4); (*it++) = jule::Any(_1ed4912a4_Str(&_13767_given), &__jule_any_type4); __jule_collection; }));
	return false;;
}



inline jule::Bool _1aa44605a_check(_1aa44506a_retTypeChecker* _self_, jule::Ptr<_1aa2ee9b3_Expr>* _138726_e) {
	_1aa4454cc_prepareTypes(_self_);
	_1aa445785_prepareExprs(_self_, _138726_e);
	{
		
		if ((((*(_self_))._field_exprs.len() == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
			_case_begin_1bc831d90:;
			{
				if ((!(_1aa33283c_AnyVar((*((*(_self_))._field_f))._field_Decl.ptr())))) {
					_1aa3be434_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("return statements of non-void functions should have return expression", 69), jule::Slice<jule::Any>());
					return false;;
				};
				return true;;
			}
		}
		else if (((((*(_self_))._field_exprs.len() > 0LL) && ((*(_self_))._field_f != nullptr)) && _1aa331a6c_IsVoid((*(*(_self_))._field_f.alloc)._field_Decl.ptr()))) {
			_case_begin_1bc831e06:;
			{
				_1aa3be434_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("void functions is cannot returns any value", 42), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if ((((*(_self_))._field_exprs.len() == 1LL) && ((*(_self_))._field_types.len() > 1LL))) {
			_case_begin_1bc831e6c:;
			{
				{
					auto &_match_expr{ (*((*(_self_))._field_exprs[0LL]))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type85) {
						_case_begin_1bc836625:;
						{
							if (_1aa445c19_tryFuncMultiRetForward(_self_)) {
								return true;;
							};
						}
					}
					_match_end_1bc83657b:;
				};
				_1aa3be434_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (((*(_self_))._field_exprs.len() < (*(_self_))._field_types.len())) {
			_case_begin_1bc831ed3:;
			{
				_1aa3be434_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
			}
		}
		else if (((*(_self_))._field_exprs.len() > (*(_self_))._field_types.len())) {
			_case_begin_1bc832049:;
			{
				_1aa3be434_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("overflow return expressions", 27), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bc831c3b:;
	};
	_1aa445983_checkExprs(_self_);
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa44506a_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa39b0ae_ImportInfo> _1aa447aea_SelectPackage(_1aa4475cd_SymbolTable* _self_, jule::Fn<jule::Bool,jule::Ptr<_1aa39b0ae_ImportInfo>> _2729_selector) {
	if ((_2729_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc839c33:;
		if (it != expr_end) {
			jule::Ptr<_1aa39b0ae_ImportInfo> _3115_pkg = *it;
			{
				if (_2729_selector(_3115_pkg)) {
					return _3115_pkg;;
				};
			}
			_iter_next_1bc839c33:;
			++it;
			goto _iter_begin_1bc839c33;
		}
		_iter_end_1bc839c33:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa3e4d3e_Var> _1aa447ee6_FindVar(_1aa4475cd_SymbolTable* _self_, jule::Str _4123_ident, jule::Bool _4135_binded) {
	return _1aa44a12a_findVar(_self_, &(_4123_ident), _4135_binded, false);;
}



inline jule::Ptr<_1a6019858_TypeAlias> _1aa4483e2_FindTypeAlias(_1aa4475cd_SymbolTable* _self_, jule::Str _4729_ident, jule::Bool _4741_binded) {
	return _1aa44a5d1_findTypeAlias(_self_, &(_4729_ident), _4741_binded, false);;
}



inline jule::Ptr<_1aa31b518_Struct> _1aa4487dd_FindStruct(_1aa4475cd_SymbolTable* _self_, jule::Str _5326_ident, jule::Bool _5338_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc83c142:;
		if (it != expr_end) {
			jule::Ptr<_1aa31b518_Struct> _5415_s = *it;
			{
				if ((((*(_5415_s))._field_Ident == _5326_ident) && ((*_5415_s.alloc)._field_Binded == _5338_binded))) {
					return _5415_s;;
				};
			}
			_iter_next_1bc83c142:;
			++it;
			goto _iter_begin_1bc83c142;
		}
		_iter_end_1bc83c142:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa3315b6_Fn> _1aa448bd9_FindFn(_1aa4475cd_SymbolTable* _self_, jule::Str _6422_ident, jule::Bool _6434_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc83d682:;
		if (it != expr_end) {
			jule::Ptr<_1aa3315b6_Fn> _6515_f = *it;
			{
				if ((((*(_6515_f))._field_Ident == _6422_ident) && ((*_6515_f.alloc)._field_Binded == _6434_binded))) {
					return _6515_f;;
				};
			}
			_iter_next_1bc83d682:;
			++it;
			goto _iter_begin_1bc83d682;
		}
		_iter_end_1bc83d682:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa345047_Trait> _1aa44902a_FindTrait(_1aa4475cd_SymbolTable* _self_, jule::Str _7525_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc83e980:;
		if (it != expr_end) {
			jule::Ptr<_1aa345047_Trait> _7615_t = *it;
			{
				if (((*(_7615_t))._field_Ident == _7525_ident)) {
					return _7615_t;;
				};
			}
			_iter_next_1bc83e980:;
			++it;
			goto _iter_begin_1bc83e980;
		}
		_iter_end_1bc83e980:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa347753_Enum> _1aa44936b_FindEnum(_1aa4475cd_SymbolTable* _self_, jule::Str _8624_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc840970:;
		if (it != expr_end) {
			jule::Ptr<_1aa347753_Enum> _8715_e = *it;
			{
				if (((*(_8715_e))._field_Ident == _8624_ident)) {
					return _8715_e;;
				};
			}
			_iter_next_1bc840970:;
			++it;
			goto _iter_begin_1bc840970;
		}
		_iter_end_1bc840970:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa348e5d_TypeEnum> _1aa4496ac_FindTypeEnum(_1aa4475cd_SymbolTable* _self_, jule::Str _9728_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc84193d:;
		if (it != expr_end) {
			jule::Ptr<_1aa348e5d_TypeEnum> _9815_e = *it;
			{
				if (((*(_9815_e))._field_Ident == _9728_ident)) {
					return _9815_e;;
				};
			}
			_iter_next_1bc84193d:;
			++it;
			goto _iter_begin_1bc84193d;
		}
		_iter_end_1bc84193d:;
	};
	return nullptr;;
}



inline jule::I32 _1aa449b74_findVar1(_1aa4475cd_SymbolTable* _self_, jule::Ptr<_1aa3e4d3e_Var>* _10825_v) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc84290b:;
		if (it != expr_end) {
			jule::I32 _1097_i = it - expr->begin();
			{
				if (((*(_self_))._field_Vars[_1097_i] == (*(_10825_v)))) {
					return _1097_i;;
				};
			}
			_iter_next_1bc84290b:;
			++it;
			_1097_i++;
			goto _iter_begin_1bc84290b;
		}
		_iter_end_1bc84290b:;
	};
	return -1LL;;
}



inline jule::Ptr<_1aa3e4d3e_Var> _1aa44a12a_findVar(_1aa4475cd_SymbolTable* _self_, jule::Str* _11724_ident, jule::Bool _11736_binded, jule::Bool _11750_reverse) {
	if (_11750_reverse) {
		jule::I32 _1198_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_1198_i >= 0LL); (_1198_i)--) {
			{
				jule::Ptr<_1aa3e4d3e_Var> _1219_v = (*(_self_))._field_Vars[_1198_i];;
				if ((((*(_1219_v))._field_Ident == (*(_11724_ident))) && ((*_1219_v.alloc)._field_Binded == _11736_binded))) {
					return _1219_v;;
				};
			}
		_iter_next_1bc844798:;
		}
		_iter_end_1bc844798:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc844875:;
			if (it != expr_end) {
				jule::Ptr<_1aa3e4d3e_Var> _12716_v = *it;
				{
					if ((((*(_12716_v))._field_Ident == (*(_11724_ident))) && ((*_12716_v.alloc)._field_Binded == _11736_binded))) {
						return _12716_v;;
					};
				}
				_iter_next_1bc844875:;
				++it;
				goto _iter_begin_1bc844875;
			}
			_iter_end_1bc844875:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1a6019858_TypeAlias> _1aa44a5d1_findTypeAlias(_1aa4475cd_SymbolTable* _self_, jule::Str* _13630_ident, jule::Bool _13642_binded, jule::Bool _13656_reverse) {
	if (_13656_reverse) {
		jule::I32 _1388_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_1388_i >= 0LL); (_1388_i)--) {
			{
				jule::Ptr<_1a6019858_TypeAlias> _1409_ta = (*(_self_))._field_TypeAliases[_1388_i];;
				if ((((*(_1409_ta))._field_Ident == (*(_13630_ident))) && ((*_1409_ta.alloc)._field_Binded == _13642_binded))) {
					return _1409_ta;;
				};
			}
		_iter_next_1bc847adc:;
		}
		_iter_end_1bc847adc:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc847bb9:;
			if (it != expr_end) {
				jule::Ptr<_1a6019858_TypeAlias> _14616_ta = *it;
				{
					if ((((*(_14616_ta))._field_Ident == (*(_13630_ident))) && ((*_14616_ta.alloc)._field_Binded == _13642_binded))) {
						return _14616_ta;;
					};
				}
				_iter_next_1bc847bb9:;
				++it;
				goto _iter_begin_1bc847bb9;
			}
			_iter_end_1bc847bb9:;
		};
	};
	return nullptr;;
}



inline jule::Any _1aa44a9cc_defByIdent(_1aa4475cd_SymbolTable* _self_, jule::Str* _15727_ident, jule::Bool _15739_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc84a293:;
		if (it != expr_end) {
			jule::Ptr<_1aa3e4d3e_Var> _15815_v = *it;
			{
				if ((((*(_15815_v))._field_Ident == (*(_15727_ident))) && ((*_15815_v.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_15815_v, &__jule_any_type8);;
				};
			}
			_iter_next_1bc84a293:;
			++it;
			goto _iter_begin_1bc84a293;
		}
		_iter_end_1bc84a293:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc84a5d4:;
		if (it != expr_end) {
			jule::Ptr<_1a6019858_TypeAlias> _16415_ta = *it;
			{
				if ((((*(_16415_ta))._field_Ident == (*(_15727_ident))) && ((*_16415_ta.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_16415_ta, &__jule_any_type27);;
				};
			}
			_iter_next_1bc84a5d4:;
			++it;
			goto _iter_begin_1bc84a5d4;
		}
		_iter_end_1bc84a5d4:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc84b54c:;
		if (it != expr_end) {
			jule::Ptr<_1aa31b518_Struct> _17015_s = *it;
			{
				if ((((*(_17015_s))._field_Ident == (*(_15727_ident))) && ((*_17015_s.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_17015_s, &__jule_any_type23);;
				};
			}
			_iter_next_1bc84b54c:;
			++it;
			goto _iter_begin_1bc84b54c;
		}
		_iter_end_1bc84b54c:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc84c3b6:;
		if (it != expr_end) {
			jule::Ptr<_1aa3315b6_Fn> _17615_f = *it;
			{
				if ((((*(_17615_f))._field_Ident == (*(_15727_ident))) && ((*_17615_f.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_17615_f, &__jule_any_type26);;
				};
			}
			_iter_next_1bc84c3b6:;
			++it;
			goto _iter_begin_1bc84c3b6;
		}
		_iter_end_1bc84c3b6:;
	};
	if (_15739_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc84e42e:;
		if (it != expr_end) {
			jule::Ptr<_1aa345047_Trait> _18615_t = *it;
			{
				if (((*(_18615_t))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_18615_t, &__jule_any_type10);;
				};
			}
			_iter_next_1bc84e42e:;
			++it;
			goto _iter_begin_1bc84e42e;
		}
		_iter_end_1bc84e42e:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc84eaa0:;
		if (it != expr_end) {
			jule::Ptr<_1aa347753_Enum> _19215_e = *it;
			{
				if (((*(_19215_e))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_19215_e, &__jule_any_type24);;
				};
			}
			_iter_next_1bc84eaa0:;
			++it;
			goto _iter_begin_1bc84eaa0;
		}
		_iter_end_1bc84eaa0:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc850045:;
		if (it != expr_end) {
			jule::Ptr<_1aa348e5d_TypeEnum> _19815_te = *it;
			{
				if (((*(_19815_te))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_19815_te, &__jule_any_type25);;
				};
			}
			_iter_next_1bc850045:;
			++it;
			goto _iter_begin_1bc850045;
		}
		_iter_end_1bc850045:;
	};
	return nullptr;;
}



inline jule::Bool _1aa44ae83_isDuplicatedIdent(_1aa4475cd_SymbolTable* _self_, jule::Uintptr _21029_itself, jule::Str* _21047_ident, jule::Bool _21059_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc851c7d:;
		if (it != expr_end) {
			jule::Ptr<_1aa3e4d3e_Var> *_21110_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21110_v))) != _21029_itself) && ((*((*(_21110_v))))._field_Ident == (*(_21047_ident)))) && ((*(*(_21110_v)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1bc851c7d:;
			++it;
			goto _iter_begin_1bc851c7d;
		}
		_iter_end_1bc851c7d:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc8520d0:;
		if (it != expr_end) {
			jule::Ptr<_1a6019858_TypeAlias> *_21710_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21710_ta))) != _21029_itself) && ((*((*(_21710_ta))))._field_Ident == (*(_21047_ident)))) && ((*(*(_21710_ta)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1bc8520d0:;
			++it;
			goto _iter_begin_1bc8520d0;
		}
		_iter_end_1bc8520d0:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc8532bd:;
		if (it != expr_end) {
			jule::Ptr<_1aa31b518_Struct> *_22310_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22310_s))) != _21029_itself) && ((*((*(_22310_s))))._field_Ident == (*(_21047_ident)))) && ((*(*(_22310_s)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1bc8532bd:;
			++it;
			goto _iter_begin_1bc8532bd;
		}
		_iter_end_1bc8532bd:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc8543ac:;
		if (it != expr_end) {
			jule::Ptr<_1aa3315b6_Fn> *_22910_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22910_f))) != _21029_itself) && ((*((*(_22910_f))))._field_Ident == (*(_21047_ident)))) && ((*(*(_22910_f)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1bc8543ac:;
			++it;
			goto _iter_begin_1bc8543ac;
		}
		_iter_end_1bc8543ac:;
	};
	if (_21059_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc856920:;
		if (it != expr_end) {
			jule::Ptr<_1aa345047_Trait> *_23910_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23910_t))) != _21029_itself) && ((*((*(_23910_t))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1bc856920:;
			++it;
			goto _iter_begin_1bc856920;
		}
		_iter_end_1bc856920:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc8569db:;
		if (it != expr_end) {
			jule::Ptr<_1aa347753_Enum> *_24510_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24510_e))) != _21029_itself) && ((*((*(_24510_e))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1bc8569db:;
			++it;
			goto _iter_begin_1bc8569db;
		}
		_iter_end_1bc8569db:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc8579a9:;
		if (it != expr_end) {
			jule::Ptr<_1aa348e5d_TypeEnum> *_25110_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_25110_te))) != _21029_itself) && ((*((*(_25110_te))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1bc8579a9:;
			++it;
			goto _iter_begin_1bc8579a9;
		}
		_iter_end_1bc8579a9:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa4475cd_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa44cc98_Data_eq(_1aa44cc98_Data *_self_, _1aa44cc98_Data _other_) {
	return 
		(_self_->_field_untyped == _other_._field_untyped) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Lvalue == _self_->_field_Lvalue) &&
		(_self_->_field_IsRune == _self_->_field_IsRune) &&
		(_self_->_field_Model == _self_->_field_Model) &&
		(_self_->_field_Decl == _self_->_field_Decl) &&
		(_self_->_field_Constant == _self_->_field_Constant);
}

inline jule::Bool _1aa44d1b6_IsNil(_1aa44cc98_Data* _self_) {
	return _1a601b77d_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1aa44d44c_IsVoid(_1aa44cc98_Data* _self_) {
	return _1a601ba14_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1aa44d6d3_IsConst(_1aa44cc98_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1aa44da24_GoodOperand(_1aa44cc98_Data* _self_, jule::Ptr<_1aa44cc98_Data>* _10628_other) {
	if ((_1a601d83a_TypeEnum((*((*(_10628_other))))._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1a601cd01_Prim((*((*(_10628_other))))._field_Kind) == nullptr) || (!(_1a6026eb4_IsAny(_1a601cd01_Prim((*((*(_10628_other))))._field_Kind).ptr())))) && (_1a601e60a_Trait((*((*(_10628_other))))._field_Kind) == nullptr)) && (!(_1a601b77d_IsNil((*(_self_))._field_Kind))));;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa44cc98_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa44de20_Value_eq(_1aa44de20_Value *_self_, _1aa44de20_Value _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Data == _self_->_field_Data);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa44de20_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa44e9c0_eval_eq(_1aa44e9c0_eval *_self_, _1aa44e9c0_eval _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_lookup == _self_->_field_lookup) &&
		(_self_->_field_prefix == _self_->_field_prefix) &&
		(_self_->_field_unsafety == _self_->_field_unsafety) &&
		(_self_->_field_immutable == _self_->_field_immutable) &&
		(_self_->_field_ignored == _self_->_field_ignored) &&
		(_self_->_field_disBuiltin == _self_->_field_disBuiltin) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_field == _self_->_field_field) &&
		(_self_->_field_arg == _self_->_field_arg);
}

inline void _1aa450053_pushErr(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa2d51c4_Token> _13723_token, jule::Str _13738_fmt, jule::Slice<jule::Any> _13751_args) {
	_1aa3be434_pushErr((*(_self_))._field_s.ptr(), _13723_token, _13738_fmt, _13751_args);
}



inline void _1aa4503b6_pushSuggestion(_1aa44e9c0_eval* _self_, jule::Str _14230_fmt, jule::Slice<jule::Any> _14243_args) {
	_1aa3be797_pushSuggestion((*(_self_))._field_s.ptr(), _14230_fmt, _14243_args);
}



inline void _1aa4505b4_allowBuiltin(_1aa44e9c0_eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1aa4507b2_disallowBuiltin(_1aa44e9c0_eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1aa450a48_isUnsafe(_1aa44e9c0_eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1aa450cce_isGlobal(_1aa44e9c0_eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data3)) {
			_case_begin_1bc8a7311:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bc8a770c:;
			{
				return false;;
			}
		}
		_match_end_1bc8a76a7:;
	};
}



inline jule::Bool _1aa4510dc_applyNumericPrefix(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa44cc98_Data>* _16939_d) {
	if ((((((*(_16939_d)) == nullptr) || (!(_1aa44d6d3_IsConst((*(_16939_d)).ptr())))) || (_1a601cd01_Prim((*((*(_16939_d))))._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1a6023763_Prim> _1763_prim = _1a601cd01_Prim((*(_self_))._field_prefix.ptr());;
	if ((_1763_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1a6e76ce2_IsFloat(_1a6023ad7_Str(_1763_prim.ptr()))) {
			_case_begin_1bc8a9d4c:;
			{
				(*((*(_16939_d))))._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>((*((*(_self_))._field_prefix)));
				_1a6e7b104_SetF64((*((*(_16939_d))))._field_Constant.ptr(), _1a6e7a279_AsF64((*((*(_16939_d))))._field_Constant));
				(*(*((*(_16939_d))))._field_Constant.alloc)._field_Kind=(*(_1763_prim))._field_Kind;
			}
		}
		else if (_1a6e763c9_IsSigInt(_1a6023ad7_Str(_1763_prim.ptr()))) {
			_case_begin_1bc8a9db3:;
			{
				if ((!(_1aa4338d8_sigAssignable(_1a6023ad7_Str(_1763_prim.ptr()), _16939_d)))) {
					return false;;
				};
				(*((*(_16939_d))))._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>((*((*(_self_))._field_prefix)));
				_1a6e7a532_SetI64((*((*(_16939_d))))._field_Constant.ptr(), _1a6e79c5c_AsI64((*((*(_16939_d))))._field_Constant));
				(*(*((*(_16939_d))))._field_Constant.alloc)._field_Kind=(*(_1763_prim))._field_Kind;
			}
		}
		else if (_1a6e766d7_IsUnsigInt(_1a6023ad7_Str(_1763_prim.ptr()))) {
			_case_begin_1bc8a9e29:;
			{
				if ((!(_1aa433ca1_unsigAssignable(_1a6023ad7_Str(_1763_prim.ptr()), _16939_d)))) {
					return false;;
				};
				(*((*(_16939_d))))._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>((*((*(_self_))._field_prefix)));
				_1a6e7a7da_SetU64((*((*(_16939_d))))._field_Constant.ptr(), _1a6e79ee3_AsU64((*((*(_16939_d))))._field_Constant));
				(*(*((*(_16939_d))))._field_Constant.alloc)._field_Kind=(*(_1763_prim))._field_Kind;
			}
		}
		_match_end_1bc8a9c70:;
	};
	return true;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa45142d_litStr(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa30094d_LitExpr>* _20419_l) {
	jule::Str _2057_s = jule::Str();;
	if (_1aa2d65b0_IsRawStr((*((*(_20419_l))))._field_Value)) {
		_2057_s=_1aa431b39_ToRawStr((*((*(_20419_l))))._field_Value);
	} else {
		_2057_s=_1aa431e7a_ToStr((*((*(_20419_l))))._field_Value);
	};
	jule::Ptr<_1a6e77584_Const> _2117_constant = static__1a6e78354_NewStr(_2057_s);;
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc07a_primStr, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_2117_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_2117_constant});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa45176e_litRune(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa30094d_LitExpr>* _22120_l) {
	jule::I32 _2223_r = _1aa43192a_ToRune((*((*(_22120_l))))._field_Value);;
	jule::Ptr<_1aa44cc98_Data> _2237_data = jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1a6e77a07_NewI64(static_cast<jule::I64>(_2223_r))});;
	if ((_2223_r <= 255LL)) {
		(*(_2237_data))._field_Kind=_1aa5dda60_primU8;
	} else {
		(*(_2237_data))._field_Kind=_1aa5dd4ee_primI32;
	};
	(*(_2237_data))._field_Model=jule::Any(jule::new_ptr<_1aa32cb45_RuneExprModel>(_1aa32cb45_RuneExprModel{._field_Code=_2223_r}), &__jule_any_type86);
	(*_2237_data.alloc)._field_Mutable=true;
	(*_2237_data.alloc)._field_IsRune=true;
	(*_2237_data.alloc)._field_untyped=true;
	return _2237_data;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa451ab0_litFloat(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa30094d_LitExpr>* _24021_l) {
	jule::F64 _2413_f = ({
		auto except = _1a6e5e69d_ParseFloat((*((*(_24021_l))))._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1a6e77584_Const> _2427_constant = static__1a6e7861d_NewF64(_2413_f);;
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=true, ._field_Kind=_1aa5dea0b_primF64, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_2427_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_2427_constant});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa451e01_litInt(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa30094d_LitExpr>* _25223_l) {
	;
	jule::Str _2557_lit = (*((*(_25223_l))))._field_Value;;
	jule::I32 _2567_base = 0LL;;
	{
		
		if (_1ed4731a9_HasPrefix(_2557_lit, jule::Str::lit("0x", 2))) {
			_case_begin_1bc8b98c8:;
			{
				(_2557_lit).mut_slice(2LL);;
				_2567_base=16LLU;
			}
		}
		else if (_1ed4731a9_HasPrefix(_2557_lit, jule::Str::lit("0b", 2))) {
			_case_begin_1bc8b99a5:;
			{
				(_2557_lit).mut_slice(2LL);;
				_2567_base=2LLU;
			}
		}
		else if (_1ed4731a9_HasPrefix(_2557_lit, jule::Str::lit("0o", 2))) {
			_case_begin_1bc8b95ba:;
			{
				(_2557_lit).mut_slice(2LL);;
				_2567_base=8LLU;
			}
		}
		else if (((_2557_lit[0LL] == '0') && (_2557_lit.len() > 1LL))) {
			_case_begin_1bc8b9631:;
			{
				(_2557_lit).mut_slice(1LL);;
				_2567_base=8LLU;
			}
		}
		else {
			_case_begin_1bc8b9554:;
			{
				_2567_base=10LLU;
			}
		}
		_match_end_1bc8b9488:;
	};
	jule::Ptr<_1aa44cc98_Data> _2767_d = jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
	jule::Bool _2787_ok = true;;
	jule::I64 _2793_sig = ({
		auto except = _1a6e57d7d_ParseInt(_2557_lit, _2567_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_2787_ok=false;

			0LL;
		});
	});;
	if (_2787_ok) {
		(*_2767_d.alloc)._field_Constant=static__1a6e77a07_NewI64(_2793_sig);
		(*_2767_d.alloc)._field_Kind=_1aa5dcc5c_primInt;
	} else {
		jule::U64 _2874_unsig = ({
			auto except = _1a6e578c7_ParseUint(_2557_lit, _2567_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1aa450053_pushErr(_self_, (*((*(_25223_l))))._field_Token, jule::Str::lit("arithmetic value overflow: this value too big", 45), jule::Slice<jule::Any>());
				_1aa4503b6_pushSuggestion(_self_, jule::Str::lit("floating-point literals may solve your problem", 46), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		(*_2767_d.alloc)._field_Constant=static__1a6e77cc1_NewU64(_2874_unsig);
		(*_2767_d.alloc)._field_Kind=_1aa5dc894_primUint;
	};
	(*_2767_d.alloc)._field_Model=jule::Any((*_2767_d.alloc)._field_Constant, &__jule_any_type20);
	(*_2767_d.alloc)._field_untyped=true;
	if ((!(_1aa4510dc_applyNumericPrefix(_self_, &(_2767_d))))) {
		_1aa476cc2_fitBitsize(&(_2767_d));
	};
	return _2767_d;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa452242_litNum(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa30094d_LitExpr>* _30723_l) {
	{
		
		if (_1aa2d725e_IsFloat((*((*(_30723_l))))._field_Value)) {
			_case_begin_1bc8c1847:;
			{
				return _1aa451ab0_litFloat(_self_, _30723_l);;
			}
		}
		else {
			_case_begin_1bc8c17d1:;
			{
				return _1aa451e01_litInt(_self_, _30723_l);;
			}
		}
		_match_end_1bc8c16d2:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa452583_evalLit(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa30094d_LitExpr> _31623_lit) {
	{
		
		if (_1aa2d6329_IsStr((*(_31623_lit))._field_Value)) {
			_case_begin_1bc8c29ad:;
			{
				return _1aa45142d_litStr(_self_, &(_31623_lit));;
			}
		}
		else if (_1aa2d6879_IsRune((*(_31623_lit))._field_Value)) {
			_case_begin_1bc8c2a57:;
			{
				return _1aa45176e_litRune(_self_, &(_31623_lit));;
			}
		}
		else if (_1aa2d7528_IsNum((*(_31623_lit))._field_Value)) {
			_case_begin_1bc8c2ace:;
			{
				return _1aa452242_litNum(_self_, &(_31623_lit));;
			}
		}
		else {
			_case_begin_1bc8c246e:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc8c2381:;
	};
}



inline jule::Any _1aa4528c4_findBuiltins(_1aa44e9c0_eval* _self_, jule::Str* _32929_ident) {
	if (_1aa3b851b_IsPub((*(_32929_ident)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data1)) {
				_case_begin_1bc8c4d34:;
				{
					jule::Any _3339_def = _1aa476a91_findBuiltinsImport(_32929_ident, (*(_self_))._field_lookup.cast_ptr<_1aa39b0ae_ImportInfo>((jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data1));;
					if ((_3339_def != nullptr)) {
						return _3339_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data3)) {
				_case_begin_1bc8c4a8c:;
				{
					jule::Any _3389_def = _1a6013ad8_findBuiltinsSema(_32929_ident, (*(_self_))._field_lookup.cast_ptr<_1aa3bb530_sema>((jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data3));;
					if ((_3389_def != nullptr)) {
						return _3389_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data0)) {
				_case_begin_1bc8c4d9a:;
				{
					jule::Any _3439_def = _1a6013ad8_findBuiltinsSema(_32929_ident, (*((*(_self_))._field_lookup.cast_ptr<_1aa381160_scopeChecker>((jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data0)))._field_s);;
					if ((_3439_def != nullptr)) {
						return _3439_def;;
					};
				}
			}
			_match_end_1bc8c4c8a:;
		};
		return nullptr;;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1aa5e0347_findBuiltinDef(_32929_ident);;
}



inline jule::Any _1aa452cc0_getDef(_1aa44e9c0_eval* _self_, jule::Str* _35623_ident, jule::Bool _35635_binded) {
	jule::Ptr<_1aa3e4d3e_Var> _3617_v = ((_1a603a77a_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a6038e60_FindVar((*(_self_))._field_lookup.data, (*(_35623_ident)), _35635_binded);;
	if ((_3617_v != nullptr)) {
		return jule::Any(_3617_v, &__jule_any_type8);;
	};
	jule::Ptr<_1a6019858_TypeAlias> _3667_ta = ((_1a603a77a_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a603935b_FindTypeAlias((*(_self_))._field_lookup.data, (*(_35623_ident)), _35635_binded);;
	if ((_3667_ta != nullptr)) {
		return jule::Any(_3667_ta, &__jule_any_type27);;
	};
	if ((!(_35635_binded))) {
		jule::Ptr<_1aa347753_Enum> _3728_enm = ((_1a603a77a_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a603a2d5_FindEnum((*(_self_))._field_lookup.data, (*(_35623_ident)));;
		if ((_3728_enm != nullptr)) {
			return jule::Any(_3728_enm, &__jule_any_type24);;
		};
		jule::Ptr<_1aa348e5d_TypeEnum> _3778_tenm = ((_1a603a77a_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a603a626_FindTypeEnum((*(_self_))._field_lookup.data, (*(_35623_ident)));;
		if ((_3778_tenm != nullptr)) {
			return jule::Any(_3778_tenm, &__jule_any_type25);;
		};
	};
	jule::Ptr<_1aa3315b6_Fn> _3837_f = ((_1a603a77a_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a6039b53_FindFn((*(_self_))._field_lookup.data, (*(_35623_ident)), _35635_binded);;
	if ((_3837_f != nullptr)) {
		return jule::Any(_3837_f, &__jule_any_type26);;
	};
	jule::Ptr<_1aa31b518_Struct> _3887_s = ((_1a603a77a_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a6039757_FindStruct((*(_self_))._field_lookup.data, (*(_35623_ident)), _35635_binded);;
	if ((_3887_s != nullptr)) {
		return jule::Any(_3887_s, &__jule_any_type23);;
	};
	return _1aa4528c4_findBuiltins(_self_, _35623_ident);;
}



inline jule::Ptr<_1aa337732_ReferenceStack> _1aa453056_getOwnerRefers(_1aa44e9c0_eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data0)) {
			_case_begin_1bc8ce26c:;
			{
				jule::Ptr<_1aa381160_scopeChecker> _3998_sc = _1aa3847c3_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1aa381160_scopeChecker>((jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data0));;
				return (*((*(_3998_sc))._field_owner))._field_Refers;;
			}
		}
		else {
			_case_begin_1bc8ccaea:;
			{
				if ((((*(_self_))._field_owner != nullptr) && ((*(*(_self_))._field_owner.alloc)._field_Scope == nullptr))) {
					return (*(*(_self_))._field_owner.alloc)._field_Refers;;
				};
				if (((*(_self_))._field_field != nullptr)) {
					return (*((*(*(_self_))._field_field.alloc)._field_Owner))._field_Refers;;
				};
			}
		}
		_match_end_1bc8cca95:;
	};
	return nullptr;;
}



inline void _1bc8e4073_pushReference(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa334597_FnIns>* _41537_ref) {
	jule::Ptr<_1aa337732_ReferenceStack> _4167_refers = _1aa453056_getOwnerRefers(_self_);;
	if (((_4167_refers != nullptr) && (!(_1bc8e6608_Exist(_4167_refers, (*(_41537_ref))))))) {
		_1aa338546_Push(_4167_refers, jule::Any((*(_41537_ref)), &__jule_any_type7));
	};
}

inline void _1bc618ccb_pushReference(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa3e4d3e_Var>* _41537_ref) {
	jule::Ptr<_1aa337732_ReferenceStack> _4167_refers = _1aa453056_getOwnerRefers(_self_);;
	if (((_4167_refers != nullptr) && (!(_1bc61b11e_Exist(_4167_refers, (*(_41537_ref))))))) {
		_1aa338546_Push(_4167_refers, jule::Any((*(_41537_ref)), &__jule_any_type8));
	};
}

inline void _1bbae9c19_pushReference(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa31e373_StructIns>* _41537_ref) {
	jule::Ptr<_1aa337732_ReferenceStack> _4167_refers = _1aa453056_getOwnerRefers(_self_);;
	if (((_4167_refers != nullptr) && (!(_1bbaec0e5_Exist(_4167_refers, (*(_41537_ref))))))) {
		_1aa338546_Push(_4167_refers, jule::Any((*(_41537_ref)), &__jule_any_type9));
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa453650__evalEnum(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa347753_Enum> _42225_enm) {
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_42225_enm, (jule::Trait::Type*)&_1a601a194_Kind_mptr_data3)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa453a4b_evalEnum(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa347753_Enum> _43128_enm, jule::Ptr<_1aa2d51c4_Token> _43140_errorToken) {
	if ((!(_1aa3beb93_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_43128_enm))._field_Public, (*_43128_enm.alloc)._field_Token)))) {
		_1aa450053_pushErr(_self_, _43140_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_43128_enm.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1aa4503b6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1aa453650__evalEnum(_self_, _43128_enm);;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa453d8c__evalTypeEnum(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa348e5d_TypeEnum> _44029_enm) {
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_44029_enm, (jule::Trait::Type*)&_1a601a194_Kind_mptr_data4)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa454288_evalTypeEnum(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa348e5d_TypeEnum> _44932_enm, jule::Ptr<_1aa2d51c4_Token> _44948_errorToken) {
	if ((!(_1aa3beb93_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_44932_enm))._field_Public, (*_44932_enm.alloc)._field_Token)))) {
		_1aa450053_pushErr(_self_, _44948_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_44932_enm.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1aa4503b6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1aa453d8c__evalTypeEnum(_self_, _44932_enm);;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa4545c9__evalStruct(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa31e373_StructIns> _45827_s) {
	jule::Ptr<_1aa44cc98_Data> _4597_d = jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_45827_s, (jule::Trait::Type*)&_1a601a194_Kind_mptr_data0)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_45827_s, &__jule_any_type9), ._field_Decl=true, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
	if ((((*(_45827_s))._field_Decl != nullptr) && (*(*(_45827_s))._field_Decl.alloc)._field_Binded)) {
		(*((*(_4597_d))._field_Kind))._field_BindIdent=(*(*(_45827_s))._field_Decl.alloc)._field_Ident;
	};
	return _4597_d;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa4549c5_evalStruct(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa31b518_Struct> _47230_s, jule::Ptr<_1aa2d51c4_Token> _47246_errorToken) {
	if ((!(_1aa3beb93_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_47230_s))._field_Public, (*_47230_s.alloc)._field_Token)))) {
		_1aa450053_pushErr(_self_, _47246_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_47230_s.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1aa4503b6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1aa455179_checkDeprecated(_self_, &((*_47230_s.alloc)._field_Directives), _47246_errorToken);
	jule::Ptr<_1aa31e373_StructIns> _4817_ins = _1aa31b9ad_instance(_47230_s);;
	if (((*_47230_s.alloc)._field_Generics.len() == 0LL)) {
		jule::Ptr<_1aa31e373_StructIns> _4888_exist = _1aa31bcbb_appendInstance(_47230_s, &(_4817_ins));;
		if ((_4888_exist != nullptr)) {
			_4817_ins=_4888_exist;
		} else {
			if ((!(_1aa3dd420_precheckStructIns((*(_self_))._field_s, &(_4817_ins), _47246_errorToken)))) {
				return nullptr;;
			};
		};
	};
	return _1aa4545c9__evalStruct(_self_, _4817_ins);;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa454d16_evalFnIns(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa334597_FnIns> _50125_f) {
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_50125_f, (jule::Trait::Type*)&_1a601a194_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_50125_f, &__jule_any_type7), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
}



inline void _1aa455179_checkDeprecated(_1aa44e9c0_eval* _self_, jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>>* _51036_directives, jule::Ptr<_1aa2d51c4_Token> _51067_tok) {
	if (_1aa450a48_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1aa2e9a9b_Directive> _5153_d = _1aa4766c8_findDirective(_51036_directives, jule::Str::lit("deprecated", 10));;
	if ((_5153_d != nullptr)) {
		if (((*_5153_d.alloc)._field_Args.len() == 0LL)) {
			_1aa450053_pushErr(_self_, _51067_tok, jule::Str::lit("deprecated usage: @", 19), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("this code is deprecated", 23), &__jule_any_type4); __jule_collection; }));
		} else {
			_1aa450053_pushErr(_self_, _51067_tok, jule::Str::lit("deprecated usage: @", 19), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_5153_d.alloc)._field_Args[0LL]))._field_Kind, &__jule_any_type4); __jule_collection; }));
		};
		_1aa4503b6_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule for deprecated codes or replace to successor", 60), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa455575_evalFn(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa3315b6_Fn> _52626_f, jule::Ptr<_1aa2d51c4_Token> _52634_errorToken) {
	if ((!(_1aa3beb93_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_52626_f))._field_Public, (*_52626_f.alloc)._field_Token)))) {
		_1aa450053_pushErr(_self_, _52634_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_52626_f.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1aa4503b6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1aa455179_checkDeprecated(_self_, &((*_52626_f.alloc)._field_Directives), _52634_errorToken);
	jule::Ptr<_1aa334597_FnIns> _5357_ins = _1aa332d59_instance(_52626_f);;
	if (((*_52626_f.alloc)._field_Generics.len() == 0LL)) {
		jule::Ptr<_1aa334597_FnIns> _5428_exist = _1aa333167_appendInstance(_52626_f, &(_5357_ins));;
		if ((_5428_exist != nullptr)) {
			_5357_ins=_5428_exist;
		};
	};
	_1bc8e4073_pushReference(_self_, &(_5357_ins));
	return _1aa454d16_evalFnIns(_self_, _5357_ins);;
}



inline void _1aa455993_pushIllegalCycleError(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa3e4d3e_Var>* _55138_v1, jule::Ptr<_1aa3e4d3e_Var>* _55149_v2, _1ed486d49_StrBuilder* _55164_message) {
	;
	jule::Str _5533_refers_to = _1ada73079_Logf(jule::Str::lit("@ refers to @", 13), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_55138_v1))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*((*(_55149_v2))))._field_Ident, &__jule_any_type4); __jule_collection; }));;
	jule::Slice<jule::U8> _5543_buf = _1ed491c55_Buf(_55164_message);;
	_1ed4909ac_WriteStr(_55164_message, _1ed472ce1_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1ed4909ac_WriteStr(_55164_message, _5533_refers_to);
	_1ed490c65_WriteByte(_55164_message, '\n');
	_1ed490704_Write(_55164_message, _5543_buf);
}



inline jule::Bool _1aa455d8e_checkCrossCycle(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa3e4d3e_Var>* _56132_v, _1ed486d49_StrBuilder* _56146_message) {
	{
		auto expr = &((*((*(_56132_v))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc8ea7b6:;
		if (it != expr_end) {
			jule::Ptr<_1aa3e4d3e_Var> *_56210_d = it;
			{
				if (((*(_56210_d)) == (*(_self_))._field_owner)) {
					_1aa455993_pushIllegalCycleError(_self_, _56132_v, _56210_d, _56146_message);
					return false;;
				};
				if ((!(_1aa455d8e_checkCrossCycle(_self_, _56210_d, _56146_message)))) {
					_1aa455993_pushIllegalCycleError(_self_, _56132_v, _56210_d, _56146_message);
					return false;;
				};
			}
			_iter_next_1bc8ea7b6:;
			++it;
			goto _iter_begin_1bc8ea7b6;
		}
		_iter_end_1bc8ea7b6:;
	};
	return true;;
}



inline jule::Bool _1aa45628a_checkIllegalCycles(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa3e4d3e_Var>* _57839_v, jule::Ptr<_1aa2d51c4_Token> _57848_declToken) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*((*(_self_))._field_owner))._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_57839_v)))) {
		_1aa450053_pushErr(_self_, (*((*(_self_))._field_owner))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_owner))._field_Ident, &__jule_any_type4); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1ed486d49_StrBuilder _5917_message = static__1ed487146_New(32LL);;
	if ((!(_1aa455d8e_checkCrossCycle(_self_, _57839_v, &(_5917_message))))) {
		jule::Str _5948_errMsg = _1ed4912a4_Str(&_5917_message);;
		_1ed4914a2_Clear(&_5917_message);
		_1aa455993_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _57839_v, &(_5917_message));
		_5948_errMsg+=_1ed4912a4_Str(&_5917_message);
		_1aa450053_pushErr(_self_, _57848_declToken, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_5948_errMsg, &__jule_any_type4); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{ jule::Slice<jule::Ptr<_1aa3e4d3e_Var>> &__jule_push_dest = (*((*(_self_))._field_owner))._field_Depends; __jule_push_dest.push((*(_57839_v))); };
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa456686_evalVar(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa3e4d3e_Var> _60627_v, jule::Ptr<_1aa2d51c4_Token> _60636_errorToken) {
	if ((!(_1aa3beb93_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_60627_v))._field_Public, (*_60627_v.alloc)._field_Token)))) {
		_1aa450053_pushErr(_self_, _60636_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_60627_v.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1aa4503b6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1aa455179_checkDeprecated(_self_, &((*_60627_v.alloc)._field_Directives), _60636_errorToken);
	if (((*_60627_v.alloc)._field_Token == nullptr)) {
		goto _julec_label_1bc620bc3;
	};
	(*_60627_v.alloc)._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data3)) {
			_case_begin_1bc6130e4:;
			{
				jule::Bool _6254_ok = _1aa45628a_checkIllegalCycles(_self_, &(_60627_v), _60636_errorToken);;
				if ((!(_6254_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data0)) {
			_case_begin_1bc612742:;
			{
				jule::Ptr<_1aa381160_scopeChecker> _6308_s = (*(_self_))._field_lookup.cast_ptr<_1aa381160_scopeChecker>((jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data0);;
				jule::Ptr<_1aa381160_scopeChecker> _6318_root = _1aa38453c_getRoot(_6308_s);;
				if ((((*(_6318_root))._field_captured != nullptr) && _1a6017b53_isVarCaptured(_6318_root, _6308_s, _60627_v))) {
					_1aa3842a6_pushCaptured(_6318_root, &(_60627_v));
				};
				if (((!((*_60627_v.alloc)._field_Reference)) || _1aa450a48_isUnsafe(_self_))) {
					goto _match_end_1bc61306c;
				};
				while ((((*_6308_s.alloc)._field_owner == nullptr) && ((*_6308_s.alloc)._field_parent != nullptr))) {
					{
						_6308_s=(*_6308_s.alloc)._field_parent;
					}
				_iter_next_1bc616526:;
				}
				_iter_end_1bc616526:;;
				if (((((*_6308_s.alloc)._field_owner != nullptr) && (*((*_6308_s.alloc)._field_owner))._field_Anon) && ((*_60627_v.alloc)._field_Scope != (*((*_6308_s.alloc)._field_owner))._field_Scope))) {
					_1aa450053_pushErr(_self_, _60636_errorToken, jule::Str::lit("anonymous functions cannot access to reference definition @ of parent scope", 75), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_60627_v.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		_match_end_1bc61306c:;
	};
	if (((*_60627_v.alloc)._field_Scope == nullptr)) {
		_1bc618ccb_pushReference(_self_, &(_60627_v));
	};
	if (((!((*_60627_v.alloc)._field_Binded)) && (((*_60627_v.alloc)._field_Value == nullptr) || ((*((*_60627_v.alloc)._field_Value))._field_Data == nullptr)))) {
		if ((*_60627_v.alloc)._field_Constant) {
			jule::Ptr<_1aa4475cd_SymbolTable> _6589_varfile = _1aa398166_findVarFileInPackage(&((*(*(_self_))._field_s.alloc)._field_files), &(_60627_v));;
			jule::Ptr<_1aa4475cd_SymbolTable> _6599_file = _1aa3bdc5d_getCurrentFile((*(_self_))._field_s);;
			_1aa3be016_setCurrentFile((*(_self_))._field_s, _6589_varfile);
			_1aa3db819_checkVar((*(_self_))._field_s, &(_60627_v), jule::Trait((*(_self_))._field_s, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data3));
			_1aa3be016_setCurrentFile((*(_self_))._field_s, _6599_file);
			if ((((*_60627_v.alloc)._field_Value == nullptr) || ((*((*_60627_v.alloc)._field_Value))._field_Data == nullptr))) {
				return nullptr;;
			};
		};
	};
	if ((((*_60627_v.alloc)._field_Kind == nullptr) || ((*((*_60627_v.alloc)._field_Kind))._field_Kind == nullptr))) {
		if (((*_60627_v.alloc)._field_Scope != nullptr)) {
			return nullptr;;
		};
		jule::Ptr<_1aa4475cd_SymbolTable> _6908_varfile = _1aa398166_findVarFileInPackage(&((*(*(_self_))._field_s.alloc)._field_files), &(_60627_v));;
		jule::Ptr<_1aa4475cd_SymbolTable> _6918_file = _1aa3bdc5d_getCurrentFile((*(_self_))._field_s);;
		_1aa3be016_setCurrentFile((*(_self_))._field_s, _6908_varfile);
		_1aa3db819_checkVar((*(_self_))._field_s, &(_60627_v), (*(_self_))._field_lookup);
		_1aa3be016_setCurrentFile((*(_self_))._field_s, _6918_file);
		if ((((*_60627_v.alloc)._field_Kind == nullptr) || ((*((*_60627_v.alloc)._field_Kind))._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	_julec_label_1bc620bc3:;
	jule::Ptr<_1aa44cc98_Data> _7067_d = jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=(*((*_60627_v.alloc)._field_Kind))._field_Kind, ._field_Mutable=(*_60627_v.alloc)._field_Mutable, ._field_Reference=(*_60627_v.alloc)._field_Reference, ._field_Lvalue=(!((*_60627_v.alloc)._field_Constant)), ._field_IsRune=false, ._field_Model=jule::Any(_60627_v, &__jule_any_type8), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
	if ((((!((*_60627_v.alloc)._field_Binded)) && _1aa3e524b_IsInitialized(_60627_v)) && ((*((*_60627_v.alloc)._field_Value))._field_Data != nullptr))) {
		(*(_7067_d))._field_IsRune=(*((*((*_60627_v.alloc)._field_Value))._field_Data))._field_IsRune;
	};
	if (((*_60627_v.alloc)._field_Constant && ((*((*((*_60627_v.alloc)._field_Value))._field_Data))._field_Constant != nullptr))) {
		(*_7067_d.alloc)._field_Constant=jule::new_ptr<_1a6e77584_Const>((*(*((*((*(_60627_v))._field_Value))._field_Data))._field_Constant.alloc));
		(*_7067_d.alloc)._field_Model=jule::Any((*_7067_d.alloc)._field_Constant, &__jule_any_type20);
		if (_1aa3e5768_untypedConstant(_60627_v)) {
			_1aa4510dc_applyNumericPrefix(_self_, &(_7067_d));
			(*_7067_d.alloc)._field_untyped=true;
		};
	};
	return _7067_d;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa456a82_evalTypeAlias(_1aa44e9c0_eval* _self_, jule::Ptr<_1a6019858_TypeAlias> _73033_ta, jule::Ptr<_1aa2d51c4_Token> _73049_errorToken) {
	if ((!(_1aa3beb93_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_73033_ta))._field_Public, (*_73033_ta.alloc)._field_Token)))) {
		_1aa450053_pushErr(_self_, _73049_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_73033_ta.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1aa4503b6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_73033_ta.alloc)._field_Used=true;
	jule::Trait _7397_kind = (*((*((*_73033_ta.alloc)._field_Kind))._field_Kind))._field_Kind;;
	jule::Ptr<_1aa44cc98_Data> _74011_d = nullptr;;
	{
		auto &_match_expr{ _7397_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data0)) {
			_case_begin_1bc6302ba:;
			{
				_74011_d=_1aa4545c9__evalStruct(_self_, _7397_kind.cast_ptr<_1aa31e373_StructIns>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data0));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data3)) {
			_case_begin_1bc62d32e:;
			{
				_74011_d=_1aa453650__evalEnum(_self_, _7397_kind.cast_ptr<_1aa347753_Enum>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data3));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data4)) {
			_case_begin_1bc62d395:;
			{
				_74011_d=_1aa453d8c__evalTypeEnum(_self_, _7397_kind.cast_ptr<_1aa348e5d_TypeEnum>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data4));
			}
		}
		else {
			_case_begin_1bc62d2b8:;
			{
				_74011_d=jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*((*(_73033_ta))._field_Kind))._field_Kind.alloc)._field_Kind}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});
				if ((*_73033_ta.alloc)._field_Binded) {
					(*((*(_74011_d))._field_Kind))._field_BindIdent=(*_73033_ta.alloc)._field_Ident;
				} else {
					(*((*(_74011_d))._field_Kind))._field_BindIdent=(*(*((*(_73033_ta))._field_Kind))._field_Kind.alloc)._field_BindIdent;
				};
				(*(_74011_d))._field_Model=jule::Any((*_74011_d.alloc)._field_Kind, &__jule_any_type87);
			}
		}
		_match_end_1bc62d197:;
	};
	(*((*(_74011_d))._field_Kind))._field_Generic=(*_73033_ta.alloc)._field_Generic;
	return _74011_d;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa456e7d_evalDef(_1aa44e9c0_eval* _self_, jule::Any* _76928_def, jule::Ptr<_1aa2d51c4_Token> _76942_ident) {
	{
		auto &_match_expr{ (*(_76928_def)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bc6339b6:;
			{
				return _1aa456686_evalVar(_self_, (*(_76928_def)).cast_ptr<_1aa3e4d3e_Var>(&__jule_any_type8), _76942_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1bc633796:;
			{
				return _1aa453a4b_evalEnum(_self_, (*(_76928_def)).cast_ptr<_1aa347753_Enum>(&__jule_any_type24), _76942_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1bc633a2c:;
			{
				return _1aa454288_evalTypeEnum(_self_, (*(_76928_def)).cast_ptr<_1aa348e5d_TypeEnum>(&__jule_any_type25), _76942_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1bc633a93:;
			{
				return _1aa4549c5_evalStruct(_self_, (*(_76928_def)).cast_ptr<_1aa31b518_Struct>(&__jule_any_type23), _76942_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1bc633b09:;
			{
				jule::Ptr<_1aa3315b6_Fn> _7808_f = (*(_76928_def)).cast_ptr<_1aa3315b6_Fn>(&__jule_any_type26);;
				if ((!(*(_7808_f))._field_Ident.equal("init", 4))) {
					return _1aa455575_evalFn(_self_, _7808_f, _76942_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bc633b81:;
			{
				return _1aa454d16_evalFnIns(_self_, (*(_76928_def)).cast_ptr<_1aa334597_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1bc633c08:;
			{
				return _1aa456a82_evalTypeAlias(_self_, (*(_76928_def)).cast_ptr<_1a6019858_TypeAlias>(&__jule_any_type27), _76942_ident);;
			}
		}
		_match_end_1bc6338c8:;
	};
	_1aa450053_pushErr(_self_, _76942_ident, jule::Str::lit("undefined identifier: @", 23), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_76942_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa4572be_evalIdent(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa3012cd_IdentExpr> _79329_ident) {
	jule::Any _7947_def = _1aa452cc0_getDef(_self_, &((*(_79329_ident))._field_Ident), (*_79329_ident.alloc)._field_Binded);;
	return _1aa456e7d_evalDef(_self_, &(_7947_def), (*_79329_ident.alloc)._field_Token);;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa457610_evalUnary(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa301a70_UnaryExpr> _79830_u) {
	_1aa46d1e7_unaryEval _7997_unary = static__1aa46d66a_new(_self_);;
	return _1aa46ea9a_eval(&_7997_unary, _79830_u);;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa457951_evalVariadic(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa301e49_VariadicExpr> _80333_v) {
	if (((*(_80333_v))._field_Expr == nullptr)) {
		_1aa450053_pushErr(_self_.ptr(), (*_80333_v.alloc)._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a601a64a_TypeKind> _8097_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_8097_prefix;
	});;
	jule::Ptr<_1aa44cc98_Data> _8137_d = _1aa46cc63_evalExpr(_self_, (*_80333_v.alloc)._field_Expr);;
	if ((_8137_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a601ca6a_Variadicable((*(_8137_d))._field_Kind.ptr())))) {
		_1aa450053_pushErr(_self_, (*_80333_v.alloc)._field_Token, jule::Str::lit("type @ is not variadicable", 26), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_8137_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	_1a6017724_makeVariadic(&(_8137_d), (*(_1a601dd57_Slc((*(_8137_d))._field_Kind)))._field_Elem);
	return _8137_d;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa457c92_evalUnsafe(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa300d27_UnsafeExpr> _82531_u) {
	jule::Bool _8263_unsafety = (*(_self_))._field_unsafety;;
	(*_self_.alloc)._field_unsafety=true;
	jule::Ptr<_1aa44cc98_Data> _8287_d = _1aa46cc63_evalExpr(_self_, (*(_82531_u))._field_Expr);;
	(*_self_.alloc)._field_unsafety=_8263_unsafety;
	return _8287_d;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa4580d3_evalArr(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa306019_SliceExpr> _83328_s) {
	jule::Ptr<_1a602a083_Arr> _8357_pt = _1a601dac1_Arr((*(_self_))._field_prefix.ptr());;
	jule::Ptr<_1a602a083_Arr> _8377_arr = jule::new_ptr<_1a602a083_Arr>(_1a602a083_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=(*(_8357_pt))._field_Elem});;
	jule::Bool _8437_filled = false;;
	if (((*(_83328_s))._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ (*((*(_83328_s))._field_Exprs[1LL]))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type79) {
				_case_begin_1bc643d39:;
				{
					if (((*((*((*(_83328_s))._field_Exprs[1LL]))._field_Kind.unsafe_cast_ptr<_1aa301e49_VariadicExpr>()))._field_Expr != nullptr)) {
						goto _match_end_1bc643c90;
					};
					if ((*_8357_pt.alloc)._field_Auto) {
						_1aa450053_pushErr(_self_, (*_83328_s.alloc)._field_Token, jule::Str::lit("auto-sized arrays cannot filled", 31), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_8437_filled=true;
					((*(_83328_s))._field_Exprs).mut_slice(0LL, 1LL);;
				}
			}
			_match_end_1bc643c90:;
		};
	};
	(*(_8377_arr))._field_N=(*_83328_s.alloc)._field_Exprs.len();
	if ((!((*_8357_pt.alloc)._field_Auto))) {
		if (((*_8377_arr.alloc)._field_N > (*_8357_pt.alloc)._field_N)) {
			_1aa450053_pushErr(_self_, (*_83328_s.alloc)._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else if (((*_8377_arr.alloc)._field_N < (*_8357_pt.alloc)._field_N)) {
			(*_8377_arr.alloc)._field_N=(*_8357_pt.alloc)._field_N;
		};
	};
	jule::Ptr<_1aa328aec_ArrayExprModel> _8727_model = jule::new_ptr<_1aa328aec_ArrayExprModel>(_1aa328aec_ArrayExprModel{._field_Kind=_8377_arr, ._field_Elems=jule::Slice<jule::Any>(nullptr)});;
	if (_8437_filled) {
		(*(_8727_model))._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 2LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
	} else {
		(*(_8727_model))._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, (*_83328_s.alloc)._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
	};
	jule::Ptr<_1a601a64a_TypeKind> _8817_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=(*_8377_arr.alloc)._field_Elem;
	{
		auto expr = &((*_83328_s.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc64aa77:;
		if (it != expr_end) {
			jule::Ptr<_1aa2ee9b3_Expr> _88315_elem = *it;
			{
				jule::Ptr<_1aa44cc98_Data> _8848_d = _1aa46cc63_evalExpr(_self_, _88315_elem);;
				if ((_8848_d == nullptr)) {
					goto _iter_next_1bc64aa77;
				};
				;
				if (_1aa3d1534_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_8377_arr.alloc)._field_Elem), &(_8848_d), &((*(_88315_elem))._field_Token))) {
					_1aa3cbc9e_checkAssignType((*(_self_))._field_s, false, &((*_8377_arr.alloc)._field_Elem), &(_8848_d), (*_88315_elem.alloc)._field_Token);
				};
				(*(_8727_model))._field_Elems=jule::append((*_8727_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8848_d))._field_Model; __jule_collection; }));
			}
			_iter_next_1bc64aa77:;
			++it;
			goto _iter_begin_1bc64aa77;
		}
		_iter_end_1bc64aa77:;
	};
	(*_self_.alloc)._field_prefix=_8817_prefix;
	if (_8437_filled) {
		(*_8727_model.alloc)._field_Elems=jule::append((*_8727_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = nullptr; __jule_collection; }));
	};
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_8377_arr, (jule::Trait::Type*)&_1a601a194_Kind_mptr_data27)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8727_model, &__jule_any_type88), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa458589_evalExpSlc(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa306019_SliceExpr> _91031_s, jule::Ptr<_1a601a64a_TypeKind> _91050_t, jule::Any _91068_first) {
	jule::Ptr<_1a6027c62_Slc> _9117_slc = jule::new_ptr<_1a6027c62_Slc>(_1a6027c62_Slc{._field_Elem=_91050_t});;
	jule::I32 _9157_i = 0LL;;
	jule::Ptr<_1aa325ad8_SliceExprModel> _9167_model = jule::new_ptr<_1aa325ad8_SliceExprModel>(_1aa325ad8_SliceExprModel{._field_ElemKind=_91050_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, (*(_91031_s))._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
	if ((_91068_first != nullptr)) {
		(*(_9167_model))._field_Elems=jule::append((*_9167_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _91068_first; __jule_collection; }));
		_9157_i=1LL;
	};
	jule::Ptr<_1a601a64a_TypeKind> _9257_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=(*(_9117_slc))._field_Elem;
	{
		auto expr = (*_91031_s.alloc)._field_Exprs.slice(_9157_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1bc653bd4:;
		if (it != expr_end) {
			jule::Ptr<_1aa2ee9b3_Expr> _92715_elem = *it;
			{
				jule::Ptr<_1aa44cc98_Data> _9288_d = _1aa46cc63_evalExpr(_self_, _92715_elem);;
				if ((_9288_d != nullptr)) {
					;
					if (_1aa3d1534_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_9117_slc.alloc)._field_Elem), &(_9288_d), &((*(_92715_elem))._field_Token))) {
						_1aa3cbc9e_checkAssignType((*(_self_))._field_s, false, &((*_9117_slc.alloc)._field_Elem), &(_9288_d), (*_92715_elem.alloc)._field_Token);
					};
					(*_9167_model.alloc)._field_Elems=jule::append((*_9167_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_9288_d.alloc)._field_Model; __jule_collection; }));
				};
			}
			_iter_next_1bc653bd4:;
			++it;
			goto _iter_begin_1bc653bd4;
		}
		_iter_end_1bc653bd4:;
	};
	(*_self_.alloc)._field_prefix=_9257_prefix;
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_9117_slc, (jule::Trait::Type*)&_1a601a194_Kind_mptr_data24)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9167_model, &__jule_any_type80), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa4588ca_evalSliceExpr(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa306019_SliceExpr> _94834_s) {
	if (((*(_self_))._field_prefix != nullptr)) {
		{
			
			if ((_1a601dac1_Arr((*(_self_))._field_prefix) != nullptr)) {
				_case_begin_1bc658634:;
				{
					return _1aa4580d3_evalArr(_self_, _94834_s);;
				}
			}
			else if ((_1a601dd57_Slc((*(_self_))._field_prefix) != nullptr)) {
				_case_begin_1bc6586cd:;
				{
					jule::Ptr<_1a6027c62_Slc> _9549_pt = _1a601dd57_Slc((*(_self_))._field_prefix);;
					return _1aa458589_evalExpSlc(_self_, _94834_s, (*(_9549_pt))._field_Elem, nullptr);;
				}
			}
			_match_end_1bc658557:;
		};
	};
	jule::Ptr<_1a601a64a_TypeKind> _9597_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	if (((*(_94834_s))._field_Exprs.len() == 0LL)) {
		_1aa450053_pushErr(_self_, (*_94834_s.alloc)._field_Token, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa2ee9b3_Expr> _9677_firstExpr = (*_94834_s.alloc)._field_Exprs[0LL];;
	jule::Ptr<_1aa44cc98_Data> _9687_firstElem = _1aa46cc63_evalExpr(_self_, _9677_firstExpr);;
	if ((_9687_firstElem == nullptr)) {
		return nullptr;;
	};
	;
	_1aa3d1534_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*(_9687_firstElem))._field_Kind), &(_9687_firstElem), &((*(_9677_firstExpr))._field_Token));
	jule::Ptr<_1aa44cc98_Data> _9787_d = _1aa458589_evalExpSlc(_self_, _94834_s, (*(_9687_firstElem))._field_Kind, (*(_9687_firstElem))._field_Model);;
	(*_self_.alloc)._field_prefix=_9597_prefix;
	return _9787_d;;
}



inline void _1aa458c3d_checkIntegerIndexingByData(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa44cc98_Data>* _98447_d, jule::Ptr<_1aa2d51c4_Token> _98461_token) {
	jule::Str _9853_errKey = _1a60153d1_checkDataForIntegerIndexing(_98447_d, &(_98461_token));;
	{
		auto &_match_expr{ _9853_errKey };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1bc66130c:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str::lit("type @ is invalid for indexing", 30)) {
			_case_begin_1bc660ecc:;
			{
				_1aa450053_pushErr(_self_, _98461_token, _9853_errKey, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*((*(_98447_d))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
			}
		}
		else {
			_case_begin_1bc660b47:;
			{
				_1aa450053_pushErr(_self_, _98461_token, _9853_errKey, jule::Slice<jule::Any>());
			}
		}
		_match_end_1bc660dde:;
	};
}



inline void _1aa45915b_indexingPtr(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa44cc98_Data>* _99632_d, jule::Ptr<_1aa44cc98_Data>* _99647_index, jule::Ptr<_1aa306976_IndexingExpr>* _99666_i) {
	_1aa458c3d_checkIntegerIndexingByData(_self_, _99647_index, (*((*(_99666_i))))._field_Token);
	(*((*(_99632_d))))._field_Lvalue=true;
	jule::Ptr<_1a602aa56_Ptr> _10007_ptr = _1a601d31d_Ptr((*((*(_99632_d))))._field_Kind.ptr());;
	{
		
		if (_1a602b5c3_IsUnsafe(_10007_ptr.ptr())) {
			_case_begin_1bc663dc0:;
			{
				_1aa450053_pushErr(_self_, (*((*(_99666_i))))._field_Token, jule::Str::lit("unsafe pointers are not supports indexing", 41), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1aa450a48_isUnsafe(_self_)))) {
			_case_begin_1bc663e58:;
			{
				_1aa450053_pushErr(_self_, (*((*(_99666_i))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bc663d37:;
	};
	(*((*(_99632_d))))._field_Kind=(*(_10007_ptr))._field_Elem;
}



inline void _1aa459579_indexingArr(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa44cc98_Data>* _101232_d, jule::Ptr<_1aa44cc98_Data>* _101247_index, jule::Ptr<_1aa306976_IndexingExpr>* _101266_i) {
	jule::Ptr<_1a602a083_Arr> _10137_arr = _1a601dac1_Arr((*((*(_101232_d))))._field_Kind.ptr());;
	(*((*(_101232_d))))._field_Kind=(*(_10137_arr))._field_Elem;
	_1aa458c3d_checkIntegerIndexingByData(_self_, _101247_index, (*((*(_101266_i))))._field_Token);
	(*((*(_101232_d))))._field_Lvalue=true;
	if ((_1aa44d6d3_IsConst((*(_101247_index)).ptr()) && (_1a6e7a279_AsF64((*((*(_101247_index))))._field_Constant.ptr()) >= static_cast<jule::F64>((*_10137_arr.alloc)._field_N)))) {
		_1aa450053_pushErr(_self_, (*((*(_101266_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
	};
}



inline void _1aa459997_indexingSlc(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa44cc98_Data>* _102232_d, jule::Ptr<_1aa44cc98_Data>* _102247_index, jule::Ptr<_1aa306976_IndexingExpr>* _102266_i) {
	jule::Ptr<_1a6027c62_Slc> _10237_slc = _1a601dd57_Slc((*((*(_102232_d))))._field_Kind.ptr());;
	(*((*(_102232_d))))._field_Kind=(*(_10237_slc))._field_Elem;
	_1aa458c3d_checkIntegerIndexingByData(_self_, _102247_index, (*((*(_102266_i))))._field_Token);
	(*((*(_102232_d))))._field_Lvalue=true;
	if ((!(_1aa44d6d3_IsConst((*(_102247_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_102232_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1bc66b1e6:;
			{
				jule::Ptr<_1aa325ad8_SliceExprModel> _10348_m = (*((*(_102232_d))))._field_Model.unsafe_cast_ptr<_1aa325ad8_SliceExprModel>();;
				jule::F64 _10354_indx = _1a6e7a279_AsF64((*((*(_102247_index))))._field_Constant.ptr());;
				if ((_10354_indx >= static_cast<jule::F64>((*(_10348_m))._field_Elems.len()))) {
					_1aa450053_pushErr(_self_, (*((*(_102266_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
				} else {
					(*((*(_102232_d))))._field_Model=(*(_10348_m))._field_Elems[static_cast<jule::I32>(static_cast<jule::U64>(_10354_indx))];
					(*((*(_102232_d))))._field_Decl=true;
				};
			}
		}
		_match_end_1bc66b191:;
	};
}



inline void _1aa459db5_indexingMap(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa44cc98_Data>* _104532_d, jule::Ptr<_1aa44cc98_Data>* _104547_index, jule::Ptr<_1aa306976_IndexingExpr>* _104566_i) {
	(*((*(_104532_d))))._field_Lvalue=true;
	if (((*(_104547_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1a6029406_Map> _10507_m = _1a601e891_Map((*((*(_104532_d))))._field_Kind.ptr());;
	_1aa4363ad_assignTypeChecker _10517_atc = _1aa4363ad_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_10507_m))._field_Key, ._field_d=(*(_104547_index)), ._field_errorToken=(*((*(_104566_i))))._field_Token};;
	_1aa4373ae_check(&_10517_atc);
	(*((*(_104532_d))))._field_Kind=(*_10507_m.alloc)._field_Val;
}



inline void _1aa45a2d3_indexingStr(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa44cc98_Data>* _106132_d, jule::Ptr<_1aa44cc98_Data>* _106147_index, jule::Ptr<_1aa306976_IndexingExpr>* _106166_i) {
	(*((*(_106132_d))))._field_Kind=_1aa5dda60_primU8;
	(*((*(_106132_d))))._field_Mutable=false;
	(*((*(_106132_d))))._field_Lvalue=true;
	if (((*(_106147_index)) == nullptr)) {
		return;;
	};
	_1aa458c3d_checkIntegerIndexingByData(_self_, _106147_index, (*((*(_106166_i))))._field_Token);
	if ((!(_1aa44d6d3_IsConst((*(_106147_index)).ptr())))) {
		(*((*(_106132_d))))._field_Constant=nullptr;
		(*((*(_106132_d))))._field_untyped=false;
		return;;
	};
	if (_1aa44d6d3_IsConst((*(_106132_d)).ptr())) {
		jule::Ptr<_1aa2d51c4_Token> _10794_errorToken = (*((*(_106166_i))))._field_Token;;
		jule::I64 _10804_j = _1a6e79c5c_AsI64((*((*(_106147_index))))._field_Constant.ptr());;
		jule::Str _10814_s = _1a6e79740_ReadStr((*((*(_106132_d))))._field_Constant);;
		if ((static_cast<jule::I32>(_10804_j) >= _10814_s.len())) {
			_1aa450053_pushErr(_self_, _10794_errorToken, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else {
			_1a6e7a7da_SetU64((*((*(_106132_d))))._field_Constant, static_cast<jule::U64>(_10814_s[static_cast<jule::I32>(_10804_j)]));
		};
	};
}



inline void _1aa45a701_toIndexing(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa44cc98_Data>* _109031_d, jule::Ptr<_1aa44cc98_Data>* _109046_index, jule::Ptr<_1aa306976_IndexingExpr>* _109065_i) {
	{
		
		if ((_1a601d31d_Ptr((*((*(_109031_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc677972:;
			{
				_1aa45915b_indexingPtr(_self_, _109031_d, _109046_index, _109065_i);
				return;;
			}
		}
		else if ((_1a601dac1_Arr((*((*(_109031_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc677a1b:;
			{
				_1aa459579_indexingArr(_self_, _109031_d, _109046_index, _109065_i);
				return;;
			}
		}
		else if ((_1a601dd57_Slc((*((*(_109031_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc677a82:;
			{
				_1aa459997_indexingSlc(_self_, _109031_d, _109046_index, _109065_i);
				return;;
			}
		}
		else if ((_1a601e891_Map((*((*(_109031_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc677ae8:;
			{
				_1aa459db5_indexingMap(_self_, _109031_d, _109046_index, _109065_i);
				return;;
			}
		}
		else if ((_1a601cd01_Prim((*((*(_109031_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc677b5e:;
			{
				jule::Ptr<_1a6023763_Prim> _11054_prim = _1a601cd01_Prim((*((*(_109031_d))))._field_Kind);;
				{
					
					if (_1a6026c2d_IsStr(_11054_prim.ptr())) {
						_case_begin_1bc67beb5:;
						{
							_1aa45a2d3_indexingStr(_self_, _109031_d, _109046_index, _109065_i);
							return;;
						}
					}
					_match_end_1bc67be1b:;
				};
			}
		}
		_match_end_1bc67782e:;
	};
	_1aa450053_pushErr(_self_, (*((*(_109065_i))))._field_Token, jule::Str::lit("type @ is not support indexing", 30), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*((*(_109031_d))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
}



inline jule::Bool _1aa45aba7_pushGenericsFromExprSubIdent(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa302ac6_SubIdentExpr>* _111550_sexpr, jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>>* _11168_generics, jule::Ptr<_1aa2ee9b3_Expr>* _111636_expr) {
	jule::Ptr<_1aa2eb053_SubIdentTypeDecl> _11177_t = jule::new_ptr<_1aa2eb053_SubIdentTypeDecl>(_1aa2eb053_SubIdentTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_1aa2eac89_IdentTypeDecl>>(nullptr)});;
	if ((!(_1a60162e4_pushSubIdentFromExpr(jule::Any((*(_111550_sexpr)), &__jule_any_type89), &(_11177_t))))) {
		_1aa450053_pushErr(_self_.ptr(), (*((*(_111636_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>> &__jule_push_dest = (*(_11168_generics)); __jule_push_dest.push(jule::new_ptr<_1aa2ea67e_TypeDecl>(_1aa2ea67e_TypeDecl{._field_Token=jule::Ptr<_1aa2d51c4_Token>(nullptr), ._field_Kind=jule::Any(_11177_t, &__jule_any_type90)})); };
	return true;;
}



inline jule::Bool _1aa45b0a3_pushGenericsFromData(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>>* _112642_generics, jule::Ptr<_1aa2ee9b3_Expr>* _112670_expr) {
	{
		auto &_match_expr{ (*((*(_112670_expr))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1bc6815e6:;
			{
				jule::Ptr<_1aa301a70_UnaryExpr> _11298_u = (*((*(_112670_expr))))._field_Kind.unsafe_cast_ptr<_1aa301a70_UnaryExpr>();;
				{
					auto &_match_expr{ (*((*(_11298_u))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(62LLU)) {
						_case_begin_1bc68353d:;
						{
							jule::Ptr<_1aa2ec1a8_PtrTypeDecl> _11329_kind = jule::new_ptr<_1aa2ec1a8_PtrTypeDecl>(_1aa2ec1a8_PtrTypeDecl{._field_Elem=jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr)});;
							jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>> _11339__generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr); __jule_collection; });;
							_1aa45b0a3_pushGenericsFromData(_self_, &(_11339__generics), &((*(_11298_u))._field_Expr));
							(*_11329_kind.alloc)._field_Elem=_11339__generics[0LL];
							{ jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>> &__jule_push_dest = (*(_112642_generics)); __jule_push_dest.push(jule::new_ptr<_1aa2ea67e_TypeDecl>(_1aa2ea67e_TypeDecl{._field_Token=(*((*(_112670_expr))))._field_Token, ._field_Kind=jule::Any(_11329_kind, &__jule_any_type74)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U32>(65LLU)) {
						_case_begin_1bc6835a4:;
						{
							jule::Ptr<_1aa2eb729_SptrTypeDecl> _11419_kind = jule::new_ptr<_1aa2eb729_SptrTypeDecl>(_1aa2eb729_SptrTypeDecl{._field_Elem=jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr)});;
							jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>> _11429__generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr); __jule_collection; });;
							_1aa45b0a3_pushGenericsFromData(_self_, &(_11429__generics), &((*(_11298_u))._field_Expr));
							(*_11419_kind.alloc)._field_Elem=_11429__generics[0LL];
							{ jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>> &__jule_push_dest = (*(_112642_generics)); __jule_push_dest.push(jule::new_ptr<_1aa2ea67e_TypeDecl>(_1aa2ea67e_TypeDecl{._field_Token=(*((*(_112670_expr))))._field_Token, ._field_Kind=jule::Any(_11419_kind, &__jule_any_type75)})); };
						}
					}
					else {
						_case_begin_1bc6823e9:;
						{
							_1aa450053_pushErr(_self_.ptr(), (*(_11298_u))._field_Op, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1bc68288e:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1bc68165c:;
			{
				{ jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>> &__jule_push_dest = (*(_112642_generics)); __jule_push_dest.push((*((*(_112670_expr))))._field_Kind.cast_ptr<_1aa2ea67e_TypeDecl>(&__jule_any_type92)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1bc68098b:;
			{
				jule::Ptr<_1aa302ac6_SubIdentExpr> _11568_sexpr = (*((*(_112670_expr))))._field_Kind.unsafe_cast_ptr<_1aa302ac6_SubIdentExpr>();;
				return _1aa45aba7_pushGenericsFromExprSubIdent(_self_, &(_11568_sexpr), _112642_generics, _112670_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1bc680a02:;
			{
				jule::Ptr<_1aa3012cd_IdentExpr> _11598_ident = (*((*(_112670_expr))))._field_Kind.unsafe_cast_ptr<_1aa3012cd_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>> &__jule_push_dest = (*(_112642_generics)); __jule_push_dest.push(jule::new_ptr<_1aa2ea67e_TypeDecl>(_1aa2ea67e_TypeDecl{._field_Token=jule::Ptr<_1aa2d51c4_Token>(nullptr), ._field_Kind=jule::Any(jule::new_ptr<_1aa2eac89_IdentTypeDecl>(_1aa2eac89_IdentTypeDecl{._field_Token=(*_11598_ident.alloc)._field_Token, ._field_Ident=(*_11598_ident.alloc)._field_Ident, ._field_Binded=(*(_11598_ident))._field_Binded, ._field_Generics=jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>>(nullptr)}), &__jule_any_type78)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1bc680a68:;
			{
				{
					auto expr = &((*((*((*(_112670_expr))))._field_Kind.unsafe_cast_ptr<_1aa3005a7_TupleExpr>()))._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc689b2c:;
					if (it != expr_end) {
						jule::Ptr<_1aa2ee9b3_Expr> _116816_texpr = *it;
						{
							if ((!(_1aa45b0a3_pushGenericsFromData(_self_, _112642_generics, &(_116816_texpr))))) {
								return false;;
							};
						}
						_iter_next_1bc689b2c:;
						++it;
						goto _iter_begin_1bc689b2c;
					}
					_iter_end_1bc689b2c:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1bc680ace:;
			{
				jule::Ptr<_1aa3026ec_NsSelectionExpr> _11748_ns = (*((*(_112670_expr))))._field_Kind.unsafe_cast_ptr<_1aa3026ec_NsSelectionExpr>();;
				jule::Ptr<_1aa2eac89_IdentTypeDecl> _11758_decl = jule::new_ptr<_1aa2eac89_IdentTypeDecl>(_1aa2eac89_IdentTypeDecl{._field_Token=(*(_11748_ns))._field_Ident, ._field_Ident=(*((*_11748_ns.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>>(nullptr)});;
				{ jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>> &__jule_push_dest = (*(_112642_generics)); __jule_push_dest.push(jule::new_ptr<_1aa2ea67e_TypeDecl>(_1aa2ea67e_TypeDecl{._field_Token=(*(_11758_decl))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1aa2eb42c_NamespaceTypeDecl>(_1aa2eb42c_NamespaceTypeDecl{._field_Idents=(*_11748_ns.alloc)._field_Ns, ._field_Kind=jule::new_ptr<_1aa2ea67e_TypeDecl>(_1aa2ea67e_TypeDecl{._field_Token=(*_11758_decl.alloc)._field_Token, ._field_Kind=jule::Any(_11758_decl, &__jule_any_type78)})}), &__jule_any_type94)})); };
			}
		}
		else {
			_case_begin_1bc680925:;
			{
				_1aa450053_pushErr(_self_.ptr(), (*((*(_112670_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1bc6808c0:;
	};
	return true;;
}



inline void _1aa45b416_evalIdentDeclFromIndexing(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa44cc98_Data>* _119647_d, jule::Ptr<_1aa306976_IndexingExpr>* _119662_i) {
	jule::Ptr<_1aa31e373_StructIns> _11977_s = _1a601e374_Struct((*((*(_119647_d))))._field_Kind.ptr());;
	if ((_11977_s == nullptr)) {
		_1aa450053_pushErr(_self_.ptr(), (*((*((*(_119662_i))))._field_Expr))._field_Token, jule::Str::lit("type not supports generics", 26), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*((*(_119647_d))))._field_Kind), &__jule_any_type4); __jule_collection; }));
		(*(_119647_d))=nullptr;
		return;;
	};
	jule::Ptr<_1aa2eac89_IdentTypeDecl> _120411_decl = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_119662_i))))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1bc691b56:;
			{
				jule::Ptr<_1aa3012cd_IdentExpr> _12078_expr = (*((*((*(_119662_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1aa3012cd_IdentExpr>();;
				_120411_decl=jule::new_ptr<_1aa2eac89_IdentTypeDecl>(_1aa2eac89_IdentTypeDecl{._field_Token=(*_12078_expr.alloc)._field_Token, ._field_Ident=(*_12078_expr.alloc)._field_Ident, ._field_Binded=(*(_12078_expr))._field_Binded, ._field_Generics=jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>>(nullptr)});
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1bc692e32:;
			{
				jule::Ptr<_1aa3026ec_NsSelectionExpr> _12148_expr = (*((*((*(_119662_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1aa3026ec_NsSelectionExpr>();;
				_120411_decl=jule::new_ptr<_1aa2eac89_IdentTypeDecl>(_1aa2eac89_IdentTypeDecl{._field_Token=(*(_12148_expr))._field_Ident, ._field_Ident=(*((*_12148_expr.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>>(nullptr)});
			}
		}
		else {
			_case_begin_1bc6920b8:;
			{
				_1aa450053_pushErr(_self_, (*((*(_119662_i))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				(*(_119647_d))=nullptr;
				return;;
			}
		}
		_match_end_1bc692063:;
	};
	if ((!(_1aa45b0a3_pushGenericsFromData(_self_, &((*(_120411_decl))._field_Generics), &((*((*(_119662_i))))._field_Index))))) {
		(*(_119647_d))=nullptr;
		return;;
	};
	_11977_s=({ auto _wrap_copy = _1aa462e12_typeChecker(_self_); _1a60319c4_fromStruct(&_wrap_copy, &(_120411_decl), &((*(_11977_s))._field_Decl)); });
	if ((_11977_s == nullptr)) {
		(*(_119647_d))=nullptr;
		return;;
	};
	(*(*((*(_119647_d))))._field_Kind.alloc)._field_Kind=jule::Trait(_11977_s, (jule::Trait::Type*)&_1a601a194_Kind_mptr_data0);
}



inline __jule_tuple_bool__jule_tuple_bool _1aa45b8bc_checkGenericFn(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa334597_FnIns>* _123936_f, jule::Ptr<_1aa2d51c4_Token>* _123952_et, jule::Any* _123969_model) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1aa334597_FnIns> _12407_old = (*(_123936_f));;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aa3dc30e_checkGenericFn((*(_self_))._field_s, _123936_f, _123952_et);
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((__jule_func_result.__jule_result_arg0 && __jule_func_result.__jule_result_arg1)) {
		_1a6016080_updateModelToGenericIns(_123969_model, _123936_f);
		_1bbab44ec_updateRefer(_1aa453056_getOwnerRefers(_self_), &(_12407_old), _123936_f);
	};
	return __jule_func_result;;
}



inline void _1aa45bc30_evalFnGenericFromIndexing(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa44cc98_Data>* _125547_d, jule::Ptr<_1aa306976_IndexingExpr>* _125562_i) {
	jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>> _12567_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>>::alloc(0LL, 8LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr); __jule_collection; });;
	if ((!(_1aa45b0a3_pushGenericsFromData(_self_, &(_12567_generics), &((*((*(_125562_i))))._field_Index))))) {
		(*(_125547_d))=nullptr;
		return;;
	};
	jule::Ptr<_1aa334597_FnIns> _12627_f = _1a601e0dd_Fn((*((*(_125547_d))))._field_Kind.ptr());;
	jule::I32 _12637_genericsLen = 0LL;;
	if (((*(_12627_f))._field_Decl != nullptr)) {
		_12637_genericsLen=(*(*(_12627_f))._field_Decl.alloc)._field_Generics.len();
	};
	if ((!(_1aa3c0963_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _12637_genericsLen, _12567_generics.len(), (*((*((*(_125562_i))))._field_Expr))._field_Token)))) {
		(*(_125547_d))=nullptr;
		return;;
	};
	(*_12627_f.alloc)._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>::alloc(0LL, (*(*(_12627_f))._field_Decl.alloc)._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a6018c64_InsGeneric>(nullptr); __jule_collection; });
	{
		auto expr = &(_12567_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbab98cb:;
		if (it != expr_end) {
			jule::Ptr<_1aa2ea67e_TypeDecl> _127415_g = *it;
			{
				jule::Ptr<_1aa44cc98_Data> _12758_k = _1aa463253_evalType(_self_, _127415_g);;
				if ((_12758_k == nullptr)) {
					(*(_125547_d))=nullptr;
					return;;
				};
				(*_12627_f.alloc)._field_Generics=jule::append((*_12627_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a6018c64_InsGeneric>(_1a6018c64_InsGeneric{._field_Kind=(*(_12758_k))._field_Kind, ._field_Constraint=jule::Slice<jule::Ptr<_1a601a64a_TypeKind>>(nullptr)}); __jule_collection; }));
			}
			_iter_next_1bbab98cb:;
			++it;
			goto _iter_begin_1bbab98cb;
		}
		_iter_end_1bbab98cb:;
	};
	if (_1aa335a60_IsBuiltin(_12627_f)) {
		return;;
	};
	jule::Bool _12873_ok;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aa45b8bc_checkGenericFn(_self_, &(_12627_f), &((*(*((*(_125562_i))))._field_Expr.alloc)._field_Token), &((*((*(_125547_d))))._field_Model));
		_12873_ok = __jule_assign_result.__jule_result_arg0;
	});
	if (_12873_ok) {
		(*(*((*(_125547_d))))._field_Kind.alloc)._field_Kind=jule::Trait(_12627_f, (jule::Trait::Type*)&_1a601a194_Kind_mptr_data1);
	} else {
		(*(_125547_d))=nullptr;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa45c071_evalIndexing(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa306976_IndexingExpr> _129533_i) {
	jule::Ptr<_1a601a64a_TypeKind> _12967_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_12967_prefix;
	});;
	jule::Ptr<_1aa44cc98_Data> _13007_d = _1aa46be4e_evalExprKind(_self_, (*((*(_129533_i))._field_Expr))._field_Kind);;
	if ((_13007_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_13007_d))._field_Decl) {
		_1aa45b416_evalIdentDeclFromIndexing(_self_, &(_13007_d), &(_129533_i));
		return _13007_d;;
	};
	if ((_1a601e0dd_Fn((*(_13007_d))._field_Kind.ptr()) != nullptr)) {
		_1aa45bc30_evalFnGenericFromIndexing(_self_, &(_13007_d), &(_129533_i));
		return _13007_d;;
	};
	_1aa44cc98_Data _13167_oldData = (*(_13007_d));;
	jule::Ptr<_1aa44cc98_Data> _13187_index = _1aa46cc63_evalExpr(_self_, (*_129533_i.alloc)._field_Index);;
	if ((_13187_index == nullptr)) {
		return nullptr;;
	};
	(*(_13007_d))._field_Decl=false;
	_1aa45a701_toIndexing(_self_, &(_13007_d), &(_13187_index), &(_129533_i));
	if (_1aa44d6d3_IsConst(_13007_d.ptr())) {
		(*(_13007_d))._field_Decl=false;
		(*(_13007_d))._field_Model=jule::Any((*(_13007_d))._field_Constant, &__jule_any_type20);
	} else if ((*(_13007_d))._field_Decl) {
		(*(_13007_d))._field_Decl=false;
	} else {
		(*(_13007_d))._field_Model=jule::Any(jule::new_ptr<_1aa32608e_IndexingExprModel>(_1aa32608e_IndexingExprModel{._field_Token=(*_129533_i.alloc)._field_Token, ._field_Expr=jule::new_ptr<_1aa44cc98_Data>(_13167_oldData), ._field_Index=_13187_index}), &__jule_any_type53);
	};
	return _13007_d;;
}



inline __jule_tuple_x_1aa44cc98_Data__jule_tuple_x_1aa44cc98_Data _1aa45c3b2_evalSlicingExprs(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa3070d6_SlicingExpr>* _134938_s) {
	__jule_tuple_x_1aa44cc98_Data__jule_tuple_x_1aa44cc98_Data __jule_func_result;
	jule::Ptr<_1a601a64a_TypeKind> _13507_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_13507_prefix;
	});;
	jule::Ptr<_1aa44cc98_Data> _135411_l = nullptr;;
	jule::Ptr<_1aa44cc98_Data> _135511_r = nullptr;;
	if (((*((*(_134938_s))))._field_Start != nullptr)) {
		_135411_l=_1aa46cc63_evalExpr(_self_, (*((*(_134938_s))))._field_Start);
		if ((_135411_l != nullptr)) {
			_1aa458c3d_checkIntegerIndexingByData(_self_, &(_135411_l), (*((*(_134938_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_135411_l=jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dcc5c_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1a6e77a07_NewI64(0LL)});
		(*((*(_135411_l))._field_Constant))._field_Kind=jule::Str::lit("int", 3);
		(*_135411_l.alloc)._field_Model=jule::Any((*_135411_l.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*((*(_134938_s))))._field_To != nullptr)) {
		_135511_r=_1aa46cc63_evalExpr(_self_, (*((*(_134938_s))))._field_To);
		if ((_135511_r != nullptr)) {
			_1aa458c3d_checkIntegerIndexingByData(_self_, &(_135511_r), (*((*(_134938_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _135411_l;
	__jule_func_result.__jule_result_arg1 = _135511_r;
	return __jule_func_result;;
}



inline void _1aa45c66a_slicingArr(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa44cc98_Data>* _138527_d) {
	jule::Ptr<_1a601a64a_TypeKind> _13867_elemType = (*(_1a601dac1_Arr((*((*(_138527_d))))._field_Kind.ptr())))._field_Elem;;
	(*((*(_138527_d))))._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a6027c62_Slc>(_1a6027c62_Slc{._field_Elem=_13867_elemType}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data24)});
	(*((*(_138527_d))))._field_Lvalue=false;
	(*((*(_138527_d))))._field_Mutable=((*((*(_138527_d))))._field_Mutable || (!(_1a601c031_Mutable(_13867_elemType.ptr()))));
}



inline void _1aa45ca88_slicingStr(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa44cc98_Data>* _140027_d, jule::Ptr<_1aa44cc98_Data>* _140038_l, jule::Ptr<_1aa44cc98_Data>* _140049_r) {
	(*((*(_140027_d))))._field_Lvalue=false;
	(*((*(_140027_d))))._field_Mutable=true;
	if ((!(_1aa44d6d3_IsConst((*(_140027_d)).ptr())))) {
		return;;
	};
	if ((((*(_140038_l)) == nullptr) || ((*(_140049_r)) == nullptr))) {
		(*((*(_140027_d))))._field_Constant=nullptr;
		(*((*(_140027_d))))._field_untyped=false;
		return;;
	};
	if ((_1aa44d6d3_IsConst((*(_140038_l)).ptr()) && _1aa44d6d3_IsConst((*(_140049_r)).ptr()))) {
		jule::I64 _14144_left = _1a6e79c5c_AsI64((*((*(_140038_l))))._field_Constant.ptr());;
		if ((_14144_left < 0LL)) {
			return;;
		};
		jule::Str _14194_s = _1a6e79740_ReadStr((*((*(_140027_d))))._field_Constant);;
		jule::I64 _14208_right = static_cast<jule::I64>(0LL);;
		if (((*(_140049_r)) == nullptr)) {
			_14208_right=static_cast<jule::I64>(_14194_s.len());
		} else {
			_14208_right=_1a6e79c5c_AsI64((*((*(_140049_r))))._field_Constant);
		};
		if ((_14144_left > _14208_right)) {
			return;;
		};
		_1a6e7ad4b_SetStr((*((*(_140027_d))))._field_Constant, _14194_s.slice(static_cast<jule::I32>(_14144_left), static_cast<jule::I32>(_14208_right)));
		(*((*(_140027_d))))._field_Decl=true;
	} else {
		(*((*(_140027_d))))._field_Constant=nullptr;
		(*((*(_140027_d))))._field_untyped=false;
	};
}



inline void _1aa45d061_checkSlicing(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa44cc98_Data>* _143833_d, jule::Ptr<_1aa44cc98_Data>* _143844_l, jule::Ptr<_1aa44cc98_Data>* _143855_r, jule::Ptr<_1aa3070d6_SlicingExpr>* _143866_s) {
	{
		
		if ((_1a601dac1_Arr((*((*(_143833_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bbad6431:;
			{
				_1aa45c66a_slicingArr(_self_, _143833_d);
				return;;
			}
		}
		else if ((_1a601dd57_Slc((*((*(_143833_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bbad64ca:;
			{
				return;;
			}
		}
		else if ((_1a601cd01_Prim((*((*(_143833_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bbad6541:;
			{
				jule::Ptr<_1a6023763_Prim> _14464_prim = _1a601cd01_Prim((*((*(_143833_d))))._field_Kind);;
				{
					
					if (_1a6026c2d_IsStr(_14464_prim.ptr())) {
						_case_begin_1bbad8cc4:;
						{
							_1aa45ca88_slicingStr(_self_, _143833_d, _143844_l, _143855_r);
							return;;
						}
					}
					_match_end_1bbad8c2a:;
				};
			}
		}
		_match_end_1bbad6310:;
	};
	_1aa450053_pushErr(_self_, (*((*(_143866_s))))._field_Token, jule::Str::lit("type @ is not support slicing", 29), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*((*(_143833_d))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
}



inline jule::Ptr<_1aa44cc98_Data> _1aa45d3a2_evalSlicing(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa3070d6_SlicingExpr> _145732_s) {
	jule::Ptr<_1aa44cc98_Data> _14587_d = _1aa46cc63_evalExpr(_self_, (*(_145732_s))._field_Expr);;
	if ((_14587_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1aa44cc98_Data> _14637_l;
	jule::Ptr<_1aa44cc98_Data> _146314_r;
	({
		__jule_tuple_x_1aa44cc98_Data__jule_tuple_x_1aa44cc98_Data __jule_assign_result = _1aa45c3b2_evalSlicingExprs(_self_, &(_145732_s));
		_14637_l = __jule_assign_result.__jule_result_arg0;
		_146314_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14637_l == nullptr)) {
		return _14587_d;;
	};
	(*(_14587_d))._field_Decl=false;
	_1aa45d061_checkSlicing(_self_, &(_14587_d), &(_14637_l), &(_146314_r), &(_145732_s));
	if (_1aa44d6d3_IsConst(_14587_d.ptr())) {
		(*(_14587_d))._field_Decl=false;
		(*(_14587_d))._field_Model=jule::Any((*(_14587_d))._field_Constant, &__jule_any_type20);
	} else if ((*(_14587_d))._field_Decl) {
		(*(_14587_d))._field_Decl=false;
	} else {
		jule::Ptr<_1aa327458_SlicingExprModel> _14818_model = jule::new_ptr<_1aa327458_SlicingExprModel>(_1aa327458_SlicingExprModel{._field_Token=(*_145732_s.alloc)._field_Token, ._field_Expr=(*(_14587_d))._field_Model, ._field_Left=(*(_14637_l))._field_Model, ._field_Right=jule::Any(nullptr)});;
		if ((_146314_r != nullptr)) {
			(*(_14818_model))._field_Right=(*_146314_r.alloc)._field_Model;
		};
		(*(_14587_d))._field_Model=jule::Any(_14818_model, &__jule_any_type95);
	};
	return _14587_d;;
}



inline void _1aa45d7c0_castPtr(_1aa44e9c0_eval* _self_, jule::Ptr<_1a601a64a_TypeKind> _149427_t, jule::Ptr<_1aa44cc98_Data> _149445_d, jule::Ptr<_1aa2d51c4_Token> _149455_errorToken) {
	(*(_149445_d))._field_Constant=nullptr;
	(*_149445_d.alloc)._field_untyped=false;
	jule::Ptr<_1a602728e_Sptr> _14973_sptr = _1a601d087_Sptr((*_149445_d.alloc)._field_Kind.ptr());;
	if ((_14973_sptr != nullptr)) {
		if ((!(_1a601ad87_Equal((*(_1a601d31d_Ptr(_149427_t.ptr())))._field_Elem, (*_14973_sptr.alloc)._field_Elem)))) {
			_1aa450053_pushErr(_self_, _149455_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_149445_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str(_149427_t), &__jule_any_type4); __jule_collection; }));
		};
		return;;
	};
	if ((!(_1aa450a48_isUnsafe(_self_)))) {
		_1aa450053_pushErr(_self_, _149455_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a6023763_Prim> _15103_prim = _1a601cd01_Prim((*(_149445_d))._field_Kind);;
	if (((_1a601d31d_Ptr((*(_149445_d))._field_Kind) == nullptr) && ((_15103_prim == nullptr) || (!(_1a6e769a1_IsInt(_1a6023ad7_Str(_15103_prim.ptr()))))))) {
		_1aa450053_pushErr(_self_, _149455_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_149445_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str(_149427_t), &__jule_any_type4); __jule_collection; }));
	};
}



inline void _1aa45dbdd_castStruct(_1aa44e9c0_eval* _self_, jule::Ptr<_1a601a64a_TypeKind> _151630_t, jule::Ptr<_1aa44cc98_Data> _151648_d, jule::Ptr<_1aa2d51c4_Token> _151658_errorToken) {
	(*(_151648_d))._field_Constant=nullptr;
	(*_151648_d.alloc)._field_untyped=false;
	jule::Ptr<_1aa345047_Trait> _15197_tr = _1a601e60a_Trait((*_151648_d.alloc)._field_Kind.ptr());;
	if ((_15197_tr == nullptr)) {
		_1aa450053_pushErr(_self_, _151658_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_151648_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str(_151630_t.ptr()), &__jule_any_type4); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1aa31e373_StructIns> _15257_s = _1a601e374_Struct(_151630_t);;
	_1bbae9c19_pushReference(_self_, &(_15257_s));
	if ((!(_1aa31cb8a_IsImplements((*(_15257_s))._field_Decl.ptr(), _15197_tr)))) {
		_1aa450053_pushErr(_self_, _151658_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_151648_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str(_151630_t), &__jule_any_type4); __jule_collection; }));
	};
}



inline void _1aa45e10b_castRef(_1aa44e9c0_eval* _self_, jule::Ptr<_1a601a64a_TypeKind> _153327_t, jule::Ptr<_1aa44cc98_Data> _153345_d, jule::Ptr<_1aa2d51c4_Token> _153355_errorToken) {
	(*(_153345_d))._field_Constant=nullptr;
	(*_153345_d.alloc)._field_untyped=false;
	jule::Ptr<_1a602728e_Sptr> _15367_sptr = _1a601d087_Sptr(_153327_t.ptr());;
	jule::Ptr<_1a602aa56_Ptr> _15387_ptr = _1a601d31d_Ptr((*_153345_d.alloc)._field_Kind.ptr());;
	if (((_15387_ptr != nullptr) && _1a601ad87_Equal((*(_15367_sptr))._field_Elem, (*_15387_ptr.alloc)._field_Elem))) {
		if ((!(_1aa450a48_isUnsafe(_self_)))) {
			_1aa450053_pushErr(_self_, _153355_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1a601e374_Struct((*(_15367_sptr))._field_Elem) != nullptr)) {
		_1aa45dbdd_castStruct(_self_, (*_15367_sptr.alloc)._field_Elem, _153345_d, _153355_errorToken);
		return;;
	};
	_1aa450053_pushErr(_self_, _153355_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_153345_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str(_153327_t), &__jule_any_type4); __jule_collection; }));
}



inline void _1aa45e529_castSlc(_1aa44e9c0_eval* _self_, jule::Ptr<_1a601a64a_TypeKind> _155627_t, jule::Ptr<_1aa44cc98_Data> _155645_d, jule::Ptr<_1aa2d51c4_Token> _155655_errorToken) {
	jule::Ptr<_1a6e77584_Const> _15573_c = (*(_155645_d))._field_Constant;;
	(*_155645_d.alloc)._field_Constant=nullptr;
	(*_155645_d.alloc)._field_untyped=false;
	if ((_1a601d5a4_Enum((*_155645_d.alloc)._field_Kind.ptr()) != nullptr)) {
		if (((_1a601cd01_Prim((*((*(_1a601d5a4_Enum((*(_155645_d))._field_Kind)))._field_Kind))._field_Kind.ptr()) == nullptr) || (!(_1a6026c2d_IsStr(_1a601cd01_Prim((*((*(_1a601d5a4_Enum((*(_155645_d))._field_Kind.ptr())))._field_Kind))._field_Kind).ptr()))))) {
			_1aa450053_pushErr(_self_, _155655_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_155645_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str(_155627_t.ptr()), &__jule_any_type4); __jule_collection; }));
			return;;
		};
	} else if (((_1a601cd01_Prim((*_155645_d.alloc)._field_Kind.ptr()) == nullptr) || (!(_1a6026c2d_IsStr(_1a601cd01_Prim((*(_155645_d))._field_Kind).ptr()))))) {
		_1aa450053_pushErr(_self_, _155655_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_155645_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str(_155627_t.ptr()), &__jule_any_type4); __jule_collection; }));
		return;;
	};
	_155627_t=(*(_1a601dd57_Slc(_155627_t.ptr())))._field_Elem;
	jule::Ptr<_1a6023763_Prim> _15723_prim = _1a601cd01_Prim(_155627_t);;
	if (((_15723_prim == nullptr) || ((!(_1a602518d_IsU8(_15723_prim.ptr()))) && (!(_1a6024b71_IsI32(_15723_prim.ptr())))))) {
		_1aa450053_pushErr(_self_, _155655_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*_155645_d.alloc)._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str(_155627_t), &__jule_any_type4); __jule_collection; }));
		return;;
	};
	if ((_15573_c != nullptr)) {
		{
			
			if (_1a602518d_IsU8(_15723_prim.ptr())) {
				_case_begin_1bc9d5780:;
				{
					jule::Str _15825_s = _1a6e79740_ReadStr(_15573_c);;
					jule::Ptr<_1aa325ad8_SliceExprModel> _15839_model = jule::new_ptr<_1aa325ad8_SliceExprModel>(_1aa325ad8_SliceExprModel{._field_ElemKind=_155627_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, _15825_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
					{
						auto expr = &(_15825_s);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bc9d7287:;
						if (it != expr_end) {
							jule::U8 *_158712_b = it;
							{
								jule::Ptr<_1a6e77584_Const> _158810_bc = static__1a6e77cc1_NewU64(static_cast<jule::U64>((*(_158712_b))));;
								(*(_158810_bc))._field_Kind=(*(_15723_prim))._field_Kind;
								(*(_15839_model))._field_Elems=jule::append((*_15839_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_158810_bc, &__jule_any_type20); __jule_collection; }));
							}
							_iter_next_1bc9d7287:;
							++it;
							goto _iter_begin_1bc9d7287;
						}
						_iter_end_1bc9d7287:;
					};
					(*_155645_d.alloc)._field_Model=jule::Any(_15839_model, &__jule_any_type80);
					(*_155645_d.alloc)._field_Decl=true;
				}
			}
			else if (_1a6024b71_IsI32(_15723_prim.ptr())) {
				_case_begin_1bc9d5829:;
				{
					jule::Slice<jule::I32> _15955_runes = static_cast<jule::Slice<jule::I32>>(_1a6e79740_ReadStr(_15573_c));;
					jule::Ptr<_1aa325ad8_SliceExprModel> _15969_model = jule::new_ptr<_1aa325ad8_SliceExprModel>(_1aa325ad8_SliceExprModel{._field_ElemKind=_155627_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, _15955_runes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
					{
						auto expr = &(_15955_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bc9da697:;
						if (it != expr_end) {
							jule::I32 *_160012_r = it;
							{
								jule::Ptr<_1a6e77584_Const> _160110_rc = static__1a6e77a07_NewI64(static_cast<jule::I64>((*(_160012_r))));;
								(*(_160110_rc))._field_Kind=(*(_15723_prim))._field_Kind;
								(*(_15969_model))._field_Elems=jule::append((*_15969_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_160110_rc, &__jule_any_type20); __jule_collection; }));
							}
							_iter_next_1bc9da697:;
							++it;
							goto _iter_begin_1bc9da697;
						}
						_iter_end_1bc9da697:;
					};
					(*_155645_d.alloc)._field_Model=jule::Any(_15969_model, &__jule_any_type80);
					(*_155645_d.alloc)._field_Decl=true;
				}
			}
			_match_end_1bc9d56a3:;
		};
	};
}



inline void _1aa45e88c_castStr(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa44cc98_Data> _161127_d, jule::Ptr<_1aa2d51c4_Token> _161137_errorToken) {
	if ((_1a601d5a4_Enum((*(_161127_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1aa347753_Enum> _16138_e = _1a601d5a4_Enum((*(_161127_d))._field_Kind);;
		if (((_1a601cd01_Prim((*((*(_16138_e))._field_Kind))._field_Kind.ptr()) != nullptr) && _1a6026c2d_IsStr(_1a601cd01_Prim((*((*(_16138_e))._field_Kind))._field_Kind).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1a6e77584_Const> _16193_c = (*_161127_d.alloc)._field_Constant;;
	(*_161127_d.alloc)._field_Constant=nullptr;
	(*_161127_d.alloc)._field_untyped=false;
	if ((_1a601cd01_Prim((*(_161127_d))._field_Kind) != nullptr)) {
		jule::Ptr<_1a6023763_Prim> _16234_prim = _1a601cd01_Prim((*(_161127_d))._field_Kind);;
		if (((!(_1a602518d_IsU8(_16234_prim.ptr()))) && (!(_1a6024b71_IsI32(_16234_prim))))) {
			_1aa450053_pushErr(_self_, _161137_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("str", 3), &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str((*(_161127_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
			return;;
		};
		if ((_16193_c != nullptr)) {
			{
				
				if (_1a602518d_IsU8(_16234_prim)) {
					_case_begin_1bc9e3051:;
					{
						(*_161127_d.alloc)._field_Constant=static__1a6e78354_NewStr(jule::Str::from_byte(static_cast<jule::U8>(_1a6e79ee3_AsU64(_16193_c))));
						(*_161127_d.alloc)._field_Model=jule::Any((*_161127_d.alloc)._field_Constant, &__jule_any_type20);
						(*_161127_d.alloc)._field_Decl=true;
					}
				}
				else if (_1a6024b71_IsI32(_16234_prim)) {
					_case_begin_1bc9e30ea:;
					{
						(*_161127_d.alloc)._field_Constant=static__1a6e78354_NewStr(jule::Str::from_rune(static_cast<jule::I32>(_1a6e79c5c_AsI64(_16193_c))));
						(*_161127_d.alloc)._field_Model=jule::Any((*_161127_d.alloc)._field_Constant, &__jule_any_type20);
						(*_161127_d.alloc)._field_Decl=true;
					}
				}
				_match_end_1bc9e2e41:;
			};
		};
		return;;
	};
	jule::Ptr<_1a6027c62_Slc> _16447_s = _1a601dd57_Slc((*(_161127_d))._field_Kind);;
	if ((_16447_s == nullptr)) {
		_1aa450053_pushErr(_self_, _161137_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("str", 3), &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str((*(_161127_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1a601a64a_TypeKind> _16507_t = (*(_16447_s))._field_Elem;;
	jule::Ptr<_1a6023763_Prim> _16513_prim = _1a601cd01_Prim(_16507_t.ptr());;
	if (((_16513_prim == nullptr) || ((!(_1a602518d_IsU8(_16513_prim.ptr()))) && (!(_1a6024b71_IsI32(_16513_prim.ptr())))))) {
		_1aa450053_pushErr(_self_, _161137_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("str", 3), &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str((*(_161127_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return;;
	};
}



inline void _1aa45ecaa_castInt(_1aa44e9c0_eval* _self_, jule::Ptr<_1a601a64a_TypeKind> _165827_t, jule::Ptr<_1aa44cc98_Data> _165845_d, jule::Ptr<_1aa2d51c4_Token> _165855_errorToken) {
	if (_1aa44d6d3_IsConst(_165845_d.ptr())) {
		jule::Ptr<_1a6023763_Prim> _16604_prim = _1a601cd01_Prim(_165827_t.ptr());;
		{
			
			if (_1a6e763c9_IsSigInt((*(_16604_prim))._field_Kind)) {
				_case_begin_1bc9eb598:;
				{
					_1a6e7a532_SetI64((*_165845_d.alloc)._field_Constant.ptr(), _1a6e79c5c_AsI64((*(_165845_d))._field_Constant));
				}
			}
			else if (_1a6e766d7_IsUnsigInt((*(_16604_prim))._field_Kind)) {
				_case_begin_1bc9eb642:;
				{
					_1a6e7a7da_SetU64((*_165845_d.alloc)._field_Constant.ptr(), _1a6e79ee3_AsU64((*(_165845_d))._field_Constant));
				}
			}
			_match_end_1bc9eb521:;
		};
	} else {
		(*(_165845_d))._field_Constant=nullptr;
		(*_165845_d.alloc)._field_untyped=false;
	};
	if ((_1a601d5a4_Enum((*(_165845_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1aa347753_Enum> _16734_e = _1a601d5a4_Enum((*(_165845_d))._field_Kind);;
		if (_1a6e77078_IsNum(_1a601aa46_Str((*((*(_16734_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1a601d087_Sptr((*(_165845_d))._field_Kind) != nullptr)) {
		jule::Ptr<_1a6023763_Prim> _16804_prim = _1a601cd01_Prim(_165827_t.ptr());;
		if ((!(_1a6026711_IsUintptr(_16804_prim.ptr())))) {
			_1aa450053_pushErr(_self_, _165855_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_165845_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str(_165827_t), &__jule_any_type4); __jule_collection; }));
		};
		return;;
	};
	if ((_1a601d31d_Ptr((*(_165845_d))._field_Kind) != nullptr)) {
		jule::Ptr<_1a6023763_Prim> _16874_prim = _1a601cd01_Prim(_165827_t);;
		if (_1a6026711_IsUintptr(_16874_prim.ptr())) {
		} else if ((!(_1aa450a48_isUnsafe(_self_)))) {
			_1aa450053_pushErr(_self_, _165855_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1a6023763_Prim> _16963_prim = _1a601cd01_Prim((*(_165845_d))._field_Kind);;
	if (((_16963_prim != nullptr) && _1a6e77078_IsNum(_1a6023ad7_Str(_16963_prim)))) {
		return;;
	};
	_1aa450053_pushErr(_self_, _165855_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_165845_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str(_165827_t), &__jule_any_type4); __jule_collection; }));
}



inline void _1aa4601c8_castNum(_1aa44e9c0_eval* _self_, jule::Ptr<_1a601a64a_TypeKind> _170427_t, jule::Ptr<_1aa44cc98_Data> _170445_d, jule::Ptr<_1aa2d51c4_Token> _170455_errorToken) {
	if (_1aa44d6d3_IsConst(_170445_d.ptr())) {
		jule::Ptr<_1a6023763_Prim> _17064_prim = _1a601cd01_Prim(_170427_t.ptr());;
		{
			
			if (_1a6e76ce2_IsFloat((*(_17064_prim))._field_Kind)) {
				_case_begin_1bca078b2:;
				{
					_1a6e7b104_SetF64((*_170445_d.alloc)._field_Constant.ptr(), _1a6e7a279_AsF64((*(_170445_d))._field_Constant));
				}
			}
			else if (_1a6e763c9_IsSigInt((*(_17064_prim))._field_Kind)) {
				_case_begin_1bca0795b:;
				{
					_1a6e7a532_SetI64((*_170445_d.alloc)._field_Constant.ptr(), _1a6e79c5c_AsI64((*(_170445_d))._field_Constant));
				}
			}
			else if (_1a6e766d7_IsUnsigInt((*(_17064_prim))._field_Kind)) {
				_case_begin_1bca079c2:;
				{
					_1a6e7a7da_SetU64((*_170445_d.alloc)._field_Constant.ptr(), _1a6e79ee3_AsU64((*(_170445_d))._field_Constant));
				}
			}
			_match_end_1bca077e6:;
		};
	} else {
		(*(_170445_d))._field_Constant=nullptr;
		(*_170445_d.alloc)._field_untyped=false;
	};
	if ((_1a601d5a4_Enum((*(_170445_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1aa347753_Enum> _17214_e = _1a601d5a4_Enum((*(_170445_d))._field_Kind);;
		if (_1a6e77078_IsNum(_1a601aa46_Str((*((*(_17214_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1a6023763_Prim> _17273_prim = _1a601cd01_Prim((*(_170445_d))._field_Kind);;
	if (((_17273_prim != nullptr) && _1a6e77078_IsNum(_1a6023ad7_Str(_17273_prim)))) {
		return;;
	};
	_1aa450053_pushErr(_self_, _170455_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_170445_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str(_170427_t.ptr()), &__jule_any_type4); __jule_collection; }));
}



inline void _1aa4605e6_castPrim(_1aa44e9c0_eval* _self_, jule::Ptr<_1a601a64a_TypeKind> _173528_t, jule::Ptr<_1aa44cc98_Data> _173546_d, jule::Ptr<_1aa2d51c4_Token> _173556_errorToken) {
	jule::Ptr<_1a6023763_Prim> _17363_prim = _1a601cd01_Prim(_173528_t.ptr());;
	{
		
		if (_1a6026eb4_IsAny(_17363_prim.ptr())) {
			_case_begin_1bca10d3d:;
			{
				(*(_173546_d))._field_Constant=nullptr;
				(*_173546_d.alloc)._field_untyped=false;
			}
		}
		else if (_1a6026c2d_IsStr(_17363_prim.ptr())) {
			_case_begin_1bca109ec:;
			{
				_1aa45e88c_castStr(_self_, _173546_d, _173556_errorToken);
			}
		}
		else if (_1a6e769a1_IsInt(_1a6023ad7_Str(_17363_prim.ptr()))) {
			_case_begin_1bca10a63:;
			{
				_1aa45ecaa_castInt(_self_, _173528_t, _173546_d, _173556_errorToken);
			}
		}
		else if (_1a6e77078_IsNum(_1a6023ad7_Str(_17363_prim.ptr()))) {
			_case_begin_1bca10ac9:;
			{
				_1aa4601c8_castNum(_self_, _173528_t, _173546_d, _173556_errorToken);
			}
		}
		else {
			_case_begin_1bca10986:;
			{
				_1aa450053_pushErr(_self_, _173556_errorToken, jule::Str::lit("type @ not supports casting", 27), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str(_173528_t), &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1bca10920:;
	};
}



inline void _1aa460959_castConstant(_1aa44e9c0_eval* _self_, jule::Ptr<_1a601a64a_TypeKind>* _175333_t, jule::Ptr<_1aa44cc98_Data>* _175352_d) {
	if ((((*(_175352_d)) == nullptr) || (!(_1aa44d6d3_IsConst((*(_175352_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1a6023763_Prim> _17573_prim = _1a601cd01_Prim((*(_175333_t)).ptr());;
	_1a6015a63_castConstByType(&((*(_17573_prim))._field_Kind), _175352_d);
	(*((*(_175352_d))))._field_Model=jule::Any((*((*(_175352_d))))._field_Constant, &__jule_any_type20);
}



inline void _1aa460d77_castTypeEnum(_1aa44e9c0_eval* _self_, jule::Ptr<_1a601a64a_TypeKind>* _176233_t, jule::Ptr<_1aa44cc98_Data>* _176252_d, jule::Ptr<_1aa2d51c4_Token>* _176267_errorToken) {
	jule::I32 _17633_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1aa3cc70b_checkTypeCompatibility((*(_self_))._field_s, &((*((*(_176252_d))))._field_Kind), _176233_t, _176267_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17633_n);;
		_1aa450053_pushErr(_self_, (*(_176267_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*((*(_176252_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str((*(_176233_t)).ptr()), &__jule_any_type4); __jule_collection; }));
	};
	(*((*(_176252_d))))._field_Constant=nullptr;
	(*((*(_176252_d))))._field_untyped=false;
}



inline void _1aa461295_castTypeEnumT(_1aa44e9c0_eval* _self_, jule::Ptr<_1a601a64a_TypeKind>* _177234_t, jule::Ptr<_1aa44cc98_Data>* _177253_d, jule::Ptr<_1aa2d51c4_Token>* _177268_errorToken) {
	jule::I32 _17733_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1aa3cc70b_checkTypeCompatibility((*(_self_))._field_s, _177234_t, &((*((*(_177253_d))))._field_Kind), _177268_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17733_n);;
		_1aa450053_pushErr(_self_, (*(_177268_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*((*(_177253_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str((*(_177234_t)).ptr()), &__jule_any_type4); __jule_collection; }));
	};
	(*((*(_177253_d))))._field_Constant=nullptr;
	(*((*(_177253_d))))._field_untyped=false;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa46174b_evalCastByTypeNData(_1aa44e9c0_eval* _self_, jule::Ptr<_1a601a64a_TypeKind> _178239_t, jule::Ptr<_1aa44cc98_Data> _178257_d, jule::Ptr<_1aa2d51c4_Token> _178271_errorToken) {
	if (((_178257_d != nullptr) && (*_178257_d.alloc)._field_Decl)) {
		_1aa450053_pushErr(_self_, _178271_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1aa44d1b6_IsNil(_178257_d)) {
			_case_begin_1bca1d91c:;
			{
				if ((!(_1a601c54d_NilCompatible(_178239_t.ptr())))) {
					_1aa450053_pushErr(_self_, _178271_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("<nil>", 5), &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str(_178239_t), &__jule_any_type4); __jule_collection; }));
				};
				(*_178257_d.alloc)._field_Constant=nullptr;
				(*_178257_d.alloc)._field_untyped=false;
			}
		}
		else if (((_1a601cd01_Prim((*_178257_d.alloc)._field_Kind.ptr()) != nullptr) && _1a6026eb4_IsAny(_1a601cd01_Prim((*(_178257_d))._field_Kind).ptr()))) {
			_case_begin_1bca1d6b9:;
			{
				if ((_1a601d5a4_Enum(_178239_t.ptr()) != nullptr)) {
					_1aa450053_pushErr(_self_, _178271_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
					_1aa4503b6_pushSuggestion(_self_, jule::Str::lit("try cast to type of enum fields instead of enum", 47), jule::Slice<jule::Any>());
				} else if ((_1a601d83a_TypeEnum(_178239_t.ptr()) != nullptr)) {
					_1aa450053_pushErr(_self_, _178271_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
				};
				(*_178257_d.alloc)._field_Constant=nullptr;
				(*_178257_d.alloc)._field_untyped=false;
			}
		}
		else if ((_1a601d83a_TypeEnum((*_178257_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bca1d730:;
			{
				_1aa460d77_castTypeEnum(_self_, &(_178239_t), &(_178257_d), &(_178271_errorToken));
			}
		}
		else if ((_1a601d83a_TypeEnum(_178239_t.ptr()) != nullptr)) {
			_case_begin_1bca1d796:;
			{
				_1aa461295_castTypeEnumT(_self_, &(_178239_t), &(_178257_d), &(_178271_errorToken));
			}
		}
		else if ((_1a601d31d_Ptr(_178239_t.ptr()) != nullptr)) {
			_case_begin_1bca1d80c:;
			{
				_1aa45d7c0_castPtr(_self_, _178239_t, _178257_d, _178271_errorToken);
			}
		}
		else if ((_1a601d087_Sptr(_178239_t.ptr()) != nullptr)) {
			_case_begin_1bca1e49a:;
			{
				_1aa45e10b_castRef(_self_, _178239_t, _178257_d, _178271_errorToken);
			}
		}
		else if ((_1a601dd57_Slc(_178239_t.ptr()) != nullptr)) {
			_case_begin_1bca1e511:;
			{
				_1aa45e529_castSlc(_self_, _178239_t, _178257_d, _178271_errorToken);
			}
		}
		else if ((_1a601e374_Struct(_178239_t.ptr()) != nullptr)) {
			_case_begin_1bca1e577:;
			{
				_1aa45dbdd_castStruct(_self_, _178239_t, _178257_d, _178271_errorToken);
			}
		}
		else if ((_1a601cd01_Prim(_178239_t.ptr()) != nullptr)) {
			_case_begin_1bca1e5dd:;
			{
				_1aa4605e6_castPrim(_self_, _178239_t, _178257_d, _178271_errorToken);
				_1aa460959_castConstant(_self_, &(_178239_t), &(_178257_d));
			}
		}
		else {
			_case_begin_1bca1d598:;
			{
				_1aa450053_pushErr(_self_, _178271_errorToken, jule::Str::lit("type @ not supports casting", 27), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str(_178239_t.ptr()), &__jule_any_type4); __jule_collection; }));
				_178257_d=nullptr;
			}
		}
		_match_end_1bca1d510:;
	};
	if ((_178257_d == nullptr)) {
		return nullptr;;
	};
	(*_178257_d.alloc)._field_Mutable=((*_178257_d.alloc)._field_Mutable || (!(_1a601c031_Mutable((*_178257_d.alloc)._field_Kind.ptr()))));
	if (((!((*_178257_d.alloc)._field_Decl)) && ((_1a601d5a4_Enum((*(_178257_d))._field_Kind) == nullptr) || (!(_1a601ad87_Equal((*((*(_1a601d5a4_Enum((*(_178257_d))._field_Kind)))._field_Kind))._field_Kind, _178239_t)))))) {
		_1a6014d4d_applyCastKind(&(_178257_d), &(_178239_t), &(_178271_errorToken));
		(*((*_178257_d.alloc)._field_Model.cast_ptr<_1aa324d5c_CastingExprModel>(&__jule_any_type96)))._field_Token=_178271_errorToken;
	} else {
		(*_178257_d.alloc)._field_Kind=_178239_t;
	};
	(*_178257_d.alloc)._field_Decl=false;
	(*_178257_d.alloc)._field_Lvalue=false;
	(*_178257_d.alloc)._field_untyped=false;
	if (_1aa44d6d3_IsConst(_178257_d)) {
		(*((*_178257_d.alloc)._field_Constant))._field_Kind=(*(_1a601cd01_Prim(_178239_t.ptr())))._field_Kind;
	};
	return _178257_d;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa461c02_evalCastT(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1a601a64a_TypeKind>* _185531_t, jule::Ptr<_1aa2ee9b3_Expr>* _185550_e, jule::Ptr<_1aa2d51c4_Token>* _185565_et) {
	jule::Ptr<_1a601a64a_TypeKind> _18567_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_18567_prefix;
	});;
	if ((_1a601dd57_Slc((*(_185531_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_185550_e))))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1bca2e796:;
				{
					(*_self_.alloc)._field_prefix=(*(_185531_t));
				}
			}
			_match_end_1bca2e730:;
		};
	};
	jule::Ptr<_1aa44cc98_Data> _18657_d = _1aa46cc63_evalExpr(_self_, (*(_185550_e)));;
	if (((_18657_d == nullptr) || ((*_self_.alloc)._field_prefix != nullptr))) {
		return _18657_d;;
	};
	return _1aa46174b_evalCastByTypeNData(_self_, (*(_185531_t)), _18657_d, (*(_185565_et)));;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa462043_evalCast(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa302323_CastExpr> _187229_c) {
	jule::Ptr<_1a6022d5b_TypeSymbol> _18737_t = _1aa3390a2_buildType((*(_187229_c))._field_Kind);;
	jule::Bool _18743_ok = _1aa3c9e12_checkType((*(_self_))._field_s, &(_18737_t), (*_self_.alloc)._field_lookup);;
	if ((!(_18743_ok))) {
		return nullptr;;
	};
	return _1aa461c02_evalCastT(_self_, &((*(_18737_t))._field_Kind), &((*_187229_c.alloc)._field_Expr), &((*((*_187229_c.alloc)._field_Kind))._field_Token));;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa462384_evalNsSelection(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa3026ec_NsSelectionExpr> _188135_s) {
	jule::Str _18823_path = _1a60376cd_buildLinkPathByTokens(&((*(_188135_s))._field_Ns));;
	jule::Ptr<_1aa39b0ae_ImportInfo> _18837_imp = ((_1a603a77a_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a6038a64_SelectPackage((*(_self_))._field_lookup.data, jule::__new_closure<jule::Bool,jule::Ptr<_1aa39b0ae_ImportInfo>>((void*)__jule_anon_1bca34da6, jule::Ptr<__jule_anon_1bca34da6_ctx>::make(__jule_anon_1bca34da6_ctx{._188135_s=_188135_s,._18823_path=_18823_path}).as<jule::Uintptr>(), __jule_anon_1bca34da6_ctx_handler));;
	if ((_18837_imp == nullptr)) {
		_1aa450053_pushErr(_self_, (*(_188135_s))._field_Ns[0LL], jule::Str::lit("undefined namespace: @", 22), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18823_path, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Trait _18957_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_18837_imp, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data1);
	;
	_1aa4507b2_disallowBuiltin(_self_);
	jule::Any _19007_def = _1aa452cc0_getDef(_self_, &((*((*_188135_s.alloc)._field_Ident))._field_Kind), false);;
	_1aa4505b4_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_18957_lookup;
	jule::Ptr<_1aa44cc98_Data> _19037_d = _1aa456e7d_evalDef(_self_, &(_19007_def), (*_188135_s.alloc)._field_Ident);;
	return _19037_d;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa46283a_evalStructLitExplicit(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa31e373_StructIns> _190742_s, jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>> _19087_exprs, jule::Ptr<_1aa2d51c4_Token> _190827_errorToken) {
	jule::Bool _19093_ok = _1aa3c0963_checkGenericQuantity((*(_self_))._field_s.ptr(), (*((*(_190742_s))._field_Decl))._field_Generics.len(), (*_190742_s.alloc)._field_Generics.len(), _190827_errorToken);;
	if ((!(_19093_ok))) {
		return nullptr;;
	};
	if ((((*_self_.alloc)._field_field != nullptr) && ((*((*(*(_self_))._field_field.alloc)._field_Decl))._field_Owner == (*_190742_s.alloc)._field_Decl))) {
		_1aa450053_pushErr(_self_, _190827_errorToken, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_190742_s))._field_Decl.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
	};
	_1bbae9c19_pushReference(_self_, &(_190742_s));
	_1aa455179_checkDeprecated(_self_, &((*(*(_190742_s))._field_Decl.alloc)._field_Directives), _190827_errorToken);
	_1aa440a27_structLitChecker _19227_slc = _1aa440a27_structLitChecker{._field_e=_self_, ._field_errorToken=_190827_errorToken, ._field_s=_190742_s, ._field_args=jule::Slice<jule::Ptr<_1aa324136_StructArgExprModel>>(nullptr)};;
	_1aa442298_check(&_19227_slc, &(_19087_exprs));
	jule::Ptr<_1aa44cc98_Data> _19297_d = jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_190742_s, (jule::Trait::Type*)&_1a601a194_Kind_mptr_data0)}), ._field_Mutable=(!((*_self_.alloc)._field_immutable)), ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1aa3244cc_StructLitExprModel>(_1aa3244cc_StructLitExprModel{._field_Strct=_190742_s, ._field_Args=_19227_slc._field_args}), &__jule_any_type98), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
	if ((*(*(_190742_s))._field_Decl.alloc)._field_Binded) {
		(*((*(_19297_d))._field_Kind))._field_BindIdent=(*(*(_190742_s))._field_Decl.alloc)._field_Ident;
	};
	return _19297_d;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa462b7b_evalStructLit(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa304a0c_StructLit> _194534_lit) {
	jule::Ptr<_1a6022d5b_TypeSymbol> _19467_t = _1aa3390a2_buildType((*(_194534_lit))._field_Kind);;
	jule::Bool _19473_ok = _1aa3c9e12_checkType((*(_self_))._field_s, &(_19467_t), (*_self_.alloc)._field_lookup);;
	if ((!(_19473_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1aa31e373_StructIns> _19527_s = _1a601e374_Struct((*(_19467_t))._field_Kind.ptr());;
	if ((_19527_s == nullptr)) {
		if ((_1a601d087_Sptr((*(_19467_t))._field_Kind) != nullptr)) {
			_19527_s=_1a601e374_Struct((*(_1a601d087_Sptr((*(_19467_t))._field_Kind)))._field_Elem.ptr());
			if ((_19527_s != nullptr)) {
				goto _julec_label_1bca433d1;
			};
		};
		_1aa450053_pushErr(_self_, (*((*_194534_lit.alloc)._field_Kind))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1bca433d1:;
	jule::Ptr<_1aa44cc98_Data> _19657_d = _1aa46283a_evalStructLitExplicit(_self_, _19527_s, (*_194534_lit.alloc)._field_Exprs, (*(*(_194534_lit))._field_Kind.alloc)._field_Token);;
	if ((_1a601d087_Sptr((*(_19467_t))._field_Kind) != nullptr)) {
		jule::Ptr<_1aa3244cc_StructLitExprModel> _19678_model = (*(_19657_d))._field_Model.cast_ptr<_1aa3244cc_StructLitExprModel>(&__jule_any_type98);;
		_1aa477102_makeStructLitAlloc(&(_19657_d), &(_19678_model));
	};
	return _19657_d;;
}



inline _1a602ca47_typeChecker _1aa462e12_typeChecker(_1aa44e9c0_eval* _self_) {
	return _1aa3c3d51_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa463253_evalType(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa2ea67e_TypeDecl> _197728_t) {
	jule::Ptr<_1a6022d5b_TypeSymbol> _19787_tk = _1aa3390a2_buildType(_197728_t);;
	jule::Bool _19793_ok = _1aa3c9e12_checkType((*(_self_))._field_s, &(_19787_tk), (*(_self_))._field_lookup);;
	if ((!(_19793_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=(*(_19787_tk))._field_Kind, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any((*_19787_tk.alloc)._field_Kind, &__jule_any_type87), ._field_Decl=true, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
}



inline void _1aa4635b6_callTypeFn(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa3036dc_FnCallExpr>* _199032_fc, jule::Ptr<_1aa44cc98_Data>* _199054_d) {
	if (((*((*(_199032_fc))))._field_Args.len() < 1LL)) {
		_1aa450053_pushErr(_self_.ptr(), (*((*(_199032_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("v", 1), &__jule_any_type4); __jule_collection; }));
	} else if (((*((*(_199032_fc))))._field_Args.len() > 1LL)) {
		_1aa450053_pushErr(_self_.ptr(), (*((*((*(_199032_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*((*(_199054_d))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
	} else if ((*((*(_199032_fc))))._field_IsCo) {
		_1aa450053_pushErr(_self_.ptr(), (*((*(_199032_fc))))._field_Token, jule::Str::lit("concurrent calls are not allowed for type-cast calls", 52), jule::Slice<jule::Any>());
		(*(_199054_d))=nullptr;
		return;;
	} else if (((*((*(_199032_fc))))._field_Exception != nullptr)) {
		_1aa450053_pushErr(_self_.ptr(), (*((*(_199032_fc))))._field_Token, jule::Str::lit("exceptionals are not supported for type-cast call", 49), jule::Slice<jule::Any>());
		(*(_199054_d))=nullptr;
		return;;
	};
	if (((*((*(_199032_fc))))._field_Args.len() > 0LL)) {
		jule::Ptr<_1aa2ee9b3_Expr> _20068_arg = (*((*(_199032_fc))))._field_Args[0LL];;
		(*(_199054_d))=_1aa461c02_evalCastT(_self_, &((*((*(_199054_d))))._field_Kind), &(_20068_arg), &((*(_20068_arg))._field_Token));
		return;;
	};
	if (((*(_199054_d)) != nullptr)) {
		(*((*(_199054_d))))._field_Decl=false;
	};
}



inline void _1aa463929_callBuiltinFn(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa3036dc_FnCallExpr>* _201635_fc, jule::Ptr<_1aa44cc98_Data>* _201657_d) {
	if ((!(_1aa303a94_Unhandled((*(_201635_fc)).ptr())))) {
		_1aa450053_pushErr(_self_.ptr(), (*((*(_201635_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	(*(_201657_d))=(*(_1a601e0dd_Fn((*((*(_201657_d))))._field_Kind.ptr())))._field_caller(&(_self_), _201635_fc, _201657_d);
	if (((*(_201657_d)) == nullptr)) {
		return;;
	};
	(*((*(_201657_d))))._field_Mutable=true;
}



inline void _1aa463c8c_checkFnOfConcurrentCall(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa334597_FnIns>* _202840_f, jule::Ptr<_1aa2d51c4_Token> _202851_errorToken) {
	if (_1aa450a48_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*((*(_202840_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bca55a86:;
		if (it != expr_end) {
			jule::Ptr<_1aa33351e_ParamIns> *_203210_p = it;
			{
				if (_1aa330241_IsSelf((*((*(_203210_p))))._field_Decl.ptr())) {
					if ((!(_1aa3304c7_IsRef((*((*(_203210_p))))._field_Decl)))) {
						_1aa450053_pushErr(_self_, _202851_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97), jule::Slice<jule::Any>());
						_1aa4503b6_pushSuggestion(_self_, jule::Str::lit("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99), jule::Slice<jule::Any>());
					};
				};
				if ((*(*((*(_203210_p))))._field_Decl.alloc)._field_Reference) {
					_1aa450053_pushErr(_self_, _202851_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96), jule::Slice<jule::Any>());
					_1aa4503b6_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule with unsafe {} scope to make concurrent call", 60), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1bca55a86:;
			++it;
			goto _iter_begin_1bca55a86;
		}
		_iter_end_1bca55a86:;
	};
}



inline void _1aa4641aa_processExceptionalHandler(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa334597_FnIns>* _204746_f, jule::Ptr<_1aa3036dc_FnCallExpr>* _204762_fc, jule::Ptr<_1aa44cc98_Data>* _204784_d) {
	jule::Bool _20483_resultNeeded = ((!(_1aa331a6c_IsVoid((*((*(_204746_f))))._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_1aa381160_scopeChecker> _204911_csc = nullptr;;
	jule::Ptr<_1aa378ba2_Scope> _205011_ch = nullptr;;
	jule::Ptr<_1aa32570e_FnCallExprModel> _20527_model = (*((*(_204784_d))))._field_Model.cast_ptr<_1aa32570e_FnCallExprModel>(&__jule_any_type41);;
	jule::Ptr<_1aa381160_scopeChecker> _20567_sc = (*(_self_))._field_lookup.cast_ptr<_1aa381160_scopeChecker>((jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data0);;
	_204911_csc=_1aa39322c_newChildChecker(_20567_sc);
	if (_20483_resultNeeded) {
		(*(_204911_csc))._field_result=(*(_204746_f));
	};
	_205011_ch=_1aa386583_getChild(_20567_sc);
	(*((*((*(_204762_fc))))._field_Exception))._field_Parent=(*_20567_sc.alloc)._field_tree;
	(*((*_204911_csc.alloc)._field_table))._field_Vars=jule::append((*(*(_204911_csc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1aa477476_buildErrorVar(&(_205011_ch), _204762_fc); __jule_collection; }));
	_1aa3869a1_checkChildSsc(_20567_sc, &((*((*(_204762_fc))))._field_Exception), &(_205011_ch), &(_204911_csc));
	(*(_20527_model))._field_Assigned=_20483_resultNeeded;
	(*_20527_model.alloc)._field_Except=_205011_ch;
	if ((_20483_resultNeeded && ((*_204911_csc.alloc)._field_result != nullptr))) {
		_1aa450053_pushErr(_self_, (*((*(_204762_fc))))._field_Token, jule::Str::lit("exceptional returns an expression, therefore else block should return expression", 80), jule::Slice<jule::Any>());
	};
}



inline void _1aa46451d_callFn(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa3036dc_FnCallExpr>* _207428_fc, jule::Ptr<_1aa44cc98_Data>* _207450_d) {
	jule::Ptr<_1aa334597_FnIns> _20757_f = _1a601e0dd_Fn((*((*(_207450_d))))._field_Kind.ptr());;
	if (_1aa335a60_IsBuiltin(_20757_f.ptr())) {
		_1aa463929_callBuiltinFn(_self_, _207428_fc, _207450_d);
		return;;
	};
	if ((_1aa450cce_isGlobal(_self_) && (*((*_20757_f.alloc)._field_Decl))._field_Exceptional)) {
		_1aa450053_pushErr(_self_, (*((*(_207428_fc))))._field_Token, jule::Str::lit("exceptionals are not allowed in global scope", 44), jule::Slice<jule::Any>());
		_1aa4503b6_pushSuggestion(_self_, jule::Str::lit("wrap exceptional with a non-exceptional function", 48), jule::Slice<jule::Any>());
		(*(_207450_d))=nullptr;
		return;;
	};
	if (((!(_1aa331d03_IsMethod((*(_20757_f))._field_Decl))) && _1a60367a9_hasDirective(&((*(*(_20757_f))._field_Decl.alloc)._field_Directives), jule::Str::lit("test", 4)))) {
		_1aa450053_pushErr(_self_, (*((*(_207428_fc))))._field_Token, jule::Str::lit("you cannot call test functions", 30), jule::Slice<jule::Any>());
		(*(_207450_d))=nullptr;
		return;;
	};
	if (((((!((*((*(_207450_d))))._field_Mutable)) && _1aa331d03_IsMethod((*(_20757_f))._field_Decl)) && (!((*(*(_20757_f))._field_Decl.alloc)._field_Statically))) && (*((*(*(_20757_f))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable)) {
		if ((!((*_self_.alloc)._field_immutable))) {
			_1aa450053_pushErr(_self_, (*((*(_207428_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_1aa3244cc_StructLitExprModel> _21015_lit = _1a6016ca6_isLitBased(&((*((*(_207450_d))))._field_Model));;
			if ((_21015_lit == nullptr)) {
				_1aa450053_pushErr(_self_, (*((*(_207428_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
			} else {
				_1aa44053d_checkMutRiskOfStructLit(&((*_self_.alloc)._field_s), &(_21015_lit));
			};
		};
	} else if (((!(_1aa450a48_isUnsafe(_self_))) && (*(*(_20757_f))._field_Decl.alloc)._field_Unsafety)) {
		_1aa450053_pushErr(_self_, (*((*(_207428_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	jule::Bool _21137_dynamicAnnotation = ((((*(*(_20757_f))._field_Decl.alloc)._field_Generics.len() > 0LL) && ((*_20757_f.alloc)._field_Generics.len() == 0LL)) && ((*_20757_f.alloc)._field_Params.len() > 0LL));;
	if (_21137_dynamicAnnotation) {
		(*_20757_f.alloc)._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>::alloc((*(*(_20757_f))._field_Decl.alloc)._field_Generics.len(), (*(*(_20757_f))._field_Decl.alloc)._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a6018c64_InsGeneric>(nullptr); __jule_collection; });
	} else if (((*_20757_f.alloc)._field_Generics.len() != (*(*(_20757_f))._field_Decl.alloc)._field_Generics.len())) {
		_1aa3c0963_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), (*(*(_20757_f))._field_Decl.alloc)._field_Generics.len(), (*_20757_f.alloc)._field_Generics.len(), (*((*(_207428_fc))))._field_Token);
		(*(_207450_d))=nullptr;
		return;;
	};
	jule::Ptr<_1aa3bb530_sema> _21227_old = (*_self_.alloc)._field_s;;
	if (((*(*(_20757_f))._field_Decl.alloc)._field_Owner != nullptr)) {
		(*_self_.alloc)._field_s=(*(*((*(_20757_f))._field_Decl))._field_Owner.alloc)._field_sema;
	};
	__JULE_DEFER({
		if ((_21227_old != (*_self_.alloc)._field_s)) {
			(*(_21227_old))._field_errors=jule::append((*_21227_old.alloc)._field_errors,(*((*_self_.alloc)._field_s))._field_errors);
			(*(*(_self_))._field_s.alloc)._field_errors=nullptr;
		};
		(*_self_.alloc)._field_s=_21227_old;
	});;
	_1aa43cae0_fnCallArgChecker _21357_fcac = _1aa43cae0_fnCallArgChecker{._field_e=_self_, ._field_args=(*((*(_207428_fc))))._field_Args, ._field_errorToken=(*((*(_207428_fc))))._field_Token, ._field_f=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_dynamicAnnotation=_21137_dynamicAnnotation, ._field_argModels=jule::Slice<jule::Any>(nullptr), ._field_ignored=jule::Slice<jule::Ptr<_1a601a64a_TypeKind>>(nullptr)};;
	if ((!(_21137_dynamicAnnotation))) {
		if ((!((*_20757_f.alloc)._field_reloaded))) {
			jule::Bool _21445_ok = _1aa3d0621_reloadFnInsTypes((*(_self_))._field_s, _20757_f);;
			(*_20757_f.alloc)._field_reloaded=true;
			if ((!(_21445_ok))) {
				(*(_207450_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1aa334597_FnIns> _21518_existInstance = _1aa333167_appendInstance((*(_20757_f))._field_Decl, &(_20757_f));;
		if ((_21518_existInstance != nullptr)) {
			_20757_f=_21518_existInstance;
		};
	} else if ((!(_1aa3cd982_buildFnNonGenericTypeKinds((*(_self_))._field_s, _20757_f, &(_21357_fcac._field_ignored))))) {
		(*(_207450_d))=nullptr;
		return;;
	};
	_21357_fcac._field_f=_20757_f;
	jule::Bool _21627_ok = false;;
	if (((*(*(_20757_f))._field_Decl.alloc)._field_Owner != nullptr)) {
		std::swap(_21227_old, (*_self_.alloc)._field_s);
		_21627_ok=_1aa4401ca_check(&_21357_fcac);
		std::swap(_21227_old, (*_self_.alloc)._field_s);
	} else {
		_21627_ok=_1aa4401ca_check(&_21357_fcac);
	};
	if (_21137_dynamicAnnotation) {
		if ((!(_21627_ok))) {
			(*(_207450_d))=nullptr;
			return;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aa45b8bc_checkGenericFn(_self_, &(_20757_f), &((*((*(_207428_fc))))._field_Token), &((*((*(_207450_d))))._field_Model));
			_21627_ok = __jule_assign_result.__jule_result_arg0;
		});
		if ((!(_21627_ok))) {
			(*(_207450_d))=nullptr;
			return;;
		};
	};
	jule::Any _21837_callModel = (*((*(_207450_d))))._field_Model;;
	if (_1aa331a6c_IsVoid((*(_20757_f))._field_Decl)) {
		(*(_207450_d))=_1a601505c_buildVoidData();
	} else {
		(*((*(_207450_d))))._field_Kind=(*_20757_f.alloc)._field_Result;
		(*((*(_207450_d))))._field_Lvalue=false;
	};
	jule::Ptr<_1aa32570e_FnCallExprModel> _21927_model = jule::new_ptr<_1aa32570e_FnCallExprModel>(_1aa32570e_FnCallExprModel{._field_Token=(*((*(_207428_fc))))._field_Token, ._field_Func=_20757_f, ._field_IsCo=(*((*(_207428_fc))))._field_IsCo, ._field_Expr=_21837_callModel, ._field_Args=_21357_fcac._field_argModels, ._field_Except=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Assigned=false});;
	(*((*(_207450_d))))._field_Model=jule::Any(_21927_model, &__jule_any_type41);
	(*((*(_207450_d))))._field_Mutable=true;
	if ((*(*(_20757_f))._field_Decl.alloc)._field_Exceptional) {
		if ((*((*(_207428_fc))))._field_IsCo) {
			_1aa3be434_pushErr((*(_self_))._field_s, (*((*(_207428_fc))))._field_Token, jule::Str::lit("concurrent calls not supports exceptionals", 42), jule::Slice<jule::Any>());
			_1aa3be797_pushSuggestion((*(_self_))._field_s, jule::Str::lit("handle exceptional in a separate function or anonymous function", 63), jule::Slice<jule::Any>());
		};
		{
			
			if (_1aa303a94_Unhandled((*(_207428_fc)).ptr())) {
				_case_begin_1bca7bc22:;
				{
					_1aa450053_pushErr(_self_, (*((*(_207428_fc))))._field_Token, jule::Str::lit("exceptionals must be handled", 28), jule::Slice<jule::Any>());
					_1aa4503b6_pushSuggestion(_self_, jule::Str::lit("use \"!\" operator after exceptional to handle it", 47), jule::Slice<jule::Any>());
				}
			}
			else if (_1aa303d2a_Ignored((*(_207428_fc)).ptr())) {
				_case_begin_1bca7b914:;
				{
					goto _match_end_1bca7a65a;
				}
			}
			else {
				_case_begin_1bca7a6e3:;
				{
					_1aa4641aa_processExceptionalHandler(_self_, &(_20757_f), _207428_fc, _207450_d);
				}
			}
			_match_end_1bca7a65a:;
		};
	} else if ((!(_1aa303a94_Unhandled((*(_207428_fc)).ptr())))) {
		_1aa450053_pushErr(_self_, (*((*(_207428_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	if ((*((*(_207428_fc))))._field_IsCo) {
		_1aa463c8c_checkFnOfConcurrentCall(_self_, &((*(_21927_model))._field_Func), (*((*(_207428_fc))))._field_Token);
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa46485e_evalFnCall(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa3036dc_FnCallExpr> _222731_fc) {
	jule::Ptr<_1a601a64a_TypeKind> _22287_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_22287_prefix;
	});;
	{
		auto &_match_expr{ (*((*(_222731_fc))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1bca81243:;
			{
				if ((*((*((*(_222731_fc))._field_Expr))._field_Token))._field_Kind.equal("error", 5)) {
					return _1aa5e16de_builtinCallerError(&(_self_), &(_222731_fc));;
				};
			}
		}
		_match_end_1bca811dd:;
	};
	jule::Ptr<_1aa44cc98_Data> _22417_d = _1aa46be4e_evalExprKind(_self_, (*((*(_222731_fc))._field_Expr))._field_Kind);;
	if ((_22417_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_22417_d))._field_Decl) {
		_1aa4635b6_callTypeFn(_self_, &(_222731_fc), &(_22417_d));
		return _22417_d;;
	};
	if ((_1a601e0dd_Fn((*(_22417_d))._field_Kind.ptr()) == nullptr)) {
		_1aa450053_pushErr(_self_, (*_222731_fc.alloc)._field_Token, jule::Str::lit("attempting to call a non-function", 33), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1aa46451d_callFn(_self_, &(_222731_fc), &(_22417_d));
	return _22417_d;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa464c5a_evalEnumStatic(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa347753_Enum> _226034_enm, jule::Ptr<_1aa2d51c4_Token> _226050_ident) {
	jule::Ptr<_1aa346bd6_EnumItem> _22617_item = _1aa34837a_FindItem(_226034_enm.ptr(), (*(_226050_ident))._field_Kind);;
	if ((_22617_item == nullptr)) {
		_1aa450053_pushErr(_self_, _226050_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_226034_enm.alloc)._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_226050_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _1a60169dc_evalEnumStatic(&(_226034_enm), &(_22617_item), &(_226050_ident));;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa465156_evalTypeEnumStatic(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa348e5d_TypeEnum> _226838_enm, jule::Ptr<_1aa2d51c4_Token> _226854_ident) {
	jule::Ptr<_1aa348886_TypeEnumItem> _22697_item = _1aa349a52_FindItem(_226838_enm.ptr(), (*(_226854_ident))._field_Kind);;
	if ((_22697_item == nullptr)) {
		_1aa450053_pushErr(_self_, _226854_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_226838_enm.alloc)._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_226854_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		
		if ((_1a601d5a4_Enum((*((*(_22697_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bca897e0:;
			{
				return _1aa453650__evalEnum(_self_, _1a601d5a4_Enum((*((*(_22697_item))._field_Kind))._field_Kind));;
			}
		}
		else if ((_1a601d83a_TypeEnum((*((*(_22697_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bca87a74:;
			{
				return _1aa453d8c__evalTypeEnum(_self_, _1a601d83a_TypeEnum((*((*(_22697_item))._field_Kind))._field_Kind));;
			}
		}
		else if ((_1a601e374_Struct((*((*(_22697_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bca87ada:;
			{
				return _1aa4545c9__evalStruct(_self_, _1a601e374_Struct((*((*(_22697_item))._field_Kind))._field_Kind));;
			}
		}
		else {
			_case_begin_1bca87a0d:;
			{
				jule::Ptr<_1aa44cc98_Data> _22828_d = jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=(*((*(_22697_item))._field_Kind))._field_Kind, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
				(*(_22828_d))._field_Model=jule::Any((*_22828_d.alloc)._field_Kind, &__jule_any_type87);
				return _22828_d;;
			}
		}
		_match_end_1bca87c0b:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa465552_evalStructStatic(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa31e373_StructIns> _229136_s, jule::Ptr<_1aa2d51c4_Token> _229151_ident) {
	jule::Ptr<_1aa44cc98_Data> _22927_d = jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
	;
	jule::Ptr<_1aa3315b6_Fn> _22967_method = _1aa32041d_FindMethod(_229136_s.ptr(), (*(_229151_ident))._field_Kind, true);;
	if ((_22967_method != nullptr)) {
		if ((!(_1aa3beb93_isAccessibleDefine((*(_self_))._field_s.ptr(), (*_22967_method.alloc)._field_Public, (*_22967_method.alloc)._field_Token)))) {
			_1aa450053_pushErr(_self_, _229151_ident, jule::Str::lit("inaccessible identifier: @ is private", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_229151_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
			_1aa4503b6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1aa334597_FnIns> _23038_ins = _1aa332d59_instance(_22967_method);;
		(*(_23038_ins))._field_Owner=_229136_s;
		_1bc8e4073_pushReference(_self_, &(_23038_ins));
		(*_22927_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1aa328723_StructStaticIdentExprModel>(_1aa328723_StructStaticIdentExprModel{._field_Structure=_229136_s, ._field_Expr=(*_22927_d.alloc)._field_Model, ._field_Method=_23038_ins}), &__jule_any_type99);
		(*_22927_d.alloc)._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_23038_ins, (jule::Trait::Type*)&_1a601a194_Kind_mptr_data1)});
		return _22927_d;;
	};
	jule::Ptr<_1aa3e4d3e_Var> _23177_sttc = _1aa320aa0_FindStatic(_229136_s, (*_229151_ident.alloc)._field_Kind);;
	if ((_23177_sttc != nullptr)) {
		return _1aa456686_evalVar(_self_, _23177_sttc, _229151_ident);;
	};
	_1aa450053_pushErr(_self_, _229151_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_229136_s.alloc)._field_Decl))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_229151_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa465a08_evalTraitSubIdent(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa44cc98_Data> _232637_d, jule::Ptr<_1aa345047_Trait> _232651_trt, jule::Ptr<_1aa2d51c4_Token> _232668_ident) {
	jule::Ptr<_1aa3315b6_Fn> _23277_f = _1aa345c29_FindMethod(_232651_trt.ptr(), (*(_232668_ident))._field_Kind);;
	if ((_23277_f == nullptr)) {
		_1aa450053_pushErr(_self_, _232668_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_232651_trt.alloc)._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_232668_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1aa332d59_instance(_23277_f), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1aa3279db_TraitSubIdentExprModel>(_1aa3279db_TraitSubIdentExprModel{._field_Token=_232668_ident, ._field_Expr=(*(_232637_d))._field_Model, ._field_Method=_23277_f, ._field_Trt=_232651_trt}), &__jule_any_type100), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa466069_evalStructSubIdentField(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa44cc98_Data>* _234644_d, jule::Ptr<_1aa31e373_StructIns>* _234659_s, jule::Ptr<_1aa2d51c4_Token>* _234679_tok, jule::Ptr<_1aa31d7c3_FieldIns>* _234697_f) {
	jule::Ptr<_1aa32837c_StructSubIdentExprModel> _23477_model = jule::new_ptr<_1aa32837c_StructSubIdentExprModel>(_1aa32837c_StructSubIdentExprModel{._field_Token=(*(_234679_tok)), ._field_Expr=jule::new_ptr<_1aa44cc98_Data>((*((*(_234644_d))))), ._field_Method=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_Field=(*(_234697_f)), ._field_Owner=(*(_234659_s))});;
	(*((*(_234644_d))))._field_Model=jule::Any(_23477_model, &__jule_any_type101);
	(*((*(_234644_d))))._field_Kind=(*((*(_234697_f))))._field_Kind;
	(*((*(_234644_d))))._field_Lvalue=true;
	if (((*((*((*(_234697_f))))._field_Decl))._field_Mutable && (!((*((*(_234644_d))))._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data0)) {
				_case_begin_1bca9b04e:;
				{
					jule::Ptr<_1aa381160_scopeChecker> _23625_scope = _1aa3847c3_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1aa381160_scopeChecker>((jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data0));;
					(*((*(_234644_d))))._field_Mutable=(((*(_23625_scope))._field_owner != nullptr) && ((*(*(_23625_scope))._field_owner.alloc)._field_Owner == (*(_234659_s))));
				}
			}
			_match_end_1bca9aee9:;
		};
	};
	return (*(_234644_d));;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa4665ca_evalStructSubIdent(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa44cc98_Data> _236938_d, jule::Ptr<_1aa31e373_StructIns> _236952_s, jule::Ptr<_1aa302ac6_SubIdentExpr> _236971_si, jule::Bool _236990_ref) {
	jule::Ptr<_1aa31d7c3_FieldIns> _23707_f = _1aa32075e_FindField(_236952_s.ptr(), (*((*(_236971_si))._field_Ident))._field_Kind);;
	if ((_23707_f != nullptr)) {
		if ((!(_1aa3beb93_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*_23707_f.alloc)._field_Decl))._field_Public, (*(*(_23707_f))._field_Decl.alloc)._field_Token)))) {
			_1aa450053_pushErr(_self_, (*_236971_si.alloc)._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_23707_f))._field_Decl.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
			_1aa4503b6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		return _1aa466069_evalStructSubIdentField(_self_, &(_236938_d), &(_236952_s), &((*_236971_si.alloc)._field_Ident), &(_23707_f));;
	};
	;
	jule::Ptr<_1aa3315b6_Fn> _23807_m = _1aa32041d_FindMethod(_236952_s, (*(*(_236971_si))._field_Ident.alloc)._field_Kind, false);;
	if ((_23807_m == nullptr)) {
		_1aa450053_pushErr(_self_, (*_236971_si.alloc)._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_236952_s.alloc)._field_Decl))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*(*(_236971_si))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if ((!(_1aa3beb93_isAccessibleDefine((*(_self_))._field_s, (*(_23807_m))._field_Public, (*(_23807_m))._field_Token)))) {
		_1aa450053_pushErr(_self_, (*_236971_si.alloc)._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_23807_m))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1aa4503b6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	if ((_1aa3304c7_IsRef((*(_23807_m))._field_Params[0LL].ptr()) && (!(_236990_ref)))) {
		_1aa450053_pushErr(_self_, (*_236971_si.alloc)._field_Ident, jule::Str::lit("reference method cannot use with non-reference instance", 55), jule::Slice<jule::Any>());
	};
	_1aa455179_checkDeprecated(_self_, &((*(_23807_m))._field_Directives), (*_236971_si.alloc)._field_Ident);
	jule::Ptr<_1aa334597_FnIns> _23967_ins = _1aa332d59_instance(_23807_m);;
	(*(_23967_ins))._field_Owner=_236952_s;
	_1bc8e4073_pushReference(_self_, &(_23967_ins));
	jule::Ptr<_1aa44cc98_Data> _23997_model = jule::new_ptr<_1aa44cc98_Data>((*(_236938_d)));;
	(*_236938_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1aa32837c_StructSubIdentExprModel>(_1aa32837c_StructSubIdentExprModel{._field_Token=(*_236971_si.alloc)._field_Ident, ._field_Expr=_23997_model, ._field_Method=_23967_ins, ._field_Field=jule::Ptr<_1aa31d7c3_FieldIns>(nullptr), ._field_Owner=_236952_s}), &__jule_any_type101);
	(*_236938_d.alloc)._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_23967_ins, (jule::Trait::Type*)&_1a601a194_Kind_mptr_data1)});
	return _236938_d;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa46691b_evalIntTypeStatic(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa2d51c4_Token> _241033_ident) {
	;
	{
		auto &_match_expr{ (*(_241033_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bcaaa1a1:;
			{
				jule::Ptr<_1a6e77584_Const> _24148_c = static__1a6e77a07_NewI64(_1a6e72a13_MaxI(jule::Str::lit("int", 3)));;
				(*(_24148_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=true, ._field_Kind=_1aa5dcc5c_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24148_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_24148_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1bcaaaba7:;
			{
				jule::Ptr<_1a6e77584_Const> _24238_c = static__1a6e77a07_NewI64(static_cast<jule::I64>(_1a6e7311d_Min(jule::Str::lit("int", 3))));;
				(*(_24238_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=true, ._field_Kind=_1aa5dcc5c_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24238_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_24238_c});;
			}
		}
		else {
			_case_begin_1bcaa9854:;
			{
				_1aa450053_pushErr(_self_, _241033_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("int", 3), &__jule_any_type4); (*it++) = jule::Any((*(_241033_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bcaa9ce9:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa466c5c_evalUintTypeStatic(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa2d51c4_Token> _243734_ident) {
	;
	{
		auto &_match_expr{ (*(_243734_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bcaade85:;
			{
				jule::Ptr<_1a6e77584_Const> _24418_c = static__1a6e77cc1_NewU64(_1a6e72ccc_MaxU(jule::Str::lit("uint", 4)));;
				(*(_24418_c))._field_Kind=jule::Str::lit("uint", 4);
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=true, ._field_Kind=_1aa5dc894_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24418_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_24418_c});;
			}
		}
		else {
			_case_begin_1bcaad87a:;
			{
				_1aa450053_pushErr(_self_, _243734_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("uint", 4), &__jule_any_type4); (*it++) = jule::Any((*(_243734_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bcaadacd:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa46709d_evalI8TypeStatic(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa2d51c4_Token> _245532_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_245532_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bcab2197:;
			{
				jule::Ptr<_1a6e77584_Const> _24618_c = static__1a6e77a07_NewI64(127LL);;
				(*(_24618_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=true, ._field_Kind=_1aa5dce9e_primI8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24618_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_24618_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1bcab2b9d:;
			{
				jule::Ptr<_1a6e77584_Const> _24708_c = static__1a6e77a07_NewI64(-128LL);;
				(*(_24708_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=true, ._field_Kind=_1aa5dce9e_primI8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24708_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_24708_c});;
			}
		}
		else {
			_case_begin_1bcab18e4:;
			{
				_1aa450053_pushErr(_self_, _245532_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i8", 2), &__jule_any_type4); (*it++) = jule::Any((*(_245532_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bcab1d12:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa4673de_evalI16TypeStatic(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa2d51c4_Token> _248433_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_248433_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bcab6465:;
			{
				jule::Ptr<_1a6e77584_Const> _24908_c = static__1a6e77a07_NewI64(32767LL);;
				(*(_24908_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=true, ._field_Kind=_1aa5dd246_primI16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24908_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_24908_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1bcab6e6b:;
			{
				jule::Ptr<_1a6e77584_Const> _24998_c = static__1a6e77a07_NewI64(-32768LL);;
				(*(_24998_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=true, ._field_Kind=_1aa5dd246_primI16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24998_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_24998_c});;
			}
		}
		else {
			_case_begin_1bcab5bb2:;
			{
				_1aa450053_pushErr(_self_, _248433_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i16", 3), &__jule_any_type4); (*it++) = jule::Any((*(_248433_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bcab60d0:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa467730_evalI32TypeStatic(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa2d51c4_Token> _251333_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_251333_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bcaba733:;
			{
				jule::Ptr<_1a6e77584_Const> _25198_c = static__1a6e77a07_NewI64(2147483647LL);;
				(*(_25198_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=true, ._field_Kind=_1aa5dd4ee_primI32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25198_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_25198_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1bcabb239:;
			{
				jule::Ptr<_1a6e77584_Const> _25288_c = static__1a6e77a07_NewI64(-2147483648LL);;
				(*(_25288_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=true, ._field_Kind=_1aa5dd4ee_primI32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25288_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_25288_c});;
			}
		}
		else {
			_case_begin_1bcab9e80:;
			{
				_1aa450053_pushErr(_self_, _251333_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i32", 3), &__jule_any_type4); (*it++) = jule::Any((*(_251333_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bcaba39d:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa467a71_evalI64TypeStatic(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa2d51c4_Token> _254233_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_254233_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bcabea01:;
			{
				jule::Ptr<_1a6e77584_Const> _25488_c = static__1a6e77a07_NewI64(jule::MAX_I64);;
				(*(_25488_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=true, ._field_Kind=_1aa5dd7a7_primI64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25488_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_25488_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1bcac0507:;
			{
				jule::Ptr<_1a6e77584_Const> _25578_c = static__1a6e77a07_NewI64(jule::MIN_I64);;
				(*(_25578_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=true, ._field_Kind=_1aa5dd7a7_primI64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25578_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_25578_c});;
			}
		}
		else {
			_case_begin_1bcabe24d:;
			{
				_1aa450053_pushErr(_self_, _254233_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i64", 3), &__jule_any_type4); (*it++) = jule::Any((*(_254233_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bcabe66b:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa467db2_evalU8TypeStatic(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa2d51c4_Token> _257132_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_257132_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bcac38e5:;
			{
				jule::Ptr<_1a6e77584_Const> _25768_c = static__1a6e77cc1_NewU64(255LLU);;
				(*(_25768_c))._field_Kind=jule::Str::lit("u8", 2);
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=true, ._field_Kind=_1aa5dda60_primU8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25768_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_25768_c});;
			}
		}
		else {
			_case_begin_1bcac30ed:;
			{
				_1aa450053_pushErr(_self_, _257132_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u8", 2), &__jule_any_type4); (*it++) = jule::Any((*(_257132_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bcac34e9:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa468203_evalU16TypeStatic(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa2d51c4_Token> _259033_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_259033_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bcac6673:;
			{
				jule::Ptr<_1a6e77584_Const> _25958_c = static__1a6e77cc1_NewU64(65535LLU);;
				(*(_25958_c))._field_Kind=jule::Str::lit("u16", 3);
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=true, ._field_Kind=_1aa5ddd18_primU16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25958_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_25958_c});;
			}
		}
		else {
			_case_begin_1bcac5d7b:;
			{
				_1aa450053_pushErr(_self_, _259033_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u16", 3), &__jule_any_type4); (*it++) = jule::Any((*(_259033_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bcac6277:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa468544_evalU32TypeStatic(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa2d51c4_Token> _260933_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_260933_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bcac9401:;
			{
				jule::Ptr<_1a6e77584_Const> _26148_c = static__1a6e77cc1_NewU64(4294967295LLU);;
				(*(_26148_c))._field_Kind=jule::Str::lit("u32", 3);
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=true, ._field_Kind=_1aa5de0c1_primU32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26148_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_26148_c});;
			}
		}
		else {
			_case_begin_1bcac8b09:;
			{
				_1aa450053_pushErr(_self_, _260933_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u32", 3), &__jule_any_type4); (*it++) = jule::Any((*(_260933_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bcac9005:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa468885_evalU64TypeStatic(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa2d51c4_Token> _262833_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_262833_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bcacc17e:;
			{
				jule::Ptr<_1a6e77584_Const> _26338_c = static__1a6e77cc1_NewU64(jule::MAX_U64);;
				(*(_26338_c))._field_Kind=jule::Str::lit("u64", 3);
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=true, ._field_Kind=_1aa5de5aa_primU64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26338_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_26338_c});;
			}
		}
		else {
			_case_begin_1bcacb887:;
			{
				_1aa450053_pushErr(_self_, _262833_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u64", 3), &__jule_any_type4); (*it++) = jule::Any((*(_262833_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bcacbc83:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa468bc6_evalF32TypeStatic(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa2d51c4_Token> _264733_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_264733_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bcad0627:;
			{
				jule::Ptr<_1a6e77584_Const> _26548_c = static__1a6e7861d_NewF64(340282346638528860000000000000000000000.0);;
				(*(_26548_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=true, ._field_Kind=_1aa5de7ec_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26548_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_26548_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1bcad112d:;
			{
				jule::Ptr<_1a6e77584_Const> _26638_c = static__1a6e7861d_NewF64(-340282346638528860000000000000000000000.0);;
				(*(_26638_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=true, ._field_Kind=_1aa5de7ec_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26638_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_26638_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1bcad1194:;
			{
				jule::Ptr<_1a6e77584_Const> _26728_c = static__1a6e7861d_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				(*(_26728_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=true, ._field_Kind=_1aa5de7ec_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26728_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_26728_c});;
			}
		}
		else {
			_case_begin_1bcacedeb:;
			{
				_1aa450053_pushErr(_self_, _264733_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("f32", 3), &__jule_any_type4); (*it++) = jule::Any((*(_264733_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bcad0270:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa469017_evalF64TypeStatic(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa2d51c4_Token> _268633_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_268633_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bcad5dbe:;
			{
				jule::Ptr<_1a6e77584_Const> _26938_c = static__1a6e7861d_NewF64(jule::MAX_F64);;
				(*(_26938_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=true, ._field_Kind=_1aa5dea0b_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26938_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_26938_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1bcad68c5:;
			{
				jule::Ptr<_1a6e77584_Const> _27028_c = static__1a6e7861d_NewF64(jule::MIN_F64);;
				(*(_27028_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=true, ._field_Kind=_1aa5dea0b_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27028_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_27028_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1bcad693b:;
			{
				jule::Ptr<_1a6e77584_Const> _27118_c = static__1a6e7861d_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				(*(_27118_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=true, ._field_Kind=_1aa5dea0b_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27118_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_27118_c});;
			}
		}
		else {
			_case_begin_1bcad5693:;
			{
				_1aa450053_pushErr(_self_, _268633_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("f64", 3), &__jule_any_type4); (*it++) = jule::Any((*(_268633_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bcad5a17:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa469413_evalPrimStatic(_1aa44e9c0_eval* _self_, jule::Str _272530_kind, jule::Ptr<_1aa2d51c4_Token> _272541_ident) {
	{
		auto &_match_expr{ _272530_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1bcada5aa:;
			{
				return _1aa46691b_evalIntTypeStatic(_self_, _272541_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1bcadb05b:;
			{
				return _1aa466c5c_evalUintTypeStatic(_self_, _272541_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1bcadb0c2:;
			{
				return _1aa46709d_evalI8TypeStatic(_self_, _272541_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1bcada28b:;
			{
				return _1aa4673de_evalI16TypeStatic(_self_, _272541_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1bcada302:;
			{
				return _1aa467730_evalI32TypeStatic(_self_, _272541_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1bcada368:;
			{
				return _1aa467a71_evalI64TypeStatic(_self_, _272541_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1bcada3ce:;
			{
				return _1aa467db2_evalU8TypeStatic(_self_, _272541_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1bcadb1b0:;
			{
				return _1aa468203_evalU16TypeStatic(_self_, _272541_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1bcadb226:;
			{
				return _1aa468544_evalU32TypeStatic(_self_, _272541_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1bcadb28c:;
			{
				return _1aa468885_evalU64TypeStatic(_self_, _272541_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1bcadb303:;
			{
				return _1aa468bc6_evalF32TypeStatic(_self_, _272541_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1bcadb369:;
			{
				return _1aa469017_evalF64TypeStatic(_self_, _272541_ident);;
			}
		}
		else {
			_case_begin_1bcad6b17:;
			{
				_1aa450053_pushErr(_self_, _272541_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_272530_kind, &__jule_any_type4); (*it++) = jule::Any((*(_272541_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bcad6b8e:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa46980e_evalTypeStatic(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa44cc98_Data> _275734_d, jule::Ptr<_1aa302ac6_SubIdentExpr> _275748_si) {
	{
		
		if ((_1a601cd01_Prim((*(_275734_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcae088a:;
			{
				return _1aa469413_evalPrimStatic(_self_, _1a6023ad7_Str(_1a601cd01_Prim((*(_275734_d))._field_Kind).ptr()), (*(_275748_si))._field_Ident);;
			}
		}
		else if ((_1a601d5a4_Enum((*(_275734_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcae168d:;
			{
				return _1aa464c5a_evalEnumStatic(_self_, _1a601d5a4_Enum((*(_275734_d))._field_Kind), (*(_275748_si))._field_Ident);;
			}
		}
		else if ((_1a601d83a_TypeEnum((*(_275734_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcae1704:;
			{
				return _1aa465156_evalTypeEnumStatic(_self_, _1a601d83a_TypeEnum((*(_275734_d))._field_Kind), (*(_275748_si))._field_Ident);;
			}
		}
		else if ((_1a601e374_Struct((*(_275734_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcae0538:;
			{
				return _1aa465552_evalStructStatic(_self_, _1a601e374_Struct((*(_275734_d))._field_Kind), (*(_275748_si))._field_Ident);;
			}
		}
		else {
			_case_begin_1bcae04c2:;
			{
				_1aa450053_pushErr(_self_, (*(_275748_si))._field_Ident, jule::Str::lit("type @ is not supports sub-defines", 34), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_275734_d))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bcae0417:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1bcae8662_comptimeObjSubIdent(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa35ac50_comptimeTypeInfo>* _277354_ct, jule::Ptr<_1aa44cc98_Data>* _277374_d, jule::Ptr<_1aa302ac6_SubIdentExpr>* _277385_si) {
	jule::Ptr<_1aa44cc98_Data> _27747_cd = _1aa361a7a_subIdent((*(_277354_ct)), &((*((*((*(_277385_si))))._field_Ident))._field_Kind));;
	if ((_27747_cd == nullptr)) {
		_1aa450053_pushErr(_self_, (*((*(_277385_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*((*(_277374_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_277385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _27747_cd;;
}

inline jule::Ptr<_1aa44cc98_Data> _1bcaeccd7_comptimeObjSubIdent(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa34cb21_comptimeStructField>* _277354_ct, jule::Ptr<_1aa44cc98_Data>* _277374_d, jule::Ptr<_1aa302ac6_SubIdentExpr>* _277385_si) {
	jule::Ptr<_1aa44cc98_Data> _27747_cd = _1aa34e0ea_subIdent((*(_277354_ct)), &((*((*((*(_277385_si))))._field_Ident))._field_Kind));;
	if ((_27747_cd == nullptr)) {
		_1aa450053_pushErr(_self_, (*((*(_277385_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*((*(_277374_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_277385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _27747_cd;;
}

inline jule::Ptr<_1aa44cc98_Data> _1bcb023e6_comptimeObjSubIdent(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa35386e_comptimeEnumField>* _277354_ct, jule::Ptr<_1aa44cc98_Data>* _277374_d, jule::Ptr<_1aa302ac6_SubIdentExpr>* _277385_si) {
	jule::Ptr<_1aa44cc98_Data> _27747_cd = _1aa35493b_subIdent((*(_277354_ct)), &((*((*((*(_277385_si))))._field_Ident))._field_Kind));;
	if ((_27747_cd == nullptr)) {
		_1aa450053_pushErr(_self_, (*((*(_277385_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*((*(_277374_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_277385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _27747_cd;;
}

inline jule::Ptr<_1aa44cc98_Data> _1bcb06a49_comptimeObjSubIdent(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa356311_comptimeParam>* _277354_ct, jule::Ptr<_1aa44cc98_Data>* _277374_d, jule::Ptr<_1aa302ac6_SubIdentExpr>* _277385_si) {
	jule::Ptr<_1aa44cc98_Data> _27747_cd = _1aa357d90_subIdent((*(_277354_ct)), &((*((*((*(_277385_si))))._field_Ident))._field_Kind));;
	if ((_27747_cd == nullptr)) {
		_1aa450053_pushErr(_self_, (*((*(_277385_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*((*(_277374_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_277385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _27747_cd;;
}

inline jule::Ptr<_1aa44cc98_Data> _1bcb0b3cd_comptimeObjSubIdent(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa3509c0_comptimeStatic>* _277354_ct, jule::Ptr<_1aa44cc98_Data>* _277374_d, jule::Ptr<_1aa302ac6_SubIdentExpr>* _277385_si) {
	jule::Ptr<_1aa44cc98_Data> _27747_cd = _1aa352021_subIdent((*(_277354_ct)), &((*((*((*(_277385_si))))._field_Ident))._field_Kind));;
	if ((_27747_cd == nullptr)) {
		_1aa450053_pushErr(_self_, (*((*(_277385_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*((*(_277374_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_277385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _27747_cd;;
}

inline jule::Ptr<_1aa44cc98_Data> _1bcb109dc_comptimeObjSubIdent(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa361d55_comptimeValue>* _277354_ct, jule::Ptr<_1aa44cc98_Data>* _277374_d, jule::Ptr<_1aa302ac6_SubIdentExpr>* _277385_si) {
	jule::Ptr<_1aa44cc98_Data> _27747_cd = _1aa3643c9_subIdent((*(_277354_ct)), &((*((*((*(_277385_si))))._field_Ident))._field_Kind));;
	if ((_27747_cd == nullptr)) {
		_1aa450053_pushErr(_self_, (*((*(_277385_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*((*(_277374_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_277385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _27747_cd;;
}

inline jule::Ptr<_1aa44cc98_Data> _1bcb150eb_comptimeObjSubIdent(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa365c9e_comptimeFile>* _277354_ct, jule::Ptr<_1aa44cc98_Data>* _277374_d, jule::Ptr<_1aa302ac6_SubIdentExpr>* _277385_si) {
	jule::Ptr<_1aa44cc98_Data> _27747_cd = _1aa36771d_subIdent((*(_277354_ct)), &((*((*((*(_277385_si))))._field_Ident))._field_Kind));;
	if ((_27747_cd == nullptr)) {
		_1aa450053_pushErr(_self_, (*((*(_277385_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*((*(_277374_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_277385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _27747_cd;;
}

inline jule::Ptr<_1aa44cc98_Data> _1bcb19793_comptimeObjSubIdent(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa369841_comptimeDecl>* _277354_ct, jule::Ptr<_1aa44cc98_Data>* _277374_d, jule::Ptr<_1aa302ac6_SubIdentExpr>* _277385_si) {
	jule::Ptr<_1aa44cc98_Data> _27747_cd = _1aa36d8de_subIdent((*(_277354_ct)), &((*((*((*(_277385_si))))._field_Ident))._field_Kind));;
	if ((_27747_cd == nullptr)) {
		_1aa450053_pushErr(_self_, (*((*(_277385_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*((*(_277374_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_277385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _27747_cd;;
}



inline __jule_tuple_x_1aa44cc98_Data__jule_tuple_bool _1aa46a1b1_tryComptimeObjSubIdent(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa44cc98_Data>* _278143_d, jule::Ptr<_1aa302ac6_SubIdentExpr> _278157_si) {
	__jule_tuple_x_1aa44cc98_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((_1a60216b7_comptimeTypeInfo((*((*(_278143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcae6aa0:;
			{
				jule::Ptr<_1aa35ac50_comptimeTypeInfo> _27848_ct = _1a60216b7_comptimeTypeInfo((*((*(_278143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1bcae8662_comptimeObjSubIdent(_self_, &(_27848_ct), _278143_d, &(_278157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a60203ca_comptimeStructField((*((*(_278143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcae65e9:;
			{
				jule::Ptr<_1aa34cb21_comptimeStructField> _27878_ct = _1a60203ca_comptimeStructField((*((*(_278143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1bcaeccd7_comptimeObjSubIdent(_self_, &(_27878_ct), _278143_d, &(_278157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a60208e7_comptimeEnumField((*((*(_278143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcae6671:;
			{
				jule::Ptr<_1aa35386e_comptimeEnumField> _27908_ct = _1a60208e7_comptimeEnumField((*((*(_278143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1bcb023e6_comptimeObjSubIdent(_self_, &(_27908_ct), _278143_d, &(_278157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a6020e14_comptimeParam((*((*(_278143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcae66e8:;
			{
				jule::Ptr<_1aa356311_comptimeParam> _27938_ct = _1a6020e14_comptimeParam((*((*(_278143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1bcb06a49_comptimeObjSubIdent(_self_, &(_27938_ct), _278143_d, &(_278157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a6021bd4_comptimeStatic((*((*(_278143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcae6770:;
			{
				jule::Ptr<_1aa3509c0_comptimeStatic> _27968_ct = _1a6021bd4_comptimeStatic((*((*(_278143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1bcb0b3cd_comptimeObjSubIdent(_self_, &(_27968_ct), _278143_d, &(_278157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a6021e6a_comptimeValue((*((*(_278143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcae67e7:;
			{
				jule::Ptr<_1aa361d55_comptimeValue> _27998_ct = _1a6021e6a_comptimeValue((*((*(_278143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1bcb109dc_comptimeObjSubIdent(_self_, &(_27998_ct), _278143_d, &(_278157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a602271d_comptimeFile((*((*(_278143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcae6d14:;
			{
				jule::Ptr<_1aa365c9e_comptimeFile> _28028_ct = _1a602271d_comptimeFile((*((*(_278143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1bcb150eb_comptimeObjSubIdent(_self_, &(_28028_ct), _278143_d, &(_278157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a6022201_comptimeDecl((*((*(_278143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcae6d7a:;
			{
				jule::Ptr<_1aa369841_comptimeDecl> _28058_ct = _1a6022201_comptimeDecl((*((*(_278143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1bcb19793_comptimeObjSubIdent(_self_, &(_28058_ct), _278143_d, &(_278157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1bcae6572:;
			{
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		_match_end_1bcae64c8:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa46a5ac_evalObjSubIdent(_1aa44e9c0_eval* _self_, jule::Ptr<_1aa44cc98_Data> _281235_d, jule::Ptr<_1aa302ac6_SubIdentExpr> _281249_si) {
	if (_1aa2d7aab_IsIgnoreIdent((*((*(_281249_si))._field_Ident))._field_Kind)) {
		_1aa450053_pushErr(_self_, (*_281249_si.alloc)._field_Ident, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		jule::Ptr<_1aa44cc98_Data> _28198_compData;
		jule::Bool _281918_ok;
		({
			__jule_tuple_x_1aa44cc98_Data__jule_tuple_bool __jule_assign_result = _1aa46a1b1_tryComptimeObjSubIdent(_self_, &(_281235_d), _281249_si);
			_28198_compData = __jule_assign_result.__jule_result_arg0;
			_281918_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_281918_ok) {
			return _28198_compData;;
		};
	};
	jule::Ptr<_1a601a64a_TypeKind> _28257_kind = (*(_281235_d))._field_Kind;;
	{
		
		if ((_1a601d31d_Ptr((*_281235_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcb1e831:;
			{
				jule::Ptr<_1a602aa56_Ptr> _28284_ptr = _1a601d31d_Ptr((*(_281235_d))._field_Kind);;
				if (_1a602b5c3_IsUnsafe(_28284_ptr.ptr())) {
					goto _match_end_1bcb1e7ba;
				};
				if ((!(_1aa450a48_isUnsafe(_self_)))) {
					_1aa450053_pushErr(_self_, (*_281249_si.alloc)._field_Ident, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				_28257_kind=(*(_1a601d31d_Ptr((*(_281235_d))._field_Kind)))._field_Elem;
				_1a6017092_makeImplicitDeref(&(_281235_d), (*_281249_si.alloc)._field_Ident);
			}
		}
		else if ((_1a601d087_Sptr((*_281235_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcb1e8ca:;
			{
				_28257_kind=(*(_1a601d087_Sptr((*(_281235_d))._field_Kind)))._field_Elem;
				_1a6017092_makeImplicitDeref(&(_281235_d), (*_281249_si.alloc)._field_Ident);
			}
		}
		_match_end_1bcb1e7ba:;
	};
	{
		
		if ((_1a601e60a_Trait((*_281235_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcb1eda3:;
			{
				return _1aa465a08_evalTraitSubIdent(_self_, _281235_d, _1a601e60a_Trait((*(_281235_d))._field_Kind), (*_281249_si.alloc)._field_Ident);;
			}
		}
		else if ((_1a601e374_Struct(_28257_kind.ptr()) != nullptr)) {
			_case_begin_1bcb2300a:;
			{
				jule::Ptr<_1aa31e373_StructIns> _28464_s = _1a601e374_Struct(_28257_kind);;
				if (_1a601428c_isInstancedStruct(_28464_s)) {
					jule::Bool _28489_usedReferenceElem = (_1a601d087_Sptr((*_281235_d.alloc)._field_Kind.ptr()) != nullptr);;
					return _1aa4665ca_evalStructSubIdent(_self_, _281235_d, _1a601e374_Struct(_28257_kind), _281249_si, _28489_usedReferenceElem);;
				};
			}
		}
		_match_end_1bcb233d4:;
	};
	_1aa450053_pushErr(_self_, (*_281249_si.alloc)._field_Ident, jule::Str::lit("object @ is not supports sub-defines", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*_281235_d.alloc)._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa46a8ed_evalSubIdent(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa302ac6_SubIdentExpr> _285633_si) {
	jule::Ptr<_1a601a64a_TypeKind> _28577_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_28577_prefix;
	});;
	jule::Ptr<_1aa44cc98_Data> _28607_d = _1aa46be4e_evalExprKind(_self_, (*((*(_285633_si))._field_Expr))._field_Kind);;
	if ((_28607_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_28607_d))._field_Decl) {
		return _1aa46980e_evalTypeStatic(_self_, _28607_d, _285633_si);;
	};
	return _1aa46a5ac_evalObjSubIdent(_self_, _28607_d, _285633_si);;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa46ac3e_evalTuple(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa3005a7_TupleExpr> _287030_tup) {
	jule::Ptr<_1a6028856_Tuple> _28717_tupT = jule::new_ptr<_1a6028856_Tuple>(_1a6028856_Tuple{._field_Types=jule::Slice<jule::Ptr<_1a601a64a_TypeKind>>(nullptr)});;
	(*_28717_tupT.alloc)._field_Types=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a601a64a_TypeKind>>::alloc(0LL, (*(_287030_tup))._field_Expr.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a601a64a_TypeKind>(nullptr); __jule_collection; });
	jule::Ptr<_1aa328de9_TupleExprModel> _28747_model = jule::new_ptr<_1aa328de9_TupleExprModel>(_1aa328de9_TupleExprModel{._field_Datas=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa44cc98_Data>>::alloc(0LL, (*_287030_tup.alloc)._field_Expr.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa44cc98_Data>(nullptr); __jule_collection; })});;
	jule::Bool _28787_ok = true;;
	{
		auto expr = &((*_287030_tup.alloc)._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcb32bda:;
		if (it != expr_end) {
			jule::Ptr<_1aa2ee9b3_Expr> _287915_expr = *it;
			{
				jule::Ptr<_1aa44cc98_Data> _28808_d = _1aa46cc63_evalExpr(_self_, _287915_expr);;
				if ((_28808_d == nullptr)) {
					_28787_ok=false;
					goto _iter_next_1bcb32bda;
				};
				(*_28717_tupT.alloc)._field_Types=jule::append((*_28717_tupT.alloc)._field_Types,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a601a64a_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_28808_d))._field_Kind; __jule_collection; }));
				(*(_28747_model))._field_Datas=jule::append((*_28747_model.alloc)._field_Datas,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa44cc98_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _28808_d; __jule_collection; }));
			}
			_iter_next_1bcb32bda:;
			++it;
			goto _iter_begin_1bcb32bda;
		}
		_iter_end_1bcb32bda:;
	};
	if ((!(_28787_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_28717_tupT, (jule::Trait::Type*)&_1a601a194_Kind_mptr_data25)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_28747_model, &__jule_any_type84), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa46b13a_evalMap(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1a6029406_Map> _289928_m, jule::Ptr<_1aa304eb3_BraceLit> _289941_lit) {
	jule::Ptr<_1aa326dc5_MapExprModel> _29007_model = jule::new_ptr<_1aa326dc5_MapExprModel>(_1aa326dc5_MapExprModel{._field_KeyKind=(*(_289928_m))._field_Key, ._field_ValKind=(*_289928_m.alloc)._field_Val, ._field_Entries=jule::Slice<jule::Ptr<_1aa32691e_KeyValPairExprModel>>(nullptr)});;
	{
		auto expr = &((*(_289941_lit))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcb3699c:;
		if (it != expr_end) {
			jule::Ptr<_1aa2ee9b3_Expr> _290515_expr = *it;
			{
				{
					auto &_match_expr{ (*(_290515_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type82) {
						_case_begin_1bcb38042:;
						{
							goto _match_end_1bcb37393;
						}
					}
					else {
						_case_begin_1bcb373e8:;
						{
							_1aa450053_pushErr(_self_.ptr(), (*(_289941_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1bcb37393:;
				};
				jule::Ptr<_1aa3057dd_KeyValPair> _29158_pair = (*(_290515_expr))._field_Kind.cast_ptr<_1aa3057dd_KeyValPair>(&__jule_any_type82);;
				jule::Ptr<_1aa44cc98_Data> _29178_key = _1aa46cc63_evalExpr(_self_, (*(_29158_pair))._field_Key);;
				if ((_29178_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1aa44cc98_Data> _29228_val = _1aa46cc63_evalExpr(_self_, (*_29158_pair.alloc)._field_Val);;
				if ((_29228_val == nullptr)) {
					return nullptr;;
				};
				;
				if (_1aa3d1534_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_289928_m.alloc)._field_Key), &(_29178_key), &((*((*_29158_pair.alloc)._field_Key))._field_Token))) {
					_1aa3cbc9e_checkAssignType((*(_self_))._field_s, false, &((*_289928_m.alloc)._field_Key), &(_29178_key), (*(*(_29158_pair))._field_Key.alloc)._field_Token);
				};
				if (_1aa3d1534_checkValidityForInitExpr((*(_self_))._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_289928_m.alloc)._field_Val), &(_29228_val), &((*((*_29158_pair.alloc)._field_Val))._field_Token))) {
					_1aa3cbc9e_checkAssignType((*(_self_))._field_s, false, &((*_289928_m.alloc)._field_Val), &(_29228_val), (*(*(_29158_pair))._field_Val.alloc)._field_Token);
				};
				(*(_29007_model))._field_Entries=jule::append((*_29007_model.alloc)._field_Entries,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa32691e_KeyValPairExprModel>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1aa32691e_KeyValPairExprModel>(_1aa32691e_KeyValPairExprModel{._field_Key=(*(_29178_key))._field_Model, ._field_Val=(*(_29228_val))._field_Model}); __jule_collection; }));
			}
			_iter_next_1bcb3699c:;
			++it;
			goto _iter_begin_1bcb3699c;
		}
		_iter_end_1bcb3699c:;
	};
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_289928_m, (jule::Trait::Type*)&_1a601a194_Kind_mptr_data26)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_29007_model, &__jule_any_type102), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa46b47b_evalBraceLit(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa304eb3_BraceLit> _294833_lit) {
	{
		
		if (((*(_self_))._field_prefix == nullptr)) {
			_case_begin_1bcb41787:;
			{
				_1aa450053_pushErr(_self_, (*(_294833_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1a601e891_Map((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1bcb417ed:;
			{
				return _1aa46b13a_evalMap(_self_, _1a601e891_Map((*(_self_))._field_prefix), _294833_lit);;
			}
		}
		else if ((_1a601e374_Struct((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1bcb41864:;
			{
				return _1aa46283a_evalStructLitExplicit(_self_, _1a601e374_Struct((*(_self_))._field_prefix), (*(_294833_lit))._field_Exprs, (*_294833_lit.alloc)._field_Token);;
			}
		}
		else {
			_case_begin_1bcb40ac7:;
			{
				_1aa450053_pushErr(_self_.ptr(), (*(_294833_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bcb409c8:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa46b7bc_evalAnonFunc(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa30c33e_FnDecl> _296333_decl) {
	_1a602ca47_typeChecker _29647_tc = _1a602ca47_typeChecker{._field_s=(*(_self_))._field_s, ._field_rootLookup=(*_self_.alloc)._field_lookup, ._field_lookup=(*_self_.alloc)._field_lookup, ._field_referencer=jule::Ptr<_1a602ba57_referencer>(nullptr), ._field_refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1aa2d51c4_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1aa307889_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1a6019858_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>(nullptr), ._field_inscatch=false};;
	jule::Ptr<_1aa334597_FnIns> _29697_ins = _1a6034752_buildFunc(&_29647_tc, _296333_decl);;
	if ((_29697_ins == nullptr)) {
		return nullptr;;
	};
	(*(_29697_ins))._field_AsAnon=true;
	jule::Slice<jule::Ptr<_1aa3e4d3e_Var>> _29747_captured = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa3e4d3e_Var>(nullptr); __jule_collection; });;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data0)) {
			_case_begin_1bcb464b2:;
			{
				jule::Ptr<_1aa381160_scopeChecker> _29778_sc = (*_self_.alloc)._field_lookup.cast_ptr<_1aa381160_scopeChecker>((jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data0);;
				jule::Ptr<_1aa381160_scopeChecker> _29788_scc = _1aa39322c_newChildChecker(_29778_sc);;
				(*(_29788_scc))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1aa37eadc_scopeLabel>>>(nullptr);
				(*_29788_scc.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1aa380170_scopeGoto>>>(nullptr);
				(*_29788_scc.alloc)._field_owner=_29697_ins;
				(*_29788_scc.alloc)._field_childIndex=0LL;
				(*_29788_scc.alloc)._field_it=0LLU;
				(*_29788_scc.alloc)._field_cse=0LLU;
				(*_29788_scc.alloc)._field_captured=((jule::Ptr<jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>>)((&(_29747_captured))));
				_1aa3dea09_checkFnInsSc((*_self_.alloc)._field_s.ptr(), &(_29697_ins), &(_29788_scc));
			}
		}
		else {
			_case_begin_1bcb470a6:;
			{
				_1aa3e0125_checkFnIns((*_self_.alloc)._field_s, &(_29697_ins));
			}
		}
		_match_end_1bcb47051:;
	};
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_29697_ins, (jule::Trait::Type*)&_1a601a194_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1aa326545_AnonFnExprModel>(_1aa326545_AnonFnExprModel{._field_Captured=_29747_captured, ._field_Func=_29697_ins, ._field_Global=_1aa450cce_isGlobal(_self_)}), &__jule_any_type103), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa46bb0d_evalBinary(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa30307c_BinaryExpr> _300131_op) {
	_1aa470183_binaryEval _30027_bs = static__1aa47076b_newPlain(_self_);;
	if (((*(_self_))._field_prefix != nullptr)) {
		jule::Ptr<_1a6023763_Prim> _30054_prim = _1a601cd01_Prim((*(_self_))._field_prefix);;
		if (((_30054_prim == nullptr) || (!(_1a6e77078_IsNum(_1a6023ad7_Str(_30054_prim.ptr())))))) {
			jule::Ptr<_1a601a64a_TypeKind> _30079_prefix = (*_self_.alloc)._field_prefix;;
			(*_self_.alloc)._field_prefix=nullptr;
			__JULE_DEFER({
				(*_self_.alloc)._field_prefix=_30079_prefix;
			});;
			return _1aa4762cc_eval(&_30027_bs, &(_300131_op));;
		};
	};
	return _1aa4762cc_eval(&_30027_bs, &(_300131_op));;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa46be4e_evalExprKind(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Any _301633_kind) {
	{
		auto &_match_expr{ _301633_kind };
		
		if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1bcb504aa:;
			{
				jule::Ptr<_1aa2eec7c_RangeExpr> _30198_e = _301633_kind.unsafe_cast_ptr<_1aa2eec7c_RangeExpr>();;
				return _1aa46be4e_evalExprKind(_self_, (*((*(_30198_e))._field_Expr))._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1bcb50b70:;
			{
				return _1aa452583_evalLit(_self_.ptr(), _301633_kind.cast_ptr<_1aa30094d_LitExpr>(&__jule_any_type105));;
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1bcb50bd6:;
			{
				return _1aa4572be_evalIdent(_self_.ptr(), _301633_kind.cast_ptr<_1aa3012cd_IdentExpr>(&__jule_any_type52));;
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1bcb50c4c:;
			{
				return _1aa457610_evalUnary(_self_, _301633_kind.cast_ptr<_1aa301a70_UnaryExpr>(&__jule_any_type91));;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1bcb50cb3:;
			{
				return _1aa457951_evalVariadic(_self_, _301633_kind.cast_ptr<_1aa301e49_VariadicExpr>(&__jule_any_type79));;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1bcb50d29:;
			{
				return _1aa457c92_evalUnsafe(_self_, _301633_kind.cast_ptr<_1aa300d27_UnsafeExpr>(&__jule_any_type106));;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1bcb50d90:;
			{
				return _1aa4588ca_evalSliceExpr(_self_, _301633_kind.cast_ptr<_1aa306019_SliceExpr>(&__jule_any_type97));;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1bcb51247:;
			{
				return _1aa45c071_evalIndexing(_self_, _301633_kind.cast_ptr<_1aa306976_IndexingExpr>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1bcb512ad:;
			{
				return _1aa45d3a2_evalSlicing(_self_, _301633_kind.cast_ptr<_1aa3070d6_SlicingExpr>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1bcb51324:;
			{
				return _1aa462043_evalCast(_self_, _301633_kind.cast_ptr<_1aa302323_CastExpr>(&__jule_any_type109));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1bcb5138a:;
			{
				return _1aa462384_evalNsSelection(_self_.ptr(), _301633_kind.cast_ptr<_1aa3026ec_NsSelectionExpr>(&__jule_any_type93));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1bcb51412:;
			{
				return _1aa462b7b_evalStructLit(_self_, _301633_kind.cast_ptr<_1aa304a0c_StructLit>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1bcb51489:;
			{
				return _1aa463253_evalType(_self_.ptr(), _301633_kind.cast_ptr<_1aa2ea67e_TypeDecl>(&__jule_any_type92));;
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1bcb51511:;
			{
				return _1aa46485e_evalFnCall(_self_, _301633_kind.cast_ptr<_1aa3036dc_FnCallExpr>(&__jule_any_type85));;
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1bcb51588:;
			{
				return _1aa46a8ed_evalSubIdent(_self_, _301633_kind.cast_ptr<_1aa302ac6_SubIdentExpr>(&__jule_any_type89));;
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1bcb51610:;
			{
				return _1aa46ac3e_evalTuple(_self_, _301633_kind.cast_ptr<_1aa3005a7_TupleExpr>(&__jule_any_type83));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1bcb51687:;
			{
				return _1aa46b47b_evalBraceLit(_self_, _301633_kind.cast_ptr<_1aa304eb3_BraceLit>(&__jule_any_type111));;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1bcb5170e:;
			{
				return _1aa46b7bc_evalAnonFunc(_self_, _301633_kind.cast_ptr<_1aa30c33e_FnDecl>(&__jule_any_type14));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1bcb51786:;
			{
				return _1aa46bb0d_evalBinary(_self_, _301633_kind.cast_ptr<_1aa30307c_BinaryExpr>(&__jule_any_type112));;
			}
		}
		else {
			_case_begin_1bcb50b09:;
			{
				return nullptr;;
			}
		}
		_match_end_1bcb50aa4:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa46c290_eval1(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa2ee9b3_Expr> _306426_expr) {
	jule::Ptr<_1aa44cc98_Data> _30657_d = _1aa46be4e_evalExprKind(_self_, (*(_306426_expr))._field_Kind);;
	if (((_30657_d == nullptr) || ((*(_30657_d))._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1a601e0dd_Fn((*(_30657_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcb5d056:;
			{
				jule::Ptr<_1aa334597_FnIns> _30738_f = _1a601e0dd_Fn((*(_30657_d))._field_Kind.ptr());;
				if (_1aa335a60_IsBuiltin(_30738_f.ptr())) {
					_1aa3be434_pushErr((*_self_.alloc)._field_s.ptr(), (*_306426_expr.alloc)._field_Token, jule::Str::lit("built-in functions should be invoked", 36), jule::Slice<jule::Any>());
					goto _match_end_1bcb5c63d;
				};
				jule::I32 _30784_required = (*((*_30738_f.alloc)._field_Decl))._field_Generics.len();;
				jule::I32 _30794_given = (*_30738_f.alloc)._field_Generics.len();;
				if ((!(_1aa3c0963_checkGenericQuantity((*(_self_))._field_s, _30784_required, _30794_given, (*_306426_expr.alloc)._field_Token)))) {
					return nullptr;;
				};
				if (((!((*(*(_30738_f))._field_Decl.alloc)._field_Statically)) && _1aa331d03_IsMethod((*(_30738_f))._field_Decl))) {
					_1aa3be434_pushErr((*(_self_))._field_s, (*_306426_expr.alloc)._field_Token, jule::Str::lit("methods should be invoked", 25), jule::Slice<jule::Any>());
				} else {
					(*_30738_f.alloc)._field_AsAnon=true;
				};
			}
		}
		else if ((*(_30657_d))._field_Decl) {
			_case_begin_1bcb5d0bc:;
			{
				jule::Ptr<_1aa31e373_StructIns> _30908_s = _1a601e374_Struct((*(_30657_d))._field_Kind.ptr());;
				if ((_30908_s == nullptr)) {
					goto _match_end_1bcb5c63d;
				};
				jule::I32 _30944_required = (*((*(_30908_s))._field_Decl))._field_Generics.len();;
				jule::I32 _30954_given = (*(_30908_s))._field_Generics.len();;
				if ((!(_1aa3c0963_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _30944_required, _30954_given, (*_306426_expr.alloc)._field_Token)))) {
					return nullptr;;
				};
			}
		}
		_match_end_1bcb5c63d:;
	};
	return _30657_d;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa46c5d1_eval(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa2ee9b3_Expr> _310725_expr) {
	jule::Ptr<_1aa44cc98_Data> _31087_d = _1aa46c290_eval1(_self_, _310725_expr);;
	if ((_31087_d == nullptr)) {
		return nullptr;;
	};
	if (((((*_self_.alloc)._field_owner == nullptr) || (!((*((*_self_.alloc)._field_owner))._field_Constant))) && _1a601edad_comptime((*(_31087_d))._field_Kind.ptr()))) {
		_1aa3be434_pushErr((*_self_.alloc)._field_s.ptr(), (*(_310725_expr))._field_Token, jule::Str::lit("compile-time evaluations cannot used as expression", 50), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _31087_d;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa46c922_evalExpr1(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa2ee9b3_Expr> _312230_expr) {
	jule::Ptr<_1aa44cc98_Data> _31237_d = _1aa46c290_eval1(_self_, _312230_expr);;
	{
		
		if ((_31237_d == nullptr)) {
			_case_begin_1bcb69260:;
			{
				return nullptr;;
			}
		}
		else if ((*(_31237_d))._field_Decl) {
			_case_begin_1bcb69309:;
			{
				_1aa450053_pushErr(_self_, (*(_312230_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1bcb691d8:;
			{
				return _31237_d;;
			}
		}
		_match_end_1bcb69172:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa46cc63_evalExpr(jule::Ptr<_1aa44e9c0_eval> _self_, jule::Ptr<_1aa2ee9b3_Expr> _313829_expr) {
	jule::Ptr<_1aa44cc98_Data> _31397_d = _1aa46c5d1_eval(_self_, _313829_expr);;
	{
		
		if ((_31397_d == nullptr)) {
			_case_begin_1bcb6b152:;
			{
				return nullptr;;
			}
		}
		else if ((*(_31397_d))._field_Decl) {
			_case_begin_1bcb6b1eb:;
			{
				_1aa450053_pushErr(_self_, (*(_313829_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1bcb6b0ca:;
			{
				return _31397_d;;
			}
		}
		_match_end_1bcb6b064:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1aa44e9c0_eval _Src) {
	_Stream << "eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa46d1e7_unaryEval_eq(_1aa46d1e7_unaryEval *_self_, _1aa46d1e7_unaryEval _other_) {
	return 
		(_self_->_field_e == _other_._field_e) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_u == _self_->_field_u);
}

inline _1aa46d1e7_unaryEval static__1aa46d66a_new(jule::Ptr<_1aa44e9c0_eval> _315920_e) {
	return _1aa46d1e7_unaryEval{._field_e=_315920_e, ._field_d=jule::Ptr<_1aa44cc98_Data>(nullptr), ._field_u=jule::Ptr<_1aa301a70_UnaryExpr>(nullptr)};;
}



inline void _1aa46d868_minus(_1aa46d1e7_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1bcb6cd79:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a601cd01_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcb6d264:;
			{
				if ((!(_1a6e77078_IsNum(_1a601aa46_Str((*((*(_self_))._field_d))._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a601e374_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcb6ca38:;
			{
				if (((*(_1a601e374_Struct((*((*(_self_))._field_d))._field_Kind)))._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1bcb6c9c2:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1bcb6c917:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1aa44d6d3_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1a6e7c0c2_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1bcb725a9:;
				{
					_1a6e7b104_SetF64((*((*(_self_))._field_d))._field_Constant, (-(_1a6e799c6_ReadF64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1a6e7b588_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1bcb72697:;
				{
					_1a6e7a532_SetI64((*((*(_self_))._field_d))._field_Constant, (-(_1a6e78e8c_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1a6e7b81e_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1bcb72268:;
				{
					_1a6e7a532_SetI64((*((*(_self_))._field_d))._field_Constant, (-(_1a6e79c5c_AsI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1bcb721e1:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.minus, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3197:5"));;
				}
			}
			_match_end_1bcb72125:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1aa323b08_UnaryExprModel>(_1aa323b08_UnaryExprModel{._field_Expr=jule::new_ptr<_1aa44cc98_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
}



inline void _1aa46da66_plus(_1aa46d1e7_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1bcb77bdb:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a601cd01_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcb780c6:;
			{
				if ((!(_1a6e77078_IsNum(_1a601aa46_Str((*((*(_self_))._field_d))._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a601e374_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcb7789a:;
			{
				if (((*(_1a601e374_Struct((*((*(_self_))._field_d))._field_Kind)))._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1bcb77834:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1bcb77735:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1aa44d6d3_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1a6e7c0c2_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1bcb7c41b:;
				{
					_1a6e7b104_SetF64((*((*(_self_))._field_d))._field_Constant, (+(_1a6e799c6_ReadF64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1a6e7b588_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1bcb7c509:;
				{
					_1a6e7a532_SetI64((*((*(_self_))._field_d))._field_Constant, (+(_1a6e78e8c_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1a6e7b81e_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1bcb7c0ca:;
				{
					_1a6e7a532_SetI64((*((*(_self_))._field_d))._field_Constant, (+(_1a6e79c5c_AsI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1bcb7c053:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.plus, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3242:5"));;
				}
			}
			_match_end_1bcb7be87:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1aa323b08_UnaryExprModel>(_1aa323b08_UnaryExprModel{._field_Expr=jule::new_ptr<_1aa44cc98_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
}



inline void _1aa46dc64_caret(_1aa46d1e7_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1bcb82a2b:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a601cd01_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcb82e16:;
			{
				if ((!(_1a6e769a1_IsInt(_1a601aa46_Str((*((*(_self_))._field_d))._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a601e374_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcb826da:;
			{
				if (((*(_1a601e374_Struct((*((*(_self_))._field_d))._field_Kind)))._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1bcb82674:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1bcb82575:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1aa44d6d3_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1a6e7b588_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1bcb8724a:;
				{
					_1a6e7a532_SetI64((*((*(_self_))._field_d))._field_Constant, (~(_1a6e78e8c_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1a6e7b81e_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1bcb87338:;
				{
					_1a6e7a7da_SetU64((*((*(_self_))._field_d))._field_Constant, (~(_1a6e79223_ReadU64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1bcb86d93:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.caret, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3285:5"));;
				}
			}
			_match_end_1bcb86cc7:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1aa323b08_UnaryExprModel>(_1aa323b08_UnaryExprModel{._field_Expr=jule::new_ptr<_1aa44cc98_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
}



inline void _1aa46de62_excl(_1aa46d1e7_unaryEval* _self_) {
	jule::Ptr<_1a6023763_Prim> _32993_t = _1a601cd01_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
	if (((_32993_t == nullptr) || (!(_1a6026997_IsBool(_32993_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1aa44d6d3_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1a6e7baa5_IsBool((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1bcb8d4b5:;
				{
					_1a6e7aa93_SetBool((*((*(_self_))._field_d))._field_Constant, (!(_1a6e794a9_ReadBool((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1bcb8d10d:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.excl, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3313:5"));;
				}
			}
			_match_end_1bcb8d042:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1aa323b08_UnaryExprModel>(_1aa323b08_UnaryExprModel{._field_Expr=jule::new_ptr<_1aa44cc98_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
}



inline void _1aa46e160_star(_1aa46d1e7_unaryEval* _self_) {
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1aa323b08_UnaryExprModel>(_1aa323b08_UnaryExprModel{._field_Expr=jule::new_ptr<_1aa44cc98_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
	{
		
		if ((_1a601d31d_Ptr((*(*(_self_))._field_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcb91cd2:;
			{
				if ((!(_1aa450a48_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1aa450053_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1a602aa56_Ptr> _33388_t = _1a601d31d_Ptr((*((*(_self_))._field_d))._field_Kind);;
				if (_1a602b5c3_IsUnsafe(_33388_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*(*(_self_))._field_d.alloc)._field_Kind=(*_33388_t.alloc)._field_Elem;
				(*(*(_self_))._field_d.alloc)._field_Mutable=true;
			}
		}
		else if ((_1a601d087_Sptr((*(*(_self_))._field_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bcb921bc:;
			{
				(*(*(_self_))._field_d.alloc)._field_Kind=(*(_1a601d087_Sptr((*((*(_self_))._field_d))._field_Kind)))._field_Elem;
			}
		}
		else {
			_case_begin_1bcb9192a:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1bcb9094b:;
	};
	(*(*(_self_))._field_d.alloc)._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=true;
}



inline void _1aa46e35d_amper(_1aa46d1e7_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1bcb9a3a1:;
			{
				jule::Ptr<_1aa3244cc_StructLitExprModel> _33608_lit = (*((*(_self_))._field_d))._field_Model.unsafe_cast_ptr<_1aa3244cc_StructLitExprModel>();;
				_1aa477102_makeStructLitAlloc(&((*(_self_))._field_d), &(_33608_lit));
			}
		}
		else {
			_case_begin_1bcb97832:;
			{
				{
					
					if (_1a6036a73_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1bcb981e5:;
						{
							(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a602aa56_Ptr>(_1a602aa56_Ptr{._field_Elem=(*(*(_self_))._field_d.alloc)._field_Kind}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data28)});
							(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1aa323b08_UnaryExprModel>(_1aa323b08_UnaryExprModel{._field_Expr=jule::new_ptr<_1aa44cc98_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
						}
					}
					else {
						_case_begin_1bcb97436:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_1bcb97cb6:;
				};
			}
		}
		_match_end_1bcb977cc:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
}



inline void _1aa46e55b_typeDecl(_1aa46d1e7_unaryEval* _self_) {
	_1a602ca47_typeChecker _33857_tc = _1a602ca47_typeChecker{._field_s=(*((*(_self_))._field_e))._field_s, ._field_rootLookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_lookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_referencer=jule::Ptr<_1a602ba57_referencer>(nullptr), ._field_refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_errorToken=(*((*(_self_))._field_u))._field_Op, ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1aa307889_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1a6019858_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>(nullptr), ._field_inscatch=false};;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1bcb9ddaa:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a6032e6a_buildPtrFromType(&_33857_tc, &((*(*(_self_))._field_d.alloc)._field_Kind)), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data28)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Kind, &__jule_any_type87);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1bcba08c3:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a60327d8_buildSptrFromType(&_33857_tc, &((*(*(_self_))._field_d.alloc)._field_Kind)), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data23)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Kind, &__jule_any_type87);
			}
		}
		else {
			_case_begin_1bcb9d4c5:;
			{
				_1aa450053_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str((*((*(_self_))._field_d))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1bcb9da14:;
	};
	(*((*(_self_))._field_d))._field_Decl=true;
}



inline void _1aa46e759_evalData(_1aa46d1e7_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1bcba4542:;
			{
				jule::Ptr<_1a601a64a_TypeKind> _34108_prefix = (*((*(_self_))._field_e))._field_prefix;;
				(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
				(*(_self_))._field_d=_1aa46c5d1_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
				(*(*(_self_))._field_e.alloc)._field_prefix=_34108_prefix;
			}
		}
		else {
			_case_begin_1bcb9da7a:;
			{
				(*(_self_))._field_d=_1aa46c5d1_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
			}
		}
		_match_end_1bcba4146:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa46ea9a_eval(_1aa46d1e7_unaryEval* _self_, jule::Ptr<_1aa301a70_UnaryExpr> _341924_u) {
	(*(_self_))._field_u=_341924_u;
	_1aa46e759_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*((*(_self_))._field_d))._field_Decl) {
		_1aa46e55b_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1a601a64a_TypeKind> _34303_kind = (*((*(_self_))._field_d))._field_Kind;;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1bcba8bb7:;
			{
				_1aa46d868_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1bcba8c2d:;
			{
				_1aa46da66_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1bcba8c94:;
			{
				_1aa46dc64_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(68LLU)) {
			_case_begin_1bcba8d0a:;
			{
				_1aa46de62_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1bcba8d71:;
			{
				_1aa46e160_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1bcba8dd7:;
			{
				_1aa46e35d_amper(_self_);
			}
		}
		else {
			_case_begin_1bcba8678:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1bcba8b51:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1bcba93d2:;
			{
				_1aa450053_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str(_34303_kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_1aa44d6d3_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1bcba737a:;
			{
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Constant, &__jule_any_type20);
			}
		}
		_match_end_1bcbaadea:;
	};
	return (*(_self_))._field_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa46d1e7_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa470183_binaryEval_eq(_1aa470183_binaryEval *_self_, _1aa470183_binaryEval _other_) {
	return 
		(_self_->_field_e == _other_._field_e) &&
		(_self_->_field_l == _self_->_field_l) &&
		(_self_->_field_r == _self_->_field_r) &&
		(_self_->_field_op == _self_->_field_op);
}

inline _1aa470183_binaryEval static__1aa47076b_newPlain(jule::Ptr<_1aa44e9c0_eval> _346725_e) {
	return _1aa470183_binaryEval{._field_e=_346725_e, ._field_l=jule::Ptr<_1aa44cc98_Data>(nullptr), ._field_r=jule::Ptr<_1aa44cc98_Data>(nullptr), ._field_op=jule::Ptr<_1aa2d51c4_Token>(nullptr)};;
}



inline _1aa470183_binaryEval static__1aa470ae0_new(jule::Ptr<_1aa44e9c0_eval> _347320_e, jule::Ptr<_1aa2d51c4_Token> _347334_op) {
	return _1aa470183_binaryEval{._field_e=_347320_e, ._field_l=jule::Ptr<_1aa44cc98_Data>(nullptr), ._field_r=jule::Ptr<_1aa44cc98_Data>(nullptr), ._field_op=_347334_op};;
}



inline jule::Bool _1aa470d76_checkTypeCompatibility(_1aa470183_binaryEval* _self_) {
	return _1aa3cd0d0_checkTypeCompatibility1((*((*(_self_))._field_e))._field_s, &((*((*(_self_))._field_l))._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));;
}



inline jule::Bool _1aa47110c_checkStructCommonOperatorCompatibility(_1aa470183_binaryEval* _self_) {
	jule::Ptr<_1aa334597_FnIns> _348711_overload = nullptr;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1bcbb163c:;
			{
				_348711_overload=(*(_1a601e374_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1bcbb12eb:;
			{
				_348711_overload=(*(_1a601e374_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1bcbb1362:;
			{
				_348711_overload=(*(_1a601e374_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Add;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1bcbb13c8:;
			{
				_348711_overload=(*(_1a601e374_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1bcbb143e:;
			{
				_348711_overload=(*(_1a601e374_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Div;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1bcbb14a5:;
			{
				_348711_overload=(*(_1a601e374_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1bcbb151b:;
			{
				_348711_overload=(*(_1a601e374_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1bcbb2b27:;
			{
				_348711_overload=(*(_1a601e374_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU)) {
			_case_begin_1bcbb2b8d:;
			{
				_348711_overload=(*(_1a601e374_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1bcbb2c04:;
			{
				_348711_overload=(*(_1a601e374_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1bcbb0c79:;
			{
				_1aa450053_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return false;;
			}
		}
		_match_end_1bcbb1285:;
	};
	if ((_348711_overload == nullptr)) {
		_1aa450053_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	jule::Ptr<_1aa33351e_ParamIns> _35197_p = (*(_348711_overload))._field_Params[1LL];;
	return _1aa3cbc9e_checkAssignType((*(*(_self_))._field_e.alloc)._field_s, (*((*(_35197_p))._field_Decl))._field_Reference, &((*_35197_p.alloc)._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op);;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa471393_evalComptimeTypeInfo(_1aa470183_binaryEval* _self_) {
	jule::Ptr<_1aa35ac50_comptimeTypeInfo> _35247_r = _1a60216b7_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((_35247_r == nullptr)) {
		_1aa450053_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("comptimeTypeInfo", 16), &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa35ac50_comptimeTypeInfo> _35297_l = _1a60216b7_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind);;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1bcbc17b2:;
			{
				jule::Ptr<_1a6e77584_Const> _35328_constant = static__1a6e7808a_NewBool(_1a601ad87_Equal((*(_35297_l))._field_base, (*(_35247_r))._field_base));;
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc333_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_35328_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_35328_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1bcbc2b48:;
			{
				jule::Ptr<_1a6e77584_Const> _35398_constant = static__1a6e7808a_NewBool((!(_1a601ad87_Equal((*(_35297_l))._field_base, (*(_35247_r))._field_base))));;
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc333_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_35398_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_35398_constant});;
			}
		}
		else {
			_case_begin_1bcbc111e:;
			{
				_1aa450053_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bcbc141b:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa471629_evalNil(_1aa470183_binaryEval* _self_) {
	if ((!(_1a601c54d_NilCompatible((*((*(_self_))._field_r))._field_Kind.ptr())))) {
		_1aa450053_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1bcbc7400:;
			{
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc333_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1bcbc5266:;
			{
				_1aa450053_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bcbc7048:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa4718b0_evalEnum(_1aa470183_binaryEval* _self_) {
	jule::Ptr<_1aa347753_Enum> _35707_enm = _1a601d5a4_Enum((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1bcbc96cc:;
			{
				jule::Ptr<_1a601a64a_TypeKind> _35748_rkind = (*((*(_self_))._field_r))._field_Kind;;
				if ((_1a601d5a4_Enum((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
					_35748_rkind=(*((*(_1a601d5a4_Enum((*((*(_self_))._field_r))._field_Kind)))._field_Kind))._field_Kind;
				};
				if ((!(_1aa3cc70b_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*(*(_35707_enm))._field_Kind.alloc)._field_Kind), &(_35748_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc333_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
			}
		}
		_match_end_1bcbc9666:;
	};
	if (((_1a601d5a4_Enum((*((*(_self_))._field_r))._field_Kind) == nullptr) || (_35707_enm != _1a601d5a4_Enum((*((*(_self_))._field_r))._field_Kind)))) {
		_1aa450053_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_35707_enm))._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1bcbd0183:;
			{
				if ((!(_1a6e77078_IsNum(_1a601aa46_Str((*(*(_35707_enm))._field_Kind.alloc)._field_Kind.ptr()))))) {
					_1aa450053_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any((*_35707_enm.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc333_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1bcbd11b7:;
			{
				jule::Ptr<_1aa346bd6_EnumItem> _36044_first = (*_35707_enm.alloc)._field_Items[0LL];;
				{
					
					if (_1a6e7b588_IsI64((*((*((*(_36044_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1bcbd47a3:;
						{
							if ((_1a6e78e8c_ReadI64((*((*((*(_36044_first))._field_Value))._field_Data))._field_Constant) == 0LL)) {
								goto _julec_label_1bc4ac389;
							};
							goto _julec_label_1bcbd7520;
						}
					}
					else if (_1a6e7b81e_IsU64((*((*((*(_36044_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1bcbd4891:;
						{
							if ((_1a6e79223_ReadU64((*((*((*(_36044_first))._field_Value))._field_Data))._field_Constant) == 0LLU)) {
								goto _julec_label_1bc4ac389;
							};
							goto _julec_label_1bcbd7520;
						}
					}
					else {
						_case_begin_1bcbd43eb:;
						{
							jule::panic(jule::Str::lit("unimplemented enum type, this panic call should be unreachable", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:3617:5"));;
						}
					}
					_match_end_1bcbd4385:;
				};
				_julec_label_1bcbd7520:;
				_1aa450053_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("the @ enum type is not supports @ operator", 42), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_35707_enm.alloc)._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); __jule_collection; }));
				_1aa4503b6_pushSuggestion((*(_self_))._field_e, jule::Str::lit("define default enum field (the first one is default) with zero value to use & operator", 86), jule::Slice<jule::Any>());
				_julec_label_1bc4ac389:;
				goto _case_begin_1bcbd122d;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU) || _match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1bcbd122d:;
			{
				if (((_1a601cd01_Prim((*(*(_35707_enm))._field_Kind.alloc)._field_Kind.ptr()) == nullptr) || (!(_1a6e769a1_IsInt(_1a6023ad7_Str(_1a601cd01_Prim((*((*(_35707_enm))._field_Kind))._field_Kind).ptr())))))) {
					_1aa450053_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any((*_35707_enm.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1bcbcbc40:;
			{
				_1aa450053_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any((*_35707_enm.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bcbceced:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa471b46_evalTypeEnum(_1aa470183_binaryEval* _self_) {
	jule::Ptr<_1aa348e5d_TypeEnum> _36377_enm = _1a601d83a_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr());;
	if ((!(_1aa470d76_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1bc4d7c88:;
			{
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc333_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1bc4d713e:;
			{
				_1aa450053_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1aa3492d2_Str(_36377_enm.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bc4d788c:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa471dcc_evalSptr(_1aa470183_binaryEval* _self_) {
	if ((!(_1aa470d76_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1bc4da197:;
			{
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc333_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1bc4d90db:;
			{
				_1aa450053_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bc4d9ce0:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa472163_evalPtr(_1aa470183_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(53LLU) || _match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1bc4dc3ca:;
			{
				if ((!(_1aa470d76_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc333_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1bc4dd761:;
			{
				if ((_1a601d31d_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) == nullptr)) {
					std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				};
				if (_1a602b5c3_IsUnsafe(_1a601d31d_Ptr((*((*(_self_))._field_l))._field_Kind).ptr())) {
					_1aa450053_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
				};
				if ((!(_1a6014611_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1aa450053_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("type @ is incompatible to use for pointer arithmetic", 52), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1bc4dbae4:;
			{
				_1aa450053_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bc4db94b:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa4723e9_evalArr(_1aa470183_binaryEval* _self_) {
	if ((!(_1aa470d76_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1bc4e4e71:;
			{
				if (((*((*((*((*(_self_))._field_e))._field_s))._field_meta))._field_runtime != nullptr)) {
					jule::Ptr<_1aa334597_FnIns> _37149_f = _1aa332ac3_instanceForce(_1a9e88a8c_runtimeFindFn(&((*(*((*((*(_self_))._field_e))._field_s))._field_meta.alloc)._field_runtime), jule::Str::lit("arrayCmp", 8)));;
					(*(_37149_f))._field_Generics=jule::append((*_37149_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a6018c64_InsGeneric>(_1a6018c64_InsGeneric{._field_Kind=(*(_1a601dac1_Arr((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Elem, ._field_Constraint=jule::Slice<jule::Ptr<_1a601a64a_TypeKind>>(nullptr)}); __jule_collection; }));
					jule::Bool _37165_ok;
					({
						__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aa3dc30e_checkGenericFn((*((*(_self_))._field_e))._field_s, &(_37149_f), &((*(_self_))._field_op));
						_37165_ok = __jule_assign_result.__jule_result_arg0;
					});
					if ((!(_37165_ok))) {
						jule::panic(jule::Str::lit("arrayCmp evaluation failed, this is an implementation mistake", 61) + jule::Str("\nlocation: std/jule/sema/eval.jule:3718:6"));;
					};
				};
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc333_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1bc4e0169:;
			{
				_1aa450053_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bc4e4ab9:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa472680_evalStruct(_1aa470183_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(70LLU)) {
			_case_begin_1bc4e67ad:;
			{
				if (((*(_1a601e374_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Gt == nullptr)) {
					_1aa450053_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc333_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1bc4ea5a3:;
			{
				if (((*(_1a601e374_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_GtEq == nullptr)) {
					_1aa450053_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc333_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(69LLU)) {
			_case_begin_1bc4ea619:;
			{
				if (((*(_1a601e374_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Lt == nullptr)) {
					_1aa450053_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc333_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1bc4ea680:;
			{
				if (((*(_1a601e374_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_LtEq == nullptr)) {
					_1aa450053_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc333_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1bc4ea6e6:;
			{
				if ((!(_1aa470d76_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc333_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
			}
		}
		_match_end_1bc4e66e2:;
	};
	if ((!(_1aa47110c_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa472916_evalTrait(_1aa470183_binaryEval* _self_) {
	if ((!(_1aa470d76_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1bc506548:;
			{
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc333_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1bc505a42:;
			{
				_1aa450053_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bc506191:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa472b9c_evalAny(_1aa470183_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1bc50877b:;
			{
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc333_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1bc507e95:;
			{
				_1aa450053_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("any", 3), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bc507cec:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa472e33_evalBool(_1aa470183_binaryEval* _self_) {
	if ((!(_1aa470d76_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(54LLU) || _match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1bc50a97b:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1bc5098e2:;
			{
				_1aa450053_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bc50a5c4:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa4731b9_evalStr(_1aa470183_binaryEval* _self_) {
	jule::Str _38287_rk = _1a601aa46_Str((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((!_38287_rk.equal("str", 3))) {
		_1aa450053_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("str", 3), &__jule_any_type4); (*it++) = jule::Any(_38287_rk, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1bc50e760:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1bc5105da:;
			{
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc333_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1bc50d583:;
			{
				_1aa450053_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("str", 3), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bc50e386:;
	};
}



inline void _1aa4733b7_setTypeToGreater(_1aa470183_binaryEval* _self_) {
	jule::Ptr<_1a6023763_Prim> _38533_lp = _1a601cd01_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	jule::Ptr<_1a6023763_Prim> _38543_rp = _1a601cd01_Prim((*((*(_self_))._field_r))._field_Kind);;
	if (_1aa44d6d3_IsConst((*(_self_))._field_l)) {
		if ((!(_1aa44d6d3_IsConst((*(_self_))._field_r.ptr())))) {
			(*(*(_self_))._field_l.alloc)._field_Kind=(*(*(_self_))._field_r.alloc)._field_Kind;
			(*((*(*(_self_))._field_l.alloc)._field_Constant))._field_Kind=(*(_38543_rp))._field_Kind;
			return;;
		};
		goto _julec_label_1bc514d2b;
	};
	if (_1aa44d6d3_IsConst((*(_self_))._field_r)) {
		(*(*((*(_self_))._field_r))._field_Constant.alloc)._field_Kind=(*(_38533_lp))._field_Kind;
		return;;
	};
	_julec_label_1bc514d2b:;
	if (((*(*(_self_))._field_l.alloc)._field_untyped && (!((*(*(_self_))._field_r.alloc)._field_untyped)))) {
		(*(*(_self_))._field_l.alloc)._field_Kind=(*(*(_self_))._field_r.alloc)._field_Kind;
		if (_1aa44d6d3_IsConst((*(_self_))._field_l)) {
			(*(*((*(_self_))._field_l))._field_Constant.alloc)._field_Kind=(*_38543_rp.alloc)._field_Kind;
		};
		(*(*(_self_))._field_l.alloc)._field_untyped=false;
		return;;
	} else if (((!((*(*(_self_))._field_l.alloc)._field_untyped)) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		return;;
	};
	if (_1a6e75263_IsGreater((*_38543_rp.alloc)._field_Kind, (*_38533_lp.alloc)._field_Kind)) {
		(*(*(_self_))._field_l.alloc)._field_Kind=(*(*(_self_))._field_r.alloc)._field_Kind;
		if (_1aa44d6d3_IsConst((*(_self_))._field_l)) {
			(*(*((*(_self_))._field_l))._field_Constant.alloc)._field_Kind=(*_38543_rp.alloc)._field_Kind;
		};
	};
}



inline void _1aa473670_checkModData(_1aa470183_binaryEval* _self_, jule::Ptr<_1aa44cc98_Data>* _388633_d) {
	if ((!(_1aa44d6d3_IsConst((*(_388633_d)).ptr())))) {
		if (((_1a601cd01_Prim((*((*(_388633_d))))._field_Kind.ptr()) == nullptr) || (!(_1a6e769a1_IsInt((*(_1a601cd01_Prim((*((*(_388633_d))))._field_Kind)))._field_Kind))))) {
			_1aa450053_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1aa4338d8_sigAssignable(jule::Str::lit("i64", 3), _388633_d)) {
			_case_begin_1bc51cdab:;
			{
				_1a6e7a532_SetI64((*((*(_388633_d))))._field_Constant.ptr(), _1a6e79c5c_AsI64((*((*(_388633_d))))._field_Constant));
			}
		}
		else if (_1aa433ca1_unsigAssignable(jule::Str::lit("u64", 3), _388633_d)) {
			_case_begin_1bc51ca9d:;
			{
				_1a6e7a7da_SetU64((*((*(_388633_d))))._field_Constant.ptr(), _1a6e79ee3_AsU64((*((*(_388633_d))))._field_Constant));
			}
		}
		else {
			_case_begin_1bc51ca37:;
			{
				_1aa450053_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bc51c99e:;
	};
}



inline void _1aa47386d_mod(_1aa470183_binaryEval* _self_) {
	_1aa473670_checkModData(_self_, &((*(_self_))._field_l));
	_1aa473670_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1aa473c69_numbersAreCompatibile(_1aa470183_binaryEval* _self_, jule::Str* _390834_lk, jule::Str* _390844_rk) {
	if ((!(_1a6e77078_IsNum((*(_390844_rk)))))) {
		return false;;
	};
	if ((_1aa44d6d3_IsConst((*(_self_))._field_l.ptr()) && (*(*(_self_))._field_l.alloc)._field_untyped)) {
		return true;;
	};
	if ((*(_390834_lk)).equal("f32", 3)) {
		if ((_1aa44d6d3_IsConst((*(_self_))._field_r.ptr()) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1aa433564_floatAssignable(_390834_lk, &((*(_self_))._field_r));;
		};
		return (*(_390844_rk)).equal("f32", 3);;
	};
	if ((*(_390834_lk)).equal("f64", 3)) {
		if ((_1aa44d6d3_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1aa433564_floatAssignable(_390834_lk, &((*(_self_))._field_r));;
		};
		return (*(_390844_rk)).equal("f64", 3);;
	};
	if ((_1aa44d6d3_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		return _1aa434125_intAssignable((*(_390834_lk)), &((*(_self_))._field_r));;
	};
	return ((*(_390834_lk)) == (*(_390844_rk)));;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa474000_shift(_1aa470183_binaryEval* _self_) {
	jule::Ptr<_1a6023763_Prim> _39363_lk = _1a601cd01_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	if ((_39363_lk == nullptr)) {
		_1aa450053_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1a6023763_Prim> _39413_rk = _1a601cd01_Prim((*((*(_self_))._field_r))._field_Kind);;
	if ((_39413_rk == nullptr)) {
		_1aa450053_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_op.alloc)._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((!(_1a6e77078_IsNum((*(_39363_lk))._field_Kind))) || (!(_1a6e77078_IsNum((*(_39413_rk))._field_Kind))))) {
		_1aa3ccb29_pushCompatiblityError((*(*(_self_))._field_e.alloc)._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	if ((!(_1a6e769a1_IsInt((*(_39363_lk))._field_Kind)))) {
		if (((!(_1aa44d6d3_IsConst((*(_self_))._field_l))) || (!((*(*(_self_))._field_l.alloc)._field_untyped)))) {
			_1aa450053_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_39363_lk))._field_Kind, &__jule_any_type4); (*it++) = jule::Any((*(_39413_rk))._field_Kind, &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		} else if (_1aa434125_intAssignable(jule::Str::lit("i64", 3), &((*(_self_))._field_l))) {
			_1a6e7a532_SetI64((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), _1a6e79c5c_AsI64((*((*(_self_))._field_l))._field_Constant));
			(*(*(_self_))._field_l.alloc)._field_Kind=_1aa5dd7a7_primI64;
		} else if (_1aa434125_intAssignable(jule::Str::lit("u64", 3), &((*(_self_))._field_l))) {
			_1a6e7a7da_SetU64((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), _1a6e79ee3_AsU64((*((*(_self_))._field_l))._field_Constant));
			(*(*(_self_))._field_l.alloc)._field_Kind=_1aa5de5aa_primU64;
		};
	};
	if ((!(_1a6e769a1_IsInt((*(_39413_rk))._field_Kind)))) {
		if (((!(_1aa44d6d3_IsConst((*(_self_))._field_r.ptr()))) || (!((*(*(_self_))._field_l.alloc)._field_untyped)))) {
			_1aa450053_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_39363_lk))._field_Kind, &__jule_any_type4); (*it++) = jule::Any((*(_39413_rk))._field_Kind, &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		} else if (_1aa434125_intAssignable(jule::Str::lit("i64", 3), &((*(_self_))._field_r))) {
			_1a6e7a532_SetI64((*((*(_self_))._field_r))._field_Constant.ptr(), _1a6e79c5c_AsI64((*((*(_self_))._field_r))._field_Constant));
			(*(*(_self_))._field_r.alloc)._field_Kind=_1aa5dd7a7_primI64;
		} else if (_1aa434125_intAssignable(jule::Str::lit("u64", 3), &((*(_self_))._field_r))) {
			_1a6e7a7da_SetU64((*((*(_self_))._field_r))._field_Constant.ptr(), _1a6e79ee3_AsU64((*((*(_self_))._field_r))._field_Constant));
			(*(*(_self_))._field_r.alloc)._field_Kind=_1aa5de5aa_primU64;
		};
	};
	if ((!(_1a6013da2_isOkForShifting(&((*(_self_))._field_r))))) {
		_1aa450053_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*((*(*((*(_self_))._field_e))._field_s.alloc)._field_meta))._field_runtime != nullptr)) {
		jule::Str _39908_func = jule::Str::lit("shiftLeft", 9);;
		if (((*(*(_self_))._field_op.alloc)._field_Id == static_cast<jule::U32>(57LLU))) {
			_39908_func=jule::Str::lit("shiftRight", 10);
		};
		jule::Ptr<_1aa334597_FnIns> _39948_f = _1aa332ac3_instanceForce(_1a9e88a8c_runtimeFindFn(&((*(*((*((*(_self_))._field_e))._field_s))._field_meta.alloc)._field_runtime), _39908_func));;
		(*(_39948_f))._field_Generics=jule::append((*_39948_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a6018c64_InsGeneric>(_1a6018c64_InsGeneric{._field_Kind=(*(*(_self_))._field_l.alloc)._field_Kind, ._field_Constraint=jule::Slice<jule::Ptr<_1a601a64a_TypeKind>>(nullptr)}); (*it++) = jule::new_ptr<_1a6018c64_InsGeneric>(_1a6018c64_InsGeneric{._field_Kind=(*((*(_self_))._field_r))._field_Kind, ._field_Constraint=jule::Slice<jule::Ptr<_1a601a64a_TypeKind>>(nullptr)}); __jule_collection; }));
		jule::Bool _39964_ok;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aa3dc30e_checkGenericFn((*((*(_self_))._field_e))._field_s, &(_39948_f), &((*(_self_))._field_op));
			_39964_ok = __jule_assign_result.__jule_result_arg0;
		});
		if ((!(_39964_ok))) {
			jule::panic(jule::Str::lit("sema: shift evaluation failed, this is an implementation mistake", 64) + jule::Str("\nlocation: std/jule/sema/eval.jule:3998:5"));;
		};
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa474286_evalFloat(_1aa470183_binaryEval* _self_) {
	jule::Str _40063_lk = (*(_1a601cd01_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _40073_rk = (*(_1a601cd01_Prim((*((*(_self_))._field_r))._field_Kind)))._field_Kind;;
	if ((!(_1aa473c69_numbersAreCompatibile(_self_, &(_40063_lk), &(_40073_rk))))) {
		_1aa3ccb29_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1bc53c293:;
			{
				_1aa4733b7_setTypeToGreater(_self_);
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc333_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
			}
		}
		_match_end_1bc53c22c:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1bc53dc45:;
			{
				jule::panic(jule::Str::lit("sema: binary shifting operator handling failed", 46) + jule::Str("\nlocation: std/jule/sema/eval.jule:4031:4"));;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1bc53e949:;
			{
				_1aa4733b7_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1bc53e9b0:;
			{
				if ((!(_1a6e769a1_IsInt(_40073_rk)))) {
					_1aa450053_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_40063_lk, &__jule_any_type4); (*it++) = jule::Any(_40073_rk, &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				_1aa47386d_mod(_self_);
				_1aa4733b7_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1bc53c381:;
			{
				_1aa450053_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for floating-point type(s)", 52), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bc53d195:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa47451c_evalInt(_1aa470183_binaryEval* _self_) {
	jule::Str _40533_lk = (*(_1a601cd01_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _40543_rk = (*(_1a601cd01_Prim((*((*(_self_))._field_r))._field_Kind)))._field_Kind;;
	if ((!(_1aa473c69_numbersAreCompatibile(_self_, &(_40533_lk), &(_40543_rk))))) {
		_1aa3ccb29_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1bc5450c0:;
			{
				return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc333_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
			}
		}
		_match_end_1bc545059:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1bc546885:;
			{
				jule::panic(jule::Str::lit("sema: binary shifting operator handling failed", 46) + jule::Str("\nlocation: std/jule/sema/eval.jule:4078:4"));;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(65LLU) || _match_expr == static_cast<jule::U32>(66LLU) || _match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1bc547589:;
			{
				_1aa4733b7_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1bc547600:;
			{
				_1aa47386d_mod(_self_);
				_1aa4733b7_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1bc5451ad:;
			{
				_1aa450053_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for integer type(s)", 45), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bc546489:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa4747a3_evalPrim(_1aa470183_binaryEval* _self_) {
	jule::Ptr<_1a6023763_Prim> _40993_prim = _1a601cd01_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		
		if (_1a6026997_IsBool(_40993_prim.ptr())) {
			_case_begin_1bc54a438:;
			{
				return _1aa472e33_evalBool(_self_);;
			}
		}
		else if (_1a6026c2d_IsStr(_40993_prim.ptr())) {
			_case_begin_1bc54a4d2:;
			{
				return _1aa4731b9_evalStr(_self_);;
			}
		}
		_match_end_1bc54a3b1:;
	};
	if ((_1a601cd01_Prim((*((*(_self_))._field_r))._field_Kind) == nullptr)) {
		_1aa450053_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a6023ad7_Str(_40993_prim.ptr()), &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		
		if (_1a6e76ce2_IsFloat((*_40993_prim.alloc)._field_Kind)) {
			_case_begin_1bc54ce85:;
			{
				return _1aa474286_evalFloat(_self_);;
			}
		}
		else if (_1a6e769a1_IsInt((*_40993_prim.alloc)._field_Kind)) {
			_case_begin_1bc54d01d:;
			{
				return _1aa47451c_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1bc54ce1e:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc54b604:;
	};
}



inline jule::Bool _1aa474a39_checkSpecialCases(_1aa470183_binaryEval* _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _41243_comparing = (((*((*(_self_))._field_op))._field_Id == static_cast<jule::U32>(50LLU)) || ((*(*(_self_))._field_op.alloc)._field_Id == static_cast<jule::U32>(51LLU)));;
	if ((!(_41243_comparing))) {
		return __jule_func_result;;
	};
	if (((!(_1a601bc9a_Comparable((*((*(_self_))._field_l))._field_Kind.ptr()))) && (!(_1a601b77d_IsNil((*((*(_self_))._field_r))._field_Kind))))) {
		_1aa450053_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
		__jule_func_result=false;
	} else if (((!(_1a601bc9a_Comparable((*((*(_self_))._field_r))._field_Kind.ptr()))) && (!(_1a601b77d_IsNil((*((*(_self_))._field_l))._field_Kind))))) {
		_1aa450053_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
		__jule_func_result=false;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa474cc0_evalOp(_1aa470183_binaryEval* _self_) {
	jule::Bool _41393_ok = _1aa474a39_checkSpecialCases(_self_);;
	if ((!(_41393_ok))) {
		return nullptr;;
	};
	if ((_1a601e374_Struct((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
		return _1aa472680_evalStruct(_self_);;
	};
	if ((((*((*(_self_))._field_op))._field_Id == static_cast<jule::U32>(56LLU)) || ((*(*(_self_))._field_op.alloc)._field_Id == static_cast<jule::U32>(57LLU)))) {
		return _1aa474000_shift(_self_);;
	};
	{
		
		if (_1a601ba14_Void((*((*(_self_))._field_l))._field_Kind)) {
			_case_begin_1bc55707c:;
			{
				_1aa450053_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_op.alloc)._field_Kind, &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("void", 4), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if ((_1a60216b7_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1bc557225:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bc5570e3;
			}
		}
		else if ((_1a60216b7_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1bc5570e3:;
			{
				return _1aa471393_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_1a601cd01_Prim((*((*(_self_))._field_r))._field_Kind) != nullptr) && _1a6026eb4_IsAny(_1a601cd01_Prim((*((*(_self_))._field_r))._field_Kind).ptr()))) {
			_case_begin_1bc557159:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bc55859a;
			}
		}
		else if (_1a601b77d_IsNil((*((*(_self_))._field_r))._field_Kind)) {
			_case_begin_1bc55859a:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bc558611;
			}
		}
		else if (_1a601b77d_IsNil((*((*(_self_))._field_l))._field_Kind)) {
			_case_begin_1bc558611:;
			{
				return _1aa471629_evalNil(_self_);;
			}
		}
		else if (((_1a601cd01_Prim((*((*(_self_))._field_l))._field_Kind) != nullptr) && _1a6026eb4_IsAny(_1a601cd01_Prim((*((*(_self_))._field_l))._field_Kind).ptr()))) {
			_case_begin_1bc5586ee:;
			{
				return _1aa472b9c_evalAny(_self_);;
			}
		}
		else if ((_1a601d83a_TypeEnum((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1bc558765:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bc5587cb;
			}
		}
		else if ((_1a601d83a_TypeEnum((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1bc5587cb:;
			{
				return _1aa471b46_evalTypeEnum(_self_);;
			}
		}
		else if ((_1a601d5a4_Enum((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1bc558842:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bc5588a8;
			}
		}
		else if ((_1a601d5a4_Enum((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1bc5588a8:;
			{
				return _1aa4718b0_evalEnum(_self_);;
			}
		}
		else if ((_1a601d087_Sptr((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1bc55891e:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bc558985;
			}
		}
		else if ((_1a601d087_Sptr((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1bc558985:;
			{
				return _1aa471dcc_evalSptr(_self_);;
			}
		}
		else if ((_1a601d31d_Ptr((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1bc5589eb:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bc558a62;
			}
		}
		else if ((_1a601d31d_Ptr((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1bc558a62:;
			{
				return _1aa472163_evalPtr(_self_);;
			}
		}
		else if ((_1a601dac1_Arr((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1bc558ac8:;
			{
				return _1aa4723e9_evalArr(_self_);;
			}
		}
		else if ((_1a601e60a_Trait((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1bc558b3e:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bc558ba5;
			}
		}
		else if ((_1a601e60a_Trait((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1bc558ba5:;
			{
				return _1aa472916_evalTrait(_self_);;
			}
		}
		else if ((_1a601cd01_Prim((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1bc558c2c:;
			{
				return _1aa4747a3_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1bc556da1:;
			{
				_1aa450053_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_op.alloc)._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bc556444:;
	};
}



inline void _1aa475078_evalConst(_1aa470183_binaryEval* _self_, jule::Ptr<_1aa44cc98_Data>* _420930_d) {
	{
		
		if (((*(_420930_d)) == nullptr) || ((*((*(_self_))._field_l))._field_Model == nullptr) || ((*((*(_self_))._field_r))._field_Model == nullptr)) {
			_case_begin_1bc56a656:;
			{
				return;;
			}
		}
		else if ((!(_1aa44d6d3_IsConst((*(_self_))._field_l.ptr()))) || (!(_1aa44d6d3_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1bc56abea:;
			{
				(*((*(_420930_d))))._field_Constant=nullptr;
				(*((*(_420930_d))))._field_untyped=false;
				return;;
			}
		}
		_match_end_1bc56a557:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1bc56acc7:;
			{
				(*((*(_420930_d))))._field_Constant=static__1a6e7808a_NewBool(_1a6e7d16c_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1bc56d208:;
			{
				(*((*(_420930_d))))._field_Constant=static__1a6e7808a_NewBool((!(_1a6e7d16c_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1bc56d26e:;
			{
				(*((*(_420930_d))))._field_Constant=static__1a6e7808a_NewBool(_1a6e7cd2b_Or((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1bc56d2d5:;
			{
				(*((*(_420930_d))))._field_Constant=static__1a6e7808a_NewBool(_1a6e7c9da_And((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(70LLU)) {
			_case_begin_1bc56d34b:;
			{
				(*((*(_420930_d))))._field_Constant=static__1a6e7808a_NewBool(_1a6e7db40_Gt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(69LLU)) {
			_case_begin_1bc56d3b2:;
			{
				(*((*(_420930_d))))._field_Constant=static__1a6e7808a_NewBool(_1a6e7d4ad_Lt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1bc56d439:;
			{
				(*((*(_420930_d))))._field_Constant=static__1a6e7808a_NewBool(_1a6e7de81_GtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1bc56d4b1:;
			{
				(*((*(_420930_d))))._field_Constant=static__1a6e7808a_NewBool(_1a6e7d7ee_LtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1bc56d538:;
			{
				_1a6e7e2c2_Add((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_420930_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1bc56d5b0:;
			{
				_1a6e7e613_Sub((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_420930_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1bc56d637:;
			{
				_1a6e7e954_Mul((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_420930_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1bc56d6ae:;
			{
				jule::Bool _42494_ok = _1a6e7ec95_Div((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_42494_ok)) && (_1a6e7a279_AsF64((*((*(_self_))._field_r))._field_Constant) == 0LL))) {
					_1aa450053_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_420930_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
				jule::Ptr<_1a6023763_Prim> _42548_prim = _1a601cd01_Prim((*((*(_420930_d))))._field_Kind.ptr());;
				{
					
					if (_1a6e763c9_IsSigInt((*(_42548_prim))._field_Kind)) {
						_case_begin_1bc57e736:;
						{
							_1a6e7a532_SetI64((*((*(_420930_d))))._field_Constant, _1a6e79c5c_AsI64((*((*(_420930_d))))._field_Constant));
						}
					}
					else if (_1a6e766d7_IsUnsigInt((*(_42548_prim))._field_Kind)) {
						_case_begin_1bc57e7d0:;
						{
							_1a6e7a7da_SetU64((*((*(_420930_d))))._field_Constant, _1a6e79ee3_AsU64((*((*(_420930_d))))._field_Constant));
						}
					}
					_match_end_1bc57e6c0:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1bc56d736:;
			{
				jule::Bool _42624_ok = _1a6e800d6_Mod((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_42624_ok)) && (_1a6e7a279_AsF64((*((*(_self_))._field_r))._field_Constant) == 0LL))) {
					_1aa450053_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_420930_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU)) {
			_case_begin_1bc56d7ad:;
			{
				_1a6e80768_BitwiseOr((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_420930_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1bc56d835:;
			{
				_1a6e80427_BitwiseAnd((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_420930_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1bc56d8ac:;
			{
				_1a6e80aa9_Xor((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_420930_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1bc56d934:;
			{
				_1a6e80dea_Lshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_420930_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1bc56d9ab:;
			{
				_1a6e8123b_Rshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_420930_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		_match_end_1bc56c504:;
	};
	(*((*(_420930_d))))._field_Model=jule::Any((*((*(_420930_d))))._field_Constant, &__jule_any_type20);
	_1a6015777_applyCastModelByEnum(_420930_d, _1a601d5a4_Enum((*((*(_420930_d))))._field_Kind.ptr()), &((*(_self_))._field_op));
}



inline void _1aa475331_checkData(_1aa470183_binaryEval* _self_, jule::Ptr<_1aa44cc98_Data>* _428730_d) {
	jule::Ptr<_1aa334597_FnIns> _42883_f = _1a601e0dd_Fn((*((*(_428730_d))))._field_Kind.ptr());;
	if ((((_42883_f != nullptr) && ((*_42883_f.alloc)._field_Decl != nullptr)) && _1aa331d03_IsMethod((*(_42883_f))._field_Decl))) {
		_1aa450053_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("invalid expression used for binary operation", 44), jule::Slice<jule::Any>());
	};
}



inline void _1aa47552e_checkDatas(_1aa470183_binaryEval* _self_) {
	_1aa475331_checkData(_self_, &((*(_self_))._field_l));
	_1aa475331_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1aa4757d7_setModel(_1aa470183_binaryEval* _self_, jule::Ptr<_1aa44cc98_Data>* _429929_d) {
	if (_1aa44d6d3_IsConst((*(_429929_d)).ptr())) {
		if (((_1aa44d6d3_IsConst((*(_self_))._field_l.ptr()) && _1aa44d6d3_IsConst((*(_self_))._field_r.ptr())) || (((*(*(_self_))._field_l.alloc)._field_Model == nullptr) && ((*(*(_self_))._field_r.alloc)._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_1aa44cc98_Data> _43107_l;
	jule::Ptr<_1aa44cc98_Data> _431014_r;
	({
		jule::Ptr<_1aa44cc98_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1aa44cc98_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_43107_l = ___jule_assign_arg;
		_431014_r = _1___jule_assign_arg;
	});
	if ((!(_1aa44da24_GoodOperand(_43107_l, &(_431014_r))))) {
		std::swap(_43107_l, _431014_r);
	};
	(*((*(_429929_d))))._field_Model=jule::Any(jule::new_ptr<_1aa32372e_BinaryExprModel>(_1aa32372e_BinaryExprModel{._field_Left=jule::new_ptr<_1aa323234_OperandExprModel>(_1aa323234_OperandExprModel{._field_Kind=(*_43107_l.alloc)._field_Kind, ._field_Model=(*_43107_l.alloc)._field_Model}), ._field_Right=jule::new_ptr<_1aa323234_OperandExprModel>(_1aa323234_OperandExprModel{._field_Kind=(*_431014_r.alloc)._field_Kind, ._field_Model=(*_431014_r.alloc)._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type114);
}



inline void _1aa475a90_postEval(_1aa470183_binaryEval* _self_, jule::Ptr<_1aa44cc98_Data>* _432829_d) {
	(*((*(_432829_d))))._field_Lvalue=false;
	_1aa4757d7_setModel(_self_, _432829_d);
}



inline jule::Ptr<_1aa44cc98_Data> _1aa475e8b_solveExplicit(_1aa470183_binaryEval* _self_, jule::Ptr<_1aa44cc98_Data>* _433334_l, jule::Ptr<_1aa44cc98_Data>* _433349_r) {
	({
		jule::Ptr<_1aa44cc98_Data> ___jule_assign_arg = (*(_433334_l));
		jule::Ptr<_1aa44cc98_Data> _1___jule_assign_arg = (*(_433349_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1aa47552e_checkDatas(_self_);
	jule::Ptr<_1aa44cc98_Data> _43387_d = _1aa474cc0_evalOp(_self_);;
	({
		jule::Ptr<_1aa44cc98_Data> ___jule_assign_arg = (*(_433334_l));
		jule::Ptr<_1aa44cc98_Data> _1___jule_assign_arg = (*(_433349_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1aa475078_evalConst(_self_, &(_43387_d));
	if ((_43387_d != nullptr)) {
		(*_43387_d.alloc)._field_Mutable=true;
		_1aa475a90_postEval(_self_, &(_43387_d));
	};
	return _43387_d;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa4762cc_eval(_1aa470183_binaryEval* _self_, jule::Ptr<_1aa30307c_BinaryExpr>* _435325_op) {
	if (((*((*((*(_435325_op))))._field_Op))._field_Id == static_cast<jule::U32>(71LLU))) {
		_1aa450053_pushErr((*(_self_))._field_e.ptr(), (*((*(_435325_op))))._field_Op, jule::Str::lit("assignments not available for expressions", 41), jule::Slice<jule::Any>());
		_1aa4503b6_pushSuggestion((*(_self_))._field_e, jule::Str::lit("use clear imperative approach, comes relevant assignment statement before the expression", 88), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa44cc98_Data> _43607_l = _1aa46c922_evalExpr1((*(_self_))._field_e, (*((*(_435325_op))))._field_Left);;
	if (((_43607_l == nullptr) || ((*(_43607_l))._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1a601a64a_TypeKind> _43657_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_43607_l))._field_Kind;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_43657_prefix;
	});;
	jule::Ptr<_1aa44cc98_Data> _43687_r = _1aa46c922_evalExpr1((*(_self_))._field_e, (*((*(_435325_op))))._field_Right);;
	if (((_43687_r == nullptr) || ((*(_43687_r))._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*((*(_435325_op))))._field_Op;
	jule::Ptr<_1aa44cc98_Data> _43757_d = _1aa475e8b_solveExplicit(_self_, &(_43607_l), &(_43687_r));;
	if ((((_43757_d != nullptr) && (*(_43607_l))._field_IsRune) && (*(_43687_r))._field_IsRune)) {
		(*_43757_d.alloc)._field_IsRune=true;
	};
	return _43757_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa470183_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a6018c64_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a6019858_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a601a64a_TypeKind_eq(_1a601a64a_TypeKind *_self_, _1a601a64a_TypeKind _other_) {
	return 
		(_self_->_field_BindIdent == _other_._field_BindIdent) &&
		(_self_->_field_Generic == _self_->_field_Generic) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}

inline jule::Str _1a601aa46_Str(_1a601a64a_TypeKind* _self_) {
	if (_1a601b77d_IsNil(_self_)) {
		return jule::Str::lit("nil", 3);;
	};
	_1ed486d49_StrBuilder _747_kind = static__1ed487146_New(16LL);;
	if ((*(_self_))._field_Variadic) {
		_1ed4909ac_WriteStr(&_747_kind, jule::Str::lit("...", 3));
	};
	if (_1a601b4e7_Binded(_self_)) {
		_1ed4909ac_WriteStr(&_747_kind, jule::Str::lit("cpp.", 4));
		_1ed4909ac_WriteStr(&_747_kind, (*(_self_))._field_BindIdent);
	} else {
		_1ed4909ac_WriteStr(&_747_kind, ((_1a601a194_KindMptrData*)(*(_self_))._field_Kind.safe_type())->_1a6019bee_Str((*(_self_))._field_Kind.data));
	};
	return _1ed4912a4_Str(&_747_kind);;
}



inline jule::Bool _1a601ad87_Equal(jule::Ptr<_1a601a64a_TypeKind> _self_, jule::Ptr<_1a601a64a_TypeKind> _9018_other) {
	if (_1a601b77d_IsNil(_self_.ptr())) {
		return _1a601b77d_IsNil(_9018_other.ptr());;
	};
	if (_1a601b4e7_Binded(_self_)) {
		return (_1a601b4e7_Binded(_9018_other) && ((*_self_.alloc)._field_BindIdent == (*_9018_other.alloc)._field_BindIdent));;
	};
	return ((_1a601a194_KindMptrData*)(*_self_.alloc)._field_Kind.safe_type())->_1a601a040_Equal((*_self_.alloc)._field_Kind.data, _9018_other);;
}



inline jule::Bool _1a601b4e7_Binded(_1a601a64a_TypeKind* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _1a601b77d_IsNil(_1a601a64a_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1a601ba14_Void(_1a601a64a_TypeKind* _self_) {
	jule::Ptr<_1a6023763_Prim> _1103_prim = _1a601cd01_Prim(_self_);;
	return ((_1103_prim != nullptr) && (*(_1103_prim))._field_Kind.equal("void", 4));;
}



inline jule::Bool _1a601bc9a_Comparable(_1a601a64a_TypeKind* _self_) {
	{
		_1a601a64a_TypeKind* _1178__self = _self_;;
		if ((_1a601e374_Struct(_1178__self) != nullptr)) {
			return (*(_1a601e374_Struct(_1178__self)))._field_Comparable;;
		};
		if ((_1a601dac1_Arr(_1178__self) != nullptr)) {
			return _1a601bc9a_Comparable((*(_1a601dac1_Arr(_1178__self)))._field_Elem.ptr());;
		};
		return (((_1a601e891_Map(_1178__self) == nullptr) && (_1a601dd57_Slc(_1178__self) == nullptr)) && (_1a601e0dd_Fn(_1178__self) == nullptr));;
	};
}



inline jule::Bool _1a601c031_Mutable(_1a601a64a_TypeKind* _self_) {
	{
		_1a601a64a_TypeKind* _1318__self = _self_;;
		if ((_1a601e374_Struct(_1318__self) != nullptr)) {
			return (*(_1a601e374_Struct(_1318__self)))._field_Mutable;;
		};
		if ((_1a601e60a_Trait(_1318__self) != nullptr)) {
			return true;;
		};
		if ((_1a601cd01_Prim(_1318__self) != nullptr)) {
			jule::Ptr<_1a6023763_Prim> _1395_p = _1a601cd01_Prim(_1318__self);;
			return _1a6026eb4_IsAny(_1395_p.ptr());;
		};
		if ((_1a601dac1_Arr(_1318__self) != nullptr)) {
			return _1a601c031_Mutable((*(_1a601dac1_Arr(_1318__self)))._field_Elem.ptr());;
		};
		return (((_1a601dd57_Slc(_1318__self) != nullptr) || (_1a601d31d_Ptr(_1318__self) != nullptr)) || (_1a601d087_Sptr(_1318__self) != nullptr));;
	};
}



inline jule::Bool _1a601c2b7_Ordered(_1a601a64a_TypeKind* _self_) {
	{
		_1a601a64a_TypeKind* _1548__self = _self_;;
		jule::Ptr<_1a6023763_Prim> _1554_prim = _1a601cd01_Prim(_1548__self);;
		if ((_1554_prim != nullptr)) {
			return (_1a6e77078_IsNum((*_1554_prim.alloc)._field_Kind) || _1a6026c2d_IsStr(_1554_prim));;
		};
		if ((_1a601d31d_Ptr(_1548__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_1aa31e373_StructIns> _1624_s = _1a601e374_Struct(_1548__self);;
		if ((_1624_s != nullptr)) {
			return (((((*_1624_s.alloc)._field_Operators._field_Gt != nullptr) && ((*_1624_s.alloc)._field_Operators._field_GtEq != nullptr)) && ((*_1624_s.alloc)._field_Operators._field_Lt != nullptr)) && ((*_1624_s.alloc)._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_1aa347753_Enum> _1694_enm = _1a601d5a4_Enum(_1548__self);;
		if ((_1694_enm != nullptr)) {
			return _1a6e77078_IsNum(_1a601aa46_Str((*((*_1694_enm.alloc)._field_Kind))._field_Kind.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _1a601c54d_NilCompatible(_1a601a64a_TypeKind* _self_) {
	{
		_1a601a64a_TypeKind* _1808__self = _self_;;
		jule::Ptr<_1a6023763_Prim> _1824_prim = _1a601cd01_Prim(_1808__self);;
		if (((_1824_prim != nullptr) && _1a6026eb4_IsAny(_1824_prim))) {
			return true;;
		};
		return (((((((_1a601b77d_IsNil(_1808__self) || (_1a601e0dd_Fn(_1808__self) != nullptr)) || (_1a601d087_Sptr(_1808__self) != nullptr)) || (_1a601d31d_Ptr(_1808__self) != nullptr)) || (_1a601e60a_Trait(_1808__self) != nullptr)) || (_1a601dd57_Slc(_1808__self) != nullptr)) || (_1a601e891_Map(_1808__self) != nullptr)) || (_1a601d83a_TypeEnum(_1808__self) != nullptr));;
	};
}



inline jule::Bool _1a601c7d4_GC(_1a601a64a_TypeKind* _self_) {
	{
		_1a601a64a_TypeKind* _2018__self = _self_;;
		jule::Ptr<_1a6023763_Prim> _2024_prim = _1a601cd01_Prim(_2018__self);;
		if ((_2024_prim != nullptr)) {
			return (_1a6026eb4_IsAny(_2024_prim) || _1a6026c2d_IsStr(_2024_prim));;
		};
		return (((_1a601d087_Sptr(_2018__self) != nullptr) || (_1a601dd57_Slc(_2018__self) != nullptr)) || (_1a601e60a_Trait(_2018__self) != nullptr));;
	};
}



inline jule::Bool _1a601ca6a_Variadicable(_1a601a64a_TypeKind* _self_) {
	{
		_1a601a64a_TypeKind* _2138__self = _self_;;
		return (_1a601dd57_Slc(_2138__self) != nullptr);;
	};
}



inline jule::Ptr<_1a6023763_Prim> _1a601cd01_Prim(_1a601a64a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data22)) {
			_case_begin_1bcca71b1:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a6023763_Prim>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data22);;
			}
		}
		else {
			_case_begin_1bccbb0d7:;
			{
				return nullptr;;
			}
		}
		_match_end_1bccbb082:;
	};
}



inline jule::Ptr<_1a602728e_Sptr> _1a601d087_Sptr(_1a601a64a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data23)) {
			_case_begin_1bccbbc20:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a602728e_Sptr>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data23);;
			}
		}
		else {
			_case_begin_1bccbbe51:;
			{
				return nullptr;;
			}
		}
		_match_end_1bccbbdeb:;
	};
}



inline jule::Ptr<_1a602aa56_Ptr> _1a601d31d_Ptr(_1a601a64a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data28)) {
			_case_begin_1bccbc946:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a602aa56_Ptr>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data28);;
			}
		}
		else {
			_case_begin_1bccbcb99:;
			{
				return nullptr;;
			}
		}
		_match_end_1bccbcb44:;
	};
}



inline jule::Ptr<_1aa347753_Enum> _1a601d5a4_Enum(_1a601a64a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data3)) {
			_case_begin_1bccbd68e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aa347753_Enum>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data3);;
			}
		}
		else {
			_case_begin_1bccbd8e2:;
			{
				return nullptr;;
			}
		}
		_match_end_1bccbd88c:;
	};
}



inline jule::Ptr<_1aa348e5d_TypeEnum> _1a601d83a_TypeEnum(_1a601a64a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data4)) {
			_case_begin_1bccbe3d7:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aa348e5d_TypeEnum>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data4);;
			}
		}
		else {
			_case_begin_1bccbe63a:;
			{
				return nullptr;;
			}
		}
		_match_end_1bccbe5d5:;
	};
}



inline jule::Ptr<_1a602a083_Arr> _1a601dac1_Arr(_1a601a64a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data27)) {
			_case_begin_1bccc0130:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a602a083_Arr>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data27);;
			}
		}
		else {
			_case_begin_1bccc0383:;
			{
				return nullptr;;
			}
		}
		_match_end_1bccc032d:;
	};
}



inline jule::Ptr<_1a6027c62_Slc> _1a601dd57_Slc(_1a601a64a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data24)) {
			_case_begin_1bccc0d78:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a6027c62_Slc>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data24);;
			}
		}
		else {
			_case_begin_1bccc10cb:;
			{
				return nullptr;;
			}
		}
		_match_end_1bccc1076:;
	};
}



inline jule::Ptr<_1aa334597_FnIns> _1a601e0dd_Fn(_1a601a64a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data1)) {
			_case_begin_1bccc1ac1:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aa334597_FnIns>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data1);;
			}
		}
		else {
			_case_begin_1bccc1d24:;
			{
				return nullptr;;
			}
		}
		_match_end_1bccc1cbe:;
	};
}



inline jule::Ptr<_1aa31e373_StructIns> _1a601e374_Struct(_1a601a64a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data0)) {
			_case_begin_1bccc2819:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aa31e373_StructIns>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data0);;
			}
		}
		else {
			_case_begin_1bccc2a6c:;
			{
				return nullptr;;
			}
		}
		_match_end_1bccc2a17:;
	};
}



inline jule::Ptr<_1aa345047_Trait> _1a601e60a_Trait(_1a601a64a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data2)) {
			_case_begin_1bccc3562:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aa345047_Trait>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data2);;
			}
		}
		else {
			_case_begin_1bccc37b5:;
			{
				return nullptr;;
			}
		}
		_match_end_1bccc3760:;
	};
}



inline jule::Ptr<_1a6029406_Map> _1a601e891_Map(_1a601a64a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data26)) {
			_case_begin_1bccc42aa:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a6029406_Map>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data26);;
			}
		}
		else {
			_case_begin_1bccc450d:;
			{
				return nullptr;;
			}
		}
		_match_end_1bccc44a8:;
	};
}



inline jule::Ptr<_1a6028856_Tuple> _1a601eb27_Tup(_1a601a64a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data25)) {
			_case_begin_1bccc5003:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a6028856_Tuple>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data25);;
			}
		}
		else {
			_case_begin_1bccc5256:;
			{
				return nullptr;;
			}
		}
		_match_end_1bccc5201:;
	};
}



inline jule::Bool _1a601edad_comptime(_1a601a64a_TypeKind* _self_) {
	return (((((((((((((((_1a6021431_comptimeTypeInfos(_self_) != nullptr) || (_1a60216b7_comptimeTypeInfo(_self_) != nullptr)) || (_1a6020144_comptimeStructFields(_self_) != nullptr)) || (_1a60203ca_comptimeStructField(_self_) != nullptr)) || (_1a6020661_comptimeEnumFields(_self_) != nullptr)) || (_1a60208e7_comptimeEnumField(_self_) != nullptr)) || (_1a602194d_comptimeStatics(_self_) != nullptr)) || (_1a6021bd4_comptimeStatic(_self_) != nullptr)) || (_1a6020b7d_comptimeParams(_self_) != nullptr)) || (_1a6020e14_comptimeParam(_self_) != nullptr)) || (_1a6021e6a_comptimeValue(_self_) != nullptr)) || (_1a60229a4_comptimeFiles(_self_) != nullptr)) || (_1a602271d_comptimeFile(_self_) != nullptr)) || (_1a6022201_comptimeDecl(_self_) != nullptr)) || (_1a6022487_comptimeDecls(_self_) != nullptr));;
}



inline jule::Ptr<_1aa34e3c5_comptimeStructFields> _1a6020144_comptimeStructFields(_1a601a64a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data7)) {
			_case_begin_1bccc5e16:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aa34e3c5_comptimeStructFields>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data7);;
			}
		}
		else {
			_case_begin_1bccca13a:;
			{
				return nullptr;;
			}
		}
		_match_end_1bccca0d5:;
	};
}



inline jule::Ptr<_1aa34cb21_comptimeStructField> _1a60203ca_comptimeStructField(_1a601a64a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data6)) {
			_case_begin_1bccca778:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aa34cb21_comptimeStructField>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data6);;
			}
		}
		else {
			_case_begin_1bccca9cb:;
			{
				return nullptr;;
			}
		}
		_match_end_1bccca976:;
	};
}



inline jule::Ptr<_1aa354c16_comptimeEnumFields> _1a6020661_comptimeEnumFields(_1a601a64a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data11)) {
			_case_begin_1bcccb4c1:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aa354c16_comptimeEnumFields>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data11);;
			}
		}
		else {
			_case_begin_1bcccb724:;
			{
				return nullptr;;
			}
		}
		_match_end_1bcccb6be:;
	};
}



inline jule::Ptr<_1aa35386e_comptimeEnumField> _1a60208e7_comptimeEnumField(_1a601a64a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data10)) {
			_case_begin_1bcccc219:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aa35386e_comptimeEnumField>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data10);;
			}
		}
		else {
			_case_begin_1bcccc46c:;
			{
				return nullptr;;
			}
		}
		_match_end_1bcccc417:;
	};
}



inline jule::Ptr<_1aa35808d_comptimeParams> _1a6020b7d_comptimeParams(_1a601a64a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data13)) {
			_case_begin_1bcccce62:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aa35808d_comptimeParams>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data13);;
			}
		}
		else {
			_case_begin_1bcccd1b5:;
			{
				return nullptr;;
			}
		}
		_match_end_1bcccd160:;
	};
}



inline jule::Ptr<_1aa356311_comptimeParam> _1a6020e14_comptimeParam(_1a601a64a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data12)) {
			_case_begin_1bcccdc10:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aa356311_comptimeParam>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data12);;
			}
		}
		else {
			_case_begin_1bcccde0d:;
			{
				return nullptr;;
			}
		}
		_match_end_1bcccdda8:;
	};
}



inline jule::Ptr<_1aa34c14d_comptimeRange> _1a602119a_comptimeRange(_1a601a64a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data5)) {
			_case_begin_1bccce958:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aa34c14d_comptimeRange>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data5);;
			}
		}
		else {
			_case_begin_1bccceb56:;
			{
				return nullptr;;
			}
		}
		_match_end_1bccceb01:;
	};
}



inline jule::Ptr<_1aa359655_comptimeTypeInfos> _1a6021431_comptimeTypeInfos(_1a601a64a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data14)) {
			_case_begin_1bccd064b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aa359655_comptimeTypeInfos>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data14);;
			}
		}
		else {
			_case_begin_1bccd087c:;
			{
				return nullptr;;
			}
		}
		_match_end_1bccd0827:;
	};
}



inline jule::Ptr<_1aa35ac50_comptimeTypeInfo> _1a60216b7_comptimeTypeInfo(_1a601a64a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data15)) {
			_case_begin_1bccd1372:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aa35ac50_comptimeTypeInfo>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data15);;
			}
		}
		else {
			_case_begin_1bccd15c5:;
			{
				return nullptr;;
			}
		}
		_match_end_1bccd1570:;
	};
}



inline jule::Ptr<_1aa352274_comptimeStatics> _1a602194d_comptimeStatics(_1a601a64a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data9)) {
			_case_begin_1bccd20ba:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aa352274_comptimeStatics>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data9);;
			}
		}
		else {
			_case_begin_1bccd231d:;
			{
				return nullptr;;
			}
		}
		_match_end_1bccd22b8:;
	};
}



inline jule::Ptr<_1aa3509c0_comptimeStatic> _1a6021bd4_comptimeStatic(_1a601a64a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data8)) {
			_case_begin_1bccd2d68:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aa3509c0_comptimeStatic>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data8);;
			}
		}
		else {
			_case_begin_1bccd3066:;
			{
				return nullptr;;
			}
		}
		_match_end_1bccd3011:;
	};
}



inline jule::Ptr<_1aa361d55_comptimeValue> _1a6021e6a_comptimeValue(_1a601a64a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data16)) {
			_case_begin_1bccd3ab1:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aa361d55_comptimeValue>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data16);;
			}
		}
		else {
			_case_begin_1bccd3cae:;
			{
				return nullptr;;
			}
		}
		_match_end_1bccd3c59:;
	};
}



inline jule::Ptr<_1aa369841_comptimeDecl> _1a6022201_comptimeDecl(_1a601a64a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data20)) {
			_case_begin_1bccd4809:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aa369841_comptimeDecl>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data20);;
			}
		}
		else {
			_case_begin_1bccd4a07:;
			{
				return nullptr;;
			}
		}
		_match_end_1bccd49a2:;
	};
}



inline jule::Ptr<_1aa3679e8_comptimeDecls> _1a6022487_comptimeDecls(_1a601a64a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data19)) {
			_case_begin_1bccd54ec:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aa3679e8_comptimeDecls>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data19);;
			}
		}
		else {
			_case_begin_1bccd572d:;
			{
				return nullptr;;
			}
		}
		_match_end_1bccd56c8:;
	};
}



inline jule::Ptr<_1aa365c9e_comptimeFile> _1a602271d_comptimeFile(_1a601a64a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data18)) {
			_case_begin_1bccd6278:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aa365c9e_comptimeFile>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data18);;
			}
		}
		else {
			_case_begin_1bccd6476:;
			{
				return nullptr;;
			}
		}
		_match_end_1bccd6421:;
	};
}



inline jule::Ptr<_1aa3646a4_comptimeFiles> _1a60229a4_comptimeFiles(_1a601a64a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data17)) {
			_case_begin_1bccd6e6b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aa3646a4_comptimeFiles>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data17);;
			}
		}
		else {
			_case_begin_1bccd719c:;
			{
				return nullptr;;
			}
		}
		_match_end_1bccd7147:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a601a64a_TypeKind _Src) {
	_Stream << _1a601aa46_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1a6022d5b_TypeSymbol_eq(_1a6022d5b_TypeSymbol *_self_, _1a6022d5b_TypeSymbol _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}

inline jule::Bool _1a6023213_checked(_1a6022d5b_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a6022d5b_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a6023763_Prim_eq(_1a6023763_Prim *_self_, _1a6023763_Prim _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind);
}

inline jule::Str _1a6023ad7_Str(_1a6023763_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1a6023e28_Equal(jule::Ptr<_1a6023763_Prim> _self_, jule::Ptr<_1a601a64a_TypeKind> _53118_other) {
	jule::Ptr<_1a6023763_Prim> _5323_prim = _1a601cd01_Prim(_53118_other.ptr());;
	if ((_5323_prim == nullptr)) {
		return false;;
	};
	return ((*(_self_))._field_Kind == (*(_5323_prim))._field_Kind);;
}



inline jule::Bool _1a60243bd_IsConstraint(_1a6023763_Prim* _self_) {
	return ((((!(_1a6026c2d_IsStr(_self_))) && (!(_1a6026eb4_IsAny(_self_)))) && (!(_1a6026997_IsBool(_self_)))) && (!(_1a6e77078_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1a6024654_IsI8(_1a6023763_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i8", 2);;
}



inline jule::Bool _1a60248da_IsI16(_1a6023763_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i16", 3);;
}



inline jule::Bool _1a6024b71_IsI32(_1a6023763_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i32", 3);;
}



inline jule::Bool _1a6024e07_IsI64(_1a6023763_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i64", 3);;
}



inline jule::Bool _1a602518d_IsU8(_1a6023763_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u8", 2);;
}



inline jule::Bool _1a6025424_IsU16(_1a6023763_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u16", 3);;
}



inline jule::Bool _1a60256aa_IsU32(_1a6023763_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u32", 3);;
}



inline jule::Bool _1a6025941_IsU64(_1a6023763_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u64", 3);;
}



inline jule::Bool _1a6025bc7_IsF32(_1a6023763_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f32", 3);;
}



inline jule::Bool _1a6025e5d_IsF64(_1a6023763_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f64", 3);;
}



inline jule::Bool _1a60261e4_IsInt(_1a6023763_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("int", 3);;
}



inline jule::Bool _1a602647a_IsUint(_1a6023763_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uint", 4);;
}



inline jule::Bool _1a6026711_IsUintptr(_1a6023763_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uintptr", 7);;
}



inline jule::Bool _1a6026997_IsBool(_1a6023763_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("bool", 4);;
}



inline jule::Bool _1a6026c2d_IsStr(_1a6023763_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("str", 3);;
}



inline jule::Bool _1a6026eb4_IsAny(_1a6023763_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("any", 3);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a6023763_Prim _Src) {
	_Stream << _1a6023ad7_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1a602728e_Sptr_eq(_1a602728e_Sptr *_self_, _1a602728e_Sptr _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1a6027646_Str(_1a602728e_Sptr* _self_) {
	return (jule::Str::lit("&", 1) + _1a601aa46_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1a6027987_Equal(jule::Ptr<_1a602728e_Sptr> _self_, jule::Ptr<_1a601a64a_TypeKind> _60818_other) {
	jule::Ptr<_1a602728e_Sptr> _6093_sptr = _1a601d087_Sptr(_60818_other.ptr());;
	if ((_6093_sptr == nullptr)) {
		return false;;
	};
	return _1a601ad87_Equal((*(_self_))._field_Elem, (*(_6093_sptr))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a602728e_Sptr _Src) {
	_Stream << _1a6027646_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1a6027c62_Slc_eq(_1a6027c62_Slc *_self_, _1a6027c62_Slc _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1a6028229_Str(_1a6027c62_Slc* _self_) {
	return (jule::Str::lit("[]", 2) + _1a601aa46_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1a602856a_Equal(jule::Ptr<_1a6027c62_Slc> _self_, jule::Ptr<_1a601a64a_TypeKind> _62718_other) {
	jule::Ptr<_1a6027c62_Slc> _6283_slc = _1a601dd57_Slc(_62718_other.ptr());;
	if ((_6283_slc == nullptr)) {
		return false;;
	};
	return _1a601ad87_Equal((*(_self_))._field_Elem, (*(_6283_slc))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a6027c62_Slc _Src) {
	_Stream << _1a6028229_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a6028c0d_Str(_1a6028856_Tuple* _self_) {
	_1ed486d49_StrBuilder _6447_s = static__1ed487146_New(16LL);;
	_1ed490c65_WriteByte(&_6447_s, '(');
	_1ed4909ac_WriteStr(&_6447_s, _1a601aa46_Str((*(_self_))._field_Types[0LL].ptr()));
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1bcce76eb:;
		if (it != expr_end) {
			jule::Ptr<_1a601a64a_TypeKind> *_64710_t = it;
			{
				_1ed490c65_WriteByte(&_6447_s, ',');
				_1ed4909ac_WriteStr(&_6447_s, _1a601aa46_Str((*(_64710_t)).ptr()));
			}
			_iter_next_1bcce76eb:;
			++it;
			goto _iter_begin_1bcce76eb;
		}
		_iter_end_1bcce76eb:;
	};
	_1ed490c65_WriteByte(&_6447_s, ')');
	return _1ed4912a4_Str(&_6447_s);;
}



inline jule::Bool _1a602904e_Equal(jule::Ptr<_1a6028856_Tuple> _self_, jule::Ptr<_1a601a64a_TypeKind> _65618_other) {
	jule::Ptr<_1a6028856_Tuple> _6573_tup = _1a601eb27_Tup(_65618_other.ptr());;
	if ((_6573_tup == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Types.len() != (*(_6573_tup))._field_Types.len())) {
		return false;;
	};
	jule::I32 _6647_i = 0LL;;
	for (; (_6647_i < (*_self_.alloc)._field_Types.len()); (_6647_i)++) {
		{
			if ((!(_1a601ad87_Equal((*(_self_))._field_Types[_6647_i], (*(_6573_tup))._field_Types[_6647_i])))) {
				return false;;
			};
		}
	_iter_next_1bcce9c81:;
	}
	_iter_end_1bcce9c81:;;
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a6028856_Tuple _Src) {
	_Stream << _1a6028c0d_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1a6029406_Map_eq(_1a6029406_Map *_self_, _1a6029406_Map _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}

inline jule::Str _1a60297ad_Str(_1a6029406_Map* _self_) {
	_1ed486d49_StrBuilder _6847_s = static__1ed487146_New(16LL);;
	_1ed4909ac_WriteStr(&_6847_s, jule::Str::lit("map[", 4));
	_1ed4909ac_WriteStr(&_6847_s, _1a601aa46_Str((*(_self_))._field_Key.ptr()));
	_1ed490c65_WriteByte(&_6847_s, ']');
	_1ed4909ac_WriteStr(&_6847_s, _1a601aa46_Str((*(_self_))._field_Val.ptr()));
	return _1ed4912a4_Str(&_6847_s);;
}



inline jule::Bool _1a6029aee_Equal(jule::Ptr<_1a6029406_Map> _self_, jule::Ptr<_1a601a64a_TypeKind> _69318_other) {
	jule::Ptr<_1a6029406_Map> _6943_m = _1a601e891_Map(_69318_other.ptr());;
	if ((_6943_m == nullptr)) {
		return false;;
	};
	return (_1a601ad87_Equal((*(_self_))._field_Key, (*(_6943_m))._field_Key) && _1a601ad87_Equal((*_self_.alloc)._field_Val, (*(_6943_m))._field_Val));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a6029406_Map _Src) {
	_Stream << _1a60297ad_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1a602a083_Arr_eq(_1a602a083_Arr *_self_, _1a602a083_Arr _other_) {
	return 
		(_self_->_field_Auto == _other_._field_Auto) &&
		(_self_->_field_N == _self_->_field_N) &&
		(_self_->_field_Elem == _self_->_field_Elem);
}

inline jule::Str _1a602a43a_Str(_1a602a083_Arr* _self_) {
	_1ed486d49_StrBuilder _7127_s = static__1ed487146_New(16LL);;
	_1ed490c65_WriteByte(&_7127_s, '[');
	_1ed4909ac_WriteStr(&_7127_s, _1a6e696ec_Itoa((*(_self_))._field_N));
	_1ed490c65_WriteByte(&_7127_s, ']');
	_1ed4909ac_WriteStr(&_7127_s, _1a601aa46_Str((*(_self_))._field_Elem.ptr()));
	return _1ed4912a4_Str(&_7127_s);;
}



inline jule::Bool _1a602a77b_Equal(jule::Ptr<_1a602a083_Arr> _self_, jule::Ptr<_1a601a64a_TypeKind> _72118_other) {
	jule::Ptr<_1a602a083_Arr> _7223_arr = _1a601dac1_Arr(_72118_other.ptr());;
	if ((_7223_arr == nullptr)) {
		return false;;
	};
	return (((*(_self_))._field_N == (*(_7223_arr))._field_N) && _1a601ad87_Equal((*_self_.alloc)._field_Elem, (*(_7223_arr))._field_Elem));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a602a083_Arr _Src) {
	_Stream << _1a602a43a_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1a602aa56_Ptr_eq(_1a602aa56_Ptr *_self_, _1a602aa56_Ptr _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1a602ae0d_Str(_1a602aa56_Ptr* _self_) {
	if (_1a602b5c3_IsUnsafe(_self_)) {
		return jule::Str::lit("*unsafe", 7);;
	};
	return (jule::Str::lit("*", 1) + _1a601aa46_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1a602b24e_Equal(jule::Ptr<_1a602aa56_Ptr> _self_, jule::Ptr<_1a601a64a_TypeKind> _74518_other) {
	jule::Ptr<_1a602aa56_Ptr> _7463_ptr = _1a601d31d_Ptr(_74518_other.ptr());;
	{
		
		if ((_7463_ptr == nullptr)) {
			_case_begin_1bcd066a5:;
			{
				return false;;
			}
		}
		else if (_1a602b5c3_IsUnsafe(_7463_ptr.ptr())) {
			_case_begin_1bcd06056:;
			{
				return _1a602b5c3_IsUnsafe(_self_.ptr());;
			}
		}
		else {
			_case_begin_1bcd05ae4:;
			{
				return _1a601ad87_Equal((*(_self_))._field_Elem, (*(_7463_ptr))._field_Elem);;
			}
		}
		_match_end_1bcd05a7d:;
	};
}



inline jule::Bool _1a602b5c3_IsUnsafe(_1a602aa56_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a602aa56_Ptr _Src) {
	_Stream << _1a602ae0d_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1a602ba57_referencer_eq(_1a602ba57_referencer *_self_, _1a602ba57_referencer _other_) {
	return 
		(_self_->_field_ident == _other_._field_ident) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_refs == _self_->_field_refs);
}



std::ostream &operator<<(std::ostream &_Stream, _1a602ba57_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1a602d2b7_pushErr(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa2d51c4_Token> _83523_token, jule::Str _83538_fmt, jule::Slice<jule::Any> _83551_args) {
	_1aa3be434_pushErr((*(_self_))._field_s.ptr(), _83523_token, _83538_fmt, _83551_args);
}



inline void _1a602d4b5_allowBuiltin(_1a602ca47_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1a602d6b3_disallowBuiltin(_1a602ca47_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1bcd0a7ec_pushReference(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa31e373_StructIns>* _84737_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1bbaec0e5_Exist((*(_self_))._field_refers.ptr(), (*(_84737_t)))) {
		return;;
	};
	_1aa338546_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_84737_t)), &__jule_any_type9));
}

inline void _1bcd0d1c3_pushReference(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa345047_Trait>* _84737_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1bcd0ee61_Exist((*(_self_))._field_refers.ptr(), (*(_84737_t)))) {
		return;;
	};
	_1aa338546_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_84737_t)), &__jule_any_type10));
}



inline void _1a602dc24_pushReferenceByKind(_1a602ca47_typeChecker* _self_, jule::Ptr<_1a601a64a_TypeKind>* _85740_k) {
	{
		
		if ((_1a601e374_Struct((*(_85740_k)).ptr()) != nullptr)) {
			_case_begin_1bcd09433:;
			{
				jule::Ptr<_1aa31e373_StructIns> _8608_t = _1a601e374_Struct((*(_85740_k)).ptr());;
				_1bcd0a7ec_pushReference(_self_, &(_8608_t));
			}
		}
		else if ((_1a601e60a_Trait((*(_85740_k)).ptr()) != nullptr)) {
			_case_begin_1bcd094cc:;
			{
				jule::Ptr<_1aa345047_Trait> _8638_t = _1a601e60a_Trait((*(_85740_k)).ptr());;
				_1bcd0d1c3_pushReference(_self_, &(_8638_t));
			}
		}
		_match_end_1bcd09323:;
	};
}



inline void _1a602e142_pushCycleError(_1a602ca47_typeChecker* _self_, jule::Any _86826_def1, jule::Any _86837_def2, _1ed486d49_StrBuilder* _86853_message) {
	;
	jule::Fn<jule::Str,jule::Any*> _8703_getIdent = jule::__new_closure<jule::Str,jule::Any*>((void*)__jule_anon1bcd12260, nullptr, nullptr);;
	jule::Str _8803_m = _1ed4912a4_Str(_86853_message);;
	jule::Str _8813_def1Ident = _8703_getIdent(&(_86826_def1));;
	jule::Str _8823_def2Ident = _8703_getIdent(&(_86837_def2));;
	jule::Str _8833_refersTo = _1ada73079_Logf(jule::Str::lit("@ refers to @", 13), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8813_def1Ident, &__jule_any_type4); (*it++) = jule::Any(_8823_def2Ident, &__jule_any_type4); __jule_collection; }));;
	_1ed4909ac_WriteStr(_86853_message, _1ed472ce1_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1ed4909ac_WriteStr(_86853_message, _8833_refersTo);
	_1ed490c65_WriteByte(_86853_message, '\n');
	_1ed4909ac_WriteStr(_86853_message, _8803_m);
}



inline jule::Bool _1a602e53d_checkCrossCycle(_1a602ca47_typeChecker* _self_, jule::Any _89027_decl, _1ed486d49_StrBuilder* _89043_message) {
	{
		auto &_match_expr{ _89027_decl };
		
		if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1bcd163eb:;
			{
				jule::Ptr<_1a6019858_TypeAlias> _8934_ta = _89027_decl.unsafe_cast_ptr<_1a6019858_TypeAlias>();;
				{
					auto expr = &((*(_8934_ta))._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bcd17397:;
					if (it != expr_end) {
						jule::Any *_89411_d = it;
						{
							{
								
								if (((*(_89411_d)) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1bcd17b8e:;
									{
										_1a602e142_pushCycleError(_self_, jule::Any(_8934_ta, &__jule_any_type27), (*(_89411_d)), _89043_message);
										return false;;
									}
								}
								else if ((!(_1a602e53d_checkCrossCycle(_self_, (*(_89411_d)), _89043_message)))) {
									_case_begin_1bcd17c27:;
									{
										_1a602e142_pushCycleError(_self_, jule::Any(_8934_ta, &__jule_any_type27), (*(_89411_d)), _89043_message);
										return false;;
									}
								}
								_match_end_1bcd17a90:;
							};
						}
						_iter_next_1bcd17397:;
						++it;
						goto _iter_begin_1bcd17397;
					}
					_iter_end_1bcd17397:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1bcd16264:;
			{
				jule::Ptr<_1aa31b518_Struct> _9054_s = _89027_decl.unsafe_cast_ptr<_1aa31b518_Struct>();;
				{
					auto expr = &((*(_9054_s))._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bcd196da:;
					if (it != expr_end) {
						jule::Ptr<_1aa31b518_Struct> *_90611_d = it;
						{
							{
								
								if ((__jule_any_type23_compare((*((*(_self_))._field_referencer))._field_owner, (*(_90611_d))))) {
									_case_begin_1bcd19ed2:;
									{
										_1a602e142_pushCycleError(_self_, jule::Any(_9054_s, &__jule_any_type23), jule::Any((*(_90611_d)), &__jule_any_type23), _89043_message);
										return false;;
									}
								}
								else if ((!(_1a602e53d_checkCrossCycle(_self_, jule::Any((*(_90611_d)), &__jule_any_type23), _89043_message)))) {
									_case_begin_1bcd1a06a:;
									{
										_1a602e142_pushCycleError(_self_, jule::Any(_9054_s, &__jule_any_type23), jule::Any((*(_90611_d)), &__jule_any_type23), _89043_message);
										return false;;
									}
								}
								_match_end_1bcd19dd3:;
							};
						}
						_iter_next_1bcd196da:;
						++it;
						goto _iter_begin_1bcd196da;
					}
					_iter_end_1bcd196da:;
				};
			}
		}
		_match_end_1bcd16396:;
	};
	return true;;
}



inline jule::Bool _1a602e939_checkIllegalCycles(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa2eac89_IdentTypeDecl>* _92435_ident, jule::Any _92462_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _92462_decl };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1bcd1c0d3:;
			{
				if ((*(_92462_decl.unsafe_cast_ptr<_1aa31b518_Struct>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1bcd19a09:;
			{
				if ((*(_92462_decl.unsafe_cast_ptr<_1a6019858_TypeAlias>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1bcd19a81:;
	};
	if ((_92462_decl == (*((*(_self_))._field_referencer))._field_owner)) {
		_1a602d2b7_pushErr(_self_, (*((*(_92435_ident))))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_referencer))._field_ident, &__jule_any_type4); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1ed486d49_StrBuilder _9477_message = static__1ed487146_New(32LL);;
	if ((!(_1a602e53d_checkCrossCycle(_self_, _92462_decl, &(_9477_message))))) {
		jule::Str _9508_errMsg = _1ed4912a4_Str(&_9477_message);;
		_1ed4914a2_Clear(&_9477_message);
		_1a602e142_pushCycleError(_self_, (*((*(_self_))._field_referencer))._field_owner, _92462_decl, &(_9477_message));
		_9508_errMsg+=_1ed4912a4_Str(&_9477_message);
		_1a602d2b7_pushErr(_self_, (*((*(_92435_ident))))._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9508_errMsg, &__jule_any_type4); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1bcd219cd:;
			{
				{
					{ jule::Slice<jule::Any> *__jule_push_dest = (*((*(_self_))._field_referencer))._field_refs; __jule_push_dest->push(_92462_decl); };
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1bcd203c2:;
			{
				{
					auto &_match_expr{ _92462_decl };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1bcd22380:;
						{
							jule::Ptr<_1aa31b518_Struct> _9669_s = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1aa31b518_Struct>();;
							(*(_9669_s))._field_Depends=jule::append((*_9669_s.alloc)._field_Depends,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa31b518_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _92462_decl.cast_ptr<_1aa31b518_Struct>(&__jule_any_type23); __jule_collection; }));
						}
					}
					_match_end_1bcd22319:;
				};
			}
		}
		_match_end_1bcd21978:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait _1a602ed35_fromTypeAlias(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa2eac89_IdentTypeDecl>* _97430_decl, jule::Ptr<_1a6019858_TypeAlias>* _97457_ta) {
	if ((!(_1aa3beb93_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_97457_ta))))._field_Public, (*((*(_97457_ta))))._field_Token)))) {
		_1a602d2b7_pushErr(_self_, (*((*(_97430_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_97430_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	(*((*(_97457_ta))))._field_Used=true;
	if (((*((*(_97430_decl))))._field_Generics.len() > 0LL)) {
		_1a602d2b7_pushErr(_self_, (*((*(_97430_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_97430_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bcd2760a:;
			if (it != expr_end) {
				jule::Ptr<_1a6019858_TypeAlias> _99111_bg = *it;
				{
					if (((_99111_bg == (*(_97457_ta))) || (((*((*((*(_97457_ta))))._field_Kind))._field_Kind != nullptr) && _1a601ad87_Equal((*((*((*(_97457_ta))))._field_Kind))._field_Kind, (*(*(_99111_bg))._field_Kind.alloc)._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1bcd2760a;
					};
				}
				_iter_next_1bcd2760a:;
				++it;
				goto _iter_begin_1bcd2760a;
			}
			_iter_end_1bcd2760a:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bcd281bb:;
			if (it != expr_end) {
				jule::Ptr<_1a6019858_TypeAlias> _100211_bg = *it;
				{
					if ((_100211_bg == (*(_97457_ta)))) {
						_1a602d2b7_pushErr(_self_, (*((*(_97430_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_97430_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
						return nullptr;;
					};
					{
						auto expr = &((*((*(_97457_ta))))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bcd2a2cd:;
						if (it != expr_end) {
							jule::Ptr<_1a6019858_TypeAlias> _100712_dg = *it;
							{
								if ((_100211_bg == _100712_dg)) {
									_1a602d2b7_pushErr(_self_, (*((*(_97430_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_97430_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
									return nullptr;;
								};
							}
							_iter_next_1bcd2a2cd:;
							++it;
							goto _iter_begin_1bcd2a2cd;
						}
						_iter_end_1bcd2a2cd:;
					};
				}
				_iter_next_1bcd281bb:;
				++it;
				goto _iter_begin_1bcd281bb;
			}
			_iter_end_1bcd281bb:;
		};
	};
	if (((*(*((*(_97457_ta))))._field_Kind.alloc)._field_Kind == nullptr)) {
		jule::Bool _10184_ok = _1aa3d1930_checkTypeAliasDeclKind((*(_self_))._field_s, _97457_ta, (*(_self_))._field_lookup);;
		if ((!(_10184_ok))) {
			return nullptr;;
		};
	};
	{
		auto &_match_expr{ (*((*((*((*(_97457_ta))))._field_Kind))._field_Kind))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data0)) {
			_case_begin_1bcd2d4ac:;
			{
				jule::Bool _10264_ok = _1a602e939_checkIllegalCycles(_self_, _97430_decl, jule::Any((*((*(*((*((*(_97457_ta))))._field_Kind))._field_Kind.alloc)._field_Kind.cast_ptr<_1aa31e373_StructIns>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data0)))._field_Decl, &__jule_any_type23));;
				if ((!(_10264_ok))) {
					return nullptr;;
				};
			}
		}
		_match_end_1bcd2d446:;
	};
	if (((*((*(_97457_ta))))._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		(*(*(_self_))._field_ownerAlias.alloc)._field_Generics=jule::append((*(*(_self_))._field_ownerAlias.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_97457_ta)); __jule_collection; }));
	};
	jule::Ptr<_1a601a64a_TypeKind> _10387_tk = jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=(*((*(_97457_ta))))._field_Generic, ._field_Variadic=false, ._field_Kind=(*(*((*((*(_97457_ta))))._field_Kind))._field_Kind.alloc)._field_Kind});;
	_1a602dc24_pushReferenceByKind(_self_, &(_10387_tk));
	if ((*((*(_97457_ta))))._field_Binded) {
		(*(_10387_tk))._field_BindIdent=(*((*(_97457_ta))))._field_Ident;
	} else {
		(*(_10387_tk))._field_BindIdent=(*(*((*((*(_97457_ta))))._field_Kind))._field_Kind.alloc)._field_BindIdent;
	};
	return jule::Trait(_10387_tk, (jule::Trait::Type*)&_1a601a194_Kind_mptr_data21);;
}



inline jule::Ptr<_1aa347753_Enum> _1a6030231_fromEnum(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa2eac89_IdentTypeDecl>* _105125_decl, jule::Ptr<_1aa347753_Enum>* _105152_e) {
	if ((!(_1aa3beb93_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_105152_e))))._field_Public, (*((*(_105152_e))))._field_Token)))) {
		_1a602d2b7_pushErr(_self_, (*((*(_105125_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_105125_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_105125_decl))))._field_Generics.len() > 0LL)) {
		_1a602d2b7_pushErr(_self_, (*((*(_105125_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_105125_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return (*(_105152_e));;
}



inline jule::Ptr<_1aa348e5d_TypeEnum> _1a603062c_fromTypeEnum(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa2eac89_IdentTypeDecl>* _106329_decl, jule::Ptr<_1aa348e5d_TypeEnum>* _106356_e) {
	if ((!(_1aa3beb93_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_106356_e))))._field_Public, (*((*(_106356_e))))._field_Token)))) {
		_1a602d2b7_pushErr(_self_, (*((*(_106329_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_106329_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_106329_decl))))._field_Generics.len() > 0LL)) {
		_1a602d2b7_pushErr(_self_, (*((*(_106329_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_106329_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return (*(_106356_e));;
}



inline jule::Ptr<_1aa345047_Trait> _1a6030a28_fromTrait(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa2eac89_IdentTypeDecl>* _107526_decl, jule::Ptr<_1aa345047_Trait>* _107553_t) {
	if ((!(_1aa3beb93_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_107553_t))))._field_Public, (*((*(_107553_t))))._field_Token)))) {
		_1a602d2b7_pushErr(_self_, (*((*(_107526_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_107526_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_107526_decl))))._field_Generics.len() > 0LL)) {
		_1a602d2b7_pushErr(_self_, (*((*(_107526_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_107526_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	_1bcd0d1c3_pushReference(_self_, _107553_t);
	return (*(_107553_t));;
}



inline jule::Bool _1a6030e24_checkStructIns(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa31e373_StructIns>* _108835_ins, jule::Ptr<_1aa2d51c4_Token>* _108857_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_108835_ins))))._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_108835_ins))))._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (__jule_any_type23_compare((*(*(_self_))._field_referencer.alloc)._field_owner, (*((*(_108835_ins))))._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1aa3dd420_precheckStructIns((*(_self_))._field_s, _108835_ins, (*(_108857_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*((*(_108835_ins))))._field_Generics.len() > 0LL)) {
		_1aa3dde37_checkStructInsOperators((*(_self_))._field_s, (*(_108835_ins)));
		_1aa3dd6c8_checkStructIns((*(_self_))._field_s, _108835_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a60311cc_appendUsedStructReference(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa31b518_Struct>* _110946_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1bcd40876:;
			{
				jule::Ptr<_1aa31b518_Struct> _11158_refS = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1aa31b518_Struct>();;
				if ((!(_1aa31cecb_IsUses(_11158_refS.ptr(), (*(_110946_s)))))) {
					(*_11158_refS.alloc)._field_Uses=jule::append((*_11158_refS.alloc)._field_Uses,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa31b518_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_110946_s)); __jule_collection; }));
				};
			}
		}
		_match_end_1bcd40821:;
	};
}



inline jule::Ptr<_1aa31e373_StructIns> _1a60315c8_buildStructInstance(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa2eac89_IdentTypeDecl>* _112240_decl, jule::Ptr<_1aa31b518_Struct>* _112267_s) {
	jule::Ptr<_1a602ba57_referencer> _11247_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1a6019858_TypeAlias>> _11267_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data0)) {
				_case_begin_1bcd43868:;
				{
					jule::Ptr<_1aa381160_scopeChecker> _11339_sc = (*(_self_))._field_lookup.cast_ptr<_1aa381160_scopeChecker>((jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data0);;
					jule::Ptr<_1aa381160_scopeChecker> _11349_hard = _1aa3847c3_getHardRoot(_11339_sc);;
					if ((((*((*(_11349_hard))._field_owner))._field_Owner == nullptr) || ((*((*(*(_11349_hard))._field_owner.alloc)._field_Owner))._field_Decl != (*(_112267_s))))) {
						goto _match_end_1bcd43813;
					};
					jule::I32 _11385_n = ((*(*(_11349_hard))._field_owner.alloc)._field_Generics.len() + (*((*(*(_11349_hard))._field_owner.alloc)._field_Owner))._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=(*((*_11349_hard.alloc)._field_table))._field_TypeAliases.slice(0LL, _11385_n);
				}
			}
			_match_end_1bcd43813:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait _11487_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1aa31e373_StructIns> _11527_ins = _1aa31b9ad_instance((*(_112267_s)));;
	(*(_11527_ins))._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>::alloc(0LL, (*((*(_112240_decl))))._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a6018c64_InsGeneric>(nullptr); __jule_collection; });
	{
		auto expr = &((*((*(_112240_decl))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcd48b37:;
		if (it != expr_end) {
			jule::Ptr<_1aa2ea67e_TypeDecl> _115415_g = *it;
			{
				jule::Ptr<_1a601a64a_TypeKind> _11558_kind = _1a6034dd4_build(_self_, &((*(_115415_g))._field_Kind));;
				if ((_11558_kind == nullptr)) {
					return nullptr;;
				};
				(*_11527_ins.alloc)._field_Generics=jule::append((*_11527_ins.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a6018c64_InsGeneric>(_1a6018c64_InsGeneric{._field_Kind=_11558_kind, ._field_Constraint=jule::Slice<jule::Ptr<_1a601a64a_TypeKind>>(nullptr)}); __jule_collection; }));
			}
			_iter_next_1bcd48b37:;
			++it;
			goto _iter_begin_1bcd48b37;
		}
		_iter_end_1bcd48b37:;
	};
	(*(_self_))._field_lookup=_11487_lookup;
	(*(_self_))._field_bannedGenerics=_11267_bannedGenerics;
	(*(_self_))._field_referencer=_11247_referencer;
	return _11527_ins;;
}



inline jule::Ptr<_1aa31e373_StructIns> _1a60319c4_fromStruct(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa2eac89_IdentTypeDecl>* _117031_decl, jule::Ptr<_1aa31b518_Struct>* _117058_s) {
	if ((!(_1aa3beb93_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_117058_s))))._field_Public, (*((*(_117058_s))))._field_Token)))) {
		_1a602d2b7_pushErr(_self_, (*((*(_117031_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_117031_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*((*(_117031_decl))))._field_Generics.len() > 0LL)) {
			_1a602d2b7_pushErr(_self_, (*((*(_117031_decl))))._field_Token, jule::Str::lit("generics are not allowed in this scope", 38), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1aa31e373_StructIns>(_1aa31e373_StructIns{._field_Checked=false, ._field_Decl=(*(_117058_s)), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Fields=jule::Slice<jule::Ptr<_1aa31d7c3_FieldIns>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1aa3315b6_Fn>>(nullptr), ._field_Mutable=false, ._field_Comparable=false, ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Operators=_1aa31a605_Operators{._field_Eq=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_Gt=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_GtEq=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_Lt=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_LtEq=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_Shl=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_Shr=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_Add=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_Sub=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_Div=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_Mul=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_Mod=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_BitAnd=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_BitOr=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_BitXor=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_Neg=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_Pos=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_BitNot=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_AddAssign=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_SubAssign=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_DivAssign=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_MulAssign=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_ModAssign=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_ShlAssign=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_ShrAssign=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_BitOrAssign=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_BitAndAssign=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_BitXorAssign=jule::Ptr<_1aa334597_FnIns>(nullptr)}});;
	};
	jule::Bool _11887_ok = _1a602e939_checkIllegalCycles(_self_, _117031_decl, jule::Any((*(_117058_s)), &__jule_any_type23));;
	if ((!(_11887_ok))) {
		return nullptr;;
	};
	_1a60311cc_appendUsedStructReference(_self_, _117058_s);
	jule::Ptr<_1aa31e373_StructIns> _11947_ins = _1a60315c8_buildStructInstance(_self_, _117031_decl, _117058_s);;
	if ((_11947_ins == nullptr)) {
		return nullptr;;
	};
	_11887_ok=_1aa3c0963_checkGenericQuantity((*(_self_))._field_s, (*((*(_11947_ins))._field_Decl))._field_Generics.len(), (*(_11947_ins))._field_Generics.len(), (*((*(_117031_decl))))._field_Token);
	if ((!(_11887_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1aa31e373_StructIns> _12047_existInstance = _1aa31bcbb_appendInstance((*(_117058_s)).ptr(), &(_11947_ins));;
	if ((_12047_existInstance != nullptr)) {
		if ((!(_1aa3ce730_checkConstraintsStruct((*(_self_))._field_s, &(_11947_ins), &((*((*(_117031_decl))))._field_Token), _12047_existInstance)))) {
			return nullptr;;
		};
		_1bcd0a7ec_pushReference(_self_, &(_12047_existInstance));
		return _12047_existInstance;;
	};
	if ((!(_1a6030e24_checkStructIns(_self_, &(_11947_ins), &((*((*(_117031_decl))))._field_Token))))) {
		return nullptr;;
	};
	_1bcd0a7ec_pushReference(_self_, &(_11947_ins));
	return _11947_ins;;
}



inline jule::Trait _1a6031d15_getDef(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa2eac89_IdentTypeDecl>* _122827_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcd53504:;
		if (it != expr_end) {
			jule::Ptr<_1aa307889_GenericDecl> _122910_g = *it;
			{
				if (((*(_122910_g))._field_Ident == (*((*(_122827_decl))))._field_Ident)) {
					return jule::Trait(_1a6037aa7_buildPrimType((*_122910_g.alloc)._field_Ident), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data22);;
				};
			}
			_iter_next_1bcd53504:;
			++it;
			goto _iter_begin_1bcd53504;
		}
		_iter_end_1bcd53504:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcd53845:;
		if (it != expr_end) {
			jule::Ptr<_1a6019858_TypeAlias> _123515_g = *it;
			{
				if (((*(_123515_g))._field_Ident == (*((*(_122827_decl))))._field_Ident)) {
					if (((*((*(_122827_decl))))._field_Generics.len() > 0LL)) {
						_1a602d2b7_pushErr(_self_, (*((*(_122827_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_122827_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
						return nullptr;;
					};
					jule::Ptr<_1aa31e373_StructIns> _12419_st = _1a601e374_Struct((*((*_123515_g.alloc)._field_Kind))._field_Kind.ptr());;
					if ((_12419_st != nullptr)) {
						jule::Bool _12436_ok = _1a602e939_checkIllegalCycles(_self_, _122827_decl, jule::Any((*_12419_st.alloc)._field_Decl, &__jule_any_type23));;
						if ((!(_12436_ok))) {
							return nullptr;;
						};
					};
					return (*(*((*(_123515_g))._field_Kind))._field_Kind.alloc)._field_Kind;;
				};
			}
			_iter_next_1bcd53845:;
			++it;
			goto _iter_begin_1bcd53845;
		}
		_iter_end_1bcd53845:;
	};
	if ((!((*((*(_122827_decl))))._field_Binded))) {
		jule::Ptr<_1aa347753_Enum> _12538_e = ((_1a603a77a_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a603a2d5_FindEnum((*(_self_))._field_lookup.data, (*((*(_122827_decl))))._field_Ident);;
		if ((_12538_e != nullptr)) {
			return jule::Trait(_1a6030231_fromEnum(_self_, _122827_decl, &(_12538_e)), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data3);;
		};
		jule::Ptr<_1aa348e5d_TypeEnum> _12588_te = ((_1a603a77a_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a603a626_FindTypeEnum((*(_self_))._field_lookup.data, (*((*(_122827_decl))))._field_Ident);;
		if ((_12588_te != nullptr)) {
			return jule::Trait(_1a603062c_fromTypeEnum(_self_, _122827_decl, &(_12588_te)), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data4);;
		};
		jule::Ptr<_1aa345047_Trait> _12638_t = ((_1a603a77a_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a6039e94_FindTrait((*(_self_))._field_lookup.data, (*((*(_122827_decl))))._field_Ident);;
		if ((_12638_t != nullptr)) {
			return jule::Trait(_1a6030a28_fromTrait(_self_, _122827_decl, &(_12638_t)), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1a602d2b7_pushErr(_self_, (*((*(_122827_decl))))._field_Token, jule::Str::lit("binded definitions are not allowed in this scope", 48), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa31b518_Struct> _12727_s = ((_1a603a77a_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a6039757_FindStruct((*(_self_))._field_lookup.data, (*((*(_122827_decl))))._field_Ident, (*((*(_122827_decl))))._field_Binded);;
	if ((_12727_s != nullptr)) {
		return jule::Trait(_1a60319c4_fromStruct(_self_, _122827_decl, &(_12727_s)), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data0);;
	};
	jule::Ptr<_1a6019858_TypeAlias> _12777_ta = ((_1a603a77a_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a603935b_FindTypeAlias((*(_self_))._field_lookup.data, (*((*(_122827_decl))))._field_Ident, (*((*(_122827_decl))))._field_Binded);;
	if (((_12777_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_12777_ta=_1aa5e00b1_findBuiltinTypeAlias((*((*(_122827_decl))))._field_Ident);
	};
	if ((_12777_ta != nullptr)) {
		return _1a602ed35_fromTypeAlias(_self_, _122827_decl, &(_12777_ta));;
	};
	_1a602d2b7_pushErr(_self_, (*((*(_122827_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_122827_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
	return nullptr;;
}



inline jule::Trait _1a6032156_buildIdent(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa2eac89_IdentTypeDecl> _128930_decl) {
	return _1a6031d15_getDef(_self_, &(_128930_decl));;
}



inline jule::Trait _1a6032497_buildSubIdent(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa2eb053_SubIdentTypeDecl> _129333_decl) {
	jule::Trait _12947_ident = _1a6032156_buildIdent(_self_, (*(_129333_decl))._field_Idents[0LL]);;
	if ((_12947_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _12947_ident };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data4)) {
			_case_begin_1bcd616dd:;
			{
				goto _match_end_1bcd619b8;
			}
		}
		else {
			_case_begin_1bcd61545:;
			{
				_1a602d2b7_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bcd619b8:;
	};
	jule::Ptr<_1aa348e5d_TypeEnum> _13057_t = _12947_ident.cast_ptr<_1aa348e5d_TypeEnum>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data4);;
	jule::Slice<jule::Ptr<_1aa2eac89_IdentTypeDecl>> _13067_idents = (*_129333_decl.alloc)._field_Idents.slice(1LL);;
	{
		auto expr = &(_13067_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcd63080:;
		if (it != expr_end) {
			jule::I32 _13077_i = it - expr->begin();
			jule::Ptr<_1aa2eac89_IdentTypeDecl> _130710_id = *it;
			{
				jule::Ptr<_1aa348886_TypeEnumItem> _13088_item = _1aa349a52_FindItem(_13057_t.ptr(), (*(_130710_id))._field_Ident);;
				if ((_13088_item == nullptr)) {
					_1a602d2b7_pushErr(_self_, (*_130710_id.alloc)._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_13057_t.alloc)._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_130710_id.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				if (((_13067_idents.len() - _13077_i) == 1LL)) {
					_1a602dc24_pushReferenceByKind(_self_, &((*((*(_13088_item))._field_Kind))._field_Kind));
					return jule::Trait((*(*(_13088_item))._field_Kind.alloc)._field_Kind, (jule::Trait::Type*)&_1a601a194_Kind_mptr_data21);;
				};
				_13057_t=_1a601d83a_TypeEnum((*(*(_13088_item))._field_Kind.alloc)._field_Kind.ptr());
				if ((_13057_t == nullptr)) {
					_1a602d2b7_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1bcd63080:;
			++it;
			_13077_i++;
			goto _iter_begin_1bcd63080;
		}
		_iter_end_1bcd63080:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a602728e_Sptr> _1a60327d8_buildSptrFromType(_1a602ca47_typeChecker* _self_, jule::Ptr<_1a601a64a_TypeKind>* _132738_elem) {
	{
		
		if (((*(_132738_elem)) == nullptr)) {
			_case_begin_1bcd6778d:;
			{
				return nullptr;;
			}
		}
		else if ((_1a601e374_Struct((*(_132738_elem)).ptr()) != nullptr)) {
			_case_begin_1bcd67837:;
			{
				jule::Ptr<_1aa31e373_StructIns> _13334_s = _1a601e374_Struct((*(_132738_elem)).ptr());;
				if ((((*(_13334_s))._field_Decl != nullptr) && (*(*(_13334_s))._field_Decl.alloc)._field_Binded)) {
					_1a602d2b7_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1a601dac1_Arr((*(_132738_elem)).ptr()) != nullptr) && (*(_1a601dac1_Arr((*(_132738_elem)).ptr())))._field_Auto)) {
			_case_begin_1bcd6789d:;
			{
				_1a602d2b7_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bcd66e85:;
	};
	return jule::new_ptr<_1a602728e_Sptr>(_1a602728e_Sptr{._field_Elem=(*(_132738_elem))});;
}



inline jule::Ptr<_1a602728e_Sptr> _1a6032b29_buildSptr(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa2eb729_SptrTypeDecl> _134729_decl) {
	jule::Bool _13483_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13483_cycleRisk;
	});;
	jule::Ptr<_1a601a64a_TypeKind> _13527_elem = _1a6035225_checkDecl(_self_, &((*(_134729_decl))._field_Elem));;
	return _1a60327d8_buildSptrFromType(_self_, &(_13527_elem));;
}



inline jule::Ptr<_1a602aa56_Ptr> _1a6032e6a_buildPtrFromType(_1a602ca47_typeChecker* _self_, jule::Ptr<_1a601a64a_TypeKind>* _135637_elem) {
	{
		
		if (((*(_135637_elem)) == nullptr)) {
			_case_begin_1bcd6c870:;
			{
				return nullptr;;
			}
		}
		else if (((_1a601dac1_Arr((*(_135637_elem)).ptr()) != nullptr) && (*(_1a601dac1_Arr((*(_135637_elem)).ptr())))._field_Auto)) {
			_case_begin_1bcd6c919:;
			{
				_1a602d2b7_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return jule::new_ptr<_1a602aa56_Ptr>(_1a602aa56_Ptr{._field_Elem=jule::Ptr<_1a601a64a_TypeKind>(nullptr)});;
			}
		}
		_match_end_1bcd6c760:;
	};
	return jule::new_ptr<_1a602aa56_Ptr>(_1a602aa56_Ptr{._field_Elem=(*(_135637_elem))});;
}



inline jule::Ptr<_1a602aa56_Ptr> _1a60332ab_buildPtr(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa2ec1a8_PtrTypeDecl> _137128_decl) {
	jule::Bool _13723_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13723_cycleRisk;
	});;
	jule::Ptr<_1a601a64a_TypeKind> _137611_elem = nullptr;;
	if ((!(_1aa2ec54e_IsUnsafe(_137128_decl.ptr())))) {
		_137611_elem=_1a6035225_checkDecl(_self_, &((*_137128_decl.alloc)._field_Elem));
		return _1a6032e6a_buildPtrFromType(_self_, &(_137611_elem));;
	};
	return jule::new_ptr<_1a602aa56_Ptr>(_1a602aa56_Ptr{._field_Elem=_137611_elem});;
}



inline jule::Ptr<_1a6027c62_Slc> _1a60335ec_buildSlc(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa2ebaae_SlcTypeDecl> _138828_decl) {
	jule::Bool _13893_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13893_cycleRisk;
	});;
	jule::Ptr<_1a601a64a_TypeKind> _13937_elem = _1a6035225_checkDecl(_self_, &((*(_138828_decl))._field_Elem));;
	{
		
		if ((_13937_elem == nullptr)) {
			_case_begin_1bcd72952:;
			{
				return nullptr;;
			}
		}
		else if (((_1a601dac1_Arr(_13937_elem.ptr()) != nullptr) && (*(_1a601dac1_Arr(_13937_elem)))._field_Auto)) {
			_case_begin_1bcd729eb:;
			{
				_1a602d2b7_pushErr(_self_, (*((*_138828_decl.alloc)._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bcd728ec:;
	};
	return jule::new_ptr<_1a6027c62_Slc>(_1a6027c62_Slc{._field_Elem=_13937_elem});;
}



inline jule::Ptr<_1a602a083_Arr> _1a603393d_buildArr(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa2ec94a_ArrTypeDecl> _140928_decl) {
	jule::I32 _14107_n = 0LL;;
	if ((!(_1aa2ecce1_AutoSized(_140928_decl.ptr())))) {
		jule::Ptr<_1aa44cc98_Data> _14138_size = _1aa46cc63_evalExpr(_1aa3cb73d_eval((*(_self_))._field_s, (*(_self_))._field_lookup), (*_140928_decl.alloc)._field_Size);;
		if ((_14138_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1aa44d6d3_IsConst(_14138_size.ptr())))) {
			_1a602d2b7_pushErr(_self_, (*((*_140928_decl.alloc)._field_Size))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1a601cd01_Prim((*(_14138_size))._field_Kind.ptr()) == nullptr) || (!(_1a6e769a1_IsInt((*(_1a601cd01_Prim((*(_14138_size))._field_Kind)))._field_Kind))))) {
			_1a602d2b7_pushErr(_self_, (*((*_140928_decl.alloc)._field_Size))._field_Token, jule::Str::lit("array size must be integer", 26), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_14107_n=static_cast<jule::I32>(_1a6e79c5c_AsI64((*(_14138_size))._field_Constant.ptr()));
		if ((_14107_n < 0LL)) {
			_1a602d2b7_pushErr(_self_, (*((*_140928_decl.alloc)._field_Elem))._field_Token, jule::Str::lit("array size must be positive integer", 35), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _14315_max = _1a6e72a13_MaxI(jule::Str::lit("int", 3));;
			if (((_1a6e6a984_BitSize != 64LL) && (static_cast<jule::I64>(_14107_n) > _14315_max))) {
				_1a602d2b7_pushErr(_self_, (*((*_140928_decl.alloc)._field_Size))._field_Token, jule::Str::lit("array with size @ overflows limit (@) of the system", 51), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a60165ad_constoa(&((*(_14138_size))._field_Constant)), &__jule_any_type4); (*it++) = jule::Any(_1a6e69433_FmtInt(_14315_max, 10LL), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1a601a64a_TypeKind> _14407_elem = _1a6035225_checkDecl(_self_, &((*_140928_decl.alloc)._field_Elem));;
	{
		
		if ((_14407_elem == nullptr)) {
			_case_begin_1bcd7c594:;
			{
				return nullptr;;
			}
		}
		else if (((_1a601dac1_Arr(_14407_elem.ptr()) != nullptr) && (*(_1a601dac1_Arr(_14407_elem)))._field_Auto)) {
			_case_begin_1bcd7c61b:;
			{
				_1a602d2b7_pushErr(_self_, (*((*_140928_decl.alloc)._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bcd7a6a2:;
	};
	return jule::new_ptr<_1a602a083_Arr>(_1a602a083_Arr{._field_Auto=_1aa2ecce1_AutoSized(_140928_decl), ._field_N=_14107_n, ._field_Elem=_14407_elem});;
}



inline jule::Ptr<_1a6029406_Map> _1a6033c7e_buildMap(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa2ed198_MapTypeDecl> _145828_decl) {
	jule::Bool _14593_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14593_cycleRisk;
	});;
	jule::Ptr<_1a601a64a_TypeKind> _14637_key = _1a6035225_checkDecl(_self_, &((*(_145828_decl))._field_Key));;
	if ((_14637_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a601a64a_TypeKind> _14687_val = _1a6035225_checkDecl(_self_, &((*_145828_decl.alloc)._field_Val));;
	if ((_14687_val == nullptr)) {
		return nullptr;;
	};
	if ((_1a601d5a4_Enum(_14687_val.ptr()) != nullptr)) {
		_1a602d2b7_pushErr(_self_, (*((*_145828_decl.alloc)._field_Val))._field_Token, jule::Str::lit("maps do not support enums as map key type", 41), jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1a6029406_Map>(_1a6029406_Map{._field_Key=_14637_key, ._field_Val=_14687_val});;
}



inline jule::Ptr<_1a6028856_Tuple> _1a60340c0_buildTuple(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa2ebdab_TupleTypeDecl> _148230_decl) {
	jule::Slice<jule::Ptr<_1a601a64a_TypeKind>> _14837_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a601a64a_TypeKind>>::alloc(0LL, (*(_148230_decl))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a601a64a_TypeKind>(nullptr); __jule_collection; });;
	{
		auto expr = &((*_148230_decl.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcd83a62:;
		if (it != expr_end) {
			jule::Ptr<_1aa2ea67e_TypeDecl> _148415_t = *it;
			{
				jule::Ptr<_1a601a64a_TypeKind> _14858_kind = _1a6035225_checkDecl(_self_, &(_148415_t));;
				if ((_14858_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1a601a64a_TypeKind>> &__jule_push_dest = _14837_types; __jule_push_dest.push(_14858_kind); };
			}
			_iter_next_1bcd83a62:;
			++it;
			goto _iter_begin_1bcd83a62;
		}
		_iter_end_1bcd83a62:;
	};
	return jule::new_ptr<_1a6028856_Tuple>(_1a6028856_Tuple{._field_Types=_14837_types});;
}



inline jule::Bool _1a6034411_checkFuncTypes(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa334597_FnIns>* _149535_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_149535_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcd8557a:;
		if (it != expr_end) {
			jule::Ptr<_1aa33351e_ParamIns> _149615_p = *it;
			{
				(*(_149615_p))._field_Kind=_1a6034dd4_build(_self_, &((*((*((*((*_149615_p.alloc)._field_Decl))._field_Kind))._field_Decl))._field_Kind));
				__jule_func_result=((*_149615_p.alloc)._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1aa3d02d0_checkFnParamKind((*(_self_))._field_s, &(_149615_p));
			}
			_iter_next_1bcd8557a:;
			++it;
			goto _iter_begin_1bcd8557a;
		}
		_iter_end_1bcd8557a:;
	};
	if ((!(_1aa331a6c_IsVoid((*((*(_149535_f))))._field_Decl.ptr())))) {
		(*((*(_149535_f))))._field_Result=_1a6034dd4_build(_self_, &((*(*((*((*((*((*(_149535_f))))._field_Decl))._field_Result))._field_Kind))._field_Decl.alloc)._field_Kind));
		__jule_func_result = ((*((*(_149535_f))))._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1aa334597_FnIns> _1a6034752_buildFunc(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa30c33e_FnDecl> _151329_decl) {
	jule::Bool _15143_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_15143_cycleRisk;
	});;
	if (((*(_151329_decl))._field_Generics.len() > 0LL)) {
		_1a602d2b7_pushErr(_self_, (*_151329_decl.alloc)._field_Token, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa3315b6_Fn> _15237_f = _1aa33abb9_buildFunc(_151329_decl);;
	jule::I32 _15253_n = (*((*(_self_))._field_s))._field_errors.len();;
	_1aa3d95c5_checkAnonFuncDecl((*(_self_))._field_s, &(_15237_f));
	if ((_15253_n != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1aa334597_FnIns> _15317_ins = _1aa332ac3_instanceForce(_15237_f);;
	(*(_15317_ins))._field_Anon=true;
	(*_15317_ins.alloc)._field_AsAnon=true;
	jule::Bool _15353_ok = _1a6034411_checkFuncTypes(_self_, &(_15317_ins));;
	if ((!(_15353_ok))) {
		return nullptr;;
	};
	return _15317_ins;;
}



inline jule::Trait _1a6034a93_buildByNamespace(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa2eb42c_NamespaceTypeDecl> _154336_decl) {
	jule::Str _15443_path = _1a60376cd_buildLinkPathByTokens(&((*(_154336_decl))._field_Idents));;
	jule::Ptr<_1aa39b0ae_ImportInfo> _15457_imp = ((_1a603a77a_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a6038a64_SelectPackage((*(_self_))._field_lookup.data, jule::__new_closure<jule::Bool,jule::Ptr<_1aa39b0ae_ImportInfo>>((void*)__jule_anon_1bcd8ec27, jule::Ptr<__jule_anon_1bcd8ec27_ctx>::make(__jule_anon_1bcd8ec27_ctx{._154336_decl=_154336_decl,._15443_path=_15443_path}).as<jule::Uintptr>(), __jule_anon_1bcd8ec27_ctx_handler));;
	jule::Str _15523_selfIdent = jule::Str::lit("self", 4);;
	if (((_15457_imp == nullptr) || (!(_1aa39d633_isLookupable(_15457_imp.ptr(), &(_15523_selfIdent)))))) {
		_1a602d2b7_pushErr(_self_, (*(_154336_decl))._field_Idents[0LL], jule::Str::lit("undefined namespace: @", 22), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_15443_path, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	_1a602d6b3_disallowBuiltin(_self_);
	jule::Trait _15597_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_15457_imp, (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data1);
	jule::Ptr<_1a601a64a_TypeKind> _15617_kind = _1a6035225_checkDecl(_self_, &((*_154336_decl.alloc)._field_Kind));;
	(*(_self_))._field_lookup=_15597_lookup;
	_1a602d4b5_allowBuiltin(_self_);
	return jule::Trait(_15617_kind, (jule::Trait::Type*)&_1a601a194_Kind_mptr_data21);;
}



inline jule::Ptr<_1a601a64a_TypeKind> _1a6034dd4_build(_1a602ca47_typeChecker* _self_, jule::Any* _156726_declKind) {
	jule::Trait _156811_kind = nullptr;;
	{
		auto &_match_expr{ (*(_156726_declKind)) };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1bcd95711:;
			{
				jule::Trait _15718_t = _1a6032156_buildIdent(_self_, (*(_156726_declKind)).cast_ptr<_1aa2eac89_IdentTypeDecl>(&__jule_any_type78));;
				if ((_15718_t != nullptr)) {
					_156811_kind=_15718_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1bcd94b2d:;
			{
				jule::Trait _15768_t = _1a6032497_buildSubIdent(_self_, (*(_156726_declKind)).cast_ptr<_1aa2eb053_SubIdentTypeDecl>(&__jule_any_type90));;
				if ((_15768_t != nullptr)) {
					_156811_kind=_15768_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1bcd94cc6:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a602728e_Sptr> _15828_t = _1a6032b29_buildSptr(_self_, (*(_156726_declKind)).cast_ptr<_1aa2eb729_SptrTypeDecl>(&__jule_any_type75));;
				if ((_15828_t != nullptr)) {
					_156811_kind=jule::Trait(_15828_t, (jule::Trait::Type*)&_1a601a194_Kind_mptr_data23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1bcd94d3c:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a602aa56_Ptr> _15888_t = _1a60332ab_buildPtr(_self_, (*(_156726_declKind)).cast_ptr<_1aa2ec1a8_PtrTypeDecl>(&__jule_any_type74));;
				if ((_15888_t != nullptr)) {
					_156811_kind=jule::Trait(_15888_t, (jule::Trait::Type*)&_1a601a194_Kind_mptr_data28);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1bcd94da3:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a6027c62_Slc> _15948_t = _1a60335ec_buildSlc(_self_, (*(_156726_declKind)).cast_ptr<_1aa2ebaae_SlcTypeDecl>(&__jule_any_type73));;
				if ((_15948_t != nullptr)) {
					_156811_kind=jule::Trait(_15948_t, (jule::Trait::Type*)&_1a601a194_Kind_mptr_data24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1bcd94e19:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a602a083_Arr> _16008_t = _1a603393d_buildArr(_self_, (*(_156726_declKind)).cast_ptr<_1aa2ec94a_ArrTypeDecl>(&__jule_any_type72));;
				if ((_16008_t != nullptr)) {
					_156811_kind=jule::Trait(_16008_t, (jule::Trait::Type*)&_1a601a194_Kind_mptr_data27);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1bcd94e80:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a6029406_Map> _16068_t = _1a6033c7e_buildMap(_self_, (*(_156726_declKind)).cast_ptr<_1aa2ed198_MapTypeDecl>(&__jule_any_type76));;
				if ((_16068_t != nullptr)) {
					_156811_kind=jule::Trait(_16068_t, (jule::Trait::Type*)&_1a601a194_Kind_mptr_data26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1bcd94ee6:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a6028856_Tuple> _16128_t = _1a60340c0_buildTuple(_self_, (*(_156726_declKind)).cast_ptr<_1aa2ebdab_TupleTypeDecl>(&__jule_any_type77));;
				if ((_16128_t != nullptr)) {
					_156811_kind=jule::Trait(_16128_t, (jule::Trait::Type*)&_1a601a194_Kind_mptr_data25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1bcd957cc:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1aa334597_FnIns> _16188_t = _1a6034752_buildFunc(_self_, (*(_156726_declKind)).cast_ptr<_1aa30c33e_FnDecl>(&__jule_any_type14));;
				if ((_16188_t != nullptr)) {
					_156811_kind=jule::Trait(_16188_t, (jule::Trait::Type*)&_1a601a194_Kind_mptr_data1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1bcd95843:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait _16248_t = _1a6034a93_buildByNamespace(_self_, (*(_156726_declKind)).cast_ptr<_1aa2eb42c_NamespaceTypeDecl>(&__jule_any_type94));;
				if ((_16248_t != nullptr)) {
					_156811_kind=_16248_t;
				};
			}
		}
		else {
			_case_begin_1bcd94c60:;
			{
				_1a602d2b7_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bcd94c0a:;
	};
	if ((_156811_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _156811_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data21)) {
			_case_begin_1bcda3c80:;
			{
				return _156811_kind.cast_ptr<_1a601a64a_TypeKind>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data21);;
			}
		}
		else {
			_case_begin_1bcd95c1c:;
			{
				jule::Ptr<_1a601a64a_TypeKind> _16398_tk = jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=_156811_kind});;
				{
					auto &_match_expr{ _156811_kind };
					
					if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data22)) {
						_case_begin_1bcda2179:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_1a601a64a_TypeKind>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_16398_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data0)) {
						_case_begin_1bcda2014:;
						{
							jule::Ptr<_1aa31e373_StructIns> _16465_s = _156811_kind.cast_ptr<_1aa31e373_StructIns>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data0);;
							if ((((*(_16465_s))._field_Decl != nullptr) && (*(*(_16465_s))._field_Decl.alloc)._field_Binded)) {
								(*(_16398_tk))._field_BindIdent=(*(*(_16465_s))._field_Decl.alloc)._field_Ident;
							};
						}
					}
					_match_end_1bcda2124:;
				};
				return _16398_tk;;
			}
		}
		_match_end_1bcda1431:;
	};
}



inline jule::Ptr<_1a601a64a_TypeKind> _1a6035225_checkDecl(_1a602ca47_typeChecker* _self_, jule::Ptr<_1aa2ea67e_TypeDecl>* _165530_decl) {
	jule::Ptr<_1aa2d51c4_Token> _16577_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*((*(_165530_decl))))._field_Token;
	jule::Ptr<_1a601a64a_TypeKind> _16607_kind = _1a6034dd4_build(_self_, &((*((*(_165530_decl))))._field_Kind));;
	(*(_self_))._field_errorToken=_16577_errorToken;
	return _16607_kind;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a602ca47_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "cycleRisk:" << _Src._field_cycleRisk << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a60356ed_identTypeLookup_eq(_1a60356ed_identTypeLookup *_self_, _1a60356ed_identTypeLookup _other_) { return true; }

inline jule::Bool static__1a6035b71_prim(jule::Str* _168218_ident, jule::Ptr<_1a6023763_Prim> _168230_t) {
	return ((*(_168230_t))._field_Kind == (*(_168218_ident)));;
}



inline jule::Bool static__1a6035ee5_exist(jule::Str* _168619_ident, jule::Ptr<_1a601a64a_TypeKind>* _168636_k) {
	{
		
		if ((_1a601cd01_Prim((*(_168636_k)).ptr()) != nullptr)) {
			_case_begin_1bcda8a76:;
			{
				return static__1a6035b71_prim(_168619_ident, _1a601cd01_Prim((*(_168636_k)).ptr()));;
			}
		}
		else if ((_1a601d087_Sptr((*(_168636_k)).ptr()) != nullptr)) {
			_case_begin_1bcda8aed:;
			{
				jule::Ptr<_1a602728e_Sptr> _16918_sptr = _1a601d087_Sptr((*(_168636_k)).ptr());;
				return static__1a6035ee5_exist(_168619_ident, &((*(_16918_sptr))._field_Elem));;
			}
		}
		else if ((_1a601d31d_Ptr((*(_168636_k)).ptr()) != nullptr)) {
			_case_begin_1bcda8b75:;
			{
				jule::Ptr<_1a602aa56_Ptr> _16948_ptr = _1a601d31d_Ptr((*(_168636_k)).ptr());;
				return static__1a6035ee5_exist(_168619_ident, &((*(_16948_ptr))._field_Elem));;
			}
		}
		else if ((_1a601dd57_Slc((*(_168636_k)).ptr()) != nullptr)) {
			_case_begin_1bcda8bec:;
			{
				jule::Ptr<_1a6027c62_Slc> _16978_slc = _1a601dd57_Slc((*(_168636_k)).ptr());;
				return static__1a6035ee5_exist(_168619_ident, &((*(_16978_slc))._field_Elem));;
			}
		}
		else if ((_1a601dac1_Arr((*(_168636_k)).ptr()) != nullptr)) {
			_case_begin_1bcda8db7:;
			{
				jule::Ptr<_1a602a083_Arr> _17008_arr = _1a601dac1_Arr((*(_168636_k)).ptr());;
				return static__1a6035ee5_exist(_168619_ident, &((*(_17008_arr))._field_Elem));;
			}
		}
		else if ((_1a601e891_Map((*(_168636_k)).ptr()) != nullptr)) {
			_case_begin_1bcda8e2d:;
			{
				jule::Ptr<_1a6029406_Map> _17038_m = _1a601e891_Map((*(_168636_k)).ptr());;
				return (static__1a6035ee5_exist(_168619_ident, &((*(_17038_m))._field_Key)) || static__1a6035ee5_exist(_168619_ident, &((*_17038_m.alloc)._field_Val)));;
			}
		}
		else if ((_1a601e374_Struct((*(_168636_k)).ptr()) != nullptr)) {
			_case_begin_1bcda8e94:;
			{
				jule::Ptr<_1aa31e373_StructIns> _17078_s = _1a601e374_Struct((*(_168636_k)).ptr());;
				{
					auto expr = &((*(_17078_s))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bcdb1067:;
					if (it != expr_end) {
						jule::Ptr<_1a6018c64_InsGeneric> _170816_g = *it;
						{
							if (static__1a6035ee5_exist(_168619_ident, &((*(_170816_g))._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1bcdb1067:;
						++it;
						goto _iter_begin_1bcdb1067;
					}
					_iter_end_1bcdb1067:;
				};
				return false;;
			}
		}
		else if ((_1a601e0dd_Fn((*(_168636_k)).ptr()) != nullptr)) {
			_case_begin_1bcda900a:;
			{
				jule::Ptr<_1aa334597_FnIns> _17158_f = _1a601e0dd_Fn((*(_168636_k)).ptr());;
				{
					auto expr = &((*(_17158_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bcdb2b90:;
					if (it != expr_end) {
						jule::Ptr<_1aa33351e_ParamIns> _171616_p = *it;
						{
							if (_1aa330241_IsSelf((*(_171616_p))._field_Decl.ptr())) {
								goto _iter_next_1bcdb2b90;
							};
							if (static__1a6035ee5_exist(_168619_ident, &((*_171616_p.alloc)._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1bcdb2b90:;
						++it;
						goto _iter_begin_1bcdb2b90;
					}
					_iter_end_1bcdb2b90:;
				};
				if (((*_17158_f.alloc)._field_Result != nullptr)) {
					return static__1a6035ee5_exist(_168619_ident, &((*_17158_f.alloc)._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1a601eb27_Tup((*(_168636_k)).ptr()) != nullptr)) {
			_case_begin_1bcda9082:;
			{
				jule::Ptr<_1a6028856_Tuple> _17298_tup = _1a601eb27_Tup((*(_168636_k)).ptr());;
				{
					auto expr = &((*(_17298_tup))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bcdb54ab:;
					if (it != expr_end) {
						jule::Ptr<_1a601a64a_TypeKind> _173016_t = *it;
						{
							if (static__1a6035ee5_exist(_168619_ident, &(_173016_t))) {
								return true;;
							};
						}
						_iter_next_1bcdb54ab:;
						++it;
						goto _iter_begin_1bcdb54ab;
					}
					_iter_end_1bcdb54ab:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1bcda8955:;
			{
				return false;;
			}
		}
		_match_end_1bcda8856:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a60356ed_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa84c681_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa84eed0_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1aa851025_stop(_1aa850871_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1aa8512ab_stopped(_1aa850871_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1aa851542_finished(_1aa850871_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1aa8517c8_isLastSt(_1aa850871_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1aa851b3b_pushErr(_1aa850871_scopeParser* _self_, jule::Ptr<_1aa2d51c4_Token> _18823_token, jule::Str _18838_fmt) {
	_1aa86e8d4_pushErr((*(_self_))._field_p.ptr(), _18823_token, _18838_fmt, jule::Slice<jule::Any>());
}



inline void _1aa851e9e_pushSuggestion(_1aa850871_scopeParser* _self_, jule::Str _19330_fmt, jule::Slice<jule::Any> _19343_args) {
	_1aa86ec47_pushSuggestion((*(_self_))._field_p.ptr(), _19330_fmt, _19343_args);
}



inline void _1aa852257_insertAsNext(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _19733_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1aa84eed0_stmt>(_1aa84eed0_stmt{._field_tokens=(*(_19733_tokens)), ._field_terminated=false});
}



inline jule::Ptr<_1aa84eed0_stmt> _1aa8524dd_next(_1aa850871_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1aa30a6a0_ScopeTree> _1aa8528d9_buildScope(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _20731_tokens, jule::Ptr<_1aa2d51c4_Token> _20753_end) {
	jule::Ptr<_1aa30a6a0_ScopeTree> _2087_s = _1aa84dc8c_newScope();;
	(*(_2087_s))._field_Parent=(*(_self_))._field_s;
	(*_2087_s.alloc)._field_End=_20753_end;
	_1aa850871_scopeParser _2117_ssp = _1aa850871_scopeParser{._field_p=(*(_self_))._field_p, ._field_s=jule::Ptr<_1aa30a6a0_ScopeTree>(nullptr), ._field_stmts=jule::Slice<jule::Ptr<_1aa84eed0_stmt>>(nullptr), ._field_pos=0};;
	_1aa85c75c_build(&_2117_ssp, _20731_tokens, &(_2087_s));
	return _2087_s;;
}



inline jule::Ptr<_1aa30d4e9_VarDecl> _1aa852c2a_buildVarSt(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _21831_tokens) {
	jule::Ptr<_1aa30d4e9_VarDecl> _2197_v = _1aa8726a6_buildVar((*(_self_))._field_p, (*(_21831_tokens)));;
	if ((_2197_v != nullptr)) {
		(*_2197_v.alloc)._field_Scope=(*(_self_))._field_s;
	};
	return _2197_v;;
}



inline jule::Ptr<_1aa30d8c3_RetSt> _1aa85306b_buildRetSt(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _22630_tokens) {
	jule::Ptr<_1aa30d8c3_RetSt> _2277_st = jule::new_ptr<_1aa30d8c3_RetSt>(_1aa30d8c3_RetSt{._field_Token=_22630_tokens[0LL], ._field_Expr=jule::Ptr<_1aa2ee9b3_Expr>(nullptr)});;
	if ((_22630_tokens.len() > 1LL)) {
		(_22630_tokens).mut_slice(1LL);;
		(*(_2277_st))._field_Expr=_1aa870088_buildExpr((*(_self_))._field_p, &(_22630_tokens));
	};
	return _2277_st;;
}



inline jule::Ptr<_1aa30e143_Iter> _1aa8533ac_buildWhileNextIter(_1aa850871_scopeParser* _self_, jule::Ptr<_1aa84eed0_stmt>* _23739_s) {
	jule::Ptr<_1aa30e143_Iter> _2387_it = jule::new_ptr<_1aa30e143_Iter>(_1aa30e143_Iter{._field_Comptime=false, ._field_Token=(*((*(_23739_s))))._field_tokens[0LL], ._field_Kind=jule::Any(nullptr), ._field_Scope=jule::Ptr<_1aa30a6a0_ScopeTree>(nullptr)});;
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _2417_tokens = (*((*(_23739_s))))._field_tokens.slice(1LL);;
	jule::Ptr<_1aa30e96d_WhileKind> _2427_kind = jule::new_ptr<_1aa30e96d_WhileKind>(_1aa30e96d_WhileKind{._field_Expr=jule::Ptr<_1aa2ee9b3_Expr>(nullptr), ._field_Next=jule::Any(nullptr), ._field_NextToken=jule::Ptr<_1aa2d51c4_Token>(nullptr)});;
	if ((_2417_tokens.len() > 0LL)) {
		(*_2427_kind.alloc)._field_Expr=_1aa870088_buildExpr((*(_self_))._field_p, &(_2417_tokens));
	};
	if (_1aa8517c8_isLastSt(_self_)) {
		_1aa851b3b_pushErr(_self_, (*(_2387_it))._field_Token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	_2417_tokens=(*(_1aa8524dd_next(_self_)))._field_tokens;
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _2547_stTokens = _1aa8690b5_getBlockExpr(&(_2417_tokens));;
	if ((_2547_stTokens.len() > 0LL)) {
		jule::Ptr<_1aa84eed0_stmt> _2568_stmt = jule::new_ptr<_1aa84eed0_stmt>(_1aa84eed0_stmt{._field_tokens=_2547_stTokens, ._field_terminated=(*((*(_23739_s))))._field_terminated});;
		(*_2427_kind.alloc)._field_NextToken=_2547_stTokens[0LL];
		(*_2427_kind.alloc)._field_Next=_1aa85c3e9_buildSt(_self_, &(_2568_stmt));
	};
	jule::I32 _2647_i = _2547_stTokens.len();;
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _2657_blockTokens = _1aa86c5a2_range(&(_2647_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_2417_tokens));;
	if ((_2657_blockTokens == nullptr)) {
		_1aa851025_stop(_self_);
		_1aa851b3b_pushErr(_self_, (*_2387_it.alloc)._field_Token, jule::Str::lit("body is not exist", 17));
		_1aa851e9e_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_2647_i < _2417_tokens.len())) {
		_1aa851b3b_pushErr(_self_, _2417_tokens[_2647_i], jule::Str::lit("invalid syntax", 14));
	};
	(*_2387_it.alloc)._field_Scope=_1aa8528d9_buildScope(_self_, &(_2657_blockTokens), _2417_tokens[(_2647_i - 1LL)]);
	(*_2387_it.alloc)._field_Kind=jule::Any(_2427_kind, &__jule_any_type44);
	return _2387_it;;
}



inline jule::Ptr<_1aa30e96d_WhileKind> _1aa8536ed_buildWhileIterKind(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _28239_tokens) {
	return jule::new_ptr<_1aa30e96d_WhileKind>(_1aa30e96d_WhileKind{._field_Expr=_1aa870088_buildExpr((*(_self_))._field_p, _28239_tokens), ._field_Next=jule::Any(nullptr), ._field_NextToken=jule::Ptr<_1aa2d51c4_Token>(nullptr)});;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>> _1aa853a3e_getRangeKindKeysTokens(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _28843_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>> _2897_vars;
	jule::Slice<_1ada72b17_Log> _28913_errs;
	({
		__jule_tuple_ssx_1aa2d51c4_Token__jule_tuple_s_1ada72b17_Log __jule_assign_result = _1aa86cd22_parts(_28843_toks, static_cast<jule::U32>(5LLU), true);
		_2897_vars = __jule_assign_result.__jule_result_arg0;
		_28913_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_28913_errs);
	return _2897_vars;;
}



inline jule::Ptr<_1aa30d4e9_VarDecl> _1aa853d80_buildRangeKindKey(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _29438_tokens) {
	if (((*(_29438_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1aa30d4e9_VarDecl> _2987_key = jule::new_ptr<_1aa30d4e9_VarDecl>(_1aa30d4e9_VarDecl{._field_Scope=jule::Ptr<_1aa30a6a0_ScopeTree>(nullptr), ._field_Token=(*(_29438_tokens))[0LL], ._field_Setter=(*(_29438_tokens))[0LL], ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Public=false, ._field_Mutable=false, ._field_Constant=false, ._field_Statically=false, ._field_Reference=false, ._field_Directives=jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1aa2ee9b3_Expr>(nullptr)});;
	if (((*((*(_2987_key))._field_Token))._field_Id == static_cast<jule::U32>(32LLU))) {
		(*_2987_key.alloc)._field_Mutable=true;
		if (((*(_29438_tokens)).len() == 1LL)) {
			_1aa851b3b_pushErr(_self_, (*_2987_key.alloc)._field_Token, jule::Str::lit("invalid syntax", 14));
		};
		(*_2987_key.alloc)._field_Token=(*(_29438_tokens))[1LL];
	} else if (((*(_29438_tokens)).len() > 1LL)) {
		_1aa851b3b_pushErr(_self_, (*(_29438_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	if (((*((*(_2987_key))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1aa851b3b_pushErr(_self_, (*_2987_key.alloc)._field_Token, jule::Str::lit("invalid syntax", 14));
		_1aa851e9e_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_2987_key.alloc)._field_Ident=(*(*(_2987_key))._field_Token.alloc)._field_Kind;
	return _2987_key;;
}



inline jule::Slice<jule::Ptr<_1aa30d4e9_VarDecl>> _1aa8541c1_buildRangeKindKeys(_1aa850871_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>>* _32039_parts) {
	jule::Slice<jule::Ptr<_1aa30d4e9_VarDecl>> _32111_keys = nullptr;;
	{
		auto expr = _32039_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd061a53:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _32215_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_1aa30d4e9_VarDecl>> &__jule_push_dest = _32111_keys; __jule_push_dest.push(_1aa853d80_buildRangeKindKey(_self_, &(_32215_tokens))); };
			}
			_iter_next_1bd061a53:;
			++it;
			goto _iter_begin_1bd061a53;
		}
		_iter_end_1bd061a53:;
	};
	return _32111_keys;;
}



inline void _1aa854534_setupRangeKindKeysPlain(_1aa850871_scopeParser* _self_, jule::Ptr<_1aa310375_RangeKind>* _32844_rng, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _32866_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>> _3297_keyTokens = _1aa853a3e_getRangeKindKeysTokens(_self_, _32866_tokens);;
	if ((_3297_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_3297_keyTokens.len() > 2LL)) {
		_1aa851b3b_pushErr(_self_, (*((*(_32844_rng))))._field_InToken, jule::Str::lit("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1aa30d4e9_VarDecl>> _3367_keys = _1aa8541c1_buildRangeKindKeys(_self_, &(_3297_keyTokens));;
	(*((*(_32844_rng))))._field_KeyA=_3367_keys[0LL];
	if ((_3367_keys.len() > 1LL)) {
		(*((*(_32844_rng))))._field_KeyB=_3367_keys[1LL];
	};
}



inline void _1aa854897_setupRangeKindKeysExplicit(_1aa850871_scopeParser* _self_, jule::Ptr<_1aa310375_RangeKind>* _34347_rng, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _34369_tokens) {
	jule::I32 _3447_i = 0LL;;
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _3457_rang = _1aa86c5a2_range(&(_3447_i), static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), _34369_tokens);;
	if ((_3447_i < (*(_34369_tokens)).len())) {
		_1aa851b3b_pushErr(_self_, (*((*(_34347_rng))))._field_InToken, jule::Str::lit("invalid syntax", 14));
	};
	_1aa854534_setupRangeKindKeysPlain(_self_, _34347_rng, &(_3457_rang));
}



inline void _1aa854c0a_setupRangeKindKeys(_1aa850871_scopeParser* _self_, jule::Ptr<_1aa310375_RangeKind>* _35239_rng, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _35261_tokens) {
	if (((*((*(_35261_tokens))[0LL]))._field_Id == static_cast<jule::U32>(74LLU))) {
		_1aa854897_setupRangeKindKeysExplicit(_self_, _35239_rng, _35261_tokens);
		return;;
	};
	_1aa854534_setupRangeKindKeysPlain(_self_, _35239_rng, _35261_tokens);
}



inline jule::Ptr<_1aa310375_RangeKind> _1aa8551b1_buildRangeIterKind(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _36039_var_tokens, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _3618_exprTokens, jule::Ptr<_1aa2d51c4_Token>* _36135_inToken) {
	jule::Ptr<_1aa310375_RangeKind> _3627_rng = jule::new_ptr<_1aa310375_RangeKind>(_1aa310375_RangeKind{._field_InToken=(*(_36135_inToken)), ._field_Expr=jule::Ptr<_1aa2ee9b3_Expr>(nullptr), ._field_KeyA=jule::Ptr<_1aa30d4e9_VarDecl>(nullptr), ._field_KeyB=jule::Ptr<_1aa30d4e9_VarDecl>(nullptr)});;
	if (((*(_3618_exprTokens)).len() == 0LL)) {
		_1aa851b3b_pushErr(_self_, (*(_3627_rng))._field_InToken, jule::Str::lit("expression missing", 18));
		return _3627_rng;;
	};
	(*_3627_rng.alloc)._field_Expr=_1aa870088_buildExpr((*(_self_))._field_p, _3618_exprTokens);
	if (((*(_36039_var_tokens)).len() > 0LL)) {
		_1aa854c0a_setupRangeKindKeys(_self_, &(_3627_rng), _36039_var_tokens);
	};
	return _3627_rng;;
}



inline jule::Any _1aa8555ac_buildCommonIterKind(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _37640_tokens, jule::Ptr<_1aa2d51c4_Token>* _37659_err_tok) {
	jule::I32 _3777_braceN = 0LL;;
	{
		auto expr = _37640_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd06b420:;
		if (it != expr_end) {
			jule::I32 _3788_i = it - expr->begin();
			jule::Ptr<_1aa2d51c4_Token> _37815_tok = *it;
			{
				{
					auto &_match_expr{ (*(_37815_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1bd06bdc1:;
						{
							(_3777_braceN)++;
							goto _iter_next_1bd06b420;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1bd06c29a:;
						{
							(_3777_braceN)--;
						}
					}
					_match_end_1bd06c1ac:;
				};
				if ((_3777_braceN != 0LL)) {
					goto _iter_next_1bd06b420;
				};
				{
					auto &_match_expr{ (*(_37815_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(12LLU)) {
						_case_begin_1bd06d356:;
						{
							jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _3959_declTokens = (*(_37640_tokens)).slice(0LL, _3788_i);;
							jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _3969_exprTokens = (*(_37640_tokens)).slice((_3788_i + 1LL));;
							return jule::Any(_1aa8551b1_buildRangeIterKind(_self_, &(_3959_declTokens), &(_3969_exprTokens), &(_37815_tok)), &__jule_any_type46);;
						}
					}
					_match_end_1bd06d983:;
				};
			}
			_iter_next_1bd06b420:;
			++it;
			_3788_i++;
			goto _iter_begin_1bd06b420;
		}
		_iter_end_1bd06b420:;
	};
	return jule::Any(_1aa8536ed_buildWhileIterKind(_self_, _37640_tokens), &__jule_any_type44);;
}



inline jule::Ptr<_1aa30e143_Iter> _1aa8558ed_buildCommonIter(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _40335_tokens) {
	jule::Ptr<_1aa30e143_Iter> _4047_it = jule::new_ptr<_1aa30e143_Iter>(_1aa30e143_Iter{._field_Comptime=false, ._field_Token=_40335_tokens[0LL], ._field_Kind=jule::Any(nullptr), ._field_Scope=jule::Ptr<_1aa30a6a0_ScopeTree>(nullptr)});;
	(_40335_tokens).mut_slice(1LL);;
	if ((_40335_tokens.len() == 0LL)) {
		_1aa851025_stop(_self_);
		_1aa851b3b_pushErr(_self_, (*(_4047_it))._field_Token, jule::Str::lit("body is not exist", 17));
		_1aa851e9e_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _4147_exprTokens = _1aa8690b5_getBlockExpr(&(_40335_tokens));;
	if ((_4147_exprTokens.len() > 0LL)) {
		(*_4047_it.alloc)._field_Kind=_1aa8555ac_buildCommonIterKind(_self_, &(_4147_exprTokens), &((*_4047_it.alloc)._field_Token));
	};
	jule::I32 _4187_i = _4147_exprTokens.len();;
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _4197_scopeTokens = _1aa86c5a2_range(&(_4187_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_40335_tokens));;
	if ((_4197_scopeTokens == nullptr)) {
		_1aa851025_stop(_self_);
		_1aa851b3b_pushErr(_self_, (*_4047_it.alloc)._field_Token, jule::Str::lit("body is not exist", 17));
		_1aa851e9e_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_4187_i < _40335_tokens.len())) {
		_1aa851b3b_pushErr(_self_, _40335_tokens[_4187_i], jule::Str::lit("invalid syntax", 14));
	};
	(*_4047_it.alloc)._field_Scope=_1aa8528d9_buildScope(_self_, &(_4197_scopeTokens), _40335_tokens[(_4187_i - 1LL)]);
	return _4047_it;;
}



inline jule::Ptr<_1aa30e143_Iter> _1aa855c3e_buildIterSt(_1aa850871_scopeParser* _self_, jule::Ptr<_1aa84eed0_stmt>* _43332_st) {
	if ((*((*(_43332_st))))._field_terminated) {
		return _1aa8533ac_buildWhileNextIter(_self_, _43332_st);;
	};
	return _1aa8558ed_buildCommonIter(_self_, (*((*(_43332_st))))._field_tokens);;
}



inline jule::Ptr<_1aa31074e_BreakSt> _1aa856080_buildBreakSt(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _44033_tokens) {
	jule::Ptr<_1aa31074e_BreakSt> _4417_brk = jule::new_ptr<_1aa31074e_BreakSt>(_1aa31074e_BreakSt{._field_Token=(*(_44033_tokens))[0LL], ._field_Label=jule::Ptr<_1aa2d51c4_Token>(nullptr)});;
	if (((*(_44033_tokens)).len() > 1LL)) {
		if (((*((*(_44033_tokens))[1LL]))._field_Id != static_cast<jule::U32>(1LLU))) {
			_1aa851b3b_pushErr(_self_, (*(_44033_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_1aa851e9e_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_4417_brk))._field_Label=(*(_44033_tokens))[1LL];
			if (((*(_44033_tokens)).len() > 2LL)) {
				_1aa851b3b_pushErr(_self_, (*(_44033_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _4417_brk;;
}



inline jule::Ptr<_1aa310b28_ContSt> _1aa8563c1_buildContSt(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _45832_tokens) {
	jule::Ptr<_1aa310b28_ContSt> _4597_cont = jule::new_ptr<_1aa310b28_ContSt>(_1aa310b28_ContSt{._field_Token=(*(_45832_tokens))[0LL], ._field_Label=jule::Ptr<_1aa2d51c4_Token>(nullptr)});;
	if (((*(_45832_tokens)).len() > 1LL)) {
		if (((*((*(_45832_tokens))[1LL]))._field_Id != static_cast<jule::U32>(1LLU))) {
			_1aa851b3b_pushErr(_self_, (*(_45832_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_1aa851e9e_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_4597_cont))._field_Label=(*(_45832_tokens))[1LL];
			if (((*(_45832_tokens)).len() > 2LL)) {
				_1aa851b3b_pushErr(_self_, (*(_45832_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _4597_cont;;
}



inline jule::Ptr<_1aa3110ce_If> _1aa856712_buildIf(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _47628_tokens) {
	jule::Ptr<_1aa3110ce_If> _4777_model = jule::new_ptr<_1aa3110ce_If>(_1aa3110ce_If{._field_Token=(*(_47628_tokens))[0LL], ._field_Expr=jule::Ptr<_1aa2ee9b3_Expr>(nullptr), ._field_Scope=jule::Ptr<_1aa30a6a0_ScopeTree>(nullptr)});;
	((*(_47628_tokens))).mut_slice(1LL);;
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _4817_exprTokens = _1aa8690b5_getBlockExpr(_47628_tokens);;
	jule::I32 _4827_i = 0LL;;
	if ((_4817_exprTokens.len() == 0LL)) {
		_1aa851b3b_pushErr(_self_, (*(_4777_model))._field_Token, jule::Str::lit("expression missing", 18));
	} else {
		_4827_i=_4817_exprTokens.len();
	};
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _4887_scopeTokens = _1aa86c5a2_range(&(_4827_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _47628_tokens);;
	if ((_4887_scopeTokens == nullptr)) {
		_1aa851025_stop(_self_);
		_1aa851b3b_pushErr(_self_, (*(_4777_model))._field_Token, jule::Str::lit("body is not exist", 17));
		_1aa851e9e_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa2d51c4_Token> _4957_end = (*(_47628_tokens))[(_4827_i - 1LL)];;
	if ((_4827_i < (*(_47628_tokens)).len())) {
		if (((*((*(_47628_tokens))[_4827_i]))._field_Id == static_cast<jule::U32>(14LLU))) {
			((*(_47628_tokens))).mut_slice(_4827_i);;
		} else {
			_1aa851b3b_pushErr(_self_, (*(_47628_tokens))[_4827_i], jule::Str::lit("invalid syntax", 14));
			(*(_47628_tokens))=nullptr;
		};
	};
	(*_4777_model.alloc)._field_Expr=_1aa870088_buildExpr((*(_self_))._field_p, &(_4817_exprTokens));
	(*_4777_model.alloc)._field_Scope=_1aa8528d9_buildScope(_self_, &(_4887_scopeTokens), _4957_end);
	return _4777_model;;
}



inline jule::Ptr<_1aa3114a8_Else> _1aa856a53_buildElse(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _50930_tokens) {
	jule::Ptr<_1aa3114a8_Else> _5107_els = jule::new_ptr<_1aa3114a8_Else>(_1aa3114a8_Else{._field_Token=(*(_50930_tokens))[0LL], ._field_Scope=jule::Ptr<_1aa30a6a0_ScopeTree>(nullptr)});;
	((*(_50930_tokens))).mut_slice(1LL);;
	jule::I32 _5147_i = 0LL;;
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _5157_scopeTokens = _1aa86c5a2_range(&(_5147_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _50930_tokens);;
	if ((_5157_scopeTokens == nullptr)) {
		if ((_5147_i < (*(_50930_tokens)).len())) {
			_1aa851b3b_pushErr(_self_, (*(_5107_els))._field_Token, jule::Str::lit("else's cannot have any expression", 33));
		} else {
			_1aa851025_stop(_self_);
			_1aa851b3b_pushErr(_self_, (*(_5107_els))._field_Token, jule::Str::lit("body is not exist", 17));
			_1aa851e9e_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_5147_i < (*(_50930_tokens)).len())) {
		_1aa851b3b_pushErr(_self_, (*(_50930_tokens))[_5147_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_5107_els))._field_Scope=_1aa8528d9_buildScope(_self_, &(_5157_scopeTokens), (*(_50930_tokens))[(_5147_i - 1LL)]);
	return _5107_els;;
}



inline jule::Ptr<_1aa31195e_Conditional> _1aa856d94_buildIfElseChain(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _53336_tokens) {
	jule::Ptr<_1aa31195e_Conditional> _5347_chain = jule::new_ptr<_1aa31195e_Conditional>(_1aa31195e_Conditional{._field_Head=_1aa856712_buildIf(_self_, &(_53336_tokens)), ._field_Tail=jule::Slice<jule::Ptr<_1aa3110ce_If>>(nullptr), ._field_Default=jule::Ptr<_1aa3114a8_Else>(nullptr)});;
	if (((*(_5347_chain))._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53336_tokens.len() != 0LL)) {
		{
			if (((*(_53336_tokens[0LL]))._field_Id != static_cast<jule::U32>(14LLU))) {
				goto _iter_end_1bc6cb9e8;
			};
			if (((_53336_tokens.len() > 1LL) && ((*(_53336_tokens[1LL]))._field_Id == static_cast<jule::U32>(13LLU)))) {
				(_53336_tokens).mut_slice(1LL);;
				jule::Ptr<_1aa3110ce_If> _5469_elif = _1aa856712_buildIf(_self_, &(_53336_tokens));;
				(*_5347_chain.alloc)._field_Tail=jule::append((*_5347_chain.alloc)._field_Tail,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa3110ce_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5469_elif; __jule_collection; }));
				goto _iter_next_1bc6cb9e8;
			};
			(*_5347_chain.alloc)._field_Default=_1aa856a53_buildElse(_self_, &(_53336_tokens));
			goto _iter_end_1bc6cb9e8;
		}
	_iter_next_1bc6cb9e8:;
	}
	_iter_end_1bc6cb9e8:;;
	return _5347_chain;;
}



inline jule::Ptr<_1aa2ee9b3_Expr> _1aa8571d5_buildCoCallSt(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _55633_tokens) {
	jule::Ptr<_1aa2d51c4_Token> _5573_token = _55633_tokens[0LL];;
	(_55633_tokens).mut_slice(1LL);;
	jule::Ptr<_1aa2ee9b3_Expr> _5597_e = _1aa870088_buildExpr((*(_self_))._field_p, &(_55633_tokens));;
	if ((_5597_e == nullptr)) {
		return _5597_e;;
	};
	{
		auto &_match_expr{ (*(_5597_e))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1bc6d1657:;
			{
				(*((*(_5597_e))._field_Kind.unsafe_cast_ptr<_1aa3036dc_FnCallExpr>()))._field_IsCo=true;
			}
		}
		else {
			_case_begin_1bc6d115c:;
			{
				_1aa851b3b_pushErr(_self_, _5573_token, jule::Str::lit("statement must have function call expression", 44));
			}
		}
		_match_end_1bc6d1107:;
	};
	return _5597_e;;
}



inline jule::Ptr<_1aa30813c_GotoSt> _1aa857526_buildGotoSt(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _57232_tokens) {
	jule::Ptr<_1aa30813c_GotoSt> _5737_gt = jule::new_ptr<_1aa30813c_GotoSt>(_1aa30813c_GotoSt{._field_Token=(*(_57232_tokens))[0LL], ._field_Label=jule::Ptr<_1aa2d51c4_Token>(nullptr)});;
	if (((*(_57232_tokens)).len() == 1LL)) {
		_1aa851b3b_pushErr(_self_, (*(_5737_gt))._field_Token, jule::Str::lit("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if (((*(_57232_tokens)).len() > 2LL)) {
		_1aa851b3b_pushErr(_self_, (*(_57232_tokens))[2LL], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_1aa2d51c4_Token> _5827_identToken = (*(_57232_tokens))[1LL];;
	if (((*(_5827_identToken))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1aa851b3b_pushErr(_self_, _5827_identToken, jule::Str::lit("invalid syntax", 14));
		_1aa851e9e_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return _5737_gt;;
	};
	(*(_5737_gt))._field_Label=_5827_identToken;
	return _5737_gt;;
}



inline jule::Ptr<_1aa308439_FallSt> _1aa857867_buildFallSt(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _59232_tokens) {
	jule::Ptr<_1aa308439_FallSt> _5937_fll = jule::new_ptr<_1aa308439_FallSt>(_1aa308439_FallSt{._field_Token=(*(_59232_tokens))[0LL]});;
	if (((*(_59232_tokens)).len() > 1LL)) {
		_1aa851b3b_pushErr(_self_, (*(_59232_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	return _5937_fll;;
}



inline jule::Ptr<_1aa31219b_TypeAliasDecl> _1aa857ba8_buildTypeAliasSt(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _60237_tokens) {
	jule::Ptr<_1aa31219b_TypeAliasDecl> _6037_tad = _1aa87182b_buildTypeAliasDecl((*(_self_))._field_p, _60237_tokens);;
	(*(_6037_tad))._field_Scope=(*(_self_))._field_s;
	return _6037_tad;;
}



inline void _1aa858181_pushCaseExpr(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _60832_tokens, jule::Ptr<_1aa2d51c4_Token> _60854_token, jule::Bool _6093_typeMatch, jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>>* _60925_exprs) {
	if ((_60832_tokens.len() == 0LL)) {
		return;;
	};
	if (_6093_typeMatch) {
		jule::I32 _6148_i = 0LL;;
		jule::Ptr<_1aa2ea67e_TypeDecl> _6158_t;
		jule::Bool _61511_ok;
		({
			__jule_tuple_x_1aa2ea67e_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa8714da_buildType((*(_self_))._field_p, &(_60832_tokens), (&(_6148_i)), true);
			_6158_t = __jule_assign_result.__jule_result_arg0;
			_61511_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_61511_ok) {
			{ jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>> &__jule_push_dest = (*(_60925_exprs)); __jule_push_dest.push(jule::new_ptr<_1aa2ee9b3_Expr>(_1aa2ee9b3_Expr{._field_Token=_60832_tokens[0LL], ._field_End=_60832_tokens[(_60832_tokens.len() - 1LL)], ._field_Kind=jule::Any(_6158_t, &__jule_any_type92)})); };
			if ((_6148_i < _60832_tokens.len())) {
				_1aa851b3b_pushErr(_self_, _60832_tokens[_6148_i], jule::Str::lit("invalid syntax", 14));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>> &__jule_push_dest = (*(_60925_exprs)); __jule_push_dest.push(_1aa870088_buildExpr((*(_self_))._field_p, &(_60832_tokens))); };
}



inline __jule_tuple_sx_1aa2ee9b3_Expr__jule_tuple_bool _1aa858637_buildCaseExprs(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _63135_tokens, jule::Ptr<_1aa2d51c4_Token>* _63158_colon, jule::Bool _63173_typeMatch) {
	__jule_tuple_sx_1aa2ee9b3_Expr__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>> _6327_exprs = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa2ee9b3_Expr>(nullptr); __jule_collection; });;
	jule::I32 _6337_braceN = 0LL;;
	jule::I32 _6347_j = 0LL;;
	{
		auto expr = _63135_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc6dc5db:;
		if (it != expr_end) {
			jule::I32 _6358_i = it - expr->begin();
			jule::Ptr<_1aa2d51c4_Token> _63515_tok = *it;
			{
				{
					auto &_match_expr{ (*(_63515_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1bc6dd93e:;
						{
							(_6337_braceN)++;
							goto _iter_next_1bc6dc5db;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(75LLU) || _match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU)) {
						_case_begin_1bc6ddd18:;
						{
							(_6337_braceN)--;
							goto _iter_next_1bc6dc5db;
						}
					}
					_match_end_1bc6ddc2a:;
				};
				if ((_6337_braceN != 0LL)) {
					goto _iter_next_1bc6dc5db;
				};
				{
					
					if (((*(_63515_tok))._field_Id == static_cast<jule::U32>(66LLU))) {
						_case_begin_1bc6e049b:;
						{
							jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _6545_exprTokens = (*(_63135_tokens)).slice(_6347_j, _6358_i);;
							if ((_6545_exprTokens.len() == 0LL)) {
								_1aa851b3b_pushErr(_self_, _63515_tok, jule::Str::lit("expression missing", 18));
							} else {
								_1aa858181_pushCaseExpr(_self_, (*(_63135_tokens)).slice(_6347_j, _6358_i), _63515_tok, _63173_typeMatch, &(_6327_exprs));
							};
							_6347_j=(_6358_i + 1LL);
						}
					}
					else if (((*(_63515_tok))._field_Id == static_cast<jule::U32>(8LLU))) {
						_case_begin_1bc6e0512:;
						{
							(*(_63158_colon))=_63515_tok;
							_1aa858181_pushCaseExpr(_self_, (*(_63135_tokens)).slice(_6347_j, _6358_i), _63515_tok, _63173_typeMatch, &(_6327_exprs));
							((*(_63135_tokens))).mut_slice((_6358_i + 1LL));;
							__jule_func_result.__jule_result_arg0 = _6327_exprs;
							__jule_func_result.__jule_result_arg1 = (((_6358_i - _6347_j) == 0LL) || (_6327_exprs.len() != 0LL));
							return __jule_func_result;;
						}
					}
					_match_end_1bc6deec3:;
				};
			}
			_iter_next_1bc6dc5db:;
			++it;
			_6358_i++;
			goto _iter_begin_1bc6dc5db;
		}
		_iter_end_1bc6dc5db:;
	};
	_1aa851b3b_pushErr(_self_, (*(_63135_tokens))[0LL], jule::Str::lit("invalid syntax", 14));
	(*(_63135_tokens))=nullptr;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline jule::Ptr<_1aa30a6a0_ScopeTree> _1aa858978_buildCaseScope(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _67335_tokens) {
	jule::I32 _6747_n = 0LL;;
	for (;;) {
		{
			jule::I32 _6768_i = 0LL;;
			jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _6778_next;
			({
				__jule_tuple_sx_1aa2d51c4_Token__jule_tuple_bool __jule_assign_result = _1aa84eba0_skipSt(&(_6768_i), (*(_67335_tokens)).slice(_6747_n));
				_6778_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_6778_next.len() == 0LL)) {
				goto _iter_end_1bc6e40a4;
			};
			jule::Ptr<_1aa2d51c4_Token> _6814_tok = _6778_next[0LL];;
			if (((*(_6814_tok))._field_Id != static_cast<jule::U32>(66LLU))) {
				_6747_n+=_6768_i;
				goto _iter_next_1bc6e40a4;
			};
			jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _6868_scopeTokens = (*(_67335_tokens)).slice(0LL, _6747_n);;
			jule::Ptr<_1aa30a6a0_ScopeTree> _6878_scope = _1aa8528d9_buildScope(_self_, &(_6868_scopeTokens), (*(_67335_tokens))[_6747_n]);;
			((*(_67335_tokens))).mut_slice(_6747_n);;
			return _6878_scope;;
		}
	_iter_next_1bc6e40a4:;
	}
	_iter_end_1bc6e40a4:;;
	jule::Ptr<_1aa2d51c4_Token> _69111_end;;
	if (((*(_67335_tokens)).len() > 0LL)) {
		_69111_end=(*(_67335_tokens))[((*(_67335_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1aa30a6a0_ScopeTree> _6957_scope = _1aa8528d9_buildScope(_self_, _67335_tokens, _69111_end);;
	(*(_67335_tokens))=nullptr;
	return _6957_scope;;
}



inline __jule_tuple_x_1aa312652_Case__jule_tuple_bool _1aa858d74_buildCase(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _70030_tokens, jule::Bool _70048_typeMatch) {
	__jule_tuple_x_1aa312652_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1aa312652_Case> _7017_c = jule::new_ptr<_1aa312652_Case>(_1aa312652_Case{._field_Token=(*(_70030_tokens))[0LL], ._field_Scope=jule::Ptr<_1aa30a6a0_ScopeTree>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>>(nullptr)});;
	((*(_70030_tokens))).mut_slice(1LL);;
	jule::Ptr<_1aa2d51c4_Token> _70511_colon = nullptr;;
	jule::Bool _70612_ok;
	({
		__jule_tuple_sx_1aa2ee9b3_Expr__jule_tuple_bool __jule_assign_result = _1aa858637_buildCaseExprs(_self_, _70030_tokens, &(_70511_colon), _70048_typeMatch);
		(*(_7017_c))._field_Exprs = __jule_assign_result.__jule_result_arg0;
		_70612_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*_7017_c.alloc)._field_Scope=_1aa858978_buildCaseScope(_self_, _70030_tokens);
	if (((*((*_7017_c.alloc)._field_Scope))._field_End == nullptr)) {
		(*(*(_7017_c))._field_Scope.alloc)._field_End=_70511_colon;
	};
	jule::Bool _7113_isDefault = (_70612_ok && ((*_7017_c.alloc)._field_Exprs.len() == 0LL));;
	__jule_func_result.__jule_result_arg0 = _7017_c;
	__jule_func_result.__jule_result_arg1 = _7113_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1aa312652_Case__jule_tuple_x_1aa3114a8_Else _1aa859270_buildCases(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _71530_tokens, jule::Bool _71548_typeMatch) {
	__jule_tuple_sx_1aa312652_Case__jule_tuple_x_1aa3114a8_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1aa312652_Case>> _71611_cases = nullptr;;
	jule::Ptr<_1aa3114a8_Else> _71711_def = nullptr;;
	jule::Bool _7187_defNotLast = false;;
	while ((_71530_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1aa2d51c4_Token> _7208_tok = _71530_tokens[0LL];;
			if (((*(_7208_tok))._field_Id != static_cast<jule::U32>(66LLU))) {
				_1aa851b3b_pushErr(_self_, _7208_tok, jule::Str::lit("invalid syntax", 14));
				goto _iter_end_1bc6ec662;
			};
			jule::Ptr<_1aa312652_Case> _7258_c;
			jule::Bool _72511_isDefault;
			({
				__jule_tuple_x_1aa312652_Case__jule_tuple_bool __jule_assign_result = _1aa858d74_buildCase(_self_, &(_71530_tokens), _71548_typeMatch);
				_7258_c = __jule_assign_result.__jule_result_arg0;
				_72511_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72511_isDefault) {
				(*(_7258_c))._field_Token=_7208_tok;
				if ((_71711_def == nullptr)) {
					_71711_def=jule::new_ptr<_1aa3114a8_Else>(_1aa3114a8_Else{._field_Token=(*_7258_c.alloc)._field_Token, ._field_Scope=(*_7258_c.alloc)._field_Scope});
				} else {
					_1aa851b3b_pushErr(_self_, _7208_tok, jule::Str::lit("invalid syntax", 14));
				};
			} else {
				_7187_defNotLast=(_7187_defNotLast || (_71711_def != nullptr));
				{ jule::Slice<jule::Ptr<_1aa312652_Case>> &__jule_push_dest = _71611_cases; __jule_push_dest.push(_7258_c); };
			};
		}
	_iter_next_1bc6ec662:;
	}
	_iter_end_1bc6ec662:;;
	if (_7187_defNotLast) {
		_1aa851b3b_pushErr(_self_, (*(_71711_def))._field_Token, jule::Str::lit("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71611_cases;
	__jule_func_result.__jule_result_arg1 = _71711_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1aa312e6b_MatchCase> _1aa8595b1_buildMatchCase(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _74934_tokens) {
	jule::Ptr<_1aa312e6b_MatchCase> _7507_m = jule::new_ptr<_1aa312e6b_MatchCase>(_1aa312e6b_MatchCase{._field_Comptime=false, ._field_Token=_74934_tokens[0LL], ._field_End=jule::Ptr<_1aa2d51c4_Token>(nullptr), ._field_TypeMatch=false, ._field_Expr=jule::Ptr<_1aa2ee9b3_Expr>(nullptr), ._field_Cases=jule::Slice<jule::Ptr<_1aa312652_Case>>(nullptr), ._field_Default=jule::Ptr<_1aa3114a8_Else>(nullptr)});;
	(_74934_tokens).mut_slice(1LL);;
	if (((_74934_tokens.len() > 0LL) && ((*(_74934_tokens[0LL]))._field_Id == static_cast<jule::U32>(7LLU)))) {
		(*(_7507_m))._field_TypeMatch=true;
		(_74934_tokens).mut_slice(1LL);;
	};
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _7607_exprTokens = _1aa8690b5_getBlockExpr(&(_74934_tokens));;
	if ((_7607_exprTokens.len() > 0LL)) {
		(*_7507_m.alloc)._field_Expr=_1aa870088_buildExpr((*(_self_))._field_p, &(_7607_exprTokens));
	} else if ((*_7507_m.alloc)._field_TypeMatch) {
		_1aa851b3b_pushErr(_self_, (*_7507_m.alloc)._field_Token, jule::Str::lit("expression missing", 18));
	};
	jule::I32 _7677_i = _7607_exprTokens.len();;
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _7687_blockToks = _1aa86c5a2_range(&(_7677_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_74934_tokens));;
	if ((_7687_blockToks == nullptr)) {
		_1aa851025_stop(_self_);
		_1aa851b3b_pushErr(_self_, (*_7507_m.alloc)._field_Token, jule::Str::lit("body is not exist", 17));
		_1aa851e9e_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_7677_i < _74934_tokens.len())) {
		_1aa851b3b_pushErr(_self_, _74934_tokens[_7677_i], jule::Str::lit("invalid syntax", 14));
	};
	(*_7507_m.alloc)._field_End=_74934_tokens[(_7677_i - 1LL)];
	({
		__jule_tuple_sx_1aa312652_Case__jule_tuple_x_1aa3114a8_Else __jule_assign_result = _1aa859270_buildCases(_self_, _7687_blockToks, (*_7507_m.alloc)._field_TypeMatch);
		(*_7507_m.alloc)._field_Cases = __jule_assign_result.__jule_result_arg0;
		(*_7507_m.alloc)._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _7507_m;;
}



inline jule::Ptr<_1aa30a6a0_ScopeTree> _1aa859902_buildScopeSt(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _78232_tokens) {
	jule::Bool _7837_isUnsafe = false;;
	jule::Bool _7847_isDeferred = false;;
	jule::Ptr<_1aa2d51c4_Token> _7857_token = _78232_tokens[0LL];;
	if (((*(_7857_token))._field_Id == static_cast<jule::U32>(31LLU))) {
		_7837_isUnsafe=true;
		(_78232_tokens).mut_slice(1LL);;
		if ((_78232_tokens.len() == 0LL)) {
			_1aa851b3b_pushErr(_self_, _7857_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
		_7857_token=_78232_tokens[0LL];
		if (((*_7857_token.alloc)._field_Id == static_cast<jule::U32>(33LLU))) {
			_7847_isDeferred=true;
			(_78232_tokens).mut_slice(1LL);;
			if ((_78232_tokens.len() == 0LL)) {
				_1aa851b3b_pushErr(_self_, _7857_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if (((*(_7857_token))._field_Id == static_cast<jule::U32>(33LLU))) {
		_7847_isDeferred=true;
		(_78232_tokens).mut_slice(1LL);;
		if ((_78232_tokens.len() == 0LL)) {
			_1aa851b3b_pushErr(_self_, _7857_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I32 _8117_i = 0LL;;
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _8127_scopeTokens = _1aa86c5a2_range(&(_8117_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_78232_tokens));;
	if ((_8127_scopeTokens == nullptr)) {
		_1aa851b3b_pushErr(_self_, _7857_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	} else if ((_8117_i < _78232_tokens.len())) {
		_1aa851b3b_pushErr(_self_, _78232_tokens[_8117_i], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_1aa30a6a0_ScopeTree> _8197_scope = _1aa8528d9_buildScope(_self_, &(_8127_scopeTokens), _78232_tokens[(_8117_i - 1LL)]);;
	(*(_8197_scope))._field_Unsafety=_7837_isUnsafe;
	(*_8197_scope.alloc)._field_Deferred=_7847_isDeferred;
	return _8197_scope;;
}



inline jule::Ptr<_1aa307c63_LabelSt> _1aa859c43_buildLabelSt(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _82533_tokens) {
	jule::Ptr<_1aa307c63_LabelSt> _8267_lbl = jule::new_ptr<_1aa307c63_LabelSt>(_1aa307c63_LabelSt{._field_Token=(*(_82533_tokens))[0LL], ._field_Ident=(*((*(_82533_tokens))[0LL]))._field_Kind});;
	if (((*(_82533_tokens)).len() > 2LL)) {
		((*(_82533_tokens))).mut_slice(2LL);;
		_1aa852257_insertAsNext(_self_, _82533_tokens);
	};
	return _8267_lbl;;
}



inline __jule_tuple__1aa309cdc_StmtData__jule_tuple_bool _1aa85a084_buildIdSt(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _84030_tokens) {
	__jule_tuple__1aa309cdc_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_84030_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1aa2d51c4_Token> _8457_token = (*(_84030_tokens))[1LL];;
	{
		auto &_match_expr{ (*(_8457_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(8LLU)) {
			_case_begin_1bd1b7ea6:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1aa859c43_buildLabelSt(_self_, _84030_tokens), &__jule_any_type64);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1bd1b8715:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1aa86aa01_assignInfo> _1aa85a3c5_buildAssignInfo(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _85436_tokens) {
	jule::Ptr<_1aa86aa01_assignInfo> _8557_info = jule::new_ptr<_1aa86aa01_assignInfo>(_1aa86aa01_assignInfo{._field_l=jule::Slice<jule::Ptr<_1aa2d51c4_Token>>(nullptr), ._field_r=jule::Slice<jule::Ptr<_1aa2d51c4_Token>>(nullptr), ._field_setter=jule::Ptr<_1aa2d51c4_Token>(nullptr), ._field_ok=true});;
	jule::I32 _8587_braceN = 0LL;;
	{
		auto expr = _85436_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd1b9e53:;
		if (it != expr_end) {
			jule::I32 _8598_i = it - expr->begin();
			jule::Ptr<_1aa2d51c4_Token> _85915_token = *it;
			{
				{
					auto &_match_expr{ (*(_85915_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1bd1ba8d2:;
						{
							(_8587_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1bd1bac89:;
						{
							(_8587_braceN)--;
						}
					}
					_match_end_1bd1bab9b:;
				};
				{
					
					if ((_8587_braceN > 0LL)) {
						_case_begin_1bd1bbe22:;
						{
							goto _iter_next_1bd1b9e53;
						}
					}
					else if (((!(_1aa2da020_IsAssignOp((*(_85915_token))._field_Id))) && ((*_85915_token.alloc)._field_Id != static_cast<jule::U32>(38LLU)))) {
						_case_begin_1bd1bbe88:;
						{
							goto _iter_next_1bd1b9e53;
						}
					}
					_match_end_1bd1bbdbc:;
				};
				(*(_8557_info))._field_l=(*(_85436_tokens)).slice(0LL, _8598_i);
				if (((*_8557_info.alloc)._field_l.len() == 0LL)) {
					(*_8557_info.alloc)._field_ok=false;
				};
				(*_8557_info.alloc)._field_setter=_85915_token;
				if (((_8598_i + 1LL) >= (*(_85436_tokens)).len())) {
					(*_8557_info.alloc)._field_r=nullptr;
					(*_8557_info.alloc)._field_ok=_1aa2d9c56_IsPostfixOp((*((*_8557_info.alloc)._field_setter))._field_Id);
					goto _iter_end_1bd1b9e53;
				};
				(*_8557_info.alloc)._field_r=(*(_85436_tokens)).slice((_8598_i + 1LL));
				if (_1aa2d9c56_IsPostfixOp((*(*(_8557_info))._field_setter.alloc)._field_Id)) {
					if (((*_8557_info.alloc)._field_r.len() > 0LL)) {
						_1aa851b3b_pushErr(_self_, (*(_8557_info))._field_r[0LL], jule::Str::lit("invalid syntax", 14));
						(*_8557_info.alloc)._field_r=nullptr;
					};
				};
				goto _iter_end_1bd1b9e53;
			}
			_iter_next_1bd1b9e53:;
			++it;
			_8598_i++;
			goto _iter_begin_1bd1b9e53;
		}
		_iter_end_1bd1b9e53:;
	};
	return _8557_info;;
}



inline jule::Ptr<_1aa308a99_AssignLeft> _1aa85a716_buildAssignL(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _89933_tokens) {
	jule::Ptr<_1aa308a99_AssignLeft> _9007_l = jule::new_ptr<_1aa308a99_AssignLeft>(_1aa308a99_AssignLeft{._field_Token=(*(_89933_tokens))[0LL], ._field_Mutable=false, ._field_Reference=false, ._field_Ident=jule::Str(), ._field_Expr=jule::Ptr<_1aa2ee9b3_Expr>(nullptr)});;
	if (((*((*(_89933_tokens))[0LL]))._field_Id == static_cast<jule::U32>(1LLU))) {
		(*(_9007_l))._field_Ident=(*((*_9007_l.alloc)._field_Token))._field_Kind;
	};
	(*_9007_l.alloc)._field_Expr=_1aa870088_buildExpr((*(_self_))._field_p, _89933_tokens);
	return _9007_l;;
}



inline jule::Slice<jule::Ptr<_1aa308a99_AssignLeft>> _1aa85aa57_buildAssignLs(_1aa850871_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>>* _91034_parts) {
	jule::Slice<jule::Ptr<_1aa308a99_AssignLeft>> _91111_lefts = nullptr;;
	{
		auto expr = _91034_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd1c4974:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _91215_part = *it;
			{
				jule::Ptr<_1aa308a99_AssignLeft> _9138_l = _1aa85a716_buildAssignL(_self_, &(_91215_part));;
				{ jule::Slice<jule::Ptr<_1aa308a99_AssignLeft>> &__jule_push_dest = _91111_lefts; __jule_push_dest.push(_9138_l); };
			}
			_iter_next_1bd1c4974:;
			++it;
			goto _iter_begin_1bd1c4974;
		}
		_iter_end_1bd1c4974:;
	};
	return _91111_lefts;;
}



inline __jule_tuple__1aa309cdc_StmtData__jule_tuple_bool _1aa85ad98_buildPlainAssign(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _91937_tokens) {
	__jule_tuple__1aa309cdc_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1aa86aa01_assignInfo> _9207_info = _1aa85a3c5_buildAssignInfo(_self_, _91937_tokens);;
	if ((!((*(_9207_info))._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1aa30912c_AssignSt> _9257_assign = jule::new_ptr<_1aa30912c_AssignSt>(_1aa30912c_AssignSt{._field_Declarative=false, ._field_Setter=(*_9207_info.alloc)._field_setter, ._field_Left=jule::Slice<jule::Ptr<_1aa308a99_AssignLeft>>(nullptr), ._field_Right=jule::Ptr<_1aa2ee9b3_Expr>(nullptr)});;
	if (((*((*_9207_info.alloc)._field_setter))._field_Id == static_cast<jule::U32>(38LLU))) {
		(*(_9257_assign))._field_Declarative=true;
		(*_9257_assign.alloc)._field_Right=_1aa870088_buildExpr((*(_self_))._field_p, &((*_9207_info.alloc)._field_r));
		jule::Bool _9334_ok = _1aa85b294_buildDeclAssign1(_self_, &((*_9207_info.alloc)._field_l), &(_9257_assign));;
		if ((!(_9334_ok))) {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		if (((*_9257_assign.alloc)._field_Left.len() > 1LL)) {
			__jule_func_result.__jule_result_arg0 = jule::Any(_9257_assign, &__jule_any_type66);
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		jule::Ptr<_1aa308a99_AssignLeft> _9428_left = (*(_9257_assign))._field_Left[0LL];;
		jule::Ptr<_1aa30d4e9_VarDecl> _9438_decl = jule::new_ptr<_1aa30d4e9_VarDecl>(_1aa30d4e9_VarDecl{._field_Scope=(*(_self_))._field_s, ._field_Token=(*(_9428_left))._field_Token, ._field_Setter=(*_9257_assign.alloc)._field_Setter, ._field_Ident=(*_9428_left.alloc)._field_Ident, ._field_Binded=false, ._field_Public=false, ._field_Mutable=(*_9428_left.alloc)._field_Mutable, ._field_Constant=false, ._field_Statically=false, ._field_Reference=(*_9428_left.alloc)._field_Reference, ._field_Directives=jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr), ._field_Expr=(*_9257_assign.alloc)._field_Right});;
		__jule_func_result.__jule_result_arg0 = jule::Any(_9438_decl, &__jule_any_type16);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>> _9557_parts;
	jule::Slice<_1ada72b17_Log> _95514_errs;
	({
		__jule_tuple_ssx_1aa2d51c4_Token__jule_tuple_s_1ada72b17_Log __jule_assign_result = _1aa86cd22_parts(&((*_9207_info.alloc)._field_l), static_cast<jule::U32>(5LLU), true);
		_9557_parts = __jule_assign_result.__jule_result_arg0;
		_95514_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_95514_errs.len() > 0LL)) {
		(*(*(_self_))._field_p.alloc)._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_95514_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(*_9257_assign.alloc)._field_Left=_1aa85aa57_buildAssignLs(_self_, &(_9557_parts));
	if (((*_9207_info.alloc)._field_r != nullptr)) {
		(*_9257_assign.alloc)._field_Right=_1aa870088_buildExpr((*(_self_))._field_p, &((*_9207_info.alloc)._field_r));
	};
	__jule_func_result.__jule_result_arg0 = jule::Any(_9257_assign, &__jule_any_type66);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _1aa85b294_buildDeclAssign1(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _96937_lefts, jule::Ptr<_1aa30912c_AssignSt>* _96959_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>> _9717_parts;
	jule::Slice<_1ada72b17_Log> _97114_errs;
	({
		__jule_tuple_ssx_1aa2d51c4_Token__jule_tuple_s_1ada72b17_Log __jule_assign_result = _1aa86cd22_parts(_96937_lefts, static_cast<jule::U32>(5LLU), true);
		_9717_parts = __jule_assign_result.__jule_result_arg0;
		_97114_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_97114_errs.len() > 0LL)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_97114_errs);
		return false;;
	};
	{
		auto expr = &(_9717_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd1d074e:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _97715_part = *it;
			{
				jule::Bool _9788_isMut = false;;
				jule::Bool _9798_isRef = false;;
				jule::Ptr<_1aa2d51c4_Token> _9814_token = _97715_part[0LL];;
				if (((*(_9814_token))._field_Id == static_cast<jule::U32>(32LLU))) {
					_9788_isMut=true;
					(_97715_part).mut_slice(1LL);;
					if ((_97715_part.len() == 0LL)) {
						_1aa851b3b_pushErr(_self_, _9814_token, jule::Str::lit("invalid syntax", 14));
						return false;;
					};
				};
				if (((*(_97715_part[0LL]))._field_Id == static_cast<jule::U32>(65LLU))) {
					_9798_isRef=true;
					(_97715_part).mut_slice(1LL);;
					if ((_97715_part.len() == 0LL)) {
						_1aa851b3b_pushErr(_self_, _9814_token, jule::Str::lit("invalid syntax", 14));
						return false;;
					};
				};
				if ((((*(_97715_part[0LL]))._field_Id != static_cast<jule::U32>(1LLU)) && ((*(_97715_part[0LL]))._field_Id != static_cast<jule::U32>(74LLU)))) {
					_1aa851b3b_pushErr(_self_, _9814_token, jule::Str::lit("invalid syntax", 14));
					return false;;
				};
				jule::Ptr<_1aa308a99_AssignLeft> _10058_l = _1aa85a716_buildAssignL(_self_, &(_97715_part));;
				(*(_10058_l))._field_Mutable=_9788_isMut;
				(*_10058_l.alloc)._field_Reference=_9798_isRef;
				{ jule::Slice<jule::Ptr<_1aa308a99_AssignLeft>> &__jule_push_dest = (*((*(_96959_assign))))._field_Left; __jule_push_dest.push(_10058_l); };
			}
			_iter_next_1bd1d074e:;
			++it;
			goto _iter_begin_1bd1d074e;
		}
		_iter_end_1bd1d074e:;
	};
	return true;;
}



inline __jule_tuple_x_1aa30912c_AssignSt__jule_tuple_bool _1aa85b5d5_buildDeclAssign(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _101435_tokens) {
	__jule_tuple_x_1aa30912c_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_101435_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(_101435_tokens).mut_slice(1LL);;
	jule::Ptr<_1aa2d51c4_Token> _10207_token = _101435_tokens[0LL];;
	if (((*(_10207_token))._field_Id != static_cast<jule::U32>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1aa30912c_AssignSt> _10257_assign = jule::new_ptr<_1aa30912c_AssignSt>(_1aa30912c_AssignSt{._field_Declarative=true, ._field_Setter=jule::Ptr<_1aa2d51c4_Token>(nullptr), ._field_Left=jule::Slice<jule::Ptr<_1aa308a99_AssignLeft>>(nullptr), ._field_Right=jule::Ptr<_1aa2ee9b3_Expr>(nullptr)});;
	jule::I32 _10297_i = 0LL;;
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _10307_rang = _1aa86c5a2_range(&(_10297_i), static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), &(_101435_tokens));;
	if ((_10307_rang == nullptr)) {
		_1aa851b3b_pushErr(_self_, _10207_token, jule::Str::lit("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_10297_i + 1LL) < _101435_tokens.len())) {
		(*(_10257_assign))._field_Setter=_101435_tokens[_10297_i];
		if (((*((*_10257_assign.alloc)._field_Setter))._field_Id != static_cast<jule::U32>(71LLU))) {
			_1aa851b3b_pushErr(_self_, (*_10257_assign.alloc)._field_Setter, jule::Str::lit("invalid syntax", 14));
		};
		(_10297_i)++;
		jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _10408_exprTokens = _101435_tokens.slice(_10297_i);;
		(*_10257_assign.alloc)._field_Right=_1aa870088_buildExpr((*(_self_))._field_p, &(_10408_exprTokens));
	};
	jule::Bool _10443_ok = _1aa85b294_buildDeclAssign1(_self_, &(_10307_rang), &(_10257_assign));;
	__jule_func_result.__jule_result_arg0 = _10257_assign;
	__jule_func_result.__jule_result_arg1 = _10443_ok;
	return __jule_func_result;;
}



inline __jule_tuple__1aa309cdc_StmtData__jule_tuple_bool _1aa85b926_buildAssignSt(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _104834_tokens) {
	__jule_tuple__1aa309cdc_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1aa86ada8_checkAssignTokens(_104834_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_104834_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1bd1e07e7:;
			{
				({
					__jule_tuple_x_1aa30912c_AssignSt__jule_tuple_bool __jule_assign_result = _1aa85b5d5_buildDeclAssign(_self_, (*(_104834_tokens)));
					__jule_func_result.__jule_result_arg0 = jule::Any(__jule_assign_result.__jule_result_arg0, &__jule_any_type66);
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1bd1de9a0:;
			{
				({
					__jule_tuple__1aa309cdc_StmtData__jule_tuple_bool __jule_assign_result = _1aa85ad98_buildPlainAssign(_self_, _104834_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1bd1dee12:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1aa300387_UseExpr> _1aa85bc67_buildUseExpr(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _106133_tokens) {
	if (((*(_106133_tokens)).len() == 1LL)) {
		_1aa851b3b_pushErr(_self_, (*(_106133_tokens))[0LL], jule::Str::lit("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_1aa300387_UseExpr> _10667_ue = jule::new_ptr<_1aa300387_UseExpr>(_1aa300387_UseExpr{._field_Token=(*(_106133_tokens))[0LL], ._field_Expr=jule::Ptr<_1aa2ee9b3_Expr>(nullptr)});;
	((*(_106133_tokens))).mut_slice(1LL);;
	(*(_10667_ue))._field_Expr=_1aa870088_buildExpr((*(_self_))._field_p, _106133_tokens);
	return _10667_ue;;
}



inline jule::Any _1aa85c0a8_buildConstSt(_1aa850871_scopeParser* _self_, jule::Ptr<_1aa84eed0_stmt>* _107433_st) {
	if (((*((*(_107433_st))))._field_tokens.len() == 1LL)) {
		_1aa851b3b_pushErr(_self_, (*((*(_107433_st))))._field_tokens[0LL], jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_107433_st))))._field_tokens[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(9LLU)) {
			_case_begin_1bd1e4b81:;
			{
				((*((*(_107433_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1aa30e143_Iter> _10828_iter = _1aa855c3e_buildIterSt(_self_, _107433_st);;
				if ((_10828_iter != nullptr)) {
					(*_10828_iter.alloc)._field_Comptime=true;
				};
				return jule::Any(_10828_iter, &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(23LLU)) {
			_case_begin_1bd1e49a5:;
			{
				((*((*(_107433_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1aa312e6b_MatchCase> _10898_mt = _1aa8595b1_buildMatchCase(_self_, (*((*(_107433_st))))._field_tokens);;
				if ((_10898_mt != nullptr)) {
					(*_10898_mt.alloc)._field_Comptime=true;
				};
				return jule::Any(_10898_mt, &__jule_any_type67);;
			}
		}
		else {
			_case_begin_1bd1e3520:;
			{
				return jule::Any(_1aa852c2a_buildVarSt(_self_, &((*((*(_107433_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		_match_end_1bd1e44dd:;
	};
}



inline jule::Any _1aa85c3e9_buildSt(_1aa850871_scopeParser* _self_, jule::Ptr<_1aa84eed0_stmt>* _109928_st) {
	jule::Ptr<_1aa2d51c4_Token> _11007_token = (*((*(_109928_st))))._field_tokens[0LL];;
	if (((*(_11007_token))._field_Id == static_cast<jule::U32>(1LLU))) {
		jule::Any _11028_s;
		jule::Bool _110211_ok;
		({
			__jule_tuple__1aa309cdc_StmtData__jule_tuple_bool __jule_assign_result = _1aa85a084_buildIdSt(_self_, &((*((*(_109928_st))))._field_tokens));
			_11028_s = __jule_assign_result.__jule_result_arg0;
			_110211_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_110211_ok) {
			return _11028_s;;
		};
	};
	jule::Any _11087_s;
	jule::Bool _110810_ok;
	({
		__jule_tuple__1aa309cdc_StmtData__jule_tuple_bool __jule_assign_result = _1aa85b926_buildAssignSt(_self_, &((*((*(_109928_st))))._field_tokens));
		_11087_s = __jule_assign_result.__jule_result_arg0;
		_110810_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_110810_ok) {
		return _11087_s;;
	};
	{
		auto &_match_expr{ (*(_11007_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(16LLU)) {
			_case_begin_1bd1eaa33:;
			{
				return jule::Any(_1aa85bc67_buildUseExpr(_self_, &((*((*(_109928_st))))._field_tokens)), &__jule_any_type71);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU)) {
			_case_begin_1bd1ea8ac:;
			{
				return _1aa85c0a8_buildConstSt(_self_, _109928_st);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(34LLU) || _match_expr == static_cast<jule::U32>(30LLU) || _match_expr == static_cast<jule::U32>(32LLU)) {
			_case_begin_1bd1eac97:;
			{
				return jule::Any(_1aa852c2a_buildVarSt(_self_, &((*((*(_109928_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(2LLU)) {
			_case_begin_1bd1ead0d:;
			{
				return jule::Any(_1aa85306b_buildRetSt(_self_, (*((*(_109928_st))))._field_tokens), &__jule_any_type70);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(9LLU)) {
			_case_begin_1bd1ead74:;
			{
				return jule::Any(_1aa855c3e_buildIterSt(_self_, _109928_st), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(10LLU)) {
			_case_begin_1bd1eadda:;
			{
				return jule::Any(_1aa856080_buildBreakSt(_self_, &((*((*(_109928_st))))._field_tokens)), &__jule_any_type69);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(11LLU)) {
			_case_begin_1bd1eae51:;
			{
				return jule::Any(_1aa8563c1_buildContSt(_self_, &((*((*(_109928_st))))._field_tokens)), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(13LLU)) {
			_case_begin_1bd1eaeb7:;
			{
				return jule::Any(_1aa856d94_buildIfElseChain(_self_, (*((*(_109928_st))))._field_tokens), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(22LLU)) {
			_case_begin_1bd1eb03e:;
			{
				return jule::Any(_1aa8571d5_buildCoCallSt(_self_, (*((*(_109928_st))))._field_tokens), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(18LLU)) {
			_case_begin_1bd1eb0b6:;
			{
				return jule::Any(_1aa857526_buildGotoSt(_self_, &((*((*(_109928_st))))._field_tokens)), &__jule_any_type65);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(28LLU)) {
			_case_begin_1bd1eb13d:;
			{
				return jule::Any(_1aa857867_buildFallSt(_self_, &((*((*(_109928_st))))._field_tokens)), &__jule_any_type68);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1bd1eb1b5:;
			{
				return jule::Any(_1aa857ba8_buildTypeAliasSt(_self_, &((*((*(_109928_st))))._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(23LLU)) {
			_case_begin_1bd1eb23c:;
			{
				return jule::Any(_1aa8595b1_buildMatchCase(_self_, (*((*(_109928_st))))._field_tokens), &__jule_any_type67);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1bd1eb2b4:;
			{
				if (((*((*(_109928_st))))._field_tokens.len() < 1LL)) {
					goto _match_end_1bd1ea703;
				};
				if ((((*((*((*(_109928_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U32>(33LLU)) || ((*((*((*(_109928_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U32>(72LLU)))) {
					return jule::Any(_1aa859902_buildScopeSt(_self_, (*((*(_109928_st))))._field_tokens), &__jule_any_type59);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(33LLU)) {
			_case_begin_1bd1eb33b:;
			{
				return jule::Any(_1aa859902_buildScopeSt(_self_, (*((*(_109928_st))))._field_tokens), &__jule_any_type59);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(72LLU)) {
			_case_begin_1bd1eb3b3:;
			{
				return jule::Any(_1aa859902_buildScopeSt(_self_, (*((*(_109928_st))))._field_tokens), &__jule_any_type59);;
			}
		}
		_match_end_1bd1ea703:;
	};
	jule::Ptr<_1aa2ee9b3_Expr> _11557_expr = _1aa870088_buildExpr((*(_self_))._field_p, &((*((*(_109928_st))))._field_tokens));;
	if ((_11557_expr != nullptr)) {
		return jule::Any(_11557_expr, &__jule_any_type60);;
	};
	_1aa851b3b_pushErr(_self_, _11007_token, jule::Str::lit("invalid syntax", 14));
	return nullptr;;
}



inline void _1aa85c75c_build(_1aa850871_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _116326_tokens, jule::Ptr<_1aa30a6a0_ScopeTree>* _116349_s) {
	if (((*(_116349_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1aa850387_splitStmts(_116326_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_116349_s));
	while (((!(_1aa8517c8_isLastSt(_self_))) && (!(_1aa851542_finished(_self_))))) {
		{
			jule::Ptr<_1aa84eed0_stmt> _11718_st = _1aa8524dd_next(_self_);;
			jule::Any _11728_data = _1aa85c3e9_buildSt(_self_, &(_11718_st));;
			if ((_11728_data != nullptr)) {
				(*((*(_self_))._field_s))._field_Stmts=jule::append((*(*(_self_))._field_s.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<_1aa30a040_Stmt>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1aa30a040_Stmt{._field_Token=(*(_11718_st))._field_tokens[0LL], ._field_Data=_11728_data}; __jule_collection; }));
			};
			if (_1aa8512ab_stopped(_self_)) {
				goto _iter_end_1bd087491;
			};
		}
	_iter_next_1bd087491:;
	}
	_iter_end_1bd087491:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa850871_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa85d2da_exprBuilder_eq(_1aa85d2da_exprBuilder *_self_, _1aa85d2da_exprBuilder _other_) {
	return 
		(_self_->_field_p == _other_._field_p);
}

inline void _1aa85dab0_pushErr(_1aa85d2da_exprBuilder* _self_, jule::Ptr<_1aa2d51c4_Token> _4523_token, jule::Str _4538_fmt, jule::Slice<jule::Any> _4551_args) {
	_1aa86e8d4_pushErr((*(_self_))._field_p.ptr(), _4523_token, _4538_fmt, _4551_args);
}



inline void _1aa85de23_pushSuggestion(_1aa85d2da_exprBuilder* _self_, jule::Str _5030_fmt, jule::Slice<jule::Any> _5043_args) {
	_1aa86ec47_pushSuggestion((*(_self_))._field_p.ptr(), _5030_fmt, _5043_args);
}



inline jule::Ptr<_1aa3005a7_TupleExpr> _1aa85e264_buildTuple(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>>* _5431_parts) {
	jule::Ptr<_1aa3005a7_TupleExpr> _557_tuple = jule::new_ptr<_1aa3005a7_TupleExpr>(_1aa3005a7_TupleExpr{._field_Expr=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>>::alloc(0LL, (*(_5431_parts)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa2ee9b3_Expr>(nullptr); __jule_collection; })});;
	{
		auto expr = _5431_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd0acb26:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _5815_part = *it;
			{
				(*(_557_tuple))._field_Expr=jule::append((*_557_tuple.alloc)._field_Expr,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1aa868658_buildFromTokens(_self_, _5815_part); __jule_collection; }));
			}
			_iter_next_1bd0acb26:;
			++it;
			goto _iter_begin_1bd0acb26;
		}
		_iter_end_1bd0acb26:;
	};
	return _557_tuple;;
}



inline jule::Ptr<_1aa30094d_LitExpr> _1aa85e5a5_buildLit(_1aa85d2da_exprBuilder* _self_, jule::Ptr<_1aa2d51c4_Token> _6424_token) {
	return jule::new_ptr<_1aa30094d_LitExpr>(_1aa30094d_LitExpr{._field_Token=_6424_token, ._field_Value=(*(_6424_token))._field_Kind});;
}



inline jule::Any _1aa85ec37_buildSingle(_1aa85d2da_exprBuilder* _self_, jule::Ptr<_1aa2d51c4_Token> _7531_token) {
	{
		auto &_match_expr{ (*(_7531_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(4LLU)) {
			_case_begin_1bd0aea90:;
			{
				return jule::Any(_1aa85e5a5_buildLit(_self_, _7531_token), &__jule_any_type105);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(39LLU)) {
			_case_begin_1bd0aeb17:;
			{
				return jule::Any(jule::new_ptr<_1aa301e49_VariadicExpr>(_1aa301e49_VariadicExpr{._field_Token=_7531_token, ._field_Expr=jule::Ptr<_1aa2ee9b3_Expr>(nullptr)}), &__jule_any_type79);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(1LLU) || _match_expr == static_cast<jule::U32>(24LLU) || _match_expr == static_cast<jule::U32>(36LLU)) {
			_case_begin_1bd0aeb7d:;
			{
				return jule::Any(_1aa869a11_buildIdentExpr(&(_7531_token)), &__jule_any_type52);;
			}
		}
		_match_end_1bd0ae9d5:;
	};
	_1aa85dab0_pushErr(_self_, _7531_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1aa3012cd_IdentExpr> _1aa860078_buildBindIdent(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _9235_tokens) {
	if (((*((*(_9235_tokens))[0LL]))._field_Id != static_cast<jule::U32>(27LLU))) {
		return nullptr;;
	} else if (((*((*(_9235_tokens))[1LL]))._field_Id != static_cast<jule::U32>(17LLU))) {
		_1aa85dab0_pushErr(_self_, (*(_9235_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1aa85de23_pushSuggestion(_self_, jule::Str::lit("use dot (.) to access binded defines", 36), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa2d51c4_Token> _1007_token = (*(_9235_tokens))[2LL];;
	if (((*(_1007_token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1aa85dab0_pushErr(_self_, (*(_9235_tokens))[2LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1aa85de23_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa3012cd_IdentExpr> _1067_expr = _1aa869a11_buildIdentExpr(&(_1007_token));;
	(*(_1067_expr))._field_Binded=true;
	return _1067_expr;;
}



inline jule::Ptr<_1aa301a70_UnaryExpr> _1aa8603b9_buildUnary(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _11130_tokens) {
	jule::Ptr<_1aa2d51c4_Token> _1127_op = _11130_tokens[0LL];;
	if ((_11130_tokens.len() == 1LL)) {
		_1aa85dab0_pushErr(_self_, _1127_op, jule::Str::lit("missing expression for unary operator", 37), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1aa2d5911_IsUnaryOp((*(_1127_op))._field_Id)))) {
		_1aa85dab0_pushErr(_self_, _1127_op, jule::Str::lit("invalid unary operator: @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_1127_op.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	(_11130_tokens).mut_slice(1LL);;
	return jule::new_ptr<_1aa301a70_UnaryExpr>(_1aa301a70_UnaryExpr{._field_Op=_1127_op, ._field_Expr=_1aa868658_buildFromTokens(_self_, _11130_tokens)});;
}



inline jule::Ptr<_1aa302ac6_SubIdentExpr> _1aa86070a_buildObjSubIdent(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _13236_tokens) {
	jule::I32 _1337_i = (_13236_tokens.len() - 1LL);;
	jule::Ptr<_1aa2d51c4_Token> _1347_identToken = _13236_tokens[_1337_i];;
	(_1337_i)--;
	(_13236_tokens).mut_slice(0LL, _1337_i);;
	if ((_13236_tokens.len() == 0LL)) {
		_1aa85dab0_pushErr(_self_, _1347_identToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1aa302ac6_SubIdentExpr>(_1aa302ac6_SubIdentExpr{._field_Expr=_1aa868658_buildFromTokens(_self_, _13236_tokens), ._field_Ident=_1347_identToken});;
}



inline jule::Ptr<_1aa3026ec_NsSelectionExpr> _1aa860a4b_buildNsSubIdent(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _14736_tokens) {
	jule::Ptr<_1aa3026ec_NsSelectionExpr> _1487_ns = jule::new_ptr<_1aa3026ec_NsSelectionExpr>(_1aa3026ec_NsSelectionExpr{._field_Ns=jule::Slice<jule::Ptr<_1aa2d51c4_Token>>(nullptr), ._field_Ident=jule::Ptr<_1aa2d51c4_Token>(nullptr)});;
	if ((((*(_14736_tokens)).len() == 3LL) && ((*((*(_14736_tokens))[0LL]))._field_Id == static_cast<jule::U32>(31LLU)))) {
		(*_1487_ns.alloc)._field_Ns=(*(_14736_tokens)).slice(0LL, 1LL);
		(*_1487_ns.alloc)._field_Ident=(*(_14736_tokens))[2LL];
	} else {
		{
			auto expr = _14736_tokens;
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd0bb184:;
			if (it != expr_end) {
				jule::I32 _1549_i = it - expr->begin();
				jule::Ptr<_1aa2d51c4_Token> _15416_token = *it;
				{
					if (((_1549_i & 1LL) == 0LL)) {
						if (((*(_15416_token))._field_Id != static_cast<jule::U32>(1LLU))) {
							_1aa85dab0_pushErr(_self_, _15416_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							_1aa85de23_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
						};
						(*_1487_ns.alloc)._field_Ns=jule::append((*_1487_ns.alloc)._field_Ns,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa2d51c4_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15416_token; __jule_collection; }));
					} else if (((*(_15416_token))._field_Id != static_cast<jule::U32>(19LLU))) {
						_1aa85dab0_pushErr(_self_, _15416_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_1aa85de23_pushSuggestion(_self_, jule::Str::lit("expected double colon \"::\"", 26), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1bd0bb184:;
				++it;
				_1549_i++;
				goto _iter_begin_1bd0bb184;
			}
			_iter_end_1bd0bb184:;
		};
		(*_1487_ns.alloc)._field_Ident=(*_1487_ns.alloc)._field_Ns[((*_1487_ns.alloc)._field_Ns.len() - 1LL)];
		((*(_1487_ns))._field_Ns).mut_slice(0LL, ((*(_1487_ns))._field_Ns.len() - 1LL));;
	};
	return _1487_ns;;
}



inline jule::Ptr<_1aa2ea67e_TypeDecl> _1aa860d8c_buildType(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _17230_tokens) {
	jule::I32 _1737_i = 0LL;;
	jule::Ptr<_1aa2ea67e_TypeDecl> _1747_t;
	jule::Bool _17410_ok;
	({
		__jule_tuple_x_1aa2ea67e_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa8714da_buildType((*(_self_))._field_p, _17230_tokens, (&(_1737_i)), false);
		_1747_t = __jule_assign_result.__jule_result_arg0;
		_17410_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_17410_ok))) {
		_1aa85dab0_pushErr(_self_, (*(_17230_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_1737_i < (*(_17230_tokens)).len())) {
		_1aa85dab0_pushErr(_self_, (*(_17230_tokens))[_1737_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _1747_t;;
}



inline jule::Any _1aa8611cd_buildSubIdent(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _18634_tokens) {
	jule::I32 _1873_i = ((*(_18634_tokens)).len() - 2LL);;
	jule::Ptr<_1aa2d51c4_Token> _1883_token = (*(_18634_tokens))[_1873_i];;
	{
		auto &_match_expr{ (*(_1883_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(17LLU)) {
			_case_begin_1bd0c417b:;
			{
				return jule::Any(_1aa86070a_buildObjSubIdent(_self_, (*(_18634_tokens))), &__jule_any_type89);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_1bd0c4786:;
			{
				return jule::Any(_1aa860a4b_buildNsSubIdent(_self_, _18634_tokens), &__jule_any_type93);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(77LLU)) {
			_case_begin_1bd0c47ec:;
			{
				return jule::Any(_1aa860d8c_buildType(_self_, _18634_tokens), &__jule_any_type92);;
			}
		}
		_match_end_1bd0c4412:;
	};
	if (_1aa86a1a4_isAnonFnHead(_18634_tokens)) {
		return jule::Any(_1aa860d8c_buildType(_self_, _18634_tokens), &__jule_any_type92);;
	};
	_1aa85dab0_pushErr(_self_, _1883_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1aa301e49_VariadicExpr> _1aa86151e_buildVariadic(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _20833_tokens) {
	jule::Ptr<_1aa2d51c4_Token> _2097_token = _20833_tokens[(_20833_tokens.len() - 1LL)];;
	(_20833_tokens).mut_slice(0LL, (_20833_tokens.len() - 1LL));;
	return jule::new_ptr<_1aa301e49_VariadicExpr>(_1aa301e49_VariadicExpr{._field_Token=_2097_token, ._field_Expr=_1aa868658_buildFromTokens(_self_, _20833_tokens)});;
}



inline jule::Ptr<_1aa2eec7c_RangeExpr> _1aa861860_buildBetweenParentheses(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _21743_tokens) {
	if ((_21743_tokens.len() == 2LL)) {
		_1aa85dab0_pushErr(_self_, _21743_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		_1aa85de23_pushSuggestion(_self_, jule::Str::lit("empty parentheses are not valid expression, must include an expression in range", 79), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_21743_tokens).mut_slice(1LL, (_21743_tokens.len() - 1LL));;
	return jule::new_ptr<_1aa2eec7c_RangeExpr>(_1aa2eec7c_RangeExpr{._field_Expr=_1aa868658_buildFromTokens(_self_, _21743_tokens)});;
}



inline jule::Ptr<_1aa302323_CastExpr> _1aa861ba1_tryBuildCast(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _22933_tokens) {
	jule::I32 _2307_rangeN = 0LL;;
	{
		auto expr = _22933_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd0c9e73:;
		if (it != expr_end) {
			jule::I32 _2317_i = it - expr->begin();
			jule::Ptr<_1aa2d51c4_Token> _23110_token = *it;
			{
				{
					auto &_match_expr{ (*(_23110_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1bd0ca968:;
						{
							(_2307_rangeN)++;
							goto _iter_next_1bd0c9e73;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1bd0cad42:;
						{
							(_2307_rangeN)--;
						}
					}
					_match_end_1bd0cac54:;
				};
				if ((_2307_rangeN > 0LL)) {
					goto _iter_next_1bd0c9e73;
				} else if (((_2317_i + 1LL) == (*(_22933_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _2508_typeTokens = (*(_22933_tokens)).slice(0LL, (_2317_i + 1LL));;
				jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _2518_exprTokens = (*(_22933_tokens)).slice((_2317_i + 1LL));;
				if ((_2518_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1aa2d51c4_Token> _2584_tok = _2518_exprTokens[0LL];;
				if (((*(_2584_tok))._field_Id != static_cast<jule::U32>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_1aa302323_CastExpr> _2638_cast = jule::new_ptr<_1aa302323_CastExpr>(_1aa302323_CastExpr{._field_Kind=jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1aa2ee9b3_Expr>(nullptr)});;
				if ((_2518_exprTokens.len() == 2LL)) {
					_1aa85dab0_pushErr(_self_, _2518_exprTokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
					_1aa85de23_pushSuggestion(_self_, jule::Str::lit("give an expression for casting", 30), jule::Slice<jule::Any>());
				};
				if ((_2508_typeTokens.len() == 2LL)) {
					_1aa85dab0_pushErr(_self_, _2508_typeTokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					_1aa85de23_pushSuggestion(_self_, jule::Str::lit("type declaration expected for casting", 37), jule::Slice<jule::Any>());
				} else {
					(_2508_typeTokens).mut_slice(1LL, (_2508_typeTokens.len() - 1LL));;
					jule::I32 _2779_typeIndex = 0LL;;
					jule::Ptr<_1aa2ea67e_TypeDecl> _2789_t;
					jule::Bool _27812_ok;
					({
						__jule_tuple_x_1aa2ea67e_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa8714da_buildType((*(_self_))._field_p, &(_2508_typeTokens), (&(_2779_typeIndex)), true);
						_2789_t = __jule_assign_result.__jule_result_arg0;
						_27812_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_27812_ok && (_2779_typeIndex < _2508_typeTokens.len()))) {
						_1aa85dab0_pushErr(_self_, _2508_typeTokens[_2779_typeIndex], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					} else if ((!(_27812_ok))) {
						return _2638_cast;;
					};
					(*(_2638_cast))._field_Kind=_2789_t;
					if ((_2518_exprTokens.len() > 2LL)) {
						jule::I32 _28810_j = 0LL;;
						_1aa86c5a2_range(&(_28810_j), static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), &(_2518_exprTokens));
						if ((_28810_j < _2518_exprTokens.len())) {
							return nullptr;;
						};
						(_2518_exprTokens).mut_slice(0LL, _28810_j);;
						(*_2638_cast.alloc)._field_Expr=_1aa868658_buildFromTokens(_self_, _2518_exprTokens);
					};
				};
				return _2638_cast;;
			}
			_iter_next_1bd0c9e73:;
			++it;
			_2317_i++;
			goto _iter_begin_1bd0c9e73;
		}
		_iter_end_1bd0c9e73:;
	};
	return nullptr;;
}



inline void _1aa8620be_pushArg(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>>* _30328_args, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _30347_tokens, jule::Ptr<_1aa2d51c4_Token> _30365_err_token) {
	if ((_30347_tokens.len() == 0LL)) {
		_1aa85dab0_pushErr(_self_, _30365_err_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1aa85de23_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>> &__jule_push_dest = (*(_30328_args)); __jule_push_dest.push(_1aa868658_buildFromTokens(_self_, _30347_tokens)); };
}



inline jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>> _1aa862410_buildArgs(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _31229_tokens) {
	if ((_31229_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>> _31811_args = nullptr;;
	jule::I32 _3197_last = 0LL;;
	jule::I32 _3207_rangeN = 0LL;;
	(_31229_tokens).mut_slice(1LL, (_31229_tokens.len() - 1LL));;
	{
		auto expr = &(_31229_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd0d8327:;
		if (it != expr_end) {
			jule::I32 _3227_i = it - expr->begin();
			jule::Ptr<_1aa2d51c4_Token> _32210_token = *it;
			{
				{
					auto &_match_expr{ (*(_32210_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1bd0d8e3d:;
						{
							(_3207_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1bd0d9317:;
						{
							(_3207_rangeN)--;
						}
					}
					_match_end_1bd0d9229:;
				};
				if (((_3207_rangeN > 0LL) || ((*(_32210_token))._field_Id != static_cast<jule::U32>(5LLU)))) {
					goto _iter_next_1bd0d8327;
				};
				_1aa8620be_pushArg(_self_, &(_31811_args), _31229_tokens.slice(_3197_last, _3227_i), _32210_token);
				_3197_last=(_3227_i + 1LL);
			}
			_iter_next_1bd0d8327:;
			++it;
			_3227_i++;
			goto _iter_begin_1bd0d8327;
		}
		_iter_end_1bd0d8327:;
	};
	if ((_3197_last < _31229_tokens.len())) {
		if ((_3197_last == 0LL)) {
			if ((_31229_tokens.len() > 0LL)) {
				_1aa8620be_pushArg(_self_, &(_31811_args), _31229_tokens.slice(_3197_last), _31229_tokens[_3197_last]);
			};
		} else {
			_1aa8620be_pushArg(_self_, &(_31811_args), _31229_tokens.slice(_3197_last), _31229_tokens[(_3197_last - 1LL)]);
		};
	};
	return _31811_args;;
}



inline jule::Ptr<_1aa3036dc_FnCallExpr> _1aa862c07_buildFnCall(_1aa85d2da_exprBuilder* _self_, jule::Ptr<_1aa2d51c4_Token>* _37832_token, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _37852_expr, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _37873_args) {
	return jule::new_ptr<_1aa3036dc_FnCallExpr>(_1aa3036dc_FnCallExpr{._field_Token=(*(_37832_token)), ._field_Expr=_1aa868658_buildFromTokens(_self_, (*(_37852_expr))), ._field_Args=_1aa862410_buildArgs(_self_, (*(_37873_args))), ._field_Exception=jule::Ptr<_1aa30a6a0_ScopeTree>(nullptr), ._field_IsCo=false});;
}



inline jule::Any _1aa863048_buildParenthesesRange(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _38642_tokens) {
	jule::Ptr<_1aa2d51c4_Token> _3877_token = (*(_38642_tokens))[0LL];;
	if (((*(_3877_token))._field_Id == static_cast<jule::U32>(74LLU))) {
		jule::Ptr<_1aa302323_CastExpr> _3898_expr = _1aa861ba1_tryBuildCast(_self_, _38642_tokens);;
		if ((_3898_expr != nullptr)) {
			return jule::Any(_3898_expr, &__jule_any_type109);;
		};
	};
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _3947_exprTokens;
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _39423_argsTokens;
	({
		__jule_tuple_sx_1aa2d51c4_Token__jule_tuple_sx_1aa2d51c4_Token __jule_assign_result = _1aa86c86b_rangeLast(_38642_tokens);
		_3947_exprTokens = __jule_assign_result.__jule_result_arg0;
		_39423_argsTokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3947_exprTokens.len() == 0LL)) {
		return jule::Any(_1aa861860_buildBetweenParentheses(_self_, _39423_argsTokens), &__jule_any_type104);;
	};
	if (_1aa86a1a4_isAnonFnHead(&(_3947_exprTokens))) {
		return jule::Any(_1aa860d8c_buildType(_self_, _38642_tokens), &__jule_any_type92);;
	};
	return jule::Any(_1aa862c07_buildFnCall(_self_, &(_3877_token), &(_3947_exprTokens), &(_39423_argsTokens)), &__jule_any_type85);;
}



inline jule::Ptr<_1aa300d27_UnsafeExpr> _1aa863389_buildUnsafeExpr(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _40835_tokens) {
	jule::Ptr<_1aa2d51c4_Token> _4097_token = _40835_tokens[0LL];;
	(_40835_tokens).mut_slice(1LL);;
	jule::I32 _4117_i = 0LL;;
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _4127_rangeTokens = _1aa86c5a2_range(&(_4117_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_40835_tokens));;
	if ((_4127_rangeTokens.len() == 0LL)) {
		_1aa85dab0_pushErr(_self_, _40835_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1aa300d27_UnsafeExpr>(_1aa300d27_UnsafeExpr{._field_Token=_4097_token, ._field_Expr=_1aa868658_buildFromTokens(_self_, _4127_rangeTokens)});;
}



inline jule::Ptr<_1aa30c33e_FnDecl> _1aa8636ca_buildAnonFn(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _42332_tokens) {
	jule::Ptr<_1aa30c33e_FnDecl> _4247_f = _1aa875a72_buildFn((*(_self_))._field_p, _42332_tokens, false, false);;
	if ((!(_1aa30c6d5_IsAnon(_4247_f.ptr())))) {
		_1aa85dab0_pushErr(_self_, (*_4247_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1aa85de23_pushSuggestion(_self_, jule::Str::lit("anonymous function expected, remove identifier of function", 58), jule::Slice<jule::Any>());
	};
	return _4247_f;;
}



inline jule::Any _1aa863a1b_buildUnsafe(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _43232_tokens) {
	{
		auto &_match_expr{ (*((*(_43232_tokens))[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1bd0eb758:;
			{
				return jule::Any(_1aa8636ca_buildAnonFn(_self_, _43232_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_1bd0eab42:;
			{
				return jule::Any(_1aa863389_buildUnsafeExpr(_self_, (*(_43232_tokens))), &__jule_any_type106);;
			}
		}
		_match_end_1bd0eb060:;
	};
}



inline void _1aa863e39_pushRangeLitPart(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _44236_part, jule::Ptr<_1aa2d51c4_Token> _4433_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>>* _44328_parts) {
	if ((_44236_part.len() == 0LL)) {
		_1aa85dab0_pushErr(_self_, _4433_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1aa85de23_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>> &__jule_push_dest = (*(_44328_parts)); __jule_push_dest.push(_44236_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>> _1aa86427a_getBraceRangeLitExprParts(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _45345_tokens) {
	if ((_45345_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>> _45911_parts = nullptr;;
	jule::I32 _4617_last = 0LL;;
	jule::I32 _4627_rangeN = 0LL;;
	(_45345_tokens).mut_slice(1LL, (_45345_tokens.len() - 1LL));;
	{
		auto expr = &(_45345_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd0eed88:;
		if (it != expr_end) {
			jule::I32 _4647_i = it - expr->begin();
			jule::Ptr<_1aa2d51c4_Token> _46410_token = *it;
			{
				{
					auto &_match_expr{ (*(_46410_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1bd10099e:;
						{
							(_4627_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1bd100d78:;
						{
							(_4627_rangeN)--;
						}
					}
					_match_end_1bd100c8a:;
				};
				if (((_4627_rangeN > 0LL) || ((*(_46410_token))._field_Id != static_cast<jule::U32>(5LLU)))) {
					goto _iter_next_1bd0eed88;
				};
				_1aa863e39_pushRangeLitPart(_self_, _45345_tokens.slice(_4617_last, _4647_i), _46410_token, &(_45911_parts));
				_4617_last=(_4647_i + 1LL);
			}
			_iter_next_1bd0eed88:;
			++it;
			_4647_i++;
			goto _iter_begin_1bd0eed88;
		}
		_iter_end_1bd0eed88:;
	};
	if ((_4617_last < _45345_tokens.len())) {
		if ((_4617_last == 0LL)) {
			if ((_45345_tokens.len() > 0LL)) {
				_1aa863e39_pushRangeLitPart(_self_, _45345_tokens.slice(_4617_last), _45345_tokens[_4617_last], &(_45911_parts));
			};
		} else {
			_1aa863e39_pushRangeLitPart(_self_, _45345_tokens.slice(_4617_last), _45345_tokens[(_4617_last - 1LL)], &(_45911_parts));
		};
	};
	return _45911_parts;;
}



inline jule::Ptr<_1aa3041d2_FieldExprPair> _1aa8645bb_buildFieldExprPair(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _49538_tokens) {
	if (((_49538_tokens.len() - 2LL) == 0LL)) {
		_1aa85dab0_pushErr(_self_, _49538_tokens[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa3041d2_FieldExprPair> _5007_pair = jule::new_ptr<_1aa3041d2_FieldExprPair>(_1aa3041d2_FieldExprPair{._field_Field=_49538_tokens[0LL], ._field_Expr=jule::Ptr<_1aa2ee9b3_Expr>(nullptr)});;
	(_49538_tokens).mut_slice(2LL);;
	(*(_5007_pair))._field_Expr=_1aa868658_buildFromTokens(_self_, _49538_tokens);
	return _5007_pair;;
}



inline jule::Ptr<_1aa2ee9b3_Expr> _1aa86490c_buildStructLitExpr(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _50839_tokens) {
	jule::Ptr<_1aa2d51c4_Token> _5097_token = (*(_50839_tokens))[0LL];;
	if ((((*(_5097_token))._field_Id == static_cast<jule::U32>(1LLU)) && ((*(_50839_tokens)).len() > 1LL))) {
		_5097_token=(*(_50839_tokens))[1LL];
		if (((*_5097_token.alloc)._field_Id == static_cast<jule::U32>(8LLU))) {
			return jule::new_ptr<_1aa2ee9b3_Expr>(_1aa2ee9b3_Expr{._field_Token=_5097_token, ._field_End=(*(_50839_tokens))[((*(_50839_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1aa8645bb_buildFieldExprPair(_self_, (*(_50839_tokens))), &__jule_any_type81)});;
		};
	};
	return _1aa868658_buildFromTokens(_self_, (*(_50839_tokens)));;
}



inline jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>> _1aa864c4d_buildStructLitExprs(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _52340_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>> _5247_parts = _1aa86427a_getBraceRangeLitExprParts(_self_, (*(_52340_tokens)));;
	if ((_5247_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>> _5297_pairs = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>>::alloc(0LL, _5247_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa2ee9b3_Expr>(nullptr); __jule_collection; });;
	{
		auto expr = &(_5247_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd109689:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _53015_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>> &__jule_push_dest = _5297_pairs; __jule_push_dest.push(_1aa86490c_buildStructLitExpr(_self_, &(_53015_part))); };
			}
			_iter_next_1bd109689:;
			++it;
			goto _iter_begin_1bd109689;
		}
		_iter_end_1bd109689:;
	};
	return _5297_pairs;;
}



inline jule::Ptr<_1aa304a0c_StructLit> _1aa86508e_buildTypedStructLiteral(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _53643_tokens) {
	jule::I32 _5377_i = 0LL;;
	jule::Ptr<_1aa2ea67e_TypeDecl> _5387_t;
	jule::Bool _53810_ok;
	({
		__jule_tuple_x_1aa2ea67e_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa8714da_buildType((*(_self_))._field_p, &(_53643_tokens), (&(_5377_i)), true);
		_5387_t = __jule_assign_result.__jule_result_arg0;
		_53810_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_53810_ok))) {
		return nullptr;;
	} else if ((_5377_i >= _53643_tokens.len())) {
		_1aa85dab0_pushErr(_self_, _53643_tokens[_5377_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_53643_tokens).mut_slice(_5377_i);;
	jule::Ptr<_1aa2d51c4_Token> _5473_token = _53643_tokens[0LL];;
	if (((*(_5473_token))._field_Id != static_cast<jule::U32>(72LLU))) {
		_1aa85dab0_pushErr(_self_, _5473_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1aa304a0c_StructLit>(_1aa304a0c_StructLit{._field_End=_53643_tokens[(_53643_tokens.len() - 1LL)], ._field_Kind=_5387_t, ._field_Exprs=_1aa864c4d_buildStructLitExprs(_self_, &(_53643_tokens))});;
}



inline jule::Ptr<_1aa2ee9b3_Expr> _1aa8653d0_buildBraceLitPart(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _56038_tokens) {
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _5617_l;
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _56114_r;
	({
		__jule_tuple_sx_1aa2d51c4_Token__jule_tuple_sx_1aa2d51c4_Token __jule_assign_result = _1aa86947d_splitDelim(_56038_tokens, static_cast<jule::U32>(8LLU));
		_5617_l = __jule_assign_result.__jule_result_arg0;
		_56114_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_5617_l != nullptr)) {
		return jule::new_ptr<_1aa2ee9b3_Expr>(_1aa2ee9b3_Expr{._field_Token=(*(_56038_tokens))[0LL], ._field_End=(*(_56038_tokens))[((*(_56038_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1aa3057dd_KeyValPair>(_1aa3057dd_KeyValPair{._field_Key=_1aa868658_buildFromTokens(_self_, _5617_l), ._field_Val=_1aa868658_buildFromTokens(_self_, _56114_r), ._field_Colon=(*(_56038_tokens))[_5617_l.len()]}), &__jule_any_type82)});;
	};
	return _1aa868658_buildFromTokens(_self_, (*(_56038_tokens)));;
}



inline jule::Ptr<_1aa304eb3_BraceLit> _1aa865721_buildBraceLit(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _57734_tokens) {
	jule::Ptr<_1aa304eb3_BraceLit> _5787_lit = jule::new_ptr<_1aa304eb3_BraceLit>(_1aa304eb3_BraceLit{._field_Token=(*(_57734_tokens))[0LL], ._field_End=(*(_57734_tokens))[((*(_57734_tokens)).len() - 1LL)], ._field_Exprs=jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>>(nullptr)});;
	jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>> _5837_parts = _1aa86427a_getBraceRangeLitExprParts(_self_, (*(_57734_tokens)));;
	if ((_5837_parts == nullptr)) {
		return _5787_lit;;
	};
	(*(_5787_lit))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>>::alloc(0LL, _5837_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa2ee9b3_Expr>(nullptr); __jule_collection; });
	{
		auto expr = &(_5837_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd1141cc:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _58915_part = *it;
			{
				(*_5787_lit.alloc)._field_Exprs=jule::append((*_5787_lit.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1aa8653d0_buildBraceLitPart(_self_, &(_58915_part)); __jule_collection; }));
			}
			_iter_next_1bd1141cc:;
			++it;
			goto _iter_begin_1bd1141cc;
		}
		_iter_end_1bd1141cc:;
	};
	return _5787_lit;;
}



inline jule::Any _1aa865a62_buildBraceRange(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _59636_tokens) {
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _5977_exprTokens;
	jule::I32 _59719_rangeN;
	({
		__jule_tuple_sx_1aa2d51c4_Token__jule_tuple_int __jule_assign_result = _1aa869cca_getRangeExprTokens(_59636_tokens);
		_5977_exprTokens = __jule_assign_result.__jule_result_arg0;
		_59719_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_5977_exprTokens.len() == 0LL)) {
			_case_begin_1bd115ae6:;
			{
				return jule::Any(_1aa865721_buildBraceLit(_self_, _59636_tokens), &__jule_any_type111);;
			}
		}
		else if ((_59719_rangeN > 0LL)) {
			_case_begin_1bd115b90:;
			{
				_1aa85dab0_pushErr(_self_, (*(_59636_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bd115a5d:;
	};
	jule::Ptr<_1aa2d51c4_Token> _6083_elseToken = _5977_exprTokens[(_5977_exprTokens.len() - 1LL)];;
	if (((*(_5977_exprTokens[(_5977_exprTokens.len() - 1LL)]))._field_Id == static_cast<jule::U32>(14LLU))) {
		(_5977_exprTokens).mut_slice(0LL, (_5977_exprTokens.len() - 1LL));;
		jule::Any _6118_d = _1aa867ec6_build(_self_, &(_5977_exprTokens));;
		if ((_6118_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _6118_d };
			
			if (_match_expr.type == &__jule_any_type85) {
				_case_begin_1bd119402:;
				{
					((*(_59636_tokens))).mut_slice((_5977_exprTokens.len() + 1LL));;
					jule::I32 _6189_i = 0LL;;
					jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _6199_rangeTokens = _1aa86c5a2_range(&(_6189_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _59636_tokens);;
					jule::Ptr<_1aa3036dc_FnCallExpr> _6209_model = _6118_d.unsafe_cast_ptr<_1aa3036dc_FnCallExpr>();;
					if (_1aa303d2a_Ignored(_6209_model.ptr())) {
						_1aa85dab0_pushErr(_self_, _6083_elseToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_1aa85de23_pushSuggestion(_self_, jule::Str::lit("just ignore exceptional or handle it but you cannot do both at same time", 72), jule::Slice<jule::Any>());
					};
					(*_6209_model.alloc)._field_Exception=_1aa870a7d_buildScope((*(_self_))._field_p, &(_6199_rangeTokens), (*(_59636_tokens))[(_6189_i - 1LL)]);
					return _6118_d;;
				}
			}
			else {
				_case_begin_1bd118599:;
				{
					_1aa85dab0_pushErr(_self_, _5977_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1bd1189d9:;
		};
	};
	{
		auto &_match_expr{ (*(_5977_exprTokens[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1bd11d527:;
			{
				return _1aa863a1b_buildUnsafe(_self_, _59636_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1bd11d58d:;
			{
				return jule::Any(_1aa8636ca_buildAnonFn(_self_, _59636_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(1LLU) || _match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1bd11d604:;
			{
				return jule::Any(_1aa86508e_buildTypedStructLiteral(_self_, (*(_59636_tokens))), &__jule_any_type110);;
			}
		}
		else {
			_case_begin_1bd118b93:;
			{
				_1aa85dab0_pushErr(_self_, _5977_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bd11c999:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>> _1aa865da3_getEnumerableParts(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _64838_tokens) {
	(_64838_tokens).mut_slice(1LL, (_64838_tokens.len() - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>> _6507_parts;
	jule::Slice<_1ada72b17_Log> _65014_errors;
	({
		__jule_tuple_ssx_1aa2d51c4_Token__jule_tuple_s_1ada72b17_Log __jule_assign_result = _1aa86cd22_parts(&(_64838_tokens), static_cast<jule::U32>(5LLU), true);
		_6507_parts = __jule_assign_result.__jule_result_arg0;
		_65014_errors = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_65014_errors);
	return _6507_parts;;
}



inline jule::Ptr<_1aa306019_SliceExpr> _1aa8661e4_buildSlice(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _65530_tokens) {
	jule::Ptr<_1aa306019_SliceExpr> _6567_slc = jule::new_ptr<_1aa306019_SliceExpr>(_1aa306019_SliceExpr{._field_Token=_65530_tokens[0LL], ._field_End=_65530_tokens[(_65530_tokens.len() - 1LL)], ._field_Exprs=jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>>(nullptr)});;
	jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>> _6617_parts = _1aa865da3_getEnumerableParts(_self_, _65530_tokens);;
	if ((_6617_parts.len() == 0LL)) {
		return _6567_slc;;
	};
	(*(_6567_slc))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>>::alloc(0LL, _6617_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa2ee9b3_Expr>(nullptr); __jule_collection; });
	{
		auto expr = &(_6617_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd1235c6:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _66715_p = *it;
			{
				if ((_66715_p.len() == 0LL)) {
					goto _iter_next_1bd1235c6;
				};
				(*_6567_slc.alloc)._field_Exprs=jule::append((*_6567_slc.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa2ee9b3_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1aa868658_buildFromTokens(_self_, _66715_p); __jule_collection; }));
			}
			_iter_next_1bd1235c6:;
			++it;
			goto _iter_begin_1bd1235c6;
		}
		_iter_end_1bd1235c6:;
	};
	return _6567_slc;;
}



inline jule::Ptr<_1aa306976_IndexingExpr> _1aa86669a_buildIndexing(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _67733_exprTokens, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _6787_tokens, jule::Ptr<_1aa2d51c4_Token> _67829_errorToken) {
	jule::Ptr<_1aa2d51c4_Token> _6797_end = _6787_tokens[(_6787_tokens.len() - 1LL)];;
	(_6787_tokens).mut_slice(1LL, (_6787_tokens.len() - 1LL));;
	if ((_6787_tokens.len() == 0LL)) {
		_1aa85dab0_pushErr(_self_, _67829_errorToken, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa2ee9b3_Expr> _6857_expr = _1aa868658_buildFromTokens(_self_, _67733_exprTokens);;
	if ((_6857_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1aa2ee9b3_Expr> _6897_index = _1aa868658_buildFromTokens(_self_, _6787_tokens);;
	if ((_6897_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1aa306976_IndexingExpr>(_1aa306976_IndexingExpr{._field_Token=_67829_errorToken, ._field_End=_6797_end, ._field_Expr=_6857_expr, ._field_Index=_6897_index});;
}



inline jule::Ptr<_1aa3070d6_SlicingExpr> _1aa866cb6_buildSlicing(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _70133_exprTokens, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _70160_start, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _7028_to, jule::Ptr<_1aa2d51c4_Token>* _70227_errorToken, jule::Ptr<_1aa2d51c4_Token> _70251_end) {
	jule::Ptr<_1aa3070d6_SlicingExpr> _7037_slc = jule::new_ptr<_1aa3070d6_SlicingExpr>(_1aa3070d6_SlicingExpr{._field_Token=(*(_70227_errorToken)), ._field_End=_70251_end, ._field_Expr=_1aa868658_buildFromTokens(_self_, (*(_70133_exprTokens))), ._field_Start=jule::Ptr<_1aa2ee9b3_Expr>(nullptr), ._field_To=jule::Ptr<_1aa2ee9b3_Expr>(nullptr)});;
	if (((*(_70160_start)).len() > 0LL)) {
		(*(_7037_slc))._field_Start=_1aa868658_buildFromTokens(_self_, (*(_70160_start)));
	};
	if (((*(_7028_to)).len() > 0LL)) {
		(*_7037_slc.alloc)._field_To=_1aa868658_buildFromTokens(_self_, (*(_7028_to)));
	};
	return _7037_slc;;
}



inline jule::Any _1aa867107_buildBracketRange(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _71737_tokens) {
	jule::Ptr<_1aa2d51c4_Token> _7187_errorToken = _71737_tokens[0LL];;
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _7197_exprTokens;
	jule::I32 _71919_rangeN;
	({
		__jule_tuple_sx_1aa2d51c4_Token__jule_tuple_int __jule_assign_result = _1aa869cca_getRangeExprTokens(&(_71737_tokens));
		_7197_exprTokens = __jule_assign_result.__jule_result_arg0;
		_71919_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_7197_exprTokens.len() == 0LL)) {
		return jule::Any(_1aa8661e4_buildSlice(_self_, _71737_tokens), &__jule_any_type97);;
	} else if ((_71919_rangeN > 0LL)) {
		_1aa85dab0_pushErr(_self_, _7187_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_71737_tokens).mut_slice(_7197_exprTokens.len());;
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _7347_splitTokens = _71737_tokens.slice(1LL, (_71737_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _7357_start;
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _73518_to;
	({
		__jule_tuple_sx_1aa2d51c4_Token__jule_tuple_sx_1aa2d51c4_Token __jule_assign_result = _1aa86947d_splitDelim(&(_7347_splitTokens), static_cast<jule::U32>(8LLU));
		_7357_start = __jule_assign_result.__jule_result_arg0;
		_73518_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_7357_start != nullptr) || (_73518_to != nullptr))) {
		return jule::Any(_1aa866cb6_buildSlicing(_self_, &(_7197_exprTokens), &(_7357_start), &(_73518_to), &(_7187_errorToken), _71737_tokens[(_71737_tokens.len() - 1LL)]), &__jule_any_type108);;
	};
	return jule::Any(_1aa86669a_buildIndexing(_self_, _7197_exprTokens, _71737_tokens, _7187_errorToken), &__jule_any_type107);;
}



inline jule::Any _1aa867448_buildExclRight(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _74235_tokens) {
	jule::Ptr<_1aa2d51c4_Token> _7433_token = (*(_74235_tokens))[((*(_74235_tokens)).len() - 1LL)];;
	((*(_74235_tokens))).mut_slice(0LL, ((*(_74235_tokens)).len() - 1LL));;
	jule::Any _7457_d = _1aa867ec6_build(_self_, _74235_tokens);;
	if ((_7457_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _7457_d };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1bd1310a6:;
			{
				(*(_7457_d.unsafe_cast_ptr<_1aa3036dc_FnCallExpr>()))._field_Exception=jule::new_ptr<_1aa30a6a0_ScopeTree>(_1aa30a6a0_ScopeTree{._field_Parent=jule::Ptr<_1aa30a6a0_ScopeTree>(nullptr), ._field_Unsafety=false, ._field_Deferred=true, ._field_Stmts=jule::Slice<_1aa30a040_Stmt>(nullptr), ._field_End=jule::Ptr<_1aa2d51c4_Token>(nullptr)});
				return _7457_d;;
			}
		}
		_match_end_1bd1314e6:;
	};
	_1aa85dab0_pushErr(_self_, _7433_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1aa867789_buildData(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _76030_tokens) {
	{
		auto _match_expr{ (*(_76030_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1bd132a69:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1bd132ae1:;
			{
				return _1aa85ec37_buildSingle(_self_, (*(_76030_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1bd132b57:;
			{
				if (((*((*(_76030_tokens))[0LL]))._field_Id == static_cast<jule::U32>(27LLU))) {
					return jule::Any(_1aa860078_buildBindIdent(_self_, _76030_tokens), &__jule_any_type52);;
				};
			}
		}
		_match_end_1bd131969:;
	};
	jule::Ptr<_1aa2d51c4_Token> _7727_token = (*(_76030_tokens))[((*(_76030_tokens)).len() - 1LL)];;
	if (((*(_7727_token))._field_Id == static_cast<jule::U32>(39LLU))) {
		return jule::Any(_1aa86151e_buildVariadic(_self_, (*(_76030_tokens))), &__jule_any_type79);;
	};
	_7727_token=(*(_76030_tokens))[0LL];
	if (_1aa2d5911_IsUnaryOp((*_7727_token.alloc)._field_Id)) {
		if (((*(_76030_tokens)).len() > 1LL)) {
			_7727_token=(*(_76030_tokens))[1LL];
			if (((*_7727_token.alloc)._field_Id == static_cast<jule::U32>(31LLU))) {
				return jule::Any(_1aa860d8c_buildType(_self_, _76030_tokens), &__jule_any_type92);;
			};
		};
		return jule::Any(_1aa8603b9_buildUnary(_self_, (*(_76030_tokens))), &__jule_any_type91);;
	};
	if (((*(_76030_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ (*(_7727_token))._field_Id };
			
			if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
				_case_begin_1bd137651:;
				{
					if (((*(_76030_tokens)).len() > 3LL)) {
						jule::Ptr<_1aa2d51c4_Token> _7986_t = (*(_76030_tokens))[((*(_76030_tokens)).len() - 1LL)];;
						if (((*(_7986_t))._field_Id == static_cast<jule::U32>(75LLU))) {
							goto _match_end_1bd1375da;
						};
					};
					jule::Ptr<_1aa2d51c4_Token> _8045_next = (*(_76030_tokens))[1LL];;
					if (((*(_8045_next))._field_Id != static_cast<jule::U32>(77LLU))) {
						goto _match_end_1bd1375da;
					};
					return jule::Any(_1aa860d8c_buildType(_self_, _76030_tokens), &__jule_any_type92);;
				}
			}
			_match_end_1bd1375da:;
		};
	};
	_7727_token=(*(_76030_tokens))[((*(_76030_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ (*(_7727_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_1bd13a7a8:;
			{
				return _1aa8611cd_buildSubIdent(_self_, _76030_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(68LLU)) {
			_case_begin_1bd13a852:;
			{
				return _1aa867448_buildExclRight(_self_, _76030_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(75LLU)) {
			_case_begin_1bd13a8b8:;
			{
				return _1aa863048_buildParenthesesRange(_self_, _76030_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_1bd13a92e:;
			{
				return _1aa865a62_buildBraceRange(_self_, _76030_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(77LLU)) {
			_case_begin_1bd13a995:;
			{
				return _1aa867107_buildBracketRange(_self_, (*(_76030_tokens)));;
			}
		}
		_match_end_1bd13a753:;
	};
	_1aa85dab0_pushErr(_self_, _7727_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1aa867b85_buildBinary(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _82932_tokens, jule::I32 _82950_i) {
	jule::Ptr<_1aa2d51c4_Token> _8307_op = (*(_82932_tokens))[_82950_i];;
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _8317_leftTokens = (*(_82932_tokens)).slice(0LL, _82950_i);;
	if ((_1aa8689dd_isTypeOp(&((*(_8307_op))._field_Id)) && _1aa868ceb_isTypeRange(&(_8317_leftTokens)))) {
		return jule::Any(_1aa860d8c_buildType(_self_, _82932_tokens), &__jule_any_type92);;
	};
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _8367_rightTokens = (*(_82932_tokens)).slice((_82950_i + 1LL));;
	if ((_8317_leftTokens.len() == 0LL)) {
		_1aa85dab0_pushErr(_self_, (*(_82932_tokens))[_82950_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1aa85de23_pushSuggestion(_self_, jule::Str::lit("left operand expected for binary operator", 41), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_8367_rightTokens.len() == 0LL)) {
		_1aa85dab0_pushErr(_self_, (*(_82932_tokens))[_82950_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1aa85de23_pushSuggestion(_self_, jule::Str::lit("right operand expected for binary operator", 42), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1aa30307c_BinaryExpr>(_1aa30307c_BinaryExpr{._field_Left=_1aa868658_buildFromTokens(_self_, _8317_leftTokens), ._field_Right=_1aa868658_buildFromTokens(_self_, _8367_rightTokens), ._field_Op=_8307_op}), &__jule_any_type112);;
}



inline jule::Any _1aa867ec6_build(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _85426_tokens) {
	if (((*((*(_85426_tokens))[0LL]))._field_Id == static_cast<jule::U32>(37LLU))) {
		return jule::Any(_1aa860d8c_buildType(_self_, _85426_tokens), &__jule_any_type92);;
	};
	jule::I32 _8583_i = _1aa869747_findLowestPrecOp(_85426_tokens);;
	if ((_8583_i == -1LL)) {
		return _1aa867789_buildData(_self_, _85426_tokens);;
	};
	return _1aa867b85_buildBinary(_self_, _85426_tokens, _8583_i);;
}



inline jule::Any _1aa868317_buildKind(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _86530_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>> _8667_parts;
	jule::Slice<_1ada72b17_Log> _86614_errors;
	({
		__jule_tuple_ssx_1aa2d51c4_Token__jule_tuple_s_1ada72b17_Log __jule_assign_result = _1aa86cd22_parts(_86530_tokens, static_cast<jule::U32>(5LLU), true);
		_8667_parts = __jule_assign_result.__jule_result_arg0;
		_86614_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_86614_errors != nullptr)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_86614_errors);
		return nullptr;;
	} else if ((_8667_parts.len() > 1LL)) {
		return jule::Any(_1aa85e264_buildTuple(_self_, &(_8667_parts)), &__jule_any_type83);;
	};
	return _1aa867ec6_build(_self_, _86530_tokens);;
}



inline jule::Ptr<_1aa2ee9b3_Expr> _1aa868658_buildFromTokens(_1aa85d2da_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _87635_tokens) {
	if ((_87635_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _8807_kind = _1aa868317_buildKind(_self_, &(_87635_tokens));;
	if ((_8807_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1aa2ee9b3_Expr>(_1aa2ee9b3_Expr{._field_Token=_87635_tokens[0LL], ._field_End=_87635_tokens[(_87635_tokens.len() - 1LL)], ._field_Kind=_8807_kind});;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa85d2da_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa86aa01_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1aa86e230_stop(_1aa86de00_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1aa86e4b6_stopped(_1aa86de00_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1aa86e8d4_pushErr(_1aa86de00_parser* _self_, jule::Ptr<_1aa2d51c4_Token> _20823_token, jule::Str _20838_fmt, jule::Slice<jule::Any> _20851_args) {
	{ jule::Slice<_1ada72b17_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1aa86d4d7_compilerErr(&(_20823_token), &(_20838_fmt), _20851_args)); };
}



inline void _1aa86ec47_pushSuggestion(_1aa86de00_parser* _self_, jule::Str _21330_fmt, jule::Slice<jule::Any> _21343_args) {
	{
		_1aa86d87d_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _21330_fmt, _21343_args);
	};
}



inline jule::Ptr<_1aa2ee9b3_Expr> _1aa870088_buildExpr(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _21731_tokens) {
	return _1aa868658_buildFromTokens((*(_self_))._field_ep.ptr(), (*(_21731_tokens)));;
}



inline jule::Ptr<_1aa2e9a9b_Directive> _1aa8703c9_buildDirective(_1aa86de00_parser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _22134_tokens) {
	if ((_22134_tokens.len() == 1LL)) {
		_1aa86e8d4_pushErr(_self_, _22134_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_22134_tokens[1LL]))._field_Column != ((*(_22134_tokens[0LL]))._field_Column + 1LL))) {
		_1aa86e8d4_pushErr(_self_, _22134_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1aa2e9a9b_Directive>(_1aa2e9a9b_Directive{._field_Tag=_22134_tokens[1LL], ._field_Args=_22134_tokens.slice(2LL)});;
}



inline void _1aa870682_pushDirective(_1aa86de00_parser* _self_, jule::Ptr<_1aa2e9a9b_Directive> _23633_d) {
	if ((_23633_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd208b62:;
		if (it != expr_end) {
			jule::Ptr<_1aa2e9a9b_Directive> _24110_pd = *it;
			{
				if (((*((*(_23633_d))._field_Tag))._field_Kind == (*(*(_24110_pd))._field_Tag.alloc)._field_Kind)) {
					return;;
				};
			}
			_iter_next_1bd208b62:;
			++it;
			goto _iter_begin_1bd208b62;
		}
		_iter_end_1bd208b62:;
	};
	{ jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_23633_d); };
}



inline jule::Ptr<_1aa30a6a0_ScopeTree> _1aa870a7d_buildScope(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _24932_tokens, jule::Ptr<_1aa2d51c4_Token> _24954_end) {
	jule::Ptr<_1aa30a6a0_ScopeTree> _2507_s = _1aa84dc8c_newScope();;
	(*(_2507_s))._field_End=_24954_end;
	_1aa850871_scopeParser _2527_sp = _1aa850871_scopeParser{._field_p=_self_, ._field_s=jule::Ptr<_1aa30a6a0_ScopeTree>(nullptr), ._field_stmts=jule::Slice<jule::Ptr<_1aa84eed0_stmt>>(nullptr), ._field_pos=0};;
	_1aa85c75c_build(&_2527_sp, _24932_tokens, &(_2507_s));
	return _2507_s;;
}



inline __jule_tuple_x_1aa2ea67e_TypeDecl__jule_tuple_bool _1aa871034__buildType(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _25939_tokens, jule::I32* _2607_i, jule::Bool _26016_err) {
	__jule_tuple_x_1aa2ea67e_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1aa881022_typeBuilder _2617_tb = _1aa881022_typeBuilder{._field_p=_self_, ._field_tokens=(*(_25939_tokens)), ._field_i=_2607_i, ._field_err=_26016_err};;
	__jule_func_result = std::move(_1aa884036_build(&_2617_tb));
return __jule_func_result;;
}



inline __jule_tuple_x_1aa2ea67e_TypeDecl__jule_tuple_bool _1aa8714da_buildType(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _27138_tokens, jule::I32* _2727_i, jule::Bool _27216_err) {
	__jule_tuple_x_1aa2ea67e_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1aa2d51c4_Token> _2733_token = (*(_27138_tokens))[(*(_2727_i))];;
	jule::Ptr<_1aa2ea67e_TypeDecl> _2747_t;
	jule::Bool _27410_ok;
	({
		__jule_tuple_x_1aa2ea67e_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa871034__buildType(_self_, _27138_tokens, _2727_i, _27216_err);
		_2747_t = __jule_assign_result.__jule_result_arg0;
		_27410_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_27216_err && (!(_27410_ok)))) {
		_1aa86e8d4_pushErr(_self_, _2733_token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _2747_t;
	__jule_func_result.__jule_result_arg1 = _27410_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1aa31219b_TypeAliasDecl> _1aa87182b_buildTypeAliasDecl(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _28140_tokens) {
	jule::I32 _2827_i = 1LL;;
	if ((_2827_i >= (*(_28140_tokens)).len())) {
		_1aa86e8d4_pushErr(_self_.ptr(), (*(_28140_tokens))[(_2827_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa31219b_TypeAliasDecl> _2877_tad = jule::new_ptr<_1aa31219b_TypeAliasDecl>(_1aa31219b_TypeAliasDecl{._field_Scope=jule::Ptr<_1aa30a6a0_ScopeTree>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Token=(*(_28140_tokens))[1LL], ._field_Ident=(*((*(_28140_tokens))[1LL]))._field_Kind, ._field_Kind=jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr)});;
	jule::Ptr<_1aa2d51c4_Token> _2917_token = (*(_28140_tokens))[_2827_i];;
	if (((*(_2917_token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1aa86e8d4_pushErr(_self_, _2917_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1aa86ec47_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_2827_i)++;
	if ((_2827_i >= (*(_28140_tokens)).len())) {
		_1aa86e8d4_pushErr(_self_, (*(_28140_tokens))[(_2827_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _2877_tad;;
	};
	_2917_token=(*(_28140_tokens))[_2827_i];
	if (((*_2917_token.alloc)._field_Id != static_cast<jule::U32>(8LLU))) {
		_1aa86e8d4_pushErr(_self_, (*(_28140_tokens))[(_2827_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1aa86ec47_pushSuggestion(_self_, jule::Str::lit("expected colon \":\"", 18), jule::Slice<jule::Any>());
		return _2877_tad;;
	};
	(_2827_i)++;
	if ((_2827_i >= (*(_28140_tokens)).len())) {
		_1aa86e8d4_pushErr(_self_, (*(_28140_tokens))[(_2827_i - 1LL)], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return _2877_tad;;
	};
	jule::Ptr<_1aa2ea67e_TypeDecl> _3127_t;
	jule::Bool _31210_ok;
	({
		__jule_tuple_x_1aa2ea67e_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa8714da_buildType(_self_, _28140_tokens, (&(_2827_i)), true);
		_3127_t = __jule_assign_result.__jule_result_arg0;
		_31210_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_2877_tad))._field_Kind=_3127_t;
	if ((_31210_ok && (_2827_i < (*(_28140_tokens)).len()))) {
		_1aa86e8d4_pushErr(_self_, (*(_28140_tokens))[_2827_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_2877_tad.alloc)._field_Public=_1aa3b851b_IsPub((*_2877_tad.alloc)._field_Ident);
	return _2877_tad;;
}



inline void _1aa871b8e_buildVarTypeAndExpr(jule::Ptr<_1aa86de00_parser> _self_, jule::Ptr<_1aa30d4e9_VarDecl>* _32141_v, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _32159_tokens) {
	jule::I32 _3227_i = 0LL;;
	jule::Ptr<_1aa2d51c4_Token> _3237_tok = (*(_32159_tokens))[_3227_i];;
	if (((*(_3237_tok))._field_Id == static_cast<jule::U32>(8LLU))) {
		(_3227_i)++;
		if (((_3227_i >= (*(_32159_tokens)).len()) || ((*((*(_32159_tokens))[_3227_i]))._field_Id == static_cast<jule::U32>(71LLU)))) {
			_1aa86e8d4_pushErr(_self_.ptr(), _3237_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1aa2ea67e_TypeDecl> _3308_t;
		jule::Bool _33011_ok;
		({
			__jule_tuple_x_1aa2ea67e_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa8714da_buildType(_self_, _32159_tokens, (&(_3227_i)), true);
			_3308_t = __jule_assign_result.__jule_result_arg0;
			_33011_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_33011_ok) {
			(*((*(_32141_v))))._field_Kind=_3308_t;
			if ((_3227_i >= (*(_32159_tokens)).len())) {
				return;;
			};
			_3237_tok=(*(_32159_tokens))[_3227_i];
		};
	};
	if (((*_3237_tok.alloc)._field_Id != static_cast<jule::U32>(71LLU))) {
		_1aa86e8d4_pushErr(_self_, _3237_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_32141_v))))._field_Setter=_3237_tok;
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _3467_exprTokens = (*(_32159_tokens)).slice((_3227_i + 1LL));;
	if ((_3467_exprTokens.len() == 0LL)) {
		_1aa86e8d4_pushErr(_self_, _3237_tok, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_32141_v))))._field_Expr=_1aa870088_buildExpr(_self_, &(_3467_exprTokens));
}



inline void _1aa872002_buildVarCommon(jule::Ptr<_1aa86de00_parser> _self_, jule::Ptr<_1aa30d4e9_VarDecl>* _35436_v, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _35453_tokens) {
	(*((*(_35436_v))))._field_Token=_35453_tokens[0LL];
	if (((*((*((*(_35436_v))))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1aa86e8d4_pushErr(_self_.ptr(), (*((*(_35436_v))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1aa86ec47_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_35436_v))))._field_Ident=(*(*((*(_35436_v))))._field_Token.alloc)._field_Kind;
	(*((*(_35436_v))))._field_Public=_1aa3b851b_IsPub((*((*(_35436_v))))._field_Ident);
	(*((*(_35436_v))))._field_Kind=nullptr;
	if ((_35453_tokens.len() > 1LL)) {
		(_35453_tokens).mut_slice(1LL);;
		_1aa871b8e_buildVarTypeAndExpr(_self_, _35436_v, &(_35453_tokens));
	};
}



inline void _1aa872365_buildVarBegin(_1aa86de00_parser* _self_, jule::Ptr<_1aa30d4e9_VarDecl>* _37034_v, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _37052_tokens) {
	jule::Ptr<_1aa2d51c4_Token> _3713_tok = (*(_37052_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_3713_tok))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_1bd2247e8:;
			{
				(*((*(_37034_v))))._field_Statically=true;
				goto _case_begin_1bd224474;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1bd224474:;
			{
				if (((*(_37052_tokens)).len() == 1LL)) {
					(*(_37052_tokens))=nullptr;
					_1aa86e8d4_pushErr(_self_, _3713_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				((*(_37052_tokens))).mut_slice(1LL);;
				if (((*((*(_37052_tokens))[0LL]))._field_Id == static_cast<jule::U32>(32LLU))) {
					(*((*(_37034_v))))._field_Mutable=true;
					((*(_37052_tokens))).mut_slice(1LL);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU)) {
			_case_begin_1bd224166:;
			{
				(*((*(_37034_v))))._field_Constant=true;
				((*(_37052_tokens))).mut_slice(1LL);;
			}
		}
		else {
			_case_begin_1bd223d36:;
			{
				(*(_37052_tokens))=nullptr;
				_1aa86e8d4_pushErr(_self_, _3713_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bd224111:;
	};
}



inline jule::Ptr<_1aa30d4e9_VarDecl> _1aa8726a6_buildVar(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _39829_tokens) {
	jule::Ptr<_1aa30d4e9_VarDecl> _3997_v = jule::new_ptr<_1aa30d4e9_VarDecl>(_1aa30d4e9_VarDecl{._field_Scope=jule::Ptr<_1aa30a6a0_ScopeTree>(nullptr), ._field_Token=_39829_tokens[0LL], ._field_Setter=jule::Ptr<_1aa2d51c4_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Public=false, ._field_Mutable=false, ._field_Constant=false, ._field_Statically=false, ._field_Reference=false, ._field_Directives=jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1aa2ee9b3_Expr>(nullptr)});;
	_1aa872365_buildVarBegin(_self_.ptr(), &(_3997_v), &(_39829_tokens));
	if ((_39829_tokens.len() == 0LL)) {
		return nullptr;;
	};
	if (((*(_39829_tokens[0LL]))._field_Id == static_cast<jule::U32>(65LLU))) {
		(*(_3997_v))._field_Reference=true;
		if ((_39829_tokens.len() == 1LL)) {
			return nullptr;;
		};
		(_39829_tokens).mut_slice(1LL);;
	};
	_1aa872002_buildVarCommon(_self_, &(_3997_v), _39829_tokens);
	return _3997_v;;
}



inline jule::Ptr<_1aa307889_GenericDecl> _1aa8729e7_buildGeneric(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _41734_tokens) {
	jule::Ptr<_1aa307889_GenericDecl> _4187_g = jule::new_ptr<_1aa307889_GenericDecl>(_1aa307889_GenericDecl{._field_Token=(*(_41734_tokens))[0LL], ._field_Ident=jule::Str(), ._field_Constraint=jule::Ptr<_1aa3073d3_Constraint>(nullptr)});;
	if (((*((*(_4187_g))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1aa86e8d4_pushErr(_self_.ptr(), (*_4187_g.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1aa86ec47_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_4187_g.alloc)._field_Ident=(*(*(_4187_g))._field_Token.alloc)._field_Kind;
	if (((*(_41734_tokens)).len() > 1LL)) {
		if (((*((*(_41734_tokens))[1LL]))._field_Id != static_cast<jule::U32>(8LLU))) {
			_1aa86e8d4_pushErr(_self_, (*(_41734_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_41734_tokens)).len() == 2LL)) {
			_1aa86e8d4_pushErr(_self_, (*(_41734_tokens))[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _4358_constraintTokens = (*(_41734_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>> _4368_parts;
		jule::Slice<_1ada72b17_Log> _43615_errors;
		({
			__jule_tuple_ssx_1aa2d51c4_Token__jule_tuple_s_1ada72b17_Log __jule_assign_result = _1aa86cd22_parts(&(_4358_constraintTokens), static_cast<jule::U32>(66LLU), true);
			_4368_parts = __jule_assign_result.__jule_result_arg0;
			_43615_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_43615_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_43615_errors);
			return nullptr;;
		};
		(*_4187_g.alloc)._field_Constraint=jule::new_ptr<_1aa3073d3_Constraint>(_1aa3073d3_Constraint{._field_Mask=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>>::alloc(0LL, _4368_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr); __jule_collection; })});
		{
			auto expr = &(_4368_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd231a8b:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _44216_part = *it;
				{
					jule::I32 _4439_i = 0LL;;
					jule::Ptr<_1aa2ea67e_TypeDecl> _4449_kind;
					({
						__jule_tuple_x_1aa2ea67e_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa8714da_buildType(_self_, &(_44216_part), (&(_4439_i)), true);
						_4449_kind = __jule_assign_result.__jule_result_arg0;
					});
					(*((*_4187_g.alloc)._field_Constraint))._field_Mask=jule::append((*(*(_4187_g))._field_Constraint.alloc)._field_Mask,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _4449_kind; __jule_collection; }));
					if ((_4439_i < _44216_part.len())) {
						_1aa86e8d4_pushErr(_self_, _44216_part[_4439_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1bd231a8b:;
				++it;
				goto _iter_begin_1bd231a8b;
			}
			_iter_end_1bd231a8b:;
		};
	};
	return _4187_g;;
}



inline jule::Slice<jule::Ptr<_1aa307889_GenericDecl>> _1aa872de3_buildGenerics(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _45435_tokens, jule::Ptr<_1aa2d51c4_Token>* _45454_errorToken) {
	if (((*(_45435_tokens)).len() == 0LL)) {
		_1aa86e8d4_pushErr(_self_.ptr(), (*(_45454_errorToken)), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>> _4607_parts;
	jule::Slice<_1ada72b17_Log> _46014_errors;
	({
		__jule_tuple_ssx_1aa2d51c4_Token__jule_tuple_s_1ada72b17_Log __jule_assign_result = _1aa86cd22_parts(_45435_tokens, static_cast<jule::U32>(5LLU), true);
		_4607_parts = __jule_assign_result.__jule_result_arg0;
		_46014_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_46014_errors.len() > 0LL)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_46014_errors);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1aa307889_GenericDecl>> _4667_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa307889_GenericDecl>>::alloc(0LL, _4607_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa307889_GenericDecl>(nullptr); __jule_collection; });;
	{
		auto expr = &(_4607_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd2364b9:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _46715_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1aa307889_GenericDecl>> &__jule_push_dest = _4667_generics; __jule_push_dest.push(_1aa8729e7_buildGeneric(_self_, &(_46715_part))); };
			}
			_iter_next_1bd2364b9:;
			++it;
			goto _iter_begin_1bd2364b9;
		}
		_iter_end_1bd2364b9:;
	};
	return _4667_generics;;
}



inline jule::Ptr<_1aa30addc_ParamDecl> _1aa873234_buildSelfParam(_1aa86de00_parser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _47434_tokens) {
	if ((_47434_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1aa30addc_ParamDecl> _4797_param = jule::new_ptr<_1aa30addc_ParamDecl>(_1aa30addc_ParamDecl{._field_Token=jule::Ptr<_1aa2d51c4_Token>(nullptr), ._field_Mutable=false, ._field_Variadic=false, ._field_Reference=false, ._field_Kind=jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr), ._field_Ident=jule::Str()});;
	if (((*(_47434_tokens[0LL]))._field_Id == static_cast<jule::U32>(32LLU))) {
		(*_4797_param.alloc)._field_Mutable=true;
		if ((_47434_tokens.len() == 1LL)) {
			_1aa86e8d4_pushErr(_self_, _47434_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_47434_tokens).mut_slice(1LL);;
	};
	_1ed486d49_StrBuilder _4917_ident = static__1ed487146_New(5LL);;
	if (((*(_47434_tokens[0LL]))._field_Id == static_cast<jule::U32>(65LLU))) {
		_1ed4909ac_WriteStr(&_4917_ident, jule::Str::lit("&", 1));
		if ((_47434_tokens.len() == 1LL)) {
			_1aa86e8d4_pushErr(_self_, _47434_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_47434_tokens).mut_slice(1LL);;
	};
	if (((*(_47434_tokens[0LL]))._field_Id == static_cast<jule::U32>(24LLU))) {
		_1ed4909ac_WriteStr(&_4917_ident, jule::Str::lit("self", 4));
		(*_4797_param.alloc)._field_Token=_47434_tokens[0LL];
		if ((_47434_tokens.len() != 1LL)) {
			_1aa86e8d4_pushErr(_self_, _47434_tokens[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	};
	(*_4797_param.alloc)._field_Ident=_1ed4912a4_Str(&_4917_ident);
	return _4797_param;;
}



inline void _1aa873652_paramTypeBegin(_1aa86de00_parser* _self_, jule::Ptr<_1aa30addc_ParamDecl>* _51435_param, jule::I32* _51459_i, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _51468_tokens) {
	for (; ((*(_51459_i)) < (*(_51468_tokens)).len()); ((*(_51459_i)))++) {
		{
			jule::Ptr<_1aa2d51c4_Token> _5164_token = (*(_51468_tokens))[(*(_51459_i))];;
			if (((*(_5164_token))._field_Id != static_cast<jule::U32>(39LLU))) {
				return;;
			};
			if ((*((*(_51435_param))))._field_Variadic) {
				_1aa86e8d4_pushErr(_self_, _5164_token, jule::Str::lit("define is already variadic", 26), jule::Slice<jule::Any>());
				goto _iter_next_1bd23e291;
			};
			(*((*(_51435_param))))._field_Variadic=true;
		}
	_iter_next_1bd23e291:;
	}
	_iter_end_1bd23e291:;;
}



inline void _1aa8739b5_buildParamType(jule::Ptr<_1aa86de00_parser> _self_, jule::Ptr<_1aa30addc_ParamDecl>* _52936_param, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _52960_tokens) {
	jule::I32 _5307_i = 0LL;;
	_1aa873652_paramTypeBegin(_self_.ptr(), _52936_param, &(_5307_i), _52960_tokens);
	if ((_5307_i >= (*(_52960_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1aa2ea67e_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa8714da_buildType(_self_, _52960_tokens, (&(_5307_i)), true);
		(*((*(_52936_param))))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_5307_i < (*(_52960_tokens)).len())) {
		_1aa86e8d4_pushErr(_self_, (*(_52960_tokens))[_5307_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1aa873d28_buildParamBody(jule::Ptr<_1aa86de00_parser> _self_, jule::Ptr<_1aa30addc_ParamDecl>* _54236_param, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _54259_tokens) {
	jule::Ptr<_1aa2d51c4_Token> _5437_tok = _54259_tokens[0LL];;
	if ((_54259_tokens.len() == 1LL)) {
		(*((*(_54236_param))))._field_Ident=(*(_5437_tok))._field_Kind;
		return;;
	} else if ((_54259_tokens.len() < 3LL)) {
		_1aa86e8d4_pushErr(_self_.ptr(), _5437_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_54259_tokens[1LL]))._field_Id != static_cast<jule::U32>(8LLU))) {
		(*((*(_54236_param))))._field_Ident=jule::Str::lit("<anonymous>", 11);
		_1aa8739b5_buildParamType(_self_, _54236_param, &(_54259_tokens));
		return;;
	};
	(*((*(_54236_param))))._field_Ident=(*(_5437_tok))._field_Kind;
	(_54259_tokens).mut_slice(2LL);;
	_1aa8739b5_buildParamType(_self_, _54236_param, &(_54259_tokens));
}



inline jule::Ptr<_1aa30addc_ParamDecl> _1aa874169_buildParam(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _56231_tokens) {
	jule::Ptr<_1aa30addc_ParamDecl> _5637_param = jule::new_ptr<_1aa30addc_ParamDecl>(_1aa30addc_ParamDecl{._field_Token=_56231_tokens[0LL], ._field_Mutable=false, ._field_Variadic=false, ._field_Reference=false, ._field_Kind=jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr), ._field_Ident=jule::Str()});;
	if (((*((*(_5637_param))._field_Token))._field_Id == static_cast<jule::U32>(32LLU))) {
		(*_5637_param.alloc)._field_Mutable=true;
		if ((_56231_tokens.len() == 1LL)) {
			_1aa86e8d4_pushErr(_self_.ptr(), _56231_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_56231_tokens).mut_slice(1LL);;
		(*_5637_param.alloc)._field_Token=_56231_tokens[0LL];
	};
	if ((_56231_tokens.len() >= 3LL)) {
		if (((*(*(_5637_param))._field_Token.alloc)._field_Id == static_cast<jule::U32>(65LLU))) {
			if ((_56231_tokens.len() == 1LL)) {
				_1aa86e8d4_pushErr(_self_, _56231_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if ((((*(_56231_tokens[1LL]))._field_Id == static_cast<jule::U32>(1LLU)) && ((*(_56231_tokens[2LL]))._field_Id == static_cast<jule::U32>(8LLU)))) {
				(*_5637_param.alloc)._field_Reference=true;
				(_56231_tokens).mut_slice(1LL);;
				(*_5637_param.alloc)._field_Token=_56231_tokens[0LL];
			};
		};
	};
	if (((*(*(_5637_param))._field_Token.alloc)._field_Id != static_cast<jule::U32>(1LLU))) {
		(*_5637_param.alloc)._field_Ident=jule::Str::lit("<anonymous>", 11);
		_1aa8739b5_buildParamType(_self_, &(_5637_param), &(_56231_tokens));
	} else {
		_1aa873d28_buildParamBody(_self_, &(_5637_param), _56231_tokens);
	};
	return _5637_param;;
}



inline void _1aa874422_checkParams(_1aa86de00_parser* _self_, jule::Slice<jule::Ptr<_1aa30addc_ParamDecl>>* _60532_params) {
	{
		auto expr = _60532_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd24e2d4:;
		if (it != expr_end) {
			jule::Ptr<_1aa30addc_ParamDecl> _60615_param = *it;
			{
				if ((_1aa30b294_IsSelf(_60615_param.ptr()) || ((*_60615_param.alloc)._field_Kind != nullptr))) {
					goto _iter_next_1bd24e2d4;
				};
				if (((*_60615_param.alloc)._field_Token == nullptr)) {
					_1aa86e8d4_pushErr(_self_, (*_60615_param.alloc)._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
				} else {
					(*_60615_param.alloc)._field_Kind=jule::new_ptr<_1aa2ea67e_TypeDecl>(_1aa2ea67e_TypeDecl{._field_Token=(*_60615_param.alloc)._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1aa2eac89_IdentTypeDecl>(_1aa2eac89_IdentTypeDecl{._field_Token=(*_60615_param.alloc)._field_Token, ._field_Ident=(*((*_60615_param.alloc)._field_Token))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>>(nullptr)}), &__jule_any_type78)});
					(*_60615_param.alloc)._field_Ident=jule::Str::lit("<anonymous>", 11);
				};
			}
			_iter_next_1bd24e2d4:;
			++it;
			goto _iter_begin_1bd24e2d4;
		}
		_iter_end_1bd24e2d4:;
	};
}



inline jule::Slice<jule::Ptr<_1aa30addc_ParamDecl>> _1aa87481d_buildParams(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _62533_tokens, jule::Bool _62551_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>> _6267_parts;
	jule::Slice<_1ada72b17_Log> _62614_errs;
	({
		__jule_tuple_ssx_1aa2d51c4_Token__jule_tuple_s_1ada72b17_Log __jule_assign_result = _1aa86cd22_parts(_62533_tokens, static_cast<jule::U32>(5LLU), true);
		_6267_parts = __jule_assign_result.__jule_result_arg0;
		_62614_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_62614_errs);
	if ((_6267_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1aa30addc_ParamDecl>> _63211_params = nullptr;;
	if ((_62551_method && (_6267_parts.len() > 0LL))) {
		jule::Ptr<_1aa30addc_ParamDecl> _6348_param = _1aa873234_buildSelfParam(_self_, _6267_parts[0LL]);;
		if (((_6348_param != nullptr) && _1aa30b294_IsSelf(_6348_param))) {
			{ jule::Slice<jule::Ptr<_1aa30addc_ParamDecl>> &__jule_push_dest = _63211_params; __jule_push_dest.push(_6348_param); };
			(_6267_parts).mut_slice(1LL);;
		};
	};
	{
		auto expr = &(_6267_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd2551db:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _64115_part = *it;
			{
				if ((_64115_part.len() == 0LL)) {
					goto _iter_next_1bd2551db;
				};
				jule::Ptr<_1aa30addc_ParamDecl> _6458_param = _1aa874169_buildParam(_self_, _64115_part);;
				if ((_6458_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_1aa30addc_ParamDecl>> &__jule_push_dest = _63211_params; __jule_push_dest.push(_6458_param); };
				};
			}
			_iter_next_1bd2551db:;
			++it;
			goto _iter_begin_1bd2551db;
		}
		_iter_end_1bd2551db:;
	};
	_1aa874422_checkParams(_self_, &(_63211_params));
	return _63211_params;;
}



inline __jule_tuple_x_1aa2ed572_RetTypeDecl__jule_tuple_bool _1aa874c19_buildMultiRetType(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _65539_tokens, jule::I32* _65562_i) {
	__jule_tuple_x_1aa2ed572_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1aa2ed572_RetTypeDecl>(_1aa2ed572_RetTypeDecl{._field_Kind=jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr), ._field_Idents=jule::Slice<jule::Ptr<_1aa2d51c4_Token>>(nullptr)});
	((*(_65562_i)))++;
	if (((*(_65562_i)) >= (*(_65539_tokens)).len())) {
		((*(_65562_i)))--;
		({
			__jule_tuple_x_1aa2ea67e_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa8714da_buildType(_self_, _65539_tokens, (&((*(_65562_i)))), false);
			(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_65562_i)))--;
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _6657_rangeTokens = _1aa86c5a2_range(_65562_i, static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), _65539_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>> _6677_parts;
	jule::Slice<_1ada72b17_Log> _66714_errs;
	({
		__jule_tuple_ssx_1aa2d51c4_Token__jule_tuple_s_1ada72b17_Log __jule_assign_result = _1aa86cd22_parts(&(_6657_rangeTokens), static_cast<jule::U32>(5LLU), true);
		_6677_parts = __jule_assign_result.__jule_result_arg0;
		_66714_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_66714_errs);
	if ((_6677_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>> _6737_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>>::alloc(0LL, _6677_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr); __jule_collection; });;
	(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa2d51c4_Token>>::alloc(0LL, _6677_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa2d51c4_Token>(nullptr); __jule_collection; });
	{
		auto expr = &(_6677_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd25bbd7:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _67515_part = *it;
			{
				if ((_67515_part.len() == 0LL)) {
					goto _iter_next_1bd25bbd7;
				};
				jule::Ptr<_1aa2d51c4_Token> _6798_token = _67515_part[0LL];;
				jule::I32 _6808_offset = 0LL;;
				if ((_67515_part.len() > 1LL)) {
					_6798_token=_67515_part[1LL];
					if (((*(_6798_token))._field_Id == static_cast<jule::U32>(8LLU))) {
						_6808_offset=2LL;
						if ((_67515_part.len() < 3LL)) {
							_1aa86e8d4_pushErr(_self_, _6798_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							goto _iter_next_1bd25bbd7;
						};
					};
				};
				_6798_token=_67515_part[0LL];
				if ((_6808_offset != 2LL)) {
					jule::Ptr<_1aa2d51c4_Token> _6969_newToken = jule::new_ptr<_1aa2d51c4_Token>((*_6798_token.alloc));;
					(*_6969_newToken.alloc)._field_Kind=jule::Str::lit("<anonymous>", 11);
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa2d51c4_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6969_newToken; __jule_collection; }));
				} else {
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa2d51c4_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6798_token; __jule_collection; }));
				};
				jule::Ptr<_1aa2ea67e_TypeDecl> _7038_tk;
				({
					__jule_tuple_x_1aa2ea67e_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa8714da_buildType(_self_, &(_67515_part), (&(_6808_offset)), true);
					_7038_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_6808_offset < _67515_part.len())) {
					_1aa86e8d4_pushErr(_self_, _67515_part[_6808_offset], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>> &__jule_push_dest = _6737_types; __jule_push_dest.push(_7038_tk); };
			}
			_iter_next_1bd25bbd7:;
			++it;
			goto _iter_begin_1bd25bbd7;
		}
		_iter_end_1bd25bbd7:;
	};
	if ((_6737_types.len() > 1LL)) {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=jule::new_ptr<_1aa2ea67e_TypeDecl>(_1aa2ea67e_TypeDecl{._field_Token=(*(_65539_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1aa2ebdab_TupleTypeDecl>(_1aa2ebdab_TupleTypeDecl{._field_Types=_6737_types}), &__jule_any_type77)});
	} else {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=_6737_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1aa2ed572_RetTypeDecl__jule_tuple_bool _1aa875115_buildRetType(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _72634_tokens, jule::I32* _72657_i) {
	__jule_tuple_x_1aa2ed572_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1aa2ed572_RetTypeDecl>(_1aa2ed572_RetTypeDecl{._field_Kind=jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr), ._field_Idents=jule::Slice<jule::Ptr<_1aa2d51c4_Token>>(nullptr)});
	if (((*(_72657_i)) >= (*(_72634_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1aa2d51c4_Token> _7327_token = (*(_72634_tokens))[(*(_72657_i))];;
	{
		auto &_match_expr{ (*(_7327_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(72LLU)) {
			_case_begin_1bd26588e:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(71LLU)) {
			_case_begin_1bd265916:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(8LLU)) {
			_case_begin_1bd26597c:;
			{
				if ((((*(_72657_i)) + 1LL) >= (*(_72634_tokens)).len())) {
					_1aa86e8d4_pushErr(_self_.ptr(), _7327_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_72657_i)))++;
				_7327_token=(*(_72634_tokens))[(*(_72657_i))];
				{
					auto &_match_expr{ (*(_7327_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1bd26731e:;
						{
							({
								__jule_tuple_x_1aa2ed572_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1aa874c19_buildMultiRetType(_self_, _72634_tokens, _72657_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1bd267880:;
						{
							_1aa86e8d4_pushErr(_self_, _7327_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_1bd2677e7:;
				};
				({
					__jule_tuple_x_1aa2ea67e_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa8714da_buildType(_self_, _72634_tokens, (&((*(_72657_i)))), true);
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1bd265839:;
	};
	((*(_72657_i)))++;
	_1aa86e8d4_pushErr(_self_.ptr(), _7327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1aa30c33e_FnDecl> _1aa8755bb_buildFnPrototype(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _76538_tokens, jule::I32* _76561_i, jule::Bool _76569_method) {
	jule::Ptr<_1aa30c33e_FnDecl> _7667_f = jule::new_ptr<_1aa30c33e_FnDecl>(_1aa30c33e_FnDecl{._field_Token=(*(_76538_tokens))[(*(_76561_i))], ._field_Global=false, ._field_Unsafety=false, ._field_Public=false, ._field_Binded=false, ._field_Statically=false, ._field_Exceptional=false, ._field_Ident=jule::Str(), ._field_Directives=jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>>(nullptr), ._field_Scope=jule::Ptr<_1aa30a6a0_ScopeTree>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aa307889_GenericDecl>>(nullptr), ._field_Result=jule::Ptr<_1aa2ed572_RetTypeDecl>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa30addc_ParamDecl>>(nullptr)});;
	if (((*((*(_7667_f))._field_Token))._field_Id == static_cast<jule::U32>(34LLU))) {
		(*_7667_f.alloc)._field_Statically=true;
		((*(_76561_i)))++;
		if (((*(_76561_i)) >= (*(_76538_tokens)).len())) {
			_1aa86e8d4_pushErr(_self_.ptr(), (*_7667_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7667_f.alloc)._field_Token=(*(_76538_tokens))[(*(_76561_i))];
	};
	if (((*(*(_7667_f))._field_Token.alloc)._field_Id == static_cast<jule::U32>(31LLU))) {
		(*_7667_f.alloc)._field_Unsafety=true;
		((*(_76561_i)))++;
		if (((*(_76561_i)) >= (*(_76538_tokens)).len())) {
			_1aa86e8d4_pushErr(_self_, (*_7667_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7667_f.alloc)._field_Token=(*(_76538_tokens))[(*(_76561_i))];
	};
	((*(_76561_i)))++;
	if (((*(_76561_i)) >= (*(_76538_tokens)).len())) {
		_1aa86e8d4_pushErr(_self_, (*_7667_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa2d51c4_Token> _7993_tok = (*(_76538_tokens))[(*(_76561_i))];;
	if (((*(_7993_tok))._field_Id == static_cast<jule::U32>(1LLU))) {
		((*(_76561_i)))++;
		if (((*(_76561_i)) >= (*(_76538_tokens)).len())) {
			_1aa86e8d4_pushErr(_self_, (*_7667_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7667_f.alloc)._field_Ident=(*_7993_tok.alloc)._field_Kind;
	} else {
		(*_7667_f.alloc)._field_Ident=jule::Str::lit("<anonymous>", 11);
	};
	jule::Ptr<_1aa2d51c4_Token> _8113_errorToken = (*(_76538_tokens))[(*(_76561_i))];;
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _8127_genericsTokens = _1aa86c5a2_range(_76561_i, static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), _76538_tokens);;
	if ((_8127_genericsTokens != nullptr)) {
		(*_7667_f.alloc)._field_Generics=_1aa872de3_buildGenerics(_self_, &(_8127_genericsTokens), &(_8113_errorToken));
	};
	if (((*((*(_76538_tokens))[(*(_76561_i))]))._field_Id != static_cast<jule::U32>(74LLU))) {
		_1aa86e8d4_pushErr(_self_, (*(_76538_tokens))[(*(_76561_i))], jule::Str::lit("missing function parentheses", 28), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _8227_paramsToks = _1aa86c5a2_range(_76561_i, static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), _76538_tokens);;
	if ((_8227_paramsToks.len() > 0LL)) {
		(*_7667_f.alloc)._field_Params=_1aa87481d_buildParams(_self_, &(_8227_paramsToks), _76569_method);
	};
	if (((*(_76561_i)) < (*(_76538_tokens)).len())) {
		jule::Ptr<_1aa2d51c4_Token> _8284_token = (*(_76538_tokens))[(*(_76561_i))];;
		if (((*(_8284_token))._field_Id == static_cast<jule::U32>(68LLU))) {
			(*_7667_f.alloc)._field_Exceptional=true;
			((*(_76561_i)))++;
		};
	};
	(*_7667_f.alloc)._field_Public=_1aa3b851b_IsPub((*_7667_f.alloc)._field_Ident);
	({
		__jule_tuple_x_1aa2ed572_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1aa875115_buildRetType(_self_, _76538_tokens, _76561_i);
		(*_7667_f.alloc)._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _7667_f;;
}



inline jule::Ptr<_1aa30c33e_FnDecl> _1aa875a72_buildFn(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _84229_tokens, jule::Bool _84247_method, jule::Bool _84261_prototype) {
	jule::I32 _8437_i = 0LL;;
	jule::Ptr<_1aa30c33e_FnDecl> _8447_f = _1aa8755bb_buildFnPrototype(_self_, _84229_tokens, &(_8437_i), _84247_method);;
	if (_84261_prototype) {
		if ((_8437_i < (*(_84229_tokens)).len())) {
			_1aa86e8d4_pushErr(_self_, (*(_84229_tokens))[(_8437_i + 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		return _8447_f;;
	} else if ((_8447_f == nullptr)) {
		return _8447_f;;
	};
	if ((_8437_i >= (*(_84229_tokens)).len())) {
		_1aa86e230_stop(_self_);
		_1aa86e8d4_pushErr(_self_, (*(_8447_f))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1aa86ec47_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _8607_blockTokens = _1aa86c5a2_range(&(_8437_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _84229_tokens);;
	if ((_8607_blockTokens != nullptr)) {
		(*_8447_f.alloc)._field_Scope=_1aa870a7d_buildScope(_self_, &(_8607_blockTokens), (*(_84229_tokens))[(_8437_i - 1LL)]);
		(*((*_8447_f.alloc)._field_Scope))._field_Unsafety=(*_8447_f.alloc)._field_Unsafety;
		if ((_8437_i < (*(_84229_tokens)).len())) {
			_1aa86e8d4_pushErr(_self_, (*(_84229_tokens))[_8437_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	} else {
		_1aa86e230_stop(_self_);
		_1aa86e8d4_pushErr(_self_, (*_8447_f.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1aa86ec47_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _8447_f;;
}



inline jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _1aa875db3_getUseDeclSelectors(_1aa86de00_parser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _87639_tokens) {
	jule::I32 _8777_i = 0LL;;
	_87639_tokens=_1aa86c5a2_range(&(_8777_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_87639_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>> _8797_parts;
	jule::Slice<_1ada72b17_Log> _87914_errs;
	({
		__jule_tuple_ssx_1aa2d51c4_Token__jule_tuple_s_1ada72b17_Log __jule_assign_result = _1aa86cd22_parts(&(_87639_tokens), static_cast<jule::U32>(5LLU), true);
		_8797_parts = __jule_assign_result.__jule_result_arg0;
		_87914_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_87914_errs.len() > 0LL)) {
		((*(_self_))._field_errors).append(_87914_errs);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _8857_selectors = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa2d51c4_Token>>::alloc(0LL, _8797_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa2d51c4_Token>(nullptr); __jule_collection; });;
	{
		auto expr = &(_8797_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd280db5:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _88615_part = *it;
			{
				if ((_88615_part.len() > 1LL)) {
					_1aa86e8d4_pushErr(_self_, _88615_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1aa2d51c4_Token> _8908_tok = _88615_part[0LL];;
				if ((((*(_8908_tok))._field_Id != static_cast<jule::U32>(1LLU)) && ((*_8908_tok.alloc)._field_Id != static_cast<jule::U32>(24LLU)))) {
					_1aa86e8d4_pushErr(_self_, _8908_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					_1aa86ec47_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					goto _iter_next_1bd280db5;
				};
				{ jule::Slice<jule::Ptr<_1aa2d51c4_Token>> &__jule_push_dest = _8857_selectors; __jule_push_dest.push(_8908_tok); };
			}
			_iter_next_1bd280db5:;
			++it;
			goto _iter_begin_1bd280db5;
		}
		_iter_end_1bd280db5:;
	};
	return _8857_selectors;;
}



inline void _1aa876226_buildBindUseDecl(_1aa86de00_parser* _self_, jule::Ptr<_1aa313785_UseDecl>* _90137_decl, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _90154_tokens) {
	if (((*(_90154_tokens)).len() > 1LL)) {
		_1aa86e8d4_pushErr(_self_, (*(_90154_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1aa2d51c4_Token> _9053_token = (*(_90154_tokens))[0LL];;
	if ((((*(_9053_token))._field_Id != static_cast<jule::U32>(4LLU)) || (((*_9053_token.alloc)._field_Kind[0LL] != '`') && ((*_9053_token.alloc)._field_Kind[0LL] != '\"')))) {
		_1aa86e8d4_pushErr(_self_, _9053_token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_90137_decl))))._field_Binded=true;
	(*((*(_90137_decl))))._field_LinkPath=(*_9053_token.alloc)._field_Kind.slice(1LL, ((*_9053_token.alloc)._field_Kind.len() - 1LL));
}



inline jule::Str _1aa876567_useDeclTokstoa(_1aa86de00_parser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _91431_tokens) {
	jule::I32 _9157_n = 0LL;;
	{
		auto expr = _91431_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd28843e:;
		if (it != expr_end) {
			jule::Ptr<_1aa2d51c4_Token> *_91610_token = it;
			{
				if ((((*((*(_91610_token))))._field_Id != static_cast<jule::U32>(1LLU)) && ((*(*(_91610_token)).alloc)._field_Id != static_cast<jule::U32>(19LLU)))) {
					_1aa86e8d4_pushErr(_self_, (*(_91610_token)), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				_9157_n+=(*(*(_91610_token)).alloc)._field_Kind.len();
			}
			_iter_next_1bd28843e:;
			++it;
			goto _iter_begin_1bd28843e;
		}
		_iter_end_1bd28843e:;
	};
	_1ed486d49_StrBuilder _9227_s = static__1ed487146_New(_9157_n);;
	{
		auto expr = _91431_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd2882da:;
		if (it != expr_end) {
			jule::Ptr<_1aa2d51c4_Token> *_92310_token = it;
			{
				_1ed4909ac_WriteStr(&_9227_s, (*((*(_92310_token))))._field_Kind);
			}
			_iter_next_1bd2882da:;
			++it;
			goto _iter_begin_1bd2882da;
		}
		_iter_end_1bd2882da:;
	};
	return _1ed4912a4_Str(&_9227_s);;
}



inline void _1aa8768ca_buildStdUseDecl(_1aa86de00_parser* _self_, jule::Ptr<_1aa313785_UseDecl>* _92936_decl, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _92956_tokens) {
	(*((*(_92936_decl))))._field_Std=true;
	jule::Ptr<_1aa2d51c4_Token> _9327_token = _92956_tokens[0LL];;
	if ((_92956_tokens.len() < 3LL)) {
		_1aa86e8d4_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(_92956_tokens).mut_slice(2LL);;
	_9327_token=_92956_tokens[(_92956_tokens.len() - 1LL)];
	{
		auto &_match_expr{ (*(_9327_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_1bd28cde4:;
			{
				_1aa86e8d4_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_1bd28ce6b:;
			{
				jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _94512_selectors = nullptr;;
				({
					__jule_tuple_sx_1aa2d51c4_Token__jule_tuple_sx_1aa2d51c4_Token __jule_assign_result = _1aa86c86b_rangeLast(&(_92956_tokens));
					_92956_tokens = __jule_assign_result.__jule_result_arg0;
					_94512_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_92936_decl))))._field_Selected=_1aa875db3_getUseDeclSelectors(_self_, _94512_selectors);
				if ((_92956_tokens.len() == 0LL)) {
					_1aa86e8d4_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_9327_token=_92956_tokens[(_92956_tokens.len() - 1LL)];
				if (((*(_9327_token))._field_Id != static_cast<jule::U32>(19LLU))) {
					_1aa86e8d4_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_92956_tokens).mut_slice(0LL, (_92956_tokens.len() - 1LL));;
				if ((_92956_tokens.len() == 0LL)) {
					_1aa86e8d4_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1bd28ced2:;
			{
				(_92956_tokens).mut_slice(0LL, (_92956_tokens.len() - 1LL));;
				if ((_92956_tokens.len() == 0LL)) {
					_1aa86e8d4_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_9327_token=_92956_tokens[(_92956_tokens.len() - 1LL)];
				if (((*(_9327_token))._field_Id != static_cast<jule::U32>(19LLU))) {
					_1aa86e8d4_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_92956_tokens).mut_slice(0LL, (_92956_tokens.len() - 1LL));;
				if ((_92956_tokens.len() == 0LL)) {
					_1aa86e8d4_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_92936_decl))))._field_Full=true;
			}
		}
		_match_end_1bd28cd8e:;
	};
	if (((_92956_tokens.len() == 1LL) && ((*(_92956_tokens[0LL]))._field_Id == static_cast<jule::U32>(31LLU)))) {
		(*((*(_92936_decl))))._field_LinkPath=jule::Str::lit("std::unsafe", 11);
	} else {
		(*((*(_92936_decl))))._field_LinkPath=(jule::Str::lit("std::", 5) + _1aa876567_useDeclTokstoa(_self_, &(_92956_tokens)));
	};
}



inline void _1aa876c3d_buildIdentUseDecl(_1aa86de00_parser* _self_, jule::Ptr<_1aa313785_UseDecl>* _98738_decl, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _98758_tokens) {
	(*((*(_98738_decl))))._field_Std=false;
	jule::Ptr<_1aa2d51c4_Token> _9907_token = _98758_tokens[(_98758_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ (*(_9907_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_1bd2969ad:;
			{
				_1aa86e8d4_pushErr(_self_, _9907_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_1bd297915:;
			{
				jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _99612_selectors = nullptr;;
				({
					__jule_tuple_sx_1aa2d51c4_Token__jule_tuple_sx_1aa2d51c4_Token __jule_assign_result = _1aa86c86b_rangeLast(&(_98758_tokens));
					_98758_tokens = __jule_assign_result.__jule_result_arg0;
					_99612_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_98738_decl))))._field_Selected=_1aa875db3_getUseDeclSelectors(_self_, _99612_selectors);
				if ((_98758_tokens.len() == 0LL)) {
					_1aa86e8d4_pushErr(_self_, _9907_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_9907_token=_98758_tokens[(_98758_tokens.len() - 1LL)];
				if (((*(_9907_token))._field_Id != static_cast<jule::U32>(19LLU))) {
					_1aa86e8d4_pushErr(_self_, _9907_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_98758_tokens).mut_slice(0LL, (_98758_tokens.len() - 1LL));;
				if ((_98758_tokens.len() == 0LL)) {
					_1aa86e8d4_pushErr(_self_, _9907_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1bd29797b:;
			{
				(_98758_tokens).mut_slice(0LL, (_98758_tokens.len() - 1LL));;
				if ((_98758_tokens.len() == 0LL)) {
					_1aa86e8d4_pushErr(_self_, _9907_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_9907_token=_98758_tokens[(_98758_tokens.len() - 1LL)];
				if (((*(_9907_token))._field_Id != static_cast<jule::U32>(19LLU))) {
					_1aa86e8d4_pushErr(_self_, _9907_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_98758_tokens).mut_slice(0LL, (_98758_tokens.len() - 1LL));;
				if ((_98758_tokens.len() == 0LL)) {
					_1aa86e8d4_pushErr(_self_, _9907_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_98738_decl))))._field_Full=true;
			}
		}
		_match_end_1bd2977e4:;
	};
	(*((*(_98738_decl))))._field_LinkPath=_1aa876567_useDeclTokstoa(_self_, &(_98758_tokens));
}



inline void _1aa8770a1_parseUseDecl(_1aa86de00_parser* _self_, jule::Ptr<_1aa313785_UseDecl>* _103533_decl, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _103553_tokens) {
	if ((*((*(_103533_decl))))._field_Binded) {
		_1aa876226_buildBindUseDecl(_self_, _103533_decl, &(_103553_tokens));
		return;;
	};
	jule::Ptr<_1aa2d51c4_Token> _10417_token = _103553_tokens[0LL];;
	if (((*(_10417_token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1aa86e8d4_pushErr(_self_, _10417_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1aa86ec47_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	if (((_103553_tokens.len() > 2LL) && ((*(_103553_tokens[1LL]))._field_Id == static_cast<jule::U32>(9LLU)))) {
		(*((*(_103533_decl))))._field_Alias=(*_10417_token.alloc)._field_Kind;
		if (((*(_103553_tokens[2LL]))._field_Id != static_cast<jule::U32>(1LLU))) {
			_1aa86e8d4_pushErr(_self_, _10417_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_1aa86ec47_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			return;;
		};
		(_103553_tokens).mut_slice(2LL);;
		_10417_token=_103553_tokens[0LL];
	};
	;
	{
		
		if ((*(_10417_token))._field_Kind.equal("std", 3)) {
			_case_begin_1bd2a4adc:;
			{
				_1aa8768ca_buildStdUseDecl(_self_, _103533_decl, _103553_tokens);
			}
		}
		else {
			_case_begin_1bd2a4735:;
			{
				_1aa876c3d_buildIdentUseDecl(_self_, _103533_decl, _103553_tokens);
			}
		}
		_match_end_1bd2a46be:;
	};
}



inline jule::Ptr<_1aa313785_UseDecl> _1aa87749c_buildUseDecl(_1aa86de00_parser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _106932_tokens, jule::Bool _106950_binded) {
	jule::Ptr<_1aa313785_UseDecl> _10707_decl = jule::new_ptr<_1aa313785_UseDecl>(_1aa313785_UseDecl{._field_Token=_106932_tokens[0LL], ._field_LinkPath=jule::Str(), ._field_Alias=jule::Str(), ._field_Full=false, ._field_Selected=jule::Slice<jule::Ptr<_1aa2d51c4_Token>>(nullptr), ._field_Binded=_106950_binded, ._field_Std=false});;
	if ((_106932_tokens.len() < 2LL)) {
		_1aa86e8d4_pushErr(_self_, (*(_10707_decl))._field_Token, jule::Str::lit("missing path of use statement", 29), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_106932_tokens).mut_slice(1LL);;
	_1aa8770a1_parseUseDecl(_self_, &(_10707_decl), _106932_tokens);
	return _10707_decl;;
}



inline jule::Ptr<_1aa2ea67e_TypeDecl> _1aa877898_buildTypeEnumItemKind(jule::Ptr<_1aa86de00_parser> _self_, jule::I32* _108343_i, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _108356_tokens) {
	jule::I32 _10847_braceN = 0LL;;
	jule::I32 _10853_exprStart = (*(_108343_i));;
	for (; ((*(_108343_i)) < (*(_108356_tokens)).len()); ((*(_108343_i)))++) {
		{
			jule::Ptr<_1aa2d51c4_Token> _10874_t = (*(_108356_tokens))[(*(_108343_i))];;
			{
				auto &_match_expr{ (*(_10874_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1bd2a8b35:;
					{
						(_10847_braceN)++;
						goto _iter_next_1bd2a80b8;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1bd2a8e43:;
					{
						(_10847_braceN)--;
					}
				}
				_match_end_1bd2a8ddd:;
			};
			if ((_10847_braceN > 0LL)) {
				goto _iter_next_1bd2a80b8;
			};
			if ((((*(_10874_t))._field_Id == static_cast<jule::U32>(5LLU)) || (((*(_108343_i)) + 1LL) >= (*(_108356_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _110313_kindTokens = nullptr;;
				if (((*_10874_t.alloc)._field_Id == static_cast<jule::U32>(5LLU))) {
					_110313_kindTokens=(*(_108356_tokens)).slice(_10853_exprStart, (*(_108343_i)));
				} else {
					_110313_kindTokens=(*(_108356_tokens)).slice(_10853_exprStart);
				};
				jule::I32 _11099_j = 0LL;;
				jule::Ptr<_1aa2ea67e_TypeDecl> _11109_kind;
				({
					__jule_tuple_x_1aa2ea67e_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa8714da_buildType(_self_, &(_110313_kindTokens), (&(_11099_j)), true);
					_11109_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_11099_j < _110313_kindTokens.len())) {
					_1aa86e8d4_pushErr(_self_, _110313_kindTokens[_11099_j], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				return _11109_kind;;
			};
		}
	_iter_next_1bd2a80b8:;
	}
	_iter_end_1bd2a80b8:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1aa315127_TypeEnumItemDecl>> _1aa877bd9_buildTypeEnumItems(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _112040_tokens) {
	jule::Slice<jule::Ptr<_1aa315127_TypeEnumItemDecl>> _11217_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa315127_TypeEnumItemDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa315127_TypeEnumItemDecl>(nullptr); __jule_collection; });;
	jule::I32 _11227_i = 0LL;;
	for (; (_11227_i < (*(_112040_tokens)).len()); (_11227_i)++) {
		{
			jule::Ptr<_1aa2d51c4_Token> _11248_t = (*(_112040_tokens))[_11227_i];;
			jule::Ptr<_1aa315127_TypeEnumItemDecl> _11258_item = jule::new_ptr<_1aa315127_TypeEnumItemDecl>(_1aa315127_TypeEnumItemDecl{._field_Token=jule::Ptr<_1aa2d51c4_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr)});;
			(*_11258_item.alloc)._field_Token=_11248_t;
			if ((((*((*_11258_item.alloc)._field_Token))._field_Id == static_cast<jule::U32>(1LLU)) && (((*(_112040_tokens)).len() - _11227_i) > 2LL))) {
				_11248_t=(*(_112040_tokens))[(_11227_i + 1LL)];
				if (((*(_11248_t))._field_Id == static_cast<jule::U32>(8LLU))) {
					(*_11258_item.alloc)._field_Ident=(*(*(_11258_item))._field_Token.alloc)._field_Kind;
					_11227_i+=2LL;
					if (((_11227_i >= (*(_112040_tokens)).len()) || ((*((*(_112040_tokens))[_11227_i]))._field_Id == static_cast<jule::U32>(5LLU)))) {
						_1aa86e8d4_pushErr(_self_.ptr(), _11248_t, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
						goto _iter_next_1bd2adcb1;
					};
				};
			};
			(*_11258_item.alloc)._field_Kind=_1aa877898_buildTypeEnumItemKind(_self_, &(_11227_i), _112040_tokens);
			{ jule::Slice<jule::Ptr<_1aa315127_TypeEnumItemDecl>> &__jule_push_dest = _11217_items; __jule_push_dest.push(_11258_item); };
		}
	_iter_next_1bd2adcb1:;
	}
	_iter_end_1bd2adcb1:;;
	return _11217_items;;
}



inline jule::Ptr<_1aa315787_TypeEnumDecl> _1aa87802a_buildTypeEnumDecl(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _114439_tokens) {
	jule::I32 _11457_i = 1LL;;
	jule::Ptr<_1aa315787_TypeEnumDecl> _11467_e = jule::new_ptr<_1aa315787_TypeEnumDecl>(_1aa315787_TypeEnumDecl{._field_Token=(*(_114439_tokens))[_11457_i], ._field_Public=false, ._field_Ident=jule::Str(), ._field_Items=jule::Slice<jule::Ptr<_1aa315127_TypeEnumItemDecl>>(nullptr), ._field_End=jule::Ptr<_1aa2d51c4_Token>(nullptr)});;
	if (((*((*(_11467_e))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1aa86e8d4_pushErr(_self_.ptr(), (*_11467_e.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1aa86ec47_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_11467_e.alloc)._field_Ident=(*(*(_11467_e))._field_Token.alloc)._field_Kind;
	_11457_i+=3LL;
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _11567_itemTokens = _1aa86c5a2_range(&(_11457_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _114439_tokens);;
	if ((_11567_itemTokens == nullptr)) {
		_1aa86e230_stop(_self_);
		_1aa86e8d4_pushErr(_self_, (*_11467_e.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1aa86ec47_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _11467_e;;
	} else if ((_11457_i < (*(_114439_tokens)).len())) {
		_1aa86e8d4_pushErr(_self_, (*(_114439_tokens))[_11457_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_11467_e.alloc)._field_Public=_1aa3b851b_IsPub((*_11467_e.alloc)._field_Ident);
	(*_11467_e.alloc)._field_End=(*(_114439_tokens))[(_11457_i - 1LL)];
	(*_11467_e.alloc)._field_Items=_1aa877bd9_buildTypeEnumItems(_self_, &(_11567_itemTokens));
	return _11467_e;;
}



inline jule::Ptr<_1aa2ee9b3_Expr> _1aa878426_buildEnumItemExpr(jule::Ptr<_1aa86de00_parser> _self_, jule::I32* _117139_i, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _117152_tokens) {
	jule::I32 _11727_braceN = 0LL;;
	jule::I32 _11733_exprStart = (*(_117139_i));;
	for (; ((*(_117139_i)) < (*(_117152_tokens)).len()); ((*(_117139_i)))++) {
		{
			jule::Ptr<_1aa2d51c4_Token> _11754_t = (*(_117152_tokens))[(*(_117139_i))];;
			{
				auto &_match_expr{ (*(_11754_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1bd2bb9d3:;
					{
						(_11727_braceN)++;
						goto _iter_next_1bd2bae66;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1bd2bbce1:;
					{
						(_11727_braceN)--;
					}
				}
				_match_end_1bd2bbc8b:;
			};
			if ((_11727_braceN > 0LL)) {
				goto _iter_next_1bd2bae66;
			};
			if ((((*(_11754_t))._field_Id == static_cast<jule::U32>(5LLU)) || (((*(_117139_i)) + 1LL) >= (*(_117152_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _119113_exprTokens = nullptr;;
				if (((*_11754_t.alloc)._field_Id == static_cast<jule::U32>(5LLU))) {
					_119113_exprTokens=(*(_117152_tokens)).slice(_11733_exprStart, (*(_117139_i)));
				} else {
					_119113_exprTokens=(*(_117152_tokens)).slice(_11733_exprStart);
				};
				return _1aa870088_buildExpr(_self_, &(_119113_exprTokens));;
			};
		}
	_iter_next_1bd2bae66:;
	}
	_iter_end_1bd2bae66:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1aa313c3b_EnumItemDecl>> _1aa878767_buildEnumItems(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _120336_tokens) {
	jule::Slice<jule::Ptr<_1aa313c3b_EnumItemDecl>> _12047_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa313c3b_EnumItemDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa313c3b_EnumItemDecl>(nullptr); __jule_collection; });;
	jule::I32 _12057_i = 0LL;;
	for (; (_12057_i < (*(_120336_tokens)).len()); (_12057_i)++) {
		{
			jule::Ptr<_1aa2d51c4_Token> _12078_t = (*(_120336_tokens))[_12057_i];;
			jule::Ptr<_1aa313c3b_EnumItemDecl> _12088_item = jule::new_ptr<_1aa313c3b_EnumItemDecl>(_1aa313c3b_EnumItemDecl{._field_Token=jule::Ptr<_1aa2d51c4_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Expr=jule::Ptr<_1aa2ee9b3_Expr>(nullptr)});;
			(*_12088_item.alloc)._field_Token=_12078_t;
			if (((*((*_12088_item.alloc)._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
				_1aa86e8d4_pushErr(_self_.ptr(), (*_12088_item.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1aa86ec47_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			};
			(*_12088_item.alloc)._field_Ident=(*(*(_12088_item))._field_Token.alloc)._field_Kind;
			if ((((_12057_i + 1LL) >= (*(_120336_tokens)).len()) || ((*((*(_120336_tokens))[(_12057_i + 1LL)]))._field_Id == static_cast<jule::U32>(5LLU)))) {
				if (((_12057_i + 1LL) < (*(_120336_tokens)).len())) {
					(_12057_i)++;
				};
				{ jule::Slice<jule::Ptr<_1aa313c3b_EnumItemDecl>> &__jule_push_dest = _12047_items; __jule_push_dest.push(_12088_item); };
				goto _iter_next_1bd2c0883;
			};
			(_12057_i)++;
			_12078_t=(*(_120336_tokens))[_12057_i];
			(_12057_i)++;
			if (((*(_12078_t))._field_Id != static_cast<jule::U32>(8LLU))) {
				_1aa86e8d4_pushErr(_self_, _12078_t, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1aa86ec47_pushSuggestion(_self_, jule::Str::lit("expected colon \":\" for assignment", 33), jule::Slice<jule::Any>());
				goto _iter_next_1bd2c0883;
			};
			if (((_12057_i >= (*(_120336_tokens)).len()) || ((*((*(_120336_tokens))[_12057_i]))._field_Id == static_cast<jule::U32>(5LLU)))) {
				_1aa86e8d4_pushErr(_self_, _12078_t, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
				goto _iter_next_1bd2c0883;
			};
			(*_12088_item.alloc)._field_Expr=_1aa878426_buildEnumItemExpr(_self_, &(_12057_i), _120336_tokens);
			{ jule::Slice<jule::Ptr<_1aa313c3b_EnumItemDecl>> &__jule_push_dest = _12047_items; __jule_push_dest.push(_12088_item); };
		}
	_iter_next_1bd2c0883:;
	}
	_iter_end_1bd2c0883:;;
	return _12047_items;;
}



inline jule::Ptr<_1aa3147ec_EnumDecl> _1aa878aa8_buildEnumDecl(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _124035_tokens) {
	if (((*(_124035_tokens)).len() < 3LL)) {
		_1aa86e8d4_pushErr(_self_.ptr(), (*(_124035_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa3147ec_EnumDecl> _12457_e = jule::new_ptr<_1aa3147ec_EnumDecl>(_1aa3147ec_EnumDecl{._field_Token=(*(_124035_tokens))[1LL], ._field_Public=false, ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr), ._field_Items=jule::Slice<jule::Ptr<_1aa313c3b_EnumItemDecl>>(nullptr), ._field_End=jule::Ptr<_1aa2d51c4_Token>(nullptr)});;
	if (((*((*(_12457_e))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1aa86e8d4_pushErr(_self_, (*_12457_e.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1aa86ec47_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_12457_e.alloc)._field_Ident=(*(*(_12457_e))._field_Token.alloc)._field_Kind;
	jule::I32 _12537_i = 2LL;;
	if (((*((*(_124035_tokens))[_12537_i]))._field_Id == static_cast<jule::U32>(8LLU))) {
		(_12537_i)++;
		if ((_12537_i >= (*(_124035_tokens)).len())) {
			_1aa86e8d4_pushErr(_self_, (*(_124035_tokens))[(_12537_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return _12457_e;;
		};
		({
			__jule_tuple_x_1aa2ea67e_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa8714da_buildType(_self_, _124035_tokens, (&(_12537_i)), true);
			(*_12457_e.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_12537_i >= (*(_124035_tokens)).len())) {
			_1aa86e230_stop(_self_);
			_1aa86e8d4_pushErr(_self_, (*_12457_e.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
			_1aa86ec47_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
			return _12457_e;;
		};
	} else {
		(*_12457_e.alloc)._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _12707_itemTokens = _1aa86c5a2_range(&(_12537_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _124035_tokens);;
	if ((_12707_itemTokens == nullptr)) {
		_1aa86e230_stop(_self_);
		_1aa86e8d4_pushErr(_self_, (*_12457_e.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1aa86ec47_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _12457_e;;
	} else if ((_12537_i < (*(_124035_tokens)).len())) {
		_1aa86e8d4_pushErr(_self_, (*(_124035_tokens))[_12537_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_12457_e.alloc)._field_Public=_1aa3b851b_IsPub((*_12457_e.alloc)._field_Ident);
	(*_12457_e.alloc)._field_End=(*(_124035_tokens))[(_12537_i - 1LL)];
	(*_12457_e.alloc)._field_Items=_1aa878767_buildEnumItems(_self_, &(_12707_itemTokens));
	return _12457_e;;
}



inline jule::Any _1aa878de9_buildNodeEnumDecl(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _128539_tokens) {
	if ((((*(_128539_tokens)).len() > 3LL) && ((*((*(_128539_tokens))[2LL]))._field_Id == static_cast<jule::U32>(8LLU)))) {
		if (((*((*(_128539_tokens))[3LL]))._field_Id == static_cast<jule::U32>(7LLU))) {
			return jule::Any(_1aa87802a_buildTypeEnumDecl(_self_, _128539_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_1aa878aa8_buildEnumDecl(_self_, _128539_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_1aa315a51_FieldDecl> _1aa87923a_buildField(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _129431_tokens) {
	jule::Ptr<_1aa315a51_FieldDecl> _12957_f = jule::new_ptr<_1aa315a51_FieldDecl>(_1aa315a51_FieldDecl{._field_Token=jule::Ptr<_1aa2d51c4_Token>(nullptr), ._field_Public=false, ._field_Mutable=false, ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr), ._field_Default=jule::Ptr<_1aa2ee9b3_Expr>(nullptr)});;
	(*_12957_f.alloc)._field_Mutable=((*(_129431_tokens[0LL]))._field_Id == static_cast<jule::U32>(32LLU));
	if ((*_12957_f.alloc)._field_Mutable) {
		if ((_129431_tokens.len() == 1LL)) {
			_1aa86e8d4_pushErr(_self_.ptr(), _129431_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_129431_tokens).mut_slice(1LL);;
	};
	(*_12957_f.alloc)._field_Token=_129431_tokens[0LL];
	if (((*((*_12957_f.alloc)._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1aa86e8d4_pushErr(_self_, (*_12957_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1aa86ec47_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_12957_f.alloc)._field_Ident=(*(*(_12957_f))._field_Token.alloc)._field_Kind;
	if ((_129431_tokens.len() == 1LL)) {
		_1aa86e8d4_pushErr(_self_, _129431_tokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_129431_tokens.len() < 3LL) || ((*(_129431_tokens[1LL]))._field_Id != static_cast<jule::U32>(8LLU)))) {
		_1aa86e8d4_pushErr(_self_, _129431_tokens[1LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_129431_tokens).mut_slice(2LL);;
	jule::I32 _13237_i = 0LL;;
	({
		__jule_tuple_x_1aa2ea67e_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa8714da_buildType(_self_, &(_129431_tokens), (&(_13237_i)), true);
		(*_12957_f.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_13237_i < _129431_tokens.len())) {
		jule::Ptr<_1aa2d51c4_Token> _13264_token = _129431_tokens[_13237_i];;
		if (((*(_13264_token))._field_Id != static_cast<jule::U32>(71LLU))) {
			_1aa86e8d4_pushErr(_self_, _129431_tokens[_13237_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_13237_i)++;
		if ((_13237_i >= _129431_tokens.len())) {
			_1aa86e8d4_pushErr(_self_, _13264_token, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_129431_tokens).mut_slice(_13237_i);;
		(*_12957_f.alloc)._field_Default=_1aa870088_buildExpr(_self_, &(_129431_tokens));
	};
	(*_12957_f.alloc)._field_Public=_1aa3b851b_IsPub((*_12957_f.alloc)._field_Ident);
	return _12957_f;;
}



inline jule::Slice<jule::Ptr<_1aa315a51_FieldDecl>> _1aa87957b_buildStructDeclFields(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _134342_tokens) {
	jule::Slice<jule::Ptr<_1aa315a51_FieldDecl>> _134411_fields = nullptr;;
	jule::Slice<jule::Ptr<_1aa84eed0_stmt>> _13457_stmts = _1aa850387_splitStmts(&(_134342_tokens));;
	{
		auto expr = &(_13457_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd2e0c6b:;
		if (it != expr_end) {
			jule::Ptr<_1aa84eed0_stmt> _134615_stmt = *it;
			{
				_134342_tokens=(*(_134615_stmt))._field_tokens;
				jule::Ptr<_1aa315a51_FieldDecl> _13488_f = _1aa87923a_buildField(_self_, _134342_tokens);;
				{ jule::Slice<jule::Ptr<_1aa315a51_FieldDecl>> &__jule_push_dest = _134411_fields; __jule_push_dest.push(_13488_f); };
			}
			_iter_next_1bd2e0c6b:;
			++it;
			goto _iter_begin_1bd2e0c6b;
		}
		_iter_end_1bd2e0c6b:;
	};
	return _134411_fields;;
}



inline jule::Ptr<_1aa316447_StructDecl> _1aa8798bc_buildStructDecl(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _135437_tokens) {
	if (((*(_135437_tokens)).len() < 3LL)) {
		_1aa86e8d4_pushErr(_self_.ptr(), (*(_135437_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I32 _13607_i = 1LL;;
	jule::Ptr<_1aa316447_StructDecl> _13617_s = jule::new_ptr<_1aa316447_StructDecl>(_1aa316447_StructDecl{._field_Token=(*(_135437_tokens))[_13607_i], ._field_End=jule::Ptr<_1aa2d51c4_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Fields=jule::Slice<jule::Ptr<_1aa315a51_FieldDecl>>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Directives=jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aa307889_GenericDecl>>(nullptr)});;
	if (((*((*(_13617_s))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1aa86e8d4_pushErr(_self_, (*_13617_s.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1aa86ec47_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_13607_i)++;
	if ((_13607_i >= (*(_135437_tokens)).len())) {
		_1aa86e8d4_pushErr(_self_, (*(_135437_tokens))[_13607_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _13617_s;;
	};
	(*_13617_s.alloc)._field_Ident=(*(*(_13617_s))._field_Token.alloc)._field_Kind;
	jule::Ptr<_1aa2d51c4_Token> _13753_errorToken = (*(_135437_tokens))[_13607_i];;
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _13767_genericsTokens = _1aa86c5a2_range(&(_13607_i), static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), _135437_tokens);;
	if ((_13767_genericsTokens != nullptr)) {
		(*_13617_s.alloc)._field_Generics=_1aa872de3_buildGenerics(_self_, &(_13767_genericsTokens), &(_13753_errorToken));
	};
	if ((_13607_i >= (*(_135437_tokens)).len())) {
		_1aa86e8d4_pushErr(_self_, (*(_135437_tokens))[(_13607_i - 1LL)], jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1aa86ec47_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _13617_s;;
	};
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _13867_bodyTokens = _1aa86c5a2_range(&(_13607_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _135437_tokens);;
	if ((_13867_bodyTokens == nullptr)) {
		_1aa86e230_stop(_self_);
		_1aa86e8d4_pushErr(_self_, (*_13617_s.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1aa86ec47_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _13617_s;;
	};
	if ((_13607_i < (*(_135437_tokens)).len())) {
		_1aa86e8d4_pushErr(_self_, (*(_135437_tokens))[_13607_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_13617_s.alloc)._field_Public=_1aa3b851b_IsPub((*_13617_s.alloc)._field_Ident);
	(*_13617_s.alloc)._field_Fields=_1aa87957b_buildStructDeclFields(_self_, _13867_bodyTokens);
	(*_13617_s.alloc)._field_End=(*(_135437_tokens))[(_13607_i - 1LL)];
	return _13617_s;;
}



inline void _1aa879b75_checkMethodReceiver(_1aa86de00_parser* _self_, jule::Ptr<_1aa30c33e_FnDecl>* _140236_f) {
	if ((*((*(_140236_f))))._field_Statically) {
		if ((((*((*(_140236_f))))._field_Params.len() > 0LL) && _1aa30b294_IsSelf((*((*(_140236_f))))._field_Params[0LL].ptr()))) {
			_1aa86e8d4_pushErr(_self_, (*((*(_140236_f))))._field_Token, jule::Str::lit("static functions cannot have receiver parameter", 47), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*((*(_140236_f))))._field_Params.len() == 0LL)) {
		_1aa86e8d4_pushErr(_self_, (*((*(_140236_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aa30addc_ParamDecl> _14143_param = (*((*(_140236_f))))._field_Params[0LL];;
	if ((!(_1aa30b294_IsSelf(_14143_param.ptr())))) {
		_1aa86e8d4_pushErr(_self_, (*((*(_140236_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1aa879ed8_buildTraitBody(jule::Ptr<_1aa86de00_parser> _self_, jule::Ptr<_1aa316b84_TraitDecl>* _142136_t, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _142155_tokens) {
	jule::Slice<jule::Ptr<_1aa84eed0_stmt>> _14227_stmts = _1aa850387_splitStmts(&(_142155_tokens));;
	{
		auto expr = &(_14227_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd30171b:;
		if (it != expr_end) {
			jule::Ptr<_1aa84eed0_stmt> _142315_stmt = *it;
			{
				_142155_tokens=(*(_142315_stmt))._field_tokens;
				if ((_142155_tokens.len() == 0LL)) {
					goto _iter_next_1bd30171b;
				};
				{
					auto &_match_expr{ (*(_142155_tokens[0LL]))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(29LLU)) {
						_case_begin_1bd3051c0:;
						{
							jule::Ptr<_1aa30c33e_FnDecl> _14309_f = _1aa875a72_buildFn(_self_, &(_142155_tokens), true, true);;
							if ((_14309_f == nullptr)) {
								goto _match_end_1bd302992;
							};
							_1aa879b75_checkMethodReceiver(_self_, &(_14309_f));
							if (((*(_14309_f))._field_Generics.len() > 0LL)) {
								_1aa86e8d4_pushErr(_self_, (*(_14309_f))._field_Token, jule::Str::lit("trait methods cannot have generics", 34), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1aa30c33e_FnDecl>> &__jule_push_dest = (*((*(_142136_t))))._field_Methods; __jule_push_dest.push(_14309_f); };
						}
					}
					else {
						_case_begin_1bd302299:;
						{
							jule::I32 _14409_i = 0LL;;
							jule::Ptr<_1aa2ea67e_TypeDecl> _14419_ti;
							jule::Bool _144113_ok;
							({
								__jule_tuple_x_1aa2ea67e_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa8714da_buildType(_self_, &(_142155_tokens), (&(_14409_i)), true);
								_14419_ti = __jule_assign_result.__jule_result_arg0;
								_144113_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_144113_ok))) {
								goto _match_end_1bd302992;
							};
							if ((_14409_i < _142155_tokens.len())) {
								_1aa86e8d4_pushErr(_self_, _142155_tokens[_14409_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>> &__jule_push_dest = (*((*(_142136_t))))._field_Inherits; __jule_push_dest.push(_14419_ti); };
						}
					}
					_match_end_1bd302992:;
				};
			}
			_iter_next_1bd30171b:;
			++it;
			goto _iter_begin_1bd30171b;
		}
		_iter_end_1bd30171b:;
	};
}



inline jule::Ptr<_1aa316b84_TraitDecl> _1aa87a329_buildTraitDecl(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _145336_tokens) {
	if (((*(_145336_tokens)).len() < 3LL)) {
		_1aa86e8d4_pushErr(_self_.ptr(), (*(_145336_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa316b84_TraitDecl> _14587_t = jule::new_ptr<_1aa316b84_TraitDecl>(_1aa316b84_TraitDecl{._field_Token=(*(_145336_tokens))[1LL], ._field_End=jule::Ptr<_1aa2d51c4_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Public=false, ._field_Inherits=jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1aa30c33e_FnDecl>>(nullptr)});;
	if (((*((*(_14587_t))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1aa86e8d4_pushErr(_self_, (*_14587_t.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1aa86ec47_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_14587_t.alloc)._field_Ident=(*(*(_14587_t))._field_Token.alloc)._field_Kind;
	jule::I32 _14667_i = 2LL;;
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _14677_bodyTokens = _1aa86c5a2_range(&(_14667_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _145336_tokens);;
	if ((_14677_bodyTokens == nullptr)) {
		_1aa86e230_stop(_self_);
		_1aa86e8d4_pushErr(_self_, (*_14587_t.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1aa86ec47_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_14667_i < (*(_145336_tokens)).len())) {
		_1aa86e8d4_pushErr(_self_, (*(_145336_tokens))[_14667_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_14587_t.alloc)._field_Public=_1aa3b851b_IsPub((*_14587_t.alloc)._field_Ident);
	_1aa879ed8_buildTraitBody(_self_, &(_14587_t), _14677_bodyTokens);
	(*_14587_t.alloc)._field_End=(*(_145336_tokens))[(_14667_i - 1LL)];
	return _14587_t;;
}



inline jule::Ptr<_1aa30c33e_FnDecl> _1aa87a66a_buildBindFn(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _148332_tokens) {
	(_148332_tokens).mut_slice(1LL);;
	jule::Ptr<_1aa30c33e_FnDecl> _14857_f = _1aa875a72_buildFn(_self_, &(_148332_tokens), false, true);;
	if ((_14857_f != nullptr)) {
		(*_14857_f.alloc)._field_Public=false;
		(*_14857_f.alloc)._field_Binded=true;
	};
	return _14857_f;;
}



inline jule::Ptr<_1aa30d4e9_VarDecl> _1aa87a9ab_buildBindVar(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _149333_tokens) {
	(_149333_tokens).mut_slice(1LL);;
	jule::Ptr<_1aa30d4e9_VarDecl> _14957_v = _1aa8726a6_buildVar(_self_, _149333_tokens);;
	if ((_14957_v != nullptr)) {
		(*_14957_v.alloc)._field_Public=false;
		(*_14957_v.alloc)._field_Binded=true;
		if (((*_14957_v.alloc)._field_Expr != nullptr)) {
			_1aa86e8d4_pushErr(_self_, (*_14957_v.alloc)._field_Token, jule::Str::lit("binded variables cannot have expression", 39), jule::Slice<jule::Any>());
		};
	};
	return _14957_v;;
}



inline jule::Ptr<_1aa316447_StructDecl> _1aa87acec_buildBindStruct(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _150636_tokens) {
	(_150636_tokens).mut_slice(1LL);;
	jule::Ptr<_1aa316447_StructDecl> _15087_s = _1aa8798bc_buildStructDecl(_self_, &(_150636_tokens));;
	if ((_15087_s != nullptr)) {
		(*_15087_s.alloc)._field_Public=false;
		{
			auto expr = &((*_15087_s.alloc)._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd3190b3:;
			if (it != expr_end) {
				jule::Ptr<_1aa315a51_FieldDecl> _151116_f = *it;
				{
					(*(_151116_f))._field_Public=true;
				}
				_iter_next_1bd3190b3:;
				++it;
				goto _iter_begin_1bd3190b3;
			}
			_iter_end_1bd3190b3:;
		};
		(*_15087_s.alloc)._field_Binded=true;
	};
	return _15087_s;;
}



inline jule::Ptr<_1aa31219b_TypeAliasDecl> _1aa87b13d_buildBindTypeAlias(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _152039_tokens) {
	(_152039_tokens).mut_slice(1LL);;
	jule::Ptr<_1aa31219b_TypeAliasDecl> _15227_t = _1aa87182b_buildTypeAliasDecl(_self_, &(_152039_tokens));;
	if ((_15227_t != nullptr)) {
		(*_15227_t.alloc)._field_Public=false;
		(*_15227_t.alloc)._field_Binded=true;
	};
	return _15227_t;;
}



inline jule::Ptr<_1aa313785_UseDecl> _1aa87b47e_buildBindUse(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _153033_tokens) {
	if ((_153033_tokens.len() == 1LL)) {
		_1aa86e8d4_pushErr(_self_.ptr(), _153033_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_153033_tokens).mut_slice(1LL);;
	;
	return _1aa87749c_buildUseDecl(_self_, _153033_tokens, true);;
}



inline jule::Any _1aa87b7c0_buildBind(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _154131_tokens) {
	jule::Ptr<_1aa2d51c4_Token> _15427_token = (*(_154131_tokens))[0LL];;
	if (((*(_154131_tokens)).len() == 1LL)) {
		_1aa86e8d4_pushErr(_self_.ptr(), _15427_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_15427_token=(*(_154131_tokens))[1LL];
	{
		auto &_match_expr{ (*(_15427_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(29LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1bd31ed99:;
			{
				return jule::Any(_1aa87a66a_buildBindFn(_self_, (*(_154131_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU) || _match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1bd31ee10:;
			{
				return jule::Any(_1aa87a9ab_buildBindVar(_self_, (*(_154131_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(21LLU)) {
			_case_begin_1bd31ea25:;
			{
				return jule::Any(_1aa87acec_buildBindStruct(_self_, (*(_154131_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1bd31ea9c:;
			{
				return jule::Any(_1aa87b13d_buildBindTypeAlias(_self_, (*(_154131_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_1bd31e4e7:;
			{
				_1aa86e8d4_pushErr(_self_, _15427_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bd31e9ae:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa30c33e_FnDecl> _1aa87bb11_getMethod(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _156531_tokens) {
	jule::I32 _15667_i = 0LL;;
	jule::Ptr<_1aa2d51c4_Token> _15677_token = (*(_156531_tokens))[_15667_i];;
	if (((*(_15677_token))._field_Id == static_cast<jule::U32>(34LLU))) {
		if (((_15667_i + 1LL) >= (*(_156531_tokens)).len())) {
			_1aa86e8d4_pushErr(_self_.ptr(), _15677_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_15667_i)++;
		_15677_token=(*(_156531_tokens))[_15667_i];
	};
	if (((*_15677_token.alloc)._field_Id == static_cast<jule::U32>(31LLU))) {
		if (((_15667_i + 1LL) >= (*(_156531_tokens)).len())) {
			_1aa86e8d4_pushErr(_self_, _15677_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_15667_i)++;
		_15677_token=(*(_156531_tokens))[_15667_i];
	};
	if (((*_15677_token.alloc)._field_Id != static_cast<jule::U32>(29LLU))) {
		_1aa86e8d4_pushErr(_self_, _15677_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1aa875a72_buildFn(_self_, _156531_tokens, true, false);;
}



inline void _1aa87be74_parseImplBody(jule::Ptr<_1aa86de00_parser> _self_, jule::Ptr<_1aa3172e4_Impl>* _159435_ipl, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _159452_tokens) {
	jule::Slice<jule::Ptr<_1aa84eed0_stmt>> _15957_stmts = _1aa850387_splitStmts(_159452_tokens);;
	{
		auto expr = &(_15957_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd327885:;
		if (it != expr_end) {
			jule::Ptr<_1aa84eed0_stmt> _159615_stmt = *it;
			{
				(*(_159452_tokens))=(*(_159615_stmt))._field_tokens;
				jule::Ptr<_1aa2d51c4_Token> _15988_token = (*(_159452_tokens))[0LL];;
				{
					auto &_match_expr{ (*(_15988_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(35LLU)) {
						_case_begin_1bd327e5c:;
						{
							_1aa870682_pushDirective(_self_.ptr(), _1aa8703c9_buildDirective(_self_, (*(_159452_tokens))));
							goto _iter_next_1bd327885;
						}
					}
					_match_end_1bd328a95:;
				};
				{
					auto &_match_expr{ (*(_15988_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(6LLU)) {
						_case_begin_1bd329cb6:;
						{
							jule::Ptr<_1aa30d4e9_VarDecl> _16079_v = _1aa8726a6_buildVar(_self_, (*(_159452_tokens)));;
							if ((_16079_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_1aa30d4e9_VarDecl>> &__jule_push_dest = (*((*(_159435_ipl))))._field_Statics; __jule_push_dest.push(_16079_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U32>(34LLU) || _match_expr == static_cast<jule::U32>(29LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
						_case_begin_1bd329d2c:;
						{
							jule::Ptr<_1aa30c33e_FnDecl> _16149_f = _1aa87bb11_getMethod(_self_, _159452_tokens);;
							if ((_16149_f != nullptr)) {
								_1aa879b75_checkMethodReceiver(_self_, &(_16149_f));
								_1aa87c8ae_applyFnMeta(_self_, &(_16149_f));
								{ jule::Slice<jule::Ptr<_1aa30c33e_FnDecl>> &__jule_push_dest = (*((*(_159435_ipl))))._field_Methods; __jule_push_dest.push(_16149_f); };
							};
						}
					}
					else {
						_case_begin_1bd328bd8:;
						{
							_1aa86e8d4_pushErr(_self_, _15988_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							goto _iter_next_1bd327885;
						}
					}
					_match_end_1bd3291a0:;
				};
			}
			_iter_next_1bd327885:;
			++it;
			goto _iter_begin_1bd327885;
		}
		_iter_end_1bd327885:;
	};
}



inline jule::Ptr<_1aa3172e4_Impl> _1aa87c2b5_buildImpl(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _162730_tokens) {
	jule::Ptr<_1aa2d51c4_Token> _16287_token = _162730_tokens[0LL];;
	if ((_162730_tokens.len() < 2LL)) {
		_1aa86e8d4_pushErr(_self_.ptr(), _16287_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I32 _16347_i = 1LL;;
	jule::Ptr<_1aa2ea67e_TypeDecl> _16367_base;
	jule::Bool _163617_ok;
	({
		__jule_tuple_x_1aa2ea67e_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa8714da_buildType(_self_, &(_162730_tokens), (&(_16347_i)), true);
		_16367_base = __jule_assign_result.__jule_result_arg0;
		_163617_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_163617_ok))) {
		return nullptr;;
	};
	if ((_16347_i >= _162730_tokens.len())) {
		_1aa86e8d4_pushErr(_self_, _16287_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa3172e4_Impl> _16457_ipl = jule::new_ptr<_1aa3172e4_Impl>(_1aa3172e4_Impl{._field_End=jule::Ptr<_1aa2d51c4_Token>(nullptr), ._field_Base=_16367_base, ._field_Dest=jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1aa30c33e_FnDecl>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1aa30d4e9_VarDecl>>(nullptr)});;
	_16287_token=_162730_tokens[_16347_i];
	if (((*(_16287_token))._field_Id != static_cast<jule::U32>(9LLU))) {
		if (((*_16287_token.alloc)._field_Id == static_cast<jule::U32>(72LLU))) {
			std::swap((*(_16457_ipl))._field_Base, (*_16457_ipl.alloc)._field_Dest);
			goto _julec_label_1bd33618a;
		};
		_1aa86e230_stop(_self_);
		_1aa86e8d4_pushErr(_self_, _16287_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1aa86ec47_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_16347_i)++;
	if ((_16347_i >= _162730_tokens.len())) {
		_1aa86e230_stop(_self_);
		_1aa86e8d4_pushErr(_self_, _16287_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1aa86ec47_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1aa2ea67e_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa8714da_buildType(_self_, &(_162730_tokens), (&(_16347_i)), true);
		(*_16457_ipl.alloc)._field_Dest = __jule_assign_result.__jule_result_arg0;
		_163617_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_163617_ok))) {
		return nullptr;;
	};
	if ((_16347_i >= _162730_tokens.len())) {
		_1aa86e230_stop(_self_);
		_1aa86e8d4_pushErr(_self_, _16287_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1aa86ec47_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1bd33618a:;
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _16837_bodyTokens = _1aa86c5a2_range(&(_16347_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_162730_tokens));;
	if ((_16837_bodyTokens == nullptr)) {
		_1aa86e230_stop(_self_);
		_1aa86e8d4_pushErr(_self_, _16287_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1aa86ec47_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_16347_i < _162730_tokens.len())) {
		_1aa86e8d4_pushErr(_self_, _162730_tokens[_16347_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_16457_ipl.alloc)._field_End=_162730_tokens[(_16347_i - 1LL)];
	_1aa87be74_parseImplBody(_self_, &(_16457_ipl), &(_16837_bodyTokens));
	return _16457_ipl;;
}



inline jule::Any _1aa87c606_buildNodeData(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _169835_tokens) {
	jule::Ptr<_1aa2d51c4_Token> _16997_token = (*(_169835_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_16997_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(29LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1bd33b822:;
			{
				jule::Ptr<_1aa30c33e_FnDecl> _17038_f = _1aa875a72_buildFn(_self_, _169835_tokens, false, false);;
				if ((_17038_f != nullptr)) {
					(*_17038_f.alloc)._field_Global=true;
				};
				return jule::Any(_17038_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(30LLU) || _match_expr == static_cast<jule::U32>(6LLU) || _match_expr == static_cast<jule::U32>(32LLU) || _match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_1bd33be1b:;
			{
				return jule::Any(_1aa8726a6_buildVar(_self_, (*(_169835_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1bd33be82:;
			{
				return jule::Any(_1aa87182b_buildTypeAliasDecl(_self_, _169835_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(20LLU)) {
			_case_begin_1bd33b437:;
			{
				return _1aa878de9_buildNodeEnumDecl(_self_, _169835_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(21LLU)) {
			_case_begin_1bd33b49d:;
			{
				return jule::Any(_1aa8798bc_buildStructDecl(_self_, _169835_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(25LLU)) {
			_case_begin_1bd33b514:;
			{
				return jule::Any(_1aa87a329_buildTraitDecl(_self_, _169835_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(26LLU)) {
			_case_begin_1bd33b57a:;
			{
				return jule::Any(_1aa87c2b5_buildImpl(_self_, (*(_169835_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1bd33b5e1:;
			{
				return _1aa87b7c0_buildBind(_self_, _169835_tokens);;
			}
		}
		else {
			_case_begin_1bd33b14b:;
			{
				_1aa86e8d4_pushErr(_self_.ptr(), _16997_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bd33b3d2:;
	};
}



inline void _1aa87c8ae_applyFnMeta(_1aa86de00_parser* _self_, jule::Ptr<_1aa30c33e_FnDecl>* _173132_f) {
	(*((*(_173132_f))))._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1aa87cb67_applyMeta(_1aa86de00_parser* _self_, _1aa2e967d_Node* _173630_node) {
	{
		auto &_match_expr{ (*(_173630_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1bd342dab:;
			{
				jule::Ptr<_1aa30d4e9_VarDecl> _17398_v = (*(_173630_node))._field_Data.unsafe_cast_ptr<_1aa30d4e9_VarDecl>();;
				if ((_17398_v == nullptr)) {
					return;;
				};
				(*(_17398_v))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1bd342b25:;
			{
				jule::Ptr<_1aa30c33e_FnDecl> _17468_f = (*(_173630_node))._field_Data.unsafe_cast_ptr<_1aa30c33e_FnDecl>();;
				if ((_17468_f == nullptr)) {
					return;;
				};
				_1aa87c8ae_applyFnMeta(_self_, &(_17468_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1bd342e55:;
			{
				jule::Ptr<_1aa316447_StructDecl> _17528_sd = (*(_173630_node))._field_Data.unsafe_cast_ptr<_1aa316447_StructDecl>();;
				if ((_17528_sd == nullptr)) {
					return;;
				};
				(*(_17528_sd))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1bd342d34:;
	};
}



inline void _1aa87ce20_pushUseDecl(jule::Ptr<_1aa86de00_parser> _self_, jule::Ptr<_1aa313785_UseDecl>* _176133_decl) {
	(*((*(_self_))._field_ast))._field_UseDecls=jule::append((*(*(_self_))._field_ast.alloc)._field_UseDecls,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa313785_UseDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_176133_decl)); __jule_collection; }));
	if (((*(*(_self_))._field_ast.alloc)._field_Nodes.len() > 0LL)) {
		_1aa86e8d4_pushErr(_self_, (*((*(_176133_decl))))._field_Token, jule::Str::lit("use declarations must declared top of source code", 49), jule::Slice<jule::Any>());
		_1aa86ec47_pushSuggestion(_self_, jule::Str::lit("move this use declaration to top of source file", 47), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1aa87d261_pushMetaNodes(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _176935_tokens) {
	{
		auto &_match_expr{ (*((*(_176935_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(16LLU)) {
			_case_begin_1bd349203:;
			{
				;
				jule::Ptr<_1aa313785_UseDecl> _17738_decl = _1aa87749c_buildUseDecl(_self_.ptr(), (*(_176935_tokens)), false);;
				_1aa87ce20_pushUseDecl(_self_, &(_17738_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1bd34927a:;
			{
				if ((((*(_176935_tokens)).len() > 1LL) && ((*((*(_176935_tokens))[1LL]))._field_Id == static_cast<jule::U32>(16LLU)))) {
					jule::Ptr<_1aa313785_UseDecl> _17789_decl = _1aa87b47e_buildBindUse(_self_, (*(_176935_tokens)));;
					_1aa87ce20_pushUseDecl(_self_, &(_17789_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(35LLU)) {
			_case_begin_1bd3492e1:;
			{
				_1aa870682_pushDirective(_self_.ptr(), _1aa8703c9_buildDirective(_self_, (*(_176935_tokens))));
				return true;;
			}
		}
		_match_end_1bd349104:;
	};
	return false;;
}



inline _1aa2e967d_Node _1aa87d5a2_parseNode(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _178931_st) {
	_1aa2e967d_Node _17907_node = _1aa2e967d_Node{._field_Token=(*(_178931_st))[0LL], ._field_Data=jule::Any(nullptr)};;
	if (_1aa87d261_pushMetaNodes(_self_, _178931_st)) {
		return _17907_node;;
	};
	jule::Any _17987_data = _1aa87c606_buildNodeData(_self_, _178931_st);;
	if ((_17987_data == nullptr)) {
		return _17907_node;;
	};
	_17907_node._field_Data=_17987_data;
	_1aa87cb67_applyMeta(_self_, &(_17907_node));
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1aa86e8d4_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
	(*_self_.alloc)._field_directives=nullptr;
	return _17907_node;;
}



inline void _1aa87d85a_appendNode(jule::Ptr<_1aa86de00_parser> _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _181332_st) {
	if (((*(_181332_st)).len() == 0LL)) {
		return;;
	};
	_1aa2e967d_Node _18177_node = _1aa87d5a2_parseNode(_self_, _181332_st);;
	if (((_18177_node._field_Data != nullptr) && (!(_1aa86e4b6_stopped(_self_))))) {
		(*((*_self_.alloc)._field_ast))._field_Nodes=jule::append((*(*(_self_))._field_ast.alloc)._field_Nodes,({ auto __jule_collection = jule::Slice<_1aa2e967d_Node>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _18177_node; __jule_collection; }));
	};
}



inline void _1aa87dd33_removeRange(_1aa86de00_parser* _self_, jule::I32 _182327_i, jule::U32 _182335_id, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _182349_tokens, jule::Slice<jule::I32>* _182372_ranges) {
	jule::U32 _18243_close = _1aa86d0a8_getCloseOfBrace(_182335_id);;
	for (; (_182327_i >= 0LL); (_182327_i)--) {
		{
			jule::Ptr<_1aa2d51c4_Token> _18264_tok = (*(_182349_tokens))[(*(_182372_ranges))[_182327_i]];;
			if (((*(_18264_tok))._field_Id != _18243_close)) {
				goto _iter_next_1bd16bb4c;
			};
			(*(_182372_ranges))=jule::append((*(_182372_ranges)).slice(0LL, _182327_i),(*(_182372_ranges)).slice((_182327_i + 1LL)));
			goto _iter_end_1bd16bb4c;
		}
	_iter_next_1bd16bb4c:;
	}
	_iter_end_1bd16bb4c:;;
}



inline void _1aa87e251_pushWrongOrderCloseErr(_1aa86de00_parser* _self_, jule::Ptr<_1aa2d51c4_Token>* _183539_t, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _183551_tokens, jule::Slice<jule::I32>* _183570_ranges) {
	{
		auto &_match_expr{ (*((*(_183551_tokens))[(*(_183570_ranges))[((*(_183570_ranges)).len() - 1LL)]]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(74LLU)) {
			_case_begin_1bd16de5c:;
			{
				_1aa86e8d4_pushErr(_self_, (*(_183539_t)), jule::Str::lit("was expected parentheses close", 30), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U32>(72LLU)) {
			_case_begin_1bd16ded4:;
			{
				_1aa86e8d4_pushErr(_self_, (*(_183539_t)), jule::Str::lit("was expected brace close", 24), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U32>(76LLU)) {
			_case_begin_1bd16e04a:;
			{
				_1aa86e8d4_pushErr(_self_, (*(_183539_t)), jule::Str::lit("was expected bracket close", 26), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bd16dd5d:;
	};
}



inline void _1aa87e729_pushRangeClose(_1aa86de00_parser* _self_, jule::Ptr<_1aa2d51c4_Token> _184630_t, jule::U32 _184641_left, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _184657_tokens, jule::Slice<jule::I32>* _184680_ranges) {
	jule::I32 _18473_n = (*(_184680_ranges)).len();;
	if ((_18473_n == 0LL)) {
		{
			auto &_match_expr{ (*(_184630_t))._field_Id };
			
			if (_match_expr == static_cast<jule::U32>(77LLU)) {
				_case_begin_1bd171b63:;
				{
					_1aa86e8d4_pushErr(_self_, _184630_t, jule::Str::lit("extra closed brackets", 21), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U32>(73LLU)) {
				_case_begin_1bd171bda:;
				{
					_1aa86e8d4_pushErr(_self_, _184630_t, jule::Str::lit("extra closed braces", 19), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U32>(75LLU)) {
				_case_begin_1bd171c51:;
				{
					_1aa86e8d4_pushErr(_self_, _184630_t, jule::Str::lit("extra closed parentheses", 24), jule::Slice<jule::Any>());
				}
			}
			_match_end_1bd171aa8:;
		};
		return;;
	} else if (((*((*(_184657_tokens))[(*(_184680_ranges))[(_18473_n - 1LL)]]))._field_Id != _184641_left)) {
		_1aa87e251_pushWrongOrderCloseErr(_self_, &(_184630_t), _184657_tokens, _184680_ranges);
	};
	_1aa87dd33_removeRange(_self_, (_18473_n - 1LL), (*(_184630_t))._field_Id, _184657_tokens, _184680_ranges);
}



inline void _1aa87e9d2_checkRanges(_1aa86de00_parser* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _186428_tokens) {
	jule::Slice<jule::I32> _186511_ranges = nullptr;;
	{
		auto expr = _186428_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd174b11:;
		if (it != expr_end) {
			jule::I32 _18677_i = it - expr->begin();
			jule::Ptr<_1aa2d51c4_Token> *_186710_token = it;
			{
				{
					auto &_match_expr{ (*((*(_186710_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1bd175a9b:;
						{
							{ jule::Slice<jule::I32> &__jule_push_dest = _186511_ranges; __jule_push_dest.push(_18677_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1bd175b34:;
						{
							_1aa87e729_pushRangeClose(_self_, (*(_186710_token)), static_cast<jule::U32>(74LLU), _186428_tokens, &(_186511_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU)) {
						_case_begin_1bd175b9a:;
						{
							_1aa87e729_pushRangeClose(_self_, (*(_186710_token)), static_cast<jule::U32>(72LLU), _186428_tokens, &(_186511_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(77LLU)) {
						_case_begin_1bd175c11:;
						{
							_1aa87e729_pushRangeClose(_self_, (*(_186710_token)), static_cast<jule::U32>(76LLU), _186428_tokens, &(_186511_ranges));
						}
					}
					_match_end_1bd1759e1:;
				};
			}
			_iter_next_1bd174b11:;
			++it;
			_18677_i++;
			goto _iter_begin_1bd174b11;
		}
		_iter_end_1bd174b11:;
	};
	{
		auto expr = &(_186511_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd174cdc:;
		if (it != expr_end) {
			jule::I32 _188210_i = *it;
			{
				jule::Ptr<_1aa2d51c4_Token> _18834_token = (*(_186428_tokens))[_188210_i];;
				{
					auto &_match_expr{ (*(_18834_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1bd178a7c:;
						{
							_1aa86e8d4_pushErr(_self_, _18834_token, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1bd178ae3:;
						{
							_1aa86e8d4_pushErr(_self_, _18834_token, jule::Str::lit("brace waiting to close", 22), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1bd178b59:;
						{
							_1aa86e8d4_pushErr(_self_, _18834_token, jule::Str::lit("bracket are waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					_match_end_1bd178a27:;
				};
			}
			_iter_next_1bd174cdc:;
			++it;
			goto _iter_begin_1bd174cdc;
		}
		_iter_end_1bd174cdc:;
	};
}



inline void _1aa87ec8a_parse(jule::Ptr<_1aa86de00_parser> _self_, jule::Ptr<_1aa2da95a_File>* _189527_f) {
	(*(_self_))._field_ast=jule::new_ptr<_1aa2e876a_AST>(_1aa2e876a_AST{._field_File=(*(_189527_f)), ._field_TopDirectives=jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>>(nullptr), ._field_UseDecls=jule::Slice<jule::Ptr<_1aa313785_UseDecl>>(nullptr), ._field_Nodes=jule::Slice<_1aa2e967d_Node>(nullptr)});
	(*_self_.alloc)._field_ep=jule::new_ptr<_1aa85d2da_exprBuilder>(_1aa85d2da_exprBuilder{._field_p=_self_});
	_1aa87e9d2_checkRanges(_self_, &((*((*(_189527_f))))._field_Tokens));
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1aa84eed0_stmt>> _19087_stmts = _1aa850387_splitStmts(&((*((*(_189527_f))))._field_Tokens));;
	jule::I32 _19117_i = 0LL;;
	for (; (_19117_i < _19087_stmts.len()); (_19117_i)++) {
		{
			jule::Ptr<_1aa84eed0_stmt> _19138_stmt = _19087_stmts[_19117_i];;
			if (((*(_19138_stmt))._field_tokens.len() < 2LL)) {
				return;;
			};
			if (((*((*_19138_stmt.alloc)._field_tokens[0LL]))._field_Id != static_cast<jule::U32>(35LLU))) {
				goto _iter_end_1bd17c3aa;
			};
			if ((!(_1ada74872_IsTopDirective((*((*_19138_stmt.alloc)._field_tokens[1LL]))._field_Kind)))) {
				goto _iter_end_1bd17c3aa;
			};
			(*((*_self_.alloc)._field_ast))._field_TopDirectives=jule::append((*(*(_self_))._field_ast.alloc)._field_TopDirectives,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1aa8703c9_buildDirective(_self_, (*_19138_stmt.alloc)._field_tokens); __jule_collection; }));
		}
	_iter_next_1bd17c3aa:;
	}
	_iter_end_1bd17c3aa:;;
	(*_self_.alloc)._field_errors=nullptr;
	for (; ((_19117_i < _19087_stmts.len()) && (!(_1aa86e4b6_stopped(_self_)))); (_19117_i)++) {
		{
			jule::Ptr<_1aa84eed0_stmt> _19308_stmt = _19087_stmts[_19117_i];;
			_1aa87d85a_appendNode(_self_, &((*(_19308_stmt))._field_tokens));
		}
	_iter_next_1bd180831:;
	}
	_iter_end_1bd180831:;;
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1aa86e8d4_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1aa86de00_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ep:" << _Src._field_ep;
	_Stream << "}";
	return _Stream;
}



inline void _1aa8815e9_pushErr(_1aa881022_typeBuilder* _self_, jule::Ptr<_1aa2d51c4_Token> _4123_token, jule::Str _4138_fmt) {
	if ((*(_self_))._field_err) {
		_1aa86e8d4_pushErr((*(_self_))._field_p.ptr(), _4123_token, _4138_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1aa88195c_pushSuggestion(_1aa881022_typeBuilder* _self_, jule::Str _4830_fmt, jule::Slice<jule::Any> _4843_args) {
	if ((*(_self_))._field_err) {
		_1aa86ec47_pushSuggestion((*(_self_))._field_p.ptr(), _4830_fmt, _4843_args);
	};
}



inline jule::Ptr<_1aa2ea67e_TypeDecl> _1aa881be3_buildNamespace(_1aa881022_typeBuilder* _self_) {
	jule::Ptr<_1aa2ea67e_TypeDecl> _557_t = jule::new_ptr<_1aa2ea67e_TypeDecl>(_1aa2ea67e_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], ._field_Kind=jule::Any(nullptr)});;
	jule::Ptr<_1aa2eb42c_NamespaceTypeDecl> _597_nst = jule::new_ptr<_1aa2eb42c_NamespaceTypeDecl>(_1aa2eb42c_NamespaceTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_1aa2d51c4_Token>>(nullptr), ._field_Kind=jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr)});;
	jule::I32 _607_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1aa2d51c4_Token> _628_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_607_n & 1LL) == 0LL)) {
				if (((*(_628_token))._field_Id != static_cast<jule::U32>(1LLU))) {
					_1aa8815e9_pushErr(_self_, _628_token, jule::Str::lit("invalid syntax", 14));
					_1aa88195c_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				};
				(*_597_nst.alloc)._field_Idents=jule::append((*_597_nst.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa2d51c4_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _628_token; __jule_collection; }));
			} else if (((*(_628_token))._field_Id != static_cast<jule::U32>(19LLU))) {
				goto _iter_end_1bd18632b;
			};
			(_607_n)++;
		}
	_iter_next_1bd18632b:;
	}
	_iter_end_1bd18632b:;;
	((*(_597_nst))._field_Idents).mut_slice(0LL, ((*(_597_nst))._field_Idents.len() - 1LL));;
	((*((*(_self_))._field_i)))--;
	(*_597_nst.alloc)._field_Kind=_1aa882496_buildIdent(_self_);
	(*(_557_t))._field_Kind=jule::Any(_597_nst, &__jule_any_type94);
	return _557_t;;
}



inline jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>> _1aa881e79_buildGenerics(_1aa881022_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1aa2d51c4_Token> _883_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((*(_883_token))._field_Id != static_cast<jule::U32>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>> _937_parts = _1aa882210_identGenerics(_self_);;
	if ((_937_parts.len() == 0LL)) {
		_1aa8815e9_pushErr(_self_, _883_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>> _997_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>>::alloc(0LL, _937_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr); __jule_collection; });;
	{
		auto expr = &(_937_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd18d498:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _10015_part = *it;
			{
				jule::I32 _1018_j = 0LL;;
				jule::Ptr<_1aa2ea67e_TypeDecl> _1028_t;
				({
					__jule_tuple_x_1aa2ea67e_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa8714da_buildType((*(_self_))._field_p, &(_10015_part), (&(_1018_j)), true);
					_1028_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_1018_j < _10015_part.len())) {
					_1aa8815e9_pushErr(_self_, _10015_part[_1018_j], jule::Str::lit("invalid syntax", 14));
				};
				{ jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>> &__jule_push_dest = _997_types; __jule_push_dest.push(_1028_t); };
			}
			_iter_next_1bd18d498:;
			++it;
			goto _iter_begin_1bd18d498;
		}
		_iter_end_1bd18d498:;
	};
	return _997_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>> _1aa882210_identGenerics(_1aa881022_typeBuilder* _self_) {
	jule::I32 _1123_first = (*((*(_self_))._field_i));;
	jule::I32 _1137_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1aa2d51c4_Token> _1154_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ (*(_1154_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(76LLU)) {
					_case_begin_1bd1922c1:;
					{
						(_1137_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(77LLU)) {
					_case_begin_1bd1925ce:;
					{
						(_1137_rangeN)--;
					}
				}
				_match_end_1bd192579:;
			};
			if ((_1137_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1bd191468;
			};
		}
	_iter_next_1bd191468:;
	}
	_iter_end_1bd191468:;;
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _1277_tokens = (*(_self_))._field_tokens.slice((_1123_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>> _1287_parts;
	jule::Slice<_1ada72b17_Log> _12814_errors;
	({
		__jule_tuple_ssx_1aa2d51c4_Token__jule_tuple_s_1ada72b17_Log __jule_assign_result = _1aa86cd22_parts(&(_1277_tokens), static_cast<jule::U32>(5LLU), true);
		_1287_parts = __jule_assign_result.__jule_result_arg0;
		_12814_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_12814_errors);
	};
	return _1287_parts;;
}



inline jule::Ptr<_1aa2ea67e_TypeDecl> _1aa882496_buildIdent(_1aa881022_typeBuilder* _self_) {
	jule::Bool _1367_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_1367_next && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U32>(19LLU)))) {
		return _1aa881be3_buildNamespace(_self_);;
	};
	jule::Ptr<_1aa2d51c4_Token> _1407_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1aa2eac89_IdentTypeDecl> _1417_it = jule::new_ptr<_1aa2eac89_IdentTypeDecl>(_1aa2eac89_IdentTypeDecl{._field_Token=_1407_token, ._field_Ident=(*(_1407_token))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>>(nullptr)});;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1aa2ea67e_TypeDecl> _1477_itd = jule::new_ptr<_1aa2ea67e_TypeDecl>(_1aa2ea67e_TypeDecl{._field_Token=_1407_token, ._field_Kind=jule::Any(_1417_it, &__jule_any_type78)});;
	if (((!(_1367_next)) || ((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U32>(17LLU)))) {
		(*(_1417_it))._field_Generics=_1aa881e79_buildGenerics(_self_);
		return _1477_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1aa8815e9_pushErr(_self_, _1407_token, jule::Str::lit("invalid syntax", 14));
		return _1477_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1aa8815e9_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("invalid syntax", 14));
		return _1477_itd;;
	};
	jule::Ptr<_1aa2eb053_SubIdentTypeDecl> _1647_sit = jule::new_ptr<_1aa2eb053_SubIdentTypeDecl>(_1aa2eb053_SubIdentTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_1aa2eac89_IdentTypeDecl>>(nullptr)});;
	(*_1647_sit.alloc)._field_Idents=jule::append((*_1647_sit.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa2eac89_IdentTypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1417_it; __jule_collection; }));
	jule::Ptr<_1aa2ea67e_TypeDecl> _1667_ident = _1aa882496_buildIdent(_self_);;
	{
		auto &_match_expr{ (*(_1667_ident))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1bd19d189:;
			{
				(*_1647_sit.alloc)._field_Idents=jule::append((*_1647_sit.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa2eac89_IdentTypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_1667_ident))._field_Kind.cast_ptr<_1aa2eac89_IdentTypeDecl>(&__jule_any_type78); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1bd19779e:;
			{
				(*_1647_sit.alloc)._field_Idents=jule::append((*_1647_sit.alloc)._field_Idents,(*((*(_1667_ident))._field_Kind.unsafe_cast_ptr<_1aa2eb053_SubIdentTypeDecl>()))._field_Idents);
			}
		}
		_match_end_1bd19ade0:;
	};
	return jule::new_ptr<_1aa2ea67e_TypeDecl>(_1aa2ea67e_TypeDecl{._field_Token=_1407_token, ._field_Kind=jule::Any(_1647_sit, &__jule_any_type90)});;
}



inline jule::Ptr<_1aa2ea67e_TypeDecl> _1aa88272c_buildCppLink(_1aa881022_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id != static_cast<jule::U32>(17LLU)))) {
		_1aa8815e9_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1aa2ea67e_TypeDecl> _1857_t = _1aa882496_buildIdent(_self_);;
	(*((*(_1857_t))._field_Kind.cast_ptr<_1aa2eac89_IdentTypeDecl>(&__jule_any_type78)))._field_Binded=true;
	return _1857_t;;
}



inline jule::Ptr<_1aa2ea67e_TypeDecl> _1aa8829b3_buildFn(_1aa881022_typeBuilder* _self_) {
	jule::Ptr<_1aa2d51c4_Token> _1917_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1aa30c33e_FnDecl> _1927_f = _1aa8755bb_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_1927_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1aa30c6d5_IsAnon(_1927_f.ptr())))) {
		_1aa8815e9_pushErr(_self_, (*(_1927_f))._field_Token, jule::Str::lit("invalid syntax", 14));
	};
	return jule::new_ptr<_1aa2ea67e_TypeDecl>(_1aa2ea67e_TypeDecl{._field_Token=_1917_token, ._field_Kind=jule::Any(_1927_f, &__jule_any_type14)});;
}



inline jule::Ptr<_1aa2ea67e_TypeDecl> _1aa882c49_buildPtr(_1aa881022_typeBuilder* _self_) {
	jule::Ptr<_1aa2d51c4_Token> _2067_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1aa8815e9_pushErr(_self_, _2067_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id == static_cast<jule::U32>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1aa2ea67e_TypeDecl>(_1aa2ea67e_TypeDecl{._field_Token=_2067_token, ._field_Kind=jule::Any(jule::new_ptr<_1aa2ec1a8_PtrTypeDecl>(_1aa2ec1a8_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type74)});;
	};
	jule::Ptr<_1aa2ea67e_TypeDecl> _2237_elem = _1aa883ca0_step(_self_);;
	if ((_2237_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1aa2ea67e_TypeDecl>(_1aa2ea67e_TypeDecl{._field_Token=_2067_token, ._field_Kind=jule::Any(jule::new_ptr<_1aa2ec1a8_PtrTypeDecl>(_1aa2ec1a8_PtrTypeDecl{._field_Elem=_2237_elem}), &__jule_any_type74)});;
}



inline jule::Ptr<_1aa2ea67e_TypeDecl> _1aa882ed0_buildSptr(_1aa881022_typeBuilder* _self_) {
	jule::Ptr<_1aa2d51c4_Token> _2377_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1aa8815e9_pushErr(_self_, _2377_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1aa2ea67e_TypeDecl> _2447_elem = _1aa883ca0_step(_self_);;
	if ((_2447_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1aa2ea67e_TypeDecl>(_1aa2ea67e_TypeDecl{._field_Token=_2377_token, ._field_Kind=jule::Any(jule::new_ptr<_1aa2eb729_SptrTypeDecl>(_1aa2eb729_SptrTypeDecl{._field_Elem=_2447_elem}), &__jule_any_type75)});;
}



inline jule::Ptr<_1aa2ea67e_TypeDecl> _1aa883266_buildSlc(_1aa881022_typeBuilder* _self_) {
	jule::Ptr<_1aa2d51c4_Token> _2587_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1aa2ea67e_TypeDecl> _2607_elem = _1aa883ca0_step(_self_);;
	if ((_2607_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1aa2ea67e_TypeDecl>(_1aa2ea67e_TypeDecl{._field_Token=_2587_token, ._field_Kind=jule::Any(jule::new_ptr<_1aa2ebaae_SlcTypeDecl>(_1aa2ebaae_SlcTypeDecl{._field_Elem=_2607_elem}), &__jule_any_type73)});;
}



inline jule::Ptr<_1aa2ea67e_TypeDecl> _1aa8834ec_buildArr(_1aa881022_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _2737_exprTokens = _1aa86c5a2_range(&((*((*(_self_))._field_i))), static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1aa8815e9_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1aa2ea67e_TypeDecl> _2797_elem = _1aa883ca0_step(_self_);;
	if ((_2797_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1aa2ec94a_ArrTypeDecl> _2847_arrt = jule::new_ptr<_1aa2ec94a_ArrTypeDecl>(_1aa2ec94a_ArrTypeDecl{._field_Elem=_2797_elem, ._field_Size=jule::Ptr<_1aa2ee9b3_Expr>(nullptr)});;
	jule::Ptr<_1aa2d51c4_Token> _2887_token = _2737_exprTokens[0LL];;
	if (((_2737_exprTokens.len() == 1LL) && ((*(_2887_token))._field_Id == static_cast<jule::U32>(39LLU)))) {
	} else {
		(*(_2847_arrt))._field_Size=_1aa870088_buildExpr((*(_self_))._field_p, &(_2737_exprTokens));
	};
	return jule::new_ptr<_1aa2ea67e_TypeDecl>(_1aa2ea67e_TypeDecl{._field_Token=_2887_token, ._field_Kind=jule::Any(_2847_arrt, &__jule_any_type72)});;
}



inline jule::Ptr<_1aa2ea67e_TypeDecl> _1aa883783_buildMap(_1aa881022_typeBuilder* _self_) {
	jule::Ptr<_1aa2d51c4_Token> _3027_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1aa8815e9_pushErr(_self_, _3027_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _3107_keyTokens = _1aa86c5a2_range(&((*((*(_self_))._field_i))), static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1aa8815e9_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	} else if ((_3107_keyTokens.len() == 0LL)) {
		_1aa8815e9_pushErr(_self_, _3027_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1aa2ed198_MapTypeDecl> _3197_mapt = jule::new_ptr<_1aa2ed198_MapTypeDecl>(_1aa2ed198_MapTypeDecl{._field_Key=jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr), ._field_Val=jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr)});;
	jule::I32 _3207_j = 0LL;;
	jule::Ptr<_1aa2ea67e_TypeDecl> _3217_keyt;
	jule::Bool _32117_ok;
	({
		__jule_tuple_x_1aa2ea67e_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa8714da_buildType((*(_self_))._field_p, &(_3107_keyTokens), (&(_3207_j)), (*(_self_))._field_err);
		_3217_keyt = __jule_assign_result.__jule_result_arg0;
		_32117_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32117_ok))) {
		return nullptr;;
	} else if ((_3207_j < _3107_keyTokens.len())) {
		_1aa8815e9_pushErr(_self_, _3107_keyTokens[_3207_j], jule::Str::lit("invalid syntax", 14));
	};
	(*_3197_mapt.alloc)._field_Key=_3217_keyt;
	jule::Ptr<_1aa2ea67e_TypeDecl> _3297_valt;
	({
		__jule_tuple_x_1aa2ea67e_TypeDecl__jule_tuple_bool __jule_assign_result = _1aa8714da_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_3297_valt = __jule_assign_result.__jule_result_arg0;
		_32117_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32117_ok))) {
		return nullptr;;
	};
	(*_3197_mapt.alloc)._field_Val=_3297_valt;
	return jule::new_ptr<_1aa2ea67e_TypeDecl>(_1aa2ea67e_TypeDecl{._field_Token=_3027_mapToken, ._field_Kind=jule::Any(_3197_mapt, &__jule_any_type76)});;
}



inline jule::Ptr<_1aa2ea67e_TypeDecl> _1aa883a19_buildEnumerable(_1aa881022_typeBuilder* _self_) {
	jule::Ptr<_1aa2d51c4_Token> _3417_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_1aa8815e9_pushErr(_self_, _3417_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_3417_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((*(_3417_token))._field_Id == static_cast<jule::U32>(77LLU))) {
		return _1aa883266_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1aa8834ec_buildArr(_self_);;
}



inline jule::Ptr<_1aa2ea67e_TypeDecl> _1aa883ca0_step(_1aa881022_typeBuilder* _self_) {
	jule::Ptr<_1aa2d51c4_Token> _3563_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ (*(_3563_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_1bd4894a8:;
			{
				return _1aa882496_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1bd489909:;
			{
				return _1aa88272c_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1bd489a2a:;
			{
				return _1aa8829b3_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1bd48919a:;
			{
				return _1aa882c49_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1bd489211:;
			{
				return _1aa882ed0_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1bd489277:;
			{
				return jule::new_ptr<_1aa2ea67e_TypeDecl>(_1aa2ea67e_TypeDecl{._field_Token=jule::Ptr<_1aa2d51c4_Token>(nullptr), ._field_Kind=jule::Any(jule::new_ptr<_1aa2eb729_SptrTypeDecl>(_1aa2eb729_SptrTypeDecl{._field_Elem=_1aa882ed0_buildSptr(_self_)}), &__jule_any_type75)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(76LLU)) {
			_case_begin_1bd4892dd:;
			{
				return _1aa883a19_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(37LLU)) {
			_case_begin_1bd489365:;
			{
				return _1aa883783_buildMap(_self_);;
			}
		}
		else {
			_case_begin_1bd488d7b:;
			{
				((*((*(_self_))._field_i)))++;
				_1aa8815e9_pushErr(_self_, _3563_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1bd489145:;
	};
}



inline __jule_tuple_x_1aa2ea67e_TypeDecl__jule_tuple_bool _1aa884036_build(_1aa881022_typeBuilder* _self_) {
	__jule_tuple_x_1aa2ea67e_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1aa2ea67e_TypeDecl> _3887_root = _1aa883ca0_step(_self_);;
	if ((_3887_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1aa880791_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _3887_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa881022_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a761aa4b_CompileInfo_eq(_1a761aa4b_CompileInfo *_self_, _1a761aa4b_CompileInfo _other_) {
	return 
		(_self_->_field_Prod == _other_._field_Prod) &&
		(_self_->_field_Test == _self_->_field_Test) &&
		(_self_->_field_Compiler == _self_->_field_Compiler) &&
		(_self_->_field_CppStd == _self_->_field_CppStd);
}



std::ostream &operator<<(std::ostream &_Stream, _1a761aa4b_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _1a761c5a8_pushErr(_1a761c025_directiveEval* _self_, jule::Ptr<_1aa2d51c4_Token> _2123_t, jule::Str _2134_fmt, jule::Slice<jule::Any> _2147_args) {
	{ jule::Slice<_1ada72b17_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_1ada72b17_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*(_2123_t))._field_Row, ._field_Column=(*_2123_t.alloc)._field_Column, ._field_Path=(*((*_2123_t.alloc)._field_File))._field_Path, ._field_Text=_1ada73079_Logf(_2134_fmt, _2147_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>> _1a761c9a4_splitOperans(_1a761c025_directiveEval* _self_, jule::U32 _3328_op, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _3346_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>> _347_parts = ({ auto __jule_collection = jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>>::alloc(0LL, 10LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Ptr<_1aa2d51c4_Token>>(nullptr); __jule_collection; });;
	jule::I32 _357_i = 0LL;;
	jule::I32 _367_rangeN = 0LL;;
	jule::I32 _377_last = 0LL;;
	for (; (_357_i < ((*(_3346_tokens)).len() - 1LL)); (_357_i)++) {
		{
			jule::Ptr<_1aa2d51c4_Token> _394_b = (*(_3346_tokens))[_357_i];;
			{
				auto &_match_expr{ (*(_394_b))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1bd4ae555:;
					{
						(_367_rangeN)++;
						goto _iter_next_1bd4adac6;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1bd4ae863:;
					{
						(_367_rangeN)--;
					}
				}
				_match_end_1bd4ae80d:;
			};
			if (((_367_rangeN > 0LL) || ((*(_394_b))._field_Id != _3328_op))) {
				goto _iter_next_1bd4adac6;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3346_tokens)).slice(_377_last, _357_i)); };
			_377_last=(_357_i + 1LL);
		}
	_iter_next_1bd4adac6:;
	}
	_iter_end_1bd4adac6:;;
	if ((_377_last < (*(_3346_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3346_tokens)).slice(_377_last)); };
	} else {
		_1a761c5a8_pushErr(_self_, (*(_3346_tokens))[(_377_last - 1LL)], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _347_parts;;
}



inline jule::Bool _1a761cce5_evalDirectiveIdent(_1a761c025_directiveEval* _self_, jule::Str _6430_ident) {
	if ((_6430_ident).empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd4b23d2:;
		if (it != expr_end) {
			jule::Str *_6810_var = it;
			{
				if (((*(_6810_var)) == _6430_ident)) {
					return true;;
				};
			}
			_iter_next_1bd4b23d2:;
			++it;
			goto _iter_begin_1bd4b23d2;
		}
		_iter_end_1bd4b23d2:;
	};
	return false;;
}



inline jule::Bool _1a761d136_evalDirectivePart(_1a761c025_directiveEval* _self_, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _7837_part) {
	jule::Bool _793_logicalNot = ((*(_7837_part[0LL]))._field_Id == static_cast<jule::U32>(68LLU));;
	if (_793_logicalNot) {
		(_7837_part).mut_slice(1LL);;
	};
	if ((_7837_part.len() > 1LL)) {
		_1a761c5a8_pushErr(_self_, _7837_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _897_result = _1a761cce5_evalDirectiveIdent(_self_, (*(_7837_part[0LL]))._field_Kind);;
	if (_793_logicalNot) {
		_897_result=(!(_897_result));
	};
	return _897_result;;
}



inline jule::Bool _1a761d3bc_eval(_1a761c025_directiveEval* _self_) {
	if (((*((*(_self_))._field_d))._field_Args.len() == 0LL)) {
		_1a761c5a8_pushErr(_self_, (*(*(_self_))._field_d.alloc)._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _1027_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>> _1047_logicalOrParts = _1a761c9a4_splitOperans(_self_, static_cast<jule::U32>(55LLU), &((*(*(_self_))._field_d.alloc)._field_Args));;
	if ((_1047_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_1047_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd4b731b:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _10915_part = *it;
			{
				jule::Bool _1108_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>> _1118_logicalAndParts = _1a761c9a4_splitOperans(_self_, static_cast<jule::U32>(54LLU), &(_10915_part));;
				if ((_1118_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_1118_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd4b9609:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _11616_andPart = *it;
						{
							jule::Ptr<_1aa2d51c4_Token> _1175_first = _11616_andPart[0LL];;
							if (((*(_1175_first))._field_Id == static_cast<jule::U32>(74LLU))) {
								jule::Ptr<_1aa2d51c4_Token> _1196_end = _11616_andPart[(_11616_andPart.len() - 1LL)];;
								if (((*(_1196_end))._field_Id != static_cast<jule::U32>(75LLU))) {
									_1a761c5a8_pushErr(_self_, _1175_first, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
									return false;;
								};
								(_11616_andPart).mut_slice(1LL, (_11616_andPart.len() - 1LL));;
							};
							_1108_and=(_1108_and && _1a761d136_evalDirectivePart(_self_, _11616_andPart));
						}
						_iter_next_1bd4b9609:;
						++it;
						goto _iter_begin_1bd4b9609;
					}
					_iter_end_1bd4b9609:;
				};
				_1027_result=(_1027_result || _1108_and);
			}
			_iter_next_1bd4b731b:;
			++it;
			goto _iter_begin_1bd4b731b;
		}
		_iter_end_1bd4b731b:;
	};
	return _1027_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a761c025_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa885015_JuleImporter> static__1aa885444_New(_1a761aa4b_CompileInfo _5816_info) {
	jule::Ptr<_1aa885015_JuleImporter> _597_imp = jule::new_ptr<_1aa885015_JuleImporter>(_1aa885015_JuleImporter{._field_mods=({ auto __jule_collection = jule::Slice<jule::Str>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1adc46e51_PathStdlib; __jule_collection; }), ._field_mod=jule::Str(), ._field_pkgs=jule::Slice<jule::Ptr<_1aa39b0ae_ImportInfo>>(nullptr), ._field_vars=jule::Slice<jule::Str>(nullptr)});;
	_1a761b3cb_initVars(&((*(_597_imp))._field_vars), &(_5816_info));
	return _597_imp;;
}



inline jule::Slice<jule::Ptr<_1aa39b0ae_ImportInfo>> _1aa8856ca_AllPackages(_1aa885015_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1aa885b1a_SetModPath(_1aa885015_JuleImporter* _self_, jule::Str _7526_path) {
	(*(_self_))._field_mod=_7526_path;
}



inline jule::Str _1aa885da1_GetModPath(_1aa885015_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1aa8861e2_ModById(_1aa885015_JuleImporter* _self_, jule::I32 _8319_id) {
	return (*(_self_))._field_mods[_8319_id];;
}



inline jule::Ptr<_1aa39b0ae_ImportInfo> _1aa886533_GetImport(_1aa885015_JuleImporter* _self_, jule::Str _8725_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd4c0973:;
		if (it != expr_end) {
			jule::Ptr<_1aa39b0ae_ImportInfo> _8815_p = *it;
			{
				if (((*(_8815_p))._field_Path == _8725_path)) {
					return _8815_p;;
				};
			}
			_iter_next_1bd4c0973:;
			++it;
			goto _iter_begin_1bd4c0973;
		}
		_iter_end_1bd4c0973:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1aa2e876a_AST__jule_tuple_s_1ada72b17_Log _1aa88692e_ImportPackage(_1aa885015_JuleImporter* _self_, jule::Str _9629_path, jule::Bool _9640_updateMod) {
	__jule_tuple_sx_1aa2e876a_AST__jule_tuple_s_1ada72b17_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1ed37c9a9_DirEntry>> _977_dirents = ({
		auto except = static__1ed49770b_Read(_9629_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = ({ auto __jule_collection = jule::Slice<_1ada72b17_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1aa884a2b_flatCompilerErr((jule::Str::lit("connot read package directory: ", 31) + _9629_path)); __jule_collection; });
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_1ed37c9a9_DirEntry>>(nullptr);});
	});;
	if (_9640_updateMod) {
		jule::Str _1024_newMod = _1aa3b7905_FindModuleFileDeep(_9629_path);;
		if ((_1024_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_1024_newMod;
			jule::Slice<_1ada72b17_Log> _1059_errs = _1aa3b7bbe_CheckModuleFile(&((*(_self_))._field_mod));;
			if ((_1059_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _1059_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1aa2e876a_AST>> _1127_asts = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa2e876a_AST>>::alloc(0LL, _977_dirents.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa2e876a_AST>(nullptr); __jule_collection; });;
	{
		auto expr = &(_977_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd4c20c3:;
		if (it != expr_end) {
			jule::Ptr<_1ed37c9a9_DirEntry> _11310_dirent = *it;
			{
				if ((_1ed381d76_IsDir((*(_11310_dirent))._field_Stat.ptr()) || (!(_1ed47352d_HasSuffix((*_11310_dirent.alloc)._field_Name, jule::Str::lit(".jule", 5)))))) {
					goto _iter_next_1bd4c20c3;
				};
				jule::Str _1194__path = _1ed49461a_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _9629_path; (*it++) = (*_11310_dirent.alloc)._field_Name; __jule_collection; }));;
				jule::Ptr<_1aa2da95a_File> _1208_file = _1aa2dbd35_NewFileSet(_1194__path);;
				_1aa2dadab_Fill(_1208_file.ptr(), _1aa88471d_readBuff((*_1208_file.alloc)._field_Path));
				jule::Slice<_1ada72b17_Log> _1228_errors = _1aa2e8319_Lex(_1208_file, static_cast<jule::I32>(0LL));;
				if ((_1228_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _1228_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1aa84c681_FileInfo> _1278_finfo = _1aa84cbe2_ParseFile(_1208_file);;
				if (((*(_1278_finfo))._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = (*_1278_finfo.alloc)._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1a7619ad3_isPassFileAnnotation((*_11310_dirent.alloc)._field_Name)))) {
					goto _iter_next_1bd4c20c3;
				};
				jule::Bool _1374_r;
				jule::Slice<_1ada72b17_Log> _13711_logs;
				({
					__jule_tuple_bool__jule_tuple_s_1ada72b17_Log __jule_assign_result = _1aa887116_isPassBuildDirectives(_self_, &((*_1278_finfo.alloc)._field_Ast));
					_1374_r = __jule_assign_result.__jule_result_arg0;
					_13711_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13711_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13711_logs;
					return __jule_func_result;;
				};
				if ((!(_1374_r))) {
					goto _iter_next_1bd4c20c3;
				};
				{ jule::Slice<jule::Ptr<_1aa2e876a_AST>> &__jule_push_dest = _1127_asts; __jule_push_dest.push((*_1278_finfo.alloc)._field_Ast); };
			}
			_iter_next_1bd4c20c3:;
			++it;
			goto _iter_begin_1bd4c20c3;
		}
		_iter_end_1bd4c20c3:;
	};
	__jule_func_result.__jule_result_arg0 = _1127_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1aa886bd7_Imported(_1aa885015_JuleImporter* _self_, jule::Ptr<_1aa39b0ae_ImportInfo> _15328_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd4c4c52:;
		if (it != expr_end) {
			jule::Ptr<_1aa39b0ae_ImportInfo> _15510_p = *it;
			{
				if ((((*(_15510_p))._field_Binded == (*(_15328_imp))._field_Binded) && ((*_15510_p.alloc)._field_LinkPath == (*_15328_imp.alloc)._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1bd4c4c52:;
			++it;
			goto _iter_begin_1bd4c4c52;
		}
		_iter_end_1bd4c4c52:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd4cc2dc:;
			if (it != expr_end) {
				jule::I32 _1628_i = it - expr->begin();
				jule::Str _16211_mod = *it;
				{
					if (((*(_self_))._field_mod == _16211_mod)) {
						(*_15328_imp.alloc)._field_ModId=_1628_i;
						goto _julec_label_1bd4cc95d;
					};
				}
				_iter_next_1bd4cc2dc:;
				++it;
				_1628_i++;
				goto _iter_begin_1bd4cc2dc;
			}
			_iter_end_1bd4cc2dc:;
		};
		(*_15328_imp.alloc)._field_ModId=(*(_self_))._field_mods.len();
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_1bd4cc95d:;
	};
	{ jule::Slice<jule::Ptr<_1aa39b0ae_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_15328_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_1ada72b17_Log _1aa887116_isPassBuildDirectives(_1aa885015_JuleImporter* _self_, jule::Ptr<_1aa2e876a_AST>* _17942_file) {
	__jule_tuple_bool__jule_tuple_s_1ada72b17_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*((*(_17942_file))))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd4d0367:;
		if (it != expr_end) {
			jule::Ptr<_1aa2e9a9b_Directive> _18015_td = *it;
			{
				if ((!(*((*(_18015_td))._field_Tag))._field_Kind.equal("build", 5))) {
					goto _iter_next_1bd4d0367;
				};
				_1a761c025_directiveEval _1848_de = _1a761c025_directiveEval{._field_logs=jule::Slice<_1ada72b17_Log>(nullptr), ._field_d=_18015_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _1884_result = _1a761d3bc_eval(&_1848_de);;
				if ((_1848_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _1848_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_1884_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1bd4d0367:;
			++it;
			goto _iter_begin_1bd4d0367;
		}
		_iter_end_1bd4d0367:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa885015_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa88b978_ExprInspector> static__1aa88bd1e_New(void) {
	return jule::new_ptr<_1aa88b978_ExprInspector>(_1aa88b978_ExprInspector{._field_SkipChild=false, ._field_handler=jule::Fn<void,jule::Any*>(nullptr)});;
}



inline void _1aa88c0c7_args(_1aa88b978_ExprInspector* _self_, jule::Slice<jule::Any> _5724_args) {
	{
		auto expr = &(_5724_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd52508d:;
		if (it != expr_end) {
			jule::Any _5815_arg = *it;
			{
				_1aa88c380_inspect(_self_, &(_5815_arg));
			}
			_iter_next_1bd52508d:;
			++it;
			goto _iter_begin_1bd52508d;
		}
		_iter_end_1bd52508d:;
	};
}



inline void _1aa88c380_inspect(_1aa88b978_ExprInspector* _self_, jule::Any* _6328_m) {
	(*(_self_))._field_SkipChild=false;
	(*(_self_))._field_handler(_6328_m);
	if ((*(_self_))._field_SkipChild) {
		return;;
	};
	{
		auto &_match_expr{ (*(_6328_m)) };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1bd526435:;
			{
				jule::Ptr<_1aa32372e_BinaryExprModel> _718_b = (*(_6328_m)).cast_ptr<_1aa32372e_BinaryExprModel>(&__jule_any_type114);;
				_1aa88c380_inspect(_self_, &((*((*(_718_b))._field_Left))._field_Model));
				_1aa88c380_inspect(_self_, &((*((*_718_b.alloc)._field_Right))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1bd526622:;
			{
				jule::Ptr<_1aa323b08_UnaryExprModel> _758_u = (*(_6328_m)).cast_ptr<_1aa323b08_UnaryExprModel>(&__jule_any_type113);;
				_1aa88c380_inspect(_self_, &((*((*(_758_u))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1bd5264ce:;
			{
				jule::Ptr<_1aa3244cc_StructLitExprModel> _788_lit = (*(_6328_m)).cast_ptr<_1aa3244cc_StructLitExprModel>(&__jule_any_type98);;
				{
					auto expr = &((*(_788_lit))._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd52aa33:;
					if (it != expr_end) {
						jule::Ptr<_1aa324136_StructArgExprModel> _7916_arg = *it;
						{
							_1aa88c380_inspect(_self_, &((*((*(_7916_arg))._field_Expr))._field_Model));
						}
						_iter_next_1bd52aa33:;
						++it;
						goto _iter_begin_1bd52aa33;
					}
					_iter_end_1bd52aa33:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1bd5268ec:;
			{
				jule::Ptr<_1aa3244cc_StructLitExprModel> _838_lit = (*((*(_6328_m)).cast_ptr<_1aa3247c9_AllocStructLitExprModel>(&__jule_any_type115)))._field_Lit;;
				{
					auto expr = &((*(_838_lit))._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd52c1e9:;
					if (it != expr_end) {
						jule::Ptr<_1aa324136_StructArgExprModel> _8416_arg = *it;
						{
							_1aa88c380_inspect(_self_, &((*((*(_8416_arg))._field_Expr))._field_Model));
						}
						_iter_next_1bd52c1e9:;
						++it;
						goto _iter_begin_1bd52c1e9;
					}
					_iter_end_1bd52c1e9:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1bd526963:;
			{
				jule::Ptr<_1aa324d5c_CastingExprModel> _888_c = (*(_6328_m)).cast_ptr<_1aa324d5c_CastingExprModel>(&__jule_any_type96);;
				_1aa88c380_inspect(_self_, &((*((*(_888_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1bd5269c9:;
			{
				jule::Ptr<_1aa32570e_FnCallExprModel> _918_fc = (*(_6328_m)).cast_ptr<_1aa32570e_FnCallExprModel>(&__jule_any_type41);;
				_1aa88c380_inspect(_self_, &((*(_918_fc))._field_Expr));
				_1aa88c0c7_args(_self_, (*_918_fc.alloc)._field_Args);
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1bd526a40:;
			{
				jule::Ptr<_1aa325ad8_SliceExprModel> _958_s = (*(_6328_m)).cast_ptr<_1aa325ad8_SliceExprModel>(&__jule_any_type80);;
				_1aa88c0c7_args(_self_, (*(_958_s))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1bd526aa6:;
			{
				jule::Ptr<_1aa328aec_ArrayExprModel> _988_a = (*(_6328_m)).cast_ptr<_1aa328aec_ArrayExprModel>(&__jule_any_type88);;
				_1aa88c0c7_args(_self_, (*(_988_a))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1bd526b1c:;
			{
				jule::Ptr<_1aa32608e_IndexingExprModel> _1018_i = (*(_6328_m)).cast_ptr<_1aa32608e_IndexingExprModel>(&__jule_any_type53);;
				_1aa88c380_inspect(_self_, &((*((*(_1018_i))._field_Expr))._field_Model));
				_1aa88c380_inspect(_self_, &((*((*_1018_i.alloc)._field_Index))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1bd526b94:;
			{
				jule::Ptr<_1aa326dc5_MapExprModel> _1058_mp = (*(_6328_m)).cast_ptr<_1aa326dc5_MapExprModel>(&__jule_any_type102);;
				{
					auto expr = &((*(_1058_mp))._field_Entries);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd5336ea:;
					if (it != expr_end) {
						jule::Ptr<_1aa32691e_KeyValPairExprModel> _10616_entry = *it;
						{
							_1aa88c380_inspect(_self_, &((*(_10616_entry))._field_Key));
							_1aa88c380_inspect(_self_, &((*_10616_entry.alloc)._field_Val));
						}
						_iter_next_1bd5336ea:;
						++it;
						goto _iter_begin_1bd5336ea;
					}
					_iter_end_1bd5336ea:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1bd526c1b:;
			{
				jule::Ptr<_1aa327458_SlicingExprModel> _1118_s = (*(_6328_m)).cast_ptr<_1aa327458_SlicingExprModel>(&__jule_any_type95);;
				_1aa88c380_inspect(_self_, &((*(_1118_s))._field_Expr));
				_1aa88c380_inspect(_self_, &((*_1118_s.alloc)._field_Left));
				if (((*_1118_s.alloc)._field_Right != nullptr)) {
					_1aa88c380_inspect(_self_, &((*_1118_s.alloc)._field_Right));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1bd526c93:;
			{
				jule::Ptr<_1aa3279db_TraitSubIdentExprModel> _1188_t = (*(_6328_m)).cast_ptr<_1aa3279db_TraitSubIdentExprModel>(&__jule_any_type100);;
				_1aa88c380_inspect(_self_, &((*(_1188_t))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1bd526d1a:;
			{
				jule::Ptr<_1aa32837c_StructSubIdentExprModel> _1218_s = (*(_6328_m)).cast_ptr<_1aa32837c_StructSubIdentExprModel>(&__jule_any_type101);;
				_1aa88c380_inspect(_self_, &((*((*(_1218_s))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1bd526d92:;
			{
				jule::Ptr<_1aa328de9_TupleExprModel> _1248_t = (*(_6328_m)).cast_ptr<_1aa328de9_TupleExprModel>(&__jule_any_type84);;
				{
					auto expr = &((*(_1248_t))._field_Datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd5384e1:;
					if (it != expr_end) {
						jule::Ptr<_1aa44cc98_Data> _12516_d = *it;
						{
							_1aa88c380_inspect(_self_, &((*(_12516_d))._field_Model));
						}
						_iter_next_1bd5384e1:;
						++it;
						goto _iter_begin_1bd5384e1;
					}
					_iter_end_1bd5384e1:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1bd526e19:;
			{
				jule::Ptr<_1aa329a76_BuiltinNewCallExprModel> _1298_b = (*(_6328_m)).cast_ptr<_1aa329a76_BuiltinNewCallExprModel>(&__jule_any_type116);;
				if (((*(_1298_b))._field_Init != nullptr)) {
					_1aa88c380_inspect(_self_, &((*_1298_b.alloc)._field_Init));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1bd526e91:;
			{
				jule::Ptr<_1aa3292c3_BuiltinOutCallExprModel> _1348_c = (*(_6328_m)).cast_ptr<_1aa3292c3_BuiltinOutCallExprModel>(&__jule_any_type34);;
				_1aa88c380_inspect(_self_, &((*(_1348_c))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1bd527018:;
			{
				jule::Ptr<_1aa32969c_BuiltinOutlnCallExprModel> _1378_c = (*(_6328_m)).cast_ptr<_1aa32969c_BuiltinOutlnCallExprModel>(&__jule_any_type35);;
				_1aa88c380_inspect(_self_, &((*(_1378_c))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1bd527090:;
			{
				jule::Ptr<_1aa329e50_BuiltinPanicCallExprModel> _1408_c = (*(_6328_m)).cast_ptr<_1aa329e50_BuiltinPanicCallExprModel>(&__jule_any_type36);;
				_1aa88c380_inspect(_self_, &((*(_1408_c))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1bd527117:;
			{
				jule::Ptr<_1aa32a406_BuiltinAssertCallExprModel> _1438_c = (*(_6328_m)).cast_ptr<_1aa32a406_BuiltinAssertCallExprModel>(&__jule_any_type37);;
				_1aa88c380_inspect(_self_, &((*(_1438_c))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1bd52718e:;
			{
				jule::Ptr<_1aa32c00c_BuiltinErrorCallExprModel> _1468_c = (*(_6328_m)).cast_ptr<_1aa32c00c_BuiltinErrorCallExprModel>(&__jule_any_type30);;
				_1aa88c380_inspect(_self_, &((*((*(_1468_c))._field_Err))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1bd527216:;
			{
				jule::Ptr<_1aa32a8ac_BuiltinMakeCallExprModel> _1498_b = (*(_6328_m)).cast_ptr<_1aa32a8ac_BuiltinMakeCallExprModel>(&__jule_any_type117);;
				if (((*(_1498_b))._field_Len != nullptr)) {
					_1aa88c380_inspect(_self_, &((*_1498_b.alloc)._field_Len));
				};
				if (((*_1498_b.alloc)._field_Cap != nullptr)) {
					_1aa88c380_inspect(_self_, &((*_1498_b.alloc)._field_Cap));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1bd52728d:;
			{
				jule::Ptr<_1aa32ac86_BuiltinAppendCallExprModel> _1578_b = (*(_6328_m)).cast_ptr<_1aa32ac86_BuiltinAppendCallExprModel>(&__jule_any_type33);;
				_1aa88c380_inspect(_self_, &((*(_1578_b))._field_Dest));
				_1aa88c380_inspect(_self_, &((*_1578_b.alloc)._field_Elements));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1bd527315:;
			{
				jule::Ptr<_1aa32b083_BuiltinLenCallExprModel> _1618_l = (*(_6328_m)).cast_ptr<_1aa32b083_BuiltinLenCallExprModel>(&__jule_any_type118);;
				_1aa88c380_inspect(_self_, &((*((*(_1618_l))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1bd52738c:;
			{
				jule::Ptr<_1aa32b380_BuiltinCapCallExprModel> _1648_c = (*(_6328_m)).cast_ptr<_1aa32b380_BuiltinCapCallExprModel>(&__jule_any_type119);;
				_1aa88c380_inspect(_self_, &((*((*(_1648_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1bd527414:;
			{
				jule::Ptr<_1aa32b759_BuiltinDeleteCallExprModel> _1678_b = (*(_6328_m)).cast_ptr<_1aa32b759_BuiltinDeleteCallExprModel>(&__jule_any_type39);;
				_1aa88c380_inspect(_self_, &((*((*(_1678_b))._field_Dest))._field_Model));
				if (((*_1678_b.alloc)._field_Key != nullptr)) {
					_1aa88c380_inspect(_self_, &((*(*(_1678_b))._field_Key.alloc)._field_Model));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1bd52748b:;
			{
				jule::Ptr<_1aa32c6b1_SizeofExprModel> _1738_s = (*(_6328_m)).cast_ptr<_1aa32c6b1_SizeofExprModel>(&__jule_any_type120);;
				_1aa88c380_inspect(_self_, &((*(_1738_s))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1bd527513:;
			{
				jule::Ptr<_1aa32c89d_AlignofExprModel> _1768_a = (*(_6328_m)).cast_ptr<_1aa32c89d_AlignofExprModel>(&__jule_any_type121);;
				_1aa88c380_inspect(_self_, &((*(_1768_a))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1bd52758a:;
			{
				jule::Ptr<_1aa32ce42_IntegratedToStrExprModel> _1798_i = (*(_6328_m)).cast_ptr<_1aa32ce42_IntegratedToStrExprModel>(&__jule_any_type122);;
				_1aa88c380_inspect(_self_, &((*(_1798_i))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1bd527612:;
			{
				jule::Ptr<_1aa32d618_FreeExprModel> _1828_f = (*(_6328_m)).cast_ptr<_1aa32d618_FreeExprModel>(&__jule_any_type40);;
				_1aa88c380_inspect(_self_, &((*(_1828_f))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1bd527689:;
			{
				jule::Ptr<_1aa32d31b_BackendEmitExprModel> _1858_e = (*(_6328_m)).cast_ptr<_1aa32d31b_BackendEmitExprModel>(&__jule_any_type32);;
				_1aa88c0c7_args(_self_, (*(_1858_e))._field_Exprs);
			}
		}
		_match_end_1bd5262ae:;
	};
}



inline void _1aa88c6e3_Inspect(_1aa88b978_ExprInspector* _self_, jule::Any* _19328_m, jule::Fn<void,jule::Any*> _19342_f) {
	(*(_self_))._field_handler=_19342_f;
	_1aa88c380_inspect(_self_, _19328_m);
}





std::ostream &operator<<(std::ostream &_Stream, _1aa88b978_ExprInspector _Src) {
	_Stream << "ExprInspector{";
	_Stream << "SkipChild:" << _Src._field_SkipChild << ", ";
	_Stream << "handler:" << _Src._field_handler;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa892b27_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1a2c72_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab1a3190_ObjectDeadCode> static__1ab1a3679_new(jule::Ptr<_1aa887941_IR>* _3621_ir) {
	return jule::new_ptr<_1ab1a3190_ObjectDeadCode>(_1ab1a3190_ObjectDeadCode{._field_live=_1ab1a2c72_liveTable{._field_vars=jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>(nullptr), ._field_fns=jule::Slice<jule::Ptr<_1aa334597_FnIns>>(nullptr), ._field_structs=jule::Slice<jule::Ptr<_1aa31e373_StructIns>>(nullptr), ._field_traits=jule::Slice<jule::Ptr<_1aa345047_Trait>>(nullptr)}, ._field_ir=(*(_3621_ir))});;
}



inline jule::Bool _1bc91b155_isLive(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_, jule::Ptr<_1aa31e373_StructIns>* _4227_t) {
	jule::Slice<jule::Ptr<_1aa31e373_StructIns>> _4311_live = nullptr;;
	{
		
{
			_case_begin_1bc91cd5a:;
			{
				_4311_live=(*(_self_))._field_live._field_structs;
			}
		}
		_match_end_1bc91cc39:;
	};
	{
		auto expr = &(_4311_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc91dc7e:;
		if (it != expr_end) {
			jule::I32 _547_i = it - expr->begin();
			{
				if ((_4311_live[_547_i] == (*(_4227_t)))) {
					return true;;
				};
			}
			_iter_next_1bc91dc7e:;
			++it;
			_547_i++;
			goto _iter_begin_1bc91dc7e;
		}
		_iter_end_1bc91dc7e:;
	};
	return false;;
}

inline jule::Bool _1bc92258a_isLive(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_, jule::Ptr<_1aa334597_FnIns>* _4227_t) {
	jule::Slice<jule::Ptr<_1aa334597_FnIns>> _4311_live = nullptr;;
	{
		
{
			_case_begin_1bc924180:;
			{
				_4311_live=(*(_self_))._field_live._field_fns;
			}
		}
		_match_end_1bc9240c5:;
	};
	{
		auto expr = &(_4311_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc92412a:;
		if (it != expr_end) {
			jule::I32 _547_i = it - expr->begin();
			{
				if ((_4311_live[_547_i] == (*(_4227_t)))) {
					return true;;
				};
			}
			_iter_next_1bc92412a:;
			++it;
			_547_i++;
			goto _iter_begin_1bc92412a;
		}
		_iter_end_1bc92412a:;
	};
	return false;;
}

inline jule::Bool _1bc94811b_isLive(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_, jule::Ptr<_1aa345047_Trait>* _4227_t) {
	jule::Slice<jule::Ptr<_1aa345047_Trait>> _4311_live = nullptr;;
	{
		
{
			_case_begin_1bc949d32:;
			{
				_4311_live=(*(_self_))._field_live._field_traits;
			}
		}
		_match_end_1bc949b9a:;
	};
	{
		auto expr = &(_4311_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc94ad88:;
		if (it != expr_end) {
			jule::I32 _547_i = it - expr->begin();
			{
				if ((_4311_live[_547_i] == (*(_4227_t)))) {
					return true;;
				};
			}
			_iter_next_1bc94ad88:;
			++it;
			_547_i++;
			goto _iter_begin_1bc94ad88;
		}
		_iter_end_1bc94ad88:;
	};
	return false;;
}

inline jule::Bool _1bc953214_isLive(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_, jule::Ptr<_1aa3e4d3e_Var>* _4227_t) {
	jule::Slice<jule::Ptr<_1aa3e4d3e_Var>> _4311_live = nullptr;;
	{
		
{
			_case_begin_1bc954ac8:;
			{
				_4311_live=(*(_self_))._field_live._field_vars;
			}
		}
		_match_end_1bc954c4e:;
	};
	{
		auto expr = &(_4311_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc955634:;
		if (it != expr_end) {
			jule::I32 _547_i = it - expr->begin();
			{
				if ((_4311_live[_547_i] == (*(_4227_t)))) {
					return true;;
				};
			}
			_iter_next_1bc955634:;
			++it;
			_547_i++;
			goto _iter_begin_1bc955634;
		}
		_iter_end_1bc955634:;
	};
	return false;;
}



inline void _1bc91baa1_pushLive(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_, jule::Ptr<_1aa31e373_StructIns> _6232_t) {
	{
		
{
			_case_begin_1bc920148:;
			{
				(*(_self_))._field_live._field_structs=jule::append((*_self_.alloc)._field_live._field_structs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa31e373_StructIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6232_t; __jule_collection; }));
			}
		}
		_match_end_1bc91dde4:;
	};
}

inline void _1bc922986_pushLive(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_, jule::Ptr<_1aa334597_FnIns> _6232_t) {
	{
		
{
			_case_begin_1bc926ade:;
			{
				(*(_self_))._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa334597_FnIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6232_t; __jule_collection; }));
			}
		}
		_match_end_1bc925ed9:;
	};
}

inline void _1bc948a12_pushLive(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_, jule::Ptr<_1aa345047_Trait> _6232_t) {
	{
		
{
			_case_begin_1bc94be11:;
			{
				(*(_self_))._field_live._field_traits=jule::append((*_self_.alloc)._field_live._field_traits,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa345047_Trait>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6232_t; __jule_collection; }));
			}
		}
		_match_end_1bc94a717:;
	};
}

inline void _1bc95349a_pushLive(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_, jule::Ptr<_1aa3e4d3e_Var> _6232_t) {
	{
		
{
			_case_begin_1bc9572c3:;
			{
				(*(_self_))._field_live._field_vars=jule::append((*_self_.alloc)._field_live._field_vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6232_t; __jule_collection; }));
			}
		}
		_match_end_1bc955d4e:;
	};
}



inline void _1ab1a402b_pushStructAsLive(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_, jule::Ptr<_1aa31e373_StructIns>* _7538_s) {
	if (_1bc91b155_isLive(_self_, _7538_s)) {
		return;;
	};
	_1bc91baa1_pushLive(_self_, (*(_7538_s)));
	_1ab1a42d4_setReferencesAsLive(_self_, &((*((*(_7538_s))))._field_Refers));
	{
		auto expr = &((*((*(_7538_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc91aad3:;
		if (it != expr_end) {
			jule::Ptr<_1aa3315b6_Fn> _8115_m = *it;
			{
				{
					auto expr = &((*(_8115_m))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc91ca4c:;
					if (it != expr_end) {
						jule::Ptr<_1aa334597_FnIns> _8216_ins = *it;
						{
							if (_1bc92258a_isLive(_self_, &(_8216_ins))) {
								goto _iter_next_1bc91ca4c;
							};
							if (_1aa88e519_IsTraitMethod(_7538_s, &(_8216_ins))) {
								_1bc922986_pushLive(_self_, _8216_ins);
								_1ab1a42d4_setReferencesAsLive(_self_, &((*(_8216_ins))._field_Refers));
							};
							;
							;
							{
								if ((_8216_ins == (*((*(_7538_s))))._field_Operators._field_Eq)) {
									_1bc922986_pushLive(_self_, _8216_ins);
									_1ab1a42d4_setReferencesAsLive(_self_, &((*_8216_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8216_ins == (*((*(_7538_s))))._field_Operators._field_Gt)) {
									_1bc922986_pushLive(_self_, _8216_ins);
									_1ab1a42d4_setReferencesAsLive(_self_, &((*_8216_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8216_ins == (*((*(_7538_s))))._field_Operators._field_GtEq)) {
									_1bc922986_pushLive(_self_, _8216_ins);
									_1ab1a42d4_setReferencesAsLive(_self_, &((*_8216_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8216_ins == (*((*(_7538_s))))._field_Operators._field_Lt)) {
									_1bc922986_pushLive(_self_, _8216_ins);
									_1ab1a42d4_setReferencesAsLive(_self_, &((*_8216_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8216_ins == (*((*(_7538_s))))._field_Operators._field_LtEq)) {
									_1bc922986_pushLive(_self_, _8216_ins);
									_1ab1a42d4_setReferencesAsLive(_self_, &((*_8216_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8216_ins == (*((*(_7538_s))))._field_Operators._field_Shl)) {
									_1bc922986_pushLive(_self_, _8216_ins);
									_1ab1a42d4_setReferencesAsLive(_self_, &((*_8216_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8216_ins == (*((*(_7538_s))))._field_Operators._field_Shr)) {
									_1bc922986_pushLive(_self_, _8216_ins);
									_1ab1a42d4_setReferencesAsLive(_self_, &((*_8216_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8216_ins == (*((*(_7538_s))))._field_Operators._field_Add)) {
									_1bc922986_pushLive(_self_, _8216_ins);
									_1ab1a42d4_setReferencesAsLive(_self_, &((*_8216_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8216_ins == (*((*(_7538_s))))._field_Operators._field_Sub)) {
									_1bc922986_pushLive(_self_, _8216_ins);
									_1ab1a42d4_setReferencesAsLive(_self_, &((*_8216_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8216_ins == (*((*(_7538_s))))._field_Operators._field_Div)) {
									_1bc922986_pushLive(_self_, _8216_ins);
									_1ab1a42d4_setReferencesAsLive(_self_, &((*_8216_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8216_ins == (*((*(_7538_s))))._field_Operators._field_Mul)) {
									_1bc922986_pushLive(_self_, _8216_ins);
									_1ab1a42d4_setReferencesAsLive(_self_, &((*_8216_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8216_ins == (*((*(_7538_s))))._field_Operators._field_Mod)) {
									_1bc922986_pushLive(_self_, _8216_ins);
									_1ab1a42d4_setReferencesAsLive(_self_, &((*_8216_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8216_ins == (*((*(_7538_s))))._field_Operators._field_BitAnd)) {
									_1bc922986_pushLive(_self_, _8216_ins);
									_1ab1a42d4_setReferencesAsLive(_self_, &((*_8216_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8216_ins == (*((*(_7538_s))))._field_Operators._field_BitOr)) {
									_1bc922986_pushLive(_self_, _8216_ins);
									_1ab1a42d4_setReferencesAsLive(_self_, &((*_8216_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8216_ins == (*((*(_7538_s))))._field_Operators._field_BitXor)) {
									_1bc922986_pushLive(_self_, _8216_ins);
									_1ab1a42d4_setReferencesAsLive(_self_, &((*_8216_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8216_ins == (*((*(_7538_s))))._field_Operators._field_Neg)) {
									_1bc922986_pushLive(_self_, _8216_ins);
									_1ab1a42d4_setReferencesAsLive(_self_, &((*_8216_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8216_ins == (*((*(_7538_s))))._field_Operators._field_Pos)) {
									_1bc922986_pushLive(_self_, _8216_ins);
									_1ab1a42d4_setReferencesAsLive(_self_, &((*_8216_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8216_ins == (*((*(_7538_s))))._field_Operators._field_BitNot)) {
									_1bc922986_pushLive(_self_, _8216_ins);
									_1ab1a42d4_setReferencesAsLive(_self_, &((*_8216_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8216_ins == (*((*(_7538_s))))._field_Operators._field_AddAssign)) {
									_1bc922986_pushLive(_self_, _8216_ins);
									_1ab1a42d4_setReferencesAsLive(_self_, &((*_8216_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8216_ins == (*((*(_7538_s))))._field_Operators._field_SubAssign)) {
									_1bc922986_pushLive(_self_, _8216_ins);
									_1ab1a42d4_setReferencesAsLive(_self_, &((*_8216_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8216_ins == (*((*(_7538_s))))._field_Operators._field_DivAssign)) {
									_1bc922986_pushLive(_self_, _8216_ins);
									_1ab1a42d4_setReferencesAsLive(_self_, &((*_8216_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8216_ins == (*((*(_7538_s))))._field_Operators._field_MulAssign)) {
									_1bc922986_pushLive(_self_, _8216_ins);
									_1ab1a42d4_setReferencesAsLive(_self_, &((*_8216_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8216_ins == (*((*(_7538_s))))._field_Operators._field_ModAssign)) {
									_1bc922986_pushLive(_self_, _8216_ins);
									_1ab1a42d4_setReferencesAsLive(_self_, &((*_8216_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8216_ins == (*((*(_7538_s))))._field_Operators._field_ShlAssign)) {
									_1bc922986_pushLive(_self_, _8216_ins);
									_1ab1a42d4_setReferencesAsLive(_self_, &((*_8216_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8216_ins == (*((*(_7538_s))))._field_Operators._field_ShrAssign)) {
									_1bc922986_pushLive(_self_, _8216_ins);
									_1ab1a42d4_setReferencesAsLive(_self_, &((*_8216_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8216_ins == (*((*(_7538_s))))._field_Operators._field_BitOrAssign)) {
									_1bc922986_pushLive(_self_, _8216_ins);
									_1ab1a42d4_setReferencesAsLive(_self_, &((*_8216_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8216_ins == (*((*(_7538_s))))._field_Operators._field_BitAndAssign)) {
									_1bc922986_pushLive(_self_, _8216_ins);
									_1ab1a42d4_setReferencesAsLive(_self_, &((*_8216_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8216_ins == (*((*(_7538_s))))._field_Operators._field_BitXorAssign)) {
									_1bc922986_pushLive(_self_, _8216_ins);
									_1ab1a42d4_setReferencesAsLive(_self_, &((*_8216_ins.alloc)._field_Refers));
								};
							};
							;
							jule::Ptr<_1aa3315b6_Fn> _1139_dispose = _1aa32041d_FindMethod((*(_7538_s)).ptr(), jule::Str::lit("Dispose", 7), false);;
							if (((_1139_dispose != nullptr) && static__1aa3e6439_Dispose(_1139_dispose))) {
								jule::Ptr<_1aa334597_FnIns> _11510_fins = (*_1139_dispose.alloc)._field_Instances[0LL];;
								_1bc922986_pushLive(_self_, _11510_fins);
								_1ab1a42d4_setReferencesAsLive(_self_, &((*(_11510_fins))._field_Refers));
							};
							jule::Ptr<_1aa3315b6_Fn> _1209__str = _1aa32041d_FindMethod((*(_7538_s)).ptr(), jule::Str::lit("Str", 3), false);;
							if (((_1209__str != nullptr) && static__1aa3e6703_Str(_1209__str))) {
								jule::Ptr<_1aa334597_FnIns> _12210_fins = (*(_1209__str))._field_Instances[0LL];;
								_1bc922986_pushLive(_self_, _12210_fins);
								_1ab1a42d4_setReferencesAsLive(_self_, &((*(_12210_fins))._field_Refers));
							};
						}
						_iter_next_1bc91ca4c:;
						++it;
						goto _iter_begin_1bc91ca4c;
					}
					_iter_end_1bc91ca4c:;
				};
			}
			_iter_next_1bc91aad3:;
			++it;
			goto _iter_begin_1bc91aad3;
		}
		_iter_end_1bc91aad3:;
	};
}



inline void _1ab1a42d4_setReferencesAsLive(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_, jule::Ptr<_1aa337732_ReferenceStack>* _13041_rs) {
	if (((*(_13041_rs)) == nullptr)) {
		return;;
	};
	jule::I32 _1347_i = 0LL;;
	for (; (_1347_i < _1aa337e4c_Len((*(_13041_rs)).ptr())); (_1347_i)++) {
		{
			jule::Any _1368_ref = _1aa33828d_At((*(_13041_rs)).ptr(), _1347_i);;
			{
				auto &_match_expr{ _1368_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_1bc946cda:;
					{
						jule::Ptr<_1aa345047_Trait> _1399_t = _1368_ref.unsafe_cast_ptr<_1aa345047_Trait>();;
						if (_1bc94811b_isLive(_self_, &(_1399_t))) {
							goto _iter_next_1bc921bb6;
						};
						_1bc948a12_pushLive(_self_, _1399_t);
						{
							auto expr = &((*(_1399_t))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1bc947a66:;
							if (it != expr_end) {
								jule::Ptr<_1aa3315b6_Fn> _14417_ins = *it;
								{
									{
										auto expr = &((*(_14417_ins))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1bc94a76c:;
										if (it != expr_end) {
											jule::Ptr<_1aa334597_FnIns> _14518_mins = *it;
											{
												if (_1bc92258a_isLive(_self_, &(_14518_mins))) {
													goto _iter_next_1bc94a76c;
												};
												_1bc922986_pushLive(_self_, _14518_mins);
												_1ab1a42d4_setReferencesAsLive(_self_, &((*(_14518_mins))._field_Refers));
											}
											_iter_next_1bc94a76c:;
											++it;
											goto _iter_begin_1bc94a76c;
										}
										_iter_end_1bc94a76c:;
									};
								}
								_iter_next_1bc947a66:;
								++it;
								goto _iter_begin_1bc947a66;
							}
							_iter_end_1bc947a66:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1bc946b20:;
					{
						jule::Ptr<_1aa334597_FnIns> _1549_f = _1368_ref.unsafe_cast_ptr<_1aa334597_FnIns>();;
						if (_1bc92258a_isLive(_self_, &(_1549_f))) {
							goto _match_end_1bc946b97;
						};
						if ((((*(_1549_f))._field_Owner != nullptr) && (!((*((*_1549_f.alloc)._field_Decl))._field_Statically)))) {
							if ((!(_1bc91b155_isLive(_self_, &((*_1549_f.alloc)._field_Owner))))) {
								_1bc91baa1_pushLive(_self_, (*_1549_f.alloc)._field_Owner);
								_1ab1a42d4_setReferencesAsLive(_self_, &((*(*(_1549_f))._field_Owner.alloc)._field_Refers));
							};
						};
						_1bc922986_pushLive(_self_, _1549_f);
						_1ab1a42d4_setReferencesAsLive(_self_, &((*_1549_f.alloc)._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_1bc946d51:;
					{
						jule::Ptr<_1aa3e4d3e_Var> _1679_v = _1368_ref.unsafe_cast_ptr<_1aa3e4d3e_Var>();;
						if (_1bc953214_isLive(_self_, &(_1679_v))) {
							goto _match_end_1bc946b97;
						};
						_1bc95349a_pushLive(_self_, _1679_v);
						_1ab1a42d4_setReferencesAsLive(_self_, &((*(_1679_v))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_1bc946db7:;
					{
						jule::Ptr<_1aa31e373_StructIns> _1749_s = _1368_ref.unsafe_cast_ptr<_1aa31e373_StructIns>();;
						_1ab1a402b_pushStructAsLive(_self_, &(_1749_s));
					}
				}
				_match_end_1bc946b97:;
			};
		}
	_iter_next_1bc921bb6:;
	}
	_iter_end_1bc921bb6:;;
}



inline void _1ab1a458c_inits(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_, jule::Ptr<_1aa39ded5_Package>* _18027_pkg) {
	{
		auto expr = &((*((*(_18027_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc958ec8:;
		if (it != expr_end) {
			jule::Ptr<_1aa4475cd_SymbolTable> _18115_file = *it;
			{
				{
					auto expr = &((*(_18115_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc959935:;
					if (it != expr_end) {
						jule::Ptr<_1aa3315b6_Fn> _18216_f = *it;
						{
							if ((*(_18216_f))._field_Ident.equal("init", 4)) {
								jule::Ptr<_1aa334597_FnIns> _18410_ins = (*(_18216_f))._field_Instances[0LL];;
								if ((!(_1bc92258a_isLive(_self_, &(_18410_ins))))) {
									_1bc922986_pushLive(_self_, _18410_ins);
								};
								_1ab1a42d4_setReferencesAsLive(_self_, &((*(_18410_ins))._field_Refers));
							};
						}
						_iter_next_1bc959935:;
						++it;
						goto _iter_begin_1bc959935;
					}
					_iter_end_1bc959935:;
				};
			}
			_iter_next_1bc958ec8:;
			++it;
			goto _iter_begin_1bc958ec8;
		}
		_iter_end_1bc958ec8:;
	};
}



inline void _1ab1a4845_collectLivePackage(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_, jule::Ptr<_1aa39ded5_Package>* _19440_pkg) {
	_1ab1a458c_inits(_self_, _19440_pkg);
	if (_1adc4ec28_Test) {
		if ((((*((*(_19440_pkg))))._field_Files.len() > 0LL) && _1aa88e88d_IsStdPackage((*((*((*((*(_19440_pkg))))._field_Files[0LL]))._field_File))._field_Path, jule::Str::lit("testing", 7)))) {
			;
			jule::Ptr<_1aa31b518_Struct> _2029_s = _1aa3a01a1_FindStruct((*(_19440_pkg)).ptr(), jule::Str::lit("T", 1), false);;
			jule::Ptr<_1aa31e373_StructIns> _2039_ins = (*(_2029_s))._field_Instances[0LL];;
			_1ab1a402b_pushStructAsLive(_self_, &(_2039_ins));
			{
				auto expr = &((*(_2039_ins))._field_Methods);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1bc95dd46:;
				if (it != expr_end) {
					jule::Ptr<_1aa3315b6_Fn> _20517_m = *it;
					{
						{
							auto expr = &((*(_20517_m))._field_Instances);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1bc95eb7c:;
							if (it != expr_end) {
								jule::Ptr<_1aa334597_FnIns> _20618_mins = *it;
								{
									if (_1bc92258a_isLive(_self_, &(_20618_mins))) {
										goto _iter_next_1bc95eb7c;
									};
									_1bc922986_pushLive(_self_, _20618_mins);
									_1ab1a42d4_setReferencesAsLive(_self_, &((*(_20618_mins))._field_Refers));
								}
								_iter_next_1bc95eb7c:;
								++it;
								goto _iter_begin_1bc95eb7c;
							}
							_iter_end_1bc95eb7c:;
						};
					}
					_iter_next_1bc95dd46:;
					++it;
					goto _iter_begin_1bc95dd46;
				}
				_iter_end_1bc95dd46:;
			};
		};
		{
			auto expr = &((*((*(_19440_pkg))))._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc95ea06:;
			if (it != expr_end) {
				jule::Ptr<_1aa4475cd_SymbolTable> _21516_file = *it;
				{
					{
						auto expr = &((*(_21516_file))._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bc962311:;
						if (it != expr_end) {
							jule::Ptr<_1aa3315b6_Fn> _21617_f = *it;
							{
								if (_1aa890c57_HasDirective(&((*(_21617_f))._field_Directives), jule::Str::lit("test", 4))) {
									jule::Ptr<_1aa334597_FnIns> _21811_ins = (*_21617_f.alloc)._field_Instances[0LL];;
									if ((!(_1bc92258a_isLive(_self_, &(_21811_ins))))) {
										_1bc922986_pushLive(_self_, _21811_ins);
									};
									_1ab1a42d4_setReferencesAsLive(_self_, &((*(_21811_ins))._field_Refers));
								};
							}
							_iter_next_1bc962311:;
							++it;
							goto _iter_begin_1bc962311;
						}
						_iter_end_1bc962311:;
					};
				}
				_iter_next_1bc95ea06:;
				++it;
				goto _iter_begin_1bc95ea06;
			}
			_iter_end_1bc95ea06:;
		};
	};
}



inline void _1ab1a4a43_collectLive(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc962d5b:;
		if (it != expr_end) {
			jule::Ptr<_1aa39b0ae_ImportInfo> _23015_used = *it;
			{
				if ((!((*(_23015_used))._field_Binded))) {
					_1ab1a4845_collectLivePackage(_self_, &((*_23015_used.alloc)._field_Package));
				};
			}
			_iter_next_1bc962d5b:;
			++it;
			goto _iter_begin_1bc962d5b;
		}
		_iter_end_1bc962d5b:;
	};
	_1ab1a4845_collectLivePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	jule::Ptr<_1aa3315b6_Fn> _2387_main = _1aa3a059c_FindFn((*(*(_self_))._field_ir.alloc)._field_Main.ptr(), jule::Str::lit("main", 4), false);;
	if ((_2387_main != nullptr)) {
		jule::Ptr<_1aa334597_FnIns> _2408_ins = (*_2387_main.alloc)._field_Instances[0LL];;
		if ((!(_1bc92258a_isLive(_self_, &(_2408_ins))))) {
			_1bc922986_pushLive(_self_, _2408_ins);
		};
		_1ab1a42d4_setReferencesAsLive(_self_, &((*(_2408_ins))._field_Refers));
	};
}



inline void _1ab1a4ceb_removeDeadGlobals(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>* _24839_vars) {
	jule::I32 _2497_i = 0LL;;
	while ((_2497_i < (*(_24839_vars)).len())) {
		{
			jule::Ptr<_1aa3e4d3e_Var> _2514_v = (*(_24839_vars))[_2497_i];;
			if (_1bc953214_isLive(_self_, &(_2514_v))) {
				(_2497_i)++;
				goto _iter_next_1bc968bca;
			};
			(*(_24839_vars))=jule::append((*(_24839_vars)).slice(0LL, _2497_i),(*(_24839_vars)).slice((_2497_i + 1LL)));
		}
	_iter_next_1bc968bca:;
	}
	_iter_end_1bc968bca:;;
}



inline void _1ab1a50a4_removeDeadFns(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1aa3315b6_Fn>>* _26035_funcs) {
	jule::I32 _2617_i = 0LL;;
	while ((_2617_i < (*(_26035_funcs)).len())) {
		{
			jule::Ptr<_1aa3315b6_Fn> _2638_f = (*(_26035_funcs))[_2617_i];;
			jule::I32 _2648_j = 0LL;;
			while ((_2648_j < (*(_2638_f))._field_Instances.len())) {
				{
					jule::Ptr<_1aa334597_FnIns> _2665_ins = (*(_2638_f))._field_Instances[_2648_j];;
					if (_1bc92258a_isLive(_self_, &(_2665_ins))) {
						(_2648_j)++;
						goto _iter_next_1bc96b42a;
					};
					(*_2638_f.alloc)._field_Instances=jule::append((*_2638_f.alloc)._field_Instances.slice(0LL, _2648_j),(*_2638_f.alloc)._field_Instances.slice((_2648_j + 1LL)));
				}
			_iter_next_1bc96b42a:;
			}
			_iter_end_1bc96b42a:;;
			if (((*_2638_f.alloc)._field_Instances.len() == 0LL)) {
				(*(_26035_funcs))=jule::append((*(_26035_funcs)).slice(0LL, _2617_i),(*(_26035_funcs)).slice((_2617_i + 1LL)));
				goto _iter_next_1bc96a836;
			};
			(_2617_i)++;
		}
	_iter_next_1bc96a836:;
	}
	_iter_end_1bc96a836:;;
}



inline void _1ab1a535c_removeDeadStructs(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1aa31b518_Struct>>* _28139_structs) {
	jule::I32 _2827_i = 0LL;;
	while ((_2827_i < (*(_28139_structs)).len())) {
		{
			jule::Ptr<_1aa31b518_Struct> _2848_s = (*(_28139_structs))[_2827_i];;
			jule::I32 _2858_j = 0LL;;
			while ((_2858_j < (*(_2848_s))._field_Instances.len())) {
				{
					jule::Ptr<_1aa31e373_StructIns> _2879_ins = (*(_2848_s))._field_Instances[_2858_j];;
					_1ab1a50a4_removeDeadFns(_self_, &((*(_2879_ins))._field_Methods));
					if ((((*_2879_ins.alloc)._field_Methods.len() != 0LL) || _1bc91b155_isLive(_self_, &(_2879_ins)))) {
						(_2858_j)++;
						goto _iter_next_1bc970165;
					};
					(*_2848_s.alloc)._field_Instances=jule::append((*_2848_s.alloc)._field_Instances.slice(0LL, _2858_j),(*_2848_s.alloc)._field_Instances.slice((_2858_j + 1LL)));
				}
			_iter_next_1bc970165:;
			}
			_iter_end_1bc970165:;;
			if (((*_2848_s.alloc)._field_Instances.len() == 0LL)) {
				(*(_28139_structs))=jule::append((*(_28139_structs)).slice(0LL, _2827_i),(*(_28139_structs)).slice((_2827_i + 1LL)));
				goto _iter_next_1bc96e4b6;
			};
			(_2827_i)++;
		}
	_iter_next_1bc96e4b6:;
	}
	_iter_end_1bc96e4b6:;;
}



inline void _1ab1a5615_removeDeadTraits(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1aa345047_Trait>>* _30338_traits) {
	jule::I32 _3047_i = 0LL;;
	while ((_3047_i < (*(_30338_traits)).len())) {
		{
			jule::Ptr<_1aa345047_Trait> _3068_t = (*(_30338_traits))[_3047_i];;
			if ((!(_1bc94811b_isLive(_self_, &(_3068_t))))) {
				(*(_30338_traits))=jule::append((*(_30338_traits)).slice(0LL, _3047_i),(*(_30338_traits)).slice((_3047_i + 1LL)));
				goto _iter_next_1bc973c5c;
			};
			jule::I32 _3118_j = 0LL;;
			while ((_3118_j < (*(_3068_t))._field_Implemented.len())) {
				{
					jule::Ptr<_1aa31b518_Struct> _3135_s = (*(_3068_t))._field_Implemented[_3118_j];;
					if (((*(_3135_s))._field_Instances.len() > 0LL)) {
						(_3118_j)++;
						goto _iter_next_1bc974686;
					};
					(*_3068_t.alloc)._field_Implemented=jule::append((*_3068_t.alloc)._field_Implemented.slice(0LL, _3118_j),(*_3068_t.alloc)._field_Implemented.slice((_3118_j + 1LL)));
				}
			_iter_next_1bc974686:;
			}
			_iter_end_1bc974686:;;
			(_3047_i)++;
		}
	_iter_next_1bc973c5c:;
	}
	_iter_end_1bc973c5c:;;
}



inline void _1ab1a58bd_removeDeadsFile(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_, jule::Ptr<_1aa4475cd_SymbolTable>* _32437_file) {
	_1ab1a50a4_removeDeadFns(_self_, &((*((*(_32437_file))))._field_Funcs));
	_1ab1a535c_removeDeadStructs(_self_, &((*((*(_32437_file))))._field_Structs));
	_1ab1a5615_removeDeadTraits(_self_, &((*((*(_32437_file))))._field_Traits));
	_1ab1a4ceb_removeDeadGlobals(_self_, &((*((*(_32437_file))))._field_Vars));
}



inline void _1ab1a5b76_removeDeadsPackage(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_, jule::Ptr<_1aa39ded5_Package>* _33140_pkg) {
	{
		auto expr = &((*((*(_33140_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc979306:;
		if (it != expr_end) {
			jule::Ptr<_1aa4475cd_SymbolTable> _33215_file = *it;
			{
				_1ab1a58bd_removeDeadsFile(_self_, &(_33215_file));
			}
			_iter_next_1bc979306:;
			++it;
			goto _iter_begin_1bc979306;
		}
		_iter_end_1bc979306:;
	};
}



inline void _1ab1a5d74_removeDeads(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc979a76:;
		if (it != expr_end) {
			jule::Ptr<_1aa39b0ae_ImportInfo> _33815_used = *it;
			{
				if (((!((*(_33815_used))._field_Binded)) && (!(_1aa88ec67_IsImplicitImport(_33815_used))))) {
					_1ab1a5b76_removeDeadsPackage(_self_, &((*_33815_used.alloc)._field_Package));
				};
			}
			_iter_next_1bc979a76:;
			++it;
			goto _iter_begin_1bc979a76;
		}
		_iter_end_1bc979a76:;
	};
	_1ab1a5b76_removeDeadsPackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
}



inline void _1ab1a6072_elimanate(jule::Ptr<_1ab1a3190_ObjectDeadCode> _self_) {
	_1ab1a4a43_collectLive(_self_);
	_1ab1a5d74_removeDeads(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1a3190_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1ab1a70a6_scopeDeadCode_eq(_1ab1a70a6_scopeDeadCode *_self_, _1ab1a70a6_scopeDeadCode _other_) {
	return 
		(_self_->_field_parent == _other_._field_parent) &&
		(_self_->_field_s == _self_->_field_s) &&
		(_self_->_field_i == _self_->_field_i) &&
		(_self_->_field_labels == _self_->_field_labels) &&
		(_self_->_field_gotos == _self_->_field_gotos) &&
		(_self_->_field_except == _self_->_field_except);
}

inline void _1ab1a75c3_optimizeChild(jule::Ptr<_1ab1a70a6_scopeDeadCode> _self_, jule::Ptr<_1aa378ba2_Scope>* _3935_s) {
	jule::Ptr<_1ab1a70a6_scopeDeadCode> _407_sdc = jule::new_ptr<_1ab1a70a6_scopeDeadCode>(_1ab1a70a6_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3935_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=false});;
	{
		_1ab1a9edd_optimizeStmts(_407_sdc);
	};
}



inline void _1ab1a787b_optimizeBodyChildExceptional(jule::Ptr<_1ab1a70a6_scopeDeadCode> _self_, jule::Ptr<_1aa378ba2_Scope>* _4950_s) {
	jule::Ptr<_1ab1a70a6_scopeDeadCode> _507_sdc = jule::new_ptr<_1ab1a70a6_scopeDeadCode>(_1ab1a70a6_scopeDeadCode{._field_parent=jule::Ptr<_1ab1a70a6_scopeDeadCode>(nullptr), ._field_s=(*(_4950_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=true});;
	{
		_1ab1a9edd_optimizeStmts(_507_sdc);
	};
}



inline void _1ab1a7b34_optimizeBodyChild(jule::Ptr<_1ab1a70a6_scopeDeadCode> _self_, jule::Ptr<_1aa378ba2_Scope>* _5939_s) {
	jule::Ptr<_1ab1a70a6_scopeDeadCode> _607_sdc = jule::new_ptr<_1ab1a70a6_scopeDeadCode>(_1ab1a70a6_scopeDeadCode{._field_parent=jule::Ptr<_1ab1a70a6_scopeDeadCode>(nullptr), ._field_s=(*(_5939_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=false});;
	{
		_1ab1a9edd_optimizeStmts(_607_sdc);
	};
}



inline void _1ab1a7ddc_optimizeExprModel(jule::Ptr<_1ab1a70a6_scopeDeadCode> _self_, jule::Any* _6839_model) {
	_1ab1ab74d_exprDeadCode _693_edc = static__1ab1abb16_new(&(_self_));;
	_1ab1abdbe_optimize(&_693_edc, _6839_model);
}



inline void _1ab1a80da_eliminateFollowed(_1ab1a70a6_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		((*((*(_self_))._field_s))._field_Stmts).mut_slice(0LL, ((*(_self_))._field_i + 1LL));;
	};
	jule::Ptr<_1ab1a70a6_scopeDeadCode> _807_parent = (*(_self_))._field_parent;;
	while ((_807_parent != nullptr)) {
		{
			{
				((*((*(_807_parent))._field_s))._field_Stmts).mut_slice(0LL, ((*(_807_parent))._field_i + 1LL));;
			};
			_807_parent=(*_807_parent.alloc)._field_parent;
		}
	_iter_next_1bc98a46b:;
	}
	_iter_end_1bc98a46b:;;
}



inline void _1ab1a8393_pushGoto(jule::Ptr<_1ab1a70a6_scopeDeadCode> _self_, jule::Ptr<_1aa37b91e_GotoSt> _8929_gt) {
	jule::I32 _907_i = 0LL;;
	for (; (_907_i < (*((*(_self_))._field_labels)).len()); (_907_i)++) {
		{
			if (((*(_8929_gt))._field_Ident == (*((*((*(_self_))._field_labels))[_907_i]))._field_Ident)) {
				return;;
			};
		}
	_iter_next_1bc98d837:;
	}
	_iter_end_1bc98d837:;;
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*(_self_))._field_gotos.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa37b91e_GotoSt>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _8929_gt; __jule_collection; }));
}



inline void _1ab1a864b_pushLabel(jule::Ptr<_1ab1a70a6_scopeDeadCode> _self_, jule::Ptr<_1aa37b545_Label> _9930_l) {
	jule::I32 _1007_i = 0LL;;
	while ((_1007_i < (*((*(_self_))._field_gotos)).len())) {
		{
			if (((*(_9930_l))._field_Ident == (*((*((*(_self_))._field_gotos))[_1007_i]))._field_Ident)) {
				jule::copy((*((*(_self_))._field_gotos)).slice(_1007_i), (*((*(_self_))._field_gotos)).slice((_1007_i + 1LL)));
				((*((*(_self_))._field_gotos))).mut_slice(0LL, ((*((*(_self_))._field_gotos)).len() - 1LL));;
				goto _iter_next_1bc990a15;
			};
			(_1007_i)++;
		}
	_iter_next_1bc990a15:;
	}
	_iter_end_1bc990a15:;;
	(*((*_self_.alloc)._field_labels))=jule::append((*(*(_self_))._field_labels.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa37b545_Label>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _9930_l; __jule_collection; }));
}



inline void _1ab1a8904_optimizeRangeIter(jule::Ptr<_1ab1a70a6_scopeDeadCode> _self_, jule::Ptr<_1aa37a9d9_RangeIter> _11238_it) {
	_1ab1a7ddc_optimizeExprModel(_self_, &((*((*(_11238_it))._field_Expr))._field_Model));
	_1ab1a7b34_optimizeBodyChild(_self_, &((*_11238_it.alloc)._field_Scope));
}



inline void _1ab1a8bac_optimizeWhileIter(jule::Ptr<_1ab1a70a6_scopeDeadCode> _self_, jule::Ptr<_1aa37a08d_WhileIter> _11738_it) {
	_1ab1a7ddc_optimizeExprModel(_self_, &((*(_11738_it))._field_Expr));
	if (((*_11738_it.alloc)._field_Next != nullptr)) {
		_1ab1a9ce0_optimizeStmt(_self_, (*_11738_it.alloc)._field_Next);
	};
	_1ab1a7b34_optimizeBodyChild(_self_, &((*_11738_it.alloc)._field_Scope));
}



inline void _1ab1a8e65_optimizeInfIter(jule::Ptr<_1ab1a70a6_scopeDeadCode> _self_, jule::Ptr<_1aa379ad7_InfIter> _12536_it) {
	_1ab1a7b34_optimizeBodyChild(_self_, &((*(_12536_it))._field_Scope));
}



inline void _1ab1a921d_optimizeConditional(jule::Ptr<_1ab1a70a6_scopeDeadCode> _self_, jule::Ptr<_1aa3797da_Conditional> _12940_c) {
	{
		auto expr = &((*(_12940_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc997874:;
		if (it != expr_end) {
			jule::Ptr<_1aa3790c0_If> _13015_case = *it;
			{
				if ((_13015_case != nullptr)) {
					_1ab1a7ddc_optimizeExprModel(_self_, &((*_13015_case.alloc)._field_Expr));
					_1ab1a7b34_optimizeBodyChild(_self_, &((*_13015_case.alloc)._field_Scope));
				};
			}
			_iter_next_1bc997874:;
			++it;
			goto _iter_begin_1bc997874;
		}
		_iter_end_1bc997874:;
	};
	if (((*_12940_c.alloc)._field_Default != nullptr)) {
		if (((*_12940_c.alloc)._field_Elifs.len() == 0LL)) {
			_1ab1a75c3_optimizeChild(_self_, &((*(*(_12940_c))._field_Default.alloc)._field_Scope));
		} else {
			_1ab1a7b34_optimizeBodyChild(_self_, &((*(*(_12940_c))._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1ab1a94c6_optimizeMatch(jule::Ptr<_1ab1a70a6_scopeDeadCode> _self_, jule::Ptr<_1aa37cdb5_Match> _14734_m) {
	{
		auto expr = &((*(_14734_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc99ada5:;
		if (it != expr_end) {
			jule::Ptr<_1aa37d8dd_Case> _14815_case = *it;
			{
				{
					auto expr = &((*(_14815_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc99b823:;
					if (it != expr_end) {
						jule::Ptr<_1aa44cc98_Data> _14916_expr = *it;
						{
							_1ab1a7ddc_optimizeExprModel(_self_, &((*(_14916_expr))._field_Model));
						}
						_iter_next_1bc99b823:;
						++it;
						goto _iter_begin_1bc99b823;
					}
					_iter_end_1bc99b823:;
				};
				_1ab1a7b34_optimizeBodyChild(_self_, &((*_14815_case.alloc)._field_Scope));
			}
			_iter_next_1bc99ada5:;
			++it;
			goto _iter_begin_1bc99ada5;
		}
		_iter_end_1bc99ada5:;
	};
	if (((*_14734_m.alloc)._field_Default != nullptr)) {
		if (((*_14734_m.alloc)._field_Cases.len() == 0LL)) {
			_1ab1a75c3_optimizeChild(_self_, &((*(*(_14734_m))._field_Default.alloc)._field_Scope));
		} else {
			_1ab1a7b34_optimizeBodyChild(_self_, &((*(*(_14734_m))._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1ab1a977e_optimizeAssign(jule::Ptr<_1ab1a70a6_scopeDeadCode> _self_, jule::Ptr<_1aa37c29e_Assign> _16535_assign) {
	_1ab1a7ddc_optimizeExprModel(_self_, &((*((*(_16535_assign))._field_Left))._field_Model));
	_1ab1a7ddc_optimizeExprModel(_self_, &((*((*_16535_assign.alloc)._field_Right))._field_Model));
}



inline void _1ab1a9a37_optimizeMultiAssign(jule::Ptr<_1ab1a70a6_scopeDeadCode> _self_, jule::Ptr<_1aa37c755_MultiAssign> _17040_assign) {
	{
		auto expr = &((*(_17040_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc9a0b9b:;
		if (it != expr_end) {
			jule::Ptr<_1aa44cc98_Data> _17115_l = *it;
			{
				if ((_17115_l != nullptr)) {
					_1ab1a7ddc_optimizeExprModel(_self_, &((*_17115_l.alloc)._field_Model));
				};
			}
			_iter_next_1bc9a0b9b:;
			++it;
			goto _iter_begin_1bc9a0b9b;
		}
		_iter_end_1bc9a0b9b:;
	};
	_1ab1a7ddc_optimizeExprModel(_self_, &((*_17040_assign.alloc)._field_Right));
}



inline void _1ab1a9ce0_optimizeStmt(jule::Ptr<_1ab1a70a6_scopeDeadCode> _self_, jule::Any _17933_st) {
	{
		auto &_match_expr{ _17933_st };
		
		if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1bc9a2818:;
			{
				jule::Ptr<_1aa378ba2_Scope> _1828_scope = _17933_st.unsafe_cast_ptr<_1aa378ba2_Scope>();;
				if ((*(_1828_scope))._field_Deferred) {
					_1ab1aa2da_eliminateDeadCodeOfScope(_1828_scope);
				} else {
					_1ab1a75c3_optimizeChild(_self_, &(_1828_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1bc9a2593:;
			{
				_1ab1a8904_optimizeRangeIter(_self_, _17933_st.cast_ptr<_1aa37a9d9_RangeIter>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1bc9a2890:;
			{
				_1ab1a8bac_optimizeWhileIter(_self_, _17933_st.cast_ptr<_1aa37a08d_WhileIter>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1bc9a2917:;
			{
				_1ab1a8e65_optimizeInfIter(_self_, _17933_st.cast_ptr<_1aa379ad7_InfIter>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1bc9a298e:;
			{
				_1ab1a921d_optimizeConditional(_self_, _17933_st.cast_ptr<_1aa3797da_Conditional>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1bc9a2a16:;
			{
				_1ab1a94c6_optimizeMatch(_self_, _17933_st.cast_ptr<_1aa37cdb5_Match>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1bc9a2a8d:;
			{
				_1ab1a977e_optimizeAssign(_self_, _17933_st.cast_ptr<_1aa37c29e_Assign>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1bc9a2b15:;
			{
				_1ab1a9a37_optimizeMultiAssign(_self_, _17933_st.cast_ptr<_1aa37c755_MultiAssign>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1bc9a2b8c:;
			{
				jule::Ptr<_1aa44cc98_Data> _2038_d = _17933_st.unsafe_cast_ptr<_1aa44cc98_Data>();;
				if ((*(_self_))._field_except) {
					goto _match_end_1bc9a26c5;
				};
				{
					auto &_match_expr{ (*(_2038_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type36) {
						_case_begin_1bc9a85cc:;
						{
							_1ab1a80da_eliminateFollowed(_self_);
						}
					}
					else {
						_case_begin_1bc9a8c1a:;
						{
							_1ab1a7ddc_optimizeExprModel(_self_, &((*(_2038_d))._field_Model));
						}
					}
					_match_end_1bc9a8bb5:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1bc9a2c14:;
			{
				_1ab1a80da_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1bc9a2c8b:;
			{
				_1ab1a8393_pushGoto(_self_, _17933_st.cast_ptr<_1aa37b91e_GotoSt>(&__jule_any_type49));
				_1ab1a80da_eliminateFollowed(_self_);
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1bc9a2d13:;
			{
				_1ab1a864b_pushLabel(_self_, _17933_st.cast_ptr<_1aa37b545_Label>(&__jule_any_type28));
			}
		}
		_match_end_1bc9a26c5:;
	};
}



inline void _1ab1a9edd_optimizeStmts(jule::Ptr<_1ab1a70a6_scopeDeadCode> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_s))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1ab1a9ce0_optimizeStmt(_self_, (*(*(_self_))._field_s.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1bc9ab613:;
	}
	_iter_end_1bc9ab613:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1a70a6_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1ab1ab74d_exprDeadCode_eq(_1ab1ab74d_exprDeadCode *_self_, _1ab1ab74d_exprDeadCode _other_) {
	return 
		(_self_->_field_s == _other_._field_s);
}

inline _1ab1ab74d_exprDeadCode static__1ab1abb16_new(jule::Ptr<_1ab1a70a6_scopeDeadCode>* _1821_s) {
	return _1ab1ab74d_exprDeadCode{._field_s=(*(_1821_s))};;
}



inline void _1ab1abdbe_optimize(_1ab1ab74d_exprDeadCode* _self_, jule::Any* _2425_model) {
	jule::Ptr<_1aa88b978_ExprInspector> _257_inspector = static__1aa88bd1e_New();;
	_1aa88c6e3_Inspect(_257_inspector.ptr(), _2425_model, jule::__new_closure<void,jule::Any*>((void*)__jule_anon_1ac9d2160, jule::Ptr<__jule_anon_1ac9d2160_ctx>::make(__jule_anon_1ac9d2160_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac9d2160_ctx_handler));
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1ab74d_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa5ecc17_ExceptionalForwardingExprModel_eq(_1aa5ecc17_ExceptionalForwardingExprModel *_self_, _1aa5ecc17_ExceptionalForwardingExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa5ecc17_ExceptionalForwardingExprModel _Src) {
	_Stream << "ExceptionalForwardingExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa5ed09c_SwapExprModel_eq(_1aa5ed09c_SwapExprModel *_self_, _1aa5ed09c_SwapExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa5ed09c_SwapExprModel _Src) {
	_Stream << "SwapExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa5ed476_EmptyCompareExprModel_eq(_1aa5ed476_EmptyCompareExprModel *_self_, _1aa5ed476_EmptyCompareExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Neg == _self_->_field_Neg);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa5ed476_EmptyCompareExprModel _Src) {
	_Stream << "EmptyCompareExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Neg:" << _Src._field_Neg;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa5ed7ea_RefExprModel_eq(_1aa5ed7ea_RefExprModel *_self_, _1aa5ed7ea_RefExprModel _other_) {
	return 
		(_self_->_field_Var == _other_._field_Var);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa5ed7ea_RefExprModel _Src) {
	_Stream << "RefExprModel{";
	_Stream << "Var:" << _Src._field_Var;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa5edc6d_StrCompExprModel_eq(_1aa5edc6d_StrCompExprModel *_self_, _1aa5edc6d_StrCompExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_NotEq == _self_->_field_NotEq);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa5edc6d_StrCompExprModel _Src) {
	_Stream << "StrCompExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "NotEq:" << _Src._field_NotEq;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa5ee301_MutSlicingExprModel_eq(_1aa5ee301_MutSlicingExprModel *_self_, _1aa5ee301_MutSlicingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Left == _self_->_field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa5ee301_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa5ee5ed_UnsafeBinaryExprModel_eq(_1aa5ee5ed_UnsafeBinaryExprModel *_self_, _1aa5ee5ed_UnsafeBinaryExprModel _other_) {
	return 
		(_self_->_field_Node == _other_._field_Node);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa5ee5ed_UnsafeBinaryExprModel _Src) {
	_Stream << "UnsafeBinaryExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa5ee983_UnsafeIndexingExprModel_eq(_1aa5ee983_UnsafeIndexingExprModel *_self_, _1aa5ee983_UnsafeIndexingExprModel _other_) {
	return 
		(_self_->_field_Node == _other_._field_Node);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa5ee983_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa5eed5c_PushToSliceExprModel_eq(_1aa5eed5c_PushToSliceExprModel *_self_, _1aa5eed5c_PushToSliceExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Elems == _self_->_field_Elems);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa5eed5c_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa600236_AppendToSliceExprModel_eq(_1aa600236_AppendToSliceExprModel *_self_, _1aa600236_AppendToSliceExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Slice == _self_->_field_Slice);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa600236_AppendToSliceExprModel _Src) {
	_Stream << "AppendToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Slice:" << _Src._field_Slice;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa600610_StrRuneIter_eq(_1aa600610_StrRuneIter *_self_, _1aa600610_StrRuneIter _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Base == _self_->_field_Base);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa600610_StrRuneIter _Src) {
	_Stream << "StrRuneIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Base:" << _Src._field_Base;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa60090c_UnsafeDerefExprModel_eq(_1aa60090c_UnsafeDerefExprModel *_self_, _1aa60090c_UnsafeDerefExprModel _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa60090c_UnsafeDerefExprModel _Src) {
	_Stream << "UnsafeDerefExprModel{";
	_Stream << "Base:" << _Src._field_Base;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa600c09_UnsafeCastingExprModel_eq(_1aa600c09_UnsafeCastingExprModel *_self_, _1aa600c09_UnsafeCastingExprModel _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa600c09_UnsafeCastingExprModel _Src) {
	_Stream << "UnsafeCastingExprModel{";
	_Stream << "Base:" << _Src._field_Base;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa6018db_nilVar_eq(_1aa6018db_nilVar *_self_, _1aa6018db_nilVar _other_) {
	return 
		(_self_->_field_var == _other_._field_var) &&
		(_self_->_field_safe == _self_->_field_safe);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa6018db_nilVar _Src) {
	_Stream << "nilVar{";
	_Stream << "var:" << _Src._field_var << ", ";
	_Stream << "safe:" << _Src._field_safe;
	_Stream << "}";
	return _Stream;
}



inline void _1aa6021c2_pushVar(_1aa601c2c_nils* _self_, jule::Uintptr _2923_var, jule::Bool _2937_safe) {
	if (((!(_1aa8a9512_Access)) || (_2923_var == 0LLU))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca33689:;
		if (it != expr_end) {
			_1aa6018db_nilVar _3415_v = *it;
			{
				if ((_3415_v._field_var == _2923_var)) {
					_3415_v._field_safe=_2937_safe;
					return;;
				};
			}
			_iter_next_1aca33689:;
			++it;
			goto _iter_begin_1aca33689;
		}
		_iter_end_1aca33689:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca34514:;
		if (it != expr_end) {
			_1aa6018db_nilVar _4115_v = *it;
			{
				if ((_4115_v._field_var == 0LLU)) {
					_4115_v._field_var=_2923_var;
					_4115_v._field_safe=_2937_safe;
					return;;
				};
			}
			_iter_next_1aca34514:;
			++it;
			goto _iter_begin_1aca34514;
		}
		_iter_end_1aca34514:;
	};
	{ jule::Slice<_1aa6018db_nilVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1aa6018db_nilVar{._field_var=_2923_var, ._field_safe=_2937_safe}); };
}



inline jule::Bool _1aa602513_removeVar(_1aa601c2c_nils* _self_, jule::Uintptr _5225_var) {
	if ((_5225_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aca364e4:;
			if (it != expr_end) {
				_1aa6018db_nilVar _5416_v = *it;
				{
					if ((_5416_v._field_var == _5225_var)) {
						_5416_v._field_var=0LLU;
						_5416_v._field_safe=false;
						return true;;
					};
				}
				_iter_next_1aca364e4:;
				++it;
				goto _iter_begin_1aca364e4;
			}
			_iter_end_1aca364e4:;
		};
	};
	return false;;
}



inline jule::Bool _1aa602854_isSafe(_1aa601c2c_nils* _self_, jule::Uintptr _6622_var) {
	if ((_6622_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aca37b55:;
			if (it != expr_end) {
				_1aa6018db_nilVar _6811_v = *it;
				{
					if ((_6811_v._field_var == _6622_var)) {
						return _6811_v._field_safe;;
					};
				}
				_iter_next_1aca37b55:;
				++it;
				goto _iter_begin_1aca37b55;
			}
			_iter_end_1aca37b55:;
		};
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa601c2c_nils _Src) {
	_Stream << "nils{";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa8943cb_scopeOptimizer_eq(_1aa8943cb_scopeOptimizer *_self_, _1aa8943cb_scopeOptimizer _other_) {
	return 
		(_self_->_field_parent == _other_._field_parent) &&
		(_self_->_field_i == _self_->_field_i) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Ptr<_1aa8943cb_scopeOptimizer> static__1aa894981_new(jule::Ptr<_1aa378ba2_Scope> _5120_scope) {
	jule::Ptr<_1aa8943cb_scopeOptimizer> _527_sc = jule::new_ptr<_1aa8943cb_scopeOptimizer>(_1aa8943cb_scopeOptimizer{._field_parent=jule::Ptr<_1aa8943cb_scopeOptimizer>(nullptr), ._field_i=0, ._field_scope=_5120_scope, ._field_data=jule::new_ptr<_1aa8a4287_data>(_1aa8a4287_data{._field_boundary=jule::new_ptr<_1aa8a5c17_boundary>(_1aa8a5c17_boundary{._field_vars=jule::Slice<_1aa8a58c6_boundaryVar>(nullptr)}), ._field_nils=jule::new_ptr<_1aa601c2c_nils>(_1aa601c2c_nils{._field_vars=jule::Slice<_1aa6018db_nilVar>(nullptr)}), ._field_dynamic=jule::new_ptr<_1aa8a1608_dynamic>(_1aa8a1608_dynamic{._field_vars=jule::Slice<_1aa8a12b7_dynamicVar>(nullptr)})})});;
	return _527_sc;;
}



inline void _1aa894c39_setCurrentStmt(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_, jule::Any _6335_stmt) {
	(*((*(_self_))._field_scope))._field_Stmts[(*_self_.alloc)._field_i]=(*(((jule::Any*)((&(_6335_stmt))))));
}



inline void _1aa894e37_removeCurrent(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_) {
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts.slice(0LL, (*_self_.alloc)._field_i),(*(*(_self_))._field_scope.alloc)._field_Stmts.slice(((*_self_.alloc)._field_i + 1LL)));
}



inline jule::Bool _1aa8951bd_isLastStmt(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_) {
	jule::Ptr<_1aa8943cb_scopeOptimizer> _737_r = _self_;;
	for (; (_737_r != nullptr); _737_r=(*_737_r.alloc)._field_parent) {
		{
			if ((((*((*_737_r.alloc)._field_scope))._field_Stmts.len() - (*_737_r.alloc)._field_i) != 1LL)) {
				return false;;
			};
		}
	_iter_next_1aca44d4e:;
	}
	_iter_end_1aca44d4e:;;
	return true;;
}



inline jule::Bool _1aa895454_isIter(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_) {
	jule::Ptr<_1aa8943cb_scopeOptimizer> _837_r = (*(_self_))._field_parent;;
	for (; (_837_r != nullptr); _837_r=(*_837_r.alloc)._field_parent) {
		{
			{
				auto &_match_expr{ (*((*(_837_r))._field_scope))._field_Stmts[(*(_837_r))._field_i] };
				
				if (_match_expr.type == &__jule_any_type47 || _match_expr.type == &__jule_any_type45 || _match_expr.type == &__jule_any_type43) {
					_case_begin_1aca475b0:;
					{
						return true;;
					}
				}
				_match_end_1aca47527:;
			};
		}
	_iter_next_1aca46944:;
	}
	_iter_end_1aca46944:;;
	return false;;
}



inline void _1aa89570c_optimizeData(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_, jule::Ptr<_1aa44cc98_Data> _9533_d) {
	{
		auto &_match_expr{ (*(_9533_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1aca4877b:;
			{
				jule::Ptr<_1aa32570e_FnCallExprModel> _988_m = (*(_9533_d))._field_Model.unsafe_cast_ptr<_1aa32570e_FnCallExprModel>();;
				if (_1adc505db_Production) {
					if (((!(_1aa335a60_IsBuiltin((*(_988_m))._field_Func.ptr()))) && _1aa88e88d_IsStdPackage((*((*((*((*(*(_988_m))._field_Func.alloc)._field_Decl))._field_Token))._field_File))._field_Path, jule::Str::lit("debug", 5)))) {
						_1aa894c39_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
				static__1aa89b68b_optimizeData(&((*(_9533_d))._field_Model), &((*_self_.alloc)._field_data));
				if (((((((_1aa8aa986_Exceptional && (*(*((*(_988_m))._field_Func))._field_Decl.alloc)._field_Exceptional) && ((*_988_m.alloc)._field_Except != nullptr)) && ((*(*(_988_m))._field_Except.alloc)._field_Stmts.len() == 1LL)) && _1aa88d4e6_IsForwarded(&((*_988_m.alloc)._field_Except))) && _1aa8951bd_isLastStmt(_self_)) && (!(_1aa895454_isIter(_self_))))) {
					_1aa894c39_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1aa5ecc17_ExceptionalForwardingExprModel>(_1aa5ecc17_ExceptionalForwardingExprModel{._field_Expr=_988_m}), &__jule_any_type123));
				};
				return;;
			}
		}
		_match_end_1aca48715:;
	};
	static__1aa89b68b_optimizeData(&((*_9533_d.alloc)._field_Model), &((*_self_.alloc)._field_data));
}



inline void _1aa8959b5_optimizeVar(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_, jule::Ptr<_1aa3e4d3e_Var> _12132_v) {
	if (((*(_12132_v))._field_Value != nullptr)) {
		if (((((*((*(_self_))._field_data))._field_nils != nullptr) && _1aa60338d_isNilValidType((*((*_12132_v.alloc)._field_Kind))._field_Kind)) && _1aa6030c4_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*(*(_12132_v))._field_Value.alloc)._field_Data))._field_Model))) {
			;
			_1aa6021c2_pushVar((*((*(_self_))._field_data))._field_nils, _1aa6036ce_getNilVar(jule::Any(_12132_v, &__jule_any_type8)), true);
		};
		if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
			jule::Ptr<_1a601a64a_TypeKind> _1309_kind = _1aa8a2dce_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_12132_v))._field_Kind.alloc)._field_Kind, (*(*((*(_12132_v))._field_Value))._field_Data.alloc)._field_Model);;
			if ((_1309_kind != nullptr)) {
				if (_1aa8a29a0_isDynamicValidType((*(*(_12132_v))._field_Kind.alloc)._field_Kind)) {
					_1aa8a1a9d_pushVar((*((*(_self_))._field_data))._field_dynamic, _1aa8a3220_getDynamicVar(jule::Any(_12132_v, &__jule_any_type8)), _1309_kind);
				};
			};
		};
		static__1aa89b68b_optimizeData(&((*(*((*(_12132_v))._field_Value))._field_Data.alloc)._field_Model), &((*_self_.alloc)._field_data));
	};
}



inline void _1aa895c6d_optimizeConditional(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_, jule::Ptr<_1aa3797da_Conditional> _14240_c) {
	_1aa8a3c8c_dataCheckpoint _1437_checkpoint = _1aa8a463e_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_14240_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca56c73:;
		if (it != expr_end) {
			jule::Ptr<_1aa3790c0_If> _14415_elif = *it;
			{
				static__1aa89b68b_optimizeData(&((*(_14415_elif))._field_Expr), &((*_self_.alloc)._field_data));
				_1aa8988ec_optimizeChild(_self_, (*_14415_elif.alloc)._field_Scope);
				if ((((*(_14240_c))._field_Elifs.len() > 1LL) || ((*_14240_c.alloc)._field_Default != nullptr))) {
					_1aa8a48e7_loadCheckpoint((*(_self_))._field_data, &(_1437_checkpoint));
				};
			}
			_iter_next_1aca56c73:;
			++it;
			goto _iter_begin_1aca56c73;
		}
		_iter_end_1aca56c73:;
	};
	if (((*_14240_c.alloc)._field_Default != nullptr)) {
		_1aa8988ec_optimizeChild(_self_, (*(*(_14240_c))._field_Default.alloc)._field_Scope);
		_1aa8a48e7_loadCheckpoint((*(_self_))._field_data, &(_1437_checkpoint));
	};
	if ((!(_1aa8a9e3b_Cond))) {
		return;;
	};
	jule::Bool _1607_constCase = false;;
	{
		auto expr = &((*_14240_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca5a8ae:;
		if (it != expr_end) {
			jule::I32 _1638_i = it - expr->begin();
			jule::Ptr<_1aa3790c0_If> _16315_elif = *it;
			{
				if ((!(_1aa898e80_isConstantValidConditionalCase(&(_16315_elif))))) {
					goto _iter_next_1aca5a8ae;
				};
				_1607_constCase=true;
				((*(_14240_c))._field_Elifs).mut_slice(0LL, _1638_i);;
				(*_14240_c.alloc)._field_Default=jule::new_ptr<_1aa3793bc_Else>(_1aa3793bc_Else{._field_Scope=(*(_16315_elif))._field_Scope});
				goto _iter_end_1aca5a8ae;
			}
			_iter_next_1aca5a8ae:;
			++it;
			_1638_i++;
			goto _iter_begin_1aca5a8ae;
		}
		_iter_end_1aca5a8ae:;
	};
	if (((*_14240_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1aa3790c0_If>* _1807_i = (&((*(_14240_c))._field_Elifs[0LL]));;
	jule::Ptr<_1aa3790c0_If>* _1813_end = (&((*_14240_c.alloc)._field_Elifs[((*_14240_c.alloc)._field_Elifs.len() - 1LL)]));;
	for (; (_1807_i <= _1813_end); (_1807_i)++) {
		{
			{
				if (_1aa899898_isUnreachableConditionalCase(&((*(_1807_i))))) {
					(*(_1807_i))=nullptr;
				};
			};
		}
	_iter_next_1aca5d54e:;
	}
	_iter_end_1aca5d54e:;;
	if (((*_14240_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_1607_constCase))) {
		return;;
	};
	jule::I32 _1997_only = -1LL;;
	{
		auto expr = &((*_14240_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca60870:;
		if (it != expr_end) {
			jule::I32 _2007_j = it - expr->begin();
			jule::Ptr<_1aa3790c0_If> _20010_elif = *it;
			{
				if ((_20010_elif != nullptr)) {
					if ((_1997_only != -1LL)) {
						return;;
					};
					_1997_only=_2007_j;
				};
			}
			_iter_next_1aca60870:;
			++it;
			_2007_j++;
			goto _iter_begin_1aca60870;
		}
		_iter_end_1aca60870:;
	};
	if ((_1997_only != -1LL)) {
		_1aa894c39_setCurrentStmt(_self_, jule::Any((*((*_14240_c.alloc)._field_Elifs[_1997_only]))._field_Scope, &__jule_any_type29));
	};
}



inline void _1aa89618b_buildDefaultConstantTrueCase(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_, jule::Ptr<_1aa37d8dd_Case> _21649_case, jule::I32* _21667_i, jule::Ptr<_1aa37cdb5_Match>* _21680_m) {
	(*(_21649_case))._field_Exprs=nullptr;
	jule::I32 _2183_start = (*(_21667_i));;
	_julec_label_1aca62d5b:;
	for (;;) {
		{
			if (((*((*_21649_case.alloc)._field_Scope))._field_Stmts.len() == 0LL)) {
				goto _iter_end_1aca62de4;
			};
			jule::Any *_2249_stmt = &((*(*(_21649_case))._field_Scope.alloc)._field_Stmts[((*(*(_21649_case))._field_Scope.alloc)._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_2249_stmt)) };
				
				if (_match_expr.type == &__jule_any_type56) {
					_case_begin_1aca65523:;
					{
						((*(_21667_i)))++;
						if (((*(_21667_i)) >= (*((*(_21680_m))))._field_Cases.len())) {
							(*(_2249_stmt))=jule::Any((*((*((*(_21680_m))))._field_Default))._field_Scope, &__jule_any_type29);
							goto _iter_end_1aca62de4;
						};
						_21649_case=(*((*(_21680_m))))._field_Cases[(*(_21667_i))];
						(*(_2249_stmt))=jule::Any((*_21649_case.alloc)._field_Scope, &__jule_any_type29);
					}
				}
				else {
					_case_begin_1aca65633:;
					{
						goto _iter_end_1aca62de4;
					}
				}
				_match_end_1aca654bd:;
			};
		}
	_iter_next_1aca62de4:;
	}
	_iter_end_1aca62de4:;;
	(*((*(_21680_m))))._field_Default=(*((*(_21680_m))))._field_Cases[_2183_start];
	((*((*(_21680_m))))._field_Cases).mut_slice(0LL, _2183_start);;
}



inline void _1aa896444_optimizeMatch(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_, jule::Ptr<_1aa37cdb5_Match> _24234_m) {
	jule::Uintptr _2437_var = 0LLU;;
	if ((_1aa8aaee7_Dynamic && (*(_24234_m))._field_TypeMatch)) {
		_2437_var=_1aa8a3220_getDynamicVar((*((*_24234_m.alloc)._field_Expr))._field_Model);
	};
	_1aa8a3c8c_dataCheckpoint _2477_checkpoint = _1aa8a463e_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_24234_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca69bba:;
		if (it != expr_end) {
			jule::Ptr<_1aa37d8dd_Case> _24815_case = *it;
			{
				{
					auto expr = &((*(_24815_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aca6a5a0:;
					if (it != expr_end) {
						jule::Ptr<_1aa44cc98_Data> _24916_expr = *it;
						{
							static__1aa89b68b_optimizeData(&((*(_24916_expr))._field_Model), &((*_self_.alloc)._field_data));
						}
						_iter_next_1aca6a5a0:;
						++it;
						goto _iter_begin_1aca6a5a0;
					}
					_iter_end_1aca6a5a0:;
				};
				if ((((*_24815_case.alloc)._field_Exprs.len() == 1LL) && ((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr))) {
					jule::Ptr<_1a601a64a_TypeKind> _2549_kind = _1aa8a2dce_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*(_24815_case))._field_Exprs[0LL]))._field_Kind, nullptr);;
					if ((_2549_kind != nullptr)) {
						_1aa8a1a9d_pushVar((*((*(_self_))._field_data))._field_dynamic, _2437_var, _2549_kind);
					} else {
						_1aa8a1dde_removeVar((*((*(_self_))._field_data))._field_dynamic, _2437_var);
					};
				};
				_1aa8988ec_optimizeChild(_self_, (*_24815_case.alloc)._field_Scope);
				if ((((*_24234_m.alloc)._field_Cases.len() > 1LL) || ((*_24234_m.alloc)._field_Default != nullptr))) {
					_1aa8a48e7_loadCheckpoint((*(_self_))._field_data, &(_2477_checkpoint));
				};
			}
			_iter_next_1aca69bba:;
			++it;
			goto _iter_begin_1aca69bba;
		}
		_iter_end_1aca69bba:;
	};
	if (((*_24234_m.alloc)._field_Default != nullptr)) {
		_1aa8988ec_optimizeChild(_self_, (*(*(_24234_m))._field_Default.alloc)._field_Scope);
		_1aa8a48e7_loadCheckpoint((*(_self_))._field_data, &(_2477_checkpoint));
	};
	if ((!(_1aa8a9e3b_Cond))) {
		return;;
	};
	jule::Bool _2757_constCase = false;;
	{
		auto expr = &((*_24234_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca71ee1:;
		if (it != expr_end) {
			jule::I32 _27812_i = it - expr->begin();
			jule::Ptr<_1aa37d8dd_Case> _27819_case = *it;
			{
				if ((!(_1aa899557_isConstantValidMatchCase(&(_27819_case))))) {
					goto _iter_next_1aca71ee1;
				};
				_2757_constCase=true;
				_1aa89618b_buildDefaultConstantTrueCase(_self_, _27819_case, &(_27812_i), &(_24234_m));
				goto _iter_end_1aca71ee1;
			}
			_iter_next_1aca71ee1:;
			++it;
			_27812_i++;
			goto _iter_begin_1aca71ee1;
		}
		_iter_end_1aca71ee1:;
	};
	if (((*_24234_m.alloc)._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1aa37d8dd_Case>* _2927_i = (&((*(_24234_m))._field_Cases[0LL]));;
	jule::Ptr<_1aa37d8dd_Case>* _2933_end = (&((*_24234_m.alloc)._field_Cases[((*_24234_m.alloc)._field_Cases.len() - 1LL)]));;
	for (; (_2927_i <= _2933_end); (_2927_i)++) {
		{
			{
				if (_1aa899b2e_isUnreachableMatchCase(&((*(_2927_i))))) {
					(*(_2927_i))=nullptr;
				};
			};
		}
	_iter_next_1aca74ad7:;
	}
	_iter_end_1aca74ad7:;;
	if ((!(_2757_constCase))) {
		return;;
	};
	jule::I32 _3077_only = -1LL;;
	{
		auto expr = &((*_24234_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca75d6e:;
		if (it != expr_end) {
			jule::I32 _3087_j = it - expr->begin();
			jule::Ptr<_1aa37d8dd_Case> _30810_case = *it;
			{
				if ((_30810_case != nullptr)) {
					if ((_3077_only != -1LL)) {
						return;;
					};
					_3077_only=_3087_j;
				};
			}
			_iter_next_1aca75d6e:;
			++it;
			_3087_j++;
			goto _iter_begin_1aca75d6e;
		}
		_iter_end_1aca75d6e:;
	};
	if ((_3077_only != -1LL)) {
		_1aa894c39_setCurrentStmt(_self_, jule::Any((*((*_24234_m.alloc)._field_Cases[_3077_only]))._field_Scope, &__jule_any_type29));
	};
}



inline void _1aa8966ec_optimizeRangeIter(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_, jule::Ptr<_1aa37a9d9_RangeIter> _32438_it) {
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && ((*(_32438_it))._field_KeyA != nullptr))) {
		_1aa8a61ac_pushVar((*((*(_self_))._field_data))._field_boundary, _1aa8a8148_getBoundaryVar((*((*_32438_it.alloc)._field_Expr))._field_Model), jule::Any((*_32438_it.alloc)._field_KeyA, &__jule_any_type8));
	};
	_1aa8988ec_optimizeChild(_self_, (*_32438_it.alloc)._field_Scope);
	if (_1aa8aac3e_Iter) {
		{
			auto &_match_expr{ (*((*(_32438_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type96) {
				_case_begin_1aca7aa11:;
				{
					jule::Ptr<_1aa324d5c_CastingExprModel> _3369_cem = (*((*(_32438_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1aa324d5c_CastingExprModel>();;
					jule::Ptr<_1a6023763_Prim> _3375_eprim = _1a601cd01_Prim((*(_3369_cem))._field_ExprKind.ptr());;
					if (((_3375_eprim == nullptr) || (!(_1a6026c2d_IsStr(_3375_eprim.ptr()))))) {
						goto _match_end_1aca7a99a;
					};
					jule::Ptr<_1a6027c62_Slc> _3419_s = _1a601dd57_Slc((*_3369_cem.alloc)._field_Kind.ptr());;
					if ((_3419_s == nullptr)) {
						goto _match_end_1aca7a99a;
					};
					jule::Ptr<_1a6023763_Prim> _3455_prim = _1a601cd01_Prim((*(_3419_s))._field_Elem.ptr());;
					if ((_3455_prim == nullptr)) {
						goto _match_end_1aca7a99a;
					};
					{
						
						if (_1a602518d_IsU8(_3455_prim.ptr())) {
							_case_begin_1aca7e3b6:;
							{
								(*_32438_it.alloc)._field_Expr=(*_3369_cem.alloc)._field_Expr;
							}
						}
						else if (_1a6024b71_IsI32(_3455_prim.ptr())) {
							_case_begin_1aca7e581:;
							{
								static__1aa89b68b_optimizeData(&((*((*_3369_cem.alloc)._field_Expr))._field_Model), &((*_self_.alloc)._field_data));
								_1aa894c39_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1aa600610_StrRuneIter>(_1aa600610_StrRuneIter{._field_Expr=(*_3369_cem.alloc)._field_Expr, ._field_Base=_32438_it}), &__jule_any_type124));
								return;;
							}
						}
						_match_end_1aca7e1c9:;
					};
				}
			}
			_match_end_1aca7a99a:;
		};
	};
	static__1aa89b68b_optimizeData(&((*(*(_32438_it))._field_Expr.alloc)._field_Model), &((*_self_.alloc)._field_data));
}



inline void _1aa8969a5_optimizeWhileIter(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_, jule::Ptr<_1aa37a08d_WhileIter> _36938_it) {
	static__1aa89b68b_optimizeData(&((*(_36938_it))._field_Expr), &((*(_self_))._field_data));
	_1aa898644_optimizeStmt(_self_, (*_36938_it.alloc)._field_Next);
	_1aa8988ec_optimizeChild(_self_, (*_36938_it.alloc)._field_Scope);
}



inline jule::Bool _1aa896ce6_substr(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_, jule::Ptr<_1aa37c29e_Assign> _37527_a) {
	if (((*((*(_37527_a))._field_Op))._field_Id != static_cast<jule::U32>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_37527_a))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1aca84388:;
			{
				jule::Ptr<_1aa327458_SlicingExprModel> _3818_sem = (*((*(_37527_a))._field_Right))._field_Model.unsafe_cast_ptr<_1aa327458_SlicingExprModel>();;
				if (_1aa5ec0e0_equalModels((*((*_37527_a.alloc)._field_Left))._field_Model, (*(_3818_sem))._field_Expr)) {
					_1aa894c39_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1aa5ee301_MutSlicingExprModel>(_1aa5ee301_MutSlicingExprModel{._field_Token=(*_3818_sem.alloc)._field_Token, ._field_Expr=(*_3818_sem.alloc)._field_Expr, ._field_Left=(*_3818_sem.alloc)._field_Left, ._field_Right=(*_3818_sem.alloc)._field_Right}), &__jule_any_type125));
					return true;;
				};
			}
		}
		_match_end_1aca84322:;
	};
	return false;;
}



inline jule::Bool _1aa897137_strAssign(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_, jule::Ptr<_1aa37c29e_Assign> _39530_a) {
	if ((!(_1aa8aa17d_Str))) {
		return false;;
	};
	jule::Ptr<_1a6023763_Prim> _3993_lp = _1a601cd01_Prim((*((*(_39530_a))._field_Left))._field_Kind.ptr());;
	if (((_3993_lp == nullptr) || (!(_1a6026c2d_IsStr(_3993_lp.ptr()))))) {
		return false;;
	};
	return _1aa896ce6_substr(_self_, _39530_a);;
}



inline jule::Bool _1aa897478_sliceAssign(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_, jule::Ptr<_1aa37c29e_Assign> _40632_a) {
	if (((!(_1aa8aa425_Slice)) || (_1a601dd57_Slc((*((*(_40632_a))._field_Left))._field_Kind.ptr()) == nullptr))) {
		return false;;
	};
	return _1aa896ce6_substr(_self_, _40632_a);;
}



inline void _1aa897731_optimizePostfix(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_, jule::Ptr<_1aa37bce8_Postfix> _41436_postfix) {
	if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
		_1aa8a77eb_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*(_41436_postfix))._field_Expr);
	};
	static__1aa89b68b_optimizeData(&((*_41436_postfix.alloc)._field_Expr), &((*_self_.alloc)._field_data));
}



inline void _1aa8979d9_optimizeAssign(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_, jule::Ptr<_1aa37c29e_Assign> _42135_assign) {
	if ((((*((*(_42135_assign))._field_Op))._field_Id == static_cast<jule::U32>(71LLU)) && _1aa5ec0e0_equalModels((*((*_42135_assign.alloc)._field_Left))._field_Model, (*((*_42135_assign.alloc)._field_Right))._field_Model))) {
		_1aa894e37_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return;;
	};
	if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
		if (_1aa8a7ab5_isBoundaryRiskyType((*(*(_42135_assign))._field_Left.alloc)._field_Kind)) {
			_1aa8a77eb_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*(*(_42135_assign))._field_Left.alloc)._field_Model);
		};
	};
	if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
		if (_1aa6030c4_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_42135_assign))._field_Right.alloc)._field_Model)) {
			if (_1aa60338d_isNilValidType((*(*(_42135_assign))._field_Left.alloc)._field_Kind)) {
				;
				_1aa6021c2_pushVar((*((*(_self_))._field_data))._field_nils, _1aa6036ce_getNilVar((*(*(_42135_assign))._field_Left.alloc)._field_Model), true);
			};
		} else {
			_1aa602c0b_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_42135_assign))._field_Left.alloc)._field_Model);
		};
	};
	if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
		jule::Ptr<_1a601a64a_TypeKind> _4458_kind = _1aa8a2dce_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_42135_assign))._field_Right.alloc)._field_Kind, (*(*(_42135_assign))._field_Right.alloc)._field_Model);;
		if ((_4458_kind != nullptr)) {
			if (_1aa8a29a0_isDynamicValidType((*(*(_42135_assign))._field_Left.alloc)._field_Kind)) {
				_1aa8a1a9d_pushVar((*((*(_self_))._field_data))._field_dynamic, _1aa8a3220_getDynamicVar((*(*(_42135_assign))._field_Left.alloc)._field_Model), _4458_kind);
			};
		} else {
			_1aa8a2692_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_42135_assign))._field_Left.alloc)._field_Model);
		};
	};
	{
		
		if (_1aa897137_strAssign(_self_, _42135_assign) || _1aa897478_sliceAssign(_self_, _42135_assign)) {
			_case_begin_1aca9393b:;
			{
				return;;
			}
		}
		_match_end_1aca955a8:;
	};
	static__1aa89b68b_optimizeData(&((*(*(_42135_assign))._field_Left.alloc)._field_Model), &((*_self_.alloc)._field_data));
	static__1aa89b68b_optimizeData(&((*(*(_42135_assign))._field_Right.alloc)._field_Model), &((*_self_.alloc)._field_data));
	{
		auto &_match_expr{ (*((*(_42135_assign))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(43LLU) || _match_expr == static_cast<jule::U32>(44LLU) || _match_expr == static_cast<jule::U32>(45LLU) || _match_expr == static_cast<jule::U32>(46LLU)) {
			_case_begin_1aca9917d:;
			{
				if (((!(_1aa8a9259_Math)) || (_1a601e374_Struct((*(*(_42135_assign))._field_Left.alloc)._field_Kind.ptr()) != nullptr))) {
					goto _match_end_1aca99117;
				};
				jule::U32 _4714_oldId;
				jule::Str _47111_oldKind;
				({
					jule::U32 ___jule_assign_arg = (*(*(_42135_assign))._field_Op.alloc)._field_Id;
					jule::Str _1___jule_assign_arg = (*(*(_42135_assign))._field_Op.alloc)._field_Kind;
					_4714_oldId = ___jule_assign_arg;
					_47111_oldKind = _1___jule_assign_arg;
				});
				{
					auto &_match_expr{ (*((*(_42135_assign))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(43LLU)) {
						_case_begin_1aca9c36d:;
						{
							(*(*(_42135_assign))._field_Op.alloc)._field_Id=static_cast<jule::U32>(63LLU);
							(*(*(_42135_assign))._field_Op.alloc)._field_Kind=jule::Str::lit("/", 1);
						}
					}
					else if (_match_expr == static_cast<jule::U32>(44LLU)) {
						_case_begin_1aca9c3d4:;
						{
							(*(*(_42135_assign))._field_Op.alloc)._field_Id=static_cast<jule::U32>(64LLU);
							(*(*(_42135_assign))._field_Op.alloc)._field_Kind=jule::Str::lit("%", 1);
						}
					}
					else if (_match_expr == static_cast<jule::U32>(45LLU)) {
						_case_begin_1aca9c04e:;
						{
							(*(*(_42135_assign))._field_Op.alloc)._field_Id=static_cast<jule::U32>(56LLU);
							(*(*(_42135_assign))._field_Op.alloc)._field_Kind=jule::Str::lit("<<", 2);
						}
					}
					else if (_match_expr == static_cast<jule::U32>(46LLU)) {
						_case_begin_1aca9c0c6:;
						{
							(*(*(_42135_assign))._field_Op.alloc)._field_Id=static_cast<jule::U32>(57LLU);
							(*(*(_42135_assign))._field_Op.alloc)._field_Kind=jule::Str::lit(">>", 2);
						}
					}
					else {
						_case_begin_1aca9baed:;
						{
							jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/opt/scope.jule:486:5"));;
						}
					}
					_match_end_1aca9be1c:;
				};
				jule::Ptr<_1aa32372e_BinaryExprModel> _4888_b = jule::new_ptr<_1aa32372e_BinaryExprModel>(_1aa32372e_BinaryExprModel{._field_Left=(*_42135_assign.alloc)._field_Left, ._field_Right=(*_42135_assign.alloc)._field_Right, ._field_Op=(*_42135_assign.alloc)._field_Op});;
				jule::Any _4938_model = jule::Any(_4888_b, &__jule_any_type114);;
				static__1aa89b68b_optimizeData(&(_4938_model), &((*_self_.alloc)._field_data));
				if ((!__jule_any_type114_compare(_4938_model, _4888_b))) {
					(*_42135_assign.alloc)._field_Right=jule::new_ptr<_1aa323234_OperandExprModel>((*(*(_42135_assign))._field_Right.alloc));
					(*(_4888_b))._field_Op=jule::new_ptr<_1aa2d51c4_Token>((*(*(_4888_b))._field_Op.alloc));
					(*(*(_42135_assign))._field_Op.alloc)._field_Id=static_cast<jule::U32>(71LLU);
					(*(*(_42135_assign))._field_Op.alloc)._field_Kind=jule::Str::lit("=", 1);
					(*(*(_42135_assign))._field_Right.alloc)._field_Model=_4938_model;
					return;;
				};
				(*(*(_42135_assign))._field_Op.alloc)._field_Id=_4714_oldId;
				(*(*(_42135_assign))._field_Op.alloc)._field_Kind=_47111_oldKind;
				return;;
			}
		}
		_match_end_1aca99117:;
	};
	if (_1aa8a8e5c_Append) {
		{
			auto &_match_expr{ (*((*(_42135_assign))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type33) {
				_case_begin_1acaa5d49:;
				{
					jule::Ptr<_1aa32ac86_BuiltinAppendCallExprModel> _5139_m = (*(*(_42135_assign))._field_Right.alloc)._field_Model.cast_ptr<_1aa32ac86_BuiltinAppendCallExprModel>(&__jule_any_type33);;
					if ((!(_1aa8a04c5_areSameLvalueExprModel(&((*(*(_42135_assign))._field_Left.alloc)._field_Model), &((*(_5139_m))._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ (*(_5139_m))._field_Elements };
						
						if (_match_expr.type == &__jule_any_type80) {
							_case_begin_1acaa7367:;
							{
								_1aa894c39_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1aa5eed5c_PushToSliceExprModel>(_1aa5eed5c_PushToSliceExprModel{._field_Dest=(*_5139_m.alloc)._field_Dest, ._field_Elems=(*(_5139_m))._field_Elements.unsafe_cast_ptr<_1aa325ad8_SliceExprModel>()}), &__jule_any_type126));
							}
						}
						else {
							_case_begin_1acaa78b7:;
							{
								_1aa894c39_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1aa600236_AppendToSliceExprModel>(_1aa600236_AppendToSliceExprModel{._field_Dest=(*(*(_42135_assign))._field_Left.alloc)._field_Model, ._field_Slice=(*_5139_m.alloc)._field_Elements}), &__jule_any_type127));
							}
						}
						_match_end_1acaa7862:;
					};
				}
			}
			_match_end_1acaa5cd3:;
		};
	};
}



inline jule::Bool _1aa897d2a_tryOptimizeSwap(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_, jule::Ptr<_1aa37c755_MultiAssign>* _53537_assign) {
	if (((((!(_1aa8aa6cd_Assign)) || ((*((*(_53537_assign))))._field_Left.len() != 2LL)) || ((*((*(_53537_assign))))._field_Left[0LL] == nullptr)) || ((*((*(_53537_assign))))._field_Left[1LL] == nullptr))) {
		return false;;
	};
	jule::Ptr<_1aa328de9_TupleExprModel> _54011_tup;;
	{
		auto &_match_expr{ (*((*(_53537_assign))))._field_Right };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1acaab4ae:;
			{
				_54011_tup=(*((*(_53537_assign))))._field_Right.unsafe_cast_ptr<_1aa328de9_TupleExprModel>();
			}
		}
		_match_end_1acaab448:;
	};
	if (((_54011_tup == nullptr) || ((*(_54011_tup))._field_Datas.len() != 2LL))) {
		return false;;
	};
	if ((_1aa5ec0e0_equalModels((*((*((*(_53537_assign))))._field_Left[0LL]))._field_Model, (*((*(_54011_tup))._field_Datas[0LL]))._field_Model) && _1aa5ec0e0_equalModels((*((*((*(_53537_assign))))._field_Left[1LL]))._field_Model, (*((*(_54011_tup))._field_Datas[1LL]))._field_Model))) {
		_1aa894e37_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return true;;
	};
	if (((!(_1aa5ec0e0_equalModels((*((*((*(_53537_assign))))._field_Left[0LL]))._field_Model, (*((*(_54011_tup))._field_Datas[1LL]))._field_Model))) || (!(_1aa5ec0e0_equalModels((*((*((*(_53537_assign))))._field_Left[1LL]))._field_Model, (*((*(_54011_tup))._field_Datas[0LL]))._field_Model))))) {
		return false;;
	};
	jule::Ptr<_1aa5ed09c_SwapExprModel> _5627_model = jule::new_ptr<_1aa5ed09c_SwapExprModel>(_1aa5ed09c_SwapExprModel{._field_Left=(*((*(_53537_assign))))._field_Left[0LL], ._field_Right=(*((*(_53537_assign))))._field_Left[1LL]});;
	static__1aa89b68b_optimizeData(&((*((*(_5627_model))._field_Left))._field_Model), &((*_self_.alloc)._field_data));
	static__1aa89b68b_optimizeData(&((*((*_5627_model.alloc)._field_Right))._field_Model), &((*_self_.alloc)._field_data));
	_1aa894c39_setCurrentStmt(_self_, jule::Any(_5627_model, &__jule_any_type128));
	return true;;
}



inline void _1aa8980d3_optimizeMultiAssign(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_, jule::Ptr<_1aa37c755_MultiAssign> _57240_assign) {
	if (_1aa897d2a_tryOptimizeSwap(_self_, &(_57240_assign))) {
		return;;
	};
	jule::Ptr<_1aa328de9_TupleExprModel> _5797_tup = static_cast<jule::Ptr<_1aa328de9_TupleExprModel>>(nullptr);;
	{
		auto &_match_expr{ (*(_57240_assign))._field_Right };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1acab4eac:;
			{
				_5797_tup=(*(_57240_assign))._field_Right.unsafe_cast_ptr<_1aa328de9_TupleExprModel>();
			}
		}
		_match_end_1acab4e46:;
	};
	{
		auto expr = &((*(_57240_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acab40dd:;
		if (it != expr_end) {
			jule::I32 _5848_i = it - expr->begin();
			jule::Ptr<_1aa44cc98_Data> _58415_l = *it;
			{
				if ((_58415_l != nullptr)) {
					if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
						if (_1aa8a7ab5_isBoundaryRiskyType((*_58415_l.alloc)._field_Kind)) {
							_1aa8a77eb_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*_58415_l.alloc)._field_Model);
						};
					};
					if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
						if (((_5797_tup != nullptr) && _1aa6030c4_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*_5797_tup.alloc)._field_Datas[_5848_i]))._field_Model))) {
							if (_1aa60338d_isNilValidType((*_58415_l.alloc)._field_Kind)) {
								;
								_1aa6021c2_pushVar((*((*(_self_))._field_data))._field_nils, _1aa6036ce_getNilVar((*_58415_l.alloc)._field_Model), true);
							};
						} else {
							_1aa602c0b_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*_58415_l.alloc)._field_Model);
						};
					};
					if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && (_5797_tup != nullptr))) {
						jule::Ptr<_1a601a64a_TypeKind> _60210_kind = _1aa8a2dce_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*_5797_tup.alloc)._field_Datas[_5848_i]))._field_Kind, (*((*(_5797_tup))._field_Datas[_5848_i]))._field_Model);;
						if ((_60210_kind != nullptr)) {
							if (_1aa8a29a0_isDynamicValidType((*_58415_l.alloc)._field_Kind)) {
								_1aa8a1a9d_pushVar((*((*(_self_))._field_data))._field_dynamic, _1aa8a3220_getDynamicVar((*_58415_l.alloc)._field_Model), _60210_kind);
							};
						} else {
							_1aa8a2692_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*_58415_l.alloc)._field_Model);
						};
					};
					static__1aa89b68b_optimizeData(&((*_58415_l.alloc)._field_Model), &((*_self_.alloc)._field_data));
				};
			}
			_iter_next_1acab40dd:;
			++it;
			_5848_i++;
			goto _iter_begin_1acab40dd;
		}
		_iter_end_1acab40dd:;
	};
	static__1aa89b68b_optimizeData(&((*_57240_assign.alloc)._field_Right), &((*_self_.alloc)._field_data));
}



inline void _1aa89838b_optimizeRet(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_, jule::Ptr<_1aa37e47c_RetSt> _61832_r) {
	static__1aa89b68b_optimizeData(&((*(_61832_r))._field_Expr), &((*(_self_))._field_data));
	if ((!(_1aa8aa986_Exceptional))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_61832_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1acac0e41:;
			{
				goto _match_end_1acac0eeb;
			}
		}
		else {
			_case_begin_1acac1051:;
			{
				return;;
			}
		}
		_match_end_1acac0eeb:;
	};
	jule::Ptr<_1aa32570e_FnCallExprModel> _6327_fc = (*_61832_r.alloc)._field_Expr.cast_ptr<_1aa32570e_FnCallExprModel>(&__jule_any_type41);;
	if (((((!((*((*((*(_6327_fc))._field_Func))._field_Decl))._field_Exceptional)) || ((*_6327_fc.alloc)._field_Except == nullptr)) || ((*((*_6327_fc.alloc)._field_Except))._field_Stmts.len() != 1LL)) || (!(_1aa88d4e6_IsForwarded(&((*_6327_fc.alloc)._field_Except)))))) {
		return;;
	};
	_1aa894c39_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1aa5ecc17_ExceptionalForwardingExprModel>(_1aa5ecc17_ExceptionalForwardingExprModel{._field_Expr=_6327_fc}), &__jule_any_type123));
}



inline void _1aa898644_optimizeStmt(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_, jule::Any _64233_stmt) {
	{
		auto &_match_expr{ _64233_stmt };
		
		if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1acac4472:;
			{
				_1aa8988ec_optimizeChild(_self_, _64233_stmt.cast_ptr<_1aa378ba2_Scope>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1acac41b9:;
			{
				_1aa89570c_optimizeData(_self_, _64233_stmt.cast_ptr<_1aa44cc98_Data>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1acac44d8:;
			{
				_1aa8959b5_optimizeVar(_self_, _64233_stmt.cast_ptr<_1aa3e4d3e_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1acac454e:;
			{
				_1aa895c6d_optimizeConditional(_self_, _64233_stmt.cast_ptr<_1aa3797da_Conditional>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1acac45b5:;
			{
				_1aa8966ec_optimizeRangeIter(_self_, _64233_stmt.cast_ptr<_1aa37a9d9_RangeIter>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1acac463c:;
			{
				_1aa8969a5_optimizeWhileIter(_self_, _64233_stmt.cast_ptr<_1aa37a08d_WhileIter>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1acac46b4:;
			{
				_1aa8988ec_optimizeChild(_self_, (*(_64233_stmt.unsafe_cast_ptr<_1aa379ad7_InfIter>()))._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1acac473b:;
			{
				_1aa8979d9_optimizeAssign(_self_, _64233_stmt.cast_ptr<_1aa37c29e_Assign>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1acac47b3:;
			{
				_1aa8980d3_optimizeMultiAssign(_self_, _64233_stmt.cast_ptr<_1aa37c755_MultiAssign>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1acac483a:;
			{
				_1aa896444_optimizeMatch(_self_, _64233_stmt.cast_ptr<_1aa37cdb5_Match>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1acac48b2:;
			{
				_1aa89838b_optimizeRet(_self_, _64233_stmt.cast_ptr<_1aa37e47c_RetSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1acac4939:;
			{
				_1aa897731_optimizePostfix(_self_, _64233_stmt.cast_ptr<_1aa37bce8_Postfix>(&__jule_any_type50));
			}
		}
		_match_end_1acac432e:;
	};
}



inline void _1aa8988ec_optimizeChild(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_, jule::Ptr<_1aa378ba2_Scope> _67134_child) {
	jule::Ptr<_1aa8943cb_scopeOptimizer> _6727_so = static__1aa894981_new(_67134_child);;
	(*(_6727_so))._field_parent=_self_;
	(*_6727_so.alloc)._field_data=(*(_self_))._field_data;
	_1aa898aea_optimize(_6727_so);
}



inline void _1aa898aea_optimize(jule::Ptr<_1aa8943cb_scopeOptimizer> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_scope))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1aa898644_optimizeStmt(_self_, (*(*(_self_))._field_scope.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1acacc887:;
	}
	_iter_end_1acacc887:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa8943cb_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa89adc7_exprOptimizer_eq(_1aa89adc7_exprOptimizer *_self_, _1aa89adc7_exprOptimizer _other_) {
	return 
		(_self_->_field_model == _other_._field_model) &&
		(_self_->_field_data == _self_->_field_data) &&
		(_self_->_field_inspector == _self_->_field_inspector);
}

inline void static__1aa89b3a0_optimize(jule::Any* _3626_model) {
	static__1aa89b68b_optimizeData(_3626_model, &(_1aa8a3891_emptyData));
}



inline void static__1aa89b68b_optimizeData(jule::Any* _4030_model, jule::Ptr<_1aa8a4287_data>* _4053_d) {
	if (_1ab1ac441_exprEnabled) {
		jule::Ptr<_1aa89adc7_exprOptimizer> _438_exop = jule::new_ptr<_1aa89adc7_exprOptimizer>(_1aa89adc7_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)(_4030_model)), ._field_data=(*(_4053_d)), ._field_inspector=static__1aa88bd1e_New()});;
		_1aa89ebbc_do(_438_exop.ptr());
	};
}



inline jule::Bool _1aa89b9cc_selfCmpCond(_1aa89adc7_exprOptimizer* _self_, jule::Ptr<_1aa32372e_BinaryExprModel>* _5228_m) {
	if ((!(_1aa5ec0e0_equalModels((*((*((*(_5228_m))))._field_Left))._field_Model, (*((*((*(_5228_m))))._field_Right))._field_Model)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_5228_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(53LLU) || _match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1acadc2c0:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1a6e7808a_NewBool(true), &__jule_any_type20);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU)) {
			_case_begin_1acadc6bb:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1a6e7808a_NewBool(false), &__jule_any_type20);
				return true;;
			}
		}
		else {
			_case_begin_1acadb1ae:;
			{
				return false;;
			}
		}
		_match_end_1acadc259:;
	};
}



inline jule::Bool _1aa89bd1d_boolCond(_1aa89adc7_exprOptimizer* _self_, jule::Ptr<_1aa32372e_BinaryExprModel>* _7625_m) {
	jule::Ptr<_1a6023763_Prim> _773_lp = _1a601cd01_Prim((*((*((*(_7625_m))))._field_Left))._field_Kind.ptr());;
	if (((_773_lp == nullptr) || (!(_1a6026997_IsBool(_773_lp.ptr()))))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_7625_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1acae1a77:;
			{
				std::swap((*((*(_7625_m))))._field_Left, (*((*(_7625_m))))._field_Right);
			}
		}
		else {
			_case_begin_1acae0c85:;
			{
				{
					auto &_match_expr{ (*((*((*(_7625_m))))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1acae0092:;
						{
							goto _match_end_1acae159e;
						}
					}
					else {
						_case_begin_1acae1604:;
						{
							return false;;
						}
					}
					_match_end_1acae159e:;
				};
			}
		}
		_match_end_1acae0c30:;
	};
	jule::Ptr<_1a6e77584_Const> _947_c = (*((*((*(_7625_m))))._field_Right))._field_Model.cast_ptr<_1a6e77584_Const>(&__jule_any_type20);;
	{
		auto &_match_expr{ (*((*((*(_7625_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1acae368e:;
			{
				if (_1a6e794a9_ReadBool(_947_c.ptr())) {
					(*((*(_self_))._field_model))=(*(*((*(_7625_m))))._field_Left.alloc)._field_Model;
				} else {
					_1a6e7aa93_SetBool(_947_c.ptr(), false);
					(*((*(_self_))._field_model))=jule::Any(_947_c, &__jule_any_type20);
				};
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1acae3738:;
			{
				if (_1a6e794a9_ReadBool(_947_c.ptr())) {
					_1a6e7aa93_SetBool(_947_c, true);
					(*((*(_self_))._field_model))=jule::Any(_947_c, &__jule_any_type20);
				} else {
					(*((*(_self_))._field_model))=(*(*((*(_7625_m))))._field_Left.alloc)._field_Model;
				};
				return true;;
			}
		}
		else {
			_case_begin_1acae1802:;
		}
		_match_end_1acae3617:;
	};
	return false;;
}



inline jule::Bool _1aa89c15e_strCond(_1aa89adc7_exprOptimizer* _self_, jule::Ptr<_1aa32372e_BinaryExprModel> _12923_m) {
	jule::Ptr<_1a6023763_Prim> _1303_lp = _1a601cd01_Prim((*((*(_12923_m))._field_Left))._field_Kind.ptr());;
	if (((_1303_lp == nullptr) || (!(_1a6026c2d_IsStr(_1303_lp.ptr()))))) {
		return false;;
	};
	if ((((*((*_12923_m.alloc)._field_Op))._field_Id != static_cast<jule::U32>(50LLU)) && ((*(*(_12923_m))._field_Op.alloc)._field_Id != static_cast<jule::U32>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_12923_m))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1acaea29a:;
			{
				std::swap((*_12923_m.alloc)._field_Left, (*_12923_m.alloc)._field_Right);
			}
		}
		else {
			_case_begin_1acae94a8:;
			{
				{
					auto &_match_expr{ (*((*(_12923_m))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1acae8056:;
						{
							goto _match_end_1acae9cc2;
						}
					}
					else {
						_case_begin_1acae9d27:;
						{
							return false;;
						}
					}
					_match_end_1acae9cc2:;
				};
			}
		}
		_match_end_1acae9453:;
	};
	jule::Ptr<_1a6e77584_Const> _1507_c = (*((*_12923_m.alloc)._field_Right))._field_Model.cast_ptr<_1a6e77584_Const>(&__jule_any_type20);;
	{
		auto &_match_expr{ (*((*(_12923_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1acaea036:;
			{
				if ((_1a6e79740_ReadStr(_1507_c.ptr())).empty()) {
					jule::Any _1549_model = jule::Any(jule::new_ptr<_1aa5ed476_EmptyCompareExprModel>(_1aa5ed476_EmptyCompareExprModel{._field_Expr=(*(*(_12923_m))._field_Left.alloc)._field_Model, ._field_Neg=false}), &__jule_any_type129);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_1549_model))))));
					goto _match_end_1acaebcc4;
				};
				jule::Any _1618_model = jule::Any(jule::new_ptr<_1aa5edc6d_StrCompExprModel>(_1aa5edc6d_StrCompExprModel{._field_Left=(*(*(_12923_m))._field_Left.alloc)._field_Model, ._field_Right=_1507_c, ._field_NotEq=false}), &__jule_any_type130);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_1618_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1acaebd6d:;
			{
				if ((_1a6e79740_ReadStr(_1507_c.ptr())).empty()) {
					jule::Any _1699_model = jule::Any(jule::new_ptr<_1aa5ed476_EmptyCompareExprModel>(_1aa5ed476_EmptyCompareExprModel{._field_Expr=(*(*(_12923_m))._field_Left.alloc)._field_Model, ._field_Neg=true}), &__jule_any_type129);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_1699_model))))));
					goto _match_end_1acaebcc4;
				};
				jule::Any _1768_model = jule::Any(jule::new_ptr<_1aa5edc6d_StrCompExprModel>(_1aa5edc6d_StrCompExprModel{._field_Left=(*(*(_12923_m))._field_Left.alloc)._field_Model, ._field_Right=_1507_c, ._field_NotEq=true}), &__jule_any_type130);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_1768_model))))));
			}
		}
		_match_end_1acaebcc4:;
	};
	return true;;
}



inline jule::Bool _1aa89c615_tryNeutralElement1(_1aa89adc7_exprOptimizer* _self_, jule::Ptr<_1aa32372e_BinaryExprModel>* _18635_m, jule::Ptr<_1a6e77584_Const> _18660_c, jule::Ptr<_1aa323234_OperandExprModel>* _18672_nc) {
	if (_1a6e7bd3b_IsStr(_18660_c.ptr())) {
		if ((!(_1aa8aa17d_Str))) {
			return false;;
		};
		if (((_1a6e79740_ReadStr(_18660_c.ptr())).empty() && ((*((*((*(_18635_m))))._field_Op))._field_Id == static_cast<jule::U32>(60LLU)))) {
			(*((*(_self_))._field_model))=(*((*(_18672_nc))))._field_Model;
			return true;;
		};
		return false;;
	};
	if (((!(_1aa8a9259_Math)) || (_1a6e7a279_AsF64(_18660_c) != 0LL))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_18635_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1acb0599d:;
			{
				if (((*(_18672_nc)) == (*((*(_18635_m))))._field_Left)) {
					(*(*(_self_))._field_model.alloc)=(*((*(_18672_nc))))._field_Model;
					return true;;
				};
				(*(*(_self_))._field_model.alloc)=jule::Any(_18660_c, &__jule_any_type20);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1acb0662a:;
			{
				_1a6e7a532_SetI64(_18660_c, 0LL);
				(*(*(_self_))._field_model.alloc)=jule::Any(_18660_c, &__jule_any_type20);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1acb06691:;
			{
				(*(*(_self_))._field_model.alloc)=(*((*(_18672_nc))))._field_Model;
				return true;;
			}
		}
		_match_end_1acb064e8:;
	};
	return false;;
}



inline jule::Bool _1aa89c956_tryNeutralElement(_1aa89adc7_exprOptimizer* _self_, jule::Ptr<_1aa32372e_BinaryExprModel>* _23034_m) {
	{
		auto &_match_expr{ (*((*((*(_23034_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1acb09b17:;
			{
				jule::Ptr<_1a6e77584_Const> _2348_c = (*((*((*(_23034_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1a6e77584_Const>();;
				return _1aa89c615_tryNeutralElement1(_self_, _23034_m, _2348_c, &((*((*(_23034_m))))._field_Right));;
			}
		}
		_match_end_1acb09aa1:;
	};
	{
		auto &_match_expr{ (*((*((*(_23034_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1acb0a08a:;
			{
				jule::Ptr<_1a6e77584_Const> _2398_c = (*((*((*(_23034_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1a6e77584_Const>();;
				return _1aa89c615_tryNeutralElement1(_self_, _23034_m, _2398_c, &((*((*(_23034_m))))._field_Left));;
			}
		}
		_match_end_1acb0a024:;
	};
	return false;;
}



inline void _1aa89cc0e_checkBinaryForBoundary(_1aa89adc7_exprOptimizer* _self_, jule::Ptr<_1aa32372e_BinaryExprModel>* _24539_m) {
	if (((*((*(_self_))._field_data))._field_boundary == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*((*(_24539_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1acb0d533:;
			{
				jule::Ptr<_1aa32b083_BuiltinLenCallExprModel> _2518_blc = (*((*((*(_24539_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1aa32b083_BuiltinLenCallExprModel>();;
				if ((!(_1aa8a7d7e_isBoundaryValidType((*((*(_2518_blc))._field_Expr))._field_Kind)))) {
					return;;
				};
				if ((((*((*((*(_24539_m))))._field_Op))._field_Id != static_cast<jule::U32>(70LLU)) && ((*(*((*(_24539_m))))._field_Op.alloc)._field_Id != static_cast<jule::U32>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_24539_m))))._field_Op.alloc)._field_Id == static_cast<jule::U32>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_24539_m))))._field_Right))._field_Model };
						
						if (_match_expr.type == &__jule_any_type20) {
							_case_begin_1acb117cd:;
							{
								jule::Ptr<_1a6e77584_Const> _26310_c = jule::new_ptr<_1a6e77584_Const>((*((*((*((*(_24539_m))))._field_Right))._field_Model.cast_ptr<_1a6e77584_Const>(&__jule_any_type20))));;
								_1a6e7e613_Sub(_26310_c, (*(static__1a6e77a07_NewI64(1LL))));
								_1aa8a61ac_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1aa8a8148_getBoundaryVar((*(*(_2518_blc))._field_Expr.alloc)._field_Model), jule::Any(_26310_c, &__jule_any_type20));
							}
						}
						_match_end_1acb11767:;
					};
					return;;
				};
				_1aa8a61ac_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1aa8a8148_getBoundaryVar((*(*(_2518_blc))._field_Expr.alloc)._field_Model), (*(*((*(_24539_m))))._field_Right.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1acb0d4bc:;
	};
	{
		auto &_match_expr{ (*((*((*(_24539_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1acb0daa5:;
			{
				jule::Ptr<_1aa32b083_BuiltinLenCallExprModel> _2748_blc = (*((*((*(_24539_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1aa32b083_BuiltinLenCallExprModel>();;
				if ((!(_1aa8a7d7e_isBoundaryValidType((*(*(_2748_blc))._field_Expr.alloc)._field_Kind)))) {
					return;;
				};
				if ((((*(*((*(_24539_m))))._field_Op.alloc)._field_Id != static_cast<jule::U32>(69LLU)) && ((*(*((*(_24539_m))))._field_Op.alloc)._field_Id != static_cast<jule::U32>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_24539_m))))._field_Op.alloc)._field_Id == static_cast<jule::U32>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_24539_m))))._field_Left))._field_Model };
						
						if (_match_expr.type == &__jule_any_type20) {
							_case_begin_1bd5d0324:;
							{
								jule::Ptr<_1a6e77584_Const> _28610_c = jule::new_ptr<_1a6e77584_Const>((*((*((*((*(_24539_m))))._field_Left))._field_Model.cast_ptr<_1a6e77584_Const>(&__jule_any_type20))));;
								_1a6e7e613_Sub(_28610_c, (*(static__1a6e77a07_NewI64(1LL))));
								_1aa8a61ac_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1aa8a8148_getBoundaryVar((*(*(_2748_blc))._field_Expr.alloc)._field_Model), jule::Any(_28610_c, &__jule_any_type20));
							}
						}
						_match_end_1bd5d02ad:;
					};
					return;;
				};
				_1aa8a61ac_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1aa8a8148_getBoundaryVar((*(*(_2748_blc))._field_Expr.alloc)._field_Model), (*(*((*(_24539_m))))._field_Left.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1acb0da3e:;
	};
}



inline void _1aa89ceb7_checkBinaryForNil(_1aa89adc7_exprOptimizer* _self_, jule::Ptr<_1aa32372e_BinaryExprModel>* _29734_m) {
	if (((*((*(_self_))._field_data))._field_nils == nullptr)) {
		return;;
	};
	jule::Uintptr _3017_var = _1aa6036ce_getNilVar((*((*((*(_29734_m))))._field_Left))._field_Model);;
	if ((_3017_var != 0LLU)) {
		if ((!(_1aa60338d_isNilValidType((*(*((*(_29734_m))))._field_Left.alloc)._field_Kind)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_29734_m))))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type20) {
				_case_begin_1bd5d5b76:;
				{
					_1aa6021c2_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _3017_var, ((*((*((*(_29734_m))))._field_Op))._field_Id == static_cast<jule::U32>(51LLU)));
				}
			}
			_match_end_1bd5d5b10:;
		};
		return;;
	};
	_3017_var=_1aa6036ce_getNilVar((*((*((*(_29734_m))))._field_Right))._field_Model);
	if ((_3017_var != 0LLU)) {
		if ((!(_1aa60338d_isNilValidType((*(*((*(_29734_m))))._field_Right.alloc)._field_Kind)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_29734_m))))._field_Left))._field_Model };
			
			if (_match_expr.type == &__jule_any_type20) {
				_case_begin_1bd5d831b:;
				{
					_1aa6021c2_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _3017_var, ((*(*((*(_29734_m))))._field_Op.alloc)._field_Id == static_cast<jule::U32>(51LLU)));
				}
			}
			_match_end_1bd5d82a5:;
		};
		return;;
	};
}



inline void _1aa89d270_binary(_1aa89adc7_exprOptimizer* _self_, jule::Ptr<_1aa32372e_BinaryExprModel> _32922_m) {
	_1aa89cc0e_checkBinaryForBoundary(_self_, &(_32922_m));
	_1aa89ceb7_checkBinaryForNil(_self_, &(_32922_m));
	if (_1aa8a9e3b_Cond) {
		{
			
			if (_1aa89c15e_strCond(_self_, _32922_m) || _1aa89bd1d_boolCond(_self_, &(_32922_m)) || _1aa89b9cc_selfCmpCond(_self_, &(_32922_m))) {
				_case_begin_1bd5da241:;
				{
					return;;
				}
			}
			_match_end_1bd5da10e:;
		};
	};
	if (_1aa89c956_tryNeutralElement(_self_, &(_32922_m))) {
		return;;
	};
	if ((!(_1aa8a9259_Math))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_32922_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1bd5db176:;
			{
				goto _match_end_1bd5db40c;
			}
		}
		else {
			_case_begin_1bd5db462:;
			{
				return;;
			}
		}
		_match_end_1bd5db40c:;
	};
	jule::Ptr<_1a6023763_Prim> _3623_lp = _1a601cd01_Prim((*((*(_32922_m))._field_Left))._field_Kind.ptr());;
	if ((_3623_lp == nullptr)) {
		return;;
	};
	jule::Ptr<_1a6023763_Prim> _3663_rp = _1a601cd01_Prim((*((*(_32922_m))._field_Right))._field_Kind);;
	if ((_3663_rp == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_32922_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1bd5ddbd4:;
			{
				jule::Bool _3734_ok;
				jule::U64 _3738_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1aa8a010c_checkForBitShiftOpt(&((*_32922_m.alloc)._field_Left), &((*_32922_m.alloc)._field_Right));
					_3734_ok = __jule_assign_result.__jule_result_arg0;
					_3738_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_3734_ok) {
					(*((*_32922_m.alloc)._field_Op))._field_Id=static_cast<jule::U32>(56LLU);
					(*(*(_32922_m))._field_Op.alloc)._field_Kind=jule::Str::lit("<<", 2);
					jule::Ptr<_1a6e77584_Const> _3779_c = (*((*_32922_m.alloc)._field_Right))._field_Model.cast_ptr<_1a6e77584_Const>(&__jule_any_type20);;
					_1a6e7a7da_SetU64(_3779_c.ptr(), _3738_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1bd5ddc4a:;
			{
				jule::Bool _3844_ok;
				jule::U64 _3848_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1aa8a010c_checkForBitShiftOpt(&((*_32922_m.alloc)._field_Left), &((*_32922_m.alloc)._field_Right));
					_3844_ok = __jule_assign_result.__jule_result_arg0;
					_3848_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_3844_ok) {
					(*((*_32922_m.alloc)._field_Op))._field_Id=static_cast<jule::U32>(57LLU);
					(*(*(_32922_m))._field_Op.alloc)._field_Kind=jule::Str::lit(">>", 2);
					jule::Ptr<_1a6e77584_Const> _3889_c = (*((*_32922_m.alloc)._field_Right))._field_Model.cast_ptr<_1a6e77584_Const>(&__jule_any_type20);;
					_1a6e7a7da_SetU64(_3889_c.ptr(), _3848_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1bd5ddcb1:;
			{
				jule::Ptr<_1a6e77584_Const> _3958_c = (*((*_32922_m.alloc)._field_Right))._field_Model.cast_ptr<_1a6e77584_Const>(&__jule_any_type20);;
				if ((_1a6e7a279_AsF64(_3958_c.ptr()) == 2LL)) {
					(*((*_32922_m.alloc)._field_Op))._field_Id=static_cast<jule::U32>(65LLU);
					(*(*(_32922_m))._field_Op.alloc)._field_Kind=jule::Str::lit("&", 1);
					_1a6e7a532_SetI64(_3958_c, 1LL);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1bd5ddd27:;
			{
				jule::I32 _4064_z = _1a6e6ba2e_BitsizeOf((*(_3623_lp))._field_Kind);;
				jule::U64 _4074_s = _1a6e79ee3_AsU64((*((*_32922_m.alloc)._field_Right))._field_Model.cast_ptr<_1a6e77584_Const>(&__jule_any_type20).ptr());;
				if ((_4074_s >= static_cast<jule::U64>(_4064_z))) {
					(*((*(_self_))._field_model))=jule::Any(static__1a6e77cc1_NewU64(0LLU), &__jule_any_type20);
					return;;
				};
			}
		}
		else {
			_case_begin_1bd5dd84e:;
			{
				return;;
			}
		}
		_match_end_1bd5ddb6d:;
	};
	jule::Any _4207_model = jule::Any(jule::new_ptr<_1aa5ee5ed_UnsafeBinaryExprModel>(_1aa5ee5ed_UnsafeBinaryExprModel{._field_Node=_32922_m}), &__jule_any_type131);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_4207_model))))));
}



inline void _1aa89d528_unary(_1aa89adc7_exprOptimizer* _self_, jule::Ptr<_1aa323b08_UnaryExprModel> _42421_m) {
	if ((!(_1aa8a9a73_Ptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_42421_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1bd5ea30b:;
			{
				{
					auto &_match_expr{ (*((*(_42421_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type113) {
						_case_begin_1bd5eb2eb:;
						{
							jule::Ptr<_1aa323b08_UnaryExprModel> _4329_um = (*((*(_42421_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1aa323b08_UnaryExprModel>();;
							if (((*((*(_4329_um))._field_Op))._field_Id == static_cast<jule::U32>(65LLU))) {
								(*((*(_self_))._field_model))=(*((*_4329_um.alloc)._field_Expr))._field_Model;
								return;;
							};
							return;;
						}
					}
					_match_end_1bd5eb285:;
				};
				if ((!(_1aa8a9512_Access))) {
					return;;
				};
				if ((((*((*(_self_))._field_data))._field_nils != nullptr) && _1aa60338d_isNilValidType((*(*(_42421_m))._field_Expr.alloc)._field_Kind))) {
					jule::Uintptr _4465_var = _1aa6036ce_getNilVar((*(*(_42421_m))._field_Expr.alloc)._field_Model);;
					if (_1aa602854_isSafe((*((*(_self_))._field_data))._field_nils, _4465_var)) {
						jule::Any _44810_model = jule::Any(jule::new_ptr<_1aa60090c_UnsafeDerefExprModel>(_1aa60090c_UnsafeDerefExprModel{._field_Base=_42421_m}), &__jule_any_type132);;
						(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_44810_model))))));
						return;;
					};
					_1aa6021c2_pushVar((*((*(_self_))._field_data))._field_nils, _4465_var, true);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1bd5ea62a:;
			{
				{
					auto &_match_expr{ (*((*(_42421_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1bd601ce6:;
						{
							jule::Ptr<_1aa3e4d3e_Var> _4589_v = (*((*(_42421_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1aa3e4d3e_Var>();;
							if ((*(_4589_v))._field_Reference) {
								jule::Any _46010_model = jule::Any(jule::new_ptr<_1aa5ed7ea_RefExprModel>(_1aa5ed7ea_RefExprModel{._field_Var=_4589_v}), &__jule_any_type133);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_46010_model))))));
							};
						}
					}
					_match_end_1bd601c80:;
				};
			}
		}
		_match_end_1bd5ea581:;
	};
}



inline void _1aa89d7d1_structureLit(_1aa89adc7_exprOptimizer* _self_, jule::Ptr<_1aa3244cc_StructLitExprModel> _46728_m) {
	{
		auto expr = &((*(_46728_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd60217b:;
		if (it != expr_end) {
			jule::Ptr<_1aa324136_StructArgExprModel> _46815_arg = *it;
			{
				if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
					if (_1aa8a7ab5_isBoundaryRiskyType((*((*(_46815_arg))._field_Expr))._field_Kind)) {
						_1aa8a77eb_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), jule::Any(_46815_arg, &__jule_any_type134));
					};
				};
				if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
					_1aa602c0b_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_46815_arg))._field_Expr.alloc)._field_Model);
				};
				if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
					_1aa8a2692_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_46815_arg))._field_Expr.alloc)._field_Model);
				};
			}
			_iter_next_1bd60217b:;
			++it;
			goto _iter_begin_1bd60217b;
		}
		_iter_end_1bd60217b:;
	};
}



inline void _1aa89da89_casting(_1aa89adc7_exprOptimizer* _self_, jule::Ptr<_1aa324d5c_CastingExprModel> _48323_m) {
	jule::Bool _4843_valid = _1aa8a29a0_isDynamicValidType((*(_48323_m))._field_ExprKind);;
	jule::Uintptr _4853_var = _1aa8a3220_getDynamicVar((*((*_48323_m.alloc)._field_Expr))._field_Model);;
	if (((_4843_valid && ((*((*(_self_))._field_data))._field_dynamic != nullptr)) && _1aa8a22da_isFits((*((*(_self_))._field_data))._field_dynamic, _4853_var, (*_48323_m.alloc)._field_Kind))) {
		jule::Any _4878_model = jule::Any(jule::new_ptr<_1aa600c09_UnsafeCastingExprModel>(_1aa600c09_UnsafeCastingExprModel{._field_Base=_48323_m}), &__jule_any_type135);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_4878_model))))));
		(*((*(_self_))._field_inspector))._field_SkipChild=true;
		return;;
	};
	if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && _4843_valid)) {
		_1aa8a1a9d_pushVar((*((*(_self_))._field_data))._field_dynamic, _4853_var, (*_48323_m.alloc)._field_Kind);
	};
}



inline void _1aa89ddec_args(_1aa89adc7_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1aa33351e_ParamIns>> _49720_params, jule::Slice<jule::Any>* _49746_args) {
	{
		auto expr = _49746_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd60c164:;
		if (it != expr_end) {
			jule::I32 _4988_i = it - expr->begin();
			jule::Any _49815_arg = *it;
			{
				if ((_4988_i >= _49720_params.len())) {
					goto _iter_next_1bd60c164;
				};
				jule::Ptr<_1aa33351e_ParamIns> _5028_p = _49720_params[_4988_i];;
				if (((*((*(_5028_p))._field_Decl))._field_Mutable && (*(*(_5028_p))._field_Decl.alloc)._field_Reference)) {
					if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
						if (_1aa8a7ab5_isBoundaryRiskyType((*_5028_p.alloc)._field_Kind)) {
							_1aa8a77eb_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), _49815_arg);
						};
					};
					if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
						_1aa602c0b_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), _49815_arg);
					};
					if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
						_1aa8a2692_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), _49815_arg);
					};
				};
			}
			_iter_next_1bd60c164:;
			++it;
			_4988_i++;
			goto _iter_begin_1bd60c164;
		}
		_iter_end_1bd60c164:;
	};
}



inline void _1aa89e1a5_scope(_1aa89adc7_exprOptimizer* _self_, jule::Ptr<_1aa378ba2_Scope>* _51922_s) {
	jule::Ptr<_1aa8943cb_scopeOptimizer> _5207_scopt = static__1aa894981_new((*(_51922_s)));;
	(*(_5207_scopt))._field_data=(*(_self_))._field_data;
	_1aa898aea_optimize(_5207_scopt);
}



inline void _1aa89e45d_funcCall(_1aa89adc7_exprOptimizer* _self_, jule::Ptr<_1aa32570e_FnCallExprModel> _52524_m) {
	_1aa89ddec_args(_self_, (*((*(_52524_m))._field_Func))._field_Params, &((*_52524_m.alloc)._field_Args));
	if (((*_52524_m.alloc)._field_Except != nullptr)) {
		_1aa89e1a5_scope(_self_, &((*_52524_m.alloc)._field_Except));
	};
}



inline void _1aa89e716_indexing(_1aa89adc7_exprOptimizer* _self_, jule::Ptr<_1aa32608e_IndexingExprModel> _53224_m) {
	if ((!(_1aa8a9512_Access))) {
		return;;
	};
	jule::Bool _5373_array = (_1a601dac1_Arr((*((*(_53224_m))._field_Expr))._field_Kind.ptr()) != nullptr);;
	if ((_5373_array && _1aa44d6d3_IsConst((*_53224_m.alloc)._field_Index.ptr()))) {
		jule::Any _5408_model = jule::Any(jule::new_ptr<_1aa5ee983_UnsafeIndexingExprModel>(_1aa5ee983_UnsafeIndexingExprModel{._field_Node=_53224_m}), &__jule_any_type136);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_5408_model))))));
		return;;
	};
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && _1aa8a7d7e_isBoundaryValidType((*(*(_53224_m))._field_Expr.alloc)._field_Kind))) {
		jule::Uintptr _5464_var = _1aa8a8148_getBoundaryVar((*(*(_53224_m))._field_Expr.alloc)._field_Model);;
		if (_1aa8a68e9_fitsMaxSize((*((*(_self_))._field_data))._field_boundary, _5464_var, (*(*(_53224_m))._field_Index.alloc)._field_Model)) {
			jule::Any _5489_model = jule::Any(jule::new_ptr<_1aa5ee983_UnsafeIndexingExprModel>(_1aa5ee983_UnsafeIndexingExprModel{._field_Node=_53224_m}), &__jule_any_type136);;
			(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_5489_model))))));
			return;;
		};
		_1aa8a61ac_pushVar((*((*(_self_))._field_data))._field_boundary, _5464_var, (*(*(_53224_m))._field_Index.alloc)._field_Model);
	};
}



inline void _1aa89e9be_anonFunc(_1aa89adc7_exprOptimizer* _self_, jule::Ptr<_1aa326545_AnonFnExprModel> _55624_m) {
	_1aa89e1a5_scope(_self_, &((*((*(_55624_m))._field_Func))._field_Scope));
}



inline void _1aa89ebbc_do(_1aa89adc7_exprOptimizer* _self_) {
	_1aa88c6e3_Inspect((*(_self_))._field_inspector.ptr(), &((*((*(_self_))._field_model))), jule::__new_closure<void,jule::Any*>((void*)__jule_anon_1bd61b3e8, jule::Ptr<__jule_anon_1bd61b3e8_ctx>::make(__jule_anon_1bd61b3e8_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd61b3e8_ctx_handler));
}





std::ostream &operator<<(std::ostream &_Stream, _1aa89adc7_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "data:" << _Src._field_data << ", ";
	_Stream << "inspector:" << _Src._field_inspector;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa8a12b7_dynamicVar_eq(_1aa8a12b7_dynamicVar *_self_, _1aa8a12b7_dynamicVar _other_) {
	return 
		(_self_->_field_var == _other_._field_var) &&
		(_self_->_field_kind == _self_->_field_kind);
}



std::ostream &operator<<(std::ostream &_Stream, _1aa8a12b7_dynamicVar _Src) {
	_Stream << "dynamicVar{";
	_Stream << "var:" << _Src._field_var << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline void _1aa8a1a9d_pushVar(jule::Ptr<_1aa8a1608_dynamic> _self_, jule::Uintptr _3224_var, jule::Ptr<_1a601a64a_TypeKind> _3242_kind) {
	if (((!(_1aa8aaee7_Dynamic)) || (_3224_var == 0LLU))) {
		return;;
	};
	_3242_kind=_1aa8a2dce_isTypeGuaranteedDynamicData(&(_self_), _3242_kind, nullptr);
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd62a858:;
		if (it != expr_end) {
			_1aa8a12b7_dynamicVar _3815_v = *it;
			{
				if ((_3815_v._field_var == _3224_var)) {
					_3815_v._field_kind=_3242_kind;
					return;;
				};
			}
			_iter_next_1bd62a858:;
			++it;
			goto _iter_begin_1bd62a858;
		}
		_iter_end_1bd62a858:;
	};
	{
		auto expr = &((*_self_.alloc)._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd62b33c:;
		if (it != expr_end) {
			_1aa8a12b7_dynamicVar _4515_v = *it;
			{
				if ((_4515_v._field_var == 0LLU)) {
					({
						jule::Uintptr ___jule_assign_arg = _3224_var;
						jule::Ptr<_1a601a64a_TypeKind> _1___jule_assign_arg = _3242_kind;
						_4515_v._field_var = ___jule_assign_arg;
						_4515_v._field_kind = _1___jule_assign_arg;
					});
					return;;
				};
			}
			_iter_next_1bd62b33c:;
			++it;
			goto _iter_begin_1bd62b33c;
		}
		_iter_end_1bd62b33c:;
	};
	(*_self_.alloc)._field_vars=jule::append((*_self_.alloc)._field_vars,({ auto __jule_collection = jule::Slice<_1aa8a12b7_dynamicVar>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1aa8a12b7_dynamicVar{._field_var=_3224_var, ._field_kind=_3242_kind}; __jule_collection; }));
}



inline jule::Bool _1aa8a1dde_removeVar(_1aa8a1608_dynamic* _self_, jule::Uintptr _5525_var) {
	if ((_5525_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd62d4d7:;
			if (it != expr_end) {
				_1aa8a12b7_dynamicVar _5716_v = *it;
				{
					if ((_5716_v._field_var == _5525_var)) {
						_5716_v._field_var=0LLU;
						_5716_v._field_kind=nullptr;
						return true;;
					};
				}
				_iter_next_1bd62d4d7:;
				++it;
				goto _iter_begin_1bd62d4d7;
			}
			_iter_end_1bd62d4d7:;
		};
	};
	return false;;
}



inline jule::Bool _1aa8a22da_isFits(_1aa8a1608_dynamic* _self_, jule::Uintptr _6922_var, jule::Ptr<_1a601a64a_TypeKind> _6936_kind) {
	if ((_6922_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd62ed68:;
			if (it != expr_end) {
				_1aa8a12b7_dynamicVar _7111_v = *it;
				{
					if ((_7111_v._field_var == _6922_var)) {
						return ((_7111_v._field_kind != nullptr) && _1a601ad87_Equal(_7111_v._field_kind, _6936_kind));;
					};
				}
				_iter_next_1bd62ed68:;
				++it;
				goto _iter_begin_1bd62ed68;
			}
			_iter_end_1bd62ed68:;
		};
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa8a1608_dynamic _Src) {
	_Stream << "dynamic{";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa8a4287_data_eq(_1aa8a4287_data *_self_, _1aa8a4287_data _other_) {
	return 
		(_self_->_field_boundary == _other_._field_boundary) &&
		(_self_->_field_nils == _self_->_field_nils) &&
		(_self_->_field_dynamic == _self_->_field_dynamic);
}

inline _1aa8a3c8c_dataCheckpoint _1aa8a463e_getCheckpoint(_1aa8a4287_data* _self_) {
	_1aa8a3c8c_dataCheckpoint _257_c = _1aa8a3c8c_dataCheckpoint{._field_boundary=_1aa8a5c17_boundary{._field_vars=jule::Slice<_1aa8a58c6_boundaryVar>(nullptr)}, ._field_nils=_1aa601c2c_nils{._field_vars=jule::Slice<_1aa6018db_nilVar>(nullptr)}, ._field_dynamic=_1aa8a1608_dynamic{._field_vars=jule::Slice<_1aa8a12b7_dynamicVar>(nullptr)}};;
	_257_c._field_boundary._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1aa8a58c6_boundaryVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1aa8a58c6_boundaryVar{._field_var=0, ._field_maxSize=jule::Slice<jule::Any>(nullptr)}; __jule_collection; }),(*((*(_self_))._field_boundary))._field_vars);
	{
		auto expr = &(_257_c._field_boundary._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd631cd2:;
		if (it != expr_end) {
			jule::I32 _277_i = it - expr->begin();
			{
				_257_c._field_boundary._field_vars[_277_i]._field_maxSize=jule::append(({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; }),_257_c._field_boundary._field_vars[_277_i]._field_maxSize);
			}
			_iter_next_1bd631cd2:;
			++it;
			_277_i++;
			goto _iter_begin_1bd631cd2;
		}
		_iter_end_1bd631cd2:;
	};
	_257_c._field_nils._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1aa6018db_nilVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1aa6018db_nilVar{._field_var=0, ._field_safe=false}; __jule_collection; }),(*((*(_self_))._field_nils))._field_vars);
	_257_c._field_dynamic._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1aa8a12b7_dynamicVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1aa8a12b7_dynamicVar{._field_var=0, ._field_kind=jule::Ptr<_1a601a64a_TypeKind>(nullptr)}; __jule_collection; }),(*((*(_self_))._field_dynamic))._field_vars);
	return _257_c;;
}



inline void _1aa8a48e7_loadCheckpoint(_1aa8a4287_data* _self_, _1aa8a3c8c_dataCheckpoint* _3535_c) {
	(*((*(_self_))._field_boundary))=(*(_3535_c))._field_boundary;
	(*((*(_self_))._field_nils))=(*(_3535_c))._field_nils;
	(*((*(_self_))._field_dynamic))=(*(_3535_c))._field_dynamic;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa8a4287_data _Src) {
	_Stream << "data{";
	_Stream << "boundary:" << _Src._field_boundary << ", ";
	_Stream << "nils:" << _Src._field_nils << ", ";
	_Stream << "dynamic:" << _Src._field_dynamic;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa8a58c6_boundaryVar _Src) {
	_Stream << "boundaryVar{";
	_Stream << "var:" << _Src._field_var << ", ";
	_Stream << "maxSize:" << _Src._field_maxSize;
	_Stream << "}";
	return _Stream;
}



inline void _1aa8a61ac_pushVar(_1aa8a5c17_boundary* _self_, jule::Uintptr _2423_var, jule::Any _2441_maxSize) {
	if (((!(_1aa8a9512_Access)) || (_2423_var == 0LLU))) {
		return;;
	};
	if ((!(_1aa8a6c7e_isValidBoundaryInfo(_2441_maxSize)))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd645ce6:;
		if (it != expr_end) {
			_1aa8a58c6_boundaryVar _3215_v = *it;
			{
				if ((_3215_v._field_var == _2423_var)) {
					{
						auto expr = &(_3215_v._field_maxSize);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bd646a61:;
						if (it != expr_end) {
							jule::I32 _349_i = it - expr->begin();
							jule::Any _3412_max = *it;
							{
								if (_1aa8a74bb_fitsSize(_2441_maxSize, _3412_max)) {
									_3215_v._field_maxSize[_349_i]=_2441_maxSize;
									return;;
								};
							}
							_iter_next_1bd646a61:;
							++it;
							_349_i++;
							goto _iter_begin_1bd646a61;
						}
						_iter_end_1bd646a61:;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = _3215_v._field_maxSize; __jule_push_dest.push(_2441_maxSize); };
					return;;
				};
			}
			_iter_next_1bd645ce6:;
			++it;
			goto _iter_begin_1bd645ce6;
		}
		_iter_end_1bd645ce6:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd6465ee:;
		if (it != expr_end) {
			_1aa8a58c6_boundaryVar _4615_v = *it;
			{
				if ((_4615_v._field_var == 0LLU)) {
					_4615_v._field_var=_2423_var;
					{ jule::Slice<jule::Any> &__jule_push_dest = _4615_v._field_maxSize; __jule_push_dest.push(_2441_maxSize); };
					return;;
				};
			}
			_iter_next_1bd6465ee:;
			++it;
			goto _iter_begin_1bd6465ee;
		}
		_iter_end_1bd6465ee:;
	};
	{ jule::Slice<_1aa8a58c6_boundaryVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1aa8a58c6_boundaryVar{._field_var=_2423_var, ._field_maxSize=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _2441_maxSize; __jule_collection; })}); };
}



inline jule::Bool _1aa8a68e9_fitsMaxSize(_1aa8a5c17_boundary* _self_, jule::Uintptr _7127_var, jule::Any _7141_expr) {
	if ((_7127_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd64b3e5:;
			if (it != expr_end) {
				_1aa8a58c6_boundaryVar _7311_v = *it;
				{
					if ((_7311_v._field_var == _7127_var)) {
						return (_1aa8a7147_fitsMaxSize(_7311_v._field_maxSize, _7141_expr) != -1LL);;
					};
				}
				_iter_next_1bd64b3e5:;
				++it;
				goto _iter_begin_1bd64b3e5;
			}
			_iter_end_1bd64b3e5:;
		};
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa8a5c17_boundary _Src) {
	_Stream << "boundary{";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1ab1ac870_Optimizer_eq(_1ab1ac870_Optimizer *_self_, _1ab1ac870_Optimizer _other_) {
	return 
		(_self_->_field_ir == _other_._field_ir);
}

inline jule::Ptr<_1ab1ac870_Optimizer> static__1ab1acd26_New(jule::Ptr<_1aa887941_IR>* _2621_ir) {
	return jule::new_ptr<_1ab1ac870_Optimizer>(_1ab1ac870_Optimizer{._field_ir=(*(_2621_ir))});;
}



inline void _1ab1ad0ce_optimizeGlobal(_1ab1ac870_Optimizer* _self_, jule::Ptr<_1aa3e4d3e_Var>* _3235_v) {
	if ((!((*((*(_3235_v))))._field_Binded))) {
		static__1aa89b3a0_optimize(&((*((*((*((*(_3235_v))))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1ab1ad387_optimizeFunction(_1ab1ac870_Optimizer* _self_, jule::Ptr<_1aa3315b6_Fn>* _3837_func) {
	if ((*((*(_3837_func))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_3837_func))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd65141c:;
		if (it != expr_end) {
			jule::Ptr<_1aa334597_FnIns> _4215_ins = *it;
			{
				jule::Ptr<_1aa8943cb_scopeOptimizer> _438_so = static__1aa894981_new((*(_4215_ins))._field_Scope);;
				_1aa898aea_optimize(_438_so);
			}
			_iter_next_1bd65141c:;
			++it;
			goto _iter_begin_1bd65141c;
		}
		_iter_end_1bd65141c:;
	};
}



inline void _1ab1ad640_optimizeStruct(_1ab1ac870_Optimizer* _self_, jule::Ptr<_1aa31b518_Struct>* _4835_s) {
	if ((*((*(_4835_s))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_4835_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd652ac2:;
		if (it != expr_end) {
			jule::Ptr<_1aa31e373_StructIns> _5215_ins = *it;
			{
				{
					auto expr = &((*(_5215_ins))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd6534b8:;
					if (it != expr_end) {
						jule::Ptr<_1aa31d7c3_FieldIns> _5316_f = *it;
						{
							if (((*(_5316_f))._field_Default != nullptr)) {
								static__1aa89b3a0_optimize(&((*(*(_5316_f))._field_Default.alloc)._field_Model));
							};
						}
						_iter_next_1bd6534b8:;
						++it;
						goto _iter_begin_1bd6534b8;
					}
					_iter_end_1bd6534b8:;
				};
				{
					auto expr = &((*_5215_ins.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd6538e7:;
					if (it != expr_end) {
						jule::Ptr<_1aa3315b6_Fn> _5816_m = *it;
						{
							_1ab1ad387_optimizeFunction(_self_, &(_5816_m));
						}
						_iter_next_1bd6538e7:;
						++it;
						goto _iter_begin_1bd6538e7;
					}
					_iter_end_1bd6538e7:;
				};
			}
			_iter_next_1bd652ac2:;
			++it;
			goto _iter_begin_1bd652ac2;
		}
		_iter_end_1bd652ac2:;
	};
}



inline void _1ab1ad8e8_optimizeGlobals(_1ab1ac870_Optimizer* _self_, jule::Ptr<_1aa39ded5_Package>* _6436_p) {
	{
		auto expr = &((*((*(_6436_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd654c28:;
		if (it != expr_end) {
			jule::Ptr<_1aa4475cd_SymbolTable> _6515_f = *it;
			{
				{
					auto expr = &((*(_6515_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd655a2b:;
					if (it != expr_end) {
						jule::Ptr<_1aa3e4d3e_Var> _6616_v = *it;
						{
							_1ab1ad0ce_optimizeGlobal(_self_, &(_6616_v));
						}
						_iter_next_1bd655a2b:;
						++it;
						goto _iter_begin_1bd655a2b;
					}
					_iter_end_1bd655a2b:;
				};
			}
			_iter_next_1bd654c28:;
			++it;
			goto _iter_begin_1bd654c28;
		}
		_iter_end_1bd654c28:;
	};
}



inline void _1ab1adba1_optimizeFunctions(_1ab1ac870_Optimizer* _self_, jule::Ptr<_1aa39ded5_Package>* _7238_p) {
	{
		auto expr = &((*((*(_7238_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd6560ae:;
		if (it != expr_end) {
			jule::Ptr<_1aa4475cd_SymbolTable> _7315_f = *it;
			{
				{
					auto expr = &((*(_7315_f))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd656e28:;
					if (it != expr_end) {
						jule::Ptr<_1aa3315b6_Fn> _7416_func = *it;
						{
							_1ab1ad387_optimizeFunction(_self_, &(_7416_func));
						}
						_iter_next_1bd656e28:;
						++it;
						goto _iter_begin_1bd656e28;
					}
					_iter_end_1bd656e28:;
				};
			}
			_iter_next_1bd6560ae:;
			++it;
			goto _iter_begin_1bd6560ae;
		}
		_iter_end_1bd6560ae:;
	};
}



inline void _1ab1ade59_optimizeStructs(_1ab1ac870_Optimizer* _self_, jule::Ptr<_1aa39ded5_Package>* _8036_p) {
	{
		auto expr = &((*((*(_8036_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd6574ab:;
		if (it != expr_end) {
			jule::Ptr<_1aa4475cd_SymbolTable> _8115_f = *it;
			{
				{
					auto expr = &((*(_8115_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd658325:;
					if (it != expr_end) {
						jule::Ptr<_1aa31b518_Struct> _8216_s = *it;
						{
							_1ab1ad640_optimizeStruct(_self_, &(_8216_s));
						}
						_iter_next_1bd658325:;
						++it;
						goto _iter_begin_1bd658325;
					}
					_iter_end_1bd658325:;
				};
			}
			_iter_next_1bd6574ab:;
			++it;
			goto _iter_begin_1bd6574ab;
		}
		_iter_end_1bd6574ab:;
	};
}



inline void _1ab1ae212_optimizePackage(_1ab1ac870_Optimizer* _self_, jule::Ptr<_1aa39ded5_Package>* _8836_p) {
	_1ab1ad8e8_optimizeGlobals(_self_, _8836_p);
	_1ab1adba1_optimizeFunctions(_self_, _8836_p);
	_1ab1ade59_optimizeStructs(_self_, _8836_p);
}



inline void _1ab1ae410_Optimize(_1ab1ac870_Optimizer* _self_) {
	_1ab1ae674_detectEnabled();
	if (_1aa8a8ba4_Deadcode) {
		_1ab1a636e_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1ab1ac683_scopeEnabled || _1ab1ac441_exprEnabled)) {
		{
			auto expr = &((*((*(_self_))._field_ir))._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd65a349:;
			if (it != expr_end) {
				jule::Ptr<_1aa39b0ae_ImportInfo> _10416_u = *it;
				{
					if ((!((*(_10416_u))._field_Binded))) {
						_1ab1ae212_optimizePackage(_self_, &((*_10416_u.alloc)._field_Package));
					};
				}
				_iter_next_1bd65a349:;
				++it;
				goto _iter_begin_1bd65a349;
			}
			_iter_end_1bd65a349:;
		};
		_1ab1ae212_optimizePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	};
	if (_1aa8a8ba4_Deadcode) {
		_1ab1aae78_EliminateScopes(&((*(_self_))._field_ir));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1ac870_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1ab1d3d2a_AnsiEscape_eq(_1ab1d3d2a_AnsiEscape *_self_, _1ab1d3d2a_AnsiEscape _other_) { return true; }

inline void static__1ab1aeb2a_Reset(void) {
	jule::out(jule::Str::lit("\033[0m", 4));
}



inline void static__1ab1d2ba3_Print(jule::Str _1918_escape, jule::Str _1931_text) {
	jule::out(_1918_escape);
	jule::out(_1931_text);
	static__1ab1aeb2a_Reset();
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1d3d2a_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1ab1d53d1_Logger_eq(_1ab1d53d1_Logger *_self_, _1ab1d53d1_Logger _other_) { return true; }

inline void static__1ab1d56ab_LogFlat(_1ada72b17_Log* _1421_l) {
	jule::outln((*(_1421_l))._field_Text);
}



inline void static__1ab1d58dc_LogError(_1ada72b17_Log* _1922_l) {
	jule::out(jule::Str::lit("\033[31m", 5));
	jule::out(jule::Str::lit("error: ", 7));
	jule::out((*(_1922_l))._field_Text);
	static__1ab1aeb2a_Reset();
	if (((*(_1922_l))._field_Path.len() != 0LL)) {
		jule::out(jule::Str::lit("\n  --> ", 7));
		jule::out((*(_1922_l))._field_Path);
	};
	if ((((*(_1922_l))._field_Row != 0LL) && ((*(_1922_l))._field_Column != 0LL))) {
		jule::out(jule::Str::lit(":", 1));
		jule::out(_1a6e696ec_Itoa((*(_1922_l))._field_Row));
		jule::out(jule::Str::lit(":", 1));
		jule::out(_1a6e696ec_Itoa((*(_1922_l))._field_Column));
	};
	if (((*(_1922_l))._field_Line.len() != 0LL)) {
		jule::Str _388_line = _1ed479ec4_Trim((*(_1922_l))._field_Line, jule::Str::lit("\r\n\v\b\t ", 6));;
		_388_line=_1ed478a50_Replace(_388_line, jule::Str::lit("\t", 1), jule::Str::lit(" ", 1), -1LL);
		jule::I32 _418_offset = (((*(_1922_l))._field_Line.len() - _388_line.len()) + 1LL);;
		jule::out(jule::Str::lit("\n  ", 3));
		jule::Str _434_row = _1a6e696ec_Itoa((*(_1922_l))._field_Row);;
		jule::out(_434_row);
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_388_line);
		jule::out(jule::Str::lit("\n  ", 3));
		jule::out(_1ed472ce1_Repeat(jule::Str::lit(" ", 1), _434_row.len()));
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_1ed472ce1_Repeat(jule::Str::lit(" ", 1), ((*(_1922_l))._field_Column - _418_offset)));
		jule::out(jule::Str::lit("^", 1));
		if (((*(_1922_l))._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str::lit("\n  ", 3));
			jule::out(_1ed472ce1_Repeat(jule::Str::lit(" ", 1), _434_row.len()));
			jule::out(jule::Str::lit(" | ", 3));
			static__1ab1d2ba3_Print(jule::Str::lit("\033[95m", 5), jule::Str::lit("suggestion: ", 12));
			jule::out((*(_1922_l))._field_Suggestion);
		};
	};
	jule::outln(jule::Str::lit("\n", 1));
}



inline void static__1ab1d5b1d_Log(_1ada72b17_Log* _6417_l) {
	{
		auto &_match_expr{ (*(_6417_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I32>(0LL)) {
			_case_begin_1bd664199:;
			{
				static__1ab1d56ab_LogFlat(_6417_l);
			}
		}
		else if (_match_expr == static_cast<jule::I32>(1LL)) {
			_case_begin_1bd6672bd:;
			{
				static__1ab1d58dc_LogError(_6417_l);
			}
		}
		_match_end_1bd6671d0:;
	};
}



inline void static__1ab1d5d4e_PrintLogs(jule::Slice<_1ada72b17_Log>* _7423_logs) {
	{
		auto expr = _7423_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd667ca2:;
		if (it != expr_end) {
			_1ada72b17_Log *_7510_l = it;
			{
				static__1ab1d5b1d_Log(_7510_l);
			}
			_iter_next_1bd667ca2:;
			++it;
			goto _iter_begin_1bd667ca2;
		}
		_iter_end_1bd667ca2:;
	};
	jule::out(jule::Str::lit("=== ", 4));
	jule::out(_1a6e696ec_Itoa((*(_7423_logs)).len()));
	jule::outln(jule::Str::lit(" error generated ===", 20));
}





std::ostream &operator<<(std::ostream &_Stream, _1ab1d53d1_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1abaeeaa8_AbsTime_eq(_1abaeeaa8_AbsTime *_self_, _1abaeeaa8_AbsTime _other_) {
	return 
		(_self_->_field_Day == _other_._field_Day) &&
		(_self_->_field_WeekDay == _self_->_field_WeekDay) &&
		(_self_->_field_YearDay == _self_->_field_YearDay) &&
		(_self_->_field_Month == _self_->_field_Month) &&
		(_self_->_field_Year == _self_->_field_Year) &&
		(_self_->_field_Second == _self_->_field_Second) &&
		(_self_->_field_Minute == _self_->_field_Minute) &&
		(_self_->_field_Hour == _self_->_field_Hour);
}



std::ostream &operator<<(std::ostream &_Stream, _1abaeeaa8_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1abb0027e_Time_eq(_1abb0027e_Time *_self_, _1abb0027e_Time _other_) {
	return 
		(_self_->_field_sec == _other_._field_sec);
}

inline _1abb0027e_Time static__1abb00669_Unix(jule::U64 _9117_sec) {
	return _1abb0027e_Time{._field_sec=_9117_sec};;
}



inline _1abb0027e_Time static__1abb00878_Now(void) {
	return static__1abb00669_Unix(_1abb0236e_unix());;
}



inline _1abaeeaa8_AbsTime _1abb02061_Abs(_1abb0027e_Time* _self_) {
	jule::U64 _1273_secs = (jule::U64)((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _1287_days = (_1273_secs / 86400LLU);;
	jule::U64 _1297_remSecs = (_1273_secs % 86400LL);;
	if ((_1297_remSecs < 0LLU)) {
		_1297_remSecs+=86400LLU;
		(_1287_days)--;
	};
	jule::U64 _1357_qcCycles = (_1287_days / 146097LLU);;
	jule::U64 _1367_remDays = (_1287_days % 146097LL);;
	if ((_1367_remDays < 0LLU)) {
		_1367_remDays+=146097LLU;
		(_1357_qcCycles)--;
	};
	jule::U64 _1427_cCycles = (_1367_remDays / 36524LLU);;
	if ((_1427_cCycles == 4LLU)) {
		(_1427_cCycles)--;
	};
	_1367_remDays-=(jule::U64)(_1427_cCycles * 36524LLU);
	jule::U64 _1487_qCycles = (_1367_remDays / 1461LLU);;
	if ((_1487_qCycles == 25LLU)) {
		(_1487_qCycles)--;
	};
	_1367_remDays-=(jule::U64)(_1487_qCycles * 1461LLU);
	jule::U64 _1547_remYears = (_1367_remDays / 365LLU);;
	if ((_1547_remYears == 4LLU)) {
		(_1547_remYears)--;
	};
	_1367_remDays-=(jule::U64)(_1547_remYears * 365LLU);
	jule::U64 _1607_leap = static_cast<jule::U64>(0LLU);;
	if (((_1547_remYears == 0LLU) && ((_1487_qCycles > 0LLU) || (_1427_cCycles == 0LLU)))) {
		_1607_leap=1LLU;
	};
	jule::U64 _1647_yDay = (jule::U64)((jule::U64)((jule::U64)(_1367_remDays + 31LLU) + 28LLU) + _1607_leap);;
	if ((_1647_yDay >= (jule::U64)(365LLU + _1607_leap))) {
		_1647_yDay-=(jule::U64)(365LLU + _1607_leap);
	};
	jule::U64 _1697_months = static_cast<jule::U64>(0LLU);;
	for (; (_1abaee019_mdays[static_cast<jule::I32>(_1697_months)] <= _1367_remDays); (_1697_months)++) {
		{
			_1367_remDays-=_1abaee019_mdays[static_cast<jule::I32>(_1697_months)];
		}
	_iter_next_1bd695a8d:;
	}
	_iter_end_1bd695a8d:;;
	_1abaeeaa8_AbsTime _1747_t = _1abaeeaa8_AbsTime{._field_Day=0, ._field_WeekDay=0, ._field_YearDay=0, ._field_Month=0, ._field_Year=0, ._field_Second=0, ._field_Minute=0, ._field_Hour=0};;
	_1747_t._field_Year=(jule::U64)((jule::U64)((jule::U64)((jule::U64)(_1547_remYears + (jule::U64)(4LLU * _1487_qCycles)) + (jule::U64)(100LLU * _1427_cCycles)) + (jule::U64)(400LLU * _1357_qcCycles)) + 100LLU);
	_1747_t._field_Month=(jule::U64)(_1697_months + 2LLU);
	if ((_1747_t._field_Month >= 12LLU)) {
		_1747_t._field_Month-=12LLU;
		(_1747_t._field_Year)++;
	};
	_1747_t._field_Month+=1LLU;
	_1747_t._field_Year+=1900LLU;
	_1747_t._field_Day=(jule::U64)(_1367_remDays + 1LLU);
	_1747_t._field_WeekDay=((jule::U64)(3LLU + _1287_days) % 7LL);
	if ((_1747_t._field_WeekDay < 0LLU)) {
		_1747_t._field_WeekDay+=7LLU;
	};
	_1747_t._field_YearDay=_1647_yDay;
	_1747_t._field_Hour=(_1297_remSecs / 3600LLU);
	_1747_t._field_Minute=(jule::div(_1297_remSecs,60LLU) % 60LL);
	_1747_t._field_Second=(_1297_remSecs % 60LL);
	return _1747_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1abb0027e_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aba2699c_scopeCoder_eq(_1aba2699c_scopeCoder *_self_, _1aba2699c_scopeCoder _other_) {
	return 
		(_self_->_field_oc == _other_._field_oc);
}

inline jule::Ptr<_1aba2699c_scopeCoder> static__1aba27195_new(jule::Ptr<_1abb0aab4_ObjectCoder>* _7321_oc) {
	return jule::new_ptr<_1aba2699c_scopeCoder>(_1aba2699c_scopeCoder{._field_oc=(*(_7321_oc))});;
}



inline void _1bd742189_iterHead(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37a9d9_RangeIter>* _8029_it, jule::Bool* _8041_ref, jule::Str _8052_begin) {
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1abb0b752_addIndent((*(_self_))._field_oc);
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1aa8a88a7_Copy && _1aba2edc3_isCopyOptimizable(&((*((*(_8029_it))))._field_Expr)))) {
		(*(_8041_ref))=true;
		{
			auto &_match_expr{ (*((*((*(_8029_it))))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1bd745544:;
				{
					jule::Ptr<_1aa3e4d3e_Var> _895_v = (*((*((*(_8029_it))))._field_Expr))._field_Model.unsafe_cast_ptr<_1aa3e4d3e_Var>();;
					if ((*(_895_v))._field_Reference) {
						_1aba422ae_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_8029_it))))._field_Expr))._field_Model);
						goto _match_end_1bd745b93;
					};
					goto _case_begin_1bd745be8;
				}
			}
			else {
				_case_begin_1bd745be8:;
				{
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1aba422ae_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_8029_it))))._field_Expr))._field_Model);
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1bd745b93:;
		};
	} else {
		_1aba378e2_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_8029_it))))._field_Expr))._field_Model);
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("auto it = expr", 14));
	if ((*(_8041_ref))) {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("auto expr_end = expr", 20));
	if ((*(_8041_ref))) {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("end();\n", 7));
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, _8052_begin);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("if (it != expr_end) {\n", 22));
	_1abb0b752_addIndent((*(_self_))._field_oc);
	_1abb0bb4d_indent((*(_self_))._field_oc);
}



inline void _1aba2786b_rangeIndexIter(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37a9d9_RangeIter>* _12936_it) {
	_1ed486d49_StrBuilder _1307_sb = static__1ed487146_New(64LL);;
	static__1aba4bc47_iterBegin(&(_1307_sb), static_cast<jule::Uintptr>((*(_12936_it))));
	jule::Str _1323_begin = _1ed4912a4_Str(&_1307_sb);;
	_1ed4914a2_Clear(&_1307_sb);
	static__1aba4c31e_iterNext(&(_1307_sb), static_cast<jule::Uintptr>((*(_12936_it))));
	jule::Str _1353_next = _1ed4912a4_Str(&_1307_sb);;
	jule::Bool _1377_ref = false;;
	_1bd742189_iterHead(_self_, _12936_it, &(_1377_ref), _1323_begin);
	if (((*((*(_12936_it))))._field_KeyA != nullptr)) {
		_1abb12cdb_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_12936_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1bd752b6c, jule::Ptr<__jule_anon_1bd752b6c_ctx>::make(__jule_anon_1bd752b6c_ctx{._self_=_self_,._1377_ref=_1377_ref}).as<jule::Uintptr>(), __jule_anon_1bd752b6c_ctx_handler));
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1abb0bb4d_indent((*(_self_))._field_oc);
	};
	if (((*((*(_12936_it))))._field_KeyB != nullptr)) {
		(*(*((*(_12936_it))))._field_KeyB.alloc)._field_Reference=(_1aa8a88a7_Copy && _1aba3028b_isIterCopyOptimizable(&((*((*(_12936_it))))._field_Expr), &((*((*(_12936_it))))._field_KeyB)));
		_1abb12cdb_varInitExpr((*(_self_))._field_oc, &((*((*(_12936_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1bd756764, jule::Ptr<__jule_anon_1bd756764_ctx>::make(__jule_anon_1bd756764_ctx{._self_=_self_,._12936_it=_12936_it}).as<jule::Uintptr>(), __jule_anon_1bd756764_ctx_handler));
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1abb0bb4d_indent((*(_self_))._field_oc);
	};
	_1aba2e169_scope(_self_, (*((*(_12936_it))))._field_Scope);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, _1353_next);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_1abb0bb4d_indent((*(_self_))._field_oc);
	if (((*((*(_12936_it))))._field_KeyA != nullptr)) {
		static__1aba4b95b_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_12936_it))))._field_KeyA);
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1abb0bb4d_indent((*(_self_))._field_oc);
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1abb0b29b_write((*(_self_))._field_oc, _1323_begin);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1abb0b950_doneIndent((*(_self_))._field_oc);
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1abb0bb4d_indent((*(_self_))._field_oc);
	static__1aba4c033_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_12936_it))));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1abb0b950_doneIndent((*(_self_))._field_oc);
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1aba27b24_rangeHashmapIter(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37a9d9_RangeIter>* _19638_it) {
	_1ed486d49_StrBuilder _1977_sb = static__1ed487146_New(64LL);;
	static__1aba4bc47_iterBegin(&(_1977_sb), static_cast<jule::Uintptr>((*(_19638_it))));
	jule::Str _1993_begin = _1ed4912a4_Str(&_1977_sb);;
	_1ed4914a2_Clear(&_1977_sb);
	static__1aba4c31e_iterNext(&(_1977_sb), static_cast<jule::Uintptr>((*(_19638_it))));
	jule::Str _2023_next = _1ed4912a4_Str(&_1977_sb);;
	jule::Bool _2047_ref = false;;
	_1bd742189_iterHead(_self_, _19638_it, &(_2047_ref), _1993_begin);
	if (((*((*(_19638_it))))._field_KeyA != nullptr)) {
		_1abb12cdb_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_19638_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1bd765c3a, jule::Ptr<__jule_anon_1bd765c3a_ctx>::make(__jule_anon_1bd765c3a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd765c3a_ctx_handler));
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1abb0bb4d_indent((*(_self_))._field_oc);
	};
	if (((*((*(_19638_it))))._field_KeyB != nullptr)) {
		_1abb12cdb_varInitExpr((*(_self_))._field_oc, &((*((*(_19638_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1bd7681b0, jule::Ptr<__jule_anon_1bd7681b0_ctx>::make(__jule_anon_1bd7681b0_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd7681b0_ctx_handler));
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1abb0bb4d_indent((*(_self_))._field_oc);
	};
	_1aba2e169_scope(_self_, (*((*(_19638_it))))._field_Scope);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, _2023_next);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1abb0b29b_write((*(_self_))._field_oc, _1993_begin);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1abb0b950_doneIndent((*(_self_))._field_oc);
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1abb0bb4d_indent((*(_self_))._field_oc);
	static__1aba4c033_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_19638_it))));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1abb0b950_doneIndent((*(_self_))._field_oc);
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1aba27dcc_strRuneIter(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa600610_StrRuneIter> _24332_it) {
	_1ed486d49_StrBuilder _2447_sb = static__1ed487146_New(64LL);;
	static__1aba4bc47_iterBegin(&(_2447_sb), static_cast<jule::Uintptr>((*(_24332_it))._field_Base));
	jule::Str _2463_begin = _1ed4912a4_Str(&_2447_sb);;
	_1ed4914a2_Clear(&_2447_sb);
	static__1aba4c31e_iterNext(&(_2447_sb), static_cast<jule::Uintptr>((*_24332_it.alloc)._field_Base));
	jule::Str _2493_next = _1ed4912a4_Str(&_2447_sb);;
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1abb0b752_addIndent((*(_self_))._field_oc);
	_1abb0bb4d_indent((*(_self_))._field_oc);
	jule::Bool _2557_ref = false;;
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1aa8a88a7_Copy && _1aba2edc3_isCopyOptimizable(&((*_24332_it.alloc)._field_Expr)))) {
		_2557_ref=true;
		{
			auto &_match_expr{ (*((*(_24332_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1bd776212:;
				{
					jule::Ptr<_1aa3e4d3e_Var> _2615_v = (*((*(_24332_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1aa3e4d3e_Var>();;
					if ((*(_2615_v))._field_Reference) {
						_1aba422ae_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24332_it.alloc)._field_Expr))._field_Model);
						goto _match_end_1bd776861;
					};
					goto _case_begin_1bd7768b6;
				}
			}
			else {
				_case_begin_1bd7768b6:;
				{
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1aba422ae_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24332_it.alloc)._field_Expr))._field_Model);
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1bd776861:;
		};
	} else {
		_1aba378e2_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24332_it.alloc)._field_Expr))._field_Model);
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("char *it = expr", 15));
	if (_2557_ref) {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("operator char*();\n", 18));
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("const char *end = it + expr", 27));
	if (_2557_ref) {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("len();\n", 7));
	_1abb0bb4d_indent((*(_self_))._field_oc);
	if (((*((*_24332_it.alloc)._field_Base))._field_KeyA != nullptr)) {
		_1abb12cdb_varInitExpr((*(_self_))._field_oc, &((*(*(_24332_it))._field_Base.alloc)._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1bd782152, jule::Ptr<__jule_anon_1bd782152_ctx>::make(__jule_anon_1bd782152_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd782152_ctx_handler));
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1abb0bb4d_indent((*(_self_))._field_oc);
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("std::size_t len;\n", 17));
	_1abb0bb4d_indent((*(_self_))._field_oc);
	if (((*(*(_24332_it))._field_Base.alloc)._field_KeyB != nullptr)) {
		_1abb12cdb_varInitExpr((*(_self_))._field_oc, &((*(*(_24332_it))._field_Base.alloc)._field_KeyB), nullptr);
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1abb0bb4d_indent((*(_self_))._field_oc);
	};
	_1abb0b29b_write((*(_self_))._field_oc, _2463_begin);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("std::tie(", 9));
	if (((*(*(_24332_it))._field_Base.alloc)._field_KeyB != nullptr)) {
		static__1aba4b95b_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_24332_it))._field_Base.alloc)._field_KeyB);
	} else {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("std::ignore", 11));
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(", len) = jule::utf8_decode_rune_str(it, end - it", 48));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("if (it < end) {\n", 16));
	_1abb0b752_addIndent((*(_self_))._field_oc);
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1aba2e169_scope(_self_, (*(*(_24332_it))._field_Base.alloc)._field_Scope);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, _2493_next);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("it += len;\n", 11));
	_1abb0bb4d_indent((*(_self_))._field_oc);
	if (((*(*(_24332_it))._field_Base.alloc)._field_KeyA != nullptr)) {
		static__1aba4b95b_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_24332_it))._field_Base.alloc)._field_KeyA);
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1abb0bb4d_indent((*(_self_))._field_oc);
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1abb0b29b_write((*(_self_))._field_oc, _2463_begin);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1abb0b950_doneIndent((*(_self_))._field_oc);
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1abb0b950_doneIndent((*(_self_))._field_oc);
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1aba28185_ifCase(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa3790c0_If> _35127_i) {
	if (((*(_35127_i))._field_Expr != nullptr)) {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		_1aba378e2_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_35127_i.alloc)._field_Expr);
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	};
	_1aba2e169_scope(_self_, (*_35127_i.alloc)._field_Scope);
}



inline void _1aba2843d_conditional(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa3797da_Conditional> _36032_c) {
	jule::Bool _3617_writed = false;;
	{
		auto expr = &((*(_36032_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd797079:;
		if (it != expr_end) {
			jule::Ptr<_1aa3790c0_If> _36215_elif = *it;
			{
				if ((_36215_elif == nullptr)) {
					goto _iter_next_1bd797079;
				};
				if (_3617_writed) {
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
				};
				_3617_writed=true;
				_1aba28185_ifCase(_self_, _36215_elif);
			}
			_iter_next_1bd797079:;
			++it;
			goto _iter_begin_1bd797079;
		}
		_iter_end_1bd797079:;
	};
	if (((*_36032_c.alloc)._field_Default != nullptr)) {
		if (_3617_writed) {
			_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
		};
		_1aba2e169_scope(_self_, (*(*(_36032_c))._field_Default.alloc)._field_Scope);
	};
}



inline void _1aba286e6_infIter(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa379ad7_InfIter> _38028_it) {
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("for (;;) {\n", 11));
	_1abb0b752_addIndent((*(_self_))._field_oc);
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1aba2e169_scope(_self_, (*(_38028_it))._field_Scope);
	_1abb0b950_doneIndent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1abb0bb4d_indent((*(_self_))._field_oc);
	static__1aba4c31e_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_38028_it));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1abb0bb4d_indent((*(_self_))._field_oc);
	static__1aba4c033_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_38028_it));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1aba2899e_whileIter(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37a08d_WhileIter> _39730_it) {
	if ((((*(_39730_it))._field_Expr != nullptr) && ((*_39730_it.alloc)._field_Next == nullptr))) {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("while (", 7));
		_1aba378e2_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_39730_it.alloc)._field_Expr);
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(") {", 3));
	} else {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
		if (((*(_39730_it))._field_Expr != nullptr)) {
			_1aba378e2_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_39730_it.alloc)._field_Expr);
		};
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
		if (((*_39730_it.alloc)._field_Next != nullptr)) {
			_1aba2db08_st(_self_, (*_39730_it.alloc)._field_Next);
		};
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(") {", 3));
	};
	if (((*((*(_39730_it))._field_Scope))._field_Stmts.len() == 0LL)) {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1abb0b752_addIndent((*(_self_))._field_oc);
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1aba2e169_scope(_self_, (*_39730_it.alloc)._field_Scope);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1abb0b950_doneIndent((*(_self_))._field_oc);
	_1abb0bb4d_indent((*(_self_))._field_oc);
	static__1aba4c31e_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_39730_it));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1abb0bb4d_indent((*(_self_))._field_oc);
	static__1aba4c033_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_39730_it));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1aba28c57_rangeIter(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37a9d9_RangeIter> _43630_it) {
	{
		
		if ((_1a601dd57_Slc((*((*(_43630_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd7ac897:;
			{
				_1aba2786b_rangeIndexIter(_self_, &(_43630_it));
			}
		}
		else if ((_1a601dac1_Arr((*((*(_43630_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd7ac556:;
			{
				_1aba2786b_rangeIndexIter(_self_, &(_43630_it));
			}
		}
		else if ((_1a601e891_Map((*((*(_43630_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd7ac5bc:;
			{
				_1aba27b24_rangeHashmapIter(_self_, &(_43630_it));
			}
		}
		else {
			_case_begin_1bd7ac4e0:;
			{
				_1aba2786b_rangeIndexIter(_self_, &(_43630_it));
			}
		}
		_match_end_1bd7ac3e1:;
	};
}



inline void _1aba29010_cont(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37ad6e_ContSt> _44921_c) {
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1aba4c31e_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_44921_c))._field_It);
}



inline void _1aba292b8_label(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37b545_Label> _45422_l) {
	static__1aba4c60a_label(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(_45422_l));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(":", 1));
}



inline void _1aba29571_gotoSt(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37b91e_GotoSt> _45923_gt) {
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1aba4c60a_label(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_45923_gt))._field_Label));
}



inline void _1aba29829_postfix(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37bce8_Postfix> _46428_p) {
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1aba378e2_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_46428_p))._field_Expr);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	_1abb0b29b_write((*(_self_))._field_oc, (*_46428_p.alloc)._field_Op);
}



inline void _1aba29ad2_assignLeft(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Any* _47132_model) {
	{
		auto &_match_expr{ (*(_47132_model)) };
		
		if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1bd7b686d:;
			{
				jule::Ptr<_1aa32608e_IndexingExprModel> _4748_iem = (*(_47132_model)).cast_ptr<_1aa32608e_IndexingExprModel>(&__jule_any_type53);;
				jule::Ptr<_1a6029406_Map> _4754__map = _1a601e891_Map((*((*(_4748_iem))._field_Expr))._field_Kind.ptr());;
				if ((_4754__map == nullptr)) {
					goto _match_end_1bd7b6818;
				};
				_1aba378e2_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(*(_4748_iem))._field_Expr.alloc)._field_Model);
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("[", 1));
				_1aba378e2_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_4748_iem.alloc)._field_Index))._field_Model);
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
				return;;
			}
		}
		_match_end_1bd7b6818:;
	};
	_1aba378e2_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_47132_model)));
}



inline void _1aba29d8a_shl(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37c29e_Assign> _49024_a) {
	_1aba29ad2_assignLeft(_self_, &((*((*(_49024_a))._field_Left))._field_Model));
	_1abb0b29b_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1aba36193_shl((*(*(_self_))._field_oc.alloc)._field_ec, &((*_49024_a.alloc)._field_Left), &((*_49024_a.alloc)._field_Right));
}



inline void _1aba2a143_shr(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37c29e_Assign> _49624_a) {
	_1aba29ad2_assignLeft(_self_, &((*((*(_49624_a))._field_Left))._field_Model));
	_1abb0b29b_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1aba36506_shr((*(*(_self_))._field_oc.alloc)._field_ec, &((*_49624_a.alloc)._field_Left), &((*_49624_a.alloc)._field_Right));
}



inline void _1aba2a3eb_divByZeroAssign(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37c29e_Assign> _50236_a) {
	_1aba29ad2_assignLeft(_self_, &((*((*(_50236_a))._field_Left))._field_Model));
	_1abb0b29b_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1aba3537e_divByZeroBinary((*(*(_self_))._field_oc.alloc)._field_ec, &((*_50236_a.alloc)._field_Op), &((*_50236_a.alloc)._field_Left), &((*_50236_a.alloc)._field_Right));
}



inline void _1aba2a8c4_operatorOverloadingAssign(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa31e373_StructIns>* _50847_s, jule::Ptr<_1aa323234_OperandExprModel>* _50873_l, jule::Ptr<_1aa323234_OperandExprModel>* _5098_r, jule::U32 _50936_op) {
	;
	jule::Ptr<_1aa334597_FnIns> _5113_f = _1aa892044_FindOperator(_50847_s, _50936_op, false);;
	if ((_5113_f == nullptr)) {
		jule::panic(jule::Str::lit("binary operator overloading is not exist, this is an implementation mistake", 75) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:513:4"));;
	};
	static__1aba4a6d5_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_5113_f));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("(&", 2));
	_1aba29ad2_assignLeft(_self_, &((*((*(_50873_l))))._field_Model));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1aba378e2_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_5098_r))))._field_Model);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1aba2ab7c_assign(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37c29e_Assign> _52327_a) {
	{
		auto &_match_expr{ (*((*(_52327_a))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(43LLU) || _match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1bd7c6a15:;
			{
				if ((_1a601e374_Struct((*((*(_52327_a))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1aba2a3eb_divByZeroAssign(_self_, _52327_a);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(45LLU)) {
			_case_begin_1bd7c6a8c:;
			{
				if ((_1a601e374_Struct((*((*(_52327_a))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1aba29d8a_shl(_self_, _52327_a);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(46LLU)) {
			_case_begin_1bd7c6b03:;
			{
				if ((_1a601e374_Struct((*((*(_52327_a))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1aba2a143_shr(_self_, _52327_a);
					return;;
				};
			}
		}
		_match_end_1bd7c695a:;
	};
	if ((((*((*(_52327_a))._field_Op))._field_Id != static_cast<jule::U32>(71LLU)) && (_1a601e374_Struct((*((*_52327_a.alloc)._field_Left))._field_Kind.ptr()) != nullptr))) {
		jule::Ptr<_1aa31e373_StructIns> _5468_s = _1a601e374_Struct((*((*(_52327_a))._field_Left))._field_Kind);;
		_1aba2a8c4_operatorOverloadingAssign(_self_, &(_5468_s), &((*_52327_a.alloc)._field_Left), &((*_52327_a.alloc)._field_Right), (*(*(_52327_a))._field_Op.alloc)._field_Id);
		return;;
	};
	_1aba29ad2_assignLeft(_self_, &((*(*(_52327_a))._field_Left.alloc)._field_Model));
	_1abb0b29b_write((*_self_.alloc)._field_oc, (*(*(_52327_a))._field_Op.alloc)._field_Kind);
	_1aba378e2_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_52327_a.alloc)._field_Right))._field_Model);
}



inline void _1aba2ae35_mapLookupAssign(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37c755_MultiAssign>* _55637_a) {
	jule::Ptr<_1aa32608e_IndexingExprModel> _5577_iem = (*((*(_55637_a))))._field_Right.cast_ptr<_1aa32608e_IndexingExprModel>(&__jule_any_type53);;
	_1aba29ad2_assignLeft(_self_, &((*((*(_5577_iem))._field_Expr))._field_Model));
	_1abb0b29b_write((*_self_.alloc)._field_oc, jule::Str::lit(".lookup(", 8));
	_1aba378e2_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_5577_iem.alloc)._field_Index))._field_Model);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_55637_a))))._field_Left[0LL] != nullptr)) {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1aba378e2_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_55637_a))))._field_Left[0LL]))._field_Model);
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
	} else {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("nullptr, ", 9));
	};
	if (((*((*(_55637_a))))._field_Left[1LL] != nullptr)) {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1aba378e2_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_55637_a))))._field_Left[1LL]))._field_Model);
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1aba2b1dd_multiAssignTup(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37c755_MultiAssign>* _57936_a) {
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1abb0b752_addIndent((*(_self_))._field_oc);
	jule::Ptr<_1aa328de9_TupleExprModel> _5837_tup = (*((*(_57936_a))))._field_Right.cast_ptr<_1aa328de9_TupleExprModel>(&__jule_any_type84);;
	{
		auto expr = &((*(_5837_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd7d87d5:;
		if (it != expr_end) {
			jule::I32 _5858_i = it - expr->begin();
			jule::Ptr<_1aa44cc98_Data> _58515_r = *it;
			{
				_1abb0bb4d_indent((*(_self_))._field_oc);
				jule::Ptr<_1aa44cc98_Data> _5878_l = (*((*(_57936_a))))._field_Left[_5858_i];;
				if ((_5878_l != nullptr)) {
					{
						auto &_match_expr{ (*(_5878_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1bd7db61d:;
							{
								jule::Ptr<_1aa3e4d3e_Var> _59110_v = (*(_5878_l))._field_Model.unsafe_cast_ptr<_1aa3e4d3e_Var>();;
								if (((*(_59110_v))._field_Reference && (!(_1aa3e524b_IsInitialized(_59110_v))))) {
									static__1aba4b95b_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _59110_v);
									_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(" = &(", 5));
									_1aba378e2_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_58515_r))._field_Model);
									_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
									(*((*(_57936_a))))._field_Left[_5858_i]=nullptr;
									goto _iter_next_1bd7d87d5;
								};
							}
						}
						_match_end_1bd7db5b8:;
					};
					_1abb20975_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_5878_l.alloc)._field_Kind);
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
					static__1aba49bac_toOut(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1aba2623d_assignArgName, static_cast<jule::Uintptr>(_5858_i));
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				};
				_1aba378e2_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_58515_r.alloc)._field_Model);
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1bd7d87d5:;
			++it;
			_5858_i++;
			goto _iter_begin_1bd7d87d5;
		}
		_iter_end_1bd7d87d5:;
	};
	{
		auto expr = &((*((*(_57936_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd7e24d1:;
		if (it != expr_end) {
			jule::I32 _6128_i = it - expr->begin();
			jule::Ptr<_1aa44cc98_Data> _61215_l = *it;
			{
				if ((_61215_l == nullptr)) {
					goto _iter_next_1bd7e24d1;
				};
				_1abb0bb4d_indent((*(_self_))._field_oc);
				_1aba29ad2_assignLeft(_self_, &((*(_61215_l))._field_Model));
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				static__1aba49bac_toOut(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1aba2623d_assignArgName, static_cast<jule::Uintptr>(_6128_i));
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1bd7e24d1:;
			++it;
			_6128_i++;
			goto _iter_begin_1bd7e24d1;
		}
		_iter_end_1bd7e24d1:;
	};
	_1abb0b950_doneIndent((*(_self_))._field_oc);
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1aba2b496_multiAssignFn(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37c755_MultiAssign>* _62835_a) {
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1abb0b752_addIndent((*(_self_))._field_oc);
	_1abb0bb4d_indent((*(_self_))._field_oc);
	jule::Ptr<_1aa32570e_FnCallExprModel> _6337_f = (*((*(_62835_a))))._field_Right.cast_ptr<_1aa32570e_FnCallExprModel>(&__jule_any_type41);;
	_1abb25925_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_6337_f))._field_Func))._field_Result));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(" __jule_assign_result = ", 24));
	_1aba378e2_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_62835_a))))._field_Right);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	jule::Ptr<_1a6028856_Tuple> _6397_tup = _1a601eb27_Tup((*(*(_6337_f))._field_Func.alloc)._field_Result.ptr());;
	{
		auto expr = &((*((*(_62835_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd7eba07:;
		if (it != expr_end) {
			jule::I32 _6408_i = it - expr->begin();
			jule::Ptr<_1aa44cc98_Data> _64015_l = *it;
			{
				if ((_64015_l == nullptr)) {
					goto _iter_next_1bd7eba07;
				};
				;
				_1abb0bb4d_indent((*(_self_))._field_oc);
				_1aba29ad2_assignLeft(_self_, &((*(_64015_l))._field_Model));
				{
					
					if (_1a601ad87_Equal((*(_6397_tup))._field_Types[_6408_i], (*(_64015_l))._field_Kind)) {
						_case_begin_1bd806cba:;
						{
							_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(" = __jule_assign_result.__jule_result_arg", 41));
							_1abb0b29b_write((*(_self_))._field_oc, _1a6e696ec_Itoa(_6408_i));
						}
					}
					else if (_1aa88dabd_IsAny(&((*(_64015_l))._field_Kind))) {
						_case_begin_1bd803bc9:;
						{
							_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Any(__jule_assign_result.__jule_result_arg", 51));
							_1abb0b29b_write((*(_self_))._field_oc, _1a6e696ec_Itoa(_6408_i));
							_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
							_1abb0b29b_write((*(_self_))._field_oc, _1a6e696ec_Itoa(_1abb0c962_pushAnyType((*(_self_))._field_oc, (*(_6397_tup))._field_Types[_6408_i])));
							_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
						}
					}
					else {
						_case_begin_1bd7ecbc3:;
						{
							if ((_1a601e60a_Trait((*(_6397_tup))._field_Types[_6408_i].ptr()) != nullptr)) {
								_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
								jule::Ptr<_1aa345047_Trait> _66110_t1 = _1a601e60a_Trait((*(_64015_l))._field_Kind.ptr());;
								jule::Ptr<_1aa345047_Trait> _66210_t2 = _1a601e60a_Trait((*(_6397_tup))._field_Types[_6408_i].ptr());;
								_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("__jule_assign_result.__jule_result_arg", 38));
								_1abb0b29b_write((*(_self_))._field_oc, _1a6e696ec_Itoa(_6408_i));
								_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(".map(", 5));
								_1abb0d336_pushAndWriteMaskMapper((*(_self_))._field_oc, _66110_t1, _66210_t2);
								_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1bd7edd06;
							};
							jule::Ptr<_1aa345047_Trait> _6705_t = _1a601e60a_Trait((*(_64015_l))._field_Kind);;
							_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Trait(__jule_assign_result.__jule_result_arg", 53));
							_1abb0b29b_write((*(_self_))._field_oc, _1a6e696ec_Itoa(_6408_i));
							_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
							static__1aba4a9c1_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _6705_t);
							_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
							_1abb0b29b_write((*(_self_))._field_oc, _1a6e696ec_Itoa(_1aa891b15_FindTraitTypeOffset(_6705_t, (*(_6397_tup))._field_Types[_6408_i])));
							_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
						}
					}
					_match_end_1bd7edd06:;
				};
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1bd7eba07:;
			++it;
			_6408_i++;
			goto _iter_begin_1bd7eba07;
		}
		_iter_end_1bd7eba07:;
	};
	_1abb0b950_doneIndent((*(_self_))._field_oc);
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1aba2b74e_multiAssign(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37c755_MultiAssign> _68732_a) {
	{
		auto expr = &((*(_68732_a))._field_Decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd80c70a:;
		if (it != expr_end) {
			jule::Ptr<_1aa3e4d3e_Var> _69015_d = *it;
			{
				_1abb12cdb_varInitExpr((*(_self_))._field_oc, &(_69015_d), nullptr);
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
				_1abb0bb4d_indent((*(_self_))._field_oc);
			}
			_iter_next_1bd80c70a:;
			++it;
			goto _iter_begin_1bd80c70a;
		}
		_iter_end_1bd80c70a:;
	};
	{
		auto &_match_expr{ (*(_68732_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1bd80ce25:;
			{
				_1aba2ae35_mapLookupAssign(_self_, &(_68732_a));
				return;;
			}
		}
		_match_end_1bd80cdc0:;
	};
	{
		auto &_match_expr{ (*(_68732_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1bd8101ad:;
			{
				_1aba2b1dd_multiAssignTup(_self_, &(_68732_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1bd80e90a:;
			{
				_1aba2b496_multiAssignFn(_self_, &(_68732_a));
			}
		}
		else {
			_case_begin_1bd80e894:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:709:4"));;
			}
		}
		_match_end_1bd80e83e:;
	};
}



inline jule::Fn<void> _1aba2ba90_matchExpr(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37cdb5_Match> _71330_m) {
	if ((!(_1aa44d6d3_IsConst((*(_71330_m))._field_Expr.ptr())))) {
		return jule::__new_closure<void>((void*)__jule_anon_1bd811cd6, jule::Ptr<__jule_anon_1bd811cd6_ctx>::make(__jule_anon_1bd811cd6_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd811cd6_ctx_handler);;
	};
	if (((!(_1a6e7baa5_IsBool((*(*(_71330_m))._field_Expr.alloc)._field_Constant.ptr()))) || (!(_1a6e794a9_ReadBool((*((*(_71330_m))._field_Expr))._field_Constant))))) {
		return jule::__new_closure<void>((void*)__jule_anon_1bd8130e5, jule::Ptr<__jule_anon_1bd8130e5_ctx>::make(__jule_anon_1bd8130e5_ctx{._self_=_self_,._71330_m=_71330_m}).as<jule::Uintptr>(), __jule_anon_1bd8130e5_ctx_handler);;
	};
	return nullptr;;
}



inline void _1aba2be03_case(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37cdb5_Match> _72325_m, jule::Ptr<_1aa37d8dd_Case> _72340_c) {
	if ((((*(_72340_c))._field_Exprs.len() != 0LL) && (!((*(_72325_m))._field_Comptime)))) {
		if ((((*_72325_m.alloc)._field_Cases.len() > 0LL) && ((*(_72325_m))._field_Cases[0LL] == _72340_c))) {
			_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		} else {
			_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
		};
		{
			auto expr = &((*_72340_c.alloc)._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd81721a:;
			if (it != expr_end) {
				jule::I32 _7309_i = it - expr->begin();
				jule::Ptr<_1aa44cc98_Data> _73016_expr = *it;
				{
					{
						
						if ((!((*_72325_m.alloc)._field_TypeMatch))) {
							_case_begin_1bd820b3b:;
							{
								jule::Fn<void> _7336_caseExpr = _1aba2ba90_matchExpr(_self_, _72325_m);;
								if (_1aa44da24_GoodOperand((*_72325_m.alloc)._field_Expr.ptr(), &(_73016_expr))) {
									if ((_7336_caseExpr != nullptr)) {
										_7336_caseExpr();
										_1abb0b29b_write((*_self_.alloc)._field_oc, jule::Str::lit(" == ", 4));
									};
									_1aba378e2_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_73016_expr))._field_Model);
								} else {
									_1aba378e2_possibleRefExpr((*((*_self_.alloc)._field_oc))._field_ec, (*(_73016_expr))._field_Model);
									if ((_7336_caseExpr != nullptr)) {
										_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(" == ", 4));
										_7336_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1bd817dec:;
							{
								_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
								jule::Ptr<_1a601a64a_TypeKind> _74910_tk = (*(_73016_expr))._field_Model.cast_ptr<_1a601a64a_TypeKind>(&__jule_any_type87);;
								if ((_1a601e60a_Trait((*((*_72325_m.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
									_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(".type_is(", 9));
									_1aba33bda_boolean((*(*(_self_))._field_oc.alloc)._field_ec, (_1a601d087_Sptr((*(_73016_expr))._field_Kind) != nullptr));
									_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(", (const jule::Trait::Type*)&", 29));
									static__1aba4a9c1_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1a601e60a_Trait((*((*(_72325_m))._field_Expr))._field_Kind));
									_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
									_1abb0b29b_write((*(_self_))._field_oc, _1a6e696ec_Itoa(_1aa891b15_FindTraitTypeOffset(_1a601e60a_Trait((*((*(_72325_m))._field_Expr))._field_Kind), (*_73016_expr.alloc)._field_Kind)));
									_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								} else {
									jule::I32 _7597_j = _1abb0c962_pushAnyType((*(_self_))._field_oc, _74910_tk);;
									_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(".type == &__jule_any_type", 25));
									_1abb0b29b_write((*(_self_))._field_oc, _1a6e696ec_Itoa(_7597_j));
								};
							}
						}
						_match_end_1bd817ced:;
					};
					if ((((*_72340_c.alloc)._field_Exprs.len() - _7309_i) > 1LL)) {
						_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(" || ", 4));
					};
				}
				_iter_next_1bd81721a:;
				++it;
				_7309_i++;
				goto _iter_begin_1bd81721a;
			}
			_iter_end_1bd81721a:;
		};
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	} else if ((((*(_72325_m))._field_Default == _72340_c) && ((*_72325_m.alloc)._field_Cases.len() != 0LL))) {
		_1abb0bb4d_indent((*(_self_))._field_oc);
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("else ", 5));
	};
	_1abb0b752_addIndent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1abb0bb4d_indent((*(_self_))._field_oc);
	static__1aba4cbd2_caseBegin(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_72340_c));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	if (((*((*(_72340_c))._field_Scope))._field_Stmts.len() > 0LL)) {
		_1abb0bb4d_indent((*(_self_))._field_oc);
		_1aba2e169_scope(_self_, (*_72340_c.alloc)._field_Scope);
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	};
	_1abb0b950_doneIndent((*(_self_))._field_oc);
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1aba2c1ab_matchSt(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37cdb5_Match> _79328_m) {
	if ((((*(_79328_m))._field_Cases.len() == 0LL) && ((*_79328_m.alloc)._field_Default == nullptr))) {
		return;;
	};
	if (((*_79328_m.alloc)._field_Comptime && (((*_79328_m.alloc)._field_Default == nullptr) || ((*((*((*_79328_m.alloc)._field_Default))._field_Scope))._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1abb0b752_addIndent((*(_self_))._field_oc);
	_1abb0bb4d_indent((*(_self_))._field_oc);
	if (((!((*_79328_m.alloc)._field_Comptime)) && (!(_1aa44d6d3_IsConst((*_79328_m.alloc)._field_Expr.ptr()))))) {
		if ((_1aa8a88a7_Copy && _1aba2edc3_isCopyOptimizable(&((*_79328_m.alloc)._field_Expr)))) {
			_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("auto &_match_expr{ ", 19));
		} else {
			_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("auto _match_expr{ ", 18));
		};
		_1aba378e2_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*(_79328_m))._field_Expr.alloc)._field_Model);
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(" };\n", 4));
		_1abb0bb4d_indent((*(_self_))._field_oc);
	};
	if (((*_79328_m.alloc)._field_Cases.len() > 0LL)) {
		{
			auto expr = &((*_79328_m.alloc)._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd833698:;
			if (it != expr_end) {
				jule::Ptr<_1aa37d8dd_Case> _82116_c = *it;
				{
					if ((_82116_c == nullptr)) {
						goto _iter_next_1bd833698;
					};
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1abb0bb4d_indent((*(_self_))._field_oc);
					_1aba2be03_case(_self_, _79328_m, _82116_c);
				}
				_iter_next_1bd833698:;
				++it;
				goto _iter_begin_1bd833698;
			}
			_iter_end_1bd833698:;
		};
	};
	if (((*_79328_m.alloc)._field_Default != nullptr)) {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1aba2be03_case(_self_, _79328_m, (*_79328_m.alloc)._field_Default);
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1abb0bb4d_indent((*(_self_))._field_oc);
	static__1aba4c8e6_matchEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_79328_m));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1abb0b950_doneIndent((*(_self_))._field_oc);
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1aba2c464_fallSt(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37e0d6_FallSt> _84823_f) {
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1aba4cbd2_caseBegin(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_84823_f))._field_DestCase);
}



inline void _1aba2c71c_breakSt(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37b248_BreakSt> _85324_b) {
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	if (((*(_85324_b))._field_It != 0LLU)) {
		static__1aba4c033_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*_85324_b.alloc)._field_It);
	} else {
		static__1aba4c8e6_matchEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_85324_b))._field_Mtch);
	};
}



inline void _1aba2c9c5_setResult(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37e47c_RetSt> _86230_r) {
	if (((*((*((*((*(_86230_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = ", 21));
		_1aba378e2_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_86230_r.alloc)._field_Expr);
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		_1abb0bb4d_indent((*(_self_))._field_oc);
		return;;
	};
	{
		auto &_match_expr{ (*(_86230_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1bd83d5e8:;
			{
				jule::Slice<jule::Ptr<_1aa44cc98_Data>> _8728_datas = (*((*(_86230_r))._field_Expr.unsafe_cast_ptr<_1aa328de9_TupleExprModel>()))._field_Datas;;
				{
					auto expr = &(_8728_datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd842289:;
					if (it != expr_end) {
						jule::I32 _8738_i = it - expr->begin();
						jule::Ptr<_1aa44cc98_Data> _87311_data = *it;
						{
							_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1abb0b29b_write((*(_self_))._field_oc, _1a6e696ec_Itoa(_8738_i));
							_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1aba378e2_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_87311_data))._field_Model);
							_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
							_1abb0bb4d_indent((*(_self_))._field_oc);
						}
						_iter_next_1bd842289:;
						++it;
						_8738_i++;
						goto _iter_begin_1bd842289;
					}
					_iter_end_1bd842289:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1bd841255:;
			{
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = std::move(", 31));
				_1aba422ae_model((*((*(_self_))._field_oc))._field_ec, (*_86230_r.alloc)._field_Expr);
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
			}
		}
		else {
			_case_begin_1bd840d7b:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:886:4"));;
			}
		}
		_match_end_1bd840d26:;
	};
}



inline void _1aba2cc7d_retSt(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa37e47c_RetSt> _89026_r) {
	if (_1aa331a6c_IsVoid((*((*(_89026_r))._field_Func))._field_Decl.ptr())) {
		if ((*(*((*(_89026_r))._field_Func))._field_Decl.alloc)._field_Exceptional) {
			_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};", 31));
			return;;
		};
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("return;", 7));
		return;;
	} else if (((*((*((*((*(_89026_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 0LL)) {
		if ((*(*((*(_89026_r))._field_Func))._field_Decl.alloc)._field_Exceptional) {
			_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
			_1abb20975_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_89026_r))._field_Func.alloc)._field_Result);
			_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(">{.result=", 10));
			_1aba378e2_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_89026_r.alloc)._field_Expr);
			_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
		} else {
			_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
			_1aba378e2_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_89026_r.alloc)._field_Expr);
			_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
		};
		return;;
	};
	if (((*(_89026_r))._field_Expr != nullptr)) {
		_1aba2c9c5_setResult(_self_, _89026_r);
	};
	if ((*((*((*_89026_r.alloc)._field_Func))._field_Decl))._field_Exceptional) {
		_1abb0b29b_write((*_self_.alloc)._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
		_1abb25925_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*(*(_89026_r))._field_Func.alloc)._field_Result));
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(">{.result=__jule_func_result};", 30));
	} else {
		_1abb0b29b_write((*_self_.alloc)._field_oc, jule::Str::lit("return __jule_func_result;", 26));
	};
}



inline void _1aba2d036_var(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa3e4d3e_Var> _92624_v) {
	if ((!((*(_92624_v))._field_Constant))) {
		_1abb13094_var((*(_self_))._field_oc, _92624_v);
	};
}



inline void _1aba2d2de_mutSlicing(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa5ee301_MutSlicingExprModel> _93231_m) {
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1aba378e2_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_93231_m))._field_Expr);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(").mut_slice(", 12));
	if ((!(_1adc505db_Production))) {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1abb0d5de_locInfo((*(_self_))._field_oc, &((*_93231_m.alloc)._field_Token));
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1aba378e2_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_93231_m.alloc)._field_Left);
	if (((*_93231_m.alloc)._field_Right != nullptr)) {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1aba378e2_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_93231_m.alloc)._field_Right);
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1aba2d597_swap(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa5ed09c_SwapExprModel> _94925_m) {
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("std::swap(", 10));
	_1aba378e2_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_94925_m))._field_Left))._field_Model);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1aba378e2_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_94925_m.alloc)._field_Right))._field_Model);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1aba2d850_exceptionalForwarding(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa5ecc17_ExceptionalForwardingExprModel> _95742_m) {
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	_1aba395c5_pureFuncCall((*(*(_self_))._field_oc.alloc)._field_ec, &((*(_95742_m))._field_Expr));
}



inline void _1aba2db08_st(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Any _96323_st) {
	if ((_96323_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _96323_st };
		
		if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1bd85e240:;
			{
				_1aba2e169_scope(_self_, _96323_st.cast_ptr<_1aa378ba2_Scope>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bd85e4c6:;
			{
				_1aba2d036_var(_self_, _96323_st.cast_ptr<_1aa3e4d3e_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1bd85e53c:;
			{
				_1aba422ae_model((*((*(_self_))._field_oc))._field_ec, (*(_96323_st.unsafe_cast_ptr<_1aa44cc98_Data>()))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1bd85ec68:;
			{
				_1aba2843d_conditional(_self_, _96323_st.cast_ptr<_1aa3797da_Conditional>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1bd85ecce:;
			{
				_1aba286e6_infIter(_self_, _96323_st.cast_ptr<_1aa379ad7_InfIter>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1bd85ed45:;
			{
				_1aba2899e_whileIter(_self_, _96323_st.cast_ptr<_1aa37a08d_WhileIter>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1bd85edab:;
			{
				_1aba28c57_rangeIter(_self_, _96323_st.cast_ptr<_1aa37a9d9_RangeIter>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1bd85ee22:;
			{
				_1aba29010_cont(_self_, _96323_st.cast_ptr<_1aa37ad6e_ContSt>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1bd85ee88:;
			{
				_1aba292b8_label(_self_, _96323_st.cast_ptr<_1aa37b545_Label>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1bd85eeee:;
			{
				_1aba29571_gotoSt(_self_, _96323_st.cast_ptr<_1aa37b91e_GotoSt>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1bd860065:;
			{
				_1aba29829_postfix(_self_, _96323_st.cast_ptr<_1aa37bce8_Postfix>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1bd8600cb:;
			{
				_1aba2ab7c_assign(_self_, _96323_st.cast_ptr<_1aa37c29e_Assign>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1bd860142:;
			{
				_1aba2b74e_multiAssign(_self_, _96323_st.cast_ptr<_1aa37c755_MultiAssign>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1bd8601a8:;
			{
				_1aba2c1ab_matchSt(_self_, _96323_st.cast_ptr<_1aa37cdb5_Match>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1bd860230:;
			{
				_1aba2c464_fallSt(_self_, _96323_st.cast_ptr<_1aa37e0d6_FallSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1bd8602a7:;
			{
				_1aba2c71c_breakSt(_self_, _96323_st.cast_ptr<_1aa37b248_BreakSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1bd86032e:;
			{
				_1aba2cc7d_retSt(_self_, _96323_st.cast_ptr<_1aa37e47c_RetSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1bd8603a6:;
			{
				_1aba3e9d7_pushToSlice((*((*(_self_))._field_oc))._field_ec, _96323_st.cast_ptr<_1aa5eed5c_PushToSliceExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1bd86042d:;
			{
				_1aba3ec90_appendToSlice((*((*(_self_))._field_oc))._field_ec, _96323_st.cast_ptr<_1aa600236_AppendToSliceExprModel>(&__jule_any_type127));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1bd8604a5:;
			{
				_1aba2d2de_mutSlicing(_self_, _96323_st.cast_ptr<_1aa5ee301_MutSlicingExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1bd86052c:;
			{
				_1aba2d597_swap(_self_, _96323_st.cast_ptr<_1aa5ed09c_SwapExprModel>(&__jule_any_type128));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1bd8605a4:;
			{
				_1aba2d850_exceptionalForwarding(_self_, _96323_st.cast_ptr<_1aa5ecc17_ExceptionalForwardingExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1bd86062b:;
			{
				_1aba27dcc_strRuneIter(_self_, _96323_st.cast_ptr<_1aa600610_StrRuneIter>(&__jule_any_type124));
			}
		}
		else {
			_case_begin_1bd85e0a8:;
			{
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1bd85e053:;
	};
}



inline void _1aba2ddb1_scopeStmts(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa378ba2_Scope>* _101932_s) {
	{
		auto expr = &((*((*(_101932_s))))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd86d518:;
		if (it != expr_end) {
			jule::Any _102015_st = *it;
			{
				_1abb0bb4d_indent((*(_self_))._field_oc);
				_1aba2db08_st(_self_, _102015_st);
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1bd86d518:;
			++it;
			goto _iter_begin_1bd86d518;
		}
		_iter_end_1bd86d518:;
	};
}



inline void _1aba2e169_scope(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa378ba2_Scope> _102826_s) {
	_1abb0b752_addIndent((*(_self_))._field_oc);
	if ((*(_102826_s))._field_Deferred) {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("__JULE_DEFER(", 13));
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1aba2ddb1_scopeStmts(_self_, &(_102826_s));
	_1abb0b950_doneIndent((*(_self_))._field_oc);
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if ((*_102826_s.alloc)._field_Deferred) {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
	};
}



inline void _1aba2e422_commonFuncScope(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa334597_FnIns>* _104337_f) {
	if ((!(_1aa331a6c_IsVoid((*((*(_104337_f))))._field_Decl.ptr())))) {
		jule::Ptr<_1a6028856_Tuple> _10458_tup = _1a601eb27_Tup((*((*(_104337_f))))._field_Result.ptr());;
		if ((_10458_tup != nullptr)) {
			_1abb0bb4d_indent((*(_self_))._field_oc);
			_1abb2524e_tup((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _10458_tup);
			_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result;\n", 21));
			{
				auto expr = &((*_10458_tup.alloc)._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1bd8767da:;
				if (it != expr_end) {
					jule::I32 _105010_i = it - expr->begin();
					jule::Ptr<_1a601a64a_TypeKind> _105017_t = *it;
					{
						if (_1abb27b03_shouldInitialized(&(_105017_t))) {
							_1abb0bb4d_indent((*(_self_))._field_oc);
							_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1abb0b29b_write((*(_self_))._field_oc, _1a6e696ec_Itoa(_105010_i));
							_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1aba4347a_initExpr((*(*(_self_))._field_oc.alloc)._field_ec, _105017_t);
							_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
						};
					}
					_iter_next_1bd8767da:;
					++it;
					_105010_i++;
					goto _iter_begin_1bd8767da;
				}
				_iter_end_1bd8767da:;
			};
		} else if (((*((*(*((*(_104337_f))))._field_Decl.alloc)._field_Result))._field_Idents.len() == 1LL)) {
			_1abb0bb4d_indent((*(_self_))._field_oc);
			_1abb20975_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_104337_f))))._field_Result);
			_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result", 19));
			if (_1abb27b03_shouldInitialized(&((*((*(_104337_f))))._field_Result))) {
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1aba4347a_initExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_104337_f))))._field_Result);
			};
			_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		};
	};
	_1aba2ddb1_scopeStmts(_self_, &((*((*(_104337_f))))._field_Scope));
	if (((*(*((*(_104337_f))))._field_Decl.alloc)._field_Exceptional && _1aa331a6c_IsVoid((*((*(_104337_f))))._field_Decl))) {
		_1abb0bb4d_indent((*_self_.alloc)._field_oc);
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};\n", 32));
	};
}



inline void _1aba2e785_anonFuncScope(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa326545_AnonFnExprModel> _108334_m, jule::Str _108355_ident) {
	if (((*((*(_108334_m))._field_Func))._field_Scope == nullptr)) {
		return;;
	};
	jule::Bool _10873_closure = _1aa88de0e_IsClosure(&(_108334_m));;
	if (_10873_closure) {
		(*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes=jule::append((*(*((*(_self_))._field_oc))._field_ec.alloc)._field_varPrefixes,({ auto __jule_collection = jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1aa3e4d3e_Var>>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::__new_closure<jule::Bool,jule::Ptr<_1aa3e4d3e_Var>>((void*)__jule_anon_1bd883a7d, jule::Ptr<__jule_anon_1bd883a7d_ctx>::make(__jule_anon_1bd883a7d_ctx{._self_=_self_,._108334_m=_108334_m}).as<jule::Uintptr>(), __jule_anon_1bd883a7d_ctx_handler); __jule_collection; }));
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1abb0b752_addIndent((*(_self_))._field_oc);
	if (_10873_closure) {
		_1abb0bb4d_indent((*(_self_))._field_oc);
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("jule::Ptr<", 10));
		_1abb0b29b_write((*(_self_))._field_oc, _108355_ident);
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("_ctx> __jule_closure_ctx = __f_ctx.as<", 38));
		_1abb0b29b_write((*(_self_))._field_oc, _108355_ident);
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("_ctx>();\n", 9));
	};
	_1aba2e422_commonFuncScope(_self_, &((*_108334_m.alloc)._field_Func));
	_1abb0b950_doneIndent((*(_self_))._field_oc);
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if (_10873_closure) {
		((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes).mut_slice(0LL, ((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes.len() - 1LL));;
	};
}



inline void _1aba2ea3d_funcScope(jule::Ptr<_1aba2699c_scopeCoder> _self_, jule::Ptr<_1aa334597_FnIns> _111530_f) {
	if (((*(_111530_f))._field_Scope == nullptr)) {
		return;;
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1abb0b752_addIndent((*(_self_))._field_oc);
	_1aba2e422_commonFuncScope(_self_, &(_111530_f));
	_1abb0b950_doneIndent((*(_self_))._field_oc);
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}





std::ostream &operator<<(std::ostream &_Stream, _1aba2699c_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aba3327d_exprCoder> static__1aba33679_new(jule::Ptr<_1abb0aab4_ObjectCoder>* _11421_oc) {
	return jule::new_ptr<_1aba3327d_exprCoder>(_1aba3327d_exprCoder{._field_oc=(*(_11421_oc)), ._field_varPrefixes=jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1aa3e4d3e_Var>>>(nullptr)});;
}



inline void _1aba33932_string(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1a6e77584_Const>* _12024_c) {
	jule::Str _1213_content = _1a6e79740_ReadStr((*(_12024_c)).ptr());;
	if ((_1213_content.len() == 0LL)) {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		return;;
	};
	jule::Str _1263_len = _1a6e69433_FmtInt(static_cast<jule::I64>(_1213_content.len()), 10LL);;
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("::lit(", 6));
	_1aba44239_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1213_content);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1abb0b29b_write((*(_self_))._field_oc, _1263_len);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1aba33bda_boolean(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Bool _13524_b) {
	if (_13524_b) {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("true", 4));
	} else {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
	};
}



inline void _1aba33dd8_nilLit(jule::Ptr<_1aba3327d_exprCoder> _self_) {
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
}



inline jule::Bool _1aba34229_ftoaSpecialCases(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::F64* _14734_x) {
	{
		
		if (_1a688b64c_IsNaN((*(_14734_x)))) {
			_case_begin_1bd8ad998:;
			{
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("NAN", 3));
			}
		}
		else if (_1a6e1e790_IsInf((*(_14734_x)), 1LL)) {
			_case_begin_1bd8ada42:;
			{
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("INFINITY", 8));
			}
		}
		else if (_1a6e1e790_IsInf((*(_14734_x)), -1LL)) {
			_case_begin_1bd8adab9:;
			{
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1bd8ad910:;
			{
				return false;;
			}
		}
		_match_end_1bd8ad811:;
	};
	return true;;
}



inline void _1aba344d2_float32(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1a6e77584_Const>* _16125_c) {
	jule::F64 _1623_x = _1a6e7a279_AsF64((*(_16125_c)).ptr());;
	if (_1aba34229_ftoaSpecialCases(_self_, &(_1623_x))) {
		return;;
	};
	{
		
		if ((_1623_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1bd8b2bcd:;
			{
				_1abb0b29b_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F32", 13));
			}
		}
		else if ((_1623_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1bd8b1ca9:;
			{
				_1abb0b29b_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1bd8b1c43:;
			{
				_1aba445d0_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _1623_x, 32LL);
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("f", 1));
			}
		}
		_match_end_1bd8b1b33:;
	};
}



inline void _1aba3478a_float64(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1a6e77584_Const>* _18025_c) {
	jule::F64 _1813_x = _1a6e7a279_AsF64((*(_18025_c)).ptr());;
	if (_1aba34229_ftoaSpecialCases(_self_, &(_1813_x))) {
		return;;
	};
	{
		
		if ((_1813_x == jule::MAX_F64)) {
			_case_begin_1bd8b5560:;
			{
				_1abb0b29b_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F64", 13));
			}
		}
		else if ((_1813_x == jule::MIN_F64)) {
			_case_begin_1bd8b5296:;
			{
				_1abb0b29b_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1bd8b5230:;
			{
				_1aba445d0_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _1813_x, 64LL);
			}
		}
		_match_end_1bd8b5120:;
	};
}



inline void _1aba34a43_constant(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1a6e77584_Const> _19829_c) {
	{
		
		if (_1a6e7bd3b_IsStr(_19829_c.ptr())) {
			_case_begin_1bd8b74b8:;
			{
				_1aba33932_string(_self_, &(_19829_c));
			}
		}
		else if (_1a6e7baa5_IsBool(_19829_c.ptr())) {
			_case_begin_1bd8b752e:;
			{
				_1aba33bda_boolean(_self_, _1a6e794a9_ReadBool(_19829_c));
			}
		}
		else if (_1a6e7c0c2_IsF64(_19829_c.ptr())) {
			_case_begin_1bd8b7595:;
			{
				{
					
					if ((*(_19829_c))._field_Kind.equal("f32", 3)) {
						_case_begin_1bd8b9e6b:;
						{
							_1aba344d2_float32(_self_, &(_19829_c));
						}
					}
					else {
						_case_begin_1bd8b9ad6:;
						{
							_1aba3478a_float64(_self_, &(_19829_c));
						}
					}
					_match_end_1bd8b99d7:;
				};
			}
		}
		else if (_1a6e7b588_IsI64(_19829_c.ptr())) {
			_case_begin_1bd8b760b:;
			{
				_1aba448bb_itoa(&((*((*(_self_))._field_oc))._field_Buf), _1a6e78e8c_ReadI64(_19829_c));
			}
		}
		else if (_1a6e7b81e_IsU64(_19829_c.ptr())) {
			_case_begin_1bd8b7672:;
			{
				_1aba44ba7_utoa(&((*((*(_self_))._field_oc))._field_Buf), _1a6e79223_ReadU64(_19829_c));
			}
		}
		else if (_1a6e7c358_IsNil(_19829_c.ptr())) {
			_case_begin_1bd8b76d8:;
			{
				_1aba33dd8_nilLit(_self_);
			}
		}
		else {
			_case_begin_1bd8b7452:;
			{
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1bd8b7353:;
	};
}



inline void _1aba34e61_operatorOverloadingUnary(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa31e373_StructIns>* _22246_s, jule::U32 _22261_op, jule::Any _22278_e) {
	;
	jule::Ptr<_1aa334597_FnIns> _2243_f = _1aa892044_FindOperator(_22246_s, _22261_op, true);;
	if ((_2243_f == nullptr)) {
		jule::panic(jule::Str::lit("unary operator overloading is not exist, this is an implementation mistake", 74) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:226:4"));;
	};
	static__1aba4a6d5_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_2243_f));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("(&", 2));
	_1aba378e2_possibleRefExpr(_self_, _22278_e);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1aba3537e_divByZeroBinary(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa2d51c4_Token>* _23433_op, jule::Ptr<_1aa323234_OperandExprModel>* _23450_l, jule::Ptr<_1aa323234_OperandExprModel>* _23477_r) {
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("jule::", 6));
	{
		auto &_match_expr{ (*((*(_23433_op))))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_1bd8c10d7:;
			{
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("div(", 4));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU) || _match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1bd8c1a77:;
			{
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("mod(", 4));
			}
		}
		_match_end_1bd8c19de:;
	};
	if ((!(_1adc505db_Production))) {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1abb0d5de_locInfo((*(_self_))._field_oc, _23433_op);
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\",", 2));
	};
	_1aba378e2_possibleRefExpr(_self_, (*((*(_23450_l))))._field_Model);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_1aba378e2_possibleRefExpr(_self_, (*((*(_23477_r))))._field_Model);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1aba35a77__unsafeBinary(jule::Ptr<_1aba3327d_exprCoder> _self_, _1ed486d49_StrBuilder* _25635_buf, jule::Str* _25653_l, jule::Str* _25662_r, jule::Ptr<_1a601a64a_TypeKind>* _2578_lk, jule::Ptr<_1a601a64a_TypeKind>* _25728_rk, jule::U32 _25743_op, jule::Str _25756_kind) {
	if ((_1a601e374_Struct((*(_2578_lk)).ptr()) != nullptr)) {
		jule::Ptr<_1aa31e373_StructIns> _2608_s = _1a601e374_Struct((*(_2578_lk)).ptr());;
		_1aba45306_operatorOverloadingBinary(_25635_buf, &(_2608_s), _25653_l, _25662_r, _25743_op, _25756_kind);
		return;;
	};
	if (((_25743_op == static_cast<jule::U32>(50LLU)) || (_25743_op == static_cast<jule::U32>(51LLU)))) {
		{
			
			if (_1aa88dabd_IsAny(_2578_lk)) {
				_case_begin_1bd8c874e:;
				{
					if (((!(_1a601b77d_IsNil((*(_25728_rk)).ptr()))) && (!(_1aa88dabd_IsAny(_25728_rk))))) {
						_1ed490c65_WriteByte(_25635_buf, '(');
						if ((_25743_op == static_cast<jule::U32>(51LLU))) {
							_1ed490c65_WriteByte(_25635_buf, '!');
						};
						jule::I32 _2766_i = _1abb0c962_pushAnyType((*(_self_))._field_oc, (*(_25728_rk)));;
						_1ed4909ac_WriteStr(_25635_buf, jule::Str::lit("__jule_any_type", 15));
						_1ed4909ac_WriteStr(_25635_buf, _1a6e696ec_Itoa(_2766_i));
						_1ed4909ac_WriteStr(_25635_buf, jule::Str::lit("_compare(", 9));
						_1ed4909ac_WriteStr(_25635_buf, (*(_25653_l)));
						_1ed4909ac_WriteStr(_25635_buf, jule::Str::lit(", ", 2));
						_1ed4909ac_WriteStr(_25635_buf, (*(_25662_r)));
						_1ed4909ac_WriteStr(_25635_buf, jule::Str::lit("))", 2));
						return;;
					};
				}
			}
			else if ((_1a601dac1_Arr((*(_2578_lk)).ptr()) != nullptr)) {
				_case_begin_1bd8c87e8:;
				{
					jule::Ptr<_1a602a083_Arr> _2895_arr = _1a601dac1_Arr((*(_2578_lk)).ptr());;
					jule::Ptr<_1aa3315b6_Fn> _2909_f = _1aa603da5_RuntimeFindFn(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), jule::Str::lit("arrayCmp", 8));;
					jule::Ptr<_1aa334597_FnIns> _2919_ins = _1aa8923b8_FindGenericInstance(&(_2909_f), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a601a64a_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_2895_arr))._field_Elem; __jule_collection; }));;
					if ((_25743_op == static_cast<jule::U32>(51LLU))) {
						_1ed490c65_WriteByte(_25635_buf, '!');
					};
					static__1aba4a6d5_funcIns(_25635_buf, &(_2919_ins));
					_1ed490c65_WriteByte(_25635_buf, '(');
					_1ed4909ac_WriteStr(_25635_buf, (*(_25653_l)));
					_1ed4909ac_WriteStr(_25635_buf, jule::Str::lit(".begin(), ", 10));
					_1ed4909ac_WriteStr(_25635_buf, (*(_25662_r)));
					_1ed4909ac_WriteStr(_25635_buf, jule::Str::lit(".begin(), ", 10));
					_1ed4909ac_WriteStr(_25635_buf, _1a6e696ec_Itoa((*_2895_arr.alloc)._field_N));
					_1ed490c65_WriteByte(_25635_buf, ')');
					return;;
				}
			}
			_match_end_1bd8c8672:;
		};
	};
	{
		auto &_match_expr{ _25743_op };
		
		if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1bd8cd06c:;
			{
				jule::Ptr<_1a6023763_Prim> _3104_lp = _1a601cd01_Prim((*(_2578_lk)).ptr());;
				if (((_3104_lp != nullptr) && _1a6e766d7_IsUnsigInt((*_3104_lp.alloc)._field_Kind))) {
					_1ed490c65_WriteByte(_25635_buf, '(');
					_1abb1b498_prim((*((*(_self_))._field_oc))._field_tc.ptr(), _25635_buf, _3104_lp);
					_1ed490c65_WriteByte(_25635_buf, ')');
				};
			}
		}
		_match_end_1bd8cc49a:;
	};
	_1ed490c65_WriteByte(_25635_buf, '(');
	_1ed4909ac_WriteStr(_25635_buf, (*(_25653_l)));
	_1ed490c65_WriteByte(_25635_buf, ' ');
	_1ed4909ac_WriteStr(_25635_buf, _25756_kind);
	_1ed490c65_WriteByte(_25635_buf, ' ');
	_1ed4909ac_WriteStr(_25635_buf, (*(_25662_r)));
	_1ed490c65_WriteByte(_25635_buf, ')');
}



inline void _1aba35d30_unsafeBinary(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32372e_BinaryExprModel> _32733_m) {
	jule::I32 _3283_i = _1ed491738_Len(&(*((*(_self_))._field_oc))._field_Buf);;
	jule::Slice<jule::U8> _3297_oldbuf = _1ed491c55_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
	_1aba378e2_possibleRefExpr(_self_, (*((*(_32733_m))._field_Left))._field_Model);
	jule::Str _3313_l = static_cast<jule::Str>(_1ed491c55_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf).slice(_3283_i));;
	{
		_1ed49200d_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _3297_oldbuf);
	};
	_1aba378e2_possibleRefExpr(_self_, (*((*_32733_m.alloc)._field_Right))._field_Model);
	jule::Str _3343_r = static_cast<jule::Str>(_1ed491c55_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf).slice(_3283_i));;
	{
		_1ed49200d_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _3297_oldbuf);
	};
	_1aba35a77__unsafeBinary(_self_, &((*(*(_self_))._field_oc.alloc)._field_Buf), &(_3313_l), &(_3343_r), &((*(*(_32733_m))._field_Left.alloc)._field_Kind), &((*(*(_32733_m))._field_Right.alloc)._field_Kind), (*((*_32733_m.alloc)._field_Op))._field_Id, (*(*(_32733_m))._field_Op.alloc)._field_Kind);
}



inline void _1aba36193_shl(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa323234_OperandExprModel>* _33925_l, jule::Ptr<_1aa323234_OperandExprModel>* _33952_r) {
	jule::Ptr<_1aa3315b6_Fn> _3407_f = _1aa603da5_RuntimeFindFn(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), jule::Str::lit("shiftLeft", 9));;
	jule::Ptr<_1aa334597_FnIns> _3417_ins = _1aa8923b8_FindGenericInstance(&(_3407_f), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a601a64a_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*((*(_33925_l))))._field_Kind; (*it++) = (*((*(_33952_r))))._field_Kind; __jule_collection; }));;
	static__1aba4a6d5_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_3417_ins));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1aba378e2_possibleRefExpr(_self_, (*((*(_33925_l))))._field_Model);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1aba378e2_possibleRefExpr(_self_, (*((*(_33952_r))))._field_Model);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1aba36506_shr(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa323234_OperandExprModel>* _35025_l, jule::Ptr<_1aa323234_OperandExprModel>* _35052_r) {
	jule::Ptr<_1aa3315b6_Fn> _3517_f = _1aa603da5_RuntimeFindFn(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), jule::Str::lit("shiftRight", 10));;
	jule::Ptr<_1aa334597_FnIns> _3527_ins = _1aa8923b8_FindGenericInstance(&(_3517_f), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a601a64a_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*((*(_35025_l))))._field_Kind; (*it++) = (*((*(_35052_r))))._field_Kind; __jule_collection; }));;
	static__1aba4a6d5_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_3527_ins));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1aba378e2_possibleRefExpr(_self_, (*((*(_35025_l))))._field_Model);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1aba378e2_possibleRefExpr(_self_, (*((*(_35052_r))))._field_Model);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1aba367ae_binary(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32372e_BinaryExprModel> _36127_m) {
	{
		auto &_match_expr{ (*((*(_36127_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1bd8e4abc:;
			{
				if ((_1a601e374_Struct((*((*(_36127_m))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1aba3537e_divByZeroBinary(_self_, &((*_36127_m.alloc)._field_Op), &((*_36127_m.alloc)._field_Left), &((*_36127_m.alloc)._field_Right));
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1bd8e4b44:;
			{
				if ((_1a601e374_Struct((*((*(_36127_m))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1aba36193_shl(_self_, &((*_36127_m.alloc)._field_Left), &((*_36127_m.alloc)._field_Right));
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1bd8e4baa:;
			{
				if ((_1a601e374_Struct((*((*(_36127_m))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1aba36506_shr(_self_, &((*_36127_m.alloc)._field_Left), &((*_36127_m.alloc)._field_Right));
					return;;
				};
			}
		}
		_match_end_1bd8e4a12:;
	};
	_1aba35d30_unsafeBinary(_self_, _36127_m);
}



inline void _1aba36a67_var(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa3e4d3e_Var> _38524_m) {
	{
		auto expr = &((*(_self_))._field_varPrefixes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd8e9880:;
		if (it != expr_end) {
			jule::Fn<jule::Bool,jule::Ptr<_1aa3e4d3e_Var>> _38610_prefix = *it;
			{
				if (_38610_prefix(_38524_m)) {
					return;;
				};
			}
			_iter_next_1bd8e9880:;
			++it;
			goto _iter_begin_1bd8e9880;
		}
		_iter_end_1bd8e9880:;
	};
	if ((*(_38524_m))._field_Binded) {
		jule::Ptr<_1aa2e9a9b_Directive> _3924_d = _1aa89088e_FindDirective(&((*_38524_m.alloc)._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_3924_d != nullptr)) {
			_1abb0b554_writeBytes((*_self_.alloc)._field_oc, _1abb18088_concatAllParts((*_3924_d.alloc)._field_Args));
			_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1aba4b95b_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _38524_m);
}



inline void _1aba36d20_structureIns(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa31e373_StructIns> _40133_m) {
	_1abb1dc2b_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _40133_m);
}



inline void _1aba370c8_unary(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa323b08_UnaryExprModel> _40526_m) {
	if ((_1a601e374_Struct((*((*(_40526_m))._field_Expr))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1aa31e373_StructIns> _4088_s = _1a601e374_Struct((*((*(_40526_m))._field_Expr))._field_Kind);;
		_1aba34e61_operatorOverloadingUnary(_self_, &(_4088_s), (*((*_40526_m.alloc)._field_Op))._field_Id, (*(*(_40526_m))._field_Expr.alloc)._field_Model);
		return;;
	};
	{
		auto &_match_expr{ (*((*(_40526_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1bd8eeb71:;
			{
				_1abb0b29b_write((*_self_.alloc)._field_oc, jule::Str::lit("(~(", 3));
				_1aba378e2_possibleRefExpr(_self_, (*(*(_40526_m))._field_Expr.alloc)._field_Model);
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1bd901359:;
			{
				if ((_1adc505db_Production || (_1a601d087_Sptr((*((*(_40526_m))._field_Expr))._field_Kind) == nullptr))) {
					goto _match_end_1bd9012c1;
				};
				_1aba378e2_possibleRefExpr(_self_, (*(*(_40526_m))._field_Expr.alloc)._field_Model);
				_1abb0b29b_write((*_self_.alloc)._field_oc, jule::Str::lit(".get(\"", 6));
				_1abb0d5de_locInfo((*(_self_))._field_oc, &((*_40526_m.alloc)._field_Op));
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\")", 2));
				return;;
			}
		}
		_match_end_1bd9012c1:;
	};
	_1abb0b29b_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1abb0b29b_write((*(_self_))._field_oc, (*(*(_40526_m))._field_Op.alloc)._field_Kind);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1aba378e2_possibleRefExpr(_self_, (*(*(_40526_m))._field_Expr.alloc)._field_Model);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1aba37381_structureLit(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa3244cc_StructLitExprModel> _43633_m) {
	if ((*((*((*(_43633_m))._field_Strct))._field_Decl))._field_Binded) {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	};
	_1abb1dc2b_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_43633_m.alloc)._field_Strct);
	if ((*(*((*(_43633_m))._field_Strct))._field_Decl.alloc)._field_Binded) {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	jule::Bool _4477_inited = false;;
	_julec_label_1bd908592:;
	{
		auto expr = &((*(*(_43633_m))._field_Strct.alloc)._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd90b760:;
		if (it != expr_end) {
			jule::Ptr<_1aa31d7c3_FieldIns> _44915_f = *it;
			{
				{
					auto expr = &((*_43633_m.alloc)._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd90c464:;
					if (it != expr_end) {
						jule::Ptr<_1aa324136_StructArgExprModel> _45016_arg = *it;
						{
							if (((*(_45016_arg))._field_Field == _44915_f)) {
								if (_4477_inited) {
									_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
								};
								_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
								static__1aba4b670_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*(_44915_f))._field_Decl));
								_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
								_1aba378e2_possibleRefExpr(_self_, (*((*_45016_arg.alloc)._field_Expr))._field_Model);
								_4477_inited=true;
								goto _iter_next_1bd90b760;
							};
						}
						_iter_next_1bd90c464:;
						++it;
						goto _iter_begin_1bd90c464;
					}
					_iter_end_1bd90c464:;
				};
				if ((*(*((*(_43633_m))._field_Strct))._field_Decl.alloc)._field_Binded) {
					_4477_inited=false;
					goto _iter_next_1bd90b760;
				};
				if (_4477_inited) {
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				_4477_inited=_1aba42600_handleFieldByDefault(_self_, &(_44915_f));
			}
			_iter_next_1bd90b760:;
			++it;
			goto _iter_begin_1bd90b760;
		}
		_iter_end_1bd90b760:;
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1aba37639_allocStructure(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa3247c9_AllocStructLitExprModel> _47935_m) {
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	static__1aba4b384_structureIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_47935_m))._field_Lit))._field_Strct));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1aba37381_structureLit(_self_, (*_47935_m.alloc)._field_Lit);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1aba378e2_possibleRefExpr(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Any _48732_expr) {
	{
		auto &_match_expr{ _48732_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bd91514d:;
			{
				jule::Ptr<_1aa3e4d3e_Var> _4904_v = _48732_expr.unsafe_cast_ptr<_1aa3e4d3e_Var>();;
				if ((*(_4904_v))._field_Reference) {
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("(*(", 3));
					_1aba422ae_model(_self_, _48732_expr);
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
					return;;
				};
			}
		}
		_match_end_1bd9150e8:;
	};
	_1aba422ae_model(_self_, _48732_expr);
}



inline void _1aba37d10_castTraitFromTrait(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa324d5c_CastingExprModel>* _50140_m, jule::Ptr<_1aa345047_Trait> _50166_t1, jule::Ptr<_1aa345047_Trait> _50182_t2) {
	_1aba378e2_possibleRefExpr(_self_, (*((*((*(_50140_m))))._field_Expr))._field_Model);
	_1abb0b29b_write((*_self_.alloc)._field_oc, jule::Str::lit(".map(", 5));
	_1abb0d336_pushAndWriteMaskMapper((*(_self_))._field_oc, _50166_t1, _50182_t2);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1aba380b8_casting(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa324d5c_CastingExprModel> _51428_m) {
	{
		
		if (_1aa88dabd_IsAny(&((*(_51428_m))._field_Kind))) {
			_case_begin_1bd919c13:;
			{
				if (_1a601b77d_IsNil((*_51428_m.alloc)._field_ExprKind.ptr())) {
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("jule::Any()", 11));
					return;;
				};
				if ((_1a601d83a_TypeEnum((*(_51428_m))._field_ExprKind) != nullptr)) {
					_1aba378e2_possibleRefExpr(_self_, (*((*_51428_m.alloc)._field_Expr))._field_Model);
					return;;
				};
				jule::I32 _5254_i = _1abb0c962_pushAnyType((*(_self_))._field_oc, (*_51428_m.alloc)._field_ExprKind);;
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("jule::Any(", 10));
				{
					auto &_match_expr{ (*((*(_51428_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1bd91cc16:;
						{
							jule::Ptr<_1a6023763_Prim> _5295_prim = _1a601cd01_Prim((*(_51428_m))._field_ExprKind);;
							if (((_5295_prim != nullptr) && _1a6e769a1_IsInt((*_5295_prim.alloc)._field_Kind))) {
								_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
								_1abb1b498_prim((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _5295_prim);
								_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
								_1aba378e2_possibleRefExpr(_self_, (*(*(_51428_m))._field_Expr.alloc)._field_Model);
								_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1bd91dae6;
							};
							goto _case_begin_1bd91db4b;
						}
					}
					else {
						_case_begin_1bd91db4b:;
						{
							_1aba378e2_possibleRefExpr(_self_, (*(*(_51428_m))._field_Expr.alloc)._field_Model);
						}
					}
					_match_end_1bd91dae6:;
				};
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
				_1abb0b29b_write((*(_self_))._field_oc, _1a6e696ec_Itoa(_5254_i));
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if (_1aa88dabd_IsAny(&((*(_51428_m))._field_ExprKind))) {
			_case_begin_1bd919cac:;
			{
				_1aba378e2_possibleRefExpr(_self_, (*((*_51428_m.alloc)._field_Expr))._field_Model);
				_1abb0b29b_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1a601d087_Sptr((*_51428_m.alloc)._field_Kind.ptr()) != nullptr)) {
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1abb20975_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1a601d087_Sptr((*(_51428_m))._field_Kind)))._field_Elem);
				} else {
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1abb20975_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_51428_m.alloc)._field_Kind);
				};
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_1adc505db_Production))) {
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1abb0d5de_locInfo((*(_self_))._field_oc, &((*_51428_m.alloc)._field_Token));
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("&__jule_any_type", 16));
				_1abb0b29b_write((*(_self_))._field_oc, _1a6e696ec_Itoa(_1abb0c962_pushAnyType((*(_self_))._field_oc, (*_51428_m.alloc)._field_Kind)));
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1a601d31d_Ptr((*(_51428_m))._field_ExprKind.ptr()) != nullptr) || (_1a601d31d_Ptr((*_51428_m.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd919d23:;
			{
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1abb20975_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_51428_m.alloc)._field_Kind);
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
				_1aba378e2_possibleRefExpr(_self_, (*((*_51428_m.alloc)._field_Expr))._field_Model);
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if ((_1a601e60a_Trait((*(_51428_m))._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1bd919d89:;
			{
				if ((_1a601e60a_Trait((*_51428_m.alloc)._field_Kind.ptr()) != nullptr)) {
					_1aba37d10_castTraitFromTrait(_self_, &(_51428_m), _1a601e60a_Trait((*(_51428_m))._field_Kind), _1a601e60a_Trait((*(_51428_m))._field_ExprKind));
					return;;
				};
				_1aba378e2_possibleRefExpr(_self_, (*((*_51428_m.alloc)._field_Expr))._field_Model);
				_1abb0b29b_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1a601d087_Sptr((*(_51428_m))._field_Kind) != nullptr)) {
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1abb20975_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1a601d087_Sptr((*(_51428_m))._field_Kind)))._field_Elem);
				} else {
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1abb20975_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_51428_m.alloc)._field_Kind);
				};
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_1adc505db_Production))) {
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1abb0d5de_locInfo((*(_self_))._field_oc, &((*_51428_m.alloc)._field_Token));
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("(jule::Trait::Type*)&", 21));
				static__1aba4a9c1_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1a601e60a_Trait((*(_51428_m))._field_ExprKind));
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
				_1abb0b29b_write((*(_self_))._field_oc, _1a6e696ec_Itoa(_1aa891b15_FindTraitTypeOffset(_1a601e60a_Trait((*(_51428_m))._field_ExprKind), (*_51428_m.alloc)._field_Kind)));
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1a601e60a_Trait((*(_51428_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd919e00:;
			{
				_1abb20975_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_51428_m.alloc)._field_Kind);
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1aba378e2_possibleRefExpr(_self_, (*((*_51428_m.alloc)._field_Expr))._field_Model);
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
				static__1aba4a9c1_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1a601e60a_Trait((*(_51428_m))._field_Kind));
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
				_1abb0b29b_write((*(_self_))._field_oc, _1a6e696ec_Itoa(_1aa891b15_FindTraitTypeOffset(_1a601e60a_Trait((*(_51428_m))._field_Kind), (*_51428_m.alloc)._field_ExprKind)));
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1bd919a8c:;
	};
	jule::Ptr<_1a6023763_Prim> _6113_prim = _1a601cd01_Prim((*(_51428_m))._field_Kind.ptr());;
	jule::Ptr<_1a6023763_Prim> _6123_eprim = _1a601cd01_Prim((*_51428_m.alloc)._field_ExprKind.ptr());;
	if ((((_6123_eprim != nullptr) && (_6113_prim != nullptr)) && _1a6026c2d_IsStr(_6113_prim))) {
		if (_1a602518d_IsU8(_6123_eprim)) {
			_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_byte(", 21));
		} else {
			_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_rune(", 21));
		};
		_1aba378e2_possibleRefExpr(_self_, (*((*_51428_m.alloc)._field_Expr))._field_Model);
		_1abb0b29b_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
	_1abb20975_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_51428_m.alloc)._field_Kind);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1aba378e2_possibleRefExpr(_self_, (*(*(_51428_m))._field_Expr.alloc)._field_Model);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1aba38629_args(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32570e_FnCallExprModel>* _64226_m) {
	jule::I32 _6437_j = 0LL;;
	if (((((*((*((*(_64226_m))))._field_Func))._field_Owner != nullptr) && (!((*((*(*((*(_64226_m))))._field_Func.alloc)._field_Decl))._field_Statically))) || (((*(*((*(_64226_m))))._field_Func.alloc)._field_Params.len() > 0LL) && _1aa330241_IsSelf((*((*((*((*(_64226_m))))._field_Func))._field_Params[0LL]))._field_Decl.ptr())))) {
		(_6437_j)++;
	};
	{
		auto expr = &((*((*(_64226_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd94b261:;
		if (it != expr_end) {
			jule::I32 _6487_i = it - expr->begin();
			jule::Any _64810_arg = *it;
			{
				jule::Ptr<_1aa33351e_ParamIns> _6494_p = (*(*((*(_64226_m))))._field_Func.alloc)._field_Params[_6437_j];;
				if ((((*(_6494_p))._field_Decl != nullptr) && (*(*(_6494_p))._field_Decl.alloc)._field_Reference)) {
					{
						auto &_match_expr{ _64810_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1bd94e055:;
							{
								jule::Ptr<_1aa3e4d3e_Var> _6536_v = _64810_arg.unsafe_cast_ptr<_1aa3e4d3e_Var>();;
								if ((*(_6536_v))._field_Reference) {
									_1aba422ae_model(_self_, _64810_arg);
									goto _julec_label_1bd94d96c;
								};
							}
						}
						_match_end_1bd94e000:;
					};
					_1abb0b29b_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
					_1aba422ae_model(_self_, _64810_arg);
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
					goto _julec_label_1bd94d96c;
				};
				_1aba378e2_possibleRefExpr(_self_, _64810_arg);
				_julec_label_1bd94d96c:;
				if ((((*((*(_64226_m))))._field_Args.len() - _6487_i) > 1LL)) {
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				(_6437_j)++;
			}
			_iter_next_1bd94b261:;
			++it;
			_6487_i++;
			goto _iter_begin_1bd94b261;
		}
		_iter_end_1bd94b261:;
	};
}



inline void _1aba388d2_modelForCall(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Any _67333_expr) {
	{
		auto &_match_expr{ _67333_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bd953d5c:;
			{
				_1aba3be57_funcIns(_self_, _67333_expr.cast_ptr<_1aa334597_FnIns>(&__jule_any_type7));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1bd953bb4:;
			{
				jule::Ptr<_1aa32837c_StructSubIdentExprModel> _6798_ssie = _67333_expr.unsafe_cast_ptr<_1aa32837c_StructSubIdentExprModel>();;
				if (((*(_6798_ssie))._field_Method != nullptr)) {
					_1aba3be57_funcIns(_self_, (*_6798_ssie.alloc)._field_Method);
					return;;
				};
			}
		}
		_match_end_1bd953ce6:;
	};
	_1aba378e2_possibleRefExpr(_self_, _67333_expr);
}



inline void _1aba38b8a_pushCallInf(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32570e_FnCallExprModel>* _68829_m) {
	if ((_1adc505db_Production || (!((*((*((*(_68829_m))))._field_Func))._field_Anon)))) {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		return;;
	};
	if ((*(*((*(_68829_m))))._field_Func.alloc)._field_Anon) {
		{
			auto &_match_expr{ (*((*(_68829_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type101) {
				_case_begin_1bd9578bb:;
				{
					if ((*((*((*((*((*((*(_68829_m))))._field_Expr.unsafe_cast_ptr<_1aa32837c_StructSubIdentExprModel>()))._field_Field))._field_Decl))._field_Owner))._field_Binded) {
						_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
						return;;
					};
				}
			}
			_match_end_1bd957866:;
		};
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(".call", 5));
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("(\"", 2));
	_1abb0d5de_locInfo((*(_self_))._field_oc, &((*((*(_68829_m))))._field_Token));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	if (((*((*(_68829_m))))._field_Args.len() != 0LL)) {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	};
}



inline jule::Bool _1aba38ecb_isWrapped(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32570e_FnCallExprModel>* _71131_m) {
	if ((((!(_1aa335a60_IsBuiltin((*((*(_71131_m))))._field_Func.ptr()))) && ((*((*(*((*(_71131_m))))._field_Func.alloc)._field_Decl))._field_Params.len() > 0LL)) && _1aa330241_IsSelf((*((*((*((*(_71131_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_71131_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type101) {
				_case_begin_1bd95c629:;
				{
					jule::Ptr<_1aa32837c_StructSubIdentExprModel> _7159_ssie = (*((*(_71131_m))))._field_Expr.unsafe_cast_ptr<_1aa32837c_StructSubIdentExprModel>();;
					{
						
						if (_1aa3304c7_IsRef((*((*((*((*(_71131_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()) || (_1a601d087_Sptr((*((*(_7159_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1bd95e373:;
							{
								goto _match_end_1bd95d570;
							}
						}
						else {
							_case_begin_1bd95d5d6:;
							{
								if ((_1a601e374_Struct((*((*(_7159_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									if ((!((*(*(_7159_ssie))._field_Expr.alloc)._field_Lvalue))) {
										_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("({ auto _wrap_copy = ", 21));
										_1aba422ae_model(_self_, (*(*(_7159_ssie))._field_Expr.alloc)._field_Model);
										_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1bd95d570:;
					};
				}
			}
			_match_end_1bd95c5c4:;
		};
	};
	return false;;
}



inline jule::Bool _1aba3931c_writeReceiver(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Any _73534_m) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ _73534_m };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1bd963d8e:;
			{
				_1aba378e2_possibleRefExpr(_self_, (*((*(_73534_m.unsafe_cast_ptr<_1aa323b08_UnaryExprModel>()))._field_Expr))._field_Model);
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1bd96408c:;
			{
				_1aba378e2_possibleRefExpr(_self_, (*((*((*(_73534_m.unsafe_cast_ptr<_1aa60090c_UnsafeDerefExprModel>()))._field_Base))._field_Expr))._field_Model);
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1bd964026:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:744:4"));;
			}
		}
		_match_end_1bd963ec1:;
	};
}



inline void _1aba395c5_pureFuncCall(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32570e_FnCallExprModel>* _74834_m) {
	jule::Bool _7493_wrapped = _1aba38ecb_isWrapped(_self_, _74834_m);;
	_1aba388d2_modelForCall(_self_, (*((*(_74834_m))))._field_Expr);
	if ((!(_1aa335a60_IsBuiltin((*((*(_74834_m))))._field_Func.ptr())))) {
		if (((*((*(*((*(_74834_m))))._field_Func.alloc)._field_Decl))._field_Binded && ((*(*((*(_74834_m))))._field_Func.alloc)._field_Generics.len() > 0LL))) {
			if ((!(_1aa890c57_HasDirective(&((*(*((*((*(_74834_m))))._field_Func))._field_Decl.alloc)._field_Directives), jule::Str::lit("cdef", 4))))) {
				_1abb0b29b_write((*_self_.alloc)._field_oc, jule::Str::lit("<", 1));
				{
					auto expr = &((*(*((*(_74834_m))))._field_Func.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd96827d:;
					if (it != expr_end) {
						jule::I32 _75511_i = it - expr->begin();
						jule::Ptr<_1a6018c64_InsGeneric> _75518_g = *it;
						{
							_1abb20975_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_75518_g))._field_Kind);
							if ((((*(*((*(_74834_m))))._field_Func.alloc)._field_Generics.len() - _75511_i) > 1LL)) {
								_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
							};
						}
						_iter_next_1bd96827d:;
						++it;
						_75511_i++;
						goto _iter_begin_1bd96827d;
					}
					_iter_end_1bd96827d:;
				};
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(">", 1));
			};
		};
	};
	_1aba38b8a_pushCallInf(_self_, _74834_m);
	if (((*(*((*(_74834_m))))._field_Func.alloc)._field_AsAnon && (!((*(*((*(_74834_m))))._field_Func.alloc)._field_Anon)))) {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		if (((*((*(_74834_m))))._field_Args.len() > 0LL)) {
			_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		};
	};
	if ((((!(_1aa335a60_IsBuiltin((*((*(_74834_m))))._field_Func))) && ((*(*((*((*(_74834_m))))._field_Func))._field_Decl.alloc)._field_Params.len() > 0LL)) && _1aa330241_IsSelf((*((*((*((*(_74834_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_74834_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type101) {
				_case_begin_1bd96ee22:;
				{
					jule::Ptr<_1aa32837c_StructSubIdentExprModel> _7799_ssie = (*((*(_74834_m))))._field_Expr.unsafe_cast_ptr<_1aa32837c_StructSubIdentExprModel>();;
					{
						
						if (_1aa3304c7_IsRef((*((*((*((*(_74834_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr())) {
							_case_begin_1bd974256:;
							{
								_1aba3931c_writeReceiver(_self_, (*((*(_7799_ssie))._field_Expr))._field_Model);
							}
						}
						else if ((_1a601d087_Sptr((*((*(_7799_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1bd9757c9:;
							{
								jule::Bool _7866_safe = _1aba3931c_writeReceiver(_self_, (*(*(_7799_ssie))._field_Expr.alloc)._field_Model);;
								if (_7866_safe) {
									_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(".ptr(", 5));
									if ((!(_1adc505db_Production))) {
										_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
										_1abb0d5de_locInfo((*(_self_))._field_oc, &((*((*(_74834_m))))._field_Token));
										_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
									};
									_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								};
							}
						}
						else {
							_case_begin_1bd970e56:;
							{
								if ((_1a601e374_Struct((*((*(_7799_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ (*((*(_7799_ssie))._field_Expr))._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_1bd971781:;
											{
												jule::Ptr<_1aa3e4d3e_Var> _8008_v = (*((*(_7799_ssie))._field_Expr))._field_Model.unsafe_cast_ptr<_1aa3e4d3e_Var>();;
												if ((*(_8008_v))._field_Reference) {
													goto _match_end_1bd971c59;
												};
												goto _case_begin_1bd971cae;
											}
										}
										else {
											_case_begin_1bd971cae:;
											{
												_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
											}
										}
										_match_end_1bd971c59:;
									};
								};
								if (_7493_wrapped) {
									_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("_wrap_copy", 10));
								} else if ((_1a601d31d_Ptr((*((*(_7799_ssie))._field_Expr))._field_Kind) == nullptr)) {
									_1aba422ae_model(_self_, (*(*(_7799_ssie))._field_Expr.alloc)._field_Model);
								} else {
									_1aba378e2_possibleRefExpr(_self_, (*((*((*(*(_7799_ssie))._field_Expr.alloc)._field_Model.cast_ptr<_1aa323b08_UnaryExprModel>(&__jule_any_type113)))._field_Expr))._field_Model);
								};
							}
						}
						_match_end_1bd970de0:;
					};
					if (((*((*(_74834_m))))._field_Args.len() > 0LL)) {
						_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type100) {
				_case_begin_1bd96ead1:;
				{
					_1aba378e2_possibleRefExpr(_self_, (*((*((*(_74834_m))))._field_Expr.unsafe_cast_ptr<_1aa3279db_TraitSubIdentExprModel>()))._field_Expr);
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(".data", 5));
					if (((*((*(_74834_m))))._field_Args.len() > 0LL)) {
						_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			_match_end_1bd96edab:;
		};
	};
	_1aba38629_args(_self_, _74834_m);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if (_7493_wrapped) {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	};
}



inline void _1aba3987d_coFuncCall(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32570e_FnCallExprModel>* _83832_m) {
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1abb0b752_addIndent((*(_self_))._field_oc);
	_1ed486d49_StrBuilder _8417_head = static__1ed487146_New(32LL);;
	_1ed4909ac_WriteStr(&_8417_head, jule::Str::lit("std::thread([", 13));
	if (((*((*((*(_83832_m))))._field_Func))._field_Owner != nullptr)) {
		_1ed4909ac_WriteStr(&_8417_head, jule::Str::lit("_self_", 6));
		if (((*((*(_83832_m))))._field_Args.len() > 0LL)) {
			_1ed4909ac_WriteStr(&_8417_head, jule::Str::lit(", ", 2));
		};
	};
	{
		auto expr = &((*((*(_83832_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd983de2:;
		if (it != expr_end) {
			jule::I32 _8497_i = it - expr->begin();
			jule::Any _84910_arg = *it;
			{
				if ((_8497_i > 0LL)) {
					_1ed4909ac_WriteStr(&_8417_head, jule::Str::lit(", ", 2));
				};
				{
					auto &_match_expr{ _84910_arg };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1bd984b5c:;
						{
							jule::Ptr<_1aa3e4d3e_Var> _8559_v = _84910_arg.unsafe_cast_ptr<_1aa3e4d3e_Var>();;
							static__1aba4b95b_var(&(_8417_head), _8559_v);
							goto _iter_next_1bd983de2;
						}
					}
					_match_end_1bd984b07:;
				};
				jule::Str _8594_name = (jule::Str::lit("_co_arg_", 8) + _1a6e696ec_Itoa(_8497_i));;
				_1ed4909ac_WriteStr(&_8417_head, _8594_name);
				_1abb0bb4d_indent((*(_self_))._field_oc);
				_1abb20975_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(*((*(_83832_m))))._field_Func.alloc)._field_Params[_8497_i]))._field_Kind);
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				if ((*((*((*((*((*(_83832_m))))._field_Func))._field_Params[_8497_i]))._field_Decl))._field_Reference) {
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
				};
				_1abb0b29b_write((*(_self_))._field_oc, _8594_name);
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1aba378e2_possibleRefExpr(_self_, _84910_arg);
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				jule::Any _8714_argS = jule::Any(_8594_name, &__jule_any_type4);;
				(*((*(_83832_m))))._field_Args[_8497_i]=(*(((jule::Any*)((&(_8714_argS))))));
			}
			_iter_next_1bd983de2:;
			++it;
			_8497_i++;
			goto _iter_begin_1bd983de2;
		}
		_iter_end_1bd983de2:;
	};
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1ed490704_Write(&(*(*(_self_))._field_oc.alloc)._field_Buf, _1ed491c55_Buf(&_8417_head));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("](void) mutable -> void {\n", 26));
	_1abb0b752_addIndent((*(_self_))._field_oc);
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1aba395c5_pureFuncCall(_self_, _83832_m);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1abb0b950_doneIndent((*(_self_))._field_oc);
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("}).detach();\n", 13));
	_1abb0b950_doneIndent((*(_self_))._field_oc);
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1aba39be1_writeUseExpr(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa334597_FnIns>* _88934_f, jule::Ptr<_1aa44cc98_Data> _88949_d) {
	if ((_1a601eb27_Tup((*(_88949_d))._field_Kind.ptr()) == nullptr)) {
		_1aba378e2_possibleRefExpr(_self_, (*_88949_d.alloc)._field_Model);
		_1abb0b29b_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
		return;;
	};
	jule::Ptr<_1aa328de9_TupleExprModel> _8957_tup = (*_88949_d.alloc)._field_Model.cast_ptr<_1aa328de9_TupleExprModel>(&__jule_any_type84);;
	_1abb2524e_tup((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _1a601eb27_Tup((*((*(_88934_f))))._field_Result.ptr()));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	{
		auto expr = &((*_8957_tup.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd993990:;
		if (it != expr_end) {
			jule::I32 _8987_i = it - expr->begin();
			jule::Ptr<_1aa44cc98_Data> _89810_data = *it;
			{
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
				_1abb0b29b_write((*(_self_))._field_oc, _1a6e696ec_Itoa(_8987_i));
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
				_1aba378e2_possibleRefExpr(_self_, (*(_89810_data))._field_Model);
				if ((((*(_8957_tup))._field_Datas.len() - _8987_i) > 1LL)) {
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1bd993990:;
			++it;
			_8987_i++;
			goto _iter_begin_1bd993990;
		}
		_iter_end_1bd993990:;
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
}



inline void _1aba39e99_funcCall(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32570e_FnCallExprModel> _91029_m) {
	if ((*(_91029_m))._field_IsCo) {
		_1aba3987d_coFuncCall(_self_, &(_91029_m));
		return;;
	};
	if (((_1aa335a60_IsBuiltin((*_91029_m.alloc)._field_Func.ptr()) || (!((*((*(*(_91029_m))._field_Func.alloc)._field_Decl))._field_Exceptional))) || (((*_91029_m.alloc)._field_Except != nullptr) && ((*(*(_91029_m))._field_Except.alloc)._field_Stmts.len() == 0LL)))) {
		_1aba395c5_pureFuncCall(_self_, &(_91029_m));
		return;;
	};
	_1abb0b29b_write((*_self_.alloc)._field_oc, jule::Str::lit("({\n", 3));
	_1abb0b752_addIndent((*(_self_))._field_oc);
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("auto except = ", 14));
	_1aba395c5_pureFuncCall(_self_, &(_91029_m));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1abb0bb4d_indent((*(_self_))._field_oc);
	if (((*_91029_m.alloc)._field_Except != nullptr)) {
		if ((((*(*(_91029_m))._field_Func.alloc)._field_Result == nullptr) || (!((*_91029_m.alloc)._field_Assigned)))) {
			_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) ", 18));
			_1aba2e169_scope((*(*(_self_))._field_oc.alloc)._field_sc, (*_91029_m.alloc)._field_Except);
			_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		} else {
			jule::Bool _9385_forwarded = _1aa88d4e6_IsForwarded(&((*_91029_m.alloc)._field_Except));;
			_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("(except.ok()) ? (except.result) : (", 35));
			if (_9385_forwarded) {
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
			};
			jule::Any _9439_stmt = (*(*(_91029_m))._field_Except.alloc)._field_Stmts[((*(*(_91029_m))._field_Except.alloc)._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _9439_stmt };
				
				if (_match_expr.type == &__jule_any_type31) {
					_case_begin_1bd9a25b4:;
					{
						((*((*(_91029_m))._field_Except))._field_Stmts).mut_slice(0LL, ((*((*(_91029_m))._field_Except))._field_Stmts.len() - 1LL));;
						_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
						_1abb0b752_addIndent((*(_self_))._field_oc);
						_1aba2ddb1_scopeStmts((*(*(_self_))._field_oc.alloc)._field_sc, &((*_91029_m.alloc)._field_Except));
						_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1abb0bb4d_indent((*(_self_))._field_oc);
						_1aba39be1_writeUseExpr(_self_, &((*_91029_m.alloc)._field_Func), _9439_stmt.cast_ptr<_1aa44cc98_Data>(&__jule_any_type31));
						_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1abb0b950_doneIndent((*(_self_))._field_oc);
						_1abb0bb4d_indent((*(_self_))._field_oc);
						_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					}
				}
				else {
					_case_begin_1bd9a3ac1:;
					{
						_1aba2e169_scope((*(*(_self_))._field_oc.alloc)._field_sc, (*_91029_m.alloc)._field_Except);
					}
				}
				_match_end_1bd9a3a6b:;
			};
			if (_9385_forwarded) {
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				_1aba4347a_initExpr(_self_, (*(*(_91029_m))._field_Func.alloc)._field_Result);
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(";}", 2));
			};
			_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
		};
		_1abb0b950_doneIndent((*(_self_))._field_oc);
	} else {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1abb0d5de_locInfo((*(_self_))._field_oc, &((*_91029_m.alloc)._field_Token));
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\"));\n", 5));
		if ((!(_1aa331a6c_IsVoid((*((*(_91029_m))._field_Func))._field_Decl)))) {
			_1abb0bb4d_indent((*(_self_))._field_oc);
			_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("(except.result);\n", 17));
		};
		_1abb0b950_doneIndent((*(_self_))._field_oc);
	};
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1aba3a252_slice(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa325ad8_SliceExprModel> _98326_m) {
	if (((*(_98326_m))._field_Elems.len() == 0LL)) {
		_1abb1cd7e_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_98326_m.alloc)._field_ElemKind);
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1abb1cd7e_asSlice((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_98326_m.alloc)._field_ElemKind);
	jule::Str _9913_size = _1a6e696ec_Itoa((*_98326_m.alloc)._field_Elems.len());;
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1abb0b29b_write((*(_self_))._field_oc, _9913_size);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1abb0b29b_write((*(_self_))._field_oc, _9913_size);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("); auto ", 8));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(".begin(); ", 10));
	{
		auto expr = &((*_98326_m.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd9b74b9:;
		if (it != expr_end) {
			jule::I32 _10017_i = it - expr->begin();
			{
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("++) = ", 6));
				_1aba378e2_possibleRefExpr(_self_, (*(_98326_m))._field_Elems[_10017_i]);
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1bd9b74b9:;
			++it;
			_10017_i++;
			goto _iter_begin_1bd9b74b9;
		}
		_iter_end_1bd9b74b9:;
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
}



inline void _1aba3a50a_indexing(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32608e_IndexingExprModel> _101229_m) {
	{
		auto &_match_expr{ (*((*(_101229_m))._field_Expr))._field_Model };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1bd9bb9eb:;
			{
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::at(", 14));
				if ((!(_1adc505db_Production))) {
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1abb0d5de_locInfo((*(_self_))._field_oc, &((*(_101229_m))._field_Token));
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("reinterpret_cast<const jule::U8*>(", 34));
				jule::Str _10234_s = _1a6e79740_ReadStr((*((*(_101229_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1a6e77584_Const>().ptr());;
				_1aba44239_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _10234_s);
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
				_1abb0b29b_write((*(_self_))._field_oc, _1a6e696ec_Itoa(_10234_s.len()));
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1aba378e2_possibleRefExpr(_self_, (*((*_101229_m.alloc)._field_Index))._field_Model);
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1bd9bb996:;
	};
	{
		
		if ((_1a601e891_Map((*((*_101229_m.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bd9c584b:;
			{
				;
				;
				jule::Ptr<_1a6029406_Map> _10388__map = _1a601e891_Map((*((*(_101229_m))._field_Expr))._field_Kind);;
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
				_1abb20975_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_10388__map))._field_Val);
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("__lookup_val", 12));
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("jule::Bool", 10));
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("__lookup_ok", 11));
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
				_1aba378e2_possibleRefExpr(_self_, (*(*(_101229_m))._field_Expr.alloc)._field_Model);
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(".lookup(", 8));
				_1aba378e2_possibleRefExpr(_self_, (*(*(_101229_m))._field_Index.alloc)._field_Model);
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(", &", 3));
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("__lookup_val", 12));
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(", &", 3));
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("__lookup_ok", 11));
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
				if (_1abb27828_ableToInit(&((*_10388__map.alloc)._field_Val))) {
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("if (!", 5));
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("__lookup_ok", 11));
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("__lookup_val", 12));
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
					_1aba4347a_initExpr(_self_, (*_10388__map.alloc)._field_Val);
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
				};
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("__lookup_val", 12));
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
			}
		}
		else if (_1adc505db_Production || (_1a601d31d_Ptr((*((*_101229_m.alloc)._field_Expr))._field_Kind.ptr()) != nullptr) || _1aa88d804_IsExprComesFromBind(&((*_101229_m.alloc)._field_Expr))) {
			_case_begin_1bd9c2e42:;
			{
				_1aba378e2_possibleRefExpr(_self_, (*(*(_101229_m))._field_Expr.alloc)._field_Model);
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("[", 1));
				_1aba378e2_possibleRefExpr(_self_, (*(*(_101229_m))._field_Index.alloc)._field_Model);
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1bd9c2d43:;
			{
				_1aba378e2_possibleRefExpr(_self_, (*((*_101229_m.alloc)._field_Expr))._field_Model);
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(".at(\"", 5));
				_1abb0d5de_locInfo((*(_self_))._field_oc, &((*_101229_m.alloc)._field_Token));
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				_1aba378e2_possibleRefExpr(_self_, (*(*(_101229_m))._field_Index.alloc)._field_Model);
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1bd9c0280:;
	};
}



inline void _1aba3a7b3_unsafeIndexing(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa5ee983_UnsafeIndexingExprModel> _108535_m) {
	_1aba378e2_possibleRefExpr(_self_, (*((*((*(_108535_m))._field_Node))._field_Expr))._field_Model);
	{
		
		if (_1adc505db_Production || (_1a601d31d_Ptr((*(*((*(_108535_m))._field_Node))._field_Expr.alloc)._field_Kind.ptr()) != nullptr) || (_1a601e891_Map((*((*((*(_108535_m))._field_Node))._field_Expr))._field_Kind) != nullptr)) {
			_case_begin_1bd9d7594:;
			{
				_1abb0b29b_write((*_self_.alloc)._field_oc, jule::Str::lit("[", 1));
				_1aba378e2_possibleRefExpr(_self_, (*((*(*(_108535_m))._field_Node.alloc)._field_Index))._field_Model);
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1bd9d65e8:;
			{
				_1abb0b29b_write((*_self_.alloc)._field_oc, jule::Str::lit(".__at(", 6));
				_1aba378e2_possibleRefExpr(_self_, (*((*(*(_108535_m))._field_Node.alloc)._field_Index))._field_Model);
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1bd9d71dc:;
	};
}



inline void _1aba3aa6b_anonFunc(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa326545_AnonFnExprModel> _110229_m) {
	jule::Bool _11033_closure = _1aa88de0e_IsClosure(&(_110229_m));;
	jule::Str _11043_ident = _1abb0c621_pushAnonFn((*(_self_))._field_oc, &(_110229_m));;
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("jule::__new_closure<", 20));
	_1abb2029e_anonFunc((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_110229_m))._field_Func);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(">((void*)", 9));
	_1abb0b29b_write((*(_self_))._field_oc, _11043_ident);
	if (_11033_closure) {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(", jule::Ptr<", 12));
		_1abb0b29b_write((*(_self_))._field_oc, _11043_ident);
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("_ctx", 4));
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(">::make(", 8));
		_1abb0b29b_write((*(_self_))._field_oc, _11043_ident);
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("_ctx{", 5));
		{
			auto expr = &((*_110229_m.alloc)._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd9e1dc8:;
			if (it != expr_end) {
				jule::I32 _11169_i = it - expr->begin();
				jule::Ptr<_1aa3e4d3e_Var> _111616_v = *it;
				{
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
					static__1aba4b95b_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _111616_v);
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1aba36a67_var(_self_, _111616_v);
					if ((((*_110229_m.alloc)._field_Captured.len() - _11169_i) > 1LL)) {
						_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1bd9e1dc8:;
				++it;
				_11169_i++;
				goto _iter_begin_1bd9e1dc8;
			}
			_iter_end_1bd9e1dc8:;
		};
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("}).as<jule::Uintptr>(), ", 24));
		_1abb0b29b_write((*(_self_))._field_oc, _11043_ident);
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("_ctx_handler)", 13));
	} else {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(", nullptr, nullptr)", 19));
	};
}



inline void _1aba3ad24_mapExpr(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa326dc5_MapExprModel> _113328_m) {
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("jule::Map<", 10));
	_1abb20975_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_113328_m))._field_KeyKind);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1abb20975_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_113328_m.alloc)._field_ValKind);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(">({", 3));
	if (((*_113328_m.alloc)._field_Entries.len() > 0LL)) {
		{
			auto expr = &((*_113328_m.alloc)._field_Entries);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd9ea2aa:;
			if (it != expr_end) {
				jule::I32 _11409_i = it - expr->begin();
				jule::Ptr<_1aa32691e_KeyValPairExprModel> _114016_pair = *it;
				{
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
					_1aba378e2_possibleRefExpr(_self_, (*(_114016_pair))._field_Key);
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					_1aba378e2_possibleRefExpr(_self_, (*_114016_pair.alloc)._field_Val);
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					if ((((*_113328_m.alloc)._field_Entries.len() - _11409_i) > 1LL)) {
						_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1bd9ea2aa:;
				++it;
				_11409_i++;
				goto _iter_begin_1bd9ea2aa;
			}
			_iter_end_1bd9ea2aa:;
		};
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1aba3b0cc_slicing(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa327458_SlicingExprModel> _115428_m) {
	_1aba378e2_possibleRefExpr(_self_, (*(_115428_m))._field_Expr);
	_1abb0b29b_write((*_self_.alloc)._field_oc, jule::Str::lit(".slice(", 7));
	if ((!(_1adc505db_Production))) {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1abb0d5de_locInfo((*(_self_))._field_oc, &((*_115428_m.alloc)._field_Token));
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1aba378e2_possibleRefExpr(_self_, (*_115428_m.alloc)._field_Left);
	if (((*_115428_m.alloc)._field_Right != nullptr)) {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1aba378e2_possibleRefExpr(_self_, (*_115428_m.alloc)._field_Right);
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1aba3b385_traitSub(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa3279db_TraitSubIdentExprModel> _117029_m) {
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
	static__1aba4a9c1_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_117029_m))._field_Trt);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("MptrData", 8));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("*)", 2));
	_1aba378e2_possibleRefExpr(_self_, (*_117029_m.alloc)._field_Expr);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(".safe_type(", 11));
	if ((!(_1adc505db_Production))) {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1abb0d5de_locInfo((*(_self_))._field_oc, &((*_117029_m.alloc)._field_Token));
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("))->", 4));
	static__1aba4a3e9_func(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*_117029_m.alloc)._field_Method));
}



inline void _1aba3b63d_structureSub(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32837c_StructSubIdentExprModel> _118633_m) {
	_1aba378e2_possibleRefExpr(_self_, (*((*(_118633_m))._field_Expr))._field_Model);
	if (((*_118633_m.alloc)._field_Field == nullptr)) {
		return;;
	};
	_1abb0b29b_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	static__1aba4b670_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*_118633_m.alloc)._field_Field))._field_Decl));
}



inline void _1aba3b8e6_array(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa328aec_ArrayExprModel> _119526_m) {
	if ((((*((*(_119526_m))._field_Kind))._field_N == 0LL) || (((*_119526_m.alloc)._field_Elems.len() == 0LL) && (!(_1abb27828_ableToInit(&((*(*(_119526_m))._field_Kind.alloc)._field_Elem))))))) {
		_1abb1e08e_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_119526_m.alloc)._field_Kind);
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	if ((((*_119526_m.alloc)._field_Elems.len() == 2LL) && ((*(_119526_m))._field_Elems[1LL] == nullptr))) {
		_1abb1e08e_array((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_119526_m.alloc)._field_Kind);
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1aba378e2_possibleRefExpr(_self_, (*(_119526_m))._field_Elems[0LL]);
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1abb1e08e_array((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_119526_m.alloc)._field_Kind);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("(); auto ", 9));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(".begin(); ", 10));
	if (((*_119526_m.alloc)._field_Elems.len() != (*(*(_119526_m))._field_Kind.alloc)._field_N)) {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("const auto ", 11));
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("_end = ", 7));
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(".end(); ", 8));
	};
	{
		auto expr = &((*_119526_m.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bda1aaa0:;
		if (it != expr_end) {
			jule::I32 _12287_i = it - expr->begin();
			{
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("++) = ", 6));
				_1aba378e2_possibleRefExpr(_self_, (*_119526_m.alloc)._field_Elems[_12287_i]);
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1bda1aaa0:;
			++it;
			_12287_i++;
			goto _iter_begin_1bda1aaa0;
		}
		_iter_end_1bda1aaa0:;
	};
	if ((((*_119526_m.alloc)._field_Elems.len() != (*(*(_119526_m))._field_Kind.alloc)._field_N) && _1abb27828_ableToInit(&((*(*(_119526_m))._field_Kind.alloc)._field_Elem)))) {
		_1aba42b61_fillCollectionByDefault(_self_, &((*(*(_119526_m))._field_Kind.alloc)._field_Elem));
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	return;;
}



inline void _1aba3bb9e_funcInsCommon(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa334597_FnIns> _124534_m) {
	_1abb20612_func((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _124534_m);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1aba3be57_funcIns(_self_, _124534_m);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1aba3be57_funcIns(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa334597_FnIns> _125228_m) {
	if ((((*(_125228_m))._field_Decl != nullptr) && (*(*(_125228_m))._field_Decl.alloc)._field_Binded)) {
		jule::Ptr<_1aa2e9a9b_Directive> _12544_d = _1aa89088e_FindDirective(&((*(*(_125228_m))._field_Decl.alloc)._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_12544_d != nullptr)) {
			_1abb0b554_writeBytes((*(_self_))._field_oc, _1abb18088_concatAllParts((*_12544_d.alloc)._field_Args));
			_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1aba4a6d5_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_125228_m));
}



inline void _1aba3c210_tuple(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa328de9_TupleExprModel> _126326_m) {
	{
		auto expr = &((*_126326_m.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bda26407:;
		if (it != expr_end) {
			jule::I32 _12648_i = it - expr->begin();
			jule::Ptr<_1aa44cc98_Data> _126415_d = *it;
			{
				_1aba378e2_possibleRefExpr(_self_, (*(_126415_d))._field_Model);
				_1abb0b29b_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
				if ((((*(_126326_m))._field_Datas.len() - _12648_i) > 1LL)) {
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1abb0bb4d_indent((*(_self_))._field_oc);
				};
			}
			_iter_next_1bda26407:;
			++it;
			_12648_i++;
			goto _iter_begin_1bda26407;
		}
		_iter_end_1bda26407:;
	};
}



inline void _1aba3c4b8_newCall(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa329a76_BuiltinNewCallExprModel> _127428_m) {
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_1abb20975_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_127428_m))._field_Kind);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	if (((*_127428_m.alloc)._field_Init != nullptr)) {
		_1aba378e2_possibleRefExpr(_self_, (*_127428_m.alloc)._field_Init);
	} else if (_1abb27828_ableToInit(&((*_127428_m.alloc)._field_Kind))) {
		_1aba4347a_initExpr(_self_, (*_127428_m.alloc)._field_Kind);
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1aba3c771_outCall(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa3292c3_BuiltinOutCallExprModel> _128628_m) {
	if (((*(_128628_m))._field_Debug && _1adc505db_Production)) {
		return;;
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("jule::out(", 10));
	_1aba378e2_possibleRefExpr(_self_, (*_128628_m.alloc)._field_Expr);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1aba3ca29_outlnCall(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32969c_BuiltinOutlnCallExprModel> _129530_m) {
	if (((*(_129530_m))._field_Debug && _1adc505db_Production)) {
		return;;
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("jule::outln(", 12));
	_1aba378e2_possibleRefExpr(_self_, (*_129530_m.alloc)._field_Expr);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1aba3ccd2_panicCall(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa329e50_BuiltinPanicCallExprModel> _130430_m) {
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("jule::panic(", 12));
	_1aba378e2_possibleRefExpr(_self_, (*(_130430_m))._field_Expr);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(" + jule::Str(\"\\nlocation: ", 26));
	_1abb0d5de_locInfo((*(_self_))._field_oc, &((*_130430_m.alloc)._field_Token));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1aba3d08a_assertCall(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32a406_BuiltinAssertCallExprModel> _131231_m) {
	if (_1adc505db_Production) {
		return;;
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("if (!(", 6));
	_1aba378e2_possibleRefExpr(_self_, (*(_131231_m))._field_Expr);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")) jule::panic(jule::Str(", 25));
	_1aba44239_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*_131231_m.alloc)._field_Log);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(") + jule::Str(\"\\nlocation: ", 27));
	_1abb0d5de_locInfo((*(_self_))._field_oc, &((*_131231_m.alloc)._field_Token));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1aba3d343_errorCall(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32c00c_BuiltinErrorCallExprModel> _132530_m) {
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	if (_1aa331a6c_IsVoid((*((*(_132530_m))._field_Func))._field_Decl.ptr())) {
		{
			auto &_match_expr{ (*((*(_132530_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1bda382d7:;
				{
					jule::Ptr<_1aa3e4d3e_Var> _13305_v = (*((*(_132530_m))._field_Err))._field_Model.unsafe_cast_ptr<_1aa3e4d3e_Var>();;
					if ((*(_13305_v))._field_Ident.equal("error", 5)) {
						_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=std::move(except.error)}", 53));
						return;;
					};
				}
			}
			_match_end_1bda38282:;
		};
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=jule::Any(", 39));
	} else {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("jule::Exceptional<", 18));
		_1abb25925_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_132530_m))._field_Func))._field_Result));
		{
			auto &_match_expr{ (*((*(_132530_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1bda3c71a:;
				{
					jule::Ptr<_1aa3e4d3e_Var> _13425_v = (*((*(_132530_m))._field_Err))._field_Model.unsafe_cast_ptr<_1aa3e4d3e_Var>();;
					if ((*(_13425_v))._field_Ident.equal("error", 5)) {
						_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(">{.error=except.error}", 22));
						return;;
					};
				}
			}
			_match_end_1bda3c6b5:;
		};
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(">{.error=jule::Any(", 19));
	};
	_1aba378e2_possibleRefExpr(_self_, (*((*(_132530_m))._field_Err))._field_Model);
	jule::I32 _13513_i = _1abb0c962_pushAnyType((*(_self_))._field_oc, (*(*(_132530_m))._field_Err.alloc)._field_Kind);;
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
	_1abb0b29b_write((*(_self_))._field_oc, _1a6e696ec_Itoa(_13513_i));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")}", 2));
}



inline void _1aba3d5eb_copyCall(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32bb33_BuiltinCopyCallExprModel> _135729_m) {
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("jule::copy(", 11));
	_1aba378e2_possibleRefExpr(_self_, (*((*(_135729_m))._field_Dest))._field_Model);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1aba378e2_possibleRefExpr(_self_, (*((*_135729_m.alloc)._field_Src))._field_Model);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1aba3d8a4_lenCall(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32b083_BuiltinLenCallExprModel> _136528_m) {
	_1aba378e2_possibleRefExpr(_self_, (*((*(_136528_m))._field_Expr))._field_Model);
	_1abb0b29b_write((*_self_.alloc)._field_oc, jule::Str::lit(".len()", 6));
}



inline void _1aba3db5c_capCall(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32b380_BuiltinCapCallExprModel> _137028_m) {
	_1aba378e2_possibleRefExpr(_self_, (*((*(_137028_m))._field_Expr))._field_Model);
	_1abb0b29b_write((*_self_.alloc)._field_oc, jule::Str::lit(".cap()", 6));
}



inline void _1aba3de15_deleteCall(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32b759_BuiltinDeleteCallExprModel> _137531_m) {
	_1aba378e2_possibleRefExpr(_self_, (*((*(_137531_m))._field_Dest))._field_Model);
	if (((*_137531_m.alloc)._field_Key != nullptr)) {
		_1abb0b29b_write((*_self_.alloc)._field_oc, jule::Str::lit(".del(", 5));
		_1aba378e2_possibleRefExpr(_self_, (*(*(_137531_m))._field_Key.alloc)._field_Model);
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_1abb0b29b_write((*_self_.alloc)._field_oc, jule::Str::lit(".clear()", 8));
	};
}



inline void _1aba3e1bd_makeCallSlice(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32a8ac_BuiltinMakeCallExprModel>* _138635_m) {
	jule::Ptr<_1a6027c62_Slc> _13877_slice = _1a601dd57_Slc((*((*(_138635_m))))._field_Kind.ptr());;
	jule::Bool _13883_init = _1abb27828_ableToInit(&((*(_13877_slice))._field_Elem));;
	if (_13883_init) {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	};
	_1abb20975_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_138635_m))))._field_Kind);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1aba378e2_possibleRefExpr(_self_, (*((*(_138635_m))))._field_Len);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_138635_m))))._field_Cap != nullptr)) {
		_1aba378e2_possibleRefExpr(_self_, (*((*(_138635_m))))._field_Cap);
	} else {
		_1aba378e2_possibleRefExpr(_self_, (*((*(_138635_m))))._field_Len);
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((!(_13883_init))) {
		return;;
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1aba42e19_initCollection(_self_, &((*_13877_slice.alloc)._field_Elem));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(" __jule_collection; })", 22));
}



inline void _1aba3e476_makeCallStr(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32a8ac_BuiltinMakeCallExprModel>* _141033_m) {
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1aba378e2_possibleRefExpr(_self_, (*((*(_141033_m))))._field_Len);
	if (((*((*(_141033_m))))._field_Cap != nullptr)) {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1aba378e2_possibleRefExpr(_self_, (*((*(_141033_m))))._field_Cap);
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1aba3e72e_makeCall(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32a8ac_BuiltinMakeCallExprModel> _142129_m) {
	if ((_1a601dd57_Slc((*(_142129_m))._field_Kind.ptr()) != nullptr)) {
		_1aba3e1bd_makeCallSlice(_self_, &(_142129_m));
		return;;
	};
	_1aba3e476_makeCallStr(_self_, &(_142129_m));
}



inline void _1aba3e9d7_pushToSlice(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa5eed5c_PushToSliceExprModel> _142932_m) {
	;
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("{ ", 2));
	_1abb1cd7e_asSlice((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_142932_m))._field_Elems))._field_ElemKind);
	jule::Bool _14377_ptr = false;;
	{
		auto &_match_expr{ (*(_142932_m))._field_Dest };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1bda560a2:;
			{
				jule::Ptr<_1aa323b08_UnaryExprModel> _14418_u = (*(_142932_m))._field_Dest.unsafe_cast_ptr<_1aa323b08_UnaryExprModel>();;
				if ((_1a601d31d_Ptr((*((*(_14418_u))._field_Expr))._field_Kind.ptr()) != nullptr)) {
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(" *__jule_push_dest = ", 21));
					_1aba378e2_possibleRefExpr(_self_, (*(*(_14418_u))._field_Expr.alloc)._field_Model);
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
					_14377_ptr=true;
					goto _match_end_1bda57ceb;
				};
				goto _case_begin_1bda57d51;
			}
		}
		else {
			_case_begin_1bda57d51:;
			{
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(" &__jule_push_dest = ", 21));
				_1aba378e2_possibleRefExpr(_self_, (*_142932_m.alloc)._field_Dest);
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
		}
		_match_end_1bda57ceb:;
	};
	if (((*(*(_142932_m))._field_Elems.alloc)._field_Elems.len() == 1LL)) {
		if (_14377_ptr) {
			_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->push(", 23));
		} else {
			_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.push(", 22));
		};
		_1aba378e2_possibleRefExpr(_self_, (*((*(_142932_m))._field_Elems))._field_Elems[0LL]);
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("); }", 4));
		return;;
	};
	if (_14377_ptr) {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.alloc_for_append(", 34));
	};
	_1abb0b29b_write((*(_self_))._field_oc, _1a6e696ec_Itoa((*(*(_142932_m))._field_Elems.alloc)._field_Elems.len()));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
	{
		auto expr = &((*(*(_142932_m))._field_Elems.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bda5e7e7:;
		if (it != expr_end) {
			jule::Any _147515_e = *it;
			{
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest", 16));
				if (_14377_ptr) {
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("->__push(", 9));
				} else {
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(".__push(", 8));
				};
				_1aba378e2_possibleRefExpr(_self_, _147515_e);
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_1bda5e7e7:;
			++it;
			goto _iter_begin_1bda5e7e7;
		}
		_iter_end_1bda5e7e7:;
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1aba3ec90_appendToSlice(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa600236_AppendToSliceExprModel> _148934_m) {
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1aba378e2_possibleRefExpr(_self_, (*(_148934_m))._field_Dest);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(").append(", 9));
	_1aba378e2_possibleRefExpr(_self_, (*_148934_m.alloc)._field_Slice);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1aba40048_appendCall(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32ac86_BuiltinAppendCallExprModel> _149731_m) {
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("jule::append(", 13));
	_1aba378e2_possibleRefExpr(_self_, (*(_149731_m))._field_Dest);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_1aba378e2_possibleRefExpr(_self_, (*_149731_m.alloc)._field_Elements);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1aba40301_sizeof(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32c6b1_SizeofExprModel> _150527_m) {
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("sizeof(", 7));
	_1aba378e2_possibleRefExpr(_self_, (*(_150527_m))._field_Expr);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1aba405a9_alignof(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32c89d_AlignofExprModel> _151128_m) {
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("alignof(", 8));
	_1aba378e2_possibleRefExpr(_self_, (*(_151128_m))._field_Expr);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1aba40862_runeLit(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32cb45_RuneExprModel> _151724_m) {
	if (((*(_151724_m))._field_Code <= 127LL)) {
		_1ed490c65_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\'');
		jule::Str _15208_b = _1aba43b1d_sbtoa(static_cast<jule::U8>((*_151724_m.alloc)._field_Code));;
		if (_15208_b.equal("'", 1)) {
			_1ed490c65_WriteByte(&(*(*(_self_))._field_oc.alloc)._field_Buf, '\\');
		};
		_1ed4909ac_WriteStr(&(*(*(_self_))._field_oc.alloc)._field_Buf, _15208_b);
		_1ed490c65_WriteByte(&(*(*(_self_))._field_oc.alloc)._field_Buf, '\'');
		return;;
	};
	_1aba448bb_itoa(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::I64>((*_151724_m.alloc)._field_Code));
}



inline void _1aba40b1a_structureStatic(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa328723_StructStaticIdentExprModel> _153136_m) {
	static__1aba4a6d5_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &((*(_153136_m))._field_Method));
}



inline void _1aba40dc3_integratedToStr(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32ce42_IntegratedToStrExprModel> _153536_m) {
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("jule::to_str(", 13));
	_1aba378e2_possibleRefExpr(_self_, (*(_153536_m))._field_Expr);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1aba4117b_backendEmit(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32d31b_BackendEmitExprModel> _154132_m) {
	if (((*(_154132_m))._field_Exprs.len() == 0LL)) {
		_1abb0b29b_write((*(_self_))._field_oc, (*_154132_m.alloc)._field_Code);
		return;;
	};
	jule::I32 _15463_n = _1ed491738_Len(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
	jule::Slice<jule::Any> _15477_args = ({ auto __jule_collection = jule::Slice<jule::Any>::alloc((*_154132_m.alloc)._field_Exprs.len(), (*_154132_m.alloc)._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });;
	{
		auto expr = &((*_154132_m.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bda73168:;
		if (it != expr_end) {
			jule::I32 _15488_i = it - expr->begin();
			jule::Any _154815_expr = *it;
			{
				_1aba378e2_possibleRefExpr(_self_, _154815_expr);
				jule::Slice<jule::U8> _15508_buf = _1ed491c55_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
				_15477_args[_15488_i]=jule::Any(static_cast<jule::Str>(_15508_buf.slice(_15463_n)), &__jule_any_type4);
				{
					_1ed49200d_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _15508_buf.slice(0LL, _15463_n));
				};
			}
			_iter_next_1bda73168:;
			++it;
			_15488_i++;
			goto _iter_begin_1bda73168;
		}
		_iter_end_1bda73168:;
	};
	_1abb0b29b_write((*(_self_))._field_oc, _1aa5da61c_Format((*_154132_m.alloc)._field_Code, _15477_args));
}



inline void _1aba41434_free(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa32d618_FreeExprModel> _155725_m) {
	_1aba378e2_possibleRefExpr(_self_, (*(_155725_m))._field_Expr);
	if (_1adc4eed1_RC) {
		_1abb0b29b_write((*_self_.alloc)._field_oc, jule::Str::lit(".dealloc()", 10));
		return;;
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(".__free()", 9));
}



inline void _1aba416dc_strComp(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa5edc6d_StrCompExprModel> _156628_m) {
	if ((*(_156628_m))._field_NotEq) {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("(!", 2));
	};
	jule::Str _15703_s = _1a6e79740_ReadStr((*_156628_m.alloc)._field_Right.ptr());;
	_1aba378e2_possibleRefExpr(_self_, (*_156628_m.alloc)._field_Left);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(".equal(", 7));
	_1aba44239_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _15703_s);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1abb0b29b_write((*(_self_))._field_oc, _1a6e696ec_Itoa(_15703_s.len()));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((*_156628_m.alloc)._field_NotEq) {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1aba41995_emptyCompare(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa5ed476_EmptyCompareExprModel> _158233_m) {
	if ((*(_158233_m))._field_Neg) {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1aba378e2_possibleRefExpr(_self_, (*_158233_m.alloc)._field_Expr);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(").empty()", 9));
}



inline void _1aba41c4d_unsafeDeref(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa60090c_UnsafeDerefExprModel> _159132_m) {
	{
		
		if ((_1a601d087_Sptr((*((*((*(_159132_m))._field_Base))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bda81b27:;
			{
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1aba378e2_possibleRefExpr(_self_, (*(*((*(_159132_m))._field_Base))._field_Expr.alloc)._field_Model);
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(".alloc)", 7));
			}
		}
		else {
			_case_begin_1bda81770:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1598:4"));;
			}
		}
		_match_end_1bda81671:;
	};
}



inline void _1aba42006_unsafeCasting(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa600c09_UnsafeCastingExprModel> _160234_m) {
	{
		
		if (_1aa88dabd_IsAny(&((*((*(_160234_m))._field_Base))._field_ExprKind))) {
			_case_begin_1bda847c8:;
			{
				_1aba378e2_possibleRefExpr(_self_, (*((*(*(_160234_m))._field_Base.alloc)._field_Expr))._field_Model);
				if ((_1a601d087_Sptr((*(*(_160234_m))._field_Base.alloc)._field_Kind.ptr()) != nullptr)) {
					_1abb0b29b_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast_ptr<", 17));
					_1abb20975_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1a601d087_Sptr((*((*(_160234_m))._field_Base))._field_Kind)))._field_Elem);
				} else {
					_1abb0b29b_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast<", 13));
					_1abb20975_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_160234_m))._field_Base.alloc)._field_Kind);
				};
				_1abb0b29b_write((*_self_.alloc)._field_oc, jule::Str::lit(">()", 3));
			}
		}
		else {
			_case_begin_1bda84421:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1615:4"));;
			}
		}
		_match_end_1bda84333:;
	};
}



inline void _1aba422ae_model(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Any _161926_m) {
	{
		auto &_match_expr{ _161926_m };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1bda89e93:;
			{
				_1abb0b29b_write((*(_self_))._field_oc, _161926_m.cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type137) {
			_case_begin_1bda8a13b:;
			{
				_1abb0b29b_write((*(_self_))._field_oc, (*(_161926_m.unsafe_cast_ptr<jule::Str>())));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1bda8a1a2:;
			{
				_1abb20975_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _161926_m.cast_ptr<_1a601a64a_TypeKind>(&__jule_any_type87));
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1bda8a218:;
			{
				_1aba34a43_constant(_self_, _161926_m.cast_ptr<_1a6e77584_Const>(&__jule_any_type20));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bda8a27e:;
			{
				_1aba36a67_var(_self_, _161926_m.cast_ptr<_1aa3e4d3e_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1bda8a2e5:;
			{
				_1aba36d20_structureIns(_self_, _161926_m.cast_ptr<_1aa31e373_StructIns>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bda8a35b:;
			{
				_1aba3bb9e_funcInsCommon(_self_, _161926_m.cast_ptr<_1aa334597_FnIns>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1bda8aeb6:;
			{
				_1aba35d30_unsafeBinary(_self_, (*(_161926_m.unsafe_cast_ptr<_1aa5ee5ed_UnsafeBinaryExprModel>()))._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1bda8b02c:;
			{
				_1aba367ae_binary(_self_, _161926_m.cast_ptr<_1aa32372e_BinaryExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1bda8b093:;
			{
				_1aba370c8_unary(_self_, _161926_m.cast_ptr<_1aa323b08_UnaryExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1bda8b109:;
			{
				_1aba37381_structureLit(_self_, _161926_m.cast_ptr<_1aa3244cc_StructLitExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1bda8b170:;
			{
				_1aba37639_allocStructure(_self_, _161926_m.cast_ptr<_1aa3247c9_AllocStructLitExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1bda8b1d6:;
			{
				_1aba380b8_casting(_self_, _161926_m.cast_ptr<_1aa324d5c_CastingExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1bda8b24c:;
			{
				_1aba39e99_funcCall(_self_, _161926_m.cast_ptr<_1aa32570e_FnCallExprModel>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1bda8b2c4:;
			{
				_1aba3a252_slice(_self_, _161926_m.cast_ptr<_1aa325ad8_SliceExprModel>(&__jule_any_type80));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1bda8b34b:;
			{
				_1aba3b8e6_array(_self_, _161926_m.cast_ptr<_1aa328aec_ArrayExprModel>(&__jule_any_type88));
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1bda8b3c3:;
			{
				_1aba3a7b3_unsafeIndexing(_self_, _161926_m.cast_ptr<_1aa5ee983_UnsafeIndexingExprModel>(&__jule_any_type136));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1bda8b44a:;
			{
				_1aba3a50a_indexing(_self_, _161926_m.cast_ptr<_1aa32608e_IndexingExprModel>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1bda8b4c2:;
			{
				_1aba3aa6b_anonFunc(_self_, _161926_m.cast_ptr<_1aa326545_AnonFnExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1bda8b549:;
			{
				_1aba3ad24_mapExpr(_self_, _161926_m.cast_ptr<_1aa326dc5_MapExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1bda8b5c1:;
			{
				_1aba3b0cc_slicing(_self_, _161926_m.cast_ptr<_1aa327458_SlicingExprModel>(&__jule_any_type95));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1bda8b648:;
			{
				_1aba3b385_traitSub(_self_, _161926_m.cast_ptr<_1aa3279db_TraitSubIdentExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1bda8b6c0:;
			{
				_1aba3b63d_structureSub(_self_, _161926_m.cast_ptr<_1aa32837c_StructSubIdentExprModel>(&__jule_any_type101));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1bda8b747:;
			{
				_1aba3c210_tuple(_self_, _161926_m.cast_ptr<_1aa328de9_TupleExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1bda8b7be:;
			{
				_1aba3c771_outCall(_self_, _161926_m.cast_ptr<_1aa3292c3_BuiltinOutCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1bda8b846:;
			{
				_1aba3ca29_outlnCall(_self_, _161926_m.cast_ptr<_1aa32969c_BuiltinOutlnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1bda8b8bd:;
			{
				_1aba3c4b8_newCall(_self_, _161926_m.cast_ptr<_1aa329a76_BuiltinNewCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1bda8b945:;
			{
				_1aba3ccd2_panicCall(_self_, _161926_m.cast_ptr<_1aa329e50_BuiltinPanicCallExprModel>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1bda8b9bc:;
			{
				_1aba3d08a_assertCall(_self_, _161926_m.cast_ptr<_1aa32a406_BuiltinAssertCallExprModel>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1bda8ba44:;
			{
				_1aba3d343_errorCall(_self_, _161926_m.cast_ptr<_1aa32c00c_BuiltinErrorCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1bda8babb:;
			{
				_1aba3e72e_makeCall(_self_, _161926_m.cast_ptr<_1aa32a8ac_BuiltinMakeCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1bda8bb43:;
			{
				_1aba40048_appendCall(_self_, _161926_m.cast_ptr<_1aa32ac86_BuiltinAppendCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1bda8bbba:;
			{
				_1aba3d5eb_copyCall(_self_, _161926_m.cast_ptr<_1aa32bb33_BuiltinCopyCallExprModel>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1bda8bc42:;
			{
				_1aba3d8a4_lenCall(_self_, _161926_m.cast_ptr<_1aa32b083_BuiltinLenCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1bda8bcb9:;
			{
				_1aba3db5c_capCall(_self_, _161926_m.cast_ptr<_1aa32b380_BuiltinCapCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1bda8bd41:;
			{
				_1aba3de15_deleteCall(_self_, _161926_m.cast_ptr<_1aa32b759_BuiltinDeleteCallExprModel>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1bda8bdb8:;
			{
				_1aba40301_sizeof(_self_, _161926_m.cast_ptr<_1aa32c6b1_SizeofExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1bda8be40:;
			{
				_1aba405a9_alignof(_self_, _161926_m.cast_ptr<_1aa32c89d_AlignofExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1bda8beb7:;
			{
				_1aba40862_runeLit(_self_, _161926_m.cast_ptr<_1aa32cb45_RuneExprModel>(&__jule_any_type86));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1bda8c03e:;
			{
				_1aba40b1a_structureStatic(_self_, _161926_m.cast_ptr<_1aa328723_StructStaticIdentExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1bda8c0b6:;
			{
				_1aba40dc3_integratedToStr(_self_, _161926_m.cast_ptr<_1aa32ce42_IntegratedToStrExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1bda8c13d:;
			{
				_1aba4117b_backendEmit(_self_, _161926_m.cast_ptr<_1aa32d31b_BackendEmitExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1bda8c1b5:;
			{
				_1aba41434_free(_self_, _161926_m.cast_ptr<_1aa32d618_FreeExprModel>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1bda8c23c:;
			{
				_1aba416dc_strComp(_self_, _161926_m.cast_ptr<_1aa5edc6d_StrCompExprModel>(&__jule_any_type130));
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1bda8c2b4:;
			{
				_1aba36a67_var(_self_, (*(_161926_m.unsafe_cast_ptr<_1aa5ed7ea_RefExprModel>()))._field_Var);
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1bda8c33b:;
			{
				_1aba41995_emptyCompare(_self_, _161926_m.cast_ptr<_1aa5ed476_EmptyCompareExprModel>(&__jule_any_type129));
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1bda8c3b3:;
			{
				_1aba41c4d_unsafeDeref(_self_, _161926_m.cast_ptr<_1aa60090c_UnsafeDerefExprModel>(&__jule_any_type132));
			}
		}
		else if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1bda8c43a:;
			{
				_1aba42006_unsafeCasting(_self_, _161926_m.cast_ptr<_1aa600c09_UnsafeCastingExprModel>(&__jule_any_type135));
			}
		}
		else {
			_case_begin_1bda8a0c5:;
			{
				_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1bda8a070:;
	};
}



inline jule::Bool _1aba42600_handleFieldByDefault(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa31d7c3_FieldIns>* _172342_f) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_172342_f))))._field_Default != nullptr)) {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
		static__1aba4b670_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_172342_f))))._field_Decl));
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
		_1aba378e2_possibleRefExpr(_self_, (*(*((*(_172342_f))))._field_Default.alloc)._field_Model);
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1abb27828_ableToInit(&((*((*(_172342_f))))._field_Kind))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	static__1aba4b670_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_172342_f))))._field_Decl));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
	_1aba4347a_initExpr(_self_, (*((*(_172342_f))))._field_Kind);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1aba428a8_initStructLit(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1aa31e373_StructIns>* _174435_s) {
	if ((*((*((*(_174435_s))))._field_Decl))._field_Binded) {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1abb1dc2b_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_174435_s)));
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("){}", 3));
		return;;
	};
	_1abb1dc2b_structureIns((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_174435_s)));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	jule::Bool _17537_inited = false;;
	{
		auto expr = &((*((*(_174435_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdaacbca:;
		if (it != expr_end) {
			jule::Ptr<_1aa31d7c3_FieldIns> _175415_f = *it;
			{
				if (_17537_inited) {
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				_17537_inited=_1aba42600_handleFieldByDefault(_self_, &(_175415_f));
			}
			_iter_next_1bdaacbca:;
			++it;
			goto _iter_begin_1bdaacbca;
		}
		_iter_end_1bdaacbca:;
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1aba42b61_fillCollectionByDefault(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1a601a64a_TypeKind>* _176645_elem) {
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(" < ", 3));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("_end; ++", 8));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(") *", 3));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1aba4347a_initExpr(_self_, (*(_176645_elem)));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
}



inline void _1aba42e19_initCollection(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1a601a64a_TypeKind>* _178136_elem) {
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("auto ", 5));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(".begin(); const auto ", 21));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("_end = ", 7));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(".end(); ", 8));
	_1aba42b61_fillCollectionByDefault(_self_, _178136_elem);
}



inline void _1aba431c2_initArray(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1a602a083_Arr>* _179531_arr) {
	if (((*((*(_179531_arr))))._field_N == 0LL)) {
		_1abb1e08e_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_179531_arr)));
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1abb1e08e_array((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_179531_arr)));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("(); ", 4));
	_1aba42e19_initCollection(_self_, &((*((*(_179531_arr))))._field_Elem));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(" __jule_collection; })", 22));
}



inline void _1aba4347a_initExpr(jule::Ptr<_1aba3327d_exprCoder> _self_, jule::Ptr<_1a601a64a_TypeKind> _180929_t) {
	if (_1a601c54d_NilCompatible(_180929_t.ptr())) {
		if ((_1a601d31d_Ptr(_180929_t) != nullptr)) {
			_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		} else {
			_1abb20975_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _180929_t);
			_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1a6028856_Tuple> _18197_tup = _1a601eb27_Tup(_180929_t);;
	if ((_18197_tup != nullptr)) {
		_1abb2524e_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _18197_tup);
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
		{
			auto expr = &((*_18197_tup.alloc)._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bdac450a:;
			if (it != expr_end) {
				jule::I32 _18239_i = it - expr->begin();
				jule::Ptr<_1a601a64a_TypeKind> _182316_tt = *it;
				{
					if ((!(_1abb27b03_shouldInitialized(&(_182316_tt))))) {
						goto _iter_next_1bdac450a;
					};
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
					_1abb0b29b_write((*(_self_))._field_oc, _1a6e696ec_Itoa(_18239_i));
					_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1aba4347a_initExpr(_self_, _182316_tt);
					if ((((*_18197_tup.alloc)._field_Types.len() - _18239_i) > 1LL)) {
						_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
				_iter_next_1bdac450a:;
				++it;
				_18239_i++;
				goto _iter_begin_1bdac450a;
			}
			_iter_end_1bdac450a:;
		};
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	jule::Ptr<_1aa347753_Enum> _18387_enm = _1a601d5a4_Enum(_180929_t);;
	if ((_18387_enm != nullptr)) {
		_1aba422ae_model(_self_, (*((*((*((*_18387_enm.alloc)._field_Items[0LL]))._field_Value))._field_Data))._field_Model);
		return;;
	};
	jule::Ptr<_1a6023763_Prim> _18433_prim = _1a601cd01_Prim(_180929_t);;
	if ((_18433_prim != nullptr)) {
		if (_1a6e77078_IsNum((*_18433_prim.alloc)._field_Kind)) {
			_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("0", 1));
		} else if (_1a6026997_IsBool(_18433_prim)) {
			_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
		} else if (_1a6026c2d_IsStr(_18433_prim)) {
			_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		};
		return;;
	};
	if ((_1a601dac1_Arr(_180929_t) != nullptr)) {
		jule::Ptr<_1a602a083_Arr> _18558_arr = _1a601dac1_Arr(_180929_t);;
		_1aba431c2_initArray(_self_, &(_18558_arr));
		return;;
	};
	jule::Ptr<_1aa31e373_StructIns> _18597_s = _1a601e374_Struct(_180929_t);;
	if ((_18597_s != nullptr)) {
		_1aba428a8_initStructLit(_self_, &(_18597_s));
		return;;
	};
	_1abb20975_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _180929_t);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1aba3327d_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "varPrefixes:" << _Src._field_varPrefixes;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aba4634b_TestCoder_eq(_1aba4634b_TestCoder *_self_, _1aba4634b_TestCoder _other_) {
	return 
		(_self_->_field_t == _other_._field_t) &&
		(_self_->_field_tmReset == _self_->_field_tmReset) &&
		(_self_->_field_tmFailed == _self_->_field_tmFailed) &&
		(_self_->_field_tmSkipped == _self_->_field_tmSkipped) &&
		(_self_->_field_oc == _self_->_field_oc);
}

inline jule::Ptr<_1aba4634b_TestCoder> static__1aba46802_New(jule::Ptr<_1abb0aab4_ObjectCoder>* _2921_oc) {
	return jule::new_ptr<_1aba4634b_TestCoder>(_1aba4634b_TestCoder{._field_t=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_tmReset=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_tmFailed=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_tmSkipped=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_oc=(*(_2921_oc))});;
}



inline jule::Ptr<_1aa39b0ae_ImportInfo> _1aba46a88_findTestingPackage(jule::Ptr<_1aba4634b_TestCoder> _self_) {
	{
		auto expr = &((*((*((*(_self_))._field_oc))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdad0714:;
		if (it != expr_end) {
			jule::Ptr<_1aa39b0ae_ImportInfo> _3615_imp = *it;
			{
				if ((*(_3615_imp))._field_LinkPath.equal("std::testing", 12)) {
					return _3615_imp;;
				};
			}
			_iter_next_1bdad0714:;
			++it;
			goto _iter_begin_1bdad0714;
		}
		_iter_end_1bdad0714:;
	};
	return nullptr;;
}



inline void _1aba46d41_appendTest(jule::Ptr<_1aba4634b_TestCoder> _self_, jule::Ptr<_1aa334597_FnIns> _4431_f) {
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1aba4757d_callTmReset(_self_);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("std::cout << \">>> TEST RUNNING: \" ", 34));
	_1aba44239_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_4431_f))._field_Decl))._field_Ident);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(" << std::endl;\n", 15));
	_1abb0bb4d_indent((*(_self_))._field_oc);
	static__1aba4a6d5_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_4431_f));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("(_t);\n", 6));
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("post_test();\n", 13));
}



inline void _1aba470e9_appendPackageTests(jule::Ptr<_1aba4634b_TestCoder> _self_, jule::Ptr<_1aa39ded5_Package>* _5940_p) {
	{
		auto expr = &((*((*(_5940_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdad6ece:;
		if (it != expr_end) {
			jule::Ptr<_1aa4475cd_SymbolTable> _6015_file = *it;
			{
				{
					auto expr = &((*(_6015_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bdad794c:;
					if (it != expr_end) {
						jule::Ptr<_1aa3315b6_Fn> _6116_f = *it;
						{
							if (_1aa890c57_HasDirective(&((*(_6116_f))._field_Directives), jule::Str::lit("test", 4))) {
								_1aba46d41_appendTest(_self_, (*_6116_f.alloc)._field_Instances[0LL]);
							};
						}
						_iter_next_1bdad794c:;
						++it;
						goto _iter_begin_1bdad794c;
					}
					_iter_end_1bdad794c:;
				};
			}
			_iter_next_1bdad6ece:;
			++it;
			goto _iter_begin_1bdad6ece;
		}
		_iter_end_1bdad6ece:;
	};
}



inline jule::Bool _1aba47380_readyTestingPackage(jule::Ptr<_1aba4634b_TestCoder> _self_) {
	jule::Ptr<_1aa39b0ae_ImportInfo> _707_p = _1aba46a88_findTestingPackage(_self_);;
	if ((_707_p == nullptr)) {
		return false;;
	};
	(*_self_.alloc)._field_t=(*(_1aa39c2be_FindStruct(_707_p.ptr(), jule::Str::lit("T", 1), false)))._field_Instances[0LL];
	(*_self_.alloc)._field_tmReset=_1aa32041d_FindMethod((*_self_.alloc)._field_t.ptr(), jule::Str::lit("reset", 5), false);
	(*_self_.alloc)._field_tmFailed=_1aa32041d_FindMethod((*(_self_))._field_t, jule::Str::lit("Failed", 6), false);
	(*_self_.alloc)._field_tmSkipped=_1aa32041d_FindMethod((*(_self_))._field_t, jule::Str::lit("Skipped", 7), false);
	return true;;
}



inline void _1aba4757d_callTmReset(jule::Ptr<_1aba4634b_TestCoder> _self_) {
	static__1aba4a3e9_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmReset));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1aba4777b_callTmFailed(jule::Ptr<_1aba4634b_TestCoder> _self_) {
	static__1aba4a3e9_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmFailed));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1aba47979_callTmSkipped(jule::Ptr<_1aba4634b_TestCoder> _self_) {
	static__1aba4a3e9_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmSkipped));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1aba47b77_Serialize(jule::Ptr<_1aba4634b_TestCoder> _self_) {
	_1abb17a05_serializeHead((*(_self_))._field_oc);
	__JULE_DEFER({
		_1abb17494_end((*(_self_))._field_oc);
	});;
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\nvoid test_point(void) {\n", 25));
	_1abb0b752_addIndent((*(_self_))._field_oc);
	_1abb0bb4d_indent((*(_self_))._field_oc);
	if ((!(_1aba47380_readyTestingPackage(_self_)))) {
		_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		_1abb0b950_doneIndent((*(_self_))._field_oc);
		return;;
	};
	_1ed486d49_StrBuilder _1187_tb = static__1ed487146_New(40LL);;
	_1abb1dc2b_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &(_1187_tb), (*_self_.alloc)._field_t);
	_1abb1bb6e_asSptr((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _1ed491c55_Buf(&_1187_tb));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(" _t = jule::new_ptr<", 20));
	_1abb0b554_writeBytes((*(_self_))._field_oc, _1ed491c55_Buf(&_1187_tb));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(">(); _t.ref = nullptr;\n", 23));
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("auto post_test = [&](void) {\n", 29));
	_1abb0b752_addIndent((*(_self_))._field_oc);
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("++total;\n", 9));
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_1aba4777b_callTmFailed(_self_);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
	_1aba47979_callTmSkipped(_self_);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1abb0b950_doneIndent((*(_self_))._field_oc);
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("};\n", 3));
	_1aba470e9_appendPackageTests(_self_, &((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Main));
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("\n\n", 2));
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("if (failed != 0) std::exit(1);\n", 31));
	_1abb0b950_doneIndent((*(_self_))._field_oc);
	_1abb0bb4d_indent((*(_self_))._field_oc);
	_1abb0b29b_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1aba4634b_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aba492c7_identCoder_eq(_1aba492c7_identCoder *_self_, _1aba492c7_identCoder _other_) { return true; }

inline void static__1aba49816_writeIdentTo(_1ed486d49_StrBuilder* _3530_buf, jule::Str* _3548_ident) {
	{
		auto expr = _3548_ident;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb022e6:;
		if (it != expr_end) {
			jule::U8 *_3610_b = it;
			{
				if (((*(_3610_b)) >= 128LLU)) {
					goto _julec_label_1bdb0266a;
				};
			}
			_iter_next_1bdb022e6:;
			++it;
			goto _iter_begin_1bdb022e6;
		}
		_iter_end_1bdb022e6:;
	};
	_1ed4909ac_WriteStr(_3530_buf, (*(_3548_ident)));
	return;;
	_julec_label_1bdb0266a:;
	{
		auto expr = _3548_ident;
		char *it = expr->operator char*();
		const char *end = it + expr->len();
		std::size_t len;
		jule::I32 _4610_r;
		_iter_begin_1bdb0387a:;
		std::tie(_4610_r, len) = jule::utf8_decode_rune_str(it, end - it);
		if (it < end) {
			{
				if ((_4610_r < 128LL)) {
					_1ed490c65_WriteByte(_3530_buf, static_cast<jule::U8>(_4610_r));
					goto _iter_next_1bdb0387a;
				};
				_1ed4909ac_WriteStr(_3530_buf, _1a6e69433_FmtInt(static_cast<jule::I64>(_4610_r), 15LL));
			}
			_iter_next_1bdb0387a:;
			it += len;
			goto _iter_begin_1bdb0387a;
		}
	};
}



inline void static__1aba49bac_toOut(_1ed486d49_StrBuilder* _6323_buf, jule::Str _6340_ident, jule::Uintptr _6352_addr) {
	_1ed490c65_WriteByte(_6323_buf, '_');
	if ((_6352_addr != 0LLU)) {
		_1ed4909ac_WriteStr(_6323_buf, _1a6e6906a_FmtUint(static_cast<jule::U64>(_6352_addr), 15LL));
		_1ed490c65_WriteByte(_6323_buf, '_');
	};
	static__1aba49816_writeIdentTo(_6323_buf, &(_6340_ident));
}



inline void static__1aba4a10d_toLocal(_1ed486d49_StrBuilder* _7825_buf, jule::I32 _7842_row, jule::I32 _7852_col, jule::Str* _7863_ident) {
	_1ed490c65_WriteByte(_7825_buf, '_');
	_1ed4909ac_WriteStr(_7825_buf, _1a6e696ec_Itoa(_7842_row));
	_1ed4909ac_WriteStr(_7825_buf, _1a6e696ec_Itoa(_7852_col));
	_1ed490c65_WriteByte(_7825_buf, '_');
	static__1aba49816_writeIdentTo(_7825_buf, _7863_ident);
}



inline void static__1aba4a3e9_func(_1ed486d49_StrBuilder* _8622_buf, jule::Ptr<_1aa3315b6_Fn>* _8640_f) {
	{
		
		if ((*((*(_8640_f))))._field_Binded) {
			_case_begin_1bdb08143:;
			{
				_1ed4909ac_WriteStr(_8622_buf, (*((*(_8640_f))))._field_Ident);
				return;;
			}
		}
		else if ((*((*(_8640_f))))._field_Ident.equal("main", 4)) {
			_case_begin_1bdb081dc:;
			{
				_1ed4909ac_WriteStr(_8622_buf, jule::Str::lit("entry_point", 11));
				return;;
			}
		}
		else if (_1aa331d03_IsMethod((*(_8640_f)).ptr())) {
			_case_begin_1bdb08253:;
			{
				if ((*((*(_8640_f))))._field_Statically) {
					_1ed4909ac_WriteStr(_8622_buf, jule::Str::lit("static_", 7));
				};
			}
		}
		_match_end_1bdb07ede:;
	};
	static__1aba49bac_toOut(_8622_buf, (*((*(_8640_f))))._field_Ident, static_cast<jule::Uintptr>((*(_8640_f))));
}



inline void static__1aba4a6d5_funcIns(_1ed486d49_StrBuilder* _10225_buf, jule::Ptr<_1aa334597_FnIns>* _10243_f) {
	if (_1aa335a60_IsBuiltin((*(_10243_f)).ptr())) {
		_1ed4909ac_WriteStr(_10225_buf, jule::Str::lit("jule::", 6));
		_1ed4909ac_WriteStr(_10225_buf, (*((*((*(_10243_f))))._field_Decl))._field_Ident);
		return;;
	};
	if (((*(*((*(_10243_f))))._field_Decl.alloc)._field_Binded || ((*((*(_10243_f))))._field_Generics.len() == 0LL))) {
		static__1aba4a3e9_func(_10225_buf, &((*((*(_10243_f))))._field_Decl));
		return;;
	};
	static__1aba49bac_toOut(_10225_buf, (*(*((*(_10243_f))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_10243_f))));
}



inline void static__1aba4a9c1_traitDecl(_1ed486d49_StrBuilder* _11727_buf, jule::Ptr<_1aa345047_Trait> _11744_t) {
	static__1aba49bac_toOut(_11727_buf, (*(_11744_t))._field_Ident, static_cast<jule::Uintptr>(_11744_t));
}



inline void static__1aba4acac_param(_1ed486d49_StrBuilder* _12123_buf, jule::Ptr<_1aa32eae2_Param>* _12141_p) {
	if ((_1aa2d7d75_IsAnonIdent((*((*(_12141_p))))._field_Ident) || _1aa2d7aab_IsIgnoreIdent((*((*(_12141_p))))._field_Ident))) {
		return;;
	};
	if (_1aa330241_IsSelf((*(_12141_p)).ptr())) {
		_1ed4909ac_WriteStr(_12123_buf, jule::Str::lit("_self_", 6));
		return;;
	};
	if (((*((*(_12141_p))))._field_Token == nullptr)) {
		static__1aba4a10d_toLocal(_12123_buf, 0LL, 0LL, &((*((*(_12141_p))))._field_Ident));
		return;;
	};
	static__1aba4a10d_toLocal(_12123_buf, (*((*((*(_12141_p))))._field_Token))._field_Row, (*((*((*(_12141_p))))._field_Token))._field_Column, &((*((*(_12141_p))))._field_Ident));
}



inline void static__1aba4b098_structure(_1ed486d49_StrBuilder* _13627_buf, jule::Ptr<_1aa31b518_Struct>* _13645_s) {
	if ((*((*(_13645_s))))._field_Binded) {
		if ((!(_1aa890c57_HasDirective(&((*((*(_13645_s))))._field_Directives), jule::Str::lit("typedef", 7))))) {
			_1ed4909ac_WriteStr(_13627_buf, jule::Str::lit("struct ", 7));
		};
		_1ed4909ac_WriteStr(_13627_buf, (*((*(_13645_s))))._field_Ident);
		return;;
	};
	static__1aba49bac_toOut(_13627_buf, (*((*(_13645_s))))._field_Ident, static_cast<jule::Uintptr>((*(_13645_s))));
}



inline void static__1aba4b384_structureIns(_1ed486d49_StrBuilder* _14730_buf, jule::Ptr<_1aa31e373_StructIns>* _14748_s) {
	if (((*((*((*(_14748_s))))._field_Decl))._field_Binded || ((*((*(_14748_s))))._field_Generics.len() == 0LL))) {
		static__1aba4b098_structure(_14730_buf, &((*((*(_14748_s))))._field_Decl));
		return;;
	};
	static__1aba49bac_toOut(_14730_buf, (*(*((*(_14748_s))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_14748_s))));
}



inline void static__1aba4b670_field(_1ed486d49_StrBuilder* _15523_buf, jule::Ptr<_1aa3185e2_Field>* _15541_f) {
	if ((*((*((*(_15541_f))))._field_Owner))._field_Binded) {
		_1ed4909ac_WriteStr(_15523_buf, (*((*(_15541_f))))._field_Ident);
		return;;
	};
	_1ed4909ac_WriteStr(_15523_buf, jule::Str::lit("_field_", 7));
	static__1aba49816_writeIdentTo(_15523_buf, &((*((*(_15541_f))))._field_Ident));
}



inline void static__1aba4b95b_var(_1ed486d49_StrBuilder* _16521_buf, jule::Ptr<_1aa3e4d3e_Var> _16542_v) {
	{
		
		if ((*(_16542_v))._field_Binded) {
			_case_begin_1bdb168b0:;
			{
				_1ed4909ac_WriteStr(_16521_buf, (*_16542_v.alloc)._field_Ident);
			}
		}
		else if ((*(_16542_v))._field_Ident.equal("error", 5)) {
			_case_begin_1bdb16926:;
			{
				_1ed4909ac_WriteStr(_16521_buf, jule::Str::lit("except.error", 12));
			}
		}
		else if ((*(_16542_v))._field_Ident.equal("self", 4)) {
			_case_begin_1bdb1698c:;
			{
				_1ed4909ac_WriteStr(_16521_buf, jule::Str::lit("_self_", 6));
			}
		}
		else if (((*(_16542_v))._field_RetOrder == -1LL)) {
			_case_begin_1bdb16a03:;
			{
				_1ed4909ac_WriteStr(_16521_buf, jule::Str::lit("__jule_func_result", 18));
			}
		}
		else if (((*(_16542_v))._field_RetOrder >= 0LL)) {
			_case_begin_1bdb16a69:;
			{
				_1ed4909ac_WriteStr(_16521_buf, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
				_1ed4909ac_WriteStr(_16521_buf, _1a6e696ec_Itoa((*_16542_v.alloc)._field_RetOrder));
			}
		}
		else if (((*(_16542_v))._field_Scope != nullptr)) {
			_case_begin_1bdb16ad0:;
			{
				static__1aba4a10d_toLocal(_16521_buf, (*((*_16542_v.alloc)._field_Token))._field_Row, (*(*(_16542_v))._field_Token.alloc)._field_Column, &((*_16542_v.alloc)._field_Ident));
			}
		}
		else {
			_case_begin_1bdb16849:;
			{
				static__1aba49bac_toOut(_16521_buf, (*(_16542_v))._field_Ident, static_cast<jule::Uintptr>(_16542_v));
			}
		}
		_match_end_1bdb1674a:;
	};
}



inline void static__1aba4bc47_iterBegin(_1ed486d49_StrBuilder* _18727_buf, jule::Uintptr _18744_it) {
	_1ed4909ac_WriteStr(_18727_buf, jule::Str::lit("_iter_begin_", 12));
	_1ed4909ac_WriteStr(_18727_buf, _1a6e6906a_FmtUint(static_cast<jule::U64>(_18744_it), 15LL));
}



inline void static__1aba4c033_iterEnd(_1ed486d49_StrBuilder* _19225_buf, jule::Uintptr _19242_it) {
	_1ed4909ac_WriteStr(_19225_buf, jule::Str::lit("_iter_end_", 10));
	_1ed4909ac_WriteStr(_19225_buf, _1a6e6906a_FmtUint(static_cast<jule::U64>(_19242_it), 15LL));
}



inline void static__1aba4c31e_iterNext(_1ed486d49_StrBuilder* _19726_buf, jule::Uintptr _19743_it) {
	_1ed4909ac_WriteStr(_19726_buf, jule::Str::lit("_iter_next_", 11));
	_1ed4909ac_WriteStr(_19726_buf, _1a6e6906a_FmtUint(static_cast<jule::U64>(_19743_it), 15LL));
}



inline void static__1aba4c60a_label(_1ed486d49_StrBuilder* _20223_buf, jule::Uintptr _20240_u) {
	_1ed4909ac_WriteStr(_20223_buf, jule::Str::lit("_julec_label_", 13));
	_1ed4909ac_WriteStr(_20223_buf, _1a6e6906a_FmtUint(static_cast<jule::U64>(_20240_u), 15LL));
}



inline void static__1aba4c8e6_matchEnd(_1ed486d49_StrBuilder* _20726_buf, jule::Uintptr _20743_m) {
	_1ed4909ac_WriteStr(_20726_buf, jule::Str::lit("_match_end_", 11));
	_1ed4909ac_WriteStr(_20726_buf, _1a6e6906a_FmtUint(static_cast<jule::U64>(_20743_m), 15LL));
}



inline void static__1aba4cbd2_caseBegin(_1ed486d49_StrBuilder* _21227_buf, jule::Uintptr _21244_c) {
	_1ed4909ac_WriteStr(_21227_buf, jule::Str::lit("_case_begin_", 12));
	_1ed4909ac_WriteStr(_21227_buf, _1a6e6906a_FmtUint(static_cast<jule::U64>(_21244_c), 15LL));
}





std::ostream &operator<<(std::ostream &_Stream, _1aba492c7_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1abb08d15_SerializationInfo_eq(_1abb08d15_SerializationInfo *_self_, _1abb08d15_SerializationInfo _other_) {
	return 
		(_self_->_field_Compiler == _other_._field_Compiler) &&
		(_self_->_field_CompilerCommand == _self_->_field_CompilerCommand);
}



std::ostream &operator<<(std::ostream &_Stream, _1abb08d15_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1abb09233_traitCast_eq(_1abb09233_traitCast *_self_, _1abb09233_traitCast _other_) {
	return 
		(_self_->_field_t1 == _other_._field_t1) &&
		(_self_->_field_t2 == _self_->_field_t2);
}



std::ostream &operator<<(std::ostream &_Stream, _1abb09233_traitCast _Src) {
	_Stream << "traitCast{";
	_Stream << "t1:" << _Src._field_t1 << ", ";
	_Stream << "t2:" << _Src._field_t2;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1abb0960c_anonHash_eq(_1abb0960c_anonHash *_self_, _1abb0960c_anonHash _other_) {
	return 
		(_self_->_field_expr == _other_._field_expr) &&
		(_self_->_field_ident == _self_->_field_ident);
}



std::ostream &operator<<(std::ostream &_Stream, _1abb0960c_anonHash _Src) {
	_Stream << "anonHash{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1abb0aab4_ObjectCoder> static__1abb0aee3_New(jule::Ptr<_1aa887941_IR>* _11721_ir, _1abb08d15_SerializationInfo _11730_info) {
	jule::Ptr<_1abb0aab4_ObjectCoder> _1187_oc = jule::new_ptr<_1abb0aab4_ObjectCoder>(_1abb0aab4_ObjectCoder{._field_Buf=_1ed486d49_StrBuilder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_resultDecls=_1ed486d49_StrBuilder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_anyObj=_1ed486d49_StrBuilder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_anonObj=_1ed486d49_StrBuilder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_deallocObj=_1ed486d49_StrBuilder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_ir=(*(_11721_ir)), ._field_info=_11730_info, ._field_anons=jule::Slice<jule::Ptr<_1abb0960c_anonHash>>(nullptr), ._field_deallocated=jule::Slice<jule::Ptr<_1a601a64a_TypeKind>>(nullptr), ._field_indentBuffer=jule::Slice<jule::U8>(nullptr), ._field_resultMap=jule::Map<jule::Str,jule::Bool>(nullptr), ._field_anyTypeMap=jule::Slice<jule::Ptr<_1a601a64a_TypeKind>>(nullptr), ._field_traitCastMap=jule::Slice<_1abb09233_traitCast>(nullptr), ._field_traitMetMap=jule::Map<jule::Ptr<_1aa334597_FnIns>,jule::Slice<jule::Uintptr>>(nullptr), ._field_ec=jule::Ptr<_1aba3327d_exprCoder>(nullptr), ._field_sc=jule::Ptr<_1aba2699c_scopeCoder>(nullptr), ._field_tc=jule::Ptr<_1abb1a772_typeCoder>(nullptr), ._field_headPos=0, ._field_declPos=0, ._field_wrapPos=0});;
	(*(_1187_oc))._field_ec=static__1aba33679_new(&(_1187_oc));
	(*_1187_oc.alloc)._field_sc=static__1aba27195_new(&(_1187_oc));
	(*_1187_oc.alloc)._field_tc=static__1abb1acc2_new(&(_1187_oc));
	return _1187_oc;;
}



inline void _1abb0b29b_write(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Str _12822_s) {
	_1ed4909ac_WriteStr(&(*(_self_))._field_Buf, _12822_s);
}



inline void _1abb0b554_writeBytes(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Slice<jule::U8> _13227_b) {
	_1ed490704_Write(&(*(_self_))._field_Buf, _13227_b);
}



inline void _1abb0b752_addIndent(jule::Ptr<_1abb0aab4_ObjectCoder> _self_) {
	(*(_self_))._field_indentBuffer=jule::append((*_self_.alloc)._field_indentBuffer,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = 9LLU; __jule_collection; }));
}



inline void _1abb0b950_doneIndent(jule::Ptr<_1abb0aab4_ObjectCoder> _self_) {
	((*(_self_))._field_indentBuffer).mut_slice(0LL, ((*(_self_))._field_indentBuffer.len() - 1LL));;
}



inline void _1abb0bb4d_indent(jule::Ptr<_1abb0aab4_ObjectCoder> _self_) {
	_1ed490704_Write(&(*(_self_))._field_Buf, (*_self_.alloc)._field_indentBuffer);
}



inline jule::I32 _1abb0be8e_findAnyType(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1a601a64a_TypeKind>* _15133_t) {
	{
		auto expr = &((*(_self_))._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb2b72c:;
		if (it != expr_end) {
			jule::I32 _1528_i = it - expr->begin();
			jule::Ptr<_1a601a64a_TypeKind> _15215_at = *it;
			{
				if (_1a601ad87_Equal(_15215_at, (*(_15133_t)))) {
					return _1528_i;;
				};
			}
			_iter_next_1bdb2b72c:;
			++it;
			_1528_i++;
			goto _iter_begin_1bdb2b72c;
		}
		_iter_end_1bdb2b72c:;
	};
	return -1LL;;
}



inline jule::I32 _1abb0c2d0_pushDealloc(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1a601a64a_TypeKind> _16032_t) {
	{
		auto expr = &((*(_self_))._field_deallocated);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb2c2bb:;
		if (it != expr_end) {
			jule::I32 _1617_i = it - expr->begin();
			jule::Ptr<_1a601a64a_TypeKind> _16110_dt = *it;
			{
				if (_1a601ad87_Equal(_16110_dt, _16032_t)) {
					return _1617_i;;
				};
			}
			_iter_next_1bdb2c2bb:;
			++it;
			_1617_i++;
			goto _iter_begin_1bdb2c2bb;
		}
		_iter_end_1bdb2c2bb:;
	};
	jule::I32 _1663_i = (*_self_.alloc)._field_deallocated.len();;
	(*_self_.alloc)._field_deallocated=jule::append((*_self_.alloc)._field_deallocated,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a601a64a_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _16032_t; __jule_collection; }));
	_1ed4909ac_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("void __jule_type_deallocator", 28));
	_1ed4909ac_WriteStr(&(*_self_.alloc)._field_deallocObj, _1a6e696ec_Itoa(_1663_i));
	_1ed4909ac_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 56));
	_1abb20975_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_deallocObj), _16032_t);
	_1ed4909ac_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit(">().dealloc(); }\n", 17));
	return _1663_i;;
}



inline jule::Str _1abb0c621_pushAnonFn(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa326545_AnonFnExprModel>* _17632_m) {
	jule::Str __jule_func_result;
	jule::Bool _1773_closure = _1aa88de0e_IsClosure(_17632_m);;
	if (_1773_closure) {
		_1ed4909ac_WriteStr(&(*(_self_))._field_anonObj, jule::Str::lit("struct ", 7));
		jule::I32 _1814_l = _1ed491738_Len(&(*_self_.alloc)._field_anonObj);;
		_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("__jule_anon_", 12));
		_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anonObj, _1a6e6906a_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_17632_m))))._field_Func)), 15LL));
		__jule_func_result=static_cast<jule::Str>(_1ed491c55_Buf(&(*_self_.alloc)._field_anonObj).slice(_1814_l));
		_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx{\n", 6));
		{
			auto expr = &((*((*(_17632_m))))._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bdb34548:;
			if (it != expr_end) {
				jule::Ptr<_1aa3e4d3e_Var> _18616_v = *it;
				{
					_1ed490c65_WriteByte(&(*_self_.alloc)._field_anonObj, 9LLU);
					_1abb20975_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_anonObj), (*((*(_18616_v))._field_Kind))._field_Kind);
					_1ed490c65_WriteByte(&(*_self_.alloc)._field_anonObj, ' ');
					if ((*_18616_v.alloc)._field_Reference) {
						_1ed490c65_WriteByte(&(*_self_.alloc)._field_anonObj, '*');
					};
					static__1aba4b95b_var(&((*_self_.alloc)._field_anonObj), _18616_v);
					_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit(";\n", 2));
				}
				_iter_next_1bdb34548:;
				++it;
				goto _iter_begin_1bdb34548;
			}
			_iter_end_1bdb34548:;
		};
		_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("};\n", 3));
		_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("static void ", 12));
		_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
		_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<", 55));
		_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
		_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx>().dealloc(); }\n", 21));
	} else {
		__jule_func_result=jule::Str::lit("__jule_anon", 11);
		__jule_func_result+=_1a6e6906a_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_17632_m))))._field_Func)), 15LL);
	};
	(*(_self_))._field_anons=jule::append((*_self_.alloc)._field_anons,({ auto __jule_collection = jule::Slice<jule::Ptr<_1abb0960c_anonHash>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1abb0960c_anonHash>(_1abb0960c_anonHash{._field_expr=(*(_17632_m)), ._field_ident=__jule_func_result}); __jule_collection; }));
	_1abb13407_anonFuncInsDecl(_self_, _17632_m, __jule_func_result);
	_1ed490c65_WriteByte(&(*_self_.alloc)._field_anonObj, '\n');
	return __jule_func_result;;
}



inline jule::I32 _1abb0c962_pushAnyType(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1a601a64a_TypeKind> _21632_t) {
	if ((_1a601d5a4_Enum(_21632_t.ptr()) != nullptr)) {
		_21632_t=(*((*(_1a601d5a4_Enum(_21632_t)))._field_Kind))._field_Kind;
	};
	jule::I32 _2207_i = _1abb0be8e_findAnyType(_self_, &(_21632_t));;
	if ((_2207_i != -1LL)) {
		return _2207_i;;
	};
	_2207_i=(*_self_.alloc)._field_anyTypeMap.len();
	(*_self_.alloc)._field_anyTypeMap=jule::append((*_self_.alloc)._field_anyTypeMap,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a601a64a_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _21632_t; __jule_collection; }));
	jule::Str _2263_si = _1a6e696ec_Itoa(_2207_i);;
	if ((_1a601d087_Sptr(_21632_t) != nullptr)) {
		_1ed486d49_StrBuilder _2288_elemKind = static__1ed487146_New(40LL);;
		_1abb20975_kind((*_self_.alloc)._field_tc.ptr(), &(_2288_elemKind), (*(_1a601d087_Sptr(_21632_t)))._field_Elem);
		jule::I32 _2324_di = _1abb0c2d0_pushDealloc(_self_, (*(_1a601d087_Sptr(_21632_t)))._field_Elem);;
		_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, _2263_si);
		_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
		_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, _1a6e696ec_Itoa(_2324_di));
		_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 50));
		_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
		_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, _2263_si);
		_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
		_1abb1bb6e_asSptr((*(_self_))._field_tc, &((*_self_.alloc)._field_anyObj), _1ed491c55_Buf(&_2288_elemKind));
		_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
		_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, _2263_si);
		_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52));
	} else {
		jule::Bool _2514_comparable = _1a601bc9a_Comparable(_21632_t);;
		_1ed486d49_StrBuilder _2528_kindB = static__1ed487146_New(40LL);;
		_1abb20975_kind((*_self_.alloc)._field_tc.ptr(), &(_2528_kindB), _21632_t);
		jule::Str _2544_kind = _1ed4912a4_Str(&_2528_kindB);;
		jule::I32 _2574_di = _1abb0c2d0_pushDealloc(_self_, _21632_t);;
		if (_2514_comparable) {
			jule::Str _2639_lmodel = jule::Str::lit("*reinterpret_cast<", 18);;
			_2639_lmodel+=_2544_kind;
			_2639_lmodel+=jule::Str::lit("*>(", 3);
			jule::Str _2669_rmodel = _2639_lmodel;;
			_2669_rmodel+=jule::Str::lit("other)", 6);
			_2639_lmodel+=jule::Str::lit("alloc)", 6);
			_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, _2263_si);
			_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(void *alloc, void *other) noexcept { return ", 48));
			_1aba35a77__unsafeBinary((*_self_.alloc)._field_ec, &((*_self_.alloc)._field_anyObj), &(_2639_lmodel), &(_2669_rmodel), &(_21632_t), &(_21632_t), static_cast<jule::U32>(50LLU), jule::Str::lit("==", 2));
			_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; }\n", 4));
		};
		_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Str __jule_any_type", 25));
		_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, _2263_si);
		_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<", 76));
		if ((_1a601d31d_Ptr(_21632_t) == nullptr)) {
			_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("const ", 6));
			_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, _2544_kind);
		} else {
			_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, _2544_kind);
			_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("* const", 7));
		};
		_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(alloc)); }\n", 14));
		_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, _2263_si);
		_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
		_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, _1a6e696ec_Itoa(_2574_di));
		_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", ", 2));
		if (_2514_comparable) {
			_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(".eq=__jule_any_type", 19));
			_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, _2263_si);
			_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq, ", 5));
		};
		_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(".to_str=__jule_any_type", 23));
		_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, _2263_si);
		_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str};\n", 10));
		if (_2514_comparable) {
			_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, _2263_si);
			_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
			_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, _2544_kind);
			_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
			_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, _2263_si);
			_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && __jule_any_type", 19));
			_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, _2263_si);
			_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(any.data.alloc, (void*)&other); }\n", 38));
		};
	};
	return _2207_i;;
}



inline void _1abb0cc1a_pushResultIns(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa334597_FnIns>* _32235_f) {
	jule::Str _3233_s = static_cast<jule::Str>(_1abb25c33_code((*((*(_self_))._field_tc))._field_rc.ptr(), &((*((*(_32235_f))))._field_Result)));;
	jule::Bool _3246_ok;
	(*_self_.alloc)._field_resultMap.lookup(_3233_s, nullptr, &(_3246_ok));
	if (_3246_ok) {
		return;;
	};
	(*_self_.alloc)._field_resultMap[_3233_s]=false;
	_1ed4909ac_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("struct ", 7));
	_1ed4909ac_WriteStr(&(*_self_.alloc)._field_resultDecls, _3233_s);
	_1ed4909ac_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(" {\n", 3));
	{
		auto expr = &((*(_1a601eb27_Tup((*((*(_32235_f))))._field_Result.ptr())))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb5e452:;
		if (it != expr_end) {
			jule::I32 _3328_i = it - expr->begin();
			jule::Ptr<_1a601a64a_TypeKind> _33215_t = *it;
			{
				_1ed490c65_WriteByte(&(*_self_.alloc)._field_resultDecls, 9LLU);
				_1abb20975_kind((*(_self_))._field_tc, &((*_self_.alloc)._field_resultDecls), _33215_t);
				_1ed490c65_WriteByte(&(*_self_.alloc)._field_resultDecls, ' ');
				_1ed4909ac_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("__jule_result_arg", 17));
				_1ed4909ac_WriteStr(&(*_self_.alloc)._field_resultDecls, _1a6e696ec_Itoa(_3328_i));
				_1ed4909ac_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(";\n", 2));
			}
			_iter_next_1bdb5e452:;
			++it;
			_3328_i++;
			goto _iter_begin_1bdb5e452;
		}
		_iter_end_1bdb5e452:;
	};
	_1ed4909ac_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("};\n", 3));
}



inline void _1abb0cec3_pushResult(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa3315b6_Fn>* _34332_f) {
	if ((_1aa331a6c_IsVoid((*(_34332_f)).ptr()) || ((*((*((*(_34332_f))))._field_Result))._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I32 _3477_n = (*((*(_34332_f))))._field_Instances.len();;
	if (((*((*(_34332_f))))._field_Generics.len() == 0LL)) {
		_3477_n=1LL;
	};
	{
		auto expr = (*((*(_34332_f))))._field_Instances.slice(0LL, _3477_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1bdb64501:;
		if (it != expr_end) {
			jule::Ptr<_1aa334597_FnIns> _35115_ins = *it;
			{
				_1abb0cc1a_pushResultIns(_self_, &(_35115_ins));
			}
			_iter_next_1bdb64501:;
			++it;
			goto _iter_begin_1bdb64501;
		}
		_iter_end_1bdb64501:;
	};
}



inline void _1abb0d336_pushAndWriteMaskMapper(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa345047_Trait> _35643_t1, jule::Ptr<_1aa345047_Trait> _35659_t2) {
	_1ed486d49_StrBuilder _3577_ident = static__1ed487146_New(32LL);;
	_1ed4909ac_WriteStr(&_3577_ident, jule::Str::lit("__jule_trait_offset_mapper_", 27));
	_1ed4909ac_WriteStr(&_3577_ident, _1a6e6906a_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_35659_t2)), 15LL));
	_1ed4909ac_WriteStr(&_3577_ident, jule::Str::lit("_to_", 4));
	_1ed4909ac_WriteStr(&_3577_ident, _1a6e6906a_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_35643_t1)), 15LL));
	_1ed490704_Write(&(*(_self_))._field_Buf, _1ed491c55_Buf(&_3577_ident));
	{
		auto expr = &((*_self_.alloc)._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb6736c:;
		if (it != expr_end) {
			_1abb09233_traitCast _36510_m = *it;
			{
				if (((_36510_m._field_t1 == _35643_t1) && (_36510_m._field_t2 == _35659_t2))) {
					return;;
				};
			}
			_iter_next_1bdb6736c:;
			++it;
			goto _iter_begin_1bdb6736c;
		}
		_iter_end_1bdb6736c:;
	};
	(*_self_.alloc)._field_traitCastMap=jule::append((*_self_.alloc)._field_traitCastMap,({ auto __jule_collection = jule::Slice<_1abb09233_traitCast>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1abb09233_traitCast{._field_t1=_35643_t1, ._field_t2=_35659_t2}; __jule_collection; }));
	;
	_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("void *", 6));
	_1ed490704_Write(&(*_self_.alloc)._field_anyObj, _1ed491c55_Buf(&_3577_ident));
	_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(const void *data) noexcept { ", 30));
	_1ed486d49_StrBuilder _3797_t1Ident = static__1ed487146_New(16LL);;
	_1ed486d49_StrBuilder _3807_t2Ident = static__1ed487146_New(16LL);;
	static__1aba4a9c1_traitDecl(&(_3797_t1Ident), _35643_t1);
	static__1aba4a9c1_traitDecl(&(_3807_t2Ident), _35659_t2);
	{
		auto expr = &((*(_35643_t1))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb67a10:;
		if (it != expr_end) {
			jule::Ptr<_1aa31b518_Struct> _38415_s1 = *it;
			{
				{
					auto expr = &((*(_35659_t2))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bdb6b98c:;
					if (it != expr_end) {
						jule::Ptr<_1aa31b518_Struct> _38511_s2 = *it;
						{
							if ((_38415_s1 == _38511_s2)) {
								{
									auto expr = &((*(_38415_s1))._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1bdb6c839:;
									if (it != expr_end) {
										jule::Ptr<_1aa31e373_StructIns> _38718_s1i = *it;
										{
											jule::I32 _3887_i1 = _1aa891791_FindTraitTypeOffsetS(_35643_t1, _38718_s1i);;
											jule::I32 _3897_i2 = _1aa891791_FindTraitTypeOffsetS(_35659_t2, _38718_s1i);;
											_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("if (data == &", 13));
											_1ed490704_Write(&(*_self_.alloc)._field_anyObj, _1ed491c55_Buf(&_3807_t2Ident));
											_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
											_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, _1a6e696ec_Itoa(_3897_i2));
											_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(") return &", 10));
											_1ed490704_Write(&(*_self_.alloc)._field_anyObj, _1ed491c55_Buf(&_3797_t1Ident));
											_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
											_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, _1a6e696ec_Itoa(_3887_i1));
											_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; ", 2));
										}
										_iter_next_1bdb6c839:;
										++it;
										goto _iter_begin_1bdb6c839;
									}
									_iter_end_1bdb6c839:;
								};
							};
						}
						_iter_next_1bdb6b98c:;
						++it;
						goto _iter_begin_1bdb6b98c;
					}
					_iter_end_1bdb6b98c:;
				};
			}
			_iter_next_1bdb67a10:;
			++it;
			goto _iter_begin_1bdb67a10;
		}
		_iter_end_1bdb67a10:;
	};
	_1ed4909ac_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" jule::panic(\"trait casting failed because of an implementation mistake, this is a JuleC bug\"); return nullptr; }\n", 114));
}



inline void _1abb0d5de_locInfo(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa2d51c4_Token>* _40725_t) {
	jule::Str *_4084_loc = &((*((*((*(_40725_t))))._field_File))._field_Path);;
	if (_1adc505db_Production) {
		{
			
			if (_1ed4731a9_HasPrefix((*(_4084_loc)), _1adc46e51_PathStdlib)) {
				_case_begin_1bdb72ce5:;
				{
					_1aba43e09_cstrBytes(&((*(_self_))._field_Buf), (*(_4084_loc)).slice((_1ed49530d_Dir(_1adc46e51_PathStdlib).len() + 1LL)));
				}
			}
			else if (_1ed4731a9_HasPrefix((*(_4084_loc)), (*((*(_self_))._field_ir))._field_Root)) {
				_case_begin_1bdb72dd3:;
				{
					_1aba43e09_cstrBytes(&((*_self_.alloc)._field_Buf), (*(_4084_loc)).slice((_1ed49530d_Dir((*(*(_self_))._field_ir.alloc)._field_Root).len() + 1LL)));
				}
			}
			else {
				_case_begin_1bdb7292c:;
				{
					_1aba43e09_cstrBytes(&((*(_self_))._field_Buf), (*(_4084_loc)));
				}
			}
			_match_end_1bdb72861:;
		};
	} else {
		_1aba43e09_cstrBytes(&((*(_self_))._field_Buf), (*(_4084_loc)));
	};
	_1abb0b29b_write(_self_, jule::Str::lit(":", 1));
	_1abb0b29b_write(_self_, _1a6e696ec_Itoa((*((*(_40725_t))))._field_Row));
	_1abb0b29b_write(_self_, jule::Str::lit(":", 1));
	_1abb0b29b_write(_self_, _1a6e696ec_Itoa((*((*(_40725_t))))._field_Column));
}



inline void _1abb0d7dc_head(jule::Ptr<_1abb0aab4_ObjectCoder> _self_) {
	_1abb0027e_Time _4343_time = static__1abb00878_Now();;
	_1abaeeaa8_AbsTime _4353_abs = _1abb02061_Abs(&_4343_time);;
	_1abb0b29b_write(_self_, jule::Str::lit("// Auto generated by JuleC.\n", 28));
	_1abb0b29b_write(_self_, jule::Str::lit("// JuleC version: ", 18));
	_1abb0b29b_write(_self_, jule::Str::lit("jule0.0.16 @master", 18));
	_1abb0b29b_write(_self_, jule::Str::lit("\n", 1));
	_1abb0b29b_write(_self_, jule::Str::lit("// Date: ", 9));
	_1abb0b29b_write(_self_, _1a6e6906a_FmtUint(_4353_abs._field_Day, 10LL));
	_1abb0b29b_write(_self_, jule::Str::lit("/", 1));
	_1abb0b29b_write(_self_, _1a6e6906a_FmtUint(_4353_abs._field_Month, 10LL));
	_1abb0b29b_write(_self_, jule::Str::lit("/", 1));
	_1abb0b29b_write(_self_, _1a6e6906a_FmtUint(_4353_abs._field_Year, 10LL));
	_1abb0b29b_write(_self_, jule::Str::lit(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1abb0b29b_write(_self_, (*_self_.alloc)._field_info._field_Compiler);
	_1abb0b29b_write(_self_, jule::Str::lit(" ", 1));
	_1abb0b29b_write(_self_, (*_self_.alloc)._field_info._field_CompilerCommand);
	_1abb0b29b_write(_self_, jule::Str::lit("\n\n", 2));
	if (_1adc505db_Production) {
		_1abb0b29b_write(_self_, jule::Str::lit("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_1adc4eed1_RC))) {
		_1abb0b29b_write(_self_, jule::Str::lit("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_1adc50399_Safety))) {
		_1abb0b29b_write(_self_, jule::Str::lit("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1abb0d9da_links(_self_);
	_1abb0b29b_write(_self_, jule::Str::lit("\n\n#include \"", 12));
	_1abb0b29b_write(_self_, _1adc47803_PathApi);
	_1abb0b29b_write(_self_, jule::Str::lit("\"\n\n", 3));
}



inline void _1abb0d9da_links(jule::Ptr<_1abb0aab4_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb7e40b:;
		if (it != expr_end) {
			jule::Ptr<_1aa39b0ae_ImportInfo> _47210_used = *it;
			{
				{
					
					if ((!((*(_47210_used))._field_Binded))) {
						_case_begin_1bdb80220:;
						{
							goto _iter_next_1bdb7e40b;
						}
					}
					else if (_1ada65500_IsStdHeaderPath((*(_47210_used))._field_Path)) {
						_case_begin_1bdb802a8:;
						{
							_1abb0b29b_write(_self_, jule::Str::lit("#include ", 9));
							_1abb0b29b_write(_self_, (*_47210_used.alloc)._field_Path);
							_1abb0b29b_write(_self_, jule::Str::lit("\n", 1));
						}
					}
					else if (_1ada657ca_IsValidHeaderExt(_1ed4948a1_Ext((*(_47210_used))._field_Path))) {
						_case_begin_1bdb8031e:;
						{
							_1abb0b29b_write(_self_, jule::Str::lit("#include \"", 10));
							_1abb0b29b_write(_self_, (*_47210_used.alloc)._field_Path);
							_1abb0b29b_write(_self_, jule::Str::lit("\"\n", 2));
						}
					}
					_match_end_1bdb800cc:;
				};
			}
			_iter_next_1bdb7e40b:;
			++it;
			goto _iter_begin_1bdb7e40b;
		}
		_iter_end_1bdb7e40b:;
	};
}



inline void _1abb0dc93_prepareStructure(_1abb0aab4_ObjectCoder* _self_, jule::Ptr<_1aa31b518_Struct>* _48837_s) {
	{
		auto expr = &((*((*(_48837_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb82101:;
		if (it != expr_end) {
			jule::Ptr<_1aa31e373_StructIns> _48915_ins = *it;
			{
				{
					auto expr = &((*(_48915_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bdb83a3c:;
					if (it != expr_end) {
						jule::Ptr<_1aa3315b6_Fn> _49016_m = *it;
						{
							if ((*(_49016_m))._field_Statically) {
								goto _iter_next_1bdb83a3c;
							};
							{
								auto expr = &((*_49016_m.alloc)._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bdb845dc:;
								if (it != expr_end) {
									jule::Ptr<_1aa334597_FnIns> _49417_mins = *it;
									{
										jule::Ptr<_1aa33351e_ParamIns> _49510_p = (*(_49417_mins))._field_Params[0LL];;
										_1ed486d49_StrBuilder _49610_kind = static__1ed487146_New(40LL);;
										_1abb20975_kind((*(_self_))._field_tc.ptr(), &(_49610_kind), (*(_49510_p))._field_Kind);
										if ((!(_1aa3304c7_IsRef((*_49510_p.alloc)._field_Decl.ptr())))) {
											_1ed4909ac_WriteStr(&_49610_kind, jule::Str::lit("*", 1));
										};
										(*_49510_p.alloc)._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1abb19b39_customType>(_1abb19b39_customType{._field_kind=_1ed4912a4_Str(&_49610_kind)}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data29)});
									}
									_iter_next_1bdb845dc:;
									++it;
									goto _iter_begin_1bdb845dc;
								}
								_iter_end_1bdb845dc:;
							};
						}
						_iter_next_1bdb83a3c:;
						++it;
						goto _iter_begin_1bdb83a3c;
					}
					_iter_end_1bdb83a3c:;
				};
			}
			_iter_next_1bdb82101:;
			++it;
			goto _iter_begin_1bdb82101;
		}
		_iter_end_1bdb82101:;
	};
}



inline void _1abb0de91_prepareStructures(jule::Ptr<_1abb0aab4_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb82909:;
		if (it != expr_end) {
			jule::Ptr<_1aa31b518_Struct> _51215_s = *it;
			{
				if (((*(_51215_s))._field_Token != nullptr)) {
					_1abb0dc93_prepareStructure(_self_.ptr(), &(_51215_s));
				};
			}
			_iter_next_1bdb82909:;
			++it;
			goto _iter_begin_1bdb82909;
		}
		_iter_end_1bdb82909:;
	};
}



inline void _1abb0e249_structurePlainDecl(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa31b518_Struct>* _51940_s) {
	{
		auto expr = &((*((*(_51940_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb88b74:;
		if (it != expr_end) {
			jule::Ptr<_1aa31e373_StructIns> _52015_ins = *it;
			{
				_1abb0b29b_write(_self_, jule::Str::lit("struct ", 7));
				static__1aba4b384_structureIns(&((*_self_.alloc)._field_Buf), &(_52015_ins));
				_1abb0b29b_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1bdb88b74:;
			++it;
			goto _iter_begin_1bdb88b74;
		}
		_iter_end_1bdb88b74:;
	};
}



inline void _1abb0e447_structurePlainDecls(jule::Ptr<_1abb0aab4_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb8a12b:;
		if (it != expr_end) {
			jule::Ptr<_1aa31b518_Struct> _52815_s = *it;
			{
				if (((*(_52815_s))._field_Token != nullptr)) {
					_1abb0e249_structurePlainDecl(_self_, &(_52815_s));
				};
			}
			_iter_next_1bdb8a12b:;
			++it;
			goto _iter_begin_1bdb8a12b;
		}
		_iter_end_1bdb8a12b:;
	};
}



inline void _1abb0e700_fieldDecl(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa31d7c3_FieldIns>* _53531_f) {
	_1abb20975_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_53531_f))))._field_Kind);
	_1abb0b29b_write(_self_, jule::Str::lit(" ", 1));
	static__1aba4b670_field(&((*_self_.alloc)._field_Buf), &((*((*(_53531_f))))._field_Decl));
	_1abb0b29b_write(_self_, jule::Str::lit(";", 1));
}



inline void _1abb0e9a8_structureDestructor(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa31e373_StructIns>* _54241_s) {
	;
	jule::Ptr<_1aa3315b6_Fn> _5453_disposeMethod = _1aa32041d_FindMethod((*(_54241_s)).ptr(), jule::Str::lit("Dispose", 7), false);;
	jule::Bool _5467_disposed = static__1aa3e6439_Dispose(_5453_disposeMethod);;
	if ((!(_5467_disposed))) {
		return;;
	};
	_1abb0b29b_write(_self_, jule::Str::lit("~", 1));
	static__1aba4b384_structureIns(&((*_self_.alloc)._field_Buf), _54241_s);
	_1abb0b29b_write(_self_, jule::Str::lit("(void) { ", 9));
	static__1aba4a3e9_func(&((*_self_.alloc)._field_Buf), &(_5453_disposeMethod));
	_1abb0b29b_write(_self_, jule::Str::lit("(this); }", 9));
}



inline void _1abb0edc6_structureOperatorEq(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Str _55836_ident, jule::Ptr<_1aa31e373_StructIns>* _55853_s, jule::Bool _55868_decl) {
	if ((!(_1abb18660_defaultEq(_55853_s)))) {
		return;;
	};
	_1abb0b29b_write(_self_, jule::Str::lit("\n", 1));
	if (_1aa8a97ba_Inline) {
		_1abb0b29b_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1abb0b29b_write(_self_, jule::Str::lit("jule::Bool ", 11));
	_1abb0b29b_write(_self_, _55836_ident);
	_1abb0b29b_write(_self_, jule::Str::lit("_eq", 3));
	_1abb0b29b_write(_self_, jule::Str::lit("(", 1));
	_1abb0b29b_write(_self_, _55836_ident);
	_1abb0b29b_write(_self_, jule::Str::lit(" *_self_, ", 10));
	_1abb0b29b_write(_self_, _55836_ident);
	_1abb0b29b_write(_self_, jule::Str::lit(" _other_)", 9));
	if (_55868_decl) {
		_1abb0b29b_write(_self_, jule::Str::lit(";\n\n", 3));
		return;;
	};
	_1abb0b29b_write(_self_, jule::Str::lit(" {", 2));
	if (((*((*(_55853_s))))._field_Fields.len() == 0LL)) {
		_1abb0b29b_write(_self_, jule::Str::lit(" return true; }\n\n", 17));
		return;;
	};
	_1abb0b752_addIndent(_self_);
	_1abb0b29b_write(_self_, jule::Str::lit("\n", 1));
	_1abb0bb4d_indent(_self_);
	_1abb0b29b_write(_self_, jule::Str::lit("return ", 7));
	_1abb0b752_addIndent(_self_);
	jule::Bool _5897_writed = false;;
	jule::Str _5927_lmodel = jule::Str::lit("_self_->", 8);;
	jule::Str _5937_rmodel = jule::Str::lit("_other_.", 8);;
	{
		auto expr = &((*((*(_55853_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb97e6e:;
		if (it != expr_end) {
			jule::Ptr<_1aa31d7c3_FieldIns> _59515_f = *it;
			{
				jule::Ptr<_1aa31e373_StructIns> _5974_strct = _1a601e374_Struct((*(_59515_f))._field_Kind.ptr());;
				if ((((_5974_strct != nullptr) && ((*_5974_strct.alloc)._field_Decl != nullptr)) && (*(*(_5974_strct))._field_Decl.alloc)._field_Binded)) {
					goto _iter_next_1bdb97e6e;
				};
				if (_5897_writed) {
					_1abb0b29b_write(_self_, jule::Str::lit(" &&", 3));
				};
				_5897_writed=true;
				_1abb0b29b_write(_self_, jule::Str::lit("\n", 1));
				_1abb0bb4d_indent(_self_);
				_1ed486d49_StrBuilder _6088_fIdent = static__1ed487146_New((*((*_59515_f.alloc)._field_Decl))._field_Ident.len());;
				static__1aba4b670_field(&(_6088_fIdent), &((*_59515_f.alloc)._field_Decl));
				_5927_lmodel+=_1ed560bc0_BytesStr(_1ed491c55_Buf(&_6088_fIdent));
				_5937_rmodel+=_1ed560bc0_BytesStr(_1ed491c55_Buf(&_6088_fIdent));
				_1aba35a77__unsafeBinary((*_self_.alloc)._field_ec, &((*_self_.alloc)._field_Buf), &(_5927_lmodel), &(_5937_rmodel), &((*_59515_f.alloc)._field_Kind), &((*_59515_f.alloc)._field_Kind), static_cast<jule::U32>(50LLU), jule::Str::lit("==", 2));
				(_5927_lmodel).mut_slice(0LL, (_5927_lmodel.len() - _1ed491738_Len(&_6088_fIdent)));;
				_5937_rmodel=_5927_lmodel.slice(0LL, (_5937_rmodel.len() - _1ed491738_Len(&_6088_fIdent)));
			}
			_iter_next_1bdb97e6e:;
			++it;
			goto _iter_begin_1bdb97e6e;
		}
		_iter_end_1bdb97e6e:;
	};
	_1abb0b950_doneIndent(_self_);
	if ((!(_5897_writed))) {
		_1abb0b29b_write(_self_, jule::Str::lit("true", 4));
	};
	_1abb0b29b_write(_self_, jule::Str::lit(";\n", 2));
	_1abb0b950_doneIndent(_self_);
	_1abb0bb4d_indent(_self_);
	_1abb0b29b_write(_self_, jule::Str::lit("}\n\n", 3));
}



inline void _1abb10239_structureOperators(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa31e373_StructIns>* _62640_s, jule::Bool _62655_decl) {
	_1ed486d49_StrBuilder _6277_sb = static__1ed487146_New(40LL);;
	static__1aba4b384_structureIns(&(_6277_sb), _62640_s);
	jule::Str _6293_ident = _1ed4912a4_Str(&_6277_sb);;
	_1abb0edc6_structureOperatorEq(_self_, _6293_ident, _62640_s, _62655_decl);
}



inline void _1abb104e2_structureInsDecl(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa31e373_StructIns>* _63538_s) {
	{
		auto expr = &((*((*(_63538_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdba2143:;
		if (it != expr_end) {
			jule::Ptr<_1aa3315b6_Fn> _63615_m = *it;
			{
				if (_1abb18396_isHeadDecl(&(_63615_m))) {
					_1abb11845_funcDecl(_self_, &(_63615_m), false);
				};
			}
			_iter_next_1bdba2143:;
			++it;
			goto _iter_begin_1bdba2143;
		}
		_iter_end_1bdba2143:;
	};
	_1abb0b29b_write(_self_, jule::Str::lit("struct ", 7));
	static__1aba4b384_structureIns(&((*_self_.alloc)._field_Buf), _63538_s);
	_1abb0b29b_write(_self_, jule::Str::lit(" {\n", 3));
	_1abb0b752_addIndent(_self_);
	{
		auto expr = &((*((*(_63538_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdba3a29:;
		if (it != expr_end) {
			jule::Ptr<_1aa31d7c3_FieldIns> _64715_f = *it;
			{
				_1abb0bb4d_indent(_self_);
				_1abb0e700_fieldDecl(_self_, &(_64715_f));
				_1abb0b29b_write(_self_, jule::Str::lit("\n", 1));
			}
			_iter_next_1bdba3a29:;
			++it;
			goto _iter_begin_1bdba3a29;
		}
		_iter_end_1bdba3a29:;
	};
	_1abb0bb4d_indent(_self_);
	_1abb0e9a8_structureDestructor(_self_, _63538_s);
	_1abb0b29b_write(_self_, jule::Str::lit("\n\n", 2));
	_1abb0b950_doneIndent(_self_);
	_1abb0bb4d_indent(_self_);
	_1abb0b29b_write(_self_, jule::Str::lit("};", 2));
	;
	_1abb10239_structureOperators(_self_, _63538_s, true);
}



inline void _1abb1079a_structureDecl(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa31b518_Struct>* _66535_s) {
	{
		auto expr = &((*((*(_66535_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdba76a9:;
		if (it != expr_end) {
			jule::Ptr<_1aa31e373_StructIns> _66615_ins = *it;
			{
				_1abb104e2_structureInsDecl(_self_, &(_66615_ins));
			}
			_iter_next_1bdba76a9:;
			++it;
			goto _iter_begin_1bdba76a9;
		}
		_iter_end_1bdba76a9:;
	};
}



inline void _1abb10998_structureDecls(jule::Ptr<_1abb0aab4_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdba7e29:;
		if (it != expr_end) {
			jule::Ptr<_1aa31b518_Struct> _67215_s = *it;
			{
				if (((*(_67215_s))._field_Token != nullptr)) {
					_1abb1079a_structureDecl(_self_, &(_67215_s));
					_1abb0b29b_write(_self_, jule::Str::lit("\n", 1));
				};
			}
			_iter_next_1bdba7e29:;
			++it;
			goto _iter_begin_1bdba7e29;
		}
		_iter_end_1bdba7e29:;
	};
}



inline void _1abb10b96_structureMethodDecls(jule::Ptr<_1abb0aab4_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdba8e3b:;
		if (it != expr_end) {
			jule::Ptr<_1aa31b518_Struct> _68115_s = *it;
			{
				if (((*(_68115_s))._field_Token != nullptr)) {
					{
						auto expr = &((*_68115_s.alloc)._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bdbab03c:;
						if (it != expr_end) {
							jule::Ptr<_1aa31e373_StructIns> _68317_ins = *it;
							{
								{
									auto expr = &((*(_68317_ins))._field_Methods);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1bdbab977:;
									if (it != expr_end) {
										jule::Ptr<_1aa3315b6_Fn> _68418_m = *it;
										{
											if ((!(_1abb18396_isHeadDecl(&(_68418_m))))) {
												_1abb0cec3_pushResult(_self_, &(_68418_m));
												_1abb11845_funcDecl(_self_, &(_68418_m), false);
											};
										}
										_iter_next_1bdbab977:;
										++it;
										goto _iter_begin_1bdbab977;
									}
									_iter_end_1bdbab977:;
								};
							}
							_iter_next_1bdbab03c:;
							++it;
							goto _iter_begin_1bdbab03c;
						}
						_iter_end_1bdbab03c:;
					};
				};
			}
			_iter_next_1bdba8e3b:;
			++it;
			goto _iter_begin_1bdba8e3b;
		}
		_iter_end_1bdba8e3b:;
	};
}



inline void _1abb1116e_funcHead(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, _1ed486d49_StrBuilder* _69930_buf, jule::Ptr<_1aa334597_FnIns>* _69952_f, jule::Bool _69963_ptr, jule::Str _69974_ident) {
	if ((((!(_69963_ptr)) && _1aa8a97ba_Inline) && (!(_1aa332089_IsEntryPoint((*((*(_69952_f))))._field_Decl.ptr()))))) {
		_1ed4909ac_WriteStr(_69930_buf, jule::Str::lit("inline ", 7));
	};
	_1abb1ee3b_funcInsResult((*(_self_))._field_tc.ptr(), _69930_buf, _69952_f);
	if (_69963_ptr) {
		_1ed4909ac_WriteStr(_69930_buf, jule::Str::lit("(*", 2));
		static__1aba4a6d5_funcIns(_69930_buf, _69952_f);
		_1ed490c65_WriteByte(_69930_buf, ')');
	} else {
		_1ed490c65_WriteByte(_69930_buf, ' ');
		if ((_69974_ident).empty()) {
			static__1aba4a6d5_funcIns(_69930_buf, _69952_f);
		} else {
			_1ed4909ac_WriteStr(_69930_buf, _69974_ident);
		};
	};
}



inline void _1abb114d2_funcDeclIns(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa334597_FnIns>* _71833_f, jule::Bool _71844_ptr) {
	_1abb0bb4d_indent(_self_);
	_1abb1116e_funcHead(_self_, &((*_self_.alloc)._field_Buf), _71833_f, _71844_ptr, jule::Str());
	_1abb12978_paramsIns(_self_, &((*_self_.alloc)._field_Buf), _71833_f);
	_1abb0b29b_write(_self_, jule::Str::lit(";\n", 2));
}



inline void _1abb11845_funcDecl(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa3315b6_Fn>* _72530_f, jule::Bool _72538_ptr) {
	{
		auto expr = &((*((*(_72530_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdbb2b37:;
		if (it != expr_end) {
			jule::Ptr<_1aa334597_FnIns> _72615_c = *it;
			{
				_1abb114d2_funcDeclIns(_self_, &(_72615_c), _72538_ptr);
			}
			_iter_next_1bdbb2b37:;
			++it;
			goto _iter_begin_1bdbb2b37;
		}
		_iter_end_1bdbb2b37:;
	};
}



inline void _1abb11aed_funcDeclTrait(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa3315b6_Fn>* _73135_f) {
	{
		auto expr = &((*((*(_73135_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdbb3a4a:;
		if (it != expr_end) {
			jule::Ptr<_1aa334597_FnIns> _73215_c = *it;
			{
				jule::Ptr<_1a601a64a_TypeKind> _7338_k = (*((*(_73215_c))._field_Params[0LL]))._field_Kind;;
				(*((*(_73215_c))._field_Params[0LL]))._field_Kind=_1abb08a4b_generalGCPtr;
				_1abb114d2_funcDeclIns(_self_, &(_73215_c), true);
				(*((*(_73215_c))._field_Params[0LL]))._field_Kind=_7338_k;
			}
			_iter_next_1bdbb3a4a:;
			++it;
			goto _iter_begin_1bdbb3a4a;
		}
		_iter_end_1bdbb3a4a:;
	};
}



inline void _1abb11ceb_funcDecls(jule::Ptr<_1abb0aab4_ObjectCoder> _self_) {
	_1aa88a36c_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1aa39ded5_Package>*>((void*)__jule_anon_1bdbb6762, jule::Ptr<__jule_anon_1bdbb6762_ctx>::make(__jule_anon_1bdbb6762_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdbb6762_ctx_handler));
}



inline void _1abb120a4_traitDataTypeMethods(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa345047_Trait>* _75342_t) {
	_1aa88b219_IterTraitMethods(_75342_t, jule::__new_closure<void,jule::Ptr<_1aa3315b6_Fn>*>((void*)__jule_anon_1bdbb7c2a, jule::Ptr<__jule_anon_1bdbb7c2a_ctx>::make(__jule_anon_1bdbb7c2a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdbb7c2a_ctx_handler));
}



inline void _1abb122a2_traitDataTypes(jule::Ptr<_1abb0aab4_ObjectCoder> _self_) {
	_1aa88a36c_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1aa39ded5_Package>*>((void*)__jule_anon_1bdbbd329, jule::Ptr<__jule_anon_1bdbbd329_ctx>::make(__jule_anon_1bdbbd329_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdbbd329_ctx_handler));
}



inline void _1abb12615_paramIns(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, _1ed486d49_StrBuilder* _78930_buf, jule::Ptr<_1aa33351e_ParamIns>* _78952_p) {
	_1abb1e765_paramIns((*(_self_))._field_tc.ptr(), _78930_buf, _78952_p);
	_1ed490c65_WriteByte(_78930_buf, ' ');
	static__1aba4acac_param(_78930_buf, &((*((*(_78952_p))))._field_Decl));
}



inline void _1abb12978_paramsIns(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, _1ed486d49_StrBuilder* _79531_buf, jule::Ptr<_1aa334597_FnIns>* _79553_f) {
	if (((!((*((*(_79553_f))))._field_AsAnon)) && ((*((*(_79553_f))))._field_Params.len() == 0LL))) {
		_1ed4909ac_WriteStr(_79531_buf, jule::Str::lit("(void)", 6));
		return;;
	};
	_1ed490c65_WriteByte(_79531_buf, '(');
	if ((*((*(_79553_f))))._field_AsAnon) {
		_1ed4909ac_WriteStr(_79531_buf, jule::Str::lit("jule::Ptr<jule::Uintptr> __f_ctx", 32));
		if (((*((*(_79553_f))))._field_Params.len() > 0LL)) {
			_1ed4909ac_WriteStr(_79531_buf, jule::Str::lit(", ", 2));
		};
	};
	{
		auto expr = &((*((*(_79553_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdbc65b8:;
		if (it != expr_end) {
			jule::I32 _8078_i = it - expr->begin();
			jule::Ptr<_1aa33351e_ParamIns> _80715_p = *it;
			{
				_1abb12615_paramIns(_self_, _79531_buf, &(_80715_p));
				if ((((*((*(_79553_f))))._field_Params.len() - _8078_i) > 1LL)) {
					_1ed4909ac_WriteStr(_79531_buf, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1bdbc65b8:;
			++it;
			_8078_i++;
			goto _iter_begin_1bdbc65b8;
		}
		_iter_end_1bdbc65b8:;
	};
	_1ed490c65_WriteByte(_79531_buf, ')');
}



inline void _1abb12cdb_varInitExpr(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa3e4d3e_Var>* _81633_v, jule::Fn<void> _81642_init) {
	if ((*((*(_81633_v))))._field_Statically) {
		_1abb0b29b_write(_self_, jule::Str::lit("static ", 7));
	};
	_1abb20975_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*((*(_81633_v))))._field_Kind))._field_Kind);
	_1abb0b29b_write(_self_, jule::Str::lit(" ", 1));
	if ((*((*(_81633_v))))._field_Reference) {
		_1abb0b29b_write(_self_, jule::Str::lit("*", 1));
	};
	static__1aba4b95b_var(&((*_self_.alloc)._field_Buf), (*(_81633_v)));
	if ((_81642_init != nullptr)) {
		_1abb0b29b_write(_self_, jule::Str::lit(" = ", 3));
		_81642_init();
	};
	_1abb0b29b_write(_self_, jule::Str::lit(";", 1));
}



inline void _1abb13094_var(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa3e4d3e_Var> _83424_v) {
	if (_1aa2d7aab_IsIgnoreIdent((*(_83424_v))._field_Ident)) {
		return;;
	};
	if ((((*_83424_v.alloc)._field_Value != nullptr) && ((*(*(_83424_v))._field_Value.alloc)._field_Expr != nullptr))) {
		if (((*((*(*(_83424_v))._field_Value.alloc)._field_Data))._field_Model != nullptr)) {
			if ((*_83424_v.alloc)._field_Reference) {
				_1abb12cdb_varInitExpr(_self_, &(_83424_v), jule::__new_closure<void>((void*)__jule_anon_1bdbcd911, jule::Ptr<__jule_anon_1bdbcd911_ctx>::make(__jule_anon_1bdbcd911_ctx{._self_=_self_,._83424_v=_83424_v}).as<jule::Uintptr>(), __jule_anon_1bdbcd911_ctx_handler));
			} else {
				_1abb12cdb_varInitExpr(_self_, &(_83424_v), jule::__new_closure<void>((void*)__jule_anon_1bdbd09ce, jule::Ptr<__jule_anon_1bdbd09ce_ctx>::make(__jule_anon_1bdbd09ce_ctx{._self_=_self_,._83424_v=_83424_v}).as<jule::Uintptr>(), __jule_anon_1bdbd09ce_ctx_handler));
			};
			return;;
		};
		_1abb12cdb_varInitExpr(_self_, &(_83424_v), nullptr);
		return;;
	};
	if ((*_83424_v.alloc)._field_Reference) {
		_1abb12cdb_varInitExpr(_self_, &(_83424_v), jule::__new_closure<void>((void*)__jule_anon_1bdbd31b8, jule::Ptr<__jule_anon_1bdbd31b8_ctx>::make(__jule_anon_1bdbd31b8_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdbd31b8_ctx_handler));
		return;;
	};
	if (_1abb27b03_shouldInitialized(&((*((*_83424_v.alloc)._field_Kind))._field_Kind))) {
		_1abb12cdb_varInitExpr(_self_, &(_83424_v), jule::__new_closure<void>((void*)__jule_anon_1bdbd4340, jule::Ptr<__jule_anon_1bdbd4340_ctx>::make(__jule_anon_1bdbd4340_ctx{._self_=_self_,._83424_v=_83424_v}).as<jule::Uintptr>(), __jule_anon_1bdbd4340_ctx_handler));
		return;;
	};
	_1abb12cdb_varInitExpr(_self_, &(_83424_v), nullptr);
}



inline void _1abb13407_anonFuncInsDecl(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa326545_AnonFnExprModel>* _86537_m, jule::Str _86558_ident) {
	_1abb1116e_funcHead(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_86537_m))))._field_Func), false, _86558_ident);
	_1abb12978_paramsIns(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_86537_m))))._field_Func));
	_1ed490c65_WriteByte(&(*_self_.alloc)._field_anonObj, ';');
}



inline void _1abb1376a_anonFuncIns(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa326545_AnonFnExprModel>* _87133_m, jule::Str _87154_ident) {
	_1abb1116e_funcHead(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_87133_m))))._field_Func), false, _87154_ident);
	_1abb12978_paramsIns(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_87133_m))))._field_Func));
	_1abb0b29b_write(_self_, jule::Str::lit(" ", 1));
	_1aba2e785_anonFuncScope((*_self_.alloc)._field_sc, (*(_87133_m)), _87154_ident);
	if (((*((*((*(_87133_m))))._field_Func))._field_Scope != nullptr)) {
		_1abb0b29b_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1abb13acd_funcIns(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa334597_FnIns>* _88129_f, jule::Str _88140_ident) {
	_1abb1116e_funcHead(_self_, &((*_self_.alloc)._field_Buf), _88129_f, false, _88140_ident);
	_1abb12978_paramsIns(_self_, &((*_self_.alloc)._field_Buf), _88129_f);
	_1abb0b29b_write(_self_, jule::Str::lit(" ", 1));
	_1aba2ea3d_funcScope((*_self_.alloc)._field_sc, (*(_88129_f)));
	if (((*((*(_88129_f))))._field_Scope != nullptr)) {
		_1abb0b29b_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1abb13d86_func(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa3315b6_Fn>* _89126_f) {
	{
		auto expr = &((*((*(_89126_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdbdcaeb:;
		if (it != expr_end) {
			jule::Ptr<_1aa334597_FnIns> _89215_ins = *it;
			{
				_1abb13acd_funcIns(_self_, &(_89215_ins), jule::Str());
			}
			_iter_next_1bdbdcaeb:;
			++it;
			goto _iter_begin_1bdbdcaeb;
		}
		_iter_end_1bdbdcaeb:;
	};
}



inline void _1abb141e9_funcTrait(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa31e373_StructIns>* _89727_s, jule::Ptr<_1aa334597_FnIns>* _89747_f) {
	(*((*(_89747_f))))._field_Scope=nullptr;
	_1ed486d49_StrBuilder _9007_nident = static__1ed487146_New(30LL);;
	_1ed4909ac_WriteStr(&_9007_nident, jule::Str::lit("__jule_trait_method_", 20));
	_1ed4909ac_WriteStr(&_9007_nident, _1a6e6906a_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_89747_f)))), 15LL));
	_1ed4909ac_WriteStr(&_9007_nident, jule::Str::lit("_", 1));
	_1ed4909ac_WriteStr(&_9007_nident, _1a6e6906a_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_89727_s)))), 15LL));
	jule::Ptr<_1a601a64a_TypeKind> _9067_k = (*((*((*(_89747_f))))._field_Params[0LL]))._field_Kind;;
	(*((*((*(_89747_f))))._field_Params[0LL]))._field_Kind=_1abb08a4b_generalGCPtr;
	_1abb13acd_funcIns(_self_, _89747_f, _1ed4912a4_Str(&_9007_nident));
	(*((*((*(_89747_f))))._field_Params[0LL]))._field_Kind=_9067_k;
}



inline __jule_tuple_x_1aa334597_FnIns__jule_tuple_bool _1abb1453a_findTraitMetMap(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa3315b6_Fn>* _91237_m) {
	__jule_tuple_x_1aa334597_FnIns__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1aa334597_FnIns> _9137_mins = (*((*(_91237_m))))._field_Instances[0LL];;
	{
		auto expr = &((*(_self_))._field_traitMetMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdbe33b5:;
		if (it != expr_end) {
			jule::Ptr<_1aa334597_FnIns> _91412_f = it->first;
			{
				if (((((*((*(_91412_f))._field_Decl))._field_Public == (*((*(_91237_m))))._field_Public) && ((*(*(_91412_f))._field_Decl.alloc)._field_Ident == (*((*(_91237_m))))._field_Ident)) && _1aa335202_EqualFn(_91412_f, &(_9137_mins)))) {
					__jule_func_result.__jule_result_arg0 = _91412_f;
					__jule_func_result.__jule_result_arg1 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1bdbe33b5:;
			++it;
			goto _iter_begin_1bdbe33b5;
		}
		_iter_end_1bdbe33b5:;
	};
	__jule_func_result.__jule_result_arg0 = _9137_mins;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline void _1abb1489d_traitWrapper(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa345047_Trait>* _92434_t, jule::Ptr<_1aa3315b6_Fn>* _92450_m) {
	_julec_label_1bdbe5ac1:;
	{
		auto expr = &((*((*(_92434_t))))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdbe5c69:;
		if (it != expr_end) {
			jule::Ptr<_1aa31b518_Struct> _92615_imp = *it;
			{
				jule::Ptr<_1aa334597_FnIns> _9278_mepf;
				jule::Bool _92714_exist;
				({
					__jule_tuple_x_1aa334597_FnIns__jule_tuple_bool __jule_assign_result = _1abb1453a_findTraitMetMap(_self_, _92450_m);
					_9278_mepf = __jule_assign_result.__jule_result_arg0;
					_92714_exist = __jule_assign_result.__jule_result_arg1;
				});
				if (_92714_exist) {
					jule::Slice<jule::Uintptr> _9309_vals = ({ jule::Slice<jule::Uintptr> __lookup_val; jule::Bool __lookup_ok; (*_self_.alloc)._field_traitMetMap.lookup(_9278_mepf, &__lookup_val, &__lookup_ok); if (!__lookup_ok) __lookup_val = jule::Slice<jule::Uintptr>(nullptr); __lookup_val; });;
					{
						auto expr = &(_9309_vals);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bdbe7b06:;
						if (it != expr_end) {
							jule::Uintptr _93112_val = *it;
							{
								if ((_93112_val == static_cast<jule::Uintptr>(_92615_imp))) {
									goto _iter_next_1bdbe5c69;
								};
							}
							_iter_next_1bdbe7b06:;
							++it;
							goto _iter_begin_1bdbe7b06;
						}
						_iter_end_1bdbe7b06:;
					};
					(*_self_.alloc)._field_traitMetMap[_9278_mepf]=jule::append(_9309_vals,({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Uintptr>(_92615_imp); __jule_collection; }));
				} else {
					(*_self_.alloc)._field_traitMetMap[_9278_mepf]=jule::append(({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }),({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Uintptr>(_92615_imp); __jule_collection; }));
				};
				{
					auto expr = &((*(_92615_imp))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bdbe892b:;
					if (it != expr_end) {
						jule::Ptr<_1aa31e373_StructIns> _94116_ins = *it;
						{
							_1abb141e9_funcTrait(_self_, &(_94116_ins), &(_9278_mepf));
							jule::Ptr<_1aa3315b6_Fn> _9449_sm = _1aa32041d_FindMethod(_94116_ins.ptr(), (*((*(_92450_m))))._field_Ident, false);;
							if (((_9449_sm == nullptr) || ((*(_9449_sm))._field_Instances.len() == 0LL))) {
								return;;
							};
							_1abb0b752_addIndent(_self_);
							_1abb0b29b_write(_self_, jule::Str::lit("{\n", 2));
							_1abb0bb4d_indent(_self_);
							if (((*((*(_92450_m))))._field_Exceptional || (!(_1aa331a6c_IsVoid((*(_92450_m)).ptr()))))) {
								_1abb0b29b_write(_self_, jule::Str::lit("return ", 7));
							};
							static__1aba4a3e9_func(&((*_self_.alloc)._field_Buf), &(_9449_sm));
							_1abb0b29b_write(_self_, jule::Str::lit("(", 1));
							_1abb0b29b_write(_self_, jule::Str::lit("_self_.as<", 10));
							_1abb1dc2b_structureIns((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), _94116_ins);
							_1abb0b29b_write(_self_, jule::Str::lit(">()", 3));
							jule::Bool _9615_ptr = (!(_1aa3304c7_IsRef((*((*(_92450_m))))._field_Params[0LL].ptr())));;
							if (_9615_ptr) {
								_1abb0b29b_write(_self_, jule::Str::lit(".alloc", 6));
							};
							{
								auto expr = (*((*(_92450_m))))._field_Params.slice(1LL);
								auto it = expr.begin();
								auto expr_end = expr.end();
								_iter_begin_1bdc00218:;
								if (it != expr_end) {
									jule::Ptr<_1aa32eae2_Param> _96512_mp = *it;
									{
										_1abb0b29b_write(_self_, jule::Str::lit(", ", 2));
										static__1aba4acac_param(&((*_self_.alloc)._field_Buf), &(_96512_mp));
									}
									_iter_next_1bdc00218:;
									++it;
									goto _iter_begin_1bdc00218;
								}
								_iter_end_1bdc00218:;
							};
							_1abb0b29b_write(_self_, jule::Str::lit(");\n}\n", 5));
							_1abb0b950_doneIndent(_self_);
						}
						_iter_next_1bdbe892b:;
						++it;
						goto _iter_begin_1bdbe892b;
					}
					_iter_end_1bdbe892b:;
				};
			}
			_iter_next_1bdbe5c69:;
			++it;
			goto _iter_begin_1bdbe5c69;
		}
		_iter_end_1bdbe5c69:;
	};
}



inline void _1abb14a9b_traitWrappers(jule::Ptr<_1abb0aab4_ObjectCoder> _self_) {
	_1aa88a36c_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1aa39ded5_Package>*>((void*)__jule_anon_1bdc0257d, jule::Ptr<__jule_anon_1bdc0257d_ctx>::make(__jule_anon_1bdc0257d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdc0257d_ctx_handler));
}



inline void _1abb14e0e_traitDataMethods(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa345047_Trait>* _99038_t, jule::Ptr<_1aa31e373_StructIns> _99049_s) {
	_1aa88b219_IterTraitMethods(_99038_t, jule::__new_closure<void,jule::Ptr<_1aa3315b6_Fn>*>((void*)__jule_anon_1bdc03914, jule::Ptr<__jule_anon_1bdc03914_ctx>::make(__jule_anon_1bdc03914_ctx{._self_=_self_,._99049_s=_99049_s}).as<jule::Uintptr>(), __jule_anon_1bdc03914_ctx_handler));
}



inline void _1abb1532c_traitData(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa345047_Trait>* _100731_t, jule::I32 _100742_i, jule::Ptr<_1aa31e373_StructIns>* _100755_s) {
	_1ed486d49_StrBuilder _10087_ident = static__1ed487146_New((*((*(_100731_t))))._field_Ident.len());;
	static__1aba4a9c1_traitDecl(&(_10087_ident), (*(_100731_t)));
	_1abb0b29b_write(_self_, jule::Str::lit("static ", 7));
	_1abb0b554_writeBytes(_self_, _1ed491c55_Buf(&_10087_ident));
	_1abb0b29b_write(_self_, jule::Str::lit("MptrData ", 9));
	_1abb0b554_writeBytes(_self_, _1ed491c55_Buf(&_10087_ident));
	_1abb0b29b_write(_self_, jule::Str::lit("_mptr_data", 10));
	_1abb0b29b_write(_self_, _1a6e696ec_Itoa(_100742_i));
	_1abb0b29b_write(_self_, jule::Str::lit(" {\n", 3));
	_1abb0b752_addIndent(_self_);
	_1abb0bb4d_indent(_self_);
	_1abb0b29b_write(_self_, jule::Str::lit(".dealloc=__jule_type_deallocator", 32));
	_1abb0b29b_write(_self_, _1a6e696ec_Itoa(_1abb0c2d0_pushDealloc(_self_, jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_100755_s)), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data0)}))));
	_1abb0b29b_write(_self_, jule::Str::lit(",\n", 2));
	_1abb14e0e_traitDataMethods(_self_, _100731_t, (*(_100755_s)));
	_1abb0b950_doneIndent(_self_);
	_1abb0b29b_write(_self_, jule::Str::lit("};\n", 3));
}



inline void _1abb1552a_traitDatas(jule::Ptr<_1abb0aab4_ObjectCoder> _self_) {
	_1aa88a36c_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1aa39ded5_Package>*>((void*)__jule_anon_1bdc1134a, jule::Ptr<__jule_anon_1bdc1134a_ctx>::make(__jule_anon_1bdc1134a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdc1134a_ctx_handler));
}



inline void _1abb15728_globalDecls(jule::Ptr<_1abb0aab4_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdc10aa8:;
		if (it != expr_end) {
			jule::Ptr<_1aa3e4d3e_Var> _104415_v = *it;
			{
				_1abb20975_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_104415_v))._field_Kind))._field_Kind);
				_1abb0b29b_write(_self_, jule::Str::lit(" ", 1));
				static__1aba4b95b_var(&((*_self_.alloc)._field_Buf), _104415_v);
				_1abb0b29b_write(_self_, jule::Str::lit(";", 1));
			}
			_iter_next_1bdc10aa8:;
			++it;
			goto _iter_begin_1bdc10aa8;
		}
		_iter_end_1bdc10aa8:;
	};
}



inline void _1abb15926_decls(jule::Ptr<_1abb0aab4_ObjectCoder> _self_) {
	_1abb0e447_structurePlainDecls(_self_);
	_1abb10998_structureDecls(_self_);
	(*_self_.alloc)._field_headPos=_1ed491738_Len(&(*_self_.alloc)._field_Buf);
	_1abb10b96_structureMethodDecls(_self_);
	_1abb11ceb_funcDecls(_self_);
	_1abb0b29b_write(_self_, jule::Str::lit("\n\n", 2));
	_1abb122a2_traitDataTypes(_self_);
	_1abb0b29b_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_wrapPos=_1ed491738_Len(&(*_self_.alloc)._field_Buf);
	_1abb14a9b_traitWrappers(_self_);
	_1abb0b29b_write(_self_, jule::Str::lit("\n\n", 2));
	_1abb1552a_traitDatas(_self_);
	_1abb0b29b_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_declPos=_1ed491738_Len(&(*_self_.alloc)._field_Buf);
	_1abb15728_globalDecls(_self_);
}



inline void _1abb15bce_structureMethods(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa31e373_StructIns>* _107038_s) {
	{
		auto expr = &((*((*(_107038_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdc1b0ad:;
		if (it != expr_end) {
			jule::Ptr<_1aa3315b6_Fn> _107115_f = *it;
			{
				_1abb13d86_func(_self_, &(_107115_f));
				_1abb0b29b_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1bdc1b0ad:;
			++it;
			goto _iter_begin_1bdc1b0ad;
		}
		_iter_end_1bdc1b0ad:;
	};
}



inline void _1abb15e87_structureOstream(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa31e373_StructIns>* _107738_s) {
	_1abb0bb4d_indent(_self_);
	_1abb0b29b_write(_self_, jule::Str::lit("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	static__1aba4b384_structureIns(&((*_self_.alloc)._field_Buf), _107738_s);
	_1abb0b29b_write(_self_, jule::Str::lit(" _Src) {\n", 9));
	_1abb0b752_addIndent(_self_);
	_1abb0bb4d_indent(_self_);
	jule::Ptr<_1aa3315b6_Fn> _10857_fts = _1aa32041d_FindMethod((*(_107738_s)).ptr(), jule::Str::lit("Str", 3), false);;
	if (static__1aa3e6703_Str(_10857_fts)) {
		_1abb0b29b_write(_self_, jule::Str::lit("_Stream << ", 11));
		static__1aba4a3e9_func(&((*_self_.alloc)._field_Buf), &(_10857_fts));
		_1abb0b29b_write(_self_, jule::Str::lit("(&_Src);\n", 9));
	} else {
		_1abb0b29b_write(_self_, jule::Str::lit("_Stream << \"", 12));
		_1aba43e09_cstrBytes(&((*_self_.alloc)._field_Buf), (*((*((*(_107738_s))))._field_Decl))._field_Ident);
		_1abb0b29b_write(_self_, jule::Str::lit("{\";\n", 4));
		{
			auto expr = &((*((*(_107738_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bdc20bea:;
			if (it != expr_end) {
				jule::I32 _10959_i = it - expr->begin();
				jule::Ptr<_1aa31d7c3_FieldIns> _109516_f = *it;
				{
					_1abb0bb4d_indent(_self_);
					_1abb0b29b_write(_self_, jule::Str::lit("_Stream << \"", 12));
					_1aba43e09_cstrBytes(&((*_self_.alloc)._field_Buf), (*((*(_109516_f))._field_Decl))._field_Ident);
					_1abb0b29b_write(_self_, jule::Str::lit(":", 1));
					jule::Ptr<_1aa31e373_StructIns> _11025_strct = _1a601e374_Struct((*_109516_f.alloc)._field_Kind.ptr());;
					if ((((_11025_strct != nullptr) && ((*_11025_strct.alloc)._field_Decl != nullptr)) && (*(*(_11025_strct))._field_Decl.alloc)._field_Binded)) {
						_1abb0b29b_write(_self_, jule::Str::lit(" cpp.", 5));
						static__1aba4b670_field(&((*_self_.alloc)._field_Buf), &((*_109516_f.alloc)._field_Decl));
						_1abb0b29b_write(_self_, jule::Str::lit("\"", 1));
					} else {
						_1abb0b29b_write(_self_, jule::Str::lit("\" << _Src.", 10));
						static__1aba4b670_field(&((*_self_.alloc)._field_Buf), &((*_109516_f.alloc)._field_Decl));
					};
					if (((_10959_i + 1LL) < (*((*(_107738_s))))._field_Fields.len())) {
						_1abb0b29b_write(_self_, jule::Str::lit(" << \", \"", 8));
					};
					_1abb0b29b_write(_self_, jule::Str::lit(";\n", 2));
				}
				_iter_next_1bdc20bea:;
				++it;
				_10959_i++;
				goto _iter_begin_1bdc20bea;
			}
			_iter_end_1bdc20bea:;
		};
		_1abb0bb4d_indent(_self_);
		_1abb0b29b_write(_self_, jule::Str::lit("_Stream << \"}\";\n", 16));
	};
	_1abb0bb4d_indent(_self_);
	_1abb0b29b_write(_self_, jule::Str::lit("return _Stream;\n", 16));
	_1abb0b950_doneIndent(_self_);
	_1abb0b29b_write(_self_, jule::Str::lit("}", 1));
}



inline void _1abb16240_structureIns(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa31e373_StructIns>* _112834_s) {
	;
	_1abb10239_structureOperators(_self_, _112834_s, false);
	_1abb15bce_structureMethods(_self_, _112834_s);
	_1abb0b29b_write(_self_, jule::Str::lit("\n\n", 2));
	_1abb15e87_structureOstream(_self_, _112834_s);
}



inline void _1abb164e8_structure(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa31b518_Struct>* _113631_s) {
	{
		auto expr = &((*((*(_113631_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdc2a83c:;
		if (it != expr_end) {
			jule::Ptr<_1aa31e373_StructIns> _113715_ins = *it;
			{
				_1abb16240_structureIns(_self_, &(_113715_ins));
				_1abb0b29b_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1bdc2a83c:;
			++it;
			goto _iter_begin_1bdc2a83c;
		}
		_iter_end_1bdc2a83c:;
	};
}



inline void _1abb166e6_structures(jule::Ptr<_1abb0aab4_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdc2b08a:;
		if (it != expr_end) {
			jule::Ptr<_1aa31b518_Struct> _114415_s = *it;
			{
				if (((*(_114415_s))._field_Token != nullptr)) {
					_1abb164e8_structure(_self_, &(_114415_s));
					_1abb0b29b_write(_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1bdc2b08a:;
			++it;
			goto _iter_begin_1bdc2b08a;
		}
		_iter_end_1bdc2b08a:;
	};
}



inline void _1abb168e4_funcs(jule::Ptr<_1abb0aab4_ObjectCoder> _self_) {
	_1aa88a36c_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1aa39ded5_Package>*>((void*)__jule_anon_1bdc2db5e, jule::Ptr<__jule_anon_1bdc2db5e_ctx>::make(__jule_anon_1bdc2db5e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdc2db5e_ctx_handler));
}



inline void _1abb16b9c_pushInit(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, jule::Ptr<_1aa39ded5_Package>* _116830_pkg) {
	_1aa88a69c_IterFiles(_116830_pkg, jule::__new_closure<void,jule::Ptr<_1aa4475cd_SymbolTable>*>((void*)__jule_anon_1bdc30127, jule::Ptr<__jule_anon_1bdc30127_ctx>::make(__jule_anon_1bdc30127_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdc30127_ctx_handler));
}



inline void _1abb16d9a_anonHashes(jule::Ptr<_1abb0aab4_ObjectCoder> _self_) {
	_julec_label_1bdc33bec:;
	jule::Slice<jule::Ptr<_1abb0960c_anonHash>> _11857_anons = (*(_self_))._field_anons;;
	(*_self_.alloc)._field_anons=nullptr;
	{
		auto expr = &(_11857_anons);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdc351b5:;
		if (it != expr_end) {
			jule::Ptr<_1abb0960c_anonHash> _118715_h = *it;
			{
				_1abb1376a_anonFuncIns(_self_, &((*(_118715_h))._field_expr), (*_118715_h.alloc)._field_ident);
			}
			_iter_next_1bdc351b5:;
			++it;
			goto _iter_begin_1bdc351b5;
		}
		_iter_end_1bdc351b5:;
	};
	if (((*_self_.alloc)._field_anons.len() > 0LL)) {
		goto _julec_label_1bdc33bec;
	};
}



inline void _1abb17098_initGlobals(jule::Ptr<_1abb0aab4_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdc36e42:;
		if (it != expr_end) {
			jule::Ptr<_1aa3e4d3e_Var> _119615_v = *it;
			{
				static__1aba4b95b_var(&((*(_self_))._field_Buf), _119615_v);
				_1abb0b29b_write(_self_, jule::Str::lit(" = ", 3));
				_1aba422ae_model((*_self_.alloc)._field_ec, (*((*((*(_119615_v))._field_Value))._field_Data))._field_Model);
				_1abb0b29b_write(_self_, jule::Str::lit(";\n", 2));
				_1ed490c65_WriteByte(&(*_self_.alloc)._field_Buf, 9LLU);
			}
			_iter_next_1bdc36e42:;
			++it;
			goto _iter_begin_1bdc36e42;
		}
		_iter_end_1bdc36e42:;
	};
}



inline void _1abb17296_initCaller(jule::Ptr<_1abb0aab4_ObjectCoder> _self_) {
	_1abb0b29b_write(_self_, jule::Str::lit("void __jule_call_initializers(void) {\n", 38));
	_1abb0b752_addIndent(_self_);
	_1aa88a36c_IterPackages(&((*_self_.alloc)._field_ir), jule::__new_closure<void,jule::Ptr<_1aa39ded5_Package>*>((void*)__jule_anon_1bdc3a8e6, jule::Ptr<__jule_anon_1bdc3a8e6_ctx>::make(__jule_anon_1bdc3a8e6_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdc3a8e6_ctx_handler));
	_1abb0b950_doneIndent(_self_);
	_1abb0b29b_write(_self_, jule::Str::lit("\n}", 2));
}



inline void _1abb17494_end(jule::Ptr<_1abb0aab4_ObjectCoder> _self_) {
	_1abb0b29b_write(_self_, jule::Str::lit("int main(int argc, char *argv[], char *envp[]) {\n\tjule::setup_argv(argc, argv);\n\tjule::setup_envp(envp);\n\n\t", 107));
	_1abb17098_initGlobals(_self_);
	_1abb0b29b_write(_self_, jule::Str::lit("__jule_call_initializers();\n\t", 29));
	if (_1adc4ec28_Test) {
		_1abb0b29b_write(_self_, jule::Str::lit("test_point();", 13));
	} else {
		_1abb0b29b_write(_self_, jule::Str::lit("entry_point();", 14));
	};
	_1abb0b29b_write(_self_, jule::Str::lit("\n\n\treturn EXIT_SUCCESS;\n}", 25));
}



inline void _1abb17807_insertBuf(jule::Ptr<_1abb0aab4_ObjectCoder> _self_, _1ed486d49_StrBuilder* _123731_buf, jule::I32 _123748_pos) {
	if ((_1ed491738_Len(_123731_buf) > 0LL)) {
		jule::Slice<jule::U8> _12398_head = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, (_1ed491738_Len(&(*(_self_))._field_Buf) + _1ed491738_Len(_123731_buf))); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
		(_12398_head).append(_1ed491c55_Buf(&(*_self_.alloc)._field_Buf).slice(0LL, _123748_pos));;
		(_12398_head).append(_1ed491c55_Buf(_123731_buf));;
		(_12398_head).append(_1ed491c55_Buf(&(*_self_.alloc)._field_Buf).slice(_123748_pos));;
		{
			_1ed49200d_SetBuf(&(*_self_.alloc)._field_Buf, _12398_head);
		};
	};
}



inline void _1abb17a05_serializeHead(jule::Ptr<_1abb0aab4_ObjectCoder> _self_) {
	_1abb0de91_prepareStructures(_self_);
	_1abb0d7dc_head(_self_);
	_1abb0b29b_write(_self_, jule::Str::lit("\n", 1));
	_1abb15926_decls(_self_);
	_1abb17807_insertBuf(_self_, &((*_self_.alloc)._field_resultDecls), (*_self_.alloc)._field_headPos);
	(*_self_.alloc)._field_wrapPos+=_1ed491738_Len(&(*_self_.alloc)._field_resultDecls);
	(*_self_.alloc)._field_declPos+=_1ed491738_Len(&(*_self_.alloc)._field_resultDecls);
	_1abb0b29b_write(_self_, jule::Str::lit("\n", 1));
	_1abb166e6_structures(_self_);
	_1abb168e4_funcs(_self_);
	_1abb17296_initCaller(_self_);
	_1abb0b29b_write(_self_, jule::Str::lit("\n\n", 2));
	_1abb16d9a_anonHashes(_self_);
	_1abb17807_insertBuf(_self_, &((*_self_.alloc)._field_deallocObj), (*_self_.alloc)._field_wrapPos);
	(*_self_.alloc)._field_wrapPos+=_1ed491738_Len(&(*_self_.alloc)._field_deallocObj);
	(*_self_.alloc)._field_declPos+=_1ed491738_Len(&(*_self_.alloc)._field_deallocObj);
	_1abb17807_insertBuf(_self_, &((*_self_.alloc)._field_anyObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_1ed491738_Len(&(*_self_.alloc)._field_anyObj);
	_1abb17807_insertBuf(_self_, &((*_self_.alloc)._field_anonObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_1ed491738_Len(&(*_self_.alloc)._field_anonObj);
}



inline void _1abb17c03_Serialize(jule::Ptr<_1abb0aab4_ObjectCoder> _self_) {
	_1abb17a05_serializeHead(_self_);
	_1abb17494_end(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1abb0aab4_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Buf:" << _Src._field_Buf << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "anonObj:" << _Src._field_anonObj << ", ";
	_Stream << "deallocObj:" << _Src._field_deallocObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "anons:" << _Src._field_anons << ", ";
	_Stream << "deallocated:" << _Src._field_deallocated << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "traitCastMap:" << _Src._field_traitCastMap << ", ";
	_Stream << "traitMetMap:" << _Src._field_traitMetMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos << ", ";
	_Stream << "wrapPos:" << _Src._field_wrapPos;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1abb19b39_customType_eq(_1abb19b39_customType *_self_, _1abb19b39_customType _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind);
}

inline jule::Str _1abb1a035_Str(_1abb19b39_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1abb1a376_Equal(jule::Ptr<_1abb19b39_customType> _self_, jule::Ptr<_1a601a64a_TypeKind> _4418_k) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1abb19b39_customType _Src) {
	_Stream << _1abb1a035_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1abb1a772_typeCoder_eq(_1abb1a772_typeCoder *_self_, _1abb1a772_typeCoder _other_) {
	return 
		(_self_->_field_oc == _other_._field_oc) &&
		(_self_->_field_rc == _self_->_field_rc);
}

inline jule::Ptr<_1abb1a772_typeCoder> static__1abb1acc2_new(jule::Ptr<_1abb0aab4_ObjectCoder>* _6921_oc) {
	jule::Ptr<_1abb1a772_typeCoder> _707_tc = jule::new_ptr<_1abb1a772_typeCoder>(_1abb1a772_typeCoder{._field_oc=(*(_6921_oc)), ._field_rc=jule::Ptr<_1abb2335c_resultCoder>(nullptr)});;
	(*(_707_tc))._field_rc=static__1abb23868_new(&(_707_tc));
	return _707_tc;;
}



inline void _1abb1b135_toType(_1abb1a772_typeCoder* _self_, _1ed486d49_StrBuilder* _7627_buf, jule::Str _7648_id) {
	if ((!_7648_id.equal("uintptr", 7))) {
		_7648_id=_1a6e6b765_RealKindOf(_7648_id);
	};
	_1ed4909ac_WriteStr(_7627_buf, jule::Str::lit("jule::", 6));
	if (((97LL <= _7648_id[0LL]) && (_7648_id[0LL] <= 122LLU))) {
		_1ed490c65_WriteByte(_7627_buf, (jule::U8)(_7648_id[0LL] - 32LLU));
	} else {
		_1ed490c65_WriteByte(_7627_buf, _7648_id[0LL]);
	};
	_1ed4909ac_WriteStr(_7627_buf, _7648_id.slice(1LL));
}



inline void _1abb1b498_prim(_1abb1a772_typeCoder* _self_, _1ed486d49_StrBuilder* _9025_buf, jule::Ptr<_1a6023763_Prim> _9042_p) {
	_1abb1b135_toType(_self_, _9025_buf, (*(_9042_p))._field_Kind);
}



inline void _1abb1b80b_tuple(_1abb1a772_typeCoder* _self_, _1ed486d49_StrBuilder* _9526_buf, jule::Ptr<_1a6028856_Tuple> _9547_t) {
	_1ed4909ac_WriteStr(_9526_buf, jule::Str::lit("std::tuple<", 11));
	{
		auto expr = &((*_9547_t.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdc54503:;
		if (it != expr_end) {
			jule::I32 _978_i = it - expr->begin();
			jule::Ptr<_1a601a64a_TypeKind> _9715_tk = *it;
			{
				_1abb20975_kind(_self_, _9526_buf, _9715_tk);
				if ((((*(_9547_t))._field_Types.len() - _978_i) > 1LL)) {
					_1ed490c65_WriteByte(_9526_buf, ',');
				};
			}
			_iter_next_1bdc54503:;
			++it;
			_978_i++;
			goto _iter_begin_1bdc54503;
		}
		_iter_end_1bdc54503:;
	};
	_1ed490c65_WriteByte(_9526_buf, '>');
}



inline void _1abb1bb6e_asSptr(_1abb1a772_typeCoder* _self_, _1ed486d49_StrBuilder* _10727_buf, jule::Slice<jule::U8> _10744_elem) {
	_1ed4909ac_WriteStr(_10727_buf, jule::Str::lit("jule::Ptr<", 10));
	_1ed490704_Write(_10727_buf, _10744_elem);
	_1ed490c65_WriteByte(_10727_buf, '>');
}



inline void _1abb1bed2_sptr(_1abb1a772_typeCoder* _self_, _1ed486d49_StrBuilder* _11425_buf, jule::Ptr<_1a602728e_Sptr> _11446_sptr) {
	_1ed4909ac_WriteStr(_11425_buf, jule::Str::lit("jule::Ptr<", 10));
	_1abb20975_kind(_self_, _11425_buf, (*(_11446_sptr))._field_Elem);
	_1ed490c65_WriteByte(_11425_buf, '>');
}



inline void _1abb1c345_ptr(_1abb1a772_typeCoder* _self_, _1ed486d49_StrBuilder* _12124_buf, jule::Ptr<_1a602aa56_Ptr> _12145_p) {
	;
	if (_1a602b5c3_IsUnsafe(_12145_p.ptr())) {
		_1ed4909ac_WriteStr(_12124_buf, jule::Str::lit("void*", 5));
	} else {
		_1abb20975_kind(_self_, _12124_buf, (*(_12145_p))._field_Elem);
		_1ed4909ac_WriteStr(_12124_buf, jule::Str::lit("*", 1));
	};
}



inline void _1abb1c6a8_enumDecl(_1abb1a772_typeCoder* _self_, _1ed486d49_StrBuilder* _13229_buf, jule::Ptr<_1aa347753_Enum> _13250_e) {
	_1abb20975_kind(_self_, _13229_buf, (*((*(_13250_e))._field_Kind))._field_Kind);
}



inline void _1abb1ca1b_typeEnumDecl(_1abb1a772_typeCoder* _self_, _1ed486d49_StrBuilder* _13733_buf, jule::Ptr<_1aa348e5d_TypeEnum> _13754_e) {
	_1ed4909ac_WriteStr(_13733_buf, jule::Str::lit("jule::Any", 9));
}



inline void _1abb1cd7e_asSlice(_1abb1a772_typeCoder* _self_, _1ed486d49_StrBuilder* _14128_buf, jule::Ptr<_1a601a64a_TypeKind> _14149_elem) {
	_1ed4909ac_WriteStr(_14128_buf, jule::Str::lit("jule::Slice<", 12));
	_1abb20975_kind(_self_, _14128_buf, _14149_elem);
	_1ed490c65_WriteByte(_14128_buf, '>');
}



inline void _1abb1d1e2_slice(_1abb1a772_typeCoder* _self_, _1ed486d49_StrBuilder* _14826_buf, jule::Ptr<_1a6027c62_Slc> _14847_s) {
	_1abb1cd7e_asSlice(_self_, _14826_buf, (*(_14847_s))._field_Elem);
}



inline void _1abb1d555_mapType(_1abb1a772_typeCoder* _self_, _1ed486d49_StrBuilder* _15328_buf, jule::Ptr<_1a6029406_Map> _15349_m) {
	_1ed4909ac_WriteStr(_15328_buf, jule::Str::lit("jule::Map<", 10));
	_1abb20975_kind(_self_, _15328_buf, (*(_15349_m))._field_Key);
	_1ed490c65_WriteByte(_15328_buf, ',');
	_1abb20975_kind(_self_, _15328_buf, (*_15349_m.alloc)._field_Val);
	_1ed490c65_WriteByte(_15328_buf, '>');
}



inline void _1abb1dc2b_structureIns(_1abb1a772_typeCoder* _self_, _1ed486d49_StrBuilder* _16733_buf, jule::Ptr<_1aa31e373_StructIns> _16754_s) {
	if ((!((*((*(_16754_s))._field_Decl))._field_Binded))) {
		static__1aba4b384_structureIns(_16733_buf, &(_16754_s));
		return;;
	};
	jule::Ptr<_1aa2e9a9b_Directive> _1723_d = _1aa89088e_FindDirective(&((*(*(_16754_s))._field_Decl.alloc)._field_Directives), jule::Str::lit("namespace", 9));;
	if ((_1723_d != nullptr)) {
		_1ed490704_Write(_16733_buf, _1abb18088_concatAllParts((*_1723_d.alloc)._field_Args));
		_1ed4909ac_WriteStr(_16733_buf, jule::Str::lit("::", 2));
	};
	static__1aba4b384_structureIns(_16733_buf, &(_16754_s));
	if (((*_16754_s.alloc)._field_Generics.len() > 0LL)) {
		_1ed490c65_WriteByte(_16733_buf, '<');
		{
			auto expr = &((*_16754_s.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bdc60e9e:;
			if (it != expr_end) {
				jule::I32 _1809_i = it - expr->begin();
				jule::Ptr<_1a6018c64_InsGeneric> _18016_g = *it;
				{
					_1abb20975_kind(_self_, _16733_buf, (*(_18016_g))._field_Kind);
					if ((((*_16754_s.alloc)._field_Generics.len() - _1809_i) > 1LL)) {
						_1ed490c65_WriteByte(_16733_buf, ',');
					};
				}
				_iter_next_1bdc60e9e:;
				++it;
				_1809_i++;
				goto _iter_begin_1bdc60e9e;
			}
			_iter_end_1bdc60e9e:;
		};
		_1ed490c65_WriteByte(_16733_buf, '>');
	};
}



inline void _1abb1e08e_array(_1abb1a772_typeCoder* _self_, _1ed486d49_StrBuilder* _19126_buf, jule::Ptr<_1a602a083_Arr> _19147_a) {
	_1ed4909ac_WriteStr(_19126_buf, jule::Str::lit("jule::Array<", 12));
	_1abb20975_kind(_self_, _19126_buf, (*(_19147_a))._field_Elem);
	_1ed490c65_WriteByte(_19126_buf, ',');
	_1ed4909ac_WriteStr(_19126_buf, _1a6e696ec_Itoa((*_19147_a.alloc)._field_N));
	_1ed490c65_WriteByte(_19126_buf, '>');
}



inline void _1abb1e765_paramIns(_1abb1a772_typeCoder* _self_, _1ed486d49_StrBuilder* _21429_buf, jule::Ptr<_1aa33351e_ParamIns>* _21451_p) {
	if ((*((*((*(_21451_p))))._field_Decl))._field_Variadic) {
		_1ed4909ac_WriteStr(_21429_buf, jule::Str::lit("jule::Slice<", 12));
		_1abb20975_kind(_self_, _21429_buf, (*((*(_21451_p))))._field_Kind);
		_1ed490c65_WriteByte(_21429_buf, '>');
	} else {
		_1abb20975_kind(_self_, _21429_buf, (*((*(_21451_p))))._field_Kind);
	};
	if ((*((*((*(_21451_p))))._field_Decl))._field_Reference) {
		_1ed490c65_WriteByte(_21429_buf, '*');
	};
}



inline void _1abb1ee3b_funcInsResult(_1abb1a772_typeCoder* _self_, _1ed486d49_StrBuilder* _24634_s, jule::Ptr<_1aa334597_FnIns>* _24654_f) {
	if (_1aa331a6c_IsVoid((*((*(_24654_f))))._field_Decl.ptr())) {
		if ((*(*((*(_24654_f))))._field_Decl.alloc)._field_Exceptional) {
			_1ed4909ac_WriteStr(_24634_s, jule::Str::lit("jule::VoidExceptional", 21));
		} else {
			_1ed4909ac_WriteStr(_24634_s, jule::Str::lit("void", 4));
		};
		return;;
	};
	if ((*(*((*(_24654_f))))._field_Decl.alloc)._field_Exceptional) {
		_1ed4909ac_WriteStr(_24634_s, jule::Str::lit("jule::Exceptional<", 18));
		_1abb25925_codeMut1((*(_self_))._field_rc.ptr(), _24634_s, &((*((*(_24654_f))))._field_Result));
		_1ed490c65_WriteByte(_24634_s, '>');
		return;;
	};
	_1abb25925_codeMut1((*(_self_))._field_rc, _24634_s, &((*((*(_24654_f))))._field_Result));
}



inline void _1abb2029e_anonFunc(_1abb1a772_typeCoder* _self_, _1ed486d49_StrBuilder* _26429_buf, jule::Ptr<_1aa334597_FnIns> _26450_f) {
	if ((((*(_26450_f))._field_Result != nullptr) && (_1a601eb27_Tup((*(_26450_f))._field_Result) != nullptr))) {
		_1abb0cc1a_pushResultIns((*(_self_))._field_oc, &(_26450_f));
	};
	_1abb1ee3b_funcInsResult(_self_, _26429_buf, &(_26450_f));
	if (((*_26450_f.alloc)._field_Params.len() == 0LL)) {
		return;;
	};
	_1ed490c65_WriteByte(_26429_buf, ',');
	{
		auto expr = &((*_26450_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdc73951:;
		if (it != expr_end) {
			jule::I32 _2738_i = it - expr->begin();
			jule::Ptr<_1aa33351e_ParamIns> _27315_param = *it;
			{
				if (_1aa330241_IsSelf((*(_27315_param))._field_Decl.ptr())) {
					goto _iter_next_1bdc73951;
				};
				_1abb1e765_paramIns(_self_, _26429_buf, &(_27315_param));
				if ((((*_26450_f.alloc)._field_Params.len() - _2738_i) > 1LL)) {
					_1ed490c65_WriteByte(_26429_buf, ',');
				};
			}
			_iter_next_1bdc73951:;
			++it;
			_2738_i++;
			goto _iter_begin_1bdc73951;
		}
		_iter_end_1bdc73951:;
	};
}



inline void _1abb20612_func(_1abb1a772_typeCoder* _self_, _1ed486d49_StrBuilder* _28525_buf, jule::Ptr<_1aa334597_FnIns> _28546_f) {
	_1ed4909ac_WriteStr(_28525_buf, jule::Str::lit("jule::Fn<", 9));
	_1abb2029e_anonFunc(_self_, _28525_buf, _28546_f);
	_1ed490c65_WriteByte(_28525_buf, '>');
}



inline void _1abb20975_kind(_1abb1a772_typeCoder* _self_, _1ed486d49_StrBuilder* _29225_buf, jule::Ptr<_1a601a64a_TypeKind> _29246_k) {
	{
		
		if ((_1a601e374_Struct(_29246_k.ptr()) != nullptr)) {
			_case_begin_1bdc76e4e:;
			{
				_1abb1dc2b_structureIns(_self_, _29225_buf, _1a601e374_Struct(_29246_k));
				return;;
			}
		}
		else if (_1a601b4e7_Binded(_29246_k.ptr())) {
			_case_begin_1bdc76ee8:;
			{
				_1ed4909ac_WriteStr(_29225_buf, (*_29246_k.alloc)._field_BindIdent);
				return;;
			}
		}
		else if ((_1a601cd01_Prim(_29246_k.ptr()) != nullptr)) {
			_case_begin_1bdc7705e:;
			{
				_1abb1b498_prim(_self_, _29225_buf, _1a601cd01_Prim(_29246_k));
				return;;
			}
		}
		else if ((_1a601eb27_Tup(_29246_k.ptr()) != nullptr)) {
			_case_begin_1bdc770c5:;
			{
				_1abb1b80b_tuple(_self_, _29225_buf, _1a601eb27_Tup(_29246_k));
				return;;
			}
		}
		else if ((_1a601d087_Sptr(_29246_k.ptr()) != nullptr)) {
			_case_begin_1bdc7713b:;
			{
				_1abb1bed2_sptr(_self_, _29225_buf, _1a601d087_Sptr(_29246_k));
				return;;
			}
		}
		else if ((_1a601d31d_Ptr(_29246_k.ptr()) != nullptr)) {
			_case_begin_1bdc771b3:;
			{
				_1abb1c345_ptr(_self_, _29225_buf, _1a601d31d_Ptr(_29246_k));
				return;;
			}
		}
		else if ((_1a601d5a4_Enum(_29246_k.ptr()) != nullptr)) {
			_case_begin_1bdc7723a:;
			{
				_1abb1c6a8_enumDecl(_self_, _29225_buf, _1a601d5a4_Enum(_29246_k));
				return;;
			}
		}
		else if ((_1a601d83a_TypeEnum(_29246_k.ptr()) != nullptr)) {
			_case_begin_1bdc772b2:;
			{
				_1abb1ca1b_typeEnumDecl(_self_, _29225_buf, _1a601d83a_TypeEnum(_29246_k));
				return;;
			}
		}
		else if ((_1a601dd57_Slc(_29246_k.ptr()) != nullptr)) {
			_case_begin_1bdc77339:;
			{
				_1abb1d1e2_slice(_self_, _29225_buf, _1a601dd57_Slc(_29246_k));
				return;;
			}
		}
		else if ((_1a601e891_Map(_29246_k.ptr()) != nullptr)) {
			_case_begin_1bdc773b1:;
			{
				_1abb1d555_mapType(_self_, _29225_buf, _1a601e891_Map(_29246_k));
				return;;
			}
		}
		else if ((_1a601e60a_Trait(_29246_k.ptr()) != nullptr)) {
			_case_begin_1bdc77438:;
			{
				_1ed4909ac_WriteStr(_29225_buf, jule::Str::lit("jule::Trait", 11));
				return;;
			}
		}
		else if ((_1a601dac1_Arr(_29246_k.ptr()) != nullptr)) {
			_case_begin_1bdc774b0:;
			{
				_1abb1e08e_array(_self_, _29225_buf, _1a601dac1_Arr(_29246_k));
				return;;
			}
		}
		else if ((_1a601e0dd_Fn(_29246_k.ptr()) != nullptr)) {
			_case_begin_1bdc77537:;
			{
				_1abb20612_func(_self_, _29225_buf, _1a601e0dd_Fn(_29246_k));
				return;;
			}
		}
		_match_end_1bdc76c73:;
	};
	{
		auto &_match_expr{ (*(_29246_k))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data29)) {
			_case_begin_1bcbced53:;
			{
				_1ed4909ac_WriteStr(_29225_buf, (*((*(_29246_k))._field_Kind.cast_ptr<_1abb19b39_customType>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data29)))._field_kind);
			}
		}
		else {
			_case_begin_1bcbe0b66:;
			{
				_1ed4909ac_WriteStr(_29225_buf, jule::Str::lit("[<unimplemented_type_kind>]", 27));
			}
		}
		_match_end_1bcbe0b11:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1abb1a772_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1abb2335c_resultCoder_eq(_1abb2335c_resultCoder *_self_, _1abb2335c_resultCoder _other_) {
	return 
		(_self_->_field_tc == _other_._field_tc);
}

inline jule::Ptr<_1abb2335c_resultCoder> static__1abb23868_new(jule::Ptr<_1abb1a772_typeCoder>* _36021_tc) {
	return jule::new_ptr<_1abb2335c_resultCoder>(_1abb2335c_resultCoder{._field_tc=(*(_36021_tc))});;
}



inline void _1abb23bcb_ptr(_1abb2335c_resultCoder* _self_, _1ed486d49_StrBuilder* _36424_s, jule::Ptr<_1a602aa56_Ptr> _36443_p) {
	_1ed4909ac_WriteStr(_36424_s, jule::Str::lit("p", 1));
	_1abb255b2_codeMut(_self_, _36424_s, &((*(_36443_p))._field_Elem));
}



inline void _1abb2403e_sptr(_1abb2335c_resultCoder* _self_, _1ed486d49_StrBuilder* _36925_s, jule::Ptr<_1a602728e_Sptr> _36944_p) {
	_1ed4909ac_WriteStr(_36925_s, jule::Str::lit("x", 1));
	_1abb255b2_codeMut(_self_, _36925_s, &((*(_36944_p))._field_Elem));
}



inline void _1abb243a2_mapType(_1abb2335c_resultCoder* _self_, _1ed486d49_StrBuilder* _37428_s, jule::Ptr<_1a6029406_Map> _37447_p) {
	_1ed4909ac_WriteStr(_37428_s, jule::Str::lit("m", 1));
	_1abb255b2_codeMut(_self_, _37428_s, &((*(_37447_p))._field_Key));
	_1abb255b2_codeMut(_self_, _37428_s, &((*_37447_p.alloc)._field_Val));
}



inline void _1abb24715_slice(_1abb2335c_resultCoder* _self_, _1ed486d49_StrBuilder* _38026_s, jule::Ptr<_1a6027c62_Slc> _38045_slc) {
	_1ed4909ac_WriteStr(_38026_s, jule::Str::lit("s", 1));
	_1abb255b2_codeMut(_self_, _38026_s, &((*(_38045_slc))._field_Elem));
}



inline void _1abb24a78_arr(_1abb2335c_resultCoder* _self_, _1ed486d49_StrBuilder* _38524_s, jule::Ptr<_1a602a083_Arr> _38543_arr) {
	_1ed4909ac_WriteStr(_38524_s, jule::Str::lit("a", 1));
	_1ed4909ac_WriteStr(_38524_s, _1a6e69433_FmtInt(static_cast<jule::I64>((*(_38543_arr))._field_N), 16LL));
	_1abb255b2_codeMut(_self_, _38524_s, &((*_38543_arr.alloc)._field_Elem));
}



inline void _1abb24ddb_func(_1abb2335c_resultCoder* _self_, _1ed486d49_StrBuilder* _39125_s, jule::Ptr<_1aa334597_FnIns> _39144_f) {
	_1ed4909ac_WriteStr(_39125_s, jule::Str::lit("f", 1));
	{
		auto expr = &((*(_39144_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcbe8520:;
		if (it != expr_end) {
			jule::Ptr<_1aa33351e_ParamIns> _39315_p = *it;
			{
				if ((*((*(_39315_p))._field_Decl))._field_Reference) {
					_1ed4909ac_WriteStr(_39125_s, jule::Str::lit("r", 1));
				};
				_1abb255b2_codeMut(_self_, _39125_s, &((*_39315_p.alloc)._field_Kind));
			}
			_iter_next_1bcbe8520:;
			++it;
			goto _iter_begin_1bcbe8520;
		}
		_iter_end_1bcbe8520:;
	};
	if (((*_39144_f.alloc)._field_Result != nullptr)) {
		_1abb255b2_codeMut(_self_, _39125_s, &((*_39144_f.alloc)._field_Result));
	};
}



inline void _1abb2524e_tup(_1abb2335c_resultCoder* _self_, _1ed486d49_StrBuilder* _40424_s, jule::Ptr<_1a6028856_Tuple> _40443_tup) {
	{
		auto expr = &((*(_40443_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcbeab71:;
		if (it != expr_end) {
			jule::Ptr<_1a601a64a_TypeKind> _40515_t = *it;
			{
				_1ed4909ac_WriteStr(_40424_s, jule::Str::lit("__jule_tuple_", 13));
				_1abb255b2_codeMut(_self_, _40424_s, &(_40515_t));
			}
			_iter_next_1bcbeab71:;
			++it;
			goto _iter_begin_1bcbeab71;
		}
		_iter_end_1bcbeab71:;
	};
}



inline void _1abb255b2_codeMut(_1abb2335c_resultCoder* _self_, _1ed486d49_StrBuilder* _41128_s, jule::Ptr<_1a601a64a_TypeKind>* _41148_t) {
	if (_1a601b4e7_Binded((*(_41148_t)).ptr())) {
		_1ed4909ac_WriteStr(_41128_s, jule::Str::lit("b", 1));
		_1ed4909ac_WriteStr(_41128_s, (*((*(_41148_t))))._field_BindIdent);
		return;;
	};
	{
		auto &_match_expr{ (*((*(_41148_t))))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data28)) {
			_case_begin_1bcbec2e3:;
			{
				_1abb23bcb_ptr(_self_, _41128_s, (*((*(_41148_t))))._field_Kind.cast_ptr<_1a602aa56_Ptr>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data28));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data23)) {
			_case_begin_1bcbed2a0:;
			{
				_1abb2403e_sptr(_self_, _41128_s, (*((*(_41148_t))))._field_Kind.cast_ptr<_1a602728e_Sptr>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data23));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data26)) {
			_case_begin_1bcbece3c:;
			{
				_1abb243a2_mapType(_self_, _41128_s, (*((*(_41148_t))))._field_Kind.cast_ptr<_1a6029406_Map>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data26));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data24)) {
			_case_begin_1bcbecea3:;
			{
				_1abb24715_slice(_self_, _41128_s, (*((*(_41148_t))))._field_Kind.cast_ptr<_1a6027c62_Slc>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data24));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data27)) {
			_case_begin_1bcbed019:;
			{
				_1abb24a78_arr(_self_, _41128_s, (*((*(_41148_t))))._field_Kind.cast_ptr<_1a602a083_Arr>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data27));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data1)) {
			_case_begin_1bcbed080:;
			{
				_1abb24ddb_func(_self_, _41128_s, (*((*(_41148_t))))._field_Kind.cast_ptr<_1aa334597_FnIns>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data1));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data3)) {
			_case_begin_1bcbed4e2:;
			{
				jule::Ptr<_1aa347753_Enum> _4314_te = (*((*(_41148_t))))._field_Kind.cast_ptr<_1aa347753_Enum>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data3);;
				static__1aba49bac_toOut(_41128_s, (*(_4314_te))._field_Ident, static_cast<jule::Uintptr>(_4314_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data4)) {
			_case_begin_1bcbed558:;
			{
				jule::Ptr<_1aa348e5d_TypeEnum> _4344_te = (*((*(_41148_t))))._field_Kind.cast_ptr<_1aa348e5d_TypeEnum>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data4);;
				static__1aba49bac_toOut(_41128_s, (*(_4344_te))._field_Ident, static_cast<jule::Uintptr>(_4344_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data0)) {
			_case_begin_1bcbed5be:;
			{
				jule::Ptr<_1aa31e373_StructIns> _4378_si = (*((*(_41148_t))))._field_Kind.cast_ptr<_1aa31e373_StructIns>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data0);;
				static__1aba4b384_structureIns(_41128_s, &(_4378_si));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data2)) {
			_case_begin_1bcbed635:;
			{
				jule::Ptr<_1aa345047_Trait> _4408_trt = (*((*(_41148_t))))._field_Kind.cast_ptr<_1aa345047_Trait>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data2);;
				static__1aba4a9c1_traitDecl(_41128_s, _4408_trt);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data22)) {
			_case_begin_1bcbed6ac:;
			{
				_1ed4909ac_WriteStr(_41128_s, (*((*((*(_41148_t))))._field_Kind.cast_ptr<_1a6023763_Prim>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data22)))._field_Kind);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a601a194_Kind_mptr_data25)) {
			_case_begin_1bcbed734:;
			{
				_1abb2524e_tup(_self_, _41128_s, (*((*(_41148_t))))._field_Kind.cast_ptr<_1a6028856_Tuple>((jule::Trait::Type*)&_1a601a194_Kind_mptr_data25));
			}
		}
		else {
			_case_begin_1bcbecdc6:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:447:4"));;
			}
		}
		_match_end_1bcbecd71:;
	};
}



inline void _1abb25925_codeMut1(_1abb2335c_resultCoder* _self_, _1ed486d49_StrBuilder* _45129_s, jule::Ptr<_1a601a64a_TypeKind>* _45149_t) {
	jule::Ptr<_1a6028856_Tuple> _4527_tup = _1a601eb27_Tup((*(_45149_t)).ptr());;
	if ((_4527_tup != nullptr)) {
		_1abb2524e_tup(_self_, _45129_s, _4527_tup);
	} else {
		_1abb20975_kind((*(_self_))._field_tc.ptr(), _45129_s, (*(_45149_t)));
	};
}



inline jule::Slice<jule::U8> _1abb25c33_code(_1abb2335c_resultCoder* _self_, jule::Ptr<_1a601a64a_TypeKind>* _46025_t) {
	_1ed486d49_StrBuilder _4617_s = static__1ed487146_New(20LL);;
	_1abb255b2_codeMut(_self_, &(_4617_s), _46025_t);
	return _1ed491c55_Buf(&_4617_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1abb2335c_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1bcc09465_Flag_eq(_1bcc09465_Flag *_self_, _1bcc09465_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1bcc098d8_Name(_1bcc09465_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1bcc09a3c_What(_1bcc09465_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1bcc09b91_Reset(_1bcc09465_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1bcc09ce5_Short(_1bcc09465_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bcc09465_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}


inline jule::Bool _1bcc0d06d_Flag_eq(_1bcc0d06d_Flag *_self_, _1bcc0d06d_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1bcc0cbe9_Name(_1bcc0d06d_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1bcc0d359_What(_1bcc0d06d_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1bcc0d49c_Reset(_1bcc0d06d_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1bcc0d5e0_Short(_1bcc0d06d_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bcc0d06d_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}


inline jule::Bool _1bcc11736_Flag_eq(_1bcc11736_Flag *_self_, _1bcc11736_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1bcc113b2_Name(_1bcc11736_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1bcc11a22_What(_1bcc11736_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1bcc11b65_Reset(_1bcc11736_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1bcc11ca8_Short(_1bcc11736_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bcc11736_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}


inline jule::Bool _1bcc14e43_Flag_eq(_1bcc14e43_Flag *_self_, _1bcc14e43_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1bcc14abe_Name(_1bcc14e43_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1bcc1522e_What(_1bcc14e43_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1bcc15372_Reset(_1bcc14e43_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1bcc154b5_Short(_1bcc14e43_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bcc14e43_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}


inline jule::Bool _1bcc1860b_Flag_eq(_1bcc1860b_Flag *_self_, _1bcc1860b_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1bcc18287_Name(_1bcc1860b_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1bcc188e7_What(_1bcc1860b_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1bcc18a3a_Reset(_1bcc1860b_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1bcc18b7d_Short(_1bcc1860b_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bcc1860b_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1abb8e340_FlagSet> static__1abb8e65e_New(void) {
	return jule::new_ptr<_1abb8e340_FlagSet>(_1abb8e340_FlagSet{._field_flags=({ auto __jule_collection = jule::Slice<jule::Trait>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Trait(nullptr); __jule_collection; })});;
}



inline jule::Trait _1abb8eb15_FindFlag(_1abb8e340_FlagSet* _self_, jule::Str _7124_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc2365a:;
		if (it != expr_end) {
			jule::Trait _7215_flag = *it;
			{
				if ((((_1abb8c76c_CommonFlagMptrData*)_7215_flag.safe_type())->_1abb5b62b_Name(_7215_flag.data) == _7124_name)) {
					return _7215_flag;;
				};
			}
			_iter_next_1bcc2365a:;
			++it;
			goto _iter_begin_1bcc2365a;
		}
		_iter_end_1bcc2365a:;
	};
	return nullptr;;
}



inline jule::Trait _1abb8ee56_FindFlagShort(_1abb8e340_FlagSet* _self_, jule::I32 _8129_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc23bbb:;
		if (it != expr_end) {
			jule::Trait _8215_flag = *it;
			{
				if ((((_1abb8c76c_CommonFlagMptrData*)_8215_flag.safe_type())->_1abb5b76e_Short(_8215_flag.data) == _8129_name)) {
					return _8215_flag;;
				};
			}
			_iter_next_1bcc23bbb:;
			++it;
			goto _iter_begin_1bcc23bbb;
		}
		_iter_end_1bcc23bbb:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1abb9052d_Parse(_1abb8e340_FlagSet* _self_, jule::Slice<jule::Str> _11521_args) {
	_1abb91d04_argParser _1167_ap = _1abb91d04_argParser{._field_set=(*(_self_)), ._field_args=_11521_args, ._field_content=jule::Slice<jule::Str>(nullptr), ._field_i=0};;
	({
		auto except = _1abb93333_parse(&_1167_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>{.result=_1167_ap._field_content};;
}



inline jule::Ptr<_1bcc1860b_Flag> _1bcc81ce5_addFlagCommon(_1abb8e340_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_1abb8eb15_FindFlag(_self_, _13132_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_1abb8ee56_FindFlagShort(_self_, _13143_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_1bcc1860b_Flag> _1407_flag = jule::new_ptr<_1bcc1860b_Flag>(_1bcc1860b_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_default=jule::Str(), ._field_what=_13156_what, ._field_data=jule::Ptr<jule::Str>(nullptr)});;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_1abb8c76c_CommonFlag_mptr_data4)); };
	return _1407_flag;;
}

inline jule::Ptr<_1bcc14e43_Flag> _1bdcbd57d_addFlagCommon(_1abb8e340_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_1abb8eb15_FindFlag(_self_, _13132_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_1abb8ee56_FindFlagShort(_self_, _13143_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_1bcc14e43_Flag> _1407_flag = jule::new_ptr<_1bcc14e43_Flag>(_1bcc14e43_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_default=false, ._field_what=_13156_what, ._field_data=jule::Ptr<jule::Bool>(nullptr)});;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_1abb8c76c_CommonFlag_mptr_data3)); };
	return _1407_flag;;
}



inline void _1bcc7e5d9_AddVar(_1abb8e340_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		jule::panic(jule::Str::lit("std::flag: FlatSet.AddVar[T]: variable is nil", 45) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_1bcc1860b_Flag> _1717_flag = _1bcc81ce5_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}

inline void _1bdcbadb6_AddVar(_1abb8e340_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		jule::panic(jule::Str::lit("std::flag: FlatSet.AddVar[T]: variable is nil", 45) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_1bcc14e43_Flag> _1717_flag = _1bdcbd57d_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}





std::ostream &operator<<(std::ostream &_Stream, _1abb8e340_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _1bcc2b399_parseInteger(_1abb91d04_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I32> _18536_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_1bcc2de90:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1ed4731a9_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1bcc2e358:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1ed4731a9_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1bcc2d9d9:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1ed4731a9_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1bcc2da50:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_1bcc2dab6:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1bcc2d973:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1bcc2d874:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1bcc33d1e_parseInteger(_1abb91d04_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I32> _18536_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_1bcc368c1:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1ed4731a9_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1bcc36c89:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1ed4731a9_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1bcc3641a:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1ed4731a9_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1bcc36481:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_1bcc364e7:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1bcc363a4:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1bcc362a5:;
	};
	return __jule_func_result;;
}



inline jule::Str _1abb92651_getData(_1abb91d04_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1abb928c6_processFlag(_1abb91d04_argParser* _self_, jule::Trait* _21232_flag) {
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abb8c76c_CommonFlag_mptr_data3)) {
			_case_begin_1bcc285a5:;
			{
				jule::Ptr<_1bcc14e43_Flag> _2158_bf = (*(_21232_flag)).cast_ptr<_1bcc14e43_Flag>((jule::Trait::Type*)&_1abb8c76c_CommonFlag_mptr_data3);;
				(*((*(_2158_bf))._field_data))=(!((*_2158_bf.alloc)._field_default));
				return jule::VoidExceptional{};;
			}
		}
		_match_end_1bcc28550:;
	};
	jule::Str _2203_data = _1abb92651_getData(_self_);;
	if ((_2203_data).empty()) {
		return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1abb8c76c_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1abb5b62b_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression missing", 20)), &__jule_any_type4)};
	};
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abb8c76c_CommonFlag_mptr_data0)) {
			_case_begin_1bcc2a486:;
			{
				jule::Ptr<_1bcc09465_Flag> _2278_intf = (*(_21232_flag)).cast_ptr<_1bcc09465_Flag>((jule::Trait::Type*)&_1abb8c76c_CommonFlag_mptr_data0);;
				jule::Bool _22818_ok;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1bcc2b399_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I32>((void*)__jule_anon1bcc2b6da, nullptr, nullptr));
					(*((*(_2278_intf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_22818_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_22818_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1abb8c76c_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1abb5b62b_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid signed integer", 41)), &__jule_any_type4)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abb8c76c_CommonFlag_mptr_data1)) {
			_case_begin_1bcc29d26:;
			{
				jule::Ptr<_1bcc0d06d_Flag> _2358_uintf = (*(_21232_flag)).cast_ptr<_1bcc0d06d_Flag>((jule::Trait::Type*)&_1abb8c76c_CommonFlag_mptr_data1);;
				jule::Bool _23619_ok;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1bcc33d1e_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I32>((void*)__jule_anon1bcc34616, nullptr, nullptr));
					(*((*(_2358_uintf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23619_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23619_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1abb8c76c_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1abb5b62b_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid unsigned integer", 43)), &__jule_any_type4)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abb8c76c_CommonFlag_mptr_data2)) {
			_case_begin_1bcc2a4ec:;
			{
				jule::Ptr<_1bcc11736_Flag> _2438_ff = (*(_21232_flag)).cast_ptr<_1bcc11736_Flag>((jule::Trait::Type*)&_1abb8c76c_CommonFlag_mptr_data2);;
				(*((*(_2438_ff))._field_data))=({
					auto except = _1a6e5e69d_ParseFloat(_2203_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1abb8c76c_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1abb5b62b_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid floating-point", 41)), &__jule_any_type4)};
					} 0;});
				});
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abb8c76c_CommonFlag_mptr_data4)) {
			_case_begin_1bcc2a563:;
			{
				(*((*((*(_21232_flag)).cast_ptr<_1bcc1860b_Flag>((jule::Trait::Type*)&_1abb8c76c_CommonFlag_mptr_data4)))._field_data))=_2203_data;
			}
		}
		_match_end_1bcc29c38:;
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1abb92b7e_singleDash(_1abb91d04_argParser* _self_, jule::Str* _25227_arg) {
	if (((*(_25227_arg)).len() == 1LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_25227_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4)};
	};
	{
		auto expr = (*(_25227_arg)).slice(1LL);
		char *it = expr.operator char*();
		const char *end = it + expr.len();
		std::size_t len;
		jule::I32 _25710_r;
		_iter_begin_1bcc3d18b:;
		std::tie(_25710_r, len) = jule::utf8_decode_rune_str(it, end - it);
		if (it < end) {
			{
				jule::Trait _2588_flag = _1abb8ee56_FindFlagShort(&(*(_self_))._field_set, _25710_r);;
				if ((_2588_flag == nullptr)) {
					return jule::VoidExceptional{.error=jule::Any((((*(_25227_arg)) + jule::Str::lit(": flag is not exist: ", 21)) + jule::Str::from_rune(_25710_r)), &__jule_any_type4)};
				};
				({
					auto except = _1abb928c6_processFlag(_self_, &(_2588_flag));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
			}
			_iter_next_1bcc3d18b:;
			it += len;
			goto _iter_begin_1bcc3d18b;
		}
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1abb92e37_doubleDash(_1abb91d04_argParser* _self_, jule::Str* _26627_arg) {
	if (((*(_26627_arg)).len() == 2LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4)};
	};
	jule::Trait _2707_flag = _1abb8eb15_FindFlag(&(*(_self_))._field_set, (*(_26627_arg)).slice(2LL));;
	if ((_2707_flag == nullptr)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": flag is not exist", 19)), &__jule_any_type4)};
	};
	return _1abb928c6_processFlag(_self_, &(_2707_flag));
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1abb93135_tryArg(_1abb91d04_argParser* _self_) {
	jule::Str _2783_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional{};;
	};
	if ((_2783_arg[0LL] == '-')) {
		if (((_2783_arg.len() > 1LL) && (_2783_arg[1LL] == '-'))) {
			({
				auto except = _1abb92e37_doubleDash(_self_, &(_2783_arg));
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
			return jule::VoidExceptional{};;
		};
		({
			auto except = _1abb92b7e_singleDash(_self_, &(_2783_arg));
			if (!except.ok()) {
				return jule::VoidExceptional{.error=std::move(except.error)};
			}
		});
		return jule::VoidExceptional{};;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_2783_arg); };
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1abb93333_parse(_1abb91d04_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1abb93135_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
		}
	_iter_next_1bcc42d1c:;
	}
	_iter_end_1bcc42d1c:;;
	return jule::VoidExceptional{};
}





std::ostream &operator<<(std::ostream &_Stream, _1abb91d04_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1adbe0658_Cmd> static__1adbe0aa9_New(jule::Str _2616_path) {
	return jule::new_ptr<_1adbe0658_Cmd>(_1adbe0658_Cmd{._field_attrs=_1adc443e3_cmdAttrs{._field_pid=-1LL}, ._field_path=_2616_path, ._field_Args=jule::Slice<jule::Str>(nullptr), ._field_Env=jule::Slice<jule::Str>(nullptr)});;
}



inline jule::VoidExceptional _1adbe0ca7_Spawn(_1adbe0658_Cmd* _self_) {
	return _1adc45191_spawn(_self_);
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I32> _1adbe123b_Wait(_1adbe0658_Cmd* _self_) {
	return _1adc45625_wait(_self_);
}



inline jule::VoidExceptional _1adc45191_spawn(_1adbe0658_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid != -1LL)) {
		jule::panic(jule::Str::lit("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_unix.jule:83:4"));;
	};
	jule::Str _853_path = (*(_self_))._field_path;;
	jule::Array<signed,2> _867_pipe;;
	if ((pipe((&(_867_pipe[0LL]))) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I32>(3LL), &__jule_any_type0)};
	};
	if ((_1e0261868_Fcntl(static_cast<jule::I32>(_867_pipe[1LL]), F_SETFD, (fcntl(static_cast<jule::I32>(_867_pipe[1LL]), F_GETFD) | FD_CLOEXEC)) == -1LL)) {
		_1ed36d406_Close(static_cast<jule::I32>(_867_pipe[0LL]));
		_1ed36d406_Close(static_cast<jule::I32>(_867_pipe[1LL]));
		return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I32>(3LL), &__jule_any_type0)};
	};
	(*(_self_))._field_attrs._field_pid=fork();
	{
		auto &_match_expr{ (*(_self_))._field_attrs._field_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_1ac1e8aa8:;
			{
				return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I32>(3LL), &__jule_any_type0)};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1ac1e8c62:;
			{
				_1ed36d406_Close(static_cast<jule::I32>(_867_pipe[0LL]));
				jule::Slice<jule::Str> _1018_args = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len())); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
				_1018_args[0LL]=_853_path;
				(_1018_args).append((*(_self_))._field_Args);;
				({
					auto except = _1adc44e0a_setenv(&((*(_self_))._field_Env));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
				_1adc44bc9_execvp(&(_853_path), &(_1018_args));
				jule::Str _1064_code = _1adc40c19_Itoa(_1ed0c8e86_GetLastErrno());;
				{
					_1ed36d7ad_Write(static_cast<jule::I32>(_867_pipe[1LL]), (&(_1064_code[0LL])), static_cast<jule::U32>(_1064_code.len()));
				};
				_1ed36d406_Close(static_cast<jule::I32>(_867_pipe[1LL]));
				_1adc46901_Exit(1LL);
			}
		}
		else {
			_case_begin_1acb919c3:;
			{
				_1ed36d406_Close(static_cast<jule::I32>(_867_pipe[1LL]));
				jule::Array<jule::U8,16> _11212_buf = ({ auto __jule_collection = jule::Array<jule::U8,16>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
				jule::I32 _1134_n = _1ed36d02c_Read(static_cast<jule::I32>(_867_pipe[0LL]), (&(_11212_buf[0LL])), static_cast<jule::U32>(16LLU));;
				_1ed36d406_Close(static_cast<jule::I32>(_867_pipe[0LL]));
				if ((_1134_n != 0LL)) {
					(*(_self_))._field_attrs._field_pid=-1LL;
					jule::I32 _1175_code;
					({
						__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1adbe1c86_AtoiBp((&(_11212_buf[0LL])), _1134_n);
						_1175_code = __jule_assign_result.__jule_result_arg0;
					});
					return jule::VoidExceptional{.error=jule::Any(_1adc45d84_processErrorFromCode(_1175_code), &__jule_any_type0)};
				};
			}
		}
		_match_end_1acb93e15:;
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I32> _1adc45625_wait(_1adbe0658_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid == -1LL)) {
		jule::panic(jule::Str::lit("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_unix.jule:135:4"));;
	};
	jule::I32 _1377_stat = 0LL;;
	{
		if ((waitpid((*(_self_))._field_attrs._field_pid, ((signed*)((&(_1377_stat)))), 0LL) == -1LL)) {
			return jule::Exceptional<jule::I32>{.error=jule::Any(_1adc460d7_getLastProcessError(), &__jule_any_type0)};
		};
	};
	(*(_self_))._field_attrs._field_pid=-1LL;
	return jule::Exceptional<jule::I32>{.result=WEXITSTATUS(_1377_stat)};;
}





std::ostream &operator<<(std::ostream &_Stream, _1adbe0658_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "attrs:" << _Src._field_attrs << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa8a3c8c_dataCheckpoint _Src) {
	_Stream << "dataCheckpoint{";
	_Stream << "boundary:" << _Src._field_boundary << ", ";
	_Stream << "nils:" << _Src._field_nils << ", ";
	_Stream << "dynamic:" << _Src._field_dynamic;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_1aa887941_IR__jule_tuple_s_1ada72b17_Log static__1aa887e19_Build(jule::Str _2918_path, jule::I32 _2929_flags) {
	__jule_tuple_x_1aa887941_IR__jule_tuple_s_1ada72b17_Log __jule_func_result;
	jule::Ptr<_1aa885015_JuleImporter> _307_importer = static__1aa885444_New(_1aa8898bb_buildCompileInfo());;
	;
	jule::Slice<jule::Ptr<_1aa2e876a_AST>> _327_files;
	jule::Slice<_1ada72b17_Log> _3218_logs;
	({
		__jule_tuple_sx_1aa2e876a_AST__jule_tuple_s_1ada72b17_Log __jule_assign_result = _1aa88692e_ImportPackage(_307_importer.ptr(), _2918_path, true);
		_327_files = __jule_assign_result.__jule_result_arg0;
		_3218_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3218_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _3218_logs;
		return __jule_func_result;;
	};
	jule::Str _363_root = _2918_path;;
	if ((_327_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1aa2e876a_AST> _447_firstFile = _327_files[0LL];;
	_1aa889b74_pushRuntimeToAST(&(_447_firstFile));
	jule::Ptr<_1aa39ded5_Package> _477_pkg;
	({
		__jule_tuple_x_1aa39ded5_Package__jule_tuple_s_1ada72b17_Log __jule_assign_result = _1a603c282_AnalyzePackage(_327_files, jule::Trait(_307_importer, (jule::Trait::Type*)&_1aa397d25_Importer_mptr_data0), _2929_flags);
		_477_pkg = __jule_assign_result.__jule_result_arg0;
		_3218_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3218_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _3218_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1aa887941_IR> _527_ir = jule::new_ptr<_1aa887941_IR>(_1aa887941_IR{._field_Root=_363_root, ._field_Passes=jule::Slice<jule::Str>(nullptr), ._field_Main=_477_pkg, ._field_Runtime=jule::Ptr<_1aa39b0ae_ImportInfo>(nullptr), ._field_Used=_1aa8856ca_AllPackages(_307_importer), ._field_Ordered=_1aa892b27_OrderedDefines{._field_Structs=jule::Slice<jule::Ptr<_1aa31b518_Struct>>(nullptr), ._field_Globals=jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>(nullptr)}});;
	(*(_527_ir))._field_Passes=_1aa8896ac_getAllUniquePasses(&((*_527_ir.alloc)._field_Main), (*_527_ir.alloc)._field_Used);
	(*_527_ir.alloc)._field_Runtime=(*((*(_477_pkg))._field_Files[0LL]))._field_Imports[0LL];
	__jule_func_result.__jule_result_arg0 = _527_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1aa888403_appendStructs(_1aa887941_IR* _self_, jule::Ptr<_1aa39ded5_Package>* _6730_p, jule::Slice<jule::Ptr<_1aa31b518_Struct>>* _6754_buffer) {
	{
		auto expr = &((*((*(_6730_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd5089de:;
		if (it != expr_end) {
			jule::Ptr<_1aa4475cd_SymbolTable> _6815_f = *it;
			{
				{
					auto expr = &((*(_6815_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd50943a:;
					if (it != expr_end) {
						jule::Ptr<_1aa31b518_Struct> _6916_s = *it;
						{
							if ((!((*(_6916_s))._field_Binded))) {
								{ jule::Slice<jule::Ptr<_1aa31b518_Struct>> &__jule_push_dest = (*(_6754_buffer)); __jule_push_dest.push(_6916_s); };
							};
						}
						_iter_next_1bd50943a:;
						++it;
						goto _iter_begin_1bd50943a;
					}
					_iter_end_1bd50943a:;
				};
			}
			_iter_next_1bd5089de:;
			++it;
			goto _iter_begin_1bd5089de;
		}
		_iter_end_1bd5089de:;
	};
}



inline jule::Slice<jule::Ptr<_1aa31b518_Struct>> _1aa888689_GetAllStructures(_1aa887941_IR* _self_) {
	jule::Slice<jule::Ptr<_1aa31b518_Struct>> _8011_buffer = nullptr;;
	_1aa888403_appendStructs(_self_, &((*(_self_))._field_Main), &(_8011_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd50a606:;
		if (it != expr_end) {
			jule::Ptr<_1aa39b0ae_ImportInfo> _8215_u = *it;
			{
				if ((!((*(_8215_u))._field_Binded))) {
					_1aa888403_appendStructs(_self_, &((*_8215_u.alloc)._field_Package), &(_8011_buffer));
				};
			}
			_iter_next_1bd50a606:;
			++it;
			goto _iter_begin_1bd50a606;
		}
		_iter_end_1bd50a606:;
	};
	return _8011_buffer;;
}



inline void _1aa8889ec_appendGlobals(_1aa887941_IR* _self_, jule::Ptr<_1aa39ded5_Package>* _9030_p, jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>* _9054_buffer) {
	{
		auto expr = &((*((*(_9030_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd50bc34:;
		if (it != expr_end) {
			jule::Ptr<_1aa4475cd_SymbolTable> _9115_f = *it;
			{
				{
					auto expr = &((*(_9115_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd50c680:;
					if (it != expr_end) {
						jule::Ptr<_1aa3e4d3e_Var> _9216_v = *it;
						{
							if (((((*(_9216_v))._field_Token != nullptr) && (!((*_9216_v.alloc)._field_Binded))) && (!((*_9216_v.alloc)._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_1aa3e4d3e_Var>> &__jule_push_dest = (*(_9054_buffer)); __jule_push_dest.push(_9216_v); };
							};
						}
						_iter_next_1bd50c680:;
						++it;
						goto _iter_begin_1bd50c680;
					}
					_iter_end_1bd50c680:;
				};
			}
			_iter_next_1bd50bc34:;
			++it;
			goto _iter_begin_1bd50bc34;
		}
		_iter_end_1bd50bc34:;
	};
}



inline jule::Slice<jule::Ptr<_1aa3e4d3e_Var>> _1aa888c83_GetAllGlobals(_1aa887941_IR* _self_) {
	jule::Slice<jule::Ptr<_1aa3e4d3e_Var>> _10311_buffer = nullptr;;
	_1aa8889ec_appendGlobals(_self_, &((*(_self_))._field_Main), &(_10311_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd50e088:;
		if (it != expr_end) {
			jule::Ptr<_1aa39b0ae_ImportInfo> _10515_u = *it;
			{
				if ((!((*(_10515_u))._field_Binded))) {
					_1aa8889ec_appendGlobals(_self_, &((*_10515_u.alloc)._field_Package), &(_10311_buffer));
				};
			}
			_iter_next_1bd50e088:;
			++it;
			goto _iter_begin_1bd50e088;
		}
		_iter_end_1bd50e088:;
	};
	return _10311_buffer;;
}



inline void _1aa888e81_Order(_1aa887941_IR* _self_) {
	(*(_self_))._field_Ordered._field_Globals=_1aa888c83_GetAllGlobals(_self_);
	(*(_self_))._field_Ordered._field_Structs=_1aa888689_GetAllStructures(_self_);
	_1bd510b6c_order((*(_self_))._field_Ordered._field_Globals);
	_1bd5178aa_order((*(_self_))._field_Ordered._field_Structs);
}





std::ostream &operator<<(std::ostream &_Stream, _1aa887941_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Runtime:" << _Src._field_Runtime << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline void _1e02195ce_Free(void* _4520_ptr) {
	free(_4520_ptr);
}



inline jule::Str _1e024ec30_BytePtrToStr(jule::U8* _6924_s) {
	if ((_6924_s == nullptr)) {
		return jule::Str();;
	};
	jule::I32 _736_n = 0LL;;
	{
		for (; (_6924_s[_736_n] != 0LLU); (_736_n)++) {};
	};
	if ((_736_n == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _806_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_736_n, _736_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_736_n=0LL;
	{
		for (; (_6924_s[_736_n] != 0LLU); (_736_n)++) {
			{
				_806_buf[_736_n]=_6924_s[_736_n];
			}
		_iter_next_1abbc0c23:;
		}
		_iter_end_1abbc0c23:;;
	};
	return static_cast<jule::Str>(_806_buf);;
}



inline jule::Slice<jule::U8> _1e024eeb6_StrToBytes(jule::Str _9315_s) {
	{
		auto expr = &(_9315_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbc13c7:;
		if (it != expr_end) {
			jule::I32 _946_i = it - expr->begin();
			jule::U8 *_949_b = it;
			{
				if (((*(_949_b)) == 0LLU)) {
					jule::Slice<jule::U8> _968_bytes = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc((_946_i + 1LL), (_946_i + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
					jule::copy(_968_bytes, _9315_s.slice(0LL, _968_bytes.len()));
					return _968_bytes;;
				};
			}
			_iter_next_1abbc13c7:;
			++it;
			_946_i++;
			goto _iter_begin_1abbc13c7;
		}
		_iter_end_1abbc13c7:;
	};
	jule::Slice<jule::U8> _1016_bytes = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc((_9315_s.len() + 1LL), (_9315_s.len() + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::copy(_1016_bytes, _9315_s);
	return _1016_bytes;;
}



inline jule::I32 _1abb9ed12_shiftLeft(jule::I32 _1020_value, jule::I32 _1030_shift) {
	if ((_1030_shift >= 32LL)) {
		return 0LL;;
	};
	return (jule::I32)(_1020_value << _1030_shift);;
}

inline jule::I32 _1a86e36d3_shiftLeft(jule::I32 _1020_value, jule::I32 _1030_shift) {
	if ((_1030_shift >= 32LL)) {
		return 0LL;;
	};
	return (jule::I32)(_1020_value << _1030_shift);;
}

inline jule::U32 _1abe8e464_shiftLeft(jule::U32 _1020_value, jule::U32 _1030_shift) {
	if ((_1030_shift >= 32LL)) {
		return 0LLU;;
	};
	return (jule::U32)(_1020_value << _1030_shift);;
}

inline jule::I32 _1ac23e11a_shiftLeft(jule::I32 _1020_value, jule::U32 _1030_shift) {
	if ((_1030_shift >= 32LL)) {
		return 0LL;;
	};
	return (jule::I32)(_1020_value << _1030_shift);;
}

inline jule::U8 _1ac26983d_shiftLeft(jule::U8 _1020_value, jule::U32 _1030_shift) {
	if ((_1030_shift >= 8LL)) {
		return 0LLU;;
	};
	return (jule::U8)(_1020_value << _1030_shift);;
}

inline jule::U16 _1ac26ccc5_shiftLeft(jule::U16 _1020_value, jule::U32 _1030_shift) {
	if ((_1030_shift >= 16LL)) {
		return 0LLU;;
	};
	return (jule::U16)(_1020_value << _1030_shift);;
}

inline jule::U32 _1ac27125c_shiftLeft(jule::U32 _1020_value, jule::U32 _1030_shift) {
	if ((_1030_shift >= 32LL)) {
		return 0LLU;;
	};
	return (jule::U32)(_1020_value << _1030_shift);;
}

inline jule::U64 _1ac274815_shiftLeft(jule::U64 _1020_value, jule::U32 _1030_shift) {
	if ((_1030_shift >= 64LL)) {
		return 0LLU;;
	};
	return (jule::U64)(_1020_value << _1030_shift);;
}

inline jule::U16 _1ac278d69_shiftLeft(jule::U16 _1020_value, jule::U16 _1030_shift) {
	if ((_1030_shift >= 16LL)) {
		return 0LLU;;
	};
	return (jule::U16)(_1020_value << _1030_shift);;
}

inline jule::U64 _1ac27cd7e_shiftLeft(jule::U64 _1020_value, jule::U64 _1030_shift) {
	if ((_1030_shift >= 64LL)) {
		return 0LLU;;
	};
	return (jule::U64)(_1020_value << _1030_shift);;
}

inline jule::I64 _1ac8b8167_shiftLeft(jule::I64 _1020_value, jule::I64 _1030_shift) {
	if ((_1030_shift >= 64LL)) {
		return 0LL;;
	};
	return (jule::I64)(_1020_value << _1030_shift);;
}

inline jule::U32 _1bb97618e_shiftLeft(jule::U32 _1020_value, jule::U32 _1030_shift) {
	if ((_1030_shift >= 32LL)) {
		return 0LLU;;
	};
	return (jule::U32)(_1020_value << _1030_shift);;
}

inline jule::I64 _1ab7ac0d4_shiftLeft(jule::I64 _1020_value, jule::U64 _1030_shift) {
	if ((_1030_shift >= 64LL)) {
		return 0LL;;
	};
	return (jule::I64)(_1020_value << _1030_shift);;
}



inline jule::I32 _1abba35da_shiftRight(jule::I32 _2121_value, jule::I32 _2131_shift) {
	if ((_2131_shift >= 32LL)) {
		return 0LL;;
	};
	return (jule::I32)(_2121_value >> _2131_shift);;
}

inline jule::U8 _1abe54c43_shiftRight(jule::U8 _2121_value, jule::U8 _2131_shift) {
	if ((_2131_shift >= 8LL)) {
		return 0LLU;;
	};
	return (jule::U8)(_2121_value >> _2131_shift);;
}

inline jule::I32 _1acb8549a_shiftRight(jule::I32 _2121_value, jule::I32 _2131_shift) {
	if ((_2131_shift >= 32LL)) {
		return 0LL;;
	};
	return (jule::I32)(_2121_value >> _2131_shift);;
}

inline jule::U32 _1ac23d108_shiftRight(jule::U32 _2121_value, jule::U32 _2131_shift) {
	if ((_2131_shift >= 32LL)) {
		return 0LLU;;
	};
	return (jule::U32)(_2121_value >> _2131_shift);;
}

inline jule::U32 _1ac25b19d_shiftRight(jule::U32 _2121_value, jule::U32 _2131_shift) {
	if ((_2131_shift >= 32LL)) {
		return 0LLU;;
	};
	return (jule::U32)(_2121_value >> _2131_shift);;
}

inline jule::U64 _1ac25e190_shiftRight(jule::U64 _2121_value, jule::U64 _2131_shift) {
	if ((_2131_shift >= 64LL)) {
		return 0LLU;;
	};
	return (jule::U64)(_2121_value >> _2131_shift);;
}

inline jule::U16 _1ac2619cd_shiftRight(jule::U16 _2121_value, jule::U16 _2131_shift) {
	if ((_2131_shift >= 16LL)) {
		return 0LLU;;
	};
	return (jule::U16)(_2121_value >> _2131_shift);;
}

inline jule::U8 _1ac26a4a9_shiftRight(jule::U8 _2121_value, jule::U32 _2131_shift) {
	if ((_2131_shift >= 8LL)) {
		return 0LLU;;
	};
	return (jule::U8)(_2121_value >> _2131_shift);;
}

inline jule::U16 _1ac26d941_shiftRight(jule::U16 _2121_value, jule::U32 _2131_shift) {
	if ((_2131_shift >= 16LL)) {
		return 0LLU;;
	};
	return (jule::U16)(_2121_value >> _2131_shift);;
}

inline jule::U32 _1ac271b86_shiftRight(jule::U32 _2121_value, jule::U32 _2131_shift) {
	if ((_2131_shift >= 32LL)) {
		return 0LLU;;
	};
	return (jule::U32)(_2121_value >> _2131_shift);;
}

inline jule::U64 _1ac275481_shiftRight(jule::U64 _2121_value, jule::U32 _2131_shift) {
	if ((_2131_shift >= 64LL)) {
		return 0LLU;;
	};
	return (jule::U64)(_2121_value >> _2131_shift);;
}

inline jule::I64 _1ac94824c_shiftRight(jule::I64 _2121_value, jule::U32 _2131_shift) {
	if ((_2131_shift >= 64LL)) {
		return 0LL;;
	};
	return (jule::I64)(_2121_value >> _2131_shift);;
}

inline jule::I64 _1bb74e198_shiftRight(jule::I64 _2121_value, jule::I64 _2131_shift) {
	if ((_2131_shift >= 64LL)) {
		return 0LL;;
	};
	return (jule::I64)(_2121_value >> _2131_shift);;
}

inline jule::I64 _1ab7b0758_shiftRight(jule::I64 _2121_value, jule::U64 _2131_shift) {
	if ((_2131_shift >= 64LL)) {
		return 0LL;;
	};
	return (jule::I64)(_2121_value >> _2131_shift);;
}



inline jule::Bool _1a871a9e6_arrayCmp(jule::I32* _1020_a1, jule::I32* _1032_a2, jule::I32 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::I32* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1a871bec0:;
	}
	_iter_end_1a871bec0:;;
	return true;;
}

inline jule::Bool _1bb774e49_arrayCmp(jule::U8* _1020_a1, jule::U8* _1032_a2, jule::I32 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::U8* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1bb7765cc:;
	}
	_iter_end_1bb7765cc:;;
	return true;;
}



inline jule::I32 _1ed0c8e86_GetLastErrno(void) {
	return errno;;
}



inline jule::I32 _1e0261868_Fcntl(jule::I32 _5410_handle, jule::I32 _5423_cmd, jule::I32 _5433_arg) {
	return fcntl(_5410_handle, _5423_cmd, _5433_arg);;
}



inline jule::I32 _1e0261bdc_Stat(jule::U8* _5916_path, struct stat* _5933_stat) {
	return stat(((char*)(_5916_path)), _5933_stat);;
}



inline jule::I32 _1e026211b_Open(jule::U8* _6416_path, jule::I32 _6429_flag, jule::I32 _6440_mode) {
	return open(((char*)(_6416_path)), _6429_flag, _6440_mode);;
}



inline jule::U8* _1e0262490_Getcwd(jule::U8* _7018_buff, jule::U32 _7031_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_7018_buff)), _7031_bufflen)));;
}



inline DIR* _1e026298a_Opendir(jule::U8* _7519_path) {
	return opendir(((char*)(_7519_path)));;
}



inline struct dirent* _1e0262b66_Readdir(DIR* _7823_dir) {
	return readdir(_7823_dir);;
}



inline jule::I32 _1e0262e0d_Closedir(DIR* _8124_dir) {
	return closedir(_8124_dir);;
}



inline jule::I32 _1e0263815_Mkdir(jule::U8* _9017_path, jule::I32 _9030_mode) {
	return mkdir(((char*)(_9017_path)), _9030_mode);;
}



inline jule::I32 _1e0263ace_Rmdir(jule::U8* _9517_path) {
	return rmdir(((char*)(_9517_path)));;
}



inline jule::I32 _1e0263d98_Unlink(jule::U8* _9818_path) {
	return unlink(((char*)(_9818_path)));;
}



inline jule::I32 _1ed36d02c_Read(jule::I32 _2016_handle, void* _2033_buff, jule::U32 _2048_n) {
	return read(_2016_handle, _2033_buff, _2048_n);;
}



inline jule::I32 _1ed36d406_Close(jule::I32 _2510_handle) {
	return close(_2510_handle);;
}



inline jule::I32 _1ed36d7ad_Write(jule::I32 _2817_handle, void* _2830_buff, jule::U32 _2845_n) {
	return write(_2817_handle, _2830_buff, _2845_n);;
}



inline void _1ed36d9de_Exit(jule::I32 _339_code) {
	exit(_339_code);
}



inline void _1ed37a655_handleRW(jule::Slice<jule::U8>* _1414_b) {
	if (((*(_1414_b)).len() > 1073741824LL)) {
		{
			((*((&((*(_1414_b))))))).mut_slice(0LL, 1073741824LLU);;
		};
	};
}



inline void _1ed37b524_HandleRW(jule::Slice<jule::U8>* _814_b) {
	_1ed37a655_handleRW(_814_b);
}



inline jule::Str _1ed554587_Str(jule::U8* _108_b, jule::I32 _1018_n) {
	jule::Str _116_s = jule::Str();;
	{
		_116_s.buffer = jule::Ptr<jule::U8>::make(_108_b, nullptr);
		_116_s._len = _1018_n;
		_116_s._slice = _108_b;
	};
	return _116_s;;
}



inline jule::Slice<jule::U8> _1a8709122_Slice(jule::U8* _2216_e, jule::I32 _2226_len, jule::I32 _2236_cap) {
	jule::Slice<jule::U8> _236_buf = static_cast<jule::Slice<jule::U8>>(nullptr);;
	{
		_236_buf.data = jule::Ptr<jule::U8>::make(_2216_e, nullptr);
		_236_buf._len = _2226_len;
		_236_buf._cap = _2236_cap;
		_236_buf._slice = _2216_e;
	};
	return _236_buf;;
}



inline jule::Slice<jule::U8> _1ed560939_StrBytes(jule::Str _4013_s) {
	if ((_4013_s.len() == 0LL)) {
		return nullptr;;
	};
	return _1a8709122_Slice((&(_4013_s[0LL])), _4013_s.len(), _4013_s.len());;
}



inline jule::Str _1ed560bc0_BytesStr(jule::Slice<jule::U8> _4913_b) {
	if ((_4913_b.len() == 0LL)) {
		return jule::Str();;
	};
	return _1ed554587_Str((&(_4913_b[0LL])), _4913_b.len());;
}



inline jule::Str _1ed560e89_StrFromBytes(jule::Slice<jule::U8> _5717_b) {
	return (*(((jule::Str*)((&(_5717_b))))));;
}



inline jule::I32 _1ed11a824_getLastOsError(void) {
	jule::I32 _302_err = _1ed0c8e86_GetLastErrno();;
	{
		auto &_match_expr{ _302_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1a8712218:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1a8711adb:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1a8711b52:;
			{
				return static_cast<jule::I32>(2LL);;
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1a8711bc9:;
			{
				return static_cast<jule::I32>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a8711c51:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1a8711e0a:;
			{
				return static_cast<jule::I32>(5LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1a8711e71:;
			{
				return static_cast<jule::I32>(6LL);;
			}
		}
		else {
			_case_begin_1a87118dd:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		_match_end_1a87119ed:;
	};
}



inline jule::Slice<jule::Str> _1ed11bdca_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _1ed11c33c_WorkingDir(void) {
	return _1ed11cc88_getwd();
}



inline jule::Exceptional<jule::Str> _1ed11cc88_getwd(void) {
	jule::U8* _116_buf = _1e0262490_Getcwd(nullptr, 0LLU);;
	if ((_116_buf == nullptr)) {
		return jule::Exceptional<jule::Str>{.error=jule::Any(_1ed11a824_getLastOsError(), &__jule_any_type0)};
	};
	jule::Str _152_pwd = _1e024ec30_BytePtrToStr(_116_buf);;
	{
		_1e02195ce_Free(_116_buf);
	};
	return jule::Exceptional<jule::Str>{.result=_152_pwd};;
}



inline jule::Bool _1c6b26697_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_1ad890759__PROPERTIES[static_cast<jule::I32>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _1ad898ba2_isExcludingLatin(_1c6b3066d_Letter, _7613_r);;
}



inline jule::Bool _1ad898025_is16(jule::Slice<_1ad896287_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac89132c:;
			if (it != expr_end) {
				jule::I32 _1937_i = it - expr->begin();
				{
					_1ad896287_Range16* _1944_range = (&(_1919_ranges[_1937_i]));;
					{
						if ((_19128_r < (*(_1944_range))._field_Lo)) {
							return false;;
						};
						if ((_19128_r <= (*(_1944_range))._field_Hi)) {
							return (((*(_1944_range))._field_Stride == 1LLU) || (jule::mod((jule::U16)(_19128_r - (*(_1944_range))._field_Lo),(*(_1944_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1ac89132c:;
				++it;
				_1937_i++;
				goto _iter_begin_1ac89132c;
			}
			_iter_end_1ac89132c:;
		};
		return false;;
	};
	jule::I32 _2086_lo = 0LL;;
	jule::I32 _2096_hi = _1919_ranges.len();;
	while ((_2086_lo < _2096_hi)) {
		{
			jule::I32 _2113_m = (_2086_lo + _1acb8549a_shiftRight((_2096_hi - _2086_lo), 1LLU));;
			_1ad896287_Range16* _2123_range = (&(_1919_ranges[_2113_m]));;
			{
				if ((((*(_2123_range))._field_Lo <= _19128_r) && (_19128_r <= (*(_2123_range))._field_Hi))) {
					return (((*(_2123_range))._field_Stride == 1LLU) || (jule::mod((jule::U16)(_19128_r - (*(_2123_range))._field_Lo),(*(_2123_range))._field_Stride) == 0LLU));;
				};
				if ((_19128_r < (*(_2123_range))._field_Lo)) {
					_2096_hi=_2113_m;
				} else {
					_2086_lo=(_2113_m + 1LL);
				};
			};
		}
	_iter_next_1ac890194:;
	}
	_iter_end_1ac890194:;;
	return false;;
}



inline jule::Bool _1ad898399_is32(jule::Slice<_1ad8967b5_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac8976c9:;
			if (it != expr_end) {
				jule::I32 _2307_i = it - expr->begin();
				{
					_1ad8967b5_Range32* _2314_range = (&(_2289_ranges[_2307_i]));;
					{
						if ((_22828_r < (*(_2314_range))._field_Lo)) {
							return false;;
						};
						if ((_22828_r <= (*(_2314_range))._field_Hi)) {
							return (((*(_2314_range))._field_Stride == 1LLU) || (jule::mod((jule::U32)(_22828_r - (*(_2314_range))._field_Lo),(*(_2314_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1ac8976c9:;
				++it;
				_2307_i++;
				goto _iter_begin_1ac8976c9;
			}
			_iter_end_1ac8976c9:;
		};
		return false;;
	};
	jule::I32 _2456_lo = 0LL;;
	jule::I32 _2466_hi = _2289_ranges.len();;
	while ((_2456_lo < _2466_hi)) {
		{
			jule::I32 _2483_m = (_2456_lo + _1acb8549a_shiftRight((_2466_hi - _2456_lo), 1LLU));;
			_1ad8967b5_Range32* _2493_range = (&(_2289_ranges[_2483_m]));;
			{
				if ((((*(_2493_range))._field_Lo <= _22828_r) && (_22828_r <= (*(_2493_range))._field_Hi))) {
					return (((*(_2493_range))._field_Stride == 1LLU) || (jule::mod((jule::U32)(_22828_r - (*(_2493_range))._field_Lo),(*(_2493_range))._field_Stride) == 0LLU));;
				};
				if ((_22828_r < (*(_2493_range))._field_Lo)) {
					_2466_hi=_2483_m;
				} else {
					_2456_lo=(_2483_m + 1LL);
				};
			};
		}
	_iter_next_1ac8943da:;
	}
	_iter_end_1ac8943da:;;
	return false;;
}



inline jule::Bool _1ad898ba2_isExcludingLatin(jule::Ptr<_1ad896c38_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_1ad896287_Range16> *_2804_R16 = &((*(_27821_rangeTab))._field_R16);;
		jule::I32 _2823_off = (*_27821_rangeTab.alloc)._field_LatinOffset;;
		if ((((*(_2804_R16)).len() > _2823_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_2804_R16))[((*(_2804_R16)).len() - 1LL)]._field_Hi)))) {
			return _1ad898025_is16((*(_2804_R16)).slice(_2823_off), static_cast<jule::U16>(_27844_r));;
		};
	};
	jule::Slice<_1ad8967b5_Range32> *_2873_R32 = &((*_27821_rangeTab.alloc)._field_R32);;
	if ((((*(_2873_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_2873_R32))[0LL]._field_Lo)))) {
		return _1ad898399_is32((*(_2873_R32)), static_cast<jule::U32>(_27844_r));;
	};
	return false;;
}



inline jule::Bool _1ad898de4_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_1ad890759__PROPERTIES[static_cast<jule::I32>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _1ad898ba2_isExcludingLatin(_1c6b3693d_Upper, _29512_r);;
}



inline __jule_tuple_i32__jule_tuple_int _1ed42e0bb_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1862_p0 = _18215_p[0LL];;
	jule::U8 _1872_x = _1ed42cd34_first[static_cast<jule::I32>(_1862_p0)];;
	if ((_1872_x >= 240LLU)) {
		jule::I32 _1923_mask = (_1abb9ed12_shiftLeft(static_cast<jule::I32>(_1872_x), 31LL) >> 31LL);;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_18215_p[0LL]) & (~(_1923_mask))) | (65533LL & _1923_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _1952_sz = static_cast<jule::I32>((_1872_x & 7LLU));;
	_1ed42d3d9_acceptRange _1962_accept = _1ed42d780_acceptRanges[static_cast<jule::I32>((_1872_x >> 4LLU))];;
	if ((_18215_p.len() < _1952_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2002_b1 = _18215_p[1LL];;
	if (((_2002_b1 < _1962_accept._field_lo) || (_1962_accept._field_hi < _2002_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_1862_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2002_b1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2072_b2 = _18215_p[2LL];;
	if (((_2072_b2 < 128LLU) || (191LL < _2072_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_1862_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2072_b2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2142_b3 = _18215_p[3LL];;
	if (((_2142_b3 < 128LLU) || (191LL < _2142_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_1862_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2072_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2142_b3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1ed42e40c_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2332_s0 = _22918_s[0LL];;
	jule::U8 _2342_x = _1ed42cd34_first[static_cast<jule::I32>(_2332_s0)];;
	if ((_2342_x >= 240LLU)) {
		jule::I32 _2393_mask = (_1abb9ed12_shiftLeft(static_cast<jule::I32>(_2342_x), 31LL) >> 31LL);;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_22918_s[0LL]) & (~(_2393_mask))) | (65533LL & _2393_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _2422_sz = static_cast<jule::I32>((_2342_x & 7LLU));;
	_1ed42d3d9_acceptRange _2432_accept = _1ed42d780_acceptRanges[static_cast<jule::I32>((_2342_x >> 4LLU))];;
	if ((_22918_s.len() < _2422_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2472_s1 = _22918_s[1LL];;
	if (((_2472_s1 < _2432_accept._field_lo) || (_2432_accept._field_hi < _2472_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_2332_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2472_s1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2542_s2 = _22918_s[2LL];;
	if (((_2542_s2 < 128LLU) || (191LL < _2542_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_2332_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2542_s2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2612_s3 = _22918_s[3LL];;
	if (((_2612_s3 < 128LLU) || (191LL < _2612_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_2332_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2542_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2612_s3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1ed42e95c_DecodeLastRuneStr(jule::Str _31722_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_31722_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I32 _3212_end = _31722_s.len();;
	jule::I32 _3226_start = (_3212_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(_31722_s[_3226_start]);
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _3306_lim = (_3212_end - 4LL);;
	if ((_3306_lim < 0LL)) {
		_3306_lim=0LL;
	};
	(_3226_start)--;
	for (; (_3226_start >= _3306_lim); (_3226_start)--) {
		{
			if (_1ed431178_RuneStart(_31722_s[_3226_start])) {
				goto _iter_end_1abe6d71d;
			};
		}
	_iter_next_1abe6d71d:;
	}
	_iter_end_1abe6d71d:;;
	if ((_3226_start < 0LL)) {
		_3226_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1ed42e40c_DecodeRuneStr(_31722_s.slice(_3226_start, _3212_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3226_start + __jule_func_result.__jule_result_arg1) != _3212_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::Slice<jule::U8> _1ed4304a7_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U8>(_40530_r); __jule_collection; }));;
	};
	return _1ed43082b_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _1ed43082b_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4142_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4142_i <= 2047LLU)) {
			_case_begin_1abe7cba0:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (192LL | static_cast<jule::U8>((_41242_r >> 6LL))); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		else if ((_4142_i > 1114111LLU) || ((55296LL <= _4142_i) && (_4142_i <= 57343LLU))) {
			_case_begin_1abe7b781:;
			{
				_41242_r=128LL;
				goto _case_begin_1abe7b7e7;
			}
		}
		else if ((_4142_i <= 65535LLU)) {
			_case_begin_1abe7b7e7:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = (224LL | static_cast<jule::U8>((_41242_r >> 12LL))); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		else {
			_case_begin_1abe7b033:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = (240LL | static_cast<jule::U8>((_41242_r >> 18LL))); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		_match_end_1abe7aebc:;
	};
}



inline jule::I32 _1ed430dae_RuneCountStr(jule::Str _47317_s) {
	jule::I32 __jule_func_result = 0;
	jule::I32 _4746_i = 0LL;;
	for (; (_4746_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _4767_c = _47317_s[_4746_i];;
			if ((_4767_c < 128LLU)) {
				(_4746_i)++;
				goto _iter_next_1abe860c6;
			};
			jule::U8 _4823_x = _1ed42cd34_first[static_cast<jule::I32>(_4767_c)];;
			if ((_4823_x == 241LLU)) {
				(_4746_i)++;
				goto _iter_next_1abe860c6;
			};
			jule::I32 _4877_size = static_cast<jule::I32>((_4823_x & 7LLU));;
			if (((_4746_i + _4877_size) > _47317_s.len())) {
				(_4746_i)++;
				goto _iter_next_1abe860c6;
			};
			_1ed42d3d9_acceptRange _4923_accept = _1ed42d780_acceptRanges[static_cast<jule::I32>((_4823_x >> 4LLU))];;
			_4767_c=_47317_s[(_4746_i + 1LL)];
			if (((_4767_c < _4923_accept._field_lo) || (_4923_accept._field_hi < _4767_c))) {
				_4877_size=1LL;
			} else if ((_4877_size == 2LL)) {
			} else {
				_4767_c=_47317_s[(_4746_i + 2LL)];
				if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
					_4877_size=1LL;
				} else if ((_4877_size == 3LL)) {
				} else {
					_4767_c=_47317_s[(_4746_i + 3LL)];
					if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
						_4877_size=1LL;
					};
				};
			};
			_4746_i+=_4877_size;
		}
	_iter_next_1abe860c6:;
	}
	_iter_end_1abe860c6:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1ed431178_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I32 _1ed471eee_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b) {
	jule::U8* _466_it = _4535_end;;
	for (; (_466_it >= _4517_begin); (_466_it)--) {
		{
			{
				if (((*(_466_it)) == _4547_b)) {
					return ((jule::I32)((_466_it - _4517_begin)));;
				};
			};
		}
	_iter_next_1abeab75b:;
	}
	_iter_end_1abeab75b:;;
	return -1LL;;
}



inline jule::I32 _1ed47262b_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b) {
	{
		auto expr = &(_6816_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abeabb24:;
		if (it != expr_end) {
			jule::I32 _706_i = it - expr->begin();
			jule::U8 *_709_se = it;
			{
				if (((*(_709_se)) == _6824_b)) {
					return _706_i;;
				};
			}
			_iter_next_1abeabb24:;
			++it;
			_706_i++;
			goto _iter_begin_1abeabb24;
		}
		_iter_end_1abeabb24:;
	};
	return -1LL;;
}



inline jule::I32 _1ed4729a0_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b) {
	if ((_7920_s.len() == 0LL)) {
		return -1LL;;
	};
	return _1ed471eee_findLastByte((&(_7920_s[0LL])), (&(_7920_s[(_7920_s.len() - 1LL)])), _7928_b);;
}



inline jule::Str _1ed472ce1_Repeat(jule::Str _1111_s, jule::I32 _1123_n) {
	if ((_1123_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1111_s.len() > jule::div(2147483647LL,_1123_n))) {
		jule::panic(jule::Str::lit("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:16:3"));;
	};
	_1ed486d49_StrBuilder _186_ss = static__1ed487146_New((_1111_s.len() * _1123_n));;
	for (; (_1123_n > 0LL); (_1123_n)--) {
		{
			_1ed4909ac_WriteStr(&_186_ss, _1111_s);
		}
	_iter_next_1abec95c0:;
	}
	_iter_end_1abec95c0:;;
	return _1ed4912a4_Str(&_186_ss);;
}



inline jule::Bool _1ed4731a9_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub) {
	return ((_2614_s.len() >= _2622_sub.len()) && (_2614_s.slice(0LL, _2622_sub.len()) == _2622_sub));;
}



inline jule::Bool _1ed47352d_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub) {
	return ((_3114_s.len() >= _3122_sub.len()) && (_3114_s.slice((_3114_s.len() - _3122_sub.len())) == _3122_sub));;
}



inline jule::I32 _1ed4739d4_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I32 _3933_i) {
	if ((((_3933_i < 0LL) || (_3911_s.len() < _3919_sub.len())) || (_3919_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_3933_i < _3911_s.len()); (_3933_i)++) {
		{
			if (_1ed4731a9_HasPrefix(_3911_s.slice(_3933_i), _3919_sub)) {
				return _3933_i;;
			};
		}
	_iter_next_1abecd23e:;
	}
	_iter_end_1abecd23e:;;
	return -1LL;;
}



inline jule::I32 _1ed473d25_Find(jule::Str _549_s, jule::Str _5417_sub) {
	return _1ed4739d4_FindAt(_549_s, _5417_sub, 0LL);;
}



inline jule::I32 _1ed474254_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I32 _6233_i) {
	jule::I32 _636_j = ((_6233_i - _6223_sub.len()) + 1LL);;
	if (((((_6223_sub.len() == 0LL) || (_6233_i < 0LL)) || (_6233_i >= _6215_s.len())) || (_636_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_1abececce:;
	for (; (_636_j >= 0LL); (_636_j)--) {
		{
			jule::I32 _697_k = _636_j;;
			jule::I32 _707_z = 0LL;;
			for (; (_707_z < _6223_sub.len()); ({
				jule::I32 ___jule_assign_arg = (_697_k + 1LL);
				jule::I32 _1___jule_assign_arg = (_707_z + 1LL);
				_697_k = ___jule_assign_arg;
				_707_z = _1___jule_assign_arg;
			})) {
				{
					if ((_6215_s[_697_k] != _6223_sub[_707_z])) {
						goto _iter_next_1abed0b04;
					};
				}
			_iter_next_1abed1a8e:;
			}
			_iter_end_1abed1a8e:;;
			return _636_j;;
		}
	_iter_next_1abed0b04:;
	}
	_iter_end_1abed0b04:;;
	return -1LL;;
}



inline jule::I32 _1ed4745c8_FindLast(jule::Str _8413_s, jule::Str _8421_sub) {
	return _1ed474254_FindLastAt(_8413_s, _8421_sub, (_8413_s.len() - 1LL));;
}



inline jule::I32 _1ed475db0_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b) {
	return _1ed4729a0_FindLastByteStr(_14817_s, _14825_b);;
}



inline jule::I32 _1ed476234_FindRune(jule::Str _15513_s, jule::I32 _15521_r) {
	jule::I32 _1566_i = 0LL;;
	while ((_1566_i < _15513_s.len())) {
		{
			jule::I32 _1583_br;
			jule::I32 _1587_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1ed42e40c_DecodeRuneStr(_15513_s.slice(_1566_i));
				_1583_br = __jule_assign_result.__jule_result_arg0;
				_1587_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_15521_r == _1583_br)) {
				return _1566_i;;
			};
			_1566_i+=_1587_n;
		}
	_iter_next_1abed9448:;
	}
	_iter_end_1abed9448:;;
	return -1LL;;
}



inline jule::I32 _1ed476b5d_FindAny(jule::Str _18512_s, jule::Str _18520_runes) {
	jule::I32 _1866_i = 0LL;;
	while ((_1866_i < _18512_s.len())) {
		{
			jule::I32 _1883_r;
			jule::I32 _1886_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1ed42e40c_DecodeRuneStr(_18512_s.slice(_1866_i));
				_1883_r = __jule_assign_result.__jule_result_arg0;
				_1886_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1ed476234_FindRune(_18520_runes, _1883_r) != -1LL)) {
				return _1866_i;;
			};
			_1866_i+=_1886_n;
		}
	_iter_next_1abedc77b:;
	}
	_iter_end_1abedc77b:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _1ed477301_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I32 _21532_n) {
	jule::I32 _2166_cap = _21532_n;;
	if ((_21532_n < 0LL)) {
		_2166_cap=16LLU;
	};
	jule::Slice<jule::Str> _2206_parts = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(0LL, _2166_cap); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	if ((_21532_n == 0LL)) {
		return _2206_parts;;
	};
	if ((_21532_n < 0LL)) {
		_21532_n=_21510_s.len();
	};
	jule::I32 _2276_i = 0LL;;
	for (; (_21532_n > 0LL); (_21532_n)--) {
		{
			jule::I32 _2293_j = _1ed4739d4_FindAt(_21510_s, _21518_sub, _2276_i);;
			if ((_2293_j == -1LL)) {
				goto _iter_end_1abee251c;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i, _2293_j)); };
			_2276_i=(_2293_j + _21518_sub.len());
		}
	_iter_next_1abee251c:;
	}
	_iter_end_1abee251c:;;
	if (((_21532_n > 0LL) && (_2276_i < _21510_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i)); };
	};
	return _2206_parts;;
}



inline jule::Bool _1ed477675_Contains(jule::Str _24313_s, jule::Str _24321_sub) {
	return (_1ed4739d4_FindAt(_24313_s, _24321_sub, 0LL) != -1LL);;
}



inline jule::Bool _1ed4781e2_ContainsAny(jule::Str _25816_s, jule::Str _25824_runes) {
	return (_1ed476b5d_FindAny(_25816_s, _25824_runes) != -1LL);;
}



inline jule::I32 _1ed478566_Count(jule::Str _26410_s, jule::Str _26418_sub) {
	if ((_26418_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _2686_n = 0LL;;
	jule::I32 _2696_i = 0LL;;
	for (;;) {
		{
			jule::I32 _2713_j = _1ed4739d4_FindAt(_26410_s, _26418_sub, _2696_i);;
			if ((_2713_j == -1LL)) {
				goto _iter_end_1abee75bb;
			};
			(_2686_n)++;
			_2696_i=(_2713_j + _26418_sub.len());
		}
	_iter_next_1abee75bb:;
	}
	_iter_end_1abee75bb:;;
	return _2686_n;;
}



inline jule::Str _1ed478a50_Replace(jule::Str _28412_s, jule::Str _28420_sub, jule::Str _28430_new, jule::I32 _28444_n) {
	if (((_28444_n == 0LL) || (_28420_sub == _28430_new))) {
		return _28412_s;;
	};
	jule::I32 _2892_m = _1ed478566_Count(_28412_s, _28420_sub);;
	if ((_2892_m == 0LL)) {
		return _28412_s;;
	};
	if (((_28444_n < 0LL) || (_2892_m < _28444_n))) {
		_28444_n=_2892_m;
	};
	_1ed486d49_StrBuilder _2976_ss = static__1ed487146_New(((_28412_s.len() + (_28444_n * (_28430_new.len() - _28420_sub.len()))) + 1LL));;
	jule::I32 _2986_i = 0LL;;
	for (; (_28444_n > 0LL); (_28444_n)--) {
		{
			jule::I32 _3003_j = _1ed4739d4_FindAt(_28412_s, _28420_sub, _2986_i);;
			if ((_3003_j == -1LL)) {
				goto _iter_end_1abeeb092;
			};
			_1ed4909ac_WriteStr(&_2976_ss, _28412_s.slice(_2986_i, _3003_j));
			_1ed4909ac_WriteStr(&_2976_ss, _28430_new);
			_2986_i=(_3003_j + _28420_sub.len());
		}
	_iter_next_1abeeb092:;
	}
	_iter_end_1abeeb092:;;
	_1ed4909ac_WriteStr(&_2976_ss, _28412_s.slice(_2986_i));
	return _1ed4912a4_Str(&_2976_ss);;
}



inline jule::Str _1ed4797cb_TrimLeft(jule::Str _34117_s, jule::Str _34125_cutset) {
	jule::I32 _3426_i = 0LL;;
	while ((_3426_i < _34117_s.len())) {
		{
			jule::I32 _3443_r;
			jule::I32 _3446_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1ed42e40c_DecodeRuneStr(_34117_s.slice(_3426_i));
				_3443_r = __jule_assign_result.__jule_result_arg0;
				_3446_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1ed476234_FindRune(_34125_cutset, _3443_r) == -1LL)) {
				return _34117_s.slice(_3426_i);;
			};
			_3426_i+=_3446_n;
		}
	_iter_next_1ac001042:;
	}
	_iter_end_1ac001042:;;
	return jule::Str();;
}



inline jule::Str _1ed479b50_TrimRight(jule::Str _35514_s, jule::Str _35522_cutset) {
	jule::I32 _3566_i = _35514_s.len();;
	while ((_3566_i > 0LL)) {
		{
			jule::I32 _3583_r;
			jule::I32 _3586_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1ed42e95c_DecodeLastRuneStr(_35514_s.slice(0LL, _3566_i));
				_3583_r = __jule_assign_result.__jule_result_arg0;
				_3586_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1ed476234_FindRune(_35522_cutset, _3583_r) == -1LL)) {
				return _35514_s.slice(0LL, _3566_i);;
			};
			_3566_i-=_3586_n;
		}
	_iter_next_1ac002b37:;
	}
	_iter_end_1ac002b37:;;
	return jule::Str();;
}



inline jule::Str _1ed479ec4_Trim(jule::Str _3699_s, jule::Str _36917_cutset) {
	return _1ed4797cb_TrimLeft(_1ed479b50_TrimRight(_3699_s, _36917_cutset), _36917_cutset);;
}



inline jule::Str _1ed47a348_Join(jule::Slice<jule::Str> _3759_parts, jule::Str _37523_sep) {
	{
		auto _match_expr{ _3759_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1ac00450c:;
			{
				return jule::Str();;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1ac004be4:;
			{
				return _3759_parts[0LL];;
			}
		}
		_match_end_1ac0049c4:;
	};
	jule::I32 _3826_n = 0LL;;
	{
		auto expr = &(_3759_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac00294a:;
		if (it != expr_end) {
			jule::Str *_3839_part = it;
			{
				_3826_n+=(*(_3839_part)).len();
				(_3826_n)++;
			}
			_iter_next_1ac00294a:;
			++it;
			goto _iter_begin_1ac00294a;
		}
		_iter_end_1ac00294a:;
	};
	_1ed486d49_StrBuilder _3876_s = static__1ed487146_New((_3826_n + 1LL));;
	_1ed4909ac_WriteStr(&_3876_s, _3759_parts[0LL]);
	{
		auto expr = _3759_parts.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ac0067d9:;
		if (it != expr_end) {
			jule::Str *_3899_part = it;
			{
				_1ed4909ac_WriteStr(&_3876_s, _37523_sep);
				_1ed4909ac_WriteStr(&_3876_s, (*(_3899_part)));
			}
			_iter_next_1ac0067d9:;
			++it;
			goto _iter_begin_1ac0067d9;
		}
		_iter_end_1ac0067d9:;
	};
	return _1ed4912a4_Str(&_3876_s);;
}



inline jule::Str _1ed493c02_Clean(jule::Str _10914_path) {
	jule::Str _1102_originalPath = _10914_path;;
	jule::I32 _1112_volLen = _1ed496a6d_volumeNameLen(_10914_path);;
	(_10914_path).mut_slice(_1112_volLen);;
	if ((_10914_path).empty()) {
		if ((((_1112_volLen > 1LL) && _1ed496496_IsPathSep(_1102_originalPath[0LL])) && _1ed496496_IsPathSep(_1102_originalPath[1LL]))) {
			return _1ed4942c9_FromSlash(_1102_originalPath);;
		};
		return (_1102_originalPath + jule::Str::lit(".", 1));;
	};
	jule::Bool _1202_rooted = _1ed496496_IsPathSep(_10914_path[0LL]);;
	jule::I32 _1272_n = _10914_path.len();;
	_1ed492d66_lazyBuff _1286_out = _1ed492d66_lazyBuff{._field_path=_10914_path, ._field_buff=jule::Slice<jule::U8>(nullptr), ._field_w=0, ._field_volAndPath=_1102_originalPath, ._field_volLen=_1112_volLen};;
	jule::I32 _1336_r;
	jule::I32 _13313_dotdot;
	({
		jule::I32 ___jule_assign_arg = 0LL;
		jule::I32 _1___jule_assign_arg = 0LL;
		_1336_r = ___jule_assign_arg;
		_13313_dotdot = _1___jule_assign_arg;
	});
	if (_1202_rooted) {
		_1ed4935d6_append(&_1286_out, 47LLU);
		({
			jule::I32 ___jule_assign_arg = 1LL;
			jule::I32 _1___jule_assign_arg = 1LL;
			_1336_r = ___jule_assign_arg;
			_13313_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_1336_r < _1272_n)) {
		{
			{
				
				if (_1ed496496_IsPathSep(_10914_path[_1336_r])) {
					_case_begin_1acb2b2a9:;
					{
						(_1336_r)++;
					}
				}
				else if (((_10914_path[_1336_r] == '.') && (((_1336_r + 1LL) == _1272_n) || _1ed496496_IsPathSep(_10914_path[(_1336_r + 1LL)])))) {
					_case_begin_1acb27d33:;
					{
						(_1336_r)++;
					}
				}
				else if ((((_10914_path[_1336_r] == '.') && (_10914_path[(_1336_r + 1LL)] == '.')) && (((_1336_r + 2LL) == _1272_n) || _1ed496496_IsPathSep(_10914_path[(_1336_r + 2LL)])))) {
					_case_begin_1acb27d99:;
					{
						_1336_r+=2LL;
						{
							
							if ((_1286_out._field_w > _13313_dotdot)) {
								_case_begin_1acb2e345:;
								{
									(_1286_out._field_w)--;
									while (((_1286_out._field_w > _13313_dotdot) && (!(_1ed496496_IsPathSep(_1ed49332d_index(&_1286_out, _1286_out._field_w)))))) {
										{
											(_1286_out._field_w)--;
										}
									_iter_next_1acb2eac6:;
									}
									_iter_end_1acb2eac6:;;
								}
							}
							else if ((!(_1202_rooted))) {
								_case_begin_1acb2e3de:;
								{
									if ((_1286_out._field_w > 0LL)) {
										_1ed4935d6_append(&_1286_out, 47LLU);
									};
									_1ed4935d6_append(&_1286_out, '.');
									_1ed4935d6_append(&_1286_out, '.');
									_13313_dotdot=_1286_out._field_w;
								}
							}
							_match_end_1acb2ded2:;
						};
					}
				}
				else {
					_case_begin_1acb27cbc:;
					{
						if (((_1202_rooted && (_1286_out._field_w != 1LL)) || ((!(_1202_rooted)) && (_1286_out._field_w != 0LL)))) {
							_1ed4935d6_append(&_1286_out, 47LLU);
						};
						;
						for (; ((_1336_r < _1272_n) && (!(_1ed496496_IsPathSep(_10914_path[_1336_r])))); (_1336_r)++) {
							{
								_1ed4935d6_append(&_1286_out, _10914_path[_1336_r]);
							}
						_iter_next_1acb29186:;
						}
						_iter_end_1acb29186:;;
					}
				}
				_match_end_1acb27a36:;
			};
		}
	_iter_next_1acb273d7:;
	}
	_iter_end_1acb273d7:;;
	if ((_1286_out._field_w == 0LL)) {
		_1ed4935d6_append(&_1286_out, '.');
	};
	return _1ed4942c9_FromSlash(_1ed49386c_string(&_1286_out));;
}



inline jule::Str _1ed4942c9_FromSlash(jule::Str _21214_path) {
	{
		return _21214_path;;
	};
}



inline jule::Str _1ed49461a_Join(jule::Slice<jule::Str> _2269_elem) {
	return _1ed497145_join(_2269_elem);;
}



inline jule::Str _1ed4948a1_Ext(jule::Str _2318_path) {
	jule::I32 _2326_i = (_2318_path.len() - 1LL);;
	for (; ((_2326_i >= 0LL) && (!(_1ed496496_IsPathSep(_2318_path[_2326_i])))); (_2326_i)--) {
		{
			if ((_2318_path[_2326_i] == '.')) {
				return _2318_path.slice(_2326_i);;
			};
		}
	_iter_next_1acb335ad:;
	}
	_iter_end_1acb335ad:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _1ed494b6a_Abs(jule::Str _2468_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result = std::move(_1ed496dae_abs(_2468_path));
return __jule_func_result;;
}



inline jule::Str _1ed494e34_Base(jule::Str _25213_path) {
	if ((_25213_path).empty()) {
		return jule::Str::lit(".", 1);;
	};
	while (((_25213_path.len() > 0LL) && _1ed496496_IsPathSep(_25213_path[(_25213_path.len() - 1LL)]))) {
		{
			(_25213_path).mut_slice(0LL, (_25213_path.len() - 1LL));;
		}
	_iter_next_1acb34933:;
	}
	_iter_end_1acb34933:;;
	(_25213_path).mut_slice(_1ed495550_VolumeName(_25213_path).len());;
	jule::I32 _2636_i = (_25213_path.len() - 1LL);;
	while (((_2636_i >= 0LL) && (!(_1ed496496_IsPathSep(_25213_path[_2636_i]))))) {
		{
			(_2636_i)--;
		}
	_iter_next_1acb34d40:;
	}
	_iter_end_1acb34d40:;;
	if ((_2636_i >= 0LL)) {
		(_25213_path).mut_slice((_2636_i + 1LL));;
	};
	if ((_25213_path).empty()) {
		return jule::Str::lit("/", 1);;
	};
	return _25213_path;;
}



inline jule::Str _1ed49530d_Dir(jule::Str _2838_path) {
	jule::Str _2842_vol = _1ed495550_VolumeName(_2838_path);;
	jule::I32 _2856_i = (_2838_path.len() - 1LL);;
	while (((_2856_i >= _2842_vol.len()) && (!(_1ed496496_IsPathSep(_2838_path[_2856_i]))))) {
		{
			(_2856_i)--;
		}
	_iter_next_1acb38580:;
	}
	_iter_end_1acb38580:;;
	jule::Str _2892_dir = _1ed493c02_Clean(_2838_path.slice(_2842_vol.len(), (_2856_i + 1LL)));;
	if ((_2892_dir.equal(".", 1) && (_2842_vol.len() > 2LL))) {
		return _2842_vol;;
	};
	return (_2842_vol + _2892_dir);;
}



inline jule::Str _1ed495550_VolumeName(jule::Str _30115_path) {
	return _1ed4942c9_FromSlash(_30115_path.slice(0LL, _1ed496a6d_volumeNameLen(_30115_path)));;
}



inline jule::Bool _1ed496496_IsPathSep(jule::U8 _4814_c) {
	return (47LL == _4814_c);;
}



inline jule::Bool _1ed4967a4_IsAbs(jule::Str _5310_path) {
	return _1ed4731a9_HasPrefix(_5310_path, jule::Str::lit("/", 1));;
}



inline jule::I32 _1ed496a6d_volumeNameLen(jule::Str _5918_path) {
	return 0LL;;
}



inline __jule_tuple_str__jule_tuple_bool _1ed496dae_abs(jule::Str _638_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_1ed4967a4_IsAbs(_638_path)) {
		__jule_func_result.__jule_result_arg0 = _1ed493c02_Clean(_638_path);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Str _672_wd = ({
		auto except = _1ed11c33c_WorkingDir();
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = jule::Str();
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} jule::Str();});
	});;
	__jule_func_result.__jule_result_arg0 = _1ed497145_join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _672_wd; (*it++) = _638_path; __jule_collection; }));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _1ed497145_join(jule::Slice<jule::Str> _739_elem) {
	{
		auto expr = &(_739_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb41478:;
		if (it != expr_end) {
			jule::I32 _746_i = it - expr->begin();
			jule::Str *_749_e = it;
			{
				if (!((*(_749_e))).empty()) {
					return _1ed493c02_Clean(_1ed47a348_Join(_739_elem.slice(_746_i), jule::Str::lit("/", 1)));;
				};
			}
			_iter_next_1acb41478:;
			++it;
			_746_i++;
			goto _iter_begin_1acb41478;
		}
		_iter_end_1acb41478:;
	};
	return jule::Str();;
}



inline jule::I32 _1ed373c8b_getLastFsError(void) {
	jule::I32 _722_err = _1ed0c8e86_GetLastErrno();;
	{
		auto &_match_expr{ _722_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1acb4e222:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1acb4e123:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1acb4da5c:;
			{
				return static_cast<jule::I32>(2LL);;
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1acb4dac3:;
			{
				return static_cast<jule::I32>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1acb4db39:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1acb4dbb1:;
			{
				return static_cast<jule::I32>(5LL);;
			}
		}
		else if (_match_expr == 75LL) {
			_case_begin_1acb4dc38:;
			{
				return static_cast<jule::I32>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1acb4dcb0:;
			{
				return static_cast<jule::I32>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1acb4e3ba:;
			{
				return static_cast<jule::I32>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1acb4e442:;
			{
				return static_cast<jule::I32>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1acb4e4b9:;
			{
				return static_cast<jule::I32>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1acb4e541:;
			{
				return static_cast<jule::I32>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1acb4e5b8:;
			{
				return static_cast<jule::I32>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1acb4e640:;
			{
				return static_cast<jule::I32>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1acb4e6b7:;
			{
				return static_cast<jule::I32>(14LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1acb4e73e:;
			{
				return static_cast<jule::I32>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1acb4e7b6:;
			{
				return static_cast<jule::I32>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1acb4e83d:;
			{
				return static_cast<jule::I32>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1acb4e8b5:;
			{
				return static_cast<jule::I32>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1acb4e93c:;
			{
				return static_cast<jule::I32>(19LL);;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1acb4e9b4:;
			{
				return static_cast<jule::I32>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1acb4ea3b:;
			{
				return static_cast<jule::I32>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1acb4eab3:;
			{
				return static_cast<jule::I32>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1acb4eb3a:;
			{
				return static_cast<jule::I32>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1acb4ebb2:;
			{
				return static_cast<jule::I32>(24LL);;
			}
		}
		else if (_match_expr == 105LL) {
			_case_begin_1acb4ec39:;
			{
				return static_cast<jule::I32>(25LL);;
			}
		}
		else if (_match_expr == 74LL) {
			_case_begin_1acb4ecb1:;
			{
				return static_cast<jule::I32>(26LL);;
			}
		}
		else if (_match_expr == 39LL) {
			_case_begin_1acb4ed38:;
			{
				return static_cast<jule::I32>(27LL);;
			}
		}
		else {
			_case_begin_1acb4d8e7:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		_match_end_1acb4da07:;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1adbe1c86_AtoiBp(jule::U8* _722_b, jule::I32 _736_n) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Bool _86_neg = ((*(_722_b)) == '-');;
	if (_86_neg) {
		if ((_736_n == 1LL)) {
			return __jule_func_result;;
		};
		(_736_n)--;
		(_722_b)++;
	};
	for (; (_736_n > 0LL); (_736_n)--) {
		{
			if ((('0' <= (*(_722_b))) && ((*(_722_b)) <= '9'))) {
				__jule_func_result.__jule_result_arg0*=10LL;
				__jule_func_result.__jule_result_arg0+=static_cast<jule::I32>((jule::U8)((*(_722_b)) - '0'));
			} else {
				return __jule_func_result;;
			};
			(_722_b)++;
		}
	_iter_next_1acb7869c:;
	}
	_iter_end_1acb7869c:;;
	__jule_func_result.__jule_result_arg1=true;
	if (_86_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	return __jule_func_result;;
}



inline jule::Str _1adc40c19_Itoa(jule::I32 _89_x) {
	if ((_89_x < 0LL)) {
		return (jule::Str::lit("-", 1) + _1adc41027_Utoa(static_cast<jule::U32>((-(_89_x)))));;
	};
	return _1adc41027_Utoa(static_cast<jule::U32>(_89_x));;
}



inline jule::Str _1adc41027_Utoa(jule::U32 _1613_x) {
	if ((_1613_x == 0LLU)) {
		return jule::Str::lit("0", 1);;
	};
	jule::Slice<jule::U8> _206_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(20LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _216_i = 0LL;;
	while ((_1613_x >= 10LLU)) {
		{
			jule::U32 _233_q = (_1613_x / 10LLU);;
			_206_buf[_216_i]=static_cast<jule::U8>((jule::U32)((jule::U32)('0' + _1613_x) - (jule::U32)(_233_q * 10LLU)));
			(_216_i)++;
			_1613_x=_233_q;
		}
	_iter_next_1acb801ed:;
	}
	_iter_end_1acb801ed:;;
	_206_buf[_216_i]=static_cast<jule::U8>((jule::U32)('0' + _1613_x));
	(_206_buf).mut_slice(0LL, (_216_i + 1LL));;
	_1adc41258_rev(&(_206_buf));
	return _1ed560e89_StrFromBytes(_206_buf);;
}



inline void _1adc41258_rev(jule::Slice<jule::U8>* _3513_b) {
	jule::I32 _366_i = 0LL;;
	for (; (_366_i < ((*(_3513_b)).len() >> 1LL)); (_366_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = (*(_3513_b))[(((*(_3513_b)).len() - 1LL) - _366_i)];
				jule::U8 _1___jule_assign_arg = (*(_3513_b))[_366_i];
				(*(_3513_b))[_366_i] = ___jule_assign_arg;
				(*(_3513_b))[(((*(_3513_b)).len() - 1LL) - _366_i)] = _1___jule_assign_arg;
			});
		}
	_iter_next_1acb83e05:;
	}
	_iter_end_1acb83e05:;;
}



inline jule::Slice<char*> _1adc44855_strSliceToCstrSlice(jule::Slice<jule::Str>* _3525_s, jule::Slice<jule::Slice<jule::U8>>* _3540_bargs) {
	jule::Slice<char*> _366_cs = ({ auto __jule_collection = jule::Slice<char*>::alloc(((*(_3525_s)).len() + 1LL), ((*(_3525_s)).len() + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = nullptr; __jule_collection; });;
	(*(_3540_bargs))=({ auto __jule_collection = jule::Slice<jule::Slice<jule::U8>>::alloc((*(_3525_s)).len(), (*(_3525_s)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::U8>(nullptr); __jule_collection; });
	{
		auto expr = _3525_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac203266:;
		if (it != expr_end) {
			jule::I32 _386_i = it - expr->begin();
			jule::Str *_389_arg = it;
			{
				jule::Slice<jule::U8> _397_barg = _1e024eeb6_StrToBytes((*(_389_arg)));;
				(*(_3540_bargs))[_386_i]=_397_barg;
				_366_cs[_386_i]=((char*)((&(_397_barg[0LL]))));
			}
			_iter_next_1ac203266:;
			++it;
			_386_i++;
			goto _iter_begin_1ac203266;
		}
		_iter_end_1ac203266:;
	};
	_366_cs[(_366_cs.len() - 1LL)]=nullptr;
	return _366_cs;;
}



inline jule::I32 _1adc44bc9_execvp(jule::Str* _4712_file, jule::Slice<jule::Str>* _4724_argv) {
	jule::Slice<jule::Slice<jule::U8>> _486_bargs = static_cast<jule::Slice<jule::Slice<jule::U8>>>(nullptr);;
	jule::Slice<char*> _492_cargv = _1adc44855_strSliceToCstrSlice(_4724_argv, &(_486_bargs));;
	jule::Slice<jule::U8> _502_s = _1e024eeb6_StrToBytes((*(_4712_file)));;
	{
		return execvp(((char*)((&(_502_s[0LL])))), (char*const*)(&(_492_cargv[0LL])));;
	};
}



inline jule::VoidExceptional _1adc44e0a_setenv(jule::Slice<jule::Str>* _5612_envv) {
	;
	{
		auto expr = _5612_envv;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2067b9:;
		if (it != expr_end) {
			jule::Str *_589_env = it;
			{
				jule::I32 _593_i = _1ed47262b_FindByteStr((*(_589_env)), '=');;
				if ((_593_i == -1LL)) {
					return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0)};
				};
				{
					jule::Slice<jule::U8> _644_key = _1e024eeb6_StrToBytes((*(_589_env)).slice(0LL, _593_i));;
					if ((((*(_589_env)).len() - _593_i) == 1LL)) {
						jule::Str _665_val = jule::Str::lit("\x00", 1);;
						if ((setenv(((char*)((&(_644_key[0LL])))), ((char*)((&(_665_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0)};
						};
					} else {
						jule::Slice<jule::U8> _715_val = _1e024eeb6_StrToBytes((*(_589_env)).slice((_593_i + 1LL)));;
						if ((setenv(((char*)((&(_644_key[0LL])))), ((char*)((&(_715_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0)};
						};
					};
				};
			}
			_iter_next_1ac2067b9:;
			++it;
			goto _iter_begin_1ac2067b9;
		}
		_iter_end_1ac2067b9:;
	};
	return jule::VoidExceptional{};
}



inline jule::I32 _1adc45d84_processErrorFromCode(jule::I32 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 13LL) {
			_case_begin_1ac20d150:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1ac20b3c3:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else {
			_case_begin_1ac20c1a4:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		_match_end_1ac20cd75:;
	};
}



inline jule::I32 _1adc460d7_getLastProcessError(void) {
	return _1adc45d84_processErrorFromCode(_1ed0c8e86_GetLastErrno());;
}



inline void _1adc46901_Exit(jule::I32 _129_code) {
	_1ed36d9de_Exit(_129_code);
}



inline jule::Str _1adc46b10_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _1ada65500_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _1ada657ca_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_1ed4984cb_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac22dd85:;
		if (it != expr_end) {
			jule::Str *_329_validExt = it;
			{
				if ((_3121_ext == (*(_329_validExt)))) {
					return true;;
				};
			}
			_iter_next_1ac22dd85:;
			++it;
			goto _iter_begin_1ac22dd85;
		}
		_iter_end_1ac22dd85:;
	};
	return false;;
}



inline jule::Bool _1ada65a94_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_1ed499840_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac230172:;
		if (it != expr_end) {
			jule::Str *_459_e = it;
			{
				if ((_4118_ext == (*(_459_e)))) {
					return true;;
				};
			}
			_iter_next_1ac230172:;
			++it;
			goto _iter_begin_1ac230172;
		}
		_iter_end_1ac230172:;
	};
	{
		auto expr = &(_1ada63784_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2311d9:;
		if (it != expr_end) {
			jule::Str *_509_e = it;
			{
				if ((_4118_ext == (*(_509_e)))) {
					return true;;
				};
			}
			_iter_next_1ac2311d9:;
			++it;
			goto _iter_begin_1ac2311d9;
		}
		_iter_end_1ac2311d9:;
	};
	return false;;
}



inline jule::Str _1ada73079_Logf(jule::Str _3239_fmt, jule::Slice<jule::Any> _32322_args) {
	return _1ada73a19_applyFmt(_3239_fmt, _32322_args);;
}



inline jule::Str _1ada73387_argToStr(jule::Any _32713_arg) {
	{
		auto &_match_expr{ _32713_arg };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1ac23277e:;
			{
				return _32713_arg.unsafe_cast<jule::Str>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type138) {
			_case_begin_1ac232196:;
			{
				return jule::Str::from_byte(_32713_arg.unsafe_cast<jule::U8>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1ac23220c:;
			{
				return jule::Str::from_rune(_32713_arg.unsafe_cast<jule::I32>());;
			}
		}
		else {
			_case_begin_1ac232130:;
			{
				return jule::Str::lit("<fmt?>", 6);;
			}
		}
		_match_end_1ac231c9a:;
	};
}



inline jule::I32 _1ada73651_findNextFmt(jule::Str _34016_fmt) {
	{
		auto expr = &(_34016_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2325b4:;
		if (it != expr_end) {
			jule::I32 _3416_i = it - expr->begin();
			jule::U8 *_3419_b = it;
			{
				if (((*(_3419_b)) == '@')) {
					return _3416_i;;
				};
			}
			_iter_next_1ac2325b4:;
			++it;
			_3416_i++;
			goto _iter_begin_1ac2325b4;
		}
		_iter_end_1ac2325b4:;
	};
	return -1LL;;
}



inline jule::Str _1ada73a19_applyFmt(jule::Str _34917_fmt, jule::Slice<jule::Any> _34927_args) {
	_1ed486d49_StrBuilder _3506_s = static__1ed487146_New(32LL);;
	{
		auto expr = &(_34927_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac234572:;
		if (it != expr_end) {
			jule::Any *_3519_arg = it;
			{
				jule::I32 _3523_i = _1ada73651_findNextFmt(_34917_fmt);;
				if ((_3523_i == -1LL)) {
					goto _iter_end_1ac234572;
				};
				_1ed4909ac_WriteStr(&_3506_s, _34917_fmt.slice(0LL, _3523_i));
				_1ed4909ac_WriteStr(&_3506_s, _1ada73387_argToStr((*(_3519_arg))));
				(_34917_fmt).mut_slice((_3523_i + 1LL));;
			}
			_iter_next_1ac234572:;
			++it;
			goto _iter_begin_1ac234572;
		}
		_iter_end_1ac234572:;
	};
	_1ed4909ac_WriteStr(&_3506_s, _34917_fmt);
	return _1ed4912a4_Str(&_3506_s);;
}



inline jule::Bool _1ada74872_IsTopDirective(jule::Str _2219_directive) {
	return (_2219_directive.equal("pass", 4) || _2219_directive.equal("build", 5));;
}



inline jule::Bool _1ada75c91_IsWindows(jule::Str _3714_os) {
	return _3714_os.equal("windows", 7);;
}



inline jule::Bool _1ada7609e_IsDarwin(jule::Str _4013_os) {
	return _4013_os.equal("darwin", 6);;
}



inline jule::Bool _1ada76368_IsLinux(jule::Str _4312_os) {
	return _4312_os.equal("linux", 5);;
}



inline jule::Bool _1ada766a9_IsI386(jule::Str _4611_arch) {
	return _4611_arch.equal("i386", 4);;
}



inline jule::Bool _1ada76940_IsAmd64(jule::Str _4912_arch) {
	return _4912_arch.equal("amd64", 5);;
}



inline jule::Bool _1ada76c09_IsArm64(jule::Str _5212_arch) {
	return _5212_arch.equal("arm64", 5);;
}



inline jule::Bool _1ada76ec3_IsUnix(jule::Str _5511_os) {
	return (_1ada7609e_IsDarwin(_5511_os) || _1ada76368_IsLinux(_5511_os));;
}



inline jule::Bool _1ada7739c_Is32Bit(jule::Str _5812_arch) {
	return _1ada766a9_IsI386(_5812_arch);;
}



inline jule::Bool _1ada775de_Is64Bit(jule::Str _6112_arch) {
	return (_1ada76940_IsAmd64(_6112_arch) || _1ada76c09_IsArm64(_6112_arch));;
}



inline void _1adc47ea7_init(void) {
	jule::Str _256_path = _1adc46b10_Executable();;
	if ((_256_path).empty()) {
		jule::panic(jule::Str::lit("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:3"));;
	};
	{
		_1adc47506_PathWd=({
			auto except = _1ed11c33c_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str::lit("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:4"));;
				return;;
			} jule::Str();});
		});
		_1adc4724d_PathExec=_1ed49530d_Dir(_256_path);
		_1adc46e51_PathStdlib=_1ed49461a_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = _1adc4724d_PathExec; (*it++) = jule::Str::lit("..", 2); (*it++) = jule::Str::lit("std", 3); __jule_collection; }));
		_1adc47803_PathApi=_1ed49461a_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = _1adc4724d_PathExec; (*it++) = jule::Str::lit("..", 2); (*it++) = jule::Str::lit("api", 3); (*it++) = jule::Str::lit("jule.hpp", 8); __jule_collection; }));
	};
}



inline jule::I32 _1a68791a6_LeadingZeros64(jule::U64 _6119_x) {
	return (64LL - _1a6881a3d_Len64(_6119_x));;
}



inline jule::I32 _1a687a0ec_TrailingZeros(jule::U32 _8318_x) {
	;
	return _1a687ac9b_TrailingZeros64(static_cast<jule::U64>(_8318_x));;
}



inline jule::I32 _1a687a9d2_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I32>(_1a68797e4__DE_BRUIJN32_TAB[static_cast<jule::I32>(((jule::U32)((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]);;
}



inline jule::I32 _1a687ac9b_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I32>(_1a6879d88__DE_BRUIJN64_TAB[static_cast<jule::I32>(((jule::U64)((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]);;
}



inline jule::I32 _1a6881774_Len32(jule::U32 _35214_x) {
	jule::I32 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x=(_35214_x >> 16LLU);
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x=(_35214_x >> 8LLU);
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I32>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I32>(_35214_x))));
	return __jule_func_result;;
}



inline jule::I32 _1a6881a3d_Len64(jule::U64 _36614_x) {
	jule::I32 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x=(_36614_x >> 32LLU);
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x=(_36614_x >> 16LLU);
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x=(_36614_x >> 8LLU);
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I32>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I32>(_36614_x))));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1a68827ca_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=(jule::U64)((jule::U64)(_41510_x + _41518_y) + _41526_carry);
	__jule_func_result.__jule_result_arg1=(((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1a68840d4_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5012_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5022_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5032_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5042_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5052_w0 = (jule::U64)(_5012_x0 * _5032_y0);;
	jule::U64 _5062_t = (jule::U64)((jule::U64)(_5022_x1 * _5032_y0) + (_5052_w0 >> 32LLU));;
	jule::U64 _5076_w1 = (_5062_t & 4294967295LLU);;
	jule::U64 _5082_w2 = (_5062_t >> 32LLU);;
	_5076_w1+=(jule::U64)(_5012_x0 * _5042_y1);
	__jule_func_result.__jule_result_arg0=(jule::U64)((jule::U64)((jule::U64)(_5022_x1 * _5042_y1) + _5082_w2) + (_5076_w1 >> 32LLU));
	__jule_func_result.__jule_result_arg1=(jule::U64)(_49910_x * _49918_y);
	return __jule_func_result;;
}



inline jule::U32 _1adade227_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _1adade535_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _1adade7ee_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _1adadeb40_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _1a6d022dd_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1ac8e1877:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1a6e1e790_IsInf(_4714_f, 0LL) || _1a688b64c_IsNaN(_4714_f)) {
			_case_begin_1ac8e1921:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1ac8e179a:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1a6e1ea59_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _566_x = _1adade7ee_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I32>(((_566_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_566_x=(_566_x & 9227875636482146303LLU);
	_566_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=_1adadeb40_F64FromBits(_566_x);
	return __jule_func_result;;
}



inline jule::F64 _1a688b33e_NaN(void) {
	return _1adadeb40_F64FromBits(9221120237041090561LLU);;
}



inline jule::Bool _1a688b64c_IsNaN(jule::F64 _5210_f) {
	return false;;
}



inline jule::F64 _1a6e1e4c6_Inf(jule::I32 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return _1adadeb40_F64FromBits(9218868437227405312LLU);;
	};
	return _1adadeb40_F64FromBits(18442240474082181120LLU);;
}



inline jule::Bool _1a6e1e790_IsInf(jule::F64 _7210_f, jule::I32 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1a6e1ea59_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1a6e22034_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = (_8214_x * 4503599627370496LLU);
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1a6e2153e_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1a688b64c_IsNaN(_1118_x) || _1a6e1e790_IsInf(_1118_x, 1LL)) {
			_case_begin_1ac92e40e:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1ac92e4a8:;
			{
				return _1a688b33e_NaN();;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1ac92e51e:;
			{
				return _1a6e1e4c6_Inf(-1LL);;
			}
		}
		_match_end_1ac92e343:;
	};
	jule::F64 _1336_f1;
	jule::I32 _13314_ki;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1a6d022dd_Frexp(_1118_x);
		_1336_f1 = __jule_assign_result.__jule_result_arg0;
		_13314_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1336_f1 < 0.7071067811865476)) {
		_1336_f1*=2LL;
		(_13314_ki)--;
	};
	jule::F64 _1382_f = (_1336_f1 - 1LL);;
	jule::F64 _1392_k = static_cast<jule::F64>(_13314_ki);;
	jule::F64 _1422_s = jule::div(_1382_f,(2LL + _1382_f));;
	jule::F64 _1432_s2 = (_1422_s * _1422_s);;
	jule::F64 _1442_s4 = (_1432_s2 * _1432_s2);;
	jule::F64 _1452_t1 = (_1432_s2 * (0.6666666666666735 + (_1442_s4 * (0.2857142874366239 + (_1442_s4 * (0.1818357216161805 + (_1442_s4 * 0.14798198605116586)))))));;
	jule::F64 _1462_t2 = (_1442_s4 * (0.3999999999940942 + (_1442_s4 * (0.22222198432149784 + (_1442_s4 * 0.15313837699209373)))));;
	jule::F64 _1472_R = (_1452_t1 + _1462_t2);;
	jule::F64 _1482_hfsq = ((0.5 * _1382_f) * _1382_f);;
	return ((_1392_k * 0.6931471803691238) - ((_1482_hfsq - ((_1422_s * (_1482_hfsq + _1472_R)) + (_1392_k * 0.00000000019082149292705877))) - _1382_f));;
}



inline jule::F64 _1a6e22034_Abs(jule::F64 _438_x) {
	return _1adadeb40_F64FromBits((_1adade7ee_F64Bits(_438_x) & 9223372036854775807LLU));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1a6e28b0c_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _462_absF = _1a6e22034_Abs(_449_f);;
	jule::F64 _476_i = 0LL;;
	if ((_462_absF > 4503599627370496LL)) {
		_476_i=_449_f;
	} else {
		_476_i=(_462_absF + 4503599627370496LL);
		_476_i-=4503599627370496LL;
		while ((_476_i > _462_absF)) {
			{
				(_476_i)--;
			}
		_iter_next_1ac994ac3:;
		}
		_iter_end_1ac994ac3:;;
		if ((_449_f < 0LL)) {
			_476_i=(-(_476_i));
		};
	};
	__jule_func_result.__jule_result_arg0 = _476_i;
	__jule_func_result.__jule_result_arg1 = (_449_f - _476_i);
	return __jule_func_result;;
}



inline jule::F64 _1a6e29415_Log2(jule::F64 _449_x) {
	jule::F64 _452_frac;
	jule::I32 _458_exp;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1a6d022dd_Frexp(_449_x);
		_452_frac = __jule_assign_result.__jule_result_arg0;
		_458_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_452_frac == 0.5)) {
		return static_cast<jule::F64>((_458_exp - 1LL));;
	};
	return ((_1a6e2153e_Log(_452_frac) * 1.4426950408889634) + static_cast<jule::F64>(_458_exp));;
}



inline jule::Str _1a6e529d2_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I32 _7932_prec, jule::I32 _7943_bitSize) {
	return _1ed560e89_StrFromBytes(_1a6e530ba_genericFtoa(({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _1a6e56475_max(((_7932_prec + 4LL) + 1LL), 25LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), _7913_f, _7921_fmt, _7932_prec, _7943_bitSize));;
}



inline jule::Slice<jule::U8> _1a6e530ba_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I32 _8758_prec, jule::I32 _8769_bitSize) {
	jule::U64 _886_bits = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1a673e3ce_floatInfo> _8910_flt = nullptr;;
	{
		auto &_match_expr{ _8769_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1bb8180b9:;
			{
				_886_bits=static_cast<jule::U64>(_1adade227_F32Bits(static_cast<jule::F32>(_8733_val)));
				_8910_flt=((jule::Ptr<_1a673e3ce_floatInfo>)((&(_1a6e51bbd_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1bb818130:;
			{
				_886_bits=_1adade7ee_F64Bits(_8733_val);
				_8910_flt=((jule::Ptr<_1a673e3ce_floatInfo>)((&(_1a6e51eba_f64info))));
			}
		}
		else {
			_case_begin_1bb815c54:;
			{
				jule::panic(jule::Str::lit("std::conv: illegal bitSize", 26) + jule::Str("\nlocation: std/conv/ftoa.jule:98:3"));;
			}
		}
		_match_end_1bb81788d:;
	};
	jule::Bool _1012_neg = (_1ac275481_shiftRight(_886_bits, (jule::U32)((*(_8910_flt))._field_expbits + (*_8910_flt.alloc)._field_mantbits)) != 0LLU);;
	jule::I32 _1026_exp = (static_cast<jule::I32>(_1ac275481_shiftRight(_886_bits, (*_8910_flt.alloc)._field_mantbits)) & static_cast<jule::I32>((_1ac23e11a_shiftLeft(1LL, (*_8910_flt.alloc)._field_expbits) - 1LL)));;
	jule::U64 _1036_mant = (_886_bits & (jule::U64)(_1ac274815_shiftLeft(static_cast<jule::U64>(1LLU), (*_8910_flt.alloc)._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _1026_exp };
		
		if (_match_expr == static_cast<jule::I32>((_1ac23e11a_shiftLeft(1LL, (*_8910_flt.alloc)._field_expbits) - 1LL))) {
			_case_begin_1bb817c12:;
			{
				{
					
					if ((_1036_mant != 0LLU)) {
						_case_begin_1bb81d883:;
						{
							return jule::append(_8720_dst,jule::Str::lit("nan", 3));;
						}
					}
					else if (_1012_neg) {
						_case_begin_1bb81d70c:;
						{
							return jule::append(_8720_dst,jule::Str::lit("-inf", 4));;
						}
					}
					else {
						_case_begin_1bb81d08b:;
						{
							return jule::append(_8720_dst,jule::Str::lit("+inf", 4));;
						}
					}
					_match_end_1bb81ce8c:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1bb81c079:;
			{
				(_1026_exp)++;
			}
		}
		else {
			_case_begin_1bb81b0de:;
			{
				_1036_mant|=_1ac274815_shiftLeft(static_cast<jule::U64>(1LLU), (*_8910_flt.alloc)._field_mantbits);
			}
		}
		_match_end_1bb81b9a2:;
	};
	_1026_exp+=(*_8910_flt.alloc)._field_bias;
	if ((_8743_fmt == 'b')) {
		return _1a6e555ea_fmtB(_8720_dst, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	if (((_8743_fmt == 'x') || (_8743_fmt == 'X'))) {
		return _1a6e55c7c_fmtX(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	;
	_1a6e5244e_decimalSlice _1376_digs = _1a6e5244e_decimalSlice{._field_d=jule::Slice<jule::U8>(nullptr), ._field_nd=0, ._field_dp=0, ._field_neg=false};;
	jule::Bool _1386_ok = false;;
	jule::Bool _1402_shortest = (_8758_prec < 0LL);;
	if (_1402_shortest) {
		_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(32LL, 32LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
		_1a6e612d7_ryuFtoaShortest(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I32>((*_8910_flt.alloc)._field_mantbits)), &((*(_8910_flt))));
		_1386_ok=true;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1bb821413:;
				{
					_8758_prec=_1a6e56475_max((_1376_digs._field_nd - 1LL), 0LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1bb822414:;
				{
					_8758_prec=_1a6e56475_max((_1376_digs._field_nd - _1376_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1bb82247a:;
				{
					_8758_prec=_1376_digs._field_nd;
				}
			}
			_match_end_1bb821622:;
		};
	} else if ((_8743_fmt != 'f')) {
		jule::I32 _1577_digits = _8758_prec;;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1bb8243d3:;
				{
					(_1577_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1bb8244c1:;
				{
					if ((_8758_prec == 0LL)) {
						_8758_prec=1LL;
					};
					_1577_digits=_8758_prec;
				}
			}
			else {
				_case_begin_1bb823e93:;
				{
					_1577_digits=1LL;
				}
			}
			_match_end_1bb822964:;
		};
		if (((_8769_bitSize == 32LL) && (_1577_digits <= 9LL))) {
			_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(24LL, 24LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
			_1a6e6002d_ryuFtoaFixed32(&(_1376_digs), static_cast<jule::U32>(_1036_mant), (_1026_exp - static_cast<jule::I32>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		} else if ((_1577_digits <= 18LL)) {
			_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(24LL, 24LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
			_1a6e604c3_ryuFtoaFixed64(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I32>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		};
	};
	if ((!(_1386_ok))) {
		return _1a6e537c4_bigFtoa(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	return _1a6e53e9a_fmtDigits(_8720_dst, _1402_shortest, _1012_neg, _1376_digs, _8758_prec, _8743_fmt);;
}



inline jule::Slice<jule::U8> _1a6e537c4_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I32 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I32 _18813_exp, _1a673e3ce_floatInfo* _18824_flt) {
	_1a6e650bb_decimal _1896_d = _1a6e650bb_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1a6e654a6_assign(&_1896_d, _1882_mant);
	_1a6e6575e_shift(&_1896_d, (_18813_exp - static_cast<jule::I32>((*(_18824_flt))._field_mantbits)));
	_1a6e5244e_decimalSlice _1926_digs = _1a6e5244e_decimalSlice{._field_d=jule::Slice<jule::U8>(nullptr), ._field_nd=0, ._field_dp=0, ._field_neg=false};;
	jule::Bool _1932_shortest = (_18733_prec < 0LL);;
	if (_1932_shortest) {
		_1a6e543b8_roundShortest(&(_1896_d), _1882_mant, _18813_exp, _18824_flt);
		_1926_digs=_1a6e5244e_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, ._field_neg=false};
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1bb82aeab:;
				{
					_18733_prec=(_1926_digs._field_nd - 1LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1bb82b132:;
				{
					_18733_prec=_1a6e56475_max((_1926_digs._field_nd - _1926_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1bb82b198:;
				{
					_18733_prec=_1926_digs._field_nd;
				}
			}
			_match_end_1bb82a30c:;
		};
	} else {
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1bb82a043:;
				{
					_1a6e66078_round(&_1896_d, (_18733_prec + 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1bb82a0a9:;
				{
					_1a6e66078_round(&_1896_d, (_1896_d._field_dp + _18733_prec));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1bb82a120:;
				{
					if ((_18733_prec == 0LL)) {
						_18733_prec=1LL;
					};
					_1a6e66078_round(&_1896_d, _18733_prec);
				}
			}
			_match_end_1bb82c7e8:;
		};
		_1926_digs=_1a6e5244e_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, ._field_neg=false};
	};
	return _1a6e53e9a_fmtDigits(_18716_dst, _1932_shortest, _18755_neg, _1926_digs, _18733_prec, _18744_fmt);;
}



inline jule::Slice<jule::U8> _1a6e53e9a_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1a6e5244e_decimalSlice _2252_digs, jule::I32 _22526_prec, jule::U8 _22537_fmt) {
	{
		auto &_match_expr{ _22537_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1bb83080c:;
			{
				return _1a6e5495c_fmtE(_22418_dst, _22447_neg, _2252_digs, _22526_prec, _22537_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1bb830873:;
			{
				return _1a6e54e46_fmtF(_22418_dst, _22447_neg, _2252_digs, _22526_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1bb8308d9:;
			{
				jule::I32 _2337_eprec = _22526_prec;;
				if (((_2337_eprec > _2252_digs._field_nd) && (_2252_digs._field_nd >= _2252_digs._field_dp))) {
					_2337_eprec=_2252_digs._field_nd;
				};
				if (_22431_shortest) {
					_2337_eprec=6LL;
				};
				jule::I32 _2433_exp = (_2252_digs._field_dp - 1LL);;
				if (((_2433_exp < -4LL) || (_2433_exp >= _2337_eprec))) {
					if ((_22526_prec > _2252_digs._field_nd)) {
						_22526_prec=_2252_digs._field_nd;
					};
					return _1a6e5495c_fmtE(_22418_dst, _22447_neg, _2252_digs, (_22526_prec - 1LL), (jule::U8)((jule::U8)(_22537_fmt + 'e') - 'g'));;
				};
				if ((_22526_prec > _2252_digs._field_dp)) {
					_22526_prec=_2252_digs._field_nd;
				};
				return _1a6e54e46_fmtF(_22418_dst, _22447_neg, _2252_digs, _1a6e56475_max((_22526_prec - _2252_digs._field_dp), 0LL));;
			}
		}
		_match_end_1bb830763:;
	};
	return jule::append(_22418_dst,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = '%'; (*it++) = _22537_fmt; __jule_collection; }));;
}



inline void _1a6e543b8_roundShortest(_1a6e650bb_decimal* _26223_d, jule::U64 _26235_mant, jule::I32 _26246_exp, _1a673e3ce_floatInfo* _26257_flt) {
	if ((_26235_mant == 0LLU)) {
		(*(_26223_d))._field_nd=0LL;
		return;;
	};
	jule::I32 _2832_minexp = ((*(_26257_flt))._field_bias + 1LL);;
	if (((_26246_exp > _2832_minexp) && ((332LL * ((*(_26223_d))._field_dp - (*(_26223_d))._field_nd)) >= (100LL * (_26246_exp - static_cast<jule::I32>((*(_26257_flt))._field_mantbits)))))) {
		return;;
	};
	_1a6e650bb_decimal _2926_upper = _1a6e650bb_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1a6e654a6_assign(&_2926_upper, (jule::U64)(_1ac27cd7e_shiftLeft(_26235_mant, 1LLU) + 1LLU));
	_1a6e6575e_shift(&_2926_upper, ((_26246_exp - static_cast<jule::I32>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::U64 _3026_mantlo = static_cast<jule::U64>(0LLU);;
	jule::I32 _3036_explo = 0LL;;
	if (((_26235_mant > _1ac274815_shiftLeft(1LLU, (*(_26257_flt))._field_mantbits)) || (_26246_exp == _2832_minexp))) {
		_3026_mantlo=(jule::U64)(_26235_mant - 1LLU);
		_3036_explo=_26246_exp;
	} else {
		_3026_mantlo=(jule::U64)(_1ac27cd7e_shiftLeft(_26235_mant, 1LLU) - 1LLU);
		_3036_explo=(_26246_exp - 1LL);
	};
	_1a6e650bb_decimal _3116_lower = _1a6e650bb_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1a6e654a6_assign(&_3116_lower, (jule::U64)(_1ac27cd7e_shiftLeft(_3026_mantlo, 1LLU) + 1LLU));
	_1a6e6575e_shift(&_3116_lower, ((_3036_explo - static_cast<jule::I32>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::Bool _3182_inclusive = ((_26235_mant & 1LL) == 0LLU);;
	jule::U8 _3316_upperdelta = static_cast<jule::U8>(0LLU);;
	jule::I32 _3356_ui = 0LL;;
	for (; ; (_3356_ui)++) {
		{
			jule::I32 _3403_mi = ((_3356_ui - _2926_upper._field_dp) + (*(_26223_d))._field_dp);;
			if ((_3403_mi >= (*(_26223_d))._field_nd)) {
				goto _iter_end_1bb99ca23;
			};
			jule::I32 _3443_li = ((_3356_ui - _2926_upper._field_dp) + _3116_lower._field_dp);;
			jule::U8 _3457_l = static_cast<jule::U8>(48LLU);;
			if (((_3443_li >= 0LL) && (_3443_li < _3116_lower._field_nd))) {
				_3457_l=_3116_lower._field_d[_3443_li];
			};
			jule::U8 _3497_m = static_cast<jule::U8>(48LLU);;
			if ((_3403_mi >= 0LL)) {
				_3497_m=(*(_26223_d))._field_d[_3403_mi];
			};
			jule::U8 _3537_u = static_cast<jule::U8>(48LLU);;
			if ((_3356_ui < _2926_upper._field_nd)) {
				_3537_u=_2926_upper._field_d[_3356_ui];
			};
			jule::Bool _3613_okdown = ((_3457_l != _3497_m) || (_3182_inclusive && ((_3443_li + 1LL) == _3116_lower._field_nd)));;
			{
				
				if (((_3316_upperdelta == 0LLU) && ((jule::U8)(_3497_m + 1LLU) < _3537_u))) {
					_case_begin_1bb9a2693:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				else if (((_3316_upperdelta == 0LLU) && (_3497_m != _3537_u))) {
					_case_begin_1bb9a273c:;
					{
						_3316_upperdelta=1LLU;
					}
				}
				else if (((_3316_upperdelta == 1LLU) && ((_3497_m != '9') || (_3537_u != '0')))) {
					_case_begin_1bb9a27a3:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				_match_end_1bb9a25c7:;
			};
			jule::Bool _3823_okup = ((_3316_upperdelta > 0LLU) && ((_3182_inclusive || (_3316_upperdelta > 1LLU)) || ((_3356_ui + 1LL) < _2926_upper._field_nd)));;
			{
				
				if ((_3613_okdown && _3823_okup)) {
					_case_begin_1bb9a51e0:;
					{
						_1a6e66078_round(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3613_okdown) {
					_case_begin_1bb9a5289:;
					{
						_1a6e65a17_roundDown(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3823_okup) {
					_case_begin_1bb9a5300:;
					{
						_1a6e65cc0_roundUp(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				_match_end_1bb9a2819:;
			};
		}
	_iter_next_1bb99ca23:;
	}
	_iter_end_1bb99ca23:;;
}



inline jule::Slice<jule::U8> _1a6e5495c_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1a6e5244e_decimalSlice _40137_d, jule::I32 _40154_prec, jule::U8 _40165_fmt) {
	if (_40126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _4086_ch = '0';;
	if ((_40137_d._field_nd != 0LL)) {
		_4086_ch=_40137_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	if ((_40154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('.'); };
		jule::I32 _4177_i = 1LL;;
		jule::I32 _4183_m = _1a6e56101_min(_40137_d._field_nd, (_40154_prec + 1LL));;
		if ((_4177_i < _4183_m)) {
			(_40113_dst).append(_40137_d._field_d.slice(_4177_i, _4183_m));;
			_4177_i=_4183_m;
		};
		for (; (_4177_i <= _40154_prec); (_4177_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1ac9c61dc:;
		}
		_iter_end_1ac9c61dc:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_40165_fmt); };
	jule::I32 _4306_exp = (_40137_d._field_dp - 1LL);;
	if ((_40137_d._field_nd == 0LL)) {
		_4306_exp=0LL;
	};
	if ((_4306_exp < 0LL)) {
		_4086_ch='-';
		_4306_exp=(-(_4306_exp));
	} else {
		_4086_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	{
		
		if ((_4306_exp < 10LL)) {
			_case_begin_1ab72ee69:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>(_4306_exp) + '0')); };
			}
		}
		else if ((_4306_exp < 100LL)) {
			_case_begin_1ab72e782:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp / 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1ab72e71b:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp / 100LL)) + '0')); __jule_push_dest.__push((jule::U8)((static_cast<jule::U8>(jule::div(_4306_exp,10LL)) % 10LL) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1c6b376ec:;
	};
	return _40113_dst;;
}



inline jule::Slice<jule::U8> _1a6e54e46_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1a6e5244e_decimalSlice _45637_d, jule::I32 _45654_prec) {
	if (_45626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('-'); };
	};
	if ((_45637_d._field_dp > 0LL)) {
		jule::I32 _4647_m = _1a6e56101_min(_45637_d._field_nd, _45637_d._field_dp);;
		(_45613_dst).append(_45637_d._field_d.slice(0LL, _4647_m));;
		for (; (_4647_m < _45637_d._field_dp); (_4647_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1bb86aa01:;
		}
		_iter_end_1bb86aa01:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
	};
	if ((_45654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('.'); };
		jule::I32 _4757_i = 0LL;;
		for (; (_4757_i < _45654_prec); (_4757_i)++) {
			{
				jule::U8 _4778_ch = static_cast<jule::U8>(48LLU);;
				jule::I32 _4784_j = (_45637_d._field_dp + _4757_i);;
				if (((0LL <= _4784_j) && (_4784_j < _45637_d._field_nd))) {
					_4778_ch=_45637_d._field_d[_4784_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push(_4778_ch); };
			}
		_iter_next_1bb86be0e:;
		}
		_iter_end_1bb86be0e:;;
	};
	return _45613_dst;;
}



inline jule::Slice<jule::U8> _1a6e555ea_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I32 _48952_exp, _1a673e3ce_floatInfo* _48963_flt) {
	if (_48926_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1a6e6a368_fmtBits(_48913_dst, _48937_mant, 10LL, false, true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('p'); };
	_48952_exp-=static_cast<jule::I32>((*(_48963_flt))._field_mantbits);
	if ((_48952_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1a6e6a368_fmtBits(_48913_dst, static_cast<jule::U64>(_48952_exp), 10LL, (_48952_exp < 0LL), true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48913_dst;;
}



inline jule::Slice<jule::U8> _1a6e55c7c_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I32 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I32 _51221_exp, _1a673e3ce_floatInfo* _51232_flt) {
	if ((_5126_mant == 0LLU)) {
		_51221_exp=0LL;
	};
	_5126_mant = _1ac274815_shiftLeft(_5126_mant, (jule::U32)(60LLU - (*(_51232_flt))._field_mantbits));
	while (((_5126_mant != 0LLU) && ((_5126_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5126_mant=(jule::U64)(_5126_mant << 1LLU);
			(_51221_exp)--;
		}
	_iter_next_1bb871bc2:;
	}
	_iter_end_1bb871bc2:;;
	if (((_51126_prec >= 0LL) && (_51126_prec < 15LL))) {
		jule::U32 _5263_shift = static_cast<jule::U32>(_1a86e36d3_shiftLeft(_51126_prec, 2LLU));;
		jule::U64 _5273_extra = (_1ac274815_shiftLeft(_5126_mant, _5263_shift) & 1152921504606846975LLU);;
		_5126_mant = _1ac275481_shiftRight(_5126_mant, (jule::U32)(60LLU - _5263_shift));
		if (((_5273_extra | (_5126_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5126_mant)++;
		};
		_5126_mant = _1ac274815_shiftLeft(_5126_mant, (jule::U32)(60LLU - _5263_shift));
		if (((_5126_mant & 2305843009213693952LLU) != 0LLU)) {
			_5126_mant=(_5126_mant >> 1LLU);
			(_51221_exp)++;
		};
	};
	jule::Str _5406_hex = jule::Str();;
	if ((_51137_fmt == 'X')) {
		_5406_hex=jule::Str::lit("0123456789ABCDEF", 16);
	} else {
		_5406_hex=jule::Str::lit("0123456789abcdef", 16);
	};
	if (_51148_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_51137_fmt); __jule_push_dest.__push((jule::U8)('0' + static_cast<jule::U8>(((_5126_mant >> 60LLU) & 1LLU)))); };
	_5126_mant=(jule::U64)(_5126_mant << 4LLU);
	if (((_51126_prec < 0LL) && (_5126_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		while ((_5126_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I32>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant=(jule::U64)(_5126_mant << 4LLU);
			}
		_iter_next_1bb877689:;
		}
		_iter_end_1bb877689:;;
	} else if ((_51126_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		jule::I32 _5637_i = 0LL;;
		for (; (_5637_i < _51126_prec); (_5637_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I32>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant=(jule::U64)(_5126_mant << 4LLU);
			}
		_iter_next_1bb878d72:;
		}
		_iter_end_1bb878d72:;;
	};
	jule::U8 _5716_ch = static_cast<jule::U8>(80LLU);;
	if ((_51137_fmt == _1a6e57025_lower(_51137_fmt))) {
		_5716_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	if ((_51221_exp < 0LL)) {
		_5716_ch='-';
		_51221_exp=(-(_51221_exp));
	} else {
		_5716_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	{
		
		if ((_51221_exp < 100LL)) {
			_case_begin_1bb87619e:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else if ((_51221_exp < 1000LL)) {
			_case_begin_1bb8760b1:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 100LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((jule::div(_51221_exp,10LL) % 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1bb87adeb:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 1000LL)) + '0')); __jule_push_dest.__push((jule::U8)((static_cast<jule::U8>(jule::div(_51221_exp,100LL)) % 10LL) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((jule::div(_51221_exp,10LL) % 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1bb87a78b:;
	};
	return _51113_dst;;
}



inline jule::I32 _1a6e56101_min(jule::I32 _5968_a, jule::I32 _59616_b) {
	if ((_5968_a < _59616_b)) {
		return _5968_a;;
	};
	return _59616_b;;
}



inline jule::I32 _1a6e56475_max(jule::I32 _6038_a, jule::I32 _60316_b) {
	if ((_6038_a > _60316_b)) {
		return _6038_a;;
	};
	return _60316_b;;
}



inline jule::U8 _1a6e57025_lower(jule::U8 _4710_c) {
	return (_4710_c | 32LL);;
}



inline __jule_tuple_u64__jule_tuple__1a672413e_ConvError _1a6e57498_parseUint(jule::Str* _5119_s, jule::I32 _5131_base, jule::I32 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__1a672413e_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (((*(_5119_s))).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_1bb882573:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_1bb8824a7:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_1a6e57025_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_1bb883ec0:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1a6e57025_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_1bb8840ad:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1a6e57025_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_1bb883b7e:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1bb883b18:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_1bb883a4c:;
					};
				};
			}
		}
		else {
			_case_begin_1bb881907:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1bb881e79:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=64LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _906_cutoff = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1bb887e4c:;
			{
				_906_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1bb887b2d:;
			{
				_906_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1bb887248:;
			{
				_906_cutoff=(jule::U64)(jule::div(jule::MAX_U64,static_cast<jule::U64>(_5131_base)) + 1LLU);
			}
		}
		_match_end_1bb887a40:;
	};
	jule::U64 _1006_maxVal = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1bb887b94:;
			{
				_1006_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1bb883761:;
			{
				_1006_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1bb8890e6:;
	};
	jule::U64 _1086_n = static_cast<jule::U64>(0LLU);;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb889b52:;
		if (it != expr_end) {
			jule::U8 _1099_c = *it;
			{
				jule::U8 _1107_d = static_cast<jule::U8>(0LLU);;
				{
					
					if ((('0' <= _1099_c) && (_1099_c <= '9'))) {
						_case_begin_1bb88b2e6:;
						{
							_1107_d=(jule::U8)(_1099_c - '0');
						}
					}
					else if ((('a' <= _1a6e57025_lower(_1099_c)) && (_1a6e57025_lower(_1099_c) <= 'z'))) {
						_case_begin_1bb88b22a:;
						{
							_1107_d=(jule::U8)((jule::U8)(_1a6e57025_lower(_1099_c) - 'a') + 10LLU);
						}
					}
					else if ((_1099_c == '_')) {
						_case_begin_1bb88ad40:;
						{
							goto _iter_next_1bb889b52;
						}
					}
					else {
						_case_begin_1bb88acc9:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1bb88ac74:;
				};
				if ((_1107_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
					return __jule_func_result;;
				};
				if ((_1086_n >= _906_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(1LL);
					return __jule_func_result;;
				};
				_1086_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _1323_n1 = (jule::U64)(_1086_n + static_cast<jule::U64>(_1107_d));;
				if (((_1323_n1 < _1086_n) || (_1323_n1 > _1006_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(1LL);
					return __jule_func_result;;
				};
				_1086_n=_1323_n1;
			}
			_iter_next_1bb889b52:;
			++it;
			goto _iter_begin_1bb889b52;
		}
		_iter_end_1bb889b52:;
	};
	__jule_func_result.__jule_result_arg0 = _1086_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1a6e578c7_ParseUint(jule::Str _14618_s, jule::I32 _14630_base, jule::I32 _14645_bitSize) {
	jule::U64 _1472_un;
	jule::I32 _1476_err;
	({
		__jule_tuple_u64__jule_tuple__1a672413e_ConvError __jule_assign_result = _1a6e57498_parseUint(&(_14618_s), _14630_base, _14645_bitSize);
		_1472_un = __jule_assign_result.__jule_result_arg0;
		_1476_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1476_err != static_cast<jule::I32>(0LL))) {
		return jule::Exceptional<jule::U64>{.error=jule::Any(_1476_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::U64>{.result=_1472_un};;
}



inline jule::Exceptional<jule::I64> _1a6e57d7d_ParseInt(jule::Str _17217_s, jule::I32 _17225_base, jule::I32 _17240_bitSize) {
	if ((_17217_s).empty()) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0)};
	};
	jule::Bool _1786_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_1786_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _1876_un;
	jule::I32 _18710_err;
	({
		__jule_tuple_u64__jule_tuple__1a672413e_ConvError __jule_assign_result = _1a6e57498_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_1876_un = __jule_assign_result.__jule_result_arg0;
		_18710_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18710_err != static_cast<jule::I32>(0LL)) && (_18710_err != static_cast<jule::I32>(1LL)))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_18710_err, &__jule_any_type0)};
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1962_cutoff = static_cast<jule::U64>(_1ac23e11a_shiftLeft(1LL, static_cast<jule::U32>((_17240_bitSize - 1LL))));;
	if (((!(_1786_neg)) && (_1876_un >= _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type0)};
	};
	if ((_1786_neg && (_1876_un > _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type0)};
	};
	jule::I64 _2036_n = static_cast<jule::I64>(_1876_un);;
	if (_1786_neg) {
		_2036_n=(-(_2036_n));
	};
	return jule::Exceptional<jule::I64>{.result=_2036_n};;
}



inline __jule_tuple_f64__jule_tuple_bool _1a6e58a3d_eiselLemire64(jule::U64 _4122_man, jule::I32 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=_1adadeb40_F64FromBits(9223372036854775808LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I32 _572_clz = _1a68791a6_LeadingZeros64(_4122_man);;
	_4122_man = _1ac274815_shiftLeft(_4122_man, static_cast<jule::U32>(_572_clz));
	;
	jule::U64 _606_retExp2 = (jule::U64)(static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_572_clz));;
	jule::U64 _636_xHi;
	jule::U64 _6315_xLo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a68840d4_Mul64(_4122_man, _1a6e598a7_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_636_xHi = __jule_assign_result.__jule_result_arg0;
		_6315_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_636_xHi & 511LLU) == 511LLU) && ((jule::U64)(_6315_xLo + _4122_man) < _4122_man))) {
		jule::U64 _673_yHi;
		jule::U64 _678_yLo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a68840d4_Mul64(_4122_man, _1a6e598a7_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_673_yHi = __jule_assign_result.__jule_result_arg0;
			_678_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _687_mergedHi;
		jule::U64 _6817_mergedLo;
		({
			jule::U64 ___jule_assign_arg = _636_xHi;
			jule::U64 _1___jule_assign_arg = (jule::U64)(_6315_xLo + _673_yHi);
			_687_mergedHi = ___jule_assign_arg;
			_6817_mergedLo = _1___jule_assign_arg;
		});
		if ((_6817_mergedLo < _6315_xLo)) {
			(_687_mergedHi)++;
		};
		if (((((_687_mergedHi & 511LLU) == 511LLU) && ((jule::U64)(_6817_mergedLo + 1LLU) == 0LLU)) && ((jule::U64)(_678_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _687_mergedHi;
			jule::U64 _1___jule_assign_arg = _6817_mergedLo;
			_636_xHi = ___jule_assign_arg;
			_6315_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _792_msb = (_636_xHi >> 63LLU);;
	jule::U64 _806_retMantissa = _1ac25e190_shiftRight(_636_xHi, (jule::U64)(_792_msb + 9LLU));;
	_606_retExp2-=(1LLU ^ _792_msb);
	if ((((_6315_xLo == 0LLU) && ((_636_xHi & 511LLU) == 0LLU)) && ((_806_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_806_retMantissa+=(_806_retMantissa & 1LLU);
	_806_retMantissa=(_806_retMantissa >> 1LLU);
	if (((_806_retMantissa >> 53LLU) > 0LLU)) {
		_806_retMantissa=(_806_retMantissa >> 1LLU);
		_606_retExp2+=1LLU;
	};
	if (((jule::U64)(_606_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1036_retBits = ((jule::U64)(_606_retExp2 << 52LLU) | (_806_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_1036_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1adadeb40_F64FromBits(_1036_retBits);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1a6e58eb1_eiselLemire32(jule::U64 _11022_man, jule::I32 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=_1adade535_F32FromBits(2147483648LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I32 _1322_clz = _1a68791a6_LeadingZeros64(_11022_man);;
	_11022_man = _1ac274815_shiftLeft(_11022_man, static_cast<jule::U32>(_1322_clz));
	;
	jule::U64 _1356_retExp2 = (jule::U64)(static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1322_clz));;
	jule::U64 _1386_x_hi;
	jule::U64 _13816_x_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a68840d4_Mul64(_11022_man, _1a6e598a7_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_1386_x_hi = __jule_assign_result.__jule_result_arg0;
		_13816_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_1386_x_hi & 274877906943LLU) == 274877906943LLU) && ((jule::U64)(_13816_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _1423_y_hi;
		jule::U64 _1429_y_lo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a68840d4_Mul64(_11022_man, _1a6e598a7_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_1423_y_hi = __jule_assign_result.__jule_result_arg0;
			_1429_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _1437_merged_hi;
		jule::U64 _14318_merged_lo;
		({
			jule::U64 ___jule_assign_arg = _1386_x_hi;
			jule::U64 _1___jule_assign_arg = (jule::U64)(_13816_x_lo + _1423_y_hi);
			_1437_merged_hi = ___jule_assign_arg;
			_14318_merged_lo = _1___jule_assign_arg;
		});
		if ((_14318_merged_lo < _13816_x_lo)) {
			(_1437_merged_hi)++;
		};
		if (((((_1437_merged_hi & 274877906943LLU) == 274877906943LLU) && ((jule::U64)(_14318_merged_lo + 1LLU) == 0LLU)) && ((jule::U64)(_1429_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _1437_merged_hi;
			jule::U64 _1___jule_assign_arg = _14318_merged_lo;
			_1386_x_hi = ___jule_assign_arg;
			_13816_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1542_msb = (_1386_x_hi >> 63LLU);;
	jule::U64 _1556_retMantissa = _1ac25e190_shiftRight(_1386_x_hi, (jule::U64)(_1542_msb + 38LLU));;
	_1356_retExp2-=(1LLU ^ _1542_msb);
	if ((((_13816_x_lo == 0LLU) && ((_1386_x_hi & 274877906943LLU) == 0LLU)) && ((_1556_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_1556_retMantissa+=(_1556_retMantissa & 1LLU);
	_1556_retMantissa=(_1556_retMantissa >> 1LLU);
	if (((_1556_retMantissa >> 24LLU) > 0LLU)) {
		_1556_retMantissa=(_1556_retMantissa >> 1LLU);
		_1356_retExp2+=1LLU;
	};
	if (((jule::U64)(_1356_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1786_retBits = ((jule::U64)(_1356_retExp2 << 23LLU) | (_1556_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_1786_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1adade535_F32FromBits(static_cast<jule::U32>(_1786_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I32 _1a6e5ac93_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix) {
	jule::I32 _476_n = _4638_prefix.len();;
	if ((_476_n > _4630_s.len())) {
		_476_n=_4630_s.len();
	};
	jule::I32 _516_i = 0LL;;
	for (; (_516_i < _476_n); (_516_i)++) {
		{
			jule::U8 _537_c = _4630_s[_516_i];;
			if ((('A' <= _537_c) && (_537_c <= 'Z'))) {
				_537_c+=32LL;
			};
			if ((_537_c != _4638_prefix[_516_i])) {
				return _516_i;;
			};
		}
	_iter_next_1bb8b0925:;
	}
	_iter_end_1bb8b0925:;;
	return _476_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1a6e5b0a1_special(jule::Str _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I32 _736_sign = 1LL;;
	jule::I32 _746_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1bb8b4341:;
			{
				if ((_6912_s[0LL] == '-')) {
					_736_sign=-1LL;
				};
				_746_nsign=1LL;
				{
					jule::Str* _838_sp = (&(_6912_s));;
					((*(_838_sp))).mut_slice(1LL);;
				};
				goto _case_begin_1bb8b43b8;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1bb8b43b8:;
			{
				jule::I32 _887_caseN = _1a6e5ac93_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("infinity", 8));;
				if (((3LL < _887_caseN) && (_887_caseN < 8LL))) {
					_887_caseN=3LL;
				};
				if (((_887_caseN == 3LL) || (_887_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = _1a6e1e4c6_Inf(_736_sign);
					__jule_func_result.__jule_result_arg1 = (_746_nsign + __jule_func_result.__jule_result_arg1);
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1bb8b442e:;
			{
				if ((_1a6e5ac93_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = _1a688b33e_NaN();
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1bb8b4297:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1a6e5b36a_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1bb8b9599:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1bb8b9995:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1bb8b9544:;
	};
	jule::U64 _1226_base = static_cast<jule::U64>(10LLU);;
	jule::I32 _1236_maxMantDigits = 19LL;;
	jule::U8 _1246_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_1a6e57025_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_1226_base=16LLU;
		_1236_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_1246_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _1326_sawdot = false;;
	jule::Bool _1336_sawdigits = false;;
	jule::I32 _1346_nd = 0LL;;
	jule::I32 _1356_ndMant = 0LL;;
	jule::I32 _1366_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _1383_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_1383_c == '_')) {
					_case_begin_1bb8be9ab:;
					{
						goto _iter_next_1bb8bdcda;
					}
				}
				else if ((_1383_c == '.')) {
					_case_begin_1bb8bea55:;
					{
						if (_1326_sawdot) {
							goto _julec_label_1bb8c44a5;
						};
						_1326_sawdot=true;
						_1366_dp=_1346_nd;
						goto _iter_next_1bb8bdcda;
					}
				}
				else if ((('0' <= _1383_c) && (_1383_c <= '9'))) {
					_case_begin_1bb8beabb:;
					{
						_1336_sawdigits=true;
						if (((_1383_c == '0') && (_1346_nd == 0LL))) {
							(_1366_dp)--;
							goto _iter_next_1bb8bdcda;
						};
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_1226_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((jule::U8)(_1383_c - '0'));
							(_1356_ndMant)++;
						} else if ((_1383_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1bb8bdcda;
					}
				}
				else if ((((_1226_base == 16LLU) && ('a' <= _1a6e57025_lower(_1383_c))) && (_1a6e57025_lower(_1383_c) <= 'f'))) {
					_case_begin_1bb8beb32:;
					{
						_1336_sawdigits=true;
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((jule::U8)((jule::U8)(_1a6e57025_lower(_1383_c) - 'a') + 10LLU));
							(_1356_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1bb8bdcda;
					}
				}
				_match_end_1bb8be8ce:;
			};
			goto _iter_end_1bb8bdcda;
		}
	_iter_next_1bb8bdcda:;
	}
	_iter_end_1bb8bdcda:;;
	_julec_label_1bb8c44a5:;
	if ((!(_1336_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_1326_sawdot))) {
		_1366_dp=_1346_nd;
	};
	if ((_1226_base == 16LLU)) {
		_1366_dp*=4LL;
		_1356_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_1a6e57025_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _1246_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I32 _2017_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_2017_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I32 _2117_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1bb8c6d04;
				};
				if ((_2117_e < 10000LL)) {
					_2117_e=(((_2117_e * 10LL) + static_cast<jule::I32>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0');
				};
			}
		_iter_next_1bb8c6d04:;
		}
		_iter_end_1bb8c6d04:;;
		_1366_dp+=(_2117_e * _2017_esign);
	} else if ((_1226_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=(_1366_dp - _1356_ndMant);
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1a6e5cdb6_atof64exact(jule::U64 _48616_mantissa, jule::I32 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_1ac275481_shiftRight(_48616_mantissa, _1a6e51eba_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_48616_mantissa);
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_1bb8d0cdb:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_1bb8d0d74:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1a6e5c27d_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1a6e5c27d_f64pow10[_48635_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_1bb8d0dda:;
			{
				__jule_func_result.__jule_result_arg0 = jule::div(__jule_func_result.__jule_result_arg0,_1a6e5c27d_f64pow10[(-(_48635_exp))]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1bb8d0c0e:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1a6e5d2e5_atof32exact(jule::U64 _52016_mantissa, jule::I32 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_1ac275481_shiftRight(_52016_mantissa, _1a6e51bbd_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_52016_mantissa);
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_1bb8d5032:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_1bb8d50ba:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1a6e5c5ad_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1a6e5c5ad_f32pow10[_52035_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_1bb8d5131:;
			{
				__jule_func_result.__jule_result_arg0 = jule::div(__jule_func_result.__jule_result_arg0,_1a6e5c5ad_f32pow10[(-(_52035_exp))]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1bb8d4e55:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__1a672413e_ConvError _1a6e5d889_atofHex(_1a673e3ce_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I32 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__1a672413e_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I32 _5572_maxExp = ((static_cast<jule::I32>(_1ac23e11a_shiftLeft(1LL, (*(_55613_flt))._field_expbits)) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I32 _5582_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I32>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && (_1ac275481_shiftRight(_55633_mantissa, (jule::U32)((*(_55613_flt))._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55633_mantissa=(jule::U64)(_55633_mantissa << 1LLU);
			(_55652_exp)--;
		}
	_iter_next_1bb8d892b:;
	}
	_iter_end_1bb8d892b:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while ((_1ac275481_shiftRight(_55633_mantissa, (jule::U32)((jule::U32)(1LLU + (*(_55613_flt))._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1bb8db09e:;
	}
	_iter_end_1bb8db09e:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5582_minExp - 2LL)))) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1bb8dad18:;
	}
	_iter_end_1bb8dad18:;;
	jule::U64 _5886_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa=(_55633_mantissa >> 2LLU);
	_5886_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_5886_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == _1ac274815_shiftLeft(1LLU, (jule::U32)(1LLU + (*(_55613_flt))._field_mantbits)))) {
			_55633_mantissa=(_55633_mantissa >> 1LLU);
			(_55652_exp)++;
		};
	};
	if ((_1ac275481_shiftRight(_55633_mantissa, (*(_55613_flt))._field_mantbits) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I32 _6036_err = static_cast<jule::I32>(0LL);;
	if ((_55652_exp > _5572_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>(_1ac23e11a_shiftLeft(1LL, (*(_55613_flt))._field_mantbits));
		_55652_exp=(_5572_maxExp + 1LL);
		_6036_err=static_cast<jule::I32>(1LL);
	};
	jule::U64 _6106_bits = (_55633_mantissa & (jule::U64)(_1ac274815_shiftLeft(1LLU, (*(_55613_flt))._field_mantbits) - 1LLU));;
	_6106_bits|=_1ac274815_shiftLeft(static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & static_cast<jule::I32>((_1ac23e11a_shiftLeft(1LL, (*(_55613_flt))._field_expbits) - 1LL)))), (*(_55613_flt))._field_mantbits);
	if (_55662_neg) {
		_6106_bits|=_1ac274815_shiftLeft(_1ac274815_shiftLeft(1LLU, (*(_55613_flt))._field_mantbits), (*(_55613_flt))._field_expbits);
	};
	if (_1a673e3ce_floatInfo_eq(&(*(_55613_flt)), _1a6e51bbd_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1adade535_F32FromBits(static_cast<jule::U32>(_6106_bits)));
		__jule_func_result.__jule_result_arg1 = _6036_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _1adadeb40_F64FromBits(_6106_bits);
	__jule_func_result.__jule_result_arg1 = _6036_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1a672413e_ConvError _1a6e5dc63_atof32(jule::Str _62111_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__1a672413e_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6233_val;
		jule::I32 _6238__n;
		jule::Bool _62312_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a6e5b0a1_special(_62111_s);
			_6233_val = __jule_assign_result.__jule_result_arg0;
			_6238__n = __jule_assign_result.__jule_result_arg1;
			_62312_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62312_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6233_val);
			__jule_func_result.__jule_result_arg1 = _6238__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6292_mantissa;
	jule::I32 _62912_exp;
	jule::Bool _62917_neg;
	jule::Bool _62922_trunc;
	jule::Bool _62929_hex;
	jule::I32 _62934__n;
	jule::Bool _62942_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a6e5b36a_readFloat(&(_62111_s));
		_6292_mantissa = __jule_assign_result.__jule_result_arg0;
		_62912_exp = __jule_assign_result.__jule_result_arg1;
		_62917_neg = __jule_assign_result.__jule_result_arg2;
		_62922_trunc = __jule_assign_result.__jule_result_arg3;
		_62929_hex = __jule_assign_result.__jule_result_arg4;
		_62934__n = __jule_assign_result.__jule_result_arg5;
		_62942_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62934__n;
	if ((!(_62942_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	if (_62929_hex) {
		jule::F64 _6367_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__1a672413e_ConvError __jule_assign_result = _1a6e5d889_atofHex(&(_1a6e51bbd_f32info), _6292_mantissa, _62912_exp, _62917_neg, _62922_trunc);
			_6367_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6367_ff);
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62922_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1a6e5d2e5_atof32exact(_6292_mantissa, _62912_exp, _62917_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62942_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1a6e58eb1_eiselLemire32(_6292_mantissa, _62912_exp, _62917_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62942_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62942_ok) {
			if ((!(_62922_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _6588_fUp = static_cast<jule::F32>(0.0f);;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1a6e58eb1_eiselLemire32((jule::U64)(_6292_mantissa + 1LLU), _62912_exp, _62917_neg);
				_6588_fUp = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62942_ok && (__jule_func_result.__jule_result_arg0 == _6588_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1a6e650bb_decimal _6676_d = _1a6e650bb_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	if ((!(_1a6e5ba30_set(&_6676_d, _1ed560939_StrBytes(_62111_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _6712_b;
	jule::Bool _6715_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1a6e5bd71_floatBits(&_6676_d, &(_1a6e51bbd_f32info));
		_6712_b = __jule_assign_result.__jule_result_arg0;
		_6715_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1adade535_F32FromBits(static_cast<jule::U32>(_6712_b));
	if (_6715_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I32>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a672413e_ConvError _1a6e5dea5_atof64(jule::Str _67911_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1a672413e_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6813_val;
		jule::I32 _6818__n;
		jule::Bool _68112_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a6e5b0a1_special(_67911_s);
			_6813_val = __jule_assign_result.__jule_result_arg0;
			_6818__n = __jule_assign_result.__jule_result_arg1;
			_68112_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68112_ok) {
			__jule_func_result.__jule_result_arg0 = _6813_val;
			__jule_func_result.__jule_result_arg1 = _6818__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6872_mantissa;
	jule::I32 _68712_exp;
	jule::Bool _68717_neg;
	jule::Bool _68722_trunc;
	jule::Bool _68729_hex;
	jule::I32 _68734__n;
	jule::Bool _68742_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a6e5b36a_readFloat(&(_67911_s));
		_6872_mantissa = __jule_assign_result.__jule_result_arg0;
		_68712_exp = __jule_assign_result.__jule_result_arg1;
		_68717_neg = __jule_assign_result.__jule_result_arg2;
		_68722_trunc = __jule_assign_result.__jule_result_arg3;
		_68729_hex = __jule_assign_result.__jule_result_arg4;
		_68734__n = __jule_assign_result.__jule_result_arg5;
		_68742_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68734__n;
	if ((!(_68742_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	if (_68729_hex) {
		({
			__jule_tuple_f64__jule_tuple__1a672413e_ConvError __jule_assign_result = _1a6e5d889_atofHex(&(_1a6e51eba_f64info), _6872_mantissa, _68712_exp, _68717_neg, _68722_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68722_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1a6e5cdb6_atof64exact(_6872_mantissa, _68712_exp, _68717_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68742_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1a6e58a3d_eiselLemire64(_6872_mantissa, _68712_exp, _68717_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68742_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68742_ok) {
			if ((!(_68722_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _7158_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1a6e58a3d_eiselLemire64((jule::U64)(_6872_mantissa + 1LLU), _68712_exp, _68717_neg);
				_7158_fUp = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68742_ok && (__jule_func_result.__jule_result_arg0 == _7158_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1a6e650bb_decimal _7246_d = _1a6e650bb_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	if ((!(_1a6e5ba30_set(&_7246_d, _1ed560939_StrBytes(_67911_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _7282_b;
	jule::Bool _7285_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1a6e5bd71_floatBits(&_7246_d, &(_1a6e51eba_f64info));
		_7282_b = __jule_assign_result.__jule_result_arg0;
		_7285_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1adadeb40_F64FromBits(_7282_b);
	if (_7285_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I32>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a672413e_ConvError _1a6e5e329_parseFloatPrefix(jule::Str* _73622_s, jule::I32 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1a672413e_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _7383_f;
		jule::I32 _7386_n;
		jule::I32 _7389_err;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__1a672413e_ConvError __jule_assign_result = _1a6e5dc63_atof32((*(_73622_s)));
			_7383_f = __jule_assign_result.__jule_result_arg0;
			_7386_n = __jule_assign_result.__jule_result_arg1;
			_7389_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_7383_f);
		__jule_func_result.__jule_result_arg1 = _7386_n;
		__jule_func_result.__jule_result_arg2 = _7389_err;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1a6e5dea5_atof64((*(_73622_s))));
return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1a6e5e69d_ParseFloat(jule::Str _76815_s, jule::I32 _76823_bitSize) {
	jule::F64 _7692_f;
	jule::I32 _7695_n;
	jule::I32 _7698_err;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1a672413e_ConvError __jule_assign_result = _1a6e5e329_parseFloatPrefix(&(_76815_s), _76823_bitSize);
		_7692_f = __jule_assign_result.__jule_result_arg0;
		_7695_n = __jule_assign_result.__jule_result_arg1;
		_7698_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_7695_n != _76815_s.len()) && ((_7698_err == static_cast<jule::I32>(0LL)) || (_7698_err != static_cast<jule::I32>(2LL))))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0)};
	};
	if ((_7698_err != static_cast<jule::I32>(0LL))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(_7698_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::F64>{.result=_7692_f};;
}



inline void _1a6e6002d_ryuFtoaFixed32(_1a6e5244e_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I32 _4956_exp, jule::I32 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:3"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:3"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I32 _626_e2 = _4956_exp;;
	jule::I32 _632_b = _1a6881774_Len32(_4945_mant);;
	if ((_632_b < 25LL)) {
		_4945_mant = _1ac27125c_shiftLeft(_4945_mant, static_cast<jule::U32>((25LL - _632_b)));
		_626_e2+=(static_cast<jule::I32>(_632_b) - 25LL);
	};
	jule::I32 _742_q = (((-(_1a6e6156d_mulByLog2Log10((_626_e2 + 24LL)))) + _4966_prec) - 1LL);;
	jule::Bool _796_exact = ((_742_q <= 27LL) && (_742_q >= 0LL));;
	jule::U32 _816_di;
	jule::I32 _8110_dexp2;
	jule::Bool _8121_d0;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a6e62e65_mult64bitPow10(_4945_mant, _626_e2, _742_q);
		_816_di = __jule_assign_result.__jule_result_arg0;
		_8110_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8121_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8110_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:3"));;
	};
	if ((((_742_q < 0LL) && (_742_q >= -10LL)) && _1a6e63718_divisibleByPow5(static_cast<jule::U64>(_4945_mant), (-(_742_q))))) {
		_796_exact=true;
		_8121_d0=true;
	};
	jule::U32 _942_extra = static_cast<jule::U32>((-(_8110_dexp2)));;
	jule::U32 _952_extraMask = static_cast<jule::U32>((_1ac23e11a_shiftLeft(1LL, _942_extra) - 1LL));;
	jule::U32 _976_dfrac = static_cast<jule::U32>(0LLU);;
	({
		jule::U32 ___jule_assign_arg = _1ac271b86_shiftRight(_816_di, _942_extra);
		jule::U32 _1___jule_assign_arg = (_816_di & _952_extraMask);
		_816_di = ___jule_assign_arg;
		_976_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _996_roundUp = false;;
	if (_796_exact) {
		_996_roundUp=(((_976_dfrac > _1ac27125c_shiftLeft(1LLU, (jule::U32)(_942_extra - 1LLU))) || ((_976_dfrac == _1ac27125c_shiftLeft(1LLU, (jule::U32)(_942_extra - 1LLU))) && (!(_8121_d0)))) || (((_976_dfrac == _1ac27125c_shiftLeft(1LLU, (jule::U32)(_942_extra - 1LLU))) && _8121_d0) && ((_816_di & 1LLU) == 1LLU)));
	} else {
		_996_roundUp=(_1ac271b86_shiftRight(_976_dfrac, (jule::U32)(_942_extra - 1LLU)) == 1LLU);
	};
	if ((_976_dfrac != 0LLU)) {
		_8121_d0=false;
	};
	_1a6e60d0e_formatDecimal(_4924_d, static_cast<jule::U64>(_816_di), (!(_8121_d0)), _996_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_742_q;
}



inline void _1a6e604c3_ryuFtoaFixed64(_1a6e5244e_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I32 _12156_exp, jule::I32 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:3"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I32 _1316_e2 = _12156_exp;;
	jule::I32 _1322_b = _1a6881a3d_Len64(_12145_mant);;
	if ((_1322_b < 55LL)) {
		_12145_mant=_1ac274815_shiftLeft(_12145_mant, static_cast<jule::U32>((55LL - _1322_b)));
		_1316_e2+=(static_cast<jule::I32>(_1322_b) - 55LL);
	};
	jule::I32 _1462_q = (((-(_1a6e6156d_mulByLog2Log10((_1316_e2 + 54LL)))) + _12166_prec) - 1LL);;
	jule::Bool _1516_exact = ((_1462_q <= 55LL) && (_1462_q >= 0LL));;
	jule::U64 _1536_di;
	jule::I32 _15310_dexp2;
	jule::Bool _15321_d0;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a6e63394_mult128bitPow10(_12145_mant, _1316_e2, _1462_q);
		_1536_di = __jule_assign_result.__jule_result_arg0;
		_15310_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15321_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15310_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:3"));;
	};
	if ((((_1462_q < 0LL) && (_1462_q >= -22LL)) && _1a6e63718_divisibleByPow5(_12145_mant, (-(_1462_q))))) {
		_1516_exact=true;
		_15321_d0=true;
	};
	jule::U32 _1662_extra = static_cast<jule::U32>((-(_15310_dexp2)));;
	jule::U64 _1672_extraMask = static_cast<jule::U64>((_1ac23e11a_shiftLeft(1LL, _1662_extra) - 1LL));;
	jule::U64 _1696_dfrac = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = _1ac275481_shiftRight(_1536_di, _1662_extra);
		jule::U64 _1___jule_assign_arg = (_1536_di & _1672_extraMask);
		_1536_di = ___jule_assign_arg;
		_1696_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _1716_roundUp = false;;
	if (_1516_exact) {
		_1716_roundUp=(((_1696_dfrac > _1ac274815_shiftLeft(1LLU, (jule::U32)(_1662_extra - 1LLU))) || ((_1696_dfrac == _1ac274815_shiftLeft(1LLU, (jule::U32)(_1662_extra - 1LLU))) && (!(_15321_d0)))) || (((_1696_dfrac == _1ac274815_shiftLeft(1LLU, (jule::U32)(_1662_extra - 1LLU))) && _15321_d0) && ((_1536_di & 1LLU) == 1LLU)));
	} else {
		_1716_roundUp=(_1ac275481_shiftRight(_1696_dfrac, (jule::U32)(_1662_extra - 1LLU)) == 1LLU);
	};
	if ((_1696_dfrac != 0LLU)) {
		_15321_d0=false;
	};
	_1a6e60d0e_formatDecimal(_12124_d, _1536_di, (!(_15321_d0)), _1716_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1462_q;
}



inline void _1a6e60d0e_formatDecimal(_1a6e5244e_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I32 _20088_prec) {
	jule::U64 _2012_max = _1a6e60814_u64pow10[_20088_prec];;
	jule::I32 _2026_trimmed = 0LL;;
	while ((_20044_m >= _2012_max)) {
		{
			jule::U64 _2043_a;
			jule::U64 _2046_b;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_2043_a = ___jule_assign_arg;
				_2046_b = _1___jule_assign_arg;
			});
			_20044_m=_2043_a;
			(_2026_trimmed)++;
			if ((_2046_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_2046_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_2046_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1bb921c61:;
	}
	_iter_end_1bb921c61:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2012_max)) {
		_20044_m=(_20044_m / 10LLU);
		(_2026_trimmed)++;
	};
	jule::U32 _2296_n = static_cast<jule::U32>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I32>(_20088_prec);
	jule::U64 _2316_v = _20044_m;;
	while ((_2316_v >= 100LLU)) {
		{
			jule::U64 _2337_v1 = static_cast<jule::U64>(0LLU);;
			jule::U64 _2347_v2 = static_cast<jule::U64>(0LLU);;
			if (((_2316_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) % 100LL));
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = (_2316_v / 100LLU);
					jule::U64 _1___jule_assign_arg = (_2316_v % 100LL);
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			};
			_2296_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I32>((jule::U32)(_2296_n + 1LLU))]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U64)((jule::U64)(2LL * _2347_v2) + 1LLU)));
			(*(_20023_d))._field_d[static_cast<jule::I32>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U64)(2LL * _2347_v2)));
			_2316_v=_2337_v1;
		}
	_iter_next_1bb9246e2:;
	}
	_iter_end_1bb9246e2:;;
	if ((_2316_v > 0LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I32>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U64)((jule::U64)(2LL * _2316_v) + 1LLU)));
	};
	if ((_2316_v >= 10LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I32>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U64)(2LL * _2316_v)));
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_2026_trimmed)++;
		}
	_iter_next_1bb92ad25:;
	}
	_iter_end_1bb92ad25:;;
	(*(_20023_d))._field_dp=((*(_20023_d))._field_nd + _2026_trimmed);
}



inline void _1a6e612d7_ryuFtoaShortest(_1a6e5244e_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I32 _26157_exp, _1a673e3ce_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1a687ac9b_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant = _1ac275481_shiftRight(_26146_mant, static_cast<jule::U32>((-(_26157_exp))));
		_1a6e623b5_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _2732_ml;
	jule::U64 _2736_mc;
	jule::U64 _27310_mu;
	jule::I32 _27318_e2;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1a6e61c66_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_2732_ml = __jule_assign_result.__jule_result_arg0;
		_2736_mc = __jule_assign_result.__jule_result_arg1;
		_27310_mu = __jule_assign_result.__jule_result_arg2;
		_27318_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27318_e2 == 0LL)) {
		_1a6e623b5_ryuDigits(_26125_d, _2732_ml, _2736_mc, _27310_mu, true, false);
		return;;
	};
	jule::I32 _2792_q = (_1a6e6156d_mulByLog2Log10((-(_27318_e2))) + 1LL);;
	jule::U64 _2836_dl = static_cast<jule::U64>(0LLU);;
	jule::U64 _2846_dc = static_cast<jule::U64>(0LLU);;
	jule::U64 _2856_du = static_cast<jule::U64>(0LLU);;
	jule::Bool _2866_dl0 = false;;
	jule::Bool _2876_dc0 = false;;
	jule::Bool _2886_du0 = false;;
	if (_1a673e3ce_floatInfo_eq(&(*(_26168_flt)), _1a6e51bbd_f32info)) {
		jule::U32 _2907_dl32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2917_dc32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2927_du32 = static_cast<jule::U32>(0LLU);;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a6e62e65_mult64bitPow10(static_cast<jule::U32>(_2732_ml), _27318_e2, _2792_q);
			_2907_dl32 = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a6e62e65_mult64bitPow10(static_cast<jule::U32>(_2736_mc), _27318_e2, _2792_q);
			_2917_dc32 = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a6e62e65_mult64bitPow10(static_cast<jule::U32>(_27310_mu), _27318_e2, _2792_q);
			_2927_du32 = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(_2907_dl32);
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(_2917_dc32);
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(_2927_du32);
			_2836_dl = ___jule_assign_arg;
			_2846_dc = _1___jule_assign_arg;
			_2856_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a6e63394_mult128bitPow10(_2732_ml, _27318_e2, _2792_q);
			_2836_dl = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a6e63394_mult128bitPow10(_2736_mc, _27318_e2, _2792_q);
			_2846_dc = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a6e63394_mult128bitPow10(_27310_mu, _27318_e2, _2792_q);
			_2856_du = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27318_e2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:3"));;
	};
	if ((_2792_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_2866_dl0 = ___jule_assign_arg;
			_2876_dc0 = _1___jule_assign_arg;
			_2886_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2792_q < 0LL) && (_2792_q >= -24LL))) {
		if (_1a6e63718_divisibleByPow5(_2732_ml, (-(_2792_q)))) {
			_2866_dl0=true;
		};
		if (_1a6e63718_divisibleByPow5(_2736_mc, (-(_2792_q)))) {
			_2876_dc0=true;
		};
		if (_1a6e63718_divisibleByPow5(_27310_mu, (-(_2792_q)))) {
			_2886_du0=true;
		};
	};
	jule::U32 _3252_extra = static_cast<jule::U32>((-(_27318_e2)));;
	jule::U64 _3262_extraMask = static_cast<jule::U64>((_1ac23e11a_shiftLeft(1LL, _3252_extra) - 1LL));;
	jule::U64 _3286_fracl = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = _1ac275481_shiftRight(_2836_dl, _3252_extra);
		jule::U64 _1___jule_assign_arg = (_2836_dl & _3262_extraMask);
		_2836_dl = ___jule_assign_arg;
		_3286_fracl = _1___jule_assign_arg;
	});
	jule::U64 _3306_fracc = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = _1ac275481_shiftRight(_2846_dc, _3252_extra);
		jule::U64 _1___jule_assign_arg = (_2846_dc & _3262_extraMask);
		_2846_dc = ___jule_assign_arg;
		_3306_fracc = _1___jule_assign_arg;
	});
	jule::U64 _3326_fracu = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = _1ac275481_shiftRight(_2856_du, _3252_extra);
		jule::U64 _1___jule_assign_arg = (_2856_du & _3262_extraMask);
		_2856_du = ___jule_assign_arg;
		_3326_fracu = _1___jule_assign_arg;
	});
	jule::Bool _3386_uok = ((!(_2886_du0)) || (_3326_fracu > 0LLU));;
	if ((_2886_du0 && (_3326_fracu == 0LLU))) {
		_3386_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_3386_uok))) {
		(_2856_du)--;
	};
	jule::Bool _3476_cup = false;;
	if (_2876_dc0) {
		_3476_cup=((_3306_fracc > _1ac274815_shiftLeft(1LLU, (jule::U32)(_3252_extra - 1LLU))) || ((_3306_fracc == _1ac274815_shiftLeft(1LLU, (jule::U32)(_3252_extra - 1LLU))) && ((_2846_dc & 1LLU) == 1LLU)));
	} else {
		_3476_cup=(_1ac275481_shiftRight(_3306_fracc, (jule::U32)(_3252_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3612_lok = ((_2866_dl0 && (_3286_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3612_lok))) {
		(_2836_dl)++;
	};
	jule::Bool _3662_c0 = (_2876_dc0 && (_3306_fracc == 0LLU));;
	_1a6e623b5_ryuDigits(_26125_d, _2836_dl, _2846_dc, _2856_du, _3662_c0, _3476_cup);
	(*(_26125_d))._field_dp-=_2792_q;
}



inline jule::I32 _1a6e6156d_mulByLog2Log10(jule::I32 _37719_x) {
	return ((_37719_x * 78913LL) >> 18LL);;
}



inline jule::I32 _1a6e61837_mulByLog10Log2(jule::I32 _38719_x) {
	return ((_38719_x * 108853LL) >> 15LL);;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1a6e61c66_computeBounds(jule::U64 _39518_mant, jule::I32 _39529_exp, _1a673e3ce_floatInfo* _3963_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != _1ac274815_shiftLeft(1LLU, (*(_3963_flt))._field_mantbits)) || (_39529_exp == (((*(_3963_flt))._field_bias + 1LL) - static_cast<jule::I32>((*(_3963_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = (jule::U64)((jule::U64)(2LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (jule::U64)(2LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = (jule::U64)((jule::U64)(2LL * _39518_mant) + 1LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 1LL);
	} else {
		({
			jule::U64 ___jule_assign_arg = (jule::U64)((jule::U64)(4LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (jule::U64)(4LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = (jule::U64)((jule::U64)(4LL * _39518_mant) + 2LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 2LL);
	};
	return __jule_func_result;;
}



inline void _1a6e623b5_ryuDigits(_1a6e5244e_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _4106_lhi;
	jule::U32 _41011_llo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1a6e639d2_divmod1e9(_40936_lower);
		_4106_lhi = __jule_assign_result.__jule_result_arg0;
		_41011_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4112_chi;
	jule::U32 _4117_clo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1a6e639d2_divmod1e9(_40948_central);
		_4112_chi = __jule_assign_result.__jule_result_arg0;
		_4117_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4122_uhi;
	jule::U32 _4127_ulo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1a6e639d2_divmod1e9(_40962_upper);
		_4122_uhi = __jule_assign_result.__jule_result_arg0;
		_4127_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4122_uhi == 0LLU)) {
		_1a6e62a36_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_4106_lhi < _4122_uhi)) {
		if ((_41011_llo != 0LLU)) {
			(_4106_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_4117_clo == 0LLU));
		_40992_cup=((_4117_clo > 500000000LL) || ((_4117_clo == 500000000LL) && _40992_cup));
		_1a6e62a36_ryuDigits32(_40919_d, _4106_lhi, _4112_chi, _4122_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U32 _4287_n = static_cast<jule::U32>(9LLU);;
		jule::U32 _4297_v = _4112_chi;;
		while ((_4297_v > 0LLU)) {
			{
				jule::U32 _4314_v1;
				jule::U32 _4318_v2;
				({
					jule::U32 ___jule_assign_arg = (_4297_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_4297_v % 10LL);
					_4314_v1 = ___jule_assign_arg;
					_4318_v2 = _1___jule_assign_arg;
				});
				_4297_v=_4314_v1;
				(_4287_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I32>(_4287_n)]=static_cast<jule::U8>((jule::U32)(_4318_v2 + '0'));
			}
		_iter_next_1bb949272:;
		}
		_iter_end_1bb949272:;;
		((*(_40919_d))._field_d).mut_slice(static_cast<jule::I32>(_4287_n));;
		(*(_40919_d))._field_nd=static_cast<jule::I32>((jule::U32)(9LL - _4287_n));
		_1a6e62a36_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, ((*(_40919_d))._field_nd + 8LL));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1bb94be23:;
	}
	_iter_end_1bb94be23:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			((*(_40919_d))._field_d).mut_slice(1LL);;
		}
	_iter_next_1bb949ccd:;
	}
	_iter_end_1bb949ccd:;;
}



inline void _1a6e62a36_ryuDigits32(_1a6e5244e_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I32 _45551_endindex) {
	if ((_4556_upper == 0LLU)) {
		(*(_45421_d))._field_dp=(_45551_endindex + 1LL);
		return;;
	};
	jule::I32 _4606_trimmed = 0LL;;
	jule::I32 _4636_cNextDigit = 0LL;;
	while ((_4556_upper > 0LLU)) {
		{
			jule::U32 _4703_l = ((jule::U32)(_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _4717_c;
			jule::U32 _47114_cdigit;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_4717_c = ___jule_assign_arg;
				_47114_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _4723_u = (_4556_upper / 10LLU);;
			if ((_4703_l > _4723_u)) {
				goto _iter_end_1bb94e673;
			};
			if (((_4703_l == (jule::U32)(_4717_c + 1LLU)) && (_4717_c < _4723_u))) {
				(_4717_c)++;
				_47114_cdigit=0LLU;
				_45536_cup=false;
			};
			(_4606_trimmed)++;
			_45522_c0=(_45522_c0 && (_4636_cNextDigit == 0LL));
			_4636_cNextDigit=static_cast<jule::I32>(_47114_cdigit);
			({
				jule::U32 ___jule_assign_arg = _4703_l;
				jule::U32 _1___jule_assign_arg = _4717_c;
				jule::U32 _2___jule_assign_arg = _4723_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4556_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1bb94e673:;
	}
	_iter_end_1bb94e673:;;
	if ((_4606_trimmed > 0LL)) {
		_45536_cup=(((_4636_cNextDigit > 5LL) || ((_4636_cNextDigit == 5LL) && (!(_45522_c0)))) || (((_4636_cNextDigit == 5LL) && _45522_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4556_upper) && _45536_cup)) {
		(_45458_central)++;
	};
	_45551_endindex-=_4606_trimmed;
	jule::U32 _5096_v = _45458_central;;
	jule::I32 _5106_n = _45551_endindex;;
	while ((_5106_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _5123_v1;
			jule::U32 _5127_v2;
			({
				jule::U32 ___jule_assign_arg = (_5096_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_5096_v % 100LL);
				_5123_v1 = ___jule_assign_arg;
				_5127_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_5106_n]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)((jule::U32)(2LL * _5127_v2) + 1LLU)));
			(*(_45421_d))._field_d[(_5106_n - 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)(2LL * _5127_v2)));
			_5106_n-=2LL;
			_5096_v=_5123_v1;
		}
	_iter_next_1bb95525b:;
	}
	_iter_end_1bb95525b:;;
	if ((_5106_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_5106_n]=static_cast<jule::U8>((jule::U32)(_5096_v + '0'));
	};
	(*(_45421_d))._field_nd=(_45551_endindex + 1LL);
	(*(_45421_d))._field_dp=((*(_45421_d))._field_nd + _4606_trimmed);
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1a6e62e65_mult64bitPow10(jule::U32 _53419_m, jule::I32 _53431_e2, jule::I32 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (jule::U32)(_53419_m << 6LLU);
		__jule_func_result.__jule_result_arg1 = (_53431_e2 - 6LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str::lit("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:3"));;
	};
	jule::U64 _5436_pow = _1a6e598a7_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_5436_pow+=1LLU;
	};
	jule::U64 _5482_hi;
	jule::U64 _5486_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a68840d4_Mul64(static_cast<jule::U64>(_53419_m), _5436_pow);
		_5482_hi = __jule_assign_result.__jule_result_arg0;
		_5486_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1a6e61837_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(((jule::U64)(_5482_hi << 7LLU) | (_5486_lo >> 57LLU)));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((jule::U64)(_5486_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1a6e63394_mult128bitPow10(jule::U64 _56220_m, jule::I32 _56232_e2, jule::I32 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (jule::U64)(_56220_m << 8LLU);
		__jule_func_result.__jule_result_arg1 = (_56232_e2 - 8LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str::lit("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:3"));;
	};
	jule::Array<jule::U64,2> _5716_pow = _1a6e598a7_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_5716_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1a6e61837_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _5792_l1;
	jule::U64 _5796_l0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a68840d4_Mul64(_56220_m, _5716_pow[0LL]);
		_5792_l1 = __jule_assign_result.__jule_result_arg0;
		_5796_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5806_h1;
	jule::U64 _58010_h0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a68840d4_Mul64(_56220_m, _5716_pow[1LL]);
		_5806_h1 = __jule_assign_result.__jule_result_arg0;
		_58010_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5812_mid;
	jule::U64 _5817_carry;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a68827ca_Add64(_5792_l1, _58010_h0, 0LLU);
		_5812_mid = __jule_assign_result.__jule_result_arg0;
		_5817_carry = __jule_assign_result.__jule_result_arg1;
	});
	_5806_h1+=_5817_carry;
	__jule_func_result.__jule_result_arg0 = ((jule::U64)(_5806_h1 << 9LLU) | (_5812_mid >> 55LLU));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((jule::U64)(_5812_mid << 9LLU) == 0LLU) && (_5796_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1a6e63718_divisibleByPow5(jule::U64 _58624_m, jule::I32 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I32 _5906_i = 0LL;;
	for (; (_5906_i < _58632_k); (_5906_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m=(_58624_m / 5LLU);
		}
	_iter_next_1bb9603dc:;
	}
	_iter_end_1bb9603dc:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1a6e639d2_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_60214_x / 1000000000LL));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>((_60214_x % 1000000000LL));
		return __jule_func_result;;
	};
}



inline void _1a6e66919_trim(_1a6e650bb_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_1bb96759d:;
	}
	_iter_end_1bb96759d:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _1a6e66c05_rightShift(_1a6e650bb_decimal* _28420_a, jule::U32 _28432_k) {
	jule::I32 _2856_r = 0LL;;
	jule::I32 _2866_w = 0LL;;
	jule::U32 _2896_n = static_cast<jule::U32>(0LLU);;
	for (; (_1ac23d108_shiftRight(_2896_n, _28432_k) == 0LLU); (_2856_r)++) {
		{
			if ((_2856_r >= (*(_28420_a))._field_nd)) {
				if ((_2896_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while ((_1ac23d108_shiftRight(_2896_n, _28432_k) == 0LLU)) {
					{
						_2896_n=(jule::U32)(_2896_n * 10LLU);
						(_2856_r)++;
					}
				_iter_next_1bb96a7b0:;
				}
				_iter_end_1bb96a7b0:;;
				goto _iter_end_1bb9691e8;
			};
			jule::U32 _3033_c = static_cast<jule::U32>((*(_28420_a))._field_d[_2856_r]);;
			_2896_n=(jule::U32)((jule::U32)((jule::U32)(_2896_n * 10LLU) + _3033_c) - '0');
		}
	_iter_next_1bb9691e8:;
	}
	_iter_end_1bb9691e8:;;
	(*(_28420_a))._field_dp-=(_2856_r - 1LL);
	jule::U32 _3082_mask = (jule::U32)(static_cast<jule::U32>(_1ac23e11a_shiftLeft(1LL, _28432_k)) - 1LLU);;
	for (; (_2856_r < (*(_28420_a))._field_nd); (_2856_r)++) {
		{
			jule::U32 _3123_c = static_cast<jule::U32>((*(_28420_a))._field_d[_2856_r]);;
			jule::U32 _3133_dig = _1ac23d108_shiftRight(_2896_n, _28432_k);;
			_2896_n&=_3082_mask;
			(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((jule::U32)(_3133_dig + '0'));
			(_2866_w)++;
			_2896_n=(jule::U32)((jule::U32)((jule::U32)(_2896_n * 10LLU) + _3123_c) - '0');
		}
	_iter_next_1bb96a0ea:;
	}
	_iter_end_1bb96a0ea:;;
	while ((_2896_n > 0LLU)) {
		{
			jule::U32 _3223_dig = _1ac23d108_shiftRight(_2896_n, _28432_k);;
			_2896_n&=_3082_mask;
			if ((_2866_w < 800LL)) {
				(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((jule::U32)(_3223_dig + '0'));
				(_2866_w)++;
			} else if ((_3223_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_2896_n=(jule::U32)(_2896_n * 10LLU);
		}
	_iter_next_1bb96e1cb:;
	}
	_iter_end_1bb96e1cb:;;
	(*(_28420_a))._field_nd=_2866_w;
	_1a6e66919_trim(_28420_a);
}



inline jule::Bool _1a6e671ab_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I32 _33835_end, jule::Str* _33846_s) {
	jule::I32 _3396_i = 0LL;;
	for (; (_3396_i < (*(_33846_s)).len()); (_3396_i)++) {
		{
			if ((_3396_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_3396_i] != (*(_33846_s))[_3396_i])) {
				return (_33821_b[_3396_i] < (*(_33846_s))[_3396_i]);;
			};
		}
	_iter_next_1bb971e9d:;
	}
	_iter_end_1bb971e9d:;;
	return false;;
}



inline void _1a6e67464_leftShift(_1a6e650bb_decimal* _35219_a, jule::U32 _35231_k) {
	jule::I32 _3536_delta = _1a6e649d3_leftCheats[static_cast<jule::I32>(_35231_k)]._field_delta;;
	if (_1a6e671ab_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &((*((&(_1a6e649d3_leftCheats[static_cast<jule::I32>(_35231_k)]._field_cutoff))))))) {
		(_3536_delta)--;
	};
	jule::I32 _3586_r = (*(_35219_a))._field_nd;;
	jule::I32 _3596_w = ((*(_35219_a))._field_nd + _3536_delta);;
	jule::U32 _3626_n = static_cast<jule::U32>(0LLU);;
	(_3586_r)--;
	for (; (_3586_r >= 0LL); (_3586_r)--) {
		{
			_3626_n+=_1bb97618e_shiftLeft((jule::U32)(static_cast<jule::U32>((*(_35219_a))._field_d[_3586_r]) - '0'), _35231_k);
			jule::U32 _3663_quo = (_3626_n / 10LLU);;
			jule::U32 _3673_rem = (jule::U32)(_3626_n - (jule::U32)(10LLU * _3663_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((jule::U32)(_3673_rem + '0'));
			} else if ((_3673_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3663_quo;
		}
	_iter_next_1bb9751d2:;
	}
	_iter_end_1bb9751d2:;;
	while ((_3626_n > 0LLU)) {
		{
			jule::U32 _3793_quo = (_3626_n / 10LLU);;
			jule::U32 _3803_rem = (jule::U32)(_3626_n - (jule::U32)(10LLU * _3793_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((jule::U32)(_3803_rem + '0'));
			} else if ((_3803_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3793_quo;
		}
	_iter_next_1bb978bdb:;
	}
	_iter_end_1bb978bdb:;;
	(*(_35219_a))._field_nd+=_3536_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_3536_delta;
	_1a6e66919_trim(_35219_a);
}



inline jule::Bool _1a6e677d8_shouldRoundUp(_1a6e650bb_decimal* _39919_a, jule::I32 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && (((jule::U8)((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _1a6e6906a_FmtUint(jule::U64 _6112_i, jule::I32 _6120_base) {
	if (((_6112_i < 100LLU) && (_6120_base == 10LL))) {
		return _1a6e69a3d_small(static_cast<jule::I32>(_6112_i));;
	};
	jule::Str _655_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1a6e6a368_fmtBits(nullptr, _6112_i, _6120_base, false, false);
		_655_s = __jule_assign_result.__jule_result_arg1;
	});
	return _655_s;;
}



inline jule::Str _1a6e69433_FmtInt(jule::I64 _7211_i, jule::I32 _7219_base) {
	if ((((0LL <= _7211_i) && (_7211_i < 100LL)) && (_7219_base == 10LL))) {
		return _1a6e69a3d_small(static_cast<jule::I32>(_7211_i));;
	};
	jule::Str _765_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1a6e6a368_fmtBits(nullptr, static_cast<jule::U64>(_7211_i), _7219_base, (_7211_i < 0LL), false);
		_765_s = __jule_assign_result.__jule_result_arg1;
	});
	return _765_s;;
}



inline jule::Str _1a6e696ec_Itoa(jule::I32 _819_i) {
	return _1a6e69433_FmtInt(static_cast<jule::I64>(_819_i), 10LL);;
}



inline jule::Str _1a6e69a3d_small(jule::I32 _8610_i) {
	if ((_8610_i < 10LL)) {
		return jule::Str::from_byte(static_cast<jule::U8>(('0' + _8610_i)));;
	};
	jule::Slice<jule::U8> _906_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(3LL, 3LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_906_buf[0LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, (_8610_i << 1LL));
	_906_buf[1LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, ((_8610_i << 1LL) + 1LL));
	return _1ed560e89_StrFromBytes(_906_buf.slice(0LL, 2LL));;
}



inline jule::Bool _1a6e69cc4_isPowerOfTwo(jule::I32 _9617_x) {
	return ((_9617_x & (_9617_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _1a6e6a368_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I32 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10541_base < 2LL) || (_10541_base > 36LL))) {
		jule::panic(jule::Str::lit("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:107:3"));;
	};
	jule::Slice<jule::U8> _1116_a = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(65LL, 65LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _1126_i = _1116_a.len();;
	if (_10552_neg) {
		_10533_u=(-(_10533_u));
	};
	{
		
		if ((_10541_base == 10LL)) {
			_case_begin_1bbb227be:;
			{
				;
				jule::U32 _1547_us = static_cast<jule::U32>(_10533_u);;
				while ((_1547_us >= 100LLU)) {
					{
						jule::U32 _1564_is = _1bb97618e_shiftLeft((_1547_us % 100LL), 1LLU);;
						_1547_us=(_1547_us / 100LLU);
						_1126_i-=2LL;
						_1116_a[(_1126_i + 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)(_1564_is + 1LLU)));
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>(_1564_is));
					}
				_iter_next_1bbb2435e:;
				}
				_iter_end_1bbb2435e:;;
				jule::U32 _1643_is = _1bb97618e_shiftLeft(_1547_us, 1LLU);;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)(_1643_is + 1LLU)));
				if ((_1547_us >= 10LLU)) {
					(_1126_i)--;
					_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>(_1643_is));
				};
			}
		}
		else if (_1a6e69cc4_isPowerOfTwo(_10541_base)) {
			_case_begin_1bbb22e84:;
			{
				jule::U32 _1793_shift = (static_cast<jule::U32>(_1a687a0ec_TrailingZeros(static_cast<jule::U32>(_10541_base))) & 7LLU);;
				jule::U64 _1803_b = static_cast<jule::U64>(_10541_base);;
				jule::U32 _1813_m = (jule::U32)(static_cast<jule::U32>(_10541_base) - 1LLU);;
				while ((_10533_u >= _1803_b)) {
					{
						(_1126_i)--;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>((static_cast<jule::U32>(_10533_u) & _1813_m)));
						_10533_u = _1ac275481_shiftRight(_10533_u, _1793_shift);
					}
				_iter_next_1bbb2c0ae:;
				}
				_iter_end_1bbb2c0ae:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>(static_cast<jule::U32>(_10533_u)));
			}
		}
		else {
			_case_begin_1bbb21867:;
			{
				jule::U64 _1923_b = static_cast<jule::U64>(_10541_base);;
				while ((_10533_u >= _1923_b)) {
					{
						(_1126_i)--;
						jule::U64 _1984_q = jule::div(_10533_u,_1923_b);;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>(static_cast<jule::U32>((jule::U64)(_10533_u - (jule::U64)(_1984_q * _1923_b)))));
						_10533_u=_1984_q;
					}
				_iter_next_1bbb2259e:;
				}
				_iter_end_1bbb2259e:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>(static_cast<jule::U32>(_10533_u)));
			}
		}
		_match_end_1bbb21b42:;
	};
	if (_10552_neg) {
		(_1126_i)--;
		_1116_a[_1126_i]='-';
	};
	if (_10563_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10516_dst,_1116_a.slice(_1126_i));
		return __jule_func_result;;
	};
	jule::I32 _2172_n = jule::copy(_1116_a, _1116_a.slice(_1126_i));;
	__jule_func_result.__jule_result_arg1=_1ed560e89_StrFromBytes(_1116_a.slice(0LL, _2172_n));
	return __jule_func_result;;
}



inline jule::Str _1a6e6b765_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1ab732664:;
			{
				return _1a6e6ac81_SysInt;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1ab7326ec:;
			{
				return _1a6e6b039_SysUint;;
			}
		}
		else {
			_case_begin_1ab7320c0:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1ab73219c:;
	};
}



inline jule::I32 _1a6e6ba2e_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str::lit("i8", 2) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1ab733346:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3) || _match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1ab733566:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3) || _match_expr == jule::Str::lit("u32", 3) || _match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1ab7335cc:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3) || _match_expr == jule::Str::lit("u64", 3) || _match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1ab7333ac:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("int", 3) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1ab733423:;
			{
				return _1a6e6a984_BitSize;;
			}
		}
		else {
			_case_begin_1ab7331ae:;
			{
				return -1LL;;
			}
		}
		_match_end_1ab73328b:;
	};
}



inline jule::Str _1a6e6bd70_IntFromBits(jule::I32 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1ab7359db:;
			{
				return jule::Str::lit("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1ab735a52:;
			{
				return jule::Str::lit("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1ab735ab8:;
			{
				return jule::Str::lit("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1ab7355ac:;
			{
				return jule::Str::lit("i64", 3);;
			}
		}
		else {
			_case_begin_1ab7314ba:;
			{
				return jule::Str();;
			}
		}
		_match_end_1ab7315db:;
	};
}



inline jule::Str _1a6e6c106_UintFromBits(jule::I32 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1ab736eb5:;
			{
				return jule::Str::lit("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1ab7364ae:;
			{
				return jule::Str::lit("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1ab736525:;
			{
				return jule::Str::lit("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1ab736c0c:;
			{
				return jule::Str::lit("u64", 3);;
			}
		}
		else {
			_case_begin_1ab736778:;
			{
				return jule::Str();;
			}
		}
		_match_end_1ab736415:;
	};
}



inline jule::Str _1a6e6c3c0_FloatFromBits(jule::I32 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1ab7381d6:;
			{
				return jule::Str::lit("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1ab7370d6:;
			{
				return jule::Str::lit("f64", 3);;
			}
		}
		else {
			_case_begin_1ab7379ee:;
			{
				return jule::Str();;
			}
		}
		_match_end_1ab73703c:;
	};
}



inline jule::Bool _1a6e6cec5_CheckBitFloat(jule::Str _15118_val, jule::I32 _15128_bit) {
	({
		auto except = _1a6e5e69d_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I32 _1a6e6d28e_BitsizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1ab73cd12:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1ab73c77e:;
			{
				return 64LLU;;
			}
		}
		_match_end_1ab73c00e:;
	};
}



inline jule::I32 _1a6e6d558_BitsizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1ab73da49:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1ab73d64d:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1ab73d6b4:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1ab73ce77:;
			{
				return 64LLU;;
			}
		}
		_match_end_1ab73d3b7:;
	};
}



inline jule::I32 _1a6e6d822_BitsizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1ab7405a6:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1ab740199:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1ab740210:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1ab73eb5a:;
			{
				return 64LLU;;
			}
		}
		_match_end_1ab73eaa0:;
	};
}



inline void _1a6e6d9ba_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _1adc47d64_Arch };
			
			if (_match_expr == jule::Str::lit("arm64", 5) || _match_expr == jule::Str::lit("amd64", 5)) {
				_case_begin_1ab74085e:;
				{
					_1a6e6a984_BitSize=64LLU;
					_1a6e6ac81_SysInt=jule::Str::lit("i64", 3);
					_1a6e6b039_SysUint=jule::Str::lit("u64", 3);
				}
			}
			else if (_match_expr == jule::Str::lit("i386", 4)) {
				_case_begin_1ab7409d5:;
				{
					_1a6e6a984_BitSize=32LLU;
					_1a6e6ac81_SysInt=jule::Str::lit("i32", 3);
					_1a6e6b039_SysUint=jule::Str::lit("u32", 3);
				}
			}
			_match_end_1ab74093b:;
		};
	};
}



inline void _1a6e6db41_init(void) {
	_1a6e6d9ba_UpdateTarget();
}



inline jule::I64 _1a6e72705_MinI(jule::Str _6113_k) {
	_6113_k=_1a6e6b765_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1ab74371e:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1ab743785:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1ab7437eb:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1ab743862:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1ab740a4b:;
			{
				return 0LL;;
			}
		}
		_match_end_1ab741255:;
	};
}



inline jule::I64 _1a6e72a13_MaxI(jule::Str _7913_k) {
	_7913_k=_1a6e6b765_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1ab744cb4:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1ab744d2a:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1ab744d91:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1ab744e07:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1ab744b60:;
			{
				return 0LL;;
			}
		}
		_match_end_1ab744b0a:;
	};
}



inline jule::U64 _1a6e72ccc_MaxU(jule::Str _9713_k) {
	_9713_k=_1a6e6b765_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1ab7463ae:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1ab746425:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1ab74648b:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1ab746502:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1ab74625a:;
			{
				return 0LLU;;
			}
		}
		_match_end_1ab746205:;
	};
}



inline jule::F64 _1a6e7311d_Min(jule::Str _11512_k) {
	_11512_k=_1a6e6b765_RealKindOf(_11512_k);
	jule::I64 _1172_i = _1a6e72705_MinI(_11512_k);;
	if ((_1172_i != 0LL)) {
		return static_cast<jule::F64>(_1172_i);;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1ab748a32:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1ab7485e2:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1ab748218:;
			{
				return 0LL;;
			}
		}
		_match_end_1ab747de9:;
	};
}



inline jule::F64 _1a6e733a4_Max(jule::Str _13312_k) {
	_13312_k=_1a6e6b765_RealKindOf(_13312_k);
	jule::I64 _1352_i = _1a6e72a13_MaxI(_13312_k);;
	if ((_1352_i != 0LL)) {
		return static_cast<jule::F64>(_1352_i);;
	};
	jule::U64 _1392_u = _1a6e72ccc_MaxU(_13312_k);;
	if ((_1392_u != 0LLU)) {
		return static_cast<jule::F64>(_1392_u);;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1ab74ad42:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1ab74a902:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1ab74a528:;
			{
				return 0LL;;
			}
		}
		_match_end_1ab74a1d7:;
	};
}



inline jule::Bool _1a6e7385a_IsI16Greater(jule::Str _621_k) {
	return _621_k.equal("i8", 2);;
}



inline jule::Bool _1a6e73b68_IsI32Greater(jule::Str _1121_k) {
	return (_1121_k.equal("i8", 2) || _1121_k.equal("i16", 3));;
}



inline jule::Bool _1a6e73e32_IsI64Greater(jule::Str _1621_k) {
	return ((_1621_k.equal("i8", 2) || _1621_k.equal("i16", 3)) || _1621_k.equal("i32", 3));;
}



inline jule::Bool _1a6e74273_IsU16Greater(jule::Str _2321_k) {
	return _2321_k.equal("u8", 2);;
}



inline jule::Bool _1a6e74509_IsU32Greater(jule::Str _2821_k) {
	return (_2821_k.equal("u8", 2) || _2821_k.equal("u16", 3));;
}



inline jule::Bool _1a6e747c3_IsU64Greater(jule::Str _3421_k) {
	return ((_3421_k.equal("u8", 2) || _3421_k.equal("u16", 3)) || _3421_k.equal("u32", 3));;
}



inline jule::Bool _1a6e74a8c_IsF32Greater(jule::Str _4117_k) {
	return (!_4117_k.equal("f64", 3));;
}



inline jule::Bool _1a6e74e66_IsF64Greater(jule::Str _4617_k) {
	return true;;
}



inline jule::Bool _1a6e75263_IsGreater(jule::Str _5118_k1, jule::Str _5127_k2) {
	{
		auto &_match_expr{ _5118_k1 };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1ab74e53d:;
			{
				return _1a6e763c9_IsSigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1ab74e5a4:;
			{
				return _1a6e766d7_IsUnsigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1ab74e61a:;
			{
				return _1a6e766d7_IsUnsigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1ab74e692:;
			{
				return _1a6e7385a_IsI16Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1ab74e917:;
			{
				return _1a6e73b68_IsI32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1ab74e98e:;
			{
				return _1a6e73e32_IsI64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1ab74ea16:;
			{
				return _1a6e74273_IsU16Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1ab74ea8d:;
			{
				return _1a6e74509_IsU32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1ab74eb9d:;
			{
				return _1a6e747c3_IsU64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1ab74ec14:;
			{
				return _1a6e74a8c_IsF32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1ab74ec7a:;
			{
				return _1a6e74e66_IsF64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1ab74ece1:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ab74e2da:;
			{
				return false;;
			}
		}
		_match_end_1ab74ccde:;
	};
}



inline jule::Bool _1a6e763c9_IsSigInt(jule::Str _2717_k) {
	return ((((_2717_k.equal("i8", 2) || _2717_k.equal("i16", 3)) || _2717_k.equal("i32", 3)) || _2717_k.equal("i64", 3)) || _2717_k.equal("int", 3));;
}



inline jule::Bool _1a6e766d7_IsUnsigInt(jule::Str _3619_k) {
	return (((((_3619_k.equal("u8", 2) || _3619_k.equal("u16", 3)) || _3619_k.equal("u32", 3)) || _3619_k.equal("u64", 3)) || _3619_k.equal("uint", 4)) || _3619_k.equal("uintptr", 7));;
}



inline jule::Bool _1a6e769a1_IsInt(jule::Str _4610_k) {
	return (_1a6e763c9_IsSigInt(_4610_k) || _1a6e766d7_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1a6e76ce2_IsFloat(jule::Str _5112_k) {
	return (_5112_k.equal("f32", 3) || _5112_k.equal("f64", 3));;
}



inline jule::Bool _1a6e77078_IsNum(jule::Str _5610_k) {
	return (_1a6e769a1_IsInt(_5610_k) || _1a6e76ce2_IsFloat(_5610_k));;
}



inline jule::Bool _1a6e77342_IsSigNum(jule::Str _6113_k) {
	return (_1a6e763c9_IsSigInt(_6113_k) || _1a6e76ce2_IsFloat(_6113_k));;
}



inline void _1a6e8159e_lshiftUnsig(_1a6e77584_Const* _59021_c, _1a6e77584_Const* _59032_x) {
	jule::U64 _5912_l = _1a6e79ee3_AsU64(_59021_c);;
	jule::U64 _5922_r = _1a6e79ee3_AsU64(_59032_x);;
	_1a6e7a7da_SetU64(_59021_c, _1ac27cd7e_shiftLeft(_5912_l, _5922_r));
}



inline void _1a6e818ce_rshiftUnsig(_1a6e77584_Const* _59621_c, _1a6e77584_Const* _59632_x) {
	jule::U64 _5972_l = _1a6e79ee3_AsU64(_59621_c);;
	jule::U64 _5982_r = _1a6e79ee3_AsU64(_59632_x);;
	_1a6e7a7da_SetU64(_59621_c, _1ac25e190_shiftRight(_5972_l, _5982_r));
}



inline jule::Bool _1aa2d5911_IsUnaryOp(jule::U32 _33414_id) {
	{
		auto expr = &(_1aa236587_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab80975d:;
		if (it != expr_end) {
			jule::U32 *_3359_op = it;
			{
				if ((_33414_id == (*(_3359_op)))) {
					return true;;
				};
			}
			_iter_next_1ab80975d:;
			++it;
			goto _iter_begin_1ab80975d;
		}
		_iter_end_1ab80975d:;
	};
	return false;;
}



inline jule::Bool _1aa2d5c1e_IsBinOp(jule::U32 _34412_id) {
	{
		auto expr = &(_1aa2368b7_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab809c69:;
		if (it != expr_end) {
			jule::U32 *_3459_op = it;
			{
				if ((_34412_id == (*(_3459_op)))) {
					return true;;
				};
			}
			_iter_next_1ab809c69:;
			++it;
			goto _iter_begin_1ab809c69;
		}
		_iter_end_1ab809c69:;
	};
	return false;;
}



inline jule::Bool _1aa2d6329_IsStr(jule::Str _36410_k) {
	return (!(_36410_k).empty() && ((_36410_k[0LL] == '\"') || _1aa2d65b0_IsRawStr(_36410_k)));;
}



inline jule::Bool _1aa2d65b0_IsRawStr(jule::Str _36713_k) {
	return (!(_36713_k).empty() && (_36713_k[0LL] == '`'));;
}



inline jule::Bool _1aa2d6879_IsRune(jule::Str _37111_k) {
	return (!(_37111_k).empty() && (_37111_k[0LL] == '\''));;
}



inline jule::Bool _1aa2d725e_IsFloat(jule::Str _38012_k) {
	if (_1ed4731a9_HasPrefix(_38012_k, jule::Str::lit("0x", 2))) {
		return _1ed4781e2_ContainsAny(_38012_k, jule::Str::lit(".pP", 3));;
	};
	return _1ed4781e2_ContainsAny(_38012_k, jule::Str::lit(".eE", 3));;
}



inline jule::Bool _1aa2d7528_IsNum(jule::Str _38810_k) {
	if ((_38810_k).empty()) {
		return false;;
	};
	jule::U8 _3932_b = _38810_k[0LL];;
	return ((_3932_b == '.') || (('0' <= _3932_b) && (_3932_b <= '9')));;
}



inline jule::Bool _1aa2d7aab_IsIgnoreIdent(jule::Str _40318_ident) {
	return _40318_ident.equal("_", 1);;
}



inline jule::Bool _1aa2d7d75_IsAnonIdent(jule::Str _40616_ident) {
	return _40616_ident.equal("<anonymous>", 11);;
}



inline jule::Bool _1aa2d8408_IsSpace(jule::I32 _41912_r) {
	{
		auto expr = &(_1aa236367_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab81214a:;
		if (it != expr_end) {
			jule::I32 *_4209_cr = it;
			{
				if ((_41912_r == (*(_4209_cr)))) {
					return true;;
				};
			}
			_iter_next_1ab81214a:;
			++it;
			goto _iter_begin_1ab81214a;
		}
		_iter_end_1ab81214a:;
	};
	return false;;
}



inline jule::Bool _1aa2d8903_IsLetter(jule::I32 _42913_r) {
	return _1c6b26697_IsLetter(_42913_r);;
}



inline jule::Bool _1aa2d8d76_IsDecimal(jule::U8 _44914_b) {
	return (('0' <= _44914_b) && (_44914_b <= '9'));;
}



inline jule::Bool _1aa2d9140_IsBinary(jule::U8 _45213_b) {
	return ((_45213_b == '0') || (_45213_b == '1'));;
}



inline jule::Bool _1aa2d9409_IsOctal(jule::U8 _45512_b) {
	return (('0' <= _45512_b) && (_45512_b <= '7'));;
}



inline jule::Bool _1aa2d96c3_IsHex(jule::U8 _45810_b) {
	{
		
		if ((('0' <= _45810_b) && (_45810_b <= '9'))) {
			_case_begin_1ab815bba:;
			{
				return true;;
			}
		}
		else if ((('a' <= _45810_b) && (_45810_b <= 'f'))) {
			_case_begin_1ab815c64:;
			{
				return true;;
			}
		}
		else if ((('A' <= _45810_b) && (_45810_b <= 'F'))) {
			_case_begin_1ab815cdb:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ab815b43:;
			{
				return false;;
			}
		}
		_match_end_1ab815989:;
	};
}



inline jule::Bool _1aa2d998c_IsAssign(jule::U32 _47313_id) {
	return ((((((((_47313_id == static_cast<jule::U32>(1LLU)) || (_47313_id == static_cast<jule::U32>(27LLU))) || (_47313_id == static_cast<jule::U32>(30LLU))) || (_47313_id == static_cast<jule::U32>(32LLU))) || (_47313_id == static_cast<jule::U32>(24LLU))) || (_47313_id == static_cast<jule::U32>(74LLU))) || (_47313_id == static_cast<jule::U32>(62LLU))) || (_47313_id == static_cast<jule::U32>(65LLU)));;
}



inline jule::Bool _1aa2d9c56_IsPostfixOp(jule::U32 _48516_id) {
	{
		auto expr = &(_1aa2ce6a7_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8172e8:;
		if (it != expr_end) {
			jule::U32 *_4869_op = it;
			{
				if ((_48516_id == (*(_4869_op)))) {
					return true;;
				};
			}
			_iter_next_1ab8172e8:;
			++it;
			goto _iter_begin_1ab8172e8;
		}
		_iter_end_1ab8172e8:;
	};
	return false;;
}



inline jule::Bool _1aa2da020_IsAssignOp(jule::U32 _49515_id) {
	if (_1aa2d9c56_IsPostfixOp(_49515_id)) {
		return true;;
	};
	{
		auto expr = &(_1aa2ce993_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8197c3:;
		if (it != expr_end) {
			jule::U32 *_4999_op = it;
			{
				if ((_49515_id == (*(_4999_op)))) {
					return true;;
				};
			}
			_iter_next_1ab8197c3:;
			++it;
			goto _iter_begin_1ab8197c3;
		}
		_iter_end_1ab8197c3:;
	};
	return false;;
}



inline jule::Ptr<_1aa2da95a_File> _1aa2dbd35_NewFileSet(jule::Str _5715_path) {
	return jule::new_ptr<_1aa2da95a_File>(_1aa2da95a_File{._field_Path=_5715_path, ._field_Data=jule::Slice<jule::U8>(nullptr), ._field_Tokens=jule::Slice<jule::Ptr<_1aa2d51c4_Token>>(nullptr)});;
}



inline _1ada72b17_Log _1aa2dd85e_makeErr(jule::I32 _10012_row, jule::I32 _10022_col, jule::Ptr<_1aa2da95a_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args) {
	return _1ada72b17_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_10012_row, ._field_Column=_10022_col, ._field_Path=(*((*(_10033_f))))._field_Path, ._field_Text=_1ada73079_Logf(_10043_fmt, _10056_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Bool _1aa2ddc27_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix) {
	if (((*(_11020_bytes)).len() < _11035_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11035_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbc5e19c:;
		if (it != expr_end) {
			jule::I32 _1146_i = it - expr->begin();
			{
				if (((*(_11020_bytes))[_1146_i] != _11035_prefix[_1146_i])) {
					return false;;
				};
			}
			_iter_next_1bbc5e19c:;
			++it;
			_1146_i++;
			goto _iter_begin_1bbc5e19c;
		}
		_iter_end_1bbc5e19c:;
	};
	return true;;
}



inline jule::Str _1aa2de09b_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I32 _12232_i) {
	jule::Str __jule_func_result;
	(_12232_i)++;
	if ((_12232_i >= (*(_12215_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _1286_b = (*(_12215_txt))[_12232_i];;
	if ((_1286_b == '_')) {
		return __jule_func_result;;
	};
	if (((_1286_b == '+') || (_1286_b == '-'))) {
		(_12232_i)++;
		if ((_12232_i >= (*(_12215_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12215_txt))[_12232_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I32 _1422_first = _12232_i;;
	for (; (_12232_i < (*(_12215_txt)).len()); (_12232_i)++) {
		{
			_1286_b=(*(_12215_txt))[_12232_i];
			if (((_1286_b != '_') && (!(_1aa2d8d76_IsDecimal(_1286_b))))) {
				goto _iter_end_1bbc61677;
			};
		}
	_iter_next_1bbc61677:;
	}
	_iter_end_1bbc61677:;;
	if ((_12232_i == _1422_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_12215_txt)).slice(0LL, _12232_i));
	return __jule_func_result;;
}



inline jule::Str _1aa2de464_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I32 _15628_i) {
	return _1aa2de09b_floatFmtE(_15615_txt, _15628_i);;
}



inline jule::Str _1aa2de7d8_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I32 _16036_i) {
	if (((*(_16019_txt))[_16036_i] != '.')) {
		return jule::Str();;
	};
	(_16036_i)++;
	_julec_label_1bbc63da5:;
	for (; (_16036_i < (*(_16019_txt)).len()); (_16036_i)++) {
		{
			jule::U8 _1683_b = (*(_16019_txt))[_16036_i];;
			{
				
				if ((_1683_b == '_') || _1aa2d8d76_IsDecimal(_1683_b)) {
					_case_begin_1bbc64e0b:;
					{
						goto _iter_next_1bbc6445a;
					}
				}
				else if (_1aa2e1169_isFloatFmtP(_1683_b, _16036_i)) {
					_case_begin_1bbc64ea5:;
					{
						return _1aa2de464_floatFmtP(_16019_txt, _16036_i);;
					}
				}
				else {
					_case_begin_1bbc64d84:;
					{
						goto _iter_end_1bbc6445a;
					}
				}
				_match_end_1bbc64d1d:;
			};
		}
	_iter_next_1bbc6445a:;
	}
	_iter_end_1bbc6445a:;;
	return jule::Str();;
}



inline jule::Str _1aa2deb5c_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I32 _18136_i) {
	_18136_i+=2LL;
	return _1aa2de09b_floatFmtE(_18119_txt, _18136_i);;
}



inline jule::Str _1aa2deed1_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I32 _18635_i) {
	(_18635_i)++;
	return _1aa2de09b_floatFmtE(_18618_txt, _18635_i);;
}



inline jule::Str _1aa2e0465_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I32 _19131_i) {
	jule::Str __jule_func_result;
	(_19131_i)++;
	if ((_19131_i >= (*(_19114_txt)).len())) {
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)));
		return __jule_func_result;;
	};
	if (((*(_19114_txt))[_19131_i] == '_')) {
		(_19131_i)--;
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
		return __jule_func_result;;
	};
	for (; (_19131_i < (*(_19114_txt)).len()); (_19131_i)++) {
		{
			jule::U8 _2013_b = (*(_19114_txt))[_19131_i];;
			if (((_19131_i > 1LL) && ((_2013_b == 'e') || (_2013_b == 'E')))) {
				__jule_func_result = _1aa2de09b_floatFmtE(_19114_txt, _19131_i);
				return __jule_func_result;;
			};
			if (((_2013_b != '_') && (!(_1aa2d8d76_IsDecimal(_2013_b))))) {
				goto _iter_end_1bbc67c11;
			};
		}
	_iter_next_1bbc67c11:;
	}
	_iter_end_1bbc67c11:;;
	if ((_19131_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
	return __jule_func_result;;
}



inline jule::Str _1aa2e06a7_commonNum(jule::Slice<jule::U8>* _21615_txt) {
	jule::Str __jule_func_result;
	jule::I32 _2176_i = 0LL;;
	_julec_label_1bbc6995a:;
	for (; (_2176_i < (*(_21615_txt)).len()); (_2176_i)++) {
		{
			jule::U8 _2203_b = (*(_21615_txt))[_2176_i];;
			{
				
				if ((_2203_b == '.')) {
					_case_begin_1bbc6ad02:;
					{
						__jule_func_result = _1aa2e0465_floatNum(_21615_txt, _2176_i);
						return __jule_func_result;;
					}
				}
				else if ((_2203_b == '_')) {
					_case_begin_1bbc6ad9b:;
					{
						goto _iter_next_1bbc6a1ec;
					}
				}
				else if (_1aa2e0ce5_isFloatFmtE(_2203_b, _2176_i)) {
					_case_begin_1bbc6ae12:;
					{
						__jule_func_result = _1aa2de09b_floatFmtE(_21615_txt, _2176_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1aa2d8d76_IsDecimal(_2203_b)))) {
					_case_begin_1bbc6ae78:;
					{
						goto _iter_end_1bbc6a1ec;
					}
				}
				_match_end_1bbc6ac25:;
			};
		}
	_iter_next_1bbc6a1ec:;
	}
	_iter_end_1bbc6a1ec:;;
	if ((_2176_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_21615_txt)).slice(0LL, _2176_i));
	return __jule_func_result;;
}



inline jule::Str _1aa2e0971_binaryNum(jule::Slice<jule::U8>* _23915_txt) {
	jule::Str __jule_func_result;
	if ((!(_1aa2ddc27_bytesHasPrefix(_23915_txt, jule::Str::lit("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_23915_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I32 _2486_i = 2LL;;
	for (; (_2486_i < (*(_23915_txt)).len()); (_2486_i)++) {
		{
			if ((((*(_23915_txt))[_2486_i] != '_') && (!(_1aa2d9140_IsBinary((*(_23915_txt))[_2486_i]))))) {
				goto _iter_end_1bbc6dbd4;
			};
		}
	_iter_next_1bbc6dbd4:;
	}
	_iter_end_1bbc6dbd4:;;
	if ((_2486_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_23915_txt)).slice(0LL, _2486_i));
	return __jule_func_result;;
}



inline jule::Bool _1aa2e0ce5_isFloatFmtE(jule::U8 _26116_b, jule::I32 _26125_i) {
	return ((_26125_i > 0LL) && ((_26116_b == 'e') || (_26116_b == 'E')));;
}



inline jule::Bool _1aa2e1169_isFloatFmtP(jule::U8 _26516_b, jule::I32 _26525_i) {
	return ((_26525_i > 0LL) && ((_26516_b == 'p') || (_26516_b == 'P')));;
}



inline jule::Bool _1aa2e14dd_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I32 _26938_i) {
	if (((*(_26921_txt))[_26938_i] != '.')) {
		return false;;
	};
	(_26938_i)++;
	_julec_label_1bbc71ca3:;
	for (; (_26938_i < (*(_26921_txt)).len()); (_26938_i)++) {
		{
			jule::U8 _2763_b = (*(_26921_txt))[_26938_i];;
			{
				
				if ((_2763_b == '_') || _1aa2d8d76_IsDecimal(_2763_b)) {
					_case_begin_1bbc727cb:;
					{
						goto _iter_next_1bbc71c4d;
					}
				}
				else if (_1aa2e1169_isFloatFmtP(_2763_b, _26938_i)) {
					_case_begin_1bbc72875:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1bbc72754:;
					{
						goto _iter_end_1bbc71c4d;
					}
				}
				_match_end_1bbc726dd:;
			};
		}
	_iter_next_1bbc71c4d:;
	}
	_iter_end_1bbc71c4d:;;
	return false;;
}



inline jule::Bool _1aa2e1862_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I32 _29033_i) {
	{
		
		if (((*(_29020_txt)).len() < 3LL)) {
			_case_begin_1bbc73ada:;
			{
				goto _case_begin_1bbc73b84;
			}
		}
		else if (((*(_29020_txt))[_29033_i] != '.')) {
			_case_begin_1bbc73b84:;
			{
				goto _case_begin_1bbc73c0b;
			}
		}
		else if ((((*(_29020_txt))[(_29033_i + 1LL)] != 'p') && ((*(_29020_txt))[(_29033_i + 1LL)] != 'P'))) {
			_case_begin_1bbc73c0b:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1bbc73a52:;
			{
				return true;;
			}
		}
		_match_end_1bbc73975:;
	};
}



inline jule::Bool _1aa2e1bd6_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I32 _30334_i) {
	{
		
		if (((*(_30321_txt)).len() < 4LL)) {
			_case_begin_1bbc7589a:;
			{
				goto _case_begin_1bbc75911;
			}
		}
		else if (((*(_30321_txt))[_30334_i] != '.')) {
			_case_begin_1bbc75911:;
			{
				goto _case_begin_1bbc75977;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 1LL)] != 'f') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'F'))) {
			_case_begin_1bbc75977:;
			{
				goto _case_begin_1bbc759ee;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 2LL)] != 'p') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'P'))) {
			_case_begin_1bbc759ee:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1bbc757ce:;
			{
				return true;;
			}
		}
		_match_end_1bbc7538e:;
	};
}



inline jule::Str _1aa2e21d1_octalNum(jule::Slice<jule::U8>* _31814_txt) {
	jule::Str __jule_func_result;
	if (((*(_31814_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31814_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I32 _3266_octalStart = 1LL;;
	jule::Bool _3286_o = false;;
	if (((*(_31814_txt))[1LL] == 'o')) {
		if (((*(_31814_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_3266_octalStart)++;
		_3286_o=true;
	};
	jule::I32 _3376_i = _3266_octalStart;;
	for (; (_3376_i < (*(_31814_txt)).len()); (_3376_i)++) {
		{
			jule::U8 _3393_b = (*(_31814_txt))[_3376_i];;
			if ((_3393_b == '.')) {
				if (_3286_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1aa2e0465_floatNum(_31814_txt, _3376_i);
				return __jule_func_result;;
			};
			if (_1aa2e0ce5_isFloatFmtE(_3393_b, _3376_i)) {
				__jule_func_result = _1aa2de09b_floatFmtE(_31814_txt, _3376_i);
				return __jule_func_result;;
			};
			if (((_3393_b != '_') && (!(_1aa2d9409_IsOctal(_3393_b))))) {
				goto _iter_end_1bbc79abe;
			};
		}
	_iter_next_1bbc79abe:;
	}
	_iter_end_1bbc79abe:;;
	if ((_3376_i == _3266_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_31814_txt)).slice(0LL, _3376_i));
	return __jule_func_result;;
}



inline jule::Str _1aa2e23ac_hexNum(jule::Slice<jule::U8>* _36012_txt) {
	jule::Str __jule_func_result;
	if (((*(_36012_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36012_txt))[0LL] != '0') || (((*(_36012_txt))[1LL] != 'x') && ((*(_36012_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I32 _3696_i = 2LL;;
	_julec_label_1bbc7d9b3:;
	for (; (_3696_i < (*(_36012_txt)).len()); (_3696_i)++) {
		{
			jule::U8 _3723_b = (*(_36012_txt))[_3696_i];;
			{
				
				if (_1aa2e1862_isFloatFmtDotp(_36012_txt, _3696_i)) {
					_case_begin_1bbc7e6b7:;
					{
						__jule_func_result = _1aa2deed1_floatFmtDotp(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (_1aa2e1bd6_isFloatFmtDotfp(_36012_txt, _3696_i)) {
					_case_begin_1bbc7e761:;
					{
						__jule_func_result = _1aa2deb5c_floatFmtDotfp(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (_1aa2e1169_isFloatFmtP(_3723_b, _3696_i)) {
					_case_begin_1bbc7e7c7:;
					{
						__jule_func_result = _1aa2de464_floatFmtP(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (_1aa2e14dd_isFloatFmtDotnp(_36012_txt, _3696_i)) {
					_case_begin_1bbc7e83d:;
					{
						__jule_func_result = _1aa2de7d8_floatFmtDotnp(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (((_3723_b != '_') && (!(_1aa2d96c3_IsHex(_3723_b))))) {
					_case_begin_1bbc7e8a4:;
					{
						goto _iter_end_1bbc7db28;
					}
				}
				_match_end_1bbc7e5c9:;
			};
		}
	_iter_next_1bbc7db28:;
	}
	_iter_end_1bbc7db28:;;
	if ((_3696_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_36012_txt)).slice(0LL, _3696_i));
	return __jule_func_result;;
}



inline jule::Str _1aa2e270e_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I32 _39328_n) {
	jule::Str __jule_func_result;
	if (((*(_39315_txt)).len() < _39328_n)) {
		return __jule_func_result;;
	};
	;
	jule::I32 _3996_i = 2LL;;
	for (; (_3996_i < _39328_n); (_3996_i)++) {
		{
			if ((!(_1aa2d96c3_IsHex((*(_39315_txt))[_3996_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1bbc81e39:;
	}
	_iter_end_1bbc81e39:;;
	__jule_func_result=static_cast<jule::Str>((*(_39315_txt)).slice(0LL, _39328_n));
	return __jule_func_result;;
}



inline jule::Str _1aa2e29c8_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt) {
	return _1aa2e270e_hexEscape(_41127_txt, 10LL);;
}



inline jule::Str _1aa2e2c92_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt) {
	return _1aa2e270e_hexEscape(_41630_txt, 6LL);;
}



inline jule::Str _1aa2e305b_hexByteEscape(jule::Slice<jule::U8>* _42119_txt) {
	return _1aa2e270e_hexEscape(_42119_txt, 4LL);;
}



inline jule::Str _1aa2e3325_byteEscape(jule::Slice<jule::U8>* _42616_txt) {
	jule::Str __jule_func_result;
	if (((*(_42616_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1aa2d9409_IsOctal((*(_42616_txt))[1LL]))) || (!(_1aa2d9409_IsOctal((*(_42616_txt))[2LL])))) || (!(_1aa2d9409_IsOctal((*(_42616_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_42616_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_1ada72b17_Log> _1aa2e8319_Lex(jule::Ptr<_1aa2da95a_File> _80612_f, jule::I32 _80622_mode) {
	if ((_80612_f == nullptr)) {
		return nullptr;;
	};
	_1aa2e3a95_lex _8116_lex = _1aa2e3a95_lex{._field_mode=_80622_mode, ._field_tokens=jule::Slice<jule::Ptr<_1aa2d51c4_Token>>(nullptr), ._field_file=_80612_f, ._field_pos=0LL, ._field_column=0, ._field_row=-1LL, ._field_errors=jule::Slice<_1ada72b17_Log>(nullptr)};;
	_1aa2e68de_newLine(&_8116_lex);
	_1aa2e46bc_lex(&_8116_lex);
	if ((_8116_lex._field_errors.len() > 0LL)) {
		return _8116_lex._field_errors;;
	};
	(*(_80612_f))._field_Tokens=_8116_lex._field_tokens;
	return nullptr;;
}



inline jule::Bool _1aa3b764c_FindModuleFile(jule::Slice<jule::Ptr<_1ed37c9a9_DirEntry>>* _1320_dirents) {
	{
		auto expr = _1320_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acbb3ae4:;
		if (it != expr_end) {
			jule::Ptr<_1ed37c9a9_DirEntry> *_149_d = it;
			{
				if (((!(_1ed381d76_IsDir((*((*(_149_d))))._field_Stat.ptr()))) && (*((*(_149_d))))._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1acbb3ae4:;
			++it;
			goto _iter_begin_1acbb3ae4;
		}
		_iter_end_1acbb3ae4:;
	};
	return false;;
}



inline jule::Str _1aa3b7905_FindModuleFileDeep(jule::Str _2527_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_1ed37c9a9_DirEntry>> _277_dirents = ({
				auto except = static__1ed49770b_Read(_2527_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1acbb3594;
				} jule::Slice<jule::Ptr<_1ed37c9a9_DirEntry>>(nullptr);});
			});;
			jule::Bool _313_exist = _1aa3b764c_FindModuleFile(&(_277_dirents));;
			if (_313_exist) {
				return _2527_path;;
			};
			jule::I32 _363_n = _2527_path.len();;
			_2527_path=_1ed49530d_Dir(_2527_path);
			if ((_2527_path.len() == _363_n)) {
				goto _iter_end_1acbb3594;
			};
		}
	_iter_next_1acbb3594:;
	}
	_iter_end_1acbb3594:;;
	return jule::Str();;
}



inline jule::Slice<_1ada72b17_Log> _1aa3b7bbe_CheckModuleFile(jule::Str* _4721_path) {
	jule::Slice<jule::U8> _482_bytes = ({
		auto except = static__1ed38035d_Read(_1ed49461a_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_4721_path)); (*it++) = jule::Str::lit("jule.mod", 8); __jule_collection; })));
		(except.ok()) ? (except.result) : ({{
			return ({ auto __jule_collection = jule::Slice<_1ada72b17_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ada72b17_Log{._field_Kind=static_cast<jule::I32>(0LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=jule::Str::lit("module file could not checked because of a problem", 50), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}; __jule_collection; });;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _542_s = _1ed479ec4_Trim(_1ed560bc0_BytesStr(_482_bytes), jule::Str::lit(" \n\r\t\v", 5));;
	if ((_542_s.len() != 0LL)) {
		return ({ auto __jule_collection = jule::Slice<_1ada72b17_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ada72b17_Log{._field_Kind=static_cast<jule::I32>(0LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=jule::Str::lit("module file has syntax error(s)", 31), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}; __jule_collection; });;
	};
	return nullptr;;
}



inline jule::Bool _1aa3b851b_IsPub(jule::Str _910_ident) {
	if ((_910_ident[0LL] < 128LLU)) {
		jule::U8 _113_b = _910_ident[0LL];;
		return (('A' <= _113_b) && (_113_b <= 'Z'));;
	};
	jule::I32 _142_r;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1ed42e40c_DecodeRuneStr(_910_ident);
		_142_r = __jule_assign_result.__jule_result_arg0;
	});
	return _1ad898de4_IsUpper(_142_r);;
}



inline jule::Bool _1aa416800_IsAscii(jule::I32 _1112_r) {
	;
	return (_1112_r <= 127LL);;
}



inline jule::I32 _1aa43192a_ToRune(jule::Str _2015_lit) {
	jule::I32 _216_r = static_cast<jule::I32>(0LL);;
	(_2015_lit).mut_slice(1LL, (_2015_lit.len() - 1LL));;
	if (((_2015_lit[0LL] == '\\') && (_2015_lit.len() > 1LL))) {
		jule::I32 _247_i = 0LL;;
		_216_r=_1aa432585_runeFromEsqSeq(_2015_lit, &(_247_i));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1ed42e40c_DecodeRuneStr(_2015_lit);
			_216_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _216_r;;
}



inline jule::Str _1aa431b39_ToRawStr(jule::Str _3613_lit) {
	if ((_3613_lit.len() == 2LL)) {
		return jule::Str();;
	};
	return _3613_lit.slice(1LL, (_3613_lit.len() - 1LL));;
}



inline jule::Str _1aa431e7a_ToStr(jule::Str _4714_lit) {
	if ((_4714_lit.len() == 2LL)) {
		return jule::Str();;
	};
	jule::Bool _536_isPure = true;;
	{
		auto expr = &(_4714_lit);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbb40c4e:;
		if (it != expr_end) {
			jule::U8 _549_b = *it;
			{
				if (((_549_b >= 128LLU) || (_549_b == '\\'))) {
					_536_isPure=false;
					goto _iter_end_1bbb40c4e;
				};
			}
			_iter_next_1bbb40c4e:;
			++it;
			goto _iter_begin_1bbb40c4e;
		}
		_iter_end_1bbb40c4e:;
	};
	if (_536_isPure) {
		return _4714_lit.slice(1LL, (_4714_lit.len() - 1LL));;
	};
	(_4714_lit).mut_slice(1LL, (_4714_lit.len() - 1LL));;
	jule::Slice<jule::U8> _686_s = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _4714_lit.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _696_i = 0LL;;
	while ((_696_i < _4714_lit.len())) {
		{
			jule::U8 _713_b = _4714_lit[_696_i];;
			if ((_713_b == '\\')) {
				_1aa43292b_strEsqSeq(&(_686_s), _4714_lit, &(_696_i));
			} else {
				jule::I32 _754_r;
				jule::I32 _757_size;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1ed42e40c_DecodeRuneStr(_4714_lit.slice(_696_i));
					_754_r = __jule_assign_result.__jule_result_arg0;
					_757_size = __jule_assign_result.__jule_result_arg1;
				});
				_696_i+=_757_size;
				_686_s=_1ed4304a7_AppendRune(_686_s, _754_r);
			};
		}
	_iter_next_1bbb42c40:;
	}
	_iter_end_1bbb42c40:;;
	return _1ed560e89_StrFromBytes(_686_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1aa432211_tryBtoaCommonEsq(jule::Str _8321_s) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_8321_s.len() < 2LL) || (_8321_s[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _8321_s[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1bbb4523c:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1bbb45935:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1bbb4599b:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1bbb45a12:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1bbb45a78:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1bbb45b00:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1bbb45b77:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1bbb45bee:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1bbb45c76:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1bbb45ced:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1bbb457ae:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1aa432585_runeFromEsqSeq(jule::Str _11319_s, jule::I32* _11332_i) {
	jule::U8 _1142_b;
	jule::Bool _1145_ok;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1aa432211_tryBtoaCommonEsq(_11319_s.slice((*(_11332_i))));
		_1142_b = __jule_assign_result.__jule_result_arg0;
		_1145_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_11332_i)))++;
	if (_1145_ok) {
		((*(_11332_i)))++;
		return static_cast<jule::I32>(_1142_b);;
	};
	{
		auto &_match_expr{ _11319_s[(*(_11332_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1bbb4a8e6:;
			{
				;
				jule::I32 _1243_r = static_cast<jule::I32>(({
					auto except = _1a6e578c7_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 5LL)), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:124:13"));
					(except.result);
				}));;
				(*(_11332_i))+=5LL;
				return _1243_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1bbb4a709:;
			{
				;
				jule::I32 _1293_r = static_cast<jule::I32>(({
					auto except = _1a6e578c7_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 9LL)), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:129:13"));
					(except.result);
				}));;
				(*(_11332_i))+=9LL;
				return _1293_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1bbb4a121:;
			{
				;
				jule::Str _1343_seq = _11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1a6e578c7_ParseUint(_1343_seq, 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:136:12"));
					(except.result);
				}));;
			}
		}
		else {
			_case_begin_1bbb48e22:;
			{
				;
				jule::Str _1393_seq = _11319_s.slice((*(_11332_i)), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1a6e578c7_ParseUint(_1393_seq.slice(1LL), 8LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:141:12"));
					(except.result);
				}));;
			}
		}
		_match_end_1bbb4952c:;
	};
}



inline void _1aa43292b_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I32* _14545_i) {
	jule::I32 _1462_r = _1aa432585_runeFromEsqSeq(_14532_s, _14545_i);;
	if ((_1462_r <= 255LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = (*(_14519_buf)); __jule_push_dest.push(static_cast<jule::U8>(_1462_r)); };
		return;;
	};
	(*(_14519_buf))=_1ed4304a7_AppendRune((*(_14519_buf)), _1462_r);
}



inline jule::I32 _1aa5d731c_findFormatPrefix(jule::Slice<jule::U8>* _1122_bytes, jule::I32 _1141_i) {
	while ((_1141_i < (*(_1122_bytes)).len())) {
		{
			jule::I32 _133_r;
			jule::I32 _136_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1ed42e0bb_DecodeRune((*(_1122_bytes)).slice(_1141_i));
				_133_r = __jule_assign_result.__jule_result_arg0;
				_136_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_133_r == '{')) {
				return _1141_i;;
			};
			_1141_i+=_136_size;
		}
	_iter_next_1bbb768de:;
	}
	_iter_end_1bbb768de:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1aa5d764c_getFormatRange(jule::I32* _2724_i, jule::Slice<jule::U8>* _2737_bytes) {
	jule::I32 _282_start = (*(_2724_i));;
	jule::I32 _296_braces = 0LL;;
	while (((*(_2724_i)) < (*(_2737_bytes)).len())) {
		{
			jule::I32 _313_r;
			jule::I32 _316_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1ed42e0bb_DecodeRune((*(_2737_bytes)).slice((*(_2724_i))));
				_313_r = __jule_assign_result.__jule_result_arg0;
				_316_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2724_i))+=_316_size;
			{
				auto &_match_expr{ _313_r };
				
				if (_match_expr == '{') {
					_case_begin_1bbb7934d:;
					{
						(_296_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1bbb795b2:;
					{
						(_296_braces)--;
						if ((_296_braces == 0LL)) {
							return (*(_2737_bytes)).slice(_282_start, (*(_2724_i)));;
						};
					}
				}
				_match_end_1bbb79419:;
			};
		}
	_iter_next_1bbb7844b:;
	}
	_iter_end_1bbb7844b:;;
	return nullptr;;
}



inline void _1aa5d7938_FmtByDefault(_1ed486d49_StrBuilder* _4722_buf, jule::Any* _4740_arg) {
	if (((*(_4740_arg)) == nullptr)) {
		_1ed4909ac_WriteStr(_4722_buf, jule::Str::lit("<nil>", 5));
		return;;
	};
	{
		auto &_match_expr{ (*(_4740_arg)) };
		
		if (_match_expr.type == &__jule_any_type139) {
			_case_begin_1bbb7b00e:;
			{
				_1ed4909ac_WriteStr(_4722_buf, _1a6e529d2_FmtFloat(static_cast<jule::F64>((*(_4740_arg)).cast<jule::F32>(&__jule_any_type139)), 'g', -1LL, 32LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1bbb78869:;
			{
				_1ed4909ac_WriteStr(_4722_buf, _1a6e529d2_FmtFloat((*(_4740_arg)).cast<jule::F64>(&__jule_any_type5), 'g', -1LL, 64LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type140) {
			_case_begin_1bbb7ab24:;
			{
				_1ed4909ac_WriteStr(_4722_buf, _1a6e69433_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I8>(&__jule_any_type140)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type141) {
			_case_begin_1bbb7ab8a:;
			{
				_1ed4909ac_WriteStr(_4722_buf, _1a6e69433_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I16>(&__jule_any_type141)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1bbb7ac01:;
			{
				_1ed4909ac_WriteStr(_4722_buf, _1a6e69433_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I32>(&__jule_any_type6)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1bbb7ac67:;
			{
				_1ed4909ac_WriteStr(_4722_buf, _1a6e69433_FmtInt((*(_4740_arg)).cast<jule::I64>(&__jule_any_type1), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type138) {
			_case_begin_1bbb7b32d:;
			{
				_1ed4909ac_WriteStr(_4722_buf, _1a6e6906a_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U8>(&__jule_any_type138)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type142) {
			_case_begin_1bbb7b394:;
			{
				_1ed4909ac_WriteStr(_4722_buf, _1a6e6906a_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U16>(&__jule_any_type142)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type143) {
			_case_begin_1bbb7b40a:;
			{
				_1ed4909ac_WriteStr(_4722_buf, _1a6e6906a_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U32>(&__jule_any_type143)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1bbb7b471:;
			{
				_1ed4909ac_WriteStr(_4722_buf, _1a6e6906a_FmtUint((*(_4740_arg)).cast<jule::U64>(&__jule_any_type2), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1bbb7b4d7:;
			{
				_1ed4909ac_WriteStr(_4722_buf, (*(_4740_arg)).cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1bbb7b54d:;
			{
				if ((*(_4740_arg)).cast<jule::Bool>(&__jule_any_type3)) {
					_1ed4909ac_WriteStr(_4722_buf, jule::Str::lit("true", 4));
				} else {
					_1ed4909ac_WriteStr(_4722_buf, jule::Str::lit("false", 5));
				};
			}
		}
		else {
			_case_begin_1bbb7a56e:;
			{
				_1ed4909ac_WriteStr(_4722_buf, jule::to_str((*(_4740_arg))));
			}
		}
		_match_end_1bbb7a42b:;
	};
}



inline void _1aa5d7d56_applyFmtByDefault(_1ed486d49_StrBuilder* _8627_buf, jule::I32* _8649_j, jule::Slice<jule::Any> _8657_args) {
	jule::Any _872_arg = _8657_args[(*(_8649_j))];;
	((*(_8649_j)))++;
	_1aa5d7938_FmtByDefault(_8627_buf, &(_872_arg));
}



inline void _1aa5d8274_applyFmt(jule::Slice<jule::U8>* _9418_fmt, _1ed486d49_StrBuilder* _9436_buf, jule::I32* _9458_j, jule::Slice<jule::Any> _9466_args) {
	if (((*(_9418_fmt)).len() == 2LL)) {
		_1aa5d7d56_applyFmtByDefault(_9436_buf, _9458_j, _9466_args);
		return;;
	};
	if (((((((*(_9418_fmt)).len() == 4LL) && ((*(_9418_fmt))[0LL] == '{')) && ((*(_9418_fmt))[1LL] == '{')) && ((*(_9418_fmt))[2LL] == '}')) && ((*(_9418_fmt))[3LL] == '}'))) {
		_1ed4909ac_WriteStr(_9436_buf, jule::Str::lit("{}", 2));
		return;;
	};
	_1ed490704_Write(_9436_buf, (*(_9418_fmt)));
}



inline jule::Slice<jule::U8> _1aa5d85e8_Format(jule::Str _11511_fmt, jule::Slice<jule::Any> _11521_args) {
	jule::Slice<jule::U8> _1166_fmtBytes = _1ed560939_StrBytes(_11511_fmt);;
	if ((_11521_args.len() == 0LL)) {
		return _1166_fmtBytes;;
	};
	jule::I32 _1206_i = _1aa5d731c_findFormatPrefix(&(_1166_fmtBytes), 0LL);;
	if ((_1206_i == -1LL)) {
		return _1166_fmtBytes;;
	};
	jule::I32 _1246_j = 0LL;;
	jule::I32 _1256_last = 0LL;;
	_1ed486d49_StrBuilder _1266_buf = static__1ed487146_New(_11511_fmt.len());;
	for (; (_1206_i != -1LL); _1206_i=_1aa5d731c_findFormatPrefix(&(_1166_fmtBytes), _1206_i)) {
		{
			_1ed490704_Write(&_1266_buf, _1166_fmtBytes.slice(_1256_last, _1206_i));
			jule::Slice<jule::U8> _1297_format = _1aa5d764c_getFormatRange(&(_1206_i), &(_1166_fmtBytes));;
			if ((_1297_format == nullptr)) {
				goto _iter_next_1bbb88769;
			};
			_1aa5d8274_applyFmt(&(_1297_format), &(_1266_buf), &(_1246_j), _11521_args);
			if ((_1246_j >= _11521_args.len())) {
				_1ed490704_Write(&_1266_buf, _1166_fmtBytes.slice(_1206_i));
				_1256_last=_1166_fmtBytes.len();
				goto _iter_end_1bbb88769;
			};
			_1256_last=_1206_i;
		}
	_iter_next_1bbb88769:;
	}
	_iter_end_1bbb88769:;;
	if ((_1256_last < _1166_fmtBytes.len())) {
		_1ed490704_Write(&_1266_buf, _1166_fmtBytes.slice(_1256_last));
	};
	return _1ed491c55_Buf(&_1266_buf);;
}



inline jule::Str _1aa5da61c_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args) {
	return _1ed560e89_StrFromBytes(_1aa5d85e8_Format(_3111_fmt, _3121_args));;
}



inline jule::Ptr<_1aa3315b6_Fn> _1a9e88a8c_runtimeFindFn(jule::Ptr<_1aa39b0ae_ImportInfo>* _1123_runtime, jule::Str _1145_ident) {
	;
	jule::Ptr<_1aa3315b6_Fn> _136_f = _1aa39c6ba_FindFn((*(_1123_runtime)).ptr(), _1145_ident, false);;
	if ((_136_f == nullptr)) {
		jule::panic(jule::Str::lit("runtime function is not exist, this is an implementation mistake, this panic call should be unreachable", 103) + jule::Str("\nlocation: std/jule/sema/runtime.jule:15:3"));;
	};
	return _136_f;;
}



inline jule::Bool _1aa336874_parameterUsesGenerics(jule::Ptr<_1aa33351e_ParamIns>* _38531_p, jule::Slice<jule::Ptr<_1aa307889_GenericDecl>>* _38546_generics) {
	if (_1aa330241_IsSelf((*((*(_38531_p))))._field_Decl.ptr())) {
		return false;;
	};
	return _1a60363e1_kindUsesGenerics(&((*((*(_38531_p))))._field_Kind), _38546_generics);;
}



inline jule::Ptr<_1a6022d5b_TypeSymbol> _1aa3390a2_buildType(jule::Ptr<_1aa2ea67e_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a6022d5b_TypeSymbol>(_1a6022d5b_TypeSymbol{._field_Decl=_9418_t, ._field_Kind=jule::Ptr<_1a601a64a_TypeKind>(nullptr)});;
}



inline jule::Ptr<_1aa44de20_Value> _1aa3393b0_buildExpr(jule::Ptr<_1aa2ee9b3_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1aa44de20_Value>(_1aa44de20_Value{._field_Expr=_10318_expr, ._field_Data=jule::Ptr<_1aa44cc98_Data>(nullptr)});;
}



inline jule::Ptr<_1a6019858_TypeAlias> _1aa339679_buildTypeAlias(jule::Ptr<_1aa31219b_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1a6019858_TypeAlias>(_1a6019858_TypeAlias{._field_Scope=(*(_11223_decl))._field_Scope, ._field_Public=(*_11223_decl.alloc)._field_Public, ._field_Binded=(*_11223_decl.alloc)._field_Binded, ._field_Used=false, ._field_Generic=false, ._field_Token=(*_11223_decl.alloc)._field_Token, ._field_Ident=(*_11223_decl.alloc)._field_Ident, ._field_Kind=_1aa3390a2_buildType((*_11223_decl.alloc)._field_Kind), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>(nullptr)});;
}



inline jule::Ptr<_1aa3185e2_Field> _1aa3399ba_buildField(jule::Ptr<_1aa315a51_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1aa3185e2_Field>(_1aa3185e2_Field{._field_Owner=jule::Ptr<_1aa31b518_Struct>(nullptr), ._field_Token=(*(_12319_decl))._field_Token, ._field_Public=(*_12319_decl.alloc)._field_Public, ._field_Mutable=(*_12319_decl.alloc)._field_Mutable, ._field_Ident=(*_12319_decl.alloc)._field_Ident, ._field_Kind=_1aa3390a2_buildType((*_12319_decl.alloc)._field_Kind), ._field_Default=(*_12319_decl.alloc)._field_Default});;
}



inline jule::Slice<jule::Ptr<_1aa3185e2_Field>> _1aa339c51_buildFields(jule::Slice<jule::Ptr<_1aa315a51_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_1aa3185e2_Field>> _1356_fields = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa3185e2_Field>>::alloc(0LL, (*(_13421_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa3185e2_Field>(nullptr); __jule_collection; });;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc0a3b84:;
		if (it != expr_end) {
			jule::Ptr<_1aa315a51_FieldDecl> _13614_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1aa3185e2_Field>> &__jule_push_dest = _1356_fields; __jule_push_dest.push(_1aa3399ba_buildField(_13614_decl)); };
			}
			_iter_next_1bc0a3b84:;
			++it;
			goto _iter_begin_1bc0a3b84;
		}
		_iter_end_1bc0a3b84:;
	};
	return _1356_fields;;
}



inline jule::Ptr<_1aa31b518_Struct> _1aa33a01a_buildStruct(jule::Ptr<_1aa316447_StructDecl> _14220_decl) {
	return jule::new_ptr<_1aa31b518_Struct>(_1aa31b518_Struct{._field_sema=jule::Ptr<_1aa3bb530_sema>(nullptr), ._field_Depends=jule::Slice<jule::Ptr<_1aa31b518_Struct>>(nullptr), ._field_Uses=jule::Slice<jule::Ptr<_1aa31b518_Struct>>(nullptr), ._field_Token=(*(_14220_decl))._field_Token, ._field_Ident=(*_14220_decl.alloc)._field_Ident, ._field_Fields=_1aa339c51_buildFields(&((*_14220_decl.alloc)._field_Fields)), ._field_Methods=jule::Slice<jule::Ptr<_1aa3315b6_Fn>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>(nullptr), ._field_Public=(*_14220_decl.alloc)._field_Public, ._field_Binded=(*_14220_decl.alloc)._field_Binded, ._field_Directives=(*_14220_decl.alloc)._field_Directives, ._field_Generics=(*_14220_decl.alloc)._field_Generics, ._field_Implements=jule::Slice<jule::Ptr<_1aa345047_Trait>>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1aa31e373_StructIns>>(nullptr)});;
}



inline jule::Ptr<_1aa32eae2_Param> _1aa33a2d4_buildParam(jule::Ptr<_1aa30addc_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1aa32eae2_Param>(_1aa32eae2_Param{._field_Token=(*(_15419_decl))._field_Token, ._field_Mutable=(*_15419_decl.alloc)._field_Mutable, ._field_Variadic=(*_15419_decl.alloc)._field_Variadic, ._field_Reference=(*_15419_decl.alloc)._field_Reference, ._field_Kind=_1aa3390a2_buildType((*_15419_decl.alloc)._field_Kind), ._field_Ident=(*_15419_decl.alloc)._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1aa32eae2_Param>> _1aa33a6ad_buildParams(jule::Slice<jule::Ptr<_1aa30addc_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_1aa32eae2_Param>> _1666_params = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa32eae2_Param>>::alloc(0LL, (*(_16521_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa32eae2_Param>(nullptr); __jule_collection; });;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc0a765a:;
		if (it != expr_end) {
			jule::Ptr<_1aa30addc_ParamDecl> _16714_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1aa32eae2_Param>> &__jule_push_dest = _1666_params; __jule_push_dest.push(_1aa33a2d4_buildParam(_16714_decl)); };
			}
			_iter_next_1bc0a765a:;
			++it;
			goto _iter_begin_1bc0a765a;
		}
		_iter_end_1bc0a765a:;
	};
	return _1666_params;;
}



inline jule::Ptr<_1aa32e3a5_RetType> _1aa33a900_buildRetType(jule::Ptr<_1aa2ed572_RetTypeDecl> _17321_decl) {
	if ((((*(_17321_decl))._field_Idents == nullptr) && ((*_17321_decl.alloc)._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1aa32e3a5_RetType>(_1aa32e3a5_RetType{._field_Kind=_1aa3390a2_buildType((*_17321_decl.alloc)._field_Kind), ._field_Idents=(*_17321_decl.alloc)._field_Idents});;
}



inline jule::Ptr<_1aa3315b6_Fn> _1aa33abb9_buildFunc(jule::Ptr<_1aa30c33e_FnDecl> _18318_decl) {
	return jule::new_ptr<_1aa3315b6_Fn>(_1aa3315b6_Fn{._field_sema=jule::Ptr<_1aa3bb530_sema>(nullptr), ._field_Token=(*(_18318_decl))._field_Token, ._field_Global=(*_18318_decl.alloc)._field_Global, ._field_Unsafety=(*_18318_decl.alloc)._field_Unsafety, ._field_Public=(*_18318_decl.alloc)._field_Public, ._field_Binded=(*_18318_decl.alloc)._field_Binded, ._field_Statically=(*_18318_decl.alloc)._field_Statically, ._field_Exceptional=(*_18318_decl.alloc)._field_Exceptional, ._field_Ident=(*_18318_decl.alloc)._field_Ident, ._field_Directives=(*_18318_decl.alloc)._field_Directives, ._field_Scope=(*_18318_decl.alloc)._field_Scope, ._field_Generics=(*_18318_decl.alloc)._field_Generics, ._field_Result=_1aa33a900_buildRetType((*_18318_decl.alloc)._field_Result), ._field_Params=_1aa33a6ad_buildParams(&((*_18318_decl.alloc)._field_Params)), ._field_Owner=jule::Ptr<_1aa31b518_Struct>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1aa334597_FnIns>>(nullptr)});;
}



inline jule::Slice<jule::Ptr<_1aa3315b6_Fn>> _1aa33ae83_buildMethods(jule::Slice<jule::Ptr<_1aa30c33e_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_1aa3315b6_Fn>> _2026_methods = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa3315b6_Fn>>::alloc(0LL, (*(_20122_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa3315b6_Fn>(nullptr); __jule_collection; });;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc0a90a7:;
		if (it != expr_end) {
			jule::Ptr<_1aa30c33e_FnDecl> _20314_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1aa3315b6_Fn>> &__jule_push_dest = _2026_methods; __jule_push_dest.push(_1aa33abb9_buildFunc(_20314_decl)); };
			}
			_iter_next_1bc0a90a7:;
			++it;
			goto _iter_begin_1bc0a90a7;
		}
		_iter_end_1bc0a90a7:;
	};
	return _2026_methods;;
}



inline jule::Slice<jule::Ptr<_1a6022d5b_TypeSymbol>> _1aa33b24c_buildTraitInherits(jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>>* _20928_inherits) {
	jule::Slice<jule::Ptr<_1a6022d5b_TypeSymbol>> _2106_symbols = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1a6022d5b_TypeSymbol>>::alloc(0LL, (*(_20928_inherits)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a6022d5b_TypeSymbol>(nullptr); __jule_collection; });;
	{
		auto expr = _20928_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc0ad82b:;
		if (it != expr_end) {
			jule::Ptr<_1aa2ea67e_TypeDecl> _21114_it = *it;
			{
				{ jule::Slice<jule::Ptr<_1a6022d5b_TypeSymbol>> &__jule_push_dest = _2106_symbols; __jule_push_dest.push(_1aa3390a2_buildType(_21114_it)); };
			}
			_iter_next_1bc0ad82b:;
			++it;
			goto _iter_begin_1bc0ad82b;
		}
		_iter_end_1bc0ad82b:;
	};
	return _2106_symbols;;
}



inline jule::Ptr<_1aa345047_Trait> _1aa33b516_buildTrait(jule::Ptr<_1aa316b84_TraitDecl> _21719_decl) {
	return jule::new_ptr<_1aa345047_Trait>(_1aa345047_Trait{._field_Token=(*(_21719_decl))._field_Token, ._field_Ident=(*_21719_decl.alloc)._field_Ident, ._field_Public=(*_21719_decl.alloc)._field_Public, ._field_Inherits=_1aa33b24c_buildTraitInherits(&((*_21719_decl.alloc)._field_Inherits)), ._field_Methods=_1aa33ae83_buildMethods(&((*_21719_decl.alloc)._field_Methods)), ._field_Implemented=jule::Slice<jule::Ptr<_1aa31b518_Struct>>(nullptr)});;
}



inline jule::Ptr<_1aa346bd6_EnumItem> _1aa33b7d0_buildEnumItem(jule::Ptr<_1aa313c3b_EnumItemDecl> _22722_decl) {
	return jule::new_ptr<_1aa346bd6_EnumItem>(_1aa346bd6_EnumItem{._field_Token=(*(_22722_decl))._field_Token, ._field_Ident=(*_22722_decl.alloc)._field_Ident, ._field_Value=_1aa3393b0_buildExpr((*_22722_decl.alloc)._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1aa346bd6_EnumItem>> _1aa33ba99_buildEnumItems(jule::Slice<jule::Ptr<_1aa313c3b_EnumItemDecl>>* _23524_decls) {
	jule::Slice<jule::Ptr<_1aa346bd6_EnumItem>> _2366_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa346bd6_EnumItem>>::alloc(0LL, (*(_23524_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa346bd6_EnumItem>(nullptr); __jule_collection; });;
	{
		auto expr = _23524_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc0b0bb3:;
		if (it != expr_end) {
			jule::Ptr<_1aa313c3b_EnumItemDecl> _23714_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1aa346bd6_EnumItem>> &__jule_push_dest = _2366_items; __jule_push_dest.push(_1aa33b7d0_buildEnumItem(_23714_decl)); };
			}
			_iter_next_1bc0b0bb3:;
			++it;
			goto _iter_begin_1bc0b0bb3;
		}
		_iter_end_1bc0b0bb3:;
	};
	return _2366_items;;
}



inline jule::Ptr<_1aa347753_Enum> _1aa33c094_buildEnum(jule::Ptr<_1aa3147ec_EnumDecl> _24318_decl) {
	return jule::new_ptr<_1aa347753_Enum>(_1aa347753_Enum{._field_Token=(*(_24318_decl))._field_Token, ._field_Public=(*_24318_decl.alloc)._field_Public, ._field_Ident=(*_24318_decl.alloc)._field_Ident, ._field_Kind=_1aa3390a2_buildType((*_24318_decl.alloc)._field_Kind), ._field_Items=_1aa33ba99_buildEnumItems(&((*_24318_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1aa348886_TypeEnumItem> _1aa33c270_buildTypeEnumItem(jule::Ptr<_1aa315127_TypeEnumItemDecl> _25326_decl) {
	return jule::new_ptr<_1aa348886_TypeEnumItem>(_1aa348886_TypeEnumItem{._field_Token=(*(_25326_decl))._field_Token, ._field_Ident=(*_25326_decl.alloc)._field_Ident, ._field_Kind=_1aa3390a2_buildType((*_25326_decl.alloc)._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1aa348886_TypeEnumItem>> _1aa33c517_buildTypeEnumItems(jule::Slice<jule::Ptr<_1aa315127_TypeEnumItemDecl>>* _26128_decls) {
	jule::Slice<jule::Ptr<_1aa348886_TypeEnumItem>> _2626_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa348886_TypeEnumItem>>::alloc(0LL, (*(_26128_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa348886_TypeEnumItem>(nullptr); __jule_collection; });;
	{
		auto expr = _26128_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc0b3e19:;
		if (it != expr_end) {
			jule::Ptr<_1aa315127_TypeEnumItemDecl> _26314_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1aa348886_TypeEnumItem>> &__jule_push_dest = _2626_items; __jule_push_dest.push(_1aa33c270_buildTypeEnumItem(_26314_decl)); };
			}
			_iter_next_1bc0b3e19:;
			++it;
			goto _iter_begin_1bc0b3e19;
		}
		_iter_end_1bc0b3e19:;
	};
	return _2626_items;;
}



inline jule::Ptr<_1aa348e5d_TypeEnum> _1aa33c7d1_buildTypeEnum(jule::Ptr<_1aa315787_TypeEnumDecl> _26922_decl) {
	return jule::new_ptr<_1aa348e5d_TypeEnum>(_1aa348e5d_TypeEnum{._field_Token=(*(_26922_decl))._field_Token, ._field_Public=(*_26922_decl.alloc)._field_Public, ._field_Ident=(*_26922_decl.alloc)._field_Ident, ._field_Items=_1aa33c517_buildTypeEnumItems(&((*_26922_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1aa3e4d3e_Var> _1aa33ca9a_buildVar(jule::Ptr<_1aa30d4e9_VarDecl> _27817_decl) {
	return jule::new_ptr<_1aa3e4d3e_Var>(_1aa3e4d3e_Var{._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Token=(*(_27817_decl))._field_Token, ._field_Ident=(*_27817_decl.alloc)._field_Ident, ._field_Binded=(*_27817_decl.alloc)._field_Binded, ._field_Constant=(*_27817_decl.alloc)._field_Constant, ._field_Mutable=(*_27817_decl.alloc)._field_Mutable, ._field_Public=(*_27817_decl.alloc)._field_Public, ._field_Used=false, ._field_Statically=(*_27817_decl.alloc)._field_Statically, ._field_Reference=(*_27817_decl.alloc)._field_Reference, ._field_Kind=_1aa3390a2_buildType((*_27817_decl.alloc)._field_Kind), ._field_Value=_1aa3393b0_buildExpr((*_27817_decl.alloc)._field_Expr), ._field_Refers=static__1aa337a51_new(), ._field_Directives=(*_27817_decl.alloc)._field_Directives, ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>(nullptr)});;
}



inline jule::Slice<jule::Ptr<_1aa3e4d3e_Var>> _1aa33cd64_buildVars(jule::Slice<jule::Ptr<_1aa30d4e9_VarDecl>> _29518_decls) {
	jule::Slice<jule::Ptr<_1aa3e4d3e_Var>> _2966_vars = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>::alloc(0LL, _29518_decls.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa3e4d3e_Var>(nullptr); __jule_collection; });;
	{
		auto expr = &(_29518_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc0b9b01:;
		if (it != expr_end) {
			jule::Ptr<_1aa30d4e9_VarDecl> _29714_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1aa3e4d3e_Var>> &__jule_push_dest = _2966_vars; __jule_push_dest.push(_1aa33ca9a_buildVar(_29714_decl)); };
			}
			_iter_next_1bc0b9b01:;
			++it;
			goto _iter_begin_1bc0b9b01;
		}
		_iter_end_1bc0b9b01:;
	};
	return _2966_vars;;
}



inline jule::Ptr<_1aa37374b_Impl> _1aa33d12d_buildImpl(jule::Ptr<_1aa3172e4_Impl> _30318_decl) {
	return jule::new_ptr<_1aa37374b_Impl>(_1aa37374b_Impl{._field_Base=(*(_30318_decl))._field_Base, ._field_Dest=(*_30318_decl.alloc)._field_Dest, ._field_Methods=_1aa33ae83_buildMethods(&((*_30318_decl.alloc)._field_Methods)), ._field_Statics=_1aa33cd64_buildVars((*_30318_decl.alloc)._field_Statics)});;
}



inline jule::Bool _1aa344541_isImplicitImport(jule::Ptr<_1aa39b0ae_ImportInfo> _78821_imp) {
	return ((*(_78821_imp))._field_Token == nullptr);;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa36dc30_buildAsComptimeMethodData(jule::Ptr<_1aa334597_FnIns>* _190335_f) {
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_190335_f)), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
}



inline jule::Ptr<_1aa39b0ae_ImportInfo> _1aa36e03d_findComptimePackage(jule::Ptr<_1aa3bb530_sema>* _191129_s) {
	return _1aa3bba08_SelectPackage((*(_191129_s)).ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1aa39b0ae_ImportInfo>>((void*)__jule_anon1bc136d05, nullptr, nullptr));;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa36e3b2_buildComptimeTypeInfoData(jule::Ptr<_1aa3bb530_sema>* _191735_s, jule::Ptr<_1a601a64a_TypeKind>* _191750_t) {
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1aa3bad9d_pushComptimeTypeInfo((*((*(_191735_s))))._field_meta.ptr(), _191750_t), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data15)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa36e703_buildComptimeValue(jule::Ptr<_1aa44cc98_Data>* _192528_d) {
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aa361d55_comptimeValue>(_1aa361d55_comptimeValue{._field_data=(*(_192528_d))}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data16)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
}



inline jule::Str _1aa3726e5_toStrConstraints(jule::Ptr<_1a6018c64_InsGeneric> _14321_g) {
	_1ed486d49_StrBuilder _1446_sb = static__1ed487146_New(128LL);;
	{
		auto expr = &((*_14321_g.alloc)._field_Constraint);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc2eb3c6:;
		if (it != expr_end) {
			jule::I32 _1456_i = it - expr->begin();
			jule::Ptr<_1a601a64a_TypeKind> *_1459_c = it;
			{
				_1ed4909ac_WriteStr(&_1446_sb, _1a601aa46_Str((*(_1459_c)).ptr()));
				if ((((*(_14321_g))._field_Constraint.len() - _1456_i) > 1LL)) {
					_1ed4909ac_WriteStr(&_1446_sb, jule::Str::lit(" | ", 3));
				};
			}
			_iter_next_1bc2eb3c6:;
			++it;
			_1456_i++;
			goto _iter_begin_1bc2eb3c6;
		}
		_iter_end_1bc2eb3c6:;
	};
	return _1ed4912a4_Str(&_1446_sb);;
}



inline jule::Bool _1aa372aad_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1a601a64a_TypeKind>* _15434_g) {
	{
		auto &_match_expr{ (*(_15421_c)) };
		
		if (_match_expr == jule::Str::lit("signed", 6)) {
			_case_begin_1bc2ed252:;
			{
				jule::Ptr<_1a6023763_Prim> _1573_prim = _1a601cd01_Prim((*(_15434_g)).ptr());;
				if ((_1573_prim == nullptr)) {
					return false;;
				};
				return _1a6e77342_IsSigNum((*(_1573_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("unsigned", 8)) {
			_case_begin_1bc2ed2b8:;
			{
				jule::Ptr<_1a6023763_Prim> _1633_prim = _1a601cd01_Prim((*(_15434_g)).ptr());;
				if ((_1633_prim == nullptr)) {
					return false;;
				};
				return _1a6e766d7_IsUnsigInt((*(_1633_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("float", 5)) {
			_case_begin_1bc2ed32e:;
			{
				jule::Ptr<_1a6023763_Prim> _1693_prim = _1a601cd01_Prim((*(_15434_g)).ptr());;
				if ((_1693_prim == nullptr)) {
					return false;;
				};
				return _1a6e76ce2_IsFloat((*(_1693_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("numeric", 7)) {
			_case_begin_1bc2ed3a6:;
			{
				jule::Ptr<_1a6023763_Prim> _1753_prim = _1a601cd01_Prim((*(_15434_g)).ptr());;
				if ((_1753_prim == nullptr)) {
					return false;;
				};
				return _1a6e77078_IsNum((*(_1753_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("mutable", 7)) {
			_case_begin_1bc2ed571:;
			{
				return _1a601c031_Mutable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("immutable", 9)) {
			_case_begin_1bc2ed5d7:;
			{
				return (!(_1a601c031_Mutable((*(_15434_g)).ptr())));;
			}
		}
		else if (_match_expr == jule::Str::lit("comparable", 10)) {
			_case_begin_1bc2ed64d:;
			{
				return _1a601bc9a_Comparable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("ordered", 7)) {
			_case_begin_1bc2ed6b4:;
			{
				return _1a601c2b7_Ordered((*(_15434_g)).ptr());;
			}
		}
		else {
			_case_begin_1bc2ec680:;
			{
				return false;;
			}
		}
		_match_end_1bc2ed10e:;
	};
}



inline jule::Bool _1aa372d77_isBuiltinConstraint(jule::Str* _19325_ident) {
	{
		auto expr = &(_1aa370aab_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc3043ce:;
		if (it != expr_end) {
			jule::Str *_1949_bc = it;
			{
				if (((*(_19325_ident)) == (*(_1949_bc)))) {
					return true;;
				};
			}
			_iter_next_1bc3043ce:;
			++it;
			goto _iter_begin_1bc3043ce;
		}
		_iter_end_1bc3043ce:;
	};
	return false;;
}



inline jule::Ptr<_1aa381160_scopeChecker> _1aa37597e_newScopeCheckerBase(jule::Ptr<_1aa3bb530_sema>* _5829_s, jule::Ptr<_1aa334597_FnIns> _5843_owner) {
	return jule::new_ptr<_1aa381160_scopeChecker>(_1aa381160_scopeChecker{._field_calledFrom=jule::Ptr<_1aa2d51c4_Token>(nullptr), ._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_parent=jule::Ptr<_1aa381160_scopeChecker>(nullptr), ._field_childIndex=0, ._field_table=jule::new_ptr<_1aa4475cd_SymbolTable>(_1aa4475cd_SymbolTable{._field_File=jule::Ptr<_1aa2da95a_File>(nullptr), ._field_Passes=jule::Slice<_1aa338c3e_Pass>(nullptr), ._field_Imports=jule::Slice<jule::Ptr<_1aa39b0ae_ImportInfo>>(nullptr), ._field_Vars=jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>(nullptr), ._field_TypeAliases=jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>(nullptr), ._field_Structs=jule::Slice<jule::Ptr<_1aa31b518_Struct>>(nullptr), ._field_Funcs=jule::Slice<jule::Ptr<_1aa3315b6_Fn>>(nullptr), ._field_Traits=jule::Slice<jule::Ptr<_1aa345047_Trait>>(nullptr), ._field_Enums=jule::Slice<jule::Ptr<_1aa347753_Enum>>(nullptr), ._field_TypeEnums=jule::Slice<jule::Ptr<_1aa348e5d_TypeEnum>>(nullptr), ._field_Impls=jule::Slice<jule::Ptr<_1aa37374b_Impl>>(nullptr)}), ._field_scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_tree=jule::Ptr<_1aa30a6a0_ScopeTree>(nullptr), ._field_result=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_it=0, ._field_cse=0, ._field_captured=jule::Ptr<jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>>(nullptr), ._field_labels=jule::Ptr<jule::Slice<jule::Ptr<_1aa37eadc_scopeLabel>>>(nullptr), ._field_gotos=jule::Ptr<jule::Slice<jule::Ptr<_1aa380170_scopeGoto>>>(nullptr), ._field_i=0});;
}



inline jule::Ptr<_1aa381160_scopeChecker> _1aa375d47_newScopeChecker(jule::Ptr<_1aa3bb530_sema>* _6625_s, jule::Ptr<_1aa334597_FnIns> _6639_owner) {
	jule::Ptr<_1aa381160_scopeChecker> _676_base = _1aa37597e_newScopeCheckerBase(_6625_s, _6639_owner);;
	(*(_676_base))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1aa37eadc_scopeLabel>>>(nullptr);
	(*_676_base.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1aa380170_scopeGoto>>>(nullptr);
	return _676_base;;
}



inline jule::Ptr<_1aa37eadc_scopeLabel> _1aa3761bb_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_1aa381160_scopeChecker> _7637_scope) {
	jule::Ptr<_1aa37eadc_scopeLabel> _776_label = _1aa385296_findLabelScope(_7637_scope, _7621_ident);;
	while ((_776_label == nullptr)) {
		{
			if ((((*_7637_scope.alloc)._field_parent == nullptr) || ((*_7637_scope.alloc)._field_owner != nullptr))) {
				return nullptr;;
			};
			_7637_scope=(*_7637_scope.alloc)._field_parent;
			_776_label=_1aa385296_findLabelScope(_7637_scope, _7621_ident);
		}
	_iter_next_1bc31d0c9:;
	}
	_iter_end_1bc31d0c9:;;
	return _776_label;;
}



inline jule::Bool _1aa376584_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1aa378ba2_Scope>* _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1bc31ee66:;
			{
				jule::Ptr<_1aa32570e_FnCallExprModel> _933_fcem = _9021_Model.unsafe_cast_ptr<_1aa32570e_FnCallExprModel>();;
				if (((*(_933_fcem))._field_Except == (*(_9034_sc)))) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1bc31d7d3:;
			{
				jule::Ptr<_1aa44cc98_Data> _983_d = _9021_Model.unsafe_cast_ptr<_1aa44cc98_Data>();;
				return _1aa376584_modelIsGotoScope((*(_983_d))._field_Model, _9034_sc);;
			}
		}
		_match_end_1bc31ee11:;
	};
	return false;;
}



inline jule::Bool _1aa376908_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_1aa378ba2_Scope>* _10434_sc) {
	{
		auto &_match_expr{ (*(_10421_stmt)) };
		
		if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1bc321b7c:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1aa378ba2_Scope>(&__jule_any_type29) == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1bc32250c:;
			{
				return ((*((*(_10421_stmt)).cast_ptr<_1aa379ad7_InfIter>(&__jule_any_type43)))._field_Scope == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1bc322573:;
			{
				jule::Ptr<_1aa37a9d9_RangeIter> _1113_it = (*(_10421_stmt)).cast_ptr<_1aa37a9d9_RangeIter>(&__jule_any_type47);;
				return (((*(_1113_it))._field_Scope == (*(_10434_sc))) || _1aa376584_modelIsGotoScope((*((*_1113_it.alloc)._field_Expr))._field_Model, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1bc322100:;
			{
				jule::Ptr<_1aa37a08d_WhileIter> _1143_it = (*(_10421_stmt)).cast_ptr<_1aa37a08d_WhileIter>(&__jule_any_type45);;
				return ((((*(_1143_it))._field_Scope == (*(_10434_sc))) || _1aa376584_modelIsGotoScope((*_1143_it.alloc)._field_Expr, _10434_sc)) || _1aa376584_modelIsGotoScope((*_1143_it.alloc)._field_Next, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1bc322166:;
			{
				jule::Ptr<_1aa37cdb5_Match> _1193_m = (*(_10421_stmt)).cast_ptr<_1aa37cdb5_Match>(&__jule_any_type55);;
				{
					auto expr = &((*(_1193_m))._field_Cases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc326962:;
					if (it != expr_end) {
						jule::Ptr<_1aa37d8dd_Case> *_12010_c = it;
						{
							if (((*((*(_12010_c))))._field_Scope == (*(_10434_sc)))) {
								return true;;
							};
							{
								auto expr = &((*(*(_12010_c)).alloc)._field_Exprs);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bc3278ca:;
								if (it != expr_end) {
									jule::Ptr<_1aa44cc98_Data> *_12411_expr = it;
									{
										if (_1aa376584_modelIsGotoScope((*((*(_12411_expr))))._field_Model, _10434_sc)) {
											return true;;
										};
									}
									_iter_next_1bc3278ca:;
									++it;
									goto _iter_begin_1bc3278ca;
								}
								_iter_end_1bc3278ca:;
							};
						}
						_iter_next_1bc326962:;
						++it;
						goto _iter_begin_1bc326962;
					}
					_iter_end_1bc326962:;
				};
				return (((*_1193_m.alloc)._field_Default != nullptr) && ((*(*(_1193_m))._field_Default.alloc)._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1bc3221cc:;
			{
				jule::Ptr<_1aa3797da_Conditional> _1323_c = (*(_10421_stmt)).cast_ptr<_1aa3797da_Conditional>(&__jule_any_type42);;
				{
					auto expr = &((*(_1323_c))._field_Elifs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc32947b:;
					if (it != expr_end) {
						jule::Ptr<_1aa3790c0_If> *_13310_elif = it;
						{
							if ((((*((*(_13310_elif))))._field_Scope == (*(_10434_sc))) || _1aa376584_modelIsGotoScope((*(*(_13310_elif)).alloc)._field_Expr, _10434_sc))) {
								return true;;
							};
						}
						_iter_next_1bc32947b:;
						++it;
						goto _iter_begin_1bc32947b;
					}
					_iter_end_1bc32947b:;
				};
				return (((*_1323_c.alloc)._field_Default != nullptr) && ((*(*(_1323_c))._field_Default.alloc)._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1bc322243:;
			{
				jule::Ptr<_1aa44cc98_Data> _1403_d = (*(_10421_stmt)).cast_ptr<_1aa44cc98_Data>(&__jule_any_type31);;
				return _1aa376584_modelIsGotoScope((*(_1403_d))._field_Model, _10434_sc);;
			}
		}
		else {
			_case_begin_1bc3204e9:;
			{
				return false;;
			}
		}
		_match_end_1bc320494:;
	};
}



inline jule::I32 _1aa376c7c_countMatchType(jule::Ptr<_1aa37cdb5_Match>* _14720_m, jule::Ptr<_1a601a64a_TypeKind>* _14732_t) {
	jule::I32 _1486_n = 0LL;;
	jule::Str _1492_kind = _1a601aa46_Str((*(_14732_t)).ptr());;
	_julec_label_1bc32c3b3:;
	{
		auto expr = &((*((*(_14720_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc32c7e2:;
		if (it != expr_end) {
			jule::Ptr<_1aa37d8dd_Case> *_1519_c = it;
			{
				if (((*(_1519_c)) == nullptr)) {
					goto _iter_next_1bc32c7e2;
				};
				{
					auto expr = &((*((*(_1519_c))))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc32d55c:;
					if (it != expr_end) {
						jule::Ptr<_1aa44cc98_Data> *_15610_expr = it;
						{
							if (((*(_15610_expr)) == nullptr)) {
								goto _iter_end_1bc32c7e2;
							};
							if ((_1492_kind == _1a601aa46_Str((*((*(_15610_expr))))._field_Model.cast_ptr<_1a601a64a_TypeKind>(&__jule_any_type87).ptr()))) {
								(_1486_n)++;
							};
						}
						_iter_next_1bc32d55c:;
						++it;
						goto _iter_begin_1bc32d55c;
					}
					_iter_end_1bc32d55c:;
				};
			}
			_iter_next_1bc32c7e2:;
			++it;
			goto _iter_begin_1bc32c7e2;
		}
		_iter_end_1bc32c7e2:;
	};
	return _1486_n;;
}



inline jule::Slice<jule::Ptr<_1aa44cc98_Data>> _1aa377046_getDatasFromTupleData(jule::Ptr<_1aa44cc98_Data>* _17131_d) {
	if ((_1a601eb27_Tup((*((*(_17131_d))))._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_17131_d))))._field_Model };
			
			if (_match_expr.type == &__jule_any_type84) {
				_case_begin_1bc3321ba:;
				{
					return (*((*((*(_17131_d))))._field_Model.unsafe_cast_ptr<_1aa328de9_TupleExprModel>()))._field_Datas;;
				}
			}
			else {
				_case_begin_1bc3300a8:;
				{
					jule::Ptr<_1a6028856_Tuple> _1778_t = _1a601eb27_Tup((*((*(_17131_d))))._field_Kind);;
					jule::Slice<jule::Ptr<_1aa44cc98_Data>> _1788_r = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa44cc98_Data>>::alloc(0LL, (*(_1778_t))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa44cc98_Data>(nullptr); __jule_collection; });;
					{
						auto expr = &((*_1778_t.alloc)._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bc331890:;
						if (it != expr_end) {
							jule::Ptr<_1a601a64a_TypeKind> _17916_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_1aa44cc98_Data>> &__jule_push_dest = _1788_r; __jule_push_dest.push(jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_17916_kind, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)})); };
							}
							_iter_next_1bc331890:;
							++it;
							goto _iter_begin_1bc331890;
						}
						_iter_end_1bc331890:;
					};
					return _1788_r;;
				}
			}
			_match_end_1bc330053:;
		};
	} else {
		return ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa44cc98_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_17131_d)); __jule_collection; });;
	};
}



inline jule::Bool _1aa377882_checkMut(jule::Ptr<_1aa3bb530_sema>* _20618_s, jule::Ptr<_1aa44cc98_Data>* _20629_left, jule::Ptr<_1aa44cc98_Data> _20646_right, jule::Ptr<_1aa2d51c4_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*((*(_20629_left))))._field_Mutable))) {
			_case_begin_1bc335b3b:;
			{
				_1aa3be434_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("cannot assign to immutable storage", 34), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!((*_20646_right.alloc)._field_Mutable))) && _1a601c031_Mutable((*_20646_right.alloc)._field_Kind.ptr()))) {
			_case_begin_1bc336037:;
			{
				if ((((*(_20660_op))._field_Id != static_cast<jule::U32>(71LLU)) && (_1a601e374_Struct((*(_20646_right))._field_Kind) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1aa3be434_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_20646_right))._field_Kind), &__jule_any_type4); __jule_collection; }));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1bc335ac5:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1bc335a2b:;
	};
}



inline jule::Bool _1aa377d6b_checkAssign(jule::Ptr<_1aa3bb530_sema>* _22521_s, jule::Ptr<_1aa44cc98_Data>* _22536_left, jule::Ptr<_1aa44cc98_Data> _22553_right, jule::Ptr<_1aa2d51c4_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aa334597_FnIns> _2262_f = _1a601e0dd_Fn((*((*(_22536_left))))._field_Kind.ptr());;
	if ((((_2262_f != nullptr) && ((*_2262_f.alloc)._field_Decl != nullptr)) && (*(*(_2262_f))._field_Decl.alloc)._field_Global)) {
		_1aa3be434_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("type is not support assignment", 30), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1aa44d6d3_IsConst((*(_22536_left)).ptr())) {
			_case_begin_1bc33b3c2:;
			{
				_1aa3be434_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("constants is can't assign", 25), jule::Slice<jule::Any>());
				_1aa3be797_pushSuggestion((*(_22521_s)).ptr(), jule::Str::lit("remove constant qualifer if you need to assign", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*((*(_22536_left))))._field_Lvalue))) {
			_case_begin_1bc33b46b:;
			{
				_1aa3be434_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("invalid expression: expected lvalue for assignment", 50), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1aa377882_checkMut(_22521_s, _22536_left, _22553_right, _22567_op)))) {
			_case_begin_1bc33b4e3:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1bc33b35b:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1bc33b218:;
	};
}



inline jule::Bool _1aa378135_isValidAstStForNextSt(jule::Any* _24731_n) {
	{
		auto &_match_expr{ (*(_24731_n)) };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1bc33b57b:;
			{
				return (!((*((*(_24731_n)).cast_ptr<_1aa30912c_AssignSt>(&__jule_any_type66)))._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1bc33d65a:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bc33d517:;
			{
				return false;;
			}
		}
		_match_end_1bc33d4b2:;
	};
}



inline jule::Bool _1aa3783ee_isValidStForNextSt(jule::Any* _25824_st) {
	{
		auto &_match_expr{ (*(_25824_st)) };
		
		if (_match_expr.type == &__jule_any_type50 || _match_expr.type == &__jule_any_type51 || _match_expr.type == &__jule_any_type54) {
			_case_begin_1bc33dd20:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1bc33e7c1:;
			{
				{
					auto &_match_expr{ (*((*(_25824_st)).cast_ptr<_1aa44cc98_Data>(&__jule_any_type31)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type41) {
						_case_begin_1bc3401d9:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1bc340a14:;
						{
							return false;;
						}
					}
					_match_end_1bc3409ae:;
				};
			}
		}
		else {
			_case_begin_1bc33e507:;
			{
				return false;;
			}
		}
		_match_end_1bc33dd97:;
	};
}



inline jule::Bool _1aa3786b8_stmtIsDef(jule::Any* _27615_st) {
	{
		auto &_match_expr{ (*(_27615_st)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bc340e87:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bc3400a7:;
			{
				return false;;
			}
		}
		_match_end_1bc340052:;
	};
}



inline jule::U32 _1aa39356d_removeEqFromOp(jule::U32 _222519_op) {
	{
		auto &_match_expr{ _222519_op };
		
		if (_match_expr == static_cast<jule::U32>(40LLU)) {
			_case_begin_1bc341c24:;
			{
				return static_cast<jule::U32>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(41LLU)) {
			_case_begin_1bc341c8a:;
			{
				return static_cast<jule::U32>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(42LLU)) {
			_case_begin_1bc341949:;
			{
				return static_cast<jule::U32>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_1bc3419b0:;
			{
				return static_cast<jule::U32>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1bc341d78:;
			{
				return static_cast<jule::U32>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(45LLU)) {
			_case_begin_1bc341dde:;
			{
				return static_cast<jule::U32>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(46LLU)) {
			_case_begin_1bc341e55:;
			{
				return static_cast<jule::U32>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(47LLU)) {
			_case_begin_1bc341ecc:;
			{
				return static_cast<jule::U32>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(48LLU)) {
			_case_begin_1bc342054:;
			{
				return static_cast<jule::U32>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(49LLU)) {
			_case_begin_1bc342131:;
			{
				return static_cast<jule::U32>(66LLU);;
			}
		}
		else {
			_case_begin_1bc3414a4:;
			{
				return _222519_op;;
			}
		}
		_match_end_1bc34186c:;
	};
}



inline void _1aa39379e_makeComptimeRange(jule::Ptr<_1aa44cc98_Data>* _225427_d) {
	{
		
		if ((_1a6020144_comptimeStructFields((*((*(_225427_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc345b7e:;
			{
				(*((*(_225427_d))))._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aa34c14d_comptimeRange>(_1aa34c14d_comptimeRange{._field_kind=jule::Trait(_1a6020144_comptimeStructFields((*((*(_225427_d))))._field_Kind), (jule::Trait::Type*)&_1aa34be2d_comptimeRangeKind_mptr_data0)}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data5)});
			}
		}
		else if ((_1a6020661_comptimeEnumFields((*((*(_225427_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc345a91:;
			{
				(*((*(_225427_d))))._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aa34c14d_comptimeRange>(_1aa34c14d_comptimeRange{._field_kind=jule::Trait(_1a6020661_comptimeEnumFields((*((*(_225427_d))))._field_Kind), (jule::Trait::Type*)&_1aa34be2d_comptimeRangeKind_mptr_data2)}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data5)});
			}
		}
		else if ((_1a6021431_comptimeTypeInfos((*((*(_225427_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc345b07:;
			{
				(*((*(_225427_d))))._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aa34c14d_comptimeRange>(_1aa34c14d_comptimeRange{._field_kind=jule::Trait(_1a6021431_comptimeTypeInfos((*((*(_225427_d))))._field_Kind), (jule::Trait::Type*)&_1aa34be2d_comptimeRangeKind_mptr_data4)}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data5)});
			}
		}
		else if ((_1a6020b7d_comptimeParams((*((*(_225427_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc3425b5:;
			{
				(*((*(_225427_d))))._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aa34c14d_comptimeRange>(_1aa34c14d_comptimeRange{._field_kind=jule::Trait(_1a6020b7d_comptimeParams((*((*(_225427_d))))._field_Kind), (jule::Trait::Type*)&_1aa34be2d_comptimeRangeKind_mptr_data3)}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data5)});
			}
		}
		else if ((_1a602194d_comptimeStatics((*((*(_225427_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc34262b:;
			{
				(*((*(_225427_d))))._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aa34c14d_comptimeRange>(_1aa34c14d_comptimeRange{._field_kind=jule::Trait(_1a602194d_comptimeStatics((*((*(_225427_d))))._field_Kind), (jule::Trait::Type*)&_1aa34be2d_comptimeRangeKind_mptr_data1)}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data5)});
			}
		}
		else if ((_1a60229a4_comptimeFiles((*((*(_225427_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc342692:;
			{
				(*((*(_225427_d))))._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aa34c14d_comptimeRange>(_1aa34c14d_comptimeRange{._field_kind=jule::Trait(_1a60229a4_comptimeFiles((*((*(_225427_d))))._field_Kind), (jule::Trait::Type*)&_1aa34be2d_comptimeRangeKind_mptr_data5)}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data5)});
			}
		}
		else if ((_1a6022487_comptimeDecls((*((*(_225427_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc346146:;
			{
				(*((*(_225427_d))))._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aa34c14d_comptimeRange>(_1aa34c14d_comptimeRange{._field_kind=jule::Trait(_1a6022487_comptimeDecls((*((*(_225427_d))))._field_Kind), (jule::Trait::Type*)&_1aa34be2d_comptimeRangeKind_mptr_data6)}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data5)});
			}
		}
		else {
			_case_begin_1bc3424b6:;
			{
				(*((*(_225427_d))))._field_Decl=true;
			}
		}
		_match_end_1bc345761:;
	};
}



inline jule::Bool _1aa393c99_canComptimeMatch(jule::Ptr<_1aa44cc98_Data>* _227726_d) {
	if ((!(_1aa4466cb_isGoodValueToInfer(_227726_d)))) {
		return false;;
	};
	return (_1aa44d6d3_IsConst((*(_227726_d)).ptr()) || (_1a60216b7_comptimeTypeInfo((*((*(_227726_d))))._field_Kind.ptr()) != nullptr));;
}



inline jule::Ptr<_1aa4475cd_SymbolTable> _1aa398166_findVarFileInPackage(jule::Slice<jule::Ptr<_1aa4475cd_SymbolTable>>* _4430_files, jule::Ptr<_1aa3e4d3e_Var>* _4454_v) {
	{
		auto expr = _4430_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd0e6e0:;
		if (it != expr_end) {
			jule::Ptr<_1aa4475cd_SymbolTable> _4514_f = *it;
			{
				if ((_1aa449b74_findVar1(_4514_f.ptr(), _4454_v) != -1LL)) {
					return _4514_f;;
				};
			}
			_iter_next_1acd0e6e0:;
			++it;
			goto _iter_begin_1acd0e6e0;
		}
		_iter_end_1acd0e6e0:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa3e4d3e_Var> _1aa3985d9_findVarInPackage(jule::Slice<jule::Ptr<_1aa4475cd_SymbolTable>>* _5526_files, jule::Str* _5550_ident, jule::Bool _5562_binded) {
	{
		auto expr = _5526_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd10999:;
		if (it != expr_end) {
			jule::Ptr<_1aa4475cd_SymbolTable> _5614_f = *it;
			{
				jule::Ptr<_1aa3e4d3e_Var> _577_v = _1aa447ee6_FindVar(_5614_f.ptr(), (*(_5550_ident)), _5562_binded);;
				if ((_577_v != nullptr)) {
					return _577_v;;
				};
			}
			_iter_next_1acd10999:;
			++it;
			goto _iter_begin_1acd10999;
		}
		_iter_end_1acd10999:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a6019858_TypeAlias> _1aa398a18_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1aa4475cd_SymbolTable>>* _6732_files, jule::Str* _6756_ident, jule::Bool _6768_binded) {
	{
		auto expr = _6732_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd1202d:;
		if (it != expr_end) {
			jule::Ptr<_1aa4475cd_SymbolTable> _6814_f = *it;
			{
				jule::Ptr<_1a6019858_TypeAlias> _697_ta = _1aa4483e2_FindTypeAlias(_6814_f.ptr(), (*(_6756_ident)), _6768_binded);;
				if ((_697_ta != nullptr)) {
					return _697_ta;;
				};
			}
			_iter_next_1acd1202d:;
			++it;
			goto _iter_begin_1acd1202d;
		}
		_iter_end_1acd1202d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa31b518_Struct> _1aa398ebe_findStructInPackage(jule::Slice<jule::Ptr<_1aa4475cd_SymbolTable>>* _7929_files, jule::Str* _7953_ident, jule::Bool _7965_binded) {
	{
		auto expr = _7929_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd1353a:;
		if (it != expr_end) {
			jule::Ptr<_1aa4475cd_SymbolTable> _8014_f = *it;
			{
				jule::Ptr<_1aa31b518_Struct> _817_s = _1aa4487dd_FindStruct(_8014_f.ptr(), (*(_7953_ident)), _7965_binded);;
				if ((_817_s != nullptr)) {
					return _817_s;;
				};
			}
			_iter_next_1acd1353a:;
			++it;
			goto _iter_begin_1acd1353a;
		}
		_iter_end_1acd1353a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa3315b6_Fn> _1aa3993ba_findFnInPackage(jule::Slice<jule::Ptr<_1aa4475cd_SymbolTable>>* _9125_files, jule::Str* _9149_ident, jule::Bool _9161_binded) {
	{
		auto expr = _9125_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd14a47:;
		if (it != expr_end) {
			jule::Ptr<_1aa4475cd_SymbolTable> _9214_file = *it;
			{
				jule::Ptr<_1aa3315b6_Fn> _937_f = _1aa448bd9_FindFn(_9214_file.ptr(), (*(_9149_ident)), _9161_binded);;
				if ((_937_f != nullptr)) {
					return _937_f;;
				};
			}
			_iter_next_1acd14a47:;
			++it;
			goto _iter_begin_1acd14a47;
		}
		_iter_end_1acd14a47:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa345047_Trait> _1aa39973e_findTraitInPackage(jule::Slice<jule::Ptr<_1aa4475cd_SymbolTable>>* _10328_files, jule::Str* _10352_ident) {
	{
		auto expr = _10328_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd15a04:;
		if (it != expr_end) {
			jule::Ptr<_1aa4475cd_SymbolTable> _10414_f = *it;
			{
				jule::Ptr<_1aa345047_Trait> _1057_t = _1aa44902a_FindTrait(_10414_f.ptr(), (*(_10352_ident)));;
				if ((_1057_t != nullptr)) {
					return _1057_t;;
				};
			}
			_iter_next_1acd15a04:;
			++it;
			goto _iter_begin_1acd15a04;
		}
		_iter_end_1acd15a04:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa347753_Enum> _1aa399ab3_findEnumInPackage(jule::Slice<jule::Ptr<_1aa4475cd_SymbolTable>>* _11527_files, jule::Str* _11551_ident) {
	{
		auto expr = _11527_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd1731e:;
		if (it != expr_end) {
			jule::Ptr<_1aa4475cd_SymbolTable> _11614_f = *it;
			{
				jule::Ptr<_1aa347753_Enum> _1177_e = _1aa44936b_FindEnum(_11614_f.ptr(), (*(_11551_ident)));;
				if ((_1177_e != nullptr)) {
					return _1177_e;;
				};
			}
			_iter_next_1acd1731e:;
			++it;
			goto _iter_begin_1acd1731e;
		}
		_iter_end_1acd1731e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa348e5d_TypeEnum> _1aa39a047_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1aa4475cd_SymbolTable>>* _12731_files, jule::Str* _12755_ident) {
	{
		auto expr = _12731_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd18650:;
		if (it != expr_end) {
			jule::Ptr<_1aa4475cd_SymbolTable> _12814_f = *it;
			{
				jule::Ptr<_1aa348e5d_TypeEnum> _1297_e = _1aa4496ac_FindTypeEnum(_12814_f.ptr(), (*(_12755_ident)));;
				if ((_1297_e != nullptr)) {
					return _1297_e;;
				};
			}
			_iter_next_1acd18650:;
			++it;
			goto _iter_begin_1acd18650;
		}
		_iter_end_1acd18650:;
	};
	return nullptr;;
}



inline jule::Any _1aa39a3ee_defByIdentPackage(jule::Slice<jule::Ptr<_1aa4475cd_SymbolTable>>* _13827_files, jule::Str* _13851_ident, jule::Bool _13863_binded) {
	{
		auto expr = _13827_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd199e7:;
		if (it != expr_end) {
			jule::Ptr<_1aa4475cd_SymbolTable> _13914_file = *it;
			{
				jule::Any _1407_def = _1aa44a9cc_defByIdent(_13914_file.ptr(), _13851_ident, _13863_binded);;
				if ((_1407_def != nullptr)) {
					return _1407_def;;
				};
			}
			_iter_next_1acd199e7:;
			++it;
			goto _iter_begin_1acd199e7;
		}
		_iter_end_1acd199e7:;
	};
	return nullptr;;
}



inline jule::Bool _1aa3a14b0_isStdPackage(jule::Str* _36918_f, jule::Str _36926_p) {
	return _1ed4731a9_HasPrefix((*(_36918_f)), _1ed49461a_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1adc46e51_PathStdlib; (*it++) = _36926_p; __jule_collection; })));;
}



inline jule::Bool _1aa3b8ae3_isValidModelForRef(jule::Any* _1328_m) {
	{
		auto &_match_expr{ (*(_1328_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1acd2a673:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1acd2a6d9:;
			{
				jule::Ptr<_1aa32837c_StructSubIdentExprModel> _187_model = (*(_1328_m)).cast_ptr<_1aa32837c_StructSubIdentExprModel>(&__jule_any_type101);;
				return (((*(_187_model))._field_Field != nullptr) && _1aa3b8ae3_isValidModelForRef(&((*((*_187_model.alloc)._field_Expr))._field_Model)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1acd2a750:;
			{
				jule::Ptr<_1aa323b08_UnaryExprModel> _217_unary = (*(_1328_m)).cast_ptr<_1aa323b08_UnaryExprModel>(&__jule_any_type113);;
				if (((*((*(_217_unary))._field_Op))._field_Id != static_cast<jule::U32>(62LLU))) {
					return false;;
				};
				if ((_1a601d31d_Ptr((*((*_217_unary.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1a601d087_Sptr((*((*(_217_unary))._field_Expr))._field_Kind) == nullptr)) {
					return false;;
				};
				return _1aa3b8ae3_isValidModelForRef(&((*(*(_217_unary))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1acd2a7b6:;
			{
				jule::Ptr<_1aa32608e_IndexingExprModel> _357_indexing = (*(_1328_m)).cast_ptr<_1aa32608e_IndexingExprModel>(&__jule_any_type53);;
				if ((_1a601dac1_Arr((*((*(_357_indexing))._field_Expr))._field_Kind.ptr()) == nullptr)) {
					return false;;
				};
				return _1aa3b8ae3_isValidModelForRef(&((*(*(_357_indexing))._field_Expr.alloc)._field_Model));;
			}
		}
		else {
			_case_begin_1acd29d9d:;
			{
				return false;;
			}
		}
		_match_end_1acd29d48:;
	};
}



inline _1ada72b17_Log _1aa3b9099_compilerErr(jule::Ptr<_1aa2d51c4_Token>* _4717_token, jule::Bool _4732_line, jule::Str _4744_fmt, jule::Slice<jule::Any> _4757_args) {
	_1ada72b17_Log _486_log = _1ada72b17_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*((*(_4717_token))))._field_Row, ._field_Column=(*((*(_4717_token))))._field_Column, ._field_Path=(*((*((*(_4717_token))))._field_File))._field_Path, ._field_Text=_1ada73079_Logf(_4744_fmt, _4757_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
	if (_4732_line) {
		_486_log._field_Line=_1aa2db9a0_GetRow((*((*(_4717_token))))._field_File, (*((*(_4717_token))))._field_Row);
	};
	return _486_log;;
}



inline jule::Bool _1aa3b941d_impIsLookupable(jule::Ptr<_1aa39b0ae_ImportInfo>* _6121_i, jule::Str* _6138_ident) {
	if ((*((*(_6121_i))))._field_Binded) {
		return false;;
	};
	if ((!((*((*(_6121_i))))._field_ImportAll))) {
		if (((*((*(_6121_i))))._field_Selected.len() > 0LL)) {
			return _1aa39d974_existIdent((*(_6121_i)).ptr(), (*(_6138_ident)));;
		};
	};
	return (*((*(_6121_i))))._field_ImportAll;;
}



inline void _1aa3b974d_appendRetVars(jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>* _7323_dest, jule::Ptr<_1aa334597_FnIns>* _7342_f) {
	if ((_1aa331a6c_IsVoid((*((*(_7342_f))))._field_Decl.ptr()) || ((*((*(_7342_f))))._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a601a64a_TypeKind>> _786_types = _1aa3357c9_Types((*(_7342_f)).ptr());;
	{
		auto expr = &((*((*(*((*(_7342_f))))._field_Decl.alloc)._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd36e65:;
		if (it != expr_end) {
			jule::I32 _797_i = it - expr->begin();
			jule::Ptr<_1aa2d51c4_Token> _7914_ident = *it;
			{
				if ((_1aa2d7aab_IsIgnoreIdent((*(_7914_ident))._field_Kind) || _1aa2d7d75_IsAnonIdent((*_7914_ident.alloc)._field_Kind))) {
					goto _iter_next_1acd36e65;
				};
				{ jule::Slice<jule::Ptr<_1aa3e4d3e_Var>> &__jule_push_dest = (*(_7323_dest)); __jule_push_dest.push(jule::new_ptr<_1aa3e4d3e_Var>(_1aa3e4d3e_Var{._field_Scope=(*((*(_7342_f))))._field_Scope, ._field_Token=_7914_ident, ._field_Ident=(*_7914_ident.alloc)._field_Kind, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=true, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=false, ._field_Kind=jule::new_ptr<_1a6022d5b_TypeSymbol>(_1a6022d5b_TypeSymbol{._field_Decl=jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr), ._field_Kind=_786_types[_797_i]}), ._field_Value=jule::new_ptr<_1aa44de20_Value>(_1aa44de20_Value{._field_Expr=jule::Ptr<_1aa2ee9b3_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>>(nullptr), ._field_RetOrder=_797_i, ._field_Depends=jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>(nullptr)})); };
			}
			_iter_next_1acd36e65:;
			++it;
			_797_i++;
			goto _iter_begin_1acd36e65;
		}
		_iter_end_1acd36e65:;
	};
	if ((((*(*((*((*(_7342_f))))._field_Decl))._field_Result.alloc)._field_Idents.len() == 1LL) && ((*(_7323_dest)).len() == 1LL))) {
		(*((*(_7323_dest))[((*(_7323_dest)).len() - 1LL)]))._field_RetOrder=-1LL;
	};
}



inline void _1aa3b9a39_appendParamVars(jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>* _10325_dest, jule::Ptr<_1aa334597_FnIns>* _10344_f) {
	if (((*((*(_10344_f))))._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_10344_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd3b82c:;
		if (it != expr_end) {
			jule::Ptr<_1aa33351e_ParamIns> _10814_p = *it;
			{
				if ((_1aa2d7aab_IsIgnoreIdent((*((*(_10814_p))._field_Decl))._field_Ident) || _1aa2d7d75_IsAnonIdent((*(*(_10814_p))._field_Decl.alloc)._field_Ident))) {
					goto _iter_next_1acd3b82c;
				};
				jule::Ptr<_1aa3e4d3e_Var> _1137_v = jule::new_ptr<_1aa3e4d3e_Var>(_1aa3e4d3e_Var{._field_Scope=(*((*(_10344_f))))._field_Scope, ._field_Token=(*(*(_10814_p))._field_Decl.alloc)._field_Token, ._field_Ident=(*(*(_10814_p))._field_Decl.alloc)._field_Ident, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=(*(*(_10814_p))._field_Decl.alloc)._field_Mutable, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=(*(*(_10814_p))._field_Decl.alloc)._field_Reference, ._field_Kind=jule::new_ptr<_1a6022d5b_TypeSymbol>(_1a6022d5b_TypeSymbol{._field_Decl=jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr), ._field_Kind=jule::Ptr<_1a601a64a_TypeKind>(nullptr)}), ._field_Value=jule::new_ptr<_1aa44de20_Value>(_1aa44de20_Value{._field_Expr=jule::Ptr<_1aa2ee9b3_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>(nullptr)});;
				{
					
					if (_1aa330241_IsSelf((*(_10814_p))._field_Decl)) {
						_case_begin_1acd40677:;
						{
							(*((*(_1137_v))._field_Kind))._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_10344_f))))._field_Owner, (jule::Trait::Type*)&_1a601a194_Kind_mptr_data0)});
							(*_1137_v.alloc)._field_Reference=(!(_1aa3304c7_IsRef((*(_10814_p))._field_Decl)));
							if (_1aa3304c7_IsRef((*(_10814_p))._field_Decl)) {
								((*(_1137_v))._field_Ident).mut_slice(1LL);;
								(*((*(*(_1137_v))._field_Kind.alloc)._field_Kind))._field_Kind=jule::Trait(jule::new_ptr<_1a602728e_Sptr>(_1a602728e_Sptr{._field_Elem=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=(*(*((*(_1137_v))._field_Kind))._field_Kind.alloc)._field_BindIdent, ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*((*(_1137_v))._field_Kind))._field_Kind.alloc)._field_Kind})}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data23);
							};
						}
					}
					else if ((*(*(_10814_p))._field_Decl.alloc)._field_Variadic) {
						_case_begin_1acd403ad:;
						{
							(*((*(_1137_v))._field_Kind))._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a6027c62_Slc>(_1a6027c62_Slc{._field_Elem=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=(*((*_10814_p.alloc)._field_Kind))._field_BindIdent, ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*(_10814_p))._field_Kind.alloc)._field_Kind})}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data24)});
						}
					}
					else {
						_case_begin_1acd40347:;
						{
							(*((*(_1137_v))._field_Kind))._field_Kind=(*_10814_p.alloc)._field_Kind;
						}
					}
					_match_end_1acd40226:;
				};
				{ jule::Slice<jule::Ptr<_1aa3e4d3e_Var>> &__jule_push_dest = (*(_10325_dest)); __jule_push_dest.push(_1137_v); };
			}
			_iter_next_1acd3b82c:;
			++it;
			goto _iter_begin_1acd3b82c;
		}
		_iter_end_1acd3b82c:;
	};
}



inline void _1aa3b9d25_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>* _16334_dest, jule::Ptr<_1aa334597_FnIns>* _16359_f) {
	jule::I32 _1646_size = (*((*(_16359_f))))._field_Generics.len();;
	if (((*((*((*(_16359_f))))._field_Decl))._field_Owner != nullptr)) {
		_1646_size+=(*(*((*((*(_16359_f))))._field_Decl))._field_Owner.alloc)._field_Generics.len();
	};
	if ((_1646_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_16359_f))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd48ae2:;
		if (it != expr_end) {
			jule::I32 _1737_i = it - expr->begin();
			jule::Ptr<_1a6018c64_InsGeneric> _17314_g = *it;
			{
				if ((_17314_g == nullptr)) {
					goto _iter_next_1acd48ae2;
				};
				jule::Ptr<_1aa307889_GenericDecl> _1777_decl = (*(*((*(_16359_f))))._field_Decl.alloc)._field_Generics[_1737_i];;
				{ jule::Slice<jule::Ptr<_1a6019858_TypeAlias>> &__jule_push_dest = (*(_16334_dest)); __jule_push_dest.push(jule::new_ptr<_1a6019858_TypeAlias>(_1a6019858_TypeAlias{._field_Scope=(*(*((*(_16359_f))))._field_Decl.alloc)._field_Scope, ._field_Public=false, ._field_Binded=false, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1777_decl.alloc)._field_Token, ._field_Ident=(*(_1777_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1a6022d5b_TypeSymbol>(_1a6022d5b_TypeSymbol{._field_Decl=jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr), ._field_Kind=(*(_17314_g))._field_Kind}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>(nullptr)})); };
			}
			_iter_next_1acd48ae2:;
			++it;
			_1737_i++;
			goto _iter_begin_1acd48ae2;
		}
		_iter_end_1acd48ae2:;
	};
	if (((*(*((*(_16359_f))))._field_Decl.alloc)._field_Owner != nullptr)) {
		jule::Ptr<_1aa31e373_StructIns> _1897_owner = (*((*(_16359_f))))._field_Owner;;
		{
			auto expr = &((*_1897_owner.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1acd4a484:;
			if (it != expr_end) {
				jule::I32 _1908_i = it - expr->begin();
				jule::Ptr<_1a6018c64_InsGeneric> _19015_g = *it;
				{
					jule::Ptr<_1aa307889_GenericDecl> _1918_decl = (*((*(_1897_owner))._field_Decl))._field_Generics[_1908_i];;
					{ jule::Slice<jule::Ptr<_1a6019858_TypeAlias>> &__jule_push_dest = (*(_16334_dest)); __jule_push_dest.push(jule::new_ptr<_1a6019858_TypeAlias>(_1a6019858_TypeAlias{._field_Scope=(*(*((*(_16359_f))))._field_Decl.alloc)._field_Scope, ._field_Public=false, ._field_Binded=false, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1918_decl.alloc)._field_Token, ._field_Ident=(*(_1918_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1a6022d5b_TypeSymbol>(_1a6022d5b_TypeSymbol{._field_Decl=jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr), ._field_Kind=(*(_19015_g))._field_Kind}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>(nullptr)})); };
				}
				_iter_next_1acd4a484:;
				++it;
				_1908_i++;
				goto _iter_begin_1acd4a484;
			}
			_iter_end_1acd4a484:;
		};
	};
}



inline jule::Ptr<_1aa4475cd_SymbolTable> _1aa3ba199_findFile(jule::Slice<jule::Ptr<_1aa4475cd_SymbolTable>>* _20418_files, jule::Ptr<_1aa2da95a_File>* _20442_handler) {
	{
		auto expr = _20418_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd4ac26:;
		if (it != expr_end) {
			jule::Ptr<_1aa4475cd_SymbolTable> _20514_fl = *it;
			{
				if (((*(_20514_fl))._field_File == (*(_20442_handler)))) {
					return _20514_fl;;
				};
			}
			_iter_next_1acd4ac26:;
			++it;
			goto _iter_begin_1acd4ac26;
		}
		_iter_end_1acd4ac26:;
	};
	return nullptr;;
}



inline void _1aa3ba650_pushSuggestion(_1ada72b17_Log* _21330_log, jule::Str _21341_fmt, jule::Slice<jule::Any> _21354_args) {
	(*(_21330_log))._field_Suggestion=_1ada73079_Logf(_21341_fmt, _21354_args);
}



inline void _1aa3e3524_pushImplemented(jule::Ptr<_1aa345047_Trait> _297724_t, jule::Ptr<_1aa31b518_Struct>* _297740_d) {
	_julec_label_1acd5138b:;
	{
		
		if (((*(_297724_t))._field_Implemented.len() > 0LL)) {
			_case_begin_1acd51aea:;
			{
				{
					auto expr = &((*_297724_t.alloc)._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acd52b62:;
					if (it != expr_end) {
						jule::Ptr<_1aa31b518_Struct> _298110_s = *it;
						{
							if ((_298110_s == (*(_297740_d)))) {
								goto _match_end_1acd516bb;
							};
						}
						_iter_next_1acd52b62:;
						++it;
						goto _iter_begin_1acd52b62;
					}
					_iter_end_1acd52b62:;
				};
				goto _case_begin_1acd51765;
			}
		}
		else {
			_case_begin_1acd51765:;
			{
				(*(_297724_t))._field_Implemented=jule::append((*_297724_t.alloc)._field_Implemented,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa31b518_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_297740_d)); __jule_collection; }));
			}
		}
		_match_end_1acd516bb:;
	};
	{
		auto expr = &((*(_297724_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd53569:;
		if (it != expr_end) {
			jule::Ptr<_1a6022d5b_TypeSymbol> _299014_i = *it;
			{
				_1aa3e3524_pushImplemented(_1a601e60a_Trait((*(_299014_i))._field_Kind.ptr()), _297740_d);
			}
			_iter_next_1acd53569:;
			++it;
			goto _iter_begin_1acd53569;
		}
		_iter_end_1acd53569:;
	};
}



inline void _1aa3e3810_pushImplements(jule::Ptr<_1aa31b518_Struct>* _299524_s, jule::Ptr<_1aa345047_Trait> _299540_t) {
	_julec_label_1acd543e4:;
	{
		
		if (((*((*(_299524_s))))._field_Implements.len() > 0LL)) {
			_case_begin_1acd54a65:;
			{
				{
					auto expr = &((*((*(_299524_s))))._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acd55acc:;
					if (it != expr_end) {
						jule::Ptr<_1aa345047_Trait> _299910_b = *it;
						{
							if ((_299910_b == _299540_t)) {
								goto _match_end_1acd54636;
							};
						}
						_iter_next_1acd55acc:;
						++it;
						goto _iter_begin_1acd55acc;
					}
					_iter_end_1acd55acc:;
				};
				goto _case_begin_1acd546d0;
			}
		}
		else {
			_case_begin_1acd546d0:;
			{
				{ jule::Slice<jule::Ptr<_1aa345047_Trait>> &__jule_push_dest = (*((*(_299524_s))))._field_Implements; __jule_push_dest.push(_299540_t); };
			}
		}
		_match_end_1acd54636:;
	};
	{
		auto expr = &((*(_299540_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd564d4:;
		if (it != expr_end) {
			jule::Ptr<_1a6022d5b_TypeSymbol> _300814_i = *it;
			{
				_1aa3e3810_pushImplements(_299524_s, _1a601e60a_Trait((*(_300814_i))._field_Kind.ptr()));
			}
			_iter_next_1acd564d4:;
			++it;
			goto _iter_begin_1acd564d4;
		}
		_iter_end_1acd564d4:;
	};
}



inline jule::Bool _1aa4331ce_traitHasReferenceReceiver(jule::Ptr<_1aa345047_Trait>* _2831_t) {
	{
		auto expr = &((*((*(_2831_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc70d970:;
		if (it != expr_end) {
			jule::Ptr<_1aa3315b6_Fn> *_299_f = it;
			{
				if ((*((*(_299_f))))._field_Statically) {
					goto _iter_next_1bc70d970;
				};
				jule::Ptr<_1aa32eae2_Param> _353_p = (*(*(_299_f)).alloc)._field_Params[0LL];;
				if ((_1aa3304c7_IsRef(_353_p.ptr()) && _1aa330241_IsSelf(_353_p))) {
					return true;;
				};
			}
			_iter_next_1bc70d970:;
			++it;
			goto _iter_begin_1bc70d970;
		}
		_iter_end_1bc70d970:;
	};
	return false;;
}



inline jule::Bool _1aa433564_floatAssignable(jule::Str* _4321_kind, jule::Ptr<_1aa44cc98_Data>* _4333_d) {
	jule::Str _442_value = _1a6e529d2_FmtFloat(_1a6e7a279_AsF64((*((*(_4333_d))))._field_Constant.ptr()), 'g', -1LL, 64LL);;
	return _1a6e6cec5_CheckBitFloat(_442_value, _1a6e6ba2e_BitsizeOf((*(_4321_kind))));;
}



inline jule::Bool _1aa4338d8_sigAssignable(jule::Str _4818_kind, jule::Ptr<_1aa44cc98_Data>* _4830_d) {
	jule::F64 _492_min = _1a6e7311d_Min(_4818_kind);;
	jule::F64 _502_max = _1a6e733a4_Max(_4818_kind);;
	{
		
		if (_1a6e7c0c2_IsF64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1bc7124ac:;
			{
				jule::F64 _533_x = _1a6e799c6_ReadF64((*((*(_4830_d))))._field_Constant);;
				jule::F64 _543_i;
				jule::F64 _546_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1a6e28b0c_Modf(_533_x);
					_543_i = __jule_assign_result.__jule_result_arg0;
					_546_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_546_frac != 0LL)) {
					return false;;
				};
				return ((_543_i >= _492_min) && (_543_i <= _502_max));;
			}
		}
		else if (_1a6e7b81e_IsU64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1bc712523:;
			{
				jule::F64 _603_x = _1a6e7a279_AsF64((*((*(_4830_d))))._field_Constant);;
				if ((_603_x <= _502_max)) {
					return true;;
				};
			}
		}
		else if (_1a6e7b588_IsI64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1bc71259a:;
			{
				jule::F64 _653_x = _1a6e7a279_AsF64((*((*(_4830_d))))._field_Constant);;
				return ((_492_min <= _653_x) && (_653_x <= _502_max));;
			}
		}
		_match_end_1bc71239c:;
	};
	return false;;
}



inline jule::Bool _1aa433ca1_unsigAssignable(jule::Str _7120_kind, jule::Ptr<_1aa44cc98_Data>* _7132_d) {
	jule::F64 _722_max = _1a6e733a4_Max(_7120_kind);;
	if (((*((*(_7132_d))))._field_IsRune && _7120_kind.equal("u8", 2))) {
		return _1aa416800_IsAscii(static_cast<jule::I32>(_1a6e78e8c_ReadI64((*((*(_7132_d))))._field_Constant.ptr())));;
	};
	{
		
		if (_1a6e7c0c2_IsF64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1bc718183:;
			{
				jule::F64 _793_x = _1a6e799c6_ReadF64((*((*(_7132_d))))._field_Constant);;
				if ((_793_x < 0LL)) {
					return false;;
				};
				jule::F64 _833_i;
				jule::F64 _836_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1a6e28b0c_Modf(_793_x);
					_833_i = __jule_assign_result.__jule_result_arg0;
					_836_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_836_frac != 0LL)) {
					return false;;
				};
				return (_833_i <= _722_max);;
			}
		}
		else if (_1a6e7b81e_IsU64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1bc7181e9:;
			{
				jule::F64 _893_x = _1a6e7a279_AsF64((*((*(_7132_d))))._field_Constant);;
				if ((_893_x <= _722_max)) {
					return true;;
				};
			}
		}
		else if (_1a6e7b588_IsI64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1bc718260:;
			{
				jule::F64 _943_x = _1a6e7a279_AsF64((*((*(_7132_d))))._field_Constant);;
				return ((0LL <= _943_x) && (_943_x <= _722_max));;
			}
		}
		_match_end_1bc71744b:;
	};
	return false;;
}



inline jule::Bool _1aa434125_intAssignable(jule::Str _10018_kind, jule::Ptr<_1aa44cc98_Data>* _10030_d) {
	{
		
		if (_1a6e763c9_IsSigInt(_10018_kind)) {
			_case_begin_1bc71cce2:;
			{
				return _1aa4338d8_sigAssignable(_10018_kind, _10030_d);;
			}
		}
		else if (_1a6e766d7_IsUnsigInt(_10018_kind)) {
			_case_begin_1bc71cd7a:;
			{
				return _1aa433ca1_unsigAssignable(_10018_kind, _10030_d);;
			}
		}
		else {
			_case_begin_1bc71c808:;
			{
				return false;;
			}
		}
		_match_end_1bc71c73c:;
	};
}



inline void _1aa44053d_checkMutRiskOfStructLit(jule::Ptr<_1aa3bb530_sema>* _92033_s, jule::Ptr<_1aa3244cc_StructLitExprModel>* _92044_m) {
	{
		auto expr = &((*((*(_92044_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc71de03:;
		if (it != expr_end) {
			jule::Ptr<_1aa324136_StructArgExprModel> *_9219_arg = it;
			{
				if ((*((*((*((*(_9219_arg))))._field_Field))._field_Decl))._field_Mutable) {
					goto _iter_next_1bc71de03;
				};
				if (((!((*((*(*(_9219_arg)).alloc)._field_Expr))._field_Mutable)) && _1a601c031_Mutable((*(*((*(_9219_arg))))._field_Expr.alloc)._field_Kind.ptr()))) {
					_1aa3be434_pushErr((*(_92033_s)).ptr(), (*(*(_9219_arg)).alloc)._field_Token, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*((*((*(_9219_arg))))._field_Expr))._field_Kind), &__jule_any_type4); __jule_collection; }));
				};
			}
			_iter_next_1bc71de03:;
			++it;
			goto _iter_begin_1bc71de03;
		}
		_iter_end_1bc71de03:;
	};
}



inline jule::Ptr<_1a601a64a_TypeKind> _1aa446379_lenKind(void) {
	return _1aa5dcc5c_primInt;;
}



inline jule::Bool _1aa4466cb_isGoodValueToInfer(jule::Ptr<_1aa44cc98_Data>* _142424_d) {
	return (!(_1aa44d1b6_IsNil((*(_142424_d)).ptr())));;
}



inline jule::Ptr<_1aa2e9a9b_Directive> _1aa4766c8_findDirective(jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>>* _438723_directives, jule::Str _438754_d) {
	{
		auto expr = _438723_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc8586e1:;
		if (it != expr_end) {
			jule::Ptr<_1aa2e9a9b_Directive> _438814_dr = *it;
			{
				if (((*((*(_438814_dr))._field_Tag))._field_Kind == _438754_d)) {
					return _438814_dr;;
				};
			}
			_iter_next_1bc8586e1:;
			++it;
			goto _iter_begin_1bc8586e1;
		}
		_iter_end_1bc8586e1:;
	};
	return nullptr;;
}



inline jule::Any _1aa476a91_findBuiltinsImport(jule::Str* _439624_ident, jule::Ptr<_1aa39b0ae_ImportInfo> _439636_imp) {
	return _1aa5e136a_findPackageBuiltinDef(&((*(_439636_imp))._field_LinkPath), _439624_ident);;
}



inline void _1aa476cc2_fitBitsize(jule::Ptr<_1aa44cc98_Data>* _440520_d) {
	jule::Ptr<_1a6023763_Prim> _44066_prim = _1a601cd01_Prim((*((*(_440520_d))))._field_Kind.ptr());;
	jule::I32 _44072_z = _1a6e6ba2e_BitsizeOf(_1a6023ad7_Str(_44066_prim.ptr()));;
	{
		
		if (_1a6e7b588_IsI64((*((*(_440520_d))))._field_Constant.ptr())) {
			_case_begin_1bc85bbde:;
			{
				jule::I32 _44103_k = _1a6e6d558_BitsizeOfInt(_1a6e78e8c_ReadI64((*((*(_440520_d))))._field_Constant));;
				if (((_44103_k > _44072_z) || _1a6e766d7_IsUnsigInt((*_44066_prim.alloc)._field_Kind))) {
					(*(*((*(_440520_d))))._field_Constant.alloc)._field_Kind=_1a6e6bd70_IntFromBits(_44103_k);
					(*((*(_440520_d))))._field_Kind=(*((*(_1aa5e00b1_findBuiltinTypeAlias((*(*((*(_440520_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1a6e7b81e_IsU64((*((*(_440520_d))))._field_Constant.ptr())) {
			_case_begin_1bc85bc55:;
			{
				jule::I32 _44163_k = _1a6e6d822_BitsizeOfUint(_1a6e79223_ReadU64((*((*(_440520_d))))._field_Constant));;
				if (((_44163_k > _44072_z) || _1a6e763c9_IsSigInt((*_44066_prim.alloc)._field_Kind))) {
					(*(*((*(_440520_d))))._field_Constant.alloc)._field_Kind=_1a6e6c106_UintFromBits(_44163_k);
					(*((*(_440520_d))))._field_Kind=(*((*(_1aa5e00b1_findBuiltinTypeAlias((*(*((*(_440520_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1a6e7c0c2_IsF64((*((*(_440520_d))))._field_Constant.ptr())) {
			_case_begin_1bc85bccc:;
			{
				if ((_44072_z == 64LLU)) {
					return;;
				};
				jule::I32 _44263_k = _1a6e6d28e_BitsizeOfFloat(_1a6e799c6_ReadF64((*((*(_440520_d))))._field_Constant));;
				if ((_44263_k > _44072_z)) {
					(*(*((*(_440520_d))))._field_Constant.alloc)._field_Kind=_1a6e6c3c0_FloatFromBits(_44263_k);
					(*((*(_440520_d))))._field_Kind=(*((*(_1aa5e00b1_findBuiltinTypeAlias((*(*((*(_440520_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		_match_end_1bc85bace:;
	};
}



inline void _1aa477102_makeStructLitAlloc(jule::Ptr<_1aa44cc98_Data>* _443428_d, jule::Ptr<_1aa3244cc_StructLitExprModel>* _443443_lit) {
	(*((*(_443428_d))))._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a602728e_Sptr>(_1a602728e_Sptr{._field_Elem=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_443443_lit))))._field_Strct, (jule::Trait::Type*)&_1a601a194_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data23)});
	(*((*(_443428_d))))._field_Model=jule::Any(jule::new_ptr<_1aa3247c9_AllocStructLitExprModel>(_1aa3247c9_AllocStructLitExprModel{._field_Lit=(*(_443443_lit))}), &__jule_any_type115);
}



inline jule::Ptr<_1aa3e4d3e_Var> _1aa477476_buildErrorVar(jule::Ptr<_1aa378ba2_Scope>* _444523_s, jule::Ptr<_1aa3036dc_FnCallExpr>* _444539_fc) {
	return jule::new_ptr<_1aa3e4d3e_Var>(_1aa3e4d3e_Var{._field_Scope=(*(_444523_s)), ._field_Token=(*((*(_444539_fc))))._field_Token, ._field_Ident=jule::Str::lit("error", 5), ._field_Binded=false, ._field_Constant=false, ._field_Mutable=true, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=false, ._field_Kind=(*(_1aa5e00b1_findBuiltinTypeAlias(jule::Str::lit("any", 3))))._field_Kind, ._field_Value=jule::new_ptr<_1aa44de20_Value>(_1aa44de20_Value{._field_Expr=jule::Ptr<_1aa2ee9b3_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>(nullptr)});;
}



inline jule::Any _1a6013ad8_findBuiltinsSema(jule::Str* _446022_ident, jule::Ptr<_1aa3bb530_sema> _446038_s) {
	{
		auto expr = &((*((*(_446038_s))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc86d34e:;
		if (it != expr_end) {
			jule::Ptr<_1aa39b0ae_ImportInfo> _446114_imp = *it;
			{
				if (((*(_446114_imp))._field_ImportAll || _1aa39d974_existIdent(_446114_imp, (*(_446022_ident))))) {
					jule::Any _44638_def = _1aa476a91_findBuiltinsImport(_446022_ident, _446114_imp);;
					if ((_44638_def != nullptr)) {
						return _44638_def;;
					};
				};
			}
			_iter_next_1bc86d34e:;
			++it;
			goto _iter_begin_1bc86d34e;
		}
		_iter_end_1bc86d34e:;
	};
	jule::Str _44716_ppath = _1aa2db142_Dir((*(*(_446038_s))._field_file.alloc)._field_File.ptr());;
	if (_1ed4731a9_HasPrefix(_44716_ppath, _1adc46e51_PathStdlib)) {
		(_44716_ppath).mut_slice(_1adc46e51_PathStdlib.len());;
		_44716_ppath=(jule::Str::lit("std", 3) + _1ed478a50_Replace(_44716_ppath, jule::Str::lit("/", 1), jule::Str::lit("::", 2), -1LL));
		return _1aa5e136a_findPackageBuiltinDef(&(_44716_ppath), _446022_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1a6013da2_isOkForShifting(jule::Ptr<_1aa44cc98_Data>* _448525_d) {
	if (_1aa44d6d3_IsConst((*(_448525_d)).ptr())) {
		{
			
			if (_1a6e7b588_IsI64((*((*(_448525_d))))._field_Constant.ptr())) {
				_case_begin_1bc871792:;
				{
					return (_1a6e78e8c_ReadI64((*((*(_448525_d))))._field_Constant) >= 0LL);;
				}
			}
			else if (_1a6e7b81e_IsU64((*((*(_448525_d))))._field_Constant.ptr())) {
				_case_begin_1bc87183b:;
				{
					return true;;
				}
			}
			else if (_1a6e7c0c2_IsF64((*((*(_448525_d))))._field_Constant.ptr())) {
				_case_begin_1bc8718b3:;
				{
					return (_1a6e799c6_ReadF64((*((*(_448525_d))))._field_Constant) >= 0LL);;
				}
			}
			else {
				_case_begin_1bc871709:;
				{
					return false;;
				}
			}
			_match_end_1bc87163d:;
		};
	};
	jule::Ptr<_1a6023763_Prim> _44982_prim = _1a601cd01_Prim((*((*(_448525_d))))._field_Kind.ptr());;
	return ((_44982_prim != nullptr) && _1a6e769a1_IsInt(_1a6023ad7_Str(_44982_prim)));;
}



inline jule::Bool _1a601428c_isInstancedStruct(jule::Ptr<_1aa31e373_StructIns> _450222_s) {
	return ((*((*(_450222_s))._field_Decl))._field_Generics.len() == (*_450222_s.alloc)._field_Generics.len());;
}



inline jule::Bool _1a6014611_isPtrArithmeticCompatible(jule::Ptr<_1aa44cc98_Data>* _450635_l, jule::Ptr<_1aa44cc98_Data>* _450650_r) {
	jule::Ptr<_1a602aa56_Ptr> _45072_ptr = _1a601d31d_Ptr((*((*(_450650_r))))._field_Kind.ptr());;
	if ((_45072_ptr != nullptr)) {
		return _1a601ad87_Equal((*(_1a601d31d_Ptr((*((*(_450635_l))))._field_Kind)))._field_Elem, (*_45072_ptr.alloc)._field_Elem);;
	};
	if ((_1aa44d6d3_IsConst((*(_450650_r)).ptr()) && (*((*(_450650_r))))._field_untyped)) {
		return (_1aa434125_intAssignable(jule::Str::lit("int", 3), _450650_r) || _1aa434125_intAssignable(jule::Str::lit("uint", 4), _450650_r));;
	};
	_1aa43460e_typeCompatibilityChecker _45166_tcc = _1aa43460e_typeCompatibilityChecker{._field_s=jule::Ptr<_1aa3bb530_sema>(nullptr), ._field_dest=_1aa5dcc5c_primInt, ._field_src=(*((*(_450650_r))))._field_Kind, ._field_errorToken=jule::Ptr<_1aa2d51c4_Token>(nullptr)};;
	if (_1aa435d08_check(&_45166_tcc)) {
		return true;;
	};
	_45166_tcc._field_dest=_1aa5dc894_primUint;
	return _1aa435d08_check(&_45166_tcc);;
}



inline void _1a60149a7_applyCastKindModel(jule::Ptr<_1aa44cc98_Data>* _452728_d, jule::Ptr<_1a601a64a_TypeKind>* _452743_t, jule::Ptr<_1aa2d51c4_Token>* _452762_token) {
	(*((*(_452728_d))))._field_Model=jule::Any(jule::new_ptr<_1aa324d5c_CastingExprModel>(_1aa324d5c_CastingExprModel{._field_Token=(*(_452762_token)), ._field_Expr=jule::new_ptr<_1aa44cc98_Data>((*((*(_452728_d))))), ._field_Kind=(*(_452743_t)), ._field_ExprKind=(*((*(_452728_d))))._field_Kind}), &__jule_any_type96);
}



inline void _1a6014d4d_applyCastKind(jule::Ptr<_1aa44cc98_Data>* _453623_d, jule::Ptr<_1a601a64a_TypeKind>* _453638_t, jule::Ptr<_1aa2d51c4_Token>* _453657_token) {
	_1a60149a7_applyCastKindModel(_453623_d, _453638_t, _453657_token);
	(*((*(_453623_d))))._field_Kind=(*(_453638_t));
}



inline jule::Ptr<_1aa44cc98_Data> _1a601505c_buildVoidData(void) {
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5db9c5_primVoid, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
}



inline jule::Str _1a60153d1_checkDataForIntegerIndexing(jule::Ptr<_1aa44cc98_Data>* _454737_d, jule::Ptr<_1aa2d51c4_Token>* _454752_token) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_454737_d)) == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_1a601cd01_Prim((*((*(_454737_d))))._field_Kind.ptr()) == nullptr)) {
			_case_begin_1bc87bb87:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_1a6e769a1_IsInt(_1a6023ad7_Str(_1a601cd01_Prim((*((*(_454737_d))))._field_Kind.ptr()).ptr()))))) {
			_case_begin_1bc87bbed:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_1aa44d6d3_IsConst((*(_454737_d)).ptr())) {
			_case_begin_1bc87bc64:;
			{
				if ((_1a6e7a279_AsF64((*((*(_454737_d))))._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str::lit("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_1a601cd01_Prim((*((*(_454737_d))))._field_Kind.ptr()) == nullptr) || _1aa44d6d3_IsConst((*(_454737_d)).ptr()) || (_1a6e6b765_RealKindOf(_1a6023ad7_Str(_1a601cd01_Prim((*((*(_454737_d))))._field_Kind).ptr())) != _1a6e6b765_RealKindOf(jule::Str::lit("int", 3)))) {
			_case_begin_1bc87bcca:;
			{
				_1a6014d4d_applyCastKind(_454737_d, &(_1aa5dcc5c_primInt), _454752_token);
			}
		}
		_match_end_1bc87b7e1:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _1a6015777_applyCastModelByEnum(jule::Ptr<_1aa44cc98_Data>* _457230_d, jule::Ptr<_1aa347753_Enum> _457244_e, jule::Ptr<_1aa2d51c4_Token>* _457259_token) {
	if ((_457244_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1a6023763_Prim> _45762_p = _1a601cd01_Prim((*((*(_457244_e))._field_Kind))._field_Kind.ptr());;
	if (_1a6026c2d_IsStr(_45762_p.ptr())) {
		return;;
	};
	_1a60149a7_applyCastKindModel(_457230_d, &((*(*(_457244_e))._field_Kind.alloc)._field_Kind), _457259_token);
}



inline void _1a6015a63_castConstByType(jule::Str* _458321_t, jule::Ptr<_1aa44cc98_Data>* _458334_d) {
	{
		
		if (_1a6e763c9_IsSigInt((*(_458321_t)))) {
			_case_begin_1bc882b05:;
			{
				{
					auto _match_expr{ _1a6e6ba2e_BitsizeOf(_1a6e6b765_RealKindOf((*(_458321_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1bc8836b6:;
						{
							_1a6e7a532_SetI64((*((*(_458334_d))))._field_Constant.ptr(), _1a6e79c5c_AsI64((*((*(_458334_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1bc88373d:;
						{
							_1a6e7a532_SetI64((*((*(_458334_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I32>(_1a6e79c5c_AsI64((*((*(_458334_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1bc8837a4:;
						{
							_1a6e7a532_SetI64((*((*(_458334_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I16>(_1a6e79c5c_AsI64((*((*(_458334_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1bc88381a:;
						{
							_1a6e7a532_SetI64((*((*(_458334_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I8>(_1a6e79c5c_AsI64((*((*(_458334_d))))._field_Constant))));
						}
					}
					_match_end_1bc883397:;
				};
			}
		}
		else if (_1a6e766d7_IsUnsigInt((*(_458321_t)))) {
			_case_begin_1bc882b9e:;
			{
				{
					auto _match_expr{ _1a6e6ba2e_BitsizeOf(_1a6e6b765_RealKindOf((*(_458321_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1bc8877ec:;
						{
							_1a6e7a7da_SetU64((*((*(_458334_d))))._field_Constant.ptr(), _1a6e79ee3_AsU64((*((*(_458334_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1bc887874:;
						{
							_1a6e7a7da_SetU64((*((*(_458334_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U32>(_1a6e79ee3_AsU64((*((*(_458334_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1bc8878da:;
						{
							_1a6e7a7da_SetU64((*((*(_458334_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U16>(_1a6e79ee3_AsU64((*((*(_458334_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1bc887951:;
						{
							_1a6e7a7da_SetU64((*((*(_458334_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U8>(_1a6e79ee3_AsU64((*((*(_458334_d))))._field_Constant))));
						}
					}
					_match_end_1bc8867b8:;
				};
			}
		}
		else if (_1a6e76ce2_IsFloat((*(_458321_t)))) {
			_case_begin_1bc882c15:;
			{
				{
					auto _match_expr{ _1a6e6ba2e_BitsizeOf(_1a6e6b765_RealKindOf((*(_458321_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1bc887c92:;
						{
							_1a6e7b104_SetF64((*((*(_458334_d))))._field_Constant.ptr(), _1a6e7a279_AsF64((*((*(_458334_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1bc88b955:;
						{
							_1a6e7b104_SetF64((*((*(_458334_d))))._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F32>(_1a6e7a279_AsF64((*((*(_458334_d))))._field_Constant))));
						}
					}
					_match_end_1bc88a8ee:;
				};
			}
		}
		_match_end_1bc8829a1:;
	};
}



inline void _1a6016080_updateModelToGenericIns(jule::Any* _461733_m, jule::Ptr<_1aa334597_FnIns>* _461752_f) {
	{
		auto &_match_expr{ (*(_461733_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bc883012:;
			{
				(*(_461733_m))=jule::Any((*(_461752_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1bc88bd0c:;
			{
				(*((*(_461733_m)).cast_ptr<_1aa32837c_StructSubIdentExprModel>(&__jule_any_type101)))._field_Method=(*(_461752_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1bc88309a:;
			{
				(*((*(_461733_m)).cast_ptr<_1aa328723_StructStaticIdentExprModel>(&__jule_any_type99)))._field_Method=(*(_461752_f));
			}
		}
		_match_end_1bc88bdd9:;
	};
}



inline jule::Bool _1a60162e4_pushSubIdentFromExpr(jule::Any _462829_expr, jule::Ptr<_1aa2eb053_SubIdentTypeDecl>* _462850_t) {
	{
		auto &_match_expr{ _462829_expr };
		
		if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1bc88ed21:;
			{
				jule::Ptr<_1aa3012cd_IdentExpr> _46317_e = _462829_expr.unsafe_cast_ptr<_1aa3012cd_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1aa2eac89_IdentTypeDecl>> &__jule_push_dest = (*((*(_462850_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1aa2eac89_IdentTypeDecl>(_1aa2eac89_IdentTypeDecl{._field_Token=(*(_46317_e))._field_Token, ._field_Ident=(*_46317_e.alloc)._field_Ident, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>>(nullptr)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1bc890915:;
			{
				jule::Ptr<_1aa302ac6_SubIdentExpr> _46377_e = _462829_expr.unsafe_cast_ptr<_1aa302ac6_SubIdentExpr>();;
				if ((!(_1a60162e4_pushSubIdentFromExpr((*((*(_46377_e))._field_Expr))._field_Kind, _462850_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_1aa2eac89_IdentTypeDecl>> &__jule_push_dest = (*((*(_462850_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1aa2eac89_IdentTypeDecl>(_1aa2eac89_IdentTypeDecl{._field_Token=(*_46377_e.alloc)._field_Ident, ._field_Ident=(*((*_46377_e.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1aa2ea67e_TypeDecl>>(nullptr)})); };
			}
		}
		else {
			_case_begin_1bc8904b4:;
			{
				return false;;
			}
		}
		_match_end_1bc89045e:;
	};
	return true;;
}



inline jule::Str _1a60165ad_constoa(jule::Ptr<_1a6e77584_Const>* _465113_c) {
	{
		
		if (_1a6e7b588_IsI64((*(_465113_c)).ptr())) {
			_case_begin_1bc8937e7:;
			{
				return _1a6e69433_FmtInt(_1a6e78e8c_ReadI64((*(_465113_c)).ptr()), 10LL);;
			}
		}
		else if (_1a6e7b81e_IsU64((*(_465113_c)).ptr())) {
			_case_begin_1bc8936a4:;
			{
				return _1a6e6906a_FmtUint(_1a6e79223_ReadU64((*(_465113_c)).ptr()), 10LL);;
			}
		}
		else {
			_case_begin_1bc890b02:;
			{
				return jule::Str();;
			}
		}
		_match_end_1bc8929e4:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1a60169dc_evalEnumStatic(jule::Ptr<_1aa347753_Enum>* _466224_enm, jule::Ptr<_1aa346bd6_EnumItem>* _466241_item, jule::Ptr<_1aa2d51c4_Token>* _466263_token) {
	jule::Ptr<_1aa44cc98_Data> _46636_d = jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_466224_enm)), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data3)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
	if (((*(_466241_item)) != nullptr)) {
		(*(_46636_d))._field_Constant=jule::new_ptr<_1a6e77584_Const>((*(*((*((*((*(_466241_item))))._field_Value))._field_Data))._field_Constant.alloc));
		(*_46636_d.alloc)._field_Model=jule::Any((*_46636_d.alloc)._field_Constant, &__jule_any_type20);
		_1a6015777_applyCastModelByEnum(&(_46636_d), (*(_466224_enm)), _466263_token);
	};
	return _46636_d;;
}



inline jule::Ptr<_1aa3244cc_StructLitExprModel> _1a6016ca6_isLitBased(jule::Any* _467920_m) {
	{
		auto &_match_expr{ (*(_467920_m)) };
		
		if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1bc898445:;
			{
				return (*(_467920_m)).cast_ptr<_1aa3244cc_StructLitExprModel>(&__jule_any_type98);;
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1bc8984ab:;
			{
				return (*((*(_467920_m)).cast_ptr<_1aa3247c9_AllocStructLitExprModel>(&__jule_any_type115)))._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1bc898522:;
			{
				jule::Ptr<_1aa32837c_StructSubIdentExprModel> _46867_ssi = (*(_467920_m)).cast_ptr<_1aa32837c_StructSubIdentExprModel>(&__jule_any_type101);;
				return _1a6016ca6_isLitBased(&((*((*(_46867_ssi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1bc898588:;
			{
				jule::Ptr<_1aa324d5c_CastingExprModel> _46897_c = (*(_467920_m)).cast_ptr<_1aa324d5c_CastingExprModel>(&__jule_any_type96);;
				return _1a6016ca6_isLitBased(&((*((*(_46897_c))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1bc897ed3:;
			{
				return nullptr;;
			}
		}
		_match_end_1bc8956d9:;
	};
}



inline void _1a6017092_makeImplicitDeref(jule::Ptr<_1aa44cc98_Data>* _469627_d, jule::Ptr<_1aa2d51c4_Token> _469641_baseToken) {
	jule::Ptr<_1aa323b08_UnaryExprModel> _46976_unary = jule::new_ptr<_1aa323b08_UnaryExprModel>(_1aa323b08_UnaryExprModel{._field_Expr=jule::new_ptr<_1aa44cc98_Data>((*((*(_469627_d))))), ._field_Op=jule::new_ptr<_1aa2d51c4_Token>((*(_469641_baseToken)))});;
	(*((*(_46976_unary))._field_Op))._field_Id=static_cast<jule::U32>(62LLU);
	(*(*(_46976_unary))._field_Op.alloc)._field_Kind=jule::Str::lit("*", 1);
	(*((*(_469627_d))))._field_Model=jule::Any(_46976_unary, &__jule_any_type113);
}



inline void _1bbab44ec_updateRefer(jule::Ptr<_1aa337732_ReferenceStack> _470723_ref, jule::Ptr<_1aa334597_FnIns>* _470746_old, jule::Ptr<_1aa334597_FnIns>* _470759_new) {
	{
		auto expr = &((*(_470723_ref))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbab5dd3:;
		if (it != expr_end) {
			jule::I32 _47086_i = it - expr->begin();
			jule::Any _47089_sym = *it;
			{
				if ((__jule_any_type7_compare(_47089_sym, (*(_470746_old))))) {
					(*(_470723_ref))._field_buffer[_47086_i]=jule::Any((*(_470759_new)), &__jule_any_type7);
				};
			}
			_iter_next_1bbab5dd3:;
			++it;
			_47086_i++;
			goto _iter_begin_1bbab5dd3;
		}
		_iter_end_1bbab5dd3:;
	};
}



inline void _1a6017724_makeVariadic(jule::Ptr<_1aa44cc98_Data>* _471522_d, jule::Ptr<_1a601a64a_TypeKind> _471536_elem) {
	(*((*(_471522_d))))._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=(*_471536_elem.alloc)._field_BindIdent, ._field_Generic=(*(_471536_elem))._field_Generic, ._field_Variadic=true, ._field_Kind=(*_471536_elem.alloc)._field_Kind});
}



inline jule::Bool _1a6017b53_isVarCaptured(jule::Ptr<_1aa381160_scopeChecker> _472918_r, jule::Ptr<_1aa381160_scopeChecker> _472940_s, jule::Ptr<_1aa3e4d3e_Var> _472958_v) {
	if (((*(_472958_v))._field_Scope == nullptr)) {
		return false;;
	};
	for (;;) {
		{
			if (((*(_472940_s))._field_scope == (*_472958_v.alloc)._field_Scope)) {
				return false;;
			};
			if ((((*_472940_s.alloc)._field_parent == nullptr) || (_472940_s == _472918_r))) {
				goto _iter_end_1bc89eb11;
			};
			_472940_s=(*_472940_s.alloc)._field_parent;
		}
	_iter_next_1bc89eb11:;
	}
	_iter_end_1bc89eb11:;;
	return true;;
}



inline jule::Bool _1a60363e1_kindUsesGenerics(jule::Ptr<_1a601a64a_TypeKind>* _174226_k, jule::Slice<jule::Ptr<_1aa307889_GenericDecl>>* _174241_generics) {
	{
		auto expr = _174241_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc59c116:;
		if (it != expr_end) {
			jule::Ptr<_1aa307889_GenericDecl> *_17439_g = it;
			{
				if (static__1a6035ee5_exist(&((*((*(_17439_g))))._field_Ident), _174226_k)) {
					return true;;
				};
			}
			_iter_next_1bc59c116:;
			++it;
			goto _iter_begin_1bc59c116;
		}
		_iter_end_1bc59c116:;
	};
	return false;;
}



inline jule::Bool _1a60367a9_hasDirective(jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>>* _175222_directives, jule::Str _175253_tag) {
	{
		auto expr = _175222_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc8b7e4:;
		if (it != expr_end) {
			jule::Ptr<_1aa2e9a9b_Directive> _175314_dr = *it;
			{
				if (((*((*(_175314_dr))._field_Tag))._field_Kind == _175253_tag)) {
					return true;;
				};
			}
			_iter_next_1bcc8b7e4:;
			++it;
			goto _iter_begin_1bcc8b7e4;
		}
		_iter_end_1bcc8b7e4:;
	};
	return false;;
}



inline jule::Bool _1a6036a73_canGetPtr(jule::Ptr<_1aa44cc98_Data>* _176119_d) {
	{
		
		if ((!((*((*(_176119_d))))._field_Lvalue)) || _1aa44d6d3_IsConst((*(_176119_d)).ptr())) {
			_case_begin_1bcc8c7d4:;
			{
				return false;;
			}
		}
		else if ((_1a601e0dd_Fn((*((*(_176119_d))))._field_Kind.ptr()) != nullptr) || (_1a601d5a4_Enum((*((*(_176119_d))))._field_Kind) != nullptr)) {
			_case_begin_1bcc8cbd0:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1bcc8bb24:;
			{
				return true;;
			}
		}
		_match_end_1bcc8c00e:;
	};
}



inline jule::Bool _1a6036db4_isValidForSptrType(jule::Ptr<_1a601a64a_TypeKind>* _177328_t) {
	jule::Ptr<_1aa31e373_StructIns> _17746_s = _1a601e374_Struct((*(_177328_t)).ptr());;
	if ((((_17746_s != nullptr) && ((*_17746_s.alloc)._field_Decl != nullptr)) && (*(*(_17746_s))._field_Decl.alloc)._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1a603714a_isValidForRef(jule::Ptr<_1a601a64a_TypeKind>* _178223_t) {
	return (_1a601e0dd_Fn((*(_178223_t)).ptr()) == nullptr);;
}



inline jule::Bool _1a6037414_isBuiltinStrConvertable(jule::Ptr<_1a601a64a_TypeKind>* _178533_t) {
	return ((((!(_1a601ba14_Void((*(_178533_t)).ptr()))) && (_1a601e0dd_Fn((*(_178533_t)).ptr()) == nullptr)) && (_1a601eb27_Tup((*(_178533_t)).ptr()) == nullptr)) && (!(_1a601edad_comptime((*(_178533_t)).ptr()))));;
}



inline jule::Str _1a60376cd_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _178927_tokens) {
	if ((((*(_178927_tokens)).len() == 1LL) && ((*((*(_178927_tokens))[0LL]))._field_Id == static_cast<jule::U32>(31LLU)))) {
		return jule::Str::lit("std::unsafe", 11);;
	};
	jule::I32 _17936_n = 0LL;;
	{
		auto expr = _178927_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc936a8:;
		if (it != expr_end) {
			jule::Ptr<_1aa2d51c4_Token> *_17949_token = it;
			{
				_17936_n+=(*((*(_17949_token))))._field_Kind.len();
				_17936_n+=2LL;
			}
			_iter_next_1bcc936a8:;
			++it;
			goto _iter_begin_1bcc936a8;
		}
		_iter_end_1bcc936a8:;
	};
	_1ed486d49_StrBuilder _17986_s = static__1ed487146_New(_17936_n);;
	{
		auto expr = _178927_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc91376:;
		if (it != expr_end) {
			jule::I32 _17996_i = it - expr->begin();
			jule::Ptr<_1aa2d51c4_Token> *_17999_token = it;
			{
				_1ed4909ac_WriteStr(&_17986_s, (*((*(_17999_token))))._field_Kind);
				if ((((*(_178927_tokens)).len() - _17996_i) > 1LL)) {
					_1ed4909ac_WriteStr(&_17986_s, jule::Str::lit("::", 2));
				};
			}
			_iter_next_1bcc91376:;
			++it;
			_17996_i++;
			goto _iter_begin_1bcc91376;
		}
		_iter_end_1bcc91376:;
	};
	return _1ed4912a4_Str(&_17986_s);;
}



inline jule::Ptr<_1a6023763_Prim> _1a6037aa7_buildPrimType(jule::Str _180818_kind) {
	return jule::new_ptr<_1a6023763_Prim>(_1a6023763_Prim{._field_Kind=_180818_kind});;
}



inline void _1a6038190_applyImplicitCast(jule::Ptr<_1a601a64a_TypeKind>* _183627_dest, jule::Ptr<_1aa44cc98_Data>* _183649_d, jule::Ptr<_1aa2d51c4_Token>* _183664_token) {
	if (_1a601b77d_IsNil((*((*(_183649_d))))._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1a6023763_Prim> _18402_destPrim = _1a601cd01_Prim((*(_183627_dest)).ptr());;
	if (((_18402_destPrim != nullptr) && _1a6026eb4_IsAny(_18402_destPrim))) {
		jule::Ptr<_1a6023763_Prim> _18423_prim = _1a601cd01_Prim((*((*(_183649_d))))._field_Kind);;
		if (((_18423_prim == nullptr) || (!(_1a6026eb4_IsAny(_18423_prim.ptr()))))) {
			_1a6014d4d_applyCastKind(_183649_d, _183627_dest, _183664_token);
		};
		return;;
	};
	jule::Ptr<_1aa345047_Trait> _18492_dt = _1a601e60a_Trait((*(_183627_dest)).ptr());;
	if ((_18492_dt != nullptr)) {
		jule::Ptr<_1aa345047_Trait> _18513_bt = _1a601e60a_Trait((*((*(_183649_d))))._field_Kind);;
		if (((_18513_bt == nullptr) || (_18513_bt != _18492_dt))) {
			_1a60149a7_applyCastKindModel(_183649_d, _183627_dest, _183664_token);
			return;;
		};
	};
	if (((_1a601d83a_TypeEnum((*(_183627_dest)).ptr()) != nullptr) && (_1a601d83a_TypeEnum((*((*(_183649_d))))._field_Kind) == nullptr))) {
		_1a60149a7_applyCastKindModel(_183649_d, _183627_dest, _183664_token);
		return;;
	};
}



inline jule::Bool _1a6038459_validTypeForXof(jule::Ptr<_1a601a64a_TypeKind>* _186425_t) {
	return ((!(_1a601ba14_Void((*(_186425_t)).ptr()))) && (_1a601e0dd_Fn((*(_186425_t)).ptr()) == nullptr));;
}



inline __jule_tuple_x_1aa4475cd_SymbolTable__jule_tuple_s_1ada72b17_Log _1a603b56c_buildSymbols(jule::Ptr<_1aa2e876a_AST>* _1622_ast, jule::Trait* _1638_importer, jule::Ptr<_1aa33d6e4_symbolBuilder> _1662_owner) {
	__jule_tuple_x_1aa4475cd_SymbolTable__jule_tuple_s_1ada72b17_Log __jule_func_result;
	jule::Ptr<_1aa33d6e4_symbolBuilder> _176_sb = jule::new_ptr<_1aa33d6e4_symbolBuilder>(_1aa33d6e4_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_errors=jule::Slice<_1ada72b17_Log>(nullptr), ._field_ast=(*(_1622_ast)), ._field_table=jule::Ptr<_1aa4475cd_SymbolTable>(nullptr)});;
	_1aa344178_build(_176_sb);
	if (((*_176_sb.alloc)._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*_176_sb.alloc)._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = (*_176_sb.alloc)._field_errors;
	return __jule_func_result;;
}



inline void _1a603b89c_collectImplicitImports(jule::Ptr<_1aa3bb530_sema>* _3132_s, jule::Ptr<_1aa4475cd_SymbolTable>* _3147_file) {
	{
		auto expr = &((*((*(_3147_file))))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcdb8129:;
		if (it != expr_end) {
			jule::Ptr<_1aa39b0ae_ImportInfo> _3214_imp = *it;
			{
				if ((!(_1aa344541_isImplicitImport(_3214_imp)))) {
					goto _iter_end_1bcdb8129;
				};
				{
					auto &_match_expr{ (*(_3214_imp))._field_LinkPath };
					
					if (_match_expr == jule::Str::lit("std::runtime", 12)) {
						_case_begin_1bcdb92c3:;
						{
							(*((*((*(_3132_s))))._field_meta))._field_runtime=_3214_imp;
						}
					}
					else {
						_case_begin_1bcdb8899:;
						{
							jule::panic(jule::Str::lit("implementation mistake in implicit import collection, this panic call should be unreachable", 91) + jule::Str("\nlocation: std/jule/sema/analysis.jule:40:4"));;
						}
					}
					_match_end_1bcdb8e2c:;
				};
			}
			_iter_next_1bcdb8129:;
			++it;
			goto _iter_begin_1bcdb8129;
		}
		_iter_end_1bcdb8129:;
	};
}



inline __jule_tuple_x_1aa39ded5_Package__jule_tuple_s_1ada72b17_Log _1a603bccb_analyzePackage(jule::Slice<jule::Ptr<_1aa2e876a_AST>>* _4524_files, jule::Trait* _4544_importer, jule::I32* _4565_flags) {
	__jule_tuple_x_1aa39ded5_Package__jule_tuple_s_1ada72b17_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1aa4475cd_SymbolTable>> _476_tables = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa4475cd_SymbolTable>>::alloc(0LL, (*(_4524_files)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa4475cd_SymbolTable>(nullptr); __jule_collection; });;
	{
		auto expr = _4524_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcdb9ec7:;
		if (it != expr_end) {
			jule::Ptr<_1aa2e876a_AST> _4814_f = *it;
			{
				jule::Ptr<_1aa4475cd_SymbolTable> _497_table;
				jule::Slice<_1ada72b17_Log> _4918_errors;
				({
					__jule_tuple_x_1aa4475cd_SymbolTable__jule_tuple_s_1ada72b17_Log __jule_assign_result = _1a603b56c_buildSymbols(&(_4814_f), _4544_importer, nullptr);
					_497_table = __jule_assign_result.__jule_result_arg0;
					_4918_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_4918_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _4918_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_1aa4475cd_SymbolTable>> &__jule_push_dest = _476_tables; __jule_push_dest.push(_497_table); };
			}
			_iter_next_1bcdb9ec7:;
			++it;
			goto _iter_begin_1bcdb9ec7;
		}
		_iter_end_1bcdb9ec7:;
	};
	jule::Ptr<_1aa3bb530_sema> _566_sema = jule::new_ptr<_1aa3bb530_sema>(_1aa3bb530_sema{._field_errors=jule::Slice<_1ada72b17_Log>(nullptr), ._field_files=jule::Slice<jule::Ptr<_1aa4475cd_SymbolTable>>(nullptr), ._field_file=jule::Ptr<_1aa4475cd_SymbolTable>(nullptr), ._field_flags=(*(_4565_flags)), ._field_meta=jule::new_ptr<_1aa3ba908_commonSemaMeta>(_1aa3ba908_commonSemaMeta{._field_comptimeTypeInfos=jule::Slice<jule::Ptr<_1aa35ac50_comptimeTypeInfo>>(nullptr), ._field_runtime=jule::Ptr<_1aa39b0ae_ImportInfo>(nullptr)})});;
	jule::Ptr<_1aa4475cd_SymbolTable> _636_firstTable = _476_tables[0LL];;
	_1a603b89c_collectImplicitImports(&(_566_sema), &(_636_firstTable));
	_1aa3e16dc_check(_566_sema, &(_476_tables));
	if (((*_566_sema.alloc)._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = (*_566_sema.alloc)._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1aa39ded5_Package> _716_pkg = jule::new_ptr<_1aa39ded5_Package>(_1aa39ded5_Package{._field_Files=(*_566_sema.alloc)._field_files});;
	__jule_func_result.__jule_result_arg0 = _716_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1aa39ded5_Package__jule_tuple_s_1ada72b17_Log _1a603c282_AnalyzePackage(jule::Slice<jule::Ptr<_1aa2e876a_AST>> _9523_files, jule::Trait _9542_importer, jule::I32 _9562_flags) {
	__jule_tuple_x_1aa39ded5_Package__jule_tuple_s_1ada72b17_Log __jule_func_result;
	if ((_9523_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1a603bccb_analyzePackage(&(_9523_files), &(_9542_importer), &(_9562_flags)));
return __jule_func_result;;
}



inline jule::Ptr<_1aa334597_FnIns> _1aa5db0ac_findBuiltinFunc(jule::Str* _2621_ident) {
	{
		auto &_match_expr{ (*(_2621_ident)) };
		
		if (_match_expr == jule::Str::lit("out", 3)) {
			_case_begin_1bcdc507b:;
			{
				static jule::Ptr<_1aa334597_FnIns> _2914_f = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>(_1aa5e1b1d_builtinCallerOut), ._field_reloaded=false});;
				return _2914_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("outln", 5)) {
			_case_begin_1bcdc50e2:;
			{
				static jule::Ptr<_1aa334597_FnIns> _3214_f = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>(_1aa5e204c_builtinCallerOutln), ._field_reloaded=false});;
				return _3214_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("new", 3)) {
			_case_begin_1bcdc5158:;
			{
				static jule::Ptr<_1aa334597_FnIns> _3514_f = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>(_1aa5e247b_builtinCallerNew), ._field_reloaded=false});;
				return _3514_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("panic", 5)) {
			_case_begin_1bcdc51d0:;
			{
				static jule::Ptr<_1aa334597_FnIns> _3814_f = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>(_1aa5e28aa_builtinCallerPanic), ._field_reloaded=false});;
				return _3814_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("make", 4)) {
			_case_begin_1bcdc5356:;
			{
				static jule::Ptr<_1aa334597_FnIns> _4114_f = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>(_1aa5e301a_builtinCallerMake), ._field_reloaded=false});;
				return _4114_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("append", 6)) {
			_case_begin_1bcdc53bc:;
			{
				static jule::Ptr<_1aa334597_FnIns> _4414_f = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>(_1aa5e3339_builtinCallerAppend), ._field_reloaded=false});;
				return _4414_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("copy", 4)) {
			_case_begin_1bcdc5444:;
			{
				static jule::Ptr<_1aa334597_FnIns> _4714_f = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>(_1aa5e3c52_builtinCallerCopy), ._field_reloaded=false});;
				return _4714_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("len", 3)) {
			_case_begin_1bcdc54bb:;
			{
				static jule::Ptr<_1aa334597_FnIns> _5014_f = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>(_1aa5e53e6_builtinCallerLen), ._field_reloaded=false});;
				return _5014_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("cap", 3)) {
			_case_begin_1bcdc55dc:;
			{
				static jule::Ptr<_1aa334597_FnIns> _5314_f = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>(_1aa5e5b99_builtinCallerCap), ._field_reloaded=false});;
				return _5314_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("delete", 6)) {
			_case_begin_1bcdc5653:;
			{
				static jule::Ptr<_1aa334597_FnIns> _5614_f = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>(_1aa5e65b2_builtinCallerDelete), ._field_reloaded=false});;
				return _5614_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("assert", 6)) {
			_case_begin_1bcdc56b9:;
			{
				static jule::Ptr<_1aa334597_FnIns> _5914_f = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>(_1aa5e69e1_builtinCallerAssert), ._field_reloaded=false});;
				return _5914_f;;
			}
		}
		else {
			_case_begin_1bcdc4a81:;
			{
				return nullptr;;
			}
		}
		_match_end_1bcdc4e05:;
	};
}



inline jule::Ptr<_1a6019858_TypeAlias> _1aa5db3ba_primTypeAlias(jule::Ptr<_1a601a64a_TypeKind>* _6623_k) {
	return jule::new_ptr<_1a6019858_TypeAlias>(_1a6019858_TypeAlias{._field_Scope=jule::Ptr<_1aa30a6a0_ScopeTree>(nullptr), ._field_Public=true, ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=jule::Ptr<_1aa2d51c4_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Kind=jule::new_ptr<_1a6022d5b_TypeSymbol>(_1a6022d5b_TypeSymbol{._field_Decl=jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr), ._field_Kind=(*(_6623_k))}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>(nullptr)});;
}



inline jule::Ptr<_1aa3e4d3e_Var> _1aa5dec70_findBuiltinVar(jule::Str* _9420_ident) {
	{
		auto &_match_expr{ (*(_9420_ident)) };
		
		if (_match_expr == jule::Str::lit("nil", 3)) {
			_case_begin_1bcdcc935:;
			{
				static jule::Ptr<_1aa3e4d3e_Var> _9714_v = jule::new_ptr<_1aa3e4d3e_Var>(_1aa3e4d3e_Var{._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Token=jule::Ptr<_1aa2d51c4_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_Kind=jule::new_ptr<_1a6022d5b_TypeSymbol>(_1a6022d5b_TypeSymbol{._field_Decl=jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr), ._field_Kind=_1aa5db6c8_primNil}), ._field_Value=jule::new_ptr<_1aa44de20_Value>(_1aa44de20_Value{._field_Expr=jule::Ptr<_1aa2ee9b3_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1a6e7882c_NewNil()})}), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>(nullptr)});;
				return _9714_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("true", 4)) {
			_case_begin_1bcdcc9ce:;
			{
				static jule::Ptr<_1aa3e4d3e_Var> _11214_v = jule::new_ptr<_1aa3e4d3e_Var>(_1aa3e4d3e_Var{._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Token=jule::Ptr<_1aa2d51c4_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_Kind=(*(_1aa5e00b1_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1aa44de20_Value>(_1aa44de20_Value{._field_Expr=jule::Ptr<_1aa2ee9b3_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1a6e7808a_NewBool(true)})}), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>(nullptr)});;
				return _11214_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("false", 5)) {
			_case_begin_1bcdcca56:;
			{
				static jule::Ptr<_1aa3e4d3e_Var> _12514_v = jule::new_ptr<_1aa3e4d3e_Var>(_1aa3e4d3e_Var{._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Token=jule::Ptr<_1aa2d51c4_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_Kind=(*(_1aa5e00b1_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1aa44de20_Value>(_1aa44de20_Value{._field_Expr=jule::Ptr<_1aa2ee9b3_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1a6e7808a_NewBool(false)})}), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1aa3e4d3e_Var>>(nullptr)});;
				return _12514_v;;
			}
		}
		else {
			_case_begin_1bcdcc182:;
			{
				return nullptr;;
			}
		}
		_match_end_1bcdc6632:;
	};
}



inline jule::Ptr<_1a6019858_TypeAlias> _1aa5e00b1_findBuiltinTypeAlias(jule::Str _14225_ident) {
	{
		auto &_match_expr{ _14225_ident };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1bcdd27e7:;
			{
				static jule::Ptr<_1a6019858_TypeAlias> _14514_t = _1aa5db3ba_primTypeAlias(&(_1aa5dbc7d_primAny));;
				return _14514_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_1bcdd296d:;
			{
				static jule::Ptr<_1a6019858_TypeAlias> _14814_t = _1aa5db3ba_primTypeAlias(&(_1aa5dc07a_primStr));;
				return _14814_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_1bcdd29d4:;
			{
				static jule::Ptr<_1a6019858_TypeAlias> _15114_t = _1aa5db3ba_primTypeAlias(&(_1aa5dc333_primBool));;
				return _15114_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1bcdd2a6c:;
			{
				static jule::Ptr<_1a6019858_TypeAlias> _15414_t = _1aa5db3ba_primTypeAlias(&(_1aa5dc5db_primUintptr));;
				return _15414_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1bcdd2ad3:;
			{
				static jule::Ptr<_1a6019858_TypeAlias> _15714_t = _1aa5db3ba_primTypeAlias(&(_1aa5dc894_primUint));;
				return _15714_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1bcdd2b49:;
			{
				static jule::Ptr<_1a6019858_TypeAlias> _16014_t = _1aa5db3ba_primTypeAlias(&(_1aa5dcc5c_primInt));;
				return _16014_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1bcdd2bb0:;
			{
				static jule::Ptr<_1a6019858_TypeAlias> _16314_t = _1aa5db3ba_primTypeAlias(&(_1aa5dce9e_primI8));;
				return _16314_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1bcdd2c37:;
			{
				static jule::Ptr<_1a6019858_TypeAlias> _16614_t = _1aa5db3ba_primTypeAlias(&(_1aa5dd246_primI16));;
				return _16614_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1bcdd2d14:;
			{
				static jule::Ptr<_1a6019858_TypeAlias> _16914_t = _1aa5db3ba_primTypeAlias(&(_1aa5dd7a7_primI64));;
				return _16914_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1bcdd2d8b:;
			{
				static jule::Ptr<_1a6019858_TypeAlias> _17214_t = _1aa5db3ba_primTypeAlias(&(_1aa5ddd18_primU16));;
				return _17214_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1bcdd2e13:;
			{
				static jule::Ptr<_1a6019858_TypeAlias> _17514_t = _1aa5db3ba_primTypeAlias(&(_1aa5de0c1_primU32));;
				return _17514_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1bcdd2e8a:;
			{
				static jule::Ptr<_1a6019858_TypeAlias> _17814_t = _1aa5db3ba_primTypeAlias(&(_1aa5de5aa_primU64));;
				return _17814_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1bcdd3012:;
			{
				static jule::Ptr<_1a6019858_TypeAlias> _18114_t = _1aa5db3ba_primTypeAlias(&(_1aa5de7ec_primF32));;
				return _18114_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1bcdd3089:;
			{
				static jule::Ptr<_1a6019858_TypeAlias> _18414_t = _1aa5db3ba_primTypeAlias(&(_1aa5dea0b_primF64));;
				return _18414_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("byte", 4) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1bcdd3111:;
			{
				static jule::Ptr<_1a6019858_TypeAlias> _18714_t = _1aa5db3ba_primTypeAlias(&(_1aa5dda60_primU8));;
				return _18714_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("rune", 4) || _match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1bcdd3188:;
			{
				static jule::Ptr<_1a6019858_TypeAlias> _19014_t = _1aa5db3ba_primTypeAlias(&(_1aa5dd4ee_primI32));;
				return _19014_t;;
			}
		}
		else {
			_case_begin_1bcdcd073:;
			{
				return nullptr;;
			}
		}
		_match_end_1bcdcd150:;
	};
}



inline jule::Any _1aa5e0347_findBuiltinDef(jule::Str* _19720_ident) {
	jule::Ptr<_1aa3e4d3e_Var> _1986_v = _1aa5dec70_findBuiltinVar(_19720_ident);;
	if ((_1986_v != nullptr)) {
		return jule::Any(_1986_v, &__jule_any_type8);;
	};
	jule::Ptr<_1aa334597_FnIns> _2026_f = _1aa5db0ac_findBuiltinFunc(_19720_ident);;
	if ((_2026_f != nullptr)) {
		return jule::Any(_2026_f, &__jule_any_type7);;
	};
	jule::Ptr<_1a6019858_TypeAlias> _2066_ta = _1aa5e00b1_findBuiltinTypeAlias((*(_19720_ident)));;
	if ((_2066_ta != nullptr)) {
		return jule::Any(_2066_ta, &__jule_any_type27);;
	};
	return nullptr;;
}



inline jule::Any _1aa5e0611_findBuiltinDefStdDebug(jule::Str* _21328_ident) {
	{
		auto &_match_expr{ (*(_21328_ident)) };
		
		if (_match_expr == jule::Str::lit("Out", 3)) {
			_case_begin_1bcddc901:;
			{
				static jule::Ptr<_1aa334597_FnIns> _21614_f = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>(_1aa5ea286_builtinCallerStdDebugOut), ._field_reloaded=false});;
				return jule::Any(_21614_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Outln", 5)) {
			_case_begin_1bcddc989:;
			{
				static jule::Ptr<_1aa334597_FnIns> _21914_f = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>(_1aa5ea6b5_builtinCallerStdDebugOutln), ._field_reloaded=false});;
				return jule::Any(_21914_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1bcddc329:;
			{
				return nullptr;;
			}
		}
		_match_end_1bcddb6d0:;
	};
}



inline jule::Any _1aa5e08ca_findBuiltinDefStdMem(jule::Str* _22626_ident) {
	{
		auto &_match_expr{ (*(_22626_ident)) };
		
		if (_match_expr == jule::Str::lit("SizeOf", 6)) {
			_case_begin_1bcdde2b5:;
			{
				static jule::Ptr<_1aa334597_FnIns> _22914_f = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>(_1aa5e8b8b_builtinCallerStdMemSizeOf), ._field_reloaded=false});;
				return jule::Any(_22914_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("AlignOf", 7)) {
			_case_begin_1bcdde628:;
			{
				static jule::Ptr<_1aa334597_FnIns> _23214_f = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>(_1aa5e90ba_builtinCallerStdMemAlignOf), ._field_reloaded=false});;
				return jule::Any(_23214_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Free", 4)) {
			_case_begin_1bcdde34d:;
			{
				static jule::Ptr<_1aa334597_FnIns> _23514_f = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>(_1aa5e94e9_builtinCallerStdMemFree), ._field_reloaded=false});;
				return jule::Any(_23514_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1bcdde4e6:;
			{
				return nullptr;;
			}
		}
		_match_end_1bcddccec:;
	};
}



inline jule::Any _1aa5e0ca4_findBuiltinDefStdComptime(jule::Str* _24231_ident) {
	{
		auto &_match_expr{ (*(_24231_ident)) };
		
		if (_match_expr == jule::Str::lit("TypeOf", 6)) {
			_case_begin_1bcddea46:;
			{
				static jule::Ptr<_1aa334597_FnIns> _24514_f = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>(_1aa5e6e20_builtinCallerStdComptimeTypeOf), ._field_reloaded=false});;
				return jule::Any(_24514_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("ValueOf", 7)) {
			_case_begin_1bcde68e9:;
			{
				static jule::Ptr<_1aa334597_FnIns> _24814_f = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>(_1aa5e7591_builtinCallerStdComptimeValueOf), ._field_reloaded=false});;
				return jule::Any(_24814_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Line", 4)) {
			_case_begin_1bcde6960:;
			{
				static jule::Ptr<_1aa334597_FnIns> _25114_f = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>(_1aa5e79c0_builtinCallerStdComptimeLine), ._field_reloaded=false});;
				return jule::Any(_25114_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("File", 4)) {
			_case_begin_1bcddeaac:;
			{
				static jule::Ptr<_1aa334597_FnIns> _25414_f = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>(_1aa5e7dee_builtinCallerStdComptimeFile), ._field_reloaded=false});;
				return jule::Any(_25414_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Files", 5)) {
			_case_begin_1bcddeb23:;
			{
				static jule::Ptr<_1aa334597_FnIns> _25714_f = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>(_1aa5e832d_builtinCallerStdComptimeFiles), ._field_reloaded=false});;
				return jule::Any(_25714_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("TypeAlias", 9)) {
			_case_begin_1bcde6a2b:;
			{
				static jule::Ptr<_1aa334597_FnIns> _26014_f = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>(_1aa5e875c_builtinCallerStdComptimeTypeAlias), ._field_reloaded=false});;
				return jule::Any(_26014_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1bcde67c8:;
			{
				return nullptr;;
			}
		}
		_match_end_1bcde672e:;
	};
}



inline jule::Any _1aa5e0ee6_findBuiltinDefStdJuleIntegrated(jule::Str* _26737_ident) {
	{
		auto &_match_expr{ (*(_26737_ident)) };
		
		if (_match_expr == jule::Str::lit("ToStr", 5)) {
			_case_begin_1bcde6cc3:;
			{
				static jule::Ptr<_1aa334597_FnIns> _27014_f = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aa3315b6_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>(_1aa5e9928_builtinCallerStdJuleIntegratedToStr), ._field_reloaded=false});;
				return jule::Any(_27014_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Emit", 4)) {
			_case_begin_1bcdeacd8:;
			{
				static jule::Ptr<_1aa334597_FnIns> _27314_f = jule::new_ptr<_1aa334597_FnIns>(_1aa334597_FnIns{._field_Owner=jule::Ptr<_1aa31e373_StructIns>(nullptr), ._field_Decl=jule::new_ptr<_1aa3315b6_Fn>(_1aa3315b6_Fn{._field_sema=jule::Ptr<_1aa3bb530_sema>(nullptr), ._field_Token=jule::Ptr<_1aa2d51c4_Token>(nullptr), ._field_Global=false, ._field_Unsafety=false, ._field_Public=false, ._field_Binded=false, ._field_Statically=false, ._field_Exceptional=false, ._field_Ident=jule::Str(), ._field_Directives=jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>>(nullptr), ._field_Scope=jule::Ptr<_1aa30a6a0_ScopeTree>(nullptr), ._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa307889_GenericDecl>>::alloc(1LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa307889_GenericDecl>(nullptr); __jule_collection; }), ._field_Result=jule::Ptr<_1aa32e3a5_RetType>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa32eae2_Param>>(nullptr), ._field_Owner=jule::Ptr<_1aa31b518_Struct>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1aa334597_FnIns>>(nullptr)}), ._field_Generics=jule::Slice<jule::Ptr<_1a6018c64_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa33351e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1a601a64a_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1aa378ba2_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aa337732_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1aa44cc98_Data>,jule::Ptr<_1aa44e9c0_eval>*,jule::Ptr<_1aa3036dc_FnCallExpr>*,jule::Ptr<_1aa44cc98_Data>*>(_1aa5e9d57_builtinCallerStdJuleIntegratedEmit), ._field_reloaded=false});;
				return jule::Any(_27314_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1bcdeabb7:;
			{
				return nullptr;;
			}
		}
		_match_end_1bcdeaac9:;
	};
}



inline jule::Any _1aa5e136a_findPackageBuiltinDef(jule::Str* _28527_linkPath, jule::Str* _28543_ident) {
	{
		auto &_match_expr{ (*(_28527_linkPath)) };
		
		if (_match_expr == jule::Str::lit("std::comptime", 13)) {
			_case_begin_1bcdecdc8:;
			{
				return _1aa5e0ca4_findBuiltinDefStdComptime(_28543_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::debug", 10)) {
			_case_begin_1bcdece3e:;
			{
				return _1aa5e0611_findBuiltinDefStdDebug(_28543_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::mem", 8)) {
			_case_begin_1bcdecea5:;
			{
				return _1aa5e08ca_findBuiltinDefStdMem(_28543_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::jule::integrated", 21)) {
			_case_begin_1bcded01b:;
			{
				return _1aa5e0ee6_findBuiltinDefStdJuleIntegrated(_28543_ident);;
			}
		}
		else {
			_case_begin_1bcdeb03b:;
			{
				return nullptr;;
			}
		}
		_match_end_1bcdeca76:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa5e16de_builtinCallerError(jule::Ptr<_1aa44e9c0_eval>* _30028_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _30043_fc) {
	if (((*((*(_30043_fc))))._field_Args.len() < 1LL)) {
		_1aa450053_pushErr((*(_30028_e)).ptr(), (*((*(_30043_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("err", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_30043_fc))))._field_Args.len() > 1LL)) {
		_1aa450053_pushErr((*(_30028_e)).ptr(), (*((*((*(_30043_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("error", 5), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1aa44cc98_Data> _3086_expr = _1aa46cc63_evalExpr((*(_30028_e)), (*((*(_30043_fc))))._field_Args[0LL]);;
	if ((_3086_expr == nullptr)) {
		return nullptr;;
	};
	if (_1aa44d1b6_IsNil(_3086_expr.ptr())) {
		_1aa450053_pushErr((*(_30028_e)).ptr(), (*((*((*(_30043_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("you cannot call error function with nil", 39), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1aa44cc98_Data> _3176_d = _1a601505c_buildVoidData();;
	(*(_3176_d))._field_Model=jule::Any(jule::new_ptr<_1aa32c00c_BuiltinErrorCallExprModel>(_1aa32c00c_BuiltinErrorCallExprModel{._field_Func=jule::Ptr<_1aa334597_FnIns>(nullptr), ._field_Err=_3086_expr}), &__jule_any_type30);
	return _3176_d;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa5e1b1d_builtinCallerOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _32226_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _32241_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	if (((*((*(_32241_fc))))._field_Args.len() < 1LL)) {
		_1aa450053_pushErr((*(_32226_e)).ptr(), (*((*(_32241_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("v", 1), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_32241_fc))))._field_Args.len() > 1LL)) {
		_1aa450053_pushErr((*(_32226_e)).ptr(), (*((*((*(_32241_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("out", 3), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1aa44cc98_Data> _3316_expr = _1aa46cc63_evalExpr((*(_32226_e)), (*((*(_32241_fc))))._field_Args[0LL]);;
	if ((_3316_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a6037414_isBuiltinStrConvertable(&((*(_3316_expr))._field_Kind))))) {
		_1aa450053_pushErr((*(_32226_e)).ptr(), (*((*((*(_32241_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa44cc98_Data> _3416_d = _1a601505c_buildVoidData();;
	(*(_3416_d))._field_Model=jule::Any(jule::new_ptr<_1aa3292c3_BuiltinOutCallExprModel>(_1aa3292c3_BuiltinOutCallExprModel{._field_Expr=(*(_3316_expr))._field_Model, ._field_Debug=false}), &__jule_any_type34);
	return _3416_d;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa5e204c_builtinCallerOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _34628_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _34643_fc, jule::Ptr<_1aa44cc98_Data>* _34665_d) {
	(*(_34665_d))=_1aa5e1b1d_builtinCallerOut(nullptr, _34628_e, _34643_fc, _34665_d);
	if (((*(_34665_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*(_34665_d))))._field_Model=jule::Any(jule::new_ptr<_1aa32969c_BuiltinOutlnCallExprModel>(_1aa32969c_BuiltinOutlnCallExprModel{._field_Expr=(*((*((*(_34665_d))))._field_Model.cast_ptr<_1aa3292c3_BuiltinOutCallExprModel>(&__jule_any_type34)))._field_Expr, ._field_Debug=false}), &__jule_any_type35);
	return (*(_34665_d));;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa5e247b_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _35826_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _35841_fc, jule::Ptr<_1aa44cc98_Data>* _35863_d) {
	if (((*((*(_35841_fc))))._field_Args.len() < 1LL)) {
		_1aa450053_pushErr((*(_35826_e)).ptr(), (*((*(_35841_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_35841_fc))))._field_Args.len() > 2LL)) {
		_1aa450053_pushErr((*(_35826_e)).ptr(), (*((*((*(_35841_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("new", 3), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1aa44cc98_Data> _3676_t = _1aa46c290_eval1((*(_35826_e)), (*((*(_35841_fc))))._field_Args[0LL]);;
	if ((_3676_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_3676_t))._field_Decl))) {
		_1aa450053_pushErr((*(_35826_e)).ptr(), (*((*((*(_35841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1a6036db4_isValidForSptrType(&((*(_3676_t))._field_Kind))))) {
		jule::Ptr<_1aa31e373_StructIns> _3787_s = _1a601e374_Struct((*(_3676_t))._field_Kind.ptr());;
		if ((((_3787_s != nullptr) && ((*_3787_s.alloc)._field_Decl != nullptr)) && (*(*(_3787_s))._field_Decl.alloc)._field_Binded)) {
			_1aa450053_pushErr((*(_35826_e)).ptr(), (*((*((*(_35841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*((*(_35863_d))))._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a602728e_Sptr>(_1a602728e_Sptr{._field_Elem=(*(_3676_t))._field_Kind}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data23)});
	if (((*((*(_35841_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1a601a64a_TypeKind> _3927_old = (*((*(_35826_e))))._field_prefix;;
		(*((*(_35826_e))))._field_prefix=(*(_3676_t))._field_Kind;
		jule::Ptr<_1aa44cc98_Data> _3957_init = _1aa46cc63_evalExpr((*(_35826_e)), (*((*(_35841_fc))))._field_Args[1LL]);;
		(*((*(_35826_e))))._field_prefix=_3927_old;
		if ((_3957_init != nullptr)) {
			jule::Ptr<_1aa2d51c4_Token> _4008_token = (*((*((*(_35841_fc))))._field_Args[1LL]))._field_Token;;
			;
			_1aa3d1534_checkValidityForInitExpr((*((*(_35826_e))))._field_s, (!((*((*(_35826_e))))._field_immutable)), false, &((*(_3676_t))._field_Kind), &(_3957_init), &(_4008_token));
			_1aa3cbc9e_checkAssignType((*((*(_35826_e))))._field_s, false, &((*(_3676_t))._field_Kind), &(_3957_init), _4008_token);
			(*((*(_35863_d))))._field_Model=jule::Any(jule::new_ptr<_1aa329a76_BuiltinNewCallExprModel>(_1aa329a76_BuiltinNewCallExprModel{._field_Kind=(*(_3676_t))._field_Kind, ._field_Init=(*_3957_init.alloc)._field_Model}), &__jule_any_type116);
		};
	} else {
		(*((*(_35863_d))))._field_Model=jule::Any(jule::new_ptr<_1aa329a76_BuiltinNewCallExprModel>(_1aa329a76_BuiltinNewCallExprModel{._field_Kind=(*(_3676_t))._field_Kind, ._field_Init=jule::Any(nullptr)}), &__jule_any_type116);
	};
	return (*(_35863_d));;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa5e28aa_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _42028_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _42043_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	if (((*((*(_42043_fc))))._field_Args.len() < 1LL)) {
		_1aa450053_pushErr((*(_42028_e)).ptr(), (*((*(_42043_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("message", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_42043_fc))))._field_Args.len() > 1LL)) {
		_1aa450053_pushErr((*(_42028_e)).ptr(), (*((*((*(_42043_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("panic", 5), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1aa44cc98_Data> _4296_expr = _1aa46cc63_evalExpr((*(_42028_e)), (*((*(_42043_fc))))._field_Args[0LL]);;
	if ((_4296_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1a601cd01_Prim((*(_4296_expr))._field_Kind.ptr()) == nullptr) || (!(_1a6026c2d_IsStr(_1a601cd01_Prim((*(_4296_expr))._field_Kind).ptr()))))) {
		_1aa450053_pushErr((*(_42028_e)).ptr(), (*((*(_42043_fc))))._field_Token, jule::Str::lit("panic function only accepts strings", 35), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1aa44cc98_Data> _4386_d = _1a601505c_buildVoidData();;
	(*(_4386_d))._field_Model=jule::Any(jule::new_ptr<_1aa329e50_BuiltinPanicCallExprModel>(_1aa329e50_BuiltinPanicCallExprModel{._field_Token=(*((*(_42043_fc))))._field_Token, ._field_Expr=(*(_4296_expr))._field_Model}), &__jule_any_type36);
	return _4386_d;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa5e301a_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _44627_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _44642_fc, jule::Ptr<_1aa44cc98_Data>* _44664_d) {
	if (((*((*(_44642_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_44642_fc))))._field_Args.len() == 1LL)) {
			_1aa450053_pushErr((*(_44627_e)).ptr(), (*((*(_44642_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("size", 4), &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		};
		_1aa450053_pushErr((*(_44627_e)).ptr(), (*((*(_44642_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type, size", 10), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	} else if (((*((*(_44642_fc))))._field_Args.len() > 3LL)) {
		_1aa450053_pushErr((*(_44627_e)).ptr(), (*((*((*(_44642_fc))))._field_Args[3LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("make", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa44cc98_Data> _4596_t = _1aa46be4e_evalExprKind((*(_44627_e)), (*((*((*(_44642_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4596_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4596_t))._field_Decl))) {
		_1aa450053_pushErr((*(_44627_e)).ptr(), (*((*((*(_44642_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_1a601dd57_Slc((*(_4596_t))._field_Kind.ptr()) == nullptr)) {
		_1aa450053_pushErr((*(_44627_e)).ptr(), (*((*((*(_44642_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_4596_t))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("make", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	(*((*(_44664_d))))._field_Kind=(*(_4596_t))._field_Kind;
	jule::Ptr<_1aa44cc98_Data> _4746_lenExpr = _1aa46cc63_evalExpr(_1aa3cb3ec_evalp((*((*(_44627_e))))._field_s, (*((*(_44627_e))))._field_lookup, (*(_4596_t))._field_Kind), (*((*(_44642_fc))))._field_Args[1LL]);;
	if ((_4746_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1aa458c3d_checkIntegerIndexingByData((*(_44627_e)).ptr(), &(_4746_lenExpr), (*((*((*(_44642_fc))))._field_Args[1LL]))._field_Token);
	jule::Ptr<_1aa32a8ac_BuiltinMakeCallExprModel> _4816_model = jule::new_ptr<_1aa32a8ac_BuiltinMakeCallExprModel>(_1aa32a8ac_BuiltinMakeCallExprModel{._field_Kind=(*(_4596_t))._field_Kind, ._field_Len=(*(_4746_lenExpr))._field_Model, ._field_Cap=jule::Any(nullptr)});;
	(*((*(_44664_d))))._field_Model=jule::Any(_4816_model, &__jule_any_type117);
	if (((*((*(_44642_fc))))._field_Args.len() == 3LL)) {
		jule::Ptr<_1aa44cc98_Data> _4877_capExpr = _1aa46cc63_evalExpr(_1aa3cb3ec_evalp((*((*(_44627_e))))._field_s, (*((*(_44627_e))))._field_lookup, (*(_4596_t))._field_Kind), (*((*(_44642_fc))))._field_Args[2LL]);;
		if ((_4877_capExpr == nullptr)) {
			return (*(_44664_d));;
		};
		_1aa458c3d_checkIntegerIndexingByData((*(_44627_e)).ptr(), &(_4877_capExpr), (*((*((*(_44642_fc))))._field_Args[2LL]))._field_Token);
		(*(_4816_model))._field_Cap=(*(_4877_capExpr))._field_Model;
	};
	return (*(_44664_d));;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa5e3339_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _49729_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _49744_fc, jule::Ptr<_1aa44cc98_Data>* _49766_d) {
	if (((*((*(_49744_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_49744_fc))))._field_Args.len() == 1LL)) {
			_1aa450053_pushErr((*(_49729_e)).ptr(), (*((*(_49744_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("values", 6), &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		};
		_1aa450053_pushErr((*(_49729_e)).ptr(), (*((*(_49744_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa2ee9b3_Expr> _5076_firstArg = (*((*(_49744_fc))))._field_Args[0LL];;
	jule::Ptr<_1aa44cc98_Data> _5086_t = _1aa46cc63_evalExpr((*(_49729_e)), _5076_firstArg);;
	if ((_5086_t == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a6027c62_Slc> _5136_s = _1a601dd57_Slc((*(_5086_t))._field_Kind.ptr());;
	if ((_5136_s == nullptr)) {
		_1aa450053_pushErr((*(_49729_e)).ptr(), (*(_5076_firstArg))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	;
	;
	if (_1aa3d1534_checkValidityForInitExpr((*((*(_49729_e))))._field_s, true, false, &((*(_5086_t))._field_Kind), &(_5086_t), &((*_5076_firstArg.alloc)._field_Token))) {
		_1aa3cbc9e_checkAssignType((*((*(_49729_e))))._field_s, false, &((*(_5086_t))._field_Kind), &(_5086_t), (*_5076_firstArg.alloc)._field_Token);
	};
	jule::Ptr<_1a601a64a_TypeKind> _5286_prefix = (*((*(_49729_e))))._field_prefix;;
	(*((*(_49729_e))))._field_prefix=(*(_5086_t))._field_Kind;
	__JULE_DEFER({
		(*((*(_49729_e))))._field_prefix=_5286_prefix;
	});;
	(*(_49766_d))=jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=(*(_5086_t))._field_Kind, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});
	jule::Ptr<_1aa2ee9b3_Expr> _5366_secondArg = (*((*(_49744_fc))))._field_Args[1LL];;
	{
		auto &_match_expr{ (*(_5366_secondArg))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1bce37693:;
			{
				if (((*((*(_49744_fc))))._field_Args.len() > 2LL)) {
					_1aa450053_pushErr((*(_49729_e)).ptr(), (*((*((*(_49744_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1aa44cc98_Data> _5437_e1 = _1aa46cc63_evalExpr((*(_49729_e)), (*((*(_5366_secondArg))._field_Kind.unsafe_cast_ptr<_1aa301e49_VariadicExpr>()))._field_Expr);;
				if ((_5437_e1 == nullptr)) {
					return nullptr;;
				};
				if (((_1a601cd01_Prim((*(_5136_s))._field_Elem.ptr()) != nullptr) && _1a602518d_IsU8(_1a601cd01_Prim((*(_5136_s))._field_Elem).ptr()))) {
					if (((_1a601cd01_Prim((*(_5437_e1))._field_Kind) != nullptr) && _1a6026c2d_IsStr(_1a601cd01_Prim((*(_5437_e1))._field_Kind).ptr()))) {
						_1a6017724_makeVariadic(&(_5437_e1), _1aa5dda60_primU8);
						(*((*(_49766_d))))._field_Model=jule::Any(jule::new_ptr<_1aa32ac86_BuiltinAppendCallExprModel>(_1aa32ac86_BuiltinAppendCallExprModel{._field_Dest=(*(_5086_t))._field_Model, ._field_Elements=(*(_5437_e1))._field_Model}), &__jule_any_type33);
						return (*(_49766_d));;
					};
				};
				if ((!(_1a601ca6a_Variadicable((*(_5437_e1))._field_Kind)))) {
					_1aa450053_pushErr((*(_49729_e)).ptr(), (*(_5366_secondArg))._field_Token, jule::Str::lit("type @ is not variadicable", 26), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_5437_e1))._field_Kind), &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				_1a6017724_makeVariadic(&(_5437_e1), (*(_5136_s))._field_Elem);
				if (_1aa3d1534_checkValidityForInitExpr((*((*(_49729_e))))._field_s, true, false, &((*(_5136_s))._field_Elem), &(_5437_e1), &((*_5366_secondArg.alloc)._field_Token))) {
					_1aa3cbc9e_checkAssignType((*((*(_49729_e))))._field_s, false, &((*(_5136_s))._field_Elem), &(_5437_e1), (*_5366_secondArg.alloc)._field_Token);
				};
				(*((*(_49766_d))))._field_Model=jule::Any(jule::new_ptr<_1aa32ac86_BuiltinAppendCallExprModel>(_1aa32ac86_BuiltinAppendCallExprModel{._field_Dest=(*(_5086_t))._field_Model, ._field_Elements=(*(_5437_e1))._field_Model}), &__jule_any_type33);
				return (*(_49766_d));;
			}
		}
		_match_end_1bce3762c:;
	};
	jule::Ptr<_1aa44cc98_Data> _5776_e1 = _1aa46cc63_evalExpr((*(_49729_e)), _5366_secondArg);;
	if ((_5776_e1 == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1aa325ad8_SliceExprModel> _5826_slice = jule::new_ptr<_1aa325ad8_SliceExprModel>(_1aa325ad8_SliceExprModel{._field_ElemKind=(*(_5136_s))._field_Elem, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, ((*((*(_49744_fc))))._field_Args.len() - 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
	{
		auto expr = (*((*(_49744_fc))))._field_Args.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1bce4365a:;
		if (it != expr_end) {
			jule::Ptr<_1aa2ee9b3_Expr> _58614_arg = *it;
			{
				_5776_e1=_1aa46cc63_evalExpr((*(_49729_e)), _58614_arg);
				if ((_5776_e1 == nullptr)) {
					return nullptr;;
				};
				if ((*(*(_5776_e1))._field_Kind.alloc)._field_Variadic) {
					_1aa450053_pushErr((*(_49729_e)).ptr(), (*(_58614_arg))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
				};
				if (_1aa3d1534_checkValidityForInitExpr((*((*(_49729_e))))._field_s, true, false, &((*(_5136_s))._field_Elem), &(_5776_e1), &((*_58614_arg.alloc)._field_Token))) {
					_1aa3cbc9e_checkAssignType((*((*(_49729_e))))._field_s, false, &((*(_5136_s))._field_Elem), &(_5776_e1), (*_58614_arg.alloc)._field_Token);
				};
				(*(_5826_slice))._field_Elems=jule::append((*_5826_slice.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_5776_e1))._field_Model; __jule_collection; }));
			}
			_iter_next_1bce4365a:;
			++it;
			goto _iter_begin_1bce4365a;
		}
		_iter_end_1bce4365a:;
	};
	(*((*(_49766_d))))._field_Model=jule::Any(jule::new_ptr<_1aa32ac86_BuiltinAppendCallExprModel>(_1aa32ac86_BuiltinAppendCallExprModel{._field_Dest=(*(_5086_t))._field_Model, ._field_Elements=jule::Any(_5826_slice, &__jule_any_type80)}), &__jule_any_type33);
	return (*(_49766_d));;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa5e3823_callerCopySlice(jule::Ptr<_1aa44cc98_Data>* _60825_dest, jule::Ptr<_1aa44e9c0_eval>* _60843_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _60858_fc, jule::Ptr<_1aa44cc98_Data>* _60880_d) {
	if ((!((*((*(_60825_dest))))._field_Mutable))) {
		_1aa450053_pushErr((*(_60843_e)).ptr(), (*((*((*(_60858_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1aa44cc98_Data> _6136_src = _1aa46cc63_evalExpr((*(_60843_e)), (*((*(_60858_fc))))._field_Args[1LL]);;
	if ((_6136_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a6027c62_Slc> _6176_slc = _1a601dd57_Slc((*(_6136_src))._field_Kind.ptr());;
	if ((_6176_slc != nullptr)) {
		if (((!((*(_6136_src))._field_Mutable)) && _1a601c031_Mutable((*_6176_slc.alloc)._field_Elem.ptr()))) {
			_1aa450053_pushErr((*(_60843_e)).ptr(), (*((*((*(_60858_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		};
		if ((!(_1a601ad87_Equal((*((*(_60825_dest))))._field_Kind, (*(_6136_src))._field_Kind)))) {
			_1aa450053_pushErr((*(_60843_e)).ptr(), (*((*((*(_60858_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*((*(_60825_dest))))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str((*(_6136_src))._field_Kind), &__jule_any_type4); __jule_collection; }));
		};
	} else {
		jule::Ptr<_1a6023763_Prim> _6273_destPrim = _1a601cd01_Prim((*(_1a601dd57_Slc((*((*(_60825_dest))))._field_Kind)))._field_Elem.ptr());;
		jule::Ptr<_1a6023763_Prim> _6283_prim = _1a601cd01_Prim((*(_6136_src))._field_Kind);;
		if (((((_6273_destPrim == nullptr) || (_6283_prim == nullptr)) || (!(_1a6026c2d_IsStr(_6283_prim.ptr())))) || (!(_1a602518d_IsU8(_6273_destPrim.ptr()))))) {
			_1aa450053_pushErr((*(_60843_e)).ptr(), (*((*((*(_60858_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*((*(_60825_dest))))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str((*(_6136_src))._field_Kind), &__jule_any_type4); __jule_collection; }));
		};
	};
	(*((*(_60880_d))))._field_Kind=_1aa446379_lenKind();
	(*((*(_60880_d))))._field_Model=jule::Any(jule::new_ptr<_1aa32bb33_BuiltinCopyCallExprModel>(_1aa32bb33_BuiltinCopyCallExprModel{._field_Dest=(*(_60825_dest)), ._field_Src=_6136_src}), &__jule_any_type38);
	return (*(_60880_d));;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa5e3c52_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _64227_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _64242_fc, jule::Ptr<_1aa44cc98_Data>* _64264_d) {
	if (((*((*(_64242_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_64242_fc))))._field_Args.len() == 1LL)) {
			_1aa450053_pushErr((*(_64227_e)).ptr(), (*((*(_64242_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src", 3), &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		};
		_1aa450053_pushErr((*(_64227_e)).ptr(), (*((*(_64242_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_64242_fc))))._field_Args.len() > 2LL)) {
		_1aa450053_pushErr((*(_64227_e)).ptr(), (*((*((*(_64242_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("copy", 4), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1aa44cc98_Data> _6556_dest = _1aa46cc63_evalExpr((*(_64227_e)), (*((*(_64242_fc))))._field_Args[0LL]);;
	{
		
		if ((_6556_dest == nullptr)) {
			_case_begin_1bce58e45:;
			{
				return nullptr;;
			}
		}
		else if ((_1a601dd57_Slc((*(_6556_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bce58eab:;
			{
				return _1aa5e3823_callerCopySlice(&(_6556_dest), _64227_e, _64242_fc, _64264_d);;
			}
		}
		else {
			_case_begin_1bce57e00:;
			{
				_1aa450053_pushErr((*(_64227_e)).ptr(), (*((*((*(_64242_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bce563c6:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa5e40c6_callerLenSlice(jule::Ptr<_1aa44cc98_Data>* _66724_expr, jule::Ptr<_1aa44cc98_Data>* _66742_d) {
	(*((*(_66742_d))))._field_Kind=_1aa446379_lenKind();
	(*((*(_66742_d))))._field_Model=jule::Any(jule::new_ptr<_1aa32b083_BuiltinLenCallExprModel>(_1aa32b083_BuiltinLenCallExprModel{._field_Expr=(*(_66724_expr))}), &__jule_any_type118);
	return (*(_66742_d));;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa5e444a_callerLenMap(jule::Ptr<_1aa44cc98_Data>* _67522_expr, jule::Ptr<_1aa44cc98_Data>* _67540_d) {
	(*((*(_67540_d))))._field_Kind=_1aa446379_lenKind();
	(*((*(_67540_d))))._field_Model=jule::Any(jule::new_ptr<_1aa32b083_BuiltinLenCallExprModel>(_1aa32b083_BuiltinLenCallExprModel{._field_Expr=(*(_67522_expr))}), &__jule_any_type118);
	return (*(_67540_d));;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa5e47be_callerLenArr(jule::Ptr<_1aa44cc98_Data>* _68322_expr, jule::Ptr<_1aa44cc98_Data>* _68340_d) {
	(*((*(_68340_d))))._field_Kind=_1aa446379_lenKind();
	(*((*(_68340_d))))._field_Constant=static__1a6e77a07_NewI64(static_cast<jule::I64>((*(_1a601dac1_Arr((*((*(_68322_expr))))._field_Kind.ptr())))._field_N));
	(*((*(_68340_d))))._field_Model=jule::Any((*((*(_68340_d))))._field_Constant, &__jule_any_type20);
	return (*(_68340_d));;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa5e4b43_callerLenStr(jule::Ptr<_1aa44cc98_Data>* _69022_expr, jule::Ptr<_1aa44cc98_Data>* _69040_d) {
	(*((*(_69040_d))))._field_Kind=_1aa446379_lenKind();
	if (_1aa44d6d3_IsConst((*(_69022_expr)).ptr())) {
		(*((*(_69040_d))))._field_Constant=static__1a6e77a07_NewI64(static_cast<jule::I64>(_1a6e79740_ReadStr((*((*(_69022_expr))))._field_Constant.ptr()).len()));
		(*((*(_69040_d))))._field_Model=jule::Any((*((*(_69040_d))))._field_Constant, &__jule_any_type20);
	} else {
		(*((*(_69040_d))))._field_Model=jule::Any(jule::new_ptr<_1aa32b083_BuiltinLenCallExprModel>(_1aa32b083_BuiltinLenCallExprModel{._field_Expr=(*(_69022_expr))}), &__jule_any_type118);
	};
	return (*(_69040_d));;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa5e4eb7_callerLenComptime(jule::Ptr<_1aa44cc98_Data>* _70327_d, jule::I32 _70337_n) {
	(*((*(_70327_d))))._field_Kind=_1aa446379_lenKind();
	(*((*(_70327_d))))._field_Constant=static__1a6e77a07_NewI64(static_cast<jule::I64>(_70337_n));
	(*((*(_70327_d))))._field_Model=jule::Any((*((*(_70327_d))))._field_Constant, &__jule_any_type20);
	return (*(_70327_d));;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa5e53e6_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _71026_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _71041_fc, jule::Ptr<_1aa44cc98_Data>* _71063_d) {
	if (((*((*(_71041_fc))))._field_Args.len() < 1LL)) {
		_1aa450053_pushErr((*(_71026_e)).ptr(), (*((*(_71041_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_71041_fc))))._field_Args.len() > 1LL)) {
		_1aa450053_pushErr((*(_71026_e)).ptr(), (*((*((*(_71041_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("len", 3), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1aa44cc98_Data> _7186_dest = _1aa46c922_evalExpr1((*(_71026_e)), (*((*(_71041_fc))))._field_Args[0LL]);;
	{
		
		if ((_7186_dest == nullptr)) {
			_case_begin_1bce662b5:;
			{
				return nullptr;;
			}
		}
		else if ((_1a601dd57_Slc((*(_7186_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bce6632b:;
			{
				return _1aa5e40c6_callerLenSlice(&(_7186_dest), _71063_d);;
			}
		}
		else if ((_1a601dac1_Arr((*(_7186_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bce66392:;
			{
				return _1aa5e47be_callerLenArr(&(_7186_dest), _71063_d);;
			}
		}
		else if ((_1a601e891_Map((*(_7186_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bce652d6:;
			{
				return _1aa5e444a_callerLenMap(&(_7186_dest), _71063_d);;
			}
		}
		else if (((_1a601cd01_Prim((*(_7186_dest))._field_Kind.ptr()) != nullptr) && _1a6026c2d_IsStr(_1a601cd01_Prim((*(_7186_dest))._field_Kind).ptr()))) {
			_case_begin_1bce6534c:;
			{
				return _1aa5e4b43_callerLenStr(&(_7186_dest), _71063_d);;
			}
		}
		else if ((_1a6020144_comptimeStructFields((*(_7186_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bce653b3:;
			{
				return _1aa5e4eb7_callerLenComptime(_71063_d, (*(_1a6020144_comptimeStructFields((*(_7186_dest))._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1a6020661_comptimeEnumFields((*(_7186_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bce65429:;
			{
				return _1aa5e4eb7_callerLenComptime(_71063_d, (*(_1a6020661_comptimeEnumFields((*(_7186_dest))._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1a6021431_comptimeTypeInfos((*(_7186_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bce66491:;
			{
				return _1aa5e4eb7_callerLenComptime(_71063_d, (*(_1a6021431_comptimeTypeInfos((*(_7186_dest))._field_Kind)))._field_types.len());;
			}
		}
		else if ((_1a6020b7d_comptimeParams((*(_7186_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bce66507:;
			{
				return _1aa5e4eb7_callerLenComptime(_71063_d, (*(_1a6020b7d_comptimeParams((*(_7186_dest))._field_Kind)))._field_params.len());;
			}
		}
		else if ((_1a602194d_comptimeStatics((*(_7186_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bce6656d:;
			{
				return _1aa5e4eb7_callerLenComptime(_71063_d, (*(_1a602194d_comptimeStatics((*(_7186_dest))._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1a60229a4_comptimeFiles((*(_7186_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bce665d4:;
			{
				return _1aa5e4eb7_callerLenComptime(_71063_d, (*(_1a60229a4_comptimeFiles((*(_7186_dest))._field_Kind)))._field_files.len());;
			}
		}
		else if ((_1a6022487_comptimeDecls((*(_7186_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bce6664a:;
			{
				return _1aa5e4eb7_callerLenComptime(_71063_d, (*(_1a6022487_comptimeDecls((*(_7186_dest))._field_Kind)))._field_decls.len());;
			}
		}
		else {
			_case_begin_1bce65270:;
			{
				_1aa450053_pushErr((*(_71026_e)).ptr(), (*((*((*(_71041_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bce63746:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa5e576a_callerCapSlice(jule::Ptr<_1aa44cc98_Data>* _75024_expr, jule::Ptr<_1aa44cc98_Data>* _75042_d) {
	(*((*(_75042_d))))._field_Kind=_1aa446379_lenKind();
	(*((*(_75042_d))))._field_Model=jule::Any(jule::new_ptr<_1aa32b380_BuiltinCapCallExprModel>(_1aa32b380_BuiltinCapCallExprModel{._field_Expr=(*(_75024_expr))}), &__jule_any_type119);
	return (*(_75042_d));;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa5e5b99_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _75826_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _75841_fc, jule::Ptr<_1aa44cc98_Data>* _75863_d) {
	if (((*((*(_75841_fc))))._field_Args.len() < 1LL)) {
		_1aa450053_pushErr((*(_75826_e)).ptr(), (*((*(_75841_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_75841_fc))))._field_Args.len() > 1LL)) {
		_1aa450053_pushErr((*(_75826_e)).ptr(), (*((*((*(_75841_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("cap", 3), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1aa44cc98_Data> _7666_dest = _1aa46cc63_evalExpr((*(_75826_e)), (*((*(_75841_fc))))._field_Args[0LL]);;
	{
		
		if ((_7666_dest == nullptr)) {
			_case_begin_1bc6a64d9:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7666_dest))._field_Decl) {
			_case_begin_1bc6a6550:;
			{
				_1aa450053_pushErr((*(_75826_e)).ptr(), (*((*((*(_75841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1a601dd57_Slc((*(_7666_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc6a65b6:;
			{
				return _1aa5e576a_callerCapSlice(&(_7666_dest), _75863_d);;
			}
		}
		else {
			_case_begin_1bc6a5494:;
			{
				_1aa450053_pushErr((*(_75826_e)).ptr(), (*((*((*(_75841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bc6a396a:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa5e6183_callerDeleteMap(jule::Ptr<_1aa44e9c0_eval>* _78125_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _78140_fc, jule::Ptr<_1aa44cc98_Data>* _78162_expr, jule::Ptr<_1aa44cc98_Data>* _78180_d) {
	if ((!((*((*(_78162_expr))))._field_Mutable))) {
		_1aa450053_pushErr((*(_78125_e)).ptr(), (*((*((*(_78140_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	(*(_78180_d))=_1a601505c_buildVoidData();
	jule::Ptr<_1aa32b759_BuiltinDeleteCallExprModel> _7866_model = jule::new_ptr<_1aa32b759_BuiltinDeleteCallExprModel>(_1aa32b759_BuiltinDeleteCallExprModel{._field_Dest=(*(_78162_expr)), ._field_Key=jule::Ptr<_1aa44cc98_Data>(nullptr)});;
	if (((*((*(_78140_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1aa44cc98_Data> _7907_key = _1aa46cc63_evalExpr((*(_78125_e)), (*((*(_78140_fc))))._field_Args[1LL]);;
		{
			
			if ((_7907_key == nullptr)) {
				_case_begin_1bc6ac358:;
				{
					return nullptr;;
				}
			}
			else if ((*(_7907_key))._field_Decl) {
				_case_begin_1bc6aaea0:;
				{
					_1aa450053_pushErr((*(_78125_e)).ptr(), (*((*((*(_78140_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1bc6aae39:;
				{
					;
					jule::Ptr<_1a601a64a_TypeKind> _7998_keyType = (*(_1a601e891_Map((*((*(_78162_expr))))._field_Kind.ptr())))._field_Key;;
					if ((!(_1aa3cbc9e_checkAssignType((*((*(_78125_e))))._field_s, false, &(_7998_keyType), &(_7907_key), (*((*((*(_78140_fc))))._field_Args[1LL]))._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_1bc6aadc3:;
		};
		(*(_7866_model))._field_Key=_7907_key;
	};
	(*((*(_78180_d))))._field_Model=jule::Any(_7866_model, &__jule_any_type39);
	return (*(_78180_d));;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa5e65b2_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _81029_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _81044_fc, jule::Ptr<_1aa44cc98_Data>* _81066_d) {
	if (((*((*(_81044_fc))))._field_Args.len() < 1LL)) {
		_1aa450053_pushErr((*(_81029_e)).ptr(), (*((*(_81044_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("map", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_81044_fc))))._field_Args.len() > 2LL)) {
		_1aa450053_pushErr((*(_81029_e)).ptr(), (*((*((*(_81044_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("delete", 6), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1aa44cc98_Data> _8186_dest = _1aa46cc63_evalExpr((*(_81029_e)), (*((*(_81044_fc))))._field_Args[0LL]);;
	{
		
		if ((_8186_dest == nullptr)) {
			_case_begin_1bc6b4074:;
			{
				return nullptr;;
			}
		}
		else if ((*(_8186_dest))._field_Decl) {
			_case_begin_1bc6b40da:;
			{
				_1aa450053_pushErr((*(_81029_e)).ptr(), (*((*((*(_81044_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1a601e891_Map((*(_8186_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc6b4151:;
			{
				return _1aa5e6183_callerDeleteMap(_81029_e, _81044_fc, &(_8186_dest), _81066_d);;
			}
		}
		else {
			_case_begin_1bc6b302e:;
			{
				_1aa450053_pushErr((*(_81029_e)).ptr(), (*((*((*(_81044_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bc6b1505:;
	};
}



inline jule::Ptr<_1aa44cc98_Data> _1aa5e69e1_builtinCallerAssert(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _83329_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _83344_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	if (((*((*(_83344_fc))))._field_Args.len() < 1LL)) {
		_1aa450053_pushErr((*(_83329_e)).ptr(), (*((*(_83344_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_83344_fc))))._field_Args.len() > 2LL)) {
		_1aa450053_pushErr((*(_83329_e)).ptr(), (*((*((*(_83344_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("assert", 6), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1aa44cc98_Data> _8426_expr = _1aa46cc63_evalExpr((*(_83329_e)), (*((*(_83344_fc))))._field_Args[0LL]);;
	if ((_8426_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1a601cd01_Prim((*(_8426_expr))._field_Kind.ptr()) == nullptr) || (!(_1a6026997_IsBool(_1a601cd01_Prim((*(_8426_expr))._field_Kind).ptr()))))) {
		_1aa450053_pushErr((*(_83329_e)).ptr(), (*((*(_83344_fc))))._field_Token, jule::Str::lit("assertion requires boolean expression", 37), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1aa32a406_BuiltinAssertCallExprModel> _8516_model = jule::new_ptr<_1aa32a406_BuiltinAssertCallExprModel>(_1aa32a406_BuiltinAssertCallExprModel{._field_Token=(*((*(_83344_fc))))._field_Token, ._field_Expr=(*(_8426_expr))._field_Model, ._field_Log=jule::Str::lit("assertion failed", 16)});;
	if (((*((*(_83344_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1aa44cc98_Data> _8597_log = _1aa46cc63_evalExpr((*(_83329_e)), (*((*(_83344_fc))))._field_Args[1LL]);;
		if ((_8597_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_1aa44d6d3_IsConst(_8597_log.ptr()))) || (_1a601cd01_Prim((*(_8597_log))._field_Kind) == nullptr)) || (!(_1a6026c2d_IsStr(_1a601cd01_Prim((*(_8597_log))._field_Kind).ptr()))))) {
			_1aa450053_pushErr((*(_83329_e)).ptr(), (*((*((*(_83344_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("const str", 9), &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str((*(_8597_log))._field_Kind), &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		};
		(*(_8516_model))._field_Log=_1a6e79740_ReadStr((*(_8597_log))._field_Constant.ptr());
	};
	jule::Ptr<_1aa44cc98_Data> _8726_d = _1a601505c_buildVoidData();;
	(*(_8726_d))._field_Model=jule::Any(_8516_model, &__jule_any_type37);
	return _8726_d;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa5e6e20_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _87740_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _87755_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	if (((*((*(_87755_fc))))._field_Args.len() < 1LL)) {
		_1aa450053_pushErr((*(_87740_e)).ptr(), (*((*(_87755_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_87755_fc))))._field_Args.len() > 1LL)) {
		_1aa450053_pushErr((*(_87740_e)).ptr(), (*((*((*(_87755_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeOf", 6), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1aa44cc98_Data> _8866_d = _1aa46be4e_evalExprKind((*(_87740_e)), (*((*((*(_87755_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_8866_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1aa334597_FnIns> _8902_f = _1a601e0dd_Fn((*(_8866_d))._field_Kind.ptr());;
	if ((_8902_f != nullptr)) {
		if (_1aa335a60_IsBuiltin(_8902_f)) {
			_1aa450053_pushErr((*(_87740_e)).ptr(), (*((*((*(_87755_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("<built-in fn>", 13), &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		};
		if (((*_8902_f.alloc)._field_Generics.len() != (*((*_8902_f.alloc)._field_Decl))._field_Generics.len())) {
			_1aa450053_pushErr((*(_87740_e)).ptr(), (*((*((*(_87755_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1aa31e373_StructIns> _9012_s = _1a601e374_Struct((*(_8866_d))._field_Kind);;
	if (((_9012_s != nullptr) && ((*_9012_s.alloc)._field_Generics.len() != (*((*_9012_s.alloc)._field_Decl))._field_Generics.len()))) {
		_1aa450053_pushErr((*(_87740_e)).ptr(), (*((*((*(_87755_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_1a601edad_comptime((*(_8866_d))._field_Kind)) {
		_1aa450053_pushErr((*(_87740_e)).ptr(), (*((*((*(_87755_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_8866_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1aa36e3b2_buildComptimeTypeInfoData(&((*((*(_87740_e))))._field_s), &((*(_8866_d))._field_Kind));;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa5e7591_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _91341_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _91356_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	if (((*((*(_91356_fc))))._field_Args.len() < 1LL)) {
		_1aa450053_pushErr((*(_91341_e)).ptr(), (*((*(_91356_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_91356_fc))))._field_Args.len() > 1LL)) {
		_1aa450053_pushErr((*(_91341_e)).ptr(), (*((*((*(_91356_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1aa44cc98_Data> _9216_d = _1aa46cc63_evalExpr((*(_91341_e)), (*((*(_91356_fc))))._field_Args[0LL]);;
	if ((_9216_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1aa4466cb_isGoodValueToInfer(&(_9216_d))))) {
		_1aa450053_pushErr((*(_91341_e)).ptr(), (*((*((*(_91356_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_9216_d))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1aa36e703_buildComptimeValue(&(_9216_d));;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa5e79c0_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _93338_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _93353_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	if (((*((*(_93353_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_93338_e)).ptr(), (*((*((*(_93353_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Line", 4), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1a6e77584_Const> _9376_constant = static__1a6e77a07_NewI64(static_cast<jule::I64>((*((*((*(_93353_fc))))._field_Token))._field_Row));;
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dcc5c_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9376_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_9376_constant});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa5e7dee_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _94538_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _94553_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	if (((*((*(_94553_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_94538_e)).ptr(), (*((*((*(_94553_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("File", 4), &__jule_any_type4); __jule_collection; }));
	};
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aa365c9e_comptimeFile>(_1aa365c9e_comptimeFile{._field_file=(*((*((*(_94538_e))))._field_s))._field_file}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data18)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa5e832d_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _95839_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _95854_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	if (((*((*(_95854_fc))))._field_Args.len() > 0LL)) {
		_1aa450053_pushErr((*(_95839_e)).ptr(), (*((*((*(_95854_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Files", 5), &__jule_any_type4); __jule_collection; }));
	};
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aa3646a4_comptimeFiles>(_1aa3646a4_comptimeFiles{._field_files=(*((*((*(_95839_e))))._field_s))._field_files}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data17)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa5e875c_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _97143_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _97158_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	if (((*((*(_97158_fc))))._field_Args.len() > 2LL)) {
		_1aa450053_pushErr((*(_97143_e)).ptr(), (*((*((*(_97158_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_97158_fc))))._field_Args.len() == 0LL)) {
		_1aa450053_pushErr((*(_97143_e)).ptr(), (*((*(_97158_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("ident, type", 11), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_97158_fc))))._field_Args.len() == 1LL)) {
		_1aa450053_pushErr((*(_97143_e)).ptr(), (*((*(_97158_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_97158_fc))))._field_Args[0LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1bce78508:;
			{
				goto _match_end_1bce7a75d;
			}
		}
		else {
			_case_begin_1bce7a7c4:;
			{
				_1aa450053_pushErr((*(_97143_e)).ptr(), (*((*((*(_97158_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1aa4503b6_pushSuggestion((*(_97143_e)).ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bce7a75d:;
	};
	jule::Ptr<_1aa2d51c4_Token> _9926_ident = (*((*((*((*(_97158_fc))))._field_Args[0LL]))._field_Kind.cast_ptr<_1aa3012cd_IdentExpr>(&__jule_any_type52)))._field_Token;;
	{
		auto &_match_expr{ (*((*(_97143_e))))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data0)) {
			_case_begin_1bce7cab2:;
			{
				goto _match_end_1bce7cd04;
			}
		}
		else {
			_case_begin_1bce7cd59:;
			{
				_1aa450053_pushErr((*(_97143_e)).ptr(), (*((*(_97158_fc))))._field_Token, jule::Str::lit("you can call @ function in the scopes only", 42), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bce7cd04:;
	};
	jule::Ptr<_1aa381160_scopeChecker> _10016_sc = (*((*(_97143_e))))._field_lookup.cast_ptr<_1aa381160_scopeChecker>((jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data0);;
	jule::Ptr<_1a6019858_TypeAlias> _10026_alias = jule::new_ptr<_1a6019858_TypeAlias>(_1a6019858_TypeAlias{._field_Scope=(*(_10016_sc))._field_tree, ._field_Public=_1aa3b851b_IsPub((*(_9926_ident))._field_Kind), ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=_9926_ident, ._field_Ident=(*_9926_ident.alloc)._field_Kind, ._field_Kind=jule::new_ptr<_1a6022d5b_TypeSymbol>(_1a6022d5b_TypeSymbol{._field_Decl=jule::Ptr<_1aa2ea67e_TypeDecl>(nullptr), ._field_Kind=jule::Ptr<_1a601a64a_TypeKind>(nullptr)}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>(nullptr)});;
	jule::Ptr<_1aa44cc98_Data> _10126_t = _1aa46c290_eval1((*(_97143_e)), (*((*(_97158_fc))))._field_Args[1LL]);;
	if ((_10126_t == nullptr)) {
		return nullptr;;
	};
	if ((*(_10126_t))._field_Decl) {
		(*((*(_10026_alias))._field_Kind))._field_Kind=(*(_10126_t))._field_Kind;
	} else {
		jule::Ptr<_1aa35ac50_comptimeTypeInfo> _10197_cti = _1a60216b7_comptimeTypeInfo((*(_10126_t))._field_Kind.ptr());;
		if ((_10197_cti == nullptr)) {
			_1aa450053_pushErr((*(_97143_e)).ptr(), (*((*((*(_97158_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_1aa4503b6_pushSuggestion((*(_97143_e)).ptr(), jule::Str::lit("expected type declaration", 25), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*((*(_10026_alias))._field_Kind))._field_Kind=(*(_10197_cti))._field_base;
	};
	_1aa386044_checkTypeAlias(_10016_sc, &(_10026_alias));
	return _1a601505c_buildVoidData();;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa5e8b8b_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _103135_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _103150_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<_1aa44cc98_Data> _10326_result = jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc894_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
	if (((*((*(_103150_fc))))._field_Args.len() < 1LL)) {
		_1aa450053_pushErr((*(_103135_e)).ptr(), (*((*(_103150_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4); __jule_collection; }));
		return _10326_result;;
	};
	if (((*((*(_103150_fc))))._field_Args.len() > 1LL)) {
		_1aa450053_pushErr((*(_103135_e)).ptr(), (*((*((*(_103150_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1aa44cc98_Data> _10446_d = _1aa46be4e_evalExprKind((*(_103135_e)), (*((*((*(_103150_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10446_d == nullptr)) {
		return _10326_result;;
	};
	if ((!(_1a6038459_validTypeForXof(&((*(_10446_d))._field_Kind))))) {
		_1aa450053_pushErr((*(_103135_e)).ptr(), (*((*((*(_103150_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_10446_d))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4); __jule_collection; }));
	};
	(*(_10326_result))._field_Model=jule::Any(jule::new_ptr<_1aa32c6b1_SizeofExprModel>(_1aa32c6b1_SizeofExprModel{._field_Expr=(*(_10446_d))._field_Model}), &__jule_any_type120);
	return _10326_result;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa5e90ba_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _105636_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _105651_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<_1aa44cc98_Data> _10576_result = jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc894_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
	if (((*((*(_105651_fc))))._field_Args.len() < 1LL)) {
		_1aa450053_pushErr((*(_105636_e)).ptr(), (*((*(_105651_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4); __jule_collection; }));
		return _10576_result;;
	};
	if (((*((*(_105651_fc))))._field_Args.len() > 1LL)) {
		_1aa450053_pushErr((*(_105636_e)).ptr(), (*((*((*(_105651_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1aa44cc98_Data> _10696_d = _1aa46be4e_evalExprKind((*(_105636_e)), (*((*((*(_105651_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10696_d == nullptr)) {
		return _10576_result;;
	};
	if ((!(_1a6038459_validTypeForXof(&((*(_10696_d))._field_Kind))))) {
		_1aa450053_pushErr((*(_105636_e)).ptr(), (*((*((*(_105651_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a601aa46_Str((*(_10696_d))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4); __jule_collection; }));
	};
	(*(_10576_result))._field_Model=jule::Any(jule::new_ptr<_1aa32c89d_AlignofExprModel>(_1aa32c89d_AlignofExprModel{._field_Expr=(*(_10696_d))._field_Model}), &__jule_any_type121);
	return _10576_result;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa5e94e9_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _108133_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _108148_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	if (((*((*(_108148_fc))))._field_Args.len() < 1LL)) {
		_1aa450053_pushErr((*(_108133_e)).ptr(), (*((*(_108148_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("h", 1), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_108148_fc))))._field_Args.len() > 1LL)) {
		_1aa450053_pushErr((*(_108133_e)).ptr(), (*((*((*(_108148_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Free", 4), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1aa44cc98_Data> _10906_d = _1aa46cc63_evalExpr((*(_108133_e)), (*((*(_108148_fc))))._field_Args[0LL]);;
	if ((_10906_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a601c7d4_GC((*(_10906_d))._field_Kind.ptr())))) {
		_1aa450053_pushErr((*(_108133_e)).ptr(), (*((*((*(_108148_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1aa44cc98_Data> _10996_result = _1a601505c_buildVoidData();;
	(*(_10996_result))._field_Model=jule::Any(jule::new_ptr<_1aa32d618_FreeExprModel>(_1aa32d618_FreeExprModel{._field_Expr=(*(_10906_d))._field_Model}), &__jule_any_type40);
	return _10996_result;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa5e9928_builtinCallerStdJuleIntegratedToStr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _110445_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _110460_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	if (((*((*(_110460_fc))))._field_Args.len() < 1LL)) {
		_1aa450053_pushErr((*(_110445_e)).ptr(), (*((*(_110460_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_110460_fc))))._field_Args.len() > 1LL)) {
		_1aa450053_pushErr((*(_110445_e)).ptr(), (*((*((*(_110460_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("ToStr", 5), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1aa44cc98_Data> _11136_d = _1aa46cc63_evalExpr((*(_110445_e)), (*((*(_110460_fc))))._field_Args[0LL]);;
	if ((_11136_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a6037414_isBuiltinStrConvertable(&((*(_11136_d))._field_Kind))))) {
		_1aa450053_pushErr((*(_110445_e)).ptr(), (*((*((*(_110460_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1aa44cc98_Data>(_1aa44cc98_Data{._field_untyped=false, ._field_Kind=_1aa5dc07a_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1aa32ce42_IntegratedToStrExprModel>(_1aa32ce42_IntegratedToStrExprModel{._field_Expr=(*(_11136_d))._field_Model}), &__jule_any_type122), ._field_Decl=false, ._field_Constant=jule::Ptr<_1a6e77584_Const>(nullptr)});;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa5e9d57_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _113144_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _113159_fc, jule::Ptr<_1aa44cc98_Data>* _113181_d) {
	if ((!(_1aa450a48_isUnsafe((*(_113144_e)).ptr())))) {
		_1aa450053_pushErr((*(_113144_e)).ptr(), (*((*(_113159_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	if (((*((*(_113159_fc))))._field_Args.len() < 1LL)) {
		_1aa450053_pushErr((*(_113144_e)).ptr(), (*((*(_113159_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("code", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa44cc98_Data> _11416_argd = _1aa46cc63_evalExpr((*(_113144_e)), (*((*(_113159_fc))))._field_Args[0LL]);;
	if ((_11416_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1a601cd01_Prim((*(_11416_argd))._field_Kind.ptr()) == nullptr) || (!(_1a6026c2d_IsStr(_1a601cd01_Prim((*(_11416_argd))._field_Kind).ptr()))))) {
		_1aa450053_pushErr((*(_113144_e)).ptr(), (*((*((*(_113159_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("str", 3), &__jule_any_type4); (*it++) = jule::Any(_1a601aa46_Str((*(_11416_argd))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((!(_1aa44d6d3_IsConst(_11416_argd.ptr()))) || (!(_1a6e7bd3b_IsStr((*(_11416_argd))._field_Constant.ptr()))))) {
		_1aa450053_pushErr((*(_113144_e)).ptr(), (*((*((*(_113159_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa44cc98_Data> _11566_r = _1a601505c_buildVoidData();;
	jule::Ptr<_1aa334597_FnIns> _11586_f = _1a601e0dd_Fn((*((*(_113181_d))))._field_Kind);;
	if (((*(_11586_f))._field_Generics.len() > 0LL)) {
		(*(_11566_r))._field_Kind=(*((*(_11586_f))._field_Generics[0LL]))._field_Kind;
	};
	jule::Ptr<_1aa32d31b_BackendEmitExprModel> _11636_model = jule::new_ptr<_1aa32d31b_BackendEmitExprModel>(_1aa32d31b_BackendEmitExprModel{._field_Code=_1a6e79740_ReadStr((*(_11416_argd))._field_Constant), ._field_Exprs=jule::Slice<jule::Any>(nullptr)});;
	if (((*((*(_113159_fc))))._field_Args.len() > 1LL)) {
		(*(_11636_model))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, ((*((*(_113159_fc))))._field_Args.len() - 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
		{
			auto expr = (*((*(_113159_fc))))._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1bcea7944:;
			if (it != expr_end) {
				jule::Ptr<_1aa2ee9b3_Expr> _116915_arg = *it;
				{
					_11416_argd=_1aa46c290_eval1((*(_113144_e)), _116915_arg);
					if ((_11416_argd == nullptr)) {
						return nullptr;;
					};
					(*_11636_model.alloc)._field_Exprs=jule::append((*_11636_model.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_11416_argd))._field_Model; __jule_collection; }));
				}
				_iter_next_1bcea7944:;
				++it;
				goto _iter_begin_1bcea7944;
			}
			_iter_end_1bcea7944:;
		};
	};
	(*_11566_r.alloc)._field_Model=jule::Any(_11636_model, &__jule_any_type32);
	return _11566_r;;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa5ea286_builtinCallerStdDebugOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _118234_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _118249_fc, jule::Ptr<_1aa44cc98_Data>* _118271_d) {
	(*(_118271_d))=_1aa5e1b1d_builtinCallerOut(nullptr, _118234_e, _118249_fc, _118271_d);
	if (((*(_118271_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_118271_d))))._field_Model.cast_ptr<_1aa3292c3_BuiltinOutCallExprModel>(&__jule_any_type34)))._field_Debug=true;
	return (*(_118271_d));;
}



inline jule::Ptr<_1aa44cc98_Data> _1aa5ea6b5_builtinCallerStdDebugOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _119136_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _119151_fc, jule::Ptr<_1aa44cc98_Data>* _119173_d) {
	(*(_119173_d))=_1aa5e204c_builtinCallerOutln(nullptr, _119136_e, _119151_fc, _119173_d);
	if (((*(_119173_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_119173_d))))._field_Model.cast_ptr<_1aa32969c_BuiltinOutlnCallExprModel>(&__jule_any_type35)))._field_Debug=true;
	return (*(_119173_d));;
}



inline jule::Ptr<_1aa84c681_FileInfo> _1aa84cbe2_ParseFile(jule::Ptr<_1aa2da95a_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1aa84c681_FileInfo> _276_finf = jule::new_ptr<_1aa84c681_FileInfo>(_1aa84c681_FileInfo{._field_Ast=jule::Ptr<_1aa2e876a_AST>(nullptr), ._field_Errors=jule::Slice<_1ada72b17_Log>(nullptr)});;
	({
		__jule_tuple_x_1aa2e876a_AST__jule_tuple_s_1ada72b17_Log __jule_assign_result = _1aa84d2b9_parseFileset(_2318_f);
		(*_276_finf.alloc)._field_Ast = __jule_assign_result.__jule_result_arg0;
		(*_276_finf.alloc)._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if (((*_276_finf.alloc)._field_Errors.len() > 0LL)) {
		(*_276_finf.alloc)._field_Ast=nullptr;
	};
	return _276_finf;;
}



inline __jule_tuple_x_1aa2e876a_AST__jule_tuple_s_1ada72b17_Log _1aa84d2b9_parseFileset(jule::Ptr<_1aa2da95a_File> _5521_f) {
	__jule_tuple_x_1aa2e876a_AST__jule_tuple_s_1ada72b17_Log __jule_func_result;
	jule::Ptr<_1aa86de00_parser> _566_p = jule::new_ptr<_1aa86de00_parser>(_1aa86de00_parser{._field_ast=jule::Ptr<_1aa2e876a_AST>(nullptr), ._field_directives=jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>>(nullptr), ._field_errors=jule::Slice<_1ada72b17_Log>(nullptr), ._field_ep=jule::Ptr<_1aa85d2da_exprBuilder>(nullptr)});;
	_1aa87ec8a_parse(_566_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = (*_566_p.alloc)._field_ast;
	__jule_func_result.__jule_result_arg1 = (*_566_p.alloc)._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1aa30a6a0_ScopeTree> _1aa84dc8c_newScope(void) {
	return jule::new_ptr<_1aa30a6a0_ScopeTree>(_1aa30a6a0_ScopeTree{._field_Parent=jule::Ptr<_1aa30a6a0_ScopeTree>(nullptr), ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<_1aa30a040_Stmt>(nullptr), ._field_End=jule::Ptr<_1aa2d51c4_Token>(nullptr)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1aa84e0de_isSt(jule::Ptr<_1aa2d51c4_Token> _499_current, jule::Ptr<_1aa2d51c4_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=(((*(_499_current))._field_Id == static_cast<jule::U32>(3LLU)) || ((*(_4926_prev))._field_Row < (*_499_current.alloc)._field_Row));
	__jule_func_result.__jule_result_arg1=((*_499_current.alloc)._field_Id == static_cast<jule::U32>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _1aa84e463_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _5526_tokens, jule::I32* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*((*(_5526_tokens))[((*(_5545_i)) - 2LL)]))._field_Id == static_cast<jule::U32>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1aa2d51c4_Token> _613_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return (((*(_613_prev))._field_Id == static_cast<jule::U32>(17LLU)) || (_1aa2d5c1e_IsBinOp((*_613_prev.alloc)._field_Id) && ((*_613_prev.alloc)._field_Row < (*((*(_5526_tokens))[(*(_5545_i))]))._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1aa84e82b_nextStPos(jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _6815_tokens, jule::I32 _6833_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _696_braceN = 0LL;;
	jule::I32 _706_i = _6833_start;;
	for (; (_706_i < (*(_6815_tokens)).len()); (_706_i)++) {
		{
			jule::Bool _727_ok = false;;
			jule::Bool _737_terminated = false;;
			jule::Ptr<_1aa2d51c4_Token> _743_tok = (*(_6815_tokens))[_706_i];;
			{
				auto &_match_expr{ (*(_743_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1bd03585c:;
					{
						if (((_696_braceN == 0LL) && (_706_i > _6833_start))) {
							if ((!(_1aa84e463_prevIsIncompleteExpr(_6815_tokens, &(_706_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aa84e0de_isSt(_743_tok, (*(_6815_tokens))[(_706_i - 1LL)]);
									_727_ok = __jule_assign_result.__jule_result_arg0;
									_737_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_727_ok) {
									goto _julec_label_1bd03b500;
								};
							};
						};
						(_696_braceN)++;
						goto _iter_next_1bd03441b;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1bd035ac1:;
					{
						(_696_braceN)--;
						if (((_696_braceN == 0LL) && ((_706_i + 1LL) < (*(_6815_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aa84e0de_isSt((*(_6815_tokens))[(_706_i + 1LL)], _743_tok);
								_727_ok = __jule_assign_result.__jule_result_arg0;
								_737_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_727_ok) {
								(_706_i)++;
								goto _julec_label_1bd03b500;
							};
						};
						goto _iter_next_1bd03441b;
					}
				}
				_match_end_1bd035a49:;
			};
			if ((_696_braceN != 0LL)) {
				goto _iter_next_1bd03441b;
			};
			if ((_706_i > _6833_start)) {
				if (_1aa84e463_prevIsIncompleteExpr(_6815_tokens, &(_706_i))) {
					goto _iter_next_1bd03441b;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aa84e0de_isSt(_743_tok, (*(_6815_tokens))[(_706_i - 1LL)]);
					_727_ok = __jule_assign_result.__jule_result_arg0;
					_737_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aa84e0de_isSt(_743_tok, _743_tok);
					_727_ok = __jule_assign_result.__jule_result_arg0;
					_737_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_727_ok))) {
				goto _iter_next_1bd03441b;
			};
			_julec_label_1bd03b500:;
			if (_737_terminated) {
				(_706_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _706_i;
			__jule_func_result.__jule_result_arg1 = _737_terminated;
			return __jule_func_result;;
		}
	_iter_next_1bd03441b:;
	}
	_iter_end_1bd03441b:;;
	__jule_func_result.__jule_result_arg0 = _706_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1aa2d51c4_Token__jule_tuple_bool _1aa84eba0_skipSt(jule::I32* _13016_i, jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _13028_tokens) {
	__jule_tuple_sx_1aa2d51c4_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _1312_start = (*(_13016_i));;
	jule::Bool _1326_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1aa84e82b_nextStPos(&(_13028_tokens), _1312_start);
		(*(_13016_i)) = __jule_assign_result.__jule_result_arg0;
		_1326_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _1346_stTokens = _13028_tokens.slice(_1312_start, (*(_13016_i)));;
	if (_1326_terminated) {
		if ((_1346_stTokens.len() == 1LL)) {
			__jule_func_result = std::move(_1aa84eba0_skipSt(_13016_i, _13028_tokens));
return __jule_func_result;;
		};
		(_1346_stTokens).mut_slice(0LL, (_1346_stTokens.len() - 1LL));;
	};
	__jule_func_result.__jule_result_arg0 = _1346_stTokens;
	__jule_func_result.__jule_result_arg1 = _1326_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1aa84eed0_stmt>> _1aa850387_splitStmts(jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _15120_tokens) {
	jule::Slice<jule::Ptr<_1aa84eed0_stmt>> _1526_stmts = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa84eed0_stmt>>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa84eed0_stmt>(nullptr); __jule_collection; });;
	jule::I32 _1536_pos = 0LL;;
	while ((_1536_pos < (*(_15120_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _1557_stmt;
			jule::Bool _15513_terminated;
			({
				__jule_tuple_sx_1aa2d51c4_Token__jule_tuple_bool __jule_assign_result = _1aa84eba0_skipSt(&(_1536_pos), (*(_15120_tokens)));
				_1557_stmt = __jule_assign_result.__jule_result_arg0;
				_15513_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_1aa84eed0_stmt>> &__jule_push_dest = _1526_stmts; __jule_push_dest.push(jule::new_ptr<_1aa84eed0_stmt>(_1aa84eed0_stmt{._field_tokens=_1557_stmt, ._field_terminated=_15513_terminated})); };
		}
	_iter_next_1bd03e28e:;
	}
	_iter_end_1bd03e28e:;;
	return _1526_stmts;;
}



inline jule::Bool _1aa8689dd_isTypeOp(jule::U32* _89314_id) {
	return ((((*(_89314_id)) == static_cast<jule::U32>(65LLU)) || ((*(_89314_id)) == static_cast<jule::U32>(54LLU))) || ((*(_89314_id)) == static_cast<jule::U32>(62LLU)));;
}



inline jule::Bool _1aa868ceb_isTypeRange(jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _90021_tokens) {
	jule::Bool _9016_op = false;;
	{
		auto expr = _90021_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd08b75e:;
		if (it != expr_end) {
			jule::I32 _9026_i = it - expr->begin();
			jule::Ptr<_1aa2d51c4_Token> _9029_token = *it;
			{
				if (((*(_9029_token))._field_Id == static_cast<jule::U32>(76LLU))) {
					if (_9016_op) {
						return true;;
					};
					jule::I32 _9078_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _9088_lTokens = (*(_90021_tokens)).slice(_9026_i);;
					{
						auto expr = &(_9088_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bd08d1cd:;
						if (it != expr_end) {
							jule::Ptr<_1aa2d51c4_Token> _90911_lToken = *it;
							{
								{
									auto &_match_expr{ (*(_90911_lToken))._field_Id };
									
									if (_match_expr == static_cast<jule::U32>(76LLU)) {
										_case_begin_1bd08d970:;
										{
											(_9078_rangeN)++;
											goto _iter_next_1bd08d1cd;
										}
									}
									else if (_match_expr == static_cast<jule::U32>(77LLU)) {
										_case_begin_1bd08dd49:;
										{
											(_9078_rangeN)--;
											goto _iter_next_1bd08d1cd;
										}
									}
									_match_end_1bd08dc5b:;
								};
								if ((_9078_rangeN == 0LL)) {
									return _1aa8689dd_isTypeOp(&((*(_90911_lToken))._field_Id));;
								};
							}
							_iter_next_1bd08d1cd:;
							++it;
							goto _iter_begin_1bd08d1cd;
						}
						_iter_end_1bd08d1cd:;
					};
					return true;;
				};
				if ((!(_1aa8689dd_isTypeOp(&((*_9029_token.alloc)._field_Id))))) {
					return false;;
				};
				_9016_op=true;
			}
			_iter_next_1bd08b75e:;
			++it;
			_9026_i++;
			goto _iter_begin_1bd08b75e;
		}
		_iter_end_1bd08b75e:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _1aa8690b5_getBlockExpr(jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _93322_tokens) {
	jule::I32 _9346_braceN = 0LL;;
	jule::I32 _9356_skipToNextBraceClose = 0LL;;
	{
		auto expr = _93322_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd08c474:;
		if (it != expr_end) {
			jule::I32 _9366_i = it - expr->begin();
			jule::Ptr<_1aa2d51c4_Token> _9369_tok = *it;
			{
				{
					auto &_match_expr{ (*(_9369_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(31LLU)) {
						_case_begin_1bd0919d9:;
						{
							if (((((*(_93322_tokens)).len() - _9366_i) > 1LL) && ((*((*(_93322_tokens))[(_9366_i + 1LL)]))._field_Id == static_cast<jule::U32>(72LLU)))) {
								(_9356_skipToNextBraceClose)++;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1bd091a72:;
						{
							if (((_9346_braceN > 0LL) || (_9356_skipToNextBraceClose > 0LL))) {
								if ((_9356_skipToNextBraceClose > 0LL)) {
									(_9356_skipToNextBraceClose)--;
								};
								(_9346_braceN)++;
								goto _match_end_1bd09192e;
							};
							return (*(_93322_tokens)).slice(0LL, _9366_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1bd091ad8:;
						{
							(_9346_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1bd091b4e:;
						{
							(_9346_braceN)--;
						}
					}
					_match_end_1bd09192e:;
				};
			}
			_iter_next_1bd08c474:;
			++it;
			_9366_i++;
			goto _iter_begin_1bd08c474;
		}
		_iter_end_1bd08c474:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1aa2d51c4_Token__jule_tuple_sx_1aa2d51c4_Token _1aa86947d_splitDelim(jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _96520_tokens, jule::U32 _96538_delim) {
	__jule_tuple_sx_1aa2d51c4_Token__jule_tuple_sx_1aa2d51c4_Token __jule_func_result;
	jule::I32 _9666_func = -1LL;;
	jule::I32 _9676_rangeN = 0LL;;
	jule::I32 _9686_i = 0LL;;
	for (; (_9686_i < (*(_96520_tokens)).len()); (_9686_i)++) {
		{
			jule::Ptr<_1aa2d51c4_Token> _9703_token = (*(_96520_tokens))[_9686_i];;
			{
				auto &_match_expr{ (*(_9703_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(29LLU)) {
					_case_begin_1bd096626:;
					{
						_9666_func=_9676_rangeN;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1bd09668c:;
					{
						(_9676_rangeN)++;
						goto _iter_next_1bd094d72;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1bd096703:;
					{
						(_9676_rangeN)--;
						if ((_9666_func == _9676_rangeN)) {
							_9666_func=-1LL;
							if (((((*(_96520_tokens)).len() - _9686_i) > 1LL) && ((*((*(_96520_tokens))[(_9686_i + 1LL)]))._field_Id == static_cast<jule::U32>(8LLU)))) {
								(_9686_i)++;
								goto _iter_next_1bd094d72;
							};
						};
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU)) {
					_case_begin_1bd096769:;
					{
						(_9676_rangeN)--;
					}
				}
				_match_end_1bd0965c1:;
			};
			if ((((*(_9703_token))._field_Id == _96538_delim) && (_9676_rangeN == 0LL))) {
				jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _9948_l = (*(_96520_tokens)).slice(0LL, _9686_i);;
				jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _9958_r = (*(_96520_tokens)).slice((_9686_i + 1LL));;
				__jule_func_result.__jule_result_arg0 = _9948_l;
				__jule_func_result.__jule_result_arg1 = _9958_r;
				return __jule_func_result;;
			};
		}
	_iter_next_1bd094d72:;
	}
	_iter_end_1bd094d72:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I32 _1aa869747_findLowestPrecOp(jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _100422_tokens) {
	jule::U8 _10096_prec = 255LLU;;
	jule::I32 _10106_precPos = -1LL;;
	jule::I32 _10126_braceN = 0LL;;
	jule::Bool _10136_skipToNextBraceOpen = false;;
	{
		auto expr = _100422_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd09b939:;
		if (it != expr_end) {
			jule::I32 _10146_i = it - expr->begin();
			jule::Ptr<_1aa2d51c4_Token> *_10149_token = it;
			{
				{
					auto &_match_expr{ (*((*(_10149_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1bd09c6c6:;
						{
							_10136_skipToNextBraceOpen=false;
							goto _case_begin_1bd09c75e;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1bd09c75e:;
						{
							(_10126_braceN)++;
							goto _iter_next_1bd09b939;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(75LLU) || _match_expr == static_cast<jule::U32>(77LLU)) {
						_case_begin_1bd09c7c5:;
						{
							(_10126_braceN)--;
							goto _iter_next_1bd09b939;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(13LLU)) {
						_case_begin_1bd09c83b:;
						{
							_10136_skipToNextBraceOpen=true;
							goto _iter_next_1bd09b939;
						}
					}
					_match_end_1bd09c61b:;
				};
				{
					
					if (_10136_skipToNextBraceOpen) {
						_case_begin_1bd09e057:;
						{
							goto _iter_next_1bd09b939;
						}
					}
					else if ((_10146_i == 0LL)) {
						_case_begin_1bd09e0bd:;
						{
							goto _iter_next_1bd09b939;
						}
					}
					else if ((_10126_braceN > 0LL)) {
						_case_begin_1bd09e134:;
						{
							goto _iter_next_1bd09b939;
						}
					}
					else if ((!(_1aa2d5c1e_IsBinOp((*((*(_10149_token))))._field_Id)))) {
						_case_begin_1bd09e19a:;
						{
							goto _iter_next_1bd09b939;
						}
					}
					_match_end_1bd09ddc0:;
				};
				jule::Ptr<_1aa2d51c4_Token> _10433_left = (*(_100422_tokens))[(_10146_i - 1LL)];;
				if ((_1aa2d5911_IsUnaryOp((*(_10433_left))._field_Id) || ((*_10433_left.alloc)._field_Id == static_cast<jule::U32>(8LLU)))) {
					goto _iter_next_1bd09b939;
				};
				if (((_10146_i > 1LL) && ((*_10433_left.alloc)._field_Id == static_cast<jule::U32>(77LLU)))) {
					jule::Ptr<_1aa2d51c4_Token> _10514_lleft = (*(_100422_tokens))[(_10146_i - 2LL)];;
					if (((*(_10514_lleft))._field_Id == static_cast<jule::U32>(76LLU))) {
						if ((((*((*(_10149_token))))._field_Id == static_cast<jule::U32>(65LLU)) || ((*(*(_10149_token)).alloc)._field_Id == static_cast<jule::U32>(62LLU)))) {
							goto _iter_next_1bd09b939;
						};
					};
				};
				jule::U8 _10603_p = _1aa2d557b_Prec((*(_10149_token)));;
				if (((_10603_p != 0LLU) && (_10603_p <= _10096_prec))) {
					_10096_prec=_10603_p;
					_10106_precPos=_10146_i;
				};
			}
			_iter_next_1bd09b939:;
			++it;
			_10146_i++;
			goto _iter_begin_1bd09b939;
		}
		_iter_end_1bd09b939:;
	};
	return _10106_precPos;;
}



inline jule::Ptr<_1aa3012cd_IdentExpr> _1aa869a11_buildIdentExpr(jule::Ptr<_1aa2d51c4_Token>* _106924_token) {
	return jule::new_ptr<_1aa3012cd_IdentExpr>(_1aa3012cd_IdentExpr{._field_Token=(*(_106924_token)), ._field_Ident=(*((*(_106924_token))))._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_1aa2d51c4_Token__jule_tuple_int _1aa869cca_getRangeExprTokens(jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _107728_tokens) {
	__jule_tuple_sx_1aa2d51c4_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I32 _10786_rangeN = 0LL;;
	jule::I32 _10796_i = ((*(_107728_tokens)).len() - 1LL);;
	for (; (_10796_i >= 0LL); (_10796_i)--) {
		{
			jule::Ptr<_1aa2d51c4_Token> _10813_tok = (*(_107728_tokens))[_10796_i];;
			{
				auto &_match_expr{ (*(_10813_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1bd0a6070:;
					{
						(_10786_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1bd0a637d:;
					{
						(_10786_rangeN)--;
					}
				}
				_match_end_1bd0a6328:;
			};
			if ((_10786_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_107728_tokens)).slice(0LL, _10796_i);
				__jule_func_result.__jule_result_arg1 = _10786_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1bd0a5613:;
	}
	_iter_end_1bd0a5613:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _10786_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1aa86a1a4_isAnonFnHead(jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _110018_tokens) {
	{
		auto &_match_expr{ (*((*(_110018_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1bd0a7cec:;
			{
				if ((((*(_110018_tokens)).len() == 1LL) || ((*((*(_110018_tokens))[1LL]))._field_Id != static_cast<jule::U32>(29LLU)))) {
					goto _match_end_1bd0a822b;
				};
				goto _case_begin_1bd0a835d;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1bd0a835d:;
			{
				if (((*((*(_110018_tokens))[((*(_110018_tokens)).len() - 1LL)]))._field_Id == static_cast<jule::U32>(73LLU))) {
					goto _match_end_1bd0a822b;
				};
				return true;;
			}
		}
		_match_end_1bd0a822b:;
	};
	return false;;
}



inline jule::Bool _1aa86ada8_checkAssignTokens(jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1aa2d998c_IsAssign((*((*(_1623_tokens))[0LL]))._field_Id))))) {
		return false;;
	};
	jule::I32 _206_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd148e8c:;
		if (it != expr_end) {
			jule::Ptr<_1aa2d51c4_Token> *_219_t = it;
			{
				{
					auto &_match_expr{ (*((*(_219_t))))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1bd149696:;
						{
							(_206_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1bd149a4d:;
						{
							(_206_braceN)--;
						}
					}
					_match_end_1bd149960:;
				};
				{
					
					if ((_206_braceN < 0LL)) {
						_case_begin_1bd14abd6:;
						{
							return false;;
						}
					}
					else if ((_206_braceN > 0LL)) {
						_case_begin_1bd14ac6e:;
						{
							goto _iter_next_1bd148e8c;
						}
					}
					else if (_1aa2da020_IsAssignOp((*((*(_219_t))))._field_Id) || ((*(*(_219_t)).alloc)._field_Id == static_cast<jule::U32>(38LLU))) {
						_case_begin_1bd14acd5:;
						{
							return true;;
						}
					}
					_match_end_1bd14ab81:;
				};
			}
			_iter_next_1bd148e8c:;
			++it;
			goto _iter_begin_1bd148e8c;
		}
		_iter_end_1bd148e8c:;
	};
	return false;;
}



inline _1ada72b17_Log _1aa86c074_makeErr(jule::I32 _5112_row, jule::I32 _5122_col, jule::Ptr<_1aa2da95a_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args) {
	return _1ada72b17_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_5112_row, ._field_Column=_5122_col, ._field_Path=(*((*(_5133_f))))._field_Path, ._field_Text=_1ada73079_Logf(_5143_fmt, _5156_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _1aa86c5a2_range(jule::I32* _6915_i, jule::U32 _6923_open, jule::U32 _6938_close, jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _6959_tokens) {
	if (((*(_6915_i)) >= (*(_6959_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_1aa2d51c4_Token> _732_tok = (*(_6959_tokens))[(*(_6915_i))];;
	if (((*(_732_tok))._field_Id != _6923_open)) {
		return nullptr;;
	};
	((*(_6915_i)))++;
	jule::I32 _786_rangeN = 1LL;;
	jule::I32 _792_start = (*(_6915_i));;
	for (; ((_786_rangeN != 0LL) && ((*(_6915_i)) < (*(_6959_tokens)).len())); ((*(_6915_i)))++) {
		{
			jule::Ptr<_1aa2d51c4_Token> _813_token = (*(_6959_tokens))[(*(_6915_i))];;
			{
				auto &_match_expr{ (*(_813_token))._field_Id };
				
				if (_match_expr == _6923_open) {
					_case_begin_1bd150c52:;
					{
						(_786_rangeN)++;
					}
				}
				else if (_match_expr == _6938_close) {
					_case_begin_1bd1510a4:;
					{
						(_786_rangeN)--;
					}
				}
				_match_end_1bd15102c:;
			};
		}
	_iter_next_1bd15015d:;
	}
	_iter_end_1bd15015d:;;
	return (*(_6959_tokens)).slice(_792_start, ((*(_6915_i)) - 1LL));;
}



inline __jule_tuple_sx_1aa2d51c4_Token__jule_tuple_sx_1aa2d51c4_Token _1aa86c86b_rangeLast(jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _9919_tokens) {
	__jule_tuple_sx_1aa2d51c4_Token__jule_tuple_sx_1aa2d51c4_Token __jule_func_result;
	if (((*(_9919_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U32 _1032_first = (*((*(_9919_tokens))[((*(_9919_tokens)).len() - 1LL)]))._field_Id;;
	if ((((_1032_first != static_cast<jule::U32>(73LLU)) && (_1032_first != static_cast<jule::U32>(76LLU))) && (_1032_first != static_cast<jule::U32>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I32 _1096_braceN = 0LL;;
	jule::I32 _1106_i = ((*(_9919_tokens)).len() - 1LL);;
	for (; (_1106_i >= 0LL); (_1106_i)--) {
		{
			jule::Ptr<_1aa2d51c4_Token> _1123_token = (*(_9919_tokens))[_1106_i];;
			{
				auto &_match_expr{ (*(_1123_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1bd155031:;
					{
						(_1096_braceN)++;
						goto _iter_next_1bd1542e9;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1bd15533e:;
					{
						(_1096_braceN)--;
					}
				}
				_match_end_1bd1552d9:;
			};
			if ((_1096_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_9919_tokens)).slice(0LL, _1106_i);
				__jule_func_result.__jule_result_arg1 = (*(_9919_tokens)).slice(_1106_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1bd1542e9:;
	}
	_iter_end_1bd1542e9:;;
	__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1aa2d51c4_Token__jule_tuple_s_1ada72b17_Log _1aa86cd22_parts(jule::Slice<jule::Ptr<_1aa2d51c4_Token>>* _13715_tokens, jule::U32 _13733_id, jule::Bool _13746_exprMust) {
	__jule_tuple_ssx_1aa2d51c4_Token__jule_tuple_s_1ada72b17_Log __jule_func_result;
	if (((*(_13715_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I32 _1416_rangeN = 0LL;;
	jule::I32 _1426_last = 0LL;;
	{
		auto expr = _13715_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd158177:;
		if (it != expr_end) {
			jule::I32 _1436_i = it - expr->begin();
			jule::Ptr<_1aa2d51c4_Token> _1439_token = *it;
			{
				{
					auto &_match_expr{ (*(_1439_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1bd15919a:;
						{
							(_1416_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1bd159222:;
						{
							(_1416_rangeN)--;
						}
					}
					else if (_match_expr == _13733_id) {
						_case_begin_1bd159288:;
						{
							if ((_1416_rangeN > 0LL)) {
								goto _iter_next_1bd158177;
							};
							if ((_13746_exprMust && ((_1436_i - _1426_last) <= 0LL))) {
								_1ada72b17_Log _1545_err = _1aa86c074_makeErr((*(_1439_token))._field_Row, (*_1439_token.alloc)._field_Column, &((*_1439_token.alloc)._field_File), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());;
								{ jule::Slice<_1ada72b17_Log> &__jule_push_dest = __jule_func_result.__jule_result_arg1; __jule_push_dest.push(_1545_err); };
							};
							{ jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_13715_tokens)).slice(_1426_last, _1436_i)); };
							_1426_last=(_1436_i + 1LL);
						}
					}
					_match_end_1bd1590e0:;
				};
			}
			_iter_next_1bd158177:;
			++it;
			_1436_i++;
			goto _iter_begin_1bd158177;
		}
		_iter_end_1bd158177:;
	};
	if ((_1426_last < (*(_13715_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1aa2d51c4_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_13715_tokens)).slice(_1426_last)); };
	};
	return __jule_func_result;;
}



inline jule::U32 _1aa86d0a8_getCloseOfBrace(jule::U32 _16720_left) {
	{
		auto &_match_expr{ _16720_left };
		
		if (_match_expr == static_cast<jule::U32>(75LLU)) {
			_case_begin_1bd15c70e:;
			{
				return static_cast<jule::U32>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_1bd158be4:;
			{
				return static_cast<jule::U32>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(77LLU)) {
			_case_begin_1bd15c797:;
			{
				return static_cast<jule::U32>(76LLU);;
			}
		}
		else {
			_case_begin_1bd15a465:;
			{
				return _16720_left;;
			}
		}
		_match_end_1bd158b17:;
	};
}



inline _1ada72b17_Log _1aa86d4d7_compilerErr(jule::Ptr<_1aa2d51c4_Token>* _18017_token, jule::Str* _18033_fmt, jule::Slice<jule::Any> _18046_args) {
	return _1ada72b17_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*((*(_18017_token))))._field_Row, ._field_Column=(*((*(_18017_token))))._field_Column, ._field_Path=(*((*((*(_18017_token))))._field_File))._field_Path, ._field_Text=_1ada73079_Logf((*(_18033_fmt)), _18046_args), ._field_Line=_1aa2db9a0_GetRow((*((*(_18017_token))))._field_File, (*((*(_18017_token))))._field_Row), ._field_Suggestion=jule::Str()};;
}



inline void _1aa86d87d_pushSuggestion(_1ada72b17_Log* _19130_log, jule::Str _19141_fmt, jule::Slice<jule::Any> _19154_args) {
	(*(_19130_log))._field_Suggestion=_1ada73079_Logf(_19141_fmt, _19154_args);
}



inline jule::Ptr<_1aa2ea67e_TypeDecl> _1aa880791_buildVoidType(void) {
	return jule::new_ptr<_1aa2ea67e_TypeDecl>(_1aa2ea67e_TypeDecl{._field_Token=jule::Ptr<_1aa2d51c4_Token>(nullptr), ._field_Kind=jule::Any(nullptr)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1a7619561_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str::lit("windows", 7)) {
			_case_begin_1bd49a552:;
			{
				__jule_func_result.__jule_result_arg0=_1ada75c91_IsWindows(_1adc47aab_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("darwin", 6)) {
			_case_begin_1bd49a5b8:;
			{
				__jule_func_result.__jule_result_arg0=_1ada7609e_IsDarwin(_1adc47aab_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("linux", 5)) {
			_case_begin_1bd49a288:;
			{
				__jule_func_result.__jule_result_arg0=_1ada76368_IsLinux(_1adc47aab_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("unix", 4)) {
			_case_begin_1bd49a2ee:;
			{
				__jule_func_result.__jule_result_arg0=_1ada76ec3_IsUnix(_1adc47aab_Os);
			}
		}
		else {
			_case_begin_1bd499c05:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1bd49a178:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1a7619819_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str::lit("i386", 4)) {
			_case_begin_1bd49c730:;
			{
				__jule_func_result.__jule_result_arg0=_1ada766a9_IsI386(_1adc47d64_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("amd64", 5)) {
			_case_begin_1bd49c796:;
			{
				__jule_func_result.__jule_result_arg0=_1ada76940_IsAmd64(_1adc47d64_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("arm64", 5)) {
			_case_begin_1bd49c466:;
			{
				__jule_func_result.__jule_result_arg0=_1ada76c09_IsArm64(_1adc47d64_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x64", 3)) {
			_case_begin_1bd49c4cc:;
			{
				__jule_func_result.__jule_result_arg0=_1ada775de_Is64Bit(_1adc47d64_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x32", 3)) {
			_case_begin_1bd49c543:;
			{
				__jule_func_result.__jule_result_arg0=_1ada7739c_Is32Bit(_1adc47d64_Arch);
			}
		}
		else {
			_case_begin_1bd49bdd3:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1bd49c356:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a7619ad3_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_1ed494e34_Base(_5029_p);
	jule::I32 _522_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_522_n - _1ed4948a1_Ext(_5029_p).len()));;
	jule::Str _586_a1 = jule::Str();;
	jule::Str _616_a2 = jule::Str();;
	jule::I32 _646_i = _1ed475db0_FindLastByte(_5029_p, '_');;
	if ((_646_i == -1LL)) {
		jule::Bool _677_ok;
		jule::Bool _6715_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a7619561_checkOs(_5029_p);
			_677_ok = __jule_assign_result.__jule_result_arg0;
			_6715_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6715_exist) {
			return _677_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a7619819_checkArch(_5029_p);
			_677_ok = __jule_assign_result.__jule_result_arg0;
			_6715_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6715_exist)) || _677_ok);;
	};
	if (((_646_i + 1LL) >= _522_n)) {
		return true;;
	};
	_586_a1=_5029_p.slice((_646_i + 1LL));
	(_5029_p).mut_slice(0LL, _646_i);;
	_646_i=_1ed475db0_FindLastByte(_5029_p, '_');
	if ((_646_i != -1LL)) {
		_616_a2=_5029_p.slice((_646_i + 1LL));
	};
	if ((_616_a2).empty()) {
		jule::Bool _887_ok;
		jule::Bool _8815_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a7619561_checkOs(_586_a1);
			_887_ok = __jule_assign_result.__jule_result_arg0;
			_8815_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8815_exist) {
			return _887_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a7619819_checkArch(_586_a1);
			_887_ok = __jule_assign_result.__jule_result_arg0;
			_8815_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8815_exist)) || _887_ok);;
	};
	jule::Bool _966_ok;
	jule::Bool _9614_exist;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a7619819_checkArch(_586_a1);
		_966_ok = __jule_assign_result.__jule_result_arg0;
		_9614_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9614_exist) {
		if ((!(_966_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a7619561_checkOs(_616_a2);
			_966_ok = __jule_assign_result.__jule_result_arg0;
			_9614_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9614_exist)) || _966_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a7619561_checkOs(_586_a1);
		_966_ok = __jule_assign_result.__jule_result_arg0;
		_9614_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9614_exist)) || _966_ok);;
}



inline void _1a761ad6a_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_1adc47aab_Os); };
	if (_1ada76ec3_IsUnix(_1adc47aab_Os)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str::lit("unix", 4)); };
	};
}



inline void _1a761b0e0_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_1adc47d64_Arch); };
	if (_1ada775de_Is64Bit(_1adc47d64_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x64", 3)); };
	};
	if (_1ada7739c_Is32Bit(_1adc47d64_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x32", 3)); };
	};
}



inline void _1a761b3cb_initVars(jule::Slice<jule::Str>* _5518_vars, _1a761aa4b_CompileInfo* _5532_info) {
	_1a761ad6a_setOsVars(_5518_vars);
	_1a761b0e0_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1bd4a7dde:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("clang", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1bd4a7c79:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("gcc", 3)); };
			}
		}
		_match_end_1bd4a7c24:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1bd4a7ce0:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp14", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1bd4a8a16:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp17", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1bd4a8a7c:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp20", 5)); };
			}
		}
		_match_end_1bd4a9231:;
	};
}



inline jule::Slice<jule::U8> _1aa88471d_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__1ed38035d_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str::lit("error: file cannot read", 23));
			;
			_1adc46901_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _1ada72b17_Log _1aa884a2b_flatCompilerErr(jule::Str _4120_text) {
	return _1ada72b17_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=_4120_text, ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Ptr<_1aa3315b6_Fn> _1aa603da5_RuntimeFindFn(jule::Ptr<_1aa39b0ae_ImportInfo>* _1323_runtime, jule::Str _1345_ident) {
	;
	jule::Ptr<_1aa3315b6_Fn> _156_f = _1aa39c6ba_FindFn((*(_1323_runtime)).ptr(), _1345_ident, false);;
	if ((_156_f == nullptr)) {
		jule::outln(_1345_ident);
		jule::panic(jule::Str::lit("runtime function is not exist, this is an implementation mistake, this panic call should be unreachable", 103) + jule::Str("\nlocation: julec/obj/runtime.jule:18:3"));;
	};
	return _156_f;;
}



inline void _1aa8892e4_pushPasses(jule::Ptr<_1aa39ded5_Package>* _12220_p, jule::Slice<jule::Str>* _12244_passes) {
	{
		auto expr = &((*((*(_12220_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd4e84e5:;
		if (it != expr_end) {
			jule::Ptr<_1aa4475cd_SymbolTable> _12314_f = *it;
			{
				_julec_label_1bd4e8b22:;
				{
					auto expr = &((*(_12314_f))._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd4e9073:;
					if (it != expr_end) {
						_1aa338c3e_Pass _12510_pass = *it;
						{
							if ((_12510_pass._field_Text).empty()) {
								goto _iter_next_1bd4e9073;
							};
							{
								auto expr = _12244_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bd4e9b78:;
								if (it != expr_end) {
									jule::Str _12911_cpass = *it;
									{
										if ((_12911_cpass == _12510_pass._field_Text)) {
											goto _iter_next_1bd4e9073;
										};
									}
									_iter_next_1bd4e9b78:;
									++it;
									goto _iter_begin_1bd4e9b78;
								}
								_iter_end_1bd4e9b78:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_12244_passes)); __jule_push_dest.push(_12510_pass._field_Text); };
						}
						_iter_next_1bd4e9073:;
						++it;
						goto _iter_begin_1bd4e9073;
					}
					_iter_end_1bd4e9073:;
				};
			}
			_iter_next_1bd4e84e5:;
			++it;
			goto _iter_begin_1bd4e84e5;
		}
		_iter_end_1bd4e84e5:;
	};
}



inline jule::Slice<jule::Str> _1aa8896ac_getAllUniquePasses(jule::Ptr<_1aa39ded5_Package>* _13928_pkg, jule::Slice<jule::Ptr<_1aa39b0ae_ImportInfo>> _13953_uses) {
	jule::Slice<jule::Str> _14010_passes = nullptr;;
	_1aa8892e4_pushPasses(_13928_pkg, &(_14010_passes));
	{
		auto expr = &(_13953_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd4eb21d:;
		if (it != expr_end) {
			jule::Ptr<_1aa39b0ae_ImportInfo> _14314_u = *it;
			{
				if ((!((*(_14314_u))._field_Binded))) {
					_1aa8892e4_pushPasses(&((*_14314_u.alloc)._field_Package), &(_14010_passes));
				};
			}
			_iter_next_1bd4eb21d:;
			++it;
			goto _iter_begin_1bd4eb21d;
		}
		_iter_end_1bd4eb21d:;
	};
	return _14010_passes;;
}



inline _1a761aa4b_CompileInfo _1aa8898bb_buildCompileInfo(void) {
	_1a761aa4b_CompileInfo _1536_info = _1a761aa4b_CompileInfo{._field_Prod=_1adc505db_Production, ._field_Test=_1adc4ec28_Test, ._field_Compiler=jule::Str::lit("clang", 5), ._field_CppStd=jule::Str::lit("cpp14", 5)};;
	{
		auto &_match_expr{ _1adc4cd7a_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1bd4ec609:;
			{
				_1536_info._field_Compiler=jule::Str::lit("clang", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1bd4ec76e:;
			{
				_1536_info._field_Compiler=jule::Str::lit("gcc", 3);
			}
		}
		_match_end_1bd4ec6e7:;
	};
	{
		auto &_match_expr{ _1adc4e486_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1bd4ec807:;
			{
				_1536_info._field_CppStd=jule::Str::lit("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1bd4ed396:;
			{
				_1536_info._field_CppStd=jule::Str::lit("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1bd4ecb37:;
			{
				_1536_info._field_CppStd=jule::Str::lit("cpp20", 5);
			}
		}
		_match_end_1bd4ed550:;
	};
	return _1536_info;;
}



inline void _1aa889b74_pushRuntimeToAST(jule::Ptr<_1aa2e876a_AST>* _17826_f) {
	jule::Ptr<_1aa313785_UseDecl> _1796_decl = jule::new_ptr<_1aa313785_UseDecl>(_1aa313785_UseDecl{._field_Token=nullptr, ._field_LinkPath=jule::Str::lit("std::runtime", 12), ._field_Alias=jule::Str(), ._field_Full=false, ._field_Selected=nullptr, ._field_Binded=false, ._field_Std=true});;
	{ jule::Slice<jule::Ptr<_1aa313785_UseDecl>> &__jule_push_dest = (*((*(_17826_f))))._field_UseDecls; __jule_push_dest.push(_1796_decl); };
	if (((*((*(_17826_f))))._field_UseDecls.len() > 1LL)) {
		(*((*(_17826_f))))._field_UseDecls[((*((*(_17826_f))))._field_UseDecls.len() - 1LL)]=(*((*(_17826_f))))._field_UseDecls[0LL];
		(*((*(_17826_f))))._field_UseDecls[0LL]=_1796_decl;
	};
}



inline void _1aa88a36c_IterPackages(jule::Ptr<_1aa887941_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1aa39ded5_Package>*> _731_f) {
	{
		auto expr = &((*((*(_722_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd51e1ca:;
		if (it != expr_end) {
			jule::Ptr<_1aa39b0ae_ImportInfo> _814_used = *it;
			{
				if ((!((*(_814_used))._field_Binded))) {
					_731_f(&((*_814_used.alloc)._field_Package));
				};
			}
			_iter_next_1bd51e1ca:;
			++it;
			goto _iter_begin_1bd51e1ca;
		}
		_iter_end_1bd51e1ca:;
	};
	_731_f(&((*((*(_722_ir))))._field_Main));
}



inline void _1aa88a69c_IterFiles(jule::Ptr<_1aa39ded5_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1aa4475cd_SymbolTable>*> _1634_f) {
	{
		auto expr = &((*((*(_1619_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd520819:;
		if (it != expr_end) {
			jule::Ptr<_1aa4475cd_SymbolTable> _1714_file = *it;
			{
				_1634_f(&(_1714_file));
			}
			_iter_next_1bd520819:;
			++it;
			goto _iter_begin_1bd520819;
		}
		_iter_end_1bd520819:;
	};
}



inline void _1aa88aa43_iterTraitInheritMethods(jule::Ptr<_1aa345047_Trait>* _2233_base, jule::Ptr<_1aa345047_Trait>* _2252_t, jule::Fn<void,jule::Ptr<_1aa3315b6_Fn>*> _2263_f) {
	_1aa88ae61_iterTraitInheritMethods1(_2233_base, _2252_t, _2263_f);
	{
		auto expr = &((*((*(_2252_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd52194c:;
		if (it != expr_end) {
			jule::Ptr<_1aa3315b6_Fn> _2414_m = *it;
			{
				if ((!(_1aa8910cb_ContainsTraitMethod(_2233_base, &((*(_2414_m))._field_Ident))))) {
					_2263_f(&(_2414_m));
				};
			}
			_iter_next_1bd52194c:;
			++it;
			goto _iter_begin_1bd52194c;
		}
		_iter_end_1bd52194c:;
	};
}



inline void _1aa88ae61_iterTraitInheritMethods1(jule::Ptr<_1aa345047_Trait>* _3134_base, jule::Ptr<_1aa345047_Trait>* _3153_t, jule::Fn<void,jule::Ptr<_1aa3315b6_Fn>*> _3164_f) {
	{
		auto expr = &((*((*(_3153_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd522cc2:;
		if (it != expr_end) {
			jule::Ptr<_1a6022d5b_TypeSymbol> _3214_inh = *it;
			{
				jule::Ptr<_1aa345047_Trait> _337_t2 = _1a601e60a_Trait((*(_3214_inh))._field_Kind.ptr());;
				_1aa88aa43_iterTraitInheritMethods(_3134_base, &(_337_t2), _3164_f);
			}
			_iter_next_1bd522cc2:;
			++it;
			goto _iter_begin_1bd522cc2;
		}
		_iter_end_1bd522cc2:;
	};
}



inline void _1aa88b219_IterTraitMethods(jule::Ptr<_1aa345047_Trait>* _3926_t, jule::Fn<void,jule::Ptr<_1aa3315b6_Fn>*> _3937_f) {
	{
		auto expr = &((*((*(_3926_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd524257:;
		if (it != expr_end) {
			jule::Ptr<_1aa3315b6_Fn> _4014_m = *it;
			{
				_3937_f(&(_4014_m));
			}
			_iter_next_1bd524257:;
			++it;
			goto _iter_begin_1bd524257;
		}
		_iter_end_1bd524257:;
	};
	_1aa88ae61_iterTraitInheritMethods1(_3926_t, _3926_t, _3937_f);
}



inline jule::Bool _1aa88d4e6_IsForwarded(jule::Ptr<_1aa378ba2_Scope>* _2417_s) {
	jule::Any _252_last = (*((*(_2417_s))))._field_Stmts[((*((*(_2417_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _252_last };
		
		if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1bd54a3d2:;
			{
				{
					auto &_match_expr{ (*(_252_last.cast_ptr<_1aa44cc98_Data>(&__jule_any_type31)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type30) {
						_case_begin_1bd54a5ad:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1bd54b27e:;
						{
							return false;;
						}
					}
					_match_end_1bd54b229:;
				};
			}
		}
		else {
			_case_begin_1bd54a547:;
			{
				return true;;
			}
		}
		_match_end_1bd54a4e2:;
	};
}



inline jule::Bool _1aa88d804_IsExprComesFromBind(jule::Ptr<_1aa44cc98_Data>* _4025_d) {
	{
		auto &_match_expr{ (*((*(_4025_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bd54a965:;
			{
				return (*((*((*(_4025_d))))._field_Model.unsafe_cast_ptr<_1aa3e4d3e_Var>()))._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1bd54be2d:;
			{
				return (*((*((*((*((*(_4025_d))))._field_Model.unsafe_cast_ptr<_1aa32837c_StructSubIdentExprModel>()))._field_Owner))._field_Decl))._field_Binded;;
			}
		}
		else {
			_case_begin_1bd54b966:;
			{
				return false;;
			}
		}
		_match_end_1bd54b911:;
	};
}



inline jule::Bool _1aa88dabd_IsAny(jule::Ptr<_1a601a64a_TypeKind>* _5215_t) {
	if ((_1a601d83a_TypeEnum((*(_5215_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1a6023763_Prim> _562_prim = _1a601cd01_Prim((*(_5215_t)).ptr());;
	return ((_562_prim != nullptr) && _1a6026eb4_IsAny(_562_prim));;
}



inline jule::Bool _1aa88de0e_IsClosure(jule::Ptr<_1aa326545_AnonFnExprModel>* _6115_m) {
	return ((*((*(_6115_m))))._field_Captured.len() > 0LL);;
}



inline jule::Bool _1aa88e195_IsOpMethod(jule::Ptr<_1aa3315b6_Fn>* _6416_m) {
	if ((((*((*(_6416_m))))._field_Generics.len() > 0LL) || ((*((*(_6416_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	jule::Ptr<_1aa334597_FnIns> _682_mi = (*((*(_6416_m))))._field_Instances[0LL];;
	;
	;
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Eq)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Gt)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_GtEq)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Lt)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_LtEq)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Shl)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Shr)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Add)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Sub)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Div)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Mul)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Mod)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitAnd)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitOr)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitXor)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Neg)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Pos)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitNot)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_AddAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_SubAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_DivAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_MulAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_ModAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_ShlAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_ShrAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitOrAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitAndAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitXorAssign)) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1aa88e519_IsTraitMethod(jule::Ptr<_1aa31e373_StructIns>* _8023_owner, jule::Ptr<_1aa334597_FnIns>* _8043_f) {
	{
		auto expr = &((*((*((*(_8023_owner))))._field_Decl))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd552708:;
		if (it != expr_end) {
			jule::Ptr<_1aa345047_Trait> _8114_t = *it;
			{
				if ((_1aa345c29_FindMethod(_8114_t.ptr(), (*((*((*(_8043_f))))._field_Decl))._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_1bd552708:;
			++it;
			goto _iter_begin_1bd552708;
		}
		_iter_end_1bd552708:;
	};
	return false;;
}



inline jule::Bool _1aa88e88d_IsStdPackage(jule::Str _9417_f, jule::Str _9425_p) {
	return _1ed4731a9_HasPrefix(_9417_f, _1ed49461a_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1adc46e51_PathStdlib; (*it++) = _9425_p; __jule_collection; })));;
}



inline jule::Bool _1aa88ec67_IsImplicitImport(jule::Ptr<_1aa39b0ae_ImportInfo> _10221_imp) {
	return ((*(_10221_imp))._field_Token == nullptr);;
}



inline jule::Ptr<_1aa2e9a9b_Directive> _1aa89088e_FindDirective(jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>>* _1123_directives, jule::Str _1154_tag) {
	{
		auto expr = _1123_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd55d6c0:;
		if (it != expr_end) {
			jule::Ptr<_1aa2e9a9b_Directive> _1214_dr = *it;
			{
				if (((*((*(_1214_dr))._field_Tag))._field_Kind == _1154_tag)) {
					return _1214_dr;;
				};
			}
			_iter_next_1bd55d6c0:;
			++it;
			goto _iter_begin_1bd55d6c0;
		}
		_iter_end_1bd55d6c0:;
	};
	return nullptr;;
}



inline jule::Bool _1aa890c57_HasDirective(jule::Slice<jule::Ptr<_1aa2e9a9b_Directive>>* _2118_directives, jule::Str _2149_tag) {
	return (_1aa89088e_FindDirective(&((*((&((*(_2118_directives))))))), _2149_tag) != nullptr);;
}



inline jule::Bool _1aa8910cb_ContainsTraitMethod(jule::Ptr<_1aa345047_Trait>* _2629_t, jule::Str* _2641_ident) {
	{
		auto expr = &((*((*(_2629_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd5603c5:;
		if (it != expr_end) {
			jule::Ptr<_1aa3315b6_Fn> _279_m = *it;
			{
				if (((*(_279_m))._field_Ident == (*(_2641_ident)))) {
					return true;;
				};
			}
			_iter_next_1bd5603c5:;
			++it;
			goto _iter_begin_1bd5603c5;
		}
		_iter_end_1bd5603c5:;
	};
	return false;;
}



inline jule::I32 _1aa891791_FindTraitTypeOffsetS(jule::Ptr<_1aa345047_Trait> _3925_t, jule::Ptr<_1aa31e373_StructIns> _3940_s) {
	if (((*(_3925_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _436_i = 0LL;;
	{
		auto expr = &((*_3925_t.alloc)._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd5620db:;
		if (it != expr_end) {
			jule::Ptr<_1aa31b518_Struct> *_449_si = it;
			{
				if (((*(_3940_s))._field_Decl == (*(_449_si)))) {
					{
						auto expr = &((*((*(_449_si))))._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bd562e77:;
						if (it != expr_end) {
							jule::Ptr<_1aa31e373_StructIns> *_4611_ins = it;
							{
								if (((*(_4611_ins)) == _3940_s)) {
									return _436_i;;
								};
								(_436_i)++;
							}
							_iter_next_1bd562e77:;
							++it;
							goto _iter_begin_1bd562e77;
						}
						_iter_end_1bd562e77:;
					};
					goto _iter_end_1bd5620db;
				} else {
					_436_i+=(*((*(_449_si))))._field_Instances.len();
				};
			}
			_iter_next_1bd5620db:;
			++it;
			goto _iter_begin_1bd5620db;
		}
		_iter_end_1bd5620db:;
	};
	return -1LL;;
}



inline jule::I32 _1aa891b15_FindTraitTypeOffset(jule::Ptr<_1aa345047_Trait> _6224_t, jule::Ptr<_1a601a64a_TypeKind> _6239_k) {
	if (((*(_6224_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1aa31e373_StructIns> _6610_s = nullptr;;
	if ((_1a601d087_Sptr(_6239_k.ptr()) != nullptr)) {
		_6239_k=(*(_1a601d087_Sptr(_6239_k)))._field_Elem;
	};
	_6610_s=_1a601e374_Struct(_6239_k);
	if ((_6610_s == nullptr)) {
		return -1LL;;
	};
	return _1aa891791_FindTraitTypeOffsetS(_6224_t, _6610_s);;
}



inline jule::Ptr<_1aa334597_FnIns> _1aa892044_FindOperator(jule::Ptr<_1aa31e373_StructIns>* _7822_s, jule::U32 _7837_op, jule::Bool _7850_unary) {
	{
		auto &_match_expr{ _7837_op };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1bd5668d7:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Eq;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(70LLU)) {
			_case_begin_1bd5666ea:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Gt;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1bd566761:;
			{
				return (*((*(_7822_s))))._field_Operators._field_GtEq;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(69LLU)) {
			_case_begin_1bd56694d:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Lt;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1bd5669c5:;
			{
				return (*((*(_7822_s))))._field_Operators._field_LtEq;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1bd566a4c:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Shl;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1bd566b6d:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Shr;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1bd566bd4:;
			{
				if (_7850_unary) {
					return (*((*(_7822_s))))._field_Operators._field_Pos;;
				};
				return (*((*(_7822_s))))._field_Operators._field_Add;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1bd566c4a:;
			{
				if (_7850_unary) {
					return (*((*(_7822_s))))._field_Operators._field_Neg;;
				};
				return (*((*(_7822_s))))._field_Operators._field_Sub;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1bd566cb1:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Div;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1bd566d27:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Mul;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1bd566d9e:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Mod;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1bd566e26:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitAnd;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU)) {
			_case_begin_1bd566e9d:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitOr;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1bd567025:;
			{
				if (_7850_unary) {
					return (*((*(_7822_s))))._field_Operators._field_BitNot;;
				};
				return (*((*(_7822_s))))._field_Operators._field_BitXor;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(40LLU)) {
			_case_begin_1bd56709c:;
			{
				return (*((*(_7822_s))))._field_Operators._field_AddAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(41LLU)) {
			_case_begin_1bd567124:;
			{
				return (*((*(_7822_s))))._field_Operators._field_SubAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_1bd56719b:;
			{
				return (*((*(_7822_s))))._field_Operators._field_DivAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(42LLU)) {
			_case_begin_1bd567223:;
			{
				return (*((*(_7822_s))))._field_Operators._field_MulAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1bd56729a:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ModAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(45LLU)) {
			_case_begin_1bd567322:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ShlAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(46LLU)) {
			_case_begin_1bd567399:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ShrAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(49LLU)) {
			_case_begin_1bd567421:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitOrAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(48LLU)) {
			_case_begin_1bd567498:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitAndAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(47LLU)) {
			_case_begin_1bd567520:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitXorAssign;;
			}
		}
		else {
			_case_begin_1bd566343:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd566475:;
	};
}



inline jule::Ptr<_1aa334597_FnIns> _1aa8923b8_FindGenericInstance(jule::Ptr<_1aa3315b6_Fn>* _14729_f, jule::Slice<jule::Ptr<_1a601a64a_TypeKind>> _14737_generics) {
	_julec_label_1bc904d0e:;
	{
		auto expr = &((*((*(_14729_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc90524e:;
		if (it != expr_end) {
			jule::Ptr<_1aa334597_FnIns> _14914_ins = *it;
			{
				{
					auto expr = &((*(_14914_ins))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc905b45:;
					if (it != expr_end) {
						jule::I32 _1507_i = it - expr->begin();
						{
							if ((!(_1a601ad87_Equal((*((*(_14914_ins))._field_Generics[_1507_i]))._field_Kind, _14737_generics[_1507_i])))) {
								goto _iter_next_1bc90524e;
							};
						}
						_iter_next_1bc905b45:;
						++it;
						_1507_i++;
						goto _iter_begin_1bc905b45;
					}
					_iter_end_1bc905b45:;
				};
				return _14914_ins;;
			}
			_iter_next_1bc90524e:;
			++it;
			goto _iter_begin_1bc90524e;
		}
		_iter_end_1bc90524e:;
	};
	jule::panic(jule::Str::lit("generic instance lookup failed, this is an implementation mistake", 65) + jule::Str("\nlocation: julec/obj/lookup.jule:157:2"));;
}



inline jule::Bool _1bd513499_isOrdered(jule::Ptr<_1aa3e4d3e_Var>* _1418_t, jule::Slice<jule::Ptr<_1aa3e4d3e_Var>> _1425_s) {
	_julec_label_1bd5158ca:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd515d1a:;
		if (it != expr_end) {
			jule::Ptr<_1aa3e4d3e_Var> *_169_d = it;
			{
				{
					
{
						_case_begin_1bd516601:;
						{
							if ((*((*(_169_d))))._field_Constant) {
								goto _iter_next_1bd515d1a;
							};
						}
					}
					_match_end_1bd51658a:;
				};
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd516cc7:;
					if (it != expr_end) {
						jule::Ptr<_1aa3e4d3e_Var> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_1bd515d1a;
							};
						}
						_iter_next_1bd516cc7:;
						++it;
						goto _iter_begin_1bd516cc7;
					}
					_iter_end_1bd516cc7:;
				};
				return false;;
			}
			_iter_next_1bd515d1a:;
			++it;
			goto _iter_begin_1bd515d1a;
		}
		_iter_end_1bd515d1a:;
	};
	return true;;
}

inline jule::Bool _1bd51a12c_isOrdered(jule::Ptr<_1aa31b518_Struct>* _1418_t, jule::Slice<jule::Ptr<_1aa31b518_Struct>> _1425_s) {
	_julec_label_1bd51c519:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd51c959:;
		if (it != expr_end) {
			jule::Ptr<_1aa31b518_Struct> *_169_d = it;
			{
				;
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd51d064:;
					if (it != expr_end) {
						jule::Ptr<_1aa31b518_Struct> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_1bd51c959;
							};
						}
						_iter_next_1bd51d064:;
						++it;
						goto _iter_begin_1bd51d064;
					}
					_iter_end_1bd51d064:;
				};
				return false;;
			}
			_iter_next_1bd51c959:;
			++it;
			goto _iter_begin_1bd51c959;
		}
		_iter_end_1bd51c959:;
	};
	return true;;
}



inline void _1bd510b6c_order(jule::Slice<jule::Ptr<_1aa3e4d3e_Var>> _3717_s) {
	jule::I32 _386_i = 0LL;;
	_julec_label_1bd511145:;
	jule::I32 _406_j = _386_i;;
	_julec_label_1bd5122de:;
	for (; (_406_j < _3717_s.len()); (_406_j)++) {
		{
			jule::Ptr<_1aa3e4d3e_Var> _437_t = _3717_s[_406_j];;
			{
				auto expr = _3717_s.slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1bd513059:;
				if (it != expr_end) {
					jule::Ptr<_1aa3e4d3e_Var> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_1bd51194d;
						};
					}
					_iter_next_1bd513059:;
					++it;
					goto _iter_begin_1bd513059;
				}
				_iter_end_1bd513059:;
			};
			if (_1bd513499_isOrdered(&(_437_t), _3717_s.slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap(_3717_s[_386_i], _3717_s[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_1bd51194d:;
	}
	_iter_end_1bd51194d:;;
	if ((_386_i < _3717_s.len())) {
		goto _julec_label_1bd511145;
	};
}

inline void _1bd5178aa_order(jule::Slice<jule::Ptr<_1aa31b518_Struct>> _3717_s) {
	jule::I32 _386_i = 0LL;;
	_julec_label_1bd517d1c:;
	jule::I32 _406_j = _386_i;;
	_julec_label_1bd518e72:;
	for (; (_406_j < _3717_s.len()); (_406_j)++) {
		{
			jule::Ptr<_1aa31b518_Struct> _437_t = _3717_s[_406_j];;
			{
				auto expr = _3717_s.slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1bd519bdc:;
				if (it != expr_end) {
					jule::Ptr<_1aa31b518_Struct> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_1bd518ea5;
						};
					}
					_iter_next_1bd519bdc:;
					++it;
					goto _iter_begin_1bd519bdc;
				}
				_iter_end_1bd519bdc:;
			};
			if (_1bd51a12c_isOrdered(&(_437_t), _3717_s.slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap(_3717_s[_386_i], _3717_s[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_1bd518ea5:;
	}
	_iter_end_1bd518ea5:;;
	if ((_386_i < _3717_s.len())) {
		goto _julec_label_1bd517d1c;
	};
}



inline void _1ab1a636e_EliminateDefines(jule::Ptr<_1aa887941_IR>* _35326_ir) {
	jule::Ptr<_1ab1a3190_ObjectDeadCode> _3546_ocd = static__1ab1a3679_new(_35326_ir);;
	_1ab1a6072_elimanate(_3546_ocd);
}



inline void _1ab1aa2da_eliminateDeadCodeOfScope(jule::Ptr<_1aa378ba2_Scope> _23833_s) {
	jule::Slice<jule::Ptr<_1aa37b545_Label>> _2392_labels = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa37b545_Label>>::alloc(0LL, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa37b545_Label>(nullptr); __jule_collection; });;
	jule::Slice<jule::Ptr<_1aa37b91e_GotoSt>> _2402_gotos = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa37b91e_GotoSt>>::alloc(0LL, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa37b91e_GotoSt>(nullptr); __jule_collection; });;
	jule::Ptr<_1ab1a70a6_scopeDeadCode> _2416_sdc = jule::new_ptr<_1ab1a70a6_scopeDeadCode>(_1ab1a70a6_scopeDeadCode{._field_parent=jule::Ptr<_1ab1a70a6_scopeDeadCode>(nullptr), ._field_s=_23833_s, ._field_i=0, ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1aa37b545_Label>>>)((&(_2392_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1aa37b91e_GotoSt>>>)((&(_2402_gotos)))), ._field_except=false});;
	{
		_1ab1a9edd_optimizeStmts(_2416_sdc);
	};
}



inline void _1ab1aa560_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1aa3315b6_Fn>>* _25033_funcs) {
	{
		auto expr = _25033_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc97d4a3:;
		if (it != expr_end) {
			jule::Ptr<_1aa3315b6_Fn> _25114_func = *it;
			{
				{
					auto expr = &((*(_25114_func))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc98064d:;
					if (it != expr_end) {
						jule::Ptr<_1aa334597_FnIns> _25215_ins = *it;
						{
							_1ab1aa2da_eliminateDeadCodeOfScope((*(_25215_ins))._field_Scope);
						}
						_iter_next_1bc98064d:;
						++it;
						goto _iter_begin_1bc98064d;
					}
					_iter_end_1bc98064d:;
				};
			}
			_iter_next_1bc97d4a3:;
			++it;
			goto _iter_begin_1bc97d4a3;
		}
		_iter_end_1bc97d4a3:;
	};
}



inline void _1ab1aa791_eliminateScopeStructMethods(jule::Slice<jule::Ptr<_1aa31b518_Struct>>* _25937_structs) {
	{
		auto expr = _25937_structs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc9810dd:;
		if (it != expr_end) {
			jule::Ptr<_1aa31b518_Struct> _26014_s = *it;
			{
				{
					auto expr = &((*(_26014_s))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc98173c:;
					if (it != expr_end) {
						jule::Ptr<_1aa31e373_StructIns> _26115_ins = *it;
						{
							_1ab1aa560_eliminateScopeFunctions(&((*(_26115_ins))._field_Methods));
						}
						_iter_next_1bc98173c:;
						++it;
						goto _iter_begin_1bc98173c;
					}
					_iter_end_1bc98173c:;
				};
			}
			_iter_next_1bc9810dd:;
			++it;
			goto _iter_begin_1bc9810dd;
		}
		_iter_end_1bc9810dd:;
	};
}



inline void _1ab1aaa49_eliminateFunctionsScopePackage(jule::Ptr<_1aa39ded5_Package>* _26740_pkg) {
	{
		auto expr = &((*((*(_26740_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc9814d9:;
		if (it != expr_end) {
			jule::Ptr<_1aa4475cd_SymbolTable> _26814_f = *it;
			{
				_1ab1aa560_eliminateScopeFunctions(&((*(_26814_f))._field_Funcs));
				_1ab1aa791_eliminateScopeStructMethods(&((*_26814_f.alloc)._field_Structs));
			}
			_iter_next_1bc9814d9:;
			++it;
			goto _iter_begin_1bc9814d9;
		}
		_iter_end_1bc9814d9:;
	};
}



inline void _1ab1aac47_eliminateScopePackage(jule::Ptr<_1aa39ded5_Package>* _27431_pkg) {
	_1ab1aaa49_eliminateFunctionsScopePackage(_27431_pkg);
}



inline void _1ab1aae78_EliminateScopes(jule::Ptr<_1aa887941_IR>* _27925_ir) {
	jule::I32 _2806_i = ((*((*(_27925_ir))))._field_Used.len() - 1LL);;
	for (; (_2806_i >= 0LL); (_2806_i)--) {
		{
			jule::Ptr<_1aa39b0ae_ImportInfo> _2827_u = (*((*(_27925_ir))))._field_Used[_2806_i];;
			if ((!((*(_2827_u))._field_Binded))) {
				_1ab1aac47_eliminateScopePackage(&((*_2827_u.alloc)._field_Package));
			};
		}
	_iter_next_1bc983c39:;
	}
	_iter_end_1bc983c39:;;
	_1ab1aac47_eliminateScopePackage(&((*((*(_27925_ir))))._field_Main));
}



inline jule::Uintptr _1aa5ea96d_typeData(jule::Any* _1714_m) {
	return ((jule::Uintptr)(((*(_1714_m))).type));;
}



inline jule::Bool _1aa5ead36_equalConst(jule::Ptr<_1a6e77584_Const> _2115_l, jule::Ptr<_1a6e77584_Const> _2126_r) {
	{
		
		if (_1a6e7b588_IsI64(_2115_l.ptr())) {
			_case_begin_1aca19021:;
			{
				return (_1a6e7b588_IsI64(_2126_r.ptr()) && (_1a6e78e8c_ReadI64(_2115_l) == _1a6e78e8c_ReadI64(_2126_r)));;
			}
		}
		else if (_1a6e7b81e_IsU64(_2115_l.ptr())) {
			_case_begin_1aca19087:;
			{
				return (_1a6e7b81e_IsU64(_2126_r.ptr()) && (_1a6e79223_ReadU64(_2115_l) == _1a6e79223_ReadU64(_2126_r)));;
			}
		}
		else if (_1a6e7c0c2_IsF64(_2115_l.ptr())) {
			_case_begin_1aca190ed:;
			{
				return (_1a6e7c0c2_IsF64(_2126_r.ptr()) && (_1a6e799c6_ReadF64(_2115_l) == _1a6e799c6_ReadF64(_2126_r)));;
			}
		}
		else if (_1a6e7bd3b_IsStr(_2115_l.ptr())) {
			_case_begin_1aca19175:;
			{
				return (_1a6e7bd3b_IsStr(_2126_r.ptr()) && (_1a6e79740_ReadStr(_2115_l) == _1a6e79740_ReadStr(_2126_r)));;
			}
		}
		else if (_1a6e7baa5_IsBool(_2115_l.ptr())) {
			_case_begin_1aca191ec:;
			{
				return (_1a6e7baa5_IsBool(_2126_r.ptr()) && (_1a6e794a9_ReadBool(_2115_l) == _1a6e794a9_ReadBool(_2126_r)));;
			}
		}
		else if (_1a6e7c358_IsNil(_2115_l.ptr())) {
			_case_begin_1aca19340:;
			{
				return _1a6e7c358_IsNil(_2126_r.ptr());;
			}
		}
		else {
			_case_begin_1aca18e33:;
			{
				return false;;
			}
		}
		_match_end_1aca1897c:;
	};
}



inline jule::Bool _1aa5eb1aa_equalCasting(jule::Ptr<_1aa324d5c_CastingExprModel> _4017_l, jule::Ptr<_1aa324d5c_CastingExprModel> _4039_r) {
	if ((!(_1a601ad87_Equal((*(_4017_l))._field_Kind, (*(_4039_r))._field_Kind)))) {
		return false;;
	};
	return _1aa5ec0e0_equalModels((*((*_4017_l.alloc)._field_Expr))._field_Model, (*(*(_4039_r))._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1aa5eb573_equalUnary(jule::Ptr<_1aa323b08_UnaryExprModel> _4715_l, jule::Ptr<_1aa323b08_UnaryExprModel> _4735_r) {
	if ((((*((*(_4715_l))._field_Op))._field_Id != (*(*(_4735_r))._field_Op.alloc)._field_Id) || ((*(*(_4715_l))._field_Op.alloc)._field_Kind != (*(*(_4735_r))._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return _1aa5ec0e0_equalModels((*((*_4715_l.alloc)._field_Expr))._field_Model, (*(*(_4735_r))._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1aa5eb8e7_equalIndexing(jule::Ptr<_1aa32608e_IndexingExprModel> _5418_l, jule::Ptr<_1aa32608e_IndexingExprModel> _5441_r) {
	return (_1aa5ec0e0_equalModels((*((*(_5418_l))._field_Expr))._field_Model, (*(*(_5441_r))._field_Expr.alloc)._field_Model) && _1aa5ec0e0_equalModels((*((*_5418_l.alloc)._field_Index))._field_Model, (*(*(_5441_r))._field_Index.alloc)._field_Model));;
}



inline jule::Bool _1aa5ebc6b_equalBinary(jule::Ptr<_1aa32372e_BinaryExprModel> _5916_l, jule::Ptr<_1aa32372e_BinaryExprModel> _5937_r) {
	if ((((*((*(_5916_l))._field_Op))._field_Id != (*(*(_5937_r))._field_Op.alloc)._field_Id) || ((*(*(_5916_l))._field_Op.alloc)._field_Kind != (*(*(_5937_r))._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return (_1aa5ec0e0_equalModels((*((*_5916_l.alloc)._field_Left))._field_Model, (*(*(_5937_r))._field_Left.alloc)._field_Model) && _1aa5ec0e0_equalModels((*((*_5916_l.alloc)._field_Right))._field_Model, (*(*(_5937_r))._field_Right.alloc)._field_Model));;
}



inline jule::Bool _1aa5ec0e0_equalModels(jule::Any _7016_l, jule::Any _7030_r) {
	if ((_1aa5ea96d_typeData(&(_7016_l)) != _1aa5ea96d_typeData(&(_7030_r)))) {
		return false;;
	};
	{
		auto &_match_expr{ _7016_l };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aca27b12:;
			{
				return (_7016_l.unsafe_cast_ptr<_1aa3e4d3e_Var>() == _7030_r.cast_ptr<_1aa3e4d3e_Var>(&__jule_any_type8));;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1aca2867e:;
			{
				jule::Ptr<_1aa32837c_StructSubIdentExprModel> _783_li = _7016_l.unsafe_cast_ptr<_1aa32837c_StructSubIdentExprModel>();;
				jule::Ptr<_1aa32837c_StructSubIdentExprModel> _793_ri = _7030_r.cast_ptr<_1aa32837c_StructSubIdentExprModel>(&__jule_any_type101);;
				return (((*(_783_li))._field_Field == (*(_793_ri))._field_Field) && _1aa5ec0e0_equalModels((*((*_783_li.alloc)._field_Expr))._field_Model, (*(*(_793_ri))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1aca286e5:;
			{
				return _1aa5ead36_equalConst(_7016_l.cast_ptr<_1a6e77584_Const>(&__jule_any_type20), _7030_r.cast_ptr<_1a6e77584_Const>(&__jule_any_type20));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1aca28261:;
			{
				return _1aa5eb1aa_equalCasting(_7016_l.cast_ptr<_1aa324d5c_CastingExprModel>(&__jule_any_type96), _7030_r.cast_ptr<_1aa324d5c_CastingExprModel>(&__jule_any_type96));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1aca282c7:;
			{
				return _1aa5eb573_equalUnary(_7016_l.cast_ptr<_1aa323b08_UnaryExprModel>(&__jule_any_type113), _7030_r.cast_ptr<_1aa323b08_UnaryExprModel>(&__jule_any_type113));;
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1aca2833d:;
			{
				return _1aa5eb8e7_equalIndexing(_7016_l.cast_ptr<_1aa32608e_IndexingExprModel>(&__jule_any_type53), _7030_r.cast_ptr<_1aa32608e_IndexingExprModel>(&__jule_any_type53));;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1aca283a4:;
			{
				return _1aa5ebc6b_equalBinary(_7016_l.cast_ptr<_1aa32372e_BinaryExprModel>(&__jule_any_type114), _7030_r.cast_ptr<_1aa32372e_BinaryExprModel>(&__jule_any_type114));;
			}
		}
		else {
			_case_begin_1aca27edb:;
			{
				return false;;
			}
		}
		_match_end_1aca24d40:;
	};
}



inline void _1aa602c0b_possibleNilRemove(jule::Ptr<_1aa601c2c_nils>* _7827_n, jule::Any _7837_m) {
	if (((*(_7827_n)) != nullptr)) {
		_1aa602513_removeVar((*(_7827_n)).ptr(), _1aa6036ce_getNilVar(_7837_m));
	};
}



inline jule::Bool _1aa6030c4_isGuaranteedNonNilExpr(jule::Ptr<_1aa601c2c_nils>* _8432_n, jule::Any _8442_m) {
	{
		auto &_match_expr{ _8442_m };
		
		if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1aca2e520:;
			{
				return true;;
			}
		}
		_match_end_1aca2e432:;
	};
	return (((*(_8432_n)) != nullptr) && _1aa602854_isSafe((*(_8432_n)).ptr(), _1aa6036ce_getNilVar(_8442_m)));;
}



inline jule::Bool _1aa60338d_isNilValidType(jule::Ptr<_1a601a64a_TypeKind> _9223_t) {
	return (_1a601d087_Sptr(_9223_t.ptr()) != nullptr);;
}



inline jule::Uintptr _1aa6036ce_getNilVar(jule::Any _9414_m) {
	if ((!(_1aa8a9512_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _9414_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aca30ac6:;
			{
				jule::Ptr<_1aa3e4d3e_Var> _1003_v = _9414_m.unsafe_cast_ptr<_1aa3e4d3e_Var>();;
				if ((!((*(_1003_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_9414_m.unsafe_cast_ptr<_1aa3e4d3e_Var>());;
				};
				return _1aa6036ce_getNilVar((*((*((*_1003_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1aca3106b:;
			{
				return static_cast<jule::Uintptr>((*(_9414_m.unsafe_cast_ptr<_1aa32837c_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		_match_end_1aca30961:;
	};
	return 0LLU;;
}



inline jule::Bool _1aa898e80_isConstantValidConditionalCase(jule::Ptr<_1aa3790c0_If>* _68736_i) {
	{
		auto &_match_expr{ (*((*(_68736_i))))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1aca37e41:;
			{
				jule::Ptr<_1a6e77584_Const> _6903_c = (*((*(_68736_i))))._field_Expr.unsafe_cast_ptr<_1a6e77584_Const>();;
				return (_1a6e7baa5_IsBool(_6903_c.ptr()) && _1a6e794a9_ReadBool(_6903_c));;
			}
		}
		_match_end_1aca38617:;
	};
	return false;;
}



inline jule::Bool _1aa89928d_isUnreachableExpr(jule::Any* _69623_expr) {
	{
		auto &_match_expr{ (*(_69623_expr)) };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1aca38bcd:;
			{
				jule::Ptr<_1a6e77584_Const> _6993_c = (*(_69623_expr)).cast_ptr<_1a6e77584_Const>(&__jule_any_type20);;
				return (_1a6e7baa5_IsBool(_6993_c.ptr()) && (!(_1a6e794a9_ReadBool(_6993_c))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1aca37ec9:;
			{
				jule::Ptr<_1aa32372e_BinaryExprModel> _7023_m = (*(_69623_expr)).cast_ptr<_1aa32372e_BinaryExprModel>(&__jule_any_type114);;
				if (((*((*(_7023_m))._field_Op))._field_Id == static_cast<jule::U32>(54LLU))) {
					return (_1aa89928d_isUnreachableExpr(&((*((*_7023_m.alloc)._field_Left))._field_Model)) || _1aa89928d_isUnreachableExpr(&((*((*_7023_m.alloc)._field_Right))._field_Model)));;
				};
			}
		}
		_match_end_1aca38b78:;
	};
	return false;;
}



inline jule::Bool _1aa899557_isConstantValidMatchCase(jule::Ptr<_1aa37d8dd_Case>* _71130_case) {
	{
		auto expr = &((*((*(_71130_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca3d045:;
		if (it != expr_end) {
			jule::Ptr<_1aa44cc98_Data> *_7129_expr = it;
			{
				if (((_1aa44d6d3_IsConst((*(_7129_expr)).ptr()) && _1a6e7baa5_IsBool((*(*(_7129_expr)).alloc)._field_Constant.ptr())) && _1a6e794a9_ReadBool((*((*(_7129_expr))))._field_Constant))) {
					return true;;
				};
			}
			_iter_next_1aca3d045:;
			++it;
			goto _iter_begin_1aca3d045;
		}
		_iter_end_1aca3d045:;
	};
	return false;;
}



inline jule::Bool _1aa899898_isUnreachableConditionalCase(jule::Ptr<_1aa3790c0_If>* _72034_i) {
	return _1aa89928d_isUnreachableExpr(&((*((*(_72034_i))))._field_Expr));;
}



inline jule::Bool _1aa899b2e_isUnreachableMatchCase(jule::Ptr<_1aa37d8dd_Case>* _72428_case) {
	{
		auto expr = &((*((*(_72428_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca40036:;
		if (it != expr_end) {
			jule::Ptr<_1aa44cc98_Data> *_7259_expr = it;
			{
				if ((!(_1aa89928d_isUnreachableExpr(&((*((*(_7259_expr))))._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1aca40036:;
			++it;
			goto _iter_begin_1aca40036;
		}
		_iter_end_1aca40036:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1aa8a010c_checkForBitShiftOpt(jule::Ptr<_1aa323234_OperandExprModel>* _59325_l, jule::Ptr<_1aa323234_OperandExprModel>* _59348_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_1a6e769a1_IsInt(_1a601aa46_Str((*((*(_59325_l))))._field_Kind.ptr())))) || (!(_1a6e769a1_IsInt(_1a601aa46_Str((*((*(_59348_r))))._field_Kind)))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=_1a6e79ee3_AsU64((*((*(_59348_r))))._field_Model.cast_ptr<_1a6e77584_Const>(&__jule_any_type20).ptr());
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _6012_j = _1a6e29415_Log2(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1));;
	jule::U64 _6022_z = static_cast<jule::U64>(_6012_j);;
	if ((static_cast<jule::F64>(_6022_z) != _6012_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _6022_z;
	return __jule_func_result;;
}



inline jule::Bool _1aa8a04c5_areSameLvalueExprModel(jule::Any* _61028_l, jule::Any* _61043_r) {
	{
		auto &_match_expr{ (*(_61028_l)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1acad35e6:;
			{
				return ((*(_61043_r)) == (*(_61028_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1acad342b:;
			{
				{
					auto &_match_expr{ (*(_61043_r)) };
					
					if (_match_expr.type == &__jule_any_type101) {
						_case_begin_1acad4086:;
						{
							goto _match_end_1acad3e54;
						}
					}
					else {
						_case_begin_1acad422e:;
						{
							return false;;
						}
					}
					_match_end_1acad3e54:;
				};
				jule::Ptr<_1aa32837c_StructSubIdentExprModel> _6233_lsi = (*(_61028_l)).cast_ptr<_1aa32837c_StructSubIdentExprModel>(&__jule_any_type101);;
				jule::Ptr<_1aa32837c_StructSubIdentExprModel> _6243_rsi = (*(_61043_r)).cast_ptr<_1aa32837c_StructSubIdentExprModel>(&__jule_any_type101);;
				if (((*(_6233_lsi))._field_Field != (*(_6243_rsi))._field_Field)) {
					return false;;
				};
				return _1aa8a04c5_areSameLvalueExprModel(&((*((*_6233_lsi.alloc)._field_Expr))._field_Model), &((*(*(_6243_rsi))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1acad367e:;
			{
				{
					auto &_match_expr{ (*(_61043_r)) };
					
					if (_match_expr.type == &__jule_any_type113) {
						_case_begin_1acad5c14:;
						{
							jule::Ptr<_1aa323b08_UnaryExprModel> _6364_ul = (*(_61028_l)).cast_ptr<_1aa323b08_UnaryExprModel>(&__jule_any_type113);;
							jule::Ptr<_1aa323b08_UnaryExprModel> _6374_ur = (*(_61043_r)).cast_ptr<_1aa323b08_UnaryExprModel>(&__jule_any_type113);;
							if ((((*((*(_6364_ul))._field_Op))._field_Id != (*(*(_6374_ur))._field_Op.alloc)._field_Id) || ((*(*(_6364_ul))._field_Op.alloc)._field_Kind != (*(*(_6374_ur))._field_Op.alloc)._field_Kind))) {
								return false;;
							};
							return _1aa8a04c5_areSameLvalueExprModel(&((*((*_6364_ul.alloc)._field_Expr))._field_Model), &((*(*(_6374_ur))._field_Expr.alloc)._field_Model));;
						}
					}
					_match_end_1acad5b9d:;
				};
			}
		}
		_match_end_1acad1429:;
	};
	return false;;
}



inline void _1aa8a2692_possibleDynamicRemove(jule::Ptr<_1aa8a1608_dynamic>* _8131_d, jule::Any _8144_m) {
	if (((*(_8131_d)) != nullptr)) {
		_1aa8a1dde_removeVar((*(_8131_d)).ptr(), _1aa8a3220_getDynamicVar(_8144_m));
	};
}



inline jule::Bool _1aa8a29a0_isDynamicValidType(jule::Ptr<_1a601a64a_TypeKind> _8727_t) {
	return _1aa88dabd_IsAny(&(_8727_t));;
}



inline jule::Ptr<_1a601a64a_TypeKind> _1aa8a2dce_isTypeGuaranteedDynamicData(jule::Ptr<_1aa8a1608_dynamic>* _8937_dy, jule::Ptr<_1a601a64a_TypeKind> _8955_t, jule::Any _8973_m) {
	jule::Bool _902_isAny = _1aa88dabd_IsAny(&(_8955_t));;
	if (((!(_902_isAny)) && (_1a601e60a_Trait(_8955_t.ptr()) == nullptr))) {
		return _8955_t;;
	};
	if ((!(_902_isAny))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _8973_m };
		
		if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1bd622e16:;
			{
				jule::Ptr<_1aa324d5c_CastingExprModel> _997_cem = _8973_m.unsafe_cast_ptr<_1aa324d5c_CastingExprModel>();;
				return _1aa8a2dce_isTypeGuaranteedDynamicData(_8937_dy, (*(_997_cem))._field_ExprKind, (*((*_997_cem.alloc)._field_Expr))._field_Model);;
			}
		}
		_match_end_1bd6232ac:;
	};
	jule::Uintptr _1022_var = _1aa8a3220_getDynamicVar(_8973_m);;
	if ((_1022_var == 0LLU)) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_8937_dy))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd624cc5:;
		if (it != expr_end) {
			_1aa8a12b7_dynamicVar _10614_v = *it;
			{
				if ((_10614_v._field_var == _1022_var)) {
					return _10614_v._field_kind;;
				};
			}
			_iter_next_1bd624cc5:;
			++it;
			goto _iter_begin_1bd624cc5;
		}
		_iter_end_1bd624cc5:;
	};
	return nullptr;;
}



inline jule::Uintptr _1aa8a3220_getDynamicVar(jule::Any _11418_m) {
	if ((!(_1aa8aaee7_Dynamic))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _11418_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bd625468:;
			{
				jule::Ptr<_1aa3e4d3e_Var> _1203_v = _11418_m.unsafe_cast_ptr<_1aa3e4d3e_Var>();;
				if ((!((*(_1203_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_11418_m.unsafe_cast_ptr<_1aa3e4d3e_Var>());;
				};
				return _1aa8a3220_getDynamicVar((*((*((*_1203_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1bd6260d4:;
			{
				return static_cast<jule::Uintptr>((*(_11418_m.unsafe_cast_ptr<_1aa32837c_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1bd625501:;
			{
				jule::Ptr<_1aa323b08_UnaryExprModel> _1313_uem = _11418_m.unsafe_cast_ptr<_1aa323b08_UnaryExprModel>();;
				if (((*((*(_1313_uem))._field_Op))._field_Id == static_cast<jule::U32>(62LLU))) {
					return _1aa8a3220_getDynamicVar((*((*_1313_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1bd6252d1:;
	};
	return 0LLU;;
}



inline jule::Bool _1aa8a6c7e_isValidBoundaryInfo(jule::Any _8424_m) {
	return _1aa8a74bb_fitsSize(_8424_m, _8424_m);;
}



inline jule::I32 _1aa8a7147_fitsMaxSize(jule::Slice<jule::Any> _8916_max, jule::Any _8934_expr) {
	{
		auto expr = &(_8916_max);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd6353ce:;
		if (it != expr_end) {
			jule::I32 _906_i = it - expr->begin();
			jule::Any *_909_m = it;
			{
				if (_1aa8a74bb_fitsSize((*(_909_m)), _8934_expr)) {
					return _906_i;;
				};
			}
			_iter_next_1bd6353ce:;
			++it;
			_906_i++;
			goto _iter_begin_1bd6353ce;
		}
		_iter_end_1bd6353ce:;
	};
	return -1LL;;
}



inline jule::Bool _1aa8a74bb_fitsSize(jule::Any _9813_e1, jule::Any _9828_e2) {
	if ((_1aa5ea96d_typeData(&(_9813_e1)) != _1aa5ea96d_typeData(&(_9828_e2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _9813_e1 };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1bd636de7:;
			{
				jule::Ptr<_1a6e77584_Const> _1043_exprConst = _9828_e2.cast_ptr<_1a6e77584_Const>(&__jule_any_type20);;
				return ((_1a6e7a279_AsF64(_1043_exprConst.ptr()) >= 0LL) && _1a6e7de81_GtEq(_9813_e1.unsafe_cast_ptr<_1a6e77584_Const>().ptr(), (*(_1043_exprConst))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bd636e5d:;
			{
				return (_9828_e2 == _9813_e1);;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1bd636ec4:;
			{
				jule::Ptr<_1aa32837c_StructSubIdentExprModel> _1093_ssi1 = _9813_e1.unsafe_cast_ptr<_1aa32837c_StructSubIdentExprModel>();;
				jule::Ptr<_1aa32837c_StructSubIdentExprModel> _1103_ssi2 = _9828_e2.cast_ptr<_1aa32837c_StructSubIdentExprModel>(&__jule_any_type101);;
				return (_1aa5ec0e0_equalModels((*((*(_1093_ssi1))._field_Expr))._field_Model, (*(*(_1103_ssi2))._field_Expr.alloc)._field_Model) && ((*_1093_ssi1.alloc)._field_Field == (*(_1103_ssi2))._field_Field));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1bd63703a:;
			{
				jule::Ptr<_1aa323b08_UnaryExprModel> _1133_uem1 = _9813_e1.unsafe_cast_ptr<_1aa323b08_UnaryExprModel>();;
				jule::Ptr<_1aa323b08_UnaryExprModel> _1143_uem2 = _9828_e2.cast_ptr<_1aa323b08_UnaryExprModel>(&__jule_any_type113);;
				if ((((*((*(_1133_uem1))._field_Op))._field_Id != static_cast<jule::U32>(62LLU)) || ((*(*(_1133_uem1))._field_Op.alloc)._field_Id != (*(*(_1143_uem2))._field_Op.alloc)._field_Id))) {
					return false;;
				};
				return _1aa8a74bb_fitsSize((*((*_1133_uem1.alloc)._field_Expr))._field_Model, (*(*(_1143_uem2))._field_Expr.alloc)._field_Model);;
			}
		}
		else {
			_case_begin_1bd635ab6:;
			{
				return false;;
			}
		}
		_match_end_1bd635a61:;
	};
}



inline void _1aa8a77eb_possibleBoundaryRemove(jule::Ptr<_1aa8a5c17_boundary>* _12432_b, jule::Any _12446_model) {
	{
		auto expr = &((*((*(_12432_b))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd637359:;
		if (it != expr_end) {
			_1aa8a58c6_boundaryVar _12614_v = *it;
			{
				{
					auto expr = &(_12614_v._field_maxSize);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd63dc67:;
					if (it != expr_end) {
						jule::I32 _1277_i = it - expr->begin();
						jule::Any _12710_max = *it;
						{
							if (_1aa5ec0e0_equalModels(_12710_max, _12446_model)) {
								_12614_v._field_maxSize=jule::append(_12614_v._field_maxSize.slice(0LL, _1277_i),_12614_v._field_maxSize.slice((_1277_i + 1LL)));
								goto _iter_end_1bd63dc67;
							};
						}
						_iter_next_1bd63dc67:;
						++it;
						_1277_i++;
						goto _iter_begin_1bd63dc67;
					}
					_iter_end_1bd63dc67:;
				};
			}
			_iter_next_1bd637359:;
			++it;
			goto _iter_begin_1bd637359;
		}
		_iter_end_1bd637359:;
	};
}



inline jule::Bool _1aa8a7ab5_isBoundaryRiskyType(jule::Ptr<_1a601a64a_TypeKind> _13628_t) {
	return (_1a601dac1_Arr(_13628_t.ptr()) == nullptr);;
}



inline jule::Bool _1aa8a7d7e_isBoundaryValidType(jule::Ptr<_1a601a64a_TypeKind> _14128_t) {
	return ((_1a601dd57_Slc(_14128_t.ptr()) != nullptr) || (_1a601dac1_Arr(_14128_t) != nullptr));;
}



inline jule::Uintptr _1aa8a8148_getBoundaryVar(jule::Any _14319_m) {
	if ((!(_1aa8a9512_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _14319_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bd641572:;
			{
				jule::Ptr<_1aa3e4d3e_Var> _1493_v = _14319_m.unsafe_cast_ptr<_1aa3e4d3e_Var>();;
				if ((!((*(_1493_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_14319_m.unsafe_cast_ptr<_1aa3e4d3e_Var>());;
				};
				return _1aa8a8148_getBoundaryVar((*((*((*_1493_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1bd64160a:;
			{
				return static_cast<jule::Uintptr>((*(_14319_m.unsafe_cast_ptr<_1aa32837c_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1bd641187:;
			{
				jule::Ptr<_1aa323b08_UnaryExprModel> _1603_uem = _14319_m.unsafe_cast_ptr<_1aa323b08_UnaryExprModel>();;
				if (((*((*(_1603_uem))._field_Op))._field_Id == static_cast<jule::U32>(62LLU))) {
					return _1aa8a8148_getBoundaryVar((*((*_1603_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1bd63e52b:;
	};
	return 0LLU;;
}



inline void _1aa8ab1c3_PushOptLevel(jule::I32 _3217_level) {
	jule::Bool _332_l1 = (_3217_level >= static_cast<jule::I32>(1LL));;
	_1aa8a88a7_Copy=_332_l1;
	_1aa8a8ba4_Deadcode=_332_l1;
	_1aa8a8e5c_Append=_332_l1;
	_1aa8a9259_Math=_332_l1;
	_1aa8a9512_Access=_332_l1;
	_1aa8a97ba_Inline=_332_l1;
	_1aa8a9a73_Ptr=_332_l1;
	_1aa8a9e3b_Cond=_332_l1;
	_1aa8aa17d_Str=_332_l1;
	_1aa8aa425_Slice=_332_l1;
	_1aa8aa6cd_Assign=_332_l1;
	_1aa8aa986_Exceptional=_332_l1;
	_1aa8aac3e_Iter=_332_l1;
	_1aa8aaee7_Dynamic=_332_l1;
}



inline void _1ab1ae674_detectEnabled(void) {
	_1ab1ac441_exprEnabled=(((_1aa8a9a73_Ptr || _1aa8a9259_Math) || _1aa8a9512_Access) || _1aa8a9e3b_Cond);
	_1ab1ac683_scopeEnabled=((((((((_1aa8a9e3b_Cond || _1aa8a8e5c_Append) || _1aa8a88a7_Copy) || _1aa8aa17d_Str) || _1aa8aa425_Slice) || _1aa8aa6cd_Assign) || _1aa8aa986_Exceptional) || _1aa8aac3e_Iter) || _1aa8aaee7_Dynamic);
}



inline void _1ab1d67cd_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_1adc46901_Exit(1LL);
}



inline jule::U64 _1abb0236e_unix(void) {
	return static_cast<jule::U64>(time(nullptr));;
}



inline jule::Bool _1aba2edc3_isCopyOptimizable(jule::Ptr<_1aa44cc98_Data>* _112823_expr) {
	if ((!((*((*(_112823_expr))))._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_112823_expr))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1bd73b13e:;
			{
				return false;;
			}
		}
		_match_end_1bd73b0d9:;
	};
	return true;;
}



inline jule::Bool _1aba3028b_isIterCopyOptimizable(jule::Ptr<_1aa44cc98_Data>* _113927_expr, jule::Ptr<_1aa3e4d3e_Var>* _113941_v) {
	if (((!((*((*(_113927_expr))))._field_Lvalue)) && (!(_1a601c031_Mutable((*((*(_113927_expr))))._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*((*(_113941_v))))._field_Mutable)) && (!((*((*(_113927_expr))))._field_Mutable)));;
}



inline jule::Bool _1aba306ba_captureVarHandling(jule::Ptr<_1abb0aab4_ObjectCoder>* _114628_oc, jule::Ptr<_1aa326545_AnonFnExprModel>* _114651_m, jule::Ptr<_1aa3e4d3e_Var>* _114677_v) {
	{
		auto expr = &((*((*(_114651_m))))._field_Captured);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd73d30b:;
		if (it != expr_end) {
			jule::Ptr<_1aa3e4d3e_Var> _11479_cv = *it;
			{
				if ((_11479_cv == (*(_114677_v)))) {
					_1abb0b29b_write((*(_114628_oc)), jule::Str::lit("__jule_closure_ctx.alloc->", 26));
					static__1aba4b95b_var(&((*((*(_114628_oc))))._field_Buf), (*(_114677_v)));
					return true;;
				};
			}
			_iter_next_1bd73d30b:;
			++it;
			goto _iter_begin_1bd73d30b;
		}
		_iter_end_1bd73d30b:;
	};
	return false;;
}



inline jule::Str _1aba43810_decomposeCommonEsq(jule::U8 _186923_b) {
	{
		auto &_match_expr{ _186923_b };
		
		if (_match_expr == '\\') {
			_case_begin_1bd88e45c:;
			{
				return jule::Str::lit("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1bd88e2c5:;
			{
				return jule::Str::lit("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1bd88e33b:;
			{
				return jule::Str::lit("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1bd88dd41:;
			{
				return jule::Str::lit("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1bd88dda7:;
			{
				return jule::Str::lit("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1bd88de2e:;
			{
				return jule::Str::lit("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1bd88dea6:;
			{
				return jule::Str::lit("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1bd88e02d:;
			{
				return jule::Str::lit("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1bd88e4c3:;
			{
				return jule::Str::lit("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1bd88e539:;
			{
				return jule::Str::lit("\\v", 2);;
			}
		}
		else {
			_case_begin_1bd88c59d:;
			{
				return jule::Str();;
			}
		}
		_match_end_1bd88dcdb:;
	};
}



inline jule::Str _1aba43b1d_sbtoa(jule::U8 _189610_b) {
	if ((_189610_b == 0LLU)) {
		return jule::Str::lit("\\x00", 4);;
	};
	if ((_189610_b < 128LLU)) {
		jule::Str _19013_seq = _1aba43810_decomposeCommonEsq(_189610_b);;
		if (!(_19013_seq).empty()) {
			return _19013_seq;;
		};
		if (((32LL <= _189610_b) && (_189610_b <= 126LLU))) {
			return jule::Str::from_byte(_189610_b);;
		};
	};
	jule::Str _19092_seq = _1a6e6906a_FmtUint(static_cast<jule::U64>(_189610_b), 8LL);;
	if ((_19092_seq.len() == 2LL)) {
		return (jule::Str::lit("\\0", 2) + _19092_seq);;
	};
	return (jule::Str::lit("\\", 1) + _19092_seq);;
}



inline void _1aba43e09_cstrBytes(_1ed486d49_StrBuilder* _191619_s, jule::Str _191634_ctx) {
	{
		auto expr = &(_191634_ctx);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd898d4b:;
		if (it != expr_end) {
			jule::U8 *_19179_b = it;
			{
				_1ed4909ac_WriteStr(_191619_s, _1aba43b1d_sbtoa((*(_19179_b))));
			}
			_iter_next_1bd898d4b:;
			++it;
			goto _iter_begin_1bd898d4b;
		}
		_iter_end_1bd898d4b:;
	};
}



inline void _1aba44239_cstrLit(_1ed486d49_StrBuilder* _192217_s, jule::Str _192232_ctx) {
	_1ed490c65_WriteByte(_192217_s, '\"');
	_1aba43e09_cstrBytes(_192217_s, _192232_ctx);
	_1ed490c65_WriteByte(_192217_s, '\"');
}



inline void _1aba445d0_ftoa(_1ed486d49_StrBuilder* _192814_s, jule::F64 _192829_f, jule::I32 _192837_bitsize) {
	if ((_192837_bitsize != 32LL)) {
		if ((_192829_f == static_cast<jule::F64>(static_cast<jule::I64>(_192829_f)))) {
			_1aba448bb_itoa(_192814_s, static_cast<jule::I64>(_192829_f));
			return;;
		};
		if ((_192829_f == static_cast<jule::F64>(static_cast<jule::U64>(_192829_f)))) {
			_1aba44ba7_utoa(_192814_s, static_cast<jule::U64>(_192829_f));
			return;;
		};
	};
	jule::Str _19392_m = _1a6e529d2_FmtFloat(_192829_f, 'f', -1LL, _192837_bitsize);;
	_1ed4909ac_WriteStr(_192814_s, _19392_m);
	if ((!(_1ed477675_Contains(_19392_m, jule::Str::lit(".", 1))))) {
		_1ed4909ac_WriteStr(_192814_s, jule::Str::lit(".0", 2));
	};
}



inline void _1aba448bb_itoa(_1ed486d49_StrBuilder* _194614_s, jule::I64 _194629_x) {
	{
		
		if ((_194629_x == jule::MAX_I64)) {
			_case_begin_1bd89d37d:;
			{
				_1ed4909ac_WriteStr(_194614_s, jule::Str::lit("jule::MAX_I64", 13));
				return;;
			}
		}
		else if ((_194629_x == jule::MIN_I64)) {
			_case_begin_1bd89d427:;
			{
				_1ed4909ac_WriteStr(_194614_s, jule::Str::lit("jule::MIN_I64", 13));
				return;;
			}
		}
		_match_end_1bd89d26d:;
	};
	_1ed4909ac_WriteStr(_194614_s, _1a6e69433_FmtInt(_194629_x, 10LL));
	if (_1ada775de_Is64Bit(jule::Str::lit("i386", 4))) {
		_1ed490c65_WriteByte(_194614_s, 'L');
	};
	_1ed490c65_WriteByte(_194614_s, 'L');
}



inline void _1aba44ba7_utoa(_1ed486d49_StrBuilder* _196314_s, jule::U64 _196329_x) {
	{
		
		if ((_196329_x == jule::MAX_U64)) {
			_case_begin_1bd8a04c3:;
			{
				_1ed4909ac_WriteStr(_196314_s, jule::Str::lit("jule::MAX_U64", 13));
				return;;
			}
		}
		_match_end_1bd8a0391:;
	};
	_1ed4909ac_WriteStr(_196314_s, _1a6e6906a_FmtUint(_196329_x, 10LL));
	if (_1ada775de_Is64Bit(jule::Str::lit("i386", 4))) {
		_1ed490c65_WriteByte(_196314_s, 'L');
	};
	_1ed4909ac_WriteStr(_196314_s, jule::Str::lit("LU", 2));
}



inline void _1aba45306_operatorOverloadingBinary(_1ed486d49_StrBuilder* _197735_buf, jule::Ptr<_1aa31e373_StructIns>* _197757_s, jule::Str* _197773_l, jule::Str* _19783_r, jule::U32 _197811_op, jule::Str _197824_kind) {
	;
	jule::Ptr<_1aa334597_FnIns> _19806_f = static_cast<jule::Ptr<_1aa334597_FnIns>>(nullptr);;
	if ((_197811_op == static_cast<jule::U32>(51LLU))) {
		_19806_f=_1aa892044_FindOperator(_197757_s, static_cast<jule::U32>(50LLU), false);
		_1ed490c65_WriteByte(_197735_buf, '!');
	} else {
		_19806_f=_1aa892044_FindOperator(_197757_s, _197811_op, false);
	};
	if ((_19806_f == nullptr)) {
		if (((_197811_op == static_cast<jule::U32>(50LLU)) || (_197811_op == static_cast<jule::U32>(51LLU)))) {
			static__1aba4b384_structureIns(_197735_buf, _197757_s);
			_1ed4909ac_WriteStr(_197735_buf, jule::Str::lit("_eq", 3));
			goto _julec_label_1bd8a5066;
		};
		jule::panic(jule::Str::lit("binary operator overloading is not exist, this is an implementation mistake", 75) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1994:3"));;
	};
	static__1aba4a6d5_funcIns(_197735_buf, &(_19806_f));
	_julec_label_1bd8a5066:;
	_1ed4909ac_WriteStr(_197735_buf, jule::Str::lit("(&", 2));
	_1ed4909ac_WriteStr(_197735_buf, (*(_197773_l)));
	_1ed4909ac_WriteStr(_197735_buf, jule::Str::lit(", ", 2));
	_1ed4909ac_WriteStr(_197735_buf, (*(_19783_r)));
	_1ed490c65_WriteByte(_197735_buf, ')');
}



inline jule::Slice<jule::U8> _1abb18088_concatAllParts(jule::Slice<jule::Ptr<_1aa2d51c4_Token>> _128319_parts) {
	jule::I32 _12846_n = 0LL;;
	{
		auto expr = &(_128319_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb2169a:;
		if (it != expr_end) {
			jule::Ptr<_1aa2d51c4_Token> *_12859_part = it;
			{
				_12846_n+=(*((*(_12859_part))))._field_Kind.len();
			}
			_iter_next_1bdb2169a:;
			++it;
			goto _iter_begin_1bdb2169a;
		}
		_iter_end_1bdb2169a:;
	};
	if ((_12846_n == 0LL)) {
		return nullptr;;
	};
	_1ed486d49_StrBuilder _12916_s = static__1ed487146_New(_12846_n);;
	{
		auto expr = &(_128319_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb21cd8:;
		if (it != expr_end) {
			jule::Ptr<_1aa2d51c4_Token> *_12929_p = it;
			{
				_1ed4909ac_WriteStr(&_12916_s, (*((*(_12929_p))))._field_Kind);
			}
			_iter_next_1bdb21cd8:;
			++it;
			goto _iter_begin_1bdb21cd8;
		}
		_iter_end_1bdb21cd8:;
	};
	return _1ed491c55_Buf(&_12916_s);;
}



inline jule::Bool _1abb18396_isHeadDecl(jule::Ptr<_1aa3315b6_Fn>* _129920_m) {
	if ((((*((*(_129920_m))))._field_Generics.len() > 0LL) || ((*((*(_129920_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	if (_1aa88e195_IsOpMethod(_129920_m)) {
		return true;;
	};
	jule::Ptr<_1aa334597_FnIns> _13066_mi = (*((*(_129920_m))))._field_Instances[0LL];;
	;
	return static__1aa3e6439_Dispose(_1aa32041d_FindMethod((*(_13066_mi))._field_Owner.ptr(), jule::Str::lit("Dispose", 7), false));;
}



inline jule::Bool _1abb18660_defaultEq(jule::Ptr<_1aa31e373_StructIns>* _131215_s) {
	return ((*((*(_131215_s))))._field_Comparable && ((*((*(_131215_s))))._field_Operators._field_Eq == nullptr));;
}



inline jule::Bool _1abb27828_ableToInit(jule::Ptr<_1a601a64a_TypeKind>* _46820_t) {
	return (!(_1a601b4e7_Binded((*(_46820_t)).ptr())));;
}



inline jule::Bool _1abb27b03_shouldInitialized(jule::Ptr<_1a601a64a_TypeKind>* _47527_t) {
	if ((!(_1abb27828_ableToInit(_47527_t)))) {
		return false;;
	};
	jule::Ptr<_1a6023763_Prim> _4792_prim = _1a601cd01_Prim((*(_47527_t)).ptr());;
	if ((_4792_prim != nullptr)) {
		return ((!(_1a6026eb4_IsAny(_4792_prim))) && (!(_1a6026c2d_IsStr(_4792_prim))));;
	};
	{
		
		if ((_1a601d087_Sptr((*(_47527_t)).ptr()) != nullptr)) {
			_case_begin_1bdc4a40b:;
			{
				return false;;
			}
		}
		else if ((_1a601e891_Map((*(_47527_t)).ptr()) != nullptr)) {
			_case_begin_1bdc4a472:;
			{
				return false;;
			}
		}
		else if ((_1a601dd57_Slc((*(_47527_t)).ptr()) != nullptr)) {
			_case_begin_1bdc4a4d8:;
			{
				return false;;
			}
		}
		else if ((_1a601e60a_Trait((*(_47527_t)).ptr()) != nullptr)) {
			_case_begin_1bdc4b1a9:;
			{
				return false;;
			}
		}
		else if ((_1a601e0dd_Fn((*(_47527_t)).ptr()) != nullptr)) {
			_case_begin_1bdc4b31e:;
			{
				return false;;
			}
		}
		else if ((_1a601dac1_Arr((*(_47527_t)).ptr()) != nullptr)) {
			_case_begin_1bdc4b385:;
			{
				jule::Ptr<_1a602a083_Arr> _4957_arr = _1a601dac1_Arr((*(_47527_t)).ptr());;
				return _1abb27828_ableToInit(&((*(_4957_arr))._field_Elem));;
			}
		}
		else if ((_1a601e374_Struct((*(_47527_t)).ptr()) != nullptr)) {
			_case_begin_1bdc4b3eb:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bdc4a30c:;
			{
				return true;;
			}
		}
		_match_end_1bdc4a719:;
	};
}



inline void _1adc51a1b_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _1adc51c91_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_1adc51a1b_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I32 _416_max = _1adc51840_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_1adc51840_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc5215b:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_429_k = it;
			{
				jule::I32 _433_n = (*(_429_k))[0LL].len();;
				if ((_433_n > _416_max)) {
					_416_max=_433_n;
				};
			}
			_iter_next_1bcc5215b:;
			++it;
			goto _iter_begin_1bcc5215b;
		}
		_iter_end_1bcc5215b:;
	};
	_1ed486d49_StrBuilder _496_s = static__1ed487146_New(32LL);;
	;
	{
		auto expr = &(_1adc51840_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc53822:;
		if (it != expr_end) {
			jule::I32 _516_i = it - expr->begin();
			jule::Array<jule::Str,2> *_519_part = it;
			{
				_1ed4909ac_WriteStr(&_496_s, (*(_519_part))[0LL]);
				_1ed4909ac_WriteStr(&_496_s, _1ed472ce1_Repeat(jule::Str::lit(" ", 1), ((_416_max - (*(_519_part))[0LL].len()) + 5LL)));
				_1ed4909ac_WriteStr(&_496_s, (*(_519_part))[1LL]);
				if (((_516_i + 1LL) < 5LL)) {
					_1ed490c65_WriteByte(&_496_s, '\n');
				};
			}
			_iter_next_1bcc53822:;
			++it;
			_516_i++;
			goto _iter_begin_1bcc53822;
		}
		_iter_end_1bcc53822:;
	};
	jule::outln(_496_s);
}



inline void _1adc51ec2_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_1adc51a1b_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("jule0.0.16 @master", 18));
}



inline void _1adc521d1_toolDistos(void) {
	jule::out(jule::Str::lit("supported operating systems:\n ", 30));
	jule::out(jule::Str::lit("windows", 7));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("linux", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("darwin", 6));
	jule::outln(jule::Str());
}



inline void _1adc52346_toolDistarch(void) {
	jule::out(jule::Str::lit("supported architects:\n ", 23));
	jule::out(jule::Str::lit("amd64", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("i386", 4));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("arm64", 5));
	jule::outln(jule::Str());
}



inline void _1adc52544_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_1adc51a1b_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1052_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1052_cmd };
		
		if (_match_expr == jule::Str::lit("distos", 6)) {
			_case_begin_1bcc597d4:;
			{
				_1adc521d1_toolDistos();
			}
		}
		else if (_match_expr == jule::Str::lit("distarch", 8)) {
			_case_begin_1bcc598a0:;
			{
				_1adc52346_toolDistarch();
			}
		}
		else {
			_case_begin_1bcc583c6:;
			{
				_1adc51a1b_printErrorMessage((jule::Str::lit("undefined command: ", 19) + _1052_cmd));
			}
		}
		_match_end_1bcc593c7:;
	};
}



inline void _1adc52775_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_1adc51a1b_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("julec version: jule0.0.16 @master", 33));
	jule::outln(jule::Str::lit("architecture: i386", 18));
	jule::outln(jule::Str::lit("operating system: linux", 23));
	jule::outln((jule::Str::lit("default compiler: ", 18) + _1adc4cd7a_Compiler));
	jule::outln((jule::Str::lit("default C++ standard: ", 22) + _1adc4e486_CppStd));
}



inline void _1adc52ab6_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("command is not given, try julec mod init", 40));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_1adc51a1b_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str::lit("init", 4)) {
			_case_begin_1bcc5cdc0:;
			{
				({
					auto except = static__1ed380704_Write(jule::Str::lit("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_1adc51a1b_printErrorMessage(jule::Str::lit("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1bcc5b9e5:;
			{
				_1adc51a1b_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1bcc5c8d6:;
	};
}



inline jule::Bool _1adc52d08_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str::lit("help", 4)) {
			_case_begin_1bcc5e399:;
			{
				_1adc51c91_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("version", 7)) {
			_case_begin_1bcc5e410:;
			{
				_1adc51ec2_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("tool", 4)) {
			_case_begin_1bcc5e476:;
			{
				_1adc52544_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("julenv", 6)) {
			_case_begin_1bcc5db5c:;
			{
				_1adc52775_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("mod", 3)) {
			_case_begin_1bcc5dbc3:;
			{
				_1adc52ab6_mod(_15320_args);
			}
		}
		else {
			_case_begin_1bcc5ca29:;
			{
				return false;;
			}
		}
		_match_end_1bcc5d585:;
	};
	return true;;
}



inline void _1adc52ea1_showInfo(void) {
	jule::outln(jule::Str::lit("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307));
}



void entry_point(void) {
	jule::Slice<jule::Str> _1896_args = _1ed11bdca_Args();;
	if ((_1896_args.len() < 2LL)) {
		_1adc52ea1_showInfo();
		return;;
	};
	if (_1adc52d08_processCommand(&(_1896_args))) {
		return;;
	};
	_1abb97b84_compileCommand(&(_1896_args));
}



inline void _1abb94aa4_init(void) {
	_1adc4cd7a_Compiler=jule::Str::lit("clang", 5);
}



inline jule::Ptr<_1ed37e879_File> _1abb94d6d_openOutput(jule::Str* _4316_path) {
	jule::Str _442_dir = _1ed49530d_Dir((*(_4316_path)));;
	({
		auto except = static__1ed37d636_Of(_442_dir);
		if (!except.ok()) {
			({
				auto except = static__1ed49793c_Create(_442_dir);
				if (!except.ok()) {
					_1ab1d67cd_Throw(jule::Str::lit("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__1ed380094_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_1ab1d67cd_Throw(jule::Str::lit("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1abb95016_clearObjects(void) {
	({
		auto except = static__1ed37bb40_Remove(_1abb9616b_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str::lit("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__1ed497b6d_Remove(_1abb94378_OutDir);
}



inline void _1abb95324_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_1adbe0658_Cmd> _736_cmd = static__1adbe0aa9_New(_7214_compiler);;
	(*(_736_cmd))._field_Args=_1ed477301_Split(_7229_compilerCmd, jule::Str::lit(" ", 1), -1LL);
	({
		auto except = _1adbe0ca7_Spawn(_736_cmd);
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1bcc6514c:;
					{
						static__1ab1d2ba3_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I32>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1bcc64d1c:;
					{
						static__1ab1d2ba3_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1bcc64b52:;
					{
						static__1ab1d2ba3_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1bcc64c62:;
			};
			_1ab1d67cd_Throw(jule::Str());
		}
	});
	jule::I32 _862_status = ({
		auto except = _1adbe123b_Wait(_736_cmd);
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:12"));
		(except.result);
	});;
	if ((_862_status != 0LL)) {
		jule::Str _883_errorMessage = ((jule::Str::lit("\n>>> your backend compiler (", 28) + _1adc4cd7a_Compiler) + jule::Str::lit(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1ab1d2ba3_Print(jule::Str::lit("\033[31m", 5), _883_errorMessage);
		_1ab1d67cd_Throw(jule::Str());
	};
	_1abb95016_clearObjects();
}



inline jule::Bool _1abb955dd_isCppSourceFile(jule::Str _9920_path) {
	jule::I32 _1002_offset = _1ed475db0_FindLastByte(_9920_path, '.');;
	if ((_1002_offset == -1LL)) {
		return false;;
	};
	return _1ada65a94_IsValidCppExt(_9920_path.slice(_1002_offset));;
}



inline void _1abb9581e_pushCompCmdClang(_1ed486d49_StrBuilder* _10726_cmd) {
	_1ed4909ac_WriteStr(_10726_cmd, jule::Str::lit("-Wno-everything ", 16));
	_1ed4909ac_WriteStr(_10726_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _1adc4e486_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1bcc67cba:;
			{
				_1ed4909ac_WriteStr(_10726_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1bcc68d32:;
			{
				_1ed4909ac_WriteStr(_10726_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1bcc68d98:;
			{
				_1ed4909ac_WriteStr(_10726_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1bcc68518:;
	};
	_1ed490c65_WriteByte(_10726_cmd, ' ');
	if (_1adc505db_Production) {
		_1ed4909ac_WriteStr(_10726_cmd, jule::Str::lit("-O3 ", 4));
		_1ed4909ac_WriteStr(_10726_cmd, jule::Str::lit("-flto ", 6));
		_1ed4909ac_WriteStr(_10726_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_1ed4909ac_WriteStr(_10726_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_1ed4909ac_WriteStr(_10726_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline void _1abb95a50_pushCompCmdGcc(_1ed486d49_StrBuilder* _13324_cmd) {
	_1ed4909ac_WriteStr(_13324_cmd, jule::Str::lit("-w ", 3));
	_1ed4909ac_WriteStr(_13324_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _1adc4e486_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1bcc6a3b6:;
			{
				_1ed4909ac_WriteStr(_13324_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1bcc6bce1:;
			{
				_1ed4909ac_WriteStr(_13324_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1bcc6bd57:;
			{
				_1ed4909ac_WriteStr(_13324_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1bcc6a44e:;
	};
	_1ed490c65_WriteByte(_13324_cmd, ' ');
	if (_1adc505db_Production) {
		_1ed4909ac_WriteStr(_13324_cmd, jule::Str::lit("-O3 ", 4));
		_1ed4909ac_WriteStr(_13324_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_1ed4909ac_WriteStr(_13324_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_1ed4909ac_WriteStr(_13324_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline __jule_tuple_str__jule_tuple_str _1abb95ed4_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1aa887941_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_1603_compiler = &(_1adc4e277_CompilerPath);;
	_1ed486d49_StrBuilder _1616_cmd = static__1ed487146_New(64LL);;
	{
		auto &_match_expr{ _1adc4cd7a_Compiler };
		
		if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1bcc6ea08:;
			{
				_1abb95a50_pushCompCmdGcc(&(_1616_cmd));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1bcc70025:;
			{
				_1abb9581e_pushCompCmdClang(&(_1616_cmd));
			}
		}
		_match_end_1bcc6ee15:;
	};
	{
		auto expr = &((*((*(_15936_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc70344:;
		if (it != expr_end) {
			jule::Ptr<_1aa39b0ae_ImportInfo> *_1719_u = it;
			{
				if (((*((*(_1719_u))))._field_Binded && _1abb955dd_isCppSourceFile((*(*(_1719_u)).alloc)._field_Path))) {
					_1ed4909ac_WriteStr(&_1616_cmd, (*(*(_1719_u)).alloc)._field_Path);
					_1ed490c65_WriteByte(&_1616_cmd, ' ');
				};
			}
			_iter_next_1bcc70344:;
			++it;
			goto _iter_begin_1bcc70344;
		}
		_iter_end_1bcc70344:;
	};
	if (!(_1abb948ea_Out).empty()) {
		_1ed4909ac_WriteStr(&_1616_cmd, jule::Str::lit("-o ", 3));
		_1ed4909ac_WriteStr(&_1616_cmd, _1abb948ea_Out);
		_1ed490c65_WriteByte(&_1616_cmd, ' ');
	};
	_1ed4909ac_WriteStr(&_1616_cmd, _15918_sourcePath);
	{
		auto expr = &((*((*(_15936_ir))))._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc72d19:;
		if (it != expr_end) {
			jule::Str *_1869_pass = it;
			{
				_1ed490c65_WriteByte(&_1616_cmd, ' ');
				_1ed4909ac_WriteStr(&_1616_cmd, (*(_1869_pass)));
			}
			_iter_next_1bcc72d19:;
			++it;
			goto _iter_begin_1bcc72d19;
		}
		_iter_end_1bcc72d19:;
	};
	if (_1adc47aab_Os.equal("windows", 7)) {
		_1ed4909ac_WriteStr(&_1616_cmd, jule::Str::lit(" -lshell32", 10));
	};
	__jule_func_result.__jule_result_arg0 = (*(_1603_compiler));
	__jule_func_result.__jule_result_arg1 = _1ed4912a4_Str(&_1616_cmd);
	return __jule_func_result;;
}



inline jule::Str _1abb9616b_getCompilePath(void) {
	return _1ed49461a_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1abb94378_OutDir; (*it++) = _1abb94642_OutName; __jule_collection; }));;
}



inline void _1abb9639c_applyTargetIndependentOptimizations(jule::Ptr<_1aa887941_IR>* _20545_ir) {
	jule::Ptr<_1ab1ac870_Optimizer> _2066_opt = static__1ab1acd26_New(_20545_ir);;
	_1ab1ae410_Optimize(_2066_opt.ptr());
}



inline void _1abb96545_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _1adc4cd7a_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1bcc754d1:;
			{
				_1ab1d67cd_Throw(jule::Str::lit("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1bcc75415:;
			{
				if ((_1adc4e277_CompilerPath).empty()) {
					_1adc4e277_CompilerPath=jule::Str::lit("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1bcc750e6:;
			{
				if ((_1adc4e277_CompilerPath).empty()) {
					_1adc4e277_CompilerPath=jule::Str::lit("g++", 3);
				};
			}
		}
		else {
			_case_begin_1bcc74bc8:;
			{
				_1ab1d67cd_Throw((jule::Str::lit("invalid option value for --compiler: ", 37) + _1adc4cd7a_Compiler));
			}
		}
		_match_end_1bcc74e2b:;
	};
}



inline void _1abb96754_checkTargetArch(jule::Str _22720_arch) {
	if ((((!_22720_arch.equal("amd64", 5)) && (!_22720_arch.equal("arm64", 5))) && (!_22720_arch.equal("i386", 4)))) {
		_1ab1d67cd_Throw((jule::Str::lit("--target: unsupported/undefined architecture: ", 46) + _22720_arch));
	};
}



inline void _1abb96985_checkTargetOs(jule::Str _23518_os) {
	if ((((!_23518_os.equal("windows", 7)) && (!_23518_os.equal("linux", 5))) && (!_23518_os.equal("darwin", 6)))) {
		_1ab1d67cd_Throw((jule::Str::lit("--target: unsupported/undefined operating system: ", 50) + _23518_os));
	};
}



inline void _1abb96bb6_checkTargetFlag(jule::Str* _24321_target) {
	if (((*(_24321_target))).empty()) {
		_1ab1d67cd_Throw(jule::Str::lit("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2482_parts = _1ed477301_Split((*(_24321_target)), jule::Str::lit("-", 1), -1LL);;
	if ((_2482_parts.len() != 2LL)) {
		_1ab1d67cd_Throw((jule::Str::lit("--target: undefined platform target format: ", 44) + (*(_24321_target))));
	};
	jule::Str _2532_os;
	jule::Str _2536_arch;
	({
		jule::Str ___jule_assign_arg = _2482_parts[0LL];
		jule::Str _1___jule_assign_arg = _2482_parts[1LL];
		_2532_os = ___jule_assign_arg;
		_2536_arch = _1___jule_assign_arg;
	});
	if ((!_2532_os.equal("native", 6))) {
		_1abb96985_checkTargetOs(_2532_os);
		_1adc47aab_Os=_2532_os;
	};
	if ((!_2536_arch.equal("native", 6))) {
		_1abb96754_checkTargetArch(_2536_arch);
		_1adc47d64_Arch=_2536_arch;
	};
	_1a6e6d9ba_UpdateTarget();
}



inline void _1abb96de7_checkOptFlag(jule::Str* _26618_opt) {
	if (((*(_26618_opt))).empty()) {
		_1ab1d67cd_Throw(jule::Str::lit("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26618_opt)) };
		
		if (_match_expr == jule::Str::lit("L0", 2)) {
			_case_begin_1bcc7bd56:;
			{
				goto _match_end_1bcc7b64c;
			}
		}
		else if (_match_expr == jule::Str::lit("L1", 2)) {
			_case_begin_1bcc7be33:;
			{
				_1aa8ab1c3_PushOptLevel(static_cast<jule::I32>(1LL));
			}
		}
		else {
			_case_begin_1bcc7b73a:;
			{
				_1ab1d67cd_Throw((jule::Str::lit("--opt: invalid optimization level: ", 35) + (*(_26618_opt))));
			}
		}
		_match_end_1bcc7b64c:;
	};
}



inline void _1abb972b0_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _1adc4e486_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5) || _match_expr == jule::Str::lit("cpp17", 5) || _match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1bcc7cc14:;
			{
				goto _match_end_1bcc7c6e7;
			}
		}
		else {
			_case_begin_1bcc7b7a1:;
			{
				_1ab1d67cd_Throw((jule::Str::lit("--cppstd: invalid cpp standard: ", 32) + _1adc4e486_CppStd));
			}
		}
		_match_end_1bcc7c6e7:;
	};
}



inline jule::Slice<jule::Str> _1abb9747a_checkFlags(jule::Slice<jule::Str>* _29216_args) {
	jule::Str _2936_opt = jule::Str::lit("L0", 2);;
	jule::Str _2946_target = jule::Str::lit("native-native", 13);;
	jule::Ptr<_1abb8e340_FlagSet> _2966_fs = static__1abb8e65e_New();;
	_1bcc7e5d9_AddVar(_2966_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2936_opt)))), jule::Str::lit("opt", 3), 0LL, jule::Str::lit("Optimization level", 18));
	_1bcc7e5d9_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_2946_target)))), jule::Str::lit("target", 6), 0LL, jule::Str::lit("Target system", 13));
	_1bcc7e5d9_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_1abb948ea_Out)))), jule::Str::lit("out", 3), 'o', jule::Str::lit("Output identifier", 17));
	_1bdcbadb6_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1adc4e6b7_Shadowing)))), jule::Str::lit("shadowing", 9), 0LL, jule::Str::lit("Allow shadowing", 15));
	_1bdcbadb6_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1adc4e970_Transpilation)))), jule::Str::lit("transpile", 9), 't', jule::Str::lit("Transpile code", 14));
	_1bcc7e5d9_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_1adc4cd7a_Compiler)))), jule::Str::lit("compiler", 8), 0LL, jule::Str::lit("Backend compiler", 16));
	_1bcc7e5d9_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_1adc4e277_CompilerPath)))), jule::Str::lit("compiler-path", 13), 0LL, jule::Str::lit("Path of backend compiler", 24));
	_1bdcbadb6_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1adc505db_Production)))), jule::Str::lit("production", 10), 'p', jule::Str::lit("Compile for production", 22));
	_1bdcbadb6_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1adc4eed1_RC)))), jule::Str::lit("disable-rc", 10), 0LL, jule::Str::lit("Disable reference counting", 26));
	_1bdcbadb6_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1adc50399_Safety)))), jule::Str::lit("disable-safety", 14), 0LL, jule::Str::lit("Disable safety", 14));
	_1bcc7e5d9_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_1adc4e486_CppStd)))), jule::Str::lit("cppstd", 6), 0LL, jule::Str::lit("C++ standard", 12));
	_1bdcbadb6_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1aa8a88a7_Copy)))), jule::Str::lit("opt-copy", 8), 0LL, jule::Str::lit("Copy optimization", 17));
	_1bdcbadb6_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1aa8a8ba4_Deadcode)))), jule::Str::lit("opt-deadcode", 12), 0LL, jule::Str::lit("Deadcode optimization", 21));
	_1bdcbadb6_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1aa8a8e5c_Append)))), jule::Str::lit("opt-append", 10), 0LL, jule::Str::lit("Append optimization", 19));
	_1bdcbadb6_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1aa8a9259_Math)))), jule::Str::lit("opt-math", 8), 0LL, jule::Str::lit("Math optimization", 17));
	_1bdcbadb6_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1aa8a9512_Access)))), jule::Str::lit("opt-access", 10), 0LL, jule::Str::lit("Access optimization", 19));
	_1bdcbadb6_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1aa8a97ba_Inline)))), jule::Str::lit("opt-inline", 10), 0LL, jule::Str::lit("Inline optimization", 19));
	_1bdcbadb6_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1aa8a9a73_Ptr)))), jule::Str::lit("opt-ptr", 7), 0LL, jule::Str::lit("Pointer optimizations", 21));
	_1bdcbadb6_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1aa8a9e3b_Cond)))), jule::Str::lit("opt-cond", 8), 0LL, jule::Str::lit("Conditional optimizations", 25));
	_1bdcbadb6_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1aa8aa17d_Str)))), jule::Str::lit("opt-str", 7), 0LL, jule::Str::lit("String optimizations", 20));
	_1bdcbadb6_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1aa8aa425_Slice)))), jule::Str::lit("opt-slice", 9), 0LL, jule::Str::lit("Slice optimizations", 19));
	_1bdcbadb6_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1aa8aa6cd_Assign)))), jule::Str::lit("opt-assign", 10), 0LL, jule::Str::lit("Assignment optimizations", 24));
	_1bdcbadb6_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1aa8aa986_Exceptional)))), jule::Str::lit("opt-exceptional", 15), 0LL, jule::Str::lit("Exceptional optimizations", 25));
	_1bdcbadb6_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1aa8aac3e_Iter)))), jule::Str::lit("opt-iter", 8), 0LL, jule::Str::lit("Iterations optimizations", 24));
	_1bdcbadb6_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1aa8aaee7_Dynamic)))), jule::Str::lit("opt-dynamic", 11), 0LL, jule::Str::lit("Dynamic programming optimizations", 33));
	jule::Slice<jule::Str> _3246_content = ({
		auto except = _1abb9052d_Parse(_2966_fs, (*(_29216_args)));
		(except.ok()) ? (except.result) : ({
			_1ab1d67cd_Throw(except.error.cast<jule::Str>(&__jule_any_type4));

			nullptr;
		});
	});;
	_1abb96545_checkCompilerFlag();
	_1abb972b0_checkCppStdFlag();
	_1abb96bb6_checkTargetFlag(&(_2946_target));
	_1abb96de7_checkOptFlag(&(_2936_opt));
	return _3246_content;;
}



inline void _1abb97689_setupSemaFlags(jule::I32* _33724_flags) {
	if (_1adc4e6b7_Shadowing) {
		(*(_33724_flags))|=static_cast<jule::I32>(1LL);
	};
}



inline jule::Ptr<_1aa887941_IR> _1abb97953_buildIr(jule::Slice<jule::Str>* _34313_args) {
	jule::Slice<jule::Str> _3442_content = _1abb9747a_checkFlags(_34313_args);;
	jule::I32 _3466_semaFlags = static_cast<jule::I32>(0LL);;
	_1abb97689_setupSemaFlags(&(_3466_semaFlags));
	if ((_3442_content.len() == 0LL)) {
		_1ab1d67cd_Throw(_1ada73079_Logf(jule::Str::lit("missing compile path", 20), jule::Slice<jule::Any>()));
	} else if ((_3442_content.len() > 1LL)) {
		_1ab1d67cd_Throw((jule::Str::lit("undefined content: ", 19) + _3442_content[1LL]));
	};
	jule::Str _3546_path;
	jule::Bool _35412_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1ed494b6a_Abs(_3442_content[0LL]);
		_3546_path = __jule_assign_result.__jule_result_arg0;
		_35412_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_35412_ok))) {
		_1ab1d67cd_Throw(jule::Str::lit("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_1ed381969_Status> _3602_inf = ({
		auto except = static__1ed37d636_Of(_1adc46e51_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1ab1d67cd_Throw(_1ada73079_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_1ed381969_Status>(nullptr);});
	});;
	if ((!(_1ed381d76_IsDir(_3602_inf.ptr())))) {
		_1ab1d67cd_Throw(_1ada73079_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1aa887941_IR> _3686_ir;
	jule::Slice<_1ada72b17_Log> _36810_logs;
	({
		__jule_tuple_x_1aa887941_IR__jule_tuple_s_1ada72b17_Log __jule_assign_result = static__1aa887e19_Build(_3546_path, _3466_semaFlags);
		_3686_ir = __jule_assign_result.__jule_result_arg0;
		_36810_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3686_ir == nullptr) && (_36810_logs == nullptr))) {
		_1ab1d67cd_Throw(_1ada73079_Logf(jule::Str::lit("there is no Jule source code in package: @", 42), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_3546_path, &__jule_any_type4); __jule_collection; })));
	};
	if ((_36810_logs != nullptr)) {
		static__1ab1d5d4e_PrintLogs(&(_36810_logs));
		_1ab1d67cd_Throw(jule::Str());
	};
	return _3686_ir;;
}



inline void _1abb97b84_compileCommand(jule::Slice<jule::Str>* _38324_args) {
	((*(_38324_args))).mut_slice(1LL);;
	if ((*(_38324_args))[0LL].equal("test", 4)) {
		_1adc4ec28_Test=true;
		((*(_38324_args))).mut_slice(1LL);;
	};
	jule::Ptr<_1aa887941_IR> _3896_ir = _1abb97953_buildIr(_38324_args);;
	;
	if ((!(_1adc4ec28_Test))) {
		jule::Ptr<_1aa3315b6_Fn> _3947_main = _1aa3a059c_FindFn((*(_3896_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);;
		if ((_3947_main == nullptr)) {
			_1ab1d67cd_Throw(_1ada73079_Logf(jule::Str::lit("missing entry point: entry point (main) function is not defined", 63), jule::Slice<jule::Any>()));
		};
	};
	_1abb9639c_applyTargetIndependentOptimizations(&(_3896_ir));
	_1aa888e81_Order(_3896_ir);
	jule::Str _4052_compPath = _1abb9616b_getCompilePath();;
	jule::Str _4062_compiler;
	jule::Str _40612_compilerCmd;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1abb95ed4_genCompileCmd(_4052_compPath, &(_3896_ir));
		_4062_compiler = __jule_assign_result.__jule_result_arg0;
		_40612_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1abb0aab4_ObjectCoder> _4086_oc = static__1abb0aee3_New(&(_3896_ir), _1abb08d15_SerializationInfo{._field_Compiler=_4062_compiler, ._field_CompilerCommand=_40612_compilerCmd});;
	if (_1adc4ec28_Test) {
		jule::Ptr<_1aba4634b_TestCoder> _4137_tc = static__1aba46802_New(&(_4086_oc));;
		_1aba47b77_Serialize(_4137_tc);
	} else {
		_1abb17c03_Serialize(_4086_oc);
	};
	jule::Ptr<_1ed37e879_File> _4196_file = _1abb94d6d_openOutput(&(_4052_compPath));;
	({
		auto except = _1ed37c0c4_Write(_4196_file.ptr(), _1ed491c55_Buf(&(*(_4086_oc))._field_Buf));
		if (!except.ok()) {
			_1ab1d67cd_Throw(jule::Str::lit("object code could not write", 27));
		}
	});
	({
		auto except = _1ed380e41_Close(_4196_file);
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:423:2"));
	});
	if ((!(_1adc4e970_Transpilation))) {
		_1abb95324_compileIr(_4062_compiler, _40612_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_1adc47ea7_init();
	_1a6e6db41_init();
	_1abb94aa4_init();

}

inline jule::Bool __jule_anon1bc086727(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa33351e_ParamIns> _24021_p1, jule::Ptr<_1aa33351e_ParamIns> _24036_p2) {
	if (((*((*(_24021_p1))._field_Decl))._field_Mutable != (*(*(_24036_p2))._field_Decl.alloc)._field_Mutable)) {
		return false;;
	};
	if (_1aa330241_IsSelf((*(_24021_p1))._field_Decl)) {
		if ((!(_1aa330241_IsSelf((*(_24036_p2))._field_Decl)))) {
			return false;;
		};
		if ((_1aa3304c7_IsRef((*(_24021_p1))._field_Decl) != _1aa3304c7_IsRef((*(_24036_p2))._field_Decl))) {
			return false;;
		};
		return true;;
	};
	if (((*(*(_24021_p1))._field_Decl.alloc)._field_Reference != (*(*(_24036_p2))._field_Decl.alloc)._field_Reference)) {
		return false;;
	};
	if (((*(*(_24021_p1))._field_Decl.alloc)._field_Variadic != (*(*(_24036_p2))._field_Decl.alloc)._field_Variadic)) {
		return false;;
	};
	return _1a601ad87_Equal((*_24021_p1.alloc)._field_Kind, (*(_24036_p2))._field_Kind);;
}

inline jule::Bool __jule_anon_1bc0dda7b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa39b0ae_ImportInfo> _49935_spkg) {
	jule::Ptr<__jule_anon_1bc0dda7b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bc0dda7b_ctx>();
	return ((!(_1aa344541_isImplicitImport(_49935_spkg))) && ((*((*(__jule_closure_ctx.alloc->_49828_pkg))))._field_Path == (*(_49935_spkg))._field_Path));;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc1409ac(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _7421_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _7436_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bc1409ac_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bc1409ac_ctx>();
	return _1aa34d8e1__Decl(__jule_closure_ctx.alloc->_self_, _7421_e, _7436_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc142915(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _8121_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _8136_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bc142915_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bc142915_ctx>();
	return _1aa34dcdc__Type(__jule_closure_ctx.alloc->_self_, _8121_e, _8136_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc151935(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _17621_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _17636_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bc151935_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bc151935_ctx>();
	return _1aa3517d4__Decl(__jule_closure_ctx.alloc->_self_, _17621_e, _17636_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc15388d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _18321_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _18336_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bc15388d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bc15388d_ctx>();
	return _1aa351bd0__Type(__jule_closure_ctx.alloc->_self_, _18321_e, _18336_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc1603b1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _27021_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _27036_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bc1603b1_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bc1603b1_ctx>();
	return _1aa3545ea__Decl(__jule_closure_ctx.alloc->_self_, _27021_e, _27036_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc1720a4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _37821_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _37836_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bc1720a4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bc1720a4_ctx>();
	return _1aa357257__Decl(__jule_closure_ctx.alloc->_self_, _37821_e, _37836_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc17400c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _38521_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _38536_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bc17400c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bc17400c_ctx>();
	return _1aa357a4e__Recv(__jule_closure_ctx.alloc->_self_, _38521_e, _38536_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc175e65(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _39221_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _39236_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bc175e65_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bc175e65_ctx>();
	return _1aa357653__Type(__jule_closure_ctx.alloc->_self_, _39221_e, _39236_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc20c2c6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _92721_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _92736_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bc20c2c6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bc20c2c6_ctx>();
	return _1aa35ba86__Decl(__jule_closure_ctx.alloc->_self_, _92721_e, _92736_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc20e22e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _93421_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _93436_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bc20e22e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bc20e22e_ctx>();
	return _1aa35be82__Str(__jule_closure_ctx.alloc->_self_, _93421_e, _93436_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc211187(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _94121_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _94136_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bc211187_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bc211187_ctx>();
	return _1aa35c779__Bits(__jule_closure_ctx.alloc->_self_, _94121_e, _94136_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc2130e0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _94821_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _94836_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bc2130e0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bc2130e0_ctx>();
	return _1aa35cb75__Elem(__jule_closure_ctx.alloc->_self_, _94821_e, _94836_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc215048(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _95521_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _95536_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bc215048_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bc215048_ctx>();
	return _1aa35d071__Size(__jule_closure_ctx.alloc->_self_, _95521_e, _95536_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc216ea1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _96221_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _96236_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bc216ea1_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bc216ea1_ctx>();
	return _1aa35d46c__Key(__jule_closure_ctx.alloc->_self_, _96221_e, _96236_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1acca88cb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _96921_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _96936_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1acca88cb_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1acca88cb_ctx>();
	return _1aa35d868__Value(__jule_closure_ctx.alloc->_self_, _96921_e, _96936_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1accaa89a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _97621_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _97636_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1accaa89a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1accaa89a_ctx>();
	return _1aa35dc64__Fields(__jule_closure_ctx.alloc->_self_, _97621_e, _97636_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1accaca78(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _98321_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _98336_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1accaca78_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1accaca78_ctx>();
	return _1aa35e160__Statics(__jule_closure_ctx.alloc->_self_, _98321_e, _98336_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1accae9d1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _99021_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _99036_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1accae9d1_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1accae9d1_ctx>();
	return _1aa361739__Params(__jule_closure_ctx.alloc->_self_, _99021_e, _99036_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1accb1939(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _99721_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _99736_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1accb1939_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1accb1939_ctx>();
	return _1aa36064a__Types(__jule_closure_ctx.alloc->_self_, _99721_e, _99736_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1accb3892(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _100421_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _100436_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1accb3892_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1accb3892_ctx>();
	return _1aa35e55b__Binded(__jule_closure_ctx.alloc->_self_, _100421_e, _100436_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bbd03ede(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _101121_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _101136_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bbd03ede_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bbd03ede_ctx>();
	return _1aa35e957__Ordered(__jule_closure_ctx.alloc->_self_, _101121_e, _101136_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bbd05b28(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _101821_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _101836_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bbd05b28_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bbd05b28_ctx>();
	return _1aa35ed53__Comparable(__jule_closure_ctx.alloc->_self_, _101821_e, _101836_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bbd07a81(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _102521_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _102536_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bbd07a81_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bbd07a81_ctx>();
	return _1aa36024e__Mutable(__jule_closure_ctx.alloc->_self_, _102521_e, _102536_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bbd099d9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _103221_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _103236_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bbd099d9_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bbd099d9_ctx>();
	return _1aa360a46__CanNil(__jule_closure_ctx.alloc->_self_, _103221_e, _103236_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bbd0b942(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _103921_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _103936_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bbd0b942_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bbd0b942_ctx>();
	return _1aa360e42__GC(__jule_closure_ctx.alloc->_self_, _103921_e, _103936_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bbd0d89a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _104621_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _104636_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bbd0d89a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bbd0d89a_ctx>();
	return _1aa36133d__Result(__jule_closure_ctx.alloc->_self_, _104621_e, _104636_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bbd10803(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _105321_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _105336_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bbd10803_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bbd10803_ctx>();
	return _1aa35c37d__Kind(__jule_closure_ctx.alloc->_self_, _105321_e, _105336_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bbd2b126(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _116921_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _116936_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bbd2b126_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bbd2b126_ctx>();
	return _1aa362a9d__Unwrap(__jule_closure_ctx.alloc->_self_, _116921_e, _116936_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bbd2d07e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _117621_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _117636_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bbd2d07e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bbd2d07e_ctx>();
	return _1aa362e99__Type(__jule_closure_ctx.alloc->_self_, _117621_e, _117636_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bbd2eed7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _118321_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _118336_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bbd2eed7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bbd2eed7_ctx>();
	return _1aa363395__Lvalue(__jule_closure_ctx.alloc->_self_, _118321_e, _118336_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bbd31e40(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _119021_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _119036_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bbd31e40_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bbd31e40_ctx>();
	return _1aa363791__Mutable(__jule_closure_ctx.alloc->_self_, _119021_e, _119036_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bbd33d98(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _119721_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _119736_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bbd33d98_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bbd33d98_ctx>();
	return _1aa363b8c__Const(__jule_closure_ctx.alloc->_self_, _119721_e, _119736_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bbd35d01(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _120421_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _120436_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bbd35d01_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bbd35d01_ctx>();
	return _1aa364088__Field(__jule_closure_ctx.alloc->_self_, _120421_e, _120436_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bbd4885d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _131821_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _131836_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bbd4885d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bbd4885d_ctx>();
	return _1aa366ad5__Path(__jule_closure_ctx.alloc->_self_, _131821_e, _131836_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bbd4a7b6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _132521_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _132536_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bbd4a7b6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bbd4a7b6_ctx>();
	return _1aa366ed1__Name(__jule_closure_ctx.alloc->_self_, _132521_e, _132536_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bbd4c71e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _133221_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _133236_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bbd4c71e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bbd4c71e_ctx>();
	return _1aa3673cc__Dir(__jule_closure_ctx.alloc->_self_, _133221_e, _133236_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bbdaecc0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _182921_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _182936_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bbdaecc0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bbdaecc0_ctx>();
	return _1aa36aac8__Name(__jule_closure_ctx.alloc->_self_, _182921_e, _182936_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bbdb1c28(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _183621_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _183636_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bbdb1c28_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bbdb1c28_ctx>();
	return _1aa36aec4__Public(__jule_closure_ctx.alloc->_self_, _183621_e, _183636_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bbdb3b81(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _184321_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _184336_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bbdb3b81_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bbdb3b81_ctx>();
	return _1aa36b3c0__Binded(__jule_closure_ctx.alloc->_self_, _184321_e, _184336_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc2dca49(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _185021_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _185036_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bc2dca49_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bc2dca49_ctx>();
	return _1aa36b7bb__Exceptional(__jule_closure_ctx.alloc->_self_, _185021_e, _185036_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc2de9a2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _185721_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _185736_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bc2de9a2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bc2de9a2_ctx>();
	return _1aa36bbb7__Mutable(__jule_closure_ctx.alloc->_self_, _185721_e, _185736_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc2e190a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _186421_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _186436_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bc2e190a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bc2e190a_ctx>();
	return _1aa36c0b3__Variadic(__jule_closure_ctx.alloc->_self_, _186421_e, _186436_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc2e3863(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _187121_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _187136_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bc2e3863_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bc2e3863_ctx>();
	return _1aa36c4ae__Reference(__jule_closure_ctx.alloc->_self_, _187121_e, _187136_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc2e57bb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _187821_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _187836_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bc2e57bb_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bc2e57bb_ctx>();
	return _1aa36c8aa__Params(__jule_closure_ctx.alloc->_self_, _187821_e, _187836_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc2e7999(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _188521_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _188536_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bc2e7999_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bc2e7999_ctx>();
	return _1aa36cca6__Fields(__jule_closure_ctx.alloc->_self_, _188521_e, _188536_fc);;
}

inline jule::Ptr<_1aa44cc98_Data> __jule_anon_1bc2e9902(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa44e9c0_eval>* _189221_e, jule::Ptr<_1aa3036dc_FnCallExpr>* _189236_fc, jule::Ptr<_1aa44cc98_Data>* ) {
	jule::Ptr<__jule_anon_1bc2e9902_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bc2e9902_ctx>();
	return _1aa36d1a2__Statics(__jule_closure_ctx.alloc->_self_, _189221_e, _189236_fc);;
}

inline jule::Bool __jule_anon_1bc305435(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3bb530_sema>* _6415_sema, jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>* _6433_generics) {
	jule::Ptr<__jule_anon_1bc305435_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bc305435_ctx>();
	{
		auto expr = &((*__jule_closure_ctx.alloc->_self_.alloc)._field_genericsD);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc306513:;
		if (it != expr_end) {
			jule::I32 _659_i = it - expr->begin();
			jule::Ptr<_1aa307889_GenericDecl> _6516_g = *it;
			{
				jule::Ptr<_1a6018c64_InsGeneric> _669_generic = (*(__jule_closure_ctx.alloc->_self_))._field_generics[_659_i];;
				if ((((*(_6516_g))._field_Constraint == nullptr) || ((*((*_6516_g.alloc)._field_Constraint))._field_Mask.len() == 0LL))) {
					goto _iter_next_1bc306513;
				};
				(*(_669_generic))._field_Constraint=({ auto __jule_collection = jule::Slice<jule::Ptr<_1a601a64a_TypeKind>>::alloc(0LL, (*((*_6516_g.alloc)._field_Constraint))._field_Mask.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1a601a64a_TypeKind>(nullptr); __jule_collection; });
				{
					auto expr = &((*((*_6516_g.alloc)._field_Constraint))._field_Mask);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bc309280:;
					if (it != expr_end) {
						jule::Ptr<_1aa2ea67e_TypeDecl> _7117_mask = *it;
						{
							jule::I32 _726_n = (*((*(_6415_sema))))._field_errors.len();;
							jule::Ptr<_1a601a64a_TypeKind> _7310_kind = _1aa3c9252_buildTypeWithRefers((*(_6415_sema)), &(_7117_mask), jule::Trait((*(_6415_sema)), (jule::Trait::Type*)&_1a603a77a_Lookup_mptr_data3), (*(_6433_generics)), nullptr);;
							if ((_7310_kind == nullptr)) {
								{
									auto &_match_expr{ (*(_7117_mask))._field_Kind };
									
									if (_match_expr.type == &__jule_any_type78) {
										_case_begin_1bc30b0a6:;
										{
											jule::Ptr<_1aa2eac89_IdentTypeDecl> _7712_itd = (*(_7117_mask))._field_Kind.unsafe_cast_ptr<_1aa2eac89_IdentTypeDecl>();;
											if ((((*(_7712_itd))._field_Generics.len() == 0LL) && _1aa372d77_isBuiltinConstraint(&((*_7712_itd.alloc)._field_Ident)))) {
												_7310_kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a6037aa7_buildPrimType((*_7712_itd.alloc)._field_Ident), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data22)});
												((*((*(_6415_sema))))._field_errors).mut_slice(0LL, _726_n);;
												goto _julec_label_1bc307679;
											};
										}
									}
									_match_end_1bc30b040:;
								};
								return false;;
							};
							_julec_label_1bc307679:;
							(*_669_generic.alloc)._field_Constraint=jule::append((*_669_generic.alloc)._field_Constraint,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a601a64a_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7310_kind; __jule_collection; }));
						}
						_iter_next_1bc309280:;
						++it;
						goto _iter_begin_1bc309280;
					}
					_iter_end_1bc309280:;
				};
			}
			_iter_next_1bc306513:;
			++it;
			_659_i++;
			goto _iter_begin_1bc306513;
		}
		_iter_end_1bc306513:;
	};
	return true;;
}

inline jule::Bool __jule_anon_1bc5c6aad(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3bb530_sema>* _102542_sema) {
	jule::Ptr<__jule_anon_1bc5c6aad_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bc5c6aad_ctx>();
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(__jule_closure_ctx.alloc->_101847_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc5c7aae:;
		if (it != expr_end) {
			jule::Ptr<_1aa33351e_ParamIns> _102716_p = *it;
			{
				if ((!(_1aa330241_IsSelf((*(_102716_p))._field_Decl.ptr())))) {
					(*_102716_p.alloc)._field_Kind=_1aa3cd586_buildNonGenericTypeKind((*(_102542_sema)), &((*((*(*(_102716_p))._field_Decl.alloc)._field_Kind))._field_Decl), &(__jule_closure_ctx.alloc->_101911_generics), __jule_closure_ctx.alloc->_101863_ignored);
					__jule_func_result=(__jule_func_result && ((*_102716_p.alloc)._field_Kind != nullptr));
				};
			}
			_iter_next_1bc5c7aae:;
			++it;
			goto _iter_begin_1bc5c7aae;
		}
		_iter_end_1bc5c7aae:;
	};
	if ((!(_1aa331a6c_IsVoid((*__jule_closure_ctx.alloc->_101847_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx.alloc->_101847_f.alloc)._field_Result=_1aa3cd586_buildNonGenericTypeKind((*(_102542_sema)), &((*((*((*(*(__jule_closure_ctx.alloc->_101847_f))._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl), &(__jule_closure_ctx.alloc->_101911_generics), __jule_closure_ctx.alloc->_101863_ignored);
		__jule_func_result=(__jule_func_result && ((*__jule_closure_ctx.alloc->_101847_f.alloc)._field_Result != nullptr));
	};
	return __jule_func_result;;
}

inline jule::Bool __jule_anon_1bc5de92d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3bb530_sema>* _112842_sema) {
	jule::Ptr<__jule_anon_1bc5de92d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bc5de92d_ctx>();
	return __jule_closure_ctx.alloc->_112146_algo(_112842_sema, &(__jule_closure_ctx.alloc->_11267_generics));;
}

inline jule::Bool __jule_anon_1bc5e40a3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3bb530_sema>* _114437_sema, jule::Slice<jule::Ptr<_1a6019858_TypeAlias>>* _114455_generics) {
	jule::Ptr<__jule_anon_1bc5e40a3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bc5e40a3_ctx>();
	jule::Bool _11458_ok = true;;
	{
		auto expr = &((*__jule_closure_ctx.alloc->_114037_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc5e5549:;
		if (it != expr_end) {
			jule::Ptr<_1aa33351e_ParamIns> _114616_p = *it;
			{
				if (_1aa330241_IsSelf((*(_114616_p))._field_Decl.ptr())) {
					if (_1aa3304c7_IsRef((*(_114616_p))._field_Decl)) {
						(*_114616_p.alloc)._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a602728e_Sptr>(_1a602728e_Sptr{._field_Elem=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*__jule_closure_ctx.alloc->_114037_f.alloc)._field_Owner, (jule::Trait::Type*)&_1a601a194_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data23)});
					} else {
						(*_114616_p.alloc)._field_Kind=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*__jule_closure_ctx.alloc->_114037_f.alloc)._field_Owner, (jule::Trait::Type*)&_1a601a194_Kind_mptr_data0)});
					};
				} else {
					(*(_114616_p))._field_Kind=_1aa3ca3b8_buildTypeWithGenerics((*(_114437_sema)), &((*((*((*_114616_p.alloc)._field_Decl))._field_Kind))._field_Decl), (*(_114455_generics)), (*__jule_closure_ctx.alloc->_114037_f.alloc)._field_Refers);
					if (((*_114616_p.alloc)._field_Kind != nullptr)) {
						_1aa3d02d0_checkFnParamKind(__jule_closure_ctx.alloc->_self_, &(_114616_p));
					} else {
						_11458_ok=false;
					};
				};
			}
			_iter_next_1bc5e5549:;
			++it;
			goto _iter_begin_1bc5e5549;
		}
		_iter_end_1bc5e5549:;
	};
	if ((!(_1aa331a6c_IsVoid((*__jule_closure_ctx.alloc->_114037_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx.alloc->_114037_f.alloc)._field_Result=_1aa3ca3b8_buildTypeWithGenerics((*(_114437_sema)), &((*((*((*(*(__jule_closure_ctx.alloc->_114037_f))._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl), (*(_114455_generics)), (*__jule_closure_ctx.alloc->_114037_f.alloc)._field_Refers);
		_11458_ok=(((*__jule_closure_ctx.alloc->_114037_f.alloc)._field_Result != nullptr) && _11458_ok);
	};
	return _11458_ok;;
}

inline jule::Bool __jule_anon_1bca34da6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa39b0ae_ImportInfo> _188343_imp) {
	jule::Ptr<__jule_anon_1bca34da6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bca34da6_ctx>();
	if ((((*__jule_closure_ctx.alloc->_188135_s.alloc)._field_Ns.len() == 1LL) && ((*(_188343_imp))._field_Alias == __jule_closure_ctx.alloc->_18823_path))) {
		return true;;
	};
	return (((*_188343_imp.alloc)._field_LinkPath == __jule_closure_ctx.alloc->_18823_path) && _1aa39dc0a_isAccessibleViaSelection(_188343_imp));;
}

inline jule::Str __jule_anon1bcd12260(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _87019_def) {
	{
		auto &_match_expr{ (*(_87019_def)) };
		
		if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1bcd132e9:;
			{
				return (*((*(_87019_def)).cast_ptr<_1a6019858_TypeAlias>(&__jule_any_type27)))._field_Ident;;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1bcd1311d:;
			{
				return (*((*(_87019_def)).cast_ptr<_1aa31b518_Struct>(&__jule_any_type23)))._field_Ident;;
			}
		}
		else {
			_case_begin_1bcd12bde:;
			{
				return jule::Str();;
			}
		}
		_match_end_1bcd12b89:;
	};
}

inline jule::Bool __jule_anon_1bcd8ec27(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa39b0ae_ImportInfo> _154543_imp) {
	jule::Ptr<__jule_anon_1bcd8ec27_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bcd8ec27_ctx>();
	if ((((*__jule_closure_ctx.alloc->_154336_decl.alloc)._field_Idents.len() == 1LL) && ((*(_154543_imp))._field_Alias == __jule_closure_ctx.alloc->_15443_path))) {
		return true;;
	};
	return (((*_154543_imp.alloc)._field_LinkPath == __jule_closure_ctx.alloc->_15443_path) && _1aa39dc0a_isAccessibleViaSelection(_154543_imp));;
}

inline void __jule_anon_1ac9d2160(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2636_expr) {
	jule::Ptr<__jule_anon_1ac9d2160_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac9d2160_ctx>();
	{
		auto &_match_expr{ (*(_2636_expr)) };
		
		if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1ac9d2a9a:;
			{
				jule::Ptr<_1aa32570e_FnCallExprModel> _299_m = (*(_2636_expr)).cast_ptr<_1aa32570e_FnCallExprModel>(&__jule_any_type41);;
				if (((*(_299_m))._field_Except != nullptr)) {
					{
						_1ab1a787b_optimizeBodyChildExceptional((*(__jule_closure_ctx.alloc->_self_))._field_s, &((*_299_m.alloc)._field_Except));
					};
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1ac9d2902:;
			{
				jule::Ptr<_1aa326545_AnonFnExprModel> _349_m = (*(_2636_expr)).cast_ptr<_1aa326545_AnonFnExprModel>(&__jule_any_type103);;
				_1ab1aa2da_eliminateDeadCodeOfScope((*((*(_349_m))._field_Func))._field_Scope);
			}
		}
		_match_end_1ac9d2a34:;
	};
}

inline void __jule_anon_1bd61b3e8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _56147_m) {
	jule::Ptr<__jule_anon_1bd61b3e8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd61b3e8_ctx>();
	{
		(*(__jule_closure_ctx.alloc->_self_))._field_model=((jule::Ptr<jule::Any>)(_56147_m));
	};
	{
		auto &_match_expr{ (*(_56147_m)) };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1bd61bc67:;
			{
				{
					_1aa89d270_binary(__jule_closure_ctx.alloc->_self_, (*(_56147_m)).cast_ptr<_1aa32372e_BinaryExprModel>(&__jule_any_type114));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1bd61beba:;
			{
				{
					_1aa89d528_unary(__jule_closure_ctx.alloc->_self_, (*(_56147_m)).cast_ptr<_1aa323b08_UnaryExprModel>(&__jule_any_type113));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1bd61bccd:;
			{
				{
					_1aa89d7d1_structureLit(__jule_closure_ctx.alloc->_self_, (*(_56147_m)).cast_ptr<_1aa3244cc_StructLitExprModel>(&__jule_any_type98));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1bd61bd44:;
			{
				{
					_1aa89da89_casting(__jule_closure_ctx.alloc->_self_, (*(_56147_m)).cast_ptr<_1aa324d5c_CastingExprModel>(&__jule_any_type96));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1bd61bdaa:;
			{
				{
					_1aa89e45d_funcCall(__jule_closure_ctx.alloc->_self_, (*(_56147_m)).cast_ptr<_1aa32570e_FnCallExprModel>(&__jule_any_type41));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1bd61c6c4:;
			{
				{
					_1aa89e716_indexing(__jule_closure_ctx.alloc->_self_, (*(_56147_m)).cast_ptr<_1aa32608e_IndexingExprModel>(&__jule_any_type53));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1bd61c73a:;
			{
				{
					_1aa89e9be_anonFunc(__jule_closure_ctx.alloc->_self_, (*(_56147_m)).cast_ptr<_1aa326545_AnonFnExprModel>(&__jule_any_type103));
				};
			}
		}
		_match_end_1bd61bb79:;
	};
}

inline void __jule_anon_1bd752b6c(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1bd752b6c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd752b6c_ctx>();
	if (__jule_closure_ctx.alloc->_1377_ref) {
		_1abb0b29b_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it - expr->begin()", 18));
	} else {
		_1abb0b29b_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it - expr.begin()", 17));
	};
}

inline void __jule_anon_1bd756764(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1bd756764_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd756764_ctx>();
	{
		if ((*(*((*(__jule_closure_ctx.alloc->_12936_it))))._field_KeyB.alloc)._field_Reference) {
			_1abb0b29b_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it", 2));
		} else {
			_1abb0b29b_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*it", 3));
		};
	};
}

inline void __jule_anon_1bd765c3a(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1bd765c3a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd765c3a_ctx>();
	_1abb0b29b_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it->first", 9));
}

inline void __jule_anon_1bd7681b0(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1bd7681b0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd7681b0_ctx>();
	_1abb0b29b_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it->second", 10));
}

inline void __jule_anon_1bd782152(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1bd782152_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd782152_ctx>();
	_1abb0b29b_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("0", 1));
}

inline void __jule_anon_1bd811cd6(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1bd811cd6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd811cd6_ctx>();
	_1abb0b29b_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("_match_expr", 11));
}

inline void __jule_anon_1bd8130e5(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1bd8130e5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd8130e5_ctx>();
	_1aba378e2_possibleRefExpr((*(*(__jule_closure_ctx.alloc->_self_))._field_oc.alloc)._field_ec, (*(*(__jule_closure_ctx.alloc->_71330_m))._field_Expr.alloc)._field_Model);
}

inline jule::Bool __jule_anon_1bd883a7d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3e4d3e_Var> _108967_v) {
	jule::Ptr<__jule_anon_1bd883a7d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd883a7d_ctx>();
	return _1aba306ba_captureVarHandling(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc), &(__jule_closure_ctx.alloc->_108334_m), &(_108967_v));;
}

inline void __jule_anon_1bdbb6762(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa39ded5_Package>* _74138_pkg) {
	jule::Ptr<__jule_anon_1bdbb6762_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdbb6762_ctx>();
	_1aa88a69c_IterFiles(_74138_pkg, jule::__new_closure<void,jule::Ptr<_1aa4475cd_SymbolTable>*>((void*)__jule_anon_1bdbb7664, jule::Ptr<__jule_anon_1bdbb7664_ctx>::make(__jule_anon_1bdbb7664_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1bdbb7664_ctx_handler));
}

inline void __jule_anon_1bdbb7c2a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn>* _75436_m) {
	jule::Ptr<__jule_anon_1bdbb7c2a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdbb7c2a_ctx>();
	jule::Ptr<_1aa334597_FnIns> _7558_ins = (*((*(_75436_m))))._field_Instances[0LL];;
	{
		auto expr = (*(_7558_ins))._field_Params.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1bdbbadd7:;
		if (it != expr_end) {
			jule::I32 _7569_i = it - expr.begin();
			jule::Ptr<_1aa33351e_ParamIns> _75616_ip = *it;
			{
				if (_1aa2d7d75_IsAnonIdent((*((*(_75616_ip))._field_Decl))._field_Ident)) {
					(*(*(_75616_ip))._field_Decl.alloc)._field_Ident=(jule::Str::lit("_", 1) + _1a6e696ec_Itoa(_7569_i));
				};
			}
			_iter_next_1bdbbadd7:;
			++it;
			_7569_i++;
			goto _iter_begin_1bdbbadd7;
		}
		_iter_end_1bdbbadd7:;
	};
	_1abb0cec3_pushResult(__jule_closure_ctx.alloc->_self_, _75436_m);
	_1abb11aed_funcDeclTrait(__jule_closure_ctx.alloc->_self_, _75436_m);
}

inline void __jule_anon_1bdbbd329(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa39ded5_Package>* _76738_pkg) {
	jule::Ptr<__jule_anon_1bdbbd329_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdbbd329_ctx>();
	_1aa88a69c_IterFiles(_76738_pkg, jule::__new_closure<void,jule::Ptr<_1aa4475cd_SymbolTable>*>((void*)__jule_anon_1bdbbe22b, jule::Ptr<__jule_anon_1bdbbe22b_ctx>::make(__jule_anon_1bdbbe22b_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1bdbbe22b_ctx_handler));
}

inline void __jule_anon_1bdbcd911(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1bdbcd911_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdbcd911_ctx>();
	_1abb0b29b_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("&(", 2));
	_1aba422ae_model((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*((*(__jule_closure_ctx.alloc->_83424_v))._field_Value))._field_Data.alloc)._field_Model);
	_1abb0b29b_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(")", 1));
}

inline void __jule_anon_1bdbd09ce(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1bdbd09ce_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdbd09ce_ctx>();
	_1aba378e2_possibleRefExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*((*(__jule_closure_ctx.alloc->_83424_v))._field_Value))._field_Data.alloc)._field_Model);
}

inline void __jule_anon_1bdbd31b8(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1bdbd31b8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdbd31b8_ctx>();
	_1abb0b29b_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("nullptr", 7));
}

inline void __jule_anon_1bdbd4340(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1bdbd4340_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdbd4340_ctx>();
	_1aba4347a_initExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*(__jule_closure_ctx.alloc->_83424_v))._field_Kind.alloc)._field_Kind);
}

inline void __jule_anon_1bdc0257d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa39ded5_Package>* _97638_pkg) {
	jule::Ptr<__jule_anon_1bdc0257d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdc0257d_ctx>();
	_1aa88a69c_IterFiles(_97638_pkg, jule::__new_closure<void,jule::Ptr<_1aa4475cd_SymbolTable>*>((void*)__jule_anon_1bdc03480, jule::Ptr<__jule_anon_1bdc03480_ctx>::make(__jule_anon_1bdc03480_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1bdc03480_ctx_handler));
}

inline void __jule_anon_1bdc03914(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn>* _99136_m) {
	jule::Ptr<__jule_anon_1bdc03914_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdc03914_ctx>();
	_1abb0bb4d_indent(__jule_closure_ctx.alloc->_self_);
	_1abb0b29b_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(".", 1));
	static__1aba4a3e9_func(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), _99136_m);
	_1abb0b29b_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("=__jule_trait_method_", 21));
	jule::Ptr<_1aa334597_FnIns> _9964_mepf;
	jule::Bool _99610_exist;
	({
		__jule_tuple_x_1aa334597_FnIns__jule_tuple_bool __jule_assign_result = _1abb1453a_findTraitMetMap(__jule_closure_ctx.alloc->_self_, _99136_m);
		_9964_mepf = __jule_assign_result.__jule_result_arg0;
		_99610_exist = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_99610_exist))) {
		jule::panic(jule::Str::lit("implementation mistake, [traitDataMethods] could not found MepMap record", 72) + jule::Str("\nlocation: julec/obj/cxx/object.jule:998:5"));;
	};
	_1abb0b29b_write(__jule_closure_ctx.alloc->_self_, _1a6e6906a_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_9964_mepf)), 15LL));
	_1abb0b29b_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("_", 1));
	_1abb0b29b_write(__jule_closure_ctx.alloc->_self_, _1a6e6906a_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(__jule_closure_ctx.alloc->_99049_s)), 15LL));
	_1abb0b29b_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(",\n", 2));
}

inline void __jule_anon_1bdc1134a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa39ded5_Package>* _102838_pkg) {
	jule::Ptr<__jule_anon_1bdc1134a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdc1134a_ctx>();
	_1aa88a69c_IterFiles(_102838_pkg, jule::__new_closure<void,jule::Ptr<_1aa4475cd_SymbolTable>*>((void*)__jule_anon_1bdc1224c, jule::Ptr<__jule_anon_1bdc1224c_ctx>::make(__jule_anon_1bdc1224c_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1bdc1224c_ctx_handler));
}

inline void __jule_anon_1bdc2db5e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa39ded5_Package>* _115338_pkg) {
	jule::Ptr<__jule_anon_1bdc2db5e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdc2db5e_ctx>();
	_1aa88a69c_IterFiles(_115338_pkg, jule::__new_closure<void,jule::Ptr<_1aa4475cd_SymbolTable>*>((void*)__jule_anon_1bdc2ea61, jule::Ptr<__jule_anon_1bdc2ea61_ctx>::make(__jule_anon_1bdc2ea61_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1bdc2ea61_ctx_handler));
}

inline void __jule_anon_1bdc30127(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa4475cd_SymbolTable>* _116931_file) {
	jule::Ptr<__jule_anon_1bdc30127_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdc30127_ctx>();
	{
		auto expr = &((*((*(_116931_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdc33081:;
		if (it != expr_end) {
			jule::Ptr<_1aa3315b6_Fn> _117011_f = *it;
			{
				if ((*(_117011_f))._field_Ident.equal("init", 4)) {
					_1abb0bb4d_indent(__jule_closure_ctx.alloc->_self_);
					static__1aba4a3e9_func(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), &(_117011_f));
					_1abb0b29b_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("();\n", 4));
				};
			}
			_iter_next_1bdc33081:;
			++it;
			goto _iter_begin_1bdc33081;
		}
		_iter_end_1bdc33081:;
	};
}

inline void __jule_anon_1bdc3a8e6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa39ded5_Package>* _120838_pkg) {
	jule::Ptr<__jule_anon_1bdc3a8e6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdc3a8e6_ctx>();
	_1abb16b9c_pushInit(__jule_closure_ctx.alloc->_self_, _120838_pkg);
}

inline __jule_tuple_i64__jule_tuple_bool __jule_anon1bcc2b6da(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I32 _22864_base) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1a6e57d7d_ParseInt(_22856_s, _22864_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool __jule_anon1bcc34616(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I32 _23665_base) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1a6e578c7_ParseUint(_23657_s, _23665_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LLU;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline jule::Bool __jule_anon1bc136d05(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa39b0ae_ImportInfo> _191225_pkg) {
	return (*(_191225_pkg))._field_LinkPath.equal("std::comptime", 13);;
}

inline void __jule_anon_1bdbb7664(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa4475cd_SymbolTable>* _74232_file) {
	jule::Ptr<__jule_anon_1bdbb7664_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdbb7664_ctx>();
	{
		auto expr = &((*((*(_74232_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdbb80e3:;
		if (it != expr_end) {
			jule::Ptr<_1aa3315b6_Fn> _74317_f = *it;
			{
				if (((!((*(_74317_f))._field_Binded)) && ((*_74317_f.alloc)._field_Token != nullptr))) {
					_1abb0cec3_pushResult(__jule_closure_ctx.alloc->_self_, &(_74317_f));
					_1abb11845_funcDecl(__jule_closure_ctx.alloc->_self_, &(_74317_f), false);
				};
			}
			_iter_next_1bdbb80e3:;
			++it;
			goto _iter_begin_1bdbb80e3;
		}
		_iter_end_1bdbb80e3:;
	};
}

inline void __jule_anon_1bdbbe22b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa4475cd_SymbolTable>* _76832_file) {
	jule::Ptr<__jule_anon_1bdbbe22b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdbbe22b_ctx>();
	{
		auto expr = &((*((*(_76832_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdbbebaa:;
		if (it != expr_end) {
			jule::Ptr<_1aa345047_Trait> _76917_t = *it;
			{
				if (((*(_76917_t))._field_Token == nullptr)) {
					goto _iter_next_1bdbbebaa;
				};
				_1abb0b29b_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("struct ", 7));
				static__1aba4a9c1_traitDecl(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), _76917_t);
				_1abb0b29b_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("MptrData", 8));
				_1abb0b29b_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(" {\n", 3));
				_1abb0b752_addIndent(__jule_closure_ctx.alloc->_self_);
				_1abb0bb4d_indent(__jule_closure_ctx.alloc->_self_);
				_1abb0b29b_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("void (*dealloc)(jule::Ptr<jule::Uintptr>&);\n", 44));
				_1abb120a4_traitDataTypeMethods(__jule_closure_ctx.alloc->_self_, &(_76917_t));
				_1abb0b950_doneIndent(__jule_closure_ctx.alloc->_self_);
				_1abb0bb4d_indent(__jule_closure_ctx.alloc->_self_);
				_1abb0b29b_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("};\n\n", 4));
			}
			_iter_next_1bdbbebaa:;
			++it;
			goto _iter_begin_1bdbbebaa;
		}
		_iter_end_1bdbbebaa:;
	};
}

inline void __jule_anon_1bdc03480(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa4475cd_SymbolTable>* _97732_file) {
	jule::Ptr<__jule_anon_1bdc03480_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdc03480_ctx>();
	{
		auto expr = &((*((*(_97732_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdc03e0e:;
		if (it != expr_end) {
			jule::Ptr<_1aa345047_Trait> _97817_t = *it;
			{
				if (((*(_97817_t))._field_Implemented.len() == 0LL)) {
					goto _iter_next_1bdc03e0e;
				};
				_1aa88b219_IterTraitMethods(&(_97817_t), jule::__new_closure<void,jule::Ptr<_1aa3315b6_Fn>*>((void*)__jule_anon_1bdc0542c, jule::Ptr<__jule_anon_1bdc0542c_ctx>::make(__jule_anon_1bdc0542c_ctx{._self_=__jule_closure_ctx.alloc->_self_,._97817_t=_97817_t}).as<jule::Uintptr>(), __jule_anon_1bdc0542c_ctx_handler));
			}
			_iter_next_1bdc03e0e:;
			++it;
			goto _iter_begin_1bdc03e0e;
		}
		_iter_end_1bdc03e0e:;
	};
}

inline void __jule_anon_1bdc1224c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa4475cd_SymbolTable>* _102932_file) {
	jule::Ptr<__jule_anon_1bdc1224c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdc1224c_ctx>();
	{
		auto expr = &((*((*(_102932_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdc12bcb:;
		if (it != expr_end) {
			jule::Ptr<_1aa345047_Trait> _103017_t = *it;
			{
				jule::I32 _103110_i = 0LL;;
				{
					auto expr = &((*(_103017_t))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bdc139e0:;
					if (it != expr_end) {
						jule::Ptr<_1aa31b518_Struct> _103218_s = *it;
						{
							{
								auto expr = &((*(_103218_s))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bdc14392:;
								if (it != expr_end) {
									jule::Ptr<_1aa31e373_StructIns> _103319_ins = *it;
									{
										_1abb1532c_traitData(__jule_closure_ctx.alloc->_self_, &(_103017_t), _103110_i, &(_103319_ins));
										(_103110_i)++;
									}
									_iter_next_1bdc14392:;
									++it;
									goto _iter_begin_1bdc14392;
								}
								_iter_end_1bdc14392:;
							};
						}
						_iter_next_1bdc139e0:;
						++it;
						goto _iter_begin_1bdc139e0;
					}
					_iter_end_1bdc139e0:;
				};
			}
			_iter_next_1bdc12bcb:;
			++it;
			goto _iter_begin_1bdc12bcb;
		}
		_iter_end_1bdc12bcb:;
	};
}

inline void __jule_anon_1bdc2ea61(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa4475cd_SymbolTable>* _115432_file) {
	jule::Ptr<__jule_anon_1bdc2ea61_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdc2ea61_ctx>();
	{
		auto expr = &((*((*(_115432_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdc304e0:;
		if (it != expr_end) {
			jule::Ptr<_1aa3315b6_Fn> _115517_f = *it;
			{
				if (((!(_1adc4ec28_Test)) && _1aa890c57_HasDirective(&((*(_115517_f))._field_Directives), jule::Str::lit("test", 4)))) {
					goto _iter_next_1bdc304e0;
				};
				if (((!((*_115517_f.alloc)._field_Binded)) && ((*_115517_f.alloc)._field_Token != nullptr))) {
					_1abb13d86_func(__jule_closure_ctx.alloc->_self_, &(_115517_f));
					_1abb0b29b_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1bdc304e0:;
			++it;
			goto _iter_begin_1bdc304e0;
		}
		_iter_end_1bdc304e0:;
	};
}

inline void __jule_anon_1bdc0542c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa3315b6_Fn>* _98239_m) {
	jule::Ptr<__jule_anon_1bdc0542c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdc0542c_ctx>();
	_1abb1489d_traitWrapper(__jule_closure_ctx.alloc->_self_, &(__jule_closure_ctx.alloc->_97817_t), _98239_m);
}

int main(int argc, char *argv[], char *envp[]) {
	jule::setup_argv(argc, argv);
	jule::setup_envp(envp);

	_1adc51840_HelpMap = ({ auto __jule_collection = jule::Array<jule::Array<jule::Str,2>,5>(); auto it = __jule_collection.begin(); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("help", 4); (*it++) = jule::Str::lit("Show help", 9); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("version", 7); (*it++) = jule::Str::lit("Show version", 12); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("tool", 4); (*it++) = jule::Str::lit("Tools for effective Jule", 24); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("julenv", 6); (*it++) = jule::Str::lit("Show information about native jule environment", 46); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("mod", 3); (*it++) = jule::Str::lit("Module management", 17); __jule_collection; }); __jule_collection; });
	_1abb94378_OutDir = jule::Str::lit("dist", 4);
	_1abb94642_OutName = jule::Str::lit("ir.cpp", 6);
	_1abb948ea_Out = jule::Str();
	_1c6b28776__L = jule::new_ptr<_1ad896c38_RangeTable>(_1ad896c38_RangeTable{._field_R16=({ auto __jule_collection = jule::Slice<_1ad896287_Range16>::alloc(359, 359); auto it = __jule_collection.begin(); (*it++) = _1ad896287_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU}; (*it++) = _1ad896287_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU}; (*it++) = _1ad896287_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU}; (*it++) = _1ad896287_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU}; (*it++) = _1ad896287_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU}; (*it++) = _1ad896287_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU}; (*it++) = _1ad896287_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU}; (*it++) = _1ad896287_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU}; (*it++) = _1ad896287_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU}; (*it++) = _1ad896287_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU}; (*it++) = _1ad896287_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU}; (*it++) = _1ad896287_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU}; (*it++) = _1ad896287_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU}; (*it++) = _1ad896287_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU}; (*it++) = _1ad896287_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU}; (*it++) = _1ad896287_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU}; (*it++) = _1ad896287_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU}; (*it++) = _1ad896287_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU}; (*it++) = _1ad896287_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU}; (*it++) = _1ad896287_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU}; (*it++) = _1ad896287_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU}; (*it++) = _1ad896287_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU}; (*it++) = _1ad896287_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU}; (*it++) = _1ad896287_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU}; (*it++) = _1ad896287_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU}; (*it++) = _1ad896287_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU}; (*it++) = _1ad896287_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU}; (*it++) = _1ad896287_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU}; (*it++) = _1ad896287_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_R32=({ auto __jule_collection = jule::Slice<_1ad8967b5_Range32>::alloc(264, 264); auto it = __jule_collection.begin(); (*it++) = _1ad8967b5_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_LatinOffset=6LL});
	_1c6b29689__LU = jule::new_ptr<_1ad896c38_RangeTable>(_1ad896c38_RangeTable{._field_R16=({ auto __jule_collection = jule::Slice<_1ad896287_Range16>::alloc(109, 109); auto it = __jule_collection.begin(); (*it++) = _1ad896287_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU}; (*it++) = _1ad896287_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU}; (*it++) = _1ad896287_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU}; (*it++) = _1ad896287_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU}; (*it++) = _1ad896287_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU}; (*it++) = _1ad896287_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU}; (*it++) = _1ad896287_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU}; (*it++) = _1ad896287_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU}; (*it++) = _1ad896287_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU}; (*it++) = _1ad896287_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU}; (*it++) = _1ad896287_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU}; (*it++) = _1ad896287_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU}; (*it++) = _1ad896287_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU}; (*it++) = _1ad896287_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU}; (*it++) = _1ad896287_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_R32=({ auto __jule_collection = jule::Slice<_1ad8967b5_Range32>::alloc(40, 40); auto it = __jule_collection.begin(); (*it++) = _1ad8967b5_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU}; (*it++) = _1ad8967b5_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_LatinOffset=3LL});
	_1c6b3066d_Letter = _1c6b28776__L;
	_1c6b3693d_Upper = _1c6b29689__LU;
	_1ad890759__PROPERTIES = ({ auto __jule_collection = jule::Array<jule::U8,256>(); auto it = __jule_collection.begin(); (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 144LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 16LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 224LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 0LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 132LLU; (*it++) = 224LLU; (*it++) = 130LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 130LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 136LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; __jule_collection; });
	_1ed42cd34_first = ({ auto __jule_collection = jule::Array<jule::U8,256>(); auto it = __jule_collection.begin(); (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 19LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 35LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 52LLU; (*it++) = 4LLU; (*it++) = 4LLU; (*it++) = 4LLU; (*it++) = 68LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; __jule_collection; });
	_1ed42d780_acceptRanges = ({ auto __jule_collection = jule::Array<_1ed42d3d9_acceptRange,16>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); (*it++) = _1ed42d3d9_acceptRange{._field_lo=128LLU, ._field_hi=191LLU}; (*it++) = _1ed42d3d9_acceptRange{._field_lo=160LLU, ._field_hi=191LLU}; (*it++) = _1ed42d3d9_acceptRange{._field_lo=128LLU, ._field_hi=159LLU}; (*it++) = _1ed42d3d9_acceptRange{._field_lo=144LLU, ._field_hi=191LLU}; (*it++) = _1ed42d3d9_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}; for (; it < __jule_collection_end; ++it) *it = _1ed42d3d9_acceptRange{._field_lo=0, ._field_hi=0};__jule_collection; });
	_1ed4984cb_CppHeaderExts = ({ auto __jule_collection = jule::Array<jule::Str,4>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".h", 2); (*it++) = jule::Str::lit(".hpp", 4); (*it++) = jule::Str::lit(".hxx", 4); (*it++) = jule::Str::lit(".hh", 3); __jule_collection; });
	_1ed499840_CppExts = ({ auto __jule_collection = jule::Array<jule::Str,3>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".cpp", 4); (*it++) = jule::Str::lit(".cc", 3); (*it++) = jule::Str::lit(".cxx", 4); __jule_collection; });
	_1ada63784_ObjectiveCppExts = ({ auto __jule_collection = jule::Array<jule::Str,1>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".mm", 3); __jule_collection; });
	_1adc46e51_PathStdlib = jule::Str();
	_1adc4724d_PathExec = jule::Str();
	_1adc47506_PathWd = jule::Str();
	_1adc47803_PathApi = jule::Str();
	_1adc47aab_Os = jule::Str::lit("linux", 5);
	_1adc47d64_Arch = jule::Str::lit("i386", 4);
	_1adc4cd7a_Compiler = jule::Str();
	_1adc4e277_CompilerPath = jule::Str();
	_1adc4e486_CppStd = jule::Str::lit("cpp17", 5);
	_1adc4e6b7_Shadowing = false;
	_1adc4e970_Transpilation = false;
	_1adc4ec28_Test = false;
	_1adc4eed1_RC = true;
	_1adc50399_Safety = true;
	_1adc505db_Production = false;
	_1a68797e4__DE_BRUIJN32_TAB = ({ auto __jule_collection = jule::Array<jule::U8,32>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 28LLU; (*it++) = 2LLU; (*it++) = 29LLU; (*it++) = 14LLU; (*it++) = 24LLU; (*it++) = 3LLU; (*it++) = 30LLU; (*it++) = 22LLU; (*it++) = 20LLU; (*it++) = 15LLU; (*it++) = 25LLU; (*it++) = 17LLU; (*it++) = 4LLU; (*it++) = 8LLU; (*it++) = 31LLU; (*it++) = 27LLU; (*it++) = 13LLU; (*it++) = 23LLU; (*it++) = 21LLU; (*it++) = 19LLU; (*it++) = 16LLU; (*it++) = 7LLU; (*it++) = 26LLU; (*it++) = 12LLU; (*it++) = 18LLU; (*it++) = 6LLU; (*it++) = 11LLU; (*it++) = 5LLU; (*it++) = 10LLU; (*it++) = 9LLU; __jule_collection; });
	_1a6879d88__DE_BRUIJN64_TAB = ({ auto __jule_collection = jule::Array<jule::U8,64>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 56LLU; (*it++) = 2LLU; (*it++) = 57LLU; (*it++) = 49LLU; (*it++) = 28LLU; (*it++) = 3LLU; (*it++) = 61LLU; (*it++) = 58LLU; (*it++) = 42LLU; (*it++) = 50LLU; (*it++) = 38LLU; (*it++) = 29LLU; (*it++) = 17LLU; (*it++) = 4LLU; (*it++) = 62LLU; (*it++) = 47LLU; (*it++) = 59LLU; (*it++) = 36LLU; (*it++) = 45LLU; (*it++) = 43LLU; (*it++) = 51LLU; (*it++) = 22LLU; (*it++) = 53LLU; (*it++) = 39LLU; (*it++) = 33LLU; (*it++) = 30LLU; (*it++) = 24LLU; (*it++) = 18LLU; (*it++) = 12LLU; (*it++) = 5LLU; (*it++) = 63LLU; (*it++) = 55LLU; (*it++) = 48LLU; (*it++) = 27LLU; (*it++) = 60LLU; (*it++) = 41LLU; (*it++) = 37LLU; (*it++) = 16LLU; (*it++) = 46LLU; (*it++) = 35LLU; (*it++) = 44LLU; (*it++) = 21LLU; (*it++) = 52LLU; (*it++) = 32LLU; (*it++) = 23LLU; (*it++) = 11LLU; (*it++) = 54LLU; (*it++) = 26LLU; (*it++) = 40LLU; (*it++) = 15LLU; (*it++) = 34LLU; (*it++) = 20LLU; (*it++) = 31LLU; (*it++) = 10LLU; (*it++) = 25LLU; (*it++) = 14LLU; (*it++) = 19LLU; (*it++) = 9LLU; (*it++) = 13LLU; (*it++) = 8LLU; (*it++) = 7LLU; (*it++) = 6LLU; __jule_collection; });
	_1a6e51bbd_f32info = _1a673e3ce_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
	_1a6e51eba_f64info = _1a673e3ce_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
	_1a6e598a7_detailedPowsOfTen = ({ auto __jule_collection = jule::Array<jule::Array<jule::U64,2>,696>(); auto it = __jule_collection.begin(); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1671618768450675795LLU; (*it++) = 18054884314459144840LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1044761730281672372LLU; (*it++) = 11284302696536965525LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5917638181279478369LLU; (*it++) = 14105378370671206906LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16620419763454123769LLU; (*it++) = 17631722963339008632LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10387762352158827356LLU; (*it++) = 11019826852086880395LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8373016921771146291LLU; (*it++) = 13774783565108600494LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1242899115359157055LLU; (*it++) = 17218479456385750618LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5388497965526861063LLU; (*it++) = 10761549660241094136LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6735622456908576329LLU; (*it++) = 13451937075301367670LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17642900107990496220LLU; (*it++) = 16814921344126709587LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8720969558280366185LLU; (*it++) = 10509325840079193492LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10901211947850457732LLU; (*it++) = 13136657300098991865LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18238200953240460069LLU; (*it++) = 16420821625123739831LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18316404623416369399LLU; (*it++) = 10263013515702337394LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13672133742415685941LLU; (*it++) = 12828766894627921743LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12478481159592219522LLU; (*it++) = 16035958618284902179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5493207715531443249LLU; (*it++) = 10022474136428063862LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16089881681269079869LLU; (*it++) = 12528092670535079827LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15500666083158961933LLU; (*it++) = 15660115838168849784LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9687916301974351208LLU; (*it++) = 9787572398855531115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7498209359040551106LLU; (*it++) = 12234465498569413894LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 149389661945913074LLU; (*it++) = 15293081873211767368LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 93368538716195671LLU; (*it++) = 9558176170757354605LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4728396691822632493LLU; (*it++) = 11947720213446693256LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5910495864778290617LLU; (*it++) = 14934650266808366570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8305745933913819539LLU; (*it++) = 9334156416755229106LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1158810380537498616LLU; (*it++) = 11667695520944036383LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15283571030954036982LLU; (*it++) = 14584619401180045478LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9881091751837770420LLU; (*it++) = 18230774251475056848LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6175682344898606512LLU; (*it++) = 11394233907171910530LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16942974967978033949LLU; (*it++) = 14242792383964888162LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11955346673117766628LLU; (*it++) = 17803490479956110203LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5166248661484910190LLU; (*it++) = 11127181549972568877LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11069496845283525642LLU; (*it++) = 13908976937465711096LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13836871056604407053LLU; (*it++) = 17386221171832138870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4036358391950366504LLU; (*it++) = 10866388232395086794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14268820026792733938LLU; (*it++) = 13582985290493858492LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17836025033490917422LLU; (*it++) = 16978731613117323115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8841672636718129437LLU; (*it++) = 10611707258198326947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6440404777470273892LLU; (*it++) = 13264634072747908684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8050505971837842365LLU; (*it++) = 16580792590934885855LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11949095260039733334LLU; (*it++) = 10362995369334303659LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10324683056622278764LLU; (*it++) = 12953744211667879574LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3682481783923072647LLU; (*it++) = 16192180264584849468LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11524923151806696212LLU; (*it++) = 10120112665365530917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 571095884476206553LLU; (*it++) = 12650140831706913647LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14548927910877421904LLU; (*it++) = 15812676039633642058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13704765962725776594LLU; (*it++) = 9882922524771026286LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7907585416552444934LLU; (*it++) = 12353653155963782858LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 661109733835780360LLU; (*it++) = 15442066444954728573LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2719036592861056677LLU; (*it++) = 9651291528096705358LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12622167777931096654LLU; (*it++) = 12064114410120881697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1942651667131707105LLU; (*it++) = 15080143012651102122LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5825843310384704845LLU; (*it++) = 9425089382906938826LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16505676174835656864LLU; (*it++) = 11781361728633673532LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2185351144835019464LLU; (*it++) = 14726702160792091916LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2731688931043774330LLU; (*it++) = 18408377700990114895LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8624834609543440812LLU; (*it++) = 11505236063118821809LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15392729280356688919LLU; (*it++) = 14381545078898527261LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5405853545163697437LLU; (*it++) = 17976931348623159077LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5684501474941004850LLU; (*it++) = 11235582092889474423LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2493940825248868159LLU; (*it++) = 14044477616111843029LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7729112049988473103LLU; (*it++) = 17555597020139803786LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9442381049670183593LLU; (*it++) = 10972248137587377366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2579604275232953683LLU; (*it++) = 13715310171984221708LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3224505344041192104LLU; (*it++) = 17144137714980277135LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8932844867666826921LLU; (*it++) = 10715086071862673209LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15777742103010921555LLU; (*it++) = 13393857589828341511LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15110491610336264040LLU; (*it++) = 16742321987285426889LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2526528228819083169LLU; (*it++) = 10463951242053391806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12381532322878629770LLU; (*it++) = 13079939052566739757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1641857348316123500LLU; (*it++) = 16349923815708424697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12555375888766046947LLU; (*it++) = 10218702384817765435LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11082533842530170780LLU; (*it++) = 12773377981022206794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4629795266307937667LLU; (*it++) = 15966722476277758493LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5199465050656154994LLU; (*it++) = 9979201547673599058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15722703350174969551LLU; (*it++) = 12474001934591998822LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10430007150863936130LLU; (*it++) = 15592502418239998528LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6518754469289960081LLU; (*it++) = 9745314011399999080LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8148443086612450102LLU; (*it++) = 12181642514249998850LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 962181821410786819LLU; (*it++) = 15227053142812498563LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16742264702877599426LLU; (*it++) = 9516908214257811601LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7092772823314835570LLU; (*it++) = 11896135267822264502LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18089338065998320271LLU; (*it++) = 14870169084777830627LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8999993282035256217LLU; (*it++) = 9293855677986144142LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2026619565689294464LLU; (*it++) = 11617319597482680178LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11756646493966393888LLU; (*it++) = 14521649496853350222LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5472436080603216552LLU; (*it++) = 18152061871066687778LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8031958568804398249LLU; (*it++) = 11345038669416679861LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14651634229432885715LLU; (*it++) = 14181298336770849826LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9091170749936331336LLU; (*it++) = 17726622920963562283LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3376138709496513133LLU; (*it++) = 11079139325602226427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18055231442152805128LLU; (*it++) = 13848924157002783033LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8733981247408842698LLU; (*it++) = 17311155196253478792LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5458738279630526686LLU; (*it++) = 10819471997658424245LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11435108867965546262LLU; (*it++) = 13524339997073030306LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5070514048102157020LLU; (*it++) = 16905424996341287883LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 863228270850154185LLU; (*it++) = 10565890622713304927LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14914093393844856443LLU; (*it++) = 13207363278391631158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9419244705451294746LLU; (*it++) = 16509204097989538948LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15110399977761835024LLU; (*it++) = 10318252561243461842LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9664627935347517973LLU; (*it++) = 12897815701554327303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7469098900757009562LLU; (*it++) = 16122269626942909129LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16197401859041600736LLU; (*it++) = 10076418516839318205LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6411694268519837208LLU; (*it++) = 12595523146049147757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12626303854077184414LLU; (*it++) = 15744403932561434696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7891439908798240259LLU; (*it++) = 9840252457850896685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14475985904425188227LLU; (*it++) = 12300315572313620856LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18094982380531485284LLU; (*it++) = 15375394465392026070LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6697677969404790399LLU; (*it++) = 9609621540870016294LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17595469498610763806LLU; (*it++) = 12012026926087520367LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17382650854836066854LLU; (*it++) = 15015033657609400459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8558313775058847832LLU; (*it++) = 9384396036005875287LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6086206200396171886LLU; (*it++) = 11730495045007344109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12219443768922602761LLU; (*it++) = 14663118806259180136LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15274304711153253452LLU; (*it++) = 18328898507823975170LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14158126462898171311LLU; (*it++) = 11455561567389984481LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3862600023340550427LLU; (*it++) = 14319451959237480602LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14051622066030463842LLU; (*it++) = 17899314949046850752LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8782263791269039901LLU; (*it++) = 11187071843154281720LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10977829739086299876LLU; (*it++) = 13983839803942852150LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4498915137003099037LLU; (*it++) = 17479799754928565188LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12035193997481712706LLU; (*it++) = 10924874846830353242LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5820620459997365075LLU; (*it++) = 13656093558537941553LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11887461593424094248LLU; (*it++) = 17070116948172426941LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9735506505103752857LLU; (*it++) = 10668823092607766838LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2946011094524915263LLU; (*it++) = 13336028865759708548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3682513868156144079LLU; (*it++) = 16670036082199635685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4607414176811284001LLU; (*it++) = 10418772551374772303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1147581702586717097LLU; (*it++) = 13023465689218465379LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15269535183515560084LLU; (*it++) = 16279332111523081723LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7237616480483531100LLU; (*it++) = 10174582569701926077LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13658706619031801779LLU; (*it++) = 12718228212127407596LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17073383273789752224LLU; (*it++) = 15897785265159259495LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17588393573759676996LLU; (*it++) = 9936115790724537184LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3538747893490044629LLU; (*it++) = 12420144738405671481LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9035120885289943691LLU; (*it++) = 15525180923007089351LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12564479580947296663LLU; (*it++) = 9703238076879430844LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15705599476184120828LLU; (*it++) = 12129047596099288555LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15020313326802763131LLU; (*it++) = 15161309495124110694LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4776009810824339053LLU; (*it++) = 9475818434452569184LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5970012263530423816LLU; (*it++) = 11844773043065711480LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7462515329413029771LLU; (*it++) = 14805966303832139350LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 52386062455755702LLU; (*it++) = 9253728939895087094LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9288854614924470436LLU; (*it++) = 11567161174868858867LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6999382250228200141LLU; (*it++) = 14458951468586073584LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8749227812785250177LLU; (*it++) = 18073689335732591980LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14691639419845557168LLU; (*it++) = 11296055834832869987LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13752863256379558556LLU; (*it++) = 14120069793541087484LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17191079070474448196LLU; (*it++) = 17650087241926359355LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8438581409832836170LLU; (*it++) = 11031304526203974597LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15159912780718433117LLU; (*it++) = 13789130657754968246LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9726518939043265588LLU; (*it++) = 17236413322193710308LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15302446373756816800LLU; (*it++) = 10772758326371068942LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9904685930341245193LLU; (*it++) = 13465947907963836178LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3157485376071780683LLU; (*it++) = 16832434884954795223LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8890957387685944783LLU; (*it++) = 10520271803096747014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1890324697752655170LLU; (*it++) = 13150339753870933768LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2362905872190818963LLU; (*it++) = 16437924692338667210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6088502188546649756LLU; (*it++) = 10273702932711667006LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16833999772538088003LLU; (*it++) = 12842128665889583757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7207441660390446292LLU; (*it++) = 16052660832361979697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16033866083812498692LLU; (*it++) = 10032913020226237310LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10818960567910847557LLU; (*it++) = 12541141275282796638LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4300328673033783639LLU; (*it++) = 15676426594103495798LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16522763475928278486LLU; (*it++) = 9797766621314684873LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6818396289628184396LLU; (*it++) = 12247208276643356092LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8522995362035230495LLU; (*it++) = 15309010345804195115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3021029092058325107LLU; (*it++) = 9568131466127621947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17611344420355070096LLU; (*it++) = 11960164332659527433LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8179122470161673908LLU; (*it++) = 14950205415824409292LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14335323580705822000LLU; (*it++) = 9343878384890255807LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13307468457454889596LLU; (*it++) = 11679847981112819759LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12022649553391224092LLU; (*it++) = 14599809976391024699LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10416625923311642211LLU; (*it++) = 18249762470488780874LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11122077220497164286LLU; (*it++) = 11406101544055488046LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4679224488766679549LLU; (*it++) = 14257626930069360058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15072402647813125244LLU; (*it++) = 17822033662586700072LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9420251654883203278LLU; (*it++) = 11138771039116687545LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16387000587031392001LLU; (*it++) = 13923463798895859431LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15872064715361852097LLU; (*it++) = 17404329748619824289LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3002511419460075705LLU; (*it++) = 10877706092887390181LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8364825292752482535LLU; (*it++) = 13597132616109237726LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1232659579085827361LLU; (*it++) = 16996415770136547158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14605470292210805812LLU; (*it++) = 10622759856335341973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4421779809981343554LLU; (*it++) = 13278449820419177467LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 915538744049291538LLU; (*it++) = 16598062275523971834LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5183897733458195115LLU; (*it++) = 10373788922202482396LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6479872166822743894LLU; (*it++) = 12967236152753102995LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3488154190101041964LLU; (*it++) = 16209045190941378744LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2180096368813151227LLU; (*it++) = 10130653244338361715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16560178516298602746LLU; (*it++) = 12663316555422952143LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16088537126945865529LLU; (*it++) = 15829145694278690179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7749492695127472003LLU; (*it++) = 9893216058924181362LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 463493832054564196LLU; (*it++) = 12366520073655226703LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14414425345350368957LLU; (*it++) = 15458150092069033378LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13620701859271368502LLU; (*it++) = 9661343807543145861LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3190819268807046916LLU; (*it++) = 12076679759428932327LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17823582141290972357LLU; (*it++) = 15095849699286165408LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11139738838306857723LLU; (*it++) = 9434906062053853380LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13924673547883572154LLU; (*it++) = 11793632577567316725LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3570783879572301480LLU; (*it++) = 14742040721959145907LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18298537904747540562LLU; (*it++) = 18427550902448932383LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18354115218108294707LLU; (*it++) = 11517219314030582739LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18330958004207980480LLU; (*it++) = 14396524142538228424LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4466953431550423984LLU; (*it++) = 17995655178172785531LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 486002885505321038LLU; (*it++) = 11247284486357990957LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5219189625309039202LLU; (*it++) = 14059105607947488696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6523987031636299002LLU; (*it++) = 17573882009934360870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17912549950054850588LLU; (*it++) = 10983676256208975543LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17779001419141175331LLU; (*it++) = 13729595320261219429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8388693718644305452LLU; (*it++) = 17161994150326524287LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12160462601793772764LLU; (*it++) = 10726246343954077679LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10588892233814828051LLU; (*it++) = 13407807929942597099LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8624429273841147159LLU; (*it++) = 16759759912428246374LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 778582277723329070LLU; (*it++) = 10474849945267653984LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 973227847154161338LLU; (*it++) = 13093562431584567480LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1216534808942701673LLU; (*it++) = 16366953039480709350LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14595392310871352257LLU; (*it++) = 10229345649675443343LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13632554370161802418LLU; (*it++) = 12786682062094304179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12429006944274865118LLU; (*it++) = 15983352577617880224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7768129340171790699LLU; (*it++) = 9989595361011175140LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9710161675214738374LLU; (*it++) = 12486994201263968925LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16749388112445810871LLU; (*it++) = 15608742751579961156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1244995533423855986LLU; (*it++) = 9755464219737475723LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15391302472061983695LLU; (*it++) = 12194330274671844653LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5404070034795315907LLU; (*it++) = 15242912843339805817LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14906758817815542202LLU; (*it++) = 9526820527087378635LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14021762503842039848LLU; (*it++) = 11908525658859223294LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8303831092947774002LLU; (*it++) = 14885657073574029118LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 578208414664970847LLU; (*it++) = 9303535670983768199LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14557818573613377271LLU; (*it++) = 11629419588729710248LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18197273217016721589LLU; (*it++) = 14536774485912137810LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13523219484416126178LLU; (*it++) = 18170968107390172263LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15369541205401160717LLU; (*it++) = 11356855067118857664LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 765182433041899281LLU; (*it++) = 14196068833898572081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5568164059729762005LLU; (*it++) = 17745086042373215101LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5785945546544795205LLU; (*it++) = 11090678776483259438LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16455803970035769814LLU; (*it++) = 13863348470604074297LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6734696907262548556LLU; (*it++) = 17329185588255092872LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4209185567039092847LLU; (*it++) = 10830740992659433045LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9873167977226253963LLU; (*it++) = 13538426240824291306LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3118087934678041646LLU; (*it++) = 16923032801030364133LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4254647968387469981LLU; (*it++) = 10576895500643977583LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 706623942056949572LLU; (*it++) = 13221119375804971979LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14718337982853350677LLU; (*it++) = 16526399219756214973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11504804248497038125LLU; (*it++) = 10328999512347634358LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5157633273766521849LLU; (*it++) = 12911249390434542948LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6447041592208152311LLU; (*it++) = 16139061738043178685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6335244004343789146LLU; (*it++) = 10086913586276986678LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17142427042284512241LLU; (*it++) = 12608641982846233347LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16816347784428252397LLU; (*it++) = 15760802478557791684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1286845328412881940LLU; (*it++) = 9850501549098619803LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15443614715798266137LLU; (*it++) = 12313126936373274753LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5469460339465668959LLU; (*it++) = 15391408670466593442LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8030098730593431003LLU; (*it++) = 9619630419041620901LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14649309431669176658LLU; (*it++) = 12024538023802026126LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9088264752731695015LLU; (*it++) = 15030672529752532658LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10291851488884697288LLU; (*it++) = 9394170331095332911LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8253128342678483706LLU; (*it++) = 11742712913869166139LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5704724409920716729LLU; (*it++) = 14678391142336457674LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16354277549255671720LLU; (*it++) = 18347988927920572092LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 998051431430019017LLU; (*it++) = 11467493079950357558LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10470936326142299579LLU; (*it++) = 14334366349937946947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8476984389250486570LLU; (*it++) = 17917957937422433684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14521487280136329914LLU; (*it++) = 11198723710889021052LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18151859100170412392LLU; (*it++) = 13998404638611276315LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18078137856785627587LLU; (*it++) = 17498005798264095394LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15910522178918405146LLU; (*it++) = 10936253623915059621LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6053094668365842720LLU; (*it++) = 13670317029893824527LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2954682317029915496LLU; (*it++) = 17087896287367280659LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17987577512639554849LLU; (*it++) = 10679935179604550411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17872785872372055657LLU; (*it++) = 13349918974505688014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13117610303610293764LLU; (*it++) = 16687398718132110018LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12810192458183821506LLU; (*it++) = 10429624198832568761LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2177682517447613171LLU; (*it++) = 13037030248540710952LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2722103146809516464LLU; (*it++) = 16296287810675888690LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6313000485183335694LLU; (*it++) = 10185179881672430431LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3279564588051781713LLU; (*it++) = 12731474852090538039LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17934513790346890853LLU; (*it++) = 15914343565113172548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1985699082112030975LLU; (*it++) = 9946464728195732843LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16317181907922202431LLU; (*it++) = 12433080910244666053LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6561419329620589327LLU; (*it++) = 15541351137805832567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11018416108653950185LLU; (*it++) = 9713344461128645354LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4549648098962661924LLU; (*it++) = 12141680576410806693LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10298746142130715309LLU; (*it++) = 15177100720513508366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1825030320404309164LLU; (*it++) = 9485687950320942729LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6892973918932774359LLU; (*it++) = 11857109937901178411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4004531380238580045LLU; (*it++) = 14821387422376473014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16337890167931276240LLU; (*it++) = 9263367138985295633LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6587304654631931588LLU; (*it++) = 11579208923731619542LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17457502855144690293LLU; (*it++) = 14474011154664524427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17210192550503474962LLU; (*it++) = 18092513943330655534LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6144684325637283947LLU; (*it++) = 11307821214581659709LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12292541425473992838LLU; (*it++) = 14134776518227074636LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15365676781842491048LLU; (*it++) = 17668470647783843295LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16521077016292638761LLU; (*it++) = 11042794154864902059LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16039660251938410547LLU; (*it++) = 13803492693581127574LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10826203278068237376LLU; (*it++) = 17254365866976409468LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15989749085647424168LLU; (*it++) = 10783978666860255917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6152128301777116498LLU; (*it++) = 13479973333575319897LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12301846395648783526LLU; (*it++) = 16849966666969149871LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14606183024921571560LLU; (*it++) = 10531229166855718669LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4422670725869800738LLU; (*it++) = 13164036458569648337LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10140024425764638826LLU; (*it++) = 16455045573212060421LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8643358275316593218LLU; (*it++) = 10284403483257537763LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6192511825718353619LLU; (*it++) = 12855504354071922204LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7740639782147942024LLU; (*it++) = 16069380442589902755LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2532056854628769813LLU; (*it++) = 10043362776618689222LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12388443105140738074LLU; (*it++) = 12554203470773361527LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10873867862998534689LLU; (*it++) = 15692754338466701909LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9102010423587778132LLU; (*it++) = 9807971461541688693LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15989199047912110569LLU; (*it++) = 12259964326927110866LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10763126773035362404LLU; (*it++) = 15324955408658888583LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13644483260788183358LLU; (*it++) = 9578097130411805364LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17055604075985229198LLU; (*it++) = 11972621413014756705LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7484447039699372786LLU; (*it++) = 14965776766268445882LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9289465418239495895LLU; (*it++) = 9353610478917778676LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11611831772799369869LLU; (*it++) = 11692013098647223345LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 679731660717048624LLU; (*it++) = 14615016373309029182LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10073036612751086588LLU; (*it++) = 18268770466636286477LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8601490892183123069LLU; (*it++) = 11417981541647679048LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10751863615228903837LLU; (*it++) = 14272476927059598810LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4216457482181353988LLU; (*it++) = 17840596158824498513LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14164500972431816002LLU; (*it++) = 11150372599265311570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8482254178684994195LLU; (*it++) = 13937965749081639463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5991131704928854840LLU; (*it++) = 17422457186352049329LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15273672361649004035LLU; (*it++) = 10889035741470030830LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9868718415206479236LLU; (*it++) = 13611294676837538538LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3112525982153323237LLU; (*it++) = 17014118346046923173LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4251171748059520975LLU; (*it++) = 10633823966279326983LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 702278666647013314LLU; (*it++) = 13292279957849158729LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5489534351736154547LLU; (*it++) = 16615349947311448411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1125115960621402640LLU; (*it++) = 10384593717069655257LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6018080969204141204LLU; (*it++) = 12980742146337069071LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2910915193077788601LLU; (*it++) = 16225927682921336339LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17960223060169475539LLU; (*it++) = 10141204801825835211LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17838592806784456520LLU; (*it++) = 12676506002282294014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13074868971625794843LLU; (*it++) = 15845632502852867518LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3560107088838733872LLU; (*it++) = 9903520314283042199LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18285191916330581053LLU; (*it++) = 12379400392853802748LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4409745821703674700LLU; (*it++) = 15474250491067253436LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11979463175419572495LLU; (*it++) = 9671406556917033397LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1139270913992301907LLU; (*it++) = 12089258196146291747LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15259146697772541096LLU; (*it++) = 15111572745182864683LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7231123676894144233LLU; (*it++) = 9444732965739290427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4427218577690292387LLU; (*it++) = 11805916207174113034LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14757395258967641292LLU; (*it++) = 14757395258967641292LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9223372036854775808LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11529215046068469760LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14411518807585587200LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 18014398509481984000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11258999068426240000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14073748835532800000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 17592186044416000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10995116277760000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13743895347200000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 17179869184000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10737418240000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13421772800000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16777216000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10485760000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13107200000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16384000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10240000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12800000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16000000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10000000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12500000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 15625000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9765625000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12207031250000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 15258789062500000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9536743164062500000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11920928955078125000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14901161193847656250LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4611686018427387904LLU; (*it++) = 9313225746154785156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5764607523034234880LLU; (*it++) = 11641532182693481445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11817445422220181504LLU; (*it++) = 14551915228366851806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5548434740920451072LLU; (*it++) = 18189894035458564758LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17302829768357445632LLU; (*it++) = 11368683772161602973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7793479155164643328LLU; (*it++) = 14210854715202003717LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14353534962383192064LLU; (*it++) = 17763568394002504646LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4359273333062107136LLU; (*it++) = 11102230246251565404LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5449091666327633920LLU; (*it++) = 13877787807814456755LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2199678564482154496LLU; (*it++) = 17347234759768070944LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1374799102801346560LLU; (*it++) = 10842021724855044340LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1718498878501683200LLU; (*it++) = 13552527156068805425LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6759809616554491904LLU; (*it++) = 16940658945086006781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6530724019560251392LLU; (*it++) = 10587911840678754238LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17386777061305090048LLU; (*it++) = 13234889800848442797LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7898413271349198848LLU; (*it++) = 16543612251060553497LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16465723340661719040LLU; (*it++) = 10339757656912845935LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15970468157399760896LLU; (*it++) = 12924697071141057419LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15351399178322313216LLU; (*it++) = 16155871338926321774LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4982938468024057856LLU; (*it++) = 10097419586828951109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10840359103457460224LLU; (*it++) = 12621774483536188886LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4327076842467049472LLU; (*it++) = 15777218104420236108LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11927795063396681728LLU; (*it++) = 9860761315262647567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10298057810818464256LLU; (*it++) = 12325951644078309459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8260886245095692416LLU; (*it++) = 15407439555097886824LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5163053903184807760LLU; (*it++) = 9629649721936179265LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11065503397408397604LLU; (*it++) = 12037062152420224081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18443565265187884909LLU; (*it++) = 15046327690525280101LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13833071299956122020LLU; (*it++) = 9403954806578300063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12679653106517764621LLU; (*it++) = 11754943508222875079LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11237880364719817872LLU; (*it++) = 14693679385278593849LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 212292400617608628LLU; (*it++) = 18367099231598242312LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 132682750386005392LLU; (*it++) = 11479437019748901445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4777539456409894645LLU; (*it++) = 14349296274686126806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15195296357367144114LLU; (*it++) = 17936620343357658507LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7191217214140771119LLU; (*it++) = 11210387714598536567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4377335499248575995LLU; (*it++) = 14012984643248170709LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10083355392488107898LLU; (*it++) = 17516230804060213386LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10913783138732455340LLU; (*it++) = 10947644252537633366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4418856886560793367LLU; (*it++) = 13684555315672041708LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5523571108200991709LLU; (*it++) = 17105694144590052135LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10369760970266701674LLU; (*it++) = 10691058840368782584LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12962201212833377092LLU; (*it++) = 13363823550460978230LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6979379479186945558LLU; (*it++) = 16704779438076222788LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13585484211346616781LLU; (*it++) = 10440487148797639242LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7758483227328495169LLU; (*it++) = 13050608935997049053LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14309790052588006865LLU; (*it++) = 16313261169996311316LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18166990819722280098LLU; (*it++) = 10195788231247694572LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4261994450943298507LLU; (*it++) = 12744735289059618216LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5327493063679123134LLU; (*it++) = 15930919111324522770LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7941369183226839863LLU; (*it++) = 9956824444577826731LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5315025460606161924LLU; (*it++) = 12446030555722283414LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15867153862612478214LLU; (*it++) = 15557538194652854267LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7611128154919104931LLU; (*it++) = 9723461371658033917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14125596212076269068LLU; (*it++) = 12154326714572542396LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17656995265095336336LLU; (*it++) = 15192908393215677995LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8729779031470891258LLU; (*it++) = 9495567745759798747LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6300537770911226168LLU; (*it++) = 11869459682199748434LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17099044250493808518LLU; (*it++) = 14836824602749685542LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6075216638131242420LLU; (*it++) = 9273015376718553464LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7594020797664053025LLU; (*it++) = 11591269220898191830LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 269153960225290473LLU; (*it++) = 14489086526122739788LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 336442450281613091LLU; (*it++) = 18111358157653424735LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7127805559067090038LLU; (*it++) = 11319598848533390459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4298070930406474644LLU; (*it++) = 14149498560666738074LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14595960699862869113LLU; (*it++) = 17686873200833422592LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9122475437414293195LLU; (*it++) = 11054295750520889120LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11403094296767866494LLU; (*it++) = 13817869688151111400LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14253867870959833118LLU; (*it++) = 17272337110188889250LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13520353437777283602LLU; (*it++) = 10795210693868055781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3065383741939440791LLU; (*it++) = 13494013367335069727LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17666787732706464701LLU; (*it++) = 16867516709168837158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6430056314514152534LLU; (*it++) = 10542197943230523224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8037570393142690668LLU; (*it++) = 13177747429038154030LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 823590954573587527LLU; (*it++) = 16472184286297692538LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5126430365035880108LLU; (*it++) = 10295115178936057836LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6408037956294850135LLU; (*it++) = 12868893973670072295LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3398361426941174765LLU; (*it++) = 16086117467087590369LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13653190937906703988LLU; (*it++) = 10053823416929743980LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17066488672383379985LLU; (*it++) = 12567279271162179975LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16721424822051837077LLU; (*it++) = 15709099088952724969LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3533361486141316317LLU; (*it++) = 9818186930595453106LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13640073894531421205LLU; (*it++) = 12272733663244316382LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7826720331309500698LLU; (*it++) = 15340917079055395478LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 280014188641050032LLU; (*it++) = 9588073174409622174LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9573389772656088348LLU; (*it++) = 11985091468012027717LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16578423234247498339LLU; (*it++) = 14981364335015034646LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5749828502977298558LLU; (*it++) = 9363352709384396654LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16410657665576399005LLU; (*it++) = 11704190886730495817LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6678264026688335045LLU; (*it++) = 14630238608413119772LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8347830033360418806LLU; (*it++) = 18287798260516399715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2911550761636567802LLU; (*it++) = 11429873912822749822LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12862810488900485560LLU; (*it++) = 14287342391028437277LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2243455055843443238LLU; (*it++) = 17859177988785546597LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3708002419115845976LLU; (*it++) = 11161986242990966623LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 23317005467419566LLU; (*it++) = 13952482803738708279LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13864204312116438170LLU; (*it++) = 17440603504673385348LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17888499731927549664LLU; (*it++) = 10900377190420865842LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13137252628054661272LLU; (*it++) = 13625471488026082303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11809879766640938686LLU; (*it++) = 17031839360032602879LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14298703881791668535LLU; (*it++) = 10644899600020376799LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13261693833812197764LLU; (*it++) = 13306124500025470999LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11965431273837859301LLU; (*it++) = 16632655625031838749LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9784237555362356015LLU; (*it++) = 10395409765644899218LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3006924907348169211LLU; (*it++) = 12994262207056124023LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17593714189467375226LLU; (*it++) = 16242827758820155028LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1772699331562333708LLU; (*it++) = 10151767349262596893LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6827560182880305039LLU; (*it++) = 12689709186578246116LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8534450228600381299LLU; (*it++) = 15862136483222807645LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7639874402088932264LLU; (*it++) = 9913835302014254778LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 326470965756389522LLU; (*it++) = 12392294127517818473LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5019774725622874806LLU; (*it++) = 15490367659397273091LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 831516194300602802LLU; (*it++) = 9681479787123295682LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10262767279730529310LLU; (*it++) = 12101849733904119602LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3605087062808385830LLU; (*it++) = 15127312167380149503LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9170708441896323000LLU; (*it++) = 9454570104612593439LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6851699533943015846LLU; (*it++) = 11818212630765741799LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3952938399001381903LLU; (*it++) = 14772765788457177249LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13999801545444333449LLU; (*it++) = 9232978617785735780LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17499751931805416812LLU; (*it++) = 11541223272232169725LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8039631859474607303LLU; (*it++) = 14426529090290212157LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14661225842770647033LLU; (*it++) = 18033161362862765196LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18386638188586430203LLU; (*it++) = 11270725851789228247LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18371611717305649850LLU; (*it++) = 14088407314736535309LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9129456591349898601LLU; (*it++) = 17610509143420669137LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17235125415662156385LLU; (*it++) = 11006568214637918210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12320534732722919674LLU; (*it++) = 13758210268297397763LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10788982397476261688LLU; (*it++) = 17197762835371747204LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15966486035277439363LLU; (*it++) = 10748601772107342002LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10734735507242023396LLU; (*it++) = 13435752215134177503LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8806733365625141341LLU; (*it++) = 16794690268917721879LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12421737381156795194LLU; (*it++) = 10496681418073576174LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6303799689591218185LLU; (*it++) = 13120851772591970218LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17103121648843798539LLU; (*it++) = 16401064715739962772LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1466078993672598279LLU; (*it++) = 10250665447337476733LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6444284760518135752LLU; (*it++) = 12813331809171845916LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8055355950647669691LLU; (*it++) = 16016664761464807395LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2728754459941099604LLU; (*it++) = 10010415475915504622LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12634315111781150314LLU; (*it++) = 12513019344894380777LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1957835834444274180LLU; (*it++) = 15641274181117975972LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10447019433382447170LLU; (*it++) = 9775796363198734982LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3835402254873283155LLU; (*it++) = 12219745453998418728LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4794252818591603944LLU; (*it++) = 15274681817498023410LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7608094030047140369LLU; (*it++) = 9546676135936264631LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4898431519131537557LLU; (*it++) = 11933345169920330789LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10734725417341809851LLU; (*it++) = 14916681462400413486LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2097517367411243253LLU; (*it++) = 9322925914000258429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7233582727691441970LLU; (*it++) = 11653657392500323036LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9041978409614302462LLU; (*it++) = 14567071740625403795LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6690786993590490174LLU; (*it++) = 18208839675781754744LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4181741870994056359LLU; (*it++) = 11380524797363596715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 615491320315182544LLU; (*it++) = 14225655996704495894LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9992736187248753989LLU; (*it++) = 17782069995880619867LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3939617107816777291LLU; (*it++) = 11113793747425387417LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9536207403198359517LLU; (*it++) = 13892242184281734271LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7308573235570561493LLU; (*it++) = 17365302730352167839LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11485387299872682789LLU; (*it++) = 10853314206470104899LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9745048106413465582LLU; (*it++) = 13566642758087631124LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12181310133016831978LLU; (*it++) = 16958303447609538905LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 695789805494438130LLU; (*it++) = 10598939654755961816LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 869737256868047663LLU; (*it++) = 13248674568444952270LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10310543607939835386LLU; (*it++) = 16560843210556190337LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17973304801030866876LLU; (*it++) = 10350527006597618960LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4019886927579031980LLU; (*it++) = 12938158758247023701LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9636544677901177879LLU; (*it++) = 16172698447808779626LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10634526442115624078LLU; (*it++) = 10107936529880487266LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4069786015789754290LLU; (*it++) = 12634920662350609083LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 475546501309804958LLU; (*it++) = 15793650827938261354LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4908902581746016003LLU; (*it++) = 9871031767461413346LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15359500264037295811LLU; (*it++) = 12338789709326766682LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9976003293191843956LLU; (*it++) = 15423487136658458353LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17764217104313372233LLU; (*it++) = 9639679460411536470LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12981899343536939483LLU; (*it++) = 12049599325514420588LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16227374179421174354LLU; (*it++) = 15061999156893025735LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17059637889779315827LLU; (*it++) = 9413749473058141084LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2877803288514593168LLU; (*it++) = 11767186841322676356LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3597254110643241460LLU; (*it++) = 14708983551653345445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9108253656731439729LLU; (*it++) = 18386229439566681806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1080972517029761926LLU; (*it++) = 11491393399729176129LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5962901664714590312LLU; (*it++) = 14364241749661470161LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12065313099320625794LLU; (*it++) = 17955302187076837701LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9846663696289085073LLU; (*it++) = 11222063866923023563LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7696643601933968437LLU; (*it++) = 14027579833653779454LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 397432465562684739LLU; (*it++) = 17534474792067224318LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14083453346258841674LLU; (*it++) = 10959046745042015198LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8380944645968776284LLU; (*it++) = 13698808431302518998LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1252808770606194547LLU; (*it++) = 17123510539128148748LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10006377518483647400LLU; (*it++) = 10702194086955092967LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7896285879677171346LLU; (*it++) = 13377742608693866209LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14482043368023852087LLU; (*it++) = 16722178260867332761LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2133748077373825698LLU; (*it++) = 10451361413042082976LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2667185096717282123LLU; (*it++) = 13064201766302603720LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3333981370896602653LLU; (*it++) = 16330252207878254650LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6695424375237764562LLU; (*it++) = 10206407629923909156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8369280469047205703LLU; (*it++) = 12758009537404886445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15073286604736395033LLU; (*it++) = 15947511921756108056LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9420804127960246895LLU; (*it++) = 9967194951097567535LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7164319141522920715LLU; (*it++) = 12458993688871959419LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4343712908476262990LLU; (*it++) = 15573742111089949274LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7326506586225052273LLU; (*it++) = 9733588819431218296LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9158133232781315341LLU; (*it++) = 12166986024289022870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2224294504121868368LLU; (*it++) = 15208732530361278588LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10613556101930943538LLU; (*it++) = 9505457831475799117LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17878631145841067327LLU; (*it++) = 11881822289344748896LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3901544858591782542LLU; (*it++) = 14852277861680936121LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13967680582688333849LLU; (*it++) = 9282673663550585075LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12847914709933029407LLU; (*it++) = 11603342079438231344LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16059893387416286759LLU; (*it++) = 14504177599297789180LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1628122660560806833LLU; (*it++) = 18130221999122236476LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10240948699705280078LLU; (*it++) = 11331388749451397797LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17412871893058988002LLU; (*it++) = 14164235936814247246LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12542717829468959195LLU; (*it++) = 17705294921017809058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12450884661845487401LLU; (*it++) = 11065809325636130661LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1728547772024695539LLU; (*it++) = 13832261657045163327LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15995742770313033136LLU; (*it++) = 17290327071306454158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5385653213018257806LLU; (*it++) = 10806454419566533849LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11343752534700210161LLU; (*it++) = 13508068024458167311LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9568004649947874797LLU; (*it++) = 16885085030572709139LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3674159897003727796LLU; (*it++) = 10553178144107943212LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4592699871254659745LLU; (*it++) = 13191472680134929015LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1129188820640936778LLU; (*it++) = 16489340850168661269LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3011586022114279438LLU; (*it++) = 10305838031355413293LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8376168546070237202LLU; (*it++) = 12882297539194266616LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10470210682587796502LLU; (*it++) = 16102871923992833270LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1932195658189984910LLU; (*it++) = 10064294952495520794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11638616609592256945LLU; (*it++) = 12580368690619400992LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14548270761990321182LLU; (*it++) = 15725460863274251240LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9092669226243950738LLU; (*it++) = 9828413039546407025LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15977522551232326327LLU; (*it++) = 12285516299433008781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6136845133758244197LLU; (*it++) = 15356895374291260977LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15364743254667372383LLU; (*it++) = 9598059608932038110LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9982557031479439671LLU; (*it++) = 11997574511165047638LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3254824252494523781LLU; (*it++) = 14996968138956309548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11257637194663853171LLU; (*it++) = 9373105086847693467LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9460360474902428559LLU; (*it++) = 11716381358559616834LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2602078556773259891LLU; (*it++) = 14645476698199521043LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17087656251248738576LLU; (*it++) = 18306845872749401303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17597314184671543466LLU; (*it++) = 11441778670468375814LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12773270693984653525LLU; (*it++) = 14302223338085469768LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15966588367480816906LLU; (*it++) = 17877779172606837210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14590803748102898470LLU; (*it++) = 11173611982879273256LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18238504685128623088LLU; (*it++) = 13967014978599091570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13574758819556003052LLU; (*it++) = 17458768723248864463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15401753289863583763LLU; (*it++) = 10911730452030540289LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5417133557047315992LLU; (*it++) = 13639663065038175362LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15994788983163920798LLU; (*it++) = 17049578831297719202LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14608429132904838403LLU; (*it++) = 10655986769561074501LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4425478360848884291LLU; (*it++) = 13319983461951343127LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 920161932633717460LLU; (*it++) = 16649979327439178909LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2880944217109767365LLU; (*it++) = 10406237079649486818LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12824552308241985014LLU; (*it++) = 13007796349561858522LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6807318348447705459LLU; (*it++) = 16259745436952323153LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15783789013848285672LLU; (*it++) = 10162340898095201970LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10506364230455581282LLU; (*it++) = 12702926122619002463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8521269269642088699LLU; (*it++) = 15878657653273753079LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12243322321167387293LLU; (*it++) = 9924161033296095674LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6080780864604458308LLU; (*it++) = 12405201291620119593LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12212662099182960789LLU; (*it++) = 15506501614525149491LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5327070802775656541LLU; (*it++) = 9691563509078218432LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6658838503469570676LLU; (*it++) = 12114454386347773040LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8323548129336963345LLU; (*it++) = 15143067982934716300LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14425589617690377899LLU; (*it++) = 9464417489334197687LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13420301003685584469LLU; (*it++) = 11830521861667747109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2940318199324816875LLU; (*it++) = 14788152327084683887LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8755227902219092403LLU; (*it++) = 9242595204427927429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15555720896201253407LLU; (*it++) = 11553244005534909286LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10221279083396790951LLU; (*it++) = 14441555006918636608LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12776598854245988689LLU; (*it++) = 18051943758648295760LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7985374283903742931LLU; (*it++) = 11282464849155184850LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 758345818024902856LLU; (*it++) = 14103081061443981063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14782990327813292282LLU; (*it++) = 17628851326804976328LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9239368954883307676LLU; (*it++) = 11018032079253110205LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16160897212031522499LLU; (*it++) = 13772540099066387756LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1754377441329851508LLU; (*it++) = 17215675123832984696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1096485900831157192LLU; (*it++) = 10759796952395615435LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15205665431321110202LLU; (*it++) = 13449746190494519293LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5172023733869224041LLU; (*it++) = 16812182738118149117LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5538357842881958977LLU; (*it++) = 10507614211323843198LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16146319340457224530LLU; (*it++) = 13134517764154803997LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6347841120289366950LLU; (*it++) = 16418147205193504997LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6273243709394548296LLU; (*it++) = 10261342003245940623LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3229868618315797466LLU; (*it++) = 12826677504057425779LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17872393828176910545LLU; (*it++) = 16033346880071782223LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18087775170251650946LLU; (*it++) = 10020841800044863889LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8774660907532399971LLU; (*it++) = 12526052250056079862LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1744954097560724156LLU; (*it++) = 15657565312570099828LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10313968347830228405LLU; (*it++) = 9785978320356312392LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12892460434787785506LLU; (*it++) = 12232472900445390490LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6892203506629956075LLU; (*it++) = 15290591125556738113LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15836842237712192307LLU; (*it++) = 9556619453472961320LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1349308723430688768LLU; (*it++) = 11945774316841201651LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15521693959570524672LLU; (*it++) = 14932217896051502063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16618587752372659776LLU; (*it++) = 9332636185032188789LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6938176635183661008LLU; (*it++) = 11665795231290235987LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4061034775552188356LLU; (*it++) = 14582244039112794984LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5076293469440235445LLU; (*it++) = 18227805048890993730LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7784369436827535057LLU; (*it++) = 11392378155556871081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14342147814461806725LLU; (*it++) = 14240472694446088851LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13315998749649870503LLU; (*it++) = 17800590868057611064LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8322499218531169064LLU; (*it++) = 11125369292536006915LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5791438004736573426LLU; (*it++) = 13906711615670008644LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7239297505920716783LLU; (*it++) = 17383389519587510805LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6830403950414141941LLU; (*it++) = 10864618449742194253LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13149690956445065330LLU; (*it++) = 13580773062177742816LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16437113695556331663LLU; (*it++) = 16975966327722178520LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10273196059722707289LLU; (*it++) = 10609978954826361575LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8229809056225996208LLU; (*it++) = 13262473693532951969LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14898947338709883164LLU; (*it++) = 16578092116916189961LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2394313059052595121LLU; (*it++) = 10361307573072618726LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12216263360670519709LLU; (*it++) = 12951634466340773407LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10658643182410761733LLU; (*it++) = 16189543082925966759LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13579181016647807939LLU; (*it++) = 10118464426828729224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16973976270809759924LLU; (*it++) = 12648080533535911530LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11994098301657424097LLU; (*it++) = 15810100666919889413LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9802154447749584012LLU; (*it++) = 9881312916824930883LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7641007041259592112LLU; (*it++) = 12351641146031163604LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9551258801574490140LLU; (*it++) = 15439551432538954505LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17498751797052526097LLU; (*it++) = 9649719645336846565LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8038381691033493909LLU; (*it++) = 12062149556671058207LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5436291095364479483LLU; (*it++) = 15077686945838822759LLU; __jule_collection; }); __jule_collection; });
	_1a6e5b6bc_powtab = ({ auto __jule_collection = jule::Slice<jule::I32>::alloc(9, 9); auto it = __jule_collection.begin(); (*it++) = 1LL; (*it++) = 3LL; (*it++) = 6LL; (*it++) = 9LL; (*it++) = 13LL; (*it++) = 16LL; (*it++) = 19LL; (*it++) = 23LL; (*it++) = 26LL; __jule_collection; });
	_1a6e5c27d_f64pow10 = ({ auto __jule_collection = jule::Slice<jule::F64>::alloc(23, 23); auto it = __jule_collection.begin(); (*it++) = 1LL; (*it++) = 10LL; (*it++) = 100LL; (*it++) = 1000LL; (*it++) = 10000LL; (*it++) = 100000LL; (*it++) = 1000000LL; (*it++) = 10000000LL; (*it++) = 100000000LL; (*it++) = 1000000000LL; (*it++) = 10000000000LL; (*it++) = 100000000000LL; (*it++) = 1000000000000LL; (*it++) = 10000000000000LL; (*it++) = 100000000000000LL; (*it++) = 1000000000000000LL; (*it++) = 10000000000000000LL; (*it++) = 100000000000000000LL; (*it++) = 1000000000000000000LL; (*it++) = 10000000000000000000LLU; (*it++) = 100000000000000000000.0; (*it++) = 1000000000000000000000.0; (*it++) = 10000000000000000000000.0; __jule_collection; });
	_1a6e5c5ad_f32pow10 = ({ auto __jule_collection = jule::Slice<jule::F32>::alloc(11, 11); auto it = __jule_collection.begin(); (*it++) = 1.0f; (*it++) = 10.0f; (*it++) = 100.0f; (*it++) = 1000.0f; (*it++) = 10000.0f; (*it++) = 100000.0f; (*it++) = 1000000.0f; (*it++) = 10000000.0f; (*it++) = 100000000.0f; (*it++) = 1000000000.0f; (*it++) = 10000000000.0f; __jule_collection; });
	_1a6e60814_u64pow10 = ({ auto __jule_collection = jule::Array<jule::U64,20>(); auto it = __jule_collection.begin(); (*it++) = 1LLU; (*it++) = 10LLU; (*it++) = 100LLU; (*it++) = 1000LLU; (*it++) = 10000LLU; (*it++) = 100000LLU; (*it++) = 1000000LLU; (*it++) = 10000000LLU; (*it++) = 100000000LLU; (*it++) = 1000000000LLU; (*it++) = 10000000000LLU; (*it++) = 100000000000LLU; (*it++) = 1000000000000LLU; (*it++) = 10000000000000LLU; (*it++) = 100000000000000LLU; (*it++) = 1000000000000000LLU; (*it++) = 10000000000000000LLU; (*it++) = 100000000000000000LLU; (*it++) = 1000000000000000000LLU; (*it++) = 10000000000000000000LLU; __jule_collection; });
	_1a6e649d3_leftCheats = ({ auto __jule_collection = jule::Slice<_1a6e645a4_leftCheat>::alloc(61, 61); auto it = __jule_collection.begin(); (*it++) = _1a6e645a4_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()}; (*it++) = _1a6e645a4_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("5", 1)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("25", 2)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("125", 3)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("625", 3)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("3125", 4)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("15625", 5)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("78125", 5)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("390625", 6)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("1953125", 7)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("9765625", 7)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("48828125", 8)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("244140625", 9)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("1220703125", 10)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("6103515625", 10)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("30517578125", 11)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("152587890625", 12)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("762939453125", 12)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("3814697265625", 13)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("19073486328125", 14)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("95367431640625", 14)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("476837158203125", 15)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("2384185791015625", 16)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("11920928955078125", 17)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("59604644775390625", 17)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("298023223876953125", 18)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("1490116119384765625", 19)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("7450580596923828125", 19)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("37252902984619140625", 20)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("186264514923095703125", 21)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("931322574615478515625", 21)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("4656612873077392578125", 22)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("23283064365386962890625", 23)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("116415321826934814453125", 24)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("582076609134674072265625", 24)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("2910383045673370361328125", 25)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("14551915228366851806640625", 26)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("72759576141834259033203125", 26)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("363797880709171295166015625", 27)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("1818989403545856475830078125", 28)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("9094947017729282379150390625", 28)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("45474735088646411895751953125", 29)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("227373675443232059478759765625", 30)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("1136868377216160297393798828125", 31)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("5684341886080801486968994140625", 31)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("28421709430404007434844970703125", 32)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("142108547152020037174224853515625", 33)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("710542735760100185871124267578125", 33)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("3552713678800500929355621337890625", 34)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("17763568394002504646778106689453125", 35)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("88817841970012523233890533447265625", 35)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("444089209850062616169452667236328125", 36)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("2220446049250313080847263336181640625", 37)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("11102230246251565404236316680908203125", 38)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("55511151231257827021181583404541015625", 38)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("277555756156289135105907917022705078125", 39)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("1387778780781445675529539585113525390625", 40)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("6938893903907228377647697925567626953125", 40)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("34694469519536141888238489627838134765625", 41)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("173472347597680709441192448139190673828125", 42)}; (*it++) = _1a6e645a4_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str::lit("867361737988403547205962240695953369140625", 42)}; __jule_collection; });
	_1a6e6a984_BitSize = 0LL;
	_1a6e6ac81_SysInt = jule::Str();
	_1a6e6b039_SysUint = jule::Str();
	_1aa236367_Spaces = ({ auto __jule_collection = jule::Array<jule::I32,5>(); auto it = __jule_collection.begin(); (*it++) = ' '; (*it++) = '\t'; (*it++) = '\v'; (*it++) = '\r'; (*it++) = '\n'; __jule_collection; });
	_1aa236587_UnaryOps = ({ auto __jule_collection = jule::Array<jule::U32,6>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U32>(61LLU); (*it++) = static_cast<jule::U32>(60LLU); (*it++) = static_cast<jule::U32>(67LLU); (*it++) = static_cast<jule::U32>(68LLU); (*it++) = static_cast<jule::U32>(62LLU); (*it++) = static_cast<jule::U32>(65LLU); __jule_collection; });
	_1aa2368b7_BinOps = ({ auto __jule_collection = jule::Array<jule::U32,18>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U32>(60LLU); (*it++) = static_cast<jule::U32>(61LLU); (*it++) = static_cast<jule::U32>(62LLU); (*it++) = static_cast<jule::U32>(63LLU); (*it++) = static_cast<jule::U32>(64LLU); (*it++) = static_cast<jule::U32>(65LLU); (*it++) = static_cast<jule::U32>(66LLU); (*it++) = static_cast<jule::U32>(67LLU); (*it++) = static_cast<jule::U32>(56LLU); (*it++) = static_cast<jule::U32>(57LLU); (*it++) = static_cast<jule::U32>(69LLU); (*it++) = static_cast<jule::U32>(70LLU); (*it++) = static_cast<jule::U32>(53LLU); (*it++) = static_cast<jule::U32>(52LLU); (*it++) = static_cast<jule::U32>(54LLU); (*it++) = static_cast<jule::U32>(55LLU); (*it++) = static_cast<jule::U32>(50LLU); (*it++) = static_cast<jule::U32>(51LLU); __jule_collection; });
	_1aa2ce6a7_PostfixOps = ({ auto __jule_collection = jule::Array<jule::U32,2>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U32>(58LLU); (*it++) = static_cast<jule::U32>(59LLU); __jule_collection; });
	_1aa2ce993_AssignOps = ({ auto __jule_collection = jule::Array<jule::U32,11>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U32>(71LLU); (*it++) = static_cast<jule::U32>(40LLU); (*it++) = static_cast<jule::U32>(41LLU); (*it++) = static_cast<jule::U32>(43LLU); (*it++) = static_cast<jule::U32>(42LLU); (*it++) = static_cast<jule::U32>(44LLU); (*it++) = static_cast<jule::U32>(46LLU); (*it++) = static_cast<jule::U32>(45LLU); (*it++) = static_cast<jule::U32>(49LLU); (*it++) = static_cast<jule::U32>(48LLU); (*it++) = static_cast<jule::U32>(47LLU); __jule_collection; });
	_1aa2dcee0_keywords = ({ auto __jule_collection = jule::Array<_1aa2dcab1_kindPair,28>(); auto it = __jule_collection.begin(); (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("const", 5), ._field_id=static_cast<jule::U32>(6LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("ret", 3), ._field_id=static_cast<jule::U32>(2LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("type", 4), ._field_id=static_cast<jule::U32>(7LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("for", 3), ._field_id=static_cast<jule::U32>(9LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("break", 5), ._field_id=static_cast<jule::U32>(10LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("continue", 8), ._field_id=static_cast<jule::U32>(11LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("in", 2), ._field_id=static_cast<jule::U32>(12LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("if", 2), ._field_id=static_cast<jule::U32>(13LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("else", 4), ._field_id=static_cast<jule::U32>(14LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("use", 3), ._field_id=static_cast<jule::U32>(16LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("goto", 4), ._field_id=static_cast<jule::U32>(18LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("enum", 4), ._field_id=static_cast<jule::U32>(20LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("struct", 6), ._field_id=static_cast<jule::U32>(21LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("co", 2), ._field_id=static_cast<jule::U32>(22LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("match", 5), ._field_id=static_cast<jule::U32>(23LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("self", 4), ._field_id=static_cast<jule::U32>(24LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("trait", 5), ._field_id=static_cast<jule::U32>(25LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("impl", 4), ._field_id=static_cast<jule::U32>(26LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("cpp", 3), ._field_id=static_cast<jule::U32>(27LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("fall", 4), ._field_id=static_cast<jule::U32>(28LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("fn", 2), ._field_id=static_cast<jule::U32>(29LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("let", 3), ._field_id=static_cast<jule::U32>(30LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("unsafe", 6), ._field_id=static_cast<jule::U32>(31LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("mut", 3), ._field_id=static_cast<jule::U32>(32LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("defer", 5), ._field_id=static_cast<jule::U32>(33LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("static", 6), ._field_id=static_cast<jule::U32>(34LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("error", 5), ._field_id=static_cast<jule::U32>(36LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("map", 3), ._field_id=static_cast<jule::U32>(37LLU)}; __jule_collection; });
	_1aa2dd320_basicOps = ({ auto __jule_collection = jule::Array<_1aa2dcab1_kindPair,46>(); auto it = __jule_collection.begin(); (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("::", 2), ._field_id=static_cast<jule::U32>(19LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit(":=", 2), ._field_id=static_cast<jule::U32>(38LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit(":", 1), ._field_id=static_cast<jule::U32>(8LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit(";", 1), ._field_id=static_cast<jule::U32>(3LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit(",", 1), ._field_id=static_cast<jule::U32>(5LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("...", 3), ._field_id=static_cast<jule::U32>(39LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit(".", 1), ._field_id=static_cast<jule::U32>(17LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("+=", 2), ._field_id=static_cast<jule::U32>(40LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("-=", 2), ._field_id=static_cast<jule::U32>(41LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("*=", 2), ._field_id=static_cast<jule::U32>(42LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("/=", 2), ._field_id=static_cast<jule::U32>(43LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("%=", 2), ._field_id=static_cast<jule::U32>(44LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("<<=", 3), ._field_id=static_cast<jule::U32>(45LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit(">>=", 3), ._field_id=static_cast<jule::U32>(46LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("^=", 2), ._field_id=static_cast<jule::U32>(47LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("&=", 2), ._field_id=static_cast<jule::U32>(48LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("|=", 2), ._field_id=static_cast<jule::U32>(49LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("==", 2), ._field_id=static_cast<jule::U32>(50LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("!=", 2), ._field_id=static_cast<jule::U32>(51LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit(">=", 2), ._field_id=static_cast<jule::U32>(52LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("<=", 2), ._field_id=static_cast<jule::U32>(53LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("&&", 2), ._field_id=static_cast<jule::U32>(54LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("||", 2), ._field_id=static_cast<jule::U32>(55LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("<<", 2), ._field_id=static_cast<jule::U32>(56LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit(">>", 2), ._field_id=static_cast<jule::U32>(57LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("++", 2), ._field_id=static_cast<jule::U32>(58LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("--", 2), ._field_id=static_cast<jule::U32>(59LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("+", 1), ._field_id=static_cast<jule::U32>(60LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("-", 1), ._field_id=static_cast<jule::U32>(61LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("*", 1), ._field_id=static_cast<jule::U32>(62LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("/", 1), ._field_id=static_cast<jule::U32>(63LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("%", 1), ._field_id=static_cast<jule::U32>(64LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("&", 1), ._field_id=static_cast<jule::U32>(65LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("|", 1), ._field_id=static_cast<jule::U32>(66LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("^", 1), ._field_id=static_cast<jule::U32>(67LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("!", 1), ._field_id=static_cast<jule::U32>(68LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("<", 1), ._field_id=static_cast<jule::U32>(69LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit(">", 1), ._field_id=static_cast<jule::U32>(70LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("=", 1), ._field_id=static_cast<jule::U32>(71LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("#", 1), ._field_id=static_cast<jule::U32>(35LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("{", 1), ._field_id=static_cast<jule::U32>(72LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("}", 1), ._field_id=static_cast<jule::U32>(73LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("[", 1), ._field_id=static_cast<jule::U32>(76LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("]", 1), ._field_id=static_cast<jule::U32>(77LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit("(", 1), ._field_id=static_cast<jule::U32>(74LLU)}; (*it++) = _1aa2dcab1_kindPair{._field_kind=jule::Str::lit(")", 1), ._field_id=static_cast<jule::U32>(75LLU)}; __jule_collection; });
	_1aa370aab_builtinConstraints = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(8, 8); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("signed", 6); (*it++) = jule::Str::lit("unsigned", 8); (*it++) = jule::Str::lit("float", 5); (*it++) = jule::Str::lit("numeric", 7); (*it++) = jule::Str::lit("mutable", 7); (*it++) = jule::Str::lit("immutable", 9); (*it++) = jule::Str::lit("ordered", 7); (*it++) = jule::Str::lit("comparable", 10); __jule_collection; });
	_1aa5db6c8_primNil = jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=nullptr});
	_1aa5db9c5_primVoid = jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a6037aa7_buildPrimType(jule::Str::lit("void", 4)), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data22)});
	_1aa5dbc7d_primAny = jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a6037aa7_buildPrimType(jule::Str::lit("any", 3)), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data22)});
	_1aa5dc07a_primStr = jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a6037aa7_buildPrimType(jule::Str::lit("str", 3)), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data22)});
	_1aa5dc333_primBool = jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a6037aa7_buildPrimType(jule::Str::lit("bool", 4)), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data22)});
	_1aa5dc5db_primUintptr = jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a6037aa7_buildPrimType(jule::Str::lit("uintptr", 7)), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data22)});
	_1aa5dc894_primUint = jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a6037aa7_buildPrimType(jule::Str::lit("uint", 4)), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data22)});
	_1aa5dcc5c_primInt = jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a6037aa7_buildPrimType(jule::Str::lit("int", 3)), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data22)});
	_1aa5dce9e_primI8 = jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a6037aa7_buildPrimType(jule::Str::lit("i8", 2)), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data22)});
	_1aa5dd246_primI16 = jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a6037aa7_buildPrimType(jule::Str::lit("i16", 3)), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data22)});
	_1aa5dd4ee_primI32 = jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a6037aa7_buildPrimType(jule::Str::lit("i32", 3)), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data22)});
	_1aa5dd7a7_primI64 = jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a6037aa7_buildPrimType(jule::Str::lit("i64", 3)), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data22)});
	_1aa5dda60_primU8 = jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a6037aa7_buildPrimType(jule::Str::lit("u8", 2)), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data22)});
	_1aa5ddd18_primU16 = jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a6037aa7_buildPrimType(jule::Str::lit("u16", 3)), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data22)});
	_1aa5de0c1_primU32 = jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a6037aa7_buildPrimType(jule::Str::lit("u32", 3)), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data22)});
	_1aa5de5aa_primU64 = jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a6037aa7_buildPrimType(jule::Str::lit("u64", 3)), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data22)});
	_1aa5de7ec_primF32 = jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a6037aa7_buildPrimType(jule::Str::lit("f32", 3)), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data22)});
	_1aa5dea0b_primF64 = jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1a6037aa7_buildPrimType(jule::Str::lit("f64", 3)), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data22)});
	_1aa8a3891_emptyData = jule::new_ptr<_1aa8a4287_data>(_1aa8a4287_data{._field_boundary=jule::Ptr<_1aa8a5c17_boundary>(nullptr), ._field_nils=jule::Ptr<_1aa601c2c_nils>(nullptr), ._field_dynamic=jule::Ptr<_1aa8a1608_dynamic>(nullptr)});
	_1aa8a88a7_Copy = false;
	_1aa8a8ba4_Deadcode = false;
	_1aa8a8e5c_Append = false;
	_1aa8a9259_Math = false;
	_1aa8a9512_Access = false;
	_1aa8a97ba_Inline = false;
	_1aa8a9a73_Ptr = false;
	_1aa8a9e3b_Cond = false;
	_1aa8aa17d_Str = false;
	_1aa8aa425_Slice = false;
	_1aa8aa6cd_Assign = false;
	_1aa8aa986_Exceptional = false;
	_1aa8aac3e_Iter = false;
	_1aa8aaee7_Dynamic = false;
	_1ab1ac441_exprEnabled = false;
	_1ab1ac683_scopeEnabled = false;
	_1abaee019_mdays = ({ auto __jule_collection = jule::Array<jule::U64,12>(); auto it = __jule_collection.begin(); (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 31LLU; (*it++) = 29LLU; __jule_collection; });
	_1aba2623d_assignArgName = jule::Str::lit("__jule_assign_arg", 17);
	_1abb08a4b_generalGCPtr = jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a602728e_Sptr>(_1a602728e_Sptr{._field_Elem=jule::new_ptr<_1a601a64a_TypeKind>(_1a601a64a_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a6023763_Prim>(_1a6023763_Prim{._field_Kind=jule::Str::lit("uintptr", 7)}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data22)})}), (jule::Trait::Type*)&_1a601a194_Kind_mptr_data23)});
	__jule_call_initializers();
	entry_point();

	return EXIT_SUCCESS;
}