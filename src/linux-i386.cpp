// Auto generated by JuleC.
// JuleC version: jule0.0.16 @master
// Date: 25/8/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <sys/time.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <signal.h>
#include <sys/wait.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _1ce022a58_comptimeRangeKind{};
struct _1ce068197_Importer{};
struct _1ce14c721_Kind{};
struct _1ce16c7b8_Lookup{};
struct _1b5eb8c48_CommonFlag{};
struct _22a83d15c_Range16;
struct _22a83d68a_Range32;
struct _22a83db0d_RangeTable;
struct _22aaa2712_acceptRange;
struct _22ab0b88c_StrBuilder;
struct _22ab17238_lazyBuff;
struct _2439c6321_DirEntry;
struct _2439c65a7_Directory;
struct _2439c81e1_File;
struct _2439ca2d1_Status;
struct _22abd6dc9_cmdAttrs;
struct _22a93672d_Log;
struct _22bde008c_floatInfo;
struct _22bde0c19_decimalSlice;
struct _22be02e5c_leftCheat;
struct _22be03974_decimal;
struct _22be1616d_Const;
struct _1cdeab4b4_Token;
struct _1cdeb1c4a_File;
struct _1cdeb3da1_kindPair;
struct _1cdeb9d85_lex;
struct _1cdebead2_Ast;
struct _1cdec0a8e_Node;
struct _1cdec0eac_Directive;
struct _1cdec1a90_TypeDecl;
struct _1cdec219a_IdentTypeDecl;
struct _1cdec2464_SubIdentTypeDecl;
struct _1cdec283d_NamespaceTypeDecl;
struct _1cdec2b3a_SptrTypeDecl;
struct _1cdec2ec0_SlcTypeDecl;
struct _1cdec32bc_TupleTypeDecl;
struct _1cdec35b9_PtrTypeDecl;
struct _1cdec3d5b_ArrTypeDecl;
struct _1cdec45a9_MapTypeDecl;
struct _1cdec4983_RetTypeDecl;
struct _1cdec5dc4_Expr;
struct _1cdec618d_RangeExpr;
struct _1cdec6798_UseExpr;
struct _1cdec69b8_TupleExpr;
struct _1cdec6d5e_LitExpr;
struct _1cdec7238_UnsafeExpr;
struct _1cdec76de_IdentExpr;
struct _1cdec7e81_UnaryExpr;
struct _1cdec835a_VariadicExpr;
struct _1cdec8734_CastExpr;
struct _1cdec8b0d_NsSelectionExpr;
struct _1cdec8ed7_SubIdentExpr;
struct _1cdec948d_BinaryExpr;
struct _1cdec9aed_FnCallExpr;
struct _1cdeca5e3_FieldExprPair;
struct _1cdecae1d_StructLit;
struct _1cdecb3c4_BraceLit;
struct _1cdecbbee_KeyValPair;
struct _1cdecc42a_SliceExpr;
struct _1cdeccd87_IndexingExpr;
struct _1cdecd4e7_SlicingExpr;
struct _1cdecd7e4_Constraint;
struct _1cdecdc9a_GenericDecl;
struct _1cdece174_LabelSt;
struct _1cdece54d_GotoSt;
struct _1cdece84a_FallSt;
struct _1cdeceeaa_AssignLeft;
struct _1cded053d_AssignSt;
struct _1cded1451_Stmt;
struct _1cded1ab1_ScopeTree;
struct _1cded22ed_ParamDecl;
struct _1cded3750_FnDecl;
struct _1cded490a_VarDecl;
struct _1cded4cd4_RetSt;
struct _1cded5554_Iter;
struct _1cded5d7e_WhileKind;
struct _1cded6786_RangeKind;
struct _1cded6b60_BreakSt;
struct _1cded7039_ContSt;
struct _1cded74e0_If;
struct _1cded78b9_Else;
struct _1cded7d70_Conditional;
struct _1cded85ac_TypeAliasDecl;
struct _1cded8a63_Case;
struct _1cded937c_MatchCase;
struct _1cded9b96_UseDecl;
struct _1cdeda14c_EnumItemDecl;
struct _1cdedac0d_EnumDecl;
struct _1cdedb538_TypeEnumItemDecl;
struct _1cdedbb98_TypeEnumDecl;
struct _1cdedbe62_FieldDecl;
struct _1cdedc858_StructDecl;
struct _1cdedd095_TraitDecl;
struct _1cdedd705_Impl;
struct _1cdedea69_Field;
struct _1cdee1a7c_Operators;
struct _1cdee2990_Struct;
struct _1cdee4b6d_FieldIns;
struct _1cdee96bc_OperandExprModel;
struct _1cdee9bb7_BinaryExprModel;
struct _1cdeea091_UnaryExprModel;
struct _1cdeea5be_StructArgExprModel;
struct _1cdeea965_StructLitExprModel;
struct _1cdeeac62_AllocStructLitExprModel;
struct _1cdeeb2e5_CastingExprModel;
struct _1cdeebb97_FnCallExprModel;
struct _1cdeec071_SliceExprModel;
struct _1cdeec527_IndexingExprModel;
struct _1cdeec901_AnonFnExprModel;
struct _1cdeeccca_KeyValPairExprModel;
struct _1cdeed281_MapExprModel;
struct _1cdeed814_SlicingExprModel;
struct _1cdeedd97_TraitSubIdentExprModel;
struct _1cdeee738_StructSubIdentExprModel;
struct _1cdeeeace_StructStaticIdentExprModel;
struct _1cdeeeea8_ArrayExprModel;
struct _1ce0002a5_TupleExprModel;
struct _1ce00067e_BuiltinOutCallExprModel;
struct _1ce000a58_BuiltinOutlnCallExprModel;
struct _1ce000e32_BuiltinNewCallExprModel;
struct _1ce00130b_BuiltinPanicCallExprModel;
struct _1ce0017b2_BuiltinAssertCallExprModel;
struct _1ce001c68_BuiltinMakeCallExprModel;
struct _1ce002142_BuiltinAppendCallExprModel;
struct _1ce00243e_BuiltinLenCallExprModel;
struct _1ce00273b_BuiltinCapCallExprModel;
struct _1ce002b15_BuiltinDeleteCallExprModel;
struct _1ce002ede_BuiltinCopyCallExprModel;
struct _1ce0033b8_BuiltinErrorCallExprModel;
struct _1ce003a6c_SizeofExprModel;
struct _1ce003c59_AlignofExprModel;
struct _1ce004001_RuneExprModel;
struct _1ce0042ed_IntegratedToStrExprModel;
struct _1ce0046c7_BackendEmitExprModel;
struct _1ce0049c4_FreeExprModel;
struct _1ce0056c8_RetType;
struct _1ce005e59_Param;
struct _1ce00792d_Fn;
struct _1ce009886_ParamIns;
struct _1ce00a832_FnIns;
struct _1ce00da00_ReferenceStack;
struct _1ce01001d_Pass;
struct _1ce0149c3_symbolBuilder;
struct _1ce01ac0a_Trait;
struct _1ce01c899_EnumItem;
struct _1ce01d416_Enum;
struct _1ce01e549_TypeEnumItem;
struct _1ce01eb21_TypeEnum;
struct _1ce022c78_comptimeRange;
struct _1ce02374b_comptimeStructField;
struct _1ce02540c_comptimeStructFields;
struct _1ce026a07_comptimeStatic;
struct _1ce0286b8_comptimeStatics;
struct _1ce029cb3_comptimeEnumField;
struct _1ce02b15a_comptimeEnumFields;
struct _1ce02c755_comptimeParam;
struct _1ce02e8de_comptimeParams;
struct _1ce030ea6_comptimeTypeInfos;
struct _1ce0325a1_comptimeTypeInfo;
struct _1ce038ab3_comptimeValue;
struct _1ce03b412_comptimeFiles;
struct _1ce03ca0c_comptimeFile;
struct _1ce04201c_constraintChecker;
struct _1ce044371_Impl;
struct _1ce0497c7_Scope;
struct _1ce049be5_If;
struct _1ce049ee2_Else;
struct _1ce04a410_Conditional;
struct _1ce04a70c_InfIter;
struct _1ce04abb3_WhileIter;
struct _1ce04b60e_RangeIter;
struct _1ce04b994_ContSt;
struct _1ce04bd6d_BreakSt;
struct _1ce04c16a_Label;
struct _1ce04c544_GotoSt;
struct _1ce04c91d_Postfix;
struct _1ce04cdc4_Assign;
struct _1ce04d29d_MultiAssign;
struct _1ce04d90d_Match;
struct _1ce04e436_Case;
struct _1ce04eb2e_FallSt;
struct _1ce04eec5_RetSt;
struct _1ce050635_scopeLabel;
struct _1ce050bb8_scopeGoto;
struct _1ce051acb_scopeChecker;
struct _1ce064b11_directiveChecker;
struct _1ce06b0ac_ImportInfo;
struct _1ce06ded3_Package;
struct _1ce08a829_commonSemaMeta;
struct _1ce08b42e_Sema;
struct _1ce0b0e59_missingRetChecker;
struct _1ce0b4105_Var;
struct _1ce0b4e80_FuncPattern;
struct _1ce1038c5_typeCompatibilityChecker;
struct _1ce105674_assignTypeChecker;
struct _1ce107049_dynamicTypeAnnotation;
struct _1ce10bda6_fnCallArgChecker;
struct _1ce10ecdd_structLitChecker;
struct _1ce111ac0_rangeChecker;
struct _1ce114331_retTypeChecker;
struct _1ce116894_SymbolTable;
struct _1ce11bc0c_Data;
struct _1ce11cd84_Value;
struct _1ce11d934_Eval;
struct _1ce13c15b_unaryEval;
struct _1ce13e0e7_binaryEval;
struct _1ce14b2e1_InsGeneric;
struct _1ce14bdd5_TypeAlias;
struct _1ce14cbc7_TypeKind;
struct _1ce154d99_TypeSymbol;
struct _1ce1557a1_Prim;
struct _1ce1592cc_Sptr;
struct _1ce159ca0_Slc;
struct _1ce15a894_Tuple;
struct _1ce15b444_Map;
struct _1ce15c0c1_Arr;
struct _1ce15ca94_Ptr;
struct _1ce15da95_referencer;
struct _1ce15ea85_typeChecker;
struct _1ce16773b_identTypeLookup;
struct _1b57310c6_FileInfo;
struct _1b5776d31_stmt;
struct _1b57776c2_scopeParser;
struct _1b57850e7_exprBuilder;
struct _1b5792588_assignInfo;
struct _1b5795987_parser;
struct _1b57a7b64_typeBuilder;
struct _1ce361eb8_CompileInfo;
struct _1ce363492_directiveEval;
struct _1b57abc9a_JuleImporter;
struct _1b57b1eae_OrderedDefines;
struct _1b57b2245_defineOrderer;
struct _1b59255d9_liveTable;
struct _1b592a2e2_scopeDeadCode;
struct _1b592e57c_exprDeadCode;
struct _1ce245dad_ExceptionalForwardingExprModel;
struct _1ce246232_SwapExprModel;
struct _1ce24660b_EmptyCompareExprModel;
struct _1ce246980_RefExprModel;
struct _1ce246e03_StrCompExprModel;
struct _1ce247486_MutSlicingExprModel;
struct _1ce247783_UnsafeBinaryExprModel;
struct _1ce247b18_UnsafeIndexingExprModel;
struct _1ce247ee2_PushToSliceExprModel;
struct _1ce2483bb_AppendToSliceExprModel;
struct _1ce248795_StrRuneIter;
struct _1ce248a92_UnsafeDerefExprModel;
struct _1ce248d8e_UnsafeCastingExprModel;
struct _1ce249a71_nilVar;
struct _1ce249db2_nils;
struct _1ce24cb40_scopeOptimizer;
struct _1ce25498d_exprOptimizer;
struct _1ce25e35a_dynamicVar;
struct _1ce25e69b_dynamic;
struct _1ce2625e4_data;
struct _1ce263b9a_boundaryVar;
struct _1ce263edb_boundary;
struct _1b593661c_Optimizer;
struct _1b595e3d1_AnsiEscape;
struct _1b5960954_Logger;
struct _1b6283c6b_AbsTime;
struct _1b6284442_Time;
struct _1b61ae56a_scopeCoder;
struct _1b61bdc0b_exprCoder;
struct _1b61ced60_TestCoder;
struct _1b61d2b76_identCoder;
struct _1b628bd0c_SerializationInfo;
struct _1b628c3d4_traitHash;
struct _1b628c7ad_traitCast;
struct _1b629ce72_customType;
struct _1b629da88_typeCoder;
struct _1b5e501b8_resultCoder;
struct _1b99c2c15_Flag;
struct _1b99c6851_Flag;
struct _1b99ca008_Flag;
struct _1b99cd704_Flag;
struct _1b99d1dab_Flag;
struct _1b5eba81b_FlagSet;
struct _1b5ebd2d0_argParser;
struct _1b628d825_ObjectCoder;
struct _1ce2620e9_dataCheckpoint;
struct _1b5925a07_ObjectDeadCode;
struct _1b57ae72b_IR;
struct _1cdee571d_StructIns;
struct _22acaed1a_Cmd;
struct _22a83d15c_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	inline bool operator==(_22a83d15c_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_22a83d15c_Range16 _other) { return !this->operator==(_other); }


};
struct _22a83d68a_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	inline bool operator==(_22a83d68a_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_22a83d68a_Range32 _other) { return !this->operator==(_other); }


};
struct _22a83db0d_RangeTable {
	jule::Slice<_22a83d15c_Range16> _field_R16;
	jule::Slice<_22a83d68a_Range32> _field_R32;
	jule::I32 _field_LatinOffset = 0;
	


};
struct _22aaa2712_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	inline bool operator==(_22aaa2712_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_22aaa2712_acceptRange _other) { return !this->operator==(_other); }


};
struct _22ab0b88c_StrBuilder {
	jule::Slice<jule::U8> _field_buf;
	


};
struct _22ab17238_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I32 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I32 _field_volLen = 0;
	


};
struct _2439c6321_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_2439ca2d1_Status> _field_Stat;
	

	inline bool operator==(_2439c6321_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_2439c6321_DirEntry _other) { return !this->operator==(_other); }


};
struct _2439c65a7_Directory {
	

	inline bool operator==(_2439c65a7_Directory _other) { return true; }

	inline bool operator!=(_2439c65a7_Directory _other) { return !this->operator==(_other); }


};
struct _2439c81e1_File {
	jule::Uintptr _field_handle = 0;
	

	inline bool operator==(_2439c81e1_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_2439c81e1_File _other) { return !this->operator==(_other); }


};
struct _2439ca2d1_Status {
	jule::I32 _field_mode = 0LL;
	jule::U32 _field_size = 0;
	

	inline bool operator==(_2439ca2d1_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_2439ca2d1_Status _other) { return !this->operator==(_other); }


};
struct _22abd6dc9_cmdAttrs {
	jule::I32 _field_pid = -1LL;
	

	inline bool operator==(_22abd6dc9_cmdAttrs _other) {
		return 
			this->_field_pid == _other._field_pid;
	}

	inline bool operator!=(_22abd6dc9_cmdAttrs _other) { return !this->operator==(_other); }


};
struct _22a93672d_Log {
	jule::I32 _field_Kind = 0LL;
	jule::I32 _field_Row = 0;
	jule::I32 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	inline bool operator==(_22a93672d_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_22a93672d_Log _other) { return !this->operator==(_other); }


};
struct _22bde008c_floatInfo {
	jule::U32 _field_mantbits = 0;
	jule::U32 _field_expbits = 0;
	jule::I32 _field_bias = 0;
	

	inline bool operator==(_22bde008c_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_22bde008c_floatInfo _other) { return !this->operator==(_other); }


};
struct _22bde0c19_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I32 _field_nd = 0;
	jule::I32 _field_dp = 0;
	jule::Bool _field_neg = false;
	


};
struct _22be02e5c_leftCheat {
	jule::I32 _field_delta = 0;
	jule::Str _field_cutoff;
	

	inline bool operator==(_22be02e5c_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_22be02e5c_leftCheat _other) { return !this->operator==(_other); }


};
struct _22be03974_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I32 _field_nd = 0;
	jule::I32 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	inline bool operator==(_22be03974_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_22be03974_decimal _other) { return !this->operator==(_other); }


};
inline jule::Bool _22be1bc23_Eq(_22be1616d_Const*, _22be1616d_Const);
inline jule::Bool _22be1c064_Lt(_22be1616d_Const*, _22be1616d_Const);
inline jule::Bool _22be1c3a5_LtEq(_22be1616d_Const*, _22be1616d_Const);
inline jule::Bool _22be1c6e6_Gt(_22be1616d_Const*, _22be1616d_Const);
inline jule::Bool _22be1ca37_GtEq(_22be1616d_Const*, _22be1616d_Const);
struct _22be1616d_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	inline jule::Bool operator==(_22be1616d_Const _other) { return _22be1bc23_Eq(this, _other); }

	inline bool operator!=(_22be1616d_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_22be1616d_Const _other) { return _22be1c6e6_Gt(this, _other); }

	inline jule::Bool operator>=(_22be1616d_Const _other) { return _22be1ca37_GtEq(this, _other); }

	inline jule::Bool operator<(_22be1616d_Const _other) { return _22be1c064_Lt(this, _other); }

	inline jule::Bool operator<=(_22be1616d_Const _other) { return _22be1c3a5_LtEq(this, _other); }


};
struct _1cdeab4b4_Token {
	jule::Ptr<_1cdeb1c4a_File> _field_File;
	jule::I32 _field_Row = 0;
	jule::I32 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U32 _field_Id = 0LLU;
	

	inline bool operator==(_1cdeab4b4_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_1cdeab4b4_Token _other) { return !this->operator==(_other); }


};
struct _1cdeb1c4a_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _field_Tokens;
	


};
struct _1cdeb3da1_kindPair {
	jule::Str _field_kind = jule::Str::lit("::", 2);
	jule::U32 _field_id = 0LLU;
	

	inline bool operator==(_1cdeb3da1_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1cdeb3da1_kindPair _other) { return !this->operator==(_other); }


};
struct _1cdeb9d85_lex {
	jule::I32 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _field_tokens;
	jule::Ptr<_1cdeb1c4a_File> _field_file;
	jule::I32 _field_pos = 0;
	jule::I32 _field_column = 0;
	jule::I32 _field_row = 0;
	jule::Slice<_22a93672d_Log> _field_errors;
	


};
struct _1cdebead2_Ast {
	jule::Ptr<_1cdeb1c4a_File> _field_File;
	jule::Slice<jule::Ptr<_1cdec0eac_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1cded9b96_UseDecl>> _field_UseDecls;
	jule::Slice<_1cdec0a8e_Node> _field_Nodes;
	


};
struct _1cdec0a8e_Node {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1cdec0a8e_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1cdec0a8e_Node _other) { return !this->operator==(_other); }


};
struct _1cdec0eac_Directive {
	jule::Ptr<_1cdeab4b4_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _field_Args;
	


};
struct _1cdec1a90_TypeDecl {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1cdec1a90_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1cdec1a90_TypeDecl _other) { return !this->operator==(_other); }


};
struct _1cdec219a_IdentTypeDecl {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1cdec1a90_TypeDecl>> _field_Generics;
	


};
struct _1cdec2464_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1cdec219a_IdentTypeDecl>> _field_Idents;
	


};
struct _1cdec283d_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _field_Idents;
	jule::Ptr<_1cdec1a90_TypeDecl> _field_Kind;
	


};
struct _1cdec2b3a_SptrTypeDecl {
	jule::Ptr<_1cdec1a90_TypeDecl> _field_Elem;
	

	inline bool operator==(_1cdec2b3a_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1cdec2b3a_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1cdec2ec0_SlcTypeDecl {
	jule::Ptr<_1cdec1a90_TypeDecl> _field_Elem;
	

	inline bool operator==(_1cdec2ec0_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1cdec2ec0_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1cdec32bc_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1cdec1a90_TypeDecl>> _field_Types;
	


};
struct _1cdec35b9_PtrTypeDecl {
	jule::Ptr<_1cdec1a90_TypeDecl> _field_Elem;
	

	inline bool operator==(_1cdec35b9_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1cdec35b9_PtrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1cdec3d5b_ArrTypeDecl {
	jule::Ptr<_1cdec1a90_TypeDecl> _field_Elem;
	jule::Ptr<_1cdec5dc4_Expr> _field_Size;
	

	inline bool operator==(_1cdec3d5b_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1cdec3d5b_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1cdec45a9_MapTypeDecl {
	jule::Ptr<_1cdec1a90_TypeDecl> _field_Key;
	jule::Ptr<_1cdec1a90_TypeDecl> _field_Val;
	

	inline bool operator==(_1cdec45a9_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1cdec45a9_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1cdec4983_RetTypeDecl {
	jule::Ptr<_1cdec1a90_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _field_Idents;
	


};
struct _1cdec5dc4_Expr {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Ptr<_1cdeab4b4_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1cdec5dc4_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1cdec5dc4_Expr _other) { return !this->operator==(_other); }


};
struct _1cdec618d_RangeExpr {
	jule::Ptr<_1cdec5dc4_Expr> _field_Expr;
	

	inline bool operator==(_1cdec618d_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1cdec618d_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1cdec6798_UseExpr {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Ptr<_1cdec5dc4_Expr> _field_Expr;
	

	inline bool operator==(_1cdec6798_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1cdec6798_UseExpr _other) { return !this->operator==(_other); }


};
struct _1cdec69b8_TupleExpr {
	jule::Slice<jule::Ptr<_1cdec5dc4_Expr>> _field_Expr;
	


};
struct _1cdec6d5e_LitExpr {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Str _field_Value;
	

	inline bool operator==(_1cdec6d5e_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1cdec6d5e_LitExpr _other) { return !this->operator==(_other); }


};
struct _1cdec7238_UnsafeExpr {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Ptr<_1cdec5dc4_Expr> _field_Expr;
	

	inline bool operator==(_1cdec7238_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1cdec7238_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _1cdec76de_IdentExpr {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	

	inline bool operator==(_1cdec76de_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Binded == _other._field_Binded;
	}

	inline bool operator!=(_1cdec76de_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1cdec7e81_UnaryExpr {
	jule::Ptr<_1cdeab4b4_Token> _field_Op;
	jule::Ptr<_1cdec5dc4_Expr> _field_Expr;
	

	inline bool operator==(_1cdec7e81_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1cdec7e81_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1cdec835a_VariadicExpr {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Ptr<_1cdec5dc4_Expr> _field_Expr;
	

	inline bool operator==(_1cdec835a_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1cdec835a_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1cdec8734_CastExpr {
	jule::Ptr<_1cdec1a90_TypeDecl> _field_Kind;
	jule::Ptr<_1cdec5dc4_Expr> _field_Expr;
	

	inline bool operator==(_1cdec8734_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1cdec8734_CastExpr _other) { return !this->operator==(_other); }


};
struct _1cdec8b0d_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _field_Ns;
	jule::Ptr<_1cdeab4b4_Token> _field_Ident;
	


};
struct _1cdec8ed7_SubIdentExpr {
	jule::Ptr<_1cdec5dc4_Expr> _field_Expr;
	jule::Ptr<_1cdeab4b4_Token> _field_Ident;
	

	inline bool operator==(_1cdec8ed7_SubIdentExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1cdec8ed7_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1cdec948d_BinaryExpr {
	jule::Ptr<_1cdec5dc4_Expr> _field_Left;
	jule::Ptr<_1cdec5dc4_Expr> _field_Right;
	jule::Ptr<_1cdeab4b4_Token> _field_Op;
	

	inline bool operator==(_1cdec948d_BinaryExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1cdec948d_BinaryExpr _other) { return !this->operator==(_other); }


};
struct _1cdec9aed_FnCallExpr {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Ptr<_1cdec5dc4_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1cdec5dc4_Expr>> _field_Args;
	jule::Ptr<_1cded1ab1_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	


};
struct _1cdeca5e3_FieldExprPair {
	jule::Ptr<_1cdeab4b4_Token> _field_Field;
	jule::Ptr<_1cdec5dc4_Expr> _field_Expr;
	

	inline bool operator==(_1cdeca5e3_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1cdeca5e3_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1cdecae1d_StructLit {
	jule::Ptr<_1cdeab4b4_Token> _field_End;
	jule::Ptr<_1cdec1a90_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1cdec5dc4_Expr>> _field_Exprs;
	


};
struct _1cdecb3c4_BraceLit {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Ptr<_1cdeab4b4_Token> _field_End;
	jule::Slice<jule::Ptr<_1cdec5dc4_Expr>> _field_Exprs;
	


};
struct _1cdecbbee_KeyValPair {
	jule::Ptr<_1cdec5dc4_Expr> _field_Key;
	jule::Ptr<_1cdec5dc4_Expr> _field_Val;
	jule::Ptr<_1cdeab4b4_Token> _field_Colon;
	

	inline bool operator==(_1cdecbbee_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_1cdecbbee_KeyValPair _other) { return !this->operator==(_other); }


};
struct _1cdecc42a_SliceExpr {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Ptr<_1cdeab4b4_Token> _field_End;
	jule::Slice<jule::Ptr<_1cdec5dc4_Expr>> _field_Exprs;
	


};
struct _1cdeccd87_IndexingExpr {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Ptr<_1cdeab4b4_Token> _field_End;
	jule::Ptr<_1cdec5dc4_Expr> _field_Expr;
	jule::Ptr<_1cdec5dc4_Expr> _field_Index;
	

	inline bool operator==(_1cdeccd87_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1cdeccd87_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1cdecd4e7_SlicingExpr {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Ptr<_1cdeab4b4_Token> _field_End;
	jule::Ptr<_1cdec5dc4_Expr> _field_Expr;
	jule::Ptr<_1cdec5dc4_Expr> _field_Start;
	jule::Ptr<_1cdec5dc4_Expr> _field_To;
	

	inline bool operator==(_1cdecd4e7_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_1cdecd4e7_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1cdecd7e4_Constraint {
	jule::Slice<jule::Ptr<_1cdec1a90_TypeDecl>> _field_Mask;
	


};
struct _1cdecdc9a_GenericDecl {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1cdecd7e4_Constraint> _field_Constraint;
	

	inline bool operator==(_1cdecdc9a_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1cdecdc9a_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1cdece174_LabelSt {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Str _field_Ident;
	

	inline bool operator==(_1cdece174_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1cdece174_LabelSt _other) { return !this->operator==(_other); }


};
struct _1cdece54d_GotoSt {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Ptr<_1cdeab4b4_Token> _field_Label;
	

	inline bool operator==(_1cdece54d_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1cdece54d_GotoSt _other) { return !this->operator==(_other); }


};
struct _1cdece84a_FallSt {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	

	inline bool operator==(_1cdece84a_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_1cdece84a_FallSt _other) { return !this->operator==(_other); }


};
struct _1cdeceeaa_AssignLeft {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_1cdec5dc4_Expr> _field_Expr;
	

	inline bool operator==(_1cdeceeaa_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1cdeceeaa_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1cded053d_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_1cdeab4b4_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1cdeceeaa_AssignLeft>> _field_Left;
	jule::Ptr<_1cdec5dc4_Expr> _field_Right;
	


};
struct _1cded1451_Stmt {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1cded1451_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1cded1451_Stmt _other) { return !this->operator==(_other); }


};
struct _1cded1ab1_ScopeTree {
	jule::Ptr<_1cded1ab1_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_1cded1451_Stmt> _field_Stmts;
	jule::Ptr<_1cdeab4b4_Token> _field_End;
	


};
struct _1cded22ed_ParamDecl {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1cdec1a90_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1cded22ed_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1cded22ed_ParamDecl _other) { return !this->operator==(_other); }


};
struct _1cded3750_FnDecl {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1cdec0eac_Directive>> _field_Directives;
	jule::Ptr<_1cded1ab1_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1cdecdc9a_GenericDecl>> _field_Generics;
	jule::Ptr<_1cdec4983_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1cded22ed_ParamDecl>> _field_Params;
	


};
struct _1cded490a_VarDecl {
	jule::Ptr<_1cded1ab1_ScopeTree> _field_Scope;
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Ptr<_1cdeab4b4_Token> _field_Setter;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_1cdec0eac_Directive>> _field_Directives;
	jule::Ptr<_1cdec1a90_TypeDecl> _field_Kind;
	jule::Ptr<_1cdec5dc4_Expr> _field_Expr;
	


};
struct _1cded4cd4_RetSt {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Ptr<_1cdec5dc4_Expr> _field_Expr;
	

	inline bool operator==(_1cded4cd4_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1cded4cd4_RetSt _other) { return !this->operator==(_other); }


};
struct _1cded5554_Iter {
	jule::Bool _field_Comptime = false;
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_1cded1ab1_ScopeTree> _field_Scope;
	

	inline bool operator==(_1cded5554_Iter _other) {
		return 
			this->_field_Comptime == _other._field_Comptime &&
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1cded5554_Iter _other) { return !this->operator==(_other); }


};
struct _1cded5d7e_WhileKind {
	jule::Ptr<_1cdec5dc4_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1cdeab4b4_Token> _field_NextToken;
	

	inline bool operator==(_1cded5d7e_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_1cded5d7e_WhileKind _other) { return !this->operator==(_other); }


};
struct _1cded6786_RangeKind {
	jule::Ptr<_1cdeab4b4_Token> _field_InToken;
	jule::Ptr<_1cdec5dc4_Expr> _field_Expr;
	jule::Ptr<_1cded490a_VarDecl> _field_KeyA;
	jule::Ptr<_1cded490a_VarDecl> _field_KeyB;
	

	inline bool operator==(_1cded6786_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1cded6786_RangeKind _other) { return !this->operator==(_other); }


};
struct _1cded6b60_BreakSt {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Ptr<_1cdeab4b4_Token> _field_Label;
	

	inline bool operator==(_1cded6b60_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1cded6b60_BreakSt _other) { return !this->operator==(_other); }


};
struct _1cded7039_ContSt {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Ptr<_1cdeab4b4_Token> _field_Label;
	

	inline bool operator==(_1cded7039_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1cded7039_ContSt _other) { return !this->operator==(_other); }


};
struct _1cded74e0_If {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Ptr<_1cdec5dc4_Expr> _field_Expr;
	jule::Ptr<_1cded1ab1_ScopeTree> _field_Scope;
	

	inline bool operator==(_1cded74e0_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1cded74e0_If _other) { return !this->operator==(_other); }


};
struct _1cded78b9_Else {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Ptr<_1cded1ab1_ScopeTree> _field_Scope;
	

	inline bool operator==(_1cded78b9_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1cded78b9_Else _other) { return !this->operator==(_other); }


};
struct _1cded7d70_Conditional {
	jule::Ptr<_1cded74e0_If> _field_Head;
	jule::Slice<jule::Ptr<_1cded74e0_If>> _field_Tail;
	jule::Ptr<_1cded78b9_Else> _field_Default;
	


};
struct _1cded85ac_TypeAliasDecl {
	jule::Ptr<_1cded1ab1_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1cdec1a90_TypeDecl> _field_Kind;
	

	inline bool operator==(_1cded85ac_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_Binded == _other._field_Binded &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1cded85ac_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1cded8a63_Case {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Ptr<_1cded1ab1_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1cdec5dc4_Expr>> _field_Exprs;
	


};
struct _1cded937c_MatchCase {
	jule::Bool _field_Comptime = false;
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Ptr<_1cdeab4b4_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_1cdec5dc4_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1cded8a63_Case>> _field_Cases;
	jule::Ptr<_1cded78b9_Else> _field_Default;
	


};
struct _1cded9b96_UseDecl {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _field_Selected;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	


};
struct _1cdeda14c_EnumItemDecl {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1cdec5dc4_Expr> _field_Expr;
	

	inline bool operator==(_1cdeda14c_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1cdeda14c_EnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1cdedac0d_EnumDecl {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1cdec1a90_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1cdeda14c_EnumItemDecl>> _field_Items;
	jule::Ptr<_1cdeab4b4_Token> _field_End;
	


};
struct _1cdedb538_TypeEnumItemDecl {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1cdec1a90_TypeDecl> _field_Kind;
	

	inline bool operator==(_1cdedb538_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1cdedb538_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1cdedbb98_TypeEnumDecl {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1cdedb538_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1cdeab4b4_Token> _field_End;
	


};
struct _1cdedbe62_FieldDecl {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1cdec1a90_TypeDecl> _field_Kind;
	jule::Ptr<_1cdec5dc4_Expr> _field_Default;
	

	inline bool operator==(_1cdedbe62_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1cdedbe62_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1cdedc858_StructDecl {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Ptr<_1cdeab4b4_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1cdedbe62_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1cdec0eac_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1cdecdc9a_GenericDecl>> _field_Generics;
	


};
struct _1cdedd095_TraitDecl {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Ptr<_1cdeab4b4_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1cdec1a90_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1cded3750_FnDecl>> _field_Methods;
	


};
struct _1cdedd705_Impl {
	jule::Ptr<_1cdeab4b4_Token> _field_End;
	jule::Ptr<_1cdec1a90_TypeDecl> _field_Base;
	jule::Ptr<_1cdec1a90_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1cded3750_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1cded490a_VarDecl>> _field_Statics;
	


};
struct _1cdedea69_Field {
	jule::Ptr<_1cdee2990_Struct> _field_Owner;
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1ce154d99_TypeSymbol> _field_Kind;
	jule::Ptr<_1cdec5dc4_Expr> _field_Default;
	

	inline bool operator==(_1cdedea69_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1cdedea69_Field _other) { return !this->operator==(_other); }


};
struct _1cdee1a7c_Operators {
	jule::Ptr<_1ce00a832_FnIns> _field_Eq;
	jule::Ptr<_1ce00a832_FnIns> _field_Gt;
	jule::Ptr<_1ce00a832_FnIns> _field_GtEq;
	jule::Ptr<_1ce00a832_FnIns> _field_Lt;
	jule::Ptr<_1ce00a832_FnIns> _field_LtEq;
	jule::Ptr<_1ce00a832_FnIns> _field_Shl;
	jule::Ptr<_1ce00a832_FnIns> _field_Shr;
	jule::Ptr<_1ce00a832_FnIns> _field_Add;
	jule::Ptr<_1ce00a832_FnIns> _field_Sub;
	jule::Ptr<_1ce00a832_FnIns> _field_Div;
	jule::Ptr<_1ce00a832_FnIns> _field_Mul;
	jule::Ptr<_1ce00a832_FnIns> _field_Mod;
	jule::Ptr<_1ce00a832_FnIns> _field_BitAnd;
	jule::Ptr<_1ce00a832_FnIns> _field_BitOr;
	jule::Ptr<_1ce00a832_FnIns> _field_BitXor;
	jule::Ptr<_1ce00a832_FnIns> _field_Neg;
	jule::Ptr<_1ce00a832_FnIns> _field_Pos;
	jule::Ptr<_1ce00a832_FnIns> _field_BitNot;
	jule::Ptr<_1ce00a832_FnIns> _field_AddAssign;
	jule::Ptr<_1ce00a832_FnIns> _field_SubAssign;
	jule::Ptr<_1ce00a832_FnIns> _field_DivAssign;
	jule::Ptr<_1ce00a832_FnIns> _field_MulAssign;
	jule::Ptr<_1ce00a832_FnIns> _field_ModAssign;
	jule::Ptr<_1ce00a832_FnIns> _field_ShlAssign;
	jule::Ptr<_1ce00a832_FnIns> _field_ShrAssign;
	jule::Ptr<_1ce00a832_FnIns> _field_BitOrAssign;
	jule::Ptr<_1ce00a832_FnIns> _field_BitAndAssign;
	jule::Ptr<_1ce00a832_FnIns> _field_BitXorAssign;
	

	inline bool operator==(_1cdee1a7c_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_1cdee1a7c_Operators _other) { return !this->operator==(_other); }


};
struct _1cdee2990_Struct {
	jule::Ptr<_1ce08b42e_Sema> _field_sema;
	jule::Slice<jule::Ptr<_1cdee2990_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1cdee2990_Struct>> _field_Uses;
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1cdedea69_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1ce00792d_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1ce0b4105_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1cdec0eac_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1cdecdc9a_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1ce01ac0a_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1cdee571d_StructIns>> _field_Instances;
	


};
struct _1cdee4b6d_FieldIns {
	jule::Ptr<_1cdedea69_Field> _field_Decl;
	jule::Ptr<_1ce14cbc7_TypeKind> _field_Kind;
	jule::Ptr<_1ce11bc0c_Data> _field_Default;
	

	inline bool operator==(_1cdee4b6d_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1cdee4b6d_FieldIns _other) { return !this->operator==(_other); }


};
struct _1cdee96bc_OperandExprModel {
	jule::Ptr<_1ce14cbc7_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	inline bool operator==(_1cdee96bc_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_1cdee96bc_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1cdee9bb7_BinaryExprModel {
	jule::Ptr<_1cdee96bc_OperandExprModel> _field_Left;
	jule::Ptr<_1cdee96bc_OperandExprModel> _field_Right;
	jule::Ptr<_1cdeab4b4_Token> _field_Op;
	

	inline bool operator==(_1cdee9bb7_BinaryExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1cdee9bb7_BinaryExprModel _other) { return !this->operator==(_other); }


};
struct _1cdeea091_UnaryExprModel {
	jule::Ptr<_1ce11bc0c_Data> _field_Expr;
	jule::Ptr<_1cdeab4b4_Token> _field_Op;
	

	inline bool operator==(_1cdeea091_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1cdeea091_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1cdeea5be_StructArgExprModel {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Ptr<_1cdee4b6d_FieldIns> _field_Field;
	jule::Ptr<_1ce11bc0c_Data> _field_Expr;
	

	inline bool operator==(_1cdeea5be_StructArgExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1cdeea5be_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1cdeea965_StructLitExprModel {
	jule::Ptr<_1cdee571d_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1cdeea5be_StructArgExprModel>> _field_Args;
	


};
struct _1cdeeac62_AllocStructLitExprModel {
	jule::Ptr<_1cdeea965_StructLitExprModel> _field_Lit;
	

	inline bool operator==(_1cdeeac62_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_1cdeeac62_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1cdeeb2e5_CastingExprModel {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Ptr<_1ce11bc0c_Data> _field_Expr;
	jule::Ptr<_1ce14cbc7_TypeKind> _field_Kind;
	jule::Ptr<_1ce14cbc7_TypeKind> _field_ExprKind;
	

	inline bool operator==(_1cdeeb2e5_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_1cdeeb2e5_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1cdeebb97_FnCallExprModel {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Ptr<_1ce00a832_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1ce0497c7_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	


};
struct _1cdeec071_SliceExprModel {
	jule::Ptr<_1ce14cbc7_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1cdeec527_IndexingExprModel {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Ptr<_1ce11bc0c_Data> _field_Expr;
	jule::Ptr<_1ce11bc0c_Data> _field_Index;
	

	inline bool operator==(_1cdeec527_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1cdeec527_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1cdeec901_AnonFnExprModel {
	jule::Ptr<_1ce00a832_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	

	inline bool operator==(_1cdeec901_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_1cdeec901_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1cdeeccca_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	inline bool operator==(_1cdeeccca_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1cdeeccca_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1cdeed281_MapExprModel {
	jule::Ptr<_1ce14cbc7_TypeKind> _field_KeyKind;
	jule::Ptr<_1ce14cbc7_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_1cdeeccca_KeyValPairExprModel>> _field_Entries;
	


};
struct _1cdeed814_SlicingExprModel {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1cdeed814_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1cdeed814_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1cdeedd97_TraitSubIdentExprModel {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1ce00792d_Fn> _field_Method;
	jule::Ptr<_1ce01ac0a_Trait> _field_Trt;
	

	inline bool operator==(_1cdeedd97_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_1cdeedd97_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1cdeee738_StructSubIdentExprModel {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Ptr<_1ce11bc0c_Data> _field_Expr;
	jule::Ptr<_1ce00a832_FnIns> _field_Method;
	jule::Ptr<_1cdee4b6d_FieldIns> _field_Field;
	jule::Ptr<_1cdee571d_StructIns> _field_Owner;
	

	inline bool operator==(_1cdeee738_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_1cdeee738_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1cdeeeace_StructStaticIdentExprModel {
	jule::Ptr<_1cdee571d_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1ce00a832_FnIns> _field_Method;
	

	inline bool operator==(_1cdeeeace_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_1cdeeeace_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1cdeeeea8_ArrayExprModel {
	jule::Ptr<_1ce15c0c1_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1ce0002a5_TupleExprModel {
	jule::Slice<jule::Ptr<_1ce11bc0c_Data>> _field_Datas;
	


};
struct _1ce00067e_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1ce00067e_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1ce00067e_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ce000a58_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1ce000a58_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1ce000a58_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ce000e32_BuiltinNewCallExprModel {
	jule::Ptr<_1ce14cbc7_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	inline bool operator==(_1ce000e32_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_1ce000e32_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ce00130b_BuiltinPanicCallExprModel {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1ce00130b_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ce00130b_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ce0017b2_BuiltinAssertCallExprModel {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	inline bool operator==(_1ce0017b2_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_1ce0017b2_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ce001c68_BuiltinMakeCallExprModel {
	jule::Ptr<_1ce14cbc7_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	inline bool operator==(_1ce001c68_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_1ce001c68_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ce002142_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	inline bool operator==(_1ce002142_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_1ce002142_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ce00243e_BuiltinLenCallExprModel {
	jule::Ptr<_1ce11bc0c_Data> _field_Expr;
	

	inline bool operator==(_1ce00243e_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ce00243e_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ce00273b_BuiltinCapCallExprModel {
	jule::Ptr<_1ce11bc0c_Data> _field_Expr;
	

	inline bool operator==(_1ce00273b_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ce00273b_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ce002b15_BuiltinDeleteCallExprModel {
	jule::Ptr<_1ce11bc0c_Data> _field_Dest;
	jule::Ptr<_1ce11bc0c_Data> _field_Key;
	

	inline bool operator==(_1ce002b15_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_1ce002b15_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ce002ede_BuiltinCopyCallExprModel {
	jule::Ptr<_1ce11bc0c_Data> _field_Dest;
	jule::Ptr<_1ce11bc0c_Data> _field_Src;
	

	inline bool operator==(_1ce002ede_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_1ce002ede_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ce0033b8_BuiltinErrorCallExprModel {
	jule::Ptr<_1ce00a832_FnIns> _field_Func;
	jule::Ptr<_1ce11bc0c_Data> _field_Err;
	

	inline bool operator==(_1ce0033b8_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_1ce0033b8_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ce003a6c_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1ce003a6c_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ce003a6c_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1ce003c59_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1ce003c59_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ce003c59_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1ce004001_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	inline bool operator==(_1ce004001_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_1ce004001_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1ce0042ed_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1ce0042ed_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ce0042ed_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1ce0046c7_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	


};
struct _1ce0049c4_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1ce0049c4_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ce0049c4_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1ce0056c8_RetType {
	jule::Ptr<_1ce154d99_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _field_Idents;
	


};
struct _1ce005e59_Param {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1ce154d99_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1ce005e59_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1ce005e59_Param _other) { return !this->operator==(_other); }


};
struct _1ce00792d_Fn {
	jule::Ptr<_1ce08b42e_Sema> _field_sema;
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1cdec0eac_Directive>> _field_Directives;
	jule::Ptr<_1cded1ab1_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1cdecdc9a_GenericDecl>> _field_Generics;
	jule::Ptr<_1ce0056c8_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1ce005e59_Param>> _field_Params;
	jule::Ptr<_1cdee2990_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1ce00a832_FnIns>> _field_Instances;
	


};
struct _1ce009886_ParamIns {
	jule::Ptr<_1ce005e59_Param> _field_Decl;
	jule::Ptr<_1ce14cbc7_TypeKind> _field_Kind;
	

	inline bool operator==(_1ce009886_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ce009886_ParamIns _other) { return !this->operator==(_other); }


};
struct _1ce00a832_FnIns {
	jule::Ptr<_1cdee571d_StructIns> _field_Owner;
	jule::Ptr<_1ce00792d_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1ce14b2e1_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1ce009886_ParamIns>> _field_Params;
	jule::Ptr<_1ce14cbc7_TypeKind> _field_Result;
	jule::Ptr<_1ce0497c7_Scope> _field_Scope;
	jule::Ptr<_1ce00da00_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)> _field_caller;
	jule::Bool _field_reloaded = false;
	


};
struct _1ce00da00_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	


};
struct _1ce01001d_Pass {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Str _field_Text;
	

	inline bool operator==(_1ce01001d_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_1ce01001d_Pass _other) { return !this->operator==(_other); }


};
struct _1ce0149c3_symbolBuilder {
	jule::Ptr<_1ce0149c3_symbolBuilder> _field_owner;
	jule::Trait<_1ce068197_Importer> _field_importer;
	jule::Slice<_22a93672d_Log> _field_errors;
	jule::Ptr<_1cdebead2_Ast> _field_ast;
	jule::Ptr<_1ce116894_SymbolTable> _field_table;
	


};
struct _1ce01ac0a_Trait {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1ce154d99_TypeSymbol>> _field_Inherits;
	jule::Slice<jule::Ptr<_1ce00792d_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1cdee2990_Struct>> _field_Implemented;
	


};
struct _1ce01c899_EnumItem {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ce11cd84_Value> _field_Value;
	

	inline bool operator==(_1ce01c899_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1ce01c899_EnumItem _other) { return !this->operator==(_other); }


};
struct _1ce01d416_Enum {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1ce154d99_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1ce01c899_EnumItem>> _field_Items;
	


};
struct _1ce01e549_TypeEnumItem {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ce154d99_TypeSymbol> _field_Kind;
	

	inline bool operator==(_1ce01e549_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ce01e549_TypeEnumItem _other) { return !this->operator==(_other); }


};
struct _1ce01eb21_TypeEnum {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ce01e549_TypeEnumItem>> _field_Items;
	


};
struct _1ce022c78_comptimeRange {
	jule::Trait<_1ce022a58_comptimeRangeKind> _field_kind;
	

	inline bool operator==(_1ce022c78_comptimeRange _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1ce022c78_comptimeRange _other) { return !this->operator==(_other); }


};
struct _1ce02374b_comptimeStructField {
	jule::Ptr<_1cdee4b6d_FieldIns> _field_field;
	

	inline bool operator==(_1ce02374b_comptimeStructField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1ce02374b_comptimeStructField _other) { return !this->operator==(_other); }


};
struct _1ce02540c_comptimeStructFields {
	jule::Slice<jule::Ptr<_1cdee4b6d_FieldIns>> _field_fields;
	


};
struct _1ce026a07_comptimeStatic {
	jule::Ptr<_1ce0b4105_Var> _field_field;
	

	inline bool operator==(_1ce026a07_comptimeStatic _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1ce026a07_comptimeStatic _other) { return !this->operator==(_other); }


};
struct _1ce0286b8_comptimeStatics {
	jule::Slice<jule::Ptr<_1ce0b4105_Var>> _field_fields;
	


};
struct _1ce029cb3_comptimeEnumField {
	jule::Ptr<_1ce01c899_EnumItem> _field_field;
	

	inline bool operator==(_1ce029cb3_comptimeEnumField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1ce029cb3_comptimeEnumField _other) { return !this->operator==(_other); }


};
struct _1ce02b15a_comptimeEnumFields {
	jule::Slice<jule::Ptr<_1ce01c899_EnumItem>> _field_fields;
	


};
struct _1ce02c755_comptimeParam {
	jule::Ptr<_1ce009886_ParamIns> _field_param;
	

	inline bool operator==(_1ce02c755_comptimeParam _other) {
		return 
			this->_field_param == _other._field_param;
	}

	inline bool operator!=(_1ce02c755_comptimeParam _other) { return !this->operator==(_other); }


};
struct _1ce02e8de_comptimeParams {
	jule::Slice<jule::Ptr<_1ce009886_ParamIns>> _field_params;
	


};
struct _1ce030ea6_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_1ce0325a1_comptimeTypeInfo>> _field_types;
	


};
struct _1ce0325a1_comptimeTypeInfo {
	jule::Ptr<_1ce14cbc7_TypeKind> _field_base;
	

	inline bool operator==(_1ce0325a1_comptimeTypeInfo _other) {
		return 
			this->_field_base == _other._field_base;
	}

	inline bool operator!=(_1ce0325a1_comptimeTypeInfo _other) { return !this->operator==(_other); }


};
struct _1ce038ab3_comptimeValue {
	jule::Ptr<_1ce11bc0c_Data> _field_data;
	

	inline bool operator==(_1ce038ab3_comptimeValue _other) {
		return 
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1ce038ab3_comptimeValue _other) { return !this->operator==(_other); }


};
struct _1ce03b412_comptimeFiles {
	jule::Slice<jule::Ptr<_1ce116894_SymbolTable>> _field_files;
	


};
struct _1ce03ca0c_comptimeFile {
	jule::Ptr<_1ce116894_SymbolTable> _field_file;
	

	inline bool operator==(_1ce03ca0c_comptimeFile _other) {
		return 
			this->_field_file == _other._field_file;
	}

	inline bool operator!=(_1ce03ca0c_comptimeFile _other) { return !this->operator==(_other); }


};
struct _1ce04201c_constraintChecker {
	jule::Ptr<_1ce08b42e_Sema> _field_s;
	jule::Slice<jule::Ptr<_1cdecdc9a_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1ce14b2e1_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1ce14bdd5_TypeAlias>> _field_genericsA;
	jule::Ptr<_1ce00a832_FnIns> _field_fi;
	jule::Ptr<_1cdee571d_StructIns> _field_si;
	jule::Ptr<_1cdeab4b4_Token> _field_et;
	jule::Bool _field_uniq = false;
	


};
struct _1ce044371_Impl {
	jule::Ptr<_1cdec1a90_TypeDecl> _field_Base;
	jule::Ptr<_1cdec1a90_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1ce00792d_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1ce0b4105_Var>> _field_Statics;
	


};
struct _1ce0497c7_Scope {
	jule::Ptr<_1ce0497c7_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	


};
struct _1ce049be5_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1ce0497c7_Scope> _field_Scope;
	

	inline bool operator==(_1ce049be5_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ce049be5_If _other) { return !this->operator==(_other); }


};
struct _1ce049ee2_Else {
	jule::Ptr<_1ce0497c7_Scope> _field_Scope;
	

	inline bool operator==(_1ce049ee2_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ce049ee2_Else _other) { return !this->operator==(_other); }


};
struct _1ce04a410_Conditional {
	jule::Slice<jule::Ptr<_1ce049be5_If>> _field_Elifs;
	jule::Ptr<_1ce049ee2_Else> _field_Default;
	


};
struct _1ce04a70c_InfIter {
	jule::Ptr<_1ce0497c7_Scope> _field_Scope;
	

	inline bool operator==(_1ce04a70c_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ce04a70c_InfIter _other) { return !this->operator==(_other); }


};
struct _1ce04abb3_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1ce0497c7_Scope> _field_Scope;
	

	inline bool operator==(_1ce04abb3_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ce04abb3_WhileIter _other) { return !this->operator==(_other); }


};
struct _1ce04b60e_RangeIter {
	jule::Ptr<_1ce11bc0c_Data> _field_Expr;
	jule::Ptr<_1ce0497c7_Scope> _field_Scope;
	jule::Ptr<_1ce0b4105_Var> _field_KeyA;
	jule::Ptr<_1ce0b4105_Var> _field_KeyB;
	

	inline bool operator==(_1ce04b60e_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1ce04b60e_RangeIter _other) { return !this->operator==(_other); }


};
struct _1ce04b994_ContSt {
	jule::Uintptr _field_It = 0;
	

	inline bool operator==(_1ce04b994_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_1ce04b994_ContSt _other) { return !this->operator==(_other); }


};
struct _1ce04bd6d_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	inline bool operator==(_1ce04bd6d_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_1ce04bd6d_BreakSt _other) { return !this->operator==(_other); }


};
struct _1ce04c16a_Label {
	jule::Str _field_Ident;
	

	inline bool operator==(_1ce04c16a_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1ce04c16a_Label _other) { return !this->operator==(_other); }


};
struct _1ce04c544_GotoSt {
	jule::Str _field_Ident;
	jule::Ptr<_1ce04c16a_Label> _field_Label;
	

	inline bool operator==(_1ce04c544_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1ce04c544_GotoSt _other) { return !this->operator==(_other); }


};
struct _1ce04c91d_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	inline bool operator==(_1ce04c91d_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1ce04c91d_Postfix _other) { return !this->operator==(_other); }


};
struct _1ce04cdc4_Assign {
	jule::Ptr<_1cdee96bc_OperandExprModel> _field_L;
	jule::Ptr<_1cdee96bc_OperandExprModel> _field_R;
	jule::Ptr<_1cdeab4b4_Token> _field_Op;
	

	inline bool operator==(_1ce04cdc4_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1ce04cdc4_Assign _other) { return !this->operator==(_other); }


};
struct _1ce04d29d_MultiAssign {
	jule::Slice<jule::Ptr<_1ce11bc0c_Data>> _field_L;
	jule::Any _field_R = jule::Any(nullptr);
	


};
struct _1ce04d90d_Match {
	jule::Ptr<_1ce11bc0c_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Bool _field_Comptime = false;
	jule::Slice<jule::Ptr<_1ce04e436_Case>> _field_Cases;
	jule::Ptr<_1ce04e436_Case> _field_Default;
	


};
struct _1ce04e436_Case {
	jule::Ptr<_1ce04d90d_Match> _field_Owner;
	jule::Ptr<_1ce0497c7_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1ce11bc0c_Data>> _field_Exprs;
	jule::Ptr<_1ce04e436_Case> _field_Next;
	


};
struct _1ce04eb2e_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	inline bool operator==(_1ce04eb2e_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_1ce04eb2e_FallSt _other) { return !this->operator==(_other); }


};
struct _1ce04eec5_RetSt {
	jule::Ptr<_1ce00a832_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1ce04eec5_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ce04eec5_RetSt _other) { return !this->operator==(_other); }


};
struct _1ce050635_scopeLabel {
	jule::Ptr<_1cdeab4b4_Token> _field_token;
	jule::Ptr<_1ce04c16a_Label> _field_label;
	jule::I32 _field_pos = 0;
	jule::Ptr<_1ce051acb_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	inline bool operator==(_1ce050635_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1ce050635_scopeLabel _other) { return !this->operator==(_other); }


};
struct _1ce050bb8_scopeGoto {
	jule::Ptr<_1ce04c544_GotoSt> _field_st;
	jule::Ptr<_1cdece54d_GotoSt> _field_gt;
	jule::Ptr<_1ce051acb_scopeChecker> _field_scope;
	jule::I32 _field_pos = 0;
	

	inline bool operator==(_1ce050bb8_scopeGoto _other) {
		return 
			this->_field_st == _other._field_st &&
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1ce050bb8_scopeGoto _other) { return !this->operator==(_other); }


};
struct _1ce051acb_scopeChecker {
	jule::Ptr<_1cdeab4b4_Token> _field_calledFrom;
	jule::Ptr<_1ce08b42e_Sema> _field_s;
	jule::Ptr<_1ce00a832_FnIns> _field_owner;
	jule::Ptr<_1ce051acb_scopeChecker> _field_parent;
	jule::I32 _field_childIndex = 0;
	jule::Ptr<_1ce116894_SymbolTable> _field_table;
	jule::Ptr<_1ce0497c7_Scope> _field_scope;
	jule::Ptr<_1cded1ab1_ScopeTree> _field_tree;
	jule::Ptr<_1ce00a832_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1ce050635_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1ce050bb8_scopeGoto>>> _field_gotos;
	jule::I32 _field_i = 0;
	

	inline bool operator==(_1ce051acb_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1ce051acb_scopeChecker _other) { return !this->operator==(_other); }


};
struct _1ce064b11_directiveChecker {
	jule::Ptr<_1ce08b42e_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1cdec0eac_Directive>>> _field_d;
	jule::Any _field_o;
	

	inline bool operator==(_1ce064b11_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1ce064b11_directiveChecker _other) { return !this->operator==(_other); }


};
struct _1ce06b0ac_ImportInfo {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _field_Selected;
	jule::Ptr<_1ce06ded3_Package> _field_Package;
	jule::I32 _field_ModId = 0;
	


};
struct _1ce06ded3_Package {
	jule::Slice<jule::Ptr<_1ce116894_SymbolTable>> _field_Files;
	


};
struct _1ce08a829_commonSemaMeta {
	jule::Slice<jule::Ptr<_1ce0325a1_comptimeTypeInfo>> _field_comptimeTypeInfos;
	


};
struct _1ce08b42e_Sema {
	jule::Slice<_22a93672d_Log> _field_errors;
	jule::Slice<jule::Ptr<_1ce116894_SymbolTable>> _field_files;
	jule::Ptr<_1ce116894_SymbolTable> _field_file;
	jule::I32 _field_flags = 0LL;
	jule::Ptr<_1ce08a829_commonSemaMeta> _field_meta;
	


};
struct _1ce0b0e59_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	


};
struct _1ce0b4105_Var {
	jule::Ptr<_1ce0497c7_Scope> _field_Scope;
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1ce154d99_TypeSymbol> _field_Kind;
	jule::Ptr<_1ce11cd84_Value> _field_Value;
	jule::Ptr<_1ce00da00_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1cdec0eac_Directive>> _field_Directives;
	jule::I32 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_1ce0b4105_Var>> _field_Depends;
	


};
struct _1ce0b4e80_FuncPattern {
	


};
struct _1ce1038c5_typeCompatibilityChecker {
	jule::Ptr<_1ce08b42e_Sema> _field_s;
	jule::Ptr<_1ce14cbc7_TypeKind> _field_dest;
	jule::Ptr<_1ce14cbc7_TypeKind> _field_src;
	jule::Ptr<_1cdeab4b4_Token> _field_errorToken;
	

	inline bool operator==(_1ce1038c5_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1ce1038c5_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
struct _1ce105674_assignTypeChecker {
	jule::Ptr<_1ce08b42e_Sema> _field_s;
	jule::Ptr<_1ce14cbc7_TypeKind> _field_dest;
	jule::Ptr<_1ce11bc0c_Data> _field_d;
	jule::Ptr<_1cdeab4b4_Token> _field_errorToken;
	

	inline bool operator==(_1ce105674_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1ce105674_assignTypeChecker _other) { return !this->operator==(_other); }


};
struct _1ce107049_dynamicTypeAnnotation {
	jule::Ptr<_1ce11d934_Eval> _field_e;
	jule::Ptr<_1ce00a832_FnIns> _field_f;
	jule::Ptr<_1ce009886_ParamIns> _field_p;
	jule::Ptr<_1ce11bc0c_Data> _field_a;
	jule::Ptr<_1cdeab4b4_Token> _field_errorToken;
	jule::Ptr<_1ce14cbc7_TypeKind>* _field_k = nullptr;
	jule::Ptr<_1cdec1a90_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1ce14cbc7_TypeKind>> _field_ignored;
	


};
struct _1ce10bda6_fnCallArgChecker {
	jule::Ptr<_1ce11d934_Eval> _field_e;
	jule::Slice<jule::Ptr<_1cdec5dc4_Expr>> _field_args;
	jule::Ptr<_1cdeab4b4_Token> _field_errorToken;
	jule::Ptr<_1ce00a832_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1ce14cbc7_TypeKind>> _field_ignored;
	


};
struct _1ce10ecdd_structLitChecker {
	jule::Ptr<_1ce11d934_Eval> _field_e;
	jule::Ptr<_1cdeab4b4_Token> _field_errorToken;
	jule::Ptr<_1cdee571d_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1cdeea5be_StructArgExprModel>> _field_args;
	


};
struct _1ce111ac0_rangeChecker {
	jule::Ptr<_1ce051acb_scopeChecker> _field_sc;
	jule::Ptr<_1cded6786_RangeKind> _field_rang;
	jule::Ptr<_1ce04b60e_RangeIter> _field_Kind;
	jule::Ptr<_1ce11bc0c_Data> _field_d;
	

	inline bool operator==(_1ce111ac0_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1ce111ac0_rangeChecker _other) { return !this->operator==(_other); }


};
struct _1ce114331_retTypeChecker {
	jule::Ptr<_1ce051acb_scopeChecker> _field_sc;
	jule::Ptr<_1ce00a832_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1ce14cbc7_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_1cdec5dc4_Expr>> _field_exprs;
	jule::Ptr<_1cdeab4b4_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	


};
struct _1ce116894_SymbolTable {
	jule::Ptr<_1cdeb1c4a_File> _field_File;
	jule::Slice<_1ce01001d_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1ce06b0ac_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1ce0b4105_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1ce14bdd5_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1cdee2990_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1ce00792d_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1ce01ac0a_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1ce01d416_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1ce01eb21_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1ce044371_Impl>> _field_Impls;
	


};
struct _1ce11bc0c_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_1ce14cbc7_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_22be1616d_Const> _field_Constant;
	

	inline bool operator==(_1ce11bc0c_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_1ce11bc0c_Data _other) { return !this->operator==(_other); }


};
struct _1ce11cd84_Value {
	jule::Ptr<_1cdec5dc4_Expr> _field_Expr;
	jule::Ptr<_1ce11bc0c_Data> _field_Data;
	

	inline bool operator==(_1ce11cd84_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1ce11cd84_Value _other) { return !this->operator==(_other); }


};
struct _1ce11d934_Eval {
	jule::Ptr<_1ce08b42e_Sema> _field_s;
	jule::Trait<_1ce16c7b8_Lookup> _field_lookup;
	jule::Ptr<_1ce14cbc7_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_1ce0b4105_Var> _field_owner;
	jule::Ptr<_1cdee4b6d_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	inline bool operator==(_1ce11d934_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1ce11d934_Eval _other) { return !this->operator==(_other); }


};
struct _1ce13c15b_unaryEval {
	jule::Ptr<_1ce11d934_Eval> _field_e;
	jule::Ptr<_1ce11bc0c_Data> _field_d;
	jule::Ptr<_1cdec7e81_UnaryExpr> _field_u;
	

	inline bool operator==(_1ce13c15b_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1ce13c15b_unaryEval _other) { return !this->operator==(_other); }


};
struct _1ce13e0e7_binaryEval {
	jule::Ptr<_1ce11d934_Eval> _field_e;
	jule::Ptr<_1ce11bc0c_Data> _field_l;
	jule::Ptr<_1ce11bc0c_Data> _field_r;
	jule::Ptr<_1cdeab4b4_Token> _field_op;
	

	inline bool operator==(_1ce13e0e7_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1ce13e0e7_binaryEval _other) { return !this->operator==(_other); }


};
struct _1ce14b2e1_InsGeneric {
	jule::Ptr<_1ce14cbc7_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1ce14cbc7_TypeKind>> _field_Constraint;
	


};
struct _1ce14bdd5_TypeAlias {
	jule::Ptr<_1cded1ab1_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ce154d99_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1ce14bdd5_TypeAlias>> _field_Generics;
	


};
struct _1ce14cbc7_TypeKind {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait<_1ce14c721_Kind> _field_Kind;
	

	inline bool operator==(_1ce14cbc7_TypeKind _other) {
		return 
			this->_field_BindIdent == _other._field_BindIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ce14cbc7_TypeKind _other) { return !this->operator==(_other); }


};
struct _1ce154d99_TypeSymbol {
	jule::Ptr<_1cdec1a90_TypeDecl> _field_Decl;
	jule::Ptr<_1ce14cbc7_TypeKind> _field_Kind;
	

	inline bool operator==(_1ce154d99_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ce154d99_TypeSymbol _other) { return !this->operator==(_other); }


};
struct _1ce1557a1_Prim {
	jule::Str _field_Kind;
	

	inline bool operator==(_1ce1557a1_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ce1557a1_Prim _other) { return !this->operator==(_other); }


};
struct _1ce1592cc_Sptr {
	jule::Ptr<_1ce14cbc7_TypeKind> _field_Elem;
	

	inline bool operator==(_1ce1592cc_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ce1592cc_Sptr _other) { return !this->operator==(_other); }


};
struct _1ce159ca0_Slc {
	jule::Ptr<_1ce14cbc7_TypeKind> _field_Elem;
	

	inline bool operator==(_1ce159ca0_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ce159ca0_Slc _other) { return !this->operator==(_other); }


};
struct _1ce15a894_Tuple {
	jule::Slice<jule::Ptr<_1ce14cbc7_TypeKind>> _field_Types;
	


};
struct _1ce15b444_Map {
	jule::Ptr<_1ce14cbc7_TypeKind> _field_Key;
	jule::Ptr<_1ce14cbc7_TypeKind> _field_Val;
	

	inline bool operator==(_1ce15b444_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1ce15b444_Map _other) { return !this->operator==(_other); }


};
struct _1ce15c0c1_Arr {
	jule::Bool _field_Auto = false;
	jule::I32 _field_N = 0;
	jule::Ptr<_1ce14cbc7_TypeKind> _field_Elem;
	

	inline bool operator==(_1ce15c0c1_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ce15c0c1_Arr _other) { return !this->operator==(_other); }


};
struct _1ce15ca94_Ptr {
	jule::Ptr<_1ce14cbc7_TypeKind> _field_Elem;
	

	inline bool operator==(_1ce15ca94_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ce15ca94_Ptr _other) { return !this->operator==(_other); }


};
struct _1ce15da95_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	inline bool operator==(_1ce15da95_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1ce15da95_referencer _other) { return !this->operator==(_other); }


};
struct _1ce15ea85_typeChecker {
	jule::Ptr<_1ce08b42e_Sema> _field_s;
	jule::Trait<_1ce16c7b8_Lookup> _field_rootLookup;
	jule::Trait<_1ce16c7b8_Lookup> _field_lookup;
	jule::Ptr<_1ce15da95_referencer> _field_referencer;
	jule::Ptr<_1ce00da00_ReferenceStack> _field_refers;
	jule::Ptr<_1cdeab4b4_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1cdecdc9a_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1ce14cbc7_TypeKind>>* _field_ignoredGenerics = nullptr;
	jule::Slice<jule::Ptr<_1ce14bdd5_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk = true;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_1ce14bdd5_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1ce14bdd5_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	


};
struct _1ce16773b_identTypeLookup {
	

	inline bool operator==(_1ce16773b_identTypeLookup _other) { return true; }

	inline bool operator!=(_1ce16773b_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1b57310c6_FileInfo {
	jule::Ptr<_1cdebead2_Ast> _field_Ast;
	jule::Slice<_22a93672d_Log> _field_Errors;
	


};
struct _1b5776d31_stmt {
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	


};
struct _1b57776c2_scopeParser {
	jule::Ptr<_1b5795987_parser> _field_p;
	jule::Ptr<_1cded1ab1_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1b5776d31_stmt>> _field_stmts;
	jule::I32 _field_pos = 0;
	


};
struct _1b57850e7_exprBuilder {
	jule::Ptr<_1b5795987_parser> _field_p;
	

	inline bool operator==(_1b57850e7_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1b57850e7_exprBuilder _other) { return !this->operator==(_other); }


};
struct _1b5792588_assignInfo {
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _field_l;
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _field_r;
	jule::Ptr<_1cdeab4b4_Token> _field_setter;
	jule::Bool _field_ok = false;
	


};
struct _1b5795987_parser {
	jule::Ptr<_1cdebead2_Ast> _field_ast;
	jule::Slice<jule::Ptr<_1cdec0eac_Directive>> _field_directives;
	jule::Slice<_22a93672d_Log> _field_errors;
	jule::Ptr<_1b57850e7_exprBuilder> _field_ep;
	


};
struct _1b57a7b64_typeBuilder {
	jule::Ptr<_1b5795987_parser> _field_p;
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _field_tokens;
	jule::I32* _field_i = nullptr;
	jule::Bool _field_err = false;
	


};
struct _1ce361eb8_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str::lit("clang", 5);
	jule::Str _field_CppStd = jule::Str::lit("cpp14", 5);
	

	inline bool operator==(_1ce361eb8_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_1ce361eb8_CompileInfo _other) { return !this->operator==(_other); }


};
struct _1ce363492_directiveEval {
	jule::Slice<_22a93672d_Log> _field_logs;
	jule::Ptr<_1cdec0eac_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1b57abc9a_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1ce06b0ac_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1b57b1eae_OrderedDefines {
	jule::Slice<jule::Ptr<_1cdee2990_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1ce0b4105_Var>> _field_Globals;
	


};
struct _1b57b2245_defineOrderer {
	

	inline bool operator==(_1b57b2245_defineOrderer _other) { return true; }

	inline bool operator!=(_1b57b2245_defineOrderer _other) { return !this->operator==(_other); }


};
struct _1b59255d9_liveTable {
	jule::Slice<jule::Ptr<_1ce0b4105_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1ce00a832_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1cdee571d_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1ce01ac0a_Trait>> _field_traits;
	


};
struct _1b592a2e2_scopeDeadCode {
	jule::Ptr<_1b592a2e2_scopeDeadCode> _field_parent;
	jule::Ptr<_1ce0497c7_Scope> _field_s;
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I32 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1ce04c16a_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1ce04c544_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	inline bool operator==(_1b592a2e2_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1b592a2e2_scopeDeadCode _other) { return !this->operator==(_other); }


};
struct _1b592e57c_exprDeadCode {
	jule::Ptr<_1b592a2e2_scopeDeadCode> _field_s;
	

	inline bool operator==(_1b592e57c_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1b592e57c_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _1ce245dad_ExceptionalForwardingExprModel {
	jule::Ptr<_1cdeebb97_FnCallExprModel> _field_Expr;
	

	inline bool operator==(_1ce245dad_ExceptionalForwardingExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ce245dad_ExceptionalForwardingExprModel _other) { return !this->operator==(_other); }


};
struct _1ce246232_SwapExprModel {
	jule::Ptr<_1ce11bc0c_Data> _field_Left;
	jule::Ptr<_1ce11bc0c_Data> _field_Right;
	

	inline bool operator==(_1ce246232_SwapExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1ce246232_SwapExprModel _other) { return !this->operator==(_other); }


};
struct _1ce24660b_EmptyCompareExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Neg = false;
	

	inline bool operator==(_1ce24660b_EmptyCompareExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Neg == _other._field_Neg;
	}

	inline bool operator!=(_1ce24660b_EmptyCompareExprModel _other) { return !this->operator==(_other); }


};
struct _1ce246980_RefExprModel {
	jule::Ptr<_1ce0b4105_Var> _field_Var;
	

	inline bool operator==(_1ce246980_RefExprModel _other) {
		return 
			this->_field_Var == _other._field_Var;
	}

	inline bool operator!=(_1ce246980_RefExprModel _other) { return !this->operator==(_other); }


};
struct _1ce246e03_StrCompExprModel {
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Ptr<_22be1616d_Const> _field_Right;
	jule::Bool _field_NotEq = false;
	

	inline bool operator==(_1ce246e03_StrCompExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_NotEq == _other._field_NotEq;
	}

	inline bool operator!=(_1ce246e03_StrCompExprModel _other) { return !this->operator==(_other); }


};
struct _1ce247486_MutSlicingExprModel {
	jule::Ptr<_1cdeab4b4_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1ce247486_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1ce247486_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1ce247783_UnsafeBinaryExprModel {
	jule::Ptr<_1cdee9bb7_BinaryExprModel> _field_Node;
	

	inline bool operator==(_1ce247783_UnsafeBinaryExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1ce247783_UnsafeBinaryExprModel _other) { return !this->operator==(_other); }


};
struct _1ce247b18_UnsafeIndexingExprModel {
	jule::Ptr<_1cdeec527_IndexingExprModel> _field_Node;
	

	inline bool operator==(_1ce247b18_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1ce247b18_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1ce247ee2_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_1cdeec071_SliceExprModel> _field_Elems;
	

	inline bool operator==(_1ce247ee2_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1ce247ee2_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1ce2483bb_AppendToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Slice = jule::Any(nullptr);
	

	inline bool operator==(_1ce2483bb_AppendToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Slice == _other._field_Slice;
	}

	inline bool operator!=(_1ce2483bb_AppendToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1ce248795_StrRuneIter {
	jule::Ptr<_1ce11bc0c_Data> _field_Expr;
	jule::Ptr<_1ce04b60e_RangeIter> _field_Base;
	

	inline bool operator==(_1ce248795_StrRuneIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Base == _other._field_Base;
	}

	inline bool operator!=(_1ce248795_StrRuneIter _other) { return !this->operator==(_other); }


};
struct _1ce248a92_UnsafeDerefExprModel {
	jule::Ptr<_1cdeea091_UnaryExprModel> _field_Base;
	

	inline bool operator==(_1ce248a92_UnsafeDerefExprModel _other) {
		return 
			this->_field_Base == _other._field_Base;
	}

	inline bool operator!=(_1ce248a92_UnsafeDerefExprModel _other) { return !this->operator==(_other); }


};
struct _1ce248d8e_UnsafeCastingExprModel {
	jule::Ptr<_1cdeeb2e5_CastingExprModel> _field_Base;
	

	inline bool operator==(_1ce248d8e_UnsafeCastingExprModel _other) {
		return 
			this->_field_Base == _other._field_Base;
	}

	inline bool operator!=(_1ce248d8e_UnsafeCastingExprModel _other) { return !this->operator==(_other); }


};
struct _1ce249a71_nilVar {
	jule::Uintptr _field_var = 0;
	jule::Bool _field_safe = false;
	

	inline bool operator==(_1ce249a71_nilVar _other) {
		return 
			this->_field_var == _other._field_var &&
			this->_field_safe == _other._field_safe;
	}

	inline bool operator!=(_1ce249a71_nilVar _other) { return !this->operator==(_other); }


};
struct _1ce249db2_nils {
	jule::Slice<_1ce249a71_nilVar> _field_vars;
	


};
struct _1ce24cb40_scopeOptimizer {
	jule::Ptr<_1ce24cb40_scopeOptimizer> _field_parent;
	jule::I32 _field_i = 0;
	jule::Ptr<_1ce0497c7_Scope> _field_scope;
	jule::Ptr<_1ce2625e4_data> _field_data;
	

	inline bool operator==(_1ce24cb40_scopeOptimizer _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1ce24cb40_scopeOptimizer _other) { return !this->operator==(_other); }


};
struct _1ce25498d_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	jule::Ptr<_1ce2625e4_data> _field_data;
	

	inline bool operator==(_1ce25498d_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1ce25498d_exprOptimizer _other) { return !this->operator==(_other); }


};
struct _1ce25e35a_dynamicVar {
	jule::Uintptr _field_var = 0;
	jule::Ptr<_1ce14cbc7_TypeKind> _field_kind;
	

	inline bool operator==(_1ce25e35a_dynamicVar _other) {
		return 
			this->_field_var == _other._field_var &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1ce25e35a_dynamicVar _other) { return !this->operator==(_other); }


};
struct _1ce25e69b_dynamic {
	jule::Slice<_1ce25e35a_dynamicVar> _field_vars;
	


};
struct _1ce2625e4_data {
	jule::Ptr<_1ce263edb_boundary> _field_boundary;
	jule::Ptr<_1ce249db2_nils> _field_nils;
	jule::Ptr<_1ce25e69b_dynamic> _field_dynamic;
	

	inline bool operator==(_1ce2625e4_data _other) {
		return 
			this->_field_boundary == _other._field_boundary &&
			this->_field_nils == _other._field_nils &&
			this->_field_dynamic == _other._field_dynamic;
	}

	inline bool operator!=(_1ce2625e4_data _other) { return !this->operator==(_other); }


};
struct _1ce263b9a_boundaryVar {
	jule::Uintptr _field_var = 0;
	jule::Slice<jule::Any> _field_maxSize;
	


};
struct _1ce263edb_boundary {
	jule::Slice<_1ce263b9a_boundaryVar> _field_vars;
	


};
struct _1b593661c_Optimizer {
	jule::Ptr<_1b57ae72b_IR> _field_ir;
	

	inline bool operator==(_1b593661c_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1b593661c_Optimizer _other) { return !this->operator==(_other); }


};
struct _1b595e3d1_AnsiEscape {
	

	inline bool operator==(_1b595e3d1_AnsiEscape _other) { return true; }

	inline bool operator!=(_1b595e3d1_AnsiEscape _other) { return !this->operator==(_other); }


};
struct _1b5960954_Logger {
	

	inline bool operator==(_1b5960954_Logger _other) { return true; }

	inline bool operator!=(_1b5960954_Logger _other) { return !this->operator==(_other); }


};
struct _1b6283c6b_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	inline bool operator==(_1b6283c6b_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1b6283c6b_AbsTime _other) { return !this->operator==(_other); }


};
struct _1b6284442_Time {
	jule::U64 _field_sec = 0;
	

	inline bool operator==(_1b6284442_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1b6284442_Time _other) { return !this->operator==(_other); }


};
struct _1b61ae56a_scopeCoder {
	jule::Ptr<_1b628d825_ObjectCoder> _field_oc;
	

	inline bool operator==(_1b61ae56a_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1b61ae56a_scopeCoder _other) { return !this->operator==(_other); }


};
struct _1b61bdc0b_exprCoder {
	jule::Ptr<_1b628d825_ObjectCoder> _field_oc;
	

	inline bool operator==(_1b61bdc0b_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1b61bdc0b_exprCoder _other) { return !this->operator==(_other); }


};
struct _1b61ced60_TestCoder {
	jule::Ptr<_1cdee571d_StructIns> _field_t;
	jule::Ptr<_1ce00792d_Fn> _field_tmReset;
	jule::Ptr<_1ce00792d_Fn> _field_tmFailed;
	jule::Ptr<_1ce00792d_Fn> _field_tmSkipped;
	jule::Ptr<_1b628d825_ObjectCoder> _field_oc;
	

	inline bool operator==(_1b61ced60_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1b61ced60_TestCoder _other) { return !this->operator==(_other); }


};
struct _1b61d2b76_identCoder {
	

	inline bool operator==(_1b61d2b76_identCoder _other) { return true; }

	inline bool operator!=(_1b61d2b76_identCoder _other) { return !this->operator==(_other); }


};
struct _1b628bd0c_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	inline bool operator==(_1b628bd0c_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1b628bd0c_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1b628c3d4_traitHash {
	jule::Ptr<_1ce01ac0a_Trait> _field_t;
	jule::Str _field_ti;
	jule::Ptr<_1cdee571d_StructIns> _field_s;
	jule::I32 _field_i = 0;
	

	inline bool operator==(_1b628c3d4_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_ti == _other._field_ti &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1b628c3d4_traitHash _other) { return !this->operator==(_other); }


};
struct _1b628c7ad_traitCast {
	jule::Ptr<_1ce01ac0a_Trait> _field_t1;
	jule::Ptr<_1ce01ac0a_Trait> _field_t2;
	

	inline bool operator==(_1b628c7ad_traitCast _other) {
		return 
			this->_field_t1 == _other._field_t1 &&
			this->_field_t2 == _other._field_t2;
	}

	inline bool operator!=(_1b628c7ad_traitCast _other) { return !this->operator==(_other); }


};
struct _1b629ce72_customType {
	jule::Str _field_kind;
	

	inline bool operator==(_1b629ce72_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1b629ce72_customType _other) { return !this->operator==(_other); }


};
struct _1b629da88_typeCoder {
	jule::Ptr<_1b628d825_ObjectCoder> _field_oc;
	jule::Ptr<_1b5e501b8_resultCoder> _field_rc;
	

	inline bool operator==(_1b629da88_typeCoder _other) {
		return 
			this->_field_oc == _other._field_oc &&
			this->_field_rc == _other._field_rc;
	}

	inline bool operator!=(_1b629da88_typeCoder _other) { return !this->operator==(_other); }


};
struct _1b5e501b8_resultCoder {
	jule::Ptr<_1b629da88_typeCoder> _field_tc;
	

	inline bool operator==(_1b5e501b8_resultCoder _other) {
		return 
			this->_field_tc == _other._field_tc;
	}

	inline bool operator!=(_1b5e501b8_resultCoder _other) { return !this->operator==(_other); }


};
struct _1b99c2c15_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	inline bool operator==(_1b99c2c15_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b99c2c15_Flag _other) { return !this->operator==(_other); }


};struct _1b99c6851_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	inline bool operator==(_1b99c6851_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b99c6851_Flag _other) { return !this->operator==(_other); }


};struct _1b99ca008_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	inline bool operator==(_1b99ca008_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b99ca008_Flag _other) { return !this->operator==(_other); }


};struct _1b99cd704_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	inline bool operator==(_1b99cd704_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b99cd704_Flag _other) { return !this->operator==(_other); }


};struct _1b99d1dab_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	inline bool operator==(_1b99d1dab_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b99d1dab_Flag _other) { return !this->operator==(_other); }


};
struct _1b5eba81b_FlagSet {
	jule::Slice<jule::Trait<_1b5eb8c48_CommonFlag>> _field_flags;
	


};
struct _1b5ebd2d0_argParser {
	_1b5eba81b_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I32 _field_i = 0;
	


};
struct _1b628d825_ObjectCoder {
	_22ab0b88c_StrBuilder _field_Buf;
	_22ab0b88c_StrBuilder _field_resultDecls;
	_22ab0b88c_StrBuilder _field_anyObj;
	jule::Ptr<_1b57ae72b_IR> _field_ir;
	_1b628bd0c_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1b628c3d4_traitHash>> _field_tmap;
	jule::Slice<jule::U8> _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_1ce14cbc7_TypeKind>> _field_anyTypeMap;
	jule::Slice<_1b628c7ad_traitCast> _field_traitCastMap;
	jule::Ptr<_1b61bdc0b_exprCoder> _field_ec;
	jule::Ptr<_1b61ae56a_scopeCoder> _field_sc;
	jule::Ptr<_1b629da88_typeCoder> _field_tc;
	jule::I32 _field_headPos = 0;
	jule::I32 _field_declPos = 0;
	


};
struct _1ce2620e9_dataCheckpoint {
	_1ce263edb_boundary _field_boundary;
	_1ce249db2_nils _field_nils;
	_1ce25e69b_dynamic _field_dynamic;
	


};
struct _1b5925a07_ObjectDeadCode {
	_1b59255d9_liveTable _field_live;
	jule::Ptr<_1b57ae72b_IR> _field_ir;
	


};
struct _1b57ae72b_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1ce06ded3_Package> _field_Main;
	jule::Slice<jule::Ptr<_1ce06b0ac_ImportInfo>> _field_Used;
	_1b57b1eae_OrderedDefines _field_Ordered;
	


};
struct _1cdee571d_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_1cdee2990_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1ce14b2e1_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1cdee4b6d_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1ce0b4105_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1ce00792d_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_1ce00da00_ReferenceStack> _field_Refers;
	_1cdee1a7c_Operators _field_Operators;
	


};
struct _22acaed1a_Cmd {
	_22abd6dc9_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	


};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ce11bc0c_Data__jule_tuple_x_1ce11bc0c_Data {
	jule::Ptr<_1ce11bc0c_Data> __jule_result_arg0;
	jule::Ptr<_1ce11bc0c_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1ce11bc0c_Data__jule_tuple_bool {
	jule::Ptr<_1ce11bc0c_Data> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1cdec5dc4_Expr__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1cdec5dc4_Expr>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1cded8a63_Case__jule_tuple_bool {
	jule::Ptr<_1cded8a63_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1cded8a63_Case__jule_tuple_x_1cded78b9_Else {
	jule::Slice<jule::Ptr<_1cded8a63_Case>> __jule_result_arg0;
	jule::Ptr<_1cded78b9_Else> __jule_result_arg1;
};
struct __jule_tuple__1cded11ed_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1cded053d_AssignSt__jule_tuple_bool {
	jule::Ptr<_1cded053d_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1cdec1a90_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1cdec1a90_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1cdec4983_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1cdec4983_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1cdebead2_Ast__jule_tuple_s_22a93672d_Log {
	jule::Slice<jule::Ptr<_1cdebead2_Ast>> __jule_result_arg0;
	jule::Slice<_22a93672d_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_22a93672d_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_22a93672d_Log> __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1b57ae72b_IR__jule_tuple_s_22a93672d_Log {
	jule::Ptr<_1b57ae72b_IR> __jule_result_arg0;
	jule::Slice<_22a93672d_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__22b7e7c81_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I32 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__22b7e7c81_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__22b7e7c81_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::I32 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__22b7e7c81_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::I32 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I32 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ce116894_SymbolTable__jule_tuple_s_22a93672d_Log {
	jule::Ptr<_1ce116894_SymbolTable> __jule_result_arg0;
	jule::Slice<_22a93672d_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1ce06ded3_Package__jule_tuple_s_22a93672d_Log {
	jule::Ptr<_1ce06ded3_Package> __jule_result_arg0;
	jule::Slice<_22a93672d_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1cdebead2_Ast__jule_tuple_s_22a93672d_Log {
	jule::Ptr<_1cdebead2_Ast> __jule_result_arg0;
	jule::Slice<_22a93672d_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1cdeab4b4_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1cdeab4b4_Token__jule_tuple_sx_1cdeab4b4_Token {
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1cdeab4b4_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_ssx_1cdeab4b4_Token__jule_tuple_s_22a93672d_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>> __jule_result_arg0;
	jule::Slice<_22a93672d_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline _22ab0b88c_StrBuilder static__22ab0bb56_New(jule::I32);
inline void _22ab15214_Write(_22ab0b88c_StrBuilder*, jule::Slice<jule::U8>);
inline void _22ab154bc_WriteStr(_22ab0b88c_StrBuilder*, jule::Str);
inline void _22ab15775_WriteByte(_22ab0b88c_StrBuilder*, jule::U8);
inline jule::Str _22ab15cb4_Str(_22ab0b88c_StrBuilder*);
inline void _22ab15eb2_Clear(_22ab0b88c_StrBuilder*);
inline jule::I32 _22ab16248_Len(_22ab0b88c_StrBuilder*);
inline jule::Slice<jule::U8> _22ab16765_Buf(_22ab0b88c_StrBuilder*);
inline void _22ab16a1d_SetBuf(_22ab0b88c_StrBuilder*, jule::Slice<jule::U8>);
inline jule::U8 _22ab17689_index(_22ab17238_lazyBuff*, jule::I32);
inline void _22ab17942_append(_22ab17238_lazyBuff*, jule::U8);
inline jule::Str _22ab17bc8_string(_22ab17238_lazyBuff*);
inline jule::Exceptional<jule::Slice<jule::Ptr<_2439c6321_DirEntry>>> static__22ab1b9bd_Read(jule::Str);
inline jule::VoidExceptional static__22ab1bbee_Create(jule::Str);
inline jule::VoidExceptional static__22ab1be30_Remove(jule::Str);
inline jule::Exceptional<jule::Ptr<_2439c81e1_File>> static__2439c5243_Open(jule::Str, jule::I32, jule::I32);
inline jule::VoidExceptional static__2439c5474_Remove(jule::Str);
inline jule::Exceptional<jule::I32> _2439c5908_Write(_2439c81e1_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I32> _2439c5c49_Read(_2439c81e1_File*, jule::Slice<jule::U8>);
inline jule::Ptr<_2439c81e1_File> static__2439c860e_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_2439c81e1_File>> static__2439c88c8_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__2439c8b92_Read(jule::Str);
inline jule::VoidExceptional static__2439c9038_Write(jule::Str, jule::Slice<jule::U8>, jule::I32);
inline jule::VoidExceptional _2439c9775_Close(_2439c81e1_File*);
inline jule::Exceptional<jule::Ptr<_2439ca2d1_Status>> static__2439c6e6a_Of(jule::Str);
inline jule::Bool _2439ca6aa_IsDir(_2439ca2d1_Status*);
inline jule::Bool _2439ca941_IsReg(_2439ca2d1_Status*);
inline jule::U32 _2439cabc7_Size(_2439ca2d1_Status*);
inline jule::Bool _22bdea3a5_set(_22be03974_decimal*, jule::Slice<jule::U8>);
inline __jule_tuple_u64__jule_tuple_bool _22bdea6e6_floatBits(_22be03974_decimal*, _22bde008c_floatInfo*);
inline void _22be03d2b_assign(_22be03974_decimal*, jule::U64);
inline void _22be040d4_shift(_22be03974_decimal*, jule::I32);
inline void _22be0438c_roundDown(_22be03974_decimal*, jule::I32);
inline void _22be04645_roundUp(_22be03974_decimal*, jule::I32);
inline void _22be048ed_round(_22be03974_decimal*, jule::I32);
inline jule::U64 _22be04b84_roundedInteger(_22be03974_decimal*);
inline jule::Ptr<_22be1616d_Const> static__22be165ad_NewI64(jule::I64);
inline jule::Ptr<_22be1616d_Const> static__22be16877_NewU64(jule::U64);
inline jule::Ptr<_22be1616d_Const> static__22be16b41_NewBool(jule::Bool);
inline jule::Ptr<_22be1616d_Const> static__22be16e0a_NewStr(jule::Str);
inline jule::Ptr<_22be1616d_Const> static__22be171c4_NewF64(jule::F64);
inline jule::Ptr<_22be1616d_Const> static__22be173d3_NewNil(void);
inline jule::I64 _22be17a43_ReadI64(_22be1616d_Const*);
inline jule::U64 _22be17cc9_ReadU64(_22be1616d_Const*);
inline jule::Bool _22be18060_ReadBool(_22be1616d_Const*);
inline jule::Str _22be182e6_ReadStr(_22be1616d_Const*);
inline jule::F64 _22be1857c_ReadF64(_22be1616d_Const*);
inline jule::I64 _22be18813_AsI64(_22be1616d_Const*);
inline jule::U64 _22be18a99_AsU64(_22be1616d_Const*);
inline jule::F64 _22be18d30_AsF64(_22be1616d_Const*);
inline void _22be190d8_SetI64(_22be1616d_Const*, jule::I64);
inline void _22be19391_SetU64(_22be1616d_Const*, jule::U64);
inline void _22be19649_SetBool(_22be1616d_Const*, jule::Bool);
inline void _22be19902_SetStr(_22be1616d_Const*, jule::Str);
inline void _22be19baa_SetF64(_22be1616d_Const*, jule::F64);
inline jule::Bool _22be1a13e_IsI64(_22be1616d_Const*);
inline jule::Bool _22be1a3c5_IsU64(_22be1616d_Const*);
inline jule::Bool _22be1a65b_IsBool(_22be1616d_Const*);
inline jule::Bool _22be1a8e2_IsStr(_22be1616d_Const*);
inline jule::Bool _22be1ab78_IsF64(_22be1616d_Const*);
inline jule::Bool _22be1ae0e_IsNil(_22be1616d_Const*);
inline jule::Bool _22be1b591_And(_22be1616d_Const*, _22be1616d_Const);
inline jule::Bool _22be1b8d2_Or(_22be1616d_Const*, _22be1616d_Const);
inline jule::Bool _22be1cd78_Add(_22be1616d_Const*, _22be1616d_Const);
inline jule::Bool _22be1d1b9_Sub(_22be1616d_Const*, _22be1616d_Const);
inline jule::Bool _22be1d50a_Mul(_22be1616d_Const*, _22be1616d_Const);
inline jule::Bool _22be1d84b_Div(_22be1616d_Const*, _22be1616d_Const);
inline jule::Bool _22be1db8c_Mod(_22be1616d_Const*, _22be1616d_Const);
inline jule::Bool _22be1decd_BitwiseAnd(_22be1616d_Const*, _22be1616d_Const);
inline jule::Bool _22be1e31e_BitwiseOr(_22be1616d_Const*, _22be1616d_Const);
inline jule::Bool _22be1e660_Xor(_22be1616d_Const*, _22be1616d_Const);
inline jule::Bool _22be1e9a1_Lshift(_22be1616d_Const*, _22be1616d_Const);
inline jule::Bool _22be1ece2_Rshift(_22be1616d_Const*, _22be1616d_Const);
inline jule::U8 _1cdeab838_Prec(_1cdeab4b4_Token*);
inline void _1cdeb2168_Fill(_1cdeb1c4a_File*, jule::Slice<jule::U8>);
inline jule::Str _1cdeb23ee_Dir(_1cdeb1c4a_File*);
inline jule::Str _1cdeb2685_Name(_1cdeb1c4a_File*);
inline jule::Str _1cdeb2c5c_GetRow(_1cdeb1c4a_File*, jule::I32);
inline void _1cdeba418_pushErr(_1cdeb9d85_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _1cdeba979_lex(_1cdeb9d85_lex*);
inline jule::Str _1cdebacba_id(_1cdeb9d85_lex*, jule::Slice<jule::U8>*);
inline jule::Slice<jule::U8> _1cdebb051_resume(_1cdeb9d85_lex*);
inline void _1cdebb309_lexLineComment(_1cdeb9d85_lex*, jule::Ptr<_1cdeab4b4_Token>*);
inline void _1cdebb5b2_lexRangeComment(_1cdeb9d85_lex*, jule::Ptr<_1cdeab4b4_Token>*);
inline jule::Str _1cdebb903_num(_1cdeb9d85_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1cdebbc44_escapeSeq(_1cdeb9d85_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1cdebc140_getRune(_1cdeb9d85_lex*, jule::Slice<jule::U8>*, jule::Bool);
inline jule::Str _1cdebc481_lexRune(_1cdeb9d85_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1cdebc717_lexStr(_1cdeb9d85_lex*);
inline void _1cdebcb9b_newLine(_1cdeb9d85_lex*);
inline jule::Bool _1cdebd20c_isOp(_1cdeb9d85_lex*, jule::Slice<jule::U8>*, jule::Str, jule::U32, jule::Ptr<_1cdeab4b4_Token>*);
inline jule::Bool _1cdebd608_lexBasicOps(_1cdeb9d85_lex*, jule::Slice<jule::U8>, jule::Ptr<_1cdeab4b4_Token>*);
inline jule::Bool _1cdebda04_lexId(_1cdeb9d85_lex*, jule::Slice<jule::U8>*, jule::Ptr<_1cdeab4b4_Token>*);
inline jule::Bool _1cdebde00_lexNum(_1cdeb9d85_lex*, jule::Slice<jule::U8>*, jule::Ptr<_1cdeab4b4_Token>*);
inline jule::Ptr<_1cdeab4b4_Token> _1cdebe186_token(_1cdeb9d85_lex*);
inline jule::Bool _1cdec392c_IsUnsafe(_1cdec35b9_PtrTypeDecl*);
inline jule::Bool _1cdec41be_AutoSized(_1cdec3d5b_ArrTypeDecl*);
inline jule::Bool _1cdec9e72_Unhandled(_1cdec9aed_FnCallExpr*);
inline jule::Bool _1cdeca208_Ignored(_1cdec9aed_FnCallExpr*);
inline jule::Bool _1cded2672_IsSelf(_1cded22ed_ParamDecl*);
inline jule::Bool _1cded3ab3_IsAnon(_1cded3750_FnDecl*);
inline jule::Bool _1cded58b7_IsInf(_1cded5554_Iter*);
inline jule::Bool _1cded61e2_IsWhileNext(_1cded5d7e_WhileKind*);
inline jule::Ptr<_1cdee4b6d_FieldIns> _1cdedee21_instance(jule::Ptr<_1cdedea69_Field>);
inline jule::Ptr<_1cdee571d_StructIns> _1cdee2e02_instance(jule::Ptr<_1cdee2990_Struct>);
inline jule::Ptr<_1cdee571d_StructIns> _1cdee3210_appendInstance(_1cdee2990_Struct*, jule::Ptr<_1cdee571d_StructIns>*);
inline jule::Ptr<_1ce00792d_Fn> _1cdee360b_FindMethod(_1cdee2990_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1ce0b4105_Var> _1cdee394c_FindStatic(_1cdee2990_Struct*, jule::Str);
inline jule::Ptr<_1cdedea69_Field> _1cdee3c8d_FindField(_1cdee2990_Struct*, jule::Str);
inline jule::Bool _1cdee40ce_IsImplements(_1cdee2990_Struct*, jule::Ptr<_1ce01ac0a_Trait>);
inline jule::Bool _1cdee4420_IsUses(_1cdee2990_Struct*, jule::Ptr<_1cdee2990_Struct>);
inline jule::Ptr<_1ce009886_ParamIns> _1ce0062de_instance(jule::Ptr<_1ce005e59_Param>);
inline jule::Bool _1ce006575_IsSelf(_1ce005e59_Param*);
inline jule::Bool _1ce00680b_IsRef(_1ce005e59_Param*);
inline jule::Bool _1ce007da1_IsVoid(_1ce00792d_Fn*);
inline jule::Bool _1ce008137_IsMethod(_1ce00792d_Fn*);
inline jule::Bool _1ce0083bd_IsEntryPoint(_1ce00792d_Fn*);
inline jule::Bool _1ce008654_IsInit(_1ce00792d_Fn*);
inline jule::Bool _1ce0088da_IsAnon(_1ce00792d_Fn*);
inline jule::Bool _1ce008b71_AnyVar(_1ce00792d_Fn*);
inline jule::Ptr<_1ce00a832_FnIns> _1ce008e07_instanceForce(jule::Ptr<_1ce00792d_Fn>);
inline jule::Ptr<_1ce00a832_FnIns> _1ce00918d_instance(jule::Ptr<_1ce00792d_Fn>);
inline jule::Ptr<_1ce00a832_FnIns> _1ce00949b_appendInstance(_1ce00792d_Fn*, jule::Ptr<_1ce00a832_FnIns>*);
inline jule::Str _1ce009be9_Str(_1ce009886_ParamIns*);
inline jule::Str _1ce00ab73_Str(_1ce00a832_FnIns*);
inline jule::Bool _1ce00aeb4_Equal(jule::Ptr<_1ce00a832_FnIns>, jule::Ptr<_1ce14cbc7_TypeKind>);
inline jule::Bool _1ce00b459_EqualFn(jule::Ptr<_1ce00a832_FnIns>, jule::Ptr<_1ce00a832_FnIns>*);
inline jule::Bool _1ce00b79a_equalTrait(jule::Ptr<_1ce00a832_FnIns>, jule::Ptr<_1ce00a832_FnIns>*);
inline jule::Slice<jule::Ptr<_1ce14cbc7_TypeKind>> _1ce00ba31_Types(_1ce00a832_FnIns*);
inline jule::Bool _1ce00bcb7_IsBuiltin(_1ce00a832_FnIns*);
inline jule::Bool _1ce00c04d_IsAnon(_1ce00a832_FnIns*);
inline jule::Bool _1ce00c38e_Same(_1ce00a832_FnIns*, jule::Ptr<_1ce00a832_FnIns>);
inline jule::Str _1ce00c6d0_GetKindStr(_1ce00a832_FnIns*, jule::Bool);
inline jule::Ptr<_1ce00da00_ReferenceStack> static__1ce00dcec_new(void);
inline jule::I32 _1ce00e1e8_Len(_1ce00da00_ReferenceStack*);
inline jule::Any _1ce00e539_At(_1ce00da00_ReferenceStack*, jule::I32);
inline void _1ce00e7e2_Push(_1ce00da00_ReferenceStack*, jule::Any);
inline jule::Bool _1e6b6110c_Exist(_1ce00da00_ReferenceStack*, jule::Ptr<_1ce00a832_FnIns>);
inline jule::Bool _1e6b75dad_Exist(_1ce00da00_ReferenceStack*, jule::Ptr<_1ce0b4105_Var>);
inline jule::Bool _1b86d62a9_Exist(_1ce00da00_ReferenceStack*, jule::Ptr<_1cdee571d_StructIns>);
inline jule::Bool _1b856cccd_Exist(_1ce00da00_ReferenceStack*, jule::Ptr<_1ce01ac0a_Trait>);
inline void _1ce015474_pushErr(_1ce0149c3_symbolBuilder*, jule::Ptr<_1cdeab4b4_Token>*, jule::Str, jule::Slice<jule::Any>);
inline void _1ce015c05_pushSuggestion(_1ce0149c3_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ce016101_checkCppUseDeclPath(_1ce0149c3_symbolBuilder*, jule::Ptr<_1cded9b96_UseDecl>*, jule::Str*);
inline jule::Ptr<_1ce06b0ac_ImportInfo> _1ce01640e_buildCppHeaderImport(_1ce0149c3_symbolBuilder*, jule::Ptr<_1cded9b96_UseDecl>*);
inline jule::Ptr<_1ce06b0ac_ImportInfo> _1ce016750_buildStdImport(_1ce0149c3_symbolBuilder*, jule::Ptr<_1cded9b96_UseDecl>*);
inline jule::Ptr<_1ce06b0ac_ImportInfo> _1ce016a91_buildIdentImport(jule::Ptr<_1ce0149c3_symbolBuilder>, jule::Ptr<_1cded9b96_UseDecl>*);
inline jule::Ptr<_1ce06b0ac_ImportInfo> _1ce016dd2_buildImport(jule::Ptr<_1ce0149c3_symbolBuilder>, jule::Ptr<_1cded9b96_UseDecl>*);
inline jule::Bool _1ce017223_checkDuplicateUseDecl(_1ce0149c3_symbolBuilder*, jule::Ptr<_1ce06b0ac_ImportInfo>*);
inline void _1ce017586_implImportSelections(_1ce0149c3_symbolBuilder*, jule::Ptr<_1ce06b0ac_ImportInfo>*, jule::Ptr<_1cded9b96_UseDecl>*);
inline jule::Str _1ce0178c7_getAsLinkPath(jule::Ptr<_1ce0149c3_symbolBuilder>, jule::Str);
inline void _1ce017ce5_pushCycleError(jule::Ptr<_1ce0149c3_symbolBuilder>, jule::Ptr<_1ce0149c3_symbolBuilder>*, jule::Str, _22ab0b88c_StrBuilder*);
inline void _1ce018213_pushCrossCycleError(jule::Ptr<_1ce0149c3_symbolBuilder>, jule::Ptr<_1ce0149c3_symbolBuilder>*, jule::Ptr<_1ce06b0ac_ImportInfo>*, jule::Ptr<_1cdeab4b4_Token>*);
inline jule::Bool _1ce01860e_checkImportCycles(jule::Ptr<_1ce0149c3_symbolBuilder>, jule::Ptr<_1ce06b0ac_ImportInfo>, jule::Ptr<_1cded9b96_UseDecl>*);
inline void _1ce018a2c_checkPackageAccessibility(_1ce0149c3_symbolBuilder*, jule::Ptr<_1cded9b96_UseDecl>*, jule::Str*, jule::Str*);
inline jule::Bool _1ce018e28_importPackage(jule::Ptr<_1ce0149c3_symbolBuilder>, jule::Ptr<_1ce06b0ac_ImportInfo>*, jule::Ptr<_1cded9b96_UseDecl>*);
inline jule::Ptr<_1ce06b0ac_ImportInfo> _1ce019269_importUseDecl(jule::Ptr<_1ce0149c3_symbolBuilder>, jule::Ptr<_1cded9b96_UseDecl>*);
inline void _1ce019467_importUseDecls(jule::Ptr<_1ce0149c3_symbolBuilder>);
inline void _1ce019720_appendNode(_1ce0149c3_symbolBuilder*, _1cdec0a8e_Node*);
inline void _1ce01991d_appendNodes(_1ce0149c3_symbolBuilder*);
inline void _1ce019bc6_pushDirectivePass(_1ce0149c3_symbolBuilder*, jule::Ptr<_1cdec0eac_Directive>*);
inline void _1ce019dc4_appendTopDirectives(_1ce0149c3_symbolBuilder*);
inline void _1ce01a0c2_build(jule::Ptr<_1ce0149c3_symbolBuilder>);
inline jule::Str _1ce01b0c3_Str(_1ce01ac0a_Trait*);
inline jule::Bool _1ce01b414_Equal(jule::Ptr<_1ce01ac0a_Trait>, jule::Ptr<_1ce14cbc7_TypeKind>);
inline jule::Ptr<_1ce00792d_Fn> _1ce01b8a9_FindMethod(_1ce01ac0a_Trait*, jule::Str);
inline jule::Ptr<_1ce00792d_Fn> _1ce01c03b_findMethodInherit(_1ce01ac0a_Trait*, jule::Str*);
inline jule::Bool _1ce01cc51_AutoExpr(_1ce01c899_EnumItem*);
inline jule::Str _1ce01d78a_Str(_1ce01d416_Enum*);
inline jule::Bool _1ce01dacb_Equal(jule::Ptr<_1ce01d416_Enum>, jule::Ptr<_1ce14cbc7_TypeKind>);
inline jule::Ptr<_1ce01c899_EnumItem> _1ce01e00a_FindItem(_1ce01d416_Enum*, jule::Str);
inline jule::Str _1ce01ee62_Str(_1ce01eb21_TypeEnum*);
inline jule::Bool _1ce0202a3_Equal(jule::Ptr<_1ce01eb21_TypeEnum>, jule::Ptr<_1ce14cbc7_TypeKind>);
inline jule::Ptr<_1ce01e549_TypeEnumItem> _1ce0206d2_FindItem(_1ce01eb21_TypeEnum*, jule::Str);
inline jule::Str _1ce0230ec_Str(_1ce022c78_comptimeRange*);
inline jule::Bool _1ce02343d_Equal(jule::Ptr<_1ce022c78_comptimeRange>, jule::Ptr<_1ce14cbc7_TypeKind>);
inline jule::Str _1ce023b14_Str(_1ce02374b_comptimeStructField*);
inline jule::Bool _1ce023e55_Equal(jule::Ptr<_1ce02374b_comptimeStructField>, jule::Ptr<_1ce14cbc7_TypeKind>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce0244e9__Name(jule::Ptr<_1ce02374b_comptimeStructField>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce0248e5__Type(jule::Ptr<_1ce02374b_comptimeStructField>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce024ce1__Public(jule::Ptr<_1ce02374b_comptimeStructField>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce0250ee_subIdent(jule::Ptr<_1ce02374b_comptimeStructField>, jule::Str*);
inline jule::Str _1ce025781_Str(_1ce02540c_comptimeStructFields*);
inline jule::Bool _1ce025ac2_Equal(jule::Ptr<_1ce02540c_comptimeStructFields>, jule::Ptr<_1ce14cbc7_TypeKind>);
inline void _1ce026045_ready(_1ce02540c_comptimeStructFields*, jule::Ptr<_1ce0b4105_Var>*, jule::Ptr<_1ce0b4105_Var>*);
inline void _1ce026463_step(_1ce02540c_comptimeStructFields*, jule::I32, jule::Ptr<_1ce0b4105_Var>*, jule::Ptr<_1ce0b4105_Var>*);
inline jule::I32 _1ce0266e9_len(_1ce02540c_comptimeStructFields*);
inline jule::Str _1ce026d7b_Str(_1ce026a07_comptimeStatic*);
inline jule::Bool _1ce0271bc_Equal(jule::Ptr<_1ce026a07_comptimeStatic>, jule::Ptr<_1ce14cbc7_TypeKind>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce0277e9__Name(jule::Ptr<_1ce026a07_comptimeStatic>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce027be5__Type(jule::Ptr<_1ce026a07_comptimeStatic>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce0280e1__Public(jule::Ptr<_1ce026a07_comptimeStatic>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce028432_subIdent(jule::Ptr<_1ce026a07_comptimeStatic>, jule::Str*);
inline jule::Str _1ce028a3c_Str(_1ce0286b8_comptimeStatics*);
inline jule::Bool _1ce028d7d_Equal(jule::Ptr<_1ce0286b8_comptimeStatics>, jule::Ptr<_1ce14cbc7_TypeKind>);
inline void _1ce029301_ready(_1ce0286b8_comptimeStatics*, jule::Ptr<_1ce0b4105_Var>*, jule::Ptr<_1ce0b4105_Var>*);
inline void _1ce02971e_step(_1ce0286b8_comptimeStatics*, jule::I32, jule::Ptr<_1ce0b4105_Var>*, jule::Ptr<_1ce0b4105_Var>*);
inline jule::I32 _1ce0299a5_len(_1ce0286b8_comptimeStatics*);
inline jule::Str _1ce02a247_Str(_1ce029cb3_comptimeEnumField*);
inline jule::Bool _1ce02a588_Equal(jule::Ptr<_1ce029cb3_comptimeEnumField>, jule::Ptr<_1ce14cbc7_TypeKind>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce02aa0b__Name(jule::Ptr<_1ce029cb3_comptimeEnumField>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce02ad4c_subIdent(jule::Ptr<_1ce029cb3_comptimeEnumField>, jule::Str*);
inline jule::Str _1ce02b4ce_Str(_1ce02b15a_comptimeEnumFields*);
inline jule::Bool _1ce02b820_Equal(jule::Ptr<_1ce02b15a_comptimeEnumFields>, jule::Ptr<_1ce14cbc7_TypeKind>);
inline void _1ce02bc93_ready(_1ce02b15a_comptimeEnumFields*, jule::Ptr<_1ce0b4105_Var>*, jule::Ptr<_1ce0b4105_Var>*);
inline void _1ce02c1b1_step(_1ce02b15a_comptimeEnumFields*, jule::I32, jule::Ptr<_1ce0b4105_Var>*, jule::Ptr<_1ce0b4105_Var>*);
inline jule::I32 _1ce02c447_len(_1ce02b15a_comptimeEnumFields*);
inline jule::Str _1ce02cac9_Str(_1ce02c755_comptimeParam*);
inline jule::Bool _1ce02ce1a_Equal(jule::Ptr<_1ce02c755_comptimeParam>, jule::Ptr<_1ce14cbc7_TypeKind>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce02d679__Name(jule::Ptr<_1ce02c755_comptimeParam>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce02da75__Type(jule::Ptr<_1ce02c755_comptimeParam>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce02de71__Variadic(jule::Ptr<_1ce02c755_comptimeParam>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce02e36c__Reference(jule::Ptr<_1ce02c755_comptimeParam>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce02e6ad_subIdent(jule::Ptr<_1ce02c755_comptimeParam>, jule::Str*);
inline jule::Str _1ce02ec30_Str(_1ce02e8de_comptimeParams*);
inline jule::Bool _1ce030071_Equal(jule::Ptr<_1ce02e8de_comptimeParams>, jule::Ptr<_1ce14cbc7_TypeKind>);
inline void _1ce0304e4_ready(_1ce02e8de_comptimeParams*, jule::Ptr<_1ce0b4105_Var>*, jule::Ptr<_1ce0b4105_Var>*);
inline void _1ce030912_step(_1ce02e8de_comptimeParams*, jule::I32, jule::Ptr<_1ce0b4105_Var>*, jule::Ptr<_1ce0b4105_Var>*);
inline jule::I32 _1ce030b98_len(_1ce02e8de_comptimeParams*);
inline jule::Str _1ce03132a_Str(_1ce030ea6_comptimeTypeInfos*);
inline jule::Bool _1ce03166b_Equal(jule::Ptr<_1ce030ea6_comptimeTypeInfos>, jule::Ptr<_1ce14cbc7_TypeKind>);
inline void _1ce031ade_ready(_1ce030ea6_comptimeTypeInfos*, jule::Ptr<_1ce0b4105_Var>*, jule::Ptr<_1ce0b4105_Var>*);
inline void _1ce03200c_step(_1ce030ea6_comptimeTypeInfos*, jule::I32, jule::Ptr<_1ce0b4105_Var>*, jule::Ptr<_1ce0b4105_Var>*);
inline jule::I32 _1ce032293_len(_1ce030ea6_comptimeTypeInfos*);
inline jule::Str _1ce032925_Str(_1ce0325a1_comptimeTypeInfo*);
inline jule::Bool _1ce032c66_Equal(jule::Ptr<_1ce0325a1_comptimeTypeInfo>, jule::Ptr<_1ce14cbc7_TypeKind>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce0333b5__Str(jule::Ptr<_1ce0325a1_comptimeTypeInfo>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce0337b1__Kind(jule::Ptr<_1ce0325a1_comptimeTypeInfo>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce033bac__Bits(jule::Ptr<_1ce0325a1_comptimeTypeInfo>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce0340a8__Elem(jule::Ptr<_1ce0325a1_comptimeTypeInfo>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce0344a4__Size(jule::Ptr<_1ce0325a1_comptimeTypeInfo>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce0348a0__Key(jule::Ptr<_1ce0325a1_comptimeTypeInfo>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce034c9b__Value(jule::Ptr<_1ce0325a1_comptimeTypeInfo>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce035197__Fields(jule::Ptr<_1ce0325a1_comptimeTypeInfo>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce035593__Statics(jule::Ptr<_1ce0325a1_comptimeTypeInfo>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce03598e__Public(jule::Ptr<_1ce0325a1_comptimeTypeInfo>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce035d8a__Binded(jule::Ptr<_1ce0325a1_comptimeTypeInfo>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce036286__Ordered(jule::Ptr<_1ce0325a1_comptimeTypeInfo>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce036682__Comparable(jule::Ptr<_1ce0325a1_comptimeTypeInfo>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce036a7d__Mutable(jule::Ptr<_1ce0325a1_comptimeTypeInfo>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce036e79__Types(jule::Ptr<_1ce0325a1_comptimeTypeInfo>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce037375__Exceptional(jule::Ptr<_1ce0325a1_comptimeTypeInfo>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce037771__CanNil(jule::Ptr<_1ce0325a1_comptimeTypeInfo>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce037b6c__RC(jule::Ptr<_1ce0325a1_comptimeTypeInfo>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce038068__Result(jule::Ptr<_1ce0325a1_comptimeTypeInfo>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce038464__Params(jule::Ptr<_1ce0325a1_comptimeTypeInfo>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce0387a5_subIdent(jule::Ptr<_1ce0325a1_comptimeTypeInfo>, jule::Str*);
inline jule::Str _1ce038e37_Str(_1ce038ab3_comptimeValue*);
inline jule::Bool _1ce039278_Equal(jule::Ptr<_1ce038ab3_comptimeValue>, jule::Ptr<_1ce14cbc7_TypeKind>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce0397c8__Unwrap(jule::Ptr<_1ce038ab3_comptimeValue>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce039bc4__Type(jule::Ptr<_1ce038ab3_comptimeValue>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce03a0c0__Lvalue(jule::Ptr<_1ce038ab3_comptimeValue>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce03a4bb__Mutable(jule::Ptr<_1ce038ab3_comptimeValue>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce03a8b7__Const(jule::Ptr<_1ce038ab3_comptimeValue>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce03acb3__Field(jule::Ptr<_1ce038ab3_comptimeValue>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce03b104_subIdent(jule::Ptr<_1ce038ab3_comptimeValue>, jule::Str*);
inline jule::Str _1ce03b786_Str(_1ce03b412_comptimeFiles*);
inline jule::Bool _1ce03bac7_Equal(jule::Ptr<_1ce03b412_comptimeFiles>, jule::Ptr<_1ce14cbc7_TypeKind>);
inline void _1ce03c04a_ready(_1ce03b412_comptimeFiles*, jule::Ptr<_1ce0b4105_Var>*, jule::Ptr<_1ce0b4105_Var>*);
inline void _1ce03c468_step(_1ce03b412_comptimeFiles*, jule::I32, jule::Ptr<_1ce0b4105_Var>*, jule::Ptr<_1ce0b4105_Var>*);
inline jule::I32 _1ce03c6ee_len(_1ce03b412_comptimeFiles*);
inline jule::Str _1ce03d0b2_Str(_1ce03ca0c_comptimeFile*);
inline jule::Bool _1ce03d403_Equal(jule::Ptr<_1ce03ca0c_comptimeFile>, jule::Ptr<_1ce14cbc7_TypeKind>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce03d810__Path(jule::Ptr<_1ce03ca0c_comptimeFile>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce03dc0b__Name(jule::Ptr<_1ce03ca0c_comptimeFile>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce03e107__Dir(jule::Ptr<_1ce03ca0c_comptimeFile>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce03e448_subIdent(jule::Ptr<_1ce03ca0c_comptimeFile>, jule::Str*);
inline jule::Fn<jule::Bool(jule::Ptr<_1ce08b42e_Sema>*,jule::Slice<jule::Ptr<_1ce14bdd5_TypeAlias>>*)> _1ce042418_readyFn(jule::Ptr<_1ce04201c_constraintChecker>);
inline jule::Bool _1ce04269e_readyFi(jule::Ptr<_1ce04201c_constraintChecker>);
inline jule::Bool _1ce042935_readySi(jule::Ptr<_1ce04201c_constraintChecker>);
inline jule::Bool _1ce042bbb_ready(jule::Ptr<_1ce04201c_constraintChecker>);
inline jule::Bool _1ce042e52_check(jule::Ptr<_1ce04201c_constraintChecker>);
inline jule::Bool _1ce044739_IsTraitImpl(_1ce044371_Impl*);
inline jule::Bool _1ce0449c0_IsStructImpl(_1ce044371_Impl*);
inline jule::Ptr<_1ce06b0ac_ImportInfo> _1ce052071_SelectPackage(_1ce051acb_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1ce06b0ac_ImportInfo>)>);
inline jule::Ptr<_1ce0b4105_Var> _1ce05246c_FindVar(_1ce051acb_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1ce14bdd5_TypeAlias> _1ce052868_FindTypeAlias(_1ce051acb_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1cdee2990_Struct> _1ce052c64_FindStruct(_1ce051acb_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1ce00792d_Fn> _1ce053160_FindFn(_1ce051acb_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1ce01ac0a_Trait> _1ce0534a1_FindTrait(_1ce051acb_scopeChecker*, jule::Str);
inline jule::Ptr<_1ce01d416_Enum> _1ce0537e2_FindEnum(_1ce051acb_scopeChecker*, jule::Str);
inline jule::Ptr<_1ce01eb21_TypeEnum> _1ce053b33_FindTypeEnum(_1ce051acb_scopeChecker*, jule::Str);
inline jule::Bool _1ce053e85_isUnsafe(jule::Ptr<_1ce051acb_scopeChecker>);
inline jule::Bool _1ce05421b_isRoot(_1ce051acb_scopeChecker*);
inline void _1ce054419_stop(_1ce051acb_scopeChecker*);
inline jule::Bool _1ce0546a0_stopped(_1ce051acb_scopeChecker*);
inline jule::Bool _1ce054936_isDeferred(jule::Ptr<_1ce051acb_scopeChecker>);
inline jule::Ptr<_1ce051acb_scopeChecker> _1ce054bbc_getRoot(jule::Ptr<_1ce051acb_scopeChecker>);
inline jule::Ptr<_1ce051acb_scopeChecker> _1ce054e53_getHardRoot(jule::Ptr<_1ce051acb_scopeChecker>);
inline jule::Ptr<_1ce04c16a_Label> _1ce055294_findLabel(_1ce051acb_scopeChecker*, jule::Str*);
inline jule::Ptr<_1ce050635_scopeLabel> _1ce0555d5_findLabelScope(jule::Ptr<_1ce051acb_scopeChecker>, jule::Str*);
inline jule::Ptr<_1ce050635_scopeLabel> _1ce055926_findLabelAll(_1ce051acb_scopeChecker*, jule::Str*);
inline jule::Bool _1ce055d22_isDuplicatedIdent(_1ce051acb_scopeChecker*, jule::Uintptr, jule::Str*);
inline void _1ce0560ca_checkVarDecl(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1cded490a_VarDecl>);
inline void _1ce056383_checkTypeAlias(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1ce14bdd5_TypeAlias>*);
inline void _1ce05663b_checkTypeAliasDecl(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1cded85ac_TypeAliasDecl>);
inline jule::Ptr<_1ce0497c7_Scope> _1ce0568c2_getChild(_1ce051acb_scopeChecker*);
inline void _1ce056ce0_checkChildSsc(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1cded1ab1_ScopeTree>*, jule::Ptr<_1ce0497c7_Scope>*, jule::Ptr<_1ce051acb_scopeChecker>*);
inline jule::Ptr<_1ce0497c7_Scope> _1ce0571db_checkChildSc(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1cded1ab1_ScopeTree>*, jule::Ptr<_1ce051acb_scopeChecker>*);
inline jule::Ptr<_1ce0497c7_Scope> _1ce05752c_checkChild(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1cded1ab1_ScopeTree>*);
inline void _1ce0577d5_checkAnonScope(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1cded1ab1_ScopeTree>);
inline void _1ce057b48_processErrorCall(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1ce0033b8_BuiltinErrorCallExprModel>*, jule::Ptr<_1cdeab4b4_Token>);
inline void _1ce057e01_checkExpr(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1cdec5dc4_Expr>);
inline jule::Ptr<_1ce049be5_If> _1ce058242_checkIf(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1cded74e0_If>);
inline jule::Ptr<_1ce049ee2_Else> _1ce058583_checkElse(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1cded78b9_Else>);
inline void _1ce05883b_checkConditional(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1cded7d70_Conditional>);
inline void _1ce058d14_checkIterScopeSsc(jule::Ptr<_1ce051acb_scopeChecker>, jule::Uintptr, jule::Ptr<_1cded1ab1_ScopeTree>, jule::Ptr<_1ce0497c7_Scope>*, jule::Ptr<_1ce051acb_scopeChecker>);
inline jule::Ptr<_1ce0497c7_Scope> _1ce0592ba_checkIterScopeSc(jule::Ptr<_1ce051acb_scopeChecker>, jule::Uintptr, jule::Ptr<_1cded1ab1_ScopeTree>, jule::Ptr<_1ce051acb_scopeChecker>);
inline jule::Ptr<_1ce0497c7_Scope> _1ce0596b6_checkIterScope(jule::Ptr<_1ce051acb_scopeChecker>, jule::Uintptr, jule::Ptr<_1cded1ab1_ScopeTree>*);
inline void _1ce05996e_checkInfIter(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1cded5554_Iter>*);
inline void _1ce059c27_checkWhileIter(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1cded5554_Iter>*);
inline void _1ce05a145_checkComptimeRangeIter(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1cded5554_Iter>*, jule::Ptr<_1ce04b60e_RangeIter>*, jule::Ptr<_1ce11bc0c_Data>*);
inline void _1ce05a3ed_checkRangeIter(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1cded5554_Iter>*);
inline void _1ce05a6a6_checkIter(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1cded5554_Iter>);
inline jule::Bool _1ce05a9e7_checkValidContLabel(jule::Ptr<_1ce051acb_scopeChecker>, jule::Uintptr);
inline jule::Bool _1ce05ad38_checkValidBreakLabel(jule::Ptr<_1ce051acb_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_1ce04b994_ContSt> _1ce05b179_checkContValidScope(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1cded7039_ContSt>);
inline void _1ce05b432_checkCont(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1cded7039_ContSt>);
inline void _1ce05b6da_checkLabel(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1cdece174_LabelSt>);
inline void _1ce05b993_pushGoto(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1cdece54d_GotoSt>);
inline void _1ce05bc4b_checkPostfix(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1cded053d_AssignSt>);
inline jule::Bool _1ce05c08c_isNewAssignIdent(_1ce051acb_scopeChecker*, jule::Str);
inline void _1ce05c345_removeInteriorMutRisk(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Bool _1ce05c7eb_checkStructureAssignOp(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1cdee571d_StructIns>*, jule::Ptr<_1cded053d_AssignSt>*, jule::Ptr<_1ce11bc0c_Data>*);
inline void _1ce05caa4_checkSingleAssign(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1cded053d_AssignSt>*);
inline void _1ce05d137_processEndPartOfMultiAssign(_1ce051acb_scopeChecker*, jule::Ptr<_1ce04d29d_MultiAssign>*, jule::Ptr<_1cded053d_AssignSt>*, jule::Ptr<_1cdeceeaa_AssignLeft>*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1ce11bc0c_Data>*);
inline void _1ce05d3e0_checkMultiAssign(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1cded053d_AssignSt>*);
inline void _1ce05d698_checkAssignSt(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1cded053d_AssignSt>);
inline jule::Ptr<_1ce0497c7_Scope> _1ce05da94_checkCaseScope(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1ce04e436_Case>*, jule::Ptr<_1cded1ab1_ScopeTree>*);
inline jule::Ptr<_1ce04e436_Case> _1ce05e105_checkCase(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1ce04d90d_Match>, jule::I32, jule::Ptr<_1cded8a63_Case>, jule::Ptr<_1ce11bc0c_Data>);
inline void _1ce05e523_checkCases(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1cded937c_MatchCase>*, jule::Ptr<_1ce04d90d_Match>, jule::Ptr<_1ce11bc0c_Data>);
inline jule::Ptr<_1ce04e436_Case> _1ce05e91e_checkDefault(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1ce04d90d_Match>, jule::Ptr<_1cded78b9_Else>);
inline void _1ce05ec82_checkComptimePanic(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1cdeab4b4_Token>, jule::Ptr<_1ce0497c7_Scope>*);
inline void _1ce0600e5_processConstMatch(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1ce04d90d_Match>*, jule::Ptr<_1cded937c_MatchCase>*);
inline void _1ce06039d_checkTypeMatch(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1cded937c_MatchCase>*);
inline void _1ce060656_checkCommonMatch(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1cded937c_MatchCase>*);
inline void _1ce06090e_checkMatch(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1cded937c_MatchCase>);
inline void _1ce060bb7_checkFall(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1cdece84a_FallSt>);
inline jule::Ptr<_1ce04bd6d_BreakSt> _1ce061008_checkBreakWithLabel(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1cded6b60_BreakSt>);
inline jule::Ptr<_1ce04bd6d_BreakSt> _1ce061349_checkPlainBreak(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1cded6b60_BreakSt>);
inline void _1ce061602_checkBreak(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1cded6b60_BreakSt>);
inline void _1ce0618aa_checkRet(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1cded4cd4_RetSt>);
inline void _1ce061b63_checkUseExpr(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1cdec6798_UseExpr>);
inline void _1ce061e1b_checkNode(jule::Ptr<_1ce051acb_scopeChecker>, jule::Any*);
inline void _1ce062119_checkResult(jule::Ptr<_1ce051acb_scopeChecker>);
inline void _1ce062317_checkTree(jule::Ptr<_1ce051acb_scopeChecker>);
inline void _1ce06267a_checkGoto(_1ce051acb_scopeChecker*, jule::Ptr<_1ce050bb8_scopeGoto>*, jule::Ptr<_1ce050635_scopeLabel>*);
inline void _1ce062878_checkGotos(_1ce051acb_scopeChecker*);
inline void _1ce062a76_checkLabels(_1ce051acb_scopeChecker*);
inline void _1ce062c74_checkVars(_1ce051acb_scopeChecker*);
inline void _1ce062e72_checkAliases(_1ce051acb_scopeChecker*);
inline void _1ce0632d5_check(jule::Ptr<_1ce051acb_scopeChecker>, jule::Ptr<_1cded1ab1_ScopeTree>*, jule::Ptr<_1ce0497c7_Scope>*);
inline jule::Ptr<_1ce051acb_scopeChecker> _1ce06356b_newChildChecker(jule::Ptr<_1ce051acb_scopeChecker>);
inline void _1ce06501d_checkCdef(_1ce064b11_directiveChecker*, jule::Ptr<_1cdec0eac_Directive>*);
inline void _1ce0652c6_checkTypedef(_1ce064b11_directiveChecker*, jule::Ptr<_1cdec0eac_Directive>*);
inline void _1ce06557e_checkNamespace(_1ce064b11_directiveChecker*, jule::Ptr<_1cdec0eac_Directive>*);
inline void _1ce065837_checkDeprecated(_1ce064b11_directiveChecker*, jule::Ptr<_1cdec0eac_Directive>*);
inline void _1ce065ae0_checkTest(_1ce064b11_directiveChecker*, jule::Ptr<_1cdec0eac_Directive>*);
inline void _1ce065d98_checkDirective(_1ce064b11_directiveChecker*, jule::Ptr<_1cdec0eac_Directive>*);
inline void _1ce066096_check(_1ce064b11_directiveChecker*);
inline jule::Ptr<_1ce06b0ac_ImportInfo> _1ce06b596_SelectPackage(_1ce06b0ac_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1ce06b0ac_ImportInfo>)>);
inline jule::Ptr<_1ce0b4105_Var> _1ce06b992_FindVar(_1ce06b0ac_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1ce14bdd5_TypeAlias> _1ce06bd8d_FindTypeAlias(_1ce06b0ac_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1cdee2990_Struct> _1ce06c289_FindStruct(_1ce06b0ac_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1ce00792d_Fn> _1ce06c685_FindFn(_1ce06b0ac_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1ce01ac0a_Trait> _1ce06c9c6_FindTrait(_1ce06b0ac_ImportInfo*, jule::Str);
inline jule::Ptr<_1ce01d416_Enum> _1ce06cd17_FindEnum(_1ce06b0ac_ImportInfo*, jule::Str);
inline jule::Ptr<_1ce01eb21_TypeEnum> _1ce06d158_FindTypeEnum(_1ce06b0ac_ImportInfo*, jule::Str);
inline jule::Bool _1ce06d5ed_isLookupable(_1ce06b0ac_ImportInfo*, jule::Str*);
inline jule::Bool _1ce06d93e_existIdent(_1ce06b0ac_ImportInfo*, jule::Str);
inline jule::Bool _1ce06dbc5_isAccessibleViaSelection(_1ce06b0ac_ImportInfo*);
inline jule::Ptr<_1ce06b0ac_ImportInfo> _1ce06e478_SelectPackage(_1ce06ded3_Package*, jule::Fn<jule::Bool(jule::Ptr<_1ce06b0ac_ImportInfo>)>);
inline jule::Ptr<_1ce0b4105_Var> _1ce06e874_FindVar(_1ce06ded3_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1ce14bdd5_TypeAlias> _1ce06ec70_FindTypeAlias(_1ce06ded3_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1cdee2990_Struct> _1ce07016b_FindStruct(_1ce06ded3_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1ce00792d_Fn> _1ce070567_FindFn(_1ce06ded3_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1ce01ac0a_Trait> _1ce0708a8_FindTrait(_1ce06ded3_Package*, jule::Str);
inline jule::Ptr<_1ce01d416_Enum> _1ce070be9_FindEnum(_1ce06ded3_Package*, jule::Str);
inline jule::Ptr<_1ce01eb21_TypeEnum> _1ce07103a_FindTypeEnum(_1ce06ded3_Package*, jule::Str);
inline jule::Ptr<_1ce0325a1_comptimeTypeInfo> _1ce08ac69_pushComptimeTypeInfo(_1ce08a829_commonSemaMeta*, jule::Ptr<_1ce14cbc7_TypeKind>*);
inline jule::Ptr<_1ce06b0ac_ImportInfo> _1ce08b8c4_SelectPackage(_1ce08b42e_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1ce06b0ac_ImportInfo>)>);
inline jule::Ptr<_1ce0b4105_Var> _1ce08bcc0_FindVar(_1ce08b42e_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1ce14bdd5_TypeAlias> _1ce0920e4_FindTypeAlias(_1ce08b42e_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1cdee2990_Struct> _1ce092424_FindStruct(_1ce08b42e_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1ce00792d_Fn> _1ce092820_FindFn(_1ce08b42e_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1ce01ac0a_Trait> _1ce092b61_FindTrait(_1ce08b42e_Sema*, jule::Str);
inline jule::Ptr<_1ce01d416_Enum> _1ce092ea2_FindEnum(_1ce08b42e_Sema*, jule::Str);
inline jule::Ptr<_1ce01eb21_TypeEnum> _1ce0932e3_FindTypeEnum(_1ce08b42e_Sema*, jule::Str);
inline jule::Bool _1ce093700_isFlag(_1ce08b42e_Sema*, jule::I32);
inline void _1ce0939a8_setCurrentFile(_1ce08b42e_Sema*, jule::Ptr<_1ce116894_SymbolTable>);
inline void _1ce093dc6_pushErr(_1ce08b42e_Sema*, jule::Ptr<_1cdeab4b4_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ce094239_pushSuggestion(_1ce08b42e_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ce094635_isAccessibleDefine(_1ce08b42e_Sema*, jule::Bool, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Bool _1ce094adb_isDuplicatedIdent(_1ce08b42e_Sema*, jule::Uintptr, jule::Str*, jule::Bool);
inline void _1ce094e4e_checkDirectives(jule::Ptr<_1ce08b42e_Sema>, jule::Slice<jule::Ptr<_1cdec0eac_Directive>>*, jule::Any);
inline jule::Bool _1ce095405_checkGenericQuantity(_1ce08b42e_Sema*, jule::I32, jule::I32, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Bool _1ce095801_isDuplicatedImportSelection(_1ce08b42e_Sema*, jule::Uintptr, jule::Str*);
inline jule::Any _1ce095bec_getImportDef(_1ce08b42e_Sema*, jule::Str*, jule::Ptr<_1ce06b0ac_ImportInfo>*);
inline jule::Bool _1b7cc7ea6_checkImportSelection(_1ce08b42e_Sema*, jule::Ptr<_1cdeab4b4_Token>*, jule::Ptr<_1ce0b4105_Var>*);
inline jule::Bool _1b7ccc2a7_checkImportSelection(_1ce08b42e_Sema*, jule::Ptr<_1cdeab4b4_Token>*, jule::Ptr<_1ce14bdd5_TypeAlias>*);
inline jule::Bool _1b7cd1542_checkImportSelection(_1ce08b42e_Sema*, jule::Ptr<_1cdeab4b4_Token>*, jule::Ptr<_1cdee2990_Struct>*);
inline jule::Bool _1b7cd5a96_checkImportSelection(_1ce08b42e_Sema*, jule::Ptr<_1cdeab4b4_Token>*, jule::Ptr<_1ce01ac0a_Trait>*);
inline jule::Bool _1b7cd9d31_checkImportSelection(_1ce08b42e_Sema*, jule::Ptr<_1cdeab4b4_Token>*, jule::Ptr<_1ce01d416_Enum>*);
inline jule::Bool _1b7cde0bb_checkImportSelection(_1ce08b42e_Sema*, jule::Ptr<_1cdeab4b4_Token>*, jule::Ptr<_1ce01eb21_TypeEnum>*);
inline jule::Bool _1b7ce3356_checkImportSelection(_1ce08b42e_Sema*, jule::Ptr<_1cdeab4b4_Token>*, jule::Ptr<_1ce00792d_Fn>*);
inline jule::Bool _1ce096439_checkImportSelectedSelections(_1ce08b42e_Sema*, jule::Ptr<_1ce06b0ac_ImportInfo>*);
inline jule::Bool _1b7ce7b30_checkImportsAllSelectionsFromCollection(_1ce08b42e_Sema*, jule::Slice<jule::Ptr<_1ce0b4105_Var>>*, jule::Ptr<_1cdeab4b4_Token>*);
inline jule::Bool _1b7ce8cb8_checkImportsAllSelectionsFromCollection(_1ce08b42e_Sema*, jule::Slice<jule::Ptr<_1ce14bdd5_TypeAlias>>*, jule::Ptr<_1cdeab4b4_Token>*);
inline jule::Bool _1b7ceb518_checkImportsAllSelectionsFromCollection(_1ce08b42e_Sema*, jule::Slice<jule::Ptr<_1cdee2990_Struct>>*, jule::Ptr<_1cdeab4b4_Token>*);
inline jule::Bool _1b7ceccbc_checkImportsAllSelectionsFromCollection(_1ce08b42e_Sema*, jule::Slice<jule::Ptr<_1ce00792d_Fn>>*, jule::Ptr<_1cdeab4b4_Token>*);
inline jule::Bool _1b8228318_checkImportsAllSelectionsFromCollection(_1ce08b42e_Sema*, jule::Slice<jule::Ptr<_1ce01ac0a_Trait>>*, jule::Ptr<_1cdeab4b4_Token>*);
inline jule::Bool _1b822aa8a_checkImportsAllSelectionsFromCollection(_1ce08b42e_Sema*, jule::Slice<jule::Ptr<_1ce01d416_Enum>>*, jule::Ptr<_1cdeab4b4_Token>*);
inline jule::Bool _1b822d241_checkImportsAllSelectionsFromCollection(_1ce08b42e_Sema*, jule::Slice<jule::Ptr<_1ce01eb21_TypeEnum>>*, jule::Ptr<_1cdeab4b4_Token>*);
inline jule::Bool _1ce096b76_checkImportAllSelections(_1ce08b42e_Sema*, jule::Ptr<_1ce06b0ac_ImportInfo>*);
inline jule::Bool _1ce096eb7_checkImportSelections(_1ce08b42e_Sema*, jule::Ptr<_1ce06b0ac_ImportInfo>*);
inline jule::Bool _1ce097308_isUseAliasDuplication(_1ce08b42e_Sema*, jule::Ptr<_1ce06b0ac_ImportInfo>*);
inline jule::Bool _1ce097649_checkImport(_1ce08b42e_Sema*, jule::Ptr<_1ce06b0ac_ImportInfo>*);
inline void _1ce097847_checkImports(_1ce08b42e_Sema*);
inline void _1ce097a45_implFileImpls(jule::Ptr<_1ce08b42e_Sema>);
inline void _1ce097c43_implImpls(jule::Ptr<_1ce08b42e_Sema>);
inline void _1ce097e41_checkEnums(jule::Ptr<_1ce08b42e_Sema>);
inline void _1ce09813e_checkFileInherits(jule::Ptr<_1ce08b42e_Sema>);
inline void _1ce09833c_checkInherits(jule::Ptr<_1ce08b42e_Sema>);
inline _1ce15ea85_typeChecker _1ce0987e3_typeChecker(jule::Ptr<_1ce08b42e_Sema>, jule::Trait<_1ce16c7b8_Lookup>, jule::Slice<jule::Ptr<_1ce14bdd5_TypeAlias>>, jule::Ptr<_1ce15da95_referencer>);
inline jule::Ptr<_1ce14cbc7_TypeKind> _1ce098d54_buildTypeWithRefers(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1cdec1a90_TypeDecl>*, jule::Trait<_1ce16c7b8_Lookup>, jule::Slice<jule::Ptr<_1ce14bdd5_TypeAlias>>, jule::Ptr<_1ce15da95_referencer>);
inline jule::Bool _1ce0993b5_checkTypeWithRefers(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce154d99_TypeSymbol>*, jule::Trait<_1ce16c7b8_Lookup>, jule::Slice<jule::Ptr<_1ce14bdd5_TypeAlias>>, jule::Ptr<_1ce15da95_referencer>);
inline jule::Ptr<_1ce04201c_constraintChecker> _1ce09964b_constraintChecker(jule::Ptr<_1ce08b42e_Sema>);
inline jule::Bool _1ce099a47_checkType(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce154d99_TypeSymbol>*, jule::Trait<_1ce16c7b8_Lookup>);
inline jule::Ptr<_1ce14cbc7_TypeKind> _1ce099eed_buildTypeWithGenerics(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1cdec1a90_TypeDecl>*, jule::Slice<jule::Ptr<_1ce14bdd5_TypeAlias>>, jule::Ptr<_1ce00da00_ReferenceStack>);
inline jule::Ptr<_1ce14cbc7_TypeKind> _1ce09a680_selectType(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1cdec1a90_TypeDecl>*);
inline jule::Ptr<_1ce11d934_Eval> _1ce09ab36_evalpd(jule::Ptr<_1ce08b42e_Sema>, jule::Trait<_1ce16c7b8_Lookup>, jule::Ptr<_1ce14cbc7_TypeKind>, jule::Ptr<_1ce0b4105_Var>);
inline jule::Ptr<_1ce11d934_Eval> _1ce09b032_evalp(jule::Ptr<_1ce08b42e_Sema>, jule::Trait<_1ce16c7b8_Lookup>, jule::Ptr<_1ce14cbc7_TypeKind>);
inline jule::Ptr<_1ce11d934_Eval> _1ce09b373_eval(jule::Ptr<_1ce08b42e_Sema>, jule::Trait<_1ce16c7b8_Lookup>);
inline jule::Bool _1ce09b8d4_checkAssignType(jule::Ptr<_1ce08b42e_Sema>, jule::Bool, jule::Ptr<_1ce14cbc7_TypeKind>*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Bool _1ce09bd8a__checkTypeCompatibility(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce14cbc7_TypeKind>*, jule::Ptr<_1ce14cbc7_TypeKind>*, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Bool _1ce09c341_checkTypeCompatibility(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce14cbc7_TypeKind>*, jule::Ptr<_1ce14cbc7_TypeKind>*, jule::Ptr<_1cdeab4b4_Token>*);
inline void _1ce09c75e_pushCompatiblityError(_1ce08b42e_Sema*, jule::Ptr<_1ce14cbc7_TypeKind>*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1cdeab4b4_Token>*);
inline jule::Bool _1ce09cc15_checkTypeCompatibility1(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce14cbc7_TypeKind>*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1cdeab4b4_Token>*);
inline jule::Ptr<_1ce14cbc7_TypeKind> _1ce09d1bb_buildNonGenericTypeKind(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1cdec1a90_TypeDecl>*, jule::Slice<jule::Ptr<_1cdecdc9a_GenericDecl>>*, jule::Slice<jule::Ptr<_1ce14cbc7_TypeKind>>*);
inline jule::Bool _1ce09d5b7_buildFnNonGenericTypeKinds(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce00a832_FnIns>*, jule::Slice<jule::Ptr<_1ce14cbc7_TypeKind>>*);
inline jule::Ptr<_1ce00a832_FnIns> _1ce09d908_getTraitCheckFnKind(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce00792d_Fn>*);
inline jule::Bool _1ce09ddae_checkConstraintsFn(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce00a832_FnIns>*, jule::Ptr<_1cdeab4b4_Token>*, jule::Ptr<_1ce00a832_FnIns>);
inline jule::Bool _1ce09e365_checkConstraintsStruct(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1cdee571d_StructIns>*, jule::Ptr<_1cdeab4b4_Token>*, jule::Ptr<_1cdee571d_StructIns>);
inline jule::Bool _1ce09e761_fnEnvironment(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce00a832_FnIns>*, jule::Fn<jule::Bool(jule::Ptr<_1ce08b42e_Sema>*,jule::Slice<jule::Ptr<_1ce14bdd5_TypeAlias>>*)>);
inline void _1ce09ea19_checkFnParamKind(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce009886_ParamIns>*);
inline jule::Bool _1ce09ed5a_reloadFnInsTypes(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce00a832_FnIns>);
inline jule::Bool _1ce0a0311_checkRefValidityForInitExpr(jule::Ptr<_1ce08b42e_Sema>, jule::Bool, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1cdeab4b4_Token>*);
inline jule::Bool _1ce0a0652_isMutRiskyStruct(_1ce08b42e_Sema*, jule::Ptr<_1cdee571d_StructIns>*);
inline jule::Bool _1ce0a0c6d_checkValidityForInitExpr(jule::Ptr<_1ce08b42e_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1ce14cbc7_TypeKind>*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1cdeab4b4_Token>*);
inline jule::Bool _1ce0a1169_checkTypeAliasDeclKind(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce14bdd5_TypeAlias>*, jule::Trait<_1ce16c7b8_Lookup>);
inline void _1ce0a14cc_checkTypeAliasDecl(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce14bdd5_TypeAlias>*, jule::Trait<_1ce16c7b8_Lookup>);
inline void _1ce0a1785_checkTypeAliasDeclDup(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce14bdd5_TypeAlias>*);
inline jule::Bool _1ce0a1a1b_checkTypeAliasDecls(jule::Ptr<_1ce08b42e_Sema>);
inline void _1b82d1316_checkEnumItemsDup(_1ce08b42e_Sema*, jule::Slice<jule::Ptr<_1ce01c899_EnumItem>>);
inline void _1b82dd631_checkEnumItemsDup(_1ce08b42e_Sema*, jule::Slice<jule::Ptr<_1ce01e549_TypeEnumItem>>);
inline void _1ce0a207c_checkEnumItemsStr(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce01d416_Enum>*);
inline void _1b82b1c42_checkEnumItemInt(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1ce01d416_Enum>*, jule::Ptr<_1ce1557a1_Prim>*, jule::Ptr<_1ce01c899_EnumItem>*, jule::U64*);
inline void _1b82c1ceb_checkEnumItemInt(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1ce01d416_Enum>*, jule::Ptr<_1ce1557a1_Prim>*, jule::Ptr<_1ce01c899_EnumItem>*, jule::I64*);
inline void _1b82acde7_checkEnumItemsInt1(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce1557a1_Prim>*, jule::Ptr<_1ce01d416_Enum>*);
inline void _1b82bd435_checkEnumItemsInt1(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce1557a1_Prim>*, jule::Ptr<_1ce01d416_Enum>*);
inline void _1ce0a2c2b_checkEnumItemsInt(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce01d416_Enum>*);
inline void _1ce0a2ed4_checkEnumDecl(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce01d416_Enum>*);
inline void _1ce0a328c_checkTypeEnumDecl(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce01eb21_TypeEnum>*);
inline jule::Bool _1ce0a3523_checkEnumDecls(jule::Ptr<_1ce08b42e_Sema>);
inline jule::Bool _1ce0a37a9_checkTypeEnumDecls(jule::Ptr<_1ce08b42e_Sema>);
inline jule::Bool _1ce0a3aea_checkDeclGenerics(_1ce08b42e_Sema*, jule::Slice<jule::Ptr<_1cdecdc9a_GenericDecl>>*);
inline jule::Bool _1ce0a3e3b_checkFnDeclParamsDup(_1ce08b42e_Sema*, jule::Ptr<_1ce00792d_Fn>*);
inline jule::Bool _1ce0a427c_checkFnDeclResultDup(_1ce08b42e_Sema*, jule::Ptr<_1ce00792d_Fn>*);
inline jule::Bool _1ce0a45bd_checkFnVariadicParam(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce00792d_Fn>*);
inline void _1ce0a4876_checkFnDeclPrototype(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce00792d_Fn>*);
inline jule::Bool _1ce0a4d2c_catchTraitInheritCycle(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce01ac0a_Trait>, jule::Ptr<_1ce01ac0a_Trait>, _22ab0b88c_StrBuilder*);
inline jule::Bool _1ce0a516d__checkTraitDeclInherits(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce01ac0a_Trait>*);
inline void _1ce0a5426_checkTraitDeclInherits(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce01ac0a_Trait>*);
inline void _1ce0a56ce_checkTraitDeclMethod(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce00792d_Fn>*);
inline void _1ce0a5987_checkTraitDeclMethods(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce01ac0a_Trait>*);
inline void _1ce0a5c40_checkTraitDecl(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce01ac0a_Trait>*);
inline jule::Bool _1ce0a5ec6_checkTraitDecls(jule::Ptr<_1ce08b42e_Sema>);
inline jule::Bool _1ce0a63c2_checkTraitImplMethods(_1ce08b42e_Sema*, jule::Ptr<_1ce01ac0a_Trait>*, jule::Ptr<_1ce044371_Impl>*);
inline jule::Bool _1ce0a67bd_implToStruct(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1cdee2990_Struct>*, jule::Ptr<_1ce044371_Impl>*);
inline void _1ce0a6a76_implTrait(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce044371_Impl>*);
inline void _1ce0a6d2e_implStruct(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce044371_Impl>*);
inline void _1ce0a70d7_implImpl(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce044371_Impl>*);
inline void _1ce0a744a_checkVarDecl(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce0b4105_Var>*, jule::Trait<_1ce16c7b8_Lookup>);
inline void _1ce0a7703_checkGlobalVarDecl(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce0b4105_Var>*);
inline jule::Bool _1ce0a7989_checkGlobalDecls(jule::Ptr<_1ce08b42e_Sema>);
inline jule::Bool _1ce0a7d85_checkStructTraitImpl(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1cdee2990_Struct>*, jule::Ptr<_1ce01ac0a_Trait>*);
inline jule::Bool _1ce0a81c6_checkStructImpls(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1cdee2990_Struct>*);
inline jule::Bool _1ce0a8517_checkStructFields(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1cdee2990_Struct>*);
inline void _1ce0a87c0_checkStructDecl(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1cdee2990_Struct>*);
inline jule::Bool _1ce0a8a56_checkStructDecls(jule::Ptr<_1ce08b42e_Sema>);
inline void _1ce0a8d0e_checkAnonFuncDecl(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce00792d_Fn>*);
inline void _1ce0a90b7_checkFuncDecl(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce00792d_Fn>*);
inline jule::Bool _1ce0a9408_checkFuncDeclsBy(jule::Ptr<_1ce08b42e_Sema>, jule::Slice<jule::Ptr<_1ce00792d_Fn>>*);
inline jule::Bool _1ce0a968e_checkFuncDecls(jule::Ptr<_1ce08b42e_Sema>);
inline void _1ce0a9aac_pushCycleError(_1ce08b42e_Sema*, jule::Str*, jule::Str*, _22ab0b88c_StrBuilder*);
inline void _1ce0aa261_checkPackageDecls(jule::Ptr<_1ce08b42e_Sema>);
inline void _1ce0aa5c4_checkDataForTypeInference(_1ce08b42e_Sema*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1cdeab4b4_Token>*);
inline void _1ce0aa87c_checkVarValue(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce0b4105_Var>*);
inline void _1ce0aabe0_evalVarValue(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce0b4105_Var>*, jule::Trait<_1ce16c7b8_Lookup>);
inline void _1ce0ab053_checkVar(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce0b4105_Var>*, jule::Trait<_1ce16c7b8_Lookup>);
inline void _1ce0ab251_checkGlobals(jule::Ptr<_1ce08b42e_Sema>);
inline jule::Ptr<_1ce00a832_FnIns> _1ce0ab64c_readyToCheckFn(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1cdee571d_StructIns>*, jule::Ptr<_1ce00792d_Fn>*);
inline void _1ce0ab9b0_checkTypeMethod(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1cdee571d_StructIns>*, jule::Ptr<_1ce00792d_Fn>*);
inline jule::Ptr<_1ce00a832_FnIns> _1ce0abe66_checkStructInsOp(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1cdee571d_StructIns>*, jule::Ptr<_1ce00792d_Fn>*, jule::Fn<jule::Bool(jule::Ptr<_1ce00792d_Fn>)>);
inline jule::Bool _1ce0ac362_checkStructEnv(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1cdee571d_StructIns>*, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Bool _1ce0ac75d_precheckStructIns(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1cdee571d_StructIns>*, jule::Ptr<_1cdeab4b4_Token>);
inline void _1ce0aca16_checkStructIns(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1cdee571d_StructIns>*);
inline void _1ce0accbe_checkTypeStruct(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1cdee2990_Struct>*);
inline void _1ce0acebc_checkStructTypes(jule::Ptr<_1ce08b42e_Sema>);
inline void _1ce0ad275_checkStructInsOperators(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1cdee571d_StructIns>);
inline void _1ce0ad52d_precheckStructType(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1cdee2990_Struct>*);
inline void _1ce0ad72b_precheckStructTypes(jule::Ptr<_1ce08b42e_Sema>);
inline void _1ce0ad9d4_checkRets(_1ce08b42e_Sema*, jule::Ptr<_1ce00a832_FnIns>*);
inline void _1ce0add47_checkFnInsSc(_1ce08b42e_Sema*, jule::Ptr<_1ce00a832_FnIns>*, jule::Ptr<_1ce051acb_scopeChecker>*);
inline void _1ce0ae1aa_checkFnInsCaller(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce00a832_FnIns>*, jule::Ptr<_1cdeab4b4_Token>);
inline void _1ce0ae463_checkFnIns(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce00a832_FnIns>*);
inline void _1ce0ae71b_checkFunc(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce00792d_Fn>*);
inline void _1ce0ae9c4_checkTestFn(_1ce08b42e_Sema*, jule::Ptr<_1ce00a832_FnIns>*);
inline void _1ce0aec7c_precheckFunc(jule::Ptr<_1ce08b42e_Sema>, jule::Ptr<_1ce00792d_Fn>*);
inline void _1ce0aee7a_precheckFuncs(jule::Ptr<_1ce08b42e_Sema>);
inline void _1ce0b0178_checkFuncs(jule::Ptr<_1ce08b42e_Sema>);
inline void _1ce0b0376_checkPackageTypes(jule::Ptr<_1ce08b42e_Sema>);
inline void _1ce0b0574_setFileSemaFields(jule::Ptr<_1ce08b42e_Sema>);
inline void _1ce0b0772_setSemaFields(jule::Ptr<_1ce08b42e_Sema>);
inline void _1ce0b0a2a_check(jule::Ptr<_1ce08b42e_Sema>, jule::Slice<jule::Ptr<_1ce116894_SymbolTable>>*);
inline _1ce0b0e59_missingRetChecker static__1ce0b1322_new(void);
inline jule::Bool _1ce0b1630_checkConditional(_1ce0b0e59_missingRetChecker*, jule::Ptr<_1ce04a410_Conditional>);
inline jule::Bool _1ce0b1971_checkMatch(_1ce0b0e59_missingRetChecker*, jule::Ptr<_1ce04d90d_Match>);
inline jule::Bool _1ce0b1cb2_checkInfIter(_1ce0b0e59_missingRetChecker*, jule::Ptr<_1ce04a70c_InfIter>);
inline jule::Bool _1ce0b2103_checkScope(_1ce0b0e59_missingRetChecker*, jule::Ptr<_1ce0497c7_Scope>);
inline jule::Bool _1ce0b2444_check(_1ce0b0e59_missingRetChecker*, jule::Ptr<_1ce0497c7_Scope>);
inline jule::Bool _1ce0b44ce_IsInitialized(_1ce0b4105_Var*);
inline jule::Bool _1ce0b4765_IsTypeInferred(_1ce0b4105_Var*);
inline jule::Bool _1ce0b49eb_untypedConstant(_1ce0b4105_Var*);
inline jule::Bool static__1ce0b559b_Dispose(jule::Ptr<_1ce00792d_Fn>);
inline jule::Bool static__1ce0b5865_Str(jule::Ptr<_1ce00792d_Fn>);
inline jule::Bool static__1ce0b5bd9_logical(jule::Ptr<_1ce00792d_Fn>*, jule::Str);
inline jule::Bool static__1ce0b5ea3_Eq(jule::Ptr<_1ce00792d_Fn>);
inline jule::Bool static__1ce0b626c_Gt(jule::Ptr<_1ce00792d_Fn>);
inline jule::Bool static__1ce0b6536_GtEq(jule::Ptr<_1ce00792d_Fn>);
inline jule::Bool static__1ce0b6800_Lt(jule::Ptr<_1ce00792d_Fn>);
inline jule::Bool static__1ce0b6ab9_LtEq(jule::Ptr<_1ce00792d_Fn>);
inline jule::Bool static__1ce0b6e3d_result(jule::Ptr<_1ce00792d_Fn>*, jule::Str);
inline jule::Bool static__1ce0b7207_Shl(jule::Ptr<_1ce00792d_Fn>);
inline jule::Bool static__1ce0b74c1_Shr(jule::Ptr<_1ce00792d_Fn>);
inline jule::Bool static__1ce0b778a_Add(jule::Ptr<_1ce00792d_Fn>);
inline jule::Bool static__1ce0b7a54_Sub(jule::Ptr<_1ce00792d_Fn>);
inline jule::Bool static__1ce0b7d1d_Div(jule::Ptr<_1ce00792d_Fn>);
inline jule::Bool static__1ce0b80d7_Mul(jule::Ptr<_1ce00792d_Fn>);
inline jule::Bool static__1ce0b83a1_Mod(jule::Ptr<_1ce00792d_Fn>);
inline jule::Bool static__1ce0b866a_BitAnd(jule::Ptr<_1ce00792d_Fn>);
inline jule::Bool static__1ce0b8934_BitOr(jule::Ptr<_1ce00792d_Fn>);
inline jule::Bool static__1ce0b8bed_BitXor(jule::Ptr<_1ce00792d_Fn>);
inline jule::Bool static__1ce0b9072_unary(jule::Ptr<_1ce00792d_Fn>*, jule::Str);
inline jule::Bool static__1ce0b933b_Neg(jule::Ptr<_1ce00792d_Fn>);
inline jule::Bool static__1ce0b9605_Pos(jule::Ptr<_1ce00792d_Fn>);
inline jule::Bool static__1ce0b98be_BitNot(jule::Ptr<_1ce00792d_Fn>);
inline jule::Bool static__1ce0b9c43_assign(jule::Ptr<_1ce00792d_Fn>*, jule::Str);
inline jule::Bool static__1ce0ba00c_AddAssign(jule::Ptr<_1ce00792d_Fn>);
inline jule::Bool static__1ce0ba2c6_SubAssign(jule::Ptr<_1ce00792d_Fn>);
inline jule::Bool static__1ce0ba590_DivAssign(jule::Ptr<_1ce00792d_Fn>);
inline jule::Bool static__1ce0ba859_MulAssign(jule::Ptr<_1ce00792d_Fn>);
inline jule::Bool static__1ce0bab23_ModAssign(jule::Ptr<_1ce00792d_Fn>);
inline jule::Bool static__1ce0baddc_ShlAssign(jule::Ptr<_1ce00792d_Fn>);
inline jule::Bool static__1ce0bb1a6_ShrAssign(jule::Ptr<_1ce00792d_Fn>);
inline jule::Bool static__1ce0bb470_BitOrAssign(jule::Ptr<_1ce00792d_Fn>);
inline jule::Bool static__1ce0bb739_BitAndAssign(jule::Ptr<_1ce00792d_Fn>);
inline jule::Bool static__1ce0bba03_BitXorAssign(jule::Ptr<_1ce00792d_Fn>);
inline void _1ce103dc0_pushErr(_1ce1038c5_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ce104156_checkTrait(_1ce1038c5_typeCompatibilityChecker*);
inline jule::Bool _1ce1043dc_checkPtr(_1ce1038c5_typeCompatibilityChecker*);
inline jule::Bool _1ce104673_checkPrim(_1ce1038c5_typeCompatibilityChecker*);
inline jule::Bool _1ce104a6e_typeEnum(_1ce1038c5_typeCompatibilityChecker*, jule::Ptr<_1ce01eb21_TypeEnum>*, jule::Ptr<_1ce14cbc7_TypeKind>*);
inline jule::Bool _1ce104d05_checkTypeEnum(_1ce1038c5_typeCompatibilityChecker*);
inline jule::Bool _1ce10508b_check(_1ce1038c5_typeCompatibilityChecker*);
inline void _1ce105b08_pushErr(_1ce105674_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ce105d8e_checkValidity(_1ce105674_assignTypeChecker*);
inline jule::Bool _1ce106125_checkConst(_1ce105674_assignTypeChecker*);
inline jule::Bool _1ce1063ab_checkCompatibility(_1ce105674_assignTypeChecker*);
inline jule::Bool _1ce106642_check(_1ce105674_assignTypeChecker*);
inline jule::Bool _1b8433d81_annotateConstraintElem(_1ce107049_dynamicTypeAnnotation*, jule::Ptr<_1ce14cbc7_TypeKind>*);
inline jule::Bool _1b8433633_annotateConstraintElem(_1ce107049_dynamicTypeAnnotation*, jule::Ptr<_1ce14cbc7_TypeKind>*);
inline jule::Bool _1b84358dd_annotateConstraintElem(_1ce107049_dynamicTypeAnnotation*, jule::Ptr<_1ce14cbc7_TypeKind>*);
inline jule::Bool _1b843b74b_annotateConstraintElem(_1ce107049_dynamicTypeAnnotation*, jule::Ptr<_1ce14cbc7_TypeKind>*);
inline jule::Bool _1ce107940_annotateConstraintMap(_1ce107049_dynamicTypeAnnotation*, jule::Ptr<_1ce14cbc7_TypeKind>*);
inline jule::Bool _1ce107c81_annotateConstraintTup(_1ce107049_dynamicTypeAnnotation*, jule::Ptr<_1ce14cbc7_TypeKind>*);
inline jule::Bool _1ce1080c2_annotateConstraintFn(_1ce107049_dynamicTypeAnnotation*, jule::Ptr<_1ce14cbc7_TypeKind>*);
inline jule::Bool _1ce108413_annotateConstraintIdent(_1ce107049_dynamicTypeAnnotation*, jule::Ptr<_1ce14cbc7_TypeKind>*);
inline jule::Bool _1ce108754_annotateConstraint(_1ce107049_dynamicTypeAnnotation*, jule::Ptr<_1ce14cbc7_TypeKind>*);
inline void _1ce108ab7_pushGeneric(_1ce107049_dynamicTypeAnnotation*, jule::Ptr<_1ce14cbc7_TypeKind>*, jule::I32);
inline jule::Bool _1ce108e08_annotatePrim(_1ce107049_dynamicTypeAnnotation*, jule::Ptr<_1ce14cbc7_TypeKind>*);
inline jule::Bool _1ce109249_annotateArr(_1ce107049_dynamicTypeAnnotation*, jule::Ptr<_1ce14cbc7_TypeKind>*);
inline jule::Bool _1ce10958a_annotateSlc(_1ce107049_dynamicTypeAnnotation*, jule::Ptr<_1ce14cbc7_TypeKind>*);
inline jule::Bool _1ce109986_checkMapKey(_1ce107049_dynamicTypeAnnotation*, jule::Ptr<_1ce14cbc7_TypeKind>*, jule::Ptr<_1ce14cbc7_TypeKind>*);
inline jule::Bool _1ce109cc7_annotateMap(_1ce107049_dynamicTypeAnnotation*, jule::Ptr<_1ce14cbc7_TypeKind>*);
inline jule::Bool _1ce10a118_annotateFn(_1ce107049_dynamicTypeAnnotation*, jule::Ptr<_1ce14cbc7_TypeKind>*);
inline jule::Bool _1ce10a459_annotatePtr(_1ce107049_dynamicTypeAnnotation*, jule::Ptr<_1ce14cbc7_TypeKind>*);
inline jule::Bool _1ce10a79a_annotateSptr(_1ce107049_dynamicTypeAnnotation*, jule::Ptr<_1ce14cbc7_TypeKind>*);
inline jule::Bool _1ce10aadb_annotateStruct(_1ce107049_dynamicTypeAnnotation*, jule::Ptr<_1ce14cbc7_TypeKind>*);
inline jule::Bool _1ce10ae2c_annotateAny(_1ce107049_dynamicTypeAnnotation*, jule::Ptr<_1ce14cbc7_TypeKind>*);
inline jule::Bool _1ce10b26d_annotateKind(_1ce107049_dynamicTypeAnnotation*, jule::Ptr<_1ce14cbc7_TypeKind>*);
inline jule::Bool _1ce10b504_annotate(_1ce107049_dynamicTypeAnnotation*);
inline void _1ce10c417_pushErrToken(_1ce10bda6_fnCallArgChecker*, jule::Ptr<_1cdeab4b4_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ce10c77a_pushErr(_1ce10bda6_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1ce009886_ParamIns>> _1ce10ca11_getParams(_1ce10bda6_fnCallArgChecker*);
inline jule::Bool _1ce10cd52_checkCounts(_1ce10bda6_fnCallArgChecker*, jule::Slice<jule::Ptr<_1ce009886_ParamIns>>*);
inline jule::Bool _1ce10d308_checkArg(_1ce10bda6_fnCallArgChecker*, jule::Ptr<_1ce009886_ParamIns>*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1cdeab4b4_Token>*);
inline jule::Bool _1ce10d704_push(_1ce10bda6_fnCallArgChecker*, jule::Ptr<_1ce009886_ParamIns>*, jule::Ptr<_1cdec5dc4_Expr>);
inline jule::Bool _1ce10db00_pushVariadic(_1ce10bda6_fnCallArgChecker*, jule::Ptr<_1ce009886_ParamIns>*, jule::I32);
inline jule::Bool _1ce10de41_checkArgs(_1ce10bda6_fnCallArgChecker*, jule::Slice<jule::Ptr<_1ce009886_ParamIns>>*);
inline jule::Bool _1ce10e1c7_checkDynamicTypeAnnotation(_1ce10bda6_fnCallArgChecker*);
inline jule::Bool _1ce10e45d_check(_1ce10bda6_fnCallArgChecker*);
inline void _1ce11033d_pushErr(_1ce10ecdd_structLitChecker*, jule::Ptr<_1cdeab4b4_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ce1106a1_pushSuggestion(_1ce10ecdd_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1ce110abe_pushMatch(_1ce10ecdd_structLitChecker*, jule::Ptr<_1cdee4b6d_FieldIns>*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1cdeab4b4_Token>*);
inline void _1ce110e32_checkPair(_1ce10ecdd_structLitChecker*, jule::Ptr<_1cdeca5e3_FieldExprPair>*, jule::Slice<jule::Ptr<_1cdec5dc4_Expr>>*);
inline jule::Bool _1ce111273_readyExprs(_1ce10ecdd_structLitChecker*, jule::Slice<jule::Ptr<_1cdec5dc4_Expr>>*);
inline void _1ce11152b_check(_1ce10ecdd_structLitChecker*, jule::Slice<jule::Ptr<_1cdec5dc4_Expr>>*);
inline jule::Ptr<_1ce0b4105_Var> _1ce1120a9_buildVar(_1ce111ac0_rangeChecker*, jule::Ptr<_1cded490a_VarDecl>*);
inline void _1ce1122a7_setSizeKey(_1ce111ac0_rangeChecker*);
inline void _1ce1126c5_checkRangeExprValidity(_1ce111ac0_rangeChecker*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1ce0b4105_Var>*, jule::Ptr<_1ce14cbc7_TypeKind>*);
inline void _1ce1128c3_checkSlice(_1ce111ac0_rangeChecker*);
inline void _1ce112ac1_checkArray(_1ce111ac0_rangeChecker*);
inline void _1ce112cbe_checkMapKeyA(_1ce111ac0_rangeChecker*);
inline void _1ce112ebc_checkMapKeyB(_1ce111ac0_rangeChecker*);
inline void _1ce1131ba_checkMap(_1ce111ac0_rangeChecker*);
inline void _1ce1133b8_checkStr(_1ce111ac0_rangeChecker*);
inline void _1ce1135b6_checkComptime(_1ce111ac0_rangeChecker*);
inline jule::Bool _1ce11384c_checkComptimeRange(_1ce111ac0_rangeChecker*);
inline jule::Bool _1ce113ad3_check(_1ce111ac0_rangeChecker*);
inline void _1ce114760_prepareTypes(_1ce114331_retTypeChecker*);
inline void _1ce114a18_prepareExprs(_1ce114331_retTypeChecker*, jule::Ptr<_1cdec5dc4_Expr>*);
inline void _1ce114c16_checkExprs(_1ce114331_retTypeChecker*);
inline jule::Bool _1ce114e9c_tryFuncMultiRetForward(_1ce114331_retTypeChecker*);
inline jule::Bool _1ce1152dd_check(_1ce114331_retTypeChecker*, jule::Ptr<_1cdec5dc4_Expr>*);
inline jule::Ptr<_1ce06b0ac_ImportInfo> _1ce116d7d_SelectPackage(_1ce116894_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1ce06b0ac_ImportInfo>)>);
inline jule::Ptr<_1ce0b4105_Var> _1ce117279_FindVar(_1ce116894_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1ce14bdd5_TypeAlias> _1ce117675_FindTypeAlias(_1ce116894_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1cdee2990_Struct> _1ce117a71_FindStruct(_1ce116894_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1ce00792d_Fn> _1ce117e6c_FindFn(_1ce116894_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1ce01ac0a_Trait> _1ce1182ad_FindTrait(_1ce116894_SymbolTable*, jule::Str);
inline jule::Ptr<_1ce01d416_Enum> _1ce1185ee_FindEnum(_1ce116894_SymbolTable*, jule::Str);
inline jule::Ptr<_1ce01eb21_TypeEnum> _1ce118940_FindTypeEnum(_1ce116894_SymbolTable*, jule::Str);
inline jule::Ptr<_1ce0b4105_Var> _1ce11905b_findVar(_1ce116894_SymbolTable*, jule::Str*, jule::Bool, jule::Bool);
inline jule::Ptr<_1ce14bdd5_TypeAlias> _1ce119512_findTypeAlias(_1ce116894_SymbolTable*, jule::Str*, jule::Bool, jule::Bool);
inline jule::Any _1ce11990d_defByIdent(_1ce116894_SymbolTable*, jule::Str*, jule::Bool);
inline jule::Bool _1ce119db4_isDuplicatedIdent(_1ce116894_SymbolTable*, jule::Uintptr, jule::Str*, jule::Bool);
inline jule::Bool _1ce11c0e7_IsNil(_1ce11bc0c_Data*);
inline jule::Bool _1ce11c37d_IsVoid(_1ce11bc0c_Data*);
inline jule::Bool _1ce11c614_IsConst(_1ce11bc0c_Data*);
inline jule::Bool _1ce11c955_GoodOperand(_1ce11bc0c_Data*, jule::Ptr<_1ce11bc0c_Data>*);
inline void _1ce11de84_pushErr(_1ce11d934_Eval*, jule::Ptr<_1cdeab4b4_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ce11e2e7_pushSuggestion(_1ce11d934_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1ce11e4e5_allowBuiltin(_1ce11d934_Eval*);
inline void _1ce11e6e3_disallowBuiltin(_1ce11d934_Eval*);
inline jule::Bool _1ce11e979_isUnsafe(_1ce11d934_Eval*);
inline jule::Bool _1ce11ec10_isGlobal(_1ce11d934_Eval*);
inline jule::Bool _1ce12001d_applyNumericPrefix(_1ce11d934_Eval*, jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce12035e_litStr(_1ce11d934_Eval*, jule::Ptr<_1cdec6d5e_LitExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce1206a0_litRune(_1ce11d934_Eval*, jule::Ptr<_1cdec6d5e_LitExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce1209e1_litFloat(_1ce11d934_Eval*, jule::Ptr<_1cdec6d5e_LitExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce120d32_litInt(_1ce11d934_Eval*, jule::Ptr<_1cdec6d5e_LitExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce121173_litNum(_1ce11d934_Eval*, jule::Ptr<_1cdec6d5e_LitExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce1214b4_evalLit(_1ce11d934_Eval*, jule::Ptr<_1cdec6d5e_LitExpr>);
inline jule::Any _1ce121805_findBuiltins(_1ce11d934_Eval*, jule::Str*);
inline jule::Any _1ce121c01_getDef(_1ce11d934_Eval*, jule::Str*, jule::Bool);
inline jule::Ptr<_1ce00da00_ReferenceStack> _1ce121e87_getOwnerRefers(_1ce11d934_Eval*);
inline void _1e6b5dca8_pushReference(_1ce11d934_Eval*, jule::Ptr<_1ce00a832_FnIns>*);
inline void _1e6b73aae_pushReference(_1ce11d934_Eval*, jule::Ptr<_1ce0b4105_Var>*);
inline void _1b86d3e66_pushReference(_1ce11d934_Eval*, jule::Ptr<_1cdee571d_StructIns>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce122581__evalEnum(_1ce11d934_Eval*, jule::Ptr<_1ce01d416_Enum>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce12297c_evalEnum(_1ce11d934_Eval*, jule::Ptr<_1ce01d416_Enum>, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce122cbd__evalTypeEnum(_1ce11d934_Eval*, jule::Ptr<_1ce01eb21_TypeEnum>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce1231b9_evalTypeEnum(_1ce11d934_Eval*, jule::Ptr<_1ce01eb21_TypeEnum>, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce12350a__evalStruct(_1ce11d934_Eval*, jule::Ptr<_1cdee571d_StructIns>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce123906_evalStruct(_1ce11d934_Eval*, jule::Ptr<_1cdee571d_StructIns>, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce123c47_evalFnIns(_1ce11d934_Eval*, jule::Ptr<_1ce00a832_FnIns>);
inline void _1ce1240aa_checkDeprecated(_1ce11d934_Eval*, jule::Slice<jule::Ptr<_1cdec0eac_Directive>>*, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce1244a6_evalFn(_1ce11d934_Eval*, jule::Ptr<_1ce00792d_Fn>, jule::Ptr<_1cdeab4b4_Token>);
inline void _1ce1248c4_pushIllegalCycleError(_1ce11d934_Eval*, jule::Ptr<_1ce0b4105_Var>*, jule::Ptr<_1ce0b4105_Var>*, _22ab0b88c_StrBuilder*);
inline jule::Bool _1ce124cc0_checkCrossCycle(_1ce11d934_Eval*, jule::Ptr<_1ce0b4105_Var>*, _22ab0b88c_StrBuilder*);
inline jule::Bool _1ce1251bb_checkIllegalCycles(_1ce11d934_Eval*, jule::Ptr<_1ce0b4105_Var>*, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce1255b7_evalVar(_1ce11d934_Eval*, jule::Ptr<_1ce0b4105_Var>, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce1259b3_evalTypeAlias(_1ce11d934_Eval*, jule::Ptr<_1ce14bdd5_TypeAlias>, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce125dae_evalDef(_1ce11d934_Eval*, jule::Any*, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce126200_evalIdent(_1ce11d934_Eval*, jule::Ptr<_1cdec76de_IdentExpr>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce126541_evalUnary(jule::Ptr<_1ce11d934_Eval>, jule::Ptr<_1cdec7e81_UnaryExpr>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce126882_evalVariadic(jule::Ptr<_1ce11d934_Eval>, jule::Ptr<_1cdec835a_VariadicExpr>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce126bc3_evalUnsafe(jule::Ptr<_1ce11d934_Eval>, jule::Ptr<_1cdec7238_UnsafeExpr>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce127014_evalArr(jule::Ptr<_1ce11d934_Eval>, jule::Ptr<_1cdecc42a_SliceExpr>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce1274ba_evalExpSlc(jule::Ptr<_1ce11d934_Eval>, jule::Ptr<_1cdecc42a_SliceExpr>, jule::Ptr<_1ce14cbc7_TypeKind>, jule::Any);
inline jule::Ptr<_1ce11bc0c_Data> _1ce12780b_evalSliceExpr(jule::Ptr<_1ce11d934_Eval>, jule::Ptr<_1cdecc42a_SliceExpr>);
inline void _1ce127b6e_checkIntegerIndexingByData(_1ce11d934_Eval*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1cdeab4b4_Token>);
inline void _1ce12808c_indexingPtr(_1ce11d934_Eval*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1cdeccd87_IndexingExpr>*);
inline void _1ce1284aa_indexingArr(_1ce11d934_Eval*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1cdeccd87_IndexingExpr>*);
inline void _1ce1288c8_indexingSlc(_1ce11d934_Eval*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1cdeccd87_IndexingExpr>*);
inline void _1ce128ce6_indexingMap(_1ce11d934_Eval*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1cdeccd87_IndexingExpr>*);
inline void _1ce129214_indexingStr(_1ce11d934_Eval*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1cdeccd87_IndexingExpr>*);
inline void _1ce129632_toIndexing(_1ce11d934_Eval*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1cdeccd87_IndexingExpr>*);
inline jule::Bool _1ce129ad8_pushGenericsFromExprSubIdent(jule::Ptr<_1ce11d934_Eval>, jule::Ptr<_1cdec8ed7_SubIdentExpr>*, jule::Slice<jule::Ptr<_1cdec1a90_TypeDecl>>*, jule::Ptr<_1cdec5dc4_Expr>*);
inline jule::Bool _1ce129ed4_pushGenericsFromData(jule::Ptr<_1ce11d934_Eval>, jule::Slice<jule::Ptr<_1cdec1a90_TypeDecl>>*, jule::Ptr<_1cdec5dc4_Expr>*);
inline void _1ce12a347_evalIdentDeclFromIndexing(jule::Ptr<_1ce11d934_Eval>, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1cdeccd87_IndexingExpr>*);
inline jule::Bool _1ce12a7ed_checkGenericFn(jule::Ptr<_1ce11d934_Eval>, jule::Ptr<_1ce00a832_FnIns>*, jule::Ptr<_1cdeab4b4_Token>*, jule::Any*);
inline void _1ce12ab61_evalFnGenericFromIndexing(jule::Ptr<_1ce11d934_Eval>, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1cdeccd87_IndexingExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce12aea2_evalIndexing(jule::Ptr<_1ce11d934_Eval>, jule::Ptr<_1cdeccd87_IndexingExpr>);
inline __jule_tuple_x_1ce11bc0c_Data__jule_tuple_x_1ce11bc0c_Data _1ce12b2e3_evalSlicingExprs(jule::Ptr<_1ce11d934_Eval>, jule::Ptr<_1cdecd4e7_SlicingExpr>*);
inline void _1ce12b59b_slicingArr(_1ce11d934_Eval*, jule::Ptr<_1ce11bc0c_Data>*);
inline void _1ce12b9b9_slicingStr(_1ce11d934_Eval*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1ce11bc0c_Data>*);
inline void _1ce12be92_checkSlicing(_1ce11d934_Eval*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1cdecd4e7_SlicingExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce12c2d3_evalSlicing(jule::Ptr<_1ce11d934_Eval>, jule::Ptr<_1cdecd4e7_SlicingExpr>);
inline void _1ce12c701_castPtr(_1ce11d934_Eval*, jule::Ptr<_1ce14cbc7_TypeKind>, jule::Ptr<_1ce11bc0c_Data>, jule::Ptr<_1cdeab4b4_Token>);
inline void _1ce12cb1e_castStruct(_1ce11d934_Eval*, jule::Ptr<_1ce14cbc7_TypeKind>, jule::Ptr<_1ce11bc0c_Data>, jule::Ptr<_1cdeab4b4_Token>);
inline void _1ce12d03c_castRef(_1ce11d934_Eval*, jule::Ptr<_1ce14cbc7_TypeKind>, jule::Ptr<_1ce11bc0c_Data>, jule::Ptr<_1cdeab4b4_Token>);
inline void _1ce12d45a_castSlc(_1ce11d934_Eval*, jule::Ptr<_1ce14cbc7_TypeKind>, jule::Ptr<_1ce11bc0c_Data>, jule::Ptr<_1cdeab4b4_Token>);
inline void _1ce12d7bd_castStr(_1ce11d934_Eval*, jule::Ptr<_1ce11bc0c_Data>, jule::Ptr<_1cdeab4b4_Token>);
inline void _1ce12dbdb_castInt(_1ce11d934_Eval*, jule::Ptr<_1ce14cbc7_TypeKind>, jule::Ptr<_1ce11bc0c_Data>, jule::Ptr<_1cdeab4b4_Token>);
inline void _1ce12e109_castNum(_1ce11d934_Eval*, jule::Ptr<_1ce14cbc7_TypeKind>, jule::Ptr<_1ce11bc0c_Data>, jule::Ptr<_1cdeab4b4_Token>);
inline void _1ce12e527_castPrim(_1ce11d934_Eval*, jule::Ptr<_1ce14cbc7_TypeKind>, jule::Ptr<_1ce11bc0c_Data>, jule::Ptr<_1cdeab4b4_Token>);
inline void _1ce12e88a_castConstant(_1ce11d934_Eval*, jule::Ptr<_1ce14cbc7_TypeKind>*, jule::Ptr<_1ce11bc0c_Data>*);
inline void _1ce12eca8_castTypeEnum(_1ce11d934_Eval*, jule::Ptr<_1ce14cbc7_TypeKind>*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1cdeab4b4_Token>*);
inline void _1ce1301c6_castTypeEnumT(_1ce11d934_Eval*, jule::Ptr<_1ce14cbc7_TypeKind>*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1cdeab4b4_Token>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce13067c_evalCastByTypeNData(_1ce11d934_Eval*, jule::Ptr<_1ce14cbc7_TypeKind>, jule::Ptr<_1ce11bc0c_Data>, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce130b33_evalCastT(jule::Ptr<_1ce11d934_Eval>, jule::Ptr<_1ce14cbc7_TypeKind>*, jule::Ptr<_1cdec5dc4_Expr>*, jule::Ptr<_1cdeab4b4_Token>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce130e74_evalCast(jule::Ptr<_1ce11d934_Eval>, jule::Ptr<_1cdec8734_CastExpr>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce1312b5_evalNsSelection(_1ce11d934_Eval*, jule::Ptr<_1cdec8b0d_NsSelectionExpr>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce13176b_evalStructLitExplicit(jule::Ptr<_1ce11d934_Eval>, jule::Ptr<_1cdee571d_StructIns>, jule::Slice<jule::Ptr<_1cdec5dc4_Expr>>, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce131aac_evalStructLit(jule::Ptr<_1ce11d934_Eval>, jule::Ptr<_1cdecae1d_StructLit>);
inline _1ce15ea85_typeChecker _1ce131d43_typeChecker(_1ce11d934_Eval*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce132184_evalType(_1ce11d934_Eval*, jule::Ptr<_1cdec1a90_TypeDecl>);
inline void _1ce1324e7_callTypeFn(jule::Ptr<_1ce11d934_Eval>, jule::Ptr<_1cdec9aed_FnCallExpr>*, jule::Ptr<_1ce11bc0c_Data>*);
inline void _1ce13285a_callBuiltinFn(jule::Ptr<_1ce11d934_Eval>, jule::Ptr<_1cdec9aed_FnCallExpr>*, jule::Ptr<_1ce11bc0c_Data>*);
inline void _1ce132bbd_checkFnOfConcurrentCall(_1ce11d934_Eval*, jule::Ptr<_1ce00a832_FnIns>*, jule::Ptr<_1cdeab4b4_Token>);
inline void _1ce1330db_processExceptionalHandler(_1ce11d934_Eval*, jule::Ptr<_1ce00a832_FnIns>*, jule::Ptr<_1cdec9aed_FnCallExpr>*, jule::Ptr<_1ce11bc0c_Data>*);
inline void _1ce13344e_callFn(jule::Ptr<_1ce11d934_Eval>, jule::Ptr<_1cdec9aed_FnCallExpr>*, jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce133790_evalFnCall(jule::Ptr<_1ce11d934_Eval>, jule::Ptr<_1cdec9aed_FnCallExpr>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce133b8b_evalEnumStatic(_1ce11d934_Eval*, jule::Ptr<_1ce01d416_Enum>, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce134087_evalTypeEnumStatic(_1ce11d934_Eval*, jule::Ptr<_1ce01eb21_TypeEnum>, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce134483_evalStructStatic(_1ce11d934_Eval*, jule::Ptr<_1cdee571d_StructIns>, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce134939_evalTraitSubIdent(_1ce11d934_Eval*, jule::Ptr<_1ce11bc0c_Data>, jule::Ptr<_1ce01ac0a_Trait>, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce134e9a_evalStructSubIdentField(_1ce11d934_Eval*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1cdee571d_StructIns>*, jule::Ptr<_1cdeab4b4_Token>*, jule::Ptr<_1cdee4b6d_FieldIns>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce13550b_evalStructSubIdent(_1ce11d934_Eval*, jule::Ptr<_1ce11bc0c_Data>, jule::Ptr<_1cdee571d_StructIns>, jule::Ptr<_1cdec8ed7_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1ce11bc0c_Data> _1ce13584c_evalIntTypeStatic(_1ce11d934_Eval*, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce135b8d_evalUintTypeStatic(_1ce11d934_Eval*, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce135ece_evalI8TypeStatic(_1ce11d934_Eval*, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce136320_evalI16TypeStatic(_1ce11d934_Eval*, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce136661_evalI32TypeStatic(_1ce11d934_Eval*, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce1369a2_evalI64TypeStatic(_1ce11d934_Eval*, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce136ce3_evalU8TypeStatic(_1ce11d934_Eval*, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce137134_evalU16TypeStatic(_1ce11d934_Eval*, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce137475_evalU32TypeStatic(_1ce11d934_Eval*, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce1377b6_evalU64TypeStatic(_1ce11d934_Eval*, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce137b07_evalF32TypeStatic(_1ce11d934_Eval*, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce137e48_evalF64TypeStatic(_1ce11d934_Eval*, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce138344_evalPrimStatic(_1ce11d934_Eval*, jule::Str, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce138740_evalTypeStatic(_1ce11d934_Eval*, jule::Ptr<_1ce11bc0c_Data>, jule::Ptr<_1cdec8ed7_SubIdentExpr>);
inline jule::Ptr<_1ce11bc0c_Data> _1b8802518_comptimeObjSubIdent(_1ce11d934_Eval*, jule::Ptr<_1ce0325a1_comptimeTypeInfo>*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1cdec8ed7_SubIdentExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1b8806b7c_comptimeObjSubIdent(_1ce11d934_Eval*, jule::Ptr<_1ce02374b_comptimeStructField>*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1cdec8ed7_SubIdentExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1b880b29c_comptimeObjSubIdent(_1ce11d934_Eval*, jule::Ptr<_1ce029cb3_comptimeEnumField>*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1cdec8ed7_SubIdentExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1b8810911_comptimeObjSubIdent(_1ce11d934_Eval*, jule::Ptr<_1ce02c755_comptimeParam>*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1cdec8ed7_SubIdentExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1b88152a6_comptimeObjSubIdent(_1ce11d934_Eval*, jule::Ptr<_1ce026a07_comptimeStatic>*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1cdec8ed7_SubIdentExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1b88198c6_comptimeObjSubIdent(_1ce11d934_Eval*, jule::Ptr<_1ce038ab3_comptimeValue>*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1cdec8ed7_SubIdentExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1b881dee6_comptimeObjSubIdent(_1ce11d934_Eval*, jule::Ptr<_1ce03ca0c_comptimeFile>*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1cdec8ed7_SubIdentExpr>*);
inline __jule_tuple_x_1ce11bc0c_Data__jule_tuple_bool _1ce1390e2_tryComptimeObjSubIdent(_1ce11d934_Eval*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1cdec8ed7_SubIdentExpr>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce1394dd_evalObjSubIdent(_1ce11d934_Eval*, jule::Ptr<_1ce11bc0c_Data>, jule::Ptr<_1cdec8ed7_SubIdentExpr>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce13982e_evalSubIdent(jule::Ptr<_1ce11d934_Eval>, jule::Ptr<_1cdec8ed7_SubIdentExpr>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce139b70_evalTuple(jule::Ptr<_1ce11d934_Eval>, jule::Ptr<_1cdec69b8_TupleExpr>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce13a06b_evalMap(jule::Ptr<_1ce11d934_Eval>, jule::Ptr<_1ce15b444_Map>, jule::Ptr<_1cdecb3c4_BraceLit>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce13a3ac_evalBraceLit(jule::Ptr<_1ce11d934_Eval>, jule::Ptr<_1cdecb3c4_BraceLit>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce13a6ed_evalAnonFunc(jule::Ptr<_1ce11d934_Eval>, jule::Ptr<_1cded3750_FnDecl>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce13aa3e_evalBinary(jule::Ptr<_1ce11d934_Eval>, jule::Ptr<_1cdec948d_BinaryExpr>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce13ad80_evalExprKind(jule::Ptr<_1ce11d934_Eval>, jule::Any);
inline jule::Ptr<_1ce11bc0c_Data> _1ce13b1c1_eval1(jule::Ptr<_1ce11d934_Eval>, jule::Ptr<_1cdec5dc4_Expr>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce13b512_eval(jule::Ptr<_1ce11d934_Eval>, jule::Ptr<_1cdec5dc4_Expr>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce13b853_evalExpr1(jule::Ptr<_1ce11d934_Eval>, jule::Ptr<_1cdec5dc4_Expr>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce13bb94_evalExpr(jule::Ptr<_1ce11d934_Eval>, jule::Ptr<_1cdec5dc4_Expr>);
inline _1ce13c15b_unaryEval static__1ce13c59b_new(jule::Ptr<_1ce11d934_Eval>);
inline void _1ce13c799_minus(_1ce13c15b_unaryEval*);
inline void _1ce13c997_plus(_1ce13c15b_unaryEval*);
inline void _1ce13cb95_caret(_1ce13c15b_unaryEval*);
inline void _1ce13cd93_excl(_1ce13c15b_unaryEval*);
inline void _1ce13d091_star(_1ce13c15b_unaryEval*);
inline void _1ce13d28e_amper(_1ce13c15b_unaryEval*);
inline void _1ce13d48c_typeDecl(_1ce13c15b_unaryEval*);
inline void _1ce13d68a_evalData(_1ce13c15b_unaryEval*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce13d9cb_eval(_1ce13c15b_unaryEval*, jule::Ptr<_1cdec7e81_UnaryExpr>);
inline _1ce13e0e7_binaryEval static__1ce13e69c_newPlain(jule::Ptr<_1ce11d934_Eval>);
inline _1ce13e0e7_binaryEval static__1ce13ea21_new(jule::Ptr<_1ce11d934_Eval>, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Bool _1ce13eca7_checkTypeCompatibility(_1ce13e0e7_binaryEval*);
inline jule::Bool _1ce14003d_checkStructCommonOperatorCompatibility(_1ce13e0e7_binaryEval*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce1402c4_evalComptimeTypeInfo(_1ce13e0e7_binaryEval*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce14055a_evalNil(_1ce13e0e7_binaryEval*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce1407e1_evalEnum(_1ce13e0e7_binaryEval*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce140a77_evalTypeEnum(_1ce13e0e7_binaryEval*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce140d0d_evalSptr(_1ce13e0e7_binaryEval*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce141094_evalPtr(_1ce13e0e7_binaryEval*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce14132a_evalArr(_1ce13e0e7_binaryEval*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce1415b1_evalSlc(_1ce13e0e7_binaryEval*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce141847_evalStruct(_1ce13e0e7_binaryEval*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce141acd_evalTrait(_1ce13e0e7_binaryEval*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce141d64_evalAny(_1ce13e0e7_binaryEval*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce1420ea_evalBool(_1ce13e0e7_binaryEval*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce142381_evalStr(_1ce13e0e7_binaryEval*);
inline void _1ce14257e_setTypeToGreater(_1ce13e0e7_binaryEval*);
inline void _1ce142837_checkModData(_1ce13e0e7_binaryEval*, jule::Ptr<_1ce11bc0c_Data>*);
inline void _1ce142a35_mod(_1ce13e0e7_binaryEval*);
inline jule::Bool _1ce142e31_numbersAreCompatibile(_1ce13e0e7_binaryEval*, jule::Str*, jule::Str*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce1431b7_evalFloat(_1ce13e0e7_binaryEval*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce14344d_evalInt(_1ce13e0e7_binaryEval*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce1436d4_evalPrim(_1ce13e0e7_binaryEval*);
inline void _1ce1438d2_checkSpecialCases(_1ce13e0e7_binaryEval*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce143b68_evalOp(_1ce13e0e7_binaryEval*);
inline void _1ce143e21_evalConst(_1ce13e0e7_binaryEval*, jule::Ptr<_1ce11bc0c_Data>*);
inline void _1ce1441c9_checkData(_1ce13e0e7_binaryEval*, jule::Ptr<_1ce11bc0c_Data>*);
inline void _1ce1443c7_checkDatas(_1ce13e0e7_binaryEval*);
inline void _1ce144680_setModel(_1ce13e0e7_binaryEval*, jule::Ptr<_1ce11bc0c_Data>*);
inline void _1ce144938_postEval(_1ce13e0e7_binaryEval*, jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce144d34_solveExplicit(_1ce13e0e7_binaryEval*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce145175_eval(_1ce13e0e7_binaryEval*, jule::Ptr<_1cdec948d_BinaryExpr>*);
inline jule::Str _1ce14d090_Str(_1ce14cbc7_TypeKind*);
inline jule::Bool _1ce14d3d1_Equal(jule::Ptr<_1ce14cbc7_TypeKind>, jule::Ptr<_1ce14cbc7_TypeKind>);
inline jule::Bool _1ce14da1e_Binded(_1ce14cbc7_TypeKind*);
inline jule::Bool _1ce14dca5_IsNil(_1ce14cbc7_TypeKind*);
inline jule::Bool _1ce14e03b_Void(_1ce14cbc7_TypeKind*);
inline jule::Bool _1ce14e2c2_Comparable(_1ce14cbc7_TypeKind*);
inline jule::Bool _1ce14e558_Mutable(_1ce14cbc7_TypeKind*);
inline jule::Bool _1ce14e7de_Ordered(_1ce14cbc7_TypeKind*);
inline jule::Bool _1ce14ea75_NilCompatible(_1ce14cbc7_TypeKind*);
inline jule::Bool _1ce14ed0b_PerformsRC(_1ce14cbc7_TypeKind*);
inline jule::Bool _1ce150092_Variadicable(_1ce14cbc7_TypeKind*);
inline jule::Ptr<_1ce1557a1_Prim> _1ce150328_Prim(_1ce14cbc7_TypeKind*);
inline jule::Ptr<_1ce1592cc_Sptr> _1ce1505ae_Sptr(_1ce14cbc7_TypeKind*);
inline jule::Ptr<_1ce15ca94_Ptr> _1ce150845_Ptr(_1ce14cbc7_TypeKind*);
inline jule::Ptr<_1ce01d416_Enum> _1ce150acb_Enum(_1ce14cbc7_TypeKind*);
inline jule::Ptr<_1ce01eb21_TypeEnum> _1ce150d62_TypeEnum(_1ce14cbc7_TypeKind*);
inline jule::Ptr<_1ce15c0c1_Arr> _1ce1510e8_Arr(_1ce14cbc7_TypeKind*);
inline jule::Ptr<_1ce159ca0_Slc> _1ce15137e_Slc(_1ce14cbc7_TypeKind*);
inline jule::Ptr<_1ce00a832_FnIns> _1ce151615_Fn(_1ce14cbc7_TypeKind*);
inline jule::Ptr<_1cdee571d_StructIns> _1ce15189b_Struct(_1ce14cbc7_TypeKind*);
inline jule::Ptr<_1ce01ac0a_Trait> _1ce151b32_Trait(_1ce14cbc7_TypeKind*);
inline jule::Ptr<_1ce15b444_Map> _1ce151db8_Map(_1ce14cbc7_TypeKind*);
inline jule::Ptr<_1ce15a894_Tuple> _1ce15214e_Tup(_1ce14cbc7_TypeKind*);
inline jule::Bool _1ce1523d5_comptime(_1ce14cbc7_TypeKind*);
inline jule::Ptr<_1ce02540c_comptimeStructFields> _1ce15266b_comptimeStructFields(_1ce14cbc7_TypeKind*);
inline jule::Ptr<_1ce02374b_comptimeStructField> _1ce152902_comptimeStructField(_1ce14cbc7_TypeKind*);
inline jule::Ptr<_1ce02b15a_comptimeEnumFields> _1ce152b88_comptimeEnumFields(_1ce14cbc7_TypeKind*);
inline jule::Ptr<_1ce029cb3_comptimeEnumField> _1ce152e1e_comptimeEnumField(_1ce14cbc7_TypeKind*);
inline jule::Ptr<_1ce02e8de_comptimeParams> _1ce1531a5_comptimeParams(_1ce14cbc7_TypeKind*);
inline jule::Ptr<_1ce02c755_comptimeParam> _1ce15343b_comptimeParam(_1ce14cbc7_TypeKind*);
inline jule::Ptr<_1ce022c78_comptimeRange> _1ce1536c2_comptimeRange(_1ce14cbc7_TypeKind*);
inline jule::Ptr<_1ce030ea6_comptimeTypeInfos> _1ce153958_comptimeTypeInfos(_1ce14cbc7_TypeKind*);
inline jule::Ptr<_1ce0325a1_comptimeTypeInfo> _1ce153bde_comptimeTypeInfo(_1ce14cbc7_TypeKind*);
inline jule::Ptr<_1ce0286b8_comptimeStatics> _1ce153e75_comptimeStatics(_1ce14cbc7_TypeKind*);
inline jule::Ptr<_1ce026a07_comptimeStatic> _1ce15420b_comptimeStatic(_1ce14cbc7_TypeKind*);
inline jule::Ptr<_1ce038ab3_comptimeValue> _1ce154492_comptimeValue(_1ce14cbc7_TypeKind*);
inline jule::Ptr<_1ce03ca0c_comptimeFile> _1ce154728_comptimeFile(_1ce14cbc7_TypeKind*);
inline jule::Ptr<_1ce03b412_comptimeFiles> _1ce1549ae_comptimeFiles(_1ce14cbc7_TypeKind*);
inline jule::Bool _1ce15521d_checked(_1ce154d99_TypeSymbol*);
inline jule::Str _1ce155ae2_Str(_1ce1557a1_Prim*);
inline jule::Bool _1ce155e33_Equal(jule::Ptr<_1ce1557a1_Prim>, jule::Ptr<_1ce14cbc7_TypeKind>);
inline jule::Bool _1ce1563c8_IsConstraint(_1ce1557a1_Prim*);
inline jule::Bool _1ce15665e_IsI8(_1ce1557a1_Prim*);
inline jule::Bool _1ce1568e5_IsI16(_1ce1557a1_Prim*);
inline jule::Bool _1ce156b7b_IsI32(_1ce1557a1_Prim*);
inline jule::Bool _1ce156e12_IsI64(_1ce1557a1_Prim*);
inline jule::Bool _1ce157198_IsU8(_1ce1557a1_Prim*);
inline jule::Bool _1ce15742e_IsU16(_1ce1557a1_Prim*);
inline jule::Bool _1ce1576b5_IsU32(_1ce1557a1_Prim*);
inline jule::Bool _1ce15794b_IsU64(_1ce1557a1_Prim*);
inline jule::Bool _1ce157bd2_IsF32(_1ce1557a1_Prim*);
inline jule::Bool _1ce157e68_IsF64(_1ce1557a1_Prim*);
inline jule::Bool _1ce1581ee_IsInt(_1ce1557a1_Prim*);
inline jule::Bool _1ce158485_IsUint(_1ce1557a1_Prim*);
inline jule::Bool _1ce15871b_IsUintptr(_1ce1557a1_Prim*);
inline jule::Bool _1ce1589a2_IsBool(_1ce1557a1_Prim*);
inline jule::Bool _1ce158c38_IsStr(_1ce1557a1_Prim*);
inline jule::Bool _1ce158ebe_IsAny(_1ce1557a1_Prim*);
inline jule::Str _1ce159651_Str(_1ce1592cc_Sptr*);
inline jule::Bool _1ce159992_Equal(jule::Ptr<_1ce1592cc_Sptr>, jule::Ptr<_1ce14cbc7_TypeKind>);
inline jule::Str _1ce15a234_Str(_1ce159ca0_Slc*);
inline jule::Bool _1ce15a575_Equal(jule::Ptr<_1ce159ca0_Slc>, jule::Ptr<_1ce14cbc7_TypeKind>);
inline jule::Str _1ce15ac18_Str(_1ce15a894_Tuple*);
inline jule::Bool _1ce15b059_Equal(jule::Ptr<_1ce15a894_Tuple>, jule::Ptr<_1ce14cbc7_TypeKind>);
inline jule::Str _1ce15b7b8_Str(_1ce15b444_Map*);
inline jule::Bool _1ce15bb09_Equal(jule::Ptr<_1ce15b444_Map>, jule::Ptr<_1ce14cbc7_TypeKind>);
inline jule::Str _1ce15c445_Str(_1ce15c0c1_Arr*);
inline jule::Bool _1ce15c786_Equal(jule::Ptr<_1ce15c0c1_Arr>, jule::Ptr<_1ce14cbc7_TypeKind>);
inline jule::Str _1ce15ce18_Str(_1ce15ca94_Ptr*);
inline jule::Bool _1ce15d259_Equal(jule::Ptr<_1ce15ca94_Ptr>, jule::Ptr<_1ce14cbc7_TypeKind>);
inline jule::Bool _1ce15d5cd_IsUnsafe(_1ce15ca94_Ptr*);
inline void _1ce1602c2_pushErr(_1ce15ea85_typeChecker*, jule::Ptr<_1cdeab4b4_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ce1604c0_allowBuiltin(_1ce15ea85_typeChecker*);
inline void _1ce1606bd_disallowBuiltin(_1ce15ea85_typeChecker*);
inline void _1b8568647_pushReference(_1ce15ea85_typeChecker*, jule::Ptr<_1cdee571d_StructIns>*);
inline void _1b856b062_pushReference(_1ce15ea85_typeChecker*, jule::Ptr<_1ce01ac0a_Trait>*);
inline void _1ce160c2e_pushReferenceByKind(_1ce15ea85_typeChecker*, jule::Ptr<_1ce14cbc7_TypeKind>*);
inline void _1ce16114c_pushCycleError(_1ce15ea85_typeChecker*, jule::Any, jule::Any, _22ab0b88c_StrBuilder*);
inline jule::Bool _1ce161548_checkCrossCycle(_1ce15ea85_typeChecker*, jule::Any, _22ab0b88c_StrBuilder*);
inline jule::Bool _1ce161944_checkIllegalCycles(_1ce15ea85_typeChecker*, jule::Ptr<_1cdec219a_IdentTypeDecl>*, jule::Any);
inline jule::Trait<_1ce14c721_Kind> _1ce161d40_fromTypeAlias(_1ce15ea85_typeChecker*, jule::Ptr<_1cdec219a_IdentTypeDecl>*, jule::Ptr<_1ce14bdd5_TypeAlias>*);
inline jule::Ptr<_1ce01d416_Enum> _1ce16223b_fromEnum(_1ce15ea85_typeChecker*, jule::Ptr<_1cdec219a_IdentTypeDecl>*, jule::Ptr<_1ce01d416_Enum>*);
inline jule::Ptr<_1ce01eb21_TypeEnum> _1ce162637_fromTypeEnum(_1ce15ea85_typeChecker*, jule::Ptr<_1cdec219a_IdentTypeDecl>*, jule::Ptr<_1ce01eb21_TypeEnum>*);
inline jule::Ptr<_1ce01ac0a_Trait> _1ce162a33_fromTrait(_1ce15ea85_typeChecker*, jule::Ptr<_1cdec219a_IdentTypeDecl>*, jule::Ptr<_1ce01ac0a_Trait>*);
inline jule::Bool _1ce162e2e_checkStructIns(_1ce15ea85_typeChecker*, jule::Ptr<_1cdee571d_StructIns>*, jule::Ptr<_1cdeab4b4_Token>*);
inline void _1ce1631d7_appendUsedStructReference(_1ce15ea85_typeChecker*, jule::Ptr<_1cdee2990_Struct>*);
inline jule::Ptr<_1cdee571d_StructIns> _1ce1635d3_buildStructInstance(_1ce15ea85_typeChecker*, jule::Ptr<_1cdec219a_IdentTypeDecl>*, jule::Ptr<_1cdee2990_Struct>*);
inline jule::Ptr<_1cdee571d_StructIns> _1ce1639ce_fromStruct(_1ce15ea85_typeChecker*, jule::Ptr<_1cdec219a_IdentTypeDecl>*, jule::Ptr<_1cdee2990_Struct>*);
inline jule::Trait<_1ce14c721_Kind> _1ce163d20_getDef(_1ce15ea85_typeChecker*, jule::Ptr<_1cdec219a_IdentTypeDecl>*);
inline jule::Trait<_1ce14c721_Kind> _1ce164161_buildIdent(_1ce15ea85_typeChecker*, jule::Ptr<_1cdec219a_IdentTypeDecl>);
inline jule::Trait<_1ce14c721_Kind> _1ce1644a2_buildSubIdent(_1ce15ea85_typeChecker*, jule::Ptr<_1cdec2464_SubIdentTypeDecl>);
inline jule::Ptr<_1ce1592cc_Sptr> _1ce1647e3_buildSptrFromType(_1ce15ea85_typeChecker*, jule::Ptr<_1ce14cbc7_TypeKind>*);
inline jule::Ptr<_1ce1592cc_Sptr> _1ce164b34_buildSptr(_1ce15ea85_typeChecker*, jule::Ptr<_1cdec2b3a_SptrTypeDecl>);
inline jule::Ptr<_1ce15ca94_Ptr> _1ce164e75_buildPtrFromType(_1ce15ea85_typeChecker*, jule::Ptr<_1ce14cbc7_TypeKind>*);
inline jule::Ptr<_1ce15ca94_Ptr> _1ce1652b6_buildPtr(_1ce15ea85_typeChecker*, jule::Ptr<_1cdec35b9_PtrTypeDecl>);
inline jule::Ptr<_1ce159ca0_Slc> _1ce165607_buildSlc(_1ce15ea85_typeChecker*, jule::Ptr<_1cdec2ec0_SlcTypeDecl>);
inline jule::Ptr<_1ce15c0c1_Arr> _1ce165948_buildArr(_1ce15ea85_typeChecker*, jule::Ptr<_1cdec3d5b_ArrTypeDecl>);
inline jule::Ptr<_1ce15b444_Map> _1ce165c89_buildMap(_1ce15ea85_typeChecker*, jule::Ptr<_1cdec45a9_MapTypeDecl>);
inline jule::Ptr<_1ce15a894_Tuple> _1ce1660ca_buildTuple(_1ce15ea85_typeChecker*, jule::Ptr<_1cdec32bc_TupleTypeDecl>);
inline jule::Bool _1ce16641b_checkFuncTypes(_1ce15ea85_typeChecker*, jule::Ptr<_1ce00a832_FnIns>*);
inline jule::Ptr<_1ce00a832_FnIns> _1ce16675c_buildFunc(_1ce15ea85_typeChecker*, jule::Ptr<_1cded3750_FnDecl>);
inline jule::Trait<_1ce14c721_Kind> _1ce166a9d_buildByNamespace(_1ce15ea85_typeChecker*, jule::Ptr<_1cdec283d_NamespaceTypeDecl>);
inline jule::Ptr<_1ce14cbc7_TypeKind> _1ce166dde_build(_1ce15ea85_typeChecker*, jule::Any*);
inline jule::Ptr<_1ce14cbc7_TypeKind> _1ce167230_checkDecl(_1ce15ea85_typeChecker*, jule::Ptr<_1cdec1a90_TypeDecl>*);
inline jule::Bool static__1ce167b7b_prim(jule::Str*, jule::Ptr<_1ce1557a1_Prim>);
inline jule::Bool static__1ce168000_exist(jule::Str*, jule::Ptr<_1ce14cbc7_TypeKind>*);
inline void _1b5777d43_stop(_1b57776c2_scopeParser*);
inline jule::Bool _1b57780c9_stopped(_1b57776c2_scopeParser*);
inline jule::Bool _1b5778360_finished(_1b57776c2_scopeParser*);
inline jule::Bool _1b57785e6_isLastSt(_1b57776c2_scopeParser*);
inline void _1b5778959_pushErr(_1b57776c2_scopeParser*, jule::Ptr<_1cdeab4b4_Token>, jule::Str);
inline void _1b5778cbc_pushSuggestion(_1b57776c2_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1b5779075_insertAsNext(_1b57776c2_scopeParser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Ptr<_1b5776d31_stmt> _1b577930b_next(_1b57776c2_scopeParser*);
inline jule::Ptr<_1cded1ab1_ScopeTree> _1b5779707_buildScope(_1b57776c2_scopeParser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Ptr<_1cded490a_VarDecl> _1b5779a48_buildVarSt(_1b57776c2_scopeParser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Ptr<_1cded4cd4_RetSt> _1b5779d89_buildRetSt(_1b57776c2_scopeParser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline jule::Ptr<_1cded5554_Iter> _1b577a1ca_buildWhileNextIter(_1b57776c2_scopeParser*, jule::Ptr<_1b5776d31_stmt>*);
inline jule::Ptr<_1cded5d7e_WhileKind> _1b577a51b_buildWhileIterKind(_1b57776c2_scopeParser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>> _1b577a85c_getRangeKindKeysTokens(_1b57776c2_scopeParser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Ptr<_1cded490a_VarDecl> _1b577ab9d_buildRangeKindKey(_1b57776c2_scopeParser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Slice<jule::Ptr<_1cded490a_VarDecl>> _1b577aede_buildRangeKindKeys(_1b57776c2_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>>*);
inline void _1b577b352_setupRangeKindKeysPlain(_1b57776c2_scopeParser*, jule::Ptr<_1cded6786_RangeKind>*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline void _1b577b6b5_setupRangeKindKeysExplicit(_1b57776c2_scopeParser*, jule::Ptr<_1cded6786_RangeKind>*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline void _1b577ba28_setupRangeKindKeys(_1b57776c2_scopeParser*, jule::Ptr<_1cded6786_RangeKind>*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Ptr<_1cded6786_RangeKind> _1b577bece_buildRangeIterKind(_1b57776c2_scopeParser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*, jule::Ptr<_1cdeab4b4_Token>*);
inline jule::Any _1b577c3ca_buildCommonIterKind(_1b57776c2_scopeParser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*, jule::Ptr<_1cdeab4b4_Token>*);
inline jule::Ptr<_1cded5554_Iter> _1b577c71b_buildCommonIter(_1b57776c2_scopeParser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline jule::Ptr<_1cded5554_Iter> _1b577ca5c_buildIterSt(_1b57776c2_scopeParser*, jule::Ptr<_1b5776d31_stmt>*);
inline jule::Ptr<_1cded6b60_BreakSt> _1b577cd9d_buildBreakSt(_1b57776c2_scopeParser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Ptr<_1cded7039_ContSt> _1b577d1de_buildContSt(_1b57776c2_scopeParser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Ptr<_1cded74e0_If> _1b577d530_buildIf(_1b57776c2_scopeParser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Ptr<_1cded78b9_Else> _1b577d871_buildElse(_1b57776c2_scopeParser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Ptr<_1cded7d70_Conditional> _1b577dbb2_buildIfElseChain(_1b57776c2_scopeParser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline jule::Ptr<_1cdec5dc4_Expr> _1b577e003_buildCoCallSt(_1b57776c2_scopeParser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline jule::Ptr<_1cdece54d_GotoSt> _1b577e344_buildGotoSt(_1b57776c2_scopeParser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Ptr<_1cdece84a_FallSt> _1b577e685_buildFallSt(_1b57776c2_scopeParser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Ptr<_1cded85ac_TypeAliasDecl> _1b577e9c6_buildTypeAliasSt(_1b57776c2_scopeParser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline void _1b577ee9e_pushCaseExpr(_1b57776c2_scopeParser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>, jule::Ptr<_1cdeab4b4_Token>, jule::Bool, jule::Slice<jule::Ptr<_1cdec5dc4_Expr>>*);
inline __jule_tuple_sx_1cdec5dc4_Expr__jule_tuple_bool _1b5780455_buildCaseExprs(_1b57776c2_scopeParser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*, jule::Ptr<_1cdeab4b4_Token>*, jule::Bool);
inline jule::Ptr<_1cded1ab1_ScopeTree> _1b5780796_buildCaseScope(_1b57776c2_scopeParser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline __jule_tuple_x_1cded8a63_Case__jule_tuple_bool _1b5780b92_buildCase(_1b57776c2_scopeParser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*, jule::Bool);
inline __jule_tuple_sx_1cded8a63_Case__jule_tuple_x_1cded78b9_Else _1b578108d_buildCases(_1b57776c2_scopeParser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>, jule::Bool);
inline jule::Ptr<_1cded937c_MatchCase> _1b57813ce_buildMatchCase(_1b57776c2_scopeParser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline jule::Ptr<_1cded1ab1_ScopeTree> _1b5781720_buildScopeSt(_1b57776c2_scopeParser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline jule::Ptr<_1cdece174_LabelSt> _1b5781a61_buildLabelSt(_1b57776c2_scopeParser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline __jule_tuple__1cded11ed_StmtData__jule_tuple_bool _1b5781da2_buildIdSt(_1b57776c2_scopeParser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Ptr<_1b5792588_assignInfo> _1b57821e3_buildAssignInfo(_1b57776c2_scopeParser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Ptr<_1cdeceeaa_AssignLeft> _1b5782534_buildAssignL(_1b57776c2_scopeParser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Slice<jule::Ptr<_1cdeceeaa_AssignLeft>> _1b5782875_buildAssignLs(_1b57776c2_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>>*);
inline __jule_tuple__1cded11ed_StmtData__jule_tuple_bool _1b5782bb6_buildPlainAssign(_1b57776c2_scopeParser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Bool _1b57830b2_buildDeclAssign1(_1b57776c2_scopeParser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*, jule::Ptr<_1cded053d_AssignSt>*);
inline __jule_tuple_x_1cded053d_AssignSt__jule_tuple_bool _1b5783403_buildDeclAssign(_1b57776c2_scopeParser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline __jule_tuple__1cded11ed_StmtData__jule_tuple_bool _1b5783744_buildAssignSt(_1b57776c2_scopeParser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Ptr<_1cdec6798_UseExpr> _1b5783a85_buildUseExpr(_1b57776c2_scopeParser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Any _1b5783dc6_buildConstSt(_1b57776c2_scopeParser*, jule::Ptr<_1b5776d31_stmt>*);
inline jule::Any _1b5784217_buildSt(_1b57776c2_scopeParser*, jule::Ptr<_1b5776d31_stmt>*);
inline void _1b578457a_build(_1b57776c2_scopeParser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*, jule::Ptr<_1cded1ab1_ScopeTree>*);
inline void _1b57858cd_pushErr(_1b57850e7_exprBuilder*, jule::Ptr<_1cdeab4b4_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1b5785c41_pushSuggestion(_1b57850e7_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1cdec69b8_TupleExpr> _1b5786082_buildTuple(_1b57850e7_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>>*);
inline jule::Ptr<_1cdec6d5e_LitExpr> _1b57863c3_buildLit(_1b57850e7_exprBuilder*, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Any _1b5786a55_buildSingle(_1b57850e7_exprBuilder*, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Ptr<_1cdec76de_IdentExpr> _1b5786d96_buildBindIdent(_1b57850e7_exprBuilder*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Ptr<_1cdec7e81_UnaryExpr> _1b57871d7_buildUnary(_1b57850e7_exprBuilder*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline jule::Ptr<_1cdec8ed7_SubIdentExpr> _1b5787528_buildObjSubIdent(_1b57850e7_exprBuilder*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline jule::Ptr<_1cdec8b0d_NsSelectionExpr> _1b5787869_buildNsSubIdent(_1b57850e7_exprBuilder*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Ptr<_1cdec1a90_TypeDecl> _1b5787baa_buildType(_1b57850e7_exprBuilder*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Any _1b5787eeb_buildSubIdent(_1b57850e7_exprBuilder*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Ptr<_1cdec835a_VariadicExpr> _1b578833c_buildVariadic(_1b57850e7_exprBuilder*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline jule::Ptr<_1cdec618d_RangeExpr> _1b578867d_buildBetweenParentheses(_1b57850e7_exprBuilder*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline jule::Ptr<_1cdec8734_CastExpr> _1b57889be_tryBuildCast(_1b57850e7_exprBuilder*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline void _1b5788ddc_pushArg(_1b57850e7_exprBuilder*, jule::Slice<jule::Ptr<_1cdec5dc4_Expr>>*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Slice<jule::Ptr<_1cdec5dc4_Expr>> _1b578922d_buildArgs(_1b57850e7_exprBuilder*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline jule::Ptr<_1cdec9aed_FnCallExpr> _1b5789a25_buildFnCall(_1b57850e7_exprBuilder*, jule::Ptr<_1cdeab4b4_Token>*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Any _1b5789d66_buildParenthesesRange(_1b57850e7_exprBuilder*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Ptr<_1cdec7238_UnsafeExpr> _1b578a1a7_buildUnsafeExpr(_1b57850e7_exprBuilder*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline jule::Ptr<_1cded3750_FnDecl> _1b578a4e8_buildAnonFn(_1b57850e7_exprBuilder*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Any _1b578a839_buildUnsafe(_1b57850e7_exprBuilder*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline void _1b578ac57_pushRangeLitPart(_1b57850e7_exprBuilder*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>, jule::Ptr<_1cdeab4b4_Token>, jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>> _1b578b098_getBraceRangeLitExprParts(_1b57850e7_exprBuilder*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline jule::Ptr<_1cdeca5e3_FieldExprPair> _1b578b3d9_buildFieldExprPair(_1b57850e7_exprBuilder*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline jule::Ptr<_1cdec5dc4_Expr> _1b578b72a_buildStructLitExpr(_1b57850e7_exprBuilder*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Slice<jule::Ptr<_1cdec5dc4_Expr>> _1b578ba6b_buildStructLitExprs(_1b57850e7_exprBuilder*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Ptr<_1cdecae1d_StructLit> _1b578bdac_buildTypedStructLiteral(_1b57850e7_exprBuilder*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline jule::Ptr<_1cdec5dc4_Expr> _1b578c1ed_buildBraceLitPart(_1b57850e7_exprBuilder*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Ptr<_1cdecb3c4_BraceLit> _1b578c53e_buildBraceLit(_1b57850e7_exprBuilder*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Any _1b578c880_buildBraceRange(_1b57850e7_exprBuilder*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>> _1b578cbc1_getEnumerableParts(_1b57850e7_exprBuilder*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline jule::Ptr<_1cdecc42a_SliceExpr> _1b578d012_buildSlice(_1b57850e7_exprBuilder*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline jule::Ptr<_1cdeccd87_IndexingExpr> _1b578d4b8_buildIndexing(_1b57850e7_exprBuilder*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Ptr<_1cdecd4e7_SlicingExpr> _1b578dad4_buildSlicing(_1b57850e7_exprBuilder*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*, jule::Ptr<_1cdeab4b4_Token>*, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Any _1b578de25_buildBracketRange(_1b57850e7_exprBuilder*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline jule::Any _1b578e266_buildExclRight(_1b57850e7_exprBuilder*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Any _1b578e5a7_buildData(_1b57850e7_exprBuilder*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Any _1b578e9a3_buildBinary(_1b57850e7_exprBuilder*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*, jule::I32);
inline jule::Any _1b578ece4_build(_1b57850e7_exprBuilder*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Any _1b5790135_buildKind(_1b57850e7_exprBuilder*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Ptr<_1cdec5dc4_Expr> _1b5790476_buildFromTokens(_1b57850e7_exprBuilder*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline void _1b5795c84_stop(_1b5795987_parser*);
inline jule::Bool _1b579601a_stopped(_1b5795987_parser*);
inline void _1b5796438_pushErr(_1b5795987_parser*, jule::Ptr<_1cdeab4b4_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1b579679b_pushSuggestion(_1b5795987_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1cdec5dc4_Expr> _1b5796adc_buildExpr(jule::Ptr<_1b5795987_parser>, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Ptr<_1cdec0eac_Directive> _1b5796e2d_buildDirective(_1b5795987_parser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline void _1b57971d6_pushDirective(_1b5795987_parser*, jule::Ptr<_1cdec0eac_Directive>);
inline jule::Ptr<_1cded1ab1_ScopeTree> _1b57975d2_buildScope(jule::Ptr<_1b5795987_parser>, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*, jule::Ptr<_1cdeab4b4_Token>);
inline __jule_tuple_x_1cdec1a90_TypeDecl__jule_tuple_bool _1b5797a88__buildType(jule::Ptr<_1b5795987_parser>, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*, jule::I32*, jule::Bool);
inline __jule_tuple_x_1cdec1a90_TypeDecl__jule_tuple_bool _1b579803e_buildType(jule::Ptr<_1b5795987_parser>, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*, jule::I32*, jule::Bool);
inline jule::Ptr<_1cded85ac_TypeAliasDecl> _1b5798380_buildTypeAliasDecl(jule::Ptr<_1b5795987_parser>, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline void _1b57986e3_buildVarTypeAndExpr(jule::Ptr<_1b5795987_parser>, jule::Ptr<_1cded490a_VarDecl>*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline void _1b5798a56_buildVarCommon(jule::Ptr<_1b5795987_parser>, jule::Ptr<_1cded490a_VarDecl>*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline void _1b5798e74_buildVarBegin(_1b5795987_parser*, jule::Ptr<_1cded490a_VarDecl>*, jule::I32*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Ptr<_1cded490a_VarDecl> _1b57992b5_buildVar(jule::Ptr<_1b5795987_parser>, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline jule::Ptr<_1cdecdc9a_GenericDecl> _1b5799606_buildGeneric(jule::Ptr<_1b5795987_parser>, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Slice<jule::Ptr<_1cdecdc9a_GenericDecl>> _1b5799a02_buildGenerics(jule::Ptr<_1b5795987_parser>, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*, jule::Ptr<_1cdeab4b4_Token>*);
inline jule::Ptr<_1cded22ed_ParamDecl> _1b5799d43_buildSelfParam(_1b5795987_parser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline void _1b579a261_paramTypeBegin(_1b5795987_parser*, jule::Ptr<_1cded22ed_ParamDecl>*, jule::I32*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline void _1b579a5c4_buildParamType(jule::Ptr<_1b5795987_parser>, jule::Ptr<_1cded22ed_ParamDecl>*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline void _1b579a937_buildParamBody(jule::Ptr<_1b5795987_parser>, jule::Ptr<_1cded22ed_ParamDecl>*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline jule::Ptr<_1cded22ed_ParamDecl> _1b579ac78_buildParam(jule::Ptr<_1b5795987_parser>, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline void _1b579b031_checkParams(_1b5795987_parser*, jule::Slice<jule::Ptr<_1cded22ed_ParamDecl>>*);
inline jule::Slice<jule::Ptr<_1cded22ed_ParamDecl>> _1b579b42c_buildParams(jule::Ptr<_1b5795987_parser>, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*, jule::Bool);
inline __jule_tuple_x_1cdec4983_RetTypeDecl__jule_tuple_bool _1b579b828_buildMultiRetType(jule::Ptr<_1b5795987_parser>, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*, jule::I32*);
inline __jule_tuple_x_1cdec4983_RetTypeDecl__jule_tuple_bool _1b579bc24_buildRetType(jule::Ptr<_1b5795987_parser>, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*, jule::I32*);
inline jule::Ptr<_1cded3750_FnDecl> _1b579c1ca_buildFnPrototype(jule::Ptr<_1b5795987_parser>, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*, jule::I32*, jule::Bool);
inline jule::Ptr<_1cded3750_FnDecl> _1b579c681_buildFn(jule::Ptr<_1b5795987_parser>, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _1b579c9c2_getUseDeclSelectors(_1b5795987_parser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline void _1b579cd35_buildBindUseDecl(_1b5795987_parser*, jule::Ptr<_1cded9b96_UseDecl>*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Str _1b579d176_useDeclTokstoa(_1b5795987_parser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline void _1b579d4d9_buildStdUseDecl(_1b5795987_parser*, jule::Ptr<_1cded9b96_UseDecl>*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline void _1b579d84c_buildIdentUseDecl(_1b5795987_parser*, jule::Ptr<_1cded9b96_UseDecl>*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline void _1b579dbb0_parseUseDecl(_1b5795987_parser*, jule::Ptr<_1cded9b96_UseDecl>*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline jule::Ptr<_1cded9b96_UseDecl> _1b579e0ab_buildUseDecl(_1b5795987_parser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>, jule::Bool);
inline jule::Ptr<_1cdec1a90_TypeDecl> _1b579e4a7_buildTypeEnumItemKind(jule::Ptr<_1b5795987_parser>, jule::I32*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Slice<jule::Ptr<_1cdedb538_TypeEnumItemDecl>> _1b579e7e8_buildTypeEnumItems(jule::Ptr<_1b5795987_parser>, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Ptr<_1cdedbb98_TypeEnumDecl> _1b579eb39_buildTypeEnumDecl(jule::Ptr<_1b5795987_parser>, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Ptr<_1cdec5dc4_Expr> _1b57a0035_buildEnumItemExpr(jule::Ptr<_1b5795987_parser>, jule::I32*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Slice<jule::Ptr<_1cdeda14c_EnumItemDecl>> _1b57a0376_buildEnumItems(jule::Ptr<_1b5795987_parser>, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Ptr<_1cdedac0d_EnumDecl> _1b57a06b7_buildEnumDecl(jule::Ptr<_1b5795987_parser>, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Any _1b57a0a08_buildNodeEnumDecl(jule::Ptr<_1b5795987_parser>, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Ptr<_1cdedbe62_FieldDecl> _1b57a0d49_buildField(jule::Ptr<_1b5795987_parser>, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline jule::Slice<jule::Ptr<_1cdedbe62_FieldDecl>> _1b57a118a_buildStructDeclFields(jule::Ptr<_1b5795987_parser>, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline jule::Ptr<_1cdedc858_StructDecl> _1b57a14cb_buildStructDecl(jule::Ptr<_1b5795987_parser>, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline void _1b57a1784_checkMethodReceiver(_1b5795987_parser*, jule::Ptr<_1cded3750_FnDecl>*);
inline void _1b57a1ae7_buildTraitBody(jule::Ptr<_1b5795987_parser>, jule::Ptr<_1cdedd095_TraitDecl>*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline jule::Ptr<_1cdedd095_TraitDecl> _1b57a1e38_buildTraitDecl(jule::Ptr<_1b5795987_parser>, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Ptr<_1cded3750_FnDecl> _1b57a2279_buildBindFn(jule::Ptr<_1b5795987_parser>, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline jule::Ptr<_1cded490a_VarDecl> _1b57a25ba_buildBindVar(jule::Ptr<_1b5795987_parser>, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline jule::Ptr<_1cdedc858_StructDecl> _1b57a290b_buildBindStruct(jule::Ptr<_1b5795987_parser>, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline jule::Ptr<_1cded85ac_TypeAliasDecl> _1b57a2c4c_buildBindTypeAlias(jule::Ptr<_1b5795987_parser>, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline jule::Ptr<_1cded9b96_UseDecl> _1b57a308d_buildBindUse(jule::Ptr<_1b5795987_parser>, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline jule::Any _1b57a33ce_buildBind(jule::Ptr<_1b5795987_parser>, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Ptr<_1cded3750_FnDecl> _1b57a3720_getMethod(jule::Ptr<_1b5795987_parser>, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline void _1b57a3a83_parseImplBody(jule::Ptr<_1b5795987_parser>, jule::Ptr<_1cdedd705_Impl>*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Ptr<_1cdedd705_Impl> _1b57a3dc4_buildImpl(jule::Ptr<_1b5795987_parser>, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline jule::Any _1b57a4215_buildNodeData(jule::Ptr<_1b5795987_parser>, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline void _1b57a44bd_applyFnMeta(_1b5795987_parser*, jule::Ptr<_1cded3750_FnDecl>*);
inline void _1b57a4776_applyMeta(_1b5795987_parser*, _1cdec0a8e_Node*);
inline void _1b57a4a2e_pushUseDecl(jule::Ptr<_1b5795987_parser>, jule::Ptr<_1cded9b96_UseDecl>*);
inline jule::Bool _1b57a4d70_pushMetaNodes(jule::Ptr<_1b5795987_parser>, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline _1cdec0a8e_Node _1b57a51b1_parseNode(jule::Ptr<_1b5795987_parser>, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline void _1b57a5469_appendNode(jule::Ptr<_1b5795987_parser>, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline void _1b57a5942_removeRange(_1b5795987_parser*, jule::I32, jule::U32, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*, jule::Slice<jule::I32>*);
inline void _1b57a5d60_pushWrongOrderCloseErr(_1b5795987_parser*, jule::Ptr<_1cdeab4b4_Token>*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*, jule::Slice<jule::I32>*);
inline void _1b57a6338_pushRangeClose(_1b5795987_parser*, jule::Ptr<_1cdeab4b4_Token>, jule::U32, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*, jule::Slice<jule::I32>*);
inline void _1b57a65e1_checkRanges(_1b5795987_parser*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline void _1b57a6899_parse(jule::Ptr<_1b5795987_parser>, jule::Ptr<_1cdeb1c4a_File>*);
inline void _1b57a8208_pushErr(_1b57a7b64_typeBuilder*, jule::Ptr<_1cdeab4b4_Token>, jule::Str);
inline void _1b57a856b_pushSuggestion(_1b57a7b64_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1cdec1a90_TypeDecl> _1b57a8802_buildNamespace(_1b57a7b64_typeBuilder*);
inline jule::Slice<jule::Ptr<_1cdec1a90_TypeDecl>> _1b57a8a88_buildGenerics(_1b57a7b64_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>> _1b57a8d1e_identGenerics(_1b57a7b64_typeBuilder*);
inline jule::Ptr<_1cdec1a90_TypeDecl> _1b57a90a5_buildIdent(_1b57a7b64_typeBuilder*);
inline jule::Ptr<_1cdec1a90_TypeDecl> _1b57a933b_buildCppLink(_1b57a7b64_typeBuilder*);
inline jule::Ptr<_1cdec1a90_TypeDecl> _1b57a95c2_buildFn(_1b57a7b64_typeBuilder*);
inline jule::Ptr<_1cdec1a90_TypeDecl> _1b57a9858_buildPtr(_1b57a7b64_typeBuilder*);
inline jule::Ptr<_1cdec1a90_TypeDecl> _1b57a9ade_buildSptr(_1b57a7b64_typeBuilder*);
inline jule::Ptr<_1cdec1a90_TypeDecl> _1b57a9d75_buildSlc(_1b57a7b64_typeBuilder*);
inline jule::Ptr<_1cdec1a90_TypeDecl> _1b57aa10b_buildArr(_1b57a7b64_typeBuilder*);
inline jule::Ptr<_1cdec1a90_TypeDecl> _1b57aa392_buildMap(_1b57a7b64_typeBuilder*);
inline jule::Ptr<_1cdec1a90_TypeDecl> _1b57aa628_buildEnumerable(_1b57a7b64_typeBuilder*);
inline jule::Ptr<_1cdec1a90_TypeDecl> _1b57aa8ae_step(_1b57a7b64_typeBuilder*);
inline __jule_tuple_x_1cdec1a90_TypeDecl__jule_tuple_bool _1b57aab45_build(_1b57a7b64_typeBuilder*);
inline void _1ce3639e2_pushErr(_1ce363492_directiveEval*, jule::Ptr<_1cdeab4b4_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>> _1ce363ddd_splitOperans(_1ce363492_directiveEval*, jule::U32, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Bool _1ce36422e_evalDirectiveIdent(_1ce363492_directiveEval*, jule::Str);
inline jule::Bool _1ce364570_evalDirectivePart(_1ce363492_directiveEval*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline jule::Bool _1ce364806_eval(_1ce363492_directiveEval*);
inline jule::Ptr<_1b57abc9a_JuleImporter> static__1b57ac196_New(_1ce361eb8_CompileInfo);
inline jule::Slice<jule::Ptr<_1ce06b0ac_ImportInfo>> _1b57ac42c_AllPackages(_1b57abc9a_JuleImporter*);
inline void _1b57ac86c_SetModPath(_1b57abc9a_JuleImporter*, jule::Str);
inline jule::Str _1b57acb03_GetModPath(_1b57abc9a_JuleImporter*);
inline jule::Str _1b57ace44_ModById(_1b57abc9a_JuleImporter*, jule::I32);
inline jule::Ptr<_1ce06b0ac_ImportInfo> _1b57ad285_GetImport(_1b57abc9a_JuleImporter*, jule::Str);
inline __jule_tuple_sx_1cdebead2_Ast__jule_tuple_s_22a93672d_Log _1b57ad681_ImportPackage(_1b57abc9a_JuleImporter*, jule::Str, jule::Bool);
inline void _1b57ad939_Imported(_1b57abc9a_JuleImporter*, jule::Ptr<_1ce06b0ac_ImportInfo>);
inline __jule_tuple_bool__jule_tuple_s_22a93672d_Log _1b57add68_isPassBuildDirectives(_1b57abc9a_JuleImporter*, jule::Ptr<_1cdebead2_Ast>*);
inline jule::Bool _1b90c3899_isCommonOrdered(jule::Slice<jule::Ptr<_1cdee2990_Struct>>, jule::Ptr<_1cdee2990_Struct>);
inline jule::Bool _1b90c878e_isCommonOrdered(jule::Slice<jule::Ptr<_1ce0b4105_Var>>, jule::Ptr<_1ce0b4105_Var>);
inline void _1b90c0005_orderCommon(jule::Slice<jule::Ptr<_1cdee2990_Struct>>*);
inline void _1b90c5a88_orderCommon(jule::Slice<jule::Ptr<_1ce0b4105_Var>>*);
inline void static__1b57b2b19_orderStructures(jule::Slice<jule::Ptr<_1cdee2990_Struct>>*);
inline void static__1b57b2d4a_orderVars(jule::Slice<jule::Ptr<_1ce0b4105_Var>>*);
inline void _1b592a7cb_optimizeChild(jule::Ptr<_1b592a2e2_scopeDeadCode>, jule::Ptr<_1ce0497c7_Scope>*);
inline void _1b592aa84_optimizeBodyChildExceptional(jule::Ptr<_1b592a2e2_scopeDeadCode>, jule::Ptr<_1ce0497c7_Scope>*);
inline void _1b592ad3c_optimizeBodyChild(jule::Ptr<_1b592a2e2_scopeDeadCode>, jule::Ptr<_1ce0497c7_Scope>*);
inline void _1b592b0e5_optimizeExprModel(jule::Ptr<_1b592a2e2_scopeDeadCode>, jule::Any*);
inline void _1b592b2e3_eliminateFollowed(_1b592a2e2_scopeDeadCode*);
inline void _1b592b59b_pushGoto(jule::Ptr<_1b592a2e2_scopeDeadCode>, jule::Ptr<_1ce04c544_GotoSt>);
inline void _1b592b854_pushLabel(jule::Ptr<_1b592a2e2_scopeDeadCode>, jule::Ptr<_1ce04c16a_Label>);
inline void _1b592bb0c_optimizeRangeIter(jule::Ptr<_1b592a2e2_scopeDeadCode>, jule::Ptr<_1ce04b60e_RangeIter>);
inline void _1b592bdb5_optimizeWhileIter(jule::Ptr<_1b592a2e2_scopeDeadCode>, jule::Ptr<_1ce04abb3_WhileIter>);
inline void _1b592c16d_optimizeInfIter(jule::Ptr<_1b592a2e2_scopeDeadCode>, jule::Ptr<_1ce04a70c_InfIter>);
inline void _1b592c426_optimizeConditional(jule::Ptr<_1b592a2e2_scopeDeadCode>, jule::Ptr<_1ce04a410_Conditional>);
inline void _1b592c6ce_optimizeMatch(jule::Ptr<_1b592a2e2_scopeDeadCode>, jule::Ptr<_1ce04d90d_Match>);
inline void _1b592c987_optimizeAssign(jule::Ptr<_1b592a2e2_scopeDeadCode>, jule::Ptr<_1ce04cdc4_Assign>);
inline void _1b592cc40_optimizeMultiAssign(jule::Ptr<_1b592a2e2_scopeDeadCode>, jule::Ptr<_1ce04d29d_MultiAssign>);
inline void _1b592cee8_optimizeStmt(jule::Ptr<_1b592a2e2_scopeDeadCode>, jule::Any);
inline void _1b592d1e6_optimizeStmts(jule::Ptr<_1b592a2e2_scopeDeadCode>);
inline _1b592e57c_exprDeadCode static__1b592ebba_new(jule::Ptr<_1b592a2e2_scopeDeadCode>*);
inline void _1b592ee73_binary(_1b592e57c_exprDeadCode*, jule::Ptr<_1cdee9bb7_BinaryExprModel>);
inline void _1b593022b_unary(_1b592e57c_exprDeadCode*, jule::Ptr<_1cdeea091_UnaryExprModel>);
inline void _1b59304d4_structureLit(_1b592e57c_exprDeadCode*, jule::Ptr<_1cdeea965_StructLitExprModel>);
inline void _1b593078c_allocStructure(_1b592e57c_exprDeadCode*, jule::Ptr<_1cdeeac62_AllocStructLitExprModel>);
inline void _1b5930a45_casting(_1b592e57c_exprDeadCode*, jule::Ptr<_1cdeeb2e5_CastingExprModel>);
inline void _1b5930ced_args(_1b592e57c_exprDeadCode*, jule::Slice<jule::Any>*);
inline void _1b59310a6_funcCall(_1b592e57c_exprDeadCode*, jule::Ptr<_1cdeebb97_FnCallExprModel>);
inline void _1b593135e_slice(_1b592e57c_exprDeadCode*, jule::Ptr<_1cdeec071_SliceExprModel>);
inline void _1b5931617_array(_1b592e57c_exprDeadCode*, jule::Ptr<_1cdeeeea8_ArrayExprModel>);
inline void _1b59318c0_indexing(_1b592e57c_exprDeadCode*, jule::Ptr<_1cdeec527_IndexingExprModel>);
inline void _1b5931b78_anonFunc(_1b592e57c_exprDeadCode*, jule::Ptr<_1cdeec901_AnonFnExprModel>);
inline void _1b5931e31_mapExpr(_1b592e57c_exprDeadCode*, jule::Ptr<_1cdeed281_MapExprModel>);
inline void _1b59321d9_slicing(_1b592e57c_exprDeadCode*, jule::Ptr<_1cdeed814_SlicingExprModel>);
inline void _1b5932492_traitSub(_1b592e57c_exprDeadCode*, jule::Ptr<_1cdeedd97_TraitSubIdentExprModel>);
inline void _1b593274a_structureSub(_1b592e57c_exprDeadCode*, jule::Ptr<_1cdeee738_StructSubIdentExprModel>);
inline void _1b5932a03_tuple(_1b592e57c_exprDeadCode*, jule::Ptr<_1ce0002a5_TupleExprModel>);
inline void _1b5932cab_newCall(_1b592e57c_exprDeadCode*, jule::Ptr<_1ce000e32_BuiltinNewCallExprModel>);
inline void _1b5933064_outCall(_1b592e57c_exprDeadCode*, jule::Ptr<_1ce00067e_BuiltinOutCallExprModel>);
inline void _1b593331c_outlnCall(_1b592e57c_exprDeadCode*, jule::Ptr<_1ce000a58_BuiltinOutlnCallExprModel>);
inline void _1b59335c5_panicCall(_1b592e57c_exprDeadCode*, jule::Ptr<_1ce00130b_BuiltinPanicCallExprModel>);
inline void _1b593387d_assertCall(_1b592e57c_exprDeadCode*, jule::Ptr<_1ce0017b2_BuiltinAssertCallExprModel>);
inline void _1b5933b36_errorCall(_1b592e57c_exprDeadCode*, jule::Ptr<_1ce0033b8_BuiltinErrorCallExprModel>);
inline void _1b5933dde_makeCall(_1b592e57c_exprDeadCode*, jule::Ptr<_1ce001c68_BuiltinMakeCallExprModel>);
inline void _1b5934197_appendCall(_1b592e57c_exprDeadCode*, jule::Ptr<_1ce002142_BuiltinAppendCallExprModel>);
inline void _1b5934450_lenCall(_1b592e57c_exprDeadCode*, jule::Ptr<_1ce00243e_BuiltinLenCallExprModel>);
inline void _1b5934708_capCall(_1b592e57c_exprDeadCode*, jule::Ptr<_1ce00273b_BuiltinCapCallExprModel>);
inline void _1b59349b1_deleteCall(_1b592e57c_exprDeadCode*, jule::Ptr<_1ce002b15_BuiltinDeleteCallExprModel>);
inline void _1b5934c69_sizeof(_1b592e57c_exprDeadCode*, jule::Ptr<_1ce003a6c_SizeofExprModel>);
inline void _1b5935022_alignof(_1b592e57c_exprDeadCode*, jule::Ptr<_1ce003c59_AlignofExprModel>);
inline void _1b59352ca_integratedToStr(_1b592e57c_exprDeadCode*, jule::Ptr<_1ce0042ed_IntegratedToStrExprModel>);
inline void _1b5935583_free(_1b592e57c_exprDeadCode*, jule::Ptr<_1ce0049c4_FreeExprModel>);
inline void _1b593583b_backendEmit(_1b592e57c_exprDeadCode*, jule::Ptr<_1ce0046c7_BackendEmitExprModel>);
inline void _1b5935ae4_optimize(_1b592e57c_exprDeadCode*, jule::Any*);
inline void _1ce24a324_pushVar(_1ce249db2_nils*, jule::Uintptr, jule::Bool);
inline jule::Bool _1ce24a665_removeVar(_1ce249db2_nils*, jule::Uintptr);
inline jule::Bool _1ce24a9a6_isSafe(_1ce249db2_nils*, jule::Uintptr);
inline jule::Ptr<_1ce24cb40_scopeOptimizer> static__1ce24d1b2_new(jule::Ptr<_1ce0497c7_Scope>);
inline void _1ce24d46a_setCurrentStmt(jule::Ptr<_1ce24cb40_scopeOptimizer>, jule::Any);
inline void _1ce24d668_removeCurrent(jule::Ptr<_1ce24cb40_scopeOptimizer>);
inline jule::Bool _1ce24d8ee_isLastStmt(jule::Ptr<_1ce24cb40_scopeOptimizer>);
inline jule::Bool _1ce24db85_isIter(jule::Ptr<_1ce24cb40_scopeOptimizer>);
inline void _1ce24de3d_optimizeData(jule::Ptr<_1ce24cb40_scopeOptimizer>, jule::Ptr<_1ce11bc0c_Data>);
inline void _1ce24e1e6_optimizeVar(jule::Ptr<_1ce24cb40_scopeOptimizer>, jule::Ptr<_1ce0b4105_Var>);
inline void _1ce24e49e_optimizeConditional(jule::Ptr<_1ce24cb40_scopeOptimizer>, jule::Ptr<_1ce04a410_Conditional>);
inline void _1ce24e8bc_buildDefaultConstantTrueCase(jule::Ptr<_1ce24cb40_scopeOptimizer>, jule::Ptr<_1ce04e436_Case>, jule::I32*, jule::Ptr<_1ce04d90d_Match>*);
inline void _1ce24eb75_optimizeMatch(jule::Ptr<_1ce24cb40_scopeOptimizer>, jule::Ptr<_1ce04d90d_Match>);
inline void _1ce24ee2d_optimizeRangeIter(jule::Ptr<_1ce24cb40_scopeOptimizer>, jule::Ptr<_1ce04b60e_RangeIter>);
inline void _1ce2501d6_optimizeWhileIter(jule::Ptr<_1ce24cb40_scopeOptimizer>, jule::Ptr<_1ce04abb3_WhileIter>);
inline jule::Bool _1ce250527_substr(jule::Ptr<_1ce24cb40_scopeOptimizer>, jule::Ptr<_1ce04cdc4_Assign>);
inline jule::Bool _1ce250868_strAssign(jule::Ptr<_1ce24cb40_scopeOptimizer>, jule::Ptr<_1ce04cdc4_Assign>);
inline jule::Bool _1ce250ba9_sliceAssign(jule::Ptr<_1ce24cb40_scopeOptimizer>, jule::Ptr<_1ce04cdc4_Assign>);
inline void _1ce250e62_optimizePostfix(jule::Ptr<_1ce24cb40_scopeOptimizer>, jule::Ptr<_1ce04c91d_Postfix>);
inline void _1ce25121a_optimizeAssign(jule::Ptr<_1ce24cb40_scopeOptimizer>, jule::Ptr<_1ce04cdc4_Assign>);
inline jule::Bool _1ce25155b_tryOptimizeSwap(jule::Ptr<_1ce24cb40_scopeOptimizer>, jule::Ptr<_1ce04d29d_MultiAssign>*);
inline void _1ce251814_optimizeMultiAssign(jule::Ptr<_1ce24cb40_scopeOptimizer>, jule::Ptr<_1ce04d29d_MultiAssign>);
inline void _1ce251abc_optimizeRet(jule::Ptr<_1ce24cb40_scopeOptimizer>, jule::Ptr<_1ce04eec5_RetSt>);
inline void _1ce251d75_optimizeStmt(jule::Ptr<_1ce24cb40_scopeOptimizer>, jule::Any);
inline void _1ce25212d_optimizeChild(jule::Ptr<_1ce24cb40_scopeOptimizer>, jule::Ptr<_1ce0497c7_Scope>);
inline void _1ce25232b_optimize(jule::Ptr<_1ce24cb40_scopeOptimizer>);
inline void static__1ce2550dc_optimize(jule::Any*);
inline void static__1ce2553c8_optimizeData(jule::Any*, jule::Ptr<_1ce2625e4_data>*);
inline jule::Bool _1ce255719_selfCmpCond(_1ce25498d_exprOptimizer*, jule::Ptr<_1cdee9bb7_BinaryExprModel>*);
inline jule::Bool _1ce255a5a_boolCond(_1ce25498d_exprOptimizer*, jule::Ptr<_1cdee9bb7_BinaryExprModel>*);
inline jule::Bool _1ce255d9b_strCond(_1ce25498d_exprOptimizer*, jule::Ptr<_1cdee9bb7_BinaryExprModel>);
inline jule::Bool _1ce256352_tryNeutralElement1(_1ce25498d_exprOptimizer*, jule::Ptr<_1cdee9bb7_BinaryExprModel>*, jule::Ptr<_22be1616d_Const>, jule::Ptr<_1cdee96bc_OperandExprModel>*);
inline jule::Bool _1ce256693_tryNeutralElement(_1ce25498d_exprOptimizer*, jule::Ptr<_1cdee9bb7_BinaryExprModel>*);
inline void _1ce25694b_checkBinaryForBoundary(_1ce25498d_exprOptimizer*, jule::Ptr<_1cdee9bb7_BinaryExprModel>*);
inline void _1ce256c04_checkBinaryForNil(_1ce25498d_exprOptimizer*, jule::Ptr<_1cdee9bb7_BinaryExprModel>*);
inline void _1ce256eac_binary(_1ce25498d_exprOptimizer*, jule::Ptr<_1cdee9bb7_BinaryExprModel>);
inline void _1ce257265_unary(_1ce25498d_exprOptimizer*, jule::Ptr<_1cdeea091_UnaryExprModel>);
inline void _1ce25751d_structureLit(_1ce25498d_exprOptimizer*, jule::Ptr<_1cdeea965_StructLitExprModel>);
inline void _1ce2577c6_allocStructure(_1ce25498d_exprOptimizer*, jule::Ptr<_1cdeeac62_AllocStructLitExprModel>);
inline void _1ce257a7e_casting(_1ce25498d_exprOptimizer*, jule::Ptr<_1cdeeb2e5_CastingExprModel>);
inline void _1ce257de2_args(_1ce25498d_exprOptimizer*, jule::Slice<jule::Ptr<_1ce009886_ParamIns>>, jule::Slice<jule::Any>*);
inline void _1ce25819a_scope(_1ce25498d_exprOptimizer*, jule::Ptr<_1ce0497c7_Scope>*);
inline void _1ce258453_funcCall(_1ce25498d_exprOptimizer*, jule::Ptr<_1cdeebb97_FnCallExprModel>);
inline void _1ce25870b_slice(_1ce25498d_exprOptimizer*, jule::Ptr<_1cdeec071_SliceExprModel>);
inline void _1ce2589b4_array(_1ce25498d_exprOptimizer*, jule::Ptr<_1cdeeeea8_ArrayExprModel>);
inline void _1ce258c6c_indexing(_1ce25498d_exprOptimizer*, jule::Ptr<_1cdeec527_IndexingExprModel>);
inline void _1ce259025_anonFunc(_1ce25498d_exprOptimizer*, jule::Ptr<_1cdeec901_AnonFnExprModel>);
inline void _1ce2592cd_mapExpr(_1ce25498d_exprOptimizer*, jule::Ptr<_1cdeed281_MapExprModel>);
inline void _1ce259586_slicing(_1ce25498d_exprOptimizer*, jule::Ptr<_1cdeed814_SlicingExprModel>);
inline void _1ce25983e_traitSub(_1ce25498d_exprOptimizer*, jule::Ptr<_1cdeedd97_TraitSubIdentExprModel>);
inline void _1ce259ae7_structureSub(_1ce25498d_exprOptimizer*, jule::Ptr<_1cdeee738_StructSubIdentExprModel>);
inline void _1ce259da0_tuple(_1ce25498d_exprOptimizer*, jule::Ptr<_1ce0002a5_TupleExprModel>);
inline void _1ce25a158_newCall(_1ce25498d_exprOptimizer*, jule::Ptr<_1ce000e32_BuiltinNewCallExprModel>);
inline void _1ce25a411_outCall(_1ce25498d_exprOptimizer*, jule::Ptr<_1ce00067e_BuiltinOutCallExprModel>);
inline void _1ce25a6b9_outlnCall(_1ce25498d_exprOptimizer*, jule::Ptr<_1ce000a58_BuiltinOutlnCallExprModel>);
inline void _1ce25a972_panicCall(_1ce25498d_exprOptimizer*, jule::Ptr<_1ce00130b_BuiltinPanicCallExprModel>);
inline void _1ce25ac2a_assertCall(_1ce25498d_exprOptimizer*, jule::Ptr<_1ce0017b2_BuiltinAssertCallExprModel>);
inline void _1ce25aed3_errorCall(_1ce25498d_exprOptimizer*, jule::Ptr<_1ce0033b8_BuiltinErrorCallExprModel>);
inline void _1ce25b28b_makeCall(_1ce25498d_exprOptimizer*, jule::Ptr<_1ce001c68_BuiltinMakeCallExprModel>);
inline void _1ce25b544_appendCall(_1ce25498d_exprOptimizer*, jule::Ptr<_1ce002142_BuiltinAppendCallExprModel>);
inline void _1ce25b7ec_lenCall(_1ce25498d_exprOptimizer*, jule::Ptr<_1ce00243e_BuiltinLenCallExprModel>);
inline void _1ce25baa5_capCall(_1ce25498d_exprOptimizer*, jule::Ptr<_1ce00273b_BuiltinCapCallExprModel>);
inline void _1ce25bd5d_deleteCall(_1ce25498d_exprOptimizer*, jule::Ptr<_1ce002b15_BuiltinDeleteCallExprModel>);
inline void _1ce25c116_sizeof(_1ce25498d_exprOptimizer*, jule::Ptr<_1ce003a6c_SizeofExprModel>);
inline void _1ce25c3be_alignof(_1ce25498d_exprOptimizer*, jule::Ptr<_1ce003c59_AlignofExprModel>);
inline void _1ce25c677_integratedToStr(_1ce25498d_exprOptimizer*, jule::Ptr<_1ce0042ed_IntegratedToStrExprModel>);
inline void _1ce25c930_free(_1ce25498d_exprOptimizer*, jule::Ptr<_1ce0049c4_FreeExprModel>);
inline void _1ce25cbd8_backendEmit(_1ce25498d_exprOptimizer*, jule::Ptr<_1ce0046c7_BackendEmitExprModel>);
inline void _1ce25cdd6_do(_1ce25498d_exprOptimizer*);
inline void _1ce25eb0d_pushVar(jule::Ptr<_1ce25e69b_dynamic>, jule::Uintptr, jule::Ptr<_1ce14cbc7_TypeKind>);
inline jule::Bool _1ce25ee4e_removeVar(_1ce25e69b_dynamic*, jule::Uintptr);
inline jule::Bool _1ce26034a_isFits(_1ce25e69b_dynamic*, jule::Uintptr, jule::Ptr<_1ce14cbc7_TypeKind>);
inline _1ce2620e9_dataCheckpoint _1ce262968_getCheckpoint(_1ce2625e4_data*);
inline void _1ce262c21_loadCheckpoint(_1ce2625e4_data*, _1ce2620e9_dataCheckpoint*);
inline void _1ce26444d_pushVar(_1ce263edb_boundary*, jule::Uintptr, jule::Any);
inline jule::Bool _1ce264b8a_fitsMaxSize(_1ce263edb_boundary*, jule::Uintptr, jule::Any);
inline jule::Ptr<_1b593661c_Optimizer> static__1b5936a90_New(jule::Ptr<_1b57ae72b_IR>*);
inline void _1b5936d48_optimizeGlobal(_1b593661c_Optimizer*, jule::Ptr<_1ce0b4105_Var>*);
inline void _1b5937101_optimizeFunction(_1b593661c_Optimizer*, jule::Ptr<_1ce00792d_Fn>*);
inline void _1b59373a9_optimizeStruct(_1b593661c_Optimizer*, jule::Ptr<_1cdee2990_Struct>*);
inline void _1b5937662_optimizeGlobals(_1b593661c_Optimizer*, jule::Ptr<_1ce06ded3_Package>*);
inline void _1b593791a_optimizeFunctions(_1b593661c_Optimizer*, jule::Ptr<_1ce06ded3_Package>*);
inline void _1b5937bc3_optimizeStructs(_1b593661c_Optimizer*, jule::Ptr<_1ce06ded3_Package>*);
inline void _1b5937e7b_optimizePackage(_1b593661c_Optimizer*, jule::Ptr<_1ce06ded3_Package>*);
inline void _1b5938179_Optimize(_1b593661c_Optimizer*);
inline void static__1b5938971_Reset(void);
inline void static__1b595d259_Print(jule::Str, jule::Str);
inline void static__1b5960c2e_LogFlat(_22a93672d_Log*);
inline void static__1b5960e60_LogError(_22a93672d_Log*);
inline void static__1b5961191_Log(_22a93672d_Log*);
inline void static__1b59613c2_PrintLogs(jule::Slice<_22a93672d_Log>*);
inline _1b6284442_Time static__1b62847e9_Unix(jule::U64);
inline _1b6284442_Time static__1b6284a08_Now(void);
inline _1b6283c6b_AbsTime _1b62861e1_Abs(_1b6284442_Time*);
inline jule::Ptr<_1b61ae56a_scopeCoder> static__1b61aeba8_new(jule::Ptr<_1b628d825_ObjectCoder>*);
inline void _1b930d562_iterHead(jule::Ptr<_1b61ae56a_scopeCoder>, jule::Ptr<_1ce04b60e_RangeIter>*, jule::Bool*, jule::Str);
inline void _1b61b037e_rangeIndexIter(jule::Ptr<_1b61ae56a_scopeCoder>, jule::Ptr<_1ce04b60e_RangeIter>*);
inline void _1b61b0637_rangeHashmapIter(jule::Ptr<_1b61ae56a_scopeCoder>, jule::Ptr<_1ce04b60e_RangeIter>*);
inline void _1b61b08e0_strRuneIter(jule::Ptr<_1b61ae56a_scopeCoder>, jule::Ptr<_1ce248795_StrRuneIter>);
inline void _1b61b0b98_ifCase(jule::Ptr<_1b61ae56a_scopeCoder>, jule::Ptr<_1ce049be5_If>);
inline void _1b61b0e51_conditional(jule::Ptr<_1b61ae56a_scopeCoder>, jule::Ptr<_1ce04a410_Conditional>);
inline void _1b61b1209_infIter(jule::Ptr<_1b61ae56a_scopeCoder>, jule::Ptr<_1ce04a70c_InfIter>);
inline void _1b61b14b2_whileIter(jule::Ptr<_1b61ae56a_scopeCoder>, jule::Ptr<_1ce04abb3_WhileIter>);
inline void _1b61b176a_rangeIter(jule::Ptr<_1b61ae56a_scopeCoder>, jule::Ptr<_1ce04b60e_RangeIter>);
inline void _1b61b1a23_cont(jule::Ptr<_1b61ae56a_scopeCoder>, jule::Ptr<_1ce04b994_ContSt>);
inline void _1b61b1ccb_label(jule::Ptr<_1b61ae56a_scopeCoder>, jule::Ptr<_1ce04c16a_Label>);
inline void _1b61b2084_gotoSt(jule::Ptr<_1b61ae56a_scopeCoder>, jule::Ptr<_1ce04c544_GotoSt>);
inline void _1b61b233c_postfix(jule::Ptr<_1b61ae56a_scopeCoder>, jule::Ptr<_1ce04c91d_Postfix>);
inline void _1b61b25e5_assign(jule::Ptr<_1b61ae56a_scopeCoder>, jule::Ptr<_1ce04cdc4_Assign>);
inline void _1b61b289d_mapLookupAssign(jule::Ptr<_1b61ae56a_scopeCoder>, jule::Ptr<_1ce04d29d_MultiAssign>*);
inline void _1b61b2b56_multiAssignTup(jule::Ptr<_1b61ae56a_scopeCoder>, jule::Ptr<_1ce04d29d_MultiAssign>*);
inline void _1b61b2e0e_multiAssignFn(jule::Ptr<_1b61ae56a_scopeCoder>, jule::Ptr<_1ce04d29d_MultiAssign>*);
inline void _1b61b31b7_multiAssign(jule::Ptr<_1b61ae56a_scopeCoder>, jule::Ptr<_1ce04d29d_MultiAssign>);
inline jule::Fn<void(void)> _1b61b3508_matchExpr(jule::Ptr<_1b61ae56a_scopeCoder>, jule::Ptr<_1ce04d90d_Match>);
inline void _1b61b386b_case(jule::Ptr<_1b61ae56a_scopeCoder>, jule::Ptr<_1ce04d90d_Match>, jule::Ptr<_1ce04e436_Case>);
inline void _1b61b3b24_matchSt(jule::Ptr<_1b61ae56a_scopeCoder>, jule::Ptr<_1ce04d90d_Match>);
inline void _1b61b3dcc_fallSt(jule::Ptr<_1b61ae56a_scopeCoder>, jule::Ptr<_1ce04eb2e_FallSt>);
inline void _1b61b4185_breakSt(jule::Ptr<_1b61ae56a_scopeCoder>, jule::Ptr<_1ce04bd6d_BreakSt>);
inline void _1b61b443d_setResult(jule::Ptr<_1b61ae56a_scopeCoder>, jule::Ptr<_1ce04eec5_RetSt>);
inline void _1b61b46e6_retSt(jule::Ptr<_1b61ae56a_scopeCoder>, jule::Ptr<_1ce04eec5_RetSt>);
inline void _1b61b499e_var(jule::Ptr<_1b61ae56a_scopeCoder>, jule::Ptr<_1ce0b4105_Var>);
inline void _1b61b4c57_mutSlicing(jule::Ptr<_1b61ae56a_scopeCoder>, jule::Ptr<_1ce247486_MutSlicingExprModel>);
inline void _1b61b5010_swap(jule::Ptr<_1b61ae56a_scopeCoder>, jule::Ptr<_1ce246232_SwapExprModel>);
inline void _1b61b52b8_exceptionalForwarding(jule::Ptr<_1b61ae56a_scopeCoder>, jule::Ptr<_1ce245dad_ExceptionalForwardingExprModel>);
inline void _1b61b5571_st(jule::Ptr<_1b61ae56a_scopeCoder>, jule::Any);
inline void _1b61ba6ca_scopeStmts(jule::Ptr<_1b61ae56a_scopeCoder>, jule::Ptr<_1ce0497c7_Scope>*);
inline void _1b61ba93e_scope(jule::Ptr<_1b61ae56a_scopeCoder>, jule::Ptr<_1ce0497c7_Scope>);
inline void _1b61babe7_funcScope(jule::Ptr<_1b61ae56a_scopeCoder>, jule::Ptr<_1ce00a832_FnIns>);
inline jule::Ptr<_1b61bdc0b_exprCoder> static__1b61be0c4_new(jule::Ptr<_1b628d825_ObjectCoder>*);
inline void _1b61be37c_string(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_22be1616d_Const>*);
inline void _1b61be635_boolean(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Bool);
inline void _1b61be833_nilLit(jule::Ptr<_1b61bdc0b_exprCoder>);
inline jule::Bool _1b61beb74_ftoaSpecialCases(jule::Ptr<_1b61bdc0b_exprCoder>, jule::F64*);
inline void _1b61bee2c_float32(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_22be1616d_Const>*);
inline void _1b61c01d5_float64(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_22be1616d_Const>*);
inline void _1b61c048d_constant(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_22be1616d_Const>);
inline void _1b61c08ab_divByZeroBinary(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1cdeab4b4_Token>*, jule::Ptr<_1cdee96bc_OperandExprModel>*, jule::Ptr<_1cdee96bc_OperandExprModel>*);
inline void _1b61c0b64_unsafeBinary(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1cdee9bb7_BinaryExprModel>);
inline void _1b61c0e1c_binary(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1cdee9bb7_BinaryExprModel>);
inline void _1b61c11c5_var(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1ce0b4105_Var>);
inline void _1b61c147d_structureIns(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1cdee571d_StructIns>);
inline void _1b61c1736_unary(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1cdeea091_UnaryExprModel>);
inline void _1b61c19de_structureLit(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1cdeea965_StructLitExprModel>);
inline void _1b61c1c97_allocStructure(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1cdeeac62_AllocStructLitExprModel>);
inline void _1b61c2050_possibleRefExpr(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Any);
inline void _1b61c246d_castTraitFromTrait(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1cdeeb2e5_CastingExprModel>*, jule::Ptr<_1ce01ac0a_Trait>, jule::Ptr<_1ce01ac0a_Trait>);
inline void _1b61c2726_casting(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1cdeeb2e5_CastingExprModel>);
inline void _1b61c29ce_models(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Slice<jule::Any>);
inline void _1b61c2c87_args(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1cdeebb97_FnCallExprModel>*);
inline void _1b61c3040_modelForCall(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Any);
inline void _1b61c32e8_pushCallInf(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1cdeebb97_FnCallExprModel>*);
inline jule::Bool _1b61c3639_isWrapped(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1cdeebb97_FnCallExprModel>*);
inline jule::Bool _1b61c397a_writeReceiver(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Any);
inline void _1b61c3c33_pureFuncCall(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1cdeebb97_FnCallExprModel>*);
inline void _1b61c3edb_coFuncCall(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1cdeebb97_FnCallExprModel>*);
inline void _1b61c434e_writeUseExpr(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1ce00a832_FnIns>*, jule::Ptr<_1ce11bc0c_Data>);
inline void _1b61c4607_funcCall(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1cdeebb97_FnCallExprModel>);
inline void _1b61c48b0_slice(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1cdeec071_SliceExprModel>);
inline void _1b61c4b68_indexing(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1cdeec527_IndexingExprModel>);
inline void _1b61c4e21_unsafeIndexing(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1ce247b18_UnsafeIndexingExprModel>);
inline void _1b61c51c9_anonFunc(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1cdeec901_AnonFnExprModel>);
inline void _1b61c5482_mapExpr(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1cdeed281_MapExprModel>);
inline void _1b61c573a_slicing(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1cdeed814_SlicingExprModel>);
inline void _1b61c59e3_traitSub(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1cdeedd97_TraitSubIdentExprModel>);
inline void _1b61c5c9b_structureSub(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1cdeee738_StructSubIdentExprModel>);
inline void _1b61c6054_array(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1cdeeeea8_ArrayExprModel>);
inline void _1b61c630c_funcInsCommon(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1ce00a832_FnIns>);
inline void _1b61c65b5_funcIns(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1ce00a832_FnIns>);
inline void _1b61c686d_tuple(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1ce0002a5_TupleExprModel>);
inline void _1b61c6b26_newCall(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1ce000e32_BuiltinNewCallExprModel>);
inline void _1b61c6dce_outCall(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1ce00067e_BuiltinOutCallExprModel>);
inline void _1b61c7187_outlnCall(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1ce000a58_BuiltinOutlnCallExprModel>);
inline void _1b61c7440_panicCall(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1ce00130b_BuiltinPanicCallExprModel>);
inline void _1b61c76e8_assertCall(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1ce0017b2_BuiltinAssertCallExprModel>);
inline void _1b61c79a1_errorCall(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1ce0033b8_BuiltinErrorCallExprModel>);
inline void _1b61c7c59_copyCall(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1ce002ede_BuiltinCopyCallExprModel>);
inline void _1b61c8012_lenCall(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1ce00243e_BuiltinLenCallExprModel>);
inline void _1b61c82ba_capCall(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1ce00273b_BuiltinCapCallExprModel>);
inline void _1b61c8573_deleteCall(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1ce002b15_BuiltinDeleteCallExprModel>);
inline void _1b61c882b_makeCallSlice(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1ce001c68_BuiltinMakeCallExprModel>*);
inline void _1b61c8ad4_makeCallStr(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1ce001c68_BuiltinMakeCallExprModel>*);
inline void _1b61c8d8c_makeCall(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1ce001c68_BuiltinMakeCallExprModel>);
inline void _1b61c9145_pushToSlice(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1ce247ee2_PushToSliceExprModel>);
inline void _1b61c93ed_appendToSlice(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1ce2483bb_AppendToSliceExprModel>);
inline void _1b61c96a6_appendCall(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1ce002142_BuiltinAppendCallExprModel>);
inline void _1b61c995e_sizeof(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1ce003a6c_SizeofExprModel>);
inline void _1b61c9c17_alignof(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1ce003c59_AlignofExprModel>);
inline void _1b61c9ec0_runeLit(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1ce004001_RuneExprModel>);
inline void _1b61ca278_structureStatic(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1cdeeeace_StructStaticIdentExprModel>);
inline void _1b61ca531_integratedToStr(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1ce0042ed_IntegratedToStrExprModel>);
inline void _1b61ca7d9_backendEmit(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1ce0046c7_BackendEmitExprModel>);
inline void _1b61caa92_free(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1ce0049c4_FreeExprModel>);
inline void _1b61cad4a_strComp(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1ce246e03_StrCompExprModel>);
inline void _1b61cb103_emptyCompare(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1ce24660b_EmptyCompareExprModel>);
inline void _1b61cb3ab_unsafeDeref(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1ce248a92_UnsafeDerefExprModel>);
inline void _1b61cb664_unsafeCasting(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1ce248d8e_UnsafeCastingExprModel>);
inline void _1b61cb91c_model(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Any);
inline void _1b61cbbc5_initExpr(jule::Ptr<_1b61bdc0b_exprCoder>, jule::Ptr<_1ce14cbc7_TypeKind>);
inline jule::Ptr<_1b61ced60_TestCoder> static__1b61d02d3_New(jule::Ptr<_1b628d825_ObjectCoder>*);
inline jule::Ptr<_1ce06b0ac_ImportInfo> _1b61d0569_findTestingPackage(jule::Ptr<_1b61ced60_TestCoder>);
inline void _1b61d0822_appendTest(jule::Ptr<_1b61ced60_TestCoder>, jule::Ptr<_1ce00a832_FnIns>);
inline void _1b61d0aca_appendPackageTests(jule::Ptr<_1b61ced60_TestCoder>, jule::Ptr<_1ce06ded3_Package>*);
inline jule::Bool _1b61d0d61_readyTestingPackage(jule::Ptr<_1b61ced60_TestCoder>);
inline void _1b61d105e_callTmReset(jule::Ptr<_1b61ced60_TestCoder>);
inline void _1b61d125c_callTmFailed(jule::Ptr<_1b61ced60_TestCoder>);
inline void _1b61d145a_callTmSkipped(jule::Ptr<_1b61ced60_TestCoder>);
inline void _1b61d1658_Serialize(jule::Ptr<_1b61ced60_TestCoder>);
inline void static__1b61d3182_writeIdentTo(_22ab0b88c_StrBuilder*, jule::Str*);
inline void static__1b61d3528_toOut(_22ab0b88c_StrBuilder*, jule::Str, jule::Uintptr);
inline void static__1b61d3979_toLocal(_22ab0b88c_StrBuilder*, jule::I32, jule::I32, jule::Str*);
inline void static__1b61d3c65_func(_22ab0b88c_StrBuilder*, jule::Ptr<_1ce00792d_Fn>*);
inline void static__1b61d4051_funcIns(_22ab0b88c_StrBuilder*, jule::Ptr<_1ce00a832_FnIns>*);
inline void static__1b61d433c_traitDecl(_22ab0b88c_StrBuilder*, jule::Ptr<_1ce01ac0a_Trait>);
inline void static__1b61d4628_param(_22ab0b88c_StrBuilder*, jule::Ptr<_1ce005e59_Param>*);
inline void static__1b61d4914_structure(_22ab0b88c_StrBuilder*, jule::Ptr<_1cdee2990_Struct>*);
inline void static__1b61d4c00_structureIns(_22ab0b88c_StrBuilder*, jule::Ptr<_1cdee571d_StructIns>*);
inline void static__1b61d4edb_field(_22ab0b88c_StrBuilder*, jule::Ptr<_1cdedea69_Field>*);
inline void static__1b61d52c7_var(_22ab0b88c_StrBuilder*, jule::Ptr<_1ce0b4105_Var>);
inline void static__1b61d55b3_iterBegin(_22ab0b88c_StrBuilder*, jule::Uintptr);
inline void static__1b61d589e_iterEnd(_22ab0b88c_StrBuilder*, jule::Uintptr);
inline void static__1b61d5b8a_iterNext(_22ab0b88c_StrBuilder*, jule::Uintptr);
inline void static__1b61d5e76_label(_22ab0b88c_StrBuilder*, jule::Uintptr);
inline void static__1b61d6262_matchEnd(_22ab0b88c_StrBuilder*, jule::Uintptr);
inline void static__1b61d654d_caseBegin(_22ab0b88c_StrBuilder*, jule::Uintptr);
inline jule::Str _1b629d318_Str(_1b629ce72_customType*);
inline jule::Bool _1b629d659_Equal(jule::Ptr<_1b629ce72_customType>, jule::Ptr<_1ce14cbc7_TypeKind>);
inline jule::Ptr<_1b629da88_typeCoder> static__1b629e0c7_new(jule::Ptr<_1b628d825_ObjectCoder>*);
inline void _1b629e43a_toType(_1b629da88_typeCoder*, _22ab0b88c_StrBuilder*, jule::Str);
inline void _1b629e79d_prim(_1b629da88_typeCoder*, _22ab0b88c_StrBuilder*, jule::Ptr<_1ce1557a1_Prim>);
inline void _1b629eb11_tuple(_1b629da88_typeCoder*, _22ab0b88c_StrBuilder*, jule::Ptr<_1ce15a894_Tuple>);
inline void _1b629ee74_asSptr(_1b629da88_typeCoder*, _22ab0b88c_StrBuilder*, jule::Slice<jule::U8>);
inline void _1b62a02d7_sptr(_1b629da88_typeCoder*, _22ab0b88c_StrBuilder*, jule::Ptr<_1ce1592cc_Sptr>);
inline void _1b62a064a_ptr(_1b629da88_typeCoder*, _22ab0b88c_StrBuilder*, jule::Ptr<_1ce15ca94_Ptr>);
inline void _1b62a09ad_enumDecl(_1b629da88_typeCoder*, _22ab0b88c_StrBuilder*, jule::Ptr<_1ce01d416_Enum>);
inline void _1b62a0d21_typeEnumDecl(_1b629da88_typeCoder*, _22ab0b88c_StrBuilder*, jule::Ptr<_1ce01eb21_TypeEnum>);
inline void _1b62a1184_asSlice(_1b629da88_typeCoder*, _22ab0b88c_StrBuilder*, jule::Ptr<_1ce14cbc7_TypeKind>);
inline void _1b62a14e7_slice(_1b629da88_typeCoder*, _22ab0b88c_StrBuilder*, jule::Ptr<_1ce159ca0_Slc>);
inline void _1b62a185a_mapType(_1b629da88_typeCoder*, _22ab0b88c_StrBuilder*, jule::Ptr<_1ce15b444_Map>);
inline void _1b62a2031_traitDecl(_1b629da88_typeCoder*, _22ab0b88c_StrBuilder*, jule::Ptr<_1ce01ac0a_Trait>);
inline void _1b62a2394_structure(_1b629da88_typeCoder*, _22ab0b88c_StrBuilder*, jule::Ptr<_1cdee2990_Struct>);
inline void _1b62a2707_structureIns(_1b629da88_typeCoder*, _22ab0b88c_StrBuilder*, jule::Ptr<_1cdee571d_StructIns>);
inline void _1b62a2a6a_array(_1b629da88_typeCoder*, _22ab0b88c_StrBuilder*, jule::Ptr<_1ce15c0c1_Arr>);
inline void _1b62a3241_paramIns(_1b629da88_typeCoder*, _22ab0b88c_StrBuilder*, jule::Ptr<_1ce009886_ParamIns>*);
inline void _1b62a3917_funcInsResult(_1b629da88_typeCoder*, _22ab0b88c_StrBuilder*, jule::Ptr<_1ce00a832_FnIns>*);
inline void _1b62a3c7a_anonFunc(_1b629da88_typeCoder*, _22ab0b88c_StrBuilder*, jule::Ptr<_1ce00a832_FnIns>);
inline void _1b62a40dd_func(_1b629da88_typeCoder*, _22ab0b88c_StrBuilder*, jule::Ptr<_1ce00a832_FnIns>);
inline void _1b62a4451_kind(_1b629da88_typeCoder*, _22ab0b88c_StrBuilder*, jule::Ptr<_1ce14cbc7_TypeKind>);
inline jule::Ptr<_1b5e501b8_resultCoder> static__1b5e506a2_new(jule::Ptr<_1b629da88_typeCoder>*);
inline void _1b5e50a15_ptr(_1b5e501b8_resultCoder*, _22ab0b88c_StrBuilder*, jule::Ptr<_1ce15ca94_Ptr>);
inline void _1b5e50d78_sptr(_1b5e501b8_resultCoder*, _22ab0b88c_StrBuilder*, jule::Ptr<_1ce1592cc_Sptr>);
inline void _1b5e511db_mapType(_1b5e501b8_resultCoder*, _22ab0b88c_StrBuilder*, jule::Ptr<_1ce15b444_Map>);
inline void _1b5e5154e_slice(_1b5e501b8_resultCoder*, _22ab0b88c_StrBuilder*, jule::Ptr<_1ce159ca0_Slc>);
inline void _1b5e518b2_arr(_1b5e501b8_resultCoder*, _22ab0b88c_StrBuilder*, jule::Ptr<_1ce15c0c1_Arr>);
inline void _1b5e51c25_func(_1b5e501b8_resultCoder*, _22ab0b88c_StrBuilder*, jule::Ptr<_1ce00a832_FnIns>);
inline void _1b5e52088_tup(_1b5e501b8_resultCoder*, _22ab0b88c_StrBuilder*, jule::Ptr<_1ce15a894_Tuple>);
inline void _1b5e523eb_codeMut(_1b5e501b8_resultCoder*, _22ab0b88c_StrBuilder*, jule::Ptr<_1ce14cbc7_TypeKind>*);
inline void _1b5e5275e_codeMut1(_1b5e501b8_resultCoder*, _22ab0b88c_StrBuilder*, jule::Ptr<_1ce14cbc7_TypeKind>*);
inline jule::Slice<jule::U8> _1b5e52aa0_code(_1b5e501b8_resultCoder*, jule::Ptr<_1ce14cbc7_TypeKind>*);
inline jule::Str _1b99c3177_Name(_1b99c2c15_Flag*);
inline jule::Str _1b99c32cb_What(_1b99c2c15_Flag*);
inline void _1b99c3430_Reset(_1b99c2c15_Flag*);
inline jule::I32 _1b99c3584_Short(_1b99c2c15_Flag*);
inline jule::Str _1b99c64bb_Name(_1b99c6851_Flag*);
inline jule::Str _1b99c6b3c_What(_1b99c6851_Flag*);
inline void _1b99c6c80_Reset(_1b99c6851_Flag*);
inline jule::I32 _1b99c6dc3_Short(_1b99c6851_Flag*);
inline jule::Str _1b99c9b73_Name(_1b99ca008_Flag*);
inline jule::Str _1b99ca2e4_What(_1b99ca008_Flag*);
inline void _1b99ca437_Reset(_1b99ca008_Flag*);
inline jule::I32 _1b99ca57a_Short(_1b99ca008_Flag*);
inline jule::Str _1b99cd36e_Name(_1b99cd704_Flag*);
inline jule::Str _1b99cd9e0_What(_1b99cd704_Flag*);
inline void _1b99cdb33_Reset(_1b99cd704_Flag*);
inline jule::I32 _1b99cdc76_Short(_1b99cd704_Flag*);
inline jule::Str _1b99d1a26_Name(_1b99d1dab_Flag*);
inline jule::Str _1b99d2197_What(_1b99d1dab_Flag*);
inline void _1b99d22da_Reset(_1b99d1dab_Flag*);
inline jule::I32 _1b99d242d_Short(_1b99d1dab_Flag*);
inline jule::Ptr<_1b5eba81b_FlagSet> static__1b5ebab07_New(void);
inline jule::Trait<_1b5eb8c48_CommonFlag> _1b5ebb0ad_FindFlag(_1b5eba81b_FlagSet*, jule::Str);
inline jule::Trait<_1b5eb8c48_CommonFlag> _1b5ebb3ee_FindFlagShort(_1b5eba81b_FlagSet*, jule::I32);
inline jule::Exceptional<jule::Slice<jule::Str>> _1b5ebb9c6_Parse(_1b5eba81b_FlagSet*, jule::Slice<jule::Str>);
inline jule::Ptr<_1b99d1dab_Flag> _1b9a4a056_addFlagCommon(_1b5eba81b_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1b99cd704_Flag> _1b9a51e70_addFlagCommon(_1b5eba81b_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1b9a47cac_AddVar(_1b5eba81b_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1b9a4ec1a_AddVar(_1b5eba81b_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
inline __jule_tuple_i64__jule_tuple_bool _1b99e4be3_parseInteger(_1b5ebd2d0_argParser*, jule::Str*, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I32)>);
inline __jule_tuple_u64__jule_tuple_bool _1b99ec4c0_parseInteger(_1b5ebd2d0_argParser*, jule::Str*, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I32)>);
inline jule::Str _1b5ebdae9_getData(_1b5ebd2d0_argParser*);
inline jule::VoidExceptional _1b5ebdd6e_processFlag(_1b5ebd2d0_argParser*, jule::Trait<_1b5eb8c48_CommonFlag>*);
inline jule::VoidExceptional _1b5ebe127_singleDash(_1b5ebd2d0_argParser*, jule::Str*);
inline jule::VoidExceptional _1b5ebe3d0_doubleDash(_1b5ebd2d0_argParser*, jule::Str*);
inline jule::VoidExceptional _1b5ebe5cd_tryArg(_1b5ebd2d0_argParser*);
inline jule::VoidExceptional _1b5ebe7cb_parse(_1b5ebd2d0_argParser*);
inline jule::Ptr<_1b628d825_ObjectCoder> static__1b628dc21_New(jule::Ptr<_1b57ae72b_IR>*, _1b628bd0c_SerializationInfo);
inline void _1b628dec9_write(jule::Ptr<_1b628d825_ObjectCoder>, jule::Str);
inline void _1b628e282_writeBytes(jule::Ptr<_1b628d825_ObjectCoder>, jule::Slice<jule::U8>);
inline void _1b628e480_addIndent(jule::Ptr<_1b628d825_ObjectCoder>);
inline void _1b628e67d_doneIndent(jule::Ptr<_1b628d825_ObjectCoder>);
inline void _1b628e87b_indent(jule::Ptr<_1b628d825_ObjectCoder>);
inline jule::I32 _1b628ebbc_findAnyType(jule::Ptr<_1b628d825_ObjectCoder>, jule::Ptr<_1ce14cbc7_TypeKind>*);
inline jule::I32 _1b629000d_pushAnyType(jule::Ptr<_1b628d825_ObjectCoder>, jule::Ptr<_1ce14cbc7_TypeKind>);
inline void _1b62902b6_pushResultIns(jule::Ptr<_1b628d825_ObjectCoder>, jule::Ptr<_1ce00a832_FnIns>*);
inline void _1b629056e_pushResult(jule::Ptr<_1b628d825_ObjectCoder>, jule::Ptr<_1ce00792d_Fn>*);
inline jule::I32 _1b629096a_findTypeOffsetS(_1b628d825_ObjectCoder*, jule::Ptr<_1ce01ac0a_Trait>, jule::Ptr<_1cdee571d_StructIns>);
inline jule::I32 _1b6290d66_findTypeOffset(_1b628d825_ObjectCoder*, jule::Ptr<_1ce01ac0a_Trait>, jule::Ptr<_1ce14cbc7_TypeKind>);
inline void _1b62911c9_pushAndWriteMaskMapper(jule::Ptr<_1b628d825_ObjectCoder>, jule::Ptr<_1ce01ac0a_Trait>, jule::Ptr<_1ce01ac0a_Trait>);
inline void _1b6291482_locInfo(jule::Ptr<_1b628d825_ObjectCoder>, jule::Ptr<_1cdeab4b4_Token>*);
inline void _1b6291680_head(jule::Ptr<_1b628d825_ObjectCoder>);
inline void _1b629187d_links(jule::Ptr<_1b628d825_ObjectCoder>);
inline void _1b6291b36_prepareStructure(_1b628d825_ObjectCoder*, jule::Ptr<_1cdee2990_Struct>*);
inline void _1b6291d34_prepareStructures(jule::Ptr<_1b628d825_ObjectCoder>);
inline void _1b62920dc_iterPackages(jule::Ptr<_1b628d825_ObjectCoder>, jule::Fn<void(jule::Ptr<_1ce06ded3_Package>*)>);
inline void _1b62922da_buildTraitMap(jule::Ptr<_1b628d825_ObjectCoder>);
inline void _1b62924d8_traitDecls(jule::Ptr<_1b628d825_ObjectCoder>);
inline void _1b6292791_structurePlainDecl(jule::Ptr<_1b628d825_ObjectCoder>, jule::Ptr<_1cdee2990_Struct>*);
inline void _1b629298e_structurePlainDecls(jule::Ptr<_1b628d825_ObjectCoder>);
inline void _1b6292c47_fieldDecl(jule::Ptr<_1b628d825_ObjectCoder>, jule::Ptr<_1cdee4b6d_FieldIns>*);
inline void _1b6293000_structureDestructor(jule::Ptr<_1b628d825_ObjectCoder>, jule::Ptr<_1cdee571d_StructIns>*);
inline void _1b6293363_structureOperatorEq(jule::Ptr<_1b628d825_ObjectCoder>, jule::Slice<jule::U8>, jule::Ptr<_1cdee571d_StructIns>*);
inline void _1b62936c6_structureOperatorNotEq(jule::Ptr<_1b628d825_ObjectCoder>, jule::Slice<jule::U8>, jule::Ptr<_1cdee571d_StructIns>*);
inline void _1b6293ae4_structureOperator(jule::Ptr<_1b628d825_ObjectCoder>, jule::Slice<jule::U8>, jule::Ptr<_1ce00a832_FnIns>*, jule::Str);
inline void _1b6293d9c_structureOperators(jule::Ptr<_1b628d825_ObjectCoder>, jule::Ptr<_1cdee571d_StructIns>*);
inline void _1b6294155_structureInsDecl(jule::Ptr<_1b628d825_ObjectCoder>, jule::Ptr<_1cdee571d_StructIns>*);
inline void _1b629440d_structureDecl(jule::Ptr<_1b628d825_ObjectCoder>, jule::Ptr<_1cdee2990_Struct>*);
inline void _1b629460b_structureDecls(jule::Ptr<_1b628d825_ObjectCoder>);
inline void _1b6294809_structureMethodDecls(jule::Ptr<_1b628d825_ObjectCoder>);
inline void _1b6294ab2_paramsDecls(jule::Ptr<_1b628d825_ObjectCoder>, jule::Slice<jule::Ptr<_1ce009886_ParamIns>>*);
inline void _1b6294e25_funcHead(jule::Ptr<_1b628d825_ObjectCoder>, jule::Ptr<_1ce00a832_FnIns>*, jule::Bool);
inline void _1b6295288_funcDeclIns(jule::Ptr<_1b628d825_ObjectCoder>, jule::Ptr<_1ce00a832_FnIns>*, jule::Bool);
inline void _1b62955eb_funcDecl(jule::Ptr<_1b628d825_ObjectCoder>, jule::Ptr<_1ce00792d_Fn>*, jule::Bool);
inline void _1b6295a19_funcDeclTrait(jule::Ptr<_1b628d825_ObjectCoder>, jule::Ptr<_1ce01ac0a_Trait>*, jule::Ptr<_1ce00792d_Fn>*, jule::Bool);
inline void _1b6295c17_funcDecls(jule::Ptr<_1b628d825_ObjectCoder>);
inline void _1b629607a_traitDataTypeMethods(jule::Ptr<_1b628d825_ObjectCoder>, jule::Ptr<_1ce01ac0a_Trait>*, jule::Ptr<_1ce01ac0a_Trait>*);
inline void _1b6296278_traitDataTypes(jule::Ptr<_1b628d825_ObjectCoder>);
inline void _1b6296531_paramIns(jule::Ptr<_1b628d825_ObjectCoder>, jule::Ptr<_1ce009886_ParamIns>*);
inline void _1b62967d9_paramsIns(jule::Ptr<_1b628d825_ObjectCoder>, jule::Slice<jule::Ptr<_1ce009886_ParamIns>>*);
inline void _1b6296b4c_varInitExpr(jule::Ptr<_1b628d825_ObjectCoder>, jule::Ptr<_1ce0b4105_Var>*, jule::Fn<void(void)>);
inline void _1b6296e05_var(jule::Ptr<_1b628d825_ObjectCoder>, jule::Ptr<_1ce0b4105_Var>);
inline void _1b62971ad_funcIns(jule::Ptr<_1b628d825_ObjectCoder>, jule::Ptr<_1ce00a832_FnIns>*);
inline void _1b6297466_func(jule::Ptr<_1b628d825_ObjectCoder>, jule::Ptr<_1ce00792d_Fn>*);
inline void _1b62977c9_funcTrait(jule::Ptr<_1b628d825_ObjectCoder>, jule::Ptr<_1b628c3d4_traitHash>*, jule::Ptr<_1ce00792d_Fn>*);
inline void _1b6297b3c_traitWrapper(jule::Ptr<_1b628d825_ObjectCoder>, jule::Ptr<_1ce00792d_Fn>*, jule::Ptr<_1b628c3d4_traitHash>*);
inline void _1b6297d3a_traitWrappers(jule::Ptr<_1b628d825_ObjectCoder>);
inline void _1b629819d_traitDataMethods(jule::Ptr<_1b628d825_ObjectCoder>, jule::Ptr<_1ce01ac0a_Trait>*, jule::Ptr<_1b628c3d4_traitHash>*);
inline void _1b6298511_traitData(jule::Ptr<_1b628d825_ObjectCoder>, jule::Ptr<_1b628c3d4_traitHash>*, jule::Ptr<_1ce01ac0a_Trait>*);
inline void _1b629870e_traitDatas(jule::Ptr<_1b628d825_ObjectCoder>);
inline void _1b629890c_globals(jule::Ptr<_1b628d825_ObjectCoder>);
inline void _1b6298b0a_decls(jule::Ptr<_1b628d825_ObjectCoder>);
inline void _1b6298db3_structureMethods(jule::Ptr<_1b628d825_ObjectCoder>, jule::Ptr<_1cdee571d_StructIns>*);
inline void _1b629916b_structureOstream(jule::Ptr<_1b628d825_ObjectCoder>, jule::Ptr<_1cdee571d_StructIns>*);
inline void _1b6299424_structureIns(jule::Ptr<_1b628d825_ObjectCoder>, jule::Ptr<_1cdee571d_StructIns>*);
inline void _1b62996cc_structure(jule::Ptr<_1b628d825_ObjectCoder>, jule::Ptr<_1cdee2990_Struct>*);
inline void _1b62998ca_structures(jule::Ptr<_1b628d825_ObjectCoder>);
inline void _1b6299ac8_funcs(jule::Ptr<_1b628d825_ObjectCoder>);
inline void _1b6299d81_pushInit(jule::Ptr<_1b628d825_ObjectCoder>, jule::Ptr<_1ce06ded3_Package>*);
inline void _1b629a07e_initCaller(jule::Ptr<_1b628d825_ObjectCoder>);
inline void _1b629a27c_end(jule::Ptr<_1b628d825_ObjectCoder>);
inline void _1b629a47a_serializeHead(jule::Ptr<_1b628d825_ObjectCoder>);
inline void _1b629a678_Serialize(jule::Ptr<_1b628d825_ObjectCoder>);
inline jule::Ptr<_1b5925a07_ObjectDeadCode> static__1b5925e9c_new(jule::Ptr<_1b57ae72b_IR>*);
inline jule::Bool _1b9108b32_isLive(jule::Ptr<_1b5925a07_ObjectDeadCode>, jule::Ptr<_1ce01ac0a_Trait>*);
inline jule::Bool _1b910e583_isLive(jule::Ptr<_1b5925a07_ObjectDeadCode>, jule::Ptr<_1ce00a832_FnIns>*);
inline jule::Bool _1b91178bb_isLive(jule::Ptr<_1b5925a07_ObjectDeadCode>, jule::Ptr<_1cdee571d_StructIns>*);
inline jule::Bool _1b911c690_isLive(jule::Ptr<_1b5925a07_ObjectDeadCode>, jule::Ptr<_1ce0b4105_Var>*);
inline void _1b910900b_pushLive(jule::Ptr<_1b5925a07_ObjectDeadCode>, jule::Ptr<_1ce01ac0a_Trait>);
inline void _1b910e95c_pushLive(jule::Ptr<_1b5925a07_ObjectDeadCode>, jule::Ptr<_1ce00a832_FnIns>);
inline void _1b9115941_pushLive(jule::Ptr<_1b5925a07_ObjectDeadCode>, jule::Ptr<_1cdee571d_StructIns>);
inline void _1b911ca69_pushLive(jule::Ptr<_1b5925a07_ObjectDeadCode>, jule::Ptr<_1ce0b4105_Var>);
inline void _1b592684e_setReferencesAsLive(jule::Ptr<_1b5925a07_ObjectDeadCode>, jule::Ptr<_1ce00da00_ReferenceStack>*);
inline void _1b5926b07_inits(jule::Ptr<_1b5925a07_ObjectDeadCode>, jule::Ptr<_1ce06ded3_Package>*);
inline void _1b5926db0_collectLivePackage(jule::Ptr<_1b5925a07_ObjectDeadCode>, jule::Ptr<_1ce06ded3_Package>*);
inline void _1b59270ad_collectLive(jule::Ptr<_1b5925a07_ObjectDeadCode>);
inline void _1b5927366_removeDeadGlobals(jule::Ptr<_1b5925a07_ObjectDeadCode>, jule::Slice<jule::Ptr<_1ce0b4105_Var>>*);
inline void _1b592761e_removeDeadFns(jule::Ptr<_1b5925a07_ObjectDeadCode>, jule::Slice<jule::Ptr<_1ce00792d_Fn>>*);
inline void _1b59278c7_removeDeadStructs(jule::Ptr<_1b5925a07_ObjectDeadCode>, jule::Slice<jule::Ptr<_1cdee2990_Struct>>*);
inline void _1b5927b80_removeDeadTraits(jule::Ptr<_1b5925a07_ObjectDeadCode>, jule::Slice<jule::Ptr<_1ce01ac0a_Trait>>*);
inline void _1b5927e38_removeDeadsFile(jule::Ptr<_1b5925a07_ObjectDeadCode>, jule::Ptr<_1ce116894_SymbolTable>*);
inline void _1b59281e1_removeDeadsPackage(jule::Ptr<_1b5925a07_ObjectDeadCode>, jule::Ptr<_1ce06ded3_Package>*);
inline void _1b59283de_removeDeads(jule::Ptr<_1b5925a07_ObjectDeadCode>);
inline void _1b59285dc_elimanate(jule::Ptr<_1b5925a07_ObjectDeadCode>);
inline __jule_tuple_x_1b57ae72b_IR__jule_tuple_s_22a93672d_Log static__1b57aebc1_Build(jule::Str, jule::I32);
inline void _1b57b01aa_appendStructs(_1b57ae72b_IR*, jule::Ptr<_1ce06ded3_Package>*, jule::Slice<jule::Ptr<_1cdee2990_Struct>>*);
inline jule::Slice<jule::Ptr<_1cdee2990_Struct>> _1b57b0441_GetAllStructures(_1b57ae72b_IR*);
inline void _1b57b07a4_appendGlobals(_1b57ae72b_IR*, jule::Ptr<_1ce06ded3_Package>*, jule::Slice<jule::Ptr<_1ce0b4105_Var>>*);
inline jule::Slice<jule::Ptr<_1ce0b4105_Var>> _1b57b0a3a_GetAllGlobals(_1b57ae72b_IR*);
inline void _1b57b0c38_Order(_1b57ae72b_IR*);
inline jule::Str _1cdee5a92_Str(_1cdee571d_StructIns*);
inline jule::Bool _1cdee5dd3_Equal(jule::Ptr<_1cdee571d_StructIns>, jule::Ptr<_1ce14cbc7_TypeKind>);
inline jule::Bool _1cdee6389_Same(_1cdee571d_StructIns*, jule::Ptr<_1cdee571d_StructIns>);
inline jule::Ptr<_1ce00792d_Fn> _1cdee6785_FindMethod(_1cdee571d_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1cdee4b6d_FieldIns> _1cdee6ac6_FindField(_1cdee571d_StructIns*, jule::Str);
inline jule::Ptr<_1ce0b4105_Var> _1cdee6e17_FindStatic(_1cdee571d_StructIns*, jule::Str);
inline jule::Ptr<_22acaed1a_Cmd> static__22acb0216_New(jule::Str);
inline jule::VoidExceptional _22acb0414_Spawn(_22acaed1a_Cmd*);
inline jule::Exceptional<jule::I32> _22acb0898_Wait(_22acaed1a_Cmd*);
inline jule::VoidExceptional _22abd7b44_spawn(_22acaed1a_Cmd*);
inline jule::Exceptional<jule::I32> _22abd80c8_wait(_22acaed1a_Cmd*);
inline void _243952434_Free(void*);
inline jule::Str _243982c28_BytePtrToStr(jule::U8*);
inline jule::Slice<jule::U8> _243982eae_StrToBytes(jule::Str);
inline jule::I32 _2438e7d14_GetLastErrno(void);
inline jule::I32 _243992793_Fcntl(jule::I32, jule::I32, jule::I32);
inline jule::I32 _243992b17_Stat(jule::U8*, struct stat*);
inline jule::I32 _243993046_Open(jule::U8*, jule::I32, jule::I32);
inline jule::U8* _2439933ba_Getcwd(jule::U8*, jule::U32);
inline DIR* _2439938b5_Opendir(jule::U8*);
inline struct dirent* _243993a91_Readdir(DIR*);
inline jule::I32 _243993d38_Closedir(DIR*);
inline jule::I32 _243994740_Mkdir(jule::U8*, jule::I32);
inline jule::I32 _243994a09_Rmdir(jule::U8*);
inline jule::I32 _243994cc3_Unlink(jule::U8*);
inline jule::I32 _2439bdc0e_Read(jule::I32, void*, jule::U32);
inline jule::I32 _2439be0d8_Close(jule::I32);
inline jule::I32 _2439be490_Write(jule::I32, void*, jule::U32);
inline void _2439be6c1_Exit(jule::I32);
inline jule::Str _243a7db26_Str(jule::U8*, jule::I32);
inline jule::Slice<jule::U8> _1b6305d43_Slice(jule::U8*, jule::I32);
inline jule::Slice<jule::U8> _243a898bd_StrBytes(jule::Str);
inline jule::Str _243a89b54_BytesStr(jule::Slice<jule::U8>);
inline jule::Str _243a89e1d_StrFromBytes(jule::Slice<jule::U8>);
inline jule::I32 _243ab0372_getLastOsError(void);
inline jule::Slice<jule::Str> _243ab4ac4_Args(void);
inline jule::Exceptional<jule::Str> _243ab5036_WorkingDir(void);
inline jule::Exceptional<jule::Str> _243ab5971_getwd(void);
inline jule::Bool _22a7c98ac_IsLetter(jule::I32);
inline jule::Bool _22a83edea_is16(jule::Slice<_22a83d15c_Range16>, jule::U16);
inline jule::Bool _22a84026e_is32(jule::Slice<_22a83d68a_Range32>, jule::U32);
inline jule::Bool _22a840a77_isExcludingLatin(jule::Ptr<_22a83db0d_RangeTable>, jule::I32);
inline jule::Bool _22a840cb9_IsUpper(jule::I32);
inline __jule_tuple_i32__jule_tuple_int _22aaa33e4_DecodeRune(jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _22aaa3735_DecodeRuneStr(jule::Str);
inline __jule_tuple_i32__jule_tuple_int _22aaa3c85_DecodeLastRuneStr(jule::Str);
inline jule::Slice<jule::U8> _22aaa47d0_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _22aaa4b54_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I32 _22aaa51d7_RuneCountStr(jule::Str);
inline jule::Bool _22aaa54a1_RuneStart(jule::U8);
inline jule::I32 _22aae62c2_findLastByte(jule::U8*, jule::U8*, jule::U8);
inline jule::I32 _22aae68ee_FindByteStr(jule::Str, jule::U8);
inline jule::I32 _22aae6c73_FindLastByteStr(jule::Str, jule::U8);
inline jule::Str _22aae7070_Repeat(jule::Str, jule::I32);
inline jule::Bool _22aae74e3_hasPrefix(jule::Str*, jule::Str*, jule::I32);
inline jule::Bool _22aae7867_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _22aae7d1d_hasSuffix(jule::Str*, jule::Str*, jule::I32);
inline jule::Bool _22aae815e_HasSuffix(jule::Str, jule::Str);
inline jule::I32 _22aae858d_FindAt(jule::Str, jule::Str, jule::I32);
inline jule::I32 _22aae8912_Find(jule::Str, jule::Str);
inline jule::I32 _22aae8e51_FindLastAt(jule::Str, jule::Str, jule::I32);
inline jule::I32 _22aae924d_FindLast(jule::Str, jule::Str);
inline jule::I32 _22aaea99c_FindLastByte(jule::Str, jule::U8);
inline jule::I32 _22aaeb052_FindRune(jule::Str, jule::I32);
inline jule::I32 _22aaeb63a_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _22aaebddd_Split(jule::Str, jule::Str, jule::I32);
inline jule::Bool _22aaec262_Contains(jule::Str, jule::Str);
inline jule::Bool _22aaeccce_ContainsAny(jule::Str, jule::Str);
inline jule::I32 _22aaed153_Count(jule::Str, jule::Str);
inline jule::Str _22aaed63c_Replace(jule::Str, jule::Str, jule::Str, jule::I32);
inline jule::Str _22aaee3b8_TrimLeft(jule::Str, jule::Str);
inline jule::Str _22aaee73c_TrimRight(jule::Str, jule::Str);
inline jule::Str _22aaeed47_Trim(jule::Str, jule::Str);
inline jule::Str _22ab00177_Join(jule::Slice<jule::Str>, jule::Str);
inline jule::Str _22ab18091_Clean(jule::Str);
inline jule::Str _22ab18668_FromSlash(jule::Str);
inline jule::Str _22ab189a9_Join(jule::Slice<jule::Str>);
inline jule::Str _22ab18c40_Ext(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _22ab19009_Abs(jule::Str);
inline jule::Str _22ab192c3_Base(jule::Str);
inline jule::Str _22ab1969c_Dir(jule::Str);
inline jule::Str _22ab198de_VolumeName(jule::Str);
inline jule::Bool _22ab1a78b_IsPathSep(jule::U8);
inline jule::Bool _22ab1aa99_IsAbs(jule::Str);
inline jule::I32 _22ab1ad63_volumeNameLen(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _22ab1b1a4_abs(jule::Str);
inline jule::Str _22ab1b43a_join(jule::Slice<jule::Str>);
inline jule::I32 _2439c4693_getLastFsError(void);
inline __jule_tuple_int__jule_tuple_bool _22abc99c1_AtoiBp(jule::U8*, jule::I32);
inline jule::Str _22abd3612_Itoa(jule::I32);
inline jule::Str _22abd3920_Utoa(jule::U32);
inline void _22abd3b51_rev(jule::Slice<jule::U8>*);
inline jule::Slice<char*> _22abd733b_strSliceToCstrSlice(jule::Slice<jule::Str>*, jule::Slice<jule::Slice<jule::U8>>*);
inline jule::I32 _22abd76b0_execvp(jule::Str*, jule::Slice<jule::Str>*);
inline jule::VoidExceptional _22abd78e1_setenv(jule::Slice<jule::Str>*);
inline jule::I32 _22abd8958_processErrorFromCode(jule::I32);
inline jule::I32 _22abd8bab_getLastProcessError(void);
inline void _22abd94c5_Exit(jule::I32);
inline jule::Str _22abd96d4_Executable(void);
inline jule::Bool _22a929116_IsStdHeaderPath(jule::Str);
inline jule::Bool _22a9293e1_IsValidHeaderExt(jule::Str);
inline jule::Bool _22a9296aa_IsValidCppExt(jule::Str);
inline jule::Str _22a936b90_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _22a936e9d_argToStr(jule::Any);
inline jule::I32 _22a937267_findNextFmt(jule::Str);
inline jule::Str _22a937630_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _22a938488_IsTopDirective(jule::Str);
inline jule::Bool _22a9398a7_IsWindows(jule::Str);
inline jule::Bool _22a939bb5_IsDarwin(jule::Str);
inline jule::Bool _22a939e7e_IsLinux(jule::Str);
inline jule::Bool _22a93a2c0_IsI386(jule::Str);
inline jule::Bool _22a93a556_IsAmd64(jule::Str);
inline jule::Bool _22a93a820_IsArm64(jule::Str);
inline jule::Bool _22a93aad9_IsUnix(jule::Str);
inline jule::Bool _22a93aeb3_Is32Bit(jule::Str);
inline jule::Bool _22a93b205_Is64Bit(jule::Str);
inline void _22abdaa7b_init(void);
inline jule::I32 _22bd99d16_LeadingZeros64(jule::U64);
inline jule::I32 _22bd9ac5c_TrailingZeros(jule::U32);
inline jule::I32 _22bd9b642_TrailingZeros32(jule::U32);
inline jule::I32 _22bd9b90b_TrailingZeros64(jule::U64);
inline jule::I32 _22bda23d4_Len32(jule::U32);
inline jule::I32 _22bda269d_Len64(jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _22bda343a_Add64(jule::U64, jule::U64, jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _22bda4c44_Mul64(jule::U64, jule::U64);
inline jule::U32 _22bca6b24_F32Bits(jule::F32);
inline jule::F32 _22bca6e32_F32FromBits(jule::U32);
inline jule::U64 _22bca71eb_F64Bits(jule::F64);
inline jule::F64 _22bca753c_F64FromBits(jule::U64);
inline __jule_tuple_f64__jule_tuple_int _22bca9aa0_Frexp(jule::F64);
inline jule::F64 _22bdabd7d_NaN(void);
inline jule::Bool _22bdac18b_IsNaN(jule::F64);
inline jule::F64 _22bdac455_Inf(jule::I32);
inline jule::Bool _22bdac81d_IsInf(jule::F64, jule::I32);
inline __jule_tuple_f64__jule_tuple_int _22bdacad7_normalize(jule::F64);
inline jule::F64 _22bdae5ab_Log(jule::F64);
inline jule::F64 _22bdaee91_Abs(jule::F64);
inline __jule_tuple_f64__jule_tuple_f64 _22bdb6a69_Modf(jule::F64);
inline jule::F64 _22bdb7372_Log2(jule::F64);
inline jule::Str _22bde129c_FmtFloat(jule::F64, jule::U8, jule::I32, jule::I32);
inline jule::Slice<jule::U8> _22bde1885_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I32, jule::I32);
inline jule::Slice<jule::U8> _22bde208e_bigFtoa(jule::Slice<jule::U8>, jule::I32, jule::U8, jule::Bool, jule::U64, jule::I32, _22bde008c_floatInfo*);
inline jule::Slice<jule::U8> _22bde2765_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _22bde0c19_decimalSlice, jule::I32, jule::U8);
inline void _22bde2b83_roundShortest(_22be03974_decimal*, jule::U64, jule::I32, _22bde008c_floatInfo*);
inline jule::Slice<jule::U8> _22bde3227_fmtE(jule::Slice<jule::U8>, jule::Bool, _22bde0c19_decimalSlice, jule::I32, jule::U8);
inline jule::Slice<jule::U8> _22bde3711_fmtF(jule::Slice<jule::U8>, jule::Bool, _22bde0c19_decimalSlice, jule::I32);
inline jule::Slice<jule::U8> _22bde3db5_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I32, _22bde008c_floatInfo*);
inline jule::Slice<jule::U8> _22bde4547_fmtX(jule::Slice<jule::U8>, jule::I32, jule::U8, jule::Bool, jule::U64, jule::I32, _22bde008c_floatInfo*);
inline jule::I32 _22bde48bb_min(jule::I32, jule::I32);
inline jule::I32 _22bde4c40_max(jule::I32, jule::I32);
inline jule::U8 _22bde58cd_lower(jule::U8);
inline __jule_tuple_u64__jule_tuple__22b7e7c81_ConvError _22bde5d51_parseUint(jule::Str*, jule::I32, jule::I32);
inline jule::Exceptional<jule::U64> _22bde6280_ParseUint(jule::Str, jule::I32, jule::I32);
inline jule::Exceptional<jule::I64> _22bde6736_ParseInt(jule::Str, jule::I32, jule::I32);
inline __jule_tuple_f64__jule_tuple_bool _22bde73e6_eiselLemire64(jule::U64, jule::I32, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _22bde7869_eiselLemire32(jule::U64, jule::I32, jule::Bool);
inline jule::I32 _22bde964b_commonPrefixLenIgnoreCase(jule::Str, jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _22bde9959_special(jule::Str);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _22bde9c23_readFloat(jule::Str*);
inline __jule_tuple_f64__jule_tuple_bool _22bdeb76e_atof64exact(jule::U64, jule::I32, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _22bdebb9d_atof32exact(jule::U64, jule::I32, jule::Bool);
inline __jule_tuple_f64__jule_tuple__22b7e7c81_ConvError _22bdec242_atofHex(_22bde008c_floatInfo*, jule::U64, jule::I32, jule::Bool, jule::Bool);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__22b7e7c81_ConvError _22bdec61b_atof32(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__22b7e7c81_ConvError _22bdec85d_atof64(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__22b7e7c81_ConvError _22bdecbd2_parseFloatPrefix(jule::Str*, jule::I32);
inline jule::Exceptional<jule::F64> _22bded056_ParseFloat(jule::Str, jule::I32);
inline void _22bded8d6_ryuFtoaFixed32(_22bde0c19_decimalSlice*, jule::U32, jule::I32, jule::I32);
inline void _22bdedd7b_ryuFtoaFixed64(_22bde0c19_decimalSlice*, jule::U64, jule::I32, jule::I32);
inline void _22bdee6b7_formatDecimal(_22bde0c19_decimalSlice*, jule::U64, jule::Bool, jule::Bool, jule::I32);
inline void _22bdeeb90_ryuFtoaShortest(_22bde0c19_decimalSlice*, jule::U64, jule::I32, _22bde008c_floatInfo*);
inline jule::I32 _22bdeee26_mulByLog2Log10(jule::I32);
inline jule::I32 _22be001e0_mulByLog10Log2(jule::I32);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _22be0061e_computeBounds(jule::U64, jule::I32, _22bde008c_floatInfo*);
inline void _22be00c6d_ryuDigits(_22bde0c19_decimalSlice*, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _22be013de_ryuDigits32(_22bde0c19_decimalSlice*, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I32);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _22be0181d_mult64bitPow10(jule::U32, jule::I32, jule::I32);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _22be01c4c_mult128bitPow10(jule::U64, jule::I32, jule::I32);
inline jule::Bool _22be020c1_divisibleByPow5(jule::U64, jule::I32);
inline __jule_tuple_u32__jule_tuple_u32 _22be0238a_divmod1e9(jule::U64);
inline void _22be052c2_trim(_22be03974_decimal*);
inline void _22be055ad_rightShift(_22be03974_decimal*, jule::U32);
inline jule::Bool _22be05a64_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I32, jule::Str*);
inline void _22be05d1c_leftShift(_22be03974_decimal*, jule::U32);
inline jule::Bool _22be06191_shouldRoundUp(_22be03974_decimal*, jule::I32);
inline jule::Str _22be07923_FmtUint(jule::U64, jule::I32);
inline jule::Str _22be07cdb_FmtInt(jule::I64, jule::I32);
inline jule::Str _22be080a5_Itoa(jule::I32);
inline jule::Str _22be083e6_small(jule::I32);
inline jule::Bool _22be0867c_isPowerOfTwo(jule::I32);
inline __jule_tuple_su8__jule_tuple_str _22be08c21_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I32, jule::Bool, jule::Bool);
inline jule::Str _22be0a21c_RealKindOf(jule::Str);
inline jule::I32 _22be0a4d6_BitsizeOf(jule::Str);
inline jule::Str _22be0a827_IntFromBits(jule::I32);
inline jule::Str _22be0aaad_UintFromBits(jule::I32);
inline jule::Str _22be0ad77_FloatFromBits(jule::I32);
inline jule::Bool _22be0b97c_CheckBitFloat(jule::Str, jule::I32);
inline jule::I32 _22be0bc46_BitsizeOfFloat(jule::F64);
inline jule::I32 _22be0c010_BitsizeOfInt(jule::I64);
inline jule::I32 _22be0c2c9_BitsizeOfUint(jule::U64);
inline void _22be0c472_UpdateTarget(void);
inline void _22be0c5e8_init(void);
inline jule::I64 _22be11256_MinI(jule::Str);
inline jule::I64 _22be11564_MaxI(jule::Str);
inline jule::U64 _22be1182d_MaxU(jule::Str);
inline jule::F64 _22be11b6e_Min(jule::Str);
inline jule::F64 _22be11e05_Max(jule::Str);
inline jule::Bool _22be123ab_IsI16Greater(jule::Str);
inline jule::Bool _22be126b9_IsI32Greater(jule::Str);
inline jule::Bool _22be12983_IsI64Greater(jule::Str);
inline jule::Bool _22be12cc4_IsU16Greater(jule::Str);
inline jule::Bool _22be1305a_IsU32Greater(jule::Str);
inline jule::Bool _22be13324_IsU64Greater(jule::Str);
inline jule::Bool _22be135dd_IsF32Greater(jule::Str);
inline jule::Bool _22be139b7_IsF64Greater(jule::Str);
inline jule::Bool _22be13cb4_IsGreater(jule::Str, jule::Str);
inline jule::Bool _22be14e2a_IsSigInt(jule::Str);
inline jule::Bool _22be15238_IsUnsigInt(jule::Str);
inline jule::Bool _22be15502_IsInt(jule::Str);
inline jule::Bool _22be15843_IsFloat(jule::Str);
inline jule::Bool _22be15ac9_IsNum(jule::Str);
inline jule::Bool _22be15d93_IsSigNum(jule::Str);
inline void _22be20188_lshiftUnsig(_22be1616d_Const*, _22be1616d_Const*);
inline void _22be204b8_rshiftUnsig(_22be1616d_Const*, _22be1616d_Const*);
inline jule::Bool _1cdeabc01_IsUnaryOp(jule::U32);
inline jule::Bool _1cdeac00e_IsBinOp(jule::U32);
inline jule::Bool _1cdeac619_IsStr(jule::Str);
inline jule::Bool _1cdeac8a0_IsRawStr(jule::Str);
inline jule::Bool _1cdeacb69_IsRune(jule::Str);
inline jule::Bool _1cdead54e_IsFloat(jule::Str);
inline jule::Bool _1cdead818_IsNum(jule::Str);
inline jule::Bool _1cdeadd9b_IsIgnoreIdent(jule::Str);
inline jule::Bool _1cdeae165_IsAnonIdent(jule::Str);
inline jule::Bool _1cdeae6e8_IsSpace(jule::I32);
inline jule::Bool _1cdeaebe3_IsLetter(jule::I32);
inline jule::Bool _1cdeb0166_IsDecimal(jule::U8);
inline jule::Bool _1cdeb0430_IsBinary(jule::U8);
inline jule::Bool _1cdeb06e9_IsOctal(jule::U8);
inline jule::Bool _1cdeb09b3_IsHex(jule::U8);
inline jule::Bool _1cdeb0c7c_IsAssign(jule::U32);
inline jule::Bool _1cdeb1046_IsPostfixOp(jule::U32);
inline jule::Bool _1cdeb1310_IsAssignOp(jule::U32);
inline jule::Ptr<_1cdeb1c4a_File> _1cdeb3125_NewFileSet(jule::Str);
inline _22a93672d_Log _1cdeb4b4e_makeErr(jule::I32, jule::I32, jule::Ptr<_1cdeb1c4a_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1cdeb5017_bytesHasPrefix(jule::Slice<jule::U8>*, jule::Str);
inline jule::Str _1cdeb538b_floatFmtE(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1cdeb5754_floatFmtP(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1cdeb5ac8_floatFmtDotnp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1cdeb5e4c_floatFmtDotfp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1cdeb62c1_floatFmtDotp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1cdeb6755_floatNum(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1cdeb6997_commonNum(jule::Slice<jule::U8>*);
inline jule::Str _1cdeb6c61_binaryNum(jule::Slice<jule::U8>*);
inline jule::Bool _1cdeb70d5_isFloatFmtE(jule::U8, jule::I32);
inline jule::Bool _1cdeb7459_isFloatFmtP(jule::U8, jule::I32);
inline jule::Bool _1cdeb77cd_isFloatFmtDotnp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Bool _1cdeb7b52_isFloatFmtDotp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Bool _1cdeb7ec6_isFloatFmtDotfp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1cdeb84c1_octalNum(jule::Slice<jule::U8>*);
inline jule::Str _1cdeb869c_hexNum(jule::Slice<jule::U8>*);
inline jule::Str _1cdeb89ee_hexEscape(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1cdeb8cb8_bigUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _1cdeb9082_littleUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _1cdeb934b_hexByteEscape(jule::Slice<jule::U8>*);
inline jule::Str _1cdeb9615_byteEscape(jule::Slice<jule::U8>*);
inline jule::Slice<_22a93672d_Log> _1cdebe609_Lex(jule::Ptr<_1cdeb1c4a_File>, jule::I32);
inline jule::Bool _1ce087628_FindModuleFile(jule::Slice<jule::Ptr<_2439c6321_DirEntry>>*);
inline jule::Str _1ce0878d1_FindModuleFileDeep(jule::Str);
inline jule::Slice<_22a93672d_Log> _1ce087b9a_CheckModuleFile(jule::Str*);
inline jule::Bool _1ce0884e7_IsPub(jule::Str);
inline jule::Bool _1ce0d5ab6_IsAscii(jule::I32);
inline jule::I32 _1ce100be1_ToRune(jule::Str);
inline jule::Str _1ce100e00_ToRawStr(jule::Str);
inline jule::Str _1ce101241_ToStr(jule::Str);
inline __jule_tuple_u8__jule_tuple_bool _1ce1014c7_tryBtoaCommonEsq(jule::Str);
inline jule::I32 _1ce10184b_runeFromEsqSeq(jule::Str, jule::I32*);
inline void _1ce101be2_strEsqSeq(jule::Slice<jule::U8>*, jule::Str, jule::I32*);
inline jule::I32 _1ce23067d_findFormatPrefix(jule::Slice<jule::U8>*, jule::I32);
inline jule::Slice<jule::U8> _1ce2309ad_getFormatRange(jule::I32*, jule::Slice<jule::U8>*);
inline void _1ce230c99_FmtByDefault(_22ab0b88c_StrBuilder*, jule::Any*);
inline void _1ce2311b7_applyFmtByDefault(_22ab0b88c_StrBuilder*, jule::I32*, jule::Slice<jule::Any>);
inline void _1ce2315d5_applyFmt(jule::Slice<jule::U8>*, _22ab0b88c_StrBuilder*, jule::I32*, jule::Slice<jule::Any>);
inline jule::Slice<jule::U8> _1ce231959_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1ce23397d_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ce00cb0e_parameterUsesGenerics(jule::Ptr<_1ce009886_ParamIns>*, jule::Slice<jule::Ptr<_1cdecdc9a_GenericDecl>>*);
inline jule::Ptr<_1ce154d99_TypeSymbol> _1ce010381_buildType(jule::Ptr<_1cdec1a90_TypeDecl>);
inline jule::Ptr<_1ce11cd84_Value> _1ce01068e_buildExpr(jule::Ptr<_1cdec5dc4_Expr>);
inline jule::Ptr<_1ce14bdd5_TypeAlias> _1ce010958_buildTypeAlias(jule::Ptr<_1cded85ac_TypeAliasDecl>);
inline jule::Ptr<_1cdedea69_Field> _1ce010c99_buildField(jule::Ptr<_1cdedbe62_FieldDecl>);
inline jule::Slice<jule::Ptr<_1cdedea69_Field>> _1ce011030_buildFields(jule::Slice<jule::Ptr<_1cdedbe62_FieldDecl>>*);
inline jule::Ptr<_1cdee2990_Struct> _1ce0112e9_buildStruct(jule::Ptr<_1cdedc858_StructDecl>);
inline jule::Ptr<_1ce005e59_Param> _1ce0115b3_buildParam(jule::Ptr<_1cded22ed_ParamDecl>);
inline jule::Slice<jule::Ptr<_1ce005e59_Param>> _1ce01198c_buildParams(jule::Slice<jule::Ptr<_1cded22ed_ParamDecl>>*);
inline jule::Ptr<_1ce0056c8_RetType> _1ce011bce_buildRetType(jule::Ptr<_1cdec4983_RetTypeDecl>);
inline jule::Ptr<_1ce00792d_Fn> _1ce011e98_buildFunc(jule::Ptr<_1cded3750_FnDecl>);
inline jule::Slice<jule::Ptr<_1ce00792d_Fn>> _1ce012262_buildMethods(jule::Slice<jule::Ptr<_1cded3750_FnDecl>>*);
inline jule::Slice<jule::Ptr<_1ce154d99_TypeSymbol>> _1ce01252b_buildTraitInherits(jule::Slice<jule::Ptr<_1cdec1a90_TypeDecl>>*);
inline jule::Ptr<_1ce01ac0a_Trait> _1ce0127e5_buildTrait(jule::Ptr<_1cdedd095_TraitDecl>);
inline jule::Ptr<_1ce01c899_EnumItem> _1ce012aae_buildEnumItem(jule::Ptr<_1cdeda14c_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1ce01c899_EnumItem>> _1ce012d78_buildEnumItems(jule::Slice<jule::Ptr<_1cdeda14c_EnumItemDecl>>*);
inline jule::Ptr<_1ce01d416_Enum> _1ce013373_buildEnum(jule::Ptr<_1cdedac0d_EnumDecl>);
inline jule::Ptr<_1ce01e549_TypeEnumItem> _1ce01354e_buildTypeEnumItem(jule::Ptr<_1cdedb538_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_1ce01e549_TypeEnumItem>> _1ce0137e6_buildTypeEnumItems(jule::Slice<jule::Ptr<_1cdedb538_TypeEnumItemDecl>>*);
inline jule::Ptr<_1ce01eb21_TypeEnum> _1ce013ab0_buildTypeEnum(jule::Ptr<_1cdedbb98_TypeEnumDecl>);
inline jule::Ptr<_1ce0b4105_Var> _1ce013d79_buildVar(jule::Ptr<_1cded490a_VarDecl>);
inline jule::Slice<jule::Ptr<_1ce0b4105_Var>> _1ce014143_buildVars(jule::Slice<jule::Ptr<_1cded490a_VarDecl>>);
inline jule::Ptr<_1ce044371_Impl> _1ce01440c_buildImpl(jule::Ptr<_1cdedd705_Impl>);
inline jule::Ptr<_1ce11bc0c_Data> _1ce03e7bc_buildAsComptimeMethodData(jule::Ptr<_1ce00a832_FnIns>*);
inline jule::Ptr<_1ce06b0ac_ImportInfo> _1ce03eaca_findComptimePackage(jule::Ptr<_1ce08b42e_Sema>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce03ee4e_buildComptimeTypeInfoData(jule::Ptr<_1ce08b42e_Sema>*, jule::Ptr<_1ce14cbc7_TypeKind>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce040290_buildComptimeValue(jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Str _1ce04331a_toStrConstraints(jule::Ptr<_1ce14b2e1_InsGeneric>);
inline jule::Bool _1ce0436d3_matchConstraint(jule::Str*, jule::Ptr<_1ce14cbc7_TypeKind>*);
inline jule::Bool _1ce04399c_isBuiltinConstraint(jule::Str*);
inline jule::Ptr<_1ce051acb_scopeChecker> _1ce0465a4_newScopeCheckerBase(jule::Ptr<_1ce08b42e_Sema>*, jule::Ptr<_1ce00a832_FnIns>);
inline jule::Ptr<_1ce051acb_scopeChecker> _1ce04696c_newScopeChecker(jule::Ptr<_1ce08b42e_Sema>*, jule::Ptr<_1ce00a832_FnIns>);
inline jule::Ptr<_1ce050635_scopeLabel> _1ce046ce1_findLabelParent(jule::Str*, jule::Ptr<_1ce051acb_scopeChecker>);
inline jule::Bool _1ce0471a9_modelIsGotoScope(jule::Any, jule::Ptr<_1ce0497c7_Scope>*);
inline jule::Bool _1ce04752d_stmtIsGotoScope(jule::Any*, jule::Ptr<_1ce0497c7_Scope>*);
inline jule::I32 _1ce0478a2_countMatchType(jule::Ptr<_1ce04d90d_Match>*, jule::Ptr<_1ce14cbc7_TypeKind>*);
inline jule::Slice<jule::Ptr<_1ce11bc0c_Data>> _1ce047b6b_getDatasFromTupleData(jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Bool _1ce0484a7_checkMut(jule::Ptr<_1ce08b42e_Sema>*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1ce11bc0c_Data>, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Bool _1ce048991_checkAssign(jule::Ptr<_1ce08b42e_Sema>*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1ce11bc0c_Data>, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Bool _1ce048c5a_isValidAstStForNextSt(jule::Any*);
inline jule::Bool _1ce049024_isValidStForNextSt(jule::Any*);
inline jule::Bool _1ce0492dd_stmtIsDef(jule::Any*);
inline jule::U32 _1ce0638e0_removeEqFromOp(jule::U32);
inline void _1ce063b21_makeComptimeRange(jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Bool _1ce06411b_canComptimeMatch(jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Ptr<_1ce0b4105_Var> _1ce068593_findVarInPackage(jule::Slice<jule::Ptr<_1ce116894_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1ce14bdd5_TypeAlias> _1ce068a16_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1ce116894_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1cdee2990_Struct> _1ce068e45_findStructInPackage(jule::Slice<jule::Ptr<_1ce116894_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1ce00792d_Fn> _1ce0693eb_findFnInPackage(jule::Slice<jule::Ptr<_1ce116894_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1ce01ac0a_Trait> _1ce06973c_findTraitInPackage(jule::Slice<jule::Ptr<_1ce116894_SymbolTable>>*, jule::Str*);
inline jule::Ptr<_1ce01d416_Enum> _1ce069ab1_findEnumInPackage(jule::Slice<jule::Ptr<_1ce116894_SymbolTable>>*, jule::Str*);
inline jule::Ptr<_1ce01eb21_TypeEnum> _1ce069e35_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1ce116894_SymbolTable>>*, jule::Str*);
inline jule::Any _1ce06a474_defByIdentPackage(jule::Slice<jule::Ptr<_1ce116894_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Bool _1ce0714ad_isStdPackage(jule::Str*, jule::Str);
inline jule::Bool _1ce088abe_isValidModelForRef(jule::Any*);
inline _22a93672d_Log _1ce089075_compilerErr(jule::Ptr<_1cdeab4b4_Token>*, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ce0893e9_impIsLookupable(jule::Ptr<_1ce06b0ac_ImportInfo>*, jule::Str*);
inline void _1ce089729_appendRetVars(jule::Slice<jule::Ptr<_1ce0b4105_Var>>*, jule::Ptr<_1ce00a832_FnIns>*);
inline void _1ce089a15_appendParamVars(jule::Slice<jule::Ptr<_1ce0b4105_Var>>*, jule::Ptr<_1ce00a832_FnIns>*);
inline void _1ce089d01_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1ce14bdd5_TypeAlias>>*, jule::Ptr<_1ce00a832_FnIns>*);
inline jule::Ptr<_1ce116894_SymbolTable> _1ce08a175_findFile(jule::Slice<jule::Ptr<_1ce116894_SymbolTable>>*, jule::Ptr<_1cdeb1c4a_File>*);
inline void _1ce08a62b_pushSuggestion(_22a93672d_Log*, jule::Str, jule::Slice<jule::Any>);
inline void _1ce0b27da_pushImplemented(jule::Ptr<_1ce01ac0a_Trait>, jule::Ptr<_1cdee2990_Struct>*);
inline void _1ce0b2ac6_pushImplements(jule::Ptr<_1cdee2990_Struct>*, jule::Ptr<_1ce01ac0a_Trait>);
inline jule::Bool _1ce102473_traitHasReferenceReceiver(jule::Ptr<_1ce01ac0a_Trait>*);
inline jule::Bool _1ce10282a_floatAssignable(jule::Str*, jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Bool _1ce102b9e_sigAssignable(jule::Str, jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Bool _1ce103067_unsigAssignable(jule::Str, jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Bool _1ce1033db_intAssignable(jule::Str, jule::Ptr<_1ce11bc0c_Data>*);
inline void _1ce10e804_checkMutRiskOfStructLit(jule::Ptr<_1ce08b42e_Sema>*, jule::Ptr<_1cdeea965_StructLitExprModel>*);
inline jule::Ptr<_1ce14cbc7_TypeKind> _1ce115640_lenKind(void);
inline jule::Bool _1ce115992_isGoodValueToInfer(jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Ptr<_1cdec0eac_Directive> _1ce1455a4_findDirective(jule::Slice<jule::Ptr<_1cdec0eac_Directive>>*, jule::Str);
inline jule::Any _1ce14596c_findBuiltinsImport(jule::Str*, jule::Ptr<_1ce06b0ac_ImportInfo>);
inline void _1ce145b9d_fitBitsize(jule::Ptr<_1ce11bc0c_Data>*);
inline void _1ce145ecd_makeStructLitAlloc(jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1cdeea965_StructLitExprModel>*);
inline jule::Ptr<_1ce0b4105_Var> _1ce146352_buildErrorVar(jule::Ptr<_1ce0497c7_Scope>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Any _1ce1466c6_findBuiltinsSema(jule::Str*, jule::Ptr<_1ce08b42e_Sema>);
inline jule::Bool _1ce146990_isOkForShifting(jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Bool _1ce146d69_isInstancedStruct(jule::Ptr<_1cdee571d_StructIns>);
inline jule::Bool _1ce147166_isPtrArithmeticCompatible(jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1ce11bc0c_Data>*);
inline void _1ce14750c_applyCastKindModel(jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1ce14cbc7_TypeKind>*, jule::Ptr<_1cdeab4b4_Token>*);
inline void _1ce1478a3_applyCastKind(jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1ce14cbc7_TypeKind>*, jule::Ptr<_1cdeab4b4_Token>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce147ab2_buildVoidData(void);
inline jule::Str _1ce147e36_checkDataForIntegerIndexing(jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1cdeab4b4_Token>*);
inline void _1ce1482cc_applyCastModelByEnum(jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1ce01d416_Enum>, jule::Ptr<_1cdeab4b4_Token>*);
inline void _1ce1485b8_castConstByType(jule::Str*, jule::Ptr<_1ce11bc0c_Data>*);
inline void _1ce148ad5_updateModelToGenericIns(jule::Any*, jule::Ptr<_1ce00a832_FnIns>*);
inline jule::Bool _1ce148d49_pushSubIdentFromExpr(jule::Any, jule::Ptr<_1cdec2464_SubIdentTypeDecl>*);
inline jule::Str _1ce149113_constoa(jule::Ptr<_22be1616d_Const>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce149542_evalEnumStatic(jule::Ptr<_1ce01d416_Enum>*, jule::Ptr<_1ce01c899_EnumItem>*, jule::Ptr<_1cdeab4b4_Token>*);
inline jule::Ptr<_1cdeea965_StructLitExprModel> _1ce14980b_isLitBased(jule::Any*);
inline void _1ce149ae7_makeImplicitDeref(jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1cdeab4b4_Token>);
inline void _1b869d1c7_updateRefer(jule::Ptr<_1ce00da00_ReferenceStack>, jule::Ptr<_1ce00a832_FnIns>*, jule::Ptr<_1ce00a832_FnIns>*);
inline void _1ce14a279_makeVariadic(jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1ce14cbc7_TypeKind>);
inline jule::Bool _1ce16842e_kindUsesGenerics(jule::Ptr<_1ce14cbc7_TypeKind>*, jule::Slice<jule::Ptr<_1cdecdc9a_GenericDecl>>*);
inline jule::Bool _1ce1687e7_hasDirective(jule::Slice<jule::Ptr<_1cdec0eac_Directive>>*, jule::Str);
inline jule::Bool _1ce168ab1_canGetPtr(jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Bool _1ce168e02_isValidForSptrType(jule::Ptr<_1ce14cbc7_TypeKind>*);
inline jule::Bool _1ce169188_isValidForRef(jule::Ptr<_1ce14cbc7_TypeKind>*);
inline jule::Bool _1ce169452_isBuiltinStrConvertable(jule::Ptr<_1ce14cbc7_TypeKind>*);
inline jule::Str _1ce16971b_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Ptr<_1ce1557a1_Prim> _1ce169ae5_buildPrimType(jule::Str);
inline void _1ce16a1cd_applyImplicitCast(jule::Ptr<_1ce14cbc7_TypeKind>*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1cdeab4b4_Token>*);
inline jule::Bool _1ce16a497_validTypeForXof(jule::Ptr<_1ce14cbc7_TypeKind>*);
inline __jule_tuple_x_1ce116894_SymbolTable__jule_tuple_s_22a93672d_Log _1ce16d5aa_buildSymbols(jule::Ptr<_1cdebead2_Ast>*, jule::Trait<_1ce068197_Importer>*, jule::Ptr<_1ce0149c3_symbolBuilder>);
inline __jule_tuple_x_1ce06ded3_Package__jule_tuple_s_22a93672d_Log _1ce16da2d_analyzePackage(jule::Slice<jule::Ptr<_1cdebead2_Ast>>*, jule::Trait<_1ce068197_Importer>*, jule::I32*);
inline __jule_tuple_x_1ce06ded3_Package__jule_tuple_s_22a93672d_Log _1ce16de5c_AnalyzePackage(jule::Slice<jule::Ptr<_1cdebead2_Ast>>, jule::Trait<_1ce068197_Importer>, jule::I32);
inline jule::Ptr<_1ce00a832_FnIns> _1ce23441d_findBuiltinFunc(jule::Str*);
inline jule::Ptr<_1ce14bdd5_TypeAlias> _1ce23472b_primTypeAlias(jule::Ptr<_1ce14cbc7_TypeKind>*);
inline jule::Ptr<_1ce0b4105_Var> _1ce2380d1_findBuiltinVar(jule::Str*);
inline jule::Ptr<_1ce14bdd5_TypeAlias> _1ce238422_findBuiltinTypeAlias(jule::Str);
inline jule::Any _1ce2386a8_findBuiltinDef(jule::Str*);
inline jule::Any _1ce238972_findBuiltinDefStdDebug(jule::Str*);
inline jule::Any _1ce238c3b_findBuiltinDefStdMem(jule::Str*);
inline jule::Any _1ce239115_findBuiltinDefStdComptime(jule::Str*);
inline jule::Any _1ce239357_findBuiltinDefStdJuleIntegrated(jule::Str*);
inline jule::Any _1ce2396cb_findPackageBuiltinDef(jule::Str*, jule::Str*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce239a50_builtinCallerError(jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce239e7e_builtinCallerOut(jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*, jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce23a3ad_builtinCallerOutln(jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*, jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce23a7dc_builtinCallerNew(jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*, jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce23ac1b_builtinCallerPanic(jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*, jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce23b37b_builtinCallerMake(jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*, jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce23b69a_builtinCallerAppend(jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*, jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce23bb84_callerCopySlice(jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*, jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce23c0b3_builtinCallerCopy(jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*, jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce23c437_callerLenSlice(jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce23c7ab_callerLenMap(jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce23cb30_callerLenArr(jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce23cea4_callerLenStr(jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce23d328_callerLenComptime(jule::Ptr<_1ce11bc0c_Data>*, jule::I32);
inline jule::Ptr<_1ce11bc0c_Data> _1ce23d757_builtinCallerLen(jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*, jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce23dacb_callerCapSlice(jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce23e00a_builtinCallerCap(jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*, jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce23e4e4_callerDeleteMap(jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*, jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce23e923_builtinCallerDelete(jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*, jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce23ed52_builtinCallerAssert(jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*, jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce240281_builtinCallerStdComptimeTypeOf(jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*, jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce240902_builtinCallerStdComptimeValueOf(jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*, jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce240d31_builtinCallerStdComptimeLine(jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*, jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce241260_builtinCallerStdComptimeFile(jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*, jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce24168e_builtinCallerStdComptimeFiles(jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*, jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce241abd_builtinCallerStdComptimeTypeAlias(jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*, jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce241eec_builtinCallerStdMemSizeOf(jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*, jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce24242b_builtinCallerStdMemAlignOf(jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*, jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce24285a_builtinCallerStdMemFree(jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*, jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce242c89_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*, jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce2431b8_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*, jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce2435e7_builtinCallerStdDebugOut(jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*, jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Ptr<_1ce11bc0c_Data> _1ce243a26_builtinCallerStdDebugOutln(jule::Ptr<_1ce11d934_Eval>*, jule::Ptr<_1cdec9aed_FnCallExpr>*, jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Ptr<_1b57310c6_FileInfo> _1b5774a76_ParseFile(jule::Ptr<_1cdeb1c4a_File>);
inline __jule_tuple_x_1cdebead2_Ast__jule_tuple_s_22a93672d_Log _1b577511a_parseFileset(jule::Ptr<_1cdeb1c4a_File>);
inline jule::Ptr<_1cded1ab1_ScopeTree> _1b5775aaa_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1b5775e40_isSt(jule::Ptr<_1cdeab4b4_Token>, jule::Ptr<_1cdeab4b4_Token>);
inline jule::Bool _1b57762b4_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*, jule::I32*);
inline __jule_tuple_int__jule_tuple_bool _1b577667c_nextStPos(jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*, jule::I32);
inline __jule_tuple_sx_1cdeab4b4_Token__jule_tuple_bool _1b5776a01_skipSt(jule::I32*, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline jule::Slice<jule::Ptr<_1b5776d31_stmt>> _1b57771d8_splitStmts(jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Bool _1b579083e_isTypeOp(jule::U32*);
inline jule::Bool _1b5790b4c_isTypeRange(jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _1b5790e16_getBlockExpr(jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline __jule_tuple_sx_1cdeab4b4_Token__jule_tuple_sx_1cdeab4b4_Token _1b57912ce_splitDelim(jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*, jule::U32);
inline jule::I32 _1b5791598_findLowestPrecOp(jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Ptr<_1cdec76de_IdentExpr> _1b5791862_buildIdentExpr(jule::Ptr<_1cdeab4b4_Token>*);
inline __jule_tuple_sx_1cdeab4b4_Token__jule_tuple_int _1b5791b2b_getRangeExprTokens(jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline jule::Bool _1b5792940_checkAssignTokens(jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline _22a93672d_Log _1b5793b0b_makeErr(jule::I32, jule::I32, jule::Ptr<_1cdeb1c4a_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _1b5794139_range(jule::I32*, jule::U32, jule::U32, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline __jule_tuple_sx_1cdeab4b4_Token__jule_tuple_sx_1cdeab4b4_Token _1b5794403_rangeLast(jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*);
inline __jule_tuple_ssx_1cdeab4b4_Token__jule_tuple_s_22a93672d_Log _1b57948a9_parts(jule::Slice<jule::Ptr<_1cdeab4b4_Token>>*, jule::U32, jule::Bool);
inline jule::U32 _1b5794b40_getCloseOfBrace(jule::U32);
inline _22a93672d_Log _1b579506e_compilerErr(jule::Ptr<_1cdeab4b4_Token>*, jule::Str*, jule::Slice<jule::Any>);
inline void _1b5795415_pushSuggestion(_22a93672d_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1cdec1a90_TypeDecl> _1b57a73a0_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _1ce2b04bb_checkOs(jule::Str);
inline __jule_tuple_bool__jule_tuple_bool _1ce341805_checkArch(jule::Str);
inline jule::Bool _1ce341aad_isPassFileAnnotation(jule::Str);
inline void _1ce3622d7_setOsVars(jule::Slice<jule::Str>*);
inline void _1ce36255c_setArchVars(jule::Slice<jule::Str>*);
inline void _1ce362848_initVars(jule::Slice<jule::Str>*, _1ce361eb8_CompileInfo*);
inline jule::Slice<jule::U8> _1b57ab4a3_readBuff(jule::Str);
inline _22a93672d_Log _1b57ab7b1_flatCompilerErr(jule::Str);
inline void _1b57b10ce_pushPasses(jule::Ptr<_1ce06ded3_Package>*, jule::Slice<jule::Str>*);
inline jule::Slice<jule::Str> _1b57b1497_getAllUniquePasses(jule::Ptr<_1ce06ded3_Package>*, jule::Slice<jule::Ptr<_1ce06b0ac_ImportInfo>>);
inline _1ce361eb8_CompileInfo _1b57b16a6_buildCompileInfo(void);
inline void _1b592891c_EliminateDefines(jule::Ptr<_1b57ae72b_IR>*);
inline jule::Ptr<_1cdec0eac_Directive> _1b5928cd5_findDirective(jule::Slice<jule::Ptr<_1cdec0eac_Directive>>*, jule::Str);
inline jule::Bool _1b5929159_hasDirective(jule::Slice<jule::Ptr<_1cdec0eac_Directive>>*, jule::Str);
inline jule::Bool _1b5929522_isTraitMethod(jule::Ptr<_1cdee571d_StructIns>*, jule::Ptr<_1ce00a832_FnIns>*);
inline void _1b592d526_eliminateDeadCodeOfScope(jule::Ptr<_1ce0497c7_Scope>);
inline void _1b592d79b_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1ce00792d_Fn>>*);
inline void _1b592d9cc_eliminateFunctionsScopePackage(jule::Ptr<_1ce06ded3_Package>*);
inline void _1b592dc85_eliminateScopePackage(jule::Ptr<_1ce06ded3_Package>*);
inline void _1b592de83_EliminateScopes(jule::Ptr<_1b57ae72b_IR>*);
inline jule::Uintptr _1ce243b9c_typeData(jule::Any*);
inline jule::Bool _1ce243ebb_equalConst(jule::Ptr<_22be1616d_Const>, jule::Ptr<_22be1616d_Const>);
inline jule::Bool _1ce244340_equalCasting(jule::Ptr<_1cdeeb2e5_CastingExprModel>, jule::Ptr<_1cdeeb2e5_CastingExprModel>);
inline jule::Bool _1ce244708_equalUnary(jule::Ptr<_1cdeea091_UnaryExprModel>, jule::Ptr<_1cdeea091_UnaryExprModel>);
inline jule::Bool _1ce244a7c_equalIndexing(jule::Ptr<_1cdeec527_IndexingExprModel>, jule::Ptr<_1cdeec527_IndexingExprModel>);
inline jule::Bool _1ce244e01_equalBinary(jule::Ptr<_1cdee9bb7_BinaryExprModel>, jule::Ptr<_1cdee9bb7_BinaryExprModel>);
inline jule::Bool _1ce245275_equalModels(jule::Any, jule::Any);
inline void _1ce24ad91_possibleNilRemove(jule::Ptr<_1ce249db2_nils>*, jule::Any);
inline jule::Bool _1ce24b259_isGuaranteedNonNilExpr(jule::Ptr<_1ce249db2_nils>*, jule::Any);
inline jule::Bool _1ce24b523_isNilValidType(jule::Ptr<_1ce14cbc7_TypeKind>);
inline jule::Uintptr _1ce24b864_getNilVar(jule::Any);
inline jule::Bool _1ce25279e_isStdPackage(jule::Str*, jule::Str);
inline jule::Bool _1ce252aac_isConstantValidConditionalCase(jule::Ptr<_1ce049be5_If>*);
inline jule::Bool _1ce252d76_isUnreachableExpr(jule::Any*);
inline jule::Bool _1ce2531b7_isConstantValidMatchCase(jule::Ptr<_1ce04e436_Case>*);
inline jule::Bool _1ce25344d_isUnreachableConditionalCase(jule::Ptr<_1ce049be5_If>*);
inline jule::Bool _1ce253717_isUnreachableMatchCase(jule::Ptr<_1ce04e436_Case>*);
inline jule::Bool _1ce2539d1_isForwarded(jule::Ptr<_1ce0497c7_Scope>*);
inline __jule_tuple_bool__jule_tuple_u64 _1ce25d359_checkForBitShiftOpt(jule::Ptr<_1cdee96bc_OperandExprModel>*, jule::Ptr<_1cdee96bc_OperandExprModel>*);
inline jule::Bool _1ce25d722_areSameLvalueExprModel(jule::Any*, jule::Any*);
inline void _1ce260735_possibleDynamicRemove(jule::Ptr<_1ce25e69b_dynamic>*, jule::Any);
inline jule::Bool _1ce260a43_isDynamicValidType(jule::Ptr<_1ce14cbc7_TypeKind>);
inline jule::Ptr<_1ce14cbc7_TypeKind> _1ce260e72_isTypeGuaranteedDynamicData(jule::Ptr<_1ce25e69b_dynamic>*, jule::Ptr<_1ce14cbc7_TypeKind>, jule::Any);
inline jule::Uintptr _1ce2612b3_getDynamicVar(jule::Any);
inline jule::Bool _1ce261549_isAny(jule::Ptr<_1ce14cbc7_TypeKind>*);
inline jule::Bool _1ce265053_isValidBoundaryInfo(jule::Any);
inline jule::I32 _1ce26541b_fitsMaxSize(jule::Slice<jule::Any>, jule::Any);
inline jule::Bool _1ce265790_fitsSize(jule::Any, jule::Any);
inline void _1ce265ac0_possibleBoundaryRemove(jule::Ptr<_1ce263edb_boundary>*, jule::Any);
inline jule::Bool _1ce265d89_isBoundaryRiskyType(jule::Ptr<_1ce14cbc7_TypeKind>);
inline jule::Bool _1ce266153_isBoundaryValidType(jule::Ptr<_1ce14cbc7_TypeKind>);
inline jule::Uintptr _1ce26641c_getBoundaryVar(jule::Any);
inline void _1ce269497_PushOptLevel(jule::I32);
inline void _1b5938421_detectEnabled(void);
inline void _1b5961d84_Throw(jule::Str);
inline jule::U64 _1b6286532_unix(void);
inline jule::Bool _1b61bb0b0_isCopyOptimizable(jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Bool _1b61bb478_isIterCopyOptimizable(jule::Ptr<_1ce11bc0c_Data>*, jule::Ptr<_1ce0b4105_Var>*);
inline jule::Str _1b61cc08d_decomposeCommonEsq(jule::U8);
inline jule::Str _1b61cc39b_sbtoa(jule::U8);
inline void _1b61cc687_cstrBytes(_22ab0b88c_StrBuilder*, jule::Str);
inline void _1b61cc9b7_cstrLit(_22ab0b88c_StrBuilder*, jule::Str);
inline void _1b61ccd5d_ftoa(_22ab0b88c_StrBuilder*, jule::F64, jule::I32);
inline void _1b61cd149_itoa(_22ab0b88c_StrBuilder*, jule::I64);
inline void _1b61cd435_utoa(_22ab0b88c_StrBuilder*, jule::U64);
inline jule::Bool _1b61cd80e_isForwarded(jule::Ptr<_1ce0497c7_Scope>*);
inline jule::Bool _1b61cda51_isExprComesFromBind(jule::Ptr<_1ce11bc0c_Data>*);
inline jule::Bool _1b61cdd1a_isAny(jule::Ptr<_1ce14cbc7_TypeKind>*);
inline void _1b629aa63_iterFiles(jule::Ptr<_1ce06ded3_Package>*, jule::Fn<void(jule::Ptr<_1ce116894_SymbolTable>*)>);
inline jule::Slice<jule::U8> _1b629ad71_concatAllParts(jule::Slice<jule::Ptr<_1cdeab4b4_Token>>);
inline jule::Bool _1b629b1e5_containsTraitMethod(jule::Ptr<_1ce01ac0a_Trait>*, jule::Str*);
inline void _1b629b525_pushMethodsFromInherit(jule::Ptr<_1ce01ac0a_Trait>*, jule::Ptr<_1ce01ac0a_Trait>*);
inline void _1b629b811_pushMethodsFromInherits(jule::Ptr<_1ce01ac0a_Trait>*, jule::Ptr<_1ce01ac0a_Trait>*);
inline jule::Bool _1b629baca_isOpMethod(jule::Ptr<_1ce00792d_Fn>*);
inline jule::Bool _1b629bd94_isHeadDecl(jule::Ptr<_1ce00792d_Fn>*);
inline jule::Ptr<_1cdec0eac_Directive> _1b5e544ca_findDirective(jule::Slice<jule::Ptr<_1cdec0eac_Directive>>*, jule::Str);
inline jule::Bool _1b5e54893_hasDirective(jule::Slice<jule::Ptr<_1cdec0eac_Directive>>*, jule::Str);
inline jule::Bool _1b5e54b5c_shouldInitialized(jule::Ptr<_1ce14cbc7_TypeKind>*);
inline void _22abdda3a_printErrorMessage(jule::Str);
inline void _22abddcb0_help(jule::Slice<jule::Str>*);
inline void _22abddee1_version(jule::Slice<jule::Str>*);
inline void _22abde200_toolDistos(void);
inline void _22abde365_toolDistarch(void);
inline void _22abde563_tool(jule::Slice<jule::Str>*);
inline void _22abde794_julenv(jule::Slice<jule::Str>*);
inline void _22abdead5_mod(jule::Slice<jule::Str>*);
inline jule::Bool _22abded27_processCommand(jule::Slice<jule::Str>*);
inline void _22abdeec0_showInfo(void);
void entry_point(void);
inline void _1b5ec1080_init(void);
inline jule::Ptr<_2439c81e1_File> _1b5ec1349_openOutput(jule::Str*);
inline void _1b5ec14e2_clearObjects(void);
inline void _1b5ec1800_compileIr(jule::Str, jule::Str);
inline jule::Bool _1b5ec1ab9_isCppSourceFile(jule::Str);
inline void _1b5ec1cea_pushCompCmdClang(_22ab0b88c_StrBuilder*);
inline void _1b5ec202b_pushCompCmdGcc(_22ab0b88c_StrBuilder*);
inline __jule_tuple_str__jule_tuple_str _1b5ec24b0_genCompileCmd(jule::Str, jule::Ptr<_1b57ae72b_IR>*);
inline jule::Str _1b5ec2647_getCompilePath(void);
inline void _1b5ec2878_applyTargetIndependentOptimizations(jule::Ptr<_1b57ae72b_IR>*);
inline void _1b5ec2a21_checkCompilerFlag(void);
inline void _1b5ec2c30_checkTargetArch(jule::Str);
inline void _1b5ec2e61_checkTargetOs(jule::Str);
inline void _1b5ec3192_checkTargetFlag(jule::Str*);
inline void _1b5ec33c3_checkOptFlag(jule::Str*);
inline void _1b5ec378b_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1b5ec3956_checkFlags(jule::Slice<jule::Str>*);
inline void _1b5ec3b65_setupSemaFlags(jule::I32*);
inline jule::Ptr<_1b57ae72b_IR> _1b5ec3e2e_buildIr(jule::Slice<jule::Str>*);
inline void _1b5ec4160_compileCommand(jule::Slice<jule::Str>*);


struct _1ce022a58_comptimeRangeKindMptrData {
	void(*_1ce022250_ready)(jule::Trait<_1ce022a58_comptimeRangeKind>, jule::Ptr<_1ce0b4105_Var>*, jule::Ptr<_1ce0b4105_Var>*);
	void(*_1ce02266d_step)(jule::Trait<_1ce022a58_comptimeRangeKind>, jule::I32, jule::Ptr<_1ce0b4105_Var>*, jule::Ptr<_1ce0b4105_Var>*);
	jule::I32(*_1ce022904_len)(jule::Trait<_1ce022a58_comptimeRangeKind>);
};

struct _1ce068197_ImporterMptrData {
	void(*_1ce066e76_SetModPath)(jule::Trait<_1ce068197_Importer>, jule::Str);
	jule::Str(*_1ce06720c_GetModPath)(jule::Trait<_1ce068197_Importer>);
	jule::Str(*_1ce06754d_ModById)(jule::Trait<_1ce068197_Importer>, jule::I32);
	jule::Ptr<_1ce06b0ac_ImportInfo>(*_1ce06788e_GetImport)(jule::Trait<_1ce068197_Importer>, jule::Str);
	__jule_tuple_sx_1cdebead2_Ast__jule_tuple_s_22a93672d_Log(*_1ce067c8a_ImportPackage)(jule::Trait<_1ce068197_Importer>, jule::Str, jule::Bool);
	void(*_1ce068043_Imported)(jule::Trait<_1ce068197_Importer>, jule::Ptr<_1ce06b0ac_ImportInfo>);
};

struct _1ce14c721_KindMptrData {
	jule::Str(*_1ce14c27b_Str)(jule::Trait<_1ce14c721_Kind>);
	jule::Bool(*_1ce14c5bc_Equal)(jule::Trait<_1ce14c721_Kind>, jule::Ptr<_1ce14cbc7_TypeKind>);
};

struct _1ce16c7b8_LookupMptrData {
	jule::Ptr<_1ce06b0ac_ImportInfo>(*_1ce16aaa2_SelectPackage)(jule::Trait<_1ce16c7b8_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1ce06b0ac_ImportInfo>)>);
	jule::Ptr<_1ce0b4105_Var>(*_1ce16ae9d_FindVar)(jule::Trait<_1ce16c7b8_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1ce14bdd5_TypeAlias>(*_1ce16b399_FindTypeAlias)(jule::Trait<_1ce16c7b8_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1cdee2990_Struct>(*_1ce16b795_FindStruct)(jule::Trait<_1ce16c7b8_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1ce00792d_Fn>(*_1ce16bb91_FindFn)(jule::Trait<_1ce16c7b8_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1ce01ac0a_Trait>(*_1ce16bed2_FindTrait)(jule::Trait<_1ce16c7b8_Lookup>, jule::Str);
	jule::Ptr<_1ce01d416_Enum>(*_1ce16c323_FindEnum)(jule::Trait<_1ce16c7b8_Lookup>, jule::Str);
	jule::Ptr<_1ce01eb21_TypeEnum>(*_1ce16c664_FindTypeEnum)(jule::Trait<_1ce16c7b8_Lookup>, jule::Str);
};

struct _1b5eb8c48_CommonFlagMptrData {
	jule::Str(*_1b5e88113_Name)(jule::Trait<_1b5eb8c48_CommonFlag>);
	jule::I32(*_1b5e88256_Short)(jule::Trait<_1b5eb8c48_CommonFlag>);
	jule::Str(*_1b5e884a9_What)(jule::Trait<_1b5eb8c48_CommonFlag>);
	void(*_1b5eb8ae4_Reset)(jule::Trait<_1b5eb8c48_CommonFlag>);
};



inline void _1ce022250_ready_comptimeRangeKind_0(jule::Trait<_1ce022a58_comptimeRangeKind> _self_, jule::Ptr<_1ce0b4105_Var>* _2429_keyA, jule::Ptr<_1ce0b4105_Var>* _2446_keyB) {
	_1ce026045_ready(_self_.safe_ptr<_1ce02540c_comptimeStructFields>(), _2429_keyA, _2446_keyB);
}
inline void _1ce02266d_step_comptimeRangeKind_0(jule::Trait<_1ce022a58_comptimeRangeKind> _self_, jule::I32 _2523_i, jule::Ptr<_1ce0b4105_Var>* _2536_keyA, jule::Ptr<_1ce0b4105_Var>* _2553_keyB) {
	_1ce026463_step(_self_.safe_ptr<_1ce02540c_comptimeStructFields>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I32 _1ce022904_len_comptimeRangeKind_0(jule::Trait<_1ce022a58_comptimeRangeKind> _self_) {
	return _1ce0266e9_len(_self_.safe_ptr<_1ce02540c_comptimeStructFields>());
}
inline void _1ce022250_ready_comptimeRangeKind_1(jule::Trait<_1ce022a58_comptimeRangeKind> _self_, jule::Ptr<_1ce0b4105_Var>* _2429_keyA, jule::Ptr<_1ce0b4105_Var>* _2446_keyB) {
	_1ce029301_ready(_self_.safe_ptr<_1ce0286b8_comptimeStatics>(), _2429_keyA, _2446_keyB);
}
inline void _1ce02266d_step_comptimeRangeKind_1(jule::Trait<_1ce022a58_comptimeRangeKind> _self_, jule::I32 _2523_i, jule::Ptr<_1ce0b4105_Var>* _2536_keyA, jule::Ptr<_1ce0b4105_Var>* _2553_keyB) {
	_1ce02971e_step(_self_.safe_ptr<_1ce0286b8_comptimeStatics>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I32 _1ce022904_len_comptimeRangeKind_1(jule::Trait<_1ce022a58_comptimeRangeKind> _self_) {
	return _1ce0299a5_len(_self_.safe_ptr<_1ce0286b8_comptimeStatics>());
}
inline void _1ce022250_ready_comptimeRangeKind_2(jule::Trait<_1ce022a58_comptimeRangeKind> _self_, jule::Ptr<_1ce0b4105_Var>* _2429_keyA, jule::Ptr<_1ce0b4105_Var>* _2446_keyB) {
	_1ce02bc93_ready(_self_.safe_ptr<_1ce02b15a_comptimeEnumFields>(), _2429_keyA, _2446_keyB);
}
inline void _1ce02266d_step_comptimeRangeKind_2(jule::Trait<_1ce022a58_comptimeRangeKind> _self_, jule::I32 _2523_i, jule::Ptr<_1ce0b4105_Var>* _2536_keyA, jule::Ptr<_1ce0b4105_Var>* _2553_keyB) {
	_1ce02c1b1_step(_self_.safe_ptr<_1ce02b15a_comptimeEnumFields>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I32 _1ce022904_len_comptimeRangeKind_2(jule::Trait<_1ce022a58_comptimeRangeKind> _self_) {
	return _1ce02c447_len(_self_.safe_ptr<_1ce02b15a_comptimeEnumFields>());
}
inline void _1ce022250_ready_comptimeRangeKind_3(jule::Trait<_1ce022a58_comptimeRangeKind> _self_, jule::Ptr<_1ce0b4105_Var>* _2429_keyA, jule::Ptr<_1ce0b4105_Var>* _2446_keyB) {
	_1ce0304e4_ready(_self_.safe_ptr<_1ce02e8de_comptimeParams>(), _2429_keyA, _2446_keyB);
}
inline void _1ce02266d_step_comptimeRangeKind_3(jule::Trait<_1ce022a58_comptimeRangeKind> _self_, jule::I32 _2523_i, jule::Ptr<_1ce0b4105_Var>* _2536_keyA, jule::Ptr<_1ce0b4105_Var>* _2553_keyB) {
	_1ce030912_step(_self_.safe_ptr<_1ce02e8de_comptimeParams>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I32 _1ce022904_len_comptimeRangeKind_3(jule::Trait<_1ce022a58_comptimeRangeKind> _self_) {
	return _1ce030b98_len(_self_.safe_ptr<_1ce02e8de_comptimeParams>());
}
inline void _1ce022250_ready_comptimeRangeKind_4(jule::Trait<_1ce022a58_comptimeRangeKind> _self_, jule::Ptr<_1ce0b4105_Var>* _2429_keyA, jule::Ptr<_1ce0b4105_Var>* _2446_keyB) {
	_1ce031ade_ready(_self_.safe_ptr<_1ce030ea6_comptimeTypeInfos>(), _2429_keyA, _2446_keyB);
}
inline void _1ce02266d_step_comptimeRangeKind_4(jule::Trait<_1ce022a58_comptimeRangeKind> _self_, jule::I32 _2523_i, jule::Ptr<_1ce0b4105_Var>* _2536_keyA, jule::Ptr<_1ce0b4105_Var>* _2553_keyB) {
	_1ce03200c_step(_self_.safe_ptr<_1ce030ea6_comptimeTypeInfos>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I32 _1ce022904_len_comptimeRangeKind_4(jule::Trait<_1ce022a58_comptimeRangeKind> _self_) {
	return _1ce032293_len(_self_.safe_ptr<_1ce030ea6_comptimeTypeInfos>());
}
inline void _1ce022250_ready_comptimeRangeKind_5(jule::Trait<_1ce022a58_comptimeRangeKind> _self_, jule::Ptr<_1ce0b4105_Var>* _2429_keyA, jule::Ptr<_1ce0b4105_Var>* _2446_keyB) {
	_1ce03c04a_ready(_self_.safe_ptr<_1ce03b412_comptimeFiles>(), _2429_keyA, _2446_keyB);
}
inline void _1ce02266d_step_comptimeRangeKind_5(jule::Trait<_1ce022a58_comptimeRangeKind> _self_, jule::I32 _2523_i, jule::Ptr<_1ce0b4105_Var>* _2536_keyA, jule::Ptr<_1ce0b4105_Var>* _2553_keyB) {
	_1ce03c468_step(_self_.safe_ptr<_1ce03b412_comptimeFiles>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I32 _1ce022904_len_comptimeRangeKind_5(jule::Trait<_1ce022a58_comptimeRangeKind> _self_) {
	return _1ce03c6ee_len(_self_.safe_ptr<_1ce03b412_comptimeFiles>());
}
inline void _1ce066e76_SetModPath_Importer_0(jule::Trait<_1ce068197_Importer> _self_, jule::Str _1729_path) {
	_1b57ac86c_SetModPath(_self_.safe_ptr<_1b57abc9a_JuleImporter>(), _1729_path);
}
inline jule::Str _1ce06720c_GetModPath_Importer_0(jule::Trait<_1ce068197_Importer> _self_) {
	return _1b57acb03_GetModPath(_self_.safe_ptr<_1b57abc9a_JuleImporter>());
}
inline jule::Str _1ce06754d_ModById_Importer_0(jule::Trait<_1ce068197_Importer> _self_, jule::I32 _2522_id) {
	return _1b57ace44_ModById(_self_.safe_ptr<_1b57abc9a_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_1ce06b0ac_ImportInfo> _1ce06788e_GetImport_Importer_0(jule::Trait<_1ce068197_Importer> _self_, jule::Str _3128_path) {
	return _1b57ad285_GetImport(_self_.safe_ptr<_1b57abc9a_JuleImporter>(), _3128_path);
}
inline __jule_tuple_sx_1cdebead2_Ast__jule_tuple_s_22a93672d_Log _1ce067c8a_ImportPackage_Importer_0(jule::Trait<_1ce068197_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _1b57ad681_ImportPackage(_self_.safe_ptr<_1b57abc9a_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _1ce068043_Imported_Importer_0(jule::Trait<_1ce068197_Importer> _self_, jule::Ptr<_1ce06b0ac_ImportInfo> _4131__0) {
	_1b57ad939_Imported(_self_.safe_ptr<_1b57abc9a_JuleImporter>(), _4131__0);
}
inline jule::Str _1ce14c27b_Str_Kind_0(jule::Trait<_1ce14c721_Kind> _self_) {
	return _1cdee5a92_Str(_self_.safe_ptr<_1cdee571d_StructIns>());
}
inline jule::Bool _1ce14c5bc_Equal_Kind_0(jule::Trait<_1ce14c721_Kind> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _5621_other) {
	return _1cdee5dd3_Equal(_self_.data.as<_1cdee571d_StructIns>(), _5621_other);
}
inline jule::Str _1ce14c27b_Str_Kind_1(jule::Trait<_1ce14c721_Kind> _self_) {
	return _1ce00ab73_Str(_self_.safe_ptr<_1ce00a832_FnIns>());
}
inline jule::Bool _1ce14c5bc_Equal_Kind_1(jule::Trait<_1ce14c721_Kind> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _5621_other) {
	return _1ce00aeb4_Equal(_self_.data.as<_1ce00a832_FnIns>(), _5621_other);
}
inline jule::Str _1ce14c27b_Str_Kind_2(jule::Trait<_1ce14c721_Kind> _self_) {
	return _1ce01b0c3_Str(_self_.safe_ptr<_1ce01ac0a_Trait>());
}
inline jule::Bool _1ce14c5bc_Equal_Kind_2(jule::Trait<_1ce14c721_Kind> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _5621_other) {
	return _1ce01b414_Equal(_self_.data.as<_1ce01ac0a_Trait>(), _5621_other);
}
inline jule::Str _1ce14c27b_Str_Kind_3(jule::Trait<_1ce14c721_Kind> _self_) {
	return _1ce01d78a_Str(_self_.safe_ptr<_1ce01d416_Enum>());
}
inline jule::Bool _1ce14c5bc_Equal_Kind_3(jule::Trait<_1ce14c721_Kind> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _5621_other) {
	return _1ce01dacb_Equal(_self_.data.as<_1ce01d416_Enum>(), _5621_other);
}
inline jule::Str _1ce14c27b_Str_Kind_4(jule::Trait<_1ce14c721_Kind> _self_) {
	return _1ce01ee62_Str(_self_.safe_ptr<_1ce01eb21_TypeEnum>());
}
inline jule::Bool _1ce14c5bc_Equal_Kind_4(jule::Trait<_1ce14c721_Kind> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _5621_other) {
	return _1ce0202a3_Equal(_self_.data.as<_1ce01eb21_TypeEnum>(), _5621_other);
}
inline jule::Str _1ce14c27b_Str_Kind_5(jule::Trait<_1ce14c721_Kind> _self_) {
	return _1ce0230ec_Str(_self_.safe_ptr<_1ce022c78_comptimeRange>());
}
inline jule::Bool _1ce14c5bc_Equal_Kind_5(jule::Trait<_1ce14c721_Kind> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _5621_other) {
	return _1ce02343d_Equal(_self_.data.as<_1ce022c78_comptimeRange>(), _5621_other);
}
inline jule::Str _1ce14c27b_Str_Kind_6(jule::Trait<_1ce14c721_Kind> _self_) {
	return _1ce023b14_Str(_self_.safe_ptr<_1ce02374b_comptimeStructField>());
}
inline jule::Bool _1ce14c5bc_Equal_Kind_6(jule::Trait<_1ce14c721_Kind> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _5621_other) {
	return _1ce023e55_Equal(_self_.data.as<_1ce02374b_comptimeStructField>(), _5621_other);
}
inline jule::Str _1ce14c27b_Str_Kind_7(jule::Trait<_1ce14c721_Kind> _self_) {
	return _1ce025781_Str(_self_.safe_ptr<_1ce02540c_comptimeStructFields>());
}
inline jule::Bool _1ce14c5bc_Equal_Kind_7(jule::Trait<_1ce14c721_Kind> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _5621_other) {
	return _1ce025ac2_Equal(_self_.data.as<_1ce02540c_comptimeStructFields>(), _5621_other);
}
inline jule::Str _1ce14c27b_Str_Kind_8(jule::Trait<_1ce14c721_Kind> _self_) {
	return _1ce026d7b_Str(_self_.safe_ptr<_1ce026a07_comptimeStatic>());
}
inline jule::Bool _1ce14c5bc_Equal_Kind_8(jule::Trait<_1ce14c721_Kind> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _5621_other) {
	return _1ce0271bc_Equal(_self_.data.as<_1ce026a07_comptimeStatic>(), _5621_other);
}
inline jule::Str _1ce14c27b_Str_Kind_9(jule::Trait<_1ce14c721_Kind> _self_) {
	return _1ce028a3c_Str(_self_.safe_ptr<_1ce0286b8_comptimeStatics>());
}
inline jule::Bool _1ce14c5bc_Equal_Kind_9(jule::Trait<_1ce14c721_Kind> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _5621_other) {
	return _1ce028d7d_Equal(_self_.data.as<_1ce0286b8_comptimeStatics>(), _5621_other);
}
inline jule::Str _1ce14c27b_Str_Kind_10(jule::Trait<_1ce14c721_Kind> _self_) {
	return _1ce02a247_Str(_self_.safe_ptr<_1ce029cb3_comptimeEnumField>());
}
inline jule::Bool _1ce14c5bc_Equal_Kind_10(jule::Trait<_1ce14c721_Kind> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _5621_other) {
	return _1ce02a588_Equal(_self_.data.as<_1ce029cb3_comptimeEnumField>(), _5621_other);
}
inline jule::Str _1ce14c27b_Str_Kind_11(jule::Trait<_1ce14c721_Kind> _self_) {
	return _1ce02b4ce_Str(_self_.safe_ptr<_1ce02b15a_comptimeEnumFields>());
}
inline jule::Bool _1ce14c5bc_Equal_Kind_11(jule::Trait<_1ce14c721_Kind> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _5621_other) {
	return _1ce02b820_Equal(_self_.data.as<_1ce02b15a_comptimeEnumFields>(), _5621_other);
}
inline jule::Str _1ce14c27b_Str_Kind_12(jule::Trait<_1ce14c721_Kind> _self_) {
	return _1ce02cac9_Str(_self_.safe_ptr<_1ce02c755_comptimeParam>());
}
inline jule::Bool _1ce14c5bc_Equal_Kind_12(jule::Trait<_1ce14c721_Kind> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _5621_other) {
	return _1ce02ce1a_Equal(_self_.data.as<_1ce02c755_comptimeParam>(), _5621_other);
}
inline jule::Str _1ce14c27b_Str_Kind_13(jule::Trait<_1ce14c721_Kind> _self_) {
	return _1ce02ec30_Str(_self_.safe_ptr<_1ce02e8de_comptimeParams>());
}
inline jule::Bool _1ce14c5bc_Equal_Kind_13(jule::Trait<_1ce14c721_Kind> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _5621_other) {
	return _1ce030071_Equal(_self_.data.as<_1ce02e8de_comptimeParams>(), _5621_other);
}
inline jule::Str _1ce14c27b_Str_Kind_14(jule::Trait<_1ce14c721_Kind> _self_) {
	return _1ce03132a_Str(_self_.safe_ptr<_1ce030ea6_comptimeTypeInfos>());
}
inline jule::Bool _1ce14c5bc_Equal_Kind_14(jule::Trait<_1ce14c721_Kind> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _5621_other) {
	return _1ce03166b_Equal(_self_.data.as<_1ce030ea6_comptimeTypeInfos>(), _5621_other);
}
inline jule::Str _1ce14c27b_Str_Kind_15(jule::Trait<_1ce14c721_Kind> _self_) {
	return _1ce032925_Str(_self_.safe_ptr<_1ce0325a1_comptimeTypeInfo>());
}
inline jule::Bool _1ce14c5bc_Equal_Kind_15(jule::Trait<_1ce14c721_Kind> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _5621_other) {
	return _1ce032c66_Equal(_self_.data.as<_1ce0325a1_comptimeTypeInfo>(), _5621_other);
}
inline jule::Str _1ce14c27b_Str_Kind_16(jule::Trait<_1ce14c721_Kind> _self_) {
	return _1ce038e37_Str(_self_.safe_ptr<_1ce038ab3_comptimeValue>());
}
inline jule::Bool _1ce14c5bc_Equal_Kind_16(jule::Trait<_1ce14c721_Kind> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _5621_other) {
	return _1ce039278_Equal(_self_.data.as<_1ce038ab3_comptimeValue>(), _5621_other);
}
inline jule::Str _1ce14c27b_Str_Kind_17(jule::Trait<_1ce14c721_Kind> _self_) {
	return _1ce03b786_Str(_self_.safe_ptr<_1ce03b412_comptimeFiles>());
}
inline jule::Bool _1ce14c5bc_Equal_Kind_17(jule::Trait<_1ce14c721_Kind> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _5621_other) {
	return _1ce03bac7_Equal(_self_.data.as<_1ce03b412_comptimeFiles>(), _5621_other);
}
inline jule::Str _1ce14c27b_Str_Kind_18(jule::Trait<_1ce14c721_Kind> _self_) {
	return _1ce03d0b2_Str(_self_.safe_ptr<_1ce03ca0c_comptimeFile>());
}
inline jule::Bool _1ce14c5bc_Equal_Kind_18(jule::Trait<_1ce14c721_Kind> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _5621_other) {
	return _1ce03d403_Equal(_self_.data.as<_1ce03ca0c_comptimeFile>(), _5621_other);
}
inline jule::Str _1ce14c27b_Str_Kind_19(jule::Trait<_1ce14c721_Kind> _self_) {
	return _1ce14d090_Str(_self_.safe_ptr<_1ce14cbc7_TypeKind>());
}
inline jule::Bool _1ce14c5bc_Equal_Kind_19(jule::Trait<_1ce14c721_Kind> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _5621_other) {
	return _1ce14d3d1_Equal(_self_.data.as<_1ce14cbc7_TypeKind>(), _5621_other);
}
inline jule::Str _1ce14c27b_Str_Kind_20(jule::Trait<_1ce14c721_Kind> _self_) {
	return _1ce155ae2_Str(_self_.safe_ptr<_1ce1557a1_Prim>());
}
inline jule::Bool _1ce14c5bc_Equal_Kind_20(jule::Trait<_1ce14c721_Kind> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _5621_other) {
	return _1ce155e33_Equal(_self_.data.as<_1ce1557a1_Prim>(), _5621_other);
}
inline jule::Str _1ce14c27b_Str_Kind_21(jule::Trait<_1ce14c721_Kind> _self_) {
	return _1ce159651_Str(_self_.safe_ptr<_1ce1592cc_Sptr>());
}
inline jule::Bool _1ce14c5bc_Equal_Kind_21(jule::Trait<_1ce14c721_Kind> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _5621_other) {
	return _1ce159992_Equal(_self_.data.as<_1ce1592cc_Sptr>(), _5621_other);
}
inline jule::Str _1ce14c27b_Str_Kind_22(jule::Trait<_1ce14c721_Kind> _self_) {
	return _1ce15a234_Str(_self_.safe_ptr<_1ce159ca0_Slc>());
}
inline jule::Bool _1ce14c5bc_Equal_Kind_22(jule::Trait<_1ce14c721_Kind> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _5621_other) {
	return _1ce15a575_Equal(_self_.data.as<_1ce159ca0_Slc>(), _5621_other);
}
inline jule::Str _1ce14c27b_Str_Kind_23(jule::Trait<_1ce14c721_Kind> _self_) {
	return _1ce15ac18_Str(_self_.safe_ptr<_1ce15a894_Tuple>());
}
inline jule::Bool _1ce14c5bc_Equal_Kind_23(jule::Trait<_1ce14c721_Kind> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _5621_other) {
	return _1ce15b059_Equal(_self_.data.as<_1ce15a894_Tuple>(), _5621_other);
}
inline jule::Str _1ce14c27b_Str_Kind_24(jule::Trait<_1ce14c721_Kind> _self_) {
	return _1ce15b7b8_Str(_self_.safe_ptr<_1ce15b444_Map>());
}
inline jule::Bool _1ce14c5bc_Equal_Kind_24(jule::Trait<_1ce14c721_Kind> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _5621_other) {
	return _1ce15bb09_Equal(_self_.data.as<_1ce15b444_Map>(), _5621_other);
}
inline jule::Str _1ce14c27b_Str_Kind_25(jule::Trait<_1ce14c721_Kind> _self_) {
	return _1ce15c445_Str(_self_.safe_ptr<_1ce15c0c1_Arr>());
}
inline jule::Bool _1ce14c5bc_Equal_Kind_25(jule::Trait<_1ce14c721_Kind> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _5621_other) {
	return _1ce15c786_Equal(_self_.data.as<_1ce15c0c1_Arr>(), _5621_other);
}
inline jule::Str _1ce14c27b_Str_Kind_26(jule::Trait<_1ce14c721_Kind> _self_) {
	return _1ce15ce18_Str(_self_.safe_ptr<_1ce15ca94_Ptr>());
}
inline jule::Bool _1ce14c5bc_Equal_Kind_26(jule::Trait<_1ce14c721_Kind> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _5621_other) {
	return _1ce15d259_Equal(_self_.data.as<_1ce15ca94_Ptr>(), _5621_other);
}
inline jule::Str _1ce14c27b_Str_Kind_27(jule::Trait<_1ce14c721_Kind> _self_) {
	return _1b629d318_Str(_self_.safe_ptr<_1b629ce72_customType>());
}
inline jule::Bool _1ce14c5bc_Equal_Kind_27(jule::Trait<_1ce14c721_Kind> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _5621_other) {
	return _1b629d659_Equal(_self_.data.as<_1b629ce72_customType>(), _5621_other);
}
inline jule::Ptr<_1ce06b0ac_ImportInfo> _1ce16aaa2_SelectPackage_Lookup_0(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1ce06b0ac_ImportInfo>)> _932_selector) {
	return _1ce052071_SelectPackage(_self_.safe_ptr<_1ce051acb_scopeChecker>(), _932_selector);
}
inline jule::Ptr<_1ce0b4105_Var> _1ce16ae9d_FindVar_Lookup_0(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1ce05246c_FindVar(_self_.safe_ptr<_1ce051acb_scopeChecker>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1ce14bdd5_TypeAlias> _1ce16b399_FindTypeAlias_Lookup_0(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1ce052868_FindTypeAlias(_self_.safe_ptr<_1ce051acb_scopeChecker>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1cdee2990_Struct> _1ce16b795_FindStruct_Lookup_0(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1ce052c64_FindStruct(_self_.safe_ptr<_1ce051acb_scopeChecker>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1ce00792d_Fn> _1ce16bb91_FindFn_Lookup_0(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1ce053160_FindFn(_self_.safe_ptr<_1ce051acb_scopeChecker>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1ce01ac0a_Trait> _1ce16bed2_FindTrait_Lookup_0(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Str _2928_ident) {
	return _1ce0534a1_FindTrait(_self_.safe_ptr<_1ce051acb_scopeChecker>(), _2928_ident);
}
inline jule::Ptr<_1ce01d416_Enum> _1ce16c323_FindEnum_Lookup_0(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Str _3327_ident) {
	return _1ce0537e2_FindEnum(_self_.safe_ptr<_1ce051acb_scopeChecker>(), _3327_ident);
}
inline jule::Ptr<_1ce01eb21_TypeEnum> _1ce16c664_FindTypeEnum_Lookup_0(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Str _3731_ident) {
	return _1ce053b33_FindTypeEnum(_self_.safe_ptr<_1ce051acb_scopeChecker>(), _3731_ident);
}
inline jule::Ptr<_1ce06b0ac_ImportInfo> _1ce16aaa2_SelectPackage_Lookup_1(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1ce06b0ac_ImportInfo>)> _932_selector) {
	return _1ce06b596_SelectPackage(_self_.safe_ptr<_1ce06b0ac_ImportInfo>(), _932_selector);
}
inline jule::Ptr<_1ce0b4105_Var> _1ce16ae9d_FindVar_Lookup_1(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1ce06b992_FindVar(_self_.safe_ptr<_1ce06b0ac_ImportInfo>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1ce14bdd5_TypeAlias> _1ce16b399_FindTypeAlias_Lookup_1(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1ce06bd8d_FindTypeAlias(_self_.safe_ptr<_1ce06b0ac_ImportInfo>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1cdee2990_Struct> _1ce16b795_FindStruct_Lookup_1(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1ce06c289_FindStruct(_self_.safe_ptr<_1ce06b0ac_ImportInfo>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1ce00792d_Fn> _1ce16bb91_FindFn_Lookup_1(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1ce06c685_FindFn(_self_.safe_ptr<_1ce06b0ac_ImportInfo>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1ce01ac0a_Trait> _1ce16bed2_FindTrait_Lookup_1(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Str _2928_ident) {
	return _1ce06c9c6_FindTrait(_self_.safe_ptr<_1ce06b0ac_ImportInfo>(), _2928_ident);
}
inline jule::Ptr<_1ce01d416_Enum> _1ce16c323_FindEnum_Lookup_1(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Str _3327_ident) {
	return _1ce06cd17_FindEnum(_self_.safe_ptr<_1ce06b0ac_ImportInfo>(), _3327_ident);
}
inline jule::Ptr<_1ce01eb21_TypeEnum> _1ce16c664_FindTypeEnum_Lookup_1(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Str _3731_ident) {
	return _1ce06d158_FindTypeEnum(_self_.safe_ptr<_1ce06b0ac_ImportInfo>(), _3731_ident);
}
inline jule::Ptr<_1ce06b0ac_ImportInfo> _1ce16aaa2_SelectPackage_Lookup_2(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1ce06b0ac_ImportInfo>)> _932_selector) {
	return _1ce06e478_SelectPackage(_self_.safe_ptr<_1ce06ded3_Package>(), _932_selector);
}
inline jule::Ptr<_1ce0b4105_Var> _1ce16ae9d_FindVar_Lookup_2(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1ce06e874_FindVar(_self_.safe_ptr<_1ce06ded3_Package>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1ce14bdd5_TypeAlias> _1ce16b399_FindTypeAlias_Lookup_2(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1ce06ec70_FindTypeAlias(_self_.safe_ptr<_1ce06ded3_Package>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1cdee2990_Struct> _1ce16b795_FindStruct_Lookup_2(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1ce07016b_FindStruct(_self_.safe_ptr<_1ce06ded3_Package>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1ce00792d_Fn> _1ce16bb91_FindFn_Lookup_2(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1ce070567_FindFn(_self_.safe_ptr<_1ce06ded3_Package>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1ce01ac0a_Trait> _1ce16bed2_FindTrait_Lookup_2(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Str _2928_ident) {
	return _1ce0708a8_FindTrait(_self_.safe_ptr<_1ce06ded3_Package>(), _2928_ident);
}
inline jule::Ptr<_1ce01d416_Enum> _1ce16c323_FindEnum_Lookup_2(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Str _3327_ident) {
	return _1ce070be9_FindEnum(_self_.safe_ptr<_1ce06ded3_Package>(), _3327_ident);
}
inline jule::Ptr<_1ce01eb21_TypeEnum> _1ce16c664_FindTypeEnum_Lookup_2(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Str _3731_ident) {
	return _1ce07103a_FindTypeEnum(_self_.safe_ptr<_1ce06ded3_Package>(), _3731_ident);
}
inline jule::Ptr<_1ce06b0ac_ImportInfo> _1ce16aaa2_SelectPackage_Lookup_3(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1ce06b0ac_ImportInfo>)> _932_selector) {
	return _1ce08b8c4_SelectPackage(_self_.safe_ptr<_1ce08b42e_Sema>(), _932_selector);
}
inline jule::Ptr<_1ce0b4105_Var> _1ce16ae9d_FindVar_Lookup_3(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1ce08bcc0_FindVar(_self_.safe_ptr<_1ce08b42e_Sema>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1ce14bdd5_TypeAlias> _1ce16b399_FindTypeAlias_Lookup_3(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1ce0920e4_FindTypeAlias(_self_.safe_ptr<_1ce08b42e_Sema>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1cdee2990_Struct> _1ce16b795_FindStruct_Lookup_3(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1ce092424_FindStruct(_self_.safe_ptr<_1ce08b42e_Sema>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1ce00792d_Fn> _1ce16bb91_FindFn_Lookup_3(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1ce092820_FindFn(_self_.safe_ptr<_1ce08b42e_Sema>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1ce01ac0a_Trait> _1ce16bed2_FindTrait_Lookup_3(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Str _2928_ident) {
	return _1ce092b61_FindTrait(_self_.safe_ptr<_1ce08b42e_Sema>(), _2928_ident);
}
inline jule::Ptr<_1ce01d416_Enum> _1ce16c323_FindEnum_Lookup_3(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Str _3327_ident) {
	return _1ce092ea2_FindEnum(_self_.safe_ptr<_1ce08b42e_Sema>(), _3327_ident);
}
inline jule::Ptr<_1ce01eb21_TypeEnum> _1ce16c664_FindTypeEnum_Lookup_3(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Str _3731_ident) {
	return _1ce0932e3_FindTypeEnum(_self_.safe_ptr<_1ce08b42e_Sema>(), _3731_ident);
}
inline jule::Ptr<_1ce06b0ac_ImportInfo> _1ce16aaa2_SelectPackage_Lookup_4(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1ce06b0ac_ImportInfo>)> _932_selector) {
	return _1ce116d7d_SelectPackage(_self_.safe_ptr<_1ce116894_SymbolTable>(), _932_selector);
}
inline jule::Ptr<_1ce0b4105_Var> _1ce16ae9d_FindVar_Lookup_4(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1ce117279_FindVar(_self_.safe_ptr<_1ce116894_SymbolTable>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1ce14bdd5_TypeAlias> _1ce16b399_FindTypeAlias_Lookup_4(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1ce117675_FindTypeAlias(_self_.safe_ptr<_1ce116894_SymbolTable>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1cdee2990_Struct> _1ce16b795_FindStruct_Lookup_4(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1ce117a71_FindStruct(_self_.safe_ptr<_1ce116894_SymbolTable>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1ce00792d_Fn> _1ce16bb91_FindFn_Lookup_4(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1ce117e6c_FindFn(_self_.safe_ptr<_1ce116894_SymbolTable>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1ce01ac0a_Trait> _1ce16bed2_FindTrait_Lookup_4(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Str _2928_ident) {
	return _1ce1182ad_FindTrait(_self_.safe_ptr<_1ce116894_SymbolTable>(), _2928_ident);
}
inline jule::Ptr<_1ce01d416_Enum> _1ce16c323_FindEnum_Lookup_4(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Str _3327_ident) {
	return _1ce1185ee_FindEnum(_self_.safe_ptr<_1ce116894_SymbolTable>(), _3327_ident);
}
inline jule::Ptr<_1ce01eb21_TypeEnum> _1ce16c664_FindTypeEnum_Lookup_4(jule::Trait<_1ce16c7b8_Lookup> _self_, jule::Str _3731_ident) {
	return _1ce118940_FindTypeEnum(_self_.safe_ptr<_1ce116894_SymbolTable>(), _3731_ident);
}
inline jule::Str _1b5e88113_Name_CommonFlag_0(jule::Trait<_1b5eb8c48_CommonFlag> _self_) {
	return _1b99c3177_Name(_self_.safe_ptr<_1b99c2c15_Flag>());
}
inline jule::I32 _1b5e88256_Short_CommonFlag_0(jule::Trait<_1b5eb8c48_CommonFlag> _self_) {
	return _1b99c3584_Short(_self_.safe_ptr<_1b99c2c15_Flag>());
}
inline jule::Str _1b5e884a9_What_CommonFlag_0(jule::Trait<_1b5eb8c48_CommonFlag> _self_) {
	return _1b99c32cb_What(_self_.safe_ptr<_1b99c2c15_Flag>());
}
inline void _1b5eb8ae4_Reset_CommonFlag_0(jule::Trait<_1b5eb8c48_CommonFlag> _self_) {
	_1b99c3430_Reset(_self_.safe_ptr<_1b99c2c15_Flag>());
}
inline jule::Str _1b5e88113_Name_CommonFlag_1(jule::Trait<_1b5eb8c48_CommonFlag> _self_) {
	return _1b99c64bb_Name(_self_.safe_ptr<_1b99c6851_Flag>());
}
inline jule::I32 _1b5e88256_Short_CommonFlag_1(jule::Trait<_1b5eb8c48_CommonFlag> _self_) {
	return _1b99c6dc3_Short(_self_.safe_ptr<_1b99c6851_Flag>());
}
inline jule::Str _1b5e884a9_What_CommonFlag_1(jule::Trait<_1b5eb8c48_CommonFlag> _self_) {
	return _1b99c6b3c_What(_self_.safe_ptr<_1b99c6851_Flag>());
}
inline void _1b5eb8ae4_Reset_CommonFlag_1(jule::Trait<_1b5eb8c48_CommonFlag> _self_) {
	_1b99c6c80_Reset(_self_.safe_ptr<_1b99c6851_Flag>());
}
inline jule::Str _1b5e88113_Name_CommonFlag_2(jule::Trait<_1b5eb8c48_CommonFlag> _self_) {
	return _1b99c9b73_Name(_self_.safe_ptr<_1b99ca008_Flag>());
}
inline jule::I32 _1b5e88256_Short_CommonFlag_2(jule::Trait<_1b5eb8c48_CommonFlag> _self_) {
	return _1b99ca57a_Short(_self_.safe_ptr<_1b99ca008_Flag>());
}
inline jule::Str _1b5e884a9_What_CommonFlag_2(jule::Trait<_1b5eb8c48_CommonFlag> _self_) {
	return _1b99ca2e4_What(_self_.safe_ptr<_1b99ca008_Flag>());
}
inline void _1b5eb8ae4_Reset_CommonFlag_2(jule::Trait<_1b5eb8c48_CommonFlag> _self_) {
	_1b99ca437_Reset(_self_.safe_ptr<_1b99ca008_Flag>());
}
inline jule::Str _1b5e88113_Name_CommonFlag_3(jule::Trait<_1b5eb8c48_CommonFlag> _self_) {
	return _1b99cd36e_Name(_self_.safe_ptr<_1b99cd704_Flag>());
}
inline jule::I32 _1b5e88256_Short_CommonFlag_3(jule::Trait<_1b5eb8c48_CommonFlag> _self_) {
	return _1b99cdc76_Short(_self_.safe_ptr<_1b99cd704_Flag>());
}
inline jule::Str _1b5e884a9_What_CommonFlag_3(jule::Trait<_1b5eb8c48_CommonFlag> _self_) {
	return _1b99cd9e0_What(_self_.safe_ptr<_1b99cd704_Flag>());
}
inline void _1b5eb8ae4_Reset_CommonFlag_3(jule::Trait<_1b5eb8c48_CommonFlag> _self_) {
	_1b99cdb33_Reset(_self_.safe_ptr<_1b99cd704_Flag>());
}
inline jule::Str _1b5e88113_Name_CommonFlag_4(jule::Trait<_1b5eb8c48_CommonFlag> _self_) {
	return _1b99d1a26_Name(_self_.safe_ptr<_1b99d1dab_Flag>());
}
inline jule::I32 _1b5e88256_Short_CommonFlag_4(jule::Trait<_1b5eb8c48_CommonFlag> _self_) {
	return _1b99d242d_Short(_self_.safe_ptr<_1b99d1dab_Flag>());
}
inline jule::Str _1b5e884a9_What_CommonFlag_4(jule::Trait<_1b5eb8c48_CommonFlag> _self_) {
	return _1b99d2197_What(_self_.safe_ptr<_1b99d1dab_Flag>());
}
inline void _1b5eb8ae4_Reset_CommonFlag_4(jule::Trait<_1b5eb8c48_CommonFlag> _self_) {
	_1b99d22da_Reset(_self_.safe_ptr<_1b99d1dab_Flag>());
}


static _1ce022a58_comptimeRangeKindMptrData _1ce022a58_comptimeRangeKind_mptr_data[] = {
	{
		._1ce022250_ready=_1ce022250_ready_comptimeRangeKind_0,
		._1ce02266d_step=_1ce02266d_step_comptimeRangeKind_0,
		._1ce022904_len=_1ce022904_len_comptimeRangeKind_0,
	},
	{
		._1ce022250_ready=_1ce022250_ready_comptimeRangeKind_1,
		._1ce02266d_step=_1ce02266d_step_comptimeRangeKind_1,
		._1ce022904_len=_1ce022904_len_comptimeRangeKind_1,
	},
	{
		._1ce022250_ready=_1ce022250_ready_comptimeRangeKind_2,
		._1ce02266d_step=_1ce02266d_step_comptimeRangeKind_2,
		._1ce022904_len=_1ce022904_len_comptimeRangeKind_2,
	},
	{
		._1ce022250_ready=_1ce022250_ready_comptimeRangeKind_3,
		._1ce02266d_step=_1ce02266d_step_comptimeRangeKind_3,
		._1ce022904_len=_1ce022904_len_comptimeRangeKind_3,
	},
	{
		._1ce022250_ready=_1ce022250_ready_comptimeRangeKind_4,
		._1ce02266d_step=_1ce02266d_step_comptimeRangeKind_4,
		._1ce022904_len=_1ce022904_len_comptimeRangeKind_4,
	},
	{
		._1ce022250_ready=_1ce022250_ready_comptimeRangeKind_5,
		._1ce02266d_step=_1ce02266d_step_comptimeRangeKind_5,
		._1ce022904_len=_1ce022904_len_comptimeRangeKind_5,
	},
};
static _1ce068197_ImporterMptrData _1ce068197_Importer_mptr_data[] = {
	{
		._1ce066e76_SetModPath=_1ce066e76_SetModPath_Importer_0,
		._1ce06720c_GetModPath=_1ce06720c_GetModPath_Importer_0,
		._1ce06754d_ModById=_1ce06754d_ModById_Importer_0,
		._1ce06788e_GetImport=_1ce06788e_GetImport_Importer_0,
		._1ce067c8a_ImportPackage=_1ce067c8a_ImportPackage_Importer_0,
		._1ce068043_Imported=_1ce068043_Imported_Importer_0,
	},
};
static _1ce14c721_KindMptrData _1ce14c721_Kind_mptr_data[] = {
	{
		._1ce14c27b_Str=_1ce14c27b_Str_Kind_0,
		._1ce14c5bc_Equal=_1ce14c5bc_Equal_Kind_0,
	},
	{
		._1ce14c27b_Str=_1ce14c27b_Str_Kind_1,
		._1ce14c5bc_Equal=_1ce14c5bc_Equal_Kind_1,
	},
	{
		._1ce14c27b_Str=_1ce14c27b_Str_Kind_2,
		._1ce14c5bc_Equal=_1ce14c5bc_Equal_Kind_2,
	},
	{
		._1ce14c27b_Str=_1ce14c27b_Str_Kind_3,
		._1ce14c5bc_Equal=_1ce14c5bc_Equal_Kind_3,
	},
	{
		._1ce14c27b_Str=_1ce14c27b_Str_Kind_4,
		._1ce14c5bc_Equal=_1ce14c5bc_Equal_Kind_4,
	},
	{
		._1ce14c27b_Str=_1ce14c27b_Str_Kind_5,
		._1ce14c5bc_Equal=_1ce14c5bc_Equal_Kind_5,
	},
	{
		._1ce14c27b_Str=_1ce14c27b_Str_Kind_6,
		._1ce14c5bc_Equal=_1ce14c5bc_Equal_Kind_6,
	},
	{
		._1ce14c27b_Str=_1ce14c27b_Str_Kind_7,
		._1ce14c5bc_Equal=_1ce14c5bc_Equal_Kind_7,
	},
	{
		._1ce14c27b_Str=_1ce14c27b_Str_Kind_8,
		._1ce14c5bc_Equal=_1ce14c5bc_Equal_Kind_8,
	},
	{
		._1ce14c27b_Str=_1ce14c27b_Str_Kind_9,
		._1ce14c5bc_Equal=_1ce14c5bc_Equal_Kind_9,
	},
	{
		._1ce14c27b_Str=_1ce14c27b_Str_Kind_10,
		._1ce14c5bc_Equal=_1ce14c5bc_Equal_Kind_10,
	},
	{
		._1ce14c27b_Str=_1ce14c27b_Str_Kind_11,
		._1ce14c5bc_Equal=_1ce14c5bc_Equal_Kind_11,
	},
	{
		._1ce14c27b_Str=_1ce14c27b_Str_Kind_12,
		._1ce14c5bc_Equal=_1ce14c5bc_Equal_Kind_12,
	},
	{
		._1ce14c27b_Str=_1ce14c27b_Str_Kind_13,
		._1ce14c5bc_Equal=_1ce14c5bc_Equal_Kind_13,
	},
	{
		._1ce14c27b_Str=_1ce14c27b_Str_Kind_14,
		._1ce14c5bc_Equal=_1ce14c5bc_Equal_Kind_14,
	},
	{
		._1ce14c27b_Str=_1ce14c27b_Str_Kind_15,
		._1ce14c5bc_Equal=_1ce14c5bc_Equal_Kind_15,
	},
	{
		._1ce14c27b_Str=_1ce14c27b_Str_Kind_16,
		._1ce14c5bc_Equal=_1ce14c5bc_Equal_Kind_16,
	},
	{
		._1ce14c27b_Str=_1ce14c27b_Str_Kind_17,
		._1ce14c5bc_Equal=_1ce14c5bc_Equal_Kind_17,
	},
	{
		._1ce14c27b_Str=_1ce14c27b_Str_Kind_18,
		._1ce14c5bc_Equal=_1ce14c5bc_Equal_Kind_18,
	},
	{
		._1ce14c27b_Str=_1ce14c27b_Str_Kind_19,
		._1ce14c5bc_Equal=_1ce14c5bc_Equal_Kind_19,
	},
	{
		._1ce14c27b_Str=_1ce14c27b_Str_Kind_20,
		._1ce14c5bc_Equal=_1ce14c5bc_Equal_Kind_20,
	},
	{
		._1ce14c27b_Str=_1ce14c27b_Str_Kind_21,
		._1ce14c5bc_Equal=_1ce14c5bc_Equal_Kind_21,
	},
	{
		._1ce14c27b_Str=_1ce14c27b_Str_Kind_22,
		._1ce14c5bc_Equal=_1ce14c5bc_Equal_Kind_22,
	},
	{
		._1ce14c27b_Str=_1ce14c27b_Str_Kind_23,
		._1ce14c5bc_Equal=_1ce14c5bc_Equal_Kind_23,
	},
	{
		._1ce14c27b_Str=_1ce14c27b_Str_Kind_24,
		._1ce14c5bc_Equal=_1ce14c5bc_Equal_Kind_24,
	},
	{
		._1ce14c27b_Str=_1ce14c27b_Str_Kind_25,
		._1ce14c5bc_Equal=_1ce14c5bc_Equal_Kind_25,
	},
	{
		._1ce14c27b_Str=_1ce14c27b_Str_Kind_26,
		._1ce14c5bc_Equal=_1ce14c5bc_Equal_Kind_26,
	},
	{
		._1ce14c27b_Str=_1ce14c27b_Str_Kind_27,
		._1ce14c5bc_Equal=_1ce14c5bc_Equal_Kind_27,
	},
};
static _1ce16c7b8_LookupMptrData _1ce16c7b8_Lookup_mptr_data[] = {
	{
		._1ce16aaa2_SelectPackage=_1ce16aaa2_SelectPackage_Lookup_0,
		._1ce16ae9d_FindVar=_1ce16ae9d_FindVar_Lookup_0,
		._1ce16b399_FindTypeAlias=_1ce16b399_FindTypeAlias_Lookup_0,
		._1ce16b795_FindStruct=_1ce16b795_FindStruct_Lookup_0,
		._1ce16bb91_FindFn=_1ce16bb91_FindFn_Lookup_0,
		._1ce16bed2_FindTrait=_1ce16bed2_FindTrait_Lookup_0,
		._1ce16c323_FindEnum=_1ce16c323_FindEnum_Lookup_0,
		._1ce16c664_FindTypeEnum=_1ce16c664_FindTypeEnum_Lookup_0,
	},
	{
		._1ce16aaa2_SelectPackage=_1ce16aaa2_SelectPackage_Lookup_1,
		._1ce16ae9d_FindVar=_1ce16ae9d_FindVar_Lookup_1,
		._1ce16b399_FindTypeAlias=_1ce16b399_FindTypeAlias_Lookup_1,
		._1ce16b795_FindStruct=_1ce16b795_FindStruct_Lookup_1,
		._1ce16bb91_FindFn=_1ce16bb91_FindFn_Lookup_1,
		._1ce16bed2_FindTrait=_1ce16bed2_FindTrait_Lookup_1,
		._1ce16c323_FindEnum=_1ce16c323_FindEnum_Lookup_1,
		._1ce16c664_FindTypeEnum=_1ce16c664_FindTypeEnum_Lookup_1,
	},
	{
		._1ce16aaa2_SelectPackage=_1ce16aaa2_SelectPackage_Lookup_2,
		._1ce16ae9d_FindVar=_1ce16ae9d_FindVar_Lookup_2,
		._1ce16b399_FindTypeAlias=_1ce16b399_FindTypeAlias_Lookup_2,
		._1ce16b795_FindStruct=_1ce16b795_FindStruct_Lookup_2,
		._1ce16bb91_FindFn=_1ce16bb91_FindFn_Lookup_2,
		._1ce16bed2_FindTrait=_1ce16bed2_FindTrait_Lookup_2,
		._1ce16c323_FindEnum=_1ce16c323_FindEnum_Lookup_2,
		._1ce16c664_FindTypeEnum=_1ce16c664_FindTypeEnum_Lookup_2,
	},
	{
		._1ce16aaa2_SelectPackage=_1ce16aaa2_SelectPackage_Lookup_3,
		._1ce16ae9d_FindVar=_1ce16ae9d_FindVar_Lookup_3,
		._1ce16b399_FindTypeAlias=_1ce16b399_FindTypeAlias_Lookup_3,
		._1ce16b795_FindStruct=_1ce16b795_FindStruct_Lookup_3,
		._1ce16bb91_FindFn=_1ce16bb91_FindFn_Lookup_3,
		._1ce16bed2_FindTrait=_1ce16bed2_FindTrait_Lookup_3,
		._1ce16c323_FindEnum=_1ce16c323_FindEnum_Lookup_3,
		._1ce16c664_FindTypeEnum=_1ce16c664_FindTypeEnum_Lookup_3,
	},
	{
		._1ce16aaa2_SelectPackage=_1ce16aaa2_SelectPackage_Lookup_4,
		._1ce16ae9d_FindVar=_1ce16ae9d_FindVar_Lookup_4,
		._1ce16b399_FindTypeAlias=_1ce16b399_FindTypeAlias_Lookup_4,
		._1ce16b795_FindStruct=_1ce16b795_FindStruct_Lookup_4,
		._1ce16bb91_FindFn=_1ce16bb91_FindFn_Lookup_4,
		._1ce16bed2_FindTrait=_1ce16bed2_FindTrait_Lookup_4,
		._1ce16c323_FindEnum=_1ce16c323_FindEnum_Lookup_4,
		._1ce16c664_FindTypeEnum=_1ce16c664_FindTypeEnum_Lookup_4,
	},
};
static _1b5eb8c48_CommonFlagMptrData _1b5eb8c48_CommonFlag_mptr_data[] = {
	{
		._1b5e88113_Name=_1b5e88113_Name_CommonFlag_0,
		._1b5e88256_Short=_1b5e88256_Short_CommonFlag_0,
		._1b5e884a9_What=_1b5e884a9_What_CommonFlag_0,
		._1b5eb8ae4_Reset=_1b5eb8ae4_Reset_CommonFlag_0,
	},
	{
		._1b5e88113_Name=_1b5e88113_Name_CommonFlag_1,
		._1b5e88256_Short=_1b5e88256_Short_CommonFlag_1,
		._1b5e884a9_What=_1b5e884a9_What_CommonFlag_1,
		._1b5eb8ae4_Reset=_1b5eb8ae4_Reset_CommonFlag_1,
	},
	{
		._1b5e88113_Name=_1b5e88113_Name_CommonFlag_2,
		._1b5e88256_Short=_1b5e88256_Short_CommonFlag_2,
		._1b5e884a9_What=_1b5e884a9_What_CommonFlag_2,
		._1b5eb8ae4_Reset=_1b5eb8ae4_Reset_CommonFlag_2,
	},
	{
		._1b5e88113_Name=_1b5e88113_Name_CommonFlag_3,
		._1b5e88256_Short=_1b5e88256_Short_CommonFlag_3,
		._1b5e884a9_What=_1b5e884a9_What_CommonFlag_3,
		._1b5eb8ae4_Reset=_1b5eb8ae4_Reset_CommonFlag_3,
	},
	{
		._1b5e88113_Name=_1b5e88113_Name_CommonFlag_4,
		._1b5e88256_Short=_1b5e88256_Short_CommonFlag_4,
		._1b5e884a9_What=_1b5e884a9_What_CommonFlag_4,
		._1b5eb8ae4_Reset=_1b5eb8ae4_Reset_CommonFlag_4,
	},
};


void __jule_any_type0_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_any_type0_dealloc, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
void __jule_any_type1_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_any_type1_dealloc, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
void __jule_any_type2_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_any_type2_dealloc, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
void __jule_any_type3_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_any_type3_dealloc, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
void __jule_any_type4_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_any_type4_dealloc, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
void __jule_any_type5_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_any_type5_dealloc, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
void __jule_any_type6_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_any_type6_dealloc, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
void __jule_any_type7_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce00a832_FnIns>().dealloc(); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_any_type7_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1ce00a832_FnIns> &other) { return any.type == &__jule_any_type7 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type8_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce0b4105_Var>().dealloc(); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_any_type8_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1ce0b4105_Var> &other) { return any.type == &__jule_any_type8 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type9_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdee571d_StructIns>().dealloc(); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_any_type9_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1cdee571d_StructIns> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type10_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce01ac0a_Trait>().dealloc(); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_any_type10_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1ce01ac0a_Trait> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type11_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdedd705_Impl>().dealloc(); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_any_type11_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1cdedd705_Impl> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type12_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cded85ac_TypeAliasDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_any_type12_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1cded85ac_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type13_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdedc858_StructDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_any_type13_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1cdedc858_StructDecl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type14_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cded3750_FnDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_any_type14_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1cded3750_FnDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type15_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdedd095_TraitDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_any_type15_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1cdedd095_TraitDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type16_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cded490a_VarDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_any_type16_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1cded490a_VarDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type17_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdedac0d_EnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_any_type17_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1cdedac0d_EnumDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type18_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdedbb98_TypeEnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_any_type18_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1cdedbb98_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type19_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_22be1616d_Const>().dealloc(); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_any_type19_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_22be1616d_Const> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type20_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdec219a_IdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_any_type20_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1cdec219a_IdentTypeDecl> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type21_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce04c16a_Label>().dealloc(); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_any_type21_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1ce04c16a_Label> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type22_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce0497c7_Scope>().dealloc(); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_any_type22_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1ce0497c7_Scope> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type23_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce0033b8_BuiltinErrorCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_any_type23_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1ce0033b8_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type24_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce11bc0c_Data>().dealloc(); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_any_type24_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1ce11bc0c_Data> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type25_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce0046c7_BackendEmitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_any_type25_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1ce0046c7_BackendEmitExprModel> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type26_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce002142_BuiltinAppendCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_any_type26_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1ce002142_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type27_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce00067e_BuiltinOutCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_any_type27_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1ce00067e_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type28_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce000a58_BuiltinOutlnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_any_type28_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1ce000a58_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type29_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce00130b_BuiltinPanicCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_any_type29_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1ce00130b_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type30_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce0017b2_BuiltinAssertCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_any_type30_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1ce0017b2_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type31_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce002ede_BuiltinCopyCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_any_type31_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1ce002ede_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type32_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce002b15_BuiltinDeleteCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_any_type32_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1ce002b15_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type33_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce0049c4_FreeExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_any_type33_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1ce0049c4_FreeExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type34_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdeebb97_FnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_any_type34_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1cdeebb97_FnCallExprModel> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type35_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce04a410_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_any_type35_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1ce04a410_Conditional> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type36_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce04a70c_InfIter>().dealloc(); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_any_type36_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1ce04a70c_InfIter> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type37_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cded5d7e_WhileKind>().dealloc(); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_any_type37_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1cded5d7e_WhileKind> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type38_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce04abb3_WhileIter>().dealloc(); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_any_type38_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1ce04abb3_WhileIter> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type39_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cded6786_RangeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_any_type39_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1cded6786_RangeKind> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type40_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce04b60e_RangeIter>().dealloc(); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_any_type40_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1ce04b60e_RangeIter> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type41_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce04b994_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_any_type41_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1ce04b994_ContSt> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type42_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce04c544_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_any_type42_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1ce04c544_GotoSt> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type43_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce04c91d_Postfix>().dealloc(); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_any_type43_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1ce04c91d_Postfix> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type44_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce04cdc4_Assign>().dealloc(); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_any_type44_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1ce04cdc4_Assign> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type45_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdeec527_IndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_any_type45_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1cdeec527_IndexingExprModel> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type46_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce04d29d_MultiAssign>().dealloc(); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_any_type46_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1ce04d29d_MultiAssign> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type47_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce04d90d_Match>().dealloc(); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_any_type47_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1ce04d90d_Match> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type48_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce04eb2e_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_any_type48_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1ce04eb2e_FallSt> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type49_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce04bd6d_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_any_type49_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1ce04bd6d_BreakSt> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type50_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce04eec5_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_any_type50_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1ce04eec5_RetSt> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type51_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cded1ab1_ScopeTree>().dealloc(); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_any_type51_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1cded1ab1_ScopeTree> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type52_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdec5dc4_Expr>().dealloc(); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_any_type52_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1cdec5dc4_Expr> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type53_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cded7d70_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_any_type53_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1cded7d70_Conditional> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type54_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cded5554_Iter>().dealloc(); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_any_type54_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1cded5554_Iter> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type55_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cded7039_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_any_type55_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1cded7039_ContSt> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type56_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdece174_LabelSt>().dealloc(); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_any_type56_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1cdece174_LabelSt> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type57_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdece54d_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_any_type57_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1cdece54d_GotoSt> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type58_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cded053d_AssignSt>().dealloc(); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_any_type58_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1cded053d_AssignSt> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type59_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cded937c_MatchCase>().dealloc(); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_any_type59_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1cded937c_MatchCase> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type60_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdece84a_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_any_type60_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1cdece84a_FallSt> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type61_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cded6b60_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_any_type61_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1cded6b60_BreakSt> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type62_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cded4cd4_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_any_type62_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1cded4cd4_RetSt> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type63_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdec6798_UseExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_any_type63_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1cdec6798_UseExpr> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type64_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce00792d_Fn>().dealloc(); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_any_type64_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1ce00792d_Fn> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type65_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdee2990_Struct>().dealloc(); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_any_type65_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1cdee2990_Struct> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type66_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce14bdd5_TypeAlias>().dealloc(); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_any_type66_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1ce14bdd5_TypeAlias> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type67_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce01d416_Enum>().dealloc(); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_any_type67_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1ce01d416_Enum> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type68_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce01eb21_TypeEnum>().dealloc(); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_any_type68_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1ce01eb21_TypeEnum> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type69_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdec3d5b_ArrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_any_type69_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1cdec3d5b_ArrTypeDecl> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type70_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdec2ec0_SlcTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_any_type70_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1cdec2ec0_SlcTypeDecl> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type71_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdec35b9_PtrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_any_type71_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1cdec35b9_PtrTypeDecl> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type72_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdec2b3a_SptrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_any_type72_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1cdec2b3a_SptrTypeDecl> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type73_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdec45a9_MapTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_any_type73_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1cdec45a9_MapTypeDecl> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type74_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdec32bc_TupleTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_any_type74_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1cdec32bc_TupleTypeDecl> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type75_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdec835a_VariadicExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_any_type75_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1cdec835a_VariadicExpr> &other) { return any.type == &__jule_any_type75 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type76_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdeec071_SliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_any_type76_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1cdeec071_SliceExprModel> &other) { return any.type == &__jule_any_type76 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type77_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdeca5e3_FieldExprPair>().dealloc(); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_any_type77_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1cdeca5e3_FieldExprPair> &other) { return any.type == &__jule_any_type77 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type78_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdecbbee_KeyValPair>().dealloc(); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_any_type78_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1cdecbbee_KeyValPair> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type79_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdec76de_IdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_any_type79_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1cdec76de_IdentExpr> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type80_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdec69b8_TupleExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_any_type80_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1cdec69b8_TupleExpr> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type81_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce0002a5_TupleExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_any_type81_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1ce0002a5_TupleExprModel> &other) { return any.type == &__jule_any_type81 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type82_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdec9aed_FnCallExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_any_type82_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1cdec9aed_FnCallExpr> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type83_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce004001_RuneExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_any_type83_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1ce004001_RuneExprModel> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type84_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce14cbc7_TypeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_any_type84_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1ce14cbc7_TypeKind> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type85_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdeeeea8_ArrayExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_any_type85_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1cdeeeea8_ArrayExprModel> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type86_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdec8ed7_SubIdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_any_type86_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1cdec8ed7_SubIdentExpr> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type87_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdec2464_SubIdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_any_type87_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1cdec2464_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type88_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdec7e81_UnaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_any_type88_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1cdec7e81_UnaryExpr> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type89_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdec1a90_TypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_any_type89_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1cdec1a90_TypeDecl> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type90_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdec8b0d_NsSelectionExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_any_type90_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1cdec8b0d_NsSelectionExpr> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type91_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdec283d_NamespaceTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_any_type91_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1cdec283d_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type92_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdeed814_SlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_any_type92_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1cdeed814_SlicingExprModel> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type93_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdeeb2e5_CastingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_any_type93_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1cdeeb2e5_CastingExprModel> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type94_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdecc42a_SliceExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_any_type94_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1cdecc42a_SliceExpr> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type95_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdeea965_StructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_any_type95_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1cdeea965_StructLitExprModel> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type96_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdeeeace_StructStaticIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_any_type96_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1cdeeeace_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type97_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdeedd97_TraitSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_any_type97_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1cdeedd97_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type98_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdeee738_StructSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_any_type98_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1cdeee738_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type99_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdeed281_MapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_any_type99_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1cdeed281_MapExprModel> &other) { return any.type == &__jule_any_type99 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type100_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdeec901_AnonFnExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_any_type100_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1cdeec901_AnonFnExprModel> &other) { return any.type == &__jule_any_type100 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type101_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdec618d_RangeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_any_type101_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1cdec618d_RangeExpr> &other) { return any.type == &__jule_any_type101 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type102_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdec6d5e_LitExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_any_type102_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1cdec6d5e_LitExpr> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type103_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdec7238_UnsafeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_any_type103_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1cdec7238_UnsafeExpr> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type104_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdeccd87_IndexingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_any_type104_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1cdeccd87_IndexingExpr> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type105_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdecd4e7_SlicingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_any_type105_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1cdecd4e7_SlicingExpr> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type106_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdec8734_CastExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_any_type106_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1cdec8734_CastExpr> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type107_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdecae1d_StructLit>().dealloc(); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_any_type107_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1cdecae1d_StructLit> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type108_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdecb3c4_BraceLit>().dealloc(); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_any_type108_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1cdecb3c4_BraceLit> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type109_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdec948d_BinaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_any_type109_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1cdec948d_BinaryExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type110_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdeea091_UnaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_any_type110_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1cdeea091_UnaryExprModel> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type111_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdee9bb7_BinaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_any_type111_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1cdee9bb7_BinaryExprModel> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type112_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdeeac62_AllocStructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_any_type112_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1cdeeac62_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type113_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce000e32_BuiltinNewCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_any_type113_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1ce000e32_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type114_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce001c68_BuiltinMakeCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_any_type114_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1ce001c68_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type115_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce00243e_BuiltinLenCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_any_type115_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1ce00243e_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type116_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce00273b_BuiltinCapCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_any_type116_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1ce00273b_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type116 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type117_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce003a6c_SizeofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_any_type117_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1ce003a6c_SizeofExprModel> &other) { return any.type == &__jule_any_type117 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type118_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce003c59_AlignofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_any_type118_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1ce003c59_AlignofExprModel> &other) { return any.type == &__jule_any_type118 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type119_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce0042ed_IntegratedToStrExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_any_type119_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1ce0042ed_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type120_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce245dad_ExceptionalForwardingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_any_type120_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1ce245dad_ExceptionalForwardingExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type121_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce248795_StrRuneIter>().dealloc(); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_any_type121_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1ce248795_StrRuneIter> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type122_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce247486_MutSlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_any_type122_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1ce247486_MutSlicingExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type123_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce247ee2_PushToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_any_type123_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1ce247ee2_PushToSliceExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type124_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce2483bb_AppendToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_any_type124_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1ce2483bb_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type125_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce246232_SwapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_any_type125_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1ce246232_SwapExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type126_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce24660b_EmptyCompareExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_any_type126_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1ce24660b_EmptyCompareExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type127_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce246e03_StrCompExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_any_type127_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1ce246e03_StrCompExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type128_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce247783_UnsafeBinaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_any_type128_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1ce247783_UnsafeBinaryExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type129_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce248a92_UnsafeDerefExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_any_type129_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_1ce248a92_UnsafeDerefExprModel> &other) { return any.type == &__jule_any_type129 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type130_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce246980_RefExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_any_type130_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_1ce246980_RefExprModel> &other) { return any.type == &__jule_any_type130 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type131_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1cdeea5be_StructArgExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_any_type131_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::Ptr<_1cdeea5be_StructArgExprModel> &other) { return any.type == &__jule_any_type131 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type132_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce248d8e_UnsafeCastingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_any_type132_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::Ptr<_1ce248d8e_UnsafeCastingExprModel> &other) { return any.type == &__jule_any_type132 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type133_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ce247b18_UnsafeIndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_any_type133_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::Ptr<_1ce247b18_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type133 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type134_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
jule::Bool __jule_any_type134_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other); }
jule::Str __jule_any_type134_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_any_type134_dealloc, .eq=__jule_any_type134_eq, .to_str=__jule_any_type134_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type134 && __jule_any_type134_eq(any.data.alloc, (void*)&other); }
void __jule_any_type135_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
jule::Bool __jule_any_type135_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other); }
jule::Str __jule_any_type135_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_any_type135_dealloc, .eq=__jule_any_type135_eq, .to_str=__jule_any_type135_to_str};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type135 && __jule_any_type135_eq(any.data.alloc, (void*)&other); }
void __jule_any_type136_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
jule::Bool __jule_any_type136_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other); }
jule::Str __jule_any_type136_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_any_type136_dealloc, .eq=__jule_any_type136_eq, .to_str=__jule_any_type136_to_str};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type136 && __jule_any_type136_eq(any.data.alloc, (void*)&other); }
void __jule_any_type137_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
jule::Bool __jule_any_type137_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other); }
jule::Str __jule_any_type137_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type137{.dealloc=__jule_any_type137_dealloc, .eq=__jule_any_type137_eq, .to_str=__jule_any_type137_to_str};
jule::Bool __jule_any_type137_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type137 && __jule_any_type137_eq(any.data.alloc, (void*)&other); }
void __jule_any_type138_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
jule::Bool __jule_any_type138_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other); }
jule::Str __jule_any_type138_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type138{.dealloc=__jule_any_type138_dealloc, .eq=__jule_any_type138_eq, .to_str=__jule_any_type138_to_str};
jule::Bool __jule_any_type138_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type138 && __jule_any_type138_eq(any.data.alloc, (void*)&other); }
void __jule_any_type139_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
jule::Bool __jule_any_type139_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other); }
jule::Str __jule_any_type139_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type139{.dealloc=__jule_any_type139_dealloc, .eq=__jule_any_type139_eq, .to_str=__jule_any_type139_to_str};
jule::Bool __jule_any_type139_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type139 && __jule_any_type139_eq(any.data.alloc, (void*)&other); }
jule::Array<jule::Array<jule::Str,2>,5> _22abdd85e_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str::lit("help", 4),jule::Str::lit("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str::lit("version", 7),jule::Str::lit("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str::lit("tool", 4),jule::Str::lit("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str::lit("julenv", 6),jule::Str::lit("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str::lit("mod", 3),jule::Str::lit("Module management", 17)})});
jule::Str _1b5ec0832_OutDir = jule::Str::lit("dist", 4);
jule::Str _1b5ec0b1d_OutName = jule::Str::lit("ir.cpp", 6);
jule::Str _1b5ec0dc6_Out = jule::Str();
jule::Str _2434dc398_Compiler = jule::Str();
jule::Str _2434dc5a7_CompilerPath = jule::Str();
jule::Str _2434dc7b6_CppStd = jule::Str::lit("cpp17", 5);
jule::Bool _2434dc9c5_Shadowing = false;
jule::Bool _2434dcbd4_Transpilation = false;
jule::Bool _2434dce6a_Test = false;
jule::Bool _2434dd223_RC = true;
jule::Bool _2434dd5db_Safety = true;
jule::Bool _2434dd82d_Production = false;
jule::Ptr<_22a83db0d_RangeTable> _22a7cb98b__L = jule::new_ptr<_22a83db0d_RangeTable>(_22a83db0d_RangeTable{._field_R16=jule::Slice<_22a83d15c_Range16>::make({_22a83d15c_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_22a83d15c_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_22a83d15c_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_22a83d15c_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_22a83d15c_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_22a83d15c_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_22a83d15c_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_22a83d15c_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_22a83d15c_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_22a83d15c_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_22a83d15c_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_22a83d15c_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_22a83d15c_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_22a83d15c_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_22a83d15c_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_22a83d15c_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_22a83d15c_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_22a83d15c_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_22a83d15c_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_22a83d15c_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_22a83d15c_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_22a83d15c_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_22a83d15c_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_22a83d15c_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_22a83d15c_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_22a83d15c_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_22a83d15c_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_22a83d15c_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_22a83d15c_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_22a83d15c_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_22a83d15c_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_22a83d15c_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_22a83d15c_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_22a83d15c_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_22a83d15c_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_22a83d15c_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_22a83d15c_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_22a83d15c_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_22a83d15c_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_22a83d15c_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_22a83d15c_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_22a83d15c_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_22a83d15c_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_22a83d15c_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_22a83d15c_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_22a83d15c_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_22a83d15c_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_22a83d15c_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_22a83d15c_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_22a83d15c_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_22a83d15c_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_22a83d15c_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_22a83d15c_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_22a83d15c_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_22a83d15c_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_22a83d15c_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_22a83d15c_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_22a83d15c_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_22a83d15c_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_22a83d15c_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_22a83d68a_Range32>::make({_22a83d68a_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_22a83d68a_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_22a83d68a_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_22a83d68a_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_22a83d68a_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_22a83d68a_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_22a83d68a_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_22a83d68a_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_22a83d68a_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_22a83d68a_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_22a83d68a_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_22a83d68a_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_22a83d68a_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_22a83d68a_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_22a83d68a_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_22a83d68a_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_22a83d68a_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_22a83d68a_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_22a83d68a_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_22a83d68a_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_22a83d68a_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_22a83d68a_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_22a83d68a_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_22a83d68a_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_22a83d68a_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_22a83d68a_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_22a83d68a_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_22a83d68a_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_22a83d68a_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_22a83d68a_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_22a83d68a_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_22a83d68a_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_22a83d68a_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_22a83d68a_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_22a83d68a_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_22a83d68a_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_22a83d68a_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_22a83d68a_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_22a83d68a_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_22a83d68a_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_22a83d68a_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_22a83d68a_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_22a83d68a_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_22a83db0d_RangeTable> _22a7cc89e__LU = jule::new_ptr<_22a83db0d_RangeTable>(_22a83db0d_RangeTable{._field_R16=jule::Slice<_22a83d15c_Range16>::make({_22a83d15c_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_22a83d15c_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_22a83d15c_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_22a83d15c_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_22a83d15c_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_22a83d15c_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_22a83d15c_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_22a83d15c_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_22a83d15c_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_22a83d15c_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_22a83d15c_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_22a83d15c_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_22a83d15c_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_22a83d15c_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_22a83d15c_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_22a83d15c_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_22a83d15c_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_22a83d68a_Range32>::make({_22a83d68a_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_22a83d68a_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_22a83d68a_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_22a83d68a_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_22a83d68a_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_22a83d68a_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_22a83d68a_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::U8,256> _22a83762e__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::U8,256> _22aaa215c_first = jule::Array<jule::U8,256>({});
jule::Array<_22aaa2712_acceptRange,16> _22aaa2aa8_acceptRanges = jule::Array<_22aaa2712_acceptRange,16>({_22aaa2712_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_22aaa2712_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_22aaa2712_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_22aaa2712_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_22aaa2712_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Str,4> _22a926d6c_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str::lit(".h", 2),jule::Str::lit(".hpp", 4),jule::Str::lit(".hxx", 4),jule::Str::lit(".hh", 3)});
jule::Array<jule::Str,3> _22a928b2c_CppExts = jule::Array<jule::Str,3>({jule::Str::lit(".cpp", 4),jule::Str::lit(".cc", 3),jule::Str::lit(".cxx", 4)});
jule::Array<jule::Str,1> _22a928d3b_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str::lit(".mm", 3)});
jule::Str _22abd9a25_PathStdlib = jule::Str();
jule::Str _22abd9d22_PathExec = jule::Str();
jule::Str _22abda0ca_PathWd = jule::Str();
jule::Str _22abda3c7_PathApi = jule::Str();
jule::Str _22abda680_Os = jule::Str::lit("linux", 5);
jule::Str _22abda938_Arch = jule::Str::lit("i386", 4);
jule::Array<jule::U8,32> _22bd9a454__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _22bd9a9e8__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_22bde008c_floatInfo _22bde0488_f32info = _22bde008c_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_22bde008c_floatInfo _22bde0785_f64info = _22bde008c_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _22bde8260_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I32> _22bdea075_powtab = jule::Slice<jule::I32>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _22bdeab36_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _22bdeae66_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _22bdee1bc_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_22be02e5c_leftCheat> _22be0338b_leftCheats = jule::Slice<_22be02e5c_leftCheat>::make({_22be02e5c_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_22be02e5c_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("5", 1)},_22be02e5c_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("25", 2)},_22be02e5c_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("125", 3)},_22be02e5c_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("625", 3)},_22be02e5c_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("3125", 4)},_22be02e5c_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("15625", 5)},_22be02e5c_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("78125", 5)},_22be02e5c_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("390625", 6)},_22be02e5c_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("1953125", 7)},_22be02e5c_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("9765625", 7)},_22be02e5c_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("48828125", 8)},_22be02e5c_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("244140625", 9)},_22be02e5c_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("1220703125", 10)},_22be02e5c_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("6103515625", 10)},_22be02e5c_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("30517578125", 11)},_22be02e5c_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("152587890625", 12)},_22be02e5c_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("762939453125", 12)},_22be02e5c_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("3814697265625", 13)},_22be02e5c_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("19073486328125", 14)},_22be02e5c_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("95367431640625", 14)},_22be02e5c_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("476837158203125", 15)},_22be02e5c_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("2384185791015625", 16)},_22be02e5c_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("11920928955078125", 17)},_22be02e5c_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("59604644775390625", 17)},_22be02e5c_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("298023223876953125", 18)},_22be02e5c_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("1490116119384765625", 19)},_22be02e5c_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("7450580596923828125", 19)},_22be02e5c_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("37252902984619140625", 20)},_22be02e5c_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("186264514923095703125", 21)},_22be02e5c_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("931322574615478515625", 21)},_22be02e5c_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("4656612873077392578125", 22)},_22be02e5c_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("23283064365386962890625", 23)},_22be02e5c_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("116415321826934814453125", 24)},_22be02e5c_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("582076609134674072265625", 24)},_22be02e5c_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("2910383045673370361328125", 25)},_22be02e5c_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("14551915228366851806640625", 26)},_22be02e5c_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("72759576141834259033203125", 26)},_22be02e5c_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("363797880709171295166015625", 27)},_22be02e5c_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("1818989403545856475830078125", 28)},_22be02e5c_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("9094947017729282379150390625", 28)},_22be02e5c_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("45474735088646411895751953125", 29)},_22be02e5c_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("227373675443232059478759765625", 30)},_22be02e5c_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("1136868377216160297393798828125", 31)},_22be02e5c_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("5684341886080801486968994140625", 31)},_22be02e5c_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("28421709430404007434844970703125", 32)},_22be02e5c_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("142108547152020037174224853515625", 33)},_22be02e5c_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("710542735760100185871124267578125", 33)},_22be02e5c_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("3552713678800500929355621337890625", 34)},_22be02e5c_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("17763568394002504646778106689453125", 35)},_22be02e5c_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("88817841970012523233890533447265625", 35)},_22be02e5c_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("444089209850062616169452667236328125", 36)},_22be02e5c_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("2220446049250313080847263336181640625", 37)},_22be02e5c_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("11102230246251565404236316680908203125", 38)},_22be02e5c_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("55511151231257827021181583404541015625", 38)},_22be02e5c_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("277555756156289135105907917022705078125", 39)},_22be02e5c_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("1387778780781445675529539585113525390625", 40)},_22be02e5c_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("6938893903907228377647697925567626953125", 40)},_22be02e5c_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("34694469519536141888238489627838134765625", 41)},_22be02e5c_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("173472347597680709441192448139190673828125", 42)},_22be02e5c_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str::lit("867361737988403547205962240695953369140625", 42)}});
jule::I32 _22be0943b_BitSize = 0LL;
jule::Str _22be09738_SysInt = jule::Str();
jule::Str _22be099e1_SysUint = jule::Str();
jule::Array<jule::I32,5> _210659e61_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::U32,6> _21065a24c_UnaryOps = jule::Array<jule::U32,6>({static_cast<jule::U32>(61LLU),static_cast<jule::U32>(60LLU),static_cast<jule::U32>(67LLU),static_cast<jule::U32>(68LLU),static_cast<jule::U32>(62LLU),static_cast<jule::U32>(65LLU)});
jule::Array<jule::U32,18> _1cdea53c0_BinOps = jule::Array<jule::U32,18>({static_cast<jule::U32>(60LLU),static_cast<jule::U32>(61LLU),static_cast<jule::U32>(62LLU),static_cast<jule::U32>(63LLU),static_cast<jule::U32>(64LLU),static_cast<jule::U32>(65LLU),static_cast<jule::U32>(66LLU),static_cast<jule::U32>(67LLU),static_cast<jule::U32>(56LLU),static_cast<jule::U32>(57LLU),static_cast<jule::U32>(69LLU),static_cast<jule::U32>(70LLU),static_cast<jule::U32>(53LLU),static_cast<jule::U32>(52LLU),static_cast<jule::U32>(54LLU),static_cast<jule::U32>(55LLU),static_cast<jule::U32>(50LLU),static_cast<jule::U32>(51LLU)});
jule::Array<jule::U32,2> _1cdea5997_PostfixOps = jule::Array<jule::U32,2>({static_cast<jule::U32>(58LLU),static_cast<jule::U32>(59LLU)});
jule::Array<jule::U32,11> _1cdea5c83_AssignOps = jule::Array<jule::U32,11>({static_cast<jule::U32>(71LLU),static_cast<jule::U32>(40LLU),static_cast<jule::U32>(41LLU),static_cast<jule::U32>(43LLU),static_cast<jule::U32>(42LLU),static_cast<jule::U32>(44LLU),static_cast<jule::U32>(46LLU),static_cast<jule::U32>(45LLU),static_cast<jule::U32>(49LLU),static_cast<jule::U32>(48LLU),static_cast<jule::U32>(47LLU)});
jule::Array<_1cdeb3da1_kindPair,28> _1cdeb42d0_keywords = jule::Array<_1cdeb3da1_kindPair,28>({_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("const", 5), ._field_id=static_cast<jule::U32>(6LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("ret", 3), ._field_id=static_cast<jule::U32>(2LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("type", 4), ._field_id=static_cast<jule::U32>(7LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("for", 3), ._field_id=static_cast<jule::U32>(9LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("break", 5), ._field_id=static_cast<jule::U32>(10LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("continue", 8), ._field_id=static_cast<jule::U32>(11LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("in", 2), ._field_id=static_cast<jule::U32>(12LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("if", 2), ._field_id=static_cast<jule::U32>(13LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("else", 4), ._field_id=static_cast<jule::U32>(14LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("use", 3), ._field_id=static_cast<jule::U32>(16LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("goto", 4), ._field_id=static_cast<jule::U32>(18LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("enum", 4), ._field_id=static_cast<jule::U32>(20LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("struct", 6), ._field_id=static_cast<jule::U32>(21LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("co", 2), ._field_id=static_cast<jule::U32>(22LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("match", 5), ._field_id=static_cast<jule::U32>(23LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("self", 4), ._field_id=static_cast<jule::U32>(24LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("trait", 5), ._field_id=static_cast<jule::U32>(25LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("impl", 4), ._field_id=static_cast<jule::U32>(26LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("cpp", 3), ._field_id=static_cast<jule::U32>(27LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("fall", 4), ._field_id=static_cast<jule::U32>(28LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("fn", 2), ._field_id=static_cast<jule::U32>(29LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("let", 3), ._field_id=static_cast<jule::U32>(30LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("unsafe", 6), ._field_id=static_cast<jule::U32>(31LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("mut", 3), ._field_id=static_cast<jule::U32>(32LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("defer", 5), ._field_id=static_cast<jule::U32>(33LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("static", 6), ._field_id=static_cast<jule::U32>(34LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("error", 5), ._field_id=static_cast<jule::U32>(36LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("map", 3), ._field_id=static_cast<jule::U32>(37LLU)}});
jule::Array<_1cdeb3da1_kindPair,46> _1cdeb4610_basicOps = jule::Array<_1cdeb3da1_kindPair,46>({_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("::", 2), ._field_id=static_cast<jule::U32>(19LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit(":=", 2), ._field_id=static_cast<jule::U32>(38LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit(":", 1), ._field_id=static_cast<jule::U32>(8LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit(";", 1), ._field_id=static_cast<jule::U32>(3LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit(",", 1), ._field_id=static_cast<jule::U32>(5LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("...", 3), ._field_id=static_cast<jule::U32>(39LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit(".", 1), ._field_id=static_cast<jule::U32>(17LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("+=", 2), ._field_id=static_cast<jule::U32>(40LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("-=", 2), ._field_id=static_cast<jule::U32>(41LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("*=", 2), ._field_id=static_cast<jule::U32>(42LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("/=", 2), ._field_id=static_cast<jule::U32>(43LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("%=", 2), ._field_id=static_cast<jule::U32>(44LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("<<=", 3), ._field_id=static_cast<jule::U32>(45LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit(">>=", 3), ._field_id=static_cast<jule::U32>(46LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("^=", 2), ._field_id=static_cast<jule::U32>(47LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("&=", 2), ._field_id=static_cast<jule::U32>(48LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("|=", 2), ._field_id=static_cast<jule::U32>(49LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("==", 2), ._field_id=static_cast<jule::U32>(50LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("!=", 2), ._field_id=static_cast<jule::U32>(51LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit(">=", 2), ._field_id=static_cast<jule::U32>(52LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("<=", 2), ._field_id=static_cast<jule::U32>(53LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("&&", 2), ._field_id=static_cast<jule::U32>(54LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("||", 2), ._field_id=static_cast<jule::U32>(55LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("<<", 2), ._field_id=static_cast<jule::U32>(56LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit(">>", 2), ._field_id=static_cast<jule::U32>(57LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("++", 2), ._field_id=static_cast<jule::U32>(58LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("--", 2), ._field_id=static_cast<jule::U32>(59LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("+", 1), ._field_id=static_cast<jule::U32>(60LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("-", 1), ._field_id=static_cast<jule::U32>(61LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("*", 1), ._field_id=static_cast<jule::U32>(62LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("/", 1), ._field_id=static_cast<jule::U32>(63LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("%", 1), ._field_id=static_cast<jule::U32>(64LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("&", 1), ._field_id=static_cast<jule::U32>(65LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("|", 1), ._field_id=static_cast<jule::U32>(66LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("^", 1), ._field_id=static_cast<jule::U32>(67LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("!", 1), ._field_id=static_cast<jule::U32>(68LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("<", 1), ._field_id=static_cast<jule::U32>(69LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit(">", 1), ._field_id=static_cast<jule::U32>(70LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("=", 1), ._field_id=static_cast<jule::U32>(71LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("#", 1), ._field_id=static_cast<jule::U32>(35LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("{", 1), ._field_id=static_cast<jule::U32>(72LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("}", 1), ._field_id=static_cast<jule::U32>(73LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("[", 1), ._field_id=static_cast<jule::U32>(76LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("]", 1), ._field_id=static_cast<jule::U32>(77LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit("(", 1), ._field_id=static_cast<jule::U32>(74LLU)},_1cdeb3da1_kindPair{._field_kind=jule::Str::lit(")", 1), ._field_id=static_cast<jule::U32>(75LLU)}});
jule::Slice<jule::Str> _1ce0416d1_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str::lit("signed", 6),jule::Str::lit("unsigned", 8),jule::Str::lit("float", 5),jule::Str::lit("numeric", 7),jule::Str::lit("mutable", 7),jule::Str::lit("immutable", 9),jule::Str::lit("ordered", 7),jule::Str::lit("comparable", 10)});
jule::Ptr<_1ce14cbc7_TypeKind> _1ce234a39_primNil = jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=nullptr});
jule::Ptr<_1ce14cbc7_TypeKind> _1ce234d36_primVoid = jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(_1ce169ae5_buildPrimType(jule::Str::lit("void", 4)), 20)});
jule::Ptr<_1ce14cbc7_TypeKind> _1ce2350de_primAny = jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(_1ce169ae5_buildPrimType(jule::Str::lit("any", 3)), 20)});
jule::Ptr<_1ce14cbc7_TypeKind> _1ce2353db_primStr = jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(_1ce169ae5_buildPrimType(jule::Str::lit("str", 3)), 20)});
jule::Ptr<_1ce14cbc7_TypeKind> _1ce235694_primBool = jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(_1ce169ae5_buildPrimType(jule::Str::lit("bool", 4)), 20)});
jule::Ptr<_1ce14cbc7_TypeKind> _1ce23594c_primUintptr = jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(_1ce169ae5_buildPrimType(jule::Str::lit("uintptr", 7)), 20)});
jule::Ptr<_1ce14cbc7_TypeKind> _1ce235c05_primUint = jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(_1ce169ae5_buildPrimType(jule::Str::lit("uint", 4)), 20)});
jule::Ptr<_1ce14cbc7_TypeKind> _1ce2360bd_primInt = jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(_1ce169ae5_buildPrimType(jule::Str::lit("int", 3)), 20)});
jule::Ptr<_1ce14cbc7_TypeKind> _1ce236310_primI8 = jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(_1ce169ae5_buildPrimType(jule::Str::lit("i8", 2)), 20)});
jule::Ptr<_1ce14cbc7_TypeKind> _1ce2365a7_primI16 = jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(_1ce169ae5_buildPrimType(jule::Str::lit("i16", 3)), 20)});
jule::Ptr<_1ce14cbc7_TypeKind> _1ce236860_primI32 = jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(_1ce169ae5_buildPrimType(jule::Str::lit("i32", 3)), 20)});
jule::Ptr<_1ce14cbc7_TypeKind> _1ce236b18_primI64 = jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(_1ce169ae5_buildPrimType(jule::Str::lit("i64", 3)), 20)});
jule::Ptr<_1ce14cbc7_TypeKind> _1ce236dc1_primU8 = jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(_1ce169ae5_buildPrimType(jule::Str::lit("u8", 2)), 20)});
jule::Ptr<_1ce14cbc7_TypeKind> _1ce237179_primU16 = jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(_1ce169ae5_buildPrimType(jule::Str::lit("u16", 3)), 20)});
jule::Ptr<_1ce14cbc7_TypeKind> _1ce237432_primU32 = jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(_1ce169ae5_buildPrimType(jule::Str::lit("u32", 3)), 20)});
jule::Ptr<_1ce14cbc7_TypeKind> _1ce23791b_primU64 = jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(_1ce169ae5_buildPrimType(jule::Str::lit("u64", 3)), 20)});
jule::Ptr<_1ce14cbc7_TypeKind> _1ce237b5d_primF32 = jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(_1ce169ae5_buildPrimType(jule::Str::lit("f32", 3)), 20)});
jule::Ptr<_1ce14cbc7_TypeKind> _1ce237d6c_primF64 = jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(_1ce169ae5_buildPrimType(jule::Str::lit("f64", 3)), 20)});
jule::Ptr<_1ce2625e4_data> _1ce261bed_emptyData = jule::new_ptr<_1ce2625e4_data>();
jule::Bool _1ce266b7b_Copy = false;
jule::Bool _1ce266e78_Deadcode = false;
jule::Bool _1ce267231_Append = false;
jule::Bool _1ce26752d_Math = false;
jule::Bool _1ce2677d6_Access = false;
jule::Bool _1ce267a8e_Inline = false;
jule::Bool _1ce267d47_Ptr = false;
jule::Bool _1ce268210_Cond = false;
jule::Bool _1ce268452_Str = false;
jule::Bool _1ce2686e9_Slice = false;
jule::Bool _1ce2689a2_Assign = false;
jule::Bool _1ce268c5a_Exceptional = false;
jule::Bool _1ce269013_Iter = false;
jule::Bool _1ce2692bb_Dynamic = false;
jule::Bool _1b5936155_exprEnabled = false;
jule::Bool _1b593641e_scopeEnabled = false;
jule::Array<jule::U64,12> _1b62831cc_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _1b61add0b_assignArgName = jule::Str::lit("__jule_assign_arg", 17);
jule::Ptr<_22a83db0d_RangeTable> _22a7d9b53_Upper = _22a7cc89e__LU;
jule::Ptr<_22a83db0d_RangeTable> _22a7d3883_Letter = _22a7cb98b__L;



std::ostream &operator<<(std::ostream &_Stream, _22a83d15c_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _22a83d68a_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _22a83db0d_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _22aaa2712_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline _22ab0b88c_StrBuilder static__22ab0bb56_New(jule::I32 _1519_cap) {
	if ((_1519_cap < 0LL)) {
		jule::panic(jule::Str::lit("std::strings: StrBuilder.New: cap < 0", 37) + jule::Str("\nlocation: std/internal/strings/builder.jule:17:13"));;
	};
	return _22ab0b88c_StrBuilder{._field_buf=jule::Slice<jule::U8>::alloc(0LL, _1519_cap, 0)};;
}



inline void _22ab15214_Write(_22ab0b88c_StrBuilder* _self_, jule::Slice<jule::U8> _2524_b) {
	((*(_self_))._field_buf).append(_2524_b);;
}



inline void _22ab154bc_WriteStr(_22ab0b88c_StrBuilder* _self_, jule::Str _3027_s) {
	((*(_self_))._field_buf).append(_3027_s);;
}



inline void _22ab15775_WriteByte(_22ab0b88c_StrBuilder* _self_, jule::U8 _3528_b) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(_3528_b); };
}



inline jule::Str _22ab15cb4_Str(_22ab0b88c_StrBuilder* _self_) {
	jule::Str _5013_s = _243a89e1d_StrFromBytes((*(_self_))._field_buf);;
	_22ab15eb2_Clear(_self_);
	return _5013_s;;
}



inline void _22ab15eb2_Clear(_22ab0b88c_StrBuilder* _self_) {
	(*(_self_))._field_buf=nullptr;
}



inline jule::I32 _22ab16248_Len(_22ab0b88c_StrBuilder* _self_) {
	return (*(_self_))._field_buf.len();;
}



inline jule::Slice<jule::U8> _22ab16765_Buf(_22ab0b88c_StrBuilder* _self_) {
	return (*(_self_))._field_buf;;
}



inline void _22ab16a1d_SetBuf(_22ab0b88c_StrBuilder* _self_, jule::Slice<jule::U8> _7736_buf) {
	(*(_self_))._field_buf=_7736_buf;
}





std::ostream &operator<<(std::ostream &_Stream, _22ab0b88c_StrBuilder _Src) {
	_Stream << "StrBuilder{";
	_Stream << "buf:" << _Src._field_buf;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _22ab17689_index(_22ab17238_lazyBuff* _self_, jule::I32 _5524_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5524_i];;
	};
	return (*(_self_))._field_path[_5524_i];;
}



inline void _22ab17942_append(_22ab17238_lazyBuff* _self_, jule::U8 _6225_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6225_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len(), 0);
		jule::copy((*(_self_))._field_buff, (*(_self_))._field_path.slice(0LL, (*(_self_))._field_w));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6225_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _22ab17bc8_string(_22ab17238_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + _243a89b54_BytesStr((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}





std::ostream &operator<<(std::ostream &_Stream, _22ab17238_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2439c6321_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_2439c6321_DirEntry>>> static__22ab1b9bd_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_2439c6321_DirEntry>> __jule_func_result;
	jule::Slice<jule::U8> _169_s = _243982eae_StrToBytes(_1520_path);;
	DIR* _1713_dir = _2439938b5_Opendir((&(_169_s[0LL])));;
	if ((_1713_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_2439c6321_DirEntry>>>{.error=jule::Any(_2439c4693_getLastFsError(), &__jule_any_type0)};
	};
	for (;;) {
		{
			struct dirent* _2213_dirent = _243993a91_Readdir(_1713_dir);;
			if ((_2213_dirent == nullptr)) {
				goto _iter_end_1b701e7a3;
			};
			jule::Str _2613_name = _243982c28_BytePtrToStr(((jule::U8*)((*(_2213_dirent)).d_name)));;
			jule::Ptr<_2439ca2d1_Status> _2717_stat = ({
				auto except = static__2439c6e6a_Of(_22ab189a9_Join(jule::Slice<jule::Str>::make({_1520_path,_2613_name})));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_2439c6321_DirEntry>>>{.error=except.error};
				} jule::Ptr<_2439ca2d1_Status>(nullptr);});
			});;
			{ jule::Slice<jule::Ptr<_2439c6321_DirEntry>> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(jule::new_ptr<_2439c6321_DirEntry>(_2439c6321_DirEntry{._field_Name=_2613_name, ._field_Stat=_2717_stat})); };
		}
	_iter_next_1b701e7a3:;
	}
	_iter_end_1b701e7a3:;;
	_243993d38_Closedir(_1713_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_2439c6321_DirEntry>>>{.result=__jule_func_result};;
}



inline jule::VoidExceptional static__22ab1bbee_Create(jule::Str _4022_path) {
	jule::Slice<jule::U8> _449_s = _243982eae_StrToBytes(_4022_path);;
	if ((_243994740_Mkdir((&(_449_s[0LL])), 448LL) != 0LL)) {
		return jule::VoidExceptional{.error=jule::Any(_2439c4693_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional static__22ab1be30_Remove(jule::Str _5322_path) {
	jule::Slice<jule::U8> _549_s = _243982eae_StrToBytes(_5322_path);;
	if ((_243994a09_Rmdir((&(_549_s[0LL]))) != 0LL)) {
		return jule::VoidExceptional{.error=jule::Any(_2439c4693_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}





std::ostream &operator<<(std::ostream &_Stream, _2439c65a7_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_2439c81e1_File>> static__2439c5243_Open(jule::Str _1920_path, jule::I32 _1931_flag, jule::I32 _1944_mode) {
	jule::Slice<jule::U8> _209_s = _243982eae_StrToBytes(_1920_path);;
	jule::I32 _219_handle = _243993046_Open((&(_209_s[0LL])), _1931_flag, _1944_mode);;
	if ((_219_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_2439c81e1_File>>{.error=jule::Any(_2439c4693_getLastFsError(), &__jule_any_type0)};
	};
	return jule::Exceptional<jule::Ptr<_2439c81e1_File>>{.result=static__2439c860e_New(static_cast<jule::Uintptr>(_219_handle))};;
}



inline jule::VoidExceptional static__2439c5474_Remove(jule::Str _3222_path) {
	jule::Slice<jule::U8> _339_s = _243982eae_StrToBytes(_3222_path);;
	if ((_243994cc3_Unlink((&(_339_s[0LL]))) != 0LL)) {
		return jule::VoidExceptional{.error=jule::Any(_2439c4693_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I32> _2439c5908_Write(_2439c81e1_File* _self_, jule::Slice<jule::U8> _4724_buf) {
	jule::I32 __jule_func_result = 0;
	if ((_4724_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
	};
	__jule_func_result=_2439be490_Write(static_cast<jule::I32>((*(_self_))._field_handle), (&(_4724_buf[0LL])), static_cast<jule::U32>(_4724_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I32>{.error=jule::Any(_2439c4693_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
}



inline jule::Exceptional<jule::I32> _2439c5c49_Read(_2439c81e1_File* _self_, jule::Slice<jule::U8> _6727_buf) {
	jule::I32 __jule_func_result = 0;
	if ((_6727_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
	};
	__jule_func_result=_2439bdc0e_Read(static_cast<jule::I32>((*(_self_))._field_handle), (&(_6727_buf[0LL])), static_cast<jule::U32>(_6727_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I32>{.error=jule::Any(_2439c4693_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
}



inline jule::Ptr<_2439c81e1_File> static__2439c860e_New(jule::Uintptr _4519_handle) {
	return jule::new_ptr<_2439c81e1_File>(_2439c81e1_File{._field_handle=_4519_handle});;
}



inline jule::Exceptional<jule::Ptr<_2439c81e1_File>> static__2439c88c8_Create(jule::Str _5522_path) {
	return static__2439c5243_Open(_5522_path, static_cast<jule::I32>(578LL), 438LL);
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__2439c8b92_Read(jule::Str _6720_path) {
	jule::Ptr<_2439ca2d1_Status> _689_s = ({
		auto except = static__2439c6e6a_Of(_6720_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_2439ca2d1_Status>(nullptr);});
	});;
	if ((!(_2439ca941_IsReg(_689_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>{.error=jule::Any(static_cast<jule::I32>(14LL), &__jule_any_type0)};
	};
	if ((_2439cabc7_Size(_689_s) == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>{.result=jule::Slice<jule::U8>::alloc(0LL, 0LL, 0)};;
	};
	jule::Ptr<_2439c81e1_File> _7813_f = ({
		auto except = static__2439c5243_Open(_6720_path, static_cast<jule::I32>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_2439c81e1_File>(nullptr);});
	});;
	__JULE_DEFER({
		({
			auto except = _2439c9775_Close(_7813_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});;
	jule::Slice<jule::U8> _8113_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I32>(_2439cabc7_Size(_689_s)), static_cast<jule::I32>(_2439cabc7_Size(_689_s)), 0);;
	jule::I32 _829_n = ({
		auto except = _2439c5c49_Read(_7813_f, _8113_buff);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} 0;});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>{.result=_8113_buff.slice(0LL, _829_n)};;
}



inline jule::VoidExceptional static__2439c9038_Write(jule::Str _9121_path, jule::Slice<jule::U8> _9132_data, jule::I32 _9146_perm) {
	jule::Ptr<_2439c81e1_File> _9213_f = ({
		auto except = static__2439c5243_Open(_9121_path, static_cast<jule::I32>(577LL), _9146_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Ptr<_2439c81e1_File>(nullptr);});
	});;
	({
		auto except = _2439c5908_Write(_9213_f.ptr(), _9132_data);
		if (!except.ok()) {
			return jule::VoidExceptional{.error=std::move(except.error)};
		}
	});
	return _2439c9775_Close(_9213_f);
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _2439c9775_Close(_2439c81e1_File* _self_) {
	if ((_2439be0d8_Close(static_cast<jule::I32>((*(_self_))._field_handle)) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(_2439c4693_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}





std::ostream &operator<<(std::ostream &_Stream, _2439c81e1_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_2439ca2d1_Status>> static__2439c6e6a_Of(jule::Str _1218_path) {
	if ((_1218_path).empty()) {
		return jule::Exceptional<jule::Ptr<_2439ca2d1_Status>>{.error=jule::Any(static_cast<jule::I32>(4LL), &__jule_any_type0)};
	};
	struct stat _1613_handle = (struct stat){};;
	jule::Slice<jule::U8> _179_s = _243982eae_StrToBytes(_1218_path);;
	jule::I32 _189_code = _243992b17_Stat((&(_179_s[0LL])), (&(_1613_handle)));;
	if ((_189_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_2439ca2d1_Status>>{.error=jule::Any(_2439c4693_getLastFsError(), &__jule_any_type0)};
	};
	jule::Ptr<_2439ca2d1_Status> _2213_stat = jule::new_ptr<_2439ca2d1_Status>();;
	(*_2213_stat.alloc)._field_size=_1613_handle.st_size;
	if (((_1613_handle.st_mode & 16384LLU) == 16384LLU)) {
		(*_2213_stat.alloc)._field_mode|=static_cast<jule::I32>(1LL);
	} else if (((_1613_handle.st_mode & 32768LLU) == 32768LLU)) {
		(*_2213_stat.alloc)._field_mode|=static_cast<jule::I32>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_2439ca2d1_Status>>{.result=_2213_stat};;
}



inline jule::Bool _2439ca6aa_IsDir(_2439ca2d1_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL));;
}



inline jule::Bool _2439ca941_IsReg(_2439ca2d1_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I32>(2LL)) == static_cast<jule::I32>(2LL));;
}



inline jule::U32 _2439cabc7_Size(_2439ca2d1_Status* _self_) {
	return (*(_self_))._field_size;;
}





std::ostream &operator<<(std::ostream &_Stream, _2439ca2d1_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _22abd6dc9_cmdAttrs _Src) {
	_Stream << "cmdAttrs{";
	_Stream << "pid:" << _Src._field_pid;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _22a93672d_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _22bde008c_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _22bde0c19_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _22be02e5c_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _22bdea3a5_set(_22be03974_decimal* _self_, jule::Slice<jule::U8> _23822_s) {
	jule::Bool __jule_func_result = false;
	jule::I32 _23913_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_23913_i >= _23822_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23822_s[_23913_i] == '+')) {
			_case_begin_1b773e9ea:;
			{
				(_23913_i)++;
			}
		}
		else if ((_23822_s[_23913_i] == '-')) {
			_case_begin_1b773eac7:;
			{
				(*(_self_))._field_neg=true;
				(_23913_i)++;
			}
		}
		_match_end_1b773e962:;
	};
	jule::Bool _25613_sawdot = false;;
	jule::Bool _25713_sawdigits = false;;
	for (; (_23913_i < _23822_s.len()); (_23913_i)++) {
		{
			{
				
				if ((_23822_s[_23913_i] == '_')) {
					_case_begin_1b7741502:;
					{
						goto _iter_next_1b7740dc5;
					}
				}
				else if ((_23822_s[_23913_i] == '.')) {
					_case_begin_1b774159b:;
					{
						if (_25613_sawdot) {
							return __jule_func_result;;
						};
						_25613_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1b7740dc5;
					}
				}
				else if ((('0' <= _23822_s[_23913_i]) && (_23822_s[_23913_i] <= '9'))) {
					_case_begin_1b7741612:;
					{
						_25713_sawdigits=true;
						if (((_23822_s[_23913_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1b7740dc5;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23822_s[_23913_i];
							((*(_self_))._field_nd)++;
						} else if ((_23822_s[_23913_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1b7740dc5;
					}
				}
				_match_end_1b77413d1:;
			};
			goto _iter_end_1b7740dc5;
		}
	_iter_next_1b7740dc5:;
	}
	_iter_end_1b7740dc5:;;
	if ((!(_25713_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_25613_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_23913_i < _23822_s.len()) && (_22bde58cd_lower(_23822_s[_23913_i]) == 'e'))) {
		(_23913_i)++;
		if ((_23913_i >= _23822_s.len())) {
			return __jule_func_result;;
		};
		jule::I32 _30217_esign = 1LL;;
		if ((_23822_s[_23913_i] == '+')) {
			(_23913_i)++;
		} else if ((_23822_s[_23913_i] == '-')) {
			(_23913_i)++;
			_30217_esign=-1LL;
		};
		if ((((_23913_i >= _23822_s.len()) || (_23822_s[_23913_i] < '0')) || (_23822_s[_23913_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I32 _31217_e = 0LL;;
		for (; ((_23913_i < _23822_s.len()) && ((('0' <= _23822_s[_23913_i]) && (_23822_s[_23913_i] <= '9')) || (_23822_s[_23913_i] == '_'))); (_23913_i)++) {
			{
				if ((_23822_s[_23913_i] == '_')) {
					goto _iter_next_1b7746947;
				};
				if ((_31217_e < 10000LL)) {
					_31217_e=(((_31217_e * 10LL) + static_cast<jule::I32>(_23822_s[_23913_i])) - '0');
				};
			}
		_iter_next_1b7746947:;
		}
		_iter_end_1b7746947:;;
		(*(_self_))._field_dp+=(_31217_e * _30217_esign);
	};
	if ((_23913_i != _23822_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _22bdea6e6_floatBits(_22be03974_decimal* _self_, _22bde008c_floatInfo* _33229_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _33313_exp = 0LL;;
	jule::U64 _33413_mant = static_cast<jule::U64>(0LLU);;
	if (((*(_self_))._field_nd == 0LL)) {
		_33413_mant=0LLU;
		_33313_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_1b7757309;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_1b774d1ac;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_33413_mant=0LLU;
		_33313_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_1b7757309;
	};
	_33313_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I32 _35917_n = 0LL;;
			if (((*(_self_))._field_dp >= _22bdea075_powtab.len())) {
				_35917_n=27LL;
			} else {
				_35917_n=_22bdea075_powtab[(*(_self_))._field_dp];
			};
			_22be040d4_shift(_self_, (-(_35917_n)));
			_33313_exp+=_35917_n;
		}
	_iter_next_1b774d135:;
	}
	_iter_end_1b774d135:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I32 _36917_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _22bdea075_powtab.len())) {
				_36917_n=27LL;
			} else {
				_36917_n=_22bdea075_powtab[(-((*(_self_))._field_dp))];
			};
			_22be040d4_shift(_self_, _36917_n);
			_33313_exp-=_36917_n;
		}
	_iter_next_1b774da09:;
	}
	_iter_end_1b774da09:;;
	(_33313_exp)--;
	if ((_33313_exp < ((*(_33229_flt))._field_bias + 1LL))) {
		jule::I32 _38613_n = (((*(_33229_flt))._field_bias + 1LL) - _33313_exp);;
		_22be040d4_shift(_self_, (-(_38613_n)));
		_33313_exp+=_38613_n;
	};
	if (((_33313_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I32>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
		goto _julec_label_1b774d1ac;
	};
	_22be040d4_shift(_self_, static_cast<jule::I32>((1LL + (*(_33229_flt))._field_mantbits)));
	_33413_mant=_22be04b84_roundedInteger(_self_);
	if ((_33413_mant == (2LLU << (*(_33229_flt))._field_mantbits))) {
		_33413_mant>>=1LLU;
		(_33313_exp)++;
		if (((_33313_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I32>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
			goto _julec_label_1b774d1ac;
		};
	};
	if (((_33413_mant & (1LLU << (*(_33229_flt))._field_mantbits)) == 0LLU)) {
		_33313_exp=(*(_33229_flt))._field_bias;
	};
	goto _julec_label_1b7757309;
	_julec_label_1b774d1ac:;
	_33413_mant=0LLU;
	_33313_exp=static_cast<jule::I32>((((static_cast<jule::U32>(1LLU) << (*(_33229_flt))._field_expbits) - 1LLU) + static_cast<jule::U32>((*(_33229_flt))._field_bias)));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_1b7757309:;
	jule::U64 _42213_bits = (_33413_mant & ((1LLU << (*(_33229_flt))._field_mantbits) - 1LLU));;
	_42213_bits|=(static_cast<jule::U64>(((_33313_exp - (*(_33229_flt))._field_bias) & static_cast<jule::I32>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) << (*(_33229_flt))._field_mantbits);
	if ((*(_self_))._field_neg) {
		_42213_bits|=((1LLU << (*(_33229_flt))._field_mantbits) << (*(_33229_flt))._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _42213_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _22be03d2b_assign(_22be03974_decimal* _self_, jule::U64 _15129_v) {
	jule::Array<jule::U8,24> _15217_buf = jule::Array<jule::U8,24>(0);;
	jule::I32 _15513_n = 0LL;;
	while ((_15129_v > 0LLU)) {
		{
			jule::U64 _15713_v1 = (_15129_v / 10LLU);;
			_15129_v-=(10LLU * _15713_v1);
			_15217_buf[_15513_n]=static_cast<jule::U8>((_15129_v + '0'));
			(_15513_n)++;
			_15129_v=_15713_v1;
		}
	_iter_next_1b775a21e:;
	}
	_iter_end_1b775a21e:;;
	(*(_self_))._field_nd=0LL;
	(_15513_n)--;
	for (; (_15513_n >= 0LL); (_15513_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15217_buf[_15513_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1b775b8b3:;
	}
	_iter_end_1b775b8b3:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_22be052c2_trim(_self_);
}



inline void _22be040d4_shift(_22be03974_decimal* _self_, jule::I32 _17628_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1b775ccd2:;
		}
		else if ((_17628_k > 0LL)) {
			_case_begin_1b775cd7b:;
			{
				while ((_17628_k > 60LL)) {
					{
						_22be05d1c_leftShift(_self_, 60LLU);
						_17628_k-=60LL;
					}
				_iter_next_1b775d475:;
				}
				_iter_end_1b775d475:;;
				_22be05d1c_leftShift(_self_, static_cast<jule::U32>(_17628_k));
			}
		}
		else if ((_17628_k < 0LL)) {
			_case_begin_1b775cde2:;
			{
				while ((_17628_k < -60LL)) {
					{
						_22be055ad_rightShift(_self_, 60LLU);
						_17628_k+=60LL;
					}
				_iter_next_1b775e6c9:;
				}
				_iter_end_1b775e6c9:;;
				_22be055ad_rightShift(_self_, static_cast<jule::U32>((-(_17628_k))));
			}
		}
		_match_end_1b775cb7d:;
	};
}



inline void _22be0438c_roundDown(_22be03974_decimal* _self_, jule::I32 _19628_nd) {
	if (((_19628_nd < 0LL) || (_19628_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19628_nd;
	_22be052c2_trim(_self_);
}



inline void _22be04645_roundUp(_22be03974_decimal* _self_, jule::I32 _20526_nd) {
	if (((_20526_nd < 0LL) || (_20526_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I32 _21113_i = (_20526_nd - 1LL);;
	for (; (_21113_i >= 0LL); (_21113_i)--) {
		{
			jule::U8 _21313_c = (*(_self_))._field_d[_21113_i];;
			if ((_21313_c < '9')) {
				((*(_self_))._field_d[_21113_i])++;
				(*(_self_))._field_nd=(_21113_i + 1LL);
				return;;
			};
		}
	_iter_next_1b7761dc4:;
	}
	_iter_end_1b7761dc4:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _22be048ed_round(_22be03974_decimal* _self_, jule::I32 _23224_nd) {
	if (((_23224_nd < 0LL) || (_23224_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_22be06191_shouldRoundUp(_self_, _23224_nd)) {
		_22be04645_roundUp(_self_, _23224_nd);
	} else {
		_22be0438c_roundDown(_self_, _23224_nd);
	};
}



inline jule::U64 _22be04b84_roundedInteger(_22be03974_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I32 _24913_i = 0LL;;
	jule::U64 _25013_n = static_cast<jule::U64>(0LLU);;
	for (; ((_24913_i < (*(_self_))._field_dp) && (_24913_i < (*(_self_))._field_nd)); (_24913_i)++) {
		{
			_25013_n=((_25013_n * 10LLU) + static_cast<jule::U64>(((*(_self_))._field_d[_24913_i] - '0')));
		}
	_iter_next_1b7764822:;
	}
	_iter_end_1b7764822:;;
	for (; (_24913_i < (*(_self_))._field_dp); (_24913_i)++) {
		{
			_25013_n*=10LLU;
		}
	_iter_next_1b77660a4:;
	}
	_iter_end_1b77660a4:;;
	if (_22be06191_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_25013_n)++;
	};
	return _25013_n;;
}





std::ostream &operator<<(std::ostream &_Stream, _22be03974_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_22be1616d_Const> static__22be165ad_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_22be1616d_Const>(_22be1616d_Const{._field_data=jule::Any(_1622_x, &__jule_any_type1)});;
}



inline jule::Ptr<_22be1616d_Const> static__22be16877_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_22be1616d_Const>(_22be1616d_Const{._field_data=jule::Any(_1922_x, &__jule_any_type2)});;
}



inline jule::Ptr<_22be1616d_Const> static__22be16b41_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_22be1616d_Const>(_22be1616d_Const{._field_data=jule::Any(_2223_x, &__jule_any_type3)});;
}



inline jule::Ptr<_22be1616d_Const> static__22be16e0a_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_22be1616d_Const>(_22be1616d_Const{._field_data=jule::Any(_2522_x, &__jule_any_type4)});;
}



inline jule::Ptr<_22be1616d_Const> static__22be171c4_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_22be1616d_Const>(_22be1616d_Const{._field_data=jule::Any(_2822_x, &__jule_any_type5)});;
}



inline jule::Ptr<_22be1616d_Const> static__22be173d3_NewNil(void) {
	return jule::new_ptr<_22be1616d_Const>(_22be1616d_Const{._field_data=nullptr});;
}



inline jule::I64 _22be17a43_ReadI64(_22be1616d_Const* _self_) {
	if ((!(_22be1a13e_IsI64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1);;
}



inline jule::U64 _22be17cc9_ReadU64(_22be1616d_Const* _self_) {
	if ((!(_22be1a3c5_IsU64(_self_)))) {
		return 0LLU;;
	};
	return (*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2);;
}



inline jule::Bool _22be18060_ReadBool(_22be1616d_Const* _self_) {
	if ((!(_22be1a65b_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type3);;
}



inline jule::Str _22be182e6_ReadStr(_22be1616d_Const* _self_) {
	if ((!(_22be1a8e2_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type4);;
}



inline jule::F64 _22be1857c_ReadF64(_22be1616d_Const* _self_) {
	if ((!(_22be1ab78_IsF64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5);;
}



inline jule::I64 _22be18813_AsI64(_22be1616d_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1b77d3297:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::I64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1b77d3066:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1b77d30cc:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1b77d2b15:;
			{
				return 0LL;;
			}
		}
		_match_end_1b77d2ab0:;
	};
}



inline jule::U64 _22be18a99_AsU64(_22be1616d_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1b77d3143:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::U64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1b77d485e:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1b77d48c5:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1b77d3594:;
			{
				return 0LLU;;
			}
		}
		_match_end_1b77d353e:;
	};
}



inline jule::F64 _22be18d30_AsF64(_22be1616d_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1b77d6388:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::F64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1b77d493b:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1b77d6157:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else {
			_case_begin_1b77d4d8c:;
			{
				return 0LL;;
			}
		}
		_match_end_1b77d4d37:;
	};
}



inline void _22be190d8_SetI64(_22be1616d_Const* _self_, jule::I64 _13825_x) {
	(*(_self_))._field_data=jule::Any(_13825_x, &__jule_any_type1);
}



inline void _22be19391_SetU64(_22be1616d_Const* _self_, jule::U64 _14125_x) {
	(*(_self_))._field_data=jule::Any(_14125_x, &__jule_any_type2);
}



inline void _22be19649_SetBool(_22be1616d_Const* _self_, jule::Bool _14426_x) {
	(*(_self_))._field_data=jule::Any(_14426_x, &__jule_any_type3);
}



inline void _22be19902_SetStr(_22be1616d_Const* _self_, jule::Str _14725_x) {
	(*(_self_))._field_data=jule::Any(_14725_x, &__jule_any_type4);
}



inline void _22be19baa_SetF64(_22be1616d_Const* _self_, jule::F64 _15025_x) {
	(*(_self_))._field_data=jule::Any(_15025_x, &__jule_any_type5);
}



inline jule::Bool _22be1a13e_IsI64(_22be1616d_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1b77d9c0a:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b77d9e80:;
			{
				return false;;
			}
		}
		_match_end_1b77d9e2a:;
	};
}



inline jule::Bool _22be1a3c5_IsU64(_22be1616d_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1b77da8a9:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b77da1c2:;
			{
				return false;;
			}
		}
		_match_end_1b77da16c:;
	};
}



inline jule::Bool _22be1a65b_IsBool(_22be1616d_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1b77db305:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b77dab84:;
			{
				return false;;
			}
		}
		_match_end_1b77dab2e:;
	};
}



inline jule::Bool _22be1a8e2_IsStr(_22be1616d_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1b77dbc51:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b77db5d0:;
			{
				return false;;
			}
		}
		_match_end_1b77db57a:;
	};
}



inline jule::Bool _22be1ab78_IsF64(_22be1616d_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1b77dc69c:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b77dc02b:;
			{
				return false;;
			}
		}
		_match_end_1b77dbec6:;
	};
}



inline jule::Bool _22be1ae0e_IsNil(_22be1616d_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _22be1b591_And(_22be1616d_Const* _self_, _22be1616d_Const _23818_x) {
	{
		
		if ((_22be1a65b_IsBool(_self_) && _22be1a65b_IsBool(&_23818_x))) {
			_case_begin_1b77e1904:;
			{
				return (_22be18060_ReadBool(_self_) && _22be18060_ReadBool(&_23818_x));;
			}
		}
		else {
			_case_begin_1b77e188d:;
			{
				return false;;
			}
		}
		_match_end_1b77e14b4:;
	};
}



inline jule::Bool _22be1b8d2_Or(_22be1616d_Const* _self_, _22be1616d_Const _24917_x) {
	{
		
		if ((_22be1a65b_IsBool(_self_) && _22be1a65b_IsBool(&_24917_x))) {
			_case_begin_1b77e2c02:;
			{
				return (_22be18060_ReadBool(_self_) || _22be18060_ReadBool(&_24917_x));;
			}
		}
		else {
			_case_begin_1b77e23b6:;
			{
				return false;;
			}
		}
		_match_end_1b77e22b7:;
	};
}



inline jule::Bool _22be1bc23_Eq(_22be1616d_Const* _self_, _22be1616d_Const _26017_x) {
	{
		
		if (_22be1ae0e_IsNil(_self_)) {
			_case_begin_1b77e4033:;
			{
				return _22be1ae0e_IsNil(&_26017_x);;
			}
		}
		else if (_22be1a65b_IsBool(_self_)) {
			_case_begin_1b77e4099:;
			{
				return (_22be1a65b_IsBool(&_26017_x) && (_22be18060_ReadBool(_self_) == _22be18060_ReadBool(&_26017_x)));;
			}
		}
		else if (_22be1a8e2_IsStr(_self_)) {
			_case_begin_1b77e4110:;
			{
				return (_22be1a8e2_IsStr(&_26017_x) && (_22be182e6_ReadStr(_self_) == _22be182e6_ReadStr(&_26017_x)));;
			}
		}
		else if (_22be1a13e_IsI64(_self_)) {
			_case_begin_1b77e4187:;
			{
				return (_22be17a43_ReadI64(_self_) == _22be18813_AsI64(&_26017_x));;
			}
		}
		else if (_22be1a3c5_IsU64(_self_)) {
			_case_begin_1b77e4352:;
			{
				return (_22be17cc9_ReadU64(_self_) == _22be18a99_AsU64(&_26017_x));;
			}
		}
		else if (_22be1ab78_IsF64(_self_)) {
			_case_begin_1b77e43b8:;
			{
				return (_22be1857c_ReadF64(_self_) == _22be18d30_AsF64(&_26017_x));;
			}
		}
		else {
			_case_begin_1b77e3670:;
			{
				return false;;
			}
		}
		_match_end_1b77e3571:;
	};
}



inline jule::Bool _22be1c064_Lt(_22be1616d_Const* _self_, _22be1616d_Const _28717_x) {
	{
		
		if (_22be1a8e2_IsStr(_self_)) {
			_case_begin_1b77e7bc4:;
			{
				return (_22be1a8e2_IsStr(&_28717_x) && (_22be182e6_ReadStr(_self_) < _22be182e6_ReadStr(&_28717_x)));;
			}
		}
		else if (_22be1a13e_IsI64(_self_)) {
			_case_begin_1b77e7c3a:;
			{
				return (_22be17a43_ReadI64(_self_) < _22be18813_AsI64(&_28717_x));;
			}
		}
		else if (_22be1a3c5_IsU64(_self_)) {
			_case_begin_1b77e7ca1:;
			{
				return (_22be17cc9_ReadU64(_self_) < _22be18a99_AsU64(&_28717_x));;
			}
		}
		else if (_22be1ab78_IsF64(_self_)) {
			_case_begin_1b77e7d28:;
			{
				return (_22be1857c_ReadF64(_self_) < _22be18d30_AsF64(&_28717_x));;
			}
		}
		else {
			_case_begin_1b77e497e:;
			{
				return false;;
			}
		}
		_match_end_1b77e4880:;
	};
}



inline jule::Bool _22be1c3a5_LtEq(_22be1616d_Const* _self_, _22be1616d_Const _31019_x) {
	{
		
		if (_22be1a8e2_IsStr(_self_)) {
			_case_begin_1b77ea864:;
			{
				return (_22be1a8e2_IsStr(&_31019_x) && (_22be182e6_ReadStr(_self_) <= _22be182e6_ReadStr(&_31019_x)));;
			}
		}
		else if (_22be1a13e_IsI64(_self_)) {
			_case_begin_1b77ea8ca:;
			{
				return (_22be17a43_ReadI64(_self_) <= _22be18813_AsI64(&_31019_x));;
			}
		}
		else if (_22be1a3c5_IsU64(_self_)) {
			_case_begin_1b77ea941:;
			{
				return (_22be17cc9_ReadU64(_self_) <= _22be18a99_AsU64(&_31019_x));;
			}
		}
		else if (_22be1ab78_IsF64(_self_)) {
			_case_begin_1b77ea9b8:;
			{
				return (_22be1857c_ReadF64(_self_) <= _22be18d30_AsF64(&_31019_x));;
			}
		}
		else {
			_case_begin_1b77e8521:;
			{
				return false;;
			}
		}
		_match_end_1b77e8422:;
	};
}



inline jule::Bool _22be1c6e6_Gt(_22be1616d_Const* _self_, _22be1616d_Const _33317_x) {
	{
		
		if (_22be1a8e2_IsStr(_self_)) {
			_case_begin_1b77ed504:;
			{
				return (_22be1a8e2_IsStr(&_33317_x) && (_22be182e6_ReadStr(_self_) > _22be182e6_ReadStr(&_33317_x)));;
			}
		}
		else if (_22be1a13e_IsI64(_self_)) {
			_case_begin_1b77ed56a:;
			{
				return (_22be17a43_ReadI64(_self_) > _22be18813_AsI64(&_33317_x));;
			}
		}
		else if (_22be1a3c5_IsU64(_self_)) {
			_case_begin_1b77ed5d1:;
			{
				return (_22be17cc9_ReadU64(_self_) > _22be18a99_AsU64(&_33317_x));;
			}
		}
		else if (_22be1ab78_IsF64(_self_)) {
			_case_begin_1b77ed658:;
			{
				return (_22be1857c_ReadF64(_self_) > _22be18d30_AsF64(&_33317_x));;
			}
		}
		else {
			_case_begin_1b77eb1b1:;
			{
				return false;;
			}
		}
		_match_end_1b77eb0b2:;
	};
}



inline jule::Bool _22be1ca37_GtEq(_22be1616d_Const* _self_, _22be1616d_Const _35619_x) {
	{
		
		if (_22be1a8e2_IsStr(_self_)) {
			_case_begin_1b7801194:;
			{
				return (_22be1a8e2_IsStr(&_35619_x) && (_22be182e6_ReadStr(_self_) >= _22be182e6_ReadStr(&_35619_x)));;
			}
		}
		else if (_22be1a13e_IsI64(_self_)) {
			_case_begin_1b780120a:;
			{
				return (_22be17a43_ReadI64(_self_) >= _22be18813_AsI64(&_35619_x));;
			}
		}
		else if (_22be1a3c5_IsU64(_self_)) {
			_case_begin_1b7801271:;
			{
				return (_22be17cc9_ReadU64(_self_) >= _22be18a99_AsU64(&_35619_x));;
			}
		}
		else if (_22be1ab78_IsF64(_self_)) {
			_case_begin_1b78012e8:;
			{
				return (_22be1857c_ReadF64(_self_) >= _22be18d30_AsF64(&_35619_x));;
			}
		}
		else {
			_case_begin_1b77edd51:;
			{
				return false;;
			}
		}
		_match_end_1b77edc52:;
	};
}



inline jule::Bool _22be1cd78_Add(_22be1616d_Const* _self_, _22be1616d_Const _37722_x) {
	{
		
		if (_22be1a8e2_IsStr(_self_)) {
			_case_begin_1b7803d34:;
			{
				if ((!(_22be1a8e2_IsStr(&_37722_x)))) {
					return false;;
				};
				_22be19902_SetStr(_self_, (_22be182e6_ReadStr(_self_) + _22be182e6_ReadStr(&_37722_x)));
			}
		}
		else if (_22be1ab78_IsF64(_self_)) {
			_case_begin_1b7803d9a:;
			{
				_22be19baa_SetF64(_self_, (_22be1857c_ReadF64(_self_) + _22be18d30_AsF64(&_37722_x)));
			}
		}
		else if (_22be1a13e_IsI64(_self_)) {
			_case_begin_1b7803e11:;
			{
				if (_22be1ab78_IsF64(&_37722_x)) {
					_22be19baa_SetF64(_self_, (_22be18d30_AsF64(_self_) + _22be1857c_ReadF64(&_37722_x)));
				} else {
					_22be190d8_SetI64(_self_, (_22be17a43_ReadI64(_self_) + _22be18813_AsI64(&_37722_x)));
				};
			}
		}
		else if (_22be1a3c5_IsU64(_self_)) {
			_case_begin_1b7803e88:;
			{
				if (_22be1ab78_IsF64(&_37722_x)) {
					_22be19baa_SetF64(_self_, (_22be18d30_AsF64(_self_) + _22be1857c_ReadF64(&_37722_x)));
				} else {
					_22be19391_SetU64(_self_, (_22be17cc9_ReadU64(_self_) + _22be18a99_AsU64(&_37722_x)));
				};
			}
		}
		else {
			_case_begin_1b78019e1:;
			{
				return false;;
			}
		}
		_match_end_1b78018e2:;
	};
	return true;;
}



inline jule::Bool _22be1d1b9_Sub(_22be1616d_Const* _self_, _22be1616d_Const _40622_x) {
	{
		
		if (_22be1ab78_IsF64(_self_)) {
			_case_begin_1b7808a3c:;
			{
				_22be19baa_SetF64(_self_, (_22be1857c_ReadF64(_self_) - _22be18d30_AsF64(&_40622_x)));
			}
		}
		else if (_22be1a13e_IsI64(_self_)) {
			_case_begin_1b7808ad6:;
			{
				if (_22be1ab78_IsF64(&_40622_x)) {
					_22be19baa_SetF64(_self_, (_22be18d30_AsF64(_self_) - _22be1857c_ReadF64(&_40622_x)));
				} else {
					_22be190d8_SetI64(_self_, (_22be17a43_ReadI64(_self_) - _22be18813_AsI64(&_40622_x)));
				};
			}
		}
		else if (_22be1a3c5_IsU64(_self_)) {
			_case_begin_1b7808b5d:;
			{
				if (_22be1ab78_IsF64(&_40622_x)) {
					_22be19baa_SetF64(_self_, (_22be18d30_AsF64(_self_) - _22be1857c_ReadF64(&_40622_x)));
				} else {
					_22be19391_SetU64(_self_, (_22be17cc9_ReadU64(_self_) - _22be18a99_AsU64(&_40622_x)));
				};
			}
		}
		else {
			_case_begin_1b7808289:;
			{
				return false;;
			}
		}
		_match_end_1b780819b:;
	};
	return true;;
}



inline jule::Bool _22be1d50a_Mul(_22be1616d_Const* _self_, _22be1616d_Const _43022_x) {
	{
		
		if (_22be1ab78_IsF64(_self_)) {
			_case_begin_1b780c898:;
			{
				_22be19baa_SetF64(_self_, (_22be1857c_ReadF64(_self_) * _22be18d30_AsF64(&_43022_x)));
			}
		}
		else if (_22be1a13e_IsI64(_self_)) {
			_case_begin_1b780c942:;
			{
				if (_22be1ab78_IsF64(&_43022_x)) {
					_22be19baa_SetF64(_self_, (_22be18d30_AsF64(_self_) * _22be1857c_ReadF64(&_43022_x)));
				} else {
					_22be190d8_SetI64(_self_, (_22be17a43_ReadI64(_self_) * _22be18813_AsI64(&_43022_x)));
				};
			}
		}
		else if (_22be1a3c5_IsU64(_self_)) {
			_case_begin_1b780c9b9:;
			{
				if (_22be1ab78_IsF64(&_43022_x)) {
					_22be19baa_SetF64(_self_, (_22be18d30_AsF64(_self_) * _22be1857c_ReadF64(&_43022_x)));
				} else {
					_22be19391_SetU64(_self_, (_22be17cc9_ReadU64(_self_) * _22be18a99_AsU64(&_43022_x)));
				};
			}
		}
		else {
			_case_begin_1b780bea2:;
			{
				return false;;
			}
		}
		_match_end_1b780bdb4:;
	};
	return true;;
}



inline jule::Bool _22be1d84b_Div(_22be1616d_Const* _self_, _22be1616d_Const _45822_x) {
	{
		
		if (_22be1ab78_IsF64(_self_)) {
			_case_begin_1b7811704:;
			{
				jule::F64 _46113_l = _22be18d30_AsF64(&_45822_x);;
				if ((_46113_l == 0LL)) {
					return false;;
				};
				_22be19baa_SetF64(_self_, jule::div(_22be1857c_ReadF64(_self_),_46113_l));
			}
		}
		else if (_22be1a13e_IsI64(_self_)) {
			_case_begin_1b781179d:;
			{
				jule::F64 _46713_l = _22be18d30_AsF64(&_45822_x);;
				if ((_46713_l == 0LL)) {
					return false;;
				};
				_22be19baa_SetF64(_self_, jule::div(_22be18d30_AsF64(_self_),_46713_l));
			}
		}
		else if (_22be1a3c5_IsU64(_self_)) {
			_case_begin_1b7811825:;
			{
				jule::F64 _47313_l = _22be18d30_AsF64(&_45822_x);;
				if ((_47313_l == 0LL)) {
					return false;;
				};
				_22be19baa_SetF64(_self_, jule::div(_22be18d30_AsF64(_self_),_47313_l));
			}
		}
		else {
			_case_begin_1b7810d0d:;
			{
				return false;;
			}
		}
		_match_end_1b7810c20:;
	};
	return true;;
}



inline jule::Bool _22be1db8c_Mod(_22be1616d_Const* _self_, _22be1616d_Const _48722_x) {
	{
		
		if (_22be1a13e_IsI64(_self_)) {
			_case_begin_1b78156d6:;
			{
				jule::I64 _49013_l = _22be18813_AsI64(&_48722_x);;
				if ((_49013_l == 0LL)) {
					return false;;
				};
				_22be190d8_SetI64(_self_, jule::mod(_22be17a43_ReadI64(_self_),_49013_l));
			}
		}
		else if (_22be1a3c5_IsU64(_self_)) {
			_case_begin_1b7815780:;
			{
				jule::U64 _49613_l = _22be18a99_AsU64(&_48722_x);;
				if ((_49613_l == 0LLU)) {
					return false;;
				};
				_22be19391_SetU64(_self_, jule::mod(_22be17cc9_ReadU64(_self_),_49613_l));
			}
		}
		else {
			_case_begin_1b781565e:;
			{
				return false;;
			}
		}
		_match_end_1b7815571:;
	};
	return true;;
}



inline jule::Bool _22be1decd_BitwiseAnd(_22be1616d_Const* _self_, _22be1616d_Const _50929_x) {
	{
		
		if (_22be1a13e_IsI64(_self_)) {
			_case_begin_1b78184db:;
			{
				_22be190d8_SetI64(_self_, (_22be17a43_ReadI64(_self_) & _22be18813_AsI64(&_50929_x)));
			}
		}
		else if (_22be1a3c5_IsU64(_self_)) {
			_case_begin_1b7818585:;
			{
				_22be19391_SetU64(_self_, (_22be17cc9_ReadU64(_self_) & _22be18a99_AsU64(&_50929_x)));
			}
		}
		else {
			_case_begin_1b7818464:;
			{
				return false;;
			}
		}
		_match_end_1b7818376:;
	};
	return true;;
}



inline jule::Bool _22be1e31e_BitwiseOr(_22be1616d_Const* _self_, _22be1616d_Const _52328_x) {
	{
		
		if (_22be1a13e_IsI64(_self_)) {
			_case_begin_1b781a268:;
			{
				_22be190d8_SetI64(_self_, (_22be17a43_ReadI64(_self_) | _22be18813_AsI64(&_52328_x)));
			}
		}
		else if (_22be1a3c5_IsU64(_self_)) {
			_case_begin_1b781a312:;
			{
				_22be19391_SetU64(_self_, (_22be17cc9_ReadU64(_self_) | _22be18a99_AsU64(&_52328_x)));
			}
		}
		else {
			_case_begin_1b781a1e1:;
			{
				return false;;
			}
		}
		_match_end_1b781a125:;
	};
	return true;;
}



inline jule::Bool _22be1e660_Xor(_22be1616d_Const* _self_, _22be1616d_Const _53722_x) {
	{
		
		if (_22be1a13e_IsI64(_self_)) {
			_case_begin_1b781bee5:;
			{
				_22be190d8_SetI64(_self_, (_22be17a43_ReadI64(_self_) ^ _22be18813_AsI64(&_53722_x)));
			}
		}
		else if (_22be1a3c5_IsU64(_self_)) {
			_case_begin_1b781c08e:;
			{
				_22be19391_SetU64(_self_, (_22be17cc9_ReadU64(_self_) ^ _22be18a99_AsU64(&_53722_x)));
			}
		}
		else {
			_case_begin_1b781be6d:;
			{
				return false;;
			}
		}
		_match_end_1b781bda2:;
	};
	return true;;
}



inline jule::Bool _22be1e9a1_Lshift(_22be1616d_Const* _self_, _22be1616d_Const _55125_x) {
	{
		
		if (_22be1a13e_IsI64(_self_)) {
			_case_begin_1b781dc72:;
			{
				jule::I64 _55413_l = _22be18813_AsI64(_self_);;
				if ((_55413_l < 0LL)) {
					jule::U64 _55617_r = _22be18a99_AsU64(&_55125_x);;
					_22be190d8_SetI64(_self_, (_55413_l << _55617_r));
				} else {
					_22be20188_lshiftUnsig(_self_, &(_55125_x));
				};
			}
		}
		else if (_22be1a3c5_IsU64(_self_)) {
			_case_begin_1b781dd1b:;
			{
				_22be20188_lshiftUnsig(_self_, &(_55125_x));
			}
		}
		else {
			_case_begin_1b781dbea:;
			{
				return false;;
			}
		}
		_match_end_1b781db2e:;
	};
	return true;;
}



inline jule::Bool _22be1ece2_Rshift(_22be1616d_Const* _self_, _22be1616d_Const _57125_x) {
	{
		
		if (_22be1a13e_IsI64(_self_)) {
			_case_begin_1b7821291:;
			{
				jule::I64 _57413_l = _22be18813_AsI64(_self_);;
				if ((_57413_l < 0LL)) {
					jule::U64 _57617_r = _22be18a99_AsU64(&_57125_x);;
					_22be190d8_SetI64(_self_, (_57413_l >> _57617_r));
				} else {
					_22be204b8_rshiftUnsig(_self_, &(_57125_x));
				};
			}
		}
		else if (_22be1a3c5_IsU64(_self_)) {
			_case_begin_1b782133a:;
			{
				_22be204b8_rshiftUnsig(_self_, &(_57125_x));
			}
		}
		else {
			_case_begin_1b7821219:;
			{
				return false;;
			}
		}
		_match_end_1b782112b:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _22be1616d_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1cdeab838_Prec(_1cdeab4b4_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(64LLU) || _match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(57LLU) || _match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1b787c94b:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(66LLU) || _match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1b787c7c5:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(71LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(53LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1b787c83b:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1b787c9c3:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1b787ca4a:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1b787c2ec:;
			{
				return 0LLU;;
			}
		}
		_match_end_1b787c709:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1cdeab4b4_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline void _1cdeb2168_Fill(_1cdeb1c4a_File* _self_, jule::Slice<jule::U8> _1727_data) {
	(*(_self_))._field_Data=_1727_data;
}



inline jule::Str _1cdeb23ee_Dir(_1cdeb1c4a_File* _self_) {
	return _22ab1969c_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1cdeb2685_Name(_1cdeb1c4a_File* _self_) {
	return _22ab192c3_Base((*(_self_))._field_Path);;
}



inline jule::Str _1cdeb2c5c_GetRow(_1cdeb1c4a_File* _self_, jule::I32 _3821_row) {
	jule::I32 _3913_n = 0LL;;
	jule::I32 _4013_lineStart = 0LL;;
	jule::I32 _4113_i = 0LL;;
	for (; (_4113_i < (*(_self_))._field_Data.len()); (_4113_i)++) {
		{
			if (((*(_self_))._field_Data[_4113_i] != '\n')) {
				goto _iter_next_1b7883336;
			};
			(_3913_n)++;
			if ((_3913_n == _3821_row)) {
				return static_cast<jule::Str>((*(_self_))._field_Data.slice(_4013_lineStart, _4113_i));;
			};
			_4013_lineStart=(_4113_i + 1LL);
		}
	_iter_next_1b7883336:;
	}
	_iter_end_1b7883336:;;
	return jule::Str();;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdeb1c4a_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdeb3da1_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1cdeba418_pushErr(_1cdeb9d85_lex* _self_, jule::Str _44726_fmt, jule::Slice<jule::Any> _44739_args) {
	{ jule::Slice<_22a93672d_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1cdeb4b4e_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44726_fmt, _44739_args)); };
}



inline void _1cdeba979_lex(_1cdeb9d85_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1cdebcb9b_newLine(_self_);
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::Ptr<_1cdeab4b4_Token> _46217_token = _1cdebe186_token(_self_);;
			if (((*(_46217_token))._field_Id != static_cast<jule::U32>(0LLU))) {
				{ jule::Slice<jule::Ptr<_1cdeab4b4_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_46217_token); };
			};
		}
	_iter_next_1b78b240e:;
	}
	_iter_end_1b78b240e:;;
}



inline jule::Str _1cdebacba_id(_1cdeb9d85_lex* _self_, jule::Slice<jule::U8>* _47122_ln) {
	if (((*(_47122_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _4759_r;;
	jule::I32 _47516_i;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22aaa33e4_DecodeRune((*(_47122_ln)));
		_4759_r = __jule_assign_result.__jule_result_arg0;
		_47516_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_4759_r != '_') && (!(_1cdeaebe3_IsLetter(_4759_r))))) {
		return jule::Str();;
	};
	while ((_47516_i < (*(_47122_ln)).len())) {
		{
			jule::I32 _48113_pr;;
			jule::I32 _48117_n;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22aaa33e4_DecodeRune((*(_47122_ln)).slice(_47516_i));
				_48113_pr = __jule_assign_result.__jule_result_arg0;
				_48117_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_48113_pr != '_') && (!(_1cdeb0166_IsDecimal(static_cast<jule::U8>(_48113_pr))))) && (!(_1cdeaebe3_IsLetter(_48113_pr))))) {
				(*(_self_))._field_pos+=_47516_i;
				return static_cast<jule::Str>((*(_47122_ln)).slice(0LL, _47516_i));;
			};
			_47516_i+=_48117_n;
		}
	_iter_next_1b78b5a3e:;
	}
	_iter_end_1b78b5a3e:;;
	(*(_self_))._field_pos+=(*(_47122_ln)).len();
	return static_cast<jule::Str>((*(_47122_ln)));;
}



inline jule::Slice<jule::U8> _1cdebb051_resume(_1cdeb9d85_lex* _self_) {
	jule::I32 _49613_i = (*(_self_))._field_pos;;
	for (; (_49613_i < (*((*(_self_))._field_file))._field_Data.len()); (_49613_i)++) {
		{
			jule::I32 _49813_r = static_cast<jule::I32>((*(*(_self_))._field_file.alloc)._field_Data[_49613_i]);;
			if (_1cdeae6e8_IsSpace(_49813_r)) {
				;
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _49813_r };
					
					if (_match_expr == '\n') {
						_case_begin_1b78b9c85:;
						{
							_1cdebcb9b_newLine(_self_);
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1b78b99cc:;
						{
							(*(_self_))._field_column+=8LL;
						}
					}
					else {
						_case_begin_1b78b968b:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1b78b98bc:;
				};
				goto _iter_next_1b78b7a41;
			};
			jule::I32 _51317_j = _49613_i;;
			for (; (_51317_j < (*(*(_self_))._field_file.alloc)._field_Data.len()); (_51317_j)++) {
				{
					if (((*(*(_self_))._field_file.alloc)._field_Data[_51317_j] == '\n')) {
						goto _iter_end_1b78b869b;
					};
				}
			_iter_next_1b78b869b:;
			}
			_iter_end_1b78b869b:;;
			return (*(*(_self_))._field_file.alloc)._field_Data.slice(_49613_i, _51317_j);;
		}
	_iter_next_1b78b7a41:;
	}
	_iter_end_1b78b7a41:;;
	return nullptr;;
}



inline void _1cdebb309_lexLineComment(_1cdeb9d85_lex* _self_, jule::Ptr<_1cdeab4b4_Token>* _52438_token) {
	jule::I32 _5259_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _52813_r = (*(*(_self_))._field_file.alloc)._field_Data[(*(_self_))._field_pos];;
			if (((_52813_r == '\n') || (_52813_r == '\r'))) {
				goto _iter_end_1b78bc925;
			};
		}
	_iter_next_1b78bc925:;
	}
	_iter_end_1b78bc925:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL))) {
		(*((*(_52438_token))))._field_Id=static_cast<jule::U32>(15LLU);
		(*((*(_52438_token))))._field_Kind=static_cast<jule::Str>((*(*(_self_))._field_file.alloc)._field_Data.slice(_5259_start, (*(_self_))._field_pos));
	};
}



inline void _1cdebb5b2_lexRangeComment(_1cdeb9d85_lex* _self_, jule::Ptr<_1cdeab4b4_Token>* _53939_token) {
	jule::I32 _5409_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _54313_r = (*(*(_self_))._field_file.alloc)._field_Data[(*(_self_))._field_pos];;
			if ((_54313_r == '\r')) {
				goto _iter_next_1b78c1088;
			};
			if ((_54313_r == '\n')) {
				_1cdebcb9b_newLine(_self_);
				goto _iter_next_1b78c1088;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(*(_self_))._field_file.alloc)._field_Data.len()) && (_54313_r == '*')) && ((*(*(_self_))._field_file.alloc)._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL))) {
					(*((*(_53939_token))))._field_Id=static_cast<jule::U32>(15LLU);
					(*((*(_53939_token))))._field_Kind=static_cast<jule::Str>((*(*(_self_))._field_file.alloc)._field_Data.slice(_5409_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1b78c1088:;
	}
	_iter_end_1b78c1088:;;
	_1cdeba418_pushErr(_self_, jule::Str::lit("missing block comment close", 27), jule::Slice<jule::Any>());
}



inline jule::Str _1cdebb903_num(_1cdeb9d85_lex* _self_, jule::Slice<jule::U8>* _56723_txt) {
	jule::Str __jule_func_result;
	if (((*(_56723_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1cdeb869c_hexNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1b78c8975;
	};
	__jule_func_result=_1cdeb84c1_octalNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1b78c8975;
	};
	__jule_func_result=_1cdeb6c61_binaryNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1b78c8975;
	};
	__jule_func_result=_1cdeb6997_commonNum(_56723_txt);
	_julec_label_1b78c8975:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1cdebbc44_escapeSeq(_1cdeb9d85_lex* _self_, jule::Slice<jule::U8>* _58929_txt) {
	jule::Str _59013_seq = jule::Str();;
	if (((*(_58929_txt)).len() < 2LL)) {
		goto _julec_label_1b78d2594;
	};
	{
		auto &_match_expr{ (*(_58929_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1b78ca8de:;
			{
				(*(_self_))._field_pos+=2LL;
				return static_cast<jule::Str>((*(_58929_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1b78ca955:;
			{
				_59013_seq=_1cdeb8cb8_bigUnicodePointEscape(_58929_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1b78ca537:;
			{
				_59013_seq=_1cdeb9082_littleUnicodePointEscape(_58929_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1b78ca59d:;
			{
				_59013_seq=_1cdeb934b_hexByteEscape(_58929_txt);
			}
		}
		else {
			_case_begin_1b78c9e82:;
			{
				_59013_seq=_1cdeb9615_byteEscape(_58929_txt);
			}
		}
		_match_end_1b78ca3c2:;
	};
	_julec_label_1b78d2594:;
	if ((_59013_seq).empty()) {
		((*(_self_))._field_pos)++;
		_1cdeba418_pushErr(_self_, jule::Str::lit("invalid escape sequence", 23), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_59013_seq.len();
	return _59013_seq;;
}



inline jule::Str _1cdebc140_getRune(_1cdeb9d85_lex* _self_, jule::Slice<jule::U8>* _61927_txt, jule::Bool _61940_raw) {
	if (((!(_61940_raw)) && ((*(_61927_txt))[0LL] == '\\'))) {
		return _1cdebbc44_escapeSeq(_self_, _61927_txt);;
	};
	jule::I32 _6239_r;;
	jule::I32 _62312_n;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22aaa33e4_DecodeRune((*(_61927_txt)));
		_6239_r = __jule_assign_result.__jule_result_arg0;
		_62312_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_62312_n;
	return jule::Str::from_rune(_6239_r);;
}



inline jule::Str _1cdebc481_lexRune(_1cdeb9d85_lex* _self_, jule::Slice<jule::U8>* _62827_txt) {
	_22ab0b88c_StrBuilder _62913_run = static__22ab0bb56_New(8LL);;
	_22ab15775_WriteByte(&_62913_run, '\'');
	((*(_self_))._field_column)++;
	jule::I32 _63213_n = 0LL;;
	jule::I32 _63313_i = 1LL;;
	for (; (_63313_i < (*(_62827_txt)).len()); (_63313_i)++) {
		{
			if (((*(_62827_txt))[_63313_i] == '\r')) {
				goto _iter_next_1b78d6873;
			};
			if (((*(_62827_txt))[_63313_i] == '\n')) {
				_1cdeba418_pushErr(_self_, jule::Str::lit("rune is not finished", 20), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1cdebcb9b_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _64513_part = (*(_62827_txt)).slice(_63313_i);;
			jule::Str _64613_r = _1cdebc140_getRune(_self_, &(_64513_part), false);;
			_22ab154bc_WriteStr(&_62913_run, _64613_r);
			(*(_self_))._field_column+=_22aaa51d7_RuneCountStr(_64613_r);
			if (_64613_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1b78d6873;
			};
			if ((_64613_r.len() > 1LL)) {
				_63313_i+=(_64613_r.len() - 1LL);
			};
			(_63213_n)++;
		}
	_iter_next_1b78d6873:;
	}
	_iter_end_1b78d6873:;;
	if ((_63213_n == 0LL)) {
		_1cdeba418_pushErr(_self_, jule::Str::lit("rune is cannot empty", 20), jule::Slice<jule::Any>());
	} else if ((_63213_n > 1LL)) {
		_1cdeba418_pushErr(_self_, jule::Str::lit("rune is should be single", 24), jule::Slice<jule::Any>());
	};
	return _22ab15cb4_Str(&_62913_run);;
}



inline jule::Str _1cdebc717_lexStr(_1cdeb9d85_lex* _self_) {
	_22ab0b88c_StrBuilder _66913_s = static__22ab0bb56_New(16LL);;
	jule::U8 _6709_mark = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _6729_raw = (_6709_mark == '`');;
	_22ab15775_WriteByte(&_66913_s, _6709_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(*(_self_))._field_file.alloc)._field_Data.len())) {
		{
			jule::U8 _67713_ch = (*(*(_self_))._field_file.alloc)._field_Data[(*(_self_))._field_pos];;
			if ((_67713_ch == '\r')) {
				goto _iter_next_1b78dc0c6;
			};
			if ((_67713_ch == '\n')) {
				_1cdebcb9b_newLine(_self_);
				if ((!(_6729_raw))) {
					_1cdeba418_pushErr(_self_, jule::Str::lit("string is not finished", 22), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _68917_part = (*(*(_self_))._field_file.alloc)._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _69013_r = _1cdebc140_getRune(_self_, &(_68917_part), _6729_raw);;
			_22ab154bc_WriteStr(&_66913_s, _69013_r);
			(*(_self_))._field_column+=_22aaa51d7_RuneCountStr(_69013_r);
			if ((_67713_ch == _6709_mark)) {
				goto _iter_end_1b78dc0c6;
			};
		}
	_iter_next_1b78dc0c6:;
	}
	_iter_end_1b78dc0c6:;;
	return _22ab15cb4_Str(&_66913_s);;
}



inline void _1cdebcb9b_newLine(_1cdeb9d85_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1cdebd20c_isOp(_1cdeb9d85_lex* _self_, jule::Slice<jule::U8>* _71024_txt, jule::Str _71037_kind, jule::U32 _71048_id, jule::Ptr<_1cdeab4b4_Token>* _71066_t) {
	if ((!(_1cdeb5017_bytesHasPrefix(_71024_txt, _71037_kind)))) {
		return false;;
	};
	(*((*(_71066_t))))._field_Kind=_71037_kind;
	(*((*(_71066_t))))._field_Id=_71048_id;
	(*(_self_))._field_pos+=_71037_kind.len();
	return true;;
}



inline jule::Bool _1cdebd608_lexBasicOps(_1cdeb9d85_lex* _self_, jule::Slice<jule::U8> _72030_txt, jule::Ptr<_1cdeab4b4_Token>* _72048_tok) {
	{
		auto expr = &(_1cdeb4610_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b78e3990:;
		if (it != expr_end) {
			_1cdeb3da1_kindPair *_72116_pair = it;
			{
				if (_1cdebd20c_isOp(_self_, &(_72030_txt), (*(_72116_pair))._field_kind, (*(_72116_pair))._field_id, _72048_tok)) {
					return true;;
				};
			}
			_iter_next_1b78e3990:;
			++it;
			goto _iter_begin_1b78e3990;
		}
		_iter_end_1b78e3990:;
	};
	return false;;
}



inline jule::Bool _1cdebda04_lexId(_1cdeb9d85_lex* _self_, jule::Slice<jule::U8>* _72925_txt, jule::Ptr<_1cdeab4b4_Token>* _72943_t) {
	jule::Str _7309_lex = _1cdebacba_id(_self_, _72925_txt);;
	if ((_7309_lex).empty()) {
		return false;;
	};
	(*((*(_72943_t))))._field_Kind=_7309_lex;
	(*((*(_72943_t))))._field_Id=static_cast<jule::U32>(1LLU);
	return true;;
}



inline jule::Bool _1cdebde00_lexNum(_1cdeb9d85_lex* _self_, jule::Slice<jule::U8>* _73926_txt, jule::Ptr<_1cdeab4b4_Token>* _73944_t) {
	jule::Str _7409_lex = _1cdebb903_num(_self_, _73926_txt);;
	if ((_7409_lex).empty()) {
		return false;;
	};
	(*((*(_73944_t))))._field_Kind=_7409_lex;
	(*((*(_73944_t))))._field_Id=static_cast<jule::U32>(4LLU);
	return true;;
}



inline jule::Ptr<_1cdeab4b4_Token> _1cdebe186_token(_1cdeb9d85_lex* _self_) {
	jule::Ptr<_1cdeab4b4_Token> _75113_t = jule::new_ptr<_1cdeab4b4_Token>(_1cdeab4b4_Token{._field_File=(*(_self_))._field_file, ._field_Id=static_cast<jule::U32>(0LLU)});;
	jule::Slice<jule::U8> _7569_txt = _1cdebb051_resume(_self_);;
	if ((_7569_txt == nullptr)) {
		return _75113_t;;
	};
	(*(_75113_t))._field_Column=(*(_self_))._field_column;
	(*_75113_t.alloc)._field_Row=(*(_self_))._field_row;
	{
		
		if (_1cdebde00_lexNum(_self_, &(_7569_txt), &(_75113_t))) {
			_case_begin_1b78ea1e4:;
			{
				goto _match_end_1b78e89a6;
			}
		}
		else if ((_7569_txt[0LL] == '\'')) {
			_case_begin_1b78ea25a:;
			{
				(*_75113_t.alloc)._field_Kind=_1cdebc481_lexRune(_self_, &(_7569_txt));
				(*_75113_t.alloc)._field_Id=static_cast<jule::U32>(4LLU);
				return _75113_t;;
			}
		}
		else if (((_7569_txt[0LL] == '\"') || (_7569_txt[0LL] == '`'))) {
			_case_begin_1b78ea2c1:;
			{
				(*_75113_t.alloc)._field_Kind=_1cdebc717_lexStr(_self_);
				(*_75113_t.alloc)._field_Id=static_cast<jule::U32>(4LLU);
				return _75113_t;;
			}
		}
		else if (_1cdeb5017_bytesHasPrefix(&(_7569_txt), jule::Str::lit("//", 2))) {
			_case_begin_1b78e9611:;
			{
				_1cdebb309_lexLineComment(_self_, &(_75113_t));
				return _75113_t;;
			}
		}
		else if (_1cdeb5017_bytesHasPrefix(&(_7569_txt), jule::Str::lit("/*", 2))) {
			_case_begin_1b78e9677:;
			{
				_1cdebb5b2_lexRangeComment(_self_, &(_75113_t));
				return _75113_t;;
			}
		}
		else if (_1cdebd608_lexBasicOps(_self_, _7569_txt, &(_75113_t))) {
			_case_begin_1b78e96dd:;
			{
				goto _match_end_1b78e89a6;
			}
		}
		else if (_1cdebda04_lexId(_self_, &(_7569_txt), &(_75113_t))) {
			_case_begin_1b78e9754:;
			{
				{
					auto expr = &(_1cdeb42d0_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b78ee00b:;
					if (it != expr_end) {
						_1cdeb3da1_kindPair *_78820_pair = it;
						{
							if (((*(_78820_pair))._field_kind == (*_75113_t.alloc)._field_Kind)) {
								(*_75113_t.alloc)._field_Id=(*(_78820_pair))._field_id;
								goto _iter_end_1b78ee00b;
							};
						}
						_iter_next_1b78ee00b:;
						++it;
						goto _iter_begin_1b78ee00b;
					}
					_iter_end_1b78ee00b:;
				};
			}
		}
		else {
			_case_begin_1b78e959a:;
			{
				jule::I32 _79513_r;;
				jule::I32 _79516_sz;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22aaa33e4_DecodeRune(_7569_txt);
					_79513_r = __jule_assign_result.__jule_result_arg0;
					_79516_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1cdeba418_pushErr(_self_, jule::Str::lit("undefined token: @", 18), jule::Slice<jule::Any>::make({jule::Any(_79513_r, &__jule_any_type6)}));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_79516_sz;
				return _75113_t;;
			}
		}
		_match_end_1b78e89a6:;
	};
	(*(_self_))._field_column+=_22aaa51d7_RuneCountStr((*_75113_t.alloc)._field_Kind);
	return _75113_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdeb9d85_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdebead2_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdec0a8e_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdec0eac_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdec1a90_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdec219a_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdec2464_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdec283d_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdec2b3a_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdec2ec0_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdec32bc_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1cdec392c_IsUnsafe(_1cdec35b9_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdec35b9_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1cdec41be_AutoSized(_1cdec3d5b_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdec3d5b_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdec45a9_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdec4983_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdec5dc4_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdec618d_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdec6798_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdec69b8_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdec6d5e_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdec7238_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdec76de_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdec7e81_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdec835a_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdec8734_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdec8b0d_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdec8ed7_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdec948d_BinaryExpr _Src) {
	_Stream << "BinaryExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1cdec9e72_Unhandled(_1cdec9aed_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1cdeca208_Ignored(_1cdec9aed_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*(*(_self_))._field_Exception.alloc)._field_Deferred);;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdec9aed_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdeca5e3_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdecae1d_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdecb3c4_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdecbbee_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdecc42a_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdeccd87_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdecd4e7_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdecd7e4_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdecdc9a_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdece174_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdece54d_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdece84a_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdeceeaa_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cded053d_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cded1451_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cded1ab1_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1cded2672_IsSelf(_1cded22ed_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}





std::ostream &operator<<(std::ostream &_Stream, _1cded22ed_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1cded3ab3_IsAnon(_1cded3750_FnDecl* _self_) {
	return (*(_self_))._field_Ident.equal("<anonymous>", 11);;
}





std::ostream &operator<<(std::ostream &_Stream, _1cded3750_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cded490a_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cded4cd4_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1cded58b7_IsInf(_1cded5554_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1cded5554_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1cded61e2_IsWhileNext(_1cded5d7e_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1cded5d7e_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cded6786_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cded6b60_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cded7039_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cded74e0_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cded78b9_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cded7d70_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cded85ac_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cded8a63_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cded937c_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cded9b96_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdeda14c_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdedac0d_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdedb538_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdedbb98_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdedbe62_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdedc858_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdedd095_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Inherits:" << _Src._field_Inherits << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdedd705_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1cdee4b6d_FieldIns> _1cdedee21_instance(jule::Ptr<_1cdedea69_Field> _self_) {
	return jule::new_ptr<_1cdee4b6d_FieldIns>(_1cdee4b6d_FieldIns{._field_Decl=_self_, });;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdedea69_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdee1a7c_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1cdee571d_StructIns> _1cdee2e02_instance(jule::Ptr<_1cdee2990_Struct> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*_self_.alloc)._field_Instances[0LL];;
	};
	jule::Ptr<_1cdee571d_StructIns> _10013_ins = jule::new_ptr<_1cdee571d_StructIns>(_1cdee571d_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_1cdee4b6d_FieldIns>>::alloc(0LL, (*_self_.alloc)._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_1ce0b4105_Var>>::alloc(0LL, (*_self_.alloc)._field_Statics.len()), ._field_Refers=static__1ce00dcec_new(), });;
	{
		auto expr = &((*_self_.alloc)._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7a06dd3:;
		if (it != expr_end) {
			jule::Ptr<_1ce0b4105_Var> _10721_s = *it;
			{
				(*(_10013_ins))._field_Statics=jule::append((*_10013_ins.alloc)._field_Statics,jule::Slice<jule::Ptr<_1ce0b4105_Var>>::make({jule::new_ptr<_1ce0b4105_Var>((*(_10721_s)))}));
			}
			_iter_next_1b7a06dd3:;
			++it;
			goto _iter_begin_1b7a06dd3;
		}
		_iter_end_1b7a06dd3:;
	};
	{
		auto expr = &((*_self_.alloc)._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7a07bc5:;
		if (it != expr_end) {
			jule::Ptr<_1cdedea69_Field> _11121_f = *it;
			{
				(*_10013_ins.alloc)._field_Fields=jule::append((*_10013_ins.alloc)._field_Fields,jule::Slice<jule::Ptr<_1cdee4b6d_FieldIns>>::make({_1cdedee21_instance(_11121_f)}));
				if ((((!((*_11121_f.alloc)._field_Mutable)) && ((*((*_11121_f.alloc)._field_Kind))._field_Kind != nullptr)) && _1ce14e558_Mutable((*(*_11121_f.alloc)._field_Kind.alloc)._field_Kind))) {
					(*_10013_ins.alloc)._field_Mutable=true;
				};
			}
			_iter_next_1b7a07bc5:;
			++it;
			goto _iter_begin_1b7a07bc5;
		}
		_iter_end_1b7a07bc5:;
	};
	if (((*_self_.alloc)._field_Generics.len() == 0LL)) {
		(*_10013_ins.alloc)._field_Methods=(*_self_.alloc)._field_Methods;
	} else {
		(*_10013_ins.alloc)._field_Methods=jule::Slice<jule::Ptr<_1ce00792d_Fn>>::alloc(0LL, (*_self_.alloc)._field_Methods.len());
		{
			auto expr = &((*_self_.alloc)._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b7a0b932:;
			if (it != expr_end) {
				jule::Ptr<_1ce00792d_Fn> _12225_f = *it;
				{
					jule::Ptr<_1ce00792d_Fn> _12321_fins = jule::new_ptr<_1ce00792d_Fn>((*(_12225_f)));;
					(*_12321_fins.alloc)._field_Instances=nullptr;
					(*_10013_ins.alloc)._field_Methods=jule::append((*_10013_ins.alloc)._field_Methods,jule::Slice<jule::Ptr<_1ce00792d_Fn>>::make({_12321_fins}));
				}
				_iter_next_1b7a0b932:;
				++it;
				goto _iter_begin_1b7a0b932;
			}
			_iter_end_1b7a0b932:;
		};
	};
	return _10013_ins;;
}



inline jule::Ptr<_1cdee571d_StructIns> _1cdee3210_appendInstance(_1cdee2990_Struct* _self_, jule::Ptr<_1cdee571d_StructIns>* _13438_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7a0bca6:;
		if (it != expr_end) {
			jule::Ptr<_1cdee571d_StructIns> _14021_ains = *it;
			{
				if (_1cdee6389_Same(_14021_ains.ptr(), (*(_13438_ins)))) {
					return _14021_ains;;
				};
			}
			_iter_next_1b7a0bca6:;
			++it;
			goto _iter_begin_1b7a0bca6;
		}
		_iter_end_1b7a0bca6:;
	};
	{ jule::Slice<jule::Ptr<_1cdee571d_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13438_ins))); };
	return nullptr;;
}



inline jule::Ptr<_1ce00792d_Fn> _1cdee360b_FindMethod(_1cdee2990_Struct* _self_, jule::Str _15229_ident, jule::Bool _15241_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7a102d7:;
		if (it != expr_end) {
			jule::Ptr<_1ce00792d_Fn> _15321_f = *it;
			{
				if ((((*(_15321_f))._field_Statically == _15241_statically) && ((*_15321_f.alloc)._field_Ident == _15229_ident))) {
					return _15321_f;;
				};
			}
			_iter_next_1b7a102d7:;
			++it;
			goto _iter_begin_1b7a102d7;
		}
		_iter_end_1b7a102d7:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ce0b4105_Var> _1cdee394c_FindStatic(_1cdee2990_Struct* _self_, jule::Str _16329_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7a11607:;
		if (it != expr_end) {
			jule::Ptr<_1ce0b4105_Var> _16421_v = *it;
			{
				if (((*(_16421_v))._field_Ident == _16329_ident)) {
					return _16421_v;;
				};
			}
			_iter_next_1b7a11607:;
			++it;
			goto _iter_begin_1b7a11607;
		}
		_iter_end_1b7a11607:;
	};
	return nullptr;;
}



inline jule::Ptr<_1cdedea69_Field> _1cdee3c8d_FindField(_1cdee2990_Struct* _self_, jule::Str _17428_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7a125c5:;
		if (it != expr_end) {
			jule::Ptr<_1cdedea69_Field> _17521_f = *it;
			{
				if (((*(_17521_f))._field_Ident == _17428_ident)) {
					return _17521_f;;
				};
			}
			_iter_next_1b7a125c5:;
			++it;
			goto _iter_begin_1b7a125c5;
		}
		_iter_end_1b7a125c5:;
	};
	return nullptr;;
}



inline jule::Bool _1cdee40ce_IsImplements(_1cdee2990_Struct* _self_, jule::Ptr<_1ce01ac0a_Trait> _18427_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7a13593:;
		if (it != expr_end) {
			jule::Ptr<_1ce01ac0a_Trait> *_18516_it = it;
			{
				if ((_18427_t == (*(_18516_it)))) {
					return true;;
				};
			}
			_iter_next_1b7a13593:;
			++it;
			goto _iter_begin_1b7a13593;
		}
		_iter_end_1b7a13593:;
	};
	return false;;
}



inline jule::Bool _1cdee4420_IsUses(_1cdee2990_Struct* _self_, jule::Ptr<_1cdee2990_Struct> _19421_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7a13ac1:;
		if (it != expr_end) {
			jule::Ptr<_1cdee2990_Struct> *_19516_u = it;
			{
				while ((_19421_s == (*(_19516_u)))) {
					{
						return true;;
					}
				_iter_next_1b7a149e5:;
				}
				_iter_end_1b7a149e5:;;
			}
			_iter_next_1b7a13ac1:;
			++it;
			goto _iter_begin_1b7a13ac1;
		}
		_iter_end_1b7a13ac1:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdee2990_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdee4b6d_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdee96bc_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdee9bb7_BinaryExprModel _Src) {
	_Stream << "BinaryExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdeea091_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdeea5be_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdeea965_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdeeac62_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdeeb2e5_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdeebb97_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdeec071_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdeec527_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdeec901_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdeeccca_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdeed281_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdeed814_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdeedd97_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdeee738_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdeeeace_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdeeeea8_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce0002a5_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce00067e_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce000a58_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce000e32_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce00130b_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce0017b2_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce001c68_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce002142_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce00243e_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce00273b_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce002b15_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce002ede_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce0033b8_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce003a6c_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce003c59_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce004001_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce0042ed_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce0046c7_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce0049c4_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce0056c8_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ce009886_ParamIns> _1ce0062de_instance(jule::Ptr<_1ce005e59_Param> _self_) {
	return jule::new_ptr<_1ce009886_ParamIns>(_1ce009886_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _1ce006575_IsSelf(_1ce005e59_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1ce00680b_IsRef(_1ce005e59_Param* _self_) {
	return (!((*(_self_))._field_Ident).empty() && ((*(_self_))._field_Ident[0LL] == '&'));;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce005e59_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ce007da1_IsVoid(_1ce00792d_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1ce008137_IsMethod(_1ce00792d_Fn* _self_) {
	return ((*(_self_))._field_Owner != nullptr);;
}



inline jule::Bool _1ce0083bd_IsEntryPoint(_1ce00792d_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1ce008654_IsInit(_1ce00792d_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1ce0088da_IsAnon(_1ce00792d_Fn* _self_) {
	return _1cdeae165_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1ce008b71_AnyVar(_1ce00792d_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*(*(_self_))._field_Result.alloc)._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1ce00a832_FnIns> _1ce008e07_instanceForce(jule::Ptr<_1ce00792d_Fn> _self_) {
	jule::Ptr<_1ce00a832_FnIns> _10113_ins = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_1ce0497c7_Scope>(), ._field_Refers=static__1ce00dcec_new(), });;
	(*(_10113_ins))._field_Params=jule::Slice<jule::Ptr<_1ce009886_ParamIns>>::alloc(0LL, (*(_self_))._field_Params.len());
	{
		auto expr = &((*_self_.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7a2b4e0:;
		if (it != expr_end) {
			jule::Ptr<_1ce005e59_Param> _10821_p = *it;
			{
				(*_10113_ins.alloc)._field_Params=jule::append((*_10113_ins.alloc)._field_Params,jule::Slice<jule::Ptr<_1ce009886_ParamIns>>::make({_1ce0062de_instance(_10821_p)}));
			}
			_iter_next_1b7a2b4e0:;
			++it;
			goto _iter_begin_1b7a2b4e0;
		}
		_iter_end_1b7a2b4e0:;
	};
	if (((*((*_10113_ins.alloc)._field_Decl))._field_Result != nullptr)) {
		(*_10113_ins.alloc)._field_Result=(*((*(*(*_10113_ins.alloc)._field_Decl.alloc)._field_Result.alloc)._field_Kind))._field_Kind;
	};
	return _10113_ins;;
}



inline jule::Ptr<_1ce00a832_FnIns> _1ce00918d_instance(jule::Ptr<_1ce00792d_Fn> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*_self_.alloc)._field_Instances[0LL];;
	};
	return _1ce008e07_instanceForce(_self_);;
}



inline jule::Ptr<_1ce00a832_FnIns> _1ce00949b_appendInstance(_1ce00792d_Fn* _self_, jule::Ptr<_1ce00a832_FnIns>* _12938_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_1ce00a832_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_1ce00a832_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7a31407:;
		if (it != expr_end) {
			jule::Ptr<_1ce00a832_FnIns> _14521_ains = *it;
			{
				if (_1ce00c38e_Same(_14521_ains.ptr(), (*(_12938_ins)))) {
					return _14521_ains;;
				};
			}
			_iter_next_1b7a31407:;
			++it;
			goto _iter_begin_1b7a31407;
		}
		_iter_end_1b7a31407:;
	};
	{ jule::Slice<jule::Ptr<_1ce00a832_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce00792d_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ce009be9_Str(_1ce009886_ParamIns* _self_) {
	_22ab0b88c_StrBuilder _16713_s = static__22ab0bb56_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Mutable) {
		_22ab154bc_WriteStr(&_16713_s, jule::Str::lit("mut ", 4));
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Reference) {
		_22ab154bc_WriteStr(&_16713_s, jule::Str::lit("&_:", 3));
	};
	if (_1ce006575_IsSelf((*(_self_))._field_Decl)) {
		if (_1ce00680b_IsRef((*(_self_))._field_Decl)) {
			_22ab15775_WriteByte(&_16713_s, '&');
		};
		_22ab154bc_WriteStr(&_16713_s, jule::Str::lit("self", 4));
		return _22ab15cb4_Str(&_16713_s);;
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Variadic) {
		_22ab154bc_WriteStr(&_16713_s, jule::Str::lit("...", 3));
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_22ab154bc_WriteStr(&_16713_s, _1ce14d090_Str((*(_self_))._field_Kind));
	};
	return _22ab15cb4_Str(&_16713_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce009886_ParamIns _Src) {
	_Stream << _1ce009be9_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ce00ab73_Str(_1ce00a832_FnIns* _self_) {
	;
	return _1ce00c6d0_GetKindStr(_self_, false);;
}



inline jule::Bool _1ce00aeb4_Equal(jule::Ptr<_1ce00a832_FnIns> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _21821_other) {
	jule::Ptr<_1ce00a832_FnIns> _2199_f = _1ce151615_Fn(_21821_other.ptr());;
	if ((_2199_f == nullptr)) {
		return false;;
	};
	return _1ce00b459_EqualFn(_self_, &(_2199_f));;
}



inline jule::Bool _1ce00b459_EqualFn(jule::Ptr<_1ce00a832_FnIns> _self_, jule::Ptr<_1ce00a832_FnIns>* _22924_f) {
	if (((*((*(_self_))._field_Decl))._field_Exceptional != (*(*((*(_22924_f))))._field_Decl.alloc)._field_Exceptional)) {
		return false;;
	};
	if (((*(*_self_.alloc)._field_Decl.alloc)._field_Unsafety != (*(*((*(_22924_f))))._field_Decl.alloc)._field_Unsafety)) {
		return false;;
	};
	if ((_1ce007da1_IsVoid((*_self_.alloc)._field_Decl) != _1ce007da1_IsVoid((*((*(_22924_f))))._field_Decl))) {
		return false;;
	};
	jule::Fn<jule::Bool(jule::Ptr<_1ce009886_ParamIns>,jule::Ptr<_1ce009886_ParamIns>)> _2399_checkParams = jule::Fn<jule::Bool(jule::Ptr<_1ce009886_ParamIns>,jule::Ptr<_1ce009886_ParamIns>)>([=](jule::Ptr<_1ce009886_ParamIns> _23927_p1, jule::Ptr<_1ce009886_ParamIns> _23942_p2) mutable -> jule::Bool {
		if (((*((*(_23927_p1))._field_Decl))._field_Mutable != (*(*(_23942_p2))._field_Decl.alloc)._field_Mutable)) {
			return false;;
		};
		if (_1ce006575_IsSelf((*_23927_p1.alloc)._field_Decl)) {
			if ((!(_1ce006575_IsSelf((*_23942_p2.alloc)._field_Decl)))) {
				return false;;
			};
			if ((_1ce00680b_IsRef((*_23927_p1.alloc)._field_Decl) != _1ce00680b_IsRef((*_23942_p2.alloc)._field_Decl))) {
				return false;;
			};
			return true;;
		};
		if (((*(*_23927_p1.alloc)._field_Decl.alloc)._field_Reference != (*(*_23942_p2.alloc)._field_Decl.alloc)._field_Reference)) {
			return false;;
		};
		if (((*(*_23927_p1.alloc)._field_Decl.alloc)._field_Variadic != (*(*_23942_p2.alloc)._field_Decl.alloc)._field_Variadic)) {
			return false;;
		};
		return _1ce14d3d1_Equal((*_23927_p1.alloc)._field_Kind, (*_23942_p2.alloc)._field_Kind);;
	});;
	if (((*((*(_22924_f))))._field_Params.len() != (*_self_.alloc)._field_Params.len())) {
		return false;;
	};
	jule::I32 _27113_i = 0LL;;
	for (; (_27113_i < (*_self_.alloc)._field_Params.len()); (_27113_i)++) {
		{
			if ((!(_2399_checkParams((*_self_.alloc)._field_Params[_27113_i], (*((*(_22924_f))))._field_Params[_27113_i])))) {
				return false;;
			};
		}
	_iter_next_1b7ba2e4c:;
	}
	_iter_end_1b7ba2e4c:;;
	if ((!(_1ce007da1_IsVoid((*_self_.alloc)._field_Decl)))) {
		if ((!(_1ce14d3d1_Equal((*_self_.alloc)._field_Result, (*((*(_22924_f))))._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1ce00b79a_equalTrait(jule::Ptr<_1ce00a832_FnIns> _self_, jule::Ptr<_1ce00a832_FnIns>* _28827_other) {
	if (((*((*(_self_))._field_Decl))._field_Public != (*(*((*(_28827_other))))._field_Decl.alloc)._field_Public)) {
		return false;;
	};
	if (((*(*_self_.alloc)._field_Decl.alloc)._field_Ident != (*(*((*(_28827_other))))._field_Decl.alloc)._field_Ident)) {
		return false;;
	};
	if ((!(_1ce00b459_EqualFn(_self_, _28827_other)))) {
		return false;;
	};
	if (((*(*_self_.alloc)._field_Decl.alloc)._field_Generics.len() != (*(*((*(_28827_other))))._field_Decl.alloc)._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1ce14cbc7_TypeKind>> _1ce00ba31_Types(_1ce00a832_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1b7ba8bab:;
			{
				return nullptr;;
			}
		}
		else if ((_1ce15214e_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1b7ba8c22:;
			{
				return jule::Slice<jule::Ptr<_1ce14cbc7_TypeKind>>::make({(*(_self_))._field_Result});;
			}
		}
		else {
			_case_begin_1b7ba875a:;
			{
				return (*(_1ce15214e_Tup((*(_self_))._field_Result.ptr())))._field_Types;;
			}
		}
		_match_end_1b7ba865b:;
	};
}



inline jule::Bool _1ce00bcb7_IsBuiltin(_1ce00a832_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1ce00c04d_IsAnon(_1ce00a832_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1ce0088da_IsAnon((*(_self_))._field_Decl)));;
}



inline jule::Bool _1ce00c38e_Same(_1ce00a832_FnIns* _self_, jule::Ptr<_1ce00a832_FnIns> _33119_f) {
	if ((((*(_self_))._field_Decl != (*(_33119_f))._field_Decl) || ((*_33119_f.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7bac132:;
		if (it != expr_end) {
			jule::I32 _33613_i = it - expr->begin();
			jule::Ptr<_1ce14b2e1_InsGeneric> *_33616_g = it;
			{
				jule::Ptr<_1ce14b2e1_InsGeneric> _33713_g2 = (*_33119_f.alloc)._field_Generics[_33613_i];;
				if ((((*((*((*(_33616_g))))._field_Kind))._field_BindIdent != (*(*(_33713_g2))._field_Kind.alloc)._field_BindIdent) || (!(_1ce14d3d1_Equal((*(*(_33616_g)).alloc)._field_Kind, (*_33713_g2.alloc)._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1b7bac132:;
			++it;
			_33613_i++;
			goto _iter_begin_1b7bac132;
		}
		_iter_end_1b7bac132:;
	};
	return true;;
}



inline jule::Str _1ce00c6d0_GetKindStr(_1ce00a832_FnIns* _self_, jule::Bool _34825_ident) {
	_22ab0b88c_StrBuilder _34913_s = static__22ab0bb56_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Unsafety) {
		_22ab154bc_WriteStr(&_34913_s, jule::Str::lit("unsafe ", 7));
	};
	_22ab154bc_WriteStr(&_34913_s, jule::Str::lit("fn", 2));
	if ((_34825_ident && ((*(_self_))._field_Decl != nullptr))) {
		_22ab15775_WriteByte(&_34913_s, ' ');
		_22ab154bc_WriteStr(&_34913_s, (*(*(_self_))._field_Decl.alloc)._field_Ident);
	};
	_22ab15775_WriteByte(&_34913_s, '(');
	jule::I32 _3639_n = (*(_self_))._field_Params.len();;
	if ((_3639_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b7bb2445:;
			if (it != expr_end) {
				jule::I32 _36517_i = it - expr->begin();
				jule::Ptr<_1ce009886_ParamIns> *_36520_p = it;
				{
					_22ab154bc_WriteStr(&_34913_s, _1ce009be9_Str((*(_36520_p)).ptr()));
					if ((_36517_i < ((*(_self_))._field_Params.len() - 1LL))) {
						_22ab15775_WriteByte(&_34913_s, ',');
					};
				}
				_iter_next_1b7bb2445:;
				++it;
				_36517_i++;
				goto _iter_begin_1b7bb2445;
			}
			_iter_end_1b7bb2445:;
		};
	};
	_22ab15775_WriteByte(&_34913_s, ')');
	if ((*(*(_self_))._field_Decl.alloc)._field_Exceptional) {
		_22ab15775_WriteByte(&_34913_s, '!');
	};
	if ((!(_1ce007da1_IsVoid((*(_self_))._field_Decl)))) {
		_22ab15775_WriteByte(&_34913_s, ':');
		_22ab154bc_WriteStr(&_34913_s, _1ce14d090_Str((*(_self_))._field_Result.ptr()));
	};
	return _22ab15cb4_Str(&_34913_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce00a832_FnIns _Src) {
	_Stream << _1ce00ab73_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1ce00da00_ReferenceStack> static__1ce00dcec_new(void) {
	return jule::new_ptr<_1ce00da00_ReferenceStack>(_1ce00da00_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I32 _1ce00e1e8_Len(_1ce00da00_ReferenceStack* _self_) {
	return (*(_self_))._field_buffer.len();;
}



inline jule::Any _1ce00e539_At(_1ce00da00_ReferenceStack* _self_, jule::I32 _6821_i) {
	return (*(_self_))._field_buffer[_6821_i];;
}



inline void _1ce00e7e2_Push(_1ce00da00_ReferenceStack* _self_, jule::Any _7327_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_7327_ref); };
}



inline jule::Bool _1e6b6110c_Exist(_1ce00da00_ReferenceStack* _self_, jule::Ptr<_1ce00a832_FnIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6b62493:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type7_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1e6b62493:;
			++it;
			goto _iter_begin_1e6b62493;
		}
		_iter_end_1e6b62493:;
	};
	return false;;
}

inline jule::Bool _1e6b75dad_Exist(_1ce00da00_ReferenceStack* _self_, jule::Ptr<_1ce0b4105_Var> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6b77200:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type8_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1e6b77200:;
			++it;
			goto _iter_begin_1e6b77200;
		}
		_iter_end_1e6b77200:;
	};
	return false;;
}

inline jule::Bool _1b86d62a9_Exist(_1ce00da00_ReferenceStack* _self_, jule::Ptr<_1cdee571d_StructIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b86d7640:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type9_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1b86d7640:;
			++it;
			goto _iter_begin_1b86d7640;
		}
		_iter_end_1b86d7640:;
	};
	return false;;
}

inline jule::Bool _1b856cccd_Exist(_1ce00da00_ReferenceStack* _self_, jule::Ptr<_1ce01ac0a_Trait> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b856e10e:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type10_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1b856e10e:;
			++it;
			goto _iter_begin_1b856e10e;
		}
		_iter_end_1b856e10e:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce00da00_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce01001d_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline void _1ce015474_pushErr(_1ce0149c3_symbolBuilder* _self_, jule::Ptr<_1cdeab4b4_Token>* _33227_token, jule::Str _33242_fmt, jule::Slice<jule::Any> _33255_args) {
	{ jule::Slice<_22a93672d_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1ce089075_compilerErr(_33227_token, true, _33242_fmt, _33255_args)); };
}



inline void _1ce015c05_pushSuggestion(_1ce0149c3_symbolBuilder* _self_, jule::Str _34133_fmt, jule::Slice<jule::Any> _34146_args) {
	{
		_1ce08a62b_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _34133_fmt, _34146_args);
	};
}



inline jule::Bool _1ce016101_checkCppUseDeclPath(_1ce0149c3_symbolBuilder* _self_, jule::Ptr<_1cded9b96_UseDecl>* _34539_decl, jule::Str* _34556_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _3469_ext = _22ab18c40_Ext((*(_34556_path)));;
	if (((!(_22a9293e1_IsValidHeaderExt(_3469_ext))) && (!(_22a9296aa_IsValidCppExt(_3469_ext))))) {
		_1ce015474_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("invalid C++ extension: @", 24), jule::Slice<jule::Any>::make({jule::Any(_3469_ext, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_2439ca2d1_Status> _3539_info = ({
		auto except = static__2439c6e6a_Of((*(_34556_path)));
		(except.ok()) ? (except.result) : ({{
			_1ce015474_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34539_decl))))._field_LinkPath, &__jule_any_type4)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_2439ca2d1_Status>(nullptr);});
	});;
	if (_2439ca6aa_IsDir(_3539_info.ptr())) {
		_1ce015474_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34539_decl))))._field_LinkPath, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1ce06b0ac_ImportInfo> _1ce01640e_buildCppHeaderImport(_1ce0149c3_symbolBuilder* _self_, jule::Ptr<_1cded9b96_UseDecl>* _36544_decl) {
	jule::Str _36613_path = (*((*(_36544_decl))))._field_LinkPath;;
	if ((!(_22a929116_IsStdHeaderPath((*((*(_36544_decl))))._field_LinkPath)))) {
		_36613_path=_22ab189a9_Join(jule::Slice<jule::Str>::make({_1cdeb23ee_Dir((*((*((*(_36544_decl))))._field_Token))._field_File.ptr()),(*((*(_36544_decl))))._field_LinkPath}));
		jule::Bool _37017_ok = _1ce016101_checkCppUseDeclPath(_self_, _36544_decl, &(_36613_path));;
		if ((!(_37017_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _22ab19009_Abs(_36613_path);
			_36613_path = __jule_assign_result.__jule_result_arg0;
			_37017_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_37017_ok))) {
			_1ce015474_pushErr(_self_, &((*((*(_36544_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_36544_decl))))._field_LinkPath, &__jule_any_type4)}));
		};
	};
	return jule::new_ptr<_1ce06b0ac_ImportInfo>(_1ce06b0ac_ImportInfo{._field_Token=(*((*(_36544_decl))))._field_Token, ._field_Path=_36613_path, ._field_LinkPath=(*((*(_36544_decl))))._field_LinkPath, ._field_Ident=jule::Str(), ._field_Binded=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_1ce06b0ac_ImportInfo> _1ce016750_buildStdImport(_1ce0149c3_symbolBuilder* _self_, jule::Ptr<_1cded9b96_UseDecl>* _39338_decl) {
	jule::Str _39513_path = (*((*(_39338_decl))))._field_LinkPath.slice(5LL);;
	_39513_path=_22aaed63c_Replace(_39513_path, jule::Str::lit("::", 2), jule::Str::lit("/", 1), -1LL);
	_39513_path=_22ab189a9_Join(jule::Slice<jule::Str>::make({_22abd9a25_PathStdlib,_39513_path}));
	jule::Bool _39815_ok;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _22ab19009_Abs(_39513_path);
		_39513_path = __jule_assign_result.__jule_result_arg0;
		_39815_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_39815_ok))) {
		_1ce015474_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2439ca2d1_Status> _4059_info = ({
		auto except = static__2439c6e6a_Of(_39513_path);
		(except.ok()) ? (except.result) : ({{
			_1ce015474_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_2439ca2d1_Status>(nullptr);});
	});;
	if ((!(_2439ca6aa_IsDir(_4059_info.ptr())))) {
		_1ce015474_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I32 _4159_i = (_22aae924d_FindLast((*((*(_39338_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4169_ident = (*((*(_39338_decl))))._field_LinkPath.slice(_4159_i);;
	return jule::new_ptr<_1ce06b0ac_ImportInfo>(_1ce06b0ac_ImportInfo{._field_Token=(*((*(_39338_decl))))._field_Token, ._field_Path=_39513_path, ._field_LinkPath=(*((*(_39338_decl))))._field_LinkPath, ._field_Ident=_4169_ident, ._field_Alias=(*((*(_39338_decl))))._field_Alias, ._field_Binded=false, ._field_Std=true, ._field_ImportAll=(*((*(_39338_decl))))._field_Full, ._field_Package=jule::new_ptr<_1ce06ded3_Package>(_1ce06ded3_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1ce06b0ac_ImportInfo> _1ce016a91_buildIdentImport(jule::Ptr<_1ce0149c3_symbolBuilder> _self_, jule::Ptr<_1cded9b96_UseDecl>* _43341_decl) {
	if ((((*((*(_43341_decl))))._field_LinkPath.equal("_", 1) || (_22aae8912_Find((*((*(_43341_decl))))._field_LinkPath, jule::Str::lit("::_::", 5)) != -1LL)) || _22aae815e_HasSuffix((*((*(_43341_decl))))._field_LinkPath, jule::Str::lit("::_", 3)))) {
		_1ce015474_pushErr(_self_.ptr(), &((*((*(_43341_decl))))._field_Token), jule::Str::lit("use declaration paths cannot contain blank identifier", 53), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _4419_modPath = _1ce068197_Importer_mptr_data[((*_self_.alloc)._field_importer).type_offset]._1ce06720c_GetModPath((*_self_.alloc)._field_importer);;
	if ((_4419_modPath.len() == 0LL)) {
		_1ce015474_pushErr(_self_, &((*((*(_43341_decl))))._field_Token), jule::Str::lit("no module file found in current directory or any parent directory", 65), jule::Slice<jule::Any>());
		_1ce015c05_pushSuggestion(_self_, jule::Str::lit("use \"julec mod init\" command to initialize module", 49), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _44813_path = (*((*(_43341_decl))))._field_LinkPath;;
	_44813_path=_22aaed63c_Replace(_44813_path, jule::Str::lit("::", 2), jule::Str::lit("/", 1), -1LL);
	_44813_path=_22ab189a9_Join(jule::Slice<jule::Str>::make({_4419_modPath,_44813_path}));
	jule::Bool _45215_ok;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _22ab19009_Abs(_44813_path);
		_44813_path = __jule_assign_result.__jule_result_arg0;
		_45215_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_45215_ok))) {
		_1ce015474_pushErr(_self_, &((*((*(_43341_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43341_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2439ca2d1_Status> _4599_info = ({
		auto except = static__2439c6e6a_Of(_44813_path);
		(except.ok()) ? (except.result) : ({{
			_1ce015474_pushErr(_self_, &((*((*(_43341_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43341_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_2439ca2d1_Status>(nullptr);});
	});;
	if ((!(_2439ca6aa_IsDir(_4599_info.ptr())))) {
		_1ce015474_pushErr(_self_, &((*((*(_43341_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43341_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I32 _4699_i = (_22aae924d_FindLast((*((*(_43341_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4709_ident = (*((*(_43341_decl))))._field_LinkPath.slice(_4699_i);;
	return jule::new_ptr<_1ce06b0ac_ImportInfo>(_1ce06b0ac_ImportInfo{._field_Token=(*((*(_43341_decl))))._field_Token, ._field_Path=_44813_path, ._field_LinkPath=(*((*(_43341_decl))))._field_LinkPath, ._field_Ident=_4709_ident, ._field_Alias=(*((*(_43341_decl))))._field_Alias, ._field_Binded=false, ._field_Std=false, ._field_ImportAll=(*((*(_43341_decl))))._field_Full, ._field_Package=jule::new_ptr<_1ce06ded3_Package>(_1ce06ded3_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1ce06b0ac_ImportInfo> _1ce016dd2_buildImport(jule::Ptr<_1ce0149c3_symbolBuilder> _self_, jule::Ptr<_1cded9b96_UseDecl>* _48736_decl) {
	{
		
		if ((*((*(_48736_decl))))._field_Binded) {
			_case_begin_1b7c02045:;
			{
				return _1ce01640e_buildCppHeaderImport(_self_.ptr(), _48736_decl);;
			}
		}
		else if ((*((*(_48736_decl))))._field_Std) {
			_case_begin_1b7c02430:;
			{
				return _1ce016750_buildStdImport(_self_.ptr(), _48736_decl);;
			}
		}
		else {
			_case_begin_1b7c01ece:;
			{
				return _1ce016a91_buildIdentImport(_self_, _48736_decl);;
			}
		}
		_match_end_1b7c01dd0:;
	};
}



inline jule::Bool _1ce017223_checkDuplicateUseDecl(_1ce0149c3_symbolBuilder* _self_, jule::Ptr<_1ce06b0ac_ImportInfo>* _49841_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ce06b0ac_ImportInfo> _5009_lpkg = _1ce116d7d_SelectPackage((*(_self_))._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1ce06b0ac_ImportInfo>)>([=](jule::Ptr<_1ce06b0ac_ImportInfo> _50045_spkg) mutable -> jule::Bool {
		return ((*((*(_49841_pkg))))._field_Path == (*(_50045_spkg))._field_Path);;
	}));;
	if ((_5009_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1ce015474_pushErr(_self_, &((*((*(_49841_pkg))))._field_Token), jule::Str::lit("use declaration duplication: @ is already used above", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_49841_pkg))))._field_LinkPath, &__jule_any_type4)}));
	_1ce015c05_pushSuggestion(_self_, jule::Str::lit("remove this use declaration, already used, it is safe", 53), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _1ce017586_implImportSelections(_1ce0149c3_symbolBuilder* _self_, jule::Ptr<_1ce06b0ac_ImportInfo>* _51244_imp, jule::Ptr<_1cded9b96_UseDecl>* _51267_decl) {
	(*((*(_51244_imp))))._field_Selected=(*((*(_51267_decl))))._field_Selected;
	{
		auto expr = &((*((*(_51244_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7ace197:;
		if (it != expr_end) {
			jule::Ptr<_1cdeab4b4_Token> _51416_item = *it;
			{
				{
					auto expr = &((*((*(_51244_imp))))._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7ace97d:;
					if (it != expr_end) {
						jule::Ptr<_1cdeab4b4_Token> _51520_citem = *it;
						{
							if ((_51416_item == _51520_citem)) {
								goto _iter_end_1b7ace97d;
							} else if (((*(_51416_item))._field_Kind == (*(_51520_citem))._field_Kind)) {
								_1ce015474_pushErr(_self_, &(_51416_item), jule::Str::lit("duplicated selection: @ is already selected", 43), jule::Slice<jule::Any>::make({jule::Any((*_51416_item.alloc)._field_Kind, &__jule_any_type4)}));
								_1ce015c05_pushSuggestion(_self_, jule::Str::lit("remove this use selection, already selected, it is safe", 55), jule::Slice<jule::Any>());
								goto _iter_end_1b7ace97d;
							};
						}
						_iter_next_1b7ace97d:;
						++it;
						goto _iter_begin_1b7ace97d;
					}
					_iter_end_1b7ace97d:;
				};
			}
			_iter_next_1b7ace197:;
			++it;
			goto _iter_begin_1b7ace197;
		}
		_iter_end_1b7ace197:;
	};
}



inline jule::Str _1ce0178c7_getAsLinkPath(jule::Ptr<_1ce0149c3_symbolBuilder> _self_, jule::Str _52737_path) {
	if (_22aae7867_HasPrefix(_52737_path, _22abd9a25_PathStdlib)) {
		(_52737_path).mut_slice(_22abd9a25_PathStdlib.len());;
		return (jule::Str::lit("std", 3) + _22aaed63c_Replace(_52737_path, jule::Str::lit("/", 1), jule::Str::lit("::", 2), -1LL));;
	};
	jule::Str _5339_root;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _22ab19009_Abs(_1ce068197_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ce06720c_GetModPath((*(_self_))._field_importer));
		_5339_root = __jule_assign_result.__jule_result_arg0;
	});
	(_52737_path).mut_slice(_5339_root.len());;
	if ((_52737_path[0LL] == 47LLU)) {
		(_52737_path).mut_slice(1LL);;
	};
	return _22aaed63c_Replace(_52737_path, jule::Str::lit("/", 1), jule::Str::lit("::", 2), -1LL);;
}



inline void _1ce017ce5_pushCycleError(jule::Ptr<_1ce0149c3_symbolBuilder> _self_, jule::Ptr<_1ce0149c3_symbolBuilder>* _54135_sb, jule::Str _54155_path, _22ab0b88c_StrBuilder* _54171_message) {
	;
	jule::Str _5439_refersTo = _22a936b90_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_1ce0178c7_getAsLinkPath(_self_, _1cdeb23ee_Dir((*((*((*(_54135_sb))))._field_table))._field_File.ptr())), &__jule_any_type4),jule::Any(_1ce0178c7_getAsLinkPath(_self_, _54155_path), &__jule_any_type4)}));;
	jule::Str _5479_m = _22ab15cb4_Str(_54171_message);;
	_22ab154bc_WriteStr(_54171_message, _22aae7070_Repeat(jule::Str::lit(" ", 1), 7LL));
	_22ab154bc_WriteStr(_54171_message, _5439_refersTo);
	_22ab15775_WriteByte(_54171_message, '\n');
	_22ab154bc_WriteStr(_54171_message, _5479_m);
}



inline void _1ce018213_pushCrossCycleError(jule::Ptr<_1ce0149c3_symbolBuilder> _self_, jule::Ptr<_1ce0149c3_symbolBuilder>* _55440_target, jule::Ptr<_1ce06b0ac_ImportInfo>* _55465_imp, jule::Ptr<_1cdeab4b4_Token>* _55484_errorToken) {
	_22ab0b88c_StrBuilder _55513_message = static__22ab0bb56_New(32LL);;
	_1ce017ce5_pushCycleError(_self_, &(_self_), (*((*(_55465_imp))))._field_Path, &(_55513_message));
	jule::Ptr<_1ce0149c3_symbolBuilder> _55913_owner = (*_self_.alloc)._field_owner;;
	jule::Ptr<_1ce0149c3_symbolBuilder> _56013_old = _self_;;
	while (((*(_55913_owner))._field_owner != nullptr)) {
		{
			_1ce017ce5_pushCycleError(_self_, &((*_56013_old.alloc)._field_owner), _1cdeb23ee_Dir((*((*_56013_old.alloc)._field_table))._field_File.ptr()), &(_55513_message));
			if (((*_55913_owner.alloc)._field_owner == (*(_55440_target)))) {
				_1ce017ce5_pushCycleError(_self_, _55440_target, _1cdeb23ee_Dir((*(*_55913_owner.alloc)._field_table.alloc)._field_File), &(_55513_message));
				goto _iter_end_1b7ad72d2;
			};
			_56013_old=_55913_owner;
			_55913_owner=(*_55913_owner.alloc)._field_owner;
		}
	_iter_next_1b7ad72d2:;
	}
	_iter_end_1b7ad72d2:;;
	_1ce015474_pushErr(_self_, _55484_errorToken, jule::Str::lit("illegal cross cycle in use declarations;\n@", 42), jule::Slice<jule::Any>::make({jule::Any(_22ab15cb4_Str(&_55513_message), &__jule_any_type4)}));
}



inline jule::Bool _1ce01860e_checkImportCycles(jule::Ptr<_1ce0149c3_symbolBuilder> _self_, jule::Ptr<_1ce06b0ac_ImportInfo> _57737_imp, jule::Ptr<_1cded9b96_UseDecl>* _57756_decl) {
	if (((*(_57737_imp))._field_Path == _1cdeb23ee_Dir((*((*(_self_))._field_table))._field_File.ptr()))) {
		_1ce015474_pushErr(_self_, &((*((*(_57756_decl))))._field_Token), jule::Str::lit("illegal cycle in use declaration, package @ refers to itself", 60), jule::Slice<jule::Any>::make({jule::Any(_1ce0178c7_getAsLinkPath(_self_, (*_57737_imp.alloc)._field_Path), &__jule_any_type4)}));
		return false;;
	};
	if (((*_self_.alloc)._field_owner == nullptr)) {
		return true;;
	};
	jule::Ptr<_1ce0149c3_symbolBuilder> _58713_owner = (*_self_.alloc)._field_owner;;
	_julec_label_1b7adde65:;
	if ((_1cdeb23ee_Dir((*(*(_58713_owner))._field_table.alloc)._field_File) == (*_57737_imp.alloc)._field_Path)) {
		_1ce018213_pushCrossCycleError(_self_, &(_58713_owner), &(_57737_imp), &((*((*(_57756_decl))))._field_Token));
		return false;;
	};
	if (((*_58713_owner.alloc)._field_owner != nullptr)) {
		_58713_owner=(*_58713_owner.alloc)._field_owner;
		goto _julec_label_1b7adde65;
	};
	return true;;
}



inline void _1ce018a2c_checkPackageAccessibility(_1ce0149c3_symbolBuilder* _self_, jule::Ptr<_1cded9b96_UseDecl>* _60845_decl, jule::Str* _60862_mod, jule::Str* _60873_path) {
	if (((_1ce068197_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ce06720c_GetModPath((*(_self_))._field_importer) != (*(_60862_mod))) && _22aaec262_Contains((*(_60873_path)), jule::Str::lit("internal", 8)))) {
		_1ce015474_pushErr(_self_, &((*((*(_60845_decl))))._field_Token), jule::Str::lit("you cannot access to internal packages", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1ce018e28_importPackage(jule::Ptr<_1ce0149c3_symbolBuilder> _self_, jule::Ptr<_1ce06b0ac_ImportInfo>* _61438_imp, jule::Ptr<_1cded9b96_UseDecl>* _61461_decl) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_61438_imp))))._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1ce06b0ac_ImportInfo> _61913_port = _1ce068197_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1ce06788e_GetImport((*(_self_))._field_importer, (*((*(_61438_imp))))._field_Path);;
	if ((_61913_port != nullptr)) {
		(*((*(_61438_imp))))._field_Package=(*_61913_port.alloc)._field_Package;
		(*((*(_61438_imp))))._field_Duplicate=true;
		jule::Str _62413_oldMod = _1ce068197_Importer_mptr_data[((*_self_.alloc)._field_importer).type_offset]._1ce06720c_GetModPath((*_self_.alloc)._field_importer);;
		_1ce068197_Importer_mptr_data[((*_self_.alloc)._field_importer).type_offset]._1ce066e76_SetModPath((*_self_.alloc)._field_importer, _1ce068197_Importer_mptr_data[((*_self_.alloc)._field_importer).type_offset]._1ce06754d_ModById((*_self_.alloc)._field_importer, (*((*(_61438_imp))))._field_ModId));
		_1ce018a2c_checkPackageAccessibility(_self_, _61461_decl, &(_62413_oldMod), &((*_61913_port.alloc)._field_Path));
		_1ce068197_Importer_mptr_data[((*_self_.alloc)._field_importer).type_offset]._1ce066e76_SetModPath((*_self_.alloc)._field_importer, _62413_oldMod);
	} else {
		if ((!(_1ce01860e_checkImportCycles(_self_, (*(_61438_imp)), _61461_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _63313_oldMod = _1ce068197_Importer_mptr_data[((*_self_.alloc)._field_importer).type_offset]._1ce06720c_GetModPath((*_self_.alloc)._field_importer);;
		__JULE_DEFER({
			_1ce068197_Importer_mptr_data[((*_self_.alloc)._field_importer).type_offset]._1ce066e76_SetModPath((*_self_.alloc)._field_importer, _63313_oldMod);
		});;
		if ((*((*(_61438_imp))))._field_Std) {
			_1ce068197_Importer_mptr_data[((*_self_.alloc)._field_importer).type_offset]._1ce066e76_SetModPath((*_self_.alloc)._field_importer, _22abd9a25_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1cdebead2_Ast>> _63817_asts;;
		jule::Slice<_22a93672d_Log> _63827_errors;;
		({
			__jule_tuple_sx_1cdebead2_Ast__jule_tuple_s_22a93672d_Log __jule_assign_result = _1ce068197_Importer_mptr_data[((*_self_.alloc)._field_importer).type_offset]._1ce067c8a_ImportPackage((*_self_.alloc)._field_importer, (*((*(_61438_imp))))._field_Path, (!((*((*(_61438_imp))))._field_Std)));
			_63817_asts = __jule_assign_result.__jule_result_arg0;
			_63827_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_63827_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_63827_errors);
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1ce018a2c_checkPackageAccessibility(_self_, _61461_decl, &(_63313_oldMod), &((*((*(_61438_imp))))._field_Path));
		{
			auto expr = &(_63817_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b7aea5ae:;
			if (it != expr_end) {
				jule::Ptr<_1cdebead2_Ast> _64625_ast = *it;
				{
					jule::Ptr<_1ce116894_SymbolTable> _64725_table = nullptr;;
					({
						__jule_tuple_x_1ce116894_SymbolTable__jule_tuple_s_22a93672d_Log __jule_assign_result = _1ce16d5aa_buildSymbols(&(_64625_ast), &((*_self_.alloc)._field_importer), _self_);
						_64725_table = __jule_assign_result.__jule_result_arg0;
						_63827_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_63827_errors.len() > 0LL)) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_63827_errors);
						__jule_func_result = false;
						return __jule_func_result;;
					};
					(*((*((*(_61438_imp))))._field_Package))._field_Files=jule::append((*(*((*(_61438_imp))))._field_Package.alloc)._field_Files,jule::Slice<jule::Ptr<_1ce116894_SymbolTable>>::make({_64725_table}));
				}
				_iter_next_1b7aea5ae:;
				++it;
				goto _iter_begin_1b7aea5ae;
			}
			_iter_end_1b7aea5ae:;
		};
	};
	_1ce017586_implImportSelections(_self_, _61438_imp, _61461_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1ce06b0ac_ImportInfo> _1ce019269_importUseDecl(jule::Ptr<_1ce0149c3_symbolBuilder> _self_, jule::Ptr<_1cded9b96_UseDecl>* _66138_decl) {
	jule::Ptr<_1ce06b0ac_ImportInfo> _66213_imp = _1ce016dd2_buildImport(_self_, _66138_decl);;
	if ((_66213_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _66813_ok = _1ce017223_checkDuplicateUseDecl(_self_, &(_66213_imp));;
	if ((!(_66813_ok))) {
		return nullptr;;
	};
	_66813_ok=_1ce018e28_importPackage(_self_, &(_66213_imp), _66138_decl);
	(*((*_self_.alloc)._field_table))._field_Imports=jule::append((*(*_self_.alloc)._field_table.alloc)._field_Imports,jule::Slice<jule::Ptr<_1ce06b0ac_ImportInfo>>::make({_66213_imp}));
	if (_66813_ok) {
		_1ce068197_Importer_mptr_data[((*_self_.alloc)._field_importer).type_offset]._1ce068043_Imported((*_self_.alloc)._field_importer, _66213_imp);
		return _66213_imp;;
	};
	return nullptr;;
}



inline void _1ce019467_importUseDecls(jule::Ptr<_1ce0149c3_symbolBuilder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ast))._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7b00e66:;
		if (it != expr_end) {
			jule::Ptr<_1cded9b96_UseDecl> _68321_decl = *it;
			{
				_1ce019269_importUseDecl(_self_, &(_68321_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					goto _iter_end_1b7b00e66;
				};
			}
			_iter_next_1b7b00e66:;
			++it;
			goto _iter_begin_1b7b00e66;
		}
		_iter_end_1b7b00e66:;
	};
}



inline void _1ce019720_appendNode(_1ce0149c3_symbolBuilder* _self_, _1cdec0a8e_Node* _69234_node) {
	{
		auto &_match_expr{ (*(_69234_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1b7b014a5:;
			{
				(*((*(_self_))._field_table))._field_Impls=jule::append((*(*(_self_))._field_table.alloc)._field_Impls,jule::Slice<jule::Ptr<_1ce044371_Impl>>::make({_1ce01440c_buildImpl((*(_69234_node))._field_Data.unsafe_cast_ptr<_1cdedd705_Impl>())}));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1b7b024c8:;
			{
				jule::Ptr<_1ce14bdd5_TypeAlias> _69717_ta = _1ce010958_buildTypeAlias((*(_69234_node))._field_Data.unsafe_cast_ptr<_1cded85ac_TypeAliasDecl>());;
				(*((*(_self_))._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,jule::Slice<jule::Ptr<_1ce14bdd5_TypeAlias>>::make({_69717_ta}));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1b7b0253e:;
			{
				jule::Ptr<_1cdee2990_Struct> _70017_srct = _1ce0112e9_buildStruct((*(_69234_node))._field_Data.unsafe_cast_ptr<_1cdedc858_StructDecl>());;
				(*((*(_self_))._field_table))._field_Structs=jule::append((*(*(_self_))._field_table.alloc)._field_Structs,jule::Slice<jule::Ptr<_1cdee2990_Struct>>::make({_70017_srct}));
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b7b025a5:;
			{
				jule::Ptr<_1ce00792d_Fn> _70317_f = _1ce011e98_buildFunc((*(_69234_node))._field_Data.unsafe_cast_ptr<_1cded3750_FnDecl>());;
				(*((*(_self_))._field_table))._field_Funcs=jule::append((*(*(_self_))._field_table.alloc)._field_Funcs,jule::Slice<jule::Ptr<_1ce00792d_Fn>>::make({_70317_f}));
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1b7b0261b:;
			{
				jule::Ptr<_1ce01ac0a_Trait> _70617_t = _1ce0127e5_buildTrait((*(_69234_node))._field_Data.unsafe_cast_ptr<_1cdedd095_TraitDecl>());;
				(*((*(_self_))._field_table))._field_Traits=jule::append((*(*(_self_))._field_table.alloc)._field_Traits,jule::Slice<jule::Ptr<_1ce01ac0a_Trait>>::make({_70617_t}));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1b7b02cae:;
			{
				jule::Ptr<_1ce0b4105_Var> _70917_v = _1ce013d79_buildVar((*(_69234_node))._field_Data.unsafe_cast_ptr<_1cded490a_VarDecl>());;
				(*((*(_self_))._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1ce0b4105_Var>>::make({_70917_v}));
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1b7b02d25:;
			{
				jule::Ptr<_1ce01d416_Enum> _71217_e = _1ce013373_buildEnum((*(_69234_node))._field_Data.unsafe_cast_ptr<_1cdedac0d_EnumDecl>());;
				(*((*(_self_))._field_table))._field_Enums=jule::append((*(*(_self_))._field_table.alloc)._field_Enums,jule::Slice<jule::Ptr<_1ce01d416_Enum>>::make({_71217_e}));
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1b7b02d8b:;
			{
				jule::Ptr<_1ce01eb21_TypeEnum> _71517_e = _1ce013ab0_buildTypeEnum((*(_69234_node))._field_Data.unsafe_cast_ptr<_1cdedbb98_TypeEnumDecl>());;
				(*((*(_self_))._field_table))._field_TypeEnums=jule::append((*(*(_self_))._field_table.alloc)._field_TypeEnums,jule::Slice<jule::Ptr<_1ce01eb21_TypeEnum>>::make({_71517_e}));
			}
		}
		else {
			_case_begin_1b7b023b8:;
			{
				_1ce015474_pushErr(_self_, &((*(_69234_node))._field_Token), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b7b02363:;
	};
}



inline void _1ce01991d_appendNodes(_1ce0149c3_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7b0c0d7:;
		if (it != expr_end) {
			_1cdec0a8e_Node _72321_node = *it;
			{
				_1ce019720_appendNode(_self_, &(_72321_node));
			}
			_iter_next_1b7b0c0d7:;
			++it;
			goto _iter_begin_1b7b0c0d7;
		}
		_iter_end_1b7b0c0d7:;
	};
}



inline void _1ce019bc6_pushDirectivePass(_1ce0149c3_symbolBuilder* _self_, jule::Ptr<_1cdec0eac_Directive>* _72841_d) {
	if (((*((*(_72841_d))))._field_Args.len() == 0LL)) {
		_1ce015474_pushErr(_self_, &((*((*(_72841_d))))._field_Tag), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_72841_d))))._field_Args.len() > 1LL)) {
		jule::Ptr<_1cdeab4b4_Token> _73313_arg = (*((*(_72841_d))))._field_Args[1LL];;
		_1ce015474_pushErr(_self_, &(_73313_arg), jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_72841_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1cdeab4b4_Token> _7379_arg = (*((*(_72841_d))))._field_Args[0LL];;
	if (((*(_7379_arg))._field_Id != static_cast<jule::U32>(4LLU))) {
		_1ce015474_pushErr(_self_, &(_7379_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_7379_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1ce015474_pushErr(_self_, &(_7379_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_self_))._field_table))._field_Passes=jule::append((*(*(_self_))._field_table.alloc)._field_Passes,jule::Slice<_1ce01001d_Pass>::make({_1ce01001d_Pass{._field_Token=(*((*(_72841_d))))._field_Tag, ._field_Text=(*_7379_arg.alloc)._field_Kind.slice(1LL, ((*_7379_arg.alloc)._field_Kind.len() - 1LL))}}));
}



inline void _1ce019dc4_appendTopDirectives(_1ce0149c3_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7b1274c:;
		if (it != expr_end) {
			jule::Ptr<_1cdec0eac_Directive> _75521_d = *it;
			{
				{
					auto &_match_expr{ (*((*(_75521_d))._field_Tag))._field_Kind };
					
					if (_match_expr == jule::Str::lit("pass", 4)) {
						_case_begin_1b7b141dd:;
						{
							_1ce019bc6_pushDirectivePass(_self_, &(_75521_d));
						}
					}
					_match_end_1b7b14122:;
				};
			}
			_iter_next_1b7b1274c:;
			++it;
			goto _iter_begin_1b7b1274c;
		}
		_iter_end_1b7b1274c:;
	};
}



inline void _1ce01a0c2_build(jule::Ptr<_1ce0149c3_symbolBuilder> _self_) {
	(*(_self_))._field_table=jule::new_ptr<_1ce116894_SymbolTable>(_1ce116894_SymbolTable{._field_File=(*((*_self_.alloc)._field_ast))._field_File, });
	_1ce019dc4_appendTopDirectives(_self_);
	_1ce019467_importUseDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	_1ce01991d_appendNodes(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ce0149c3_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ce01b0c3_Str(_1ce01ac0a_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1ce01b414_Equal(jule::Ptr<_1ce01ac0a_Trait> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _2521_other) {
	jule::Ptr<_1ce01ac0a_Trait> _269_trt = _1ce151b32_Trait(_2521_other.ptr());;
	return (_self_ == _269_trt);;
}



inline jule::Ptr<_1ce00792d_Fn> _1ce01b8a9_FindMethod(_1ce01ac0a_Trait* _self_, jule::Str _3429_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7b17ab5:;
		if (it != expr_end) {
			jule::Ptr<_1ce00792d_Fn> _3521_f = *it;
			{
				if (((*(_3521_f))._field_Ident == _3429_ident)) {
					return _3521_f;;
				};
			}
			_iter_next_1b7b17ab5:;
			++it;
			goto _iter_begin_1b7b17ab5;
		}
		_iter_end_1b7b17ab5:;
	};
	return _1ce01c03b_findMethodInherit(_self_, &(_3429_ident));;
}



inline jule::Ptr<_1ce00792d_Fn> _1ce01c03b_findMethodInherit(_1ce01ac0a_Trait* _self_, jule::Str* _5537_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7b19bc7:;
		if (it != expr_end) {
			jule::Ptr<_1ce154d99_TypeSymbol> _5621_i = *it;
			{
				if (((*(_5621_i))._field_Kind == nullptr)) {
					goto _iter_next_1b7b19bc7;
				};
				jule::Ptr<_1ce01ac0a_Trait> _6017_t = _1ce151b32_Trait((*_5621_i.alloc)._field_Kind.ptr());;
				if ((_6017_t != nullptr)) {
					jule::Ptr<_1ce00792d_Fn> _6221_f2 = _1ce01b8a9_FindMethod(_6017_t, (*(_5537_ident)));;
					if ((_6221_f2 != nullptr)) {
						return _6221_f2;;
					};
				};
			}
			_iter_next_1b7b19bc7:;
			++it;
			goto _iter_begin_1b7b19bc7;
		}
		_iter_end_1b7b19bc7:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce01ac0a_Trait _Src) {
	_Stream << _1ce01b0c3_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1ce01cc51_AutoExpr(_1ce01c899_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce01c899_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ce01d78a_Str(_1ce01d416_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1ce01dacb_Equal(jule::Ptr<_1ce01d416_Enum> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _3821_other) {
	jule::Ptr<_1ce01d416_Enum> _399_enm = _1ce150acb_Enum(_3821_other.ptr());;
	return (_self_ == _399_enm);;
}



inline jule::Ptr<_1ce01c899_EnumItem> _1ce01e00a_FindItem(_1ce01d416_Enum* _self_, jule::Str _4727_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7b1e4e5:;
		if (it != expr_end) {
			jule::Ptr<_1ce01c899_EnumItem> _4821_item = *it;
			{
				if (((*(_4821_item))._field_Ident == _4727_ident)) {
					return _4821_item;;
				};
			}
			_iter_next_1b7b1e4e5:;
			++it;
			goto _iter_begin_1b7b1e4e5;
		}
		_iter_end_1b7b1e4e5:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce01d416_Enum _Src) {
	_Stream << _1ce01d78a_Str(&_Src);
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce01e549_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ce01ee62_Str(_1ce01eb21_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1ce0202a3_Equal(jule::Ptr<_1ce01eb21_TypeEnum> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _8021_other) {
	jule::Ptr<_1ce01eb21_TypeEnum> _819_tenm = _1ce150d62_TypeEnum(_8021_other.ptr());;
	return (_self_ == _819_tenm);;
}



inline jule::Ptr<_1ce01e549_TypeEnumItem> _1ce0206d2_FindItem(_1ce01eb21_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7b2176c:;
		if (it != expr_end) {
			jule::Ptr<_1ce01e549_TypeEnumItem> _9021_item = *it;
			{
				if (((*(_9021_item))._field_Ident == _8927_ident)) {
					return _9021_item;;
				};
			}
			_iter_next_1b7b2176c:;
			++it;
			goto _iter_begin_1b7b2176c;
		}
		_iter_end_1b7b2176c:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce01eb21_TypeEnum _Src) {
	_Stream << _1ce01ee62_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ce0230ec_Str(_1ce022c78_comptimeRange* _self_) {
	return jule::Str::lit("comptimeRange", 13);;
}



inline jule::Bool _1ce02343d_Equal(jule::Ptr<_1ce022c78_comptimeRange> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _3621_other) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce022c78_comptimeRange _Src) {
	_Stream << _1ce0230ec_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ce023b14_Str(_1ce02374b_comptimeStructField* _self_) {
	return jule::Str::lit("comptimeStructField", 19);;
}



inline jule::Bool _1ce023e55_Equal(jule::Ptr<_1ce02374b_comptimeStructField> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _4621_other) {
	return false;;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce0244e9__Name(jule::Ptr<_1ce02374b_comptimeStructField> _self_, jule::Ptr<_1ce11d934_Eval>* _5026_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _5041_fc) {
	if (((*((*(_5041_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_5026_e)).ptr(), (*((*((*(_5041_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22be1616d_Const> _5513_constant = static__22be16e0a_NewStr((*((*((*(_self_))._field_field))._field_Decl))._field_Ident);;
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce2353db_primStr, ._field_Model=jule::Any(_5513_constant, &__jule_any_type19), ._field_Constant=_5513_constant});;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce0248e5__Type(jule::Ptr<_1ce02374b_comptimeStructField> _self_, jule::Ptr<_1ce11d934_Eval>* _6330_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _6345_fc) {
	if (((*((*(_6345_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_6330_e)).ptr(), (*((*((*(_6345_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ce03ee4e_buildComptimeTypeInfoData(&((*((*(_6330_e))))._field_s), &((*((*(_self_))._field_field))._field_Kind));;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce024ce1__Public(jule::Ptr<_1ce02374b_comptimeStructField> _self_, jule::Ptr<_1ce11d934_Eval>* _7132_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _7147_fc) {
	if (((*((*(_7147_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_7132_e)).ptr(), (*((*((*(_7147_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22be1616d_Const> _7613_constant = static__22be16b41_NewBool((*((*((*(_self_))._field_field))._field_Decl))._field_Public);;
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce235694_primBool, ._field_Model=jule::Any(_7613_constant, &__jule_any_type19), ._field_Constant=_7613_constant});;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce0250ee_subIdent(jule::Ptr<_1ce02374b_comptimeStructField> _self_, jule::Str* _8429_ident) {
	{
		auto &_match_expr{ (*(_8429_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1b7b2e390:;
			{
				jule::Ptr<_1ce00a832_FnIns> _8717_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _8833_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _8848_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce0244e9__Name(_self_, _8833_e, _8848_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_8717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1b7b2e439:;
			{
				jule::Ptr<_1ce00a832_FnIns> _9417_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _9533_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _9548_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce024ce1__Public(_self_, _9533_e, _9548_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_9417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1b7b2e4b1:;
			{
				jule::Ptr<_1ce00a832_FnIns> _10117_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _10233_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _10248_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce0248e5__Type(_self_, _10233_e, _10248_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_10117_method));;
			}
		}
		else {
			_case_begin_1b7b2e0a4:;
			{
				return nullptr;;
			}
		}
		_match_end_1b7b2e23b:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ce02374b_comptimeStructField _Src) {
	_Stream << _1ce023b14_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ce025781_Str(_1ce02540c_comptimeStructFields* _self_) {
	return jule::Str::lit("comptimeStructFields", 20);;
}



inline jule::Bool _1ce025ac2_Equal(jule::Ptr<_1ce02540c_comptimeStructFields> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _12021_other) {
	return false;;
}



inline void _1ce026045_ready(_1ce02540c_comptimeStructFields* _self_, jule::Ptr<_1ce0b4105_Var>* _12429_keyA, jule::Ptr<_1ce0b4105_Var>* _12446_keyB) {
	if (((*(_12429_keyA)) != nullptr)) {
		(*((*(_12429_keyA))))._field_Constant=true;
		(*((*(_12429_keyA))))._field_Value=jule::new_ptr<_1ce11cd84_Value>(_1ce11cd84_Value{._field_Data=jule::new_ptr<_1ce11bc0c_Data>()});
		(*((*(_12429_keyA))))._field_Kind=(*(_1ce238422_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_12446_keyB)) != nullptr)) {
		(*((*(_12446_keyB))))._field_Constant=true;
		(*((*(_12446_keyB))))._field_Value=jule::new_ptr<_1ce11cd84_Value>(_1ce11cd84_Value{._field_Data=jule::new_ptr<_1ce11bc0c_Data>()});
		(*((*(_12446_keyB))))._field_Kind=jule::new_ptr<_1ce154d99_TypeSymbol>(_1ce154d99_TypeSymbol{._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(jule::new_ptr<_1ce02374b_comptimeStructField>(), 6)})});
	};
}



inline void _1ce026463_step(_1ce02540c_comptimeStructFields* _self_, jule::I32 _14523_i, jule::Ptr<_1ce0b4105_Var>* _14536_keyA, jule::Ptr<_1ce0b4105_Var>* _14553_keyB) {
	if (((*(_14536_keyA)) != nullptr)) {
		(*((*((*((*(_14536_keyA))))._field_Value))._field_Data))._field_Constant=static__22be165ad_NewI64(static_cast<jule::I64>(_14523_i));
		(*(*(*((*(_14536_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_14536_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_14553_keyB)) != nullptr)) {
		(*(_1ce152902_comptimeStructField((*((*((*(_14553_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_14523_i];
	};
}



inline jule::I32 _1ce0266e9_len(_1ce02540c_comptimeStructFields* _self_) {
	return (*(_self_))._field_fields.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce02540c_comptimeStructFields _Src) {
	_Stream << _1ce025781_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ce026d7b_Str(_1ce026a07_comptimeStatic* _self_) {
	return jule::Str::lit("comptimeStatic", 14);;
}



inline jule::Bool _1ce0271bc_Equal(jule::Ptr<_1ce026a07_comptimeStatic> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _16921_other) {
	return false;;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce0277e9__Name(jule::Ptr<_1ce026a07_comptimeStatic> _self_, jule::Ptr<_1ce11d934_Eval>* _17326_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _17341_fc) {
	if (((*((*(_17341_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_17326_e)).ptr(), (*((*((*(_17341_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22be1616d_Const> _17813_constant = static__22be16e0a_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce2353db_primStr, ._field_Model=jule::Any(_17813_constant, &__jule_any_type19), ._field_Constant=_17813_constant});;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce027be5__Type(jule::Ptr<_1ce026a07_comptimeStatic> _self_, jule::Ptr<_1ce11d934_Eval>* _18630_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _18645_fc) {
	if (((*((*(_18645_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_18630_e)).ptr(), (*((*((*(_18645_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ce03ee4e_buildComptimeTypeInfoData(&((*((*(_18630_e))))._field_s), &((*((*((*(_self_))._field_field))._field_Kind))._field_Kind));;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce0280e1__Public(jule::Ptr<_1ce026a07_comptimeStatic> _self_, jule::Ptr<_1ce11d934_Eval>* _19432_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _19447_fc) {
	if (((*((*(_19447_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_19432_e)).ptr(), (*((*((*(_19447_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22be1616d_Const> _19913_constant = static__22be16b41_NewBool((*((*(_self_))._field_field))._field_Public);;
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce235694_primBool, ._field_Model=jule::Any(_19913_constant, &__jule_any_type19), ._field_Constant=_19913_constant});;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce028432_subIdent(jule::Ptr<_1ce026a07_comptimeStatic> _self_, jule::Str* _20729_ident) {
	{
		auto &_match_expr{ (*(_20729_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1b7b44e55:;
			{
				jule::Ptr<_1ce00a832_FnIns> _21017_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _21133_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _21148_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce0277e9__Name(_self_, _21133_e, _21148_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_21017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1b7b44eee:;
			{
				jule::Ptr<_1ce00a832_FnIns> _21717_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _21833_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _21848_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce0280e1__Public(_self_, _21833_e, _21848_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_21717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1b7b45076:;
			{
				jule::Ptr<_1ce00a832_FnIns> _22417_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _22533_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _22548_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce027be5__Type(_self_, _22533_e, _22548_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_22417_method));;
			}
		}
		else {
			_case_begin_1b7b44b69:;
			{
				return nullptr;;
			}
		}
		_match_end_1b7b44d01:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ce026a07_comptimeStatic _Src) {
	_Stream << _1ce026d7b_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ce028a3c_Str(_1ce0286b8_comptimeStatics* _self_) {
	return jule::Str::lit("comptimeStatics", 15);;
}



inline jule::Bool _1ce028d7d_Equal(jule::Ptr<_1ce0286b8_comptimeStatics> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _24321_other) {
	return false;;
}



inline void _1ce029301_ready(_1ce0286b8_comptimeStatics* _self_, jule::Ptr<_1ce0b4105_Var>* _24729_keyA, jule::Ptr<_1ce0b4105_Var>* _24746_keyB) {
	if (((*(_24729_keyA)) != nullptr)) {
		(*((*(_24729_keyA))))._field_Constant=true;
		(*((*(_24729_keyA))))._field_Value=jule::new_ptr<_1ce11cd84_Value>(_1ce11cd84_Value{._field_Data=jule::new_ptr<_1ce11bc0c_Data>()});
		(*((*(_24729_keyA))))._field_Kind=(*(_1ce238422_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_24746_keyB)) != nullptr)) {
		(*((*(_24746_keyB))))._field_Constant=true;
		(*((*(_24746_keyB))))._field_Value=jule::new_ptr<_1ce11cd84_Value>(_1ce11cd84_Value{._field_Data=jule::new_ptr<_1ce11bc0c_Data>()});
		(*((*(_24746_keyB))))._field_Kind=jule::new_ptr<_1ce154d99_TypeSymbol>(_1ce154d99_TypeSymbol{._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(jule::new_ptr<_1ce026a07_comptimeStatic>(), 8)})});
	};
}



inline void _1ce02971e_step(_1ce0286b8_comptimeStatics* _self_, jule::I32 _26823_i, jule::Ptr<_1ce0b4105_Var>* _26836_keyA, jule::Ptr<_1ce0b4105_Var>* _26853_keyB) {
	if (((*(_26836_keyA)) != nullptr)) {
		(*((*((*((*(_26836_keyA))))._field_Value))._field_Data))._field_Constant=static__22be165ad_NewI64(static_cast<jule::I64>(_26823_i));
		(*(*(*((*(_26836_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_26836_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_26853_keyB)) != nullptr)) {
		(*(_1ce15420b_comptimeStatic((*((*((*(_26853_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_26823_i];
	};
}



inline jule::I32 _1ce0299a5_len(_1ce0286b8_comptimeStatics* _self_) {
	return (*(_self_))._field_fields.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce0286b8_comptimeStatics _Src) {
	_Stream << _1ce028a3c_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ce02a247_Str(_1ce029cb3_comptimeEnumField* _self_) {
	return jule::Str::lit("comptimeEnumField", 17);;
}



inline jule::Bool _1ce02a588_Equal(jule::Ptr<_1ce029cb3_comptimeEnumField> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _29221_other) {
	return false;;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce02aa0b__Name(jule::Ptr<_1ce029cb3_comptimeEnumField> _self_, jule::Ptr<_1ce11d934_Eval>* _29626_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _29641_fc) {
	if (((*((*(_29641_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_29626_e)).ptr(), (*((*((*(_29641_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22be1616d_Const> _30113_constant = static__22be16e0a_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce2353db_primStr, ._field_Model=jule::Any(_30113_constant, &__jule_any_type19), ._field_Constant=_30113_constant});;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce02ad4c_subIdent(jule::Ptr<_1ce029cb3_comptimeEnumField> _self_, jule::Str* _30929_ident) {
	{
		auto &_match_expr{ (*(_30929_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1b7b55b47:;
			{
				jule::Ptr<_1ce00a832_FnIns> _31217_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _31333_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _31348_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce02aa0b__Name(_self_, _31333_e, _31348_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_31217_method));;
			}
		}
		else {
			_case_begin_1b7b5585b:;
			{
				return nullptr;;
			}
		}
		_match_end_1b7b559e3:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ce029cb3_comptimeEnumField _Src) {
	_Stream << _1ce02a247_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ce02b4ce_Str(_1ce02b15a_comptimeEnumFields* _self_) {
	return jule::Str::lit("comptimeEnumFields", 18);;
}



inline jule::Bool _1ce02b820_Equal(jule::Ptr<_1ce02b15a_comptimeEnumFields> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _33121_other) {
	return false;;
}



inline void _1ce02bc93_ready(_1ce02b15a_comptimeEnumFields* _self_, jule::Ptr<_1ce0b4105_Var>* _33529_keyA, jule::Ptr<_1ce0b4105_Var>* _33546_keyB) {
	if (((*(_33529_keyA)) != nullptr)) {
		(*((*(_33529_keyA))))._field_Constant=true;
		(*((*(_33529_keyA))))._field_Value=jule::new_ptr<_1ce11cd84_Value>(_1ce11cd84_Value{._field_Data=jule::new_ptr<_1ce11bc0c_Data>()});
		(*((*(_33529_keyA))))._field_Kind=(*(_1ce238422_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_33546_keyB)) != nullptr)) {
		(*((*(_33546_keyB))))._field_Constant=true;
		(*((*(_33546_keyB))))._field_Value=jule::new_ptr<_1ce11cd84_Value>(_1ce11cd84_Value{._field_Data=jule::new_ptr<_1ce11bc0c_Data>()});
		(*((*(_33546_keyB))))._field_Kind=jule::new_ptr<_1ce154d99_TypeSymbol>(_1ce154d99_TypeSymbol{._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(jule::new_ptr<_1ce029cb3_comptimeEnumField>(), 10)})});
	};
}



inline void _1ce02c1b1_step(_1ce02b15a_comptimeEnumFields* _self_, jule::I32 _35623_i, jule::Ptr<_1ce0b4105_Var>* _35636_keyA, jule::Ptr<_1ce0b4105_Var>* _35653_keyB) {
	if (((*(_35636_keyA)) != nullptr)) {
		(*((*((*((*(_35636_keyA))))._field_Value))._field_Data))._field_Constant=static__22be165ad_NewI64(static_cast<jule::I64>(_35623_i));
		(*(*(*((*(_35636_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_35636_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_35653_keyB)) != nullptr)) {
		(*(_1ce152e1e_comptimeEnumField((*((*((*(_35653_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_35623_i];
	};
}



inline jule::I32 _1ce02c447_len(_1ce02b15a_comptimeEnumFields* _self_) {
	return (*(_self_))._field_fields.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce02b15a_comptimeEnumFields _Src) {
	_Stream << _1ce02b4ce_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ce02cac9_Str(_1ce02c755_comptimeParam* _self_) {
	return jule::Str::lit("comptimeParam", 13);;
}



inline jule::Bool _1ce02ce1a_Equal(jule::Ptr<_1ce02c755_comptimeParam> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _38021_other) {
	return false;;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce02d679__Name(jule::Ptr<_1ce02c755_comptimeParam> _self_, jule::Ptr<_1ce11d934_Eval>* _38426_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _38441_fc) {
	if (((*((*(_38441_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_38426_e)).ptr(), (*((*((*(_38441_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22be1616d_Const> _38913_constant = static__22be16e0a_NewStr((*((*((*(_self_))._field_param))._field_Decl))._field_Ident);;
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce2353db_primStr, ._field_Model=jule::Any(_38913_constant, &__jule_any_type19), ._field_Constant=_38913_constant});;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce02da75__Type(jule::Ptr<_1ce02c755_comptimeParam> _self_, jule::Ptr<_1ce11d934_Eval>* _39730_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _39745_fc) {
	if (((*((*(_39745_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_39730_e)).ptr(), (*((*((*(_39745_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ce03ee4e_buildComptimeTypeInfoData(&((*((*(_39730_e))))._field_s), &((*((*(_self_))._field_param))._field_Kind));;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce02de71__Variadic(jule::Ptr<_1ce02c755_comptimeParam> _self_, jule::Ptr<_1ce11d934_Eval>* _40534_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _40549_fc) {
	if (((*((*(_40549_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_40534_e)).ptr(), (*((*((*(_40549_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22be1616d_Const> _41013_constant = static__22be16b41_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Variadic);;
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce235694_primBool, ._field_Model=jule::Any(_41013_constant, &__jule_any_type19), ._field_Constant=_41013_constant});;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce02e36c__Reference(jule::Ptr<_1ce02c755_comptimeParam> _self_, jule::Ptr<_1ce11d934_Eval>* _41835_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _41850_fc) {
	if (((*((*(_41850_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_41835_e)).ptr(), (*((*((*(_41850_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22be1616d_Const> _42313_constant = static__22be16b41_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Reference);;
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce235694_primBool, ._field_Model=jule::Any(_42313_constant, &__jule_any_type19), ._field_Constant=_42313_constant});;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce02e6ad_subIdent(jule::Ptr<_1ce02c755_comptimeParam> _self_, jule::Str* _43129_ident) {
	{
		auto &_match_expr{ (*(_43129_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1b7b6a50d:;
			{
				jule::Ptr<_1ce00a832_FnIns> _43417_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _43533_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _43548_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce02d679__Name(_self_, _43533_e, _43548_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_43417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Variadic", 8)) {
			_case_begin_1b7b6a574:;
			{
				jule::Ptr<_1ce00a832_FnIns> _44117_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _44233_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _44248_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce02de71__Variadic(_self_, _44233_e, _44248_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_44117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Reference", 9)) {
			_case_begin_1b7b6a5da:;
			{
				jule::Ptr<_1ce00a832_FnIns> _44817_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _44933_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _44948_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce02e36c__Reference(_self_, _44933_e, _44948_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_44817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1b7b6a662:;
			{
				jule::Ptr<_1ce00a832_FnIns> _45517_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _45633_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _45648_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce02da75__Type(_self_, _45633_e, _45648_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_45517_method));;
			}
		}
		else {
			_case_begin_1b7b6a1bc:;
			{
				return nullptr;;
			}
		}
		_match_end_1b7b6a354:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ce02c755_comptimeParam _Src) {
	_Stream << _1ce02cac9_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ce02ec30_Str(_1ce02e8de_comptimeParams* _self_) {
	return jule::Str::lit("comptimeParams", 14);;
}



inline jule::Bool _1ce030071_Equal(jule::Ptr<_1ce02e8de_comptimeParams> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _47421_other) {
	return false;;
}



inline void _1ce0304e4_ready(_1ce02e8de_comptimeParams* _self_, jule::Ptr<_1ce0b4105_Var>* _47829_keyA, jule::Ptr<_1ce0b4105_Var>* _47846_keyB) {
	if (((*(_47829_keyA)) != nullptr)) {
		(*((*(_47829_keyA))))._field_Constant=true;
		(*((*(_47829_keyA))))._field_Value=jule::new_ptr<_1ce11cd84_Value>(_1ce11cd84_Value{._field_Data=jule::new_ptr<_1ce11bc0c_Data>()});
		(*((*(_47829_keyA))))._field_Kind=(*(_1ce238422_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_47846_keyB)) != nullptr)) {
		(*((*(_47846_keyB))))._field_Constant=true;
		(*((*(_47846_keyB))))._field_Value=jule::new_ptr<_1ce11cd84_Value>(_1ce11cd84_Value{._field_Data=jule::new_ptr<_1ce11bc0c_Data>()});
		(*((*(_47846_keyB))))._field_Kind=jule::new_ptr<_1ce154d99_TypeSymbol>(_1ce154d99_TypeSymbol{._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(jule::new_ptr<_1ce02c755_comptimeParam>(), 12)})});
	};
}



inline void _1ce030912_step(_1ce02e8de_comptimeParams* _self_, jule::I32 _49923_i, jule::Ptr<_1ce0b4105_Var>* _49936_keyA, jule::Ptr<_1ce0b4105_Var>* _49953_keyB) {
	if (((*(_49936_keyA)) != nullptr)) {
		(*((*((*((*(_49936_keyA))))._field_Value))._field_Data))._field_Constant=static__22be165ad_NewI64(static_cast<jule::I64>(_49923_i));
		(*(*(*((*(_49936_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_49936_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_49953_keyB)) != nullptr)) {
		(*(_1ce15343b_comptimeParam((*((*((*(_49953_keyB))))._field_Kind))._field_Kind.ptr())))._field_param=(*(_self_))._field_params[_49923_i];
	};
}



inline jule::I32 _1ce030b98_len(_1ce02e8de_comptimeParams* _self_) {
	return (*(_self_))._field_params.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce02e8de_comptimeParams _Src) {
	_Stream << _1ce02ec30_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ce03132a_Str(_1ce030ea6_comptimeTypeInfos* _self_) {
	return jule::Str::lit("comptimeTypeInfos", 17);;
}



inline jule::Bool _1ce03166b_Equal(jule::Ptr<_1ce030ea6_comptimeTypeInfos> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _52321_other) {
	return false;;
}



inline void _1ce031ade_ready(_1ce030ea6_comptimeTypeInfos* _self_, jule::Ptr<_1ce0b4105_Var>* _52729_keyA, jule::Ptr<_1ce0b4105_Var>* _52746_keyB) {
	if (((*(_52729_keyA)) != nullptr)) {
		(*((*(_52729_keyA))))._field_Constant=true;
		(*((*(_52729_keyA))))._field_Value=jule::new_ptr<_1ce11cd84_Value>(_1ce11cd84_Value{._field_Data=jule::new_ptr<_1ce11bc0c_Data>()});
		(*((*(_52729_keyA))))._field_Kind=(*(_1ce238422_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_52746_keyB)) != nullptr)) {
		(*((*(_52746_keyB))))._field_Constant=true;
		(*((*(_52746_keyB))))._field_Value=jule::new_ptr<_1ce11cd84_Value>(_1ce11cd84_Value{._field_Data=jule::new_ptr<_1ce11bc0c_Data>()});
		(*((*(_52746_keyB))))._field_Kind=jule::new_ptr<_1ce154d99_TypeSymbol>(_1ce154d99_TypeSymbol{._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(jule::new_ptr<_1ce0325a1_comptimeTypeInfo>(), 15)})});
	};
}



inline void _1ce03200c_step(_1ce030ea6_comptimeTypeInfos* _self_, jule::I32 _54823_i, jule::Ptr<_1ce0b4105_Var>* _54836_keyA, jule::Ptr<_1ce0b4105_Var>* _54853_keyB) {
	if (((*(_54836_keyA)) != nullptr)) {
		(*((*((*((*(_54836_keyA))))._field_Value))._field_Data))._field_Constant=static__22be165ad_NewI64(static_cast<jule::I64>(_54823_i));
		(*(*(*((*(_54836_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_54836_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_54853_keyB)) != nullptr)) {
		(*((*((*((*(_54853_keyB))))._field_Kind))._field_Kind))._field_Kind=jule::Trait<_1ce14c721_Kind>((*(_self_))._field_types[_54823_i], 15);
	};
}



inline jule::I32 _1ce032293_len(_1ce030ea6_comptimeTypeInfos* _self_) {
	return (*(_self_))._field_types.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce030ea6_comptimeTypeInfos _Src) {
	_Stream << _1ce03132a_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ce032925_Str(_1ce0325a1_comptimeTypeInfo* _self_) {
	return ((jule::Str::lit("comptimeTypeInfo[", 17) + _1ce14d090_Str((*(_self_))._field_base.ptr())) + jule::Str::lit("]", 1));;
}



inline jule::Bool _1ce032c66_Equal(jule::Ptr<_1ce0325a1_comptimeTypeInfo> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _57221_other) {
	return false;;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce0333b5__Str(jule::Ptr<_1ce0325a1_comptimeTypeInfo> _self_, jule::Ptr<_1ce11d934_Eval>* _57625_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _57640_fc) {
	if (((*((*(_57640_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_57625_e)).ptr(), (*((*((*(_57640_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Str", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22be1616d_Const> _58113_constant = static__22be16e0a_NewStr(_1ce14d090_Str((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce2353db_primStr, ._field_Model=jule::Any(_58113_constant, &__jule_any_type19), ._field_Constant=_58113_constant});;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce0337b1__Kind(jule::Ptr<_1ce0325a1_comptimeTypeInfo> _self_, jule::Ptr<_1ce11d934_Eval>* _58930_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _58945_fc) {
	if (((*((*(_58945_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_58930_e)).ptr(), (*((*((*(_58945_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Kind", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ce01d416_Enum> _59413_enm = _1ce06cd17_FindEnum(_1ce03eaca_findComptimePackage(&((*((*(_58930_e))))._field_s)).ptr(), jule::Str::lit("Kind", 4));;
	jule::Ptr<_1ce01c899_EnumItem> _59517_item = nullptr;;
	{
		
		if (_1ce14e03b_Void((*(_self_))._field_base.ptr())) {
			_case_begin_1b7b87dbb:;
			{
				_59517_item=_1ce01e00a_FindItem(_59413_enm.ptr(), jule::Str::lit("Void", 4));
			}
		}
		else if ((_1ce15189b_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b7b87bac:;
			{
				_59517_item=_1ce01e00a_FindItem(_59413_enm.ptr(), jule::Str::lit("Struct", 6));
			}
		}
		else if ((_1ce151b32_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b7b8798c:;
			{
				_59517_item=_1ce01e00a_FindItem(_59413_enm.ptr(), jule::Str::lit("Trait", 5));
			}
		}
		else if ((_1ce150845_Ptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b7b87a03:;
			{
				if (_1ce15d5cd_IsUnsafe(_1ce150845_Ptr((*_self_.alloc)._field_base).ptr())) {
					_59517_item=_1ce01e00a_FindItem(_59413_enm.ptr(), jule::Str::lit("UnsafePtr", 9));
				} else {
					_59517_item=_1ce01e00a_FindItem(_59413_enm.ptr(), jule::Str::lit("Ptr", 3));
				};
			}
		}
		else if ((_1ce1505ae_Sptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b7b87a69:;
			{
				_59517_item=_1ce01e00a_FindItem(_59413_enm.ptr(), jule::Str::lit("SmartPtr", 8));
			}
		}
		else if ((_1ce150acb_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b7b87ad0:;
			{
				_59517_item=_1ce01e00a_FindItem(_59413_enm.ptr(), jule::Str::lit("Enum", 4));
			}
		}
		else if ((_1ce151db8_Map((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b7b8851a:;
			{
				_59517_item=_1ce01e00a_FindItem(_59413_enm.ptr(), jule::Str::lit("Map", 3));
			}
		}
		else if ((_1ce15137e_Slc((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b7b88581:;
			{
				_59517_item=_1ce01e00a_FindItem(_59413_enm.ptr(), jule::Str::lit("Slice", 5));
			}
		}
		else if ((_1ce1510e8_Arr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b7b885e7:;
			{
				_59517_item=_1ce01e00a_FindItem(_59413_enm.ptr(), jule::Str::lit("Array", 5));
			}
		}
		else if ((_1ce151615_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b7b8865d:;
			{
				_59517_item=_1ce01e00a_FindItem(_59413_enm.ptr(), jule::Str::lit("Func", 4));
			}
		}
		else if ((_1ce15214e_Tup((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b7b886c4:;
			{
				_59517_item=_1ce01e00a_FindItem(_59413_enm.ptr(), jule::Str::lit("Tuple", 5));
			}
		}
		else if ((_1ce150328_Prim((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b7b8874b:;
			{
				jule::Ptr<_1ce1557a1_Prim> _62413_prim = _1ce150328_Prim((*_self_.alloc)._field_base);;
				{
					
					if (_1ce158ebe_IsAny(_62413_prim.ptr())) {
						_case_begin_1b7d05038:;
						{
							_59517_item=_1ce01e00a_FindItem(_59413_enm.ptr(), jule::Str::lit("Any", 3));
						}
					}
					else if (_1ce1589a2_IsBool(_62413_prim.ptr())) {
						_case_begin_1b7d04e39:;
						{
							_59517_item=_1ce01e00a_FindItem(_59413_enm.ptr(), jule::Str::lit("Bool", 4));
						}
					}
					else if (_1ce158c38_IsStr(_62413_prim.ptr())) {
						_case_begin_1b7d04c3b:;
						{
							_59517_item=_1ce01e00a_FindItem(_59413_enm.ptr(), jule::Str::lit("Str", 3));
						}
					}
					else if (_1ce157bd2_IsF32(_62413_prim.ptr())) {
						_case_begin_1b7d04ca2:;
						{
							_59517_item=_1ce01e00a_FindItem(_59413_enm.ptr(), jule::Str::lit("F32", 3));
						}
					}
					else if (_1ce157e68_IsF64(_62413_prim.ptr())) {
						_case_begin_1b7d04d18:;
						{
							_59517_item=_1ce01e00a_FindItem(_59413_enm.ptr(), jule::Str::lit("F64", 3));
						}
					}
					else if (_1ce15665e_IsI8(_62413_prim.ptr())) {
						_case_begin_1b7d05797:;
						{
							_59517_item=_1ce01e00a_FindItem(_59413_enm.ptr(), jule::Str::lit("I8", 2));
						}
					}
					else if (_1ce1568e5_IsI16(_62413_prim.ptr())) {
						_case_begin_1b7d0580d:;
						{
							_59517_item=_1ce01e00a_FindItem(_59413_enm.ptr(), jule::Str::lit("I16", 3));
						}
					}
					else if (_1ce156b7b_IsI32(_62413_prim.ptr())) {
						_case_begin_1b7d05874:;
						{
							_59517_item=_1ce01e00a_FindItem(_59413_enm.ptr(), jule::Str::lit("I32", 3));
						}
					}
					else if (_1ce156e12_IsI64(_62413_prim.ptr())) {
						_case_begin_1b7d058da:;
						{
							_59517_item=_1ce01e00a_FindItem(_59413_enm.ptr(), jule::Str::lit("I64", 3));
						}
					}
					else if (_1ce157198_IsU8(_62413_prim.ptr())) {
						_case_begin_1b7d05951:;
						{
							_59517_item=_1ce01e00a_FindItem(_59413_enm.ptr(), jule::Str::lit("U8", 2));
						}
					}
					else if (_1ce15742e_IsU16(_62413_prim.ptr())) {
						_case_begin_1b7d059b7:;
						{
							_59517_item=_1ce01e00a_FindItem(_59413_enm.ptr(), jule::Str::lit("U16", 3));
						}
					}
					else if (_1ce1576b5_IsU32(_62413_prim.ptr())) {
						_case_begin_1b7d05a2d:;
						{
							_59517_item=_1ce01e00a_FindItem(_59413_enm.ptr(), jule::Str::lit("U32", 3));
						}
					}
					else if (_1ce15794b_IsU64(_62413_prim.ptr())) {
						_case_begin_1b7d05a94:;
						{
							_59517_item=_1ce01e00a_FindItem(_59413_enm.ptr(), jule::Str::lit("U64", 3));
						}
					}
					else if (_1ce1581ee_IsInt(_62413_prim.ptr())) {
						_case_begin_1b7d05b1b:;
						{
							_59517_item=_1ce01e00a_FindItem(_59413_enm.ptr(), jule::Str::lit("Int", 3));
						}
					}
					else if (_1ce158485_IsUint(_62413_prim.ptr())) {
						_case_begin_1b7d05b93:;
						{
							_59517_item=_1ce01e00a_FindItem(_59413_enm.ptr(), jule::Str::lit("Uint", 4));
						}
					}
					else if (_1ce15871b_IsUintptr(_62413_prim.ptr())) {
						_case_begin_1b7d05c1a:;
						{
							_59517_item=_1ce01e00a_FindItem(_59413_enm.ptr(), jule::Str::lit("Uintptr", 7));
						}
					}
					else {
						_case_begin_1b7d04a93:;
						{
							jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1ce14d090_Str((*_self_.alloc)._field_base)) + jule::Str("\nlocation: std/jule/sema/comptime.jule:659:17"));;
						}
					}
					_match_end_1b7d04a2c:;
				};
			}
		}
		else {
			_case_begin_1b7b87838:;
			{
				jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1ce14d090_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:662:13"));;
			}
		}
		_match_end_1b7b87618:;
	};
	return _1ce149542_evalEnumStatic(&(_59413_enm), &(_59517_item), &((*((*(_58945_fc))))._field_Token));;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce033bac__Bits(jule::Ptr<_1ce0325a1_comptimeTypeInfo> _self_, jule::Ptr<_1ce11d934_Eval>* _66730_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _66745_fc) {
	if (((*((*(_66745_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_66730_e)).ptr(), (*((*((*(_66745_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ce1557a1_Prim> _6729_prim = _1ce150328_Prim((*(_self_))._field_base.ptr());;
	if ((_6729_prim == nullptr)) {
		_1ce11de84_pushErr((*(_66730_e)).ptr(), (*((*(_66745_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I32 _6779_n = _22be0a4d6_BitsizeOf((*(_6729_prim))._field_Kind);;
	if ((_6779_n == -1LL)) {
		_1ce11de84_pushErr((*(_66730_e)).ptr(), (*((*(_66745_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22be1616d_Const> _68213_constant = static__22be165ad_NewI64(static_cast<jule::I64>(_6779_n));;
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce2353db_primStr, ._field_Model=jule::Any(_68213_constant, &__jule_any_type19), ._field_Constant=_68213_constant});;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce0340a8__Elem(jule::Ptr<_1ce0325a1_comptimeTypeInfo> _self_, jule::Ptr<_1ce11d934_Eval>* _69030_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _69045_fc) {
	if (((*((*(_69045_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_69030_e)).ptr(), (*((*((*(_69045_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ce15ca94_Ptr> _69513_ptr = _1ce150845_Ptr((*(_self_))._field_base.ptr());;
	if ((_69513_ptr != nullptr)) {
		if (_1ce15d5cd_IsUnsafe(_69513_ptr)) {
			_1ce11de84_pushErr((*(_69030_e)).ptr(), (*((*(_69045_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		return _1ce03ee4e_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*_69513_ptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1ce1592cc_Sptr> _70313_sptr = _1ce1505ae_Sptr((*_self_.alloc)._field_base);;
	if ((_70313_sptr != nullptr)) {
		return _1ce03ee4e_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*_70313_sptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1ce159ca0_Slc> _70713_slice = _1ce15137e_Slc((*_self_.alloc)._field_base);;
	if ((_70713_slice != nullptr)) {
		return _1ce03ee4e_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*_70713_slice.alloc)._field_Elem));;
	};
	jule::Ptr<_1ce15c0c1_Arr> _71113_array = _1ce1510e8_Arr((*_self_.alloc)._field_base);;
	if ((_71113_array != nullptr)) {
		return _1ce03ee4e_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*_71113_array.alloc)._field_Elem));;
	};
	jule::Ptr<_1ce01d416_Enum> _71513_enm = _1ce150acb_Enum((*_self_.alloc)._field_base);;
	if ((_71513_enm != nullptr)) {
		return _1ce03ee4e_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*((*_71513_enm.alloc)._field_Kind))._field_Kind));;
	};
	_1ce11de84_pushErr((*(_69030_e)).ptr(), (*((*(_69045_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce0344a4__Size(jule::Ptr<_1ce0325a1_comptimeTypeInfo> _self_, jule::Ptr<_1ce11d934_Eval>* _72330_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _72345_fc) {
	if (((*((*(_72345_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_72330_e)).ptr(), (*((*((*(_72345_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ce15c0c1_Arr> _72813_arr = _1ce1510e8_Arr((*(_self_))._field_base.ptr());;
	if ((_72813_arr == nullptr)) {
		_1ce11de84_pushErr((*(_72330_e)).ptr(), (*((*(_72345_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22be1616d_Const> _73313_constant = static__22be165ad_NewI64(static_cast<jule::I64>((*(_72813_arr))._field_N));;
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce2360bd_primInt, ._field_Model=jule::Any(_73313_constant, &__jule_any_type19), ._field_Constant=_73313_constant});;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce0348a0__Key(jule::Ptr<_1ce0325a1_comptimeTypeInfo> _self_, jule::Ptr<_1ce11d934_Eval>* _74129_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _74144_fc) {
	if (((*((*(_74144_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_74129_e)).ptr(), (*((*((*(_74144_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ce15b444_Map> _74613_m = _1ce151db8_Map((*(_self_))._field_base.ptr());;
	if ((_74613_m == nullptr)) {
		_1ce11de84_pushErr((*(_74129_e)).ptr(), (*((*(_74144_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ce03ee4e_buildComptimeTypeInfoData(&((*((*(_74129_e))))._field_s), &((*(_74613_m))._field_Key));;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce034c9b__Value(jule::Ptr<_1ce0325a1_comptimeTypeInfo> _self_, jule::Ptr<_1ce11d934_Eval>* _75431_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _75446_fc) {
	if (((*((*(_75446_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_75431_e)).ptr(), (*((*((*(_75446_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ce15b444_Map> _75913_m = _1ce151db8_Map((*(_self_))._field_base.ptr());;
	if ((_75913_m == nullptr)) {
		_1ce11de84_pushErr((*(_75431_e)).ptr(), (*((*(_75446_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ce03ee4e_buildComptimeTypeInfoData(&((*((*(_75431_e))))._field_s), &((*(_75913_m))._field_Val));;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce035197__Fields(jule::Ptr<_1ce0325a1_comptimeTypeInfo> _self_, jule::Ptr<_1ce11d934_Eval>* _76732_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _76747_fc) {
	if (((*((*(_76747_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_76732_e)).ptr(), (*((*((*(_76747_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1cdee571d_StructIns> _77213_s = _1ce15189b_Struct((*(_self_))._field_base.ptr());;
	if ((_77213_s != nullptr)) {
		return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(jule::new_ptr<_1ce02540c_comptimeStructFields>(_1ce02540c_comptimeStructFields{._field_fields=(*_77213_s.alloc)._field_Fields}), 7)}), });;
	};
	jule::Ptr<_1ce01d416_Enum> _78213_enm = _1ce150acb_Enum((*_self_.alloc)._field_base);;
	if ((_78213_enm != nullptr)) {
		return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(jule::new_ptr<_1ce02b15a_comptimeEnumFields>(_1ce02b15a_comptimeEnumFields{._field_fields=(*_78213_enm.alloc)._field_Items}), 11)}), });;
	};
	_1ce11de84_pushErr((*(_76732_e)).ptr(), (*((*(_76747_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce035593__Statics(jule::Ptr<_1ce0325a1_comptimeTypeInfo> _self_, jule::Ptr<_1ce11d934_Eval>* _79633_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _79648_fc) {
	if (((*((*(_79648_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_79633_e)).ptr(), (*((*((*(_79648_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1cdee571d_StructIns> _80113_s = _1ce15189b_Struct((*(_self_))._field_base.ptr());;
	if ((_80113_s == nullptr)) {
		_1ce11de84_pushErr((*(_79633_e)).ptr(), (*((*(_79648_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(jule::new_ptr<_1ce0286b8_comptimeStatics>(_1ce0286b8_comptimeStatics{._field_fields=(*(_80113_s))._field_Statics}), 9)}), });;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce03598e__Public(jule::Ptr<_1ce0325a1_comptimeTypeInfo> _self_, jule::Ptr<_1ce11d934_Eval>* _81532_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _81547_fc) {
	if (((*((*(_81547_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_81532_e)).ptr(), (*((*((*(_81547_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Bool _82013_public = false;;
	{
		
		if ((_1ce15189b_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b7d380b0:;
			{
				_82013_public=(*((*(_1ce15189b_Struct((*_self_.alloc)._field_base)))._field_Decl))._field_Public;
			}
		}
		else if ((_1ce151b32_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b7d391b0:;
			{
				_82013_public=(*(_1ce151b32_Trait((*_self_.alloc)._field_base)))._field_Public;
			}
		}
		else if ((_1ce150acb_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b7d39226:;
			{
				_82013_public=(*(_1ce150acb_Enum((*_self_.alloc)._field_base)))._field_Public;
			}
		}
		else if ((_1ce150d62_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b7d37d07:;
			{
				_82013_public=(*(_1ce150d62_TypeEnum((*_self_.alloc)._field_base)))._field_Public;
			}
		}
		else {
			_case_begin_1b7d37c91:;
			{
				_1ce11de84_pushErr((*(_81532_e)).ptr(), (*((*(_81547_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b7d37b70:;
	};
	jule::Ptr<_22be1616d_Const> _83413_constant = static__22be16b41_NewBool(_82013_public);;
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce235694_primBool, ._field_Model=jule::Any(_83413_constant, &__jule_any_type19), ._field_Constant=_83413_constant});;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce035d8a__Binded(jule::Ptr<_1ce0325a1_comptimeTypeInfo> _self_, jule::Ptr<_1ce11d934_Eval>* _84232_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _84247_fc) {
	if (((*((*(_84247_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_84232_e)).ptr(), (*((*((*(_84247_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22be1616d_Const> _84713_constant = static__22be16b41_NewBool(_1ce14da1e_Binded((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce235694_primBool, ._field_Model=jule::Any(_84713_constant, &__jule_any_type19), ._field_Constant=_84713_constant});;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce036286__Ordered(jule::Ptr<_1ce0325a1_comptimeTypeInfo> _self_, jule::Ptr<_1ce11d934_Eval>* _85529_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _85544_fc) {
	if (((*((*(_85544_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_85529_e)).ptr(), (*((*((*(_85544_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Ordered", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22be1616d_Const> _86013_constant = static__22be16b41_NewBool(_1ce14e7de_Ordered((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce2353db_primStr, ._field_Model=jule::Any(_86013_constant, &__jule_any_type19), ._field_Constant=_86013_constant});;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce036682__Comparable(jule::Ptr<_1ce0325a1_comptimeTypeInfo> _self_, jule::Ptr<_1ce11d934_Eval>* _86832_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _86847_fc) {
	if (((*((*(_86847_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_86832_e)).ptr(), (*((*((*(_86847_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Comparable", 10), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22be1616d_Const> _87313_constant = static__22be16b41_NewBool(_1ce14e2c2_Comparable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce2353db_primStr, ._field_Model=jule::Any(_87313_constant, &__jule_any_type19), ._field_Constant=_87313_constant});;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce036a7d__Mutable(jule::Ptr<_1ce0325a1_comptimeTypeInfo> _self_, jule::Ptr<_1ce11d934_Eval>* _88129_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _88144_fc) {
	if (((*((*(_88144_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_88129_e)).ptr(), (*((*((*(_88144_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22be1616d_Const> _88613_constant = static__22be16b41_NewBool(_1ce14e558_Mutable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce235694_primBool, ._field_Model=jule::Any(_88613_constant, &__jule_any_type19), ._field_Constant=_88613_constant});;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce036e79__Types(jule::Ptr<_1ce0325a1_comptimeTypeInfo> _self_, jule::Ptr<_1ce11d934_Eval>* _89431_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _89446_fc) {
	if (((*((*(_89446_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_89431_e)).ptr(), (*((*((*(_89446_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ce15a894_Tuple> _89913_tup = _1ce15214e_Tup((*(_self_))._field_base.ptr());;
	if ((_89913_tup == nullptr)) {
		_1ce11de84_pushErr((*(_89431_e)).ptr(), (*((*(_89446_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ce030ea6_comptimeTypeInfos> _90413_infos = jule::new_ptr<_1ce030ea6_comptimeTypeInfos>(_1ce030ea6_comptimeTypeInfos{._field_types=jule::Slice<jule::Ptr<_1ce0325a1_comptimeTypeInfo>>::alloc(0LL, (*(_89913_tup))._field_Types.len())});;
	{
		auto expr = &((*(_89913_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7d4d67a:;
		if (it != expr_end) {
			jule::Ptr<_1ce14cbc7_TypeKind> _90721_t = *it;
			{
				(*(_90413_infos))._field_types=jule::append((*_90413_infos.alloc)._field_types,jule::Slice<jule::Ptr<_1ce0325a1_comptimeTypeInfo>>::make({_1ce08ac69_pushComptimeTypeInfo((*((*((*(_89431_e))))._field_s))._field_meta.ptr(), &(_90721_t))}));
			}
			_iter_next_1b7d4d67a:;
			++it;
			goto _iter_begin_1b7d4d67a;
		}
		_iter_end_1b7d4d67a:;
	};
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(_90413_infos, 14)}), });;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce037375__Exceptional(jule::Ptr<_1ce0325a1_comptimeTypeInfo> _self_, jule::Ptr<_1ce11d934_Eval>* _91737_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _91752_fc) {
	if (((*((*(_91752_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_91737_e)).ptr(), (*((*((*(_91752_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ce00a832_FnIns> _92213_f = _1ce151615_Fn((*(_self_))._field_base.ptr());;
	if ((_92213_f == nullptr)) {
		_1ce11de84_pushErr((*(_91737_e)).ptr(), (*((*(_91752_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22be1616d_Const> _92713_constant = static__22be16b41_NewBool((((*(_92213_f))._field_Decl != nullptr) && (*(*(_92213_f))._field_Decl.alloc)._field_Exceptional));;
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce235694_primBool, ._field_Model=jule::Any(_92713_constant, &__jule_any_type19), ._field_Constant=_92713_constant});;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce037771__CanNil(jule::Ptr<_1ce0325a1_comptimeTypeInfo> _self_, jule::Ptr<_1ce11d934_Eval>* _93532_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _93547_fc) {
	if (((*((*(_93547_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_93532_e)).ptr(), (*((*((*(_93547_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("CanNil", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22be1616d_Const> _94013_constant = static__22be16b41_NewBool(_1ce14ea75_NilCompatible((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce235694_primBool, ._field_Model=jule::Any(_94013_constant, &__jule_any_type19), ._field_Constant=_94013_constant});;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce037b6c__RC(jule::Ptr<_1ce0325a1_comptimeTypeInfo> _self_, jule::Ptr<_1ce11d934_Eval>* _94828_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _94843_fc) {
	if (((*((*(_94843_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_94828_e)).ptr(), (*((*((*(_94843_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("RC", 2), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22be1616d_Const> _95313_constant = static__22be16b41_NewBool(_1ce14ed0b_PerformsRC((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce235694_primBool, ._field_Model=jule::Any(_95313_constant, &__jule_any_type19), ._field_Constant=_95313_constant});;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce038068__Result(jule::Ptr<_1ce0325a1_comptimeTypeInfo> _self_, jule::Ptr<_1ce11d934_Eval>* _96132_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _96147_fc) {
	if (((*((*(_96147_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_96132_e)).ptr(), (*((*((*(_96147_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ce00a832_FnIns> _96613_f = _1ce151615_Fn((*(_self_))._field_base.ptr());;
	if ((_96613_f == nullptr)) {
		_1ce11de84_pushErr((*(_96132_e)).ptr(), (*((*(_96147_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*(_96613_f))._field_Result == nullptr)) {
		return _1ce03ee4e_buildComptimeTypeInfoData(&((*((*(_96132_e))))._field_s), &(_1ce234d36_primVoid));;
	};
	return _1ce03ee4e_buildComptimeTypeInfoData(&((*((*(_96132_e))))._field_s), &((*(_96613_f))._field_Result));;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce038464__Params(jule::Ptr<_1ce0325a1_comptimeTypeInfo> _self_, jule::Ptr<_1ce11d934_Eval>* _97732_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _97747_fc) {
	if (((*((*(_97747_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_97732_e)).ptr(), (*((*((*(_97747_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ce00a832_FnIns> _98213_f = _1ce151615_Fn((*(_self_))._field_base.ptr());;
	if ((_98213_f == nullptr)) {
		_1ce11de84_pushErr((*(_97732_e)).ptr(), (*((*(_97747_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(jule::new_ptr<_1ce02e8de_comptimeParams>(_1ce02e8de_comptimeParams{._field_params=(*(_98213_f))._field_Params}), 13)}), });;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce0387a5_subIdent(jule::Ptr<_1ce0325a1_comptimeTypeInfo> _self_, jule::Str* _99429_ident) {
	{
		auto &_match_expr{ (*(_99429_ident)) };
		
		if (_match_expr == jule::Str::lit("Str", 3)) {
			_case_begin_1b7d637b1:;
			{
				jule::Ptr<_1ce00a832_FnIns> _99717_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _99833_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _99848_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce0333b5__Str(_self_, _99833_e, _99848_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_99717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Bits", 4)) {
			_case_begin_1b7d63591:;
			{
				jule::Ptr<_1ce00a832_FnIns> _100417_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _100533_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _100548_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce033bac__Bits(_self_, _100533_e, _100548_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_100417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Elem", 4)) {
			_case_begin_1b7d63607:;
			{
				jule::Ptr<_1ce00a832_FnIns> _101117_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _101233_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _101248_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce0340a8__Elem(_self_, _101233_e, _101248_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_101117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Size", 4)) {
			_case_begin_1b7d63827:;
			{
				jule::Ptr<_1ce00a832_FnIns> _101817_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _101933_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _101948_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce0344a4__Size(_self_, _101933_e, _101948_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_101817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Key", 3)) {
			_case_begin_1b7d6388d:;
			{
				jule::Ptr<_1ce00a832_FnIns> _102517_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _102633_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _102648_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce0348a0__Key(_self_, _102633_e, _102648_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_102517_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Value", 5)) {
			_case_begin_1b7d63904:;
			{
				jule::Ptr<_1ce00a832_FnIns> _103217_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _103333_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _103348_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce034c9b__Value(_self_, _103333_e, _103348_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_103217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1b7d6396a:;
			{
				jule::Ptr<_1ce00a832_FnIns> _103917_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _104033_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _104048_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce035197__Fields(_self_, _104033_e, _104048_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_103917_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1b7d63a58:;
			{
				jule::Ptr<_1ce00a832_FnIns> _104617_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _104733_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _104748_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce035593__Statics(_self_, _104733_e, _104748_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_104617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1b7d63abe:;
			{
				jule::Ptr<_1ce00a832_FnIns> _105317_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _105433_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _105448_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce038464__Params(_self_, _105433_e, _105448_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_105317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Types", 5)) {
			_case_begin_1b7d63b35:;
			{
				jule::Ptr<_1ce00a832_FnIns> _106017_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _106133_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _106148_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce036e79__Types(_self_, _106133_e, _106148_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_106017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1b7d63bac:;
			{
				jule::Ptr<_1ce00a832_FnIns> _106717_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _106833_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _106848_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce03598e__Public(_self_, _106833_e, _106848_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_106717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1b7d63c34:;
			{
				jule::Ptr<_1ce00a832_FnIns> _107417_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _107533_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _107548_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce035d8a__Binded(_self_, _107533_e, _107548_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_107417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Ordered", 7)) {
			_case_begin_1b7d63cab:;
			{
				jule::Ptr<_1ce00a832_FnIns> _108117_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _108233_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _108248_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce036286__Ordered(_self_, _108233_e, _108248_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_108117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Comparable", 10)) {
			_case_begin_1b7d63d33:;
			{
				jule::Ptr<_1ce00a832_FnIns> _108817_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _108933_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _108948_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce036682__Comparable(_self_, _108933_e, _108948_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_108817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1b7d63daa:;
			{
				jule::Ptr<_1ce00a832_FnIns> _109517_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _109633_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _109648_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce036a7d__Mutable(_self_, _109633_e, _109648_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_109517_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Exceptional", 11)) {
			_case_begin_1b7d63e32:;
			{
				jule::Ptr<_1ce00a832_FnIns> _110217_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _110333_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _110348_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce037375__Exceptional(_self_, _110333_e, _110348_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_110217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("CanNil", 6)) {
			_case_begin_1b7d63ea9:;
			{
				jule::Ptr<_1ce00a832_FnIns> _110917_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _111033_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _111048_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce037771__CanNil(_self_, _111033_e, _111048_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_110917_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("RC", 2)) {
			_case_begin_1b7d64031:;
			{
				jule::Ptr<_1ce00a832_FnIns> _111617_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _111733_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _111748_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce037b6c__RC(_self_, _111733_e, _111748_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_111617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Result", 6)) {
			_case_begin_1b7d640a8:;
			{
				jule::Ptr<_1ce00a832_FnIns> _112317_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _112433_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _112448_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce038068__Result(_self_, _112433_e, _112448_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_112317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Kind", 4)) {
			_case_begin_1b7d64130:;
			{
				jule::Ptr<_1ce00a832_FnIns> _113017_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _113133_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _113148_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce0337b1__Kind(_self_, _113133_e, _113148_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_113017_method));;
			}
		}
		else {
			_case_begin_1b7d6136e:;
			{
				return nullptr;;
			}
		}
		_match_end_1b7d63371:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ce0325a1_comptimeTypeInfo _Src) {
	_Stream << _1ce032925_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ce038e37_Str(_1ce038ab3_comptimeValue* _self_) {
	return jule::Str::lit("comptimeValue", 13);;
}



inline jule::Bool _1ce039278_Equal(jule::Ptr<_1ce038ab3_comptimeValue> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _114921_other) {
	return false;;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce0397c8__Unwrap(jule::Ptr<_1ce038ab3_comptimeValue> _self_, jule::Ptr<_1ce11d934_Eval>* _115332_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _115347_fc) {
	if (((*((*(_115347_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_115332_e)).ptr(), (*((*((*(_115347_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Unwrap", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_self_))._field_data;;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce039bc4__Type(jule::Ptr<_1ce038ab3_comptimeValue> _self_, jule::Ptr<_1ce11d934_Eval>* _116130_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _116145_fc) {
	if (((*((*(_116145_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_116130_e)).ptr(), (*((*((*(_116145_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ce03ee4e_buildComptimeTypeInfoData(&((*((*(_116130_e))))._field_s), &((*((*(_self_))._field_data))._field_Kind));;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce03a0c0__Lvalue(jule::Ptr<_1ce038ab3_comptimeValue> _self_, jule::Ptr<_1ce11d934_Eval>* _116932_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _116947_fc) {
	if (((*((*(_116947_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_116932_e)).ptr(), (*((*((*(_116947_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Lvalue", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22be1616d_Const> _117413_constant = static__22be16b41_NewBool((*((*(_self_))._field_data))._field_Lvalue);;
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce235694_primBool, ._field_Model=jule::Any(_117413_constant, &__jule_any_type19), ._field_Constant=_117413_constant});;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce03a4bb__Mutable(jule::Ptr<_1ce038ab3_comptimeValue> _self_, jule::Ptr<_1ce11d934_Eval>* _118233_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _118248_fc) {
	if (((*((*(_118248_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_118233_e)).ptr(), (*((*((*(_118248_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22be1616d_Const> _118713_constant = static__22be16b41_NewBool((*((*(_self_))._field_data))._field_Mutable);;
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce235694_primBool, ._field_Model=jule::Any(_118713_constant, &__jule_any_type19), ._field_Constant=_118713_constant});;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce03a8b7__Const(jule::Ptr<_1ce038ab3_comptimeValue> _self_, jule::Ptr<_1ce11d934_Eval>* _119531_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _119546_fc) {
	if (((*((*(_119546_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_119531_e)).ptr(), (*((*((*(_119546_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Const", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22be1616d_Const> _120013_constant = static__22be16b41_NewBool(_1ce11c614_IsConst((*(_self_))._field_data.ptr()));;
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce235694_primBool, ._field_Model=jule::Any(_120013_constant, &__jule_any_type19), ._field_Constant=_120013_constant});;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce03acb3__Field(jule::Ptr<_1ce038ab3_comptimeValue> _self_, jule::Ptr<_1ce11d934_Eval>* _120831_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _120846_fc) {
	if (((*((*(_120846_fc))))._field_Args.len() > 1LL)) {
		_1ce11de84_pushErr((*(_120831_e)).ptr(), (*((*((*(_120846_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1cdee571d_StructIns> _121313_s = _1ce15189b_Struct((*((*(_self_))._field_data))._field_Kind.ptr());;
	if ((_121313_s == nullptr)) {
		_1ce11de84_pushErr((*(_120831_e)).ptr(), (*((*(_120846_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*(*_self_.alloc)._field_data.alloc)._field_Kind), &__jule_any_type4),jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1cdec5dc4_Expr> _121813_arg = (*((*(_120846_fc))))._field_Args[0LL];;
	jule::Ptr<_1ce11bc0c_Data> _121913_d = _1ce13bb94_evalExpr((*(_120831_e)), _121813_arg);;
	if ((_121913_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ce11c614_IsConst(_121913_d.ptr())))) {
		_1ce11de84_pushErr((*(_120831_e)).ptr(), (*(_121813_arg))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ce1557a1_Prim> _12279_prim = _1ce150328_Prim((*(_121913_d))._field_Kind);;
	if (((_12279_prim == nullptr) || (!(_1ce158c38_IsStr(_12279_prim.ptr()))))) {
		_1ce11de84_pushErr((*(_120831_e)).ptr(), (*_121813_arg.alloc)._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1ce14d090_Str((*(_121913_d))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Str _12329_ident = _22be182e6_ReadStr((*(_121913_d))._field_Constant.ptr());;
	jule::Ptr<_1cdee4b6d_FieldIns> _123313_f = _1cdee6ac6_FindField(_121313_s.ptr(), _12329_ident);;
	if ((_123313_f == nullptr)) {
		_1ce11de84_pushErr((*(_120831_e)).ptr(), (*_121813_arg.alloc)._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_121313_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any(_12329_ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_121913_d=jule::new_ptr<_1ce11bc0c_Data>((*(*_self_.alloc)._field_data.alloc));
	_121913_d=_1ce134e9a_evalStructSubIdentField((*(_120831_e)).ptr(), &(_121913_d), &(_121313_s), &((*_121813_arg.alloc)._field_Token), &(_123313_f));
	return _1ce040290_buildComptimeValue(&(_121913_d));;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce03b104_subIdent(jule::Ptr<_1ce038ab3_comptimeValue> _self_, jule::Str* _124329_ident) {
	{
		auto &_match_expr{ (*(_124329_ident)) };
		
		if (_match_expr == jule::Str::lit("Unwrap", 6)) {
			_case_begin_1b5986edb:;
			{
				jule::Ptr<_1ce00a832_FnIns> _124617_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _124733_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _124748_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce0397c8__Unwrap(_self_, _124733_e, _124748_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_124617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1b5987052:;
			{
				jule::Ptr<_1ce00a832_FnIns> _125317_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _125433_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _125448_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce039bc4__Type(_self_, _125433_e, _125448_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_125317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Lvalue", 6)) {
			_case_begin_1b59870b8:;
			{
				jule::Ptr<_1ce00a832_FnIns> _126017_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _126133_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _126148_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce03a0c0__Lvalue(_self_, _126133_e, _126148_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_126017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1b5987140:;
			{
				jule::Ptr<_1ce00a832_FnIns> _126717_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _126833_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _126848_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce03a4bb__Mutable(_self_, _126833_e, _126848_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_126717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Const", 5)) {
			_case_begin_1b598730a:;
			{
				jule::Ptr<_1ce00a832_FnIns> _127417_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _127533_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _127548_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce03a8b7__Const(_self_, _127533_e, _127548_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_127417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Field", 5)) {
			_case_begin_1b5987371:;
			{
				jule::Ptr<_1ce00a832_FnIns> _128117_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _128233_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _128248_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce03acb3__Field(_self_, _128233_e, _128248_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_128117_method));;
			}
		}
		else {
			_case_begin_1b5986c88:;
			{
				return nullptr;;
			}
		}
		_match_end_1b5986dba:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ce038ab3_comptimeValue _Src) {
	_Stream << _1ce038e37_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ce03b786_Str(_1ce03b412_comptimeFiles* _self_) {
	return jule::Str::lit("comptimeFiles", 13);;
}



inline jule::Bool _1ce03bac7_Equal(jule::Ptr<_1ce03b412_comptimeFiles> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _130021_other) {
	return false;;
}



inline void _1ce03c04a_ready(_1ce03b412_comptimeFiles* _self_, jule::Ptr<_1ce0b4105_Var>* _130429_keyA, jule::Ptr<_1ce0b4105_Var>* _130446_keyB) {
	if (((*(_130429_keyA)) != nullptr)) {
		(*((*(_130429_keyA))))._field_Constant=true;
		(*((*(_130429_keyA))))._field_Value=jule::new_ptr<_1ce11cd84_Value>(_1ce11cd84_Value{._field_Data=jule::new_ptr<_1ce11bc0c_Data>()});
		(*((*(_130429_keyA))))._field_Kind=(*(_1ce238422_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_130446_keyB)) != nullptr)) {
		(*((*(_130446_keyB))))._field_Constant=true;
		(*((*(_130446_keyB))))._field_Value=jule::new_ptr<_1ce11cd84_Value>(_1ce11cd84_Value{._field_Data=jule::new_ptr<_1ce11bc0c_Data>()});
		(*((*(_130446_keyB))))._field_Kind=jule::new_ptr<_1ce154d99_TypeSymbol>(_1ce154d99_TypeSymbol{._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(jule::new_ptr<_1ce03ca0c_comptimeFile>(), 18)})});
	};
}



inline void _1ce03c468_step(_1ce03b412_comptimeFiles* _self_, jule::I32 _132523_i, jule::Ptr<_1ce0b4105_Var>* _132536_keyA, jule::Ptr<_1ce0b4105_Var>* _132553_keyB) {
	if (((*(_132536_keyA)) != nullptr)) {
		(*((*((*((*(_132536_keyA))))._field_Value))._field_Data))._field_Constant=static__22be165ad_NewI64(static_cast<jule::I64>(_132523_i));
		(*(*(*((*(_132536_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_132536_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_132553_keyB)) != nullptr)) {
		(*((*((*((*((*(_132553_keyB))))._field_Kind))._field_Kind))._field_Kind.cast_ptr<_1ce03ca0c_comptimeFile>(18)))._field_file=(*(_self_))._field_files[_132523_i];
	};
}



inline jule::I32 _1ce03c6ee_len(_1ce03b412_comptimeFiles* _self_) {
	return (*(_self_))._field_files.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce03b412_comptimeFiles _Src) {
	_Stream << _1ce03b786_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ce03d0b2_Str(_1ce03ca0c_comptimeFile* _self_) {
	return jule::Str::lit("comptimeFile", 12);;
}



inline jule::Bool _1ce03d403_Equal(jule::Ptr<_1ce03ca0c_comptimeFile> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _134921_other) {
	return false;;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce03d810__Path(jule::Ptr<_1ce03ca0c_comptimeFile> _self_, jule::Ptr<_1ce11d934_Eval>* _135330_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _135345_fc) {
	if (((*((*(_135345_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_135330_e)).ptr(), (*((*((*(_135345_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Path", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22be1616d_Const> _135813_constant = static__22be16e0a_NewStr((*((*((*(_self_))._field_file))._field_File))._field_Path);;
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce2353db_primStr, ._field_Model=jule::Any(_135813_constant, &__jule_any_type19), ._field_Constant=_135813_constant});;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce03dc0b__Name(jule::Ptr<_1ce03ca0c_comptimeFile> _self_, jule::Ptr<_1ce11d934_Eval>* _136630_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _136645_fc) {
	if (((*((*(_136645_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_136630_e)).ptr(), (*((*((*(_136645_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22be1616d_Const> _137113_constant = static__22be16e0a_NewStr(_1cdeb2685_Name((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce2353db_primStr, ._field_Model=jule::Any(_137113_constant, &__jule_any_type19), ._field_Constant=_137113_constant});;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce03e107__Dir(jule::Ptr<_1ce03ca0c_comptimeFile> _self_, jule::Ptr<_1ce11d934_Eval>* _137929_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _137944_fc) {
	if (((*((*(_137944_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_137929_e)).ptr(), (*((*((*(_137944_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Dir", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_22be1616d_Const> _138413_constant = static__22be16e0a_NewStr(_1cdeb23ee_Dir((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce2353db_primStr, ._field_Model=jule::Any(_138413_constant, &__jule_any_type19), ._field_Constant=_138413_constant});;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce03e448_subIdent(jule::Ptr<_1ce03ca0c_comptimeFile> _self_, jule::Str* _139229_ident) {
	{
		auto &_match_expr{ (*(_139229_ident)) };
		
		if (_match_expr == jule::Str::lit("Path", 4)) {
			_case_begin_1b59a4679:;
			{
				jule::Ptr<_1ce00a832_FnIns> _139517_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _139633_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _139648_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce03d810__Path(_self_, _139633_e, _139648_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_139517_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1b59a4723:;
			{
				jule::Ptr<_1ce00a832_FnIns> _140217_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _140333_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _140348_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce03dc0b__Name(_self_, _140333_e, _140348_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_140217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Dir", 3)) {
			_case_begin_1b59a479a:;
			{
				jule::Ptr<_1ce00a832_FnIns> _140917_method = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>([=](jule::Ptr<_1ce11d934_Eval>* _141033_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _141048_fc, jule::Ptr<_1ce11bc0c_Data>* ) mutable -> jule::Ptr<_1ce11bc0c_Data> {
					return _1ce03e107__Dir(_self_, _141033_e, _141048_fc);;
				}), });;
				return _1ce03e7bc_buildAsComptimeMethodData(&(_140917_method));;
			}
		}
		else {
			_case_begin_1b59a438d:;
			{
				return nullptr;;
			}
		}
		_match_end_1b59a4525:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ce03ca0c_comptimeFile _Src) {
	_Stream << _1ce03d0b2_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_1ce08b42e_Sema>*,jule::Slice<jule::Ptr<_1ce14bdd5_TypeAlias>>*)> _1ce042418_readyFn(jule::Ptr<_1ce04201c_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_1ce08b42e_Sema>*,jule::Slice<jule::Ptr<_1ce14bdd5_TypeAlias>>*)>([=](jule::Ptr<_1ce08b42e_Sema>* _6421_sema, jule::Slice<jule::Ptr<_1ce14bdd5_TypeAlias>>* _6439_generics) mutable -> jule::Bool {
		{
			auto expr = &((*_self_.alloc)._field_genericsD);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b59b6328:;
			if (it != expr_end) {
				jule::I32 _6518_i = it - expr->begin();
				jule::Ptr<_1cdecdc9a_GenericDecl> _6525_g = *it;
				{
					jule::Ptr<_1ce14b2e1_InsGeneric> _6621_generic = (*(_self_))._field_generics[_6518_i];;
					if ((((*(_6525_g))._field_Constraint == nullptr) || ((*((*_6525_g.alloc)._field_Constraint))._field_Mask.len() == 0LL))) {
						goto _iter_next_1b59b6328;
					};
					(*(_6621_generic))._field_Constraint=jule::Slice<jule::Ptr<_1ce14cbc7_TypeKind>>::alloc(0LL, (*((*_6525_g.alloc)._field_Constraint))._field_Mask.len());
					{
						auto expr = &((*((*_6525_g.alloc)._field_Constraint))._field_Mask);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b59b9084:;
						if (it != expr_end) {
							jule::Ptr<_1cdec1a90_TypeDecl> _7129_mask = *it;
							{
								jule::I32 _7221_n = (*((*(_6421_sema))))._field_errors.len();;
								jule::Ptr<_1ce14cbc7_TypeKind> _7325_kind = _1ce098d54_buildTypeWithRefers((*(_6421_sema)), &(_7129_mask), jule::Trait<_1ce16c7b8_Lookup>((*(_6421_sema)), 3), (*(_6439_generics)), nullptr);;
								if ((_7325_kind == nullptr)) {
									{
										auto &_match_expr{ (*(_7129_mask))._field_Kind };
										
										if (_match_expr.type == &__jule_any_type20) {
											_case_begin_1b59bad55:;
											{
												jule::Ptr<_1cdec219a_IdentTypeDecl> _7733_itd = (*(_7129_mask))._field_Kind.unsafe_cast_ptr<_1cdec219a_IdentTypeDecl>();;
												if ((((*(_7733_itd))._field_Generics.len() == 0LL) && _1ce04399c_isBuiltinConstraint(&((*_7733_itd.alloc)._field_Ident)))) {
													_7325_kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(_1ce169ae5_buildPrimType((*_7733_itd.alloc)._field_Ident), 20)});
													(*((*(_6421_sema))))._field_errors=(*((*(_6421_sema))))._field_errors.slice(0LL, _7221_n);
													goto _julec_label_1b59bd9c3;
												};
											}
										}
										_match_end_1b59bacde:;
									};
									return false;;
								};
								_julec_label_1b59bd9c3:;
								(*_6621_generic.alloc)._field_Constraint=jule::append((*_6621_generic.alloc)._field_Constraint,jule::Slice<jule::Ptr<_1ce14cbc7_TypeKind>>::make({_7325_kind}));
							}
							_iter_next_1b59b9084:;
							++it;
							goto _iter_begin_1b59b9084;
						}
						_iter_end_1b59b9084:;
					};
				}
				_iter_next_1b59b6328:;
				++it;
				_6518_i++;
				goto _iter_begin_1b59b6328;
			}
			_iter_end_1b59b6328:;
		};
		return true;;
	});;
}



inline jule::Bool _1ce04269e_readyFi(jule::Ptr<_1ce04201c_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_fi))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*_self_.alloc)._field_fi.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1ce09e761_fnEnvironment((*_self_.alloc)._field_s, &((*_self_.alloc)._field_fi), _1ce042418_readyFn(_self_)));;
}



inline jule::Bool _1ce042935_readySi(jule::Ptr<_1ce04201c_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_si))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*_self_.alloc)._field_si.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1ce042418_readyFn(_self_)(&((*_self_.alloc)._field_s), &((*_self_.alloc)._field_genericsA)));;
}



inline jule::Bool _1ce042bbb_ready(jule::Ptr<_1ce04201c_constraintChecker> _self_) {
	if (((*(_self_))._field_fi != nullptr)) {
		return _1ce04269e_readyFi(_self_);;
	};
	return _1ce042935_readySi(_self_);;
}



inline jule::Bool _1ce042e52_check(jule::Ptr<_1ce04201c_constraintChecker> _self_) {
	if ((!(_1ce042bbb_ready(_self_)))) {
		return false;;
	};
	_julec_label_1b59c4aea:;
	{
		auto expr = &((*_self_.alloc)._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b59c5227:;
		if (it != expr_end) {
			jule::I32 _12014_i = it - expr->begin();
			jule::Ptr<_1ce14b2e1_InsGeneric> _12021_g = *it;
			{
				if (((*(_12021_g))._field_Constraint == nullptr)) {
					goto _iter_next_1b59c5227;
				};
				{
					auto expr = &((*_12021_g.alloc)._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b59c63e3:;
					if (it != expr_end) {
						jule::Ptr<_1ce14cbc7_TypeKind> _12425_c2 = *it;
						{
							jule::Ptr<_1ce1557a1_Prim> _12521_prim = _1ce150328_Prim(_12425_c2.ptr());;
							if (((_12521_prim != nullptr) && _1ce1563c8_IsConstraint(_12521_prim))) {
								if (_1ce0436d3_matchConstraint(&((*_12521_prim.alloc)._field_Kind), &((*_12021_g.alloc)._field_Kind))) {
									goto _iter_next_1b59c5227;
								};
								goto _iter_next_1b59c63e3;
							};
							if (_1ce14d3d1_Equal(_12425_c2, (*_12021_g.alloc)._field_Kind)) {
								goto _iter_next_1b59c5227;
							};
						}
						_iter_next_1b59c63e3:;
						++it;
						goto _iter_begin_1b59c63e3;
					}
					_iter_end_1b59c63e3:;
				};
				_1ce093dc6_pushErr((*_self_.alloc)._field_s.ptr(), (*_self_.alloc)._field_et, jule::Str::lit("type @ is not matched with @'s constraint\n       constraint: @", 62), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*_12021_g.alloc)._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*_self_.alloc)._field_genericsD[_12014_i]))._field_Ident, &__jule_any_type4),jule::Any(_1ce04331a_toStrConstraints(_12021_g), &__jule_any_type4)}));
				return false;;
			}
			_iter_next_1b59c5227:;
			++it;
			_12014_i++;
			goto _iter_begin_1b59c5227;
		}
		_iter_end_1b59c5227:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce04201c_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ce044739_IsTraitImpl(_1ce044371_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1ce0449c0_IsStructImpl(_1ce044371_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce044371_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce0497c7_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce049be5_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce049ee2_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce04a410_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce04a70c_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce04abb3_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce04b60e_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce04b994_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce04bd6d_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce04c16a_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce04c544_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce04c91d_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce04cdc4_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce04d29d_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce04d90d_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce04e436_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce04eb2e_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce04eec5_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce050635_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce050bb8_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "st:" << _Src._field_st << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ce06b0ac_ImportInfo> _1ce052071_SelectPackage(_1ce051acb_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1ce06b0ac_ImportInfo>)> _45832_selector) {
	return _1ce08b8c4_SelectPackage((*(_self_))._field_s.ptr(), _45832_selector);;
}



inline jule::Ptr<_1ce0b4105_Var> _1ce05246c_FindVar(_1ce051acb_scopeChecker* _self_, jule::Str _46926_ident, jule::Bool _46938_binded) {
	;
	jule::Ptr<_1ce0b4105_Var> _47213_v = _1ce11905b_findVar((*(_self_))._field_table.ptr(), &(_46926_ident), _46938_binded, true);;
	if ((_47213_v != nullptr)) {
		return _47213_v;;
	};
	jule::Ptr<_1ce051acb_scopeChecker> _47713_parent = (*(_self_))._field_parent;;
	while ((_47713_parent != nullptr)) {
		{
			_47213_v=_1ce11905b_findVar((*_47713_parent.alloc)._field_table, &(_46926_ident), _46938_binded, true);
			if ((_47213_v != nullptr)) {
				return _47213_v;;
			};
			_47713_parent=(*_47713_parent.alloc)._field_parent;
		}
	_iter_next_1b7e95b46:;
	}
	_iter_end_1b7e95b46:;;
	return _1ce08bcc0_FindVar((*(_self_))._field_s.ptr(), _46926_ident, _46938_binded);;
}



inline jule::Ptr<_1ce14bdd5_TypeAlias> _1ce052868_FindTypeAlias(_1ce051acb_scopeChecker* _self_, jule::Str _49632_ident, jule::Bool _49644_binded) {
	;
	jule::Ptr<_1ce14bdd5_TypeAlias> _49913_ta = _1ce119512_findTypeAlias((*(_self_))._field_table.ptr(), &(_49632_ident), _49644_binded, true);;
	if ((_49913_ta != nullptr)) {
		return _49913_ta;;
	};
	jule::Ptr<_1ce051acb_scopeChecker> _50413_parent = (*(_self_))._field_parent;;
	while ((_50413_parent != nullptr)) {
		{
			_49913_ta=_1ce119512_findTypeAlias((*_50413_parent.alloc)._field_table, &(_49632_ident), _49644_binded, true);
			if ((_49913_ta != nullptr)) {
				return _49913_ta;;
			};
			_50413_parent=(*_50413_parent.alloc)._field_parent;
		}
	_iter_next_1b7e98ae4:;
	}
	_iter_end_1b7e98ae4:;;
	return _1ce0920e4_FindTypeAlias((*(_self_))._field_s.ptr(), _49632_ident, _49644_binded);;
}



inline jule::Ptr<_1cdee2990_Struct> _1ce052c64_FindStruct(_1ce051acb_scopeChecker* _self_, jule::Str _52129_ident, jule::Bool _52141_binded) {
	return _1ce092424_FindStruct((*(_self_))._field_s.ptr(), _52129_ident, _52141_binded);;
}



inline jule::Ptr<_1ce00792d_Fn> _1ce053160_FindFn(_1ce051acb_scopeChecker* _self_, jule::Str _53025_ident, jule::Bool _53037_binded) {
	return _1ce092820_FindFn((*(_self_))._field_s.ptr(), _53025_ident, _53037_binded);;
}



inline jule::Ptr<_1ce01ac0a_Trait> _1ce0534a1_FindTrait(_1ce051acb_scopeChecker* _self_, jule::Str _53928_ident) {
	return _1ce092b61_FindTrait((*(_self_))._field_s.ptr(), _53928_ident);;
}



inline jule::Ptr<_1ce01d416_Enum> _1ce0537e2_FindEnum(_1ce051acb_scopeChecker* _self_, jule::Str _54827_ident) {
	return _1ce092ea2_FindEnum((*(_self_))._field_s.ptr(), _54827_ident);;
}



inline jule::Ptr<_1ce01eb21_TypeEnum> _1ce053b33_FindTypeEnum(_1ce051acb_scopeChecker* _self_, jule::Str _55731_ident) {
	return _1ce0932e3_FindTypeEnum((*(_self_))._field_s.ptr(), _55731_ident);;
}



inline jule::Bool _1ce053e85_isUnsafe(jule::Ptr<_1ce051acb_scopeChecker> _self_) {
	jule::Ptr<_1ce051acb_scopeChecker> _56513_scope = _self_;;
	_julec_label_1b7e9dc09:;
	if ((*((*(_56513_scope))._field_scope))._field_Unsafety) {
		return true;;
	};
	if (((*_56513_scope.alloc)._field_parent != nullptr)) {
		_56513_scope=(*_56513_scope.alloc)._field_parent;
		goto _julec_label_1b7e9dc09;
	};
	return false;;
}



inline jule::Bool _1ce05421b_isRoot(_1ce051acb_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1ce054419_stop(_1ce051acb_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1ce0546a0_stopped(_1ce051acb_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1ce054936_isDeferred(jule::Ptr<_1ce051acb_scopeChecker> _self_) {
	jule::Ptr<_1ce051acb_scopeChecker> _59813_scope = _self_;;
	_julec_label_1b7ea202b:;
	if ((*((*(_59813_scope))._field_scope))._field_Deferred) {
		return true;;
	};
	if (((*_59813_scope.alloc)._field_parent != nullptr)) {
		_59813_scope=(*_59813_scope.alloc)._field_parent;
		goto _julec_label_1b7ea202b;
	};
	return false;;
}



inline jule::Ptr<_1ce051acb_scopeChecker> _1ce054bbc_getRoot(jule::Ptr<_1ce051acb_scopeChecker> _self_) {
	jule::Ptr<_1ce051acb_scopeChecker> _61613_root = _self_;;
	while ((((*(_61613_root))._field_parent != nullptr) && ((*_61613_root.alloc)._field_owner == nullptr))) {
		{
			_61613_root=(*_61613_root.alloc)._field_parent;
		}
	_iter_next_1b7ea411b:;
	}
	_iter_end_1b7ea411b:;;
	return _61613_root;;
}



inline jule::Ptr<_1ce051acb_scopeChecker> _1ce054e53_getHardRoot(jule::Ptr<_1ce051acb_scopeChecker> _self_) {
	jule::Ptr<_1ce051acb_scopeChecker> _62613_root = _self_;;
	while (((*(_62613_root))._field_parent != nullptr)) {
		{
			_62613_root=(*_62613_root.alloc)._field_parent;
		}
	_iter_next_1b7ea544c:;
	}
	_iter_end_1b7ea544c:;;
	return _62613_root;;
}



inline jule::Ptr<_1ce04c16a_Label> _1ce055294_findLabel(_1ce051acb_scopeChecker* _self_, jule::Str* _63629_ident) {
	{
		auto expr = &((*((*(_self_))._field_scope))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7ea6492:;
		if (it != expr_end) {
			jule::Any _63721_st = *it;
			{
				{
					auto &_match_expr{ _63721_st };
					
					if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1b7ea6c56:;
						{
							jule::Ptr<_1ce04c16a_Label> _64021_label = _63721_st.unsafe_cast_ptr<_1ce04c16a_Label>();;
							if (((*(_64021_label))._field_Ident == (*(_63629_ident)))) {
								return _64021_label;;
							};
						}
					}
					_match_end_1b7ea6c01:;
				};
			}
			_iter_next_1b7ea6492:;
			++it;
			goto _iter_begin_1b7ea6492;
		}
		_iter_end_1b7ea6492:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ce050635_scopeLabel> _1ce0555d5_findLabelScope(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Str* _65235_ident) {
	jule::Ptr<_1ce050635_scopeLabel> _65313_label = _1ce055926_findLabelAll(_self_.ptr(), _65235_ident);;
	if (((_65313_label != nullptr) && ((*_65313_label.alloc)._field_scope == _self_))) {
		return _65313_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1ce050635_scopeLabel> _1ce055926_findLabelAll(_1ce051acb_scopeChecker* _self_, jule::Str* _66432_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7ea9352:;
		if (it != expr_end) {
			jule::Ptr<_1ce050635_scopeLabel> _66521_lbl = *it;
			{
				if (((*((*(_66521_lbl))._field_label))._field_Ident == (*(_66432_ident)))) {
					return _66521_lbl;;
				};
			}
			_iter_next_1b7ea9352:;
			++it;
			goto _iter_begin_1b7ea9352;
		}
		_iter_end_1b7ea9352:;
	};
	return nullptr;;
}



inline jule::Bool _1ce055d22_isDuplicatedIdent(_1ce051acb_scopeChecker* _self_, jule::Uintptr _67636_itself, jule::Str* _67654_ident) {
	jule::Ptr<_1ce0b4105_Var> _6779_v = _1ce05246c_FindVar(_self_, (*(_67654_ident)), false);;
	if (((_6779_v != nullptr) && (static_cast<jule::Uintptr>(_6779_v) != _67636_itself))) {
		if (((*_6779_v.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_6779_v.alloc)._field_Scope == (*(_self_))._field_scope) || (!(_1ce093700_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))));;
	};
	jule::Ptr<_1ce14bdd5_TypeAlias> _6859_ta = _1ce052868_FindTypeAlias(_self_, (*(_67654_ident)), false);;
	if (((_6859_ta != nullptr) && (static_cast<jule::Uintptr>(_6859_ta) != _67636_itself))) {
		if (((*_6859_ta.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_6859_ta.alloc)._field_Scope == (*(_self_))._field_tree) || (!(_1ce093700_isFlag((*(_self_))._field_s, static_cast<jule::I32>(1LL)))));;
	};
	return false;;
}



inline void _1ce0560ca_checkVarDecl(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1cded490a_VarDecl> _69636_decl) {
	jule::Ptr<_1ce0b4105_Var> _69713_v = _1ce013d79_buildVar(_69636_decl);;
	(*(_69713_v))._field_Scope=(*(_self_))._field_scope;
	__JULE_DEFER({
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*_self_.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1ce0b4105_Var>>::make({_69713_v}));
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_69713_v, &__jule_any_type8)}));
	});;
	if (_1ce055d22_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>(_69713_v), &((*_69713_v.alloc)._field_Ident))) {
		_1ce093dc6_pushErr((*_self_.alloc)._field_s.ptr(), (*_69713_v.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_69713_v.alloc)._field_Ident, &__jule_any_type4)}));
		_1ce094239_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1ce054419_stop(_self_);
		return;;
	};
	_1ce0a744a_checkVarDecl((*_self_.alloc)._field_s, &(_69713_v), jule::Trait<_1ce16c7b8_Lookup>(_self_, 0));
	if (((!(_1ce0b4765_IsTypeInferred(_69713_v))) && (((*_69713_v.alloc)._field_Kind == nullptr) || ((*((*_69713_v.alloc)._field_Kind))._field_Kind == nullptr)))) {
		return;;
	};
	_1ce0aabe0_evalVarValue((*_self_.alloc)._field_s, &(_69713_v), jule::Trait<_1ce16c7b8_Lookup>(_self_, 0));
	if (((!(_1ce0b44ce_IsInitialized(_69713_v))) || ((*((*_69713_v.alloc)._field_Value))._field_Data == nullptr))) {
		return;;
	};
	_1ce05c345_removeInteriorMutRisk(_self_, &((*(*_69713_v.alloc)._field_Value.alloc)._field_Data));
	_1ce0aa87c_checkVarValue((*_self_.alloc)._field_s, &(_69713_v));
}



inline void _1ce056383_checkTypeAlias(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1ce14bdd5_TypeAlias>* _72739_ta) {
	if (_1ce055d22_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_72739_ta))), &((*((*(_72739_ta))))._field_Ident))) {
		_1ce093dc6_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_72739_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_72739_ta))))._field_Ident, &__jule_any_type4)}));
		_1ce094239_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1ce054419_stop(_self_);
		return;;
	};
	_1ce0a14cc_checkTypeAliasDecl((*_self_.alloc)._field_s, _72739_ta, jule::Trait<_1ce16c7b8_Lookup>(_self_, 0));
	(*((*_self_.alloc)._field_table))._field_TypeAliases=jule::append((*(*_self_.alloc)._field_table.alloc)._field_TypeAliases,jule::Slice<jule::Ptr<_1ce14bdd5_TypeAlias>>::make({(*(_72739_ta))}));
	if (((*((*((*(_72739_ta))))._field_Kind))._field_Kind == nullptr)) {
		_1ce054419_stop(_self_);
	};
}



inline void _1ce05663b_checkTypeAliasDecl(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1cded85ac_TypeAliasDecl> _74342_decl) {
	jule::Ptr<_1ce14bdd5_TypeAlias> _74413_ta = _1ce010958_buildTypeAlias(_74342_decl);;
	_1ce056383_checkTypeAlias(_self_, &(_74413_ta));
}



inline jule::Ptr<_1ce0497c7_Scope> _1ce0568c2_getChild(_1ce051acb_scopeChecker* _self_) {
	return jule::new_ptr<_1ce0497c7_Scope>(_1ce0497c7_Scope{._field_Parent=(*(_self_))._field_scope, });;
}



inline void _1ce056ce0_checkChildSsc(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1cded1ab1_ScopeTree>* _75438_tree, jule::Ptr<_1ce0497c7_Scope>* _75461_s, jule::Ptr<_1ce051acb_scopeChecker>* _75477_ssc) {
	(*((*(_75477_ssc))))._field_parent=_self_;
	_1ce0632d5_check((*(_75477_ssc)), _75438_tree, _75461_s);
}



inline jule::Ptr<_1ce0497c7_Scope> _1ce0571db_checkChildSc(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1cded1ab1_ScopeTree>* _75937_tree, jule::Ptr<_1ce051acb_scopeChecker>* _75960_ssc) {
	jule::Ptr<_1ce0497c7_Scope> _76013_s = _1ce0568c2_getChild(_self_.ptr());;
	_1ce056ce0_checkChildSsc(_self_, _75937_tree, &(_76013_s), _75960_ssc);
	return _76013_s;;
}



inline jule::Ptr<_1ce0497c7_Scope> _1ce05752c_checkChild(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1cded1ab1_ScopeTree>* _76535_tree) {
	jule::Ptr<_1ce051acb_scopeChecker> _76613_ssc = _1ce06356b_newChildChecker(_self_);;
	return _1ce0571db_checkChildSc(_self_, _76535_tree, &(_76613_ssc));;
}



inline void _1ce0577d5_checkAnonScope(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1cded1ab1_ScopeTree> _77038_tree) {
	jule::Ptr<_1ce0497c7_Scope> _77113_s = _1ce05752c_checkChild(_self_, &(_77038_tree));;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_77113_s, &__jule_any_type22)}));
}



inline void _1ce057b48_processErrorCall(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1ce0033b8_BuiltinErrorCallExprModel>* _77541_m, jule::Ptr<_1cdeab4b4_Token> _77572_err) {
	if (_1ce054936_isDeferred(_self_)) {
		_1ce093dc6_pushErr((*_self_.alloc)._field_s.ptr(), _77572_err, jule::Str::lit("deferred scopes are not supports error calls", 44), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ce051acb_scopeChecker> _78013_root = _1ce054bbc_getRoot(_self_);;
	if ((!((*((*((*(_78013_root))._field_owner))._field_Decl))._field_Exceptional))) {
		_1ce093dc6_pushErr((*_self_.alloc)._field_s, _77572_err, jule::Str::lit("error call can only useable for exceptional functions", 53), jule::Slice<jule::Any>());
		_1ce094239_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("you can declare an exceptional function with \"!\" operator", 57), jule::Slice<jule::Any>());
	};
	(*((*(_77541_m))))._field_Func=(*_78013_root.alloc)._field_owner;
}



inline void _1ce057e01_checkExpr(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1cdec5dc4_Expr> _78833_expr) {
	jule::Ptr<_1ce11d934_Eval> _78913_eval = _1ce09b373_eval((*(_self_))._field_s, jule::Trait<_1ce16c7b8_Lookup>(_self_, 0));;
	(*(_78913_eval))._field_ignored=true;
	jule::Ptr<_1ce11bc0c_Data> _79113_d = _1ce13bb94_evalExpr(_78913_eval, _78833_expr);;
	if (((_79113_d == nullptr) || ((*(_79113_d))._field_Model == nullptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_79113_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b7ec6b88:;
			{
				jule::Ptr<_1ce0033b8_BuiltinErrorCallExprModel> _80017_m = (*(_79113_d))._field_Model.unsafe_cast_ptr<_1ce0033b8_BuiltinErrorCallExprModel>();;
				_1ce057b48_processErrorCall(_self_, &(_80017_m), (*(_78833_expr))._field_Token);
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_79113_d, &__jule_any_type24)}));
			}
		}
		else if (_match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33 || _match_expr.type == &__jule_any_type34) {
			_case_begin_1b7ec72d7:;
			{
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_79113_d, &__jule_any_type24)}));
			}
		}
		else {
			_case_begin_1b7ec7271:;
			{
				_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*(_78833_expr))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b7ec721b:;
	};
}



inline jule::Ptr<_1ce049be5_If> _1ce058242_checkIf(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1cded74e0_If> _81931_i) {
	jule::Ptr<_1ce0497c7_Scope> _82013_s = _1ce05752c_checkChild(_self_, &((*(_81931_i))._field_Scope));;
	jule::Ptr<_1ce11bc0c_Data> _82213_d = _1ce13bb94_evalExpr(_1ce09b373_eval((*_self_.alloc)._field_s, jule::Trait<_1ce16c7b8_Lookup>(_self_, 0)), (*_81931_i.alloc)._field_Expr);;
	if ((_82213_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ce1557a1_Prim> _82713_prim = _1ce150328_Prim((*(_82213_d))._field_Kind.ptr());;
	if (((_82713_prim == nullptr) || (!(_1ce1589a2_IsBool(_82713_prim.ptr()))))) {
		_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*((*_81931_i.alloc)._field_Expr))._field_Token, jule::Str::lit("if conditions must be have boolean expression", 45), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ce049be5_If>(_1ce049be5_If{._field_Expr=(*(_82213_d))._field_Model, ._field_Scope=_82013_s});;
}



inline jule::Ptr<_1ce049ee2_Else> _1ce058583_checkElse(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1cded78b9_Else> _83933_e) {
	return jule::new_ptr<_1ce049ee2_Else>(_1ce049ee2_Else{._field_Scope=_1ce05752c_checkChild(_self_, &((*(_83933_e))._field_Scope))});;
}



inline void _1ce05883b_checkConditional(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1cded7d70_Conditional> _84540_conditional) {
	jule::Ptr<_1ce04a410_Conditional> _84613_c = jule::new_ptr<_1ce04a410_Conditional>();;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_84613_c, &__jule_any_type35)}));
	(*_84613_c.alloc)._field_Elifs=jule::Slice<jule::Ptr<_1ce049be5_If>>::alloc(0LL, ((*(_84540_conditional))._field_Tail.len() + 1LL));
	(*_84613_c.alloc)._field_Elifs=jule::append((*_84613_c.alloc)._field_Elifs,jule::Slice<jule::Ptr<_1ce049be5_If>>::make({_1ce058242_checkIf(_self_, (*_84540_conditional.alloc)._field_Head)}));
	{
		auto expr = &((*_84540_conditional.alloc)._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7ed3ba6:;
		if (it != expr_end) {
			jule::Ptr<_1cded74e0_If> _85221_elif = *it;
			{
				(*_84613_c.alloc)._field_Elifs=jule::append((*_84613_c.alloc)._field_Elifs,jule::Slice<jule::Ptr<_1ce049be5_If>>::make({_1ce058242_checkIf(_self_, _85221_elif)}));
			}
			_iter_next_1b7ed3ba6:;
			++it;
			goto _iter_begin_1b7ed3ba6;
		}
		_iter_end_1b7ed3ba6:;
	};
	if (((*_84540_conditional.alloc)._field_Default != nullptr)) {
		(*_84613_c.alloc)._field_Default=_1ce058583_checkElse(_self_, (*_84540_conditional.alloc)._field_Default);
	};
}



inline void _1ce058d14_checkIterScopeSsc(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Uintptr _86137_it, jule::Ptr<_1cded1ab1_ScopeTree> _86154_tree, jule::Ptr<_1ce0497c7_Scope>* _86177_s, jule::Ptr<_1ce051acb_scopeChecker> _86192_ssc) {
	(*(_86192_ssc))._field_it=_86137_it;
	_1ce056ce0_checkChildSsc(_self_, &(_86154_tree), _86177_s, &(_86192_ssc));
}



inline jule::Ptr<_1ce0497c7_Scope> _1ce0592ba_checkIterScopeSc(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Uintptr _86636_it, jule::Ptr<_1cded1ab1_ScopeTree> _86653_tree, jule::Ptr<_1ce051acb_scopeChecker> _86675_ssc) {
	jule::Ptr<_1ce0497c7_Scope> _86713_scope = _1ce0568c2_getChild(_self_.ptr());;
	_1ce058d14_checkIterScopeSsc(_self_, _86636_it, _86653_tree, &(_86713_scope), _86675_ssc);
	return _86713_scope;;
}



inline jule::Ptr<_1ce0497c7_Scope> _1ce0596b6_checkIterScope(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Uintptr _87234_it, jule::Ptr<_1cded1ab1_ScopeTree>* _87252_tree) {
	jule::Ptr<_1ce051acb_scopeChecker> _87313_ssc = _1ce06356b_newChildChecker(_self_);;
	return _1ce0592ba_checkIterScopeSc(_self_, _87234_it, (*(_87252_tree)), _87313_ssc);;
}



inline void _1ce05996e_checkInfIter(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1cded5554_Iter>* _87737_it) {
	jule::Ptr<_1ce04a70c_InfIter> _87813_kind = jule::new_ptr<_1ce04a70c_InfIter>();;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_87813_kind, &__jule_any_type36)}));
	(*_87813_kind.alloc)._field_Scope=_1ce0596b6_checkIterScope(_self_, static_cast<jule::Uintptr>(_87813_kind), &((*((*(_87737_it))))._field_Scope));
}



inline void _1ce059c27_checkWhileIter(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1cded5554_Iter>* _88339_it) {
	jule::Ptr<_1cded5d7e_WhileKind> _88413_wh = (*((*(_88339_it))))._field_Kind.cast_ptr<_1cded5d7e_WhileKind>(&__jule_any_type37);;
	if ((((*(_88413_wh))._field_Expr == nullptr) && ((*_88413_wh.alloc)._field_Next == nullptr))) {
		_1ce05996e_checkInfIter(_self_, _88339_it);
		return;;
	};
	jule::Ptr<_1ce04abb3_WhileIter> _89013_kind = jule::new_ptr<_1ce04abb3_WhileIter>();;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_89013_kind, &__jule_any_type38)}));
	(*_89013_kind.alloc)._field_Scope=_1ce0596b6_checkIterScope(_self_, static_cast<jule::Uintptr>(_89013_kind), &((*((*(_88339_it))))._field_Scope));
	if (((*_88413_wh.alloc)._field_Expr != nullptr)) {
		jule::Ptr<_1ce11bc0c_Data> _89517_d = _1ce13bb94_evalExpr(_1ce09b373_eval((*_self_.alloc)._field_s, jule::Trait<_1ce16c7b8_Lookup>(_self_, 0)), (*_88413_wh.alloc)._field_Expr);;
		if ((_89517_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1ce1557a1_Prim> _90013_prim = _1ce150328_Prim((*(_89517_d))._field_Kind.ptr());;
		if ((_90013_prim == nullptr)) {
			_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*((*(_88339_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1ce1589a2_IsBool(_90013_prim.ptr())))) {
			_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*((*(_88339_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		(*_89013_kind.alloc)._field_Expr=(*(_89517_d))._field_Model;
	};
	if (_1cded61e2_IsWhileNext(_88413_wh)) {
		if ((!(_1ce048c5a_isValidAstStForNextSt(&((*_88413_wh.alloc)._field_Next))))) {
			_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*_88413_wh.alloc)._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			return;;
		};
		jule::I32 _92013_n = (*(*_self_.alloc)._field_scope.alloc)._field_Stmts.len();;
		_1ce061e1b_checkNode(_self_, &((*_88413_wh.alloc)._field_Next));
		if ((_92013_n < (*(*_self_.alloc)._field_scope.alloc)._field_Stmts.len())) {
			jule::Any _92321_st = (*(*_self_.alloc)._field_scope.alloc)._field_Stmts[_92013_n];;
			(*(*_self_.alloc)._field_scope.alloc)._field_Stmts=(*(*_self_.alloc)._field_scope.alloc)._field_Stmts.slice(0LL, _92013_n);
			if ((!(_1ce049024_isValidStForNextSt(&(_92321_st))))) {
				_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*_88413_wh.alloc)._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			};
			(*_89013_kind.alloc)._field_Next=_92321_st;
		};
	};
}



inline void _1ce05a145_checkComptimeRangeIter(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1cded5554_Iter>* _93347_it, jule::Ptr<_1ce04b60e_RangeIter>* _93363_kind, jule::Ptr<_1ce11bc0c_Data>* _93386_d) {
	if (((*((*(_93363_kind))))._field_KeyA != nullptr)) {
		if (((!(_1ce093700_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _1ce055d22_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_93363_kind))))._field_KeyA.alloc)._field_Ident)))) {
			_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*(*((*(_93363_kind))))._field_KeyA.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_93363_kind))))._field_KeyA.alloc)._field_Ident, &__jule_any_type4)}));
			_1ce094239_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	if (((*((*(_93363_kind))))._field_KeyB != nullptr)) {
		if (((!(_1ce093700_isFlag((*_self_.alloc)._field_s, static_cast<jule::I32>(1LL)))) && _1ce055d22_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_93363_kind))))._field_KeyB.alloc)._field_Ident)))) {
			_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*(*((*(_93363_kind))))._field_KeyB.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_93363_kind))))._field_KeyB.alloc)._field_Ident, &__jule_any_type4)}));
			_1ce094239_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1cded6786_RangeKind> _94713_rang = (*((*(_93347_it))))._field_Kind.cast_ptr<_1cded6786_RangeKind>(&__jule_any_type39);;
	_1ce063b21_makeComptimeRange(_93386_d);
	if ((*((*(_93386_d))))._field_Decl) {
		_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*((*(_94713_rang))._field_Expr))._field_Token, jule::Str::lit("type @ is not supports comptime iterations", 42), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*((*(_93386_d))))._field_Kind.ptr()), &__jule_any_type4)}));
		return;;
	};
	_1ce111ac0_rangeChecker _95413_rc = _1ce111ac0_rangeChecker{._field_sc=_self_, ._field_rang=_94713_rang, ._field_Kind=(*(_93363_kind)), ._field_d=(*(_93386_d))};;
	jule::Bool _9609_ok = _1ce113ad3_check(&_95413_rc);;
	if ((!(_9609_ok))) {
		return;;
	};
	jule::Ptr<_1ce022c78_comptimeRange> _96513_comptime = _1ce1536c2_comptimeRange((*((*(_93386_d))))._field_Kind);;
	_1ce022a58_comptimeRangeKind_mptr_data[((*(_96513_comptime))._field_kind).type_offset]._1ce022250_ready((*(_96513_comptime))._field_kind, &((*((*(_93363_kind))))._field_KeyA), &((*((*(_93363_kind))))._field_KeyB));
	jule::I32 _96713_i = 0LL;;
	jule::I32 _9689_errors = (*(*_self_.alloc)._field_s.alloc)._field_errors.len();;
	for (; (_96713_i < _1ce022a58_comptimeRangeKind_mptr_data[((*_96513_comptime.alloc)._field_kind).type_offset]._1ce022904_len((*_96513_comptime.alloc)._field_kind)); (_96713_i)++) {
		{
			jule::Ptr<_1ce051acb_scopeChecker> _97017_ssc = _1ce06356b_newChildChecker(_self_);;
			jule::Ptr<_1ce0497c7_Scope> _97117_scope = _1ce0568c2_getChild(_self_);;
			if (((*((*(_93363_kind))))._field_KeyA != nullptr)) {
				(*(*((*(_93363_kind))))._field_KeyA.alloc)._field_Scope=_97117_scope;
				(*((*(_97017_ssc))._field_table))._field_Vars=jule::append((*(*_97017_ssc.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1ce0b4105_Var>>::make({(*((*(_93363_kind))))._field_KeyA}));
			};
			if (((*((*(_93363_kind))))._field_KeyB != nullptr)) {
				(*(*((*(_93363_kind))))._field_KeyB.alloc)._field_Scope=_97117_scope;
				(*(*_97017_ssc.alloc)._field_table.alloc)._field_Vars=jule::append((*(*_97017_ssc.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1ce0b4105_Var>>::make({(*((*(_93363_kind))))._field_KeyB}));
			};
			_1ce022a58_comptimeRangeKind_mptr_data[((*_96513_comptime.alloc)._field_kind).type_offset]._1ce02266d_step((*_96513_comptime.alloc)._field_kind, _96713_i, &((*((*(_93363_kind))))._field_KeyA), &((*((*(_93363_kind))))._field_KeyB));
			_1ce056ce0_checkChildSsc(_self_, &((*((*(_93347_it))))._field_Scope), &(_97117_scope), &(_97017_ssc));
			if ((_9689_errors != (*(*_self_.alloc)._field_s.alloc)._field_errors.len())) {
				goto _iter_end_1b80046aa;
			};
			(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_97117_scope, &__jule_any_type22)}));
		}
	_iter_next_1b80046aa:;
	}
	_iter_end_1b80046aa:;;
}



inline void _1ce05a3ed_checkRangeIter(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1cded5554_Iter>* _99039_it) {
	jule::Ptr<_1cded6786_RangeKind> _99113_rang = (*((*(_99039_it))))._field_Kind.cast_ptr<_1cded6786_RangeKind>(&__jule_any_type39);;
	jule::Ptr<_1ce11bc0c_Data> _99313_d = _1ce13b853_evalExpr1(_1ce09b373_eval((*(_self_))._field_s, jule::Trait<_1ce16c7b8_Lookup>(_self_, 0)), (*(_99113_rang))._field_Expr);;
	if ((_99313_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1ce04b60e_RangeIter> _99813_kind = jule::new_ptr<_1ce04b60e_RangeIter>(_1ce04b60e_RangeIter{._field_Expr=_99313_d, });;
	if ((*((*(_99039_it))))._field_Comptime) {
		_1ce05a145_checkComptimeRangeIter(_self_, _99039_it, &(_99813_kind), &(_99313_d));
		return;;
	};
	if (_1ce1523d5_comptime((*(_99313_d))._field_Kind.ptr())) {
		_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*((*_99113_rang.alloc)._field_Expr))._field_Token, jule::Str::lit("comptime expressions cannot be iterated at runtime", 50), jule::Slice<jule::Any>());
		_1ce094239_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("declarate comptime iteration like: const for ...", 48), jule::Slice<jule::Any>());
		return;;
	};
	_1ce111ac0_rangeChecker _101213_rc = _1ce111ac0_rangeChecker{._field_sc=_self_, ._field_rang=_99113_rang, ._field_Kind=_99813_kind, ._field_d=_99313_d};;
	jule::Bool _10189_ok = _1ce113ad3_check(&_101213_rc);;
	if ((!(_10189_ok))) {
		return;;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_99813_kind, &__jule_any_type40)}));
	jule::Ptr<_1ce051acb_scopeChecker> _102513_ssc = _1ce06356b_newChildChecker(_self_);;
	jule::Ptr<_1ce0497c7_Scope> _102613_scope = _1ce0568c2_getChild(_self_);;
	if (((*(_99813_kind))._field_KeyA != nullptr)) {
		if (((!(_1ce093700_isFlag((*_self_.alloc)._field_s, static_cast<jule::I32>(1LL)))) && _1ce055d22_isDuplicatedIdent(_self_, 0LLU, &((*(*_99813_kind.alloc)._field_KeyA.alloc)._field_Ident)))) {
			_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*(*_99813_kind.alloc)._field_KeyA.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*_99813_kind.alloc)._field_KeyA.alloc)._field_Ident, &__jule_any_type4)}));
			_1ce094239_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*(*_99813_kind.alloc)._field_KeyA.alloc)._field_Scope=_102613_scope;
		(*((*(_102513_ssc))._field_table))._field_Vars=jule::append((*(*_102513_ssc.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1ce0b4105_Var>>::make({(*_99813_kind.alloc)._field_KeyA}));
	};
	if (((*_99813_kind.alloc)._field_KeyB != nullptr)) {
		if (((!(_1ce093700_isFlag((*_self_.alloc)._field_s, static_cast<jule::I32>(1LL)))) && _1ce055d22_isDuplicatedIdent(_self_, 0LLU, &((*(*_99813_kind.alloc)._field_KeyB.alloc)._field_Ident)))) {
			_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*(*_99813_kind.alloc)._field_KeyB.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*_99813_kind.alloc)._field_KeyB.alloc)._field_Ident, &__jule_any_type4)}));
			_1ce094239_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*(*_99813_kind.alloc)._field_KeyB.alloc)._field_Scope=_102613_scope;
		(*(*_102513_ssc.alloc)._field_table.alloc)._field_Vars=jule::append((*(*_102513_ssc.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1ce0b4105_Var>>::make({(*_99813_kind.alloc)._field_KeyB}));
	};
	_1ce058d14_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(_99813_kind), (*((*(_99039_it))))._field_Scope, &(_102613_scope), _102513_ssc);
	(*_99813_kind.alloc)._field_Scope=_102613_scope;
}



inline void _1ce05a6a6_checkIter(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1cded5554_Iter> _105033_it) {
	if (_1cded58b7_IsInf(_105033_it.ptr())) {
		if ((*_105033_it.alloc)._field_Comptime) {
			_1ce093dc6_pushErr((*(_self_))._field_s.ptr(), (*_105033_it.alloc)._field_Token, jule::Str::lit("comptime iterations can only be range iteration", 47), jule::Slice<jule::Any>());
			return;;
		};
		_1ce05996e_checkInfIter(_self_, &(_105033_it));
		return;;
	};
	{
		auto &_match_expr{ (*(_105033_it))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1b801db69:;
			{
				if ((*_105033_it.alloc)._field_Comptime) {
					_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*_105033_it.alloc)._field_Token, jule::Str::lit("comptime iterations can only be range iteration", 47), jule::Slice<jule::Any>());
					return;;
				};
				_1ce059c27_checkWhileIter(_self_, &(_105033_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1b801c3b5:;
			{
				_1ce05a3ed_checkRangeIter(_self_, &(_105033_it));
			}
		}
		else {
			_case_begin_1b801d66e:;
			{
				jule::outln(jule::Str::lit("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1b801d619:;
	};
}



inline jule::Bool _1ce05a9e7_checkValidContLabel(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Uintptr _107439_it) {
	jule::Ptr<_1ce051acb_scopeChecker> _107513_scope = _self_;;
	_julec_label_1b8020b5a:;
	if (((*(_107513_scope))._field_it == _107439_it)) {
		return true;;
	};
	if (((*_107513_scope.alloc)._field_parent != nullptr)) {
		_107513_scope=(*_107513_scope.alloc)._field_parent;
		goto _julec_label_1b8020b5a;
	};
	return false;;
}



inline jule::Bool _1ce05ad38_checkValidBreakLabel(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Uintptr _109040_ptr) {
	jule::Ptr<_1ce051acb_scopeChecker> _109113_scope = _self_;;
	_julec_label_1b8022bd4:;
	if (((*(_109113_scope))._field_it == _109040_ptr)) {
		return true;;
	};
	if (((*_109113_scope.alloc)._field_cse != 0LLU)) {
		jule::Uintptr _109913_mtch = static_cast<jule::Uintptr>((*(((_1ce04e436_Case*)((*_109113_scope.alloc)._field_cse))))._field_Owner);;
		if ((_109913_mtch == _109040_ptr)) {
			return true;;
		};
	};
	if (((*_109113_scope.alloc)._field_parent != nullptr)) {
		_109113_scope=(*_109113_scope.alloc)._field_parent;
		goto _julec_label_1b8022bd4;
	};
	return false;;
}



inline jule::Ptr<_1ce04b994_ContSt> _1ce05b179_checkContValidScope(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1cded7039_ContSt> _111339_c) {
	if (_1ce054936_isDeferred(_self_)) {
		_1ce093dc6_pushErr((*_self_.alloc)._field_s.ptr(), (*(_111339_c))._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*_111339_c.alloc)._field_Label != nullptr)) {
		return jule::new_ptr<_1ce04b994_ContSt>();;
	};
	jule::Ptr<_1ce051acb_scopeChecker> _112313_scope = _self_;;
	_julec_label_1b8025b1b:;
	{
		
		if (((((*_112313_scope.alloc)._field_it == 0LLU) && ((*_112313_scope.alloc)._field_parent != nullptr)) && ((*_112313_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1b802790e:;
			{
				_112313_scope=(*_112313_scope.alloc)._field_parent;
				goto _julec_label_1b8025b1b;
			}
		}
		else if (((*_112313_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1b8027997:;
			{
				return jule::new_ptr<_1ce04b994_ContSt>(_1ce04b994_ContSt{._field_It=(*_112313_scope.alloc)._field_it});;
			}
		}
		_match_end_1b8027876:;
	};
	_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*_111339_c.alloc)._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1ce05b432_checkCont(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1cded7039_ContSt> _113729_c) {
	jule::Ptr<_1ce04b994_ContSt> _113813_cont = _1ce05b179_checkContValidScope(_self_, _113729_c);;
	if ((_113813_cont == nullptr)) {
		return;;
	};
	if (((*(_113729_c))._field_Label != nullptr)) {
		jule::Ptr<_1ce050635_scopeLabel> _114417_label = _1ce046ce1_findLabelParent(&((*(*_113729_c.alloc)._field_Label.alloc)._field_Kind), (*_self_.alloc)._field_parent);;
		if ((_114417_label == nullptr)) {
			_1ce093dc6_pushErr((*_self_.alloc)._field_s.ptr(), (*_113729_c.alloc)._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*(*_113729_c.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
			return;;
		};
		(*(_114417_label))._field_used=true;
		if ((((*(_114417_label))._field_pos + 1LL) >= (*((*((*(_114417_label))._field_scope))._field_scope))._field_Stmts.len())) {
			_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*_113729_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_113729_c.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
			return;;
		};
		jule::I32 _115713_i = ((*(_114417_label))._field_pos + 1LL);;
		if ((_115713_i >= (*(*(*(_114417_label))._field_scope.alloc)._field_scope.alloc)._field_Stmts.len())) {
			_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*_113729_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>());
		} else {
			jule::Any _116121_st = (*(*(*(_114417_label))._field_scope.alloc)._field_scope.alloc)._field_Stmts[_115713_i];;
			{
				auto &_match_expr{ _116121_st };
				
				if (_match_expr.type == &__jule_any_type36) {
					_case_begin_1b8033200:;
					{
						(*(_113813_cont))._field_It=static_cast<jule::Uintptr>(_116121_st.unsafe_cast_ptr<_1ce04a70c_InfIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type40) {
					_case_begin_1b80333dc:;
					{
						(*(_113813_cont))._field_It=static_cast<jule::Uintptr>(_116121_st.unsafe_cast_ptr<_1ce04b60e_RangeIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type38) {
					_case_begin_1b8033453:;
					{
						(*(_113813_cont))._field_It=static_cast<jule::Uintptr>(_116121_st.unsafe_cast_ptr<_1ce04abb3_WhileIter>());
					}
				}
				else {
					_case_begin_1b8033376:;
					{
						_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*_113729_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_113729_c.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
					}
				}
				_match_end_1b8033321:;
			};
		};
	};
	if (((*(_113813_cont))._field_It != 0LLU)) {
		if ((!(_1ce05a9e7_checkValidContLabel(_self_, (*(_113813_cont))._field_It)))) {
			_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*_113729_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_113729_c.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		};
	};
	(*(*_self_.alloc)._field_scope.alloc)._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_113813_cont, &__jule_any_type41)}));
}



inline void _1ce05b6da_checkLabel(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1cdece174_LabelSt> _118434_l) {
	if ((_1ce055294_findLabel(_self_.ptr(), &((*(_118434_l))._field_Ident)) != nullptr)) {
		_1ce093dc6_pushErr((*_self_.alloc)._field_s.ptr(), (*_118434_l.alloc)._field_Token, jule::Str::lit("label is already exist in this identifier: @", 44), jule::Slice<jule::Any>::make({jule::Any((*_118434_l.alloc)._field_Ident, &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1ce04c16a_Label> _119013_label = jule::new_ptr<_1ce04c16a_Label>(_1ce04c16a_Label{._field_Ident=(*_118434_l.alloc)._field_Ident});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_119013_label, &__jule_any_type21)}));
	(*((*_self_.alloc)._field_labels))=jule::append((*(*_self_.alloc)._field_labels.alloc),jule::Slice<jule::Ptr<_1ce050635_scopeLabel>>::make({jule::new_ptr<_1ce050635_scopeLabel>(_1ce050635_scopeLabel{._field_token=(*_118434_l.alloc)._field_Token, ._field_label=_119013_label, ._field_pos=((*(*_self_.alloc)._field_scope.alloc)._field_Stmts.len() - 1LL), ._field_scope=_self_, })}));
}



inline void _1ce05b993_pushGoto(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1cdece54d_GotoSt> _120332_gt) {
	jule::Ptr<_1ce04c544_GotoSt> _120413_st = jule::new_ptr<_1ce04c544_GotoSt>(_1ce04c544_GotoSt{._field_Ident=(*((*(_120332_gt))._field_Label))._field_Kind, });;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_120413_st, &__jule_any_type42)}));
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*_self_.alloc)._field_gotos.alloc),jule::Slice<jule::Ptr<_1ce050bb8_scopeGoto>>::make({jule::new_ptr<_1ce050bb8_scopeGoto>(_1ce050bb8_scopeGoto{._field_st=_120413_st, ._field_gt=_120332_gt, ._field_scope=_self_, ._field_pos=((*(*_self_.alloc)._field_scope.alloc)._field_Stmts.len() - 1LL)})}));
}



inline void _1ce05bc4b_checkPostfix(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1cded053d_AssignSt> _121736_a) {
	if (((*(_121736_a))._field_Left.len() > 1LL)) {
		_1ce093dc6_pushErr((*(_self_))._field_s.ptr(), (*_121736_a.alloc)._field_Setter, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1cdec5dc4_Expr> _122313_expr = (*((*_121736_a.alloc)._field_Left[0LL]))._field_Expr;;
	jule::Ptr<_1ce11bc0c_Data> _122413_d = _1ce13bb94_evalExpr(_1ce09b373_eval((*_self_.alloc)._field_s, jule::Trait<_1ce16c7b8_Lookup>(_self_, 0)), _122313_expr);;
	if ((_122413_d == nullptr)) {
		return;;
	};
	_1ce048991_checkAssign(&((*_self_.alloc)._field_s), &(_122413_d), nullptr, (*_121736_a.alloc)._field_Setter);
	if ((_1ce150845_Ptr((*(_122413_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ce15ca94_Ptr> _123217_ptr = _1ce150845_Ptr((*(_122413_d))._field_Kind);;
		if (_1ce15d5cd_IsUnsafe(_123217_ptr.ptr())) {
			_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*_121736_a.alloc)._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*_121736_a.alloc)._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1ce14d090_Str((*(_122413_d))._field_Kind), &__jule_any_type4)}));
			return;;
		};
	} else {
		if (((_1ce150328_Prim((*(_122413_d))._field_Kind.ptr()) == nullptr) || (!(_22be15ac9_IsNum((*(_1ce150328_Prim((*(_122413_d))._field_Kind)))._field_Kind))))) {
			_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*_121736_a.alloc)._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*_121736_a.alloc)._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1ce14d090_Str((*(_122413_d))._field_Kind), &__jule_any_type4)}));
			return;;
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(jule::new_ptr<_1ce04c91d_Postfix>(_1ce04c91d_Postfix{._field_Expr=(*(_122413_d))._field_Model, ._field_Op=(*((*_121736_a.alloc)._field_Setter))._field_Kind}), &__jule_any_type43)}));
}



inline jule::Bool _1ce05c08c_isNewAssignIdent(_1ce051acb_scopeChecker* _self_, jule::Str _125035_ident) {
	if ((_1cdeadd9b_IsIgnoreIdent(_125035_ident) || (_125035_ident).empty())) {
		return false;;
	};
	return (_1ce11990d_defByIdent((*(_self_))._field_table.ptr(), &(_125035_ident), false) == nullptr);;
}



inline void _1ce05c345_removeInteriorMutRisk(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1ce11bc0c_Data>* _126346_d) {
	jule::Ptr<_1cdee571d_StructIns> _12649_s = _1ce15189b_Struct((*((*(_126346_d))))._field_Kind.ptr());;
	if ((_12649_s == nullptr)) {
		return;;
	};
	jule::Ptr<_1ce051acb_scopeChecker> _12689_root = _1ce054e53_getHardRoot(_self_);;
	if (((*((*(_12689_root))._field_owner))._field_Owner != _12649_s)) {
		return;;
	};
	(*((*(_126346_d))))._field_Mutable=true;
}



inline jule::Bool _1ce05c7eb_checkStructureAssignOp(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1cdee571d_StructIns>* _127747_s, jule::Ptr<_1cded053d_AssignSt>* _127767_a, jule::Ptr<_1ce11bc0c_Data>* _127786_r) {
	jule::Ptr<_1ce00a832_FnIns> _128017_overload = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_127767_a))))._field_Setter))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(40LLU)) {
			_case_begin_1b7d9e0b0:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(41LLU)) {
			_case_begin_1b7d9dc91:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_1b7d9dd07:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(42LLU)) {
			_case_begin_1b7d9dd6d:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1b7d9ddd4:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(45LLU)) {
			_case_begin_1b7d9de4a:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(46LLU)) {
			_case_begin_1b7d9deb1:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(49LLU)) {
			_case_begin_1b7da0622:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(48LLU)) {
			_case_begin_1b7da0688:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(47LLU)) {
			_case_begin_1b7da06ee:;
			{
				_128017_overload=(*((*(_127747_s))))._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1b7d9d6b9:;
			{
				_1ce093dc6_pushErr((*(_self_))._field_s.ptr(), (*((*(_127767_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_127767_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1cdee5a92_Str((*(_127747_s)).ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_1b7d9dc2a:;
	};
	if ((_128017_overload == nullptr)) {
		_1ce093dc6_pushErr((*(_self_))._field_s.ptr(), (*((*(_127767_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_127767_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1cdee5a92_Str((*(_127747_s)).ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_1ce009886_ParamIns> _131213_p = (*(_128017_overload))._field_Params[1LL];;
	return _1ce09b8d4_checkAssignType((*_self_.alloc)._field_s, (*((*(_131213_p))._field_Decl))._field_Reference, &((*_131213_p.alloc)._field_Kind), _127786_r, (*((*(_127767_a))))._field_Setter);;
}



inline void _1ce05caa4_checkSingleAssign(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1cded053d_AssignSt>* _131642_a) {
	jule::Ptr<_1ce11bc0c_Data> _131717_l = nullptr;;
	if ((!(_1cdeadd9b_IsIgnoreIdent((*((*((*(_131642_a))))._field_Left[0LL]))._field_Ident)))) {
		jule::Ptr<_1cdec5dc4_Expr> _132017_expr = (*((*((*(_131642_a))))._field_Left[0LL]))._field_Expr;;
		_131717_l=_1ce13bb94_evalExpr(_1ce09b373_eval((*(_self_))._field_s, jule::Trait<_1ce16c7b8_Lookup>(_self_, 0)), _132017_expr);
		if ((_131717_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1ce11d934_Eval> _132717_eval = nullptr;;
	if ((_131717_l != nullptr)) {
		_132717_eval=_1ce09b032_evalp((*_self_.alloc)._field_s, jule::Trait<_1ce16c7b8_Lookup>(_self_, 0), (*(_131717_l))._field_Kind);
	} else {
		_132717_eval=_1ce09b373_eval((*_self_.alloc)._field_s, jule::Trait<_1ce16c7b8_Lookup>(_self_, 0));
	};
	(*(_132717_eval))._field_unsafety=_1ce053e85_isUnsafe(_self_);
	jule::Ptr<_1ce11bc0c_Data> _133413_r = _1ce13bb94_evalExpr(_132717_eval, (*((*(_131642_a))))._field_Right);;
	if ((_133413_r == nullptr)) {
		return;;
	};
	_1ce05c345_removeInteriorMutRisk(_self_, &(_133413_r));
	if ((_131717_l == nullptr)) {
		if (_1ce14e03b_Void((*(_133413_r))._field_Kind.ptr())) {
			_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*((*((*(_131642_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_133413_r, &__jule_any_type24)}));
		return;;
	};
	if ((!(_1ce048991_checkAssign(&((*_self_.alloc)._field_s), &(_131717_l), _133413_r, (*((*(_131642_a))))._field_Setter)))) {
		return;;
	};
	if ((_1ce15214e_Tup((*(_133413_r))._field_Kind) != nullptr)) {
		_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*((*(_131642_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1cdee96bc_OperandExprModel> _135813_lm = jule::new_ptr<_1cdee96bc_OperandExprModel>(_1cdee96bc_OperandExprModel{._field_Kind=(*(_131717_l))._field_Kind, ._field_Model=(*(_131717_l))._field_Model});;
	jule::Ptr<_1cdee96bc_OperandExprModel> _136213_rm = jule::new_ptr<_1cdee96bc_OperandExprModel>(_1cdee96bc_OperandExprModel{._field_Kind=(*(_133413_r))._field_Kind, ._field_Model=(*(_133413_r))._field_Model});;
	(*(*_self_.alloc)._field_scope.alloc)._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(jule::new_ptr<_1ce04cdc4_Assign>(_1ce04cdc4_Assign{._field_L=_135813_lm, ._field_R=_136213_rm, ._field_Op=(*((*(_131642_a))))._field_Setter}), &__jule_any_type44)}));
	if (((*((*((*(_131642_a))))._field_Setter))._field_Id == static_cast<jule::U32>(71LLU))) {
		_1ce105674_assignTypeChecker _136917_checker = _1ce105674_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*(_131717_l))._field_Kind, ._field_d=_133413_r, ._field_errorToken=(*((*(_131642_a))))._field_Setter};;
		if (_1ce106642_check(&_136917_checker)) {
			(*(_136213_rm))._field_Model=(*(_133413_r))._field_Model;
			(*(_135813_lm))._field_Model=(*(_131717_l))._field_Model;
		};
		return;;
	};
	jule::Ptr<_1cdee571d_StructIns> _138113_strct = _1ce15189b_Struct((*(_131717_l))._field_Kind);;
	if ((_138113_strct != nullptr)) {
		_1ce05c7eb_checkStructureAssignOp(_self_, &(_138113_strct), _131642_a, &(_133413_r));
		return;;
	};
	jule::U32 _13869_id = (*(*((*(_131642_a))))._field_Setter.alloc)._field_Id;;
	(*(*((*(_131642_a))))._field_Setter.alloc)._field_Id=_1ce0638e0_removeEqFromOp((*(*((*(_131642_a))))._field_Setter.alloc)._field_Id);
	_1ce13e0e7_binaryEval _138813_solver = static__1ce13ea21_new(_132717_eval, (*((*(_131642_a))))._field_Setter);;
	({
		jule::Ptr<_1ce11bc0c_Data> ___jule_assign_arg = _131717_l;
		jule::Ptr<_1ce11bc0c_Data> _1___jule_assign_arg = _133413_r;
		_138813_solver._field_l = ___jule_assign_arg;
		_138813_solver._field_r = _1___jule_assign_arg;
	});
	_1ce143b68_evalOp(&_138813_solver);
	(*(*((*(_131642_a))))._field_Setter.alloc)._field_Id=_13869_id;
}



inline void _1ce05d137_processEndPartOfMultiAssign(_1ce051acb_scopeChecker* _self_, jule::Ptr<_1ce04d29d_MultiAssign>* _139451_st, jule::Ptr<_1cded053d_AssignSt>* _139514_a, jule::Ptr<_1cdeceeaa_AssignLeft>* _139533_lexpr, jule::Ptr<_1ce11bc0c_Data>* _139558_l, jule::Ptr<_1ce11bc0c_Data>* _139573_r) {
	if (((!((*((*(_139533_lexpr))))._field_Reference)) && _1cdeadd9b_IsIgnoreIdent((*((*(_139533_lexpr))))._field_Ident))) {
		if (_1ce14e03b_Void((*((*(_139573_r))))._field_Kind.ptr())) {
			_1ce093dc6_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_139514_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_1ce11bc0c_Data>> &__jule_push_dest = (*((*(_139451_st))))._field_L; __jule_push_dest.push(nullptr); };
		return;;
	};
	if (((*((*(_139514_a))))._field_Declarative && ((*((*(_139533_lexpr))))._field_Reference || _1ce05c08c_isNewAssignIdent(_self_, (*((*(_139533_lexpr))))._field_Ident)))) {
		if (_1ce055d22_isDuplicatedIdent(_self_, 0LLU, &((*((*(_139533_lexpr))))._field_Ident))) {
			_1ce093dc6_pushErr((*(_self_))._field_s, (*((*(_139533_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_139533_lexpr))))._field_Ident, &__jule_any_type4)}));
			_1ce094239_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
			_1ce054419_stop(_self_);
			return;;
		};
		if (_1cdeadd9b_IsIgnoreIdent((*((*(_139533_lexpr))))._field_Ident)) {
			_1ce093dc6_pushErr((*(_self_))._field_s, (*((*(_139533_lexpr))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1ce0b4105_Var> _141617_v = jule::new_ptr<_1ce0b4105_Var>(_1ce0b4105_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*((*(_139533_lexpr))))._field_Token, ._field_Ident=(*((*(_139533_lexpr))))._field_Ident, ._field_Mutable=(*((*(_139533_lexpr))))._field_Mutable, ._field_Reference=(*((*(_139533_lexpr))))._field_Reference, ._field_Value=jule::new_ptr<_1ce11cd84_Value>(_1ce11cd84_Value{._field_Expr=(*((*(_139514_a))))._field_Right, ._field_Data=(*(_139573_r))}), });;
		_1ce0aa87c_checkVarValue((*(_self_))._field_s, &(_141617_v));
		{ jule::Slice<jule::Ptr<_1ce11bc0c_Data>> &__jule_push_dest = (*((*(_139451_st))))._field_L; __jule_push_dest.push(jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=(*((*_141617_v.alloc)._field_Kind))._field_Kind, ._field_Mutable=(*_141617_v.alloc)._field_Mutable, ._field_Reference=(*_141617_v.alloc)._field_Reference, ._field_Lvalue=(!((*(_141617_v))._field_Constant)), ._field_Model=jule::Any(_141617_v, &__jule_any_type8), })); };
		(*((*(_self_))._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1ce0b4105_Var>>::make({_141617_v}));
		(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_141617_v, &__jule_any_type8)}));
		return;;
	};
	if (((*((*(_139533_lexpr))))._field_Mutable || (*((*(_139533_lexpr))))._field_Reference)) {
		_1ce093dc6_pushErr((*(_self_))._field_s, (*((*(_139533_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_139533_lexpr))))._field_Ident, &__jule_any_type4)}));
		_1ce094239_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if ((!(_1ce048991_checkAssign(&((*(_self_))._field_s), _139558_l, (*(_139573_r)), (*((*(_139533_lexpr))))._field_Token)))) {
		return;;
	};
	;
	_1ce0a0c6d_checkValidityForInitExpr((*(_self_))._field_s, (*((*(_139558_l))))._field_Mutable, false, &((*((*(_139558_l))))._field_Kind), _139573_r, &((*((*(_139514_a))))._field_Setter));
	_1ce105674_assignTypeChecker _145413_checker = _1ce105674_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*((*(_139558_l))))._field_Kind, ._field_d=(*(_139573_r)), ._field_errorToken=(*((*(_139514_a))))._field_Setter};;
	_1ce106642_check(&_145413_checker);
	{ jule::Slice<jule::Ptr<_1ce11bc0c_Data>> &__jule_push_dest = (*((*(_139451_st))))._field_L; __jule_push_dest.push((*(_139558_l))); };
}



inline void _1ce05d3e0_checkMultiAssign(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1cded053d_AssignSt>* _146441_a) {
	jule::Ptr<_1ce11bc0c_Data> _146513_rd = _1ce13bb94_evalExpr(_1ce09b373_eval((*(_self_))._field_s, jule::Trait<_1ce16c7b8_Lookup>(_self_, 0)), (*((*(_146441_a))))._field_Right);;
	if ((_146513_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1ce11bc0c_Data>> _146913_right = _1ce047b6b_getDatasFromTupleData(&(_146513_rd));;
	if ((_146913_right.len() == 1LL)) {
		{
			auto &_match_expr{ (*(_146913_right[0LL]))._field_Model };
			
			if (_match_expr.type == &__jule_any_type45) {
				_case_begin_1b7dcc0aa:;
				{
					jule::Ptr<_1cdeec527_IndexingExprModel> _147321_iem = (*(_146913_right[0LL]))._field_Model.unsafe_cast_ptr<_1cdeec527_IndexingExprModel>();;
					if ((_1ce151db8_Map((*((*(_147321_iem))._field_Expr))._field_Kind.ptr()) != nullptr)) {
						_146913_right=jule::Slice<jule::Ptr<_1ce11bc0c_Data>>::make({jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=(*(_1ce151db8_Map((*(*_147321_iem.alloc)._field_Expr.alloc)._field_Kind)))._field_Val, }),jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce235694_primBool, })});
					};
				}
			}
			_match_end_1b7dcc011:;
		};
	};
	{
		
		if (((*((*(_146441_a))))._field_Left.len() > _146913_right.len())) {
			_case_begin_1b7dcc61b:;
			{
				_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*((*(_146441_a))))._field_Setter, jule::Str::lit("overflow multi assignment identifers", 36), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*((*(_146441_a))))._field_Left.len() < _146913_right.len())) {
			_case_begin_1b7dcb807:;
			{
				_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*((*(_146441_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1b7dcc165:;
	};
	jule::Ptr<_1ce04d29d_MultiAssign> _149213_st = jule::new_ptr<_1ce04d29d_MultiAssign>(_1ce04d29d_MultiAssign{._field_R=(*(_146513_rd))._field_Model});;
	{
		auto expr = &((*((*(_146441_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7dd20c1:;
		if (it != expr_end) {
			jule::I32 _149513_i = it - expr->begin();
			{
				jule::Ptr<_1cdeceeaa_AssignLeft> _149617_lexpr = (*((*(_146441_a))))._field_Left[_149513_i];;
				jule::Ptr<_1ce11bc0c_Data> _149721_l = nullptr;;
				if (((!(_1cdeadd9b_IsIgnoreIdent((*(_149617_lexpr))._field_Ident))) && ((!((*((*(_146441_a))))._field_Declarative)) || (!(_1ce05c08c_isNewAssignIdent(_self_, (*_149617_lexpr.alloc)._field_Ident)))))) {
					_149721_l=_1ce13bb94_evalExpr(_1ce09b373_eval((*_self_.alloc)._field_s, jule::Trait<_1ce16c7b8_Lookup>(_self_, 0)), (*_149617_lexpr.alloc)._field_Expr);
					if ((_149721_l == nullptr)) {
						goto _iter_next_1b7dd20c1;
					};
				};
				jule::Ptr<_1ce11bc0c_Data> _150517_r = _146913_right[_149513_i];;
				_1ce05c345_removeInteriorMutRisk(_self_, &(_150517_r));
				_1ce05d137_processEndPartOfMultiAssign(_self_, &(_149213_st), _146441_a, &(_149617_lexpr), &(_149721_l), &(_150517_r));
			}
			_iter_next_1b7dd20c1:;
			++it;
			_149513_i++;
			goto _iter_begin_1b7dd20c1;
		}
		_iter_end_1b7dd20c1:;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_149213_st, &__jule_any_type46)}));
}



inline void _1ce05d698_checkAssignSt(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1cded053d_AssignSt> _151237_a) {
	{
		
		if (_1cdeb1046_IsPostfixOp((*((*(_151237_a))._field_Setter))._field_Id)) {
			_case_begin_1b7dd7318:;
			{
				_1ce05bc4b_checkPostfix(_self_, _151237_a);
			}
		}
		else if (((*(_151237_a))._field_Left.len() == 1LL)) {
			_case_begin_1b7dd6ed8:;
			{
				_1ce05caa4_checkSingleAssign(_self_, &(_151237_a));
			}
		}
		else {
			_case_begin_1b7dd6e72:;
			{
				_1ce05d3e0_checkMultiAssign(_self_, &(_151237_a));
			}
		}
		_match_end_1b7dd6d73:;
	};
}



inline jule::Ptr<_1ce0497c7_Scope> _1ce05da94_checkCaseScope(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1ce04e436_Case>* _152335_c, jule::Ptr<_1cded1ab1_ScopeTree>* _152350_tree) {
	jule::Ptr<_1ce051acb_scopeChecker> _152413_ssc = _1ce06356b_newChildChecker(_self_);;
	(*(_152413_ssc))._field_cse=static_cast<jule::Uintptr>((*(_152335_c)));
	return _1ce0571db_checkChildSc(_self_, _152350_tree, &(_152413_ssc));;
}



inline jule::Ptr<_1ce04e436_Case> _1ce05e105_checkCase(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1ce04d90d_Match> _152933_m, jule::I32 _152944_i, jule::Ptr<_1cded8a63_Case> _152956_c, jule::Ptr<_1ce11bc0c_Data> _152975_expr) {
	jule::Ptr<_1ce04e436_Case> _153013_case = (*(_152933_m))._field_Cases[_152944_i];;
	(*(_153013_case))._field_Exprs=jule::Slice<jule::Ptr<_1ce11bc0c_Data>>::alloc(0LL, (*(_152956_c))._field_Exprs.len());
	jule::Bool _153213_constMatched = false;;
	jule::Ptr<_1ce11d934_Eval> _153313_eval = _1ce09b373_eval((*(_self_))._field_s, jule::Trait<_1ce16c7b8_Lookup>(_self_, 0));;
	{
		auto expr = &((*_152956_c.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7ddcab0:;
		if (it != expr_end) {
			jule::Ptr<_1cdec5dc4_Expr> _153421_e = *it;
			{
				jule::Ptr<_1ce11bc0c_Data> _153517_d = _1ce13ad80_evalExprKind(_153313_eval, (*(_153421_e))._field_Kind);;
				if ((_153517_d == nullptr)) {
					goto _iter_next_1b7ddcab0;
				};
				if ((*_152933_m.alloc)._field_TypeMatch) {
					(*_153013_case.alloc)._field_Exprs=jule::append((*_153013_case.alloc)._field_Exprs,jule::Slice<jule::Ptr<_1ce11bc0c_Data>>::make({_153517_d}));
					if ((_1ce0478a2_countMatchType(&(_152933_m), &((*(_153517_d))._field_Kind)) > 1LL)) {
						_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*_153421_e.alloc)._field_Token, jule::Str::lit("duplicated pattern: type @ is already matched", 45), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*(_153517_d))._field_Kind.ptr()), &__jule_any_type4)}));
					};
					if ((*_152933_m.alloc)._field_Comptime) {
						_153213_constMatched=(_153213_constMatched || _1ce14d3d1_Equal((*(_152975_expr))._field_Kind, (*(_153517_d))._field_Kind));
					} else {
						if ((_1ce150d62_TypeEnum((*(_152975_expr))._field_Kind) != nullptr)) {
							_1ce09c341_checkTypeCompatibility((*_self_.alloc)._field_s, &((*_152975_expr.alloc)._field_Kind), &((*(_153517_d))._field_Kind), &((*_153421_e.alloc)._field_Token));
						} else {
							jule::Ptr<_1ce01ac0a_Trait> _155425_trt = _1ce151b32_Trait((*(_152975_expr))._field_Kind);;
							if ((_155425_trt != nullptr)) {
								_1ce09c341_checkTypeCompatibility((*_self_.alloc)._field_s, &((*_152975_expr.alloc)._field_Kind), &((*(_153517_d))._field_Kind), &((*_153421_e.alloc)._field_Token));
							};
						};
					};
					goto _iter_next_1b7ddcab0;
				};
				if ((*(_153517_d))._field_Decl) {
					_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*_153421_e.alloc)._field_Token, jule::Str::lit("expecting expression, found type declaration", 44), jule::Slice<jule::Any>());
					_1ce094239_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("you can use type-match if you want to match types", 49), jule::Slice<jule::Any>());
					goto _iter_next_1b7ddcab0;
				};
				if ((*_152933_m.alloc)._field_Comptime) {
					if (((!(_1ce11c614_IsConst(_153517_d.ptr()))) && (_1ce153bde_comptimeTypeInfo((*(_153517_d))._field_Kind) == nullptr))) {
						_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*_153421_e.alloc)._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
						_1ce094239_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
						goto _iter_next_1b7ddcab0;
					};
					if ((!(_153213_constMatched))) {
						if (_1ce11c614_IsConst(_153517_d.ptr())) {
							_153213_constMatched=(_1ce11c614_IsConst(_152975_expr.ptr()) && _22be1bc23_Eq((*(_153517_d))._field_Constant.ptr(), (*(*_152975_expr.alloc)._field_Constant.alloc)));
						} else {
							jule::Ptr<_1ce0325a1_comptimeTypeInfo> _157925_exprCti = _1ce153bde_comptimeTypeInfo((*(_152975_expr))._field_Kind);;
							_153213_constMatched=((_157925_exprCti != nullptr) && _1ce14d3d1_Equal((*(_1ce153bde_comptimeTypeInfo((*(_153517_d))._field_Kind)))._field_base, (*_157925_exprCti.alloc)._field_base));
						};
					};
				};
				(*_153013_case.alloc)._field_Exprs=jule::append((*_153013_case.alloc)._field_Exprs,jule::Slice<jule::Ptr<_1ce11bc0c_Data>>::make({_153517_d}));
				if ((((!((*_152933_m.alloc)._field_Comptime)) || (_1ce153bde_comptimeTypeInfo((*(_152975_expr))._field_Kind) == nullptr)) || (_1ce153bde_comptimeTypeInfo((*(_153517_d))._field_Kind) == nullptr))) {
					_1ce105674_assignTypeChecker _158921_checker = _1ce105674_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*_152975_expr.alloc)._field_Kind, ._field_d=_153517_d, ._field_errorToken=(*_153421_e.alloc)._field_Token};;
					_1ce106642_check(&_158921_checker);
				};
			}
			_iter_next_1b7ddcab0:;
			++it;
			goto _iter_begin_1b7ddcab0;
		}
		_iter_end_1b7ddcab0:;
	};
	if (((!((*_152933_m.alloc)._field_Comptime)) || _153213_constMatched)) {
		(*_153013_case.alloc)._field_Scope=_1ce05da94_checkCaseScope(_self_, &(_153013_case), &((*_152956_c.alloc)._field_Scope));
	};
	return _153013_case;;
}



inline void _1ce05e523_checkCases(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1cded937c_MatchCase>* _160435_m, jule::Ptr<_1ce04d90d_Match> _160454_rm, jule::Ptr<_1ce11bc0c_Data> _160470_expr) {
	(*(_160454_rm))._field_Cases=jule::Slice<jule::Ptr<_1ce04e436_Case>>::alloc(0LL, (*((*(_160435_m))))._field_Cases.len());
	{
		auto expr = &((*((*(_160435_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7e001ee:;
		if (it != expr_end) {
			jule::I32 _160613_i = it - expr->begin();
			{
				jule::Ptr<_1ce04e436_Case> _160717_case = jule::new_ptr<_1ce04e436_Case>(_1ce04e436_Case{._field_Owner=_160454_rm, });;
				if ((_160613_i > 0LL)) {
					(*((*_160454_rm.alloc)._field_Cases[(_160613_i - 1LL)]))._field_Next=_160717_case;
				};
				(*_160454_rm.alloc)._field_Cases=jule::append((*_160454_rm.alloc)._field_Cases,jule::Slice<jule::Ptr<_1ce04e436_Case>>::make({_160717_case}));
			}
			_iter_next_1b7e001ee:;
			++it;
			_160613_i++;
			goto _iter_begin_1b7e001ee;
		}
		_iter_end_1b7e001ee:;
	};
	if ((((*_160454_rm.alloc)._field_Default != nullptr) && ((*((*(_160435_m))))._field_Cases.len() > 0LL))) {
		(*((*_160454_rm.alloc)._field_Cases[((*_160454_rm.alloc)._field_Cases.len() - 1LL)]))._field_Next=(*_160454_rm.alloc)._field_Default;
	};
	{
		auto expr = &((*((*(_160435_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7e037b8:;
		if (it != expr_end) {
			jule::I32 _162014_i = it - expr->begin();
			jule::Ptr<_1cded8a63_Case> _162021_c = *it;
			{
				_1ce05e105_checkCase(_self_, _160454_rm, _162014_i, _162021_c, _160470_expr);
			}
			_iter_next_1b7e037b8:;
			++it;
			_162014_i++;
			goto _iter_begin_1b7e037b8;
		}
		_iter_end_1b7e037b8:;
	};
}



inline jule::Ptr<_1ce04e436_Case> _1ce05e91e_checkDefault(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1ce04d90d_Match> _162536_m, jule::Ptr<_1cded78b9_Else> _162551_d) {
	jule::Ptr<_1ce04e436_Case> _162613_def = jule::new_ptr<_1ce04e436_Case>(_1ce04e436_Case{._field_Owner=_162536_m, });;
	(*(_162613_def))._field_Scope=_1ce05da94_checkCaseScope(_self_, &(_162613_def), &((*(_162551_d))._field_Scope));
	return _162613_def;;
}



inline void _1ce05ec82_checkComptimePanic(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1cdeab4b4_Token> _163342_callToken, jule::Ptr<_1ce0497c7_Scope>* _163362_s) {
	if (((*((*(_163362_s))))._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _16379_stmt = (*((*(_163362_s))))._field_Stmts[0LL];;
	{
		auto &_match_expr{ _16379_stmt };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b7e06ec5:;
			{
				jule::Ptr<_1ce11bc0c_Data> _164013_d = _16379_stmt.unsafe_cast_ptr<_1ce11bc0c_Data>();;
				{
					auto &_match_expr{ (*(_164013_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type29) {
						_case_begin_1b7e07e4e:;
						{
							jule::Ptr<_1ce00130b_BuiltinPanicCallExprModel> _164321_m = (*(_164013_d))._field_Model.unsafe_cast_ptr<_1ce00130b_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ (*(_164321_m))._field_Expr };
								
								if (_match_expr.type == &__jule_any_type19) {
									_case_begin_1b7e0911a:;
									{
										jule::Ptr<_22be1616d_Const> _164621_c = (*(_164321_m))._field_Expr.unsafe_cast_ptr<_22be1616d_Const>();;
										if ((!(_22be1a8e2_IsStr(_164621_c.ptr())))) {
											goto _match_end_1b7e090a4;
										};
										if ((_163342_callToken == nullptr)) {
											jule::Ptr<_1ce051acb_scopeChecker> _165129_root = _1ce054e53_getHardRoot(_self_);;
											if (((*(_165129_root))._field_calledFrom == nullptr)) {
												_163342_callToken=(*(_164321_m))._field_Token;
											} else {
												_163342_callToken=(*(_165129_root))._field_calledFrom;
											};
										};
										_1ce093dc6_pushErr((*_self_.alloc)._field_s.ptr(), _163342_callToken, jule::Str::lit("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_22be182e6_ReadStr(_164621_c), &__jule_any_type4)}));
										_1ce054419_stop(_self_);
									}
								}
								_match_end_1b7e090a4:;
							};
						}
					}
					_match_end_1b7e07dd8:;
				};
			}
		}
		_match_end_1b7e06e70:;
	};
}



inline void _1ce0600e5_processConstMatch(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1ce04d90d_Match>* _166542_tm, jule::Ptr<_1cded937c_MatchCase>* _166559_m) {
	{
		auto expr = &((*((*(_166542_tm))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7e082e5:;
		if (it != expr_end) {
			jule::I32 _166614_i = it - expr->begin();
			jule::Ptr<_1ce04e436_Case> _166621_c = *it;
			{
				if (((*(_166621_c))._field_Scope != nullptr)) {
					jule::Ptr<_1cdeab4b4_Token> _166825_token = nullptr;;
					if (((!((*((*(_166542_tm))))._field_TypeMatch)) && ((*(*_166621_c.alloc)._field_Scope.alloc)._field_Stmts.len() > 0LL))) {
						_166825_token=(*((*((*((*(_166559_m))))._field_Cases[_166614_i]))._field_Scope))._field_Stmts[0LL]._field_Token;
					};
					_1ce05ec82_checkComptimePanic(_self_, _166825_token, &((*_166621_c.alloc)._field_Scope));
					(*((*(_166542_tm))))._field_Default=_166621_c;
					(*((*(_166542_tm))))._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1b7e082e5:;
			++it;
			_166614_i++;
			goto _iter_begin_1b7e082e5;
		}
		_iter_end_1b7e082e5:;
	};
	if (((*((*(_166559_m))))._field_Default != nullptr)) {
		(*((*(_166542_tm))))._field_Cases=nullptr;
		(*((*(_166542_tm))))._field_Default=_1ce05e91e_checkDefault(_self_, (*(_166542_tm)), (*((*(_166559_m))))._field_Default);
		if (((*((*(_166542_tm))))._field_Default != nullptr)) {
			jule::Ptr<_1cdeab4b4_Token> _168225_token = nullptr;;
			if ((!((*((*(_166542_tm))))._field_TypeMatch))) {
				_168225_token=(*((*(*((*(_166559_m))))._field_Default.alloc)._field_Scope))._field_Stmts[0LL]._field_Token;
			};
			_1ce05ec82_checkComptimePanic(_self_, _168225_token, &((*(*((*(_166542_tm))))._field_Default.alloc)._field_Scope));
		};
	} else {
		(*((*(_166542_tm))))._field_Cases=nullptr;
	};
}



inline void _1ce06039d_checkTypeMatch(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1cded937c_MatchCase>* _169439_m) {
	jule::Ptr<_1ce11bc0c_Data> _169513_d = _1ce13b1c1_eval1(_1ce09b373_eval((*(_self_))._field_s, jule::Trait<_1ce16c7b8_Lookup>(_self_, 0)), (*((*(_169439_m))))._field_Expr);;
	if ((_169513_d == nullptr)) {
		return;;
	};
	if ((*((*(_169439_m))))._field_Comptime) {
		jule::Ptr<_1ce0325a1_comptimeTypeInfo> _170117_cti = _1ce153bde_comptimeTypeInfo((*(_169513_d))._field_Kind.ptr());;
		if ((_170117_cti == nullptr)) {
			if ((!((*(_169513_d))._field_Decl))) {
				_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*((*((*(_169439_m))))._field_Expr))._field_Token, jule::Str::lit("comptime type-match expressions can take only type declarations", 63), jule::Slice<jule::Any>());
				return;;
			};
		} else {
			(*(_169513_d))._field_Kind=(*(_170117_cti))._field_base;
		};
	} else if (((*(_169513_d))._field_Decl || (!(((((_1ce150328_Prim((*(_169513_d))._field_Kind.ptr()) != nullptr) && _1ce158ebe_IsAny(_1ce150328_Prim((*(_169513_d))._field_Kind).ptr())) || (_1ce151b32_Trait((*(_169513_d))._field_Kind) != nullptr)) || (_1ce150d62_TypeEnum((*(_169513_d))._field_Kind) != nullptr)))))) {
		_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*((*((*(_169439_m))))._field_Expr))._field_Token, jule::Str::lit("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ce04d90d_Match> _171513_tm = jule::new_ptr<_1ce04d90d_Match>(_1ce04d90d_Match{._field_Expr=_169513_d, ._field_TypeMatch=true, ._field_Comptime=(*((*(_169439_m))))._field_Comptime, });;
	if (((!((*(_171513_tm))._field_Comptime)) && ((*((*(_169439_m))))._field_Default != nullptr))) {
		(*_171513_tm.alloc)._field_Default=_1ce05e91e_checkDefault(_self_, _171513_tm, (*((*(_169439_m))))._field_Default);
	};
	_1ce05e523_checkCases(_self_, _169439_m, _171513_tm, _169513_d);
	if ((*_171513_tm.alloc)._field_Comptime) {
		_1ce0600e5_processConstMatch(_self_, &(_171513_tm), _169439_m);
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_171513_tm, &__jule_any_type47)}));
}



inline void _1ce060656_checkCommonMatch(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1cded937c_MatchCase>* _173641_m) {
	jule::Ptr<_1ce11bc0c_Data> _173717_d = nullptr;;
	if (((*((*(_173641_m))))._field_Expr == nullptr)) {
		_173717_d=jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce235694_primBool, ._field_Constant=static__22be16b41_NewBool(true)});
		(*(_173717_d))._field_Model=jule::Any((*_173717_d.alloc)._field_Constant, &__jule_any_type19);
	} else {
		_173717_d=_1ce13b853_evalExpr1(_1ce09b373_eval((*(_self_))._field_s, jule::Trait<_1ce16c7b8_Lookup>(_self_, 0)), (*((*(_173641_m))))._field_Expr);
		if ((_173717_d == nullptr)) {
			return;;
		};
	};
	if ((*((*(_173641_m))))._field_Comptime) {
		if ((!(_1ce06411b_canComptimeMatch(&(_173717_d))))) {
			_1ce093dc6_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_173641_m))))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			_1ce094239_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
			return;;
		};
	} else if (_1ce1523d5_comptime((*(_173717_d))._field_Kind.ptr())) {
		_1ce093dc6_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_173641_m))))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		_1ce094239_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ce04d90d_Match> _176313_mc = jule::new_ptr<_1ce04d90d_Match>(_1ce04d90d_Match{._field_Expr=_173717_d, ._field_Comptime=(*((*(_173641_m))))._field_Comptime, });;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_176313_mc, &__jule_any_type47)}));
	if (((!((*(_176313_mc))._field_Comptime)) && ((*((*(_173641_m))))._field_Default != nullptr))) {
		(*_176313_mc.alloc)._field_Default=_1ce05e91e_checkDefault(_self_, _176313_mc, (*((*(_173641_m))))._field_Default);
	};
	_1ce05e523_checkCases(_self_, _173641_m, _176313_mc, _173717_d);
	if ((*_176313_mc.alloc)._field_Comptime) {
		_1ce0600e5_processConstMatch(_self_, &(_176313_mc), _173641_m);
	};
}



inline void _1ce06090e_checkMatch(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1cded937c_MatchCase> _178634_m) {
	if ((*(_178634_m))._field_TypeMatch) {
		_1ce06039d_checkTypeMatch(_self_, &(_178634_m));
		return;;
	};
	_1ce060656_checkCommonMatch(_self_, &(_178634_m));
}



inline void _1ce060bb7_checkFall(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1cdece84a_FallSt> _179429_f) {
	if (((((*(_self_))._field_cse == 0LLU) || (((*((*_self_.alloc)._field_scope))._field_Stmts.len() + 1LL) < (*(*_self_.alloc)._field_scope.alloc)._field_Stmts.len())) || _1ce054936_isDeferred(_self_))) {
		_1ce093dc6_pushErr((*_self_.alloc)._field_s.ptr(), (*(_179429_f))._field_Token, jule::Str::lit("fall keyword can only useable at end of the case scopes", 55), jule::Slice<jule::Any>());
		return;;
	};
	_1ce04e436_Case* _180213_case = ((_1ce04e436_Case*)((*_self_.alloc)._field_cse));;
	if ((*((*(_180213_case))._field_Owner))._field_Comptime) {
		_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*_179429_f.alloc)._field_Token, jule::Str::lit("the fall statement is not allowed for comptime-matching", 55), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_180213_case))._field_Next == nullptr)) {
		_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*_179429_f.alloc)._field_Token, jule::Str::lit("fall cannot useable at final case", 33), jule::Slice<jule::Any>());
		_1ce094239_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("remove \"fall\" keyword", 21), jule::Slice<jule::Any>());
		return;;
	};
	(*(*_self_.alloc)._field_scope.alloc)._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(jule::new_ptr<_1ce04eb2e_FallSt>(_1ce04eb2e_FallSt{._field_DestCase=static_cast<jule::Uintptr>((*(_180213_case))._field_Next)}), &__jule_any_type48)}));
}



inline jule::Ptr<_1ce04bd6d_BreakSt> _1ce061008_checkBreakWithLabel(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1cded6b60_BreakSt> _181739_b) {
	jule::Ptr<_1ce04bd6d_BreakSt> _181813_brk = _1ce061349_checkPlainBreak(_self_, _181739_b);;
	if ((_181813_brk == nullptr)) {
		return nullptr;;
	};
	(*(_181813_brk))._field_It=0LLU;
	(*(_181813_brk))._field_Mtch=0LLU;
	jule::Ptr<_1ce050635_scopeLabel> _182813_label = _1ce046ce1_findLabelParent(&((*((*(_181739_b))._field_Label))._field_Kind), (*_self_.alloc)._field_parent);;
	if ((_182813_label == nullptr)) {
		_1ce093dc6_pushErr((*_self_.alloc)._field_s.ptr(), (*_181739_b.alloc)._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*(*_181739_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	(*(_182813_label))._field_used=true;
	if ((((*(_182813_label))._field_pos + 1LL) >= (*((*((*(_182813_label))._field_scope))._field_scope))._field_Stmts.len())) {
		_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*_181739_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_181739_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I32 _18419_i = ((*(_182813_label))._field_pos + 1LL);;
	if ((_18419_i >= (*(*(*(_182813_label))._field_scope.alloc)._field_scope.alloc)._field_Stmts.len())) {
		_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*_181739_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_181739_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
	} else {
		jule::Any _184517_st = (*(*(*(_182813_label))._field_scope.alloc)._field_scope.alloc)._field_Stmts[_18419_i];;
		{
			auto &_match_expr{ _184517_st };
			
			if (_match_expr.type == &__jule_any_type36) {
				_case_begin_1b7e38336:;
				{
					(*(_181813_brk))._field_It=static_cast<jule::Uintptr>(_184517_st.unsafe_cast_ptr<_1ce04a70c_InfIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type40) {
				_case_begin_1b7e38523:;
				{
					(*(_181813_brk))._field_It=static_cast<jule::Uintptr>(_184517_st.unsafe_cast_ptr<_1ce04b60e_RangeIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type38) {
				_case_begin_1b7e38589:;
				{
					(*(_181813_brk))._field_It=static_cast<jule::Uintptr>(_184517_st.unsafe_cast_ptr<_1ce04abb3_WhileIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type47) {
				_case_begin_1b7e38600:;
				{
					(*(_181813_brk))._field_Mtch=static_cast<jule::Uintptr>(_184517_st.unsafe_cast_ptr<_1ce04d90d_Match>());
				}
			}
			else {
				_case_begin_1b7e384ac:;
				{
					_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*_181739_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_181739_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
				}
			}
			_match_end_1b7e38457:;
		};
	};
	if (((*(_181813_brk))._field_It != 0LLU)) {
		if ((!(_1ce05ad38_checkValidBreakLabel(_self_, (*(_181813_brk))._field_It)))) {
			_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*_181739_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_181739_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		};
	};
	if (((*(_181813_brk))._field_Mtch != 0LLU)) {
		if ((!(_1ce05ad38_checkValidBreakLabel(_self_, (*(_181813_brk))._field_Mtch)))) {
			_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*_181739_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_181739_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		};
	};
	return _181813_brk;;
}



inline jule::Ptr<_1ce04bd6d_BreakSt> _1ce061349_checkPlainBreak(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1cded6b60_BreakSt> _187535_b) {
	if (_1ce054936_isDeferred(_self_)) {
		_1ce093dc6_pushErr((*_self_.alloc)._field_s.ptr(), (*(_187535_b))._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ce051acb_scopeChecker> _188113_scope = _self_;;
	_julec_label_1b7e406d4:;
	{
		
		if ((((((*_188113_scope.alloc)._field_it == 0LLU) && ((*_188113_scope.alloc)._field_cse == 0LLU)) && ((*_188113_scope.alloc)._field_parent != nullptr)) && ((*_188113_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1b7e417d4:;
			{
				_188113_scope=(*_188113_scope.alloc)._field_parent;
				goto _julec_label_1b7e406d4;
			}
		}
		else if (((*_188113_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1b7e4186c:;
			{
				return jule::new_ptr<_1ce04bd6d_BreakSt>(_1ce04bd6d_BreakSt{._field_It=(*_188113_scope.alloc)._field_it, });;
			}
		}
		else if (((*_188113_scope.alloc)._field_cse != 0LLU)) {
			_case_begin_1b7e418d3:;
			{
				return jule::new_ptr<_1ce04bd6d_BreakSt>(_1ce04bd6d_BreakSt{._field_Mtch=static_cast<jule::Uintptr>((*(((_1ce04e436_Case*)((*_188113_scope.alloc)._field_cse))))._field_Owner)});;
			}
		}
		_match_end_1b7e41707:;
	};
	_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*_187535_b.alloc)._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1ce061602_checkBreak(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1cded6b60_BreakSt> _189730_b) {
	if (((*(_189730_b))._field_Label != nullptr)) {
		jule::Ptr<_1ce04bd6d_BreakSt> _189917_brk = _1ce061008_checkBreakWithLabel(_self_, _189730_b);;
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_189917_brk, &__jule_any_type49)}));
		return;;
	};
	jule::Ptr<_1ce04bd6d_BreakSt> _190413_brk = _1ce061349_checkPlainBreak(_self_, _189730_b);;
	(*(*_self_.alloc)._field_scope.alloc)._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_190413_brk, &__jule_any_type49)}));
}



inline void _1ce0618aa_checkRet(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1cded4cd4_RetSt> _190832_r) {
	if (_1ce054936_isDeferred(_self_)) {
		_1ce093dc6_pushErr((*_self_.alloc)._field_s.ptr(), (*(_190832_r))._field_Token, jule::Str::lit("deferred scopes are not supports return statements", 50), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ce04eec5_RetSt> _191313_rt = jule::new_ptr<_1ce04eec5_RetSt>(_1ce04eec5_RetSt{._field_Func=(*(_1ce054bbc_getRoot(_self_)))._field_owner, });;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_191313_rt, &__jule_any_type50)}));
	jule::Ptr<_1ce114331_retTypeChecker> _191813_rtc = jule::new_ptr<_1ce114331_retTypeChecker>(_1ce114331_retTypeChecker{._field_sc=_self_, ._field_f=(*(_191313_rt))._field_Func, ._field_errorToken=(*_190832_r.alloc)._field_Token, });;
	jule::Bool _19239_ok = _1ce1152dd_check(_191813_rtc.ptr(), &((*_190832_r.alloc)._field_Expr));;
	if ((!(_19239_ok))) {
		return;;
	};
	if (((*_190832_r.alloc)._field_Expr != nullptr)) {
		(*_191313_rt.alloc)._field_Expr=(*_191813_rtc.alloc)._field_model;
	};
}



inline void _1ce061b63_checkUseExpr(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1cdec6798_UseExpr> _193332_ue) {
	if (((*(_self_))._field_result == nullptr)) {
		_1ce093dc6_pushErr((*_self_.alloc)._field_s.ptr(), (*(_193332_ue))._field_Token, jule::Str::lit("use expressions cannot useable out of exceptional handler scopes", 64), jule::Slice<jule::Any>());
		return;;
	};
	if (_1ce054936_isDeferred(_self_)) {
		_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*_193332_ue.alloc)._field_Token, jule::Str::lit("use expressions cannot useable in deferred scopes", 49), jule::Slice<jule::Any>());
	};
	if ((((*_self_.alloc)._field_i + 1LL) < (*((*_self_.alloc)._field_tree))._field_Stmts.len())) {
		_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*_193332_ue.alloc)._field_Token, jule::Str::lit("use expressions must be last statement of scope", 47), jule::Slice<jule::Any>());
	};
}



inline void _1ce061e1b_checkNode(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Any* _194934_node) {
	{
		auto &_match_expr{ (*(_194934_node)) };
		
		if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1b7e5244e:;
			{
				_1ce0577d5_checkAnonScope(_self_, (*(_194934_node)).cast_ptr<_1cded1ab1_ScopeTree>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1b7e51cbc:;
			{
				_1ce0560ca_checkVarDecl(_self_, (*(_194934_node)).cast_ptr<_1cded490a_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1b7e52130:;
			{
				_1ce05663b_checkTypeAliasDecl(_self_, (*(_194934_node)).cast_ptr<_1cded85ac_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1b7e52196:;
			{
				_1ce057e01_checkExpr(_self_, (*(_194934_node)).cast_ptr<_1cdec5dc4_Expr>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1b7e5220c:;
			{
				_1ce05883b_checkConditional(_self_, (*(_194934_node)).cast_ptr<_1cded7d70_Conditional>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1b7e5255e:;
			{
				_1ce05a6a6_checkIter(_self_, (*(_194934_node)).cast_ptr<_1cded5554_Iter>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1b7e525c5:;
			{
				_1ce05b432_checkCont(_self_, (*(_194934_node)).cast_ptr<_1cded7039_ContSt>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1b7e5263b:;
			{
				_1ce05b6da_checkLabel(_self_, (*(_194934_node)).cast_ptr<_1cdece174_LabelSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1b7e526a2:;
			{
				_1ce05b993_pushGoto(_self_, (*(_194934_node)).cast_ptr<_1cdece54d_GotoSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1b7e52718:;
			{
				_1ce05d698_checkAssignSt(_self_, (*(_194934_node)).cast_ptr<_1cded053d_AssignSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1b7e5277e:;
			{
				_1ce06090e_checkMatch(_self_, (*(_194934_node)).cast_ptr<_1cded937c_MatchCase>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1b7e527e5:;
			{
				_1ce060bb7_checkFall(_self_, (*(_194934_node)).cast_ptr<_1cdece84a_FallSt>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1b7e5285b:;
			{
				_1ce061602_checkBreak(_self_, (*(_194934_node)).cast_ptr<_1cded6b60_BreakSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1b7e528d3:;
			{
				_1ce0618aa_checkRet(_self_, (*(_194934_node)).cast_ptr<_1cded4cd4_RetSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1b7e5295a:;
			{
				_1ce061b63_checkUseExpr(_self_, (*(_194934_node)).cast_ptr<_1cdec6798_UseExpr>(&__jule_any_type63));
			}
		}
		else {
			_case_begin_1b7e51e98:;
			{
				jule::outln(jule::Str::lit("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1b7e51e43:;
	};
}



inline void _1ce062119_checkResult(jule::Ptr<_1ce051acb_scopeChecker> _self_) {
	_1cded1451_Stmt _198713_stmt = (*((*(_self_))._field_tree))._field_Stmts[((*(*_self_.alloc)._field_tree.alloc)._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _198713_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1b80bbd27:;
			{
				jule::Ptr<_1cdec6798_UseExpr> _199017_ue = _198713_stmt._field_Data.unsafe_cast_ptr<_1cdec6798_UseExpr>();;
				jule::Ptr<_1ce11bc0c_Data> _199117_d = _1ce13bb94_evalExpr(_1ce09b373_eval((*_self_.alloc)._field_s, jule::Trait<_1ce16c7b8_Lookup>(_self_, 0)), (*(_199017_ue))._field_Expr);;
				if ((_199117_d == nullptr)) {
					return;;
				};
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_199117_d, &__jule_any_type24)}));
				jule::Ptr<_1ce114331_retTypeChecker> _199617_rtc = jule::new_ptr<_1ce114331_retTypeChecker>(_1ce114331_retTypeChecker{._field_sc=_self_, ._field_types=_1ce00ba31_Types((*_self_.alloc)._field_result.ptr()), ._field_errorToken=(*((*_199017_ue.alloc)._field_Expr))._field_Token, });;
				_1ce1152dd_check(_199617_rtc.ptr(), &((*_199017_ue.alloc)._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1b80bc8d8:;
			{
				jule::Ptr<_1cdec5dc4_Expr> _200317_expr = _198713_stmt._field_Data.unsafe_cast_ptr<_1cdec5dc4_Expr>();;
				jule::Ptr<_1ce11bc0c_Data> _200417_d = _1ce13bb94_evalExpr(_1ce09b373_eval((*_self_.alloc)._field_s, jule::Trait<_1ce16c7b8_Lookup>(_self_, 0)), _200317_expr);;
				if ((_200417_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ (*(_200417_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1b7c09899:;
						{
							jule::Ptr<_1ce0033b8_BuiltinErrorCallExprModel> _201021_m = (*(_200417_d))._field_Model.unsafe_cast_ptr<_1ce0033b8_BuiltinErrorCallExprModel>();;
							_1ce057b48_processErrorCall(_self_, &(_201021_m), (*(_200317_expr))._field_Token);
							(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_200417_d, &__jule_any_type24)}));
						}
					}
					else {
						_case_begin_1b7c09a86:;
						{
							return;;
						}
					}
					_match_end_1b7c09a31:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type57 || _match_expr.type == &__jule_any_type61 || _match_expr.type == &__jule_any_type55 || _match_expr.type == &__jule_any_type62) {
			_case_begin_1b80bc0be:;
			{
				_1ce061e1b_checkNode(_self_, &(_198713_stmt._field_Data));
			}
		}
		else {
			_case_begin_1b80bc058:;
			{
				_1ce061e1b_checkNode(_self_, &(_198713_stmt._field_Data));
				return;;
			}
		}
		_match_end_1b80bc003:;
	};
	(*_self_.alloc)._field_result=nullptr;
}



inline void _1ce062317_checkTree(jule::Ptr<_1ce051acb_scopeChecker> _self_) {
	(*(_self_))._field_i=0LL;
	jule::I32 _203213_n = (*((*_self_.alloc)._field_tree))._field_Stmts.len();;
	if (((*_self_.alloc)._field_result != nullptr)) {
		(_203213_n)--;
	};
	for (; ((*_self_.alloc)._field_i < _203213_n); ((*_self_.alloc)._field_i)++) {
		{
			_1cded1451_Stmt _204017_stmt = (*(*_self_.alloc)._field_tree.alloc)._field_Stmts[(*_self_.alloc)._field_i];;
			_1ce061e1b_checkNode(_self_, &(_204017_stmt._field_Data));
			if (_1ce0546a0_stopped(_self_)) {
				return;;
			};
		}
	_iter_next_1b7c0e12e:;
	}
	_iter_end_1b7c0e12e:;;
	if ((((*_self_.alloc)._field_result != nullptr) && ((*(*_self_.alloc)._field_tree.alloc)._field_Stmts.len() != 0LL))) {
		_1ce062119_checkResult(_self_);
	};
}



inline void _1ce06267a_checkGoto(_1ce051acb_scopeChecker* _self_, jule::Ptr<_1ce050bb8_scopeGoto>* _205133_gt, jule::Ptr<_1ce050635_scopeLabel>* _205154_label) {
	jule::Ptr<_1ce051acb_scopeChecker> _205213_gtsc = (*((*(_205133_gt))))._field_scope;;
	while ((((*(_205213_gtsc))._field_childIndex - 1LL) > (*((*((*(_205154_label))))._field_scope))._field_childIndex)) {
		{
			_205213_gtsc=(*_205213_gtsc.alloc)._field_parent;
		}
	_iter_next_1b7c124d9:;
	}
	_iter_end_1b7c124d9:;;
	jule::I32 _205713_n = 0LL;;
	if (((*_205213_gtsc.alloc)._field_scope == (*(*((*(_205154_label))))._field_scope.alloc)._field_scope)) {
		if (((*((*(_205133_gt))))._field_pos > (*((*(_205154_label))))._field_pos)) {
			return;;
		};
		_205713_n=(*((*(_205133_gt))))._field_pos;
	};
	jule::I32 _207013_i = ((*((*(_205154_label))))._field_pos - 1LL);;
	if ((_205713_n == 0LL)) {
		{
			auto expr = &((*((*(*((*(_205154_label))))._field_scope.alloc)._field_scope))._field_Stmts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b7c15e49:;
			if (it != expr_end) {
				jule::I32 _207317_j = it - expr->begin();
				jule::Any _207320_stmt = *it;
				{
					if (_1ce04752d_stmtIsGotoScope(&(_207320_stmt), &((*_205213_gtsc.alloc)._field_scope))) {
						_205713_n=_207317_j;
						goto _iter_end_1b7c15e49;
					};
				}
				_iter_next_1b7c15e49:;
				++it;
				_207317_j++;
				goto _iter_begin_1b7c15e49;
			}
			_iter_end_1b7c15e49:;
		};
	};
	for (; (_207013_i >= _205713_n); (_207013_i)--) {
		{
			jule::Any _208317_stmt = (*(*(*((*(_205154_label))))._field_scope.alloc)._field_scope.alloc)._field_Stmts[_207013_i];;
			if (_1ce0492dd_stmtIsDef(&(_208317_stmt))) {
				_1ce093dc6_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_205133_gt))))._field_gt))._field_Token, jule::Str::lit("goto @ jumps over declaration(s)", 32), jule::Slice<jule::Any>::make({jule::Any((*((*(*((*(_205133_gt))))._field_gt.alloc)._field_Label))._field_Kind, &__jule_any_type4)}));
				return;;
			};
		}
	_iter_next_1b7c154a9:;
	}
	_iter_end_1b7c154a9:;;
}



inline void _1ce062878_checkGotos(_1ce051acb_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c166ca:;
		if (it != expr_end) {
			jule::Ptr<_1ce050bb8_scopeGoto> _209221_gt = *it;
			{
				jule::Ptr<_1ce050635_scopeLabel> _209317_label = _1ce055926_findLabelAll(_self_, &((*((*((*(_209221_gt))._field_gt))._field_Label))._field_Kind));;
				if ((_209317_label == nullptr)) {
					_1ce093dc6_pushErr((*(_self_))._field_s.ptr(), (*(*_209221_gt.alloc)._field_gt.alloc)._field_Token, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*(*(*_209221_gt.alloc)._field_gt.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
					goto _iter_next_1b7c166ca;
				};
				(*((*_209221_gt.alloc)._field_st))._field_Label=(*(_209317_label))._field_label;
				(*(_209317_label))._field_used=true;
				_1ce06267a_checkGoto(_self_, &(_209221_gt), &(_209317_label));
			}
			_iter_next_1b7c166ca:;
			++it;
			goto _iter_begin_1b7c166ca;
		}
		_iter_end_1b7c166ca:;
	};
}



inline void _1ce062a76_checkLabels(_1ce051acb_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c1c857:;
		if (it != expr_end) {
			jule::Ptr<_1ce050635_scopeLabel> _210516_l = *it;
			{
				if ((!((*(_210516_l))._field_used))) {
					_1ce093dc6_pushErr((*(_self_))._field_s.ptr(), (*_210516_l.alloc)._field_token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*((*_210516_l.alloc)._field_label))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1b7c1c857:;
			++it;
			goto _iter_begin_1b7c1c857;
		}
		_iter_end_1b7c1c857:;
	};
}



inline void _1ce062c74_checkVars(_1ce051acb_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c1e4b3:;
		if (it != expr_end) {
			jule::Ptr<_1ce0b4105_Var> _211316_v = *it;
			{
				if (((((!((*(_211316_v))._field_Used)) && (!((*_211316_v.alloc)._field_Constant))) && (!(_1cdeadd9b_IsIgnoreIdent((*_211316_v.alloc)._field_Ident)))) && (!(_1cdeae165_IsAnonIdent((*_211316_v.alloc)._field_Ident))))) {
					_1ce093dc6_pushErr((*(_self_))._field_s.ptr(), (*_211316_v.alloc)._field_Token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*_211316_v.alloc)._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1b7c1e4b3:;
			++it;
			goto _iter_begin_1b7c1e4b3;
		}
		_iter_end_1b7c1e4b3:;
	};
}



inline void _1ce062e72_checkAliases(_1ce051acb_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c21b69:;
		if (it != expr_end) {
			jule::Ptr<_1ce14bdd5_TypeAlias> _212116_a = *it;
			{
				if ((((!((*(_212116_a))._field_Used)) && (!(_1cdeadd9b_IsIgnoreIdent((*_212116_a.alloc)._field_Ident)))) && (!(_1cdeae165_IsAnonIdent((*_212116_a.alloc)._field_Ident))))) {
					_1ce093dc6_pushErr((*(_self_))._field_s.ptr(), (*_212116_a.alloc)._field_Token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*_212116_a.alloc)._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1b7c21b69:;
			++it;
			goto _iter_begin_1b7c21b69;
		}
		_iter_end_1b7c21b69:;
	};
}



inline void _1ce0632d5_check(jule::Ptr<_1ce051acb_scopeChecker> _self_, jule::Ptr<_1cded1ab1_ScopeTree>* _212930_tree, jule::Ptr<_1ce0497c7_Scope>* _212953_s) {
	(*((*(_212953_s))))._field_Deferred=(*((*(_212930_tree))))._field_Deferred;
	(*((*(_212953_s))))._field_Unsafety=(*((*(_212930_tree))))._field_Unsafety;
	jule::I32 _21339_errors = (*((*(_self_))._field_s))._field_errors.len();;
	(*_self_.alloc)._field_tree=(*(_212930_tree));
	(*_self_.alloc)._field_scope=(*(_212953_s));
	_1ce062317_checkTree(_self_);
	if ((_21339_errors == (*(*_self_.alloc)._field_s.alloc)._field_errors.len())) {
		_1ce062c74_checkVars(_self_);
		_1ce062e72_checkAliases(_self_);
		if (_1ce05421b_isRoot(_self_)) {
			_1ce062878_checkGotos(_self_);
			_1ce062a76_checkLabels(_self_);
		};
	};
}



inline jule::Ptr<_1ce051acb_scopeChecker> _1ce06356b_newChildChecker(jule::Ptr<_1ce051acb_scopeChecker> _self_) {
	jule::Ptr<_1ce051acb_scopeChecker> _215313_base = _1ce0465a4_newScopeCheckerBase(&((*(_self_))._field_s), nullptr);;
	(*(_215313_base))._field_parent=_self_;
	(*_215313_base.alloc)._field_labels=(*_self_.alloc)._field_labels;
	(*_215313_base.alloc)._field_gotos=(*_self_.alloc)._field_gotos;
	(*_215313_base.alloc)._field_childIndex=((*_self_.alloc)._field_childIndex + 1LL);
	return _215313_base;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce051acb_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1ce06501d_checkCdef(_1ce064b11_directiveChecker* _self_, jule::Ptr<_1cdec0eac_Directive>* _1629_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1b7c298db:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1ce00792d_Fn>()))._field_Binded) {
					goto _match_end_1b7c29b2d;
				};
				goto _case_begin_1b7c29b83;
			}
		}
		else {
			_case_begin_1b7c29b83:;
			{
				_1ce093dc6_pushErr((*(_self_))._field_s.ptr(), (*((*(_1629_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_1629_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1b7c29b2d:;
	};
	if (((*((*(_1629_d))))._field_Args.len() > 0LL)) {
		_1ce093dc6_pushErr((*(_self_))._field_s.ptr(), (*((*(_1629_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1ce0652c6_checkTypedef(_1ce064b11_directiveChecker* _self_, jule::Ptr<_1cdec0eac_Directive>* _3232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1b7c2c823:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1cdee2990_Struct>()))._field_Binded) {
					goto _match_end_1b7c2ca65;
				};
				goto _case_begin_1b7c2caba;
			}
		}
		else {
			_case_begin_1b7c2caba:;
			{
				_1ce093dc6_pushErr((*(_self_))._field_s.ptr(), (*((*(_3232_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_3232_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1b7c2ca65:;
	};
	if (((*((*(_3232_d))))._field_Args.len() > 0LL)) {
		_1ce093dc6_pushErr((*(_self_))._field_s.ptr(), (*((*(_3232_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1ce06557e_checkNamespace(_1ce064b11_directiveChecker* _self_, jule::Ptr<_1cdec0eac_Directive>* _4838_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1b7c3075a:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1cdee2990_Struct>()))._field_Binded))) {
					_1ce093dc6_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1b7c30a68:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1ce00792d_Fn>()))._field_Binded))) {
					_1ce093dc6_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b7c30ace:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1ce0b4105_Var>()))._field_Binded))) {
					_1ce093dc6_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_1b7c30a02:;
			{
				_1ce093dc6_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1b7c3099c:;
	};
	if (((*((*(_4838_d))))._field_Args.len() == 0LL)) {
		_1ce093dc6_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_4838_d))))._field_Args.len() > 1LL)) {
		_1ce093dc6_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1cdeab4b4_Token> _739_arg = (*((*(_4838_d))))._field_Args[0LL];;
	if (((*(_739_arg))._field_Id != static_cast<jule::U32>(4LLU))) {
		_1ce093dc6_pushErr((*(_self_))._field_s.ptr(), _739_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_739_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1ce093dc6_pushErr((*(_self_))._field_s, _739_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_4838_d))))._field_Args[0LL]))._field_Kind=(*_739_arg.alloc)._field_Kind.slice(1LL, ((*_739_arg.alloc)._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1b7c3b568:;
			{
				if ((_1ce1455a4_findDirective(&((*((*(_self_))._field_d))), jule::Str::lit("typedef", 7)) == nullptr)) {
					jule::Ptr<_1cdec0eac_Directive> _9021_typedef = jule::new_ptr<_1cdec0eac_Directive>(_1cdec0eac_Directive{._field_Tag=(*((*(_4838_d))))._field_Tag, });;
					(*((*(_9021_typedef))._field_Tag))._field_Kind=jule::Str::lit("typedef", 7);
					(*(*(_self_))._field_d.alloc)=jule::append((*(*(_self_))._field_d.alloc),jule::Slice<jule::Ptr<_1cdec0eac_Directive>>::make({_9021_typedef}));
				};
			}
		}
		_match_end_1b7c3b502:;
	};
}



inline void _1ce065837_checkDeprecated(_1ce064b11_directiveChecker* _self_, jule::Ptr<_1cdec0eac_Directive>* _9939_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1b7c3d6d0:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1cdee2990_Struct>()))._field_Binded) {
					_1ce093dc6_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1b7c3d977:;
			{
				jule::Ptr<_1ce00792d_Fn> _10617_f = (*(_self_))._field_o.unsafe_cast_ptr<_1ce00792d_Fn>();;
				if ((((*(_10617_f))._field_Binded || _1ce0083bd_IsEntryPoint(_10617_f)) || _1ce008654_IsInit(_10617_f))) {
					_1ce093dc6_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b7c3d9dd:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1ce0b4105_Var>()))._field_Binded) {
					_1ce093dc6_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_1b7c3d911:;
			{
				_1ce093dc6_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1b7c3d8ab:;
	};
	if (((*((*(_9939_d))))._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*((*(_9939_d))))._field_Args.len() > 1LL)) {
		_1ce093dc6_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1cdeab4b4_Token> _1259_arg = (*((*(_9939_d))))._field_Args[0LL];;
	if (((*(_1259_arg))._field_Id != static_cast<jule::U32>(4LLU))) {
		_1ce093dc6_pushErr((*(_self_))._field_s, _1259_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_1259_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1ce093dc6_pushErr((*(_self_))._field_s, _1259_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_9939_d))))._field_Args[0LL]))._field_Kind=(*_1259_arg.alloc)._field_Kind.slice(1LL, ((*_1259_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _1ce065ae0_checkTest(_1ce064b11_directiveChecker* _self_, jule::Ptr<_1cdec0eac_Directive>* _13929_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1b7c45066:;
			{
				jule::Ptr<_1ce00792d_Fn> _14213_f = (*(_self_))._field_o.unsafe_cast_ptr<_1ce00792d_Fn>();;
				if ((((!((*(_14213_f))._field_Binded)) && (!(_1ce008654_IsInit(_14213_f)))) && (!(_1ce0083bd_IsEntryPoint(_14213_f))))) {
					goto _match_end_1b7c498d9;
				};
				if (_1ce008137_IsMethod(_14213_f)) {
					_1ce093dc6_pushErr((*(_self_))._field_s.ptr(), (*_14213_f.alloc)._field_Token, jule::Str::lit("you cannot declare test methods", 31), jule::Slice<jule::Any>());
					goto _match_end_1b7c498d9;
				};
				goto _case_begin_1b7c49a60;
			}
		}
		else {
			_case_begin_1b7c49a60:;
			{
				_1ce093dc6_pushErr((*(_self_))._field_s.ptr(), (*((*(_13929_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_13929_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1b7c498d9:;
	};
	if (((*((*(_13929_d))))._field_Args.len() > 0LL)) {
		_1ce093dc6_pushErr((*(_self_))._field_s.ptr(), (*((*(_13929_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1ce065d98_checkDirective(_1ce064b11_directiveChecker* _self_, jule::Ptr<_1cdec0eac_Directive>* _16038_d) {
	{
		auto &_match_expr{ (*((*((*(_16038_d))))._field_Tag))._field_Kind };
		
		if (_match_expr == jule::Str::lit("cdef", 4)) {
			_case_begin_1b7c4e724:;
			{
				_1ce06501d_checkCdef(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("typedef", 7)) {
			_case_begin_1b7c4e78a:;
			{
				_1ce0652c6_checkTypedef(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("namespace", 9)) {
			_case_begin_1b7c4e801:;
			{
				_1ce06557e_checkNamespace(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("deprecated", 10)) {
			_case_begin_1b7c4e867:;
			{
				_1ce065837_checkDeprecated(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("test", 4)) {
			_case_begin_1b7c4e8cd:;
			{
				_1ce065ae0_checkTest(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("build", 5) || _match_expr == jule::Str::lit("pass", 4)) {
			_case_begin_1b7c4e944:;
			{
				_1ce093dc6_pushErr((*(_self_))._field_s.ptr(), (*((*(_16038_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_16038_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_1b7c4e14c:;
			{
				_1ce093dc6_pushErr((*(_self_))._field_s.ptr(), (*((*(_16038_d))))._field_Tag, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_16038_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1b7c4e658:;
	};
}



inline void _1ce066096_check(_1ce064b11_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c536e5:;
		if (it != expr_end) {
			jule::Ptr<_1cdec0eac_Directive> _18121_d = *it;
			{
				_1ce065d98_checkDirective(_self_, &(_18121_d));
			}
			_iter_next_1b7c536e5:;
			++it;
			goto _iter_begin_1b7c536e5;
		}
		_iter_end_1b7c536e5:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ce064b11_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ce06b0ac_ImportInfo> _1ce06b596_SelectPackage(_1ce06b0ac_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1ce06b0ac_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1ce0b4105_Var> _1ce06b992_FindVar(_1ce06b0ac_ImportInfo* _self_, jule::Str _18926_ident, jule::Bool ) {
	if ((!(_1ce06d5ed_isLookupable(_self_, &(_18926_ident))))) {
		return nullptr;;
	};
	return _1ce068593_findVarInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_18926_ident), false);;
}



inline jule::Ptr<_1ce14bdd5_TypeAlias> _1ce06bd8d_FindTypeAlias(_1ce06b0ac_ImportInfo* _self_, jule::Str _20132_ident, jule::Bool ) {
	if ((!(_1ce06d5ed_isLookupable(_self_, &(_20132_ident))))) {
		return nullptr;;
	};
	return _1ce068a16_findTypeAliasInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_20132_ident), false);;
}



inline jule::Ptr<_1cdee2990_Struct> _1ce06c289_FindStruct(_1ce06b0ac_ImportInfo* _self_, jule::Str _21329_ident, jule::Bool ) {
	if ((!(_1ce06d5ed_isLookupable(_self_, &(_21329_ident))))) {
		return nullptr;;
	};
	return _1ce068e45_findStructInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_21329_ident), false);;
}



inline jule::Ptr<_1ce00792d_Fn> _1ce06c685_FindFn(_1ce06b0ac_ImportInfo* _self_, jule::Str _22525_ident, jule::Bool ) {
	if ((!(_1ce06d5ed_isLookupable(_self_, &(_22525_ident))))) {
		return nullptr;;
	};
	return _1ce0693eb_findFnInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_22525_ident), false);;
}



inline jule::Ptr<_1ce01ac0a_Trait> _1ce06c9c6_FindTrait(_1ce06b0ac_ImportInfo* _self_, jule::Str _23628_ident) {
	if ((!(_1ce06d5ed_isLookupable(_self_, &(_23628_ident))))) {
		return nullptr;;
	};
	return _1ce06973c_findTraitInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_23628_ident));;
}



inline jule::Ptr<_1ce01d416_Enum> _1ce06cd17_FindEnum(_1ce06b0ac_ImportInfo* _self_, jule::Str _24727_ident) {
	if ((!(_1ce06d5ed_isLookupable(_self_, &(_24727_ident))))) {
		return nullptr;;
	};
	return _1ce069ab1_findEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_24727_ident));;
}



inline jule::Ptr<_1ce01eb21_TypeEnum> _1ce06d158_FindTypeEnum(_1ce06b0ac_ImportInfo* _self_, jule::Str _25831_ident) {
	if ((!(_1ce06d5ed_isLookupable(_self_, &(_25831_ident))))) {
		return nullptr;;
	};
	return _1ce069e35_findTypeEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_25831_ident));;
}



inline jule::Bool _1ce06d5ed_isLookupable(_1ce06b0ac_ImportInfo* _self_, jule::Str* _26728_ident) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _1ce06d93e_existIdent(_self_, jule::Str::lit("self", 4)))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_1ce06d93e_existIdent(_self_, (*(_26728_ident)))))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _1ce06d93e_existIdent(_1ce06b0ac_ImportInfo* _self_, jule::Str _28725_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c6870a:;
		if (it != expr_end) {
			jule::Ptr<_1cdeab4b4_Token> *_28816_sident = it;
			{
				if (((*((*(_28816_sident))))._field_Kind == _28725_ident)) {
					return true;;
				};
			}
			_iter_next_1b7c6870a:;
			++it;
			goto _iter_begin_1b7c6870a;
		}
		_iter_end_1b7c6870a:;
	};
	return false;;
}



inline jule::Bool _1ce06dbc5_isAccessibleViaSelection(_1ce06b0ac_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _1ce06d93e_existIdent(_self_, jule::Str::lit("self", 4)));;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce06b0ac_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ce06b0ac_ImportInfo> _1ce06e478_SelectPackage(_1ce06ded3_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1ce06b0ac_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1ce0b4105_Var> _1ce06e874_FindVar(_1ce06ded3_Package* _self_, jule::Str _31426_ident, jule::Bool _31438_binded) {
	return _1ce068593_findVarInPackage(&((*(_self_))._field_Files), &(_31426_ident), _31438_binded);;
}



inline jule::Ptr<_1ce14bdd5_TypeAlias> _1ce06ec70_FindTypeAlias(_1ce06ded3_Package* _self_, jule::Str _32032_ident, jule::Bool _32044_binded) {
	return _1ce068a16_findTypeAliasInPackage(&((*(_self_))._field_Files), &(_32032_ident), _32044_binded);;
}



inline jule::Ptr<_1cdee2990_Struct> _1ce07016b_FindStruct(_1ce06ded3_Package* _self_, jule::Str _32629_ident, jule::Bool _32641_binded) {
	return _1ce068e45_findStructInPackage(&((*(_self_))._field_Files), &(_32629_ident), _32641_binded);;
}



inline jule::Ptr<_1ce00792d_Fn> _1ce070567_FindFn(_1ce06ded3_Package* _self_, jule::Str _33225_ident, jule::Bool _33237_binded) {
	return _1ce0693eb_findFnInPackage(&((*(_self_))._field_Files), &(_33225_ident), _33237_binded);;
}



inline jule::Ptr<_1ce01ac0a_Trait> _1ce0708a8_FindTrait(_1ce06ded3_Package* _self_, jule::Str _33828_ident) {
	return _1ce06973c_findTraitInPackage(&((*(_self_))._field_Files), &(_33828_ident));;
}



inline jule::Ptr<_1ce01d416_Enum> _1ce070be9_FindEnum(_1ce06ded3_Package* _self_, jule::Str _34427_ident) {
	return _1ce069ab1_findEnumInPackage(&((*(_self_))._field_Files), &(_34427_ident));;
}



inline jule::Ptr<_1ce01eb21_TypeEnum> _1ce07103a_FindTypeEnum(_1ce06ded3_Package* _self_, jule::Str _35031_ident) {
	return _1ce069e35_findTypeEnumInPackage(&((*(_self_))._field_Files), &(_35031_ident));;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce06ded3_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ce0325a1_comptimeTypeInfo> _1ce08ac69_pushComptimeTypeInfo(_1ce08a829_commonSemaMeta* _self_, jule::Ptr<_1ce14cbc7_TypeKind>* _21444_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c9a1a9:;
		if (it != expr_end) {
			jule::Ptr<_1ce0325a1_comptimeTypeInfo> _21521_t2 = *it;
			{
				if ((((*((*(_21521_t2))._field_base))._field_BindIdent == (*((*(_21444_t))))._field_BindIdent) && _1ce14d3d1_Equal((*_21521_t2.alloc)._field_base, (*(_21444_t))))) {
					return _21521_t2;;
				};
			}
			_iter_next_1b7c9a1a9:;
			++it;
			goto _iter_begin_1b7c9a1a9;
		}
		_iter_end_1b7c9a1a9:;
	};
	jule::Ptr<_1ce0325a1_comptimeTypeInfo> _22013_t1 = jule::new_ptr<_1ce0325a1_comptimeTypeInfo>(_1ce0325a1_comptimeTypeInfo{._field_base=(*(_21444_t))});;
	{ jule::Slice<jule::Ptr<_1ce0325a1_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_22013_t1); };
	return _22013_t1;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce08a829_commonSemaMeta _Src) {
	_Stream << "commonSemaMeta{";
	_Stream << "comptimeTypeInfos:" << _Src._field_comptimeTypeInfos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ce06b0ac_ImportInfo> _1ce08b8c4_SelectPackage(_1ce08b42e_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1ce06b0ac_ImportInfo>)> _24332_selector) {
	return _1ce116d7d_SelectPackage((*(_self_))._field_file.ptr(), _24332_selector);;
}



inline jule::Ptr<_1ce0b4105_Var> _1ce08bcc0_FindVar(_1ce08b42e_Sema* _self_, jule::Str _25326_ident, jule::Bool _25338_binded) {
	jule::Ptr<_1ce0b4105_Var> _25513_v = _1ce068593_findVarInPackage(&((*(_self_))._field_files), &(_25326_ident), _25338_binded);;
	if ((_25513_v != nullptr)) {
		return _25513_v;;
	};
	if ((!(_1ce0884e7_IsPub(_25326_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c9e158:;
		if (it != expr_end) {
			jule::Ptr<_1ce06b0ac_ImportInfo> _26621_imp = *it;
			{
				if ((!(_1ce0893e9_impIsLookupable(&(_26621_imp), &(_25326_ident))))) {
					goto _iter_next_1b7c9e158;
				};
				_25513_v=_1ce06b992_FindVar(_26621_imp.ptr(), _25326_ident, _25338_binded);
				if (((_25513_v != nullptr) && _1ce094635_isAccessibleDefine(_self_, (*_25513_v.alloc)._field_Public, (*_25513_v.alloc)._field_Token))) {
					return _25513_v;;
				};
			}
			_iter_next_1b7c9e158:;
			++it;
			goto _iter_begin_1b7c9e158;
		}
		_iter_end_1b7c9e158:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ce14bdd5_TypeAlias> _1ce0920e4_FindTypeAlias(_1ce08b42e_Sema* _self_, jule::Str _28532_ident, jule::Bool _28544_binded) {
	jule::Ptr<_1ce14bdd5_TypeAlias> _28713_ta = _1ce068a16_findTypeAliasInPackage(&((*(_self_))._field_files), &(_28532_ident), _28544_binded);;
	if ((_28713_ta != nullptr)) {
		return _28713_ta;;
	};
	if ((!(_1ce0884e7_IsPub(_28532_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7ca205c:;
		if (it != expr_end) {
			jule::Ptr<_1ce06b0ac_ImportInfo> _29821_imp = *it;
			{
				if ((!(_1ce0893e9_impIsLookupable(&(_29821_imp), &(_28532_ident))))) {
					goto _iter_next_1b7ca205c;
				};
				_28713_ta=_1ce06bd8d_FindTypeAlias(_29821_imp.ptr(), _28532_ident, _28544_binded);
				if (((_28713_ta != nullptr) && _1ce094635_isAccessibleDefine(_self_, (*_28713_ta.alloc)._field_Public, (*_28713_ta.alloc)._field_Token))) {
					return _28713_ta;;
				};
			}
			_iter_next_1b7ca205c:;
			++it;
			goto _iter_begin_1b7ca205c;
		}
		_iter_end_1b7ca205c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1cdee2990_Struct> _1ce092424_FindStruct(_1ce08b42e_Sema* _self_, jule::Str _31729_ident, jule::Bool _31741_binded) {
	jule::Ptr<_1cdee2990_Struct> _31913_s = _1ce068e45_findStructInPackage(&((*(_self_))._field_files), &(_31729_ident), _31741_binded);;
	if ((_31913_s != nullptr)) {
		return _31913_s;;
	};
	if ((!(_1ce0884e7_IsPub(_31729_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7ca4e61:;
		if (it != expr_end) {
			jule::Ptr<_1ce06b0ac_ImportInfo> _33021_imp = *it;
			{
				if ((!(_1ce0893e9_impIsLookupable(&(_33021_imp), &(_31729_ident))))) {
					goto _iter_next_1b7ca4e61;
				};
				_31913_s=_1ce06c289_FindStruct(_33021_imp.ptr(), _31729_ident, _31741_binded);
				if (((_31913_s != nullptr) && _1ce094635_isAccessibleDefine(_self_, (*_31913_s.alloc)._field_Public, (*_31913_s.alloc)._field_Token))) {
					return _31913_s;;
				};
			}
			_iter_next_1b7ca4e61:;
			++it;
			goto _iter_begin_1b7ca4e61;
		}
		_iter_end_1b7ca4e61:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ce00792d_Fn> _1ce092820_FindFn(_1ce08b42e_Sema* _self_, jule::Str _34825_ident, jule::Bool _34837_binded) {
	jule::Ptr<_1ce00792d_Fn> _35013_f = _1ce0693eb_findFnInPackage(&((*(_self_))._field_files), &(_34825_ident), _34837_binded);;
	if ((_35013_f != nullptr)) {
		return _35013_f;;
	};
	if ((!(_1ce0884e7_IsPub(_34825_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7ca7d65:;
		if (it != expr_end) {
			jule::Ptr<_1ce06b0ac_ImportInfo> _36121_imp = *it;
			{
				if ((!(_1ce0893e9_impIsLookupable(&(_36121_imp), &(_34825_ident))))) {
					goto _iter_next_1b7ca7d65;
				};
				_35013_f=_1ce06c685_FindFn(_36121_imp.ptr(), _34825_ident, _34837_binded);
				if (((_35013_f != nullptr) && _1ce094635_isAccessibleDefine(_self_, (*_35013_f.alloc)._field_Public, (*_35013_f.alloc)._field_Token))) {
					return _35013_f;;
				};
			}
			_iter_next_1b7ca7d65:;
			++it;
			goto _iter_begin_1b7ca7d65;
		}
		_iter_end_1b7ca7d65:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ce01ac0a_Trait> _1ce092b61_FindTrait(_1ce08b42e_Sema* _self_, jule::Str _38028_ident) {
	jule::Ptr<_1ce01ac0a_Trait> _38213_t = _1ce06973c_findTraitInPackage(&((*(_self_))._field_files), &(_38028_ident));;
	if ((_38213_t != nullptr)) {
		return _38213_t;;
	};
	if ((!(_1ce0884e7_IsPub(_38028_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7caaa27:;
		if (it != expr_end) {
			jule::Ptr<_1ce06b0ac_ImportInfo> _39321_imp = *it;
			{
				if ((!(_1ce0893e9_impIsLookupable(&(_39321_imp), &(_38028_ident))))) {
					goto _iter_next_1b7caaa27;
				};
				_38213_t=_1ce06c9c6_FindTrait(_39321_imp.ptr(), _38028_ident);
				if (((_38213_t != nullptr) && _1ce094635_isAccessibleDefine(_self_, (*_38213_t.alloc)._field_Public, (*_38213_t.alloc)._field_Token))) {
					return _38213_t;;
				};
			}
			_iter_next_1b7caaa27:;
			++it;
			goto _iter_begin_1b7caaa27;
		}
		_iter_end_1b7caaa27:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ce01d416_Enum> _1ce092ea2_FindEnum(_1ce08b42e_Sema* _self_, jule::Str _41227_ident) {
	jule::Ptr<_1ce01d416_Enum> _41413_e = _1ce069ab1_findEnumInPackage(&((*(_self_))._field_files), &(_41227_ident));;
	if ((_41413_e != nullptr)) {
		return _41413_e;;
	};
	if ((!(_1ce0884e7_IsPub(_41227_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7cad6d9:;
		if (it != expr_end) {
			jule::Ptr<_1ce06b0ac_ImportInfo> _42521_imp = *it;
			{
				if ((!(_1ce0893e9_impIsLookupable(&(_42521_imp), &(_41227_ident))))) {
					goto _iter_next_1b7cad6d9;
				};
				_41413_e=_1ce06cd17_FindEnum(_42521_imp.ptr(), _41227_ident);
				if (((_41413_e != nullptr) && _1ce094635_isAccessibleDefine(_self_, (*_41413_e.alloc)._field_Public, (*_41413_e.alloc)._field_Token))) {
					return _41413_e;;
				};
			}
			_iter_next_1b7cad6d9:;
			++it;
			goto _iter_begin_1b7cad6d9;
		}
		_iter_end_1b7cad6d9:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ce01eb21_TypeEnum> _1ce0932e3_FindTypeEnum(_1ce08b42e_Sema* _self_, jule::Str _44431_ident) {
	jule::Ptr<_1ce01eb21_TypeEnum> _44613_e = _1ce069e35_findTypeEnumInPackage(&((*(_self_))._field_files), &(_44431_ident));;
	if ((_44613_e != nullptr)) {
		return _44613_e;;
	};
	if ((!(_1ce0884e7_IsPub(_44431_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7cb139b:;
		if (it != expr_end) {
			jule::Ptr<_1ce06b0ac_ImportInfo> _45721_imp = *it;
			{
				if ((!(_1ce0893e9_impIsLookupable(&(_45721_imp), &(_44431_ident))))) {
					goto _iter_next_1b7cb139b;
				};
				_44613_e=_1ce06d158_FindTypeEnum(_45721_imp.ptr(), _44431_ident);
				if (((_44613_e != nullptr) && _1ce094635_isAccessibleDefine(_self_, (*_44613_e.alloc)._field_Public, (*_44613_e.alloc)._field_Token))) {
					return _44613_e;;
				};
			}
			_iter_next_1b7cb139b:;
			++it;
			goto _iter_begin_1b7cb139b;
		}
		_iter_end_1b7cb139b:;
	};
	return nullptr;;
}



inline jule::Bool _1ce093700_isFlag(_1ce08b42e_Sema* _self_, jule::I32 _47321_flags) {
	return (((*(_self_))._field_flags & _47321_flags) == _47321_flags);;
}



inline void _1ce0939a8_setCurrentFile(_1ce08b42e_Sema* _self_, jule::Ptr<_1ce116894_SymbolTable> _47537_f) {
	(*(_self_))._field_file=_47537_f;
}



inline void _1ce093dc6_pushErr(_1ce08b42e_Sema* _self_, jule::Ptr<_1cdeab4b4_Token> _47726_token, jule::Str _47741_fmt, jule::Slice<jule::Any> _47754_args) {
	{ jule::Slice<_22a93672d_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1ce089075_compilerErr(&(_47726_token), true, _47741_fmt, _47754_args)); };
}



inline void _1ce094239_pushSuggestion(_1ce08b42e_Sema* _self_, jule::Str _48233_fmt, jule::Slice<jule::Any> _48246_args) {
	{
		_1ce08a62b_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _48233_fmt, _48246_args);
	};
}



inline jule::Bool _1ce094635_isAccessibleDefine(_1ce08b42e_Sema* _self_, jule::Bool _48733_public, jule::Ptr<_1cdeab4b4_Token> _48747_token) {
	return ((_48733_public || ((*(_48747_token))._field_File == nullptr)) || (_1cdeb23ee_Dir((*((*(_self_))._field_file))._field_File.ptr()) == _1cdeb23ee_Dir((*_48747_token.alloc)._field_File.ptr())));;
}



inline jule::Bool _1ce094adb_isDuplicatedIdent(_1ce08b42e_Sema* _self_, jule::Uintptr _49432_itself, jule::Str* _49450_ident, jule::Bool _49462_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7cb7aab:;
		if (it != expr_end) {
			jule::Ptr<_1ce116894_SymbolTable> *_49516_f = it;
			{
				if (_1ce119db4_isDuplicatedIdent((*(_49516_f)).ptr(), _49432_itself, _49450_ident, _49462_binded)) {
					return true;;
				};
				{
					auto expr = &((*(*(_49516_f)).alloc)._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7cb8a9b:;
					if (it != expr_end) {
						jule::Ptr<_1ce06b0ac_ImportInfo> *_50020_imp = it;
						{
							{
								auto expr = &((*((*(_50020_imp))))._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b7cb9481:;
								if (it != expr_end) {
									jule::Ptr<_1cdeab4b4_Token> *_50124_selected = it;
									{
										if (((*((*(_50124_selected))))._field_Kind == (*(_49450_ident)))) {
											return true;;
										};
									}
									_iter_next_1b7cb9481:;
									++it;
									goto _iter_begin_1b7cb9481;
								}
								_iter_end_1b7cb9481:;
							};
						}
						_iter_next_1b7cb8a9b:;
						++it;
						goto _iter_begin_1b7cb8a9b;
					}
					_iter_end_1b7cb8a9b:;
				};
			}
			_iter_next_1b7cb7aab:;
			++it;
			goto _iter_begin_1b7cb7aab;
		}
		_iter_end_1b7cb7aab:;
	};
	return false;;
}



inline void _1ce094e4e_checkDirectives(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Slice<jule::Ptr<_1cdec0eac_Directive>>* _51140_d, jule::Any _51166_o) {
	_1ce064b11_directiveChecker _51213_dc = _1ce064b11_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1cdec0eac_Directive>>>)(_51140_d)), ._field_o=_51166_o};;
	_1ce066096_check(&_51213_dc);
}



inline jule::Bool _1ce095405_checkGenericQuantity(_1ce08b42e_Sema* _self_, jule::I32 _52039_required, jule::I32 _52054_given, jule::Ptr<_1cdeab4b4_Token> _52066_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_52039_required == 0LL) && (_52054_given > 0LL))) {
			_case_begin_1b7cbb97d:;
			{
				_1ce093dc6_pushErr(_self_, _52066_token, jule::Str::lit("type have not generics but instantiate like generics", 52), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_52039_required > 0LL) && (_52054_given == 0LL))) {
			_case_begin_1b7cbba05:;
			{
				_1ce093dc6_pushErr(_self_, _52066_token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52039_required < _52054_given)) {
			_case_begin_1b7cbba7c:;
			{
				_1ce093dc6_pushErr(_self_, _52066_token, jule::Str::lit("overflow generics", 17), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52039_required > _52054_given)) {
			_case_begin_1b7cbbb04:;
			{
				_1ce093dc6_pushErr(_self_, _52066_token, jule::Str::lit("missing generics", 16), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b7cbb8b2:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b7cbb7e6:;
	};
}



inline jule::Bool _1ce095801_isDuplicatedImportSelection(_1ce08b42e_Sema* _self_, jule::Uintptr _53942_itself, jule::Str* _53960_ident) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7cbe80a:;
		if (it != expr_end) {
			jule::Ptr<_1ce06b0ac_ImportInfo> *_54016_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_54016_imp))) == _53942_itself)) {
					goto _iter_end_1b7cbe80a;
				};
				if (_1ce06d93e_existIdent((*(_54016_imp)).ptr(), (*(_53960_ident)))) {
					return true;;
				};
			}
			_iter_next_1b7cbe80a:;
			++it;
			goto _iter_begin_1b7cbe80a;
		}
		_iter_end_1b7cbe80a:;
	};
	return false;;
}



inline jule::Any _1ce095bec_getImportDef(_1ce08b42e_Sema* _self_, jule::Str* _55228_ident, jule::Ptr<_1ce06b0ac_ImportInfo>* _55245_imp) {
	if ((_1ce2396cb_findPackageBuiltinDef(&((*((*(_55245_imp))))._field_LinkPath), _55228_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type3);;
	};
	{
		auto expr = &((*((*((*(_55245_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7cc1961:;
		if (it != expr_end) {
			jule::Ptr<_1ce116894_SymbolTable> _55621_f = *it;
			{
				;
				jule::Any _55917_def = _1ce11990d_defByIdent(_55621_f.ptr(), _55228_ident, false);;
				if ((_55917_def != nullptr)) {
					return _55917_def;;
				};
			}
			_iter_next_1b7cc1961:;
			++it;
			goto _iter_begin_1b7cc1961;
		}
		_iter_end_1b7cc1961:;
	};
	return nullptr;;
}



inline jule::Bool _1b7cc7ea6_checkImportSelection(_1ce08b42e_Sema* _self_, jule::Ptr<_1cdeab4b4_Token>* _56743_ident, jule::Ptr<_1ce0b4105_Var>* _56759_s) {
	if ((!(_1ce094635_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1ce093dc6_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1ce094239_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ce06a474_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1ce093dc6_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b7ccc2a7_checkImportSelection(_1ce08b42e_Sema* _self_, jule::Ptr<_1cdeab4b4_Token>* _56743_ident, jule::Ptr<_1ce14bdd5_TypeAlias>* _56759_s) {
	if ((!(_1ce094635_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1ce093dc6_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1ce094239_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ce06a474_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1ce093dc6_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b7cd1542_checkImportSelection(_1ce08b42e_Sema* _self_, jule::Ptr<_1cdeab4b4_Token>* _56743_ident, jule::Ptr<_1cdee2990_Struct>* _56759_s) {
	if ((!(_1ce094635_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1ce093dc6_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1ce094239_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ce06a474_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1ce093dc6_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b7cd5a96_checkImportSelection(_1ce08b42e_Sema* _self_, jule::Ptr<_1cdeab4b4_Token>* _56743_ident, jule::Ptr<_1ce01ac0a_Trait>* _56759_s) {
	if ((!(_1ce094635_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1ce093dc6_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1ce094239_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ce06a474_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1ce093dc6_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b7cd9d31_checkImportSelection(_1ce08b42e_Sema* _self_, jule::Ptr<_1cdeab4b4_Token>* _56743_ident, jule::Ptr<_1ce01d416_Enum>* _56759_s) {
	if ((!(_1ce094635_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1ce093dc6_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1ce094239_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ce06a474_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1ce093dc6_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b7cde0bb_checkImportSelection(_1ce08b42e_Sema* _self_, jule::Ptr<_1cdeab4b4_Token>* _56743_ident, jule::Ptr<_1ce01eb21_TypeEnum>* _56759_s) {
	if ((!(_1ce094635_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1ce093dc6_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1ce094239_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ce06a474_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1ce093dc6_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b7ce3356_checkImportSelection(_1ce08b42e_Sema* _self_, jule::Ptr<_1cdeab4b4_Token>* _56743_ident, jule::Ptr<_1ce00792d_Fn>* _56759_s) {
	if ((!(_1ce094635_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1ce093dc6_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1ce094239_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ce06a474_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1ce093dc6_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _1ce096439_checkImportSelectedSelections(_1ce08b42e_Sema* _self_, jule::Ptr<_1ce06b0ac_ImportInfo>* _58153_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_58153_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7cc359a:;
		if (it != expr_end) {
			jule::Ptr<_1cdeab4b4_Token> _58316_ident = *it;
			{
				if ((*(_58316_ident))._field_Kind.equal("self", 4)) {
					goto _iter_next_1b7cc359a;
				};
				if (_1ce095801_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>((*(_58153_imp))), &((*_58316_ident.alloc)._field_Kind))) {
					_1ce093dc6_pushErr(_self_, _58316_ident, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_58316_ident.alloc)._field_Kind, &__jule_any_type4)}));
					_1ce094239_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1b7cc359a;
				};
				jule::Any _59517_def = _1ce095bec_getImportDef(_self_, &((*_58316_ident.alloc)._field_Kind), _58153_imp);;
				{
					auto &_match_expr{ _59517_def };
					
					if (_match_expr.type == &__jule_any_type3) {
						_case_begin_1b7cc5866:;
						{
							goto _iter_next_1b7cc359a;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1b7cc6070:;
						{
							jule::Ptr<_1ce0b4105_Var> _60121_v = _59517_def.unsafe_cast_ptr<_1ce0b4105_Var>();;
							__jule_func_result=(_1b7cc7ea6_checkImportSelection(_self_, &(_58316_ident), &(_60121_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1b7cc60d6:;
						{
							jule::Ptr<_1ce14bdd5_TypeAlias> _60421_ta = _59517_def.unsafe_cast_ptr<_1ce14bdd5_TypeAlias>();;
							__jule_func_result=(_1b7ccc2a7_checkImportSelection(_self_, &(_58316_ident), &(_60421_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1b7cc614c:;
						{
							jule::Ptr<_1cdee2990_Struct> _60721_s = _59517_def.unsafe_cast_ptr<_1cdee2990_Struct>();;
							__jule_func_result=(_1b7cd1542_checkImportSelection(_self_, &(_58316_ident), &(_60721_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1b7cc61b3:;
						{
							jule::Ptr<_1ce01ac0a_Trait> _61021_t = _59517_def.unsafe_cast_ptr<_1ce01ac0a_Trait>();;
							__jule_func_result=(_1b7cd5a96_checkImportSelection(_self_, &(_58316_ident), &(_61021_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_1b7cc6d2e:;
						{
							jule::Ptr<_1ce01d416_Enum> _61321_e = _59517_def.unsafe_cast_ptr<_1ce01d416_Enum>();;
							__jule_func_result=(_1b7cd9d31_checkImportSelection(_self_, &(_58316_ident), &(_61321_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type68) {
						_case_begin_1b7cc6d95:;
						{
							jule::Ptr<_1ce01eb21_TypeEnum> _61621_e = _59517_def.unsafe_cast_ptr<_1ce01eb21_TypeEnum>();;
							__jule_func_result=(_1b7cde0bb_checkImportSelection(_self_, &(_58316_ident), &(_61621_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type64) {
						_case_begin_1b7cc6e0b:;
						{
							jule::Ptr<_1ce00792d_Fn> _61921_f = _59517_def.unsafe_cast_ptr<_1ce00792d_Fn>();;
							__jule_func_result=(_1b7ce3356_checkImportSelection(_self_, &(_58316_ident), &(_61921_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_1b7cc5e60:;
						{
							_1ce093dc6_pushErr(_self_, _58316_ident, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*_58316_ident.alloc)._field_Kind, &__jule_any_type4)}));
							__jule_func_result=false;
							goto _iter_next_1b7cc359a;
						}
					}
					_match_end_1b7cc3c1b:;
				};
			}
			_iter_next_1b7cc359a:;
			++it;
			goto _iter_begin_1b7cc359a;
		}
		_iter_end_1b7cc359a:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b7ce7b30_checkImportsAllSelectionsFromCollection(_1ce08b42e_Sema* _self_, jule::Slice<jule::Ptr<_1ce0b4105_Var>>* _63062_s, jule::Ptr<_1cdeab4b4_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7ce989b:;
		if (it != expr_end) {
			jule::Ptr<_1ce0b4105_Var> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1b7cc7ea6_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1b7ce989b:;
			++it;
			goto _iter_begin_1b7ce989b;
		}
		_iter_end_1b7ce989b:;
	};
	return _63113_ok;;
}

inline jule::Bool _1b7ce8cb8_checkImportsAllSelectionsFromCollection(_1ce08b42e_Sema* _self_, jule::Slice<jule::Ptr<_1ce14bdd5_TypeAlias>>* _63062_s, jule::Ptr<_1cdeab4b4_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7cec0a7:;
		if (it != expr_end) {
			jule::Ptr<_1ce14bdd5_TypeAlias> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1b7ccc2a7_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1b7cec0a7:;
			++it;
			goto _iter_begin_1b7cec0a7;
		}
		_iter_end_1b7cec0a7:;
	};
	return _63113_ok;;
}

inline jule::Bool _1b7ceb518_checkImportsAllSelectionsFromCollection(_1ce08b42e_Sema* _self_, jule::Slice<jule::Ptr<_1cdee2990_Struct>>* _63062_s, jule::Ptr<_1cdeab4b4_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8226712:;
		if (it != expr_end) {
			jule::Ptr<_1cdee2990_Struct> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1b7cd1542_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1b8226712:;
			++it;
			goto _iter_begin_1b8226712;
		}
		_iter_end_1b8226712:;
	};
	return _63113_ok;;
}

inline jule::Bool _1b7ceccbc_checkImportsAllSelectionsFromCollection(_1ce08b42e_Sema* _self_, jule::Slice<jule::Ptr<_1ce00792d_Fn>>* _63062_s, jule::Ptr<_1cdeab4b4_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8228e2e:;
		if (it != expr_end) {
			jule::Ptr<_1ce00792d_Fn> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1b7ce3356_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1b8228e2e:;
			++it;
			goto _iter_begin_1b8228e2e;
		}
		_iter_end_1b8228e2e:;
	};
	return _63113_ok;;
}

inline jule::Bool _1b8228318_checkImportsAllSelectionsFromCollection(_1ce08b42e_Sema* _self_, jule::Slice<jule::Ptr<_1ce01ac0a_Trait>>* _63062_s, jule::Ptr<_1cdeab4b4_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b822b5d5:;
		if (it != expr_end) {
			jule::Ptr<_1ce01ac0a_Trait> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1b7cd5a96_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1b822b5d5:;
			++it;
			goto _iter_begin_1b822b5d5;
		}
		_iter_end_1b822b5d5:;
	};
	return _63113_ok;;
}

inline jule::Bool _1b822aa8a_checkImportsAllSelectionsFromCollection(_1ce08b42e_Sema* _self_, jule::Slice<jule::Ptr<_1ce01d416_Enum>>* _63062_s, jule::Ptr<_1cdeab4b4_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b822dc8b:;
		if (it != expr_end) {
			jule::Ptr<_1ce01d416_Enum> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1b7cd9d31_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1b822dc8b:;
			++it;
			goto _iter_begin_1b822dc8b;
		}
		_iter_end_1b822dc8b:;
	};
	return _63113_ok;;
}

inline jule::Bool _1b822d241_checkImportsAllSelectionsFromCollection(_1ce08b42e_Sema* _self_, jule::Slice<jule::Ptr<_1ce01eb21_TypeEnum>>* _63062_s, jule::Ptr<_1cdeab4b4_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b82314ca:;
		if (it != expr_end) {
			jule::Ptr<_1ce01eb21_TypeEnum> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1b7cde0bb_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1b82314ca:;
			++it;
			goto _iter_begin_1b82314ca;
		}
		_iter_end_1b82314ca:;
	};
	return _63113_ok;;
}



inline jule::Bool _1ce096b76_checkImportAllSelections(_1ce08b42e_Sema* _self_, jule::Ptr<_1ce06b0ac_ImportInfo>* _64044_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*((*(_64044_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7cc39b8:;
		if (it != expr_end) {
			jule::Ptr<_1ce116894_SymbolTable> *_64216_file = it;
			{
				__jule_func_result=(_1b7ce7b30_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64216_file))))._field_Vars), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1b7ce8cb8_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64216_file)).alloc)._field_TypeAliases), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1b7ceb518_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64216_file)).alloc)._field_Structs), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1b7ceccbc_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64216_file)).alloc)._field_Funcs), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1b8228318_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64216_file)).alloc)._field_Traits), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1b822aa8a_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64216_file)).alloc)._field_Enums), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1b822d241_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64216_file)).alloc)._field_TypeEnums), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
			}
			_iter_next_1b7cc39b8:;
			++it;
			goto _iter_begin_1b7cc39b8;
		}
		_iter_end_1b7cc39b8:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ce096eb7_checkImportSelections(_1ce08b42e_Sema* _self_, jule::Ptr<_1ce06b0ac_ImportInfo>* _65445_imp) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_65445_imp))))._field_Selected.len() > 0LL)) {
		__jule_func_result = _1ce096439_checkImportSelectedSelections(_self_, _65445_imp);
		return __jule_func_result;;
	} else if ((*((*(_65445_imp))))._field_ImportAll) {
		__jule_func_result = _1ce096b76_checkImportAllSelections(_self_, _65445_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ce097308_isUseAliasDuplication(_1ce08b42e_Sema* _self_, jule::Ptr<_1ce06b0ac_ImportInfo>* _66341_imp) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8233576:;
		if (it != expr_end) {
			jule::Ptr<_1ce06b0ac_ImportInfo> _66421_imp2 = *it;
			{
				if ((_66421_imp2 == (*(_66341_imp)))) {
					goto _iter_end_1b8233576;
				};
				if (((*(_66421_imp2))._field_Alias == (*((*(_66341_imp))))._field_Alias)) {
					return true;;
				};
				if ((((*_66421_imp2.alloc)._field_Ident == (*_66421_imp2.alloc)._field_LinkPath) && ((*_66421_imp2.alloc)._field_Ident == (*((*(_66341_imp))))._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1b8233576:;
			++it;
			goto _iter_begin_1b8233576;
		}
		_iter_end_1b8233576:;
	};
	return false;;
}



inline jule::Bool _1ce097649_checkImport(_1ce08b42e_Sema* _self_, jule::Ptr<_1ce06b0ac_ImportInfo>* _67935_imp) {
	if (((*((*(_67935_imp))))._field_Binded || ((*((*((*(_67935_imp))))._field_Package))._field_Files.len() == 0LL))) {
		return true;;
	};
	if ((*((*(_67935_imp))))._field_LinkPath.equal("std::unsafe", 11)) {
		if ((((*((*(_67935_imp))))._field_ImportAll || !((*((*(_67935_imp))))._field_Alias).empty()) || ((*((*(_67935_imp))))._field_Selected.len() > 0LL))) {
			_1ce093dc6_pushErr(_self_, (*((*(_67935_imp))))._field_Token, jule::Str::lit("expected plain use declaration for this package like: @", 55), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("use std::unsafe", 15), &__jule_any_type4)}));
			return false;;
		};
	};
	if (((*((*(_67935_imp))))._field_Alias.len() != 0LL)) {
		if (_1cdeadd9b_IsIgnoreIdent((*((*(_67935_imp))))._field_Alias)) {
			_1ce093dc6_pushErr(_self_, (*((*(_67935_imp))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		} else if (_1ce097308_isUseAliasDuplication(_self_, _67935_imp)) {
			_1ce093dc6_pushErr(_self_, (*((*(_67935_imp))))._field_Token, jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75), jule::Slice<jule::Any>::make({jule::Any((*((*(_67935_imp))))._field_Alias, &__jule_any_type4)}));
			_1ce094239_pushSuggestion(_self_, jule::Str::lit("rename alias for this use declaration to avoid duplication", 58), jule::Slice<jule::Any>());
		};
	};
	if ((!((*((*(_67935_imp))))._field_Duplicate))) {
		jule::Ptr<_1ce08b42e_Sema> _70217_sema = jule::new_ptr<_1ce08b42e_Sema>(_1ce08b42e_Sema{._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_1ce0b0a2a_check(_70217_sema, &((*(*((*(_67935_imp))))._field_Package.alloc)._field_Files));
		if (((*_70217_sema.alloc)._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append((*_70217_sema.alloc)._field_errors);;
			(*_70217_sema.alloc)._field_errors=nullptr;
			return false;;
		};
	};
	return _1ce096eb7_checkImportSelections(_self_, _67935_imp);;
}



inline void _1ce097847_checkImports(_1ce08b42e_Sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b823ca9c:;
		if (it != expr_end) {
			jule::Ptr<_1ce116894_SymbolTable> _71721_file = *it;
			{
				_1ce0939a8_setCurrentFile(_self_, _71721_file);
				{
					auto expr = &((*(_71721_file))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b823d74b:;
					if (it != expr_end) {
						jule::Ptr<_1ce06b0ac_ImportInfo> _71925_imp = *it;
						{
							jule::Bool _72017_ok = _1ce097649_checkImport(_self_, &(_71925_imp));;
							if ((!(_72017_ok))) {
								return;;
							};
						}
						_iter_next_1b823d74b:;
						++it;
						goto _iter_begin_1b823d74b;
					}
					_iter_end_1b823d74b:;
				};
			}
			_iter_next_1b823ca9c:;
			++it;
			goto _iter_begin_1b823ca9c;
		}
		_iter_end_1b823ca9c:;
	};
}



inline void _1ce097a45_implFileImpls(jule::Ptr<_1ce08b42e_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b823dc02:;
		if (it != expr_end) {
			jule::Ptr<_1ce044371_Impl> _73021_imp = *it;
			{
				_1ce0a70d7_implImpl(_self_, &(_73021_imp));
			}
			_iter_next_1b823dc02:;
			++it;
			goto _iter_begin_1b823dc02;
		}
		_iter_end_1b823dc02:;
	};
}



inline void _1ce097c43_implImpls(jule::Ptr<_1ce08b42e_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8240594:;
		if (it != expr_end) {
			jule::Ptr<_1ce116894_SymbolTable> _73621_file = *it;
			{
				_1ce0939a8_setCurrentFile(_self_.ptr(), _73621_file);
				_1ce097a45_implFileImpls(_self_);
			}
			_iter_next_1b8240594:;
			++it;
			goto _iter_begin_1b8240594;
		}
		_iter_end_1b8240594:;
	};
}



inline void _1ce097e41_checkEnums(jule::Ptr<_1ce08b42e_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b824163e:;
		if (it != expr_end) {
			jule::Ptr<_1ce116894_SymbolTable> _74321_file = *it;
			{
				_1ce0939a8_setCurrentFile(_self_.ptr(), _74321_file);
				{
					
					if ((!(_1ce0a3523_checkEnumDecls(_self_)))) {
						_case_begin_1b8241c5a:;
					}
					else if ((!(_1ce0a37a9_checkTypeEnumDecls(_self_)))) {
						_case_begin_1b8242321:;
					}
					_match_end_1b8242266:;
				};
			}
			_iter_next_1b824163e:;
			++it;
			goto _iter_begin_1b824163e;
		}
		_iter_end_1b824163e:;
	};
}



inline void _1ce09813e_checkFileInherits(jule::Ptr<_1ce08b42e_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b824319b:;
		if (it != expr_end) {
			jule::Ptr<_1ce01ac0a_Trait> _75321_t = *it;
			{
				jule::Bool _75413_ok = _1ce0a516d__checkTraitDeclInherits(_self_, &(_75321_t));;
				if ((!(_75413_ok))) {
					return;;
				};
			}
			_iter_next_1b824319b:;
			++it;
			goto _iter_begin_1b824319b;
		}
		_iter_end_1b824319b:;
	};
}



inline void _1ce09833c_checkInherits(jule::Ptr<_1ce08b42e_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b82444aa:;
		if (it != expr_end) {
			jule::Ptr<_1ce116894_SymbolTable> _76221_file = *it;
			{
				_1ce0939a8_setCurrentFile(_self_.ptr(), _76221_file);
				_1ce09813e_checkFileInherits(_self_);
			}
			_iter_next_1b82444aa:;
			++it;
			goto _iter_begin_1b82444aa;
		}
		_iter_end_1b82444aa:;
	};
}



inline _1ce15ea85_typeChecker _1ce0987e3_typeChecker(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Trait<_1ce16c7b8_Lookup> _76835_l, jule::Slice<jule::Ptr<_1ce14bdd5_TypeAlias>> _76850_generics, jule::Ptr<_1ce15da95_referencer> _76913_referencer) {
	_1ce15ea85_typeChecker _77013_tc = _1ce15ea85_typeChecker{._field_s=_self_, ._field_rootLookup=_76835_l, ._field_lookup=_76835_l, ._field_referencer=_76913_referencer, ._field_useGenerics=_76850_generics, };;
	{
		auto &_match_expr{ _76835_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b824638b:;
			{
				jule::Ptr<_1ce051acb_scopeChecker> _77917_hard = _1ce054e53_getHardRoot(_76835_l.cast_ptr<_1ce051acb_scopeChecker>(0));;
				_77013_tc._field_refers=(*((*(_77917_hard))._field_owner))._field_Refers;
			}
		}
		_match_end_1b8245ce7:;
	};
	if (((_76913_referencer != nullptr) && ((*_76913_referencer.alloc)._field_refs != nullptr))) {
		{
			auto &_match_expr{ (*(_76913_referencer))._field_owner };
			
			if (_match_expr.type == &__jule_any_type66) {
				_case_begin_1b8247c0b:;
				{
					_77013_tc._field_ownerAlias=(*(_76913_referencer))._field_owner.unsafe_cast_ptr<_1ce14bdd5_TypeAlias>();
				}
			}
			_match_end_1b8247ba6:;
		};
	};
	return _77013_tc;;
}



inline jule::Ptr<_1ce14cbc7_TypeKind> _1ce098d54_buildTypeWithRefers(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1cdec1a90_TypeDecl>* _79544_t, jule::Trait<_1ce16c7b8_Lookup> _79567_l, jule::Slice<jule::Ptr<_1ce14bdd5_TypeAlias>> _79613_generics, jule::Ptr<_1ce15da95_referencer> _79641_referencer) {
	return ({ auto _wrap_copy = _1ce0987e3_typeChecker(_self_, _79567_l, _79613_generics, _79641_referencer); _1ce167230_checkDecl(&_wrap_copy, _79544_t); });;
}



inline jule::Bool _1ce0993b5_checkTypeWithRefers(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce154d99_TypeSymbol>* _80244_t, jule::Trait<_1ce16c7b8_Lookup> _80264_l, jule::Slice<jule::Ptr<_1ce14bdd5_TypeAlias>> _80313_generics, jule::Ptr<_1ce15da95_referencer> _80341_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1ce15521d_checked((*(_80244_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_80244_t))))._field_Kind=_1ce098d54_buildTypeWithRefers(_self_, &((*((*(_80244_t))))._field_Decl), _80264_l, _80313_generics, _80341_referencer);
	__jule_func_result = _1ce15521d_checked((*(_80244_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1ce04201c_constraintChecker> _1ce09964b_constraintChecker(jule::Ptr<_1ce08b42e_Sema> _self_) {
	return jule::new_ptr<_1ce04201c_constraintChecker>(_1ce04201c_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _1ce099a47_checkType(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce154d99_TypeSymbol>* _81734_t, jule::Trait<_1ce16c7b8_Lookup> _81754_l) {
	return _1ce0993b5_checkTypeWithRefers(_self_, _81734_t, _81754_l, nullptr, nullptr);;
}



inline jule::Ptr<_1ce14cbc7_TypeKind> _1ce099eed_buildTypeWithGenerics(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1cdec1a90_TypeDecl>* _82346_t, jule::Slice<jule::Ptr<_1ce14bdd5_TypeAlias>> _82413_generics, jule::Ptr<_1ce00da00_ReferenceStack> _82441_refers) {
	jule::Ptr<_1ce15ea85_typeChecker> _82513_tc = jule::new_ptr<_1ce15ea85_typeChecker>(_1ce15ea85_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1ce16c7b8_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1ce16c7b8_Lookup>(_self_, 3), ._field_refers=_82441_refers, ._field_useGenerics=_82413_generics, });;
	return _1ce167230_checkDecl(_82513_tc.ptr(), _82346_t);;
}



inline jule::Ptr<_1ce14cbc7_TypeKind> _1ce09a680_selectType(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1cdec1a90_TypeDecl>* _84135_t) {
	jule::Ptr<_1ce15ea85_typeChecker> _84213_tc = jule::new_ptr<_1ce15ea85_typeChecker>(_1ce15ea85_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1ce16c7b8_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1ce16c7b8_Lookup>(_self_, 3), ._field_selection=true, });;
	return _1ce167230_checkDecl(_84213_tc.ptr(), _84135_t);;
}



inline jule::Ptr<_1ce11d934_Eval> _1ce09ab36_evalpd(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Trait<_1ce16c7b8_Lookup> _85330_l, jule::Ptr<_1ce14cbc7_TypeKind> _85345_p, jule::Ptr<_1ce0b4105_Var> _85363_owner) {
	jule::Ptr<_1ce11d934_Eval> _85413_e = jule::new_ptr<_1ce11d934_Eval>(_1ce11d934_Eval{._field_s=_self_, ._field_lookup=_85330_l, ._field_owner=_85363_owner, });;
	{
		auto &_match_expr{ _85330_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b8252045:;
			{
				(*(_85413_e))._field_unsafety=_1ce053e85_isUnsafe(_85330_l.cast_ptr<_1ce051acb_scopeChecker>(0));
			}
		}
		_match_end_1b8251ce2:;
	};
	(*_85413_e.alloc)._field_prefix=_85345_p;
	return _85413_e;;
}



inline jule::Ptr<_1ce11d934_Eval> _1ce09b032_evalp(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Trait<_1ce16c7b8_Lookup> _86829_l, jule::Ptr<_1ce14cbc7_TypeKind> _86844_p) {
	return _1ce09ab36_evalpd(_self_, _86829_l, _86844_p, nullptr);;
}



inline jule::Ptr<_1ce11d934_Eval> _1ce09b373_eval(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Trait<_1ce16c7b8_Lookup> _87328_l) {
	return _1ce09b032_evalp(_self_, _87328_l, nullptr);;
}



inline jule::Bool _1ce09b8d4_checkAssignType(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Bool _87735_destIsRef, jule::Ptr<_1ce14cbc7_TypeKind>* _87757_dest, jule::Ptr<_1ce11bc0c_Data>* _87814_d, jule::Ptr<_1cdeab4b4_Token> _87828_errorToken) {
	if ((*((*(_87814_d))))._field_Decl) {
		_1ce093dc6_pushErr(_self_.ptr(), _87828_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return false;;
	};
	if (_87735_destIsRef) {
		if ((!(_1ce14d3d1_Equal((*(_87757_dest)), (*((*(_87814_d))))._field_Kind)))) {
			_1ce093dc6_pushErr(_self_, _87828_errorToken, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*(_87757_dest)).ptr()), &__jule_any_type4),jule::Any(_1ce14d090_Str((*((*(_87814_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
	} else {
		jule::Ptr<_1ce105674_assignTypeChecker> _88917_atc = jule::new_ptr<_1ce105674_assignTypeChecker>(_1ce105674_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_87757_dest)), ._field_d=(*(_87814_d)), ._field_errorToken=_87828_errorToken});;
		jule::Bool _89513_ok = _1ce106642_check(_88917_atc.ptr());;
		if ((!(_89513_ok))) {
			return false;;
		};
	};
	if (((!(_1ce11c614_IsConst((*(_87814_d)).ptr()))) || (_1ce150328_Prim((*(_87757_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _90513_kind = (*(_1ce150328_Prim((*(_87757_dest)).ptr())))._field_Kind;;
	{
		
		if (_22be14e2a_IsSigInt(_90513_kind)) {
			_case_begin_1b8259877:;
			{
				_22be190d8_SetI64((*((*(_87814_d))))._field_Constant.ptr(), _22be18813_AsI64((*((*(_87814_d))))._field_Constant));
			}
		}
		else if (_22be15238_IsUnsigInt(_90513_kind)) {
			_case_begin_1b8259921:;
			{
				_22be19391_SetU64((*((*(_87814_d))))._field_Constant.ptr(), _22be18a99_AsU64((*((*(_87814_d))))._field_Constant));
			}
		}
		else if (_22be15843_IsFloat(_90513_kind)) {
			_case_begin_1b8259987:;
			{
				_22be19baa_SetF64((*((*(_87814_d))))._field_Constant.ptr(), _22be18d30_AsF64((*((*(_87814_d))))._field_Constant));
			}
		}
		_match_end_1b82597bc:;
	};
	return true;;
}



inline jule::Bool _1ce09bd8a__checkTypeCompatibility(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce14cbc7_TypeKind>* _91948_dest, jule::Ptr<_1ce14cbc7_TypeKind>* _91970_src, jule::Ptr<_1cdeab4b4_Token> _92013_errorToken) {
	if (((*(_91970_src)) == nullptr)) {
		return false;;
	};
	if ((_1ce15214e_Tup((*(_91970_src)).ptr()) != nullptr)) {
		return false;;
	};
	_1ce1038c5_typeCompatibilityChecker _92813_tcc = _1ce1038c5_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_91948_dest)), ._field_src=(*(_91970_src)), ._field_errorToken=_92013_errorToken};;
	return _1ce10508b_check(&_92813_tcc);;
}



inline jule::Bool _1ce09c341_checkTypeCompatibility(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce14cbc7_TypeKind>* _93747_dest, jule::Ptr<_1ce14cbc7_TypeKind>* _93814_src, jule::Ptr<_1cdeab4b4_Token>* _93835_errorToken) {
	if (_1ce09bd8a__checkTypeCompatibility(_self_, _93747_dest, _93814_src, (*(_93835_errorToken)))) {
		return true;;
	};
	_1ce093dc6_pushErr(_self_, (*(_93835_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*(_93747_dest)).ptr()), &__jule_any_type4),jule::Any(_1ce14d090_Str((*(_93814_src)).ptr()), &__jule_any_type4)}));
	return false;;
}



inline void _1ce09c75e_pushCompatiblityError(_1ce08b42e_Sema* _self_, jule::Ptr<_1ce14cbc7_TypeKind>* _94645_dest, jule::Ptr<_1ce11bc0c_Data>* _94667_src, jule::Ptr<_1cdeab4b4_Token>* _94714_errorToken) {
	if ((*((*(_94667_src))))._field_untyped) {
		{
			
			if (_22be1a13e_IsI64((*((*(_94667_src))))._field_Constant.ptr())) {
				_case_begin_1b8261dac:;
				{
					_1ce093dc6_pushErr(_self_, (*(_94714_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*(_94645_dest)).ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("untyped integer", 15), &__jule_any_type4)}));
					return;;
				}
			}
			else if (_22be1a3c5_IsU64((*((*(_94667_src))))._field_Constant.ptr())) {
				_case_begin_1b8261e56:;
				{
					_1ce093dc6_pushErr(_self_, (*(_94714_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*(_94645_dest)).ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("untyped unsigned integer", 24), &__jule_any_type4)}));
					return;;
				}
			}
			else if (_22be1ab78_IsF64((*((*(_94667_src))))._field_Constant.ptr())) {
				_case_begin_1b8261ebc:;
				{
					_1ce093dc6_pushErr(_self_, (*(_94714_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*(_94645_dest)).ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("untyped float", 13), &__jule_any_type4)}));
					return;;
				}
			}
			_match_end_1b8261c8b:;
		};
	};
	_1ce093dc6_pushErr(_self_, (*(_94714_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*(_94645_dest)).ptr()), &__jule_any_type4),jule::Any(_1ce14d090_Str((*((*(_94667_src))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Bool _1ce09cc15_checkTypeCompatibility1(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce14cbc7_TypeKind>* _96448_dest, jule::Ptr<_1ce11bc0c_Data>* _96470_src, jule::Ptr<_1cdeab4b4_Token>* _96514_errorToken) {
	if (_1ce09bd8a__checkTypeCompatibility(_self_, _96448_dest, &((*((*(_96470_src))))._field_Kind), (*(_96514_errorToken)))) {
		return true;;
	};
	_1ce09c75e_pushCompatiblityError(_self_, _96448_dest, _96470_src, _96514_errorToken);
	return false;;
}



inline jule::Ptr<_1ce14cbc7_TypeKind> _1ce09d1bb_buildNonGenericTypeKind(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1cdec1a90_TypeDecl>* _97948_ast, jule::Slice<jule::Ptr<_1cdecdc9a_GenericDecl>>* _98014_generics, jule::Slice<jule::Ptr<_1ce14cbc7_TypeKind>>* _98050_ignored) {
	jule::Ptr<_1ce15ea85_typeChecker> _98113_tc = jule::new_ptr<_1ce15ea85_typeChecker>(_1ce15ea85_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1ce16c7b8_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1ce16c7b8_Lookup>(_self_, 3), ._field_ignoreGenerics=(*(_98014_generics)), ._field_ignoredGenerics=_98050_ignored, });;
	return _1ce167230_checkDecl(_98113_tc.ptr(), _97948_ast);;
}



inline jule::Bool _1ce09d5b7_buildFnNonGenericTypeKinds(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce00a832_FnIns>* _99151_f, jule::Slice<jule::Ptr<_1ce14cbc7_TypeKind>>* _99167_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_1cdecdc9a_GenericDecl>> _99317_generics = nullptr;;
	if (_1ce008137_IsMethod((*((*(_99151_f))))._field_Decl.ptr())) {
		_99317_generics=jule::append((*(*((*(_99151_f))))._field_Decl.alloc)._field_Generics,(*((*(*((*(_99151_f))))._field_Decl.alloc)._field_Owner))._field_Generics);
	} else {
		_99317_generics=(*((*((*(_99151_f))))._field_Decl))._field_Generics;
	};
	{
		auto expr = &((*((*(_99151_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b826b229:;
		if (it != expr_end) {
			jule::Ptr<_1ce009886_ParamIns> _100021_p = *it;
			{
				if ((!(_1ce006575_IsSelf((*(_100021_p))._field_Decl.ptr())))) {
					(*_100021_p.alloc)._field_Kind=_1ce09d1bb_buildNonGenericTypeKind(_self_, &((*((*(*_100021_p.alloc)._field_Decl.alloc)._field_Kind))._field_Decl), &(_99317_generics), _99167_ignored);
					__jule_func_result=(__jule_func_result && ((*_100021_p.alloc)._field_Kind != nullptr));
				};
			}
			_iter_next_1b826b229:;
			++it;
			goto _iter_begin_1b826b229;
		}
		_iter_end_1b826b229:;
	};
	if ((!(_1ce007da1_IsVoid((*((*(_99151_f))))._field_Decl.ptr())))) {
		(*((*(_99151_f))))._field_Result=_1ce09d1bb_buildNonGenericTypeKind(_self_, &((*((*((*(*((*(_99151_f))))._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl), &(_99317_generics), _99167_ignored);
		__jule_func_result=(__jule_func_result && ((*((*(_99151_f))))._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1ce00a832_FnIns> _1ce09d908_getTraitCheckFnKind(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce00792d_Fn>* _101344_f) {
	if (((*((*(_101344_f))))._field_Instances.len() == 1LL)) {
		return (*((*(_101344_f))))._field_Instances[0LL];;
	};
	jule::Ptr<_1ce00a832_FnIns> _101713_ins = _1ce008e07_instanceForce((*(_101344_f)));;
	jule::Ptr<_1ce15ea85_typeChecker> _101913_tc = jule::new_ptr<_1ce15ea85_typeChecker>(_1ce15ea85_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1ce16c7b8_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1ce16c7b8_Lookup>(_self_, 3), });;
	{
		auto expr = &((*(_101713_ins))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8272362:;
		if (it != expr_end) {
			jule::Ptr<_1ce009886_ParamIns> _102421_p = *it;
			{
				if ((!(_1ce006575_IsSelf((*(_102421_p))._field_Decl.ptr())))) {
					(*_102421_p.alloc)._field_Kind=_1ce167230_checkDecl(_101913_tc.ptr(), &((*((*(*_102421_p.alloc)._field_Decl.alloc)._field_Kind))._field_Decl));
				};
			}
			_iter_next_1b8272362:;
			++it;
			goto _iter_begin_1b8272362;
		}
		_iter_end_1b8272362:;
	};
	if ((!(_1ce007da1_IsVoid((*(_101344_f)).ptr())))) {
		(*_101713_ins.alloc)._field_Result=_1ce167230_checkDecl(_101913_tc, &((*((*((*((*(_101344_f))))._field_Result))._field_Kind))._field_Decl));
	};
	return _101713_ins;;
}



inline jule::Bool _1ce09ddae_checkConstraintsFn(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce00a832_FnIns>* _103643_f, jule::Ptr<_1cdeab4b4_Token>* _103659_et, jule::Ptr<_1ce00a832_FnIns> _103675_exist) {
	jule::Ptr<_1ce04201c_constraintChecker> _103713_cc = _1ce09964b_constraintChecker(_self_);;
	(*(_103713_cc))._field_et=(*(_103659_et));
	(*_103713_cc.alloc)._field_fi=(*(_103643_f));
	if ((_103675_exist != nullptr)) {
		{
			auto expr = &((*_103675_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b8276861:;
			if (it != expr_end) {
				jule::I32 _104118_i = it - expr->begin();
				jule::Ptr<_1ce14b2e1_InsGeneric> _104125_g = *it;
				{
					(*((*((*(_103643_f))))._field_Generics[_104118_i]))._field_Constraint=(*(_104125_g))._field_Constraint;
				}
				_iter_next_1b8276861:;
				++it;
				_104118_i++;
				goto _iter_begin_1b8276861;
			}
			_iter_end_1b8276861:;
		};
	} else {
		(*_103713_cc.alloc)._field_uniq=true;
	};
	return _1ce042e52_check(_103713_cc);;
}



inline jule::Bool _1ce09e365_checkConstraintsStruct(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1cdee571d_StructIns>* _105047_s, jule::Ptr<_1cdeab4b4_Token>* _105067_et, jule::Ptr<_1cdee571d_StructIns> _105083_exist) {
	jule::Ptr<_1ce04201c_constraintChecker> _105113_cc = _1ce09964b_constraintChecker(_self_);;
	(*(_105113_cc))._field_et=(*(_105067_et));
	(*_105113_cc.alloc)._field_si=(*(_105047_s));
	if ((_105083_exist != nullptr)) {
		{
			auto expr = &((*_105083_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b82799eb:;
			if (it != expr_end) {
				jule::I32 _105518_i = it - expr->begin();
				jule::Ptr<_1ce14b2e1_InsGeneric> _105525_g = *it;
				{
					(*((*((*(_105047_s))))._field_Generics[_105518_i]))._field_Constraint=(*(_105525_g))._field_Constraint;
				}
				_iter_next_1b82799eb:;
				++it;
				_105518_i++;
				goto _iter_begin_1b82799eb;
			}
			_iter_end_1b82799eb:;
		};
	} else {
		(*_105113_cc.alloc)._field_uniq=true;
	};
	return _1ce042e52_check(_105113_cc);;
}



inline jule::Bool _1ce09e761_fnEnvironment(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce00a832_FnIns>* _106738_f, jule::Fn<jule::Bool(jule::Ptr<_1ce08b42e_Sema>*,jule::Slice<jule::Ptr<_1ce14bdd5_TypeAlias>>*)> _106749_algo) {
	jule::Ptr<_1ce08b42e_Sema> _106813_sema = (*((*((*(_106738_f))))._field_Decl))._field_sema;;
	jule::Ptr<_1ce116894_SymbolTable> _106913_old = (*((*(*((*(_106738_f))))._field_Decl.alloc)._field_sema))._field_file;;
	__JULE_DEFER({
		_1ce0939a8_setCurrentFile((*(*((*(_106738_f))))._field_Decl.alloc)._field_sema, _106913_old);
	});;
	jule::Ptr<_1ce116894_SymbolTable> _107113_file = _1ce08a175_findFile(&((*(*(*((*(_106738_f))))._field_Decl.alloc)._field_sema.alloc)._field_files), &((*((*(*((*(_106738_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_107113_file != nullptr)) {
		_1ce0939a8_setCurrentFile((*(*((*(_106738_f))))._field_Decl.alloc)._field_sema, _107113_file);
	};
	jule::I32 _107613_size = (*((*(_106738_f))))._field_Generics.len();;
	if ((((*((*(_106738_f))))._field_Decl != nullptr) && ((*(*((*(_106738_f))))._field_Decl.alloc)._field_Owner != nullptr))) {
		_107613_size+=(*(*(*((*(_106738_f))))._field_Decl.alloc)._field_Owner.alloc)._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1ce14bdd5_TypeAlias>> _108113_generics = jule::Slice<jule::Ptr<_1ce14bdd5_TypeAlias>>::alloc(0LL, _107613_size);;
	_1ce089d01_appendGenericTypeAliases(&(_108113_generics), _106738_f);
	jule::Bool _10849_ok = _106749_algo(&(_106813_sema), &(_108113_generics));;
	if ((_106813_sema != _self_)) {
		(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,(*(_106813_sema))._field_errors);
		(*_106813_sema.alloc)._field_errors=nullptr;
	};
	return _10849_ok;;
}



inline void _1ce09ea19_checkFnParamKind(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce009886_ParamIns>* _109441_p) {
	(*((*((*(_109441_p))))._field_Kind))._field_Variadic=(*((*((*(_109441_p))))._field_Decl))._field_Variadic;
	if (((*(*((*(_109441_p))))._field_Decl.alloc)._field_Reference && (!(_1ce169188_isValidForRef(&((*((*(_109441_p))))._field_Kind)))))) {
		_1ce093dc6_pushErr(_self_.ptr(), (*(*((*(_109441_p))))._field_Decl.alloc)._field_Token, jule::Str::lit("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*((*(_109441_p))))._field_Kind), &__jule_any_type4)}));
	};
}



inline jule::Bool _1ce09ed5a_reloadFnInsTypes(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce00a832_FnIns> _110140_f) {
	if ((_1ce00bcb7_IsBuiltin(_110140_f.ptr()) || _1ce00c04d_IsAnon(_110140_f))) {
		return true;;
	};
	return _1ce09e761_fnEnvironment(_self_, &(_110140_f), jule::Fn<jule::Bool(jule::Ptr<_1ce08b42e_Sema>*,jule::Slice<jule::Ptr<_1ce14bdd5_TypeAlias>>*)>([=](jule::Ptr<_1ce08b42e_Sema>* _110543_sema, jule::Slice<jule::Ptr<_1ce14bdd5_TypeAlias>>* _110561_generics) mutable -> jule::Bool {
		jule::Bool _110617_ok = true;;
		{
			auto expr = &((*_110140_f.alloc)._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b8288686:;
			if (it != expr_end) {
				jule::Ptr<_1ce009886_ParamIns> _110725_p = *it;
				{
					if (_1ce006575_IsSelf((*(_110725_p))._field_Decl.ptr())) {
						if (_1ce00680b_IsRef((*_110725_p.alloc)._field_Decl)) {
							(*_110725_p.alloc)._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(jule::new_ptr<_1ce1592cc_Sptr>(_1ce1592cc_Sptr{._field_Elem=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>((*_110140_f.alloc)._field_Owner, 0)})}), 21)});
						} else {
							(*_110725_p.alloc)._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>((*_110140_f.alloc)._field_Owner, 0)});
						};
					} else {
						(*(_110725_p))._field_Kind=_1ce099eed_buildTypeWithGenerics((*(_110543_sema)), &((*((*((*_110725_p.alloc)._field_Decl))._field_Kind))._field_Decl), (*(_110561_generics)), (*_110140_f.alloc)._field_Refers);
						if (((*_110725_p.alloc)._field_Kind != nullptr)) {
							_1ce09ea19_checkFnParamKind(_self_, &(_110725_p));
						} else {
							_110617_ok=false;
						};
					};
				}
				_iter_next_1b8288686:;
				++it;
				goto _iter_begin_1b8288686;
			}
			_iter_end_1b8288686:;
		};
		if ((!(_1ce007da1_IsVoid((*_110140_f.alloc)._field_Decl.ptr())))) {
			(*_110140_f.alloc)._field_Result=_1ce099eed_buildTypeWithGenerics((*(_110543_sema)), &((*((*((*(*_110140_f.alloc)._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl), (*(_110561_generics)), (*_110140_f.alloc)._field_Refers);
			_110617_ok=(((*_110140_f.alloc)._field_Result != nullptr) && _110617_ok);
		};
		return _110617_ok;;
	}));;
}



inline jule::Bool _1ce0a0311_checkRefValidityForInitExpr(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Bool _113747_leftMut, jule::Ptr<_1ce11bc0c_Data>* _113767_d, jule::Ptr<_1cdeab4b4_Token>* _113782_errorToken) {
	if ((!(_1ce088abe_isValidModelForRef(&((*((*(_113767_d))))._field_Model))))) {
		_1ce093dc6_pushErr(_self_.ptr(), (*(_113782_errorToken)), jule::Str::lit("references requires variable based expression for assignment", 60), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_113747_leftMut && (!((*((*(_113767_d))))._field_Mutable)))) {
		_1ce093dc6_pushErr(_self_, (*(_113782_errorToken)), jule::Str::lit("mutable reference cannot point to immutable data", 48), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1ce0a0652_isMutRiskyStruct(_1ce08b42e_Sema* _self_, jule::Ptr<_1cdee571d_StructIns>* _115432_s) {
	{
		auto expr = &((*((*(_115432_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8291a9b:;
		if (it != expr_end) {
			jule::Ptr<_1cdee4b6d_FieldIns> *_115516_f = it;
			{
				if ((((*((*((*(_115516_f))))._field_Decl))._field_Mutable && _1ce14e558_Mutable((*(*(_115516_f)).alloc)._field_Kind.ptr())) && _1ce094635_isAccessibleDefine(_self_, (*(*(*(_115516_f)).alloc)._field_Decl.alloc)._field_Public, (*(*(*(_115516_f)).alloc)._field_Decl.alloc)._field_Token))) {
					return true;;
				};
			}
			_iter_next_1b8291a9b:;
			++it;
			goto _iter_begin_1b8291a9b;
		}
		_iter_end_1b8291a9b:;
	};
	return false;;
}



inline jule::Bool _1ce0a0c6d_checkValidityForInitExpr(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Bool _118144_leftMut, jule::Bool _118159_leftRef, jule::Ptr<_1ce14cbc7_TypeKind>* _118210_leftKind, jule::Ptr<_1ce11bc0c_Data>* _118236_d, jule::Ptr<_1cdeab4b4_Token>* _118251_errorToken) {
	if ((_118144_leftMut && (!((*((*(_118236_d))))._field_Mutable)))) {
		if (_1ce14e558_Mutable((*((*(_118236_d))))._field_Kind.ptr())) {
			_1ce093dc6_pushErr(_self_.ptr(), (*(_118251_errorToken)), jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*((*(_118236_d))))._field_Kind), &__jule_any_type4)}));
			return false;;
		};
		jule::Ptr<_1cdee571d_StructIns> _119013_s = _1ce15189b_Struct((*((*(_118236_d))))._field_Kind);;
		if (((_119013_s != nullptr) && _1ce0a0652_isMutRiskyStruct(_self_, &(_119013_s)))) {
			_1ce093dc6_pushErr(_self_, (*(_118251_errorToken)), jule::Str::lit("struct @ cannot copied due to field which is stores mutable data", 64), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*((*(_118236_d))))._field_Kind), &__jule_any_type4)}));
			return false;;
		};
	};
	if (_118159_leftRef) {
		if ((!(_1ce0a0311_checkRefValidityForInitExpr(_self_, _118144_leftMut, _118236_d, _118251_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1ce105674_assignTypeChecker> _120113_atc = jule::new_ptr<_1ce105674_assignTypeChecker>(_1ce105674_assignTypeChecker{._field_s=_self_, ._field_d=(*(_118236_d)), ._field_errorToken=(*(_118251_errorToken))});;
	return _1ce105d8e_checkValidity(_120113_atc.ptr());;
}



inline jule::Bool _1ce0a1169_checkTypeAliasDeclKind(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce14bdd5_TypeAlias>* _120947_ta, jule::Trait<_1ce16c7b8_Lookup> _120967_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ce116894_SymbolTable> _121013_old = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1ce0939a8_setCurrentFile(_self_, _121013_old);
	});;
	if (((*((*(_120947_ta))))._field_Token != nullptr)) {
		jule::Ptr<_1ce116894_SymbolTable> _121517_file = _1ce08a175_findFile(&((*_self_.alloc)._field_files), &((*(*((*(_120947_ta))))._field_Token.alloc)._field_File));;
		if ((_121517_file != nullptr)) {
			_1ce0939a8_setCurrentFile(_self_, _121517_file);
		};
	};
	__jule_func_result=_1ce0993b5_checkTypeWithRefers(_self_, &((*((*(_120947_ta))))._field_Kind), _120967_l, nullptr, jule::new_ptr<_1ce15da95_referencer>(_1ce15da95_referencer{._field_ident=(*((*(_120947_ta))))._field_Ident, ._field_owner=jule::Any((*(_120947_ta)), &__jule_any_type66), ._field_refs=(&((*((*(_120947_ta))))._field_Refers))}));
	if (((__jule_func_result && (_1ce1510e8_Arr((*((*((*(_120947_ta))))._field_Kind))._field_Kind.ptr()) != nullptr)) && (*(_1ce1510e8_Arr((*(*((*(_120947_ta))))._field_Kind.alloc)._field_Kind)))._field_Auto)) {
		_1ce093dc6_pushErr(_self_, (*((*(*((*(_120947_ta))))._field_Kind.alloc)._field_Decl))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1ce0a14cc_checkTypeAliasDecl(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce14bdd5_TypeAlias>* _123243_ta, jule::Trait<_1ce16c7b8_Lookup> _123263_l) {
	if (_1cdeadd9b_IsIgnoreIdent((*((*(_123243_ta))))._field_Ident)) {
		_1ce093dc6_pushErr(_self_.ptr(), (*((*(_123243_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_1ce0a1169_checkTypeAliasDeclKind(_self_, _123243_ta, _123263_l);
}



inline void _1ce0a1785_checkTypeAliasDeclDup(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce14bdd5_TypeAlias>* _124046_ta) {
	if (_1cdeadd9b_IsIgnoreIdent((*((*(_124046_ta))))._field_Ident)) {
		_1ce093dc6_pushErr(_self_.ptr(), (*((*(_124046_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1ce094adb_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_124046_ta))), &((*((*(_124046_ta))))._field_Ident), (*((*(_124046_ta))))._field_Binded)) {
		_1ce093dc6_pushErr(_self_, (*((*(_124046_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_124046_ta))))._field_Ident, &__jule_any_type4)}));
		_1ce094239_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1ce0a1169_checkTypeAliasDeclKind(_self_, _124046_ta, jule::Trait<_1ce16c7b8_Lookup>(_self_, 3));
}



inline jule::Bool _1ce0a1a1b_checkTypeAliasDecls(jule::Ptr<_1ce08b42e_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b82a475c:;
		if (it != expr_end) {
			jule::Ptr<_1ce14bdd5_TypeAlias> _125321_ta = *it;
			{
				_1ce0a1785_checkTypeAliasDeclDup(_self_, &(_125321_ta));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b82a475c:;
			++it;
			goto _iter_begin_1b82a475c;
		}
		_iter_end_1b82a475c:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1b82d1316_checkEnumItemsDup(_1ce08b42e_Sema* _self_, jule::Slice<jule::Ptr<_1ce01c899_EnumItem>> _126439_items) {
	{
		auto expr = &(_126439_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b82d2658:;
		if (it != expr_end) {
			jule::Ptr<_1ce01c899_EnumItem> *_126516_item = it;
			{
				if (((*((*(_126516_item))))._field_Ident).empty()) {
					goto _iter_next_1b82d2658;
				} else if (_1cdeadd9b_IsIgnoreIdent((*((*(_126516_item))))._field_Ident)) {
					_1ce093dc6_pushErr(_self_, (*(*(_126516_item)).alloc)._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_126439_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b82d4281:;
						if (it != expr_end) {
							jule::Ptr<_1ce01c899_EnumItem> *_127124_citem = it;
							{
								if (((*(_126516_item)) == (*(_127124_citem)))) {
									goto _iter_end_1b82d4281;
								} else if (((*((*(_126516_item))))._field_Ident == (*((*(_127124_citem))))._field_Ident)) {
									_1ce093dc6_pushErr(_self_, (*(*(_126516_item)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_126516_item)).alloc)._field_Ident, &__jule_any_type4)}));
									_1ce094239_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1b82d4281;
								};
							}
							_iter_next_1b82d4281:;
							++it;
							goto _iter_begin_1b82d4281;
						}
						_iter_end_1b82d4281:;
					};
				};
			}
			_iter_next_1b82d2658:;
			++it;
			goto _iter_begin_1b82d2658;
		}
		_iter_end_1b82d2658:;
	};
}

inline void _1b82dd631_checkEnumItemsDup(_1ce08b42e_Sema* _self_, jule::Slice<jule::Ptr<_1ce01e549_TypeEnumItem>> _126439_items) {
	{
		auto expr = &(_126439_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b82de92e:;
		if (it != expr_end) {
			jule::Ptr<_1ce01e549_TypeEnumItem> *_126516_item = it;
			{
				if (((*((*(_126516_item))))._field_Ident).empty()) {
					goto _iter_next_1b82de92e;
				} else if (_1cdeadd9b_IsIgnoreIdent((*((*(_126516_item))))._field_Ident)) {
					_1ce093dc6_pushErr(_self_, (*(*(_126516_item)).alloc)._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_126439_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b82e1557:;
						if (it != expr_end) {
							jule::Ptr<_1ce01e549_TypeEnumItem> *_127124_citem = it;
							{
								if (((*(_126516_item)) == (*(_127124_citem)))) {
									goto _iter_end_1b82e1557;
								} else if (((*((*(_126516_item))))._field_Ident == (*((*(_127124_citem))))._field_Ident)) {
									_1ce093dc6_pushErr(_self_, (*(*(_126516_item)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_126516_item)).alloc)._field_Ident, &__jule_any_type4)}));
									_1ce094239_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1b82e1557;
								};
							}
							_iter_next_1b82e1557:;
							++it;
							goto _iter_begin_1b82e1557;
						}
						_iter_end_1b82e1557:;
					};
				};
			}
			_iter_next_1b82de92e:;
			++it;
			goto _iter_begin_1b82de92e;
		}
		_iter_end_1b82de92e:;
	};
}



inline void _1ce0a207c_checkEnumItemsStr(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce01d416_Enum>* _128442_e) {
	jule::Ptr<_1ce11d934_Eval> _128513_eval = _1ce09b373_eval(_self_, jule::Trait<_1ce16c7b8_Lookup>(_self_, 3));;
	{
		auto expr = &((*((*(_128442_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b82a64c8:;
		if (it != expr_end) {
			jule::Ptr<_1ce01c899_EnumItem> _128621_item = *it;
			{
				if (_1ce01cc51_AutoExpr(_128621_item.ptr())) {
					(*_128621_item.alloc)._field_Value=jule::new_ptr<_1ce11cd84_Value>(_1ce11cd84_Value{._field_Data=jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Constant=static__22be16e0a_NewStr((*_128621_item.alloc)._field_Ident)})});
					(*((*((*_128621_item.alloc)._field_Value))._field_Data))._field_Model=jule::Any((*(*(*_128621_item.alloc)._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
				} else {
					jule::Ptr<_1ce11bc0c_Data> _129521_d = _1ce13bb94_evalExpr(_128513_eval, (*((*(_128621_item))._field_Value))._field_Expr);;
					if ((_129521_d == nullptr)) {
						goto _iter_next_1b82a64c8;
					};
					if ((!(_1ce11c614_IsConst(_129521_d.ptr())))) {
						_1ce093dc6_pushErr(_self_, (*((*(*_128621_item.alloc)._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
					};
					_1ce09b8d4_checkAssignType(_self_, false, &((*((*((*(_128442_e))))._field_Kind))._field_Kind), &(_129521_d), (*_128621_item.alloc)._field_Token);
					(*(*_128621_item.alloc)._field_Value.alloc)._field_Data=_129521_d;
				};
			}
			_iter_next_1b82a64c8:;
			++it;
			goto _iter_begin_1b82a64c8;
		}
		_iter_end_1b82a64c8:;
	};
}



inline void _1b82b1c42_checkEnumItemInt(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce11d934_Eval>* _131046_eval, jule::Ptr<_1ce01d416_Enum>* _131064_e, jule::Ptr<_1ce1557a1_Prim>* _131075_prim, jule::Ptr<_1ce01c899_EnumItem>* _131093_item, jule::U64* _1310115_n) {
	if (_1ce01cc51_AutoExpr((*(_131093_item)).ptr())) {
		(*((*(_131093_item))))._field_Value=jule::new_ptr<_1ce11cd84_Value>(_1ce11cd84_Value{._field_Data=jule::new_ptr<_1ce11bc0c_Data>()});
		{
			
{
				_case_begin_1b82b410c:;
				{
					(*((*((*((*(_131093_item))))._field_Value))._field_Data))._field_Constant=static__22be16877_NewU64((*(_1310115_n)));
				}
			}
			_match_end_1b82b4481:;
		};
		(*((*((*((*(_131093_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*(*((*(_131093_item))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1ce11bc0c_Data> _132517_d = _1ce13bb94_evalExpr((*(_131046_eval)), (*((*((*(_131093_item))))._field_Value))._field_Expr);;
		if ((_132517_d == nullptr)) {
			return;;
		};
		if ((!(_1ce11c614_IsConst(_132517_d.ptr())))) {
			_1ce093dc6_pushErr(_self_.ptr(), (*((*(*((*(_131093_item))))._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1ce09b8d4_checkAssignType(_self_, false, &((*((*((*(_131064_e))))._field_Kind))._field_Kind), &(_132517_d), (*((*(_131093_item))))._field_Token);
		(*(*((*(_131093_item))))._field_Value.alloc)._field_Data=_132517_d;
		{
			
{
				_case_begin_1b82b8661:;
				{
					(*(_1310115_n))=_22be17cc9_ReadU64((*((*(*((*(_131093_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1b82b97d8:;
		};
	};
}

inline void _1b82c1ceb_checkEnumItemInt(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce11d934_Eval>* _131046_eval, jule::Ptr<_1ce01d416_Enum>* _131064_e, jule::Ptr<_1ce1557a1_Prim>* _131075_prim, jule::Ptr<_1ce01c899_EnumItem>* _131093_item, jule::I64* _1310115_n) {
	if (_1ce01cc51_AutoExpr((*(_131093_item)).ptr())) {
		(*((*(_131093_item))))._field_Value=jule::new_ptr<_1ce11cd84_Value>(_1ce11cd84_Value{._field_Data=jule::new_ptr<_1ce11bc0c_Data>()});
		{
			
{
				_case_begin_1b82c4a35:;
				{
					(*((*((*((*(_131093_item))))._field_Value))._field_Data))._field_Constant=static__22be165ad_NewI64((*(_1310115_n)));
				}
			}
			_match_end_1b82c44c4:;
		};
		(*((*((*((*(_131093_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*(*((*(_131093_item))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1ce11bc0c_Data> _132517_d = _1ce13bb94_evalExpr((*(_131046_eval)), (*((*((*(_131093_item))))._field_Value))._field_Expr);;
		if ((_132517_d == nullptr)) {
			return;;
		};
		if ((!(_1ce11c614_IsConst(_132517_d.ptr())))) {
			_1ce093dc6_pushErr(_self_.ptr(), (*((*(*((*(_131093_item))))._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1ce09b8d4_checkAssignType(_self_, false, &((*((*((*(_131064_e))))._field_Kind))._field_Kind), &(_132517_d), (*((*(_131093_item))))._field_Token);
		(*(*((*(_131093_item))))._field_Value.alloc)._field_Data=_132517_d;
		{
			
{
				_case_begin_1b82c9a29:;
				{
					(*(_1310115_n))=_22be17a43_ReadI64((*((*(*((*(_131093_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1b82c99b3:;
		};
	};
}



inline void _1b82acde7_checkEnumItemsInt1(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce1557a1_Prim>* _134544_prim, jule::Ptr<_1ce01d416_Enum>* _134562_e) {
	jule::U64 _134613_max = static_cast<jule::U64>(0LLU);;
	{
		
{
			_case_begin_1b82aeaec:;
			{
				_134613_max=_22be1182d_MaxU(_1ce155ae2_Str((*(_134544_prim)).ptr()));
			}
		}
		_match_end_1b82ae921:;
	};
	jule::Ptr<_1ce11d934_Eval> _135613_eval = _1ce09b373_eval(_self_, jule::Trait<_1ce16c7b8_Lookup>(_self_, 3));;
	jule::U64 _135713_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1ce01c899_EnumItem> _135813_first = (*((*(_134562_e))))._field_Items[0LL];;
	_1b82b1c42_checkEnumItemInt(_self_, &(_135613_eval), _134562_e, _134544_prim, &(_135813_first), &(_135713_n));
	if (((*((*(_135813_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1b82b365b:;
				{
					_135713_n=_22be18a99_AsU64((*(*(*_135813_first.alloc)._field_Value.alloc)._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1b82ba146:;
		};
	};
	{
		auto expr = (*((*(_134562_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b82b65c6:;
		if (it != expr_end) {
			jule::Ptr<_1ce01c899_EnumItem> _137021_item = *it;
			{
				if (((_1ce01cc51_AutoExpr(_137021_item.ptr()) && (_135713_n > 0LLU)) && ((_134613_max - _135713_n) <= 0LLU))) {
					_1ce093dc6_pushErr(_self_, (*_137021_item.alloc)._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1b82b65c6;
				};
				(_135713_n)++;
				_1b82b1c42_checkEnumItemInt(_self_, &(_135613_eval), _134562_e, _134544_prim, &(_137021_item), &(_135713_n));
			}
			_iter_next_1b82b65c6:;
			++it;
			goto _iter_begin_1b82b65c6;
		}
		_iter_end_1b82b65c6:;
	};
}

inline void _1b82bd435_checkEnumItemsInt1(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce1557a1_Prim>* _134544_prim, jule::Ptr<_1ce01d416_Enum>* _134562_e) {
	jule::I64 _134613_max = static_cast<jule::I64>(0LL);;
	{
		
{
			_case_begin_1b82beb95:;
			{
				_134613_max=_22be11564_MaxI(_1ce155ae2_Str((*(_134544_prim)).ptr()));
			}
		}
		_match_end_1b82be843:;
	};
	jule::Ptr<_1ce11d934_Eval> _135613_eval = _1ce09b373_eval(_self_, jule::Trait<_1ce16c7b8_Lookup>(_self_, 3));;
	jule::I64 _135713_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1ce01c899_EnumItem> _135813_first = (*((*(_134562_e))))._field_Items[0LL];;
	_1b82c1ceb_checkEnumItemInt(_self_, &(_135613_eval), _134562_e, _134544_prim, &(_135813_first), &(_135713_n));
	if (((*((*(_135813_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1b82c0bda:;
				{
					_135713_n=_22be18813_AsI64((*(*(*_135813_first.alloc)._field_Value.alloc)._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1b82c369e:;
		};
	};
	{
		auto expr = (*((*(_134562_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b82cb5db:;
		if (it != expr_end) {
			jule::Ptr<_1ce01c899_EnumItem> _137021_item = *it;
			{
				if (((_1ce01cc51_AutoExpr(_137021_item.ptr()) && (_135713_n > 0LL)) && ((_134613_max - _135713_n) <= 0LL))) {
					_1ce093dc6_pushErr(_self_, (*_137021_item.alloc)._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1b82cb5db;
				};
				(_135713_n)++;
				_1b82c1ceb_checkEnumItemInt(_self_, &(_135613_eval), _134562_e, _134544_prim, &(_137021_item), &(_135713_n));
			}
			_iter_next_1b82cb5db:;
			++it;
			goto _iter_begin_1b82cb5db;
		}
		_iter_end_1b82cb5db:;
	};
}



inline void _1ce0a2c2b_checkEnumItemsInt(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce01d416_Enum>* _138042_e) {
	jule::Ptr<_1ce1557a1_Prim> _13819_prim = _1ce150328_Prim((*((*((*(_138042_e))))._field_Kind))._field_Kind.ptr());;
	{
		
		if (_22be14e2a_IsSigInt((*(_13819_prim))._field_Kind)) {
			_case_begin_1b82aca1d:;
			{
				_1b82bd435_checkEnumItemsInt1(_self_, &(_13819_prim), _138042_e);
			}
		}
		else {
			_case_begin_1b82ac677:;
			{
				_1b82acde7_checkEnumItemsInt1(_self_, &(_13819_prim), _138042_e);
			}
		}
		_match_end_1b82ac611:;
	};
}



inline void _1ce0a2ed4_checkEnumDecl(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce01d416_Enum>* _139038_e) {
	if (_1cdeadd9b_IsIgnoreIdent((*((*(_139038_e))))._field_Ident)) {
		_1ce093dc6_pushErr(_self_.ptr(), (*((*(_139038_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1ce094adb_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_139038_e))), &((*((*(_139038_e))))._field_Ident), false)) {
		_1ce093dc6_pushErr(_self_, (*((*(_139038_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_139038_e))))._field_Ident, &__jule_any_type4)}));
		_1ce094239_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_139038_e))))._field_Items.len() == 0LL)) {
		_1ce093dc6_pushErr(_self_.ptr(), (*((*(_139038_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_139038_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_1b82d1316_checkEnumItemsDup(_self_, (*((*(_139038_e))))._field_Items);
	if (((*((*(_139038_e))))._field_Kind != nullptr)) {
		if ((!(_1ce099a47_checkType(_self_, &((*((*(_139038_e))))._field_Kind), jule::Trait<_1ce16c7b8_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		(*((*(_139038_e))))._field_Kind=(*(_1ce238422_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	jule::Ptr<_1ce1557a1_Prim> _141413_t = _1ce150328_Prim((*((*((*(_139038_e))))._field_Kind))._field_Kind.ptr());;
	if ((_141413_t == nullptr)) {
		_1ce093dc6_pushErr(_self_, (*((*(_139038_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1ce158c38_IsStr(_141413_t.ptr())) {
			_case_begin_1b82d8164:;
			{
				_1ce0a207c_checkEnumItemsStr(_self_, _139038_e);
			}
		}
		else if (_22be15502_IsInt(_1ce155ae2_Str(_141413_t.ptr()))) {
			_case_begin_1b82d7d67:;
			{
				_1ce0a2c2b_checkEnumItemsInt(_self_, _139038_e);
			}
		}
		else {
			_case_begin_1b82d7d01:;
			{
				_1ce093dc6_pushErr(_self_, (*((*(_139038_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b82d744e:;
	};
}



inline void _1ce0a328c_checkTypeEnumDecl(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce01eb21_TypeEnum>* _143142_e) {
	if (_1cdeadd9b_IsIgnoreIdent((*((*(_143142_e))))._field_Ident)) {
		_1ce093dc6_pushErr(_self_.ptr(), (*((*(_143142_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1ce094adb_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_143142_e))), &((*((*(_143142_e))))._field_Ident), false)) {
		_1ce093dc6_pushErr(_self_, (*((*(_143142_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_143142_e))))._field_Ident, &__jule_any_type4)}));
		_1ce094239_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_143142_e))))._field_Items.len() == 0LL)) {
		_1ce093dc6_pushErr(_self_.ptr(), (*((*(_143142_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_143142_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_1b82dd631_checkEnumItemsDup(_self_, (*((*(_143142_e))))._field_Items);
	{
		auto expr = &((*((*(_143142_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b82e07a9:;
		if (it != expr_end) {
			jule::Ptr<_1ce01e549_TypeEnumItem> _144521_item = *it;
			{
				if (((*(_144521_item))._field_Kind == nullptr)) {
					_1ce093dc6_pushErr(_self_, (*_144521_item.alloc)._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					goto _iter_next_1b82e07a9;
				};
				jule::Bool _145013_ok = _1ce099a47_checkType(_self_, &((*_144521_item.alloc)._field_Kind), jule::Trait<_1ce16c7b8_Lookup>(_self_, 3));;
				if ((!(_145013_ok))) {
					goto _iter_next_1b82e07a9;
				};
				jule::Ptr<_1ce1557a1_Prim> _145413_p = _1ce150328_Prim((*((*_144521_item.alloc)._field_Kind))._field_Kind.ptr());;
				if (((_145413_p != nullptr) && _1ce158ebe_IsAny(_145413_p))) {
					_1ce093dc6_pushErr(_self_, (*_144521_item.alloc)._field_Token, jule::Str::lit("the <any> type is not allowed for type-enum declarations", 56), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1b82e07a9:;
			++it;
			goto _iter_begin_1b82e07a9;
		}
		_iter_end_1b82e07a9:;
	};
	if (((*((*(_143142_e))))._field_Items.len() == 1LL)) {
		jule::Ptr<_1ce01e549_TypeEnumItem> _146017_item = (*((*(_143142_e))))._field_Items[0LL];;
		_1ce14cbc7_TypeKind _146113_tk = _1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>((*(_143142_e)), 4)};;
		if ((((*((*(_146017_item))._field_Kind))._field_Kind != nullptr) && _1ce14d3d1_Equal((*((*_146017_item.alloc)._field_Kind))._field_Kind, ((jule::Ptr<_1ce14cbc7_TypeKind>)((&(_146113_tk))))))) {
			_1ce093dc6_pushErr(_self_, (*_146017_item.alloc)._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_1ce01ee62_Str((*(_143142_e)).ptr()), &__jule_any_type4)}));
		};
	};
}



inline jule::Bool _1ce0a3523_checkEnumDecls(jule::Ptr<_1ce08b42e_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b80be665:;
		if (it != expr_end) {
			jule::Ptr<_1ce01d416_Enum> _147221_e = *it;
			{
				_1ce0a2ed4_checkEnumDecl(_self_, &(_147221_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b80be665:;
			++it;
			goto _iter_begin_1b80be665;
		}
		_iter_end_1b80be665:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ce0a37a9_checkTypeEnumDecls(jule::Ptr<_1ce08b42e_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b80c0d1a:;
		if (it != expr_end) {
			jule::Ptr<_1ce01eb21_TypeEnum> _148421_e = *it;
			{
				_1ce0a328c_checkTypeEnumDecl(_self_, &(_148421_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b80c0d1a:;
			++it;
			goto _iter_begin_1b80c0d1a;
		}
		_iter_end_1b80c0d1a:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ce0a3aea_checkDeclGenerics(_1ce08b42e_Sema* _self_, jule::Slice<jule::Ptr<_1cdecdc9a_GenericDecl>>* _149437_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _149437_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b80c22c2:;
		if (it != expr_end) {
			jule::I32 _149613_i = it - expr->begin();
			jule::Ptr<_1cdecdc9a_GenericDecl> *_149616_g = it;
			{
				if (_1cdeadd9b_IsIgnoreIdent((*((*(_149616_g))))._field_Ident)) {
					_1ce093dc6_pushErr(_self_, (*(*(_149616_g)).alloc)._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1b80c22c2;
				};
				_julec_label_1b80c39dd:;
				{
					auto expr = _149437_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b80c3aed:;
					if (it != expr_end) {
						jule::I32 _150517_j = it - expr->begin();
						jule::Ptr<_1cdecdc9a_GenericDecl> *_150520_ct = it;
						{
							{
								
								if ((_150517_j >= _149613_i)) {
									_case_begin_1b80c4714:;
									{
										goto _iter_end_1b80c3aed;
									}
								}
								else if (((*(*(_149616_g)).alloc)._field_Ident == (*((*(_150520_ct))))._field_Ident)) {
									_case_begin_1b80c479c:;
									{
										_1ce093dc6_pushErr(_self_, (*(*(_149616_g)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_149616_g)).alloc)._field_Ident, &__jule_any_type4)}));
										_1ce094239_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1b80c3aed;
									}
								}
								_match_end_1b80c4615:;
							};
						}
						_iter_next_1b80c3aed:;
						++it;
						_150517_j++;
						goto _iter_begin_1b80c3aed;
					}
					_iter_end_1b80c3aed:;
				};
			}
			_iter_next_1b80c22c2:;
			++it;
			_149613_i++;
			goto _iter_begin_1b80c22c2;
		}
		_iter_end_1b80c22c2:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ce0a3e3b_checkFnDeclParamsDup(_1ce08b42e_Sema* _self_, jule::Ptr<_1ce00792d_Fn>* _152140_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_1b80c6a24:;
	{
		auto expr = &((*((*(_152140_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b80c6d10:;
		if (it != expr_end) {
			jule::I32 _152413_i = it - expr->begin();
			jule::Ptr<_1ce005e59_Param> *_152416_p = it;
			{
				{
					auto expr = &((*((*(_152140_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b80c79d1:;
					if (it != expr_end) {
						jule::Ptr<_1cdecdc9a_GenericDecl> *_152620_g = it;
						{
							if (((*((*(_152416_p))))._field_Ident == (*((*(_152620_g))))._field_Ident)) {
								__jule_func_result=false;
								_1ce093dc6_pushErr(_self_, (*(*(_152416_p)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_152416_p)).alloc)._field_Ident, &__jule_any_type4)}));
								_1ce094239_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								goto _iter_next_1b80c6d10;
							};
						}
						_iter_next_1b80c79d1:;
						++it;
						goto _iter_begin_1b80c79d1;
					}
					_iter_end_1b80c79d1:;
				};
				_julec_label_1b80c92eb:;
				{
					auto expr = &((*((*(_152140_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b80c7ea9:;
					if (it != expr_end) {
						jule::I32 _153617_j = it - expr->begin();
						jule::Ptr<_1ce005e59_Param> *_153620_jp = it;
						{
							{
								
								if ((_153617_j >= _152413_i)) {
									_case_begin_1b80ca2b9:;
									{
										goto _iter_end_1b80c7ea9;
									}
								}
								else if (_1cdeadd9b_IsIgnoreIdent((*(*(_152416_p)).alloc)._field_Ident) || _1cdeadd9b_IsIgnoreIdent((*((*(_153620_jp))))._field_Ident) || _1cdeae165_IsAnonIdent((*(*(_152416_p)).alloc)._field_Ident) || _1cdeae165_IsAnonIdent((*(*(_153620_jp)).alloc)._field_Ident)) {
									_case_begin_1b80ca352:;
									{
										goto _iter_end_1b80c7ea9;
									}
								}
								else if (((*(*(_152416_p)).alloc)._field_Ident == (*((*(_153620_jp))))._field_Ident)) {
									_case_begin_1b80ca3b8:;
									{
										__jule_func_result=false;
										_1ce093dc6_pushErr(_self_, (*(*(_152416_p)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_152416_p)).alloc)._field_Ident, &__jule_any_type4)}));
										_1ce094239_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_next_1b80c6d10;
									}
								}
								_match_end_1b80ca176:;
							};
						}
						_iter_next_1b80c7ea9:;
						++it;
						_153617_j++;
						goto _iter_begin_1b80c7ea9;
					}
					_iter_end_1b80c7ea9:;
				};
			}
			_iter_next_1b80c6d10:;
			++it;
			_152413_i++;
			goto _iter_begin_1b80c6d10;
		}
		_iter_end_1b80c6d10:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ce0a427c_checkFnDeclResultDup(_1ce08b42e_Sema* _self_, jule::Ptr<_1ce00792d_Fn>* _155840_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1ce007da1_IsVoid((*(_155840_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*(*((*(_155840_f))))._field_Result.alloc)._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b80cddb1:;
		if (it != expr_end) {
			jule::I32 _156513_i = it - expr->begin();
			jule::Ptr<_1cdeab4b4_Token> *_156516_v = it;
			{
				if ((_1cdeadd9b_IsIgnoreIdent((*((*(_156516_v))))._field_Kind) || _1cdeae165_IsAnonIdent((*(*(_156516_v)).alloc)._field_Kind))) {
					goto _iter_next_1b80cddb1;
				};
				{
					auto expr = &((*((*(_155840_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b80d0445:;
					if (it != expr_end) {
						jule::Ptr<_1cdecdc9a_GenericDecl> *_157020_g = it;
						{
							if (((*(*(_156516_v)).alloc)._field_Kind == (*((*(_157020_g))))._field_Ident)) {
								goto _julec_label_1b80d424b;
							};
						}
						_iter_next_1b80d0445:;
						++it;
						goto _iter_begin_1b80d0445;
					}
					_iter_end_1b80d0445:;
				};
				{
					auto expr = &((*((*(_155840_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b80d1886:;
					if (it != expr_end) {
						jule::Ptr<_1ce005e59_Param> *_157620_p = it;
						{
							if (((*(*(_156516_v)).alloc)._field_Kind == (*((*(_157620_p))))._field_Ident)) {
								goto _julec_label_1b80d424b;
							};
						}
						_iter_next_1b80d1886:;
						++it;
						goto _iter_begin_1b80d1886;
					}
					_iter_end_1b80d1886:;
				};
				_julec_label_1b80d2601:;
				{
					auto expr = &((*((*((*(_155840_f))))._field_Result))._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b80d30b3:;
					if (it != expr_end) {
						jule::I32 _158417_j = it - expr->begin();
						jule::Ptr<_1cdeab4b4_Token> *_158420_jv = it;
						{
							{
								
								if ((_158417_j >= _156513_i)) {
									_case_begin_1b80d3b0d:;
									{
										goto _iter_end_1b80d30b3;
									}
								}
								else if (((*((*(_158420_jv))))._field_Kind == (*(*(_156516_v)).alloc)._field_Kind)) {
									_case_begin_1b80d3b96:;
									{
										goto _julec_label_1b80d424b;
									}
								}
								_match_end_1b80d3a0e:;
							};
						}
						_iter_next_1b80d30b3:;
						++it;
						_158417_j++;
						goto _iter_begin_1b80d30b3;
					}
					_iter_end_1b80d30b3:;
				};
				goto _iter_next_1b80cddb1;
				_julec_label_1b80d424b:;
				_1ce093dc6_pushErr(_self_, (*(_156516_v)), jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_156516_v)).alloc)._field_Kind, &__jule_any_type4)}));
				_1ce094239_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1b80cddb1:;
			++it;
			_156513_i++;
			goto _iter_begin_1b80cddb1;
		}
		_iter_end_1b80cddb1:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ce0a45bd_checkFnVariadicParam(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce00792d_Fn>* _160345_f) {
	if (((*((*(_160345_f))))._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_1ce005e59_Param> _160713_param = (*((*(_160345_f))))._field_Params[((*((*(_160345_f))))._field_Params.len() - 1LL)];;
	if (((*(_160713_param))._field_Variadic && (*_160713_param.alloc)._field_Reference)) {
		_1ce093dc6_pushErr(_self_.ptr(), (*_160713_param.alloc)._field_Token, jule::Str::lit("variadic storage cannot be reference", 36), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _1ce0a4876_checkFnDeclPrototype(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce00792d_Fn>* _161645_f) {
	if (((*((*(_161645_f))))._field_Exceptional && (*((*(_161645_f))))._field_Binded)) {
		_1ce093dc6_pushErr(_self_.ptr(), (*((*(_161645_f))))._field_Token, jule::Str::lit("binded defines cannot be exceptional", 36), jule::Slice<jule::Any>());
		return;;
	};
	if ((*((*(_161645_f))))._field_Exceptional) {
		if (_1ce0083bd_IsEntryPoint((*(_161645_f)).ptr())) {
			_1ce093dc6_pushErr(_self_, (*((*(_161645_f))))._field_Token, jule::Str::lit("entry point cannot be exceptional", 33), jule::Slice<jule::Any>());
		} else if (_1ce008654_IsInit((*(_161645_f)).ptr())) {
			_1ce093dc6_pushErr(_self_, (*((*(_161645_f))))._field_Token, jule::Str::lit("initializer function cannot be exceptional", 42), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1ce0a3aea_checkDeclGenerics(_self_, &((*((*(_161645_f))))._field_Generics))))) {
			_case_begin_1b80db187:;
		}
		else if ((!(_1ce0a3e3b_checkFnDeclParamsDup(_self_, _161645_f)))) {
			_case_begin_1b80db1ed:;
		}
		else if ((!(_1ce0a427c_checkFnDeclResultDup(_self_, _161645_f)))) {
			_case_begin_1b80db264:;
		}
		else if ((!(_1ce0a45bd_checkFnVariadicParam(_self_, _161645_f)))) {
			_case_begin_1b80db2ca:;
		}
		_match_end_1b80d97a1:;
	};
}



inline jule::Bool _1ce0a4d2c_catchTraitInheritCycle(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce01ac0a_Trait> _163842_t1, jule::Ptr<_1ce01ac0a_Trait> _163858_t2, _22ab0b88c_StrBuilder* _163875_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*_163858_t2.alloc)._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b80dd83d:;
		if (it != expr_end) {
			jule::Ptr<_1ce154d99_TypeSymbol> _164021_i = *it;
			{
				if (((*(_164021_i))._field_Kind == nullptr)) {
					goto _iter_next_1b80dd83d;
				};
				jule::Ptr<_1ce01ac0a_Trait> _164417_t3 = _1ce151b32_Trait((*_164021_i.alloc)._field_Kind.ptr());;
				if ((_163842_t1 == _164417_t3)) {
					_1ce0a9aac_pushCycleError(_self_.ptr(), &((*(_163858_t2))._field_Ident), &((*(_164417_t3))._field_Ident), _163875_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1ce0a4d2c_catchTraitInheritCycle(_self_, _163842_t1, _164417_t3, _163875_message)))) {
					_1ce0a9aac_pushCycleError(_self_, &((*_163858_t2.alloc)._field_Ident), &((*_164417_t3.alloc)._field_Ident), _163875_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b80dd83d:;
			++it;
			goto _iter_begin_1b80dd83d;
		}
		_iter_end_1b80dd83d:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ce0a516d__checkTraitDeclInherits(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce01ac0a_Trait>* _165748_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_165748_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b80e20b1:;
		if (it != expr_end) {
			jule::I32 _165914_i = it - expr->begin();
			jule::Ptr<_1ce154d99_TypeSymbol> _165921_it = *it;
			{
				if ((!(_1ce099a47_checkType(_self_, &(_165921_it), jule::Trait<_1ce16c7b8_Lookup>(_self_, 3))))) {
					__jule_func_result=false;
					goto _iter_next_1b80e20b1;
				};
				jule::Ptr<_1ce01ac0a_Trait> _166417_t2 = _1ce151b32_Trait((*(_165921_it))._field_Kind.ptr());;
				if ((_166417_t2 == nullptr)) {
					_1ce093dc6_pushErr(_self_, (*((*_165921_it.alloc)._field_Decl))._field_Token, jule::Str::lit("trait @ cannot implement @, type should be trait", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_165748_t))))._field_Ident, &__jule_any_type4),jule::Any(_1ce14d090_Str((*_165921_it.alloc)._field_Kind), &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1b80e20b1;
				};
				{
					auto expr = &((*((*(_165748_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b80e54e3:;
					if (it != expr_end) {
						jule::I32 _167017_j = it - expr->begin();
						jule::Ptr<_1ce154d99_TypeSymbol> _167020_it2 = *it;
						{
							if ((_167017_j >= _165914_i)) {
								goto _iter_end_1b80e54e3;
							};
							if ((((*(_167020_it2))._field_Kind != nullptr) && _1ce14d3d1_Equal((*_165921_it.alloc)._field_Kind, (*_167020_it2.alloc)._field_Kind))) {
								_1ce093dc6_pushErr(_self_, (*(*_165921_it.alloc)._field_Decl.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_166417_t2))._field_Ident, &__jule_any_type4)}));
								__jule_func_result=false;
								goto _iter_end_1b80e54e3;
							};
						}
						_iter_next_1b80e54e3:;
						++it;
						_167017_j++;
						goto _iter_begin_1b80e54e3;
					}
					_iter_end_1b80e54e3:;
				};
				if (((*(_165748_t)) == _166417_t2)) {
					_1ce093dc6_pushErr(_self_, (*(*_165921_it.alloc)._field_Decl.alloc)._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_165748_t))))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				} else {
					_22ab0b88c_StrBuilder _168421_message = static__22ab0bb56_New(64LL);;
					__jule_func_result=(__jule_func_result && _1ce0a4d2c_catchTraitInheritCycle(_self_, (*(_165748_t)), _166417_t2, &(_168421_message)));
					if ((_22ab16248_Len(&_168421_message) > 0LL)) {
						jule::Str _168725_errMsg = _22ab15cb4_Str(&_168421_message);;
						_22ab15eb2_Clear(&_168421_message);
						_1ce0a9aac_pushCycleError(_self_, &((*((*(_165748_t))))._field_Ident), &((*(_166417_t2))._field_Ident), &(_168421_message));
						_168725_errMsg+=_22ab15cb4_Str(&_168421_message);
						_1ce093dc6_pushErr(_self_, (*(*_165921_it.alloc)._field_Decl.alloc)._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_168725_errMsg, &__jule_any_type4)}));
					};
				};
			}
			_iter_next_1b80e20b1:;
			++it;
			_165914_i++;
			goto _iter_begin_1b80e20b1;
		}
		_iter_end_1b80e20b1:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1ce0a5426_checkTraitDeclInherits(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce01ac0a_Trait>* _169847_t) {
	{
		auto expr = &((*((*(_169847_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b80ea383:;
		if (it != expr_end) {
			jule::I32 _169914_i = it - expr->begin();
			jule::Ptr<_1ce154d99_TypeSymbol> _169921_it = *it;
			{
				jule::Ptr<_1ce01ac0a_Trait> _170017_t1 = _1ce151b32_Trait((*(_169921_it))._field_Kind.ptr());;
				{
					auto expr = &((*((*(_169847_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b80ed3db:;
					if (it != expr_end) {
						jule::I32 _170118_j = it - expr->begin();
						jule::Ptr<_1ce154d99_TypeSymbol> _170125_it2 = *it;
						{
							if ((_170118_j == _169914_i)) {
								goto _iter_next_1b80ed3db;
							};
							jule::Ptr<_1ce01ac0a_Trait> _170521_t2 = _1ce151b32_Trait((*(_170125_it2))._field_Kind);;
							{
								auto expr = &((*(_170017_t1))._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b80eeb4b:;
								if (it != expr_end) {
									jule::Ptr<_1ce00792d_Fn> _170629_t1m = *it;
									{
										jule::Ptr<_1ce00792d_Fn> _170725_t2m = _1ce01b8a9_FindMethod(_170521_t2.ptr(), (*(_170629_t1m))._field_Ident);;
										if ((_170725_t2m == nullptr)) {
											goto _iter_next_1b80eeb4b;
										};
										jule::Ptr<_1ce00a832_FnIns> _171121_t1f = _1ce09d908_getTraitCheckFnKind(_self_, &(_170629_t1m));;
										jule::Ptr<_1ce00a832_FnIns> _171221_t2f = _1ce09d908_getTraitCheckFnKind(_self_, &(_170725_t2m));;
										if ((!(_1ce00b79a_equalTrait(_171121_t1f, &(_171221_t2f))))) {
											_1ce093dc6_pushErr(_self_, (*((*_169921_it.alloc)._field_Decl))._field_Token, jule::Str::lit("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87), jule::Slice<jule::Any>::make({jule::Any((*((*(_169847_t))))._field_Ident, &__jule_any_type4),jule::Any((*_170521_t2.alloc)._field_Ident, &__jule_any_type4),jule::Any(_1ce00c6d0_GetKindStr(_171121_t1f, true), &__jule_any_type4),jule::Any(_1ce00c6d0_GetKindStr(_171221_t2f.ptr(), true), &__jule_any_type4)}));
											return;;
										};
									}
									_iter_next_1b80eeb4b:;
									++it;
									goto _iter_begin_1b80eeb4b;
								}
								_iter_end_1b80eeb4b:;
							};
						}
						_iter_next_1b80ed3db:;
						++it;
						_170118_j++;
						goto _iter_begin_1b80ed3db;
					}
					_iter_end_1b80ed3db:;
				};
			}
			_iter_next_1b80ea383:;
			++it;
			_169914_i++;
			goto _iter_begin_1b80ea383;
		}
		_iter_end_1b80ea383:;
	};
}



inline void _1ce0a56ce_checkTraitDeclMethod(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce00792d_Fn>* _172345_f) {
	if (_1cdeadd9b_IsIgnoreIdent((*((*(_172345_f))))._field_Ident)) {
		_1ce093dc6_pushErr(_self_.ptr(), (*((*(_172345_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1cdeae165_IsAnonIdent((*((*(_172345_f))))._field_Ident)) {
		_1ce093dc6_pushErr(_self_.ptr(), (*((*(_172345_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	(*((*(_172345_f))))._field_sema=_self_;
	_1ce0a4876_checkFnDeclPrototype(_self_, _172345_f);
	jule::Ptr<_1ce00a832_FnIns> _173113_ins = _1ce00918d_instance((*(_172345_f)));;
	_1ce09ed5a_reloadFnInsTypes(_self_, _173113_ins);
	(*(_173113_ins))._field_reloaded=true;
	_1ce00949b_appendInstance((*(_172345_f)).ptr(), &(_173113_ins));
}



inline void _1ce0a5987_checkTraitDeclMethods(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce01ac0a_Trait>* _173746_t) {
	{
		auto expr = &((*((*(_173746_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8106c96:;
		if (it != expr_end) {
			jule::I32 _173814_i = it - expr->begin();
			jule::Ptr<_1ce00792d_Fn> _173821_f = *it;
			{
				_1ce0a56ce_checkTraitDeclMethod(_self_, &(_173821_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1ce01c03b_findMethodInherit((*(_173746_t)).ptr(), &((*(_173821_f))._field_Ident)) != nullptr)) {
					_1ce093dc6_pushErr(_self_, (*_173821_f.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_173821_f.alloc)._field_Ident, &__jule_any_type4)}));
					_1ce094239_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					goto _iter_next_1b8106c96;
				};
				_julec_label_1b810869e:;
				{
					auto expr = &((*((*(_173746_t))))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b8109c88:;
					if (it != expr_end) {
						jule::I32 _175417_j = it - expr->begin();
						jule::Ptr<_1ce00792d_Fn> _175420_jf = *it;
						{
							{
								
								if ((_175417_j >= _173814_i)) {
									_case_begin_1b810a7d3:;
									{
										goto _iter_end_1b8109c88;
									}
								}
								else if (((*_173821_f.alloc)._field_Ident == (*(_175420_jf))._field_Ident)) {
									_case_begin_1b810a86b:;
									{
										_1ce093dc6_pushErr(_self_, (*_173821_f.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_173821_f.alloc)._field_Ident, &__jule_any_type4)}));
										_1ce094239_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_end_1b8109c88;
									}
								}
								_match_end_1b810a6d4:;
							};
						}
						_iter_next_1b8109c88:;
						++it;
						_175417_j++;
						goto _iter_begin_1b8109c88;
					}
					_iter_end_1b8109c88:;
				};
			}
			_iter_next_1b8106c96:;
			++it;
			_173814_i++;
			goto _iter_begin_1b8106c96;
		}
		_iter_end_1b8106c96:;
	};
}



inline void _1ce0a5c40_checkTraitDecl(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce01ac0a_Trait>* _177339_t) {
	if (_1cdeadd9b_IsIgnoreIdent((*((*(_177339_t))))._field_Ident)) {
		_1ce093dc6_pushErr(_self_.ptr(), (*((*(_177339_t))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1ce094adb_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_177339_t))), &((*((*(_177339_t))))._field_Ident), false)) {
		_1ce093dc6_pushErr(_self_, (*((*(_177339_t))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_177339_t))))._field_Ident, &__jule_any_type4)}));
		_1ce094239_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1ce0a5426_checkTraitDeclInherits(_self_, _177339_t);
	_1ce0a5987_checkTraitDeclMethods(_self_, _177339_t);
}



inline jule::Bool _1ce0a5ec6_checkTraitDecls(jule::Ptr<_1ce08b42e_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8110bd4:;
		if (it != expr_end) {
			jule::Ptr<_1ce01ac0a_Trait> _178721_t = *it;
			{
				_1ce0a5c40_checkTraitDecl(_self_, &(_178721_t));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b8110bd4:;
			++it;
			goto _iter_begin_1b8110bd4;
		}
		_iter_end_1b8110bd4:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ce0a63c2_checkTraitImplMethods(_1ce08b42e_Sema* _self_, jule::Ptr<_1ce01ac0a_Trait>* _179745_base, jule::Ptr<_1ce044371_Impl>* _179760_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_179760_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8112697:;
		if (it != expr_end) {
			jule::Ptr<_1ce00792d_Fn> *_179916_f = it;
			{
				if ((_1ce01b8a9_FindMethod((*(_179745_base)).ptr(), (*((*(_179916_f))))._field_Ident) == nullptr)) {
					_1ce093dc6_pushErr(_self_, (*(*(_179916_f)).alloc)._field_Token, jule::Str::lit("undefined identifier: trait @ has no define @", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_179745_base))))._field_Ident, &__jule_any_type4),jule::Any((*(*(_179916_f)).alloc)._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1b8112697:;
			++it;
			goto _iter_begin_1b8112697;
		}
		_iter_end_1b8112697:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ce0a67bd_implToStruct(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1cdee2990_Struct>* _180837_dest, jule::Ptr<_1ce044371_Impl>* _180857_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_180857_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8114db4:;
		if (it != expr_end) {
			jule::Ptr<_1ce00792d_Fn> _181221_f = *it;
			{
				if (((_1cdee360b_FindMethod((*(_180837_dest)).ptr(), (*(_181221_f))._field_Ident, (*_181221_f.alloc)._field_Statically) != nullptr) || (_1cdee3c8d_FindField((*(_180837_dest)).ptr(), (*_181221_f.alloc)._field_Ident) != nullptr))) {
					_1ce093dc6_pushErr(_self_.ptr(), (*_181221_f.alloc)._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_180837_dest))))._field_Ident, &__jule_any_type4),jule::Any((*_181221_f.alloc)._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1b8114db4;
				};
				if ((((*((*(_180837_dest))))._field_Generics.len() > 0LL) && ((*_181221_f.alloc)._field_Generics.len() > 0LL))) {
					{
						auto expr = &((*_181221_f.alloc)._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b8117c85:;
						if (it != expr_end) {
							jule::Ptr<_1cdecdc9a_GenericDecl> _182024_fg = *it;
							{
								{
									auto expr = &((*((*(_180837_dest))))._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1b81186c0:;
									if (it != expr_end) {
										jule::Ptr<_1cdecdc9a_GenericDecl> _182128_dg = *it;
										{
											if (((*(_182024_fg))._field_Ident == (*(_182128_dg))._field_Ident)) {
												_1ce093dc6_pushErr(_self_, (*_182024_fg.alloc)._field_Token, jule::Str::lit("methods cannot have same generic identifier with owner same time", 64), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1b81186c0:;
										++it;
										goto _iter_begin_1b81186c0;
									}
									_iter_end_1b81186c0:;
								};
							}
							_iter_next_1b8117c85:;
							++it;
							goto _iter_begin_1b8117c85;
						}
						_iter_end_1b8117c85:;
					};
				};
				_1ce094e4e_checkDirectives(_self_, &((*_181221_f.alloc)._field_Directives), jule::Any(_181221_f, &__jule_any_type64));
				(*_181221_f.alloc)._field_sema=_self_;
				(*_181221_f.alloc)._field_Owner=(*(_180837_dest));
				{ jule::Slice<jule::Ptr<_1ce00792d_Fn>> &__jule_push_dest = (*((*(_180837_dest))))._field_Methods; __jule_push_dest.push(_181221_f); };
			}
			_iter_next_1b8114db4:;
			++it;
			goto _iter_begin_1b8114db4;
		}
		_iter_end_1b8114db4:;
	};
	{
		auto expr = &((*((*(_180857_ipl))))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b811528d:;
		if (it != expr_end) {
			jule::Ptr<_1ce0b4105_Var> _183721_v = *it;
			{
				;
				if (((_1cdee360b_FindMethod((*(_180837_dest)).ptr(), (*(_183721_v))._field_Ident, true) != nullptr) || (_1cdee394c_FindStatic((*(_180837_dest)).ptr(), (*_183721_v.alloc)._field_Ident) != nullptr))) {
					_1ce093dc6_pushErr(_self_, (*_183721_v.alloc)._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_180837_dest))))._field_Ident, &__jule_any_type4),jule::Any((*_183721_v.alloc)._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1b811528d;
				};
				{ jule::Slice<jule::Ptr<_1ce0b4105_Var>> &__jule_push_dest = (*((*(_180837_dest))))._field_Statics; __jule_push_dest.push(_183721_v); };
			}
			_iter_next_1b811528d:;
			++it;
			goto _iter_begin_1b811528d;
		}
		_iter_end_1b811528d:;
	};
	return __jule_func_result;;
}



inline void _1ce0a6a76_implTrait(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce044371_Impl>* _185034_decl) {
	jule::Ptr<_1ce14cbc7_TypeKind> _185113_base_t = _1ce09a680_selectType(_self_, &((*((*(_185034_decl))))._field_Base));;
	if ((_185113_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1ce01ac0a_Trait> _185513_base = _1ce151b32_Trait(_185113_base_t.ptr());;
	if ((_185513_base == nullptr)) {
		_1ce093dc6_pushErr(_self_, (*((*((*(_185034_decl))))._field_Base))._field_Token, jule::Str::lit("invalid base type for impl: @", 29), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str(_185113_base_t.ptr()), &__jule_any_type4)}));
		_1ce094239_pushSuggestion(_self_, jule::Str::lit("expected trait, use a trait", 27), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ce14cbc7_TypeKind> _186213_destT = _1ce09a680_selectType(_self_, &((*((*(_185034_decl))))._field_Dest));;
	if ((_186213_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1cdee571d_StructIns> _186613_destS = _1ce15189b_Struct(_186213_destT.ptr());;
	if ((_186613_destS == nullptr)) {
		_1ce093dc6_pushErr(_self_, (*((*((*(_185034_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str(_186213_destT.ptr()), &__jule_any_type4)}));
		_1ce094239_pushSuggestion(_self_, jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1cdee2990_Struct> _187313_dest = (*(_186613_destS))._field_Decl;;
	if ((_1cdeb23ee_Dir((*((*(_187313_dest))._field_Token))._field_File.ptr()) != _1cdeb23ee_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1ce093dc6_pushErr(_self_, (*(*((*(_185034_decl))))._field_Dest.alloc)._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	_1ce0b27da_pushImplemented(_185513_base, &(_187313_dest));
	_1ce0b2ac6_pushImplements(&(_187313_dest), _185513_base);
	if (((*((*(_185034_decl))))._field_Statics.len() > 0LL)) {
		_1ce093dc6_pushErr(_self_, (*((*((*(_185034_decl))))._field_Statics[0LL]))._field_Token, jule::Str::lit("trait implementations cannot implement static field", 51), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1ce0a63c2_checkTraitImplMethods(_self_, &(_185513_base), _185034_decl)))) {
			_case_begin_1b8127613:;
		}
		else if ((!(_1ce0a67bd_implToStruct(_self_, &(_187313_dest), _185034_decl)))) {
			_case_begin_1b812768a:;
		}
		_match_end_1b8126ac9:;
	};
}



inline void _1ce0a6d2e_implStruct(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce044371_Impl>* _189335_decl) {
	jule::Ptr<_1ce14cbc7_TypeKind> _189413_destT = _1ce09a680_selectType(_self_, &((*((*(_189335_decl))))._field_Dest));;
	if ((_189413_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1cdee571d_StructIns> _189813_destS = _1ce15189b_Struct(_189413_destT.ptr());;
	if ((_189813_destS == nullptr)) {
		_1ce093dc6_pushErr(_self_, (*((*((*(_189335_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str(_189413_destT.ptr()), &__jule_any_type4)}));
		_1ce094239_pushSuggestion(_self_, jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1cdee2990_Struct> _190513_dest = (*(_189813_destS))._field_Decl;;
	if ((_1cdeb23ee_Dir((*((*(_190513_dest))._field_Token))._field_File.ptr()) != _1cdeb23ee_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1ce093dc6_pushErr(_self_, (*(*((*(_189335_decl))))._field_Dest.alloc)._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1ce0a67bd_implToStruct(_self_, &(_190513_dest), _189335_decl)))) {
			_case_begin_1b812d1da:;
		}
		_match_end_1b812ceed:;
	};
}



inline void _1ce0a70d7_implImpl(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce044371_Impl>* _191733_decl) {
	{
		
		if (_1ce044739_IsTraitImpl((*(_191733_decl)).ptr())) {
			_case_begin_1e6acc870:;
			{
				_1ce0a6a76_implTrait(_self_, _191733_decl);
			}
		}
		else if (_1ce0449c0_IsStructImpl((*(_191733_decl)).ptr())) {
			_case_begin_1e6acc919:;
			{
				_1ce0a6d2e_implStruct(_self_, _191733_decl);
			}
		}
		_match_end_1e6acc760:;
	};
}



inline void _1ce0a744a_checkVarDecl(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce0b4105_Var>* _192837_decl, jule::Trait<_1ce16c7b8_Lookup> _192853_l) {
	if (_1cdeadd9b_IsIgnoreIdent((*((*(_192837_decl))))._field_Ident)) {
		_1ce093dc6_pushErr(_self_.ptr(), (*((*(_192837_decl))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1ce0b4765_IsTypeInferred((*(_192837_decl)).ptr())) {
		if ((!(_1ce0b44ce_IsInitialized((*(_192837_decl)).ptr())))) {
			_1ce093dc6_pushErr(_self_, (*((*(_192837_decl))))._field_Token, jule::Str::lit("type inferred declarations should have a initializer expression", 63), jule::Slice<jule::Any>());
		};
	} else {
		_1ce099a47_checkType(_self_, &((*((*(_192837_decl))))._field_Kind), _192853_l);
	};
	if ((*((*(_192837_decl))))._field_Reference) {
		if ((*((*(_192837_decl))))._field_Constant) {
			_1ce093dc6_pushErr(_self_, (*((*(_192837_decl))))._field_Token, jule::Str::lit("references cannot be constant", 29), jule::Slice<jule::Any>());
		};
		if ((*((*(_192837_decl))))._field_Statically) {
			_1ce093dc6_pushErr(_self_, (*((*(_192837_decl))))._field_Token, jule::Str::lit("static variables cannot be reference", 36), jule::Slice<jule::Any>());
		};
	};
	if ((!(_1ce0b44ce_IsInitialized((*(_192837_decl)).ptr())))) {
		if ((*((*(_192837_decl))))._field_Constant) {
			_1ce093dc6_pushErr(_self_, (*((*(_192837_decl))))._field_Token, jule::Str::lit("missing expression for constant variable initialization", 55), jule::Slice<jule::Any>());
		};
		if ((*((*(_192837_decl))))._field_Statically) {
			_1ce093dc6_pushErr(_self_, (*((*(_192837_decl))))._field_Token, jule::Str::lit("static variables must be have initialize expression", 51), jule::Slice<jule::Any>());
		};
		if ((*((*(_192837_decl))))._field_Reference) {
			_1ce093dc6_pushErr(_self_, (*((*(_192837_decl))))._field_Token, jule::Str::lit("reference variables must be have lvalue initialize expression", 61), jule::Slice<jule::Any>());
		};
	};
}



inline void _1ce0a7703_checkGlobalVarDecl(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce0b4105_Var>* _196543_decl) {
	if (_1ce094adb_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_196543_decl))), &((*((*(_196543_decl))))._field_Ident), (*((*(_196543_decl))))._field_Binded)) {
		_1ce093dc6_pushErr(_self_, (*((*(_196543_decl))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_196543_decl))))._field_Ident, &__jule_any_type4)}));
		_1ce094239_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_196543_decl))))._field_Binded && (*((*(_196543_decl))))._field_Constant)) {
		_1ce093dc6_pushErr(_self_, (*((*(_196543_decl))))._field_Token, jule::Str::lit("binded variables cannot be constant", 35), jule::Slice<jule::Any>());
	};
	if ((((!((*((*(_196543_decl))))._field_Binded)) && (!((*((*(_196543_decl))))._field_Constant))) && (!((*((*(_196543_decl))))._field_Statically)))) {
		_1ce093dc6_pushErr(_self_, (*((*(_196543_decl))))._field_Token, jule::Str::lit("global variables must be static", 31), jule::Slice<jule::Any>());
		_1ce094239_pushSuggestion(_self_, jule::Str::lit("use \"static\" keyword to define", 30), jule::Slice<jule::Any>());
	};
	_1ce094e4e_checkDirectives(_self_, &((*((*(_196543_decl))))._field_Directives), jule::Any((*(_196543_decl)), &__jule_any_type8));
	_1ce0a744a_checkVarDecl(_self_, _196543_decl, jule::Trait<_1ce16c7b8_Lookup>(_self_, 3));
}



inline jule::Bool _1ce0a7989_checkGlobalDecls(jule::Ptr<_1ce08b42e_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6ac4699:;
		if (it != expr_end) {
			jule::Ptr<_1ce0b4105_Var> _198321_decl = *it;
			{
				_1ce0a7703_checkGlobalVarDecl(_self_, &(_198321_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b6ac4699:;
			++it;
			goto _iter_begin_1b6ac4699;
		}
		_iter_end_1b6ac4699:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ce0a7d85_checkStructTraitImpl(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1cdee2990_Struct>* _199345_strct, jule::Ptr<_1ce01ac0a_Trait>* _199366_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_199366_trt))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6ac605d:;
		if (it != expr_end) {
			jule::Ptr<_1ce00792d_Fn> _199421_tf = *it;
			{
				jule::Bool _199517_exist = false;;
				jule::Ptr<_1ce00792d_Fn> _199617_sf = _1cdee360b_FindMethod((*(_199345_strct)).ptr(), (*(_199421_tf))._field_Ident, (*_199421_tf.alloc)._field_Statically);;
				jule::Ptr<_1ce00a832_FnIns> _199713_tfK = _1ce09d908_getTraitCheckFnKind(_self_, &(_199421_tf));;
				if ((_199617_sf != nullptr)) {
					jule::Ptr<_1ce00a832_FnIns> _199921_sfK = _1ce09d908_getTraitCheckFnKind(_self_, &(_199617_sf));;
					_199517_exist=_1ce00b79a_equalTrait(_199713_tfK, &(_199921_sfK));
				};
				if (_199517_exist) {
					jule::Ptr<_1cdec0eac_Directive> _200317_d = _1ce1455a4_findDirective(&((*_199617_sf.alloc)._field_Directives), jule::Str::lit("deprecated", 10));;
					if ((_200317_d != nullptr)) {
						_1ce093dc6_pushErr(_self_, (*_200317_d.alloc)._field_Tag, jule::Str::lit("trait implementations cannot have deprecated code", 49), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1ce093dc6_pushErr(_self_, (*((*(_199345_strct))))._field_Token, jule::Str::lit("trait @ derived but not implemented define @", 44), jule::Slice<jule::Any>::make({jule::Any((*((*(_199366_trt))))._field_Ident, &__jule_any_type4),jule::Any(_1ce00c6d0_GetKindStr(_199713_tfK, true), &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1b6ac605d:;
			++it;
			goto _iter_begin_1b6ac605d;
		}
		_iter_end_1b6ac605d:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ce0a81c6_checkStructImpls(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1cdee2990_Struct>* _201741_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_201741_s))))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6acbc9a:;
		if (it != expr_end) {
			jule::Ptr<_1ce01ac0a_Trait> _201921_trt = *it;
			{
				__jule_func_result=(_1ce0a7d85_checkStructTraitImpl(_self_, _201741_s, &(_201921_trt)) && __jule_func_result);
			}
			_iter_next_1b6acbc9a:;
			++it;
			goto _iter_begin_1b6acbc9a;
		}
		_iter_end_1b6acbc9a:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1ce0a8517_checkStructFields(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1cdee2990_Struct>* _202542_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_202542_st))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6acd230:;
		if (it != expr_end) {
			jule::Ptr<_1cdedea69_Field> _202721_f = *it;
			{
				(*(_202721_f))._field_Owner=(*(_202542_st));
				{
					auto expr = &((*((*(_202542_st))))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b6acde34:;
					if (it != expr_end) {
						jule::Ptr<_1cdedea69_Field> _202920_cf = *it;
						{
							if ((_202721_f == _202920_cf)) {
								goto _iter_end_1b6acde34;
							} else if (((*_202721_f.alloc)._field_Ident == (*(_202920_cf))._field_Ident)) {
								_1ce093dc6_pushErr(_self_.ptr(), (*_202721_f.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_202721_f.alloc)._field_Ident, &__jule_any_type4)}));
								_1ce094239_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1b6acde34:;
						++it;
						goto _iter_begin_1b6acde34;
					}
					_iter_end_1b6acde34:;
				};
			}
			_iter_next_1b6acd230:;
			++it;
			goto _iter_begin_1b6acd230;
		}
		_iter_end_1b6acd230:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1ce0a87c0_checkStructDecl(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1cdee2990_Struct>* _204240_s) {
	if (_1cdeadd9b_IsIgnoreIdent((*((*(_204240_s))))._field_Ident)) {
		_1ce093dc6_pushErr(_self_.ptr(), (*((*(_204240_s))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1ce094adb_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_204240_s))), &((*((*(_204240_s))))._field_Ident), (*((*(_204240_s))))._field_Binded)) {
		_1ce093dc6_pushErr(_self_, (*((*(_204240_s))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_204240_s))))._field_Ident, &__jule_any_type4)}));
		_1ce094239_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1ce094e4e_checkDirectives(_self_, &((*((*(_204240_s))))._field_Directives), jule::Any((*(_204240_s)), &__jule_any_type65));
	{
		
		if ((!(_1ce0a3aea_checkDeclGenerics(_self_, &((*((*(_204240_s))))._field_Generics))))) {
			_case_begin_1b6ad3ba3:;
		}
		else if ((!(_1ce0a8517_checkStructFields(_self_, _204240_s)))) {
			_case_begin_1b6ad3c19:;
		}
		else if ((!(_1ce0a81c6_checkStructImpls(_self_, _204240_s)))) {
			_case_begin_1b6ad3c80:;
		}
		else if ((!(_1ce0a9408_checkFuncDeclsBy(_self_, &((*((*(_204240_s))))._field_Methods))))) {
			_case_begin_1b6ad3ce6:;
		}
		_match_end_1b6ad3a71:;
	};
}



inline jule::Bool _1ce0a8a56_checkStructDecls(jule::Ptr<_1ce08b42e_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6ad5eb3:;
		if (it != expr_end) {
			jule::Ptr<_1cdee2990_Struct> _206221_s = *it;
			{
				_1ce0a87c0_checkStructDecl(_self_, &(_206221_s));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b6ad5eb3:;
			++it;
			goto _iter_begin_1b6ad5eb3;
		}
		_iter_end_1b6ad5eb3:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1ce0a8d0e_checkAnonFuncDecl(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce00792d_Fn>* _207242_f) {
	(*((*(_207242_f))))._field_sema=_self_;
	_1ce0a4876_checkFnDeclPrototype(_self_, _207242_f);
}



inline void _1ce0a90b7_checkFuncDecl(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce00792d_Fn>* _207738_f) {
	if (_1cdeadd9b_IsIgnoreIdent((*((*(_207738_f))))._field_Ident)) {
		_1ce093dc6_pushErr(_self_.ptr(), (*((*(_207738_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1ce0088da_IsAnon((*(_207738_f)).ptr())) {
		_1ce093dc6_pushErr(_self_.ptr(), (*((*(_207738_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	_1ce094e4e_checkDirectives(_self_, &((*((*(_207738_f))))._field_Directives), jule::Any((*(_207738_f)), &__jule_any_type64));
	_1ce0a8d0e_checkAnonFuncDecl(_self_, _207738_f);
	if ((((*((*(_207738_f))))._field_Owner == nullptr) && _1ce094adb_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_207738_f))), &((*((*(_207738_f))))._field_Ident), (*((*(_207738_f))))._field_Binded))) {
		if ((*((*(_207738_f))))._field_Ident.equal("init", 4)) {
			jule::Ptr<_1ce00792d_Fn> _208917_init = _1ce092820_FindFn(_self_, jule::Str::lit("init", 4), false);;
			if ((_208917_init != nullptr)) {
				return;;
			};
		};
		_1ce093dc6_pushErr(_self_, (*((*(_207738_f))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_207738_f))))._field_Ident, &__jule_any_type4)}));
		_1ce094239_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1ce0a9408_checkFuncDeclsBy(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Slice<jule::Ptr<_1ce00792d_Fn>>* _209941_funcs) {
	{
		auto expr = _209941_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6add22e:;
		if (it != expr_end) {
			jule::Ptr<_1ce00792d_Fn> _210021_f = *it;
			{
				_1ce0a90b7_checkFuncDecl(_self_, &(_210021_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1b6add22e:;
			++it;
			goto _iter_begin_1b6add22e;
		}
		_iter_end_1b6add22e:;
	};
	return true;;
}



inline jule::Bool _1ce0a968e_checkFuncDecls(jule::Ptr<_1ce08b42e_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1ce0a9408_checkFuncDeclsBy(_self_, &((*((*_self_.alloc)._field_file))._field_Funcs));
	return __jule_func_result;;
}



inline void _1ce0a9aac_pushCycleError(_1ce08b42e_Sema* _self_, jule::Str* _211530_st1, jule::Str* _211541_st2, _22ab0b88c_StrBuilder* _211556_message) {
	;
	jule::Str _21179_refersTo = _22a936b90_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_211530_st1)), &__jule_any_type4),jule::Any((*(_211541_st2)), &__jule_any_type4)}));;
	jule::Str _21189_m = _22ab15cb4_Str(_211556_message);;
	_22ab154bc_WriteStr(_211556_message, _22aae7070_Repeat(jule::Str::lit(" ", 1), 7LL));
	_22ab154bc_WriteStr(_211556_message, _21179_refersTo);
	_22ab15775_WriteByte(_211556_message, '\n');
	_22ab154bc_WriteStr(_211556_message, _21189_m);
}



inline void _1ce0aa261_checkPackageDecls(jule::Ptr<_1ce08b42e_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6ae4d7e:;
		if (it != expr_end) {
			jule::Ptr<_1ce116894_SymbolTable> _214221_f = *it;
			{
				_1ce0939a8_setCurrentFile(_self_.ptr(), _214221_f);
				if ((!(_1ce0a1a1b_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1b6ae4d7e:;
			++it;
			goto _iter_begin_1b6ae4d7e;
		}
		_iter_end_1b6ae4d7e:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6ae5313:;
		if (it != expr_end) {
			jule::Ptr<_1ce116894_SymbolTable> _214921_f = *it;
			{
				_1ce0939a8_setCurrentFile(_self_, _214921_f);
				if ((!(_1ce0a5ec6_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1b6ae5313:;
			++it;
			goto _iter_begin_1b6ae5313;
		}
		_iter_end_1b6ae5313:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6ae62e2:;
		if (it != expr_end) {
			jule::Ptr<_1ce116894_SymbolTable> _215621_f = *it;
			{
				_1ce0939a8_setCurrentFile(_self_, _215621_f);
				if ((!(_1ce0a7989_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1b6ae62e2:;
			++it;
			goto _iter_begin_1b6ae62e2;
		}
		_iter_end_1b6ae62e2:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6ae7326:;
		if (it != expr_end) {
			jule::Ptr<_1ce116894_SymbolTable> _216321_f = *it;
			{
				_1ce0939a8_setCurrentFile(_self_, _216321_f);
				{
					
					if ((!(_1ce0a968e_checkFuncDecls(_self_)))) {
						_case_begin_1b6ae8932:;
					}
					else if ((!(_1ce0a8a56_checkStructDecls(_self_)))) {
						_case_begin_1b6ae89ba:;
					}
					else {
						_case_begin_1b6ae837c:;
						{
							goto _iter_next_1b6ae7326;
						}
					}
					_match_end_1b6ae8899:;
				};
				return;;
			}
			_iter_next_1b6ae7326:;
			++it;
			goto _iter_begin_1b6ae7326;
		}
		_iter_end_1b6ae7326:;
	};
}



inline void _1ce0aa5c4_checkDataForTypeInference(_1ce08b42e_Sema* _self_, jule::Ptr<_1ce11bc0c_Data>* _217545_d, jule::Ptr<_1cdeab4b4_Token>* _217556_err_token) {
	{
		
		if (_1ce11c0e7_IsNil((*(_217545_d)).ptr())) {
			_case_begin_1b6ae9a87:;
			{
				_1ce093dc6_pushErr(_self_, (*(_217556_err_token)), jule::Str::lit("nil is cannot use with type inferred definitions", 48), jule::Slice<jule::Any>());
			}
		}
		else if (_1ce11c37d_IsVoid((*(_217545_d)).ptr())) {
			_case_begin_1b6ae9b31:;
			{
				_1ce093dc6_pushErr(_self_, (*(_217556_err_token)), jule::Str::lit("void data is cannot use for type inferred definitions", 53), jule::Slice<jule::Any>());
			}
		}
		else if ((*((*((*(_217545_d))))._field_Kind))._field_Variadic) {
			_case_begin_1b6ae9b97:;
			{
				_1ce093dc6_pushErr(_self_, (*(_217556_err_token)), jule::Str::lit("invalid expression for type inference", 37), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b6ae9966:;
	};
}



inline void _1ce0aa87c_checkVarValue(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce0b4105_Var>* _218738_v) {
	if (_1ce0b4765_IsTypeInferred((*(_218738_v)).ptr())) {
		(*((*(_218738_v))))._field_Kind=jule::new_ptr<_1ce154d99_TypeSymbol>(_1ce154d99_TypeSymbol{._field_Kind=(*((*((*((*(_218738_v))))._field_Value))._field_Data))._field_Kind});
		_1ce0aa5c4_checkDataForTypeInference(_self_.ptr(), &((*(*((*(_218738_v))))._field_Value.alloc)._field_Data), &((*((*(*((*(_218738_v))))._field_Value.alloc)._field_Expr))._field_Token));
		_1ce0a0c6d_checkValidityForInitExpr(_self_, (*((*(_218738_v))))._field_Mutable, (*((*(_218738_v))))._field_Reference, &((*((*((*(_218738_v))))._field_Kind))._field_Kind), &((*(*((*(_218738_v))))._field_Value.alloc)._field_Data), &((*(*(*((*(_218738_v))))._field_Value.alloc)._field_Expr.alloc)._field_Token));
	} else {
		jule::Ptr<_1ce15c0c1_Arr> _220017_arr = _1ce1510e8_Arr((*((*((*(_218738_v))))._field_Kind))._field_Kind.ptr());;
		if ((_220017_arr != nullptr)) {
			if ((*_220017_arr.alloc)._field_Auto) {
				jule::Ptr<_1ce15c0c1_Arr> _220321_dataArr = _1ce1510e8_Arr((*((*((*((*(_218738_v))))._field_Value))._field_Data))._field_Kind.ptr());;
				if ((_220321_dataArr != nullptr)) {
					(*_220017_arr.alloc)._field_N=(*_220321_dataArr.alloc)._field_N;
				};
			};
		};
		if (_1ce09b8d4_checkAssignType(_self_, (*((*(_218738_v))))._field_Reference, &((*(*((*(_218738_v))))._field_Kind.alloc)._field_Kind), &((*(*((*(_218738_v))))._field_Value.alloc)._field_Data), (*((*(*((*(_218738_v))))._field_Value.alloc)._field_Expr))._field_Token)) {
			_1ce0a0c6d_checkValidityForInitExpr(_self_, (*((*(_218738_v))))._field_Mutable, (*((*(_218738_v))))._field_Reference, &((*(*((*(_218738_v))))._field_Kind.alloc)._field_Kind), &((*(*((*(_218738_v))))._field_Value.alloc)._field_Data), &((*(*(*((*(_218738_v))))._field_Value.alloc)._field_Expr.alloc)._field_Token));
		};
	};
	if (((*((*(_218738_v))))._field_Reference && (!(_1ce169188_isValidForRef(&((*((*((*(_218738_v))))._field_Kind))._field_Kind)))))) {
		_1ce093dc6_pushErr(_self_.ptr(), (*((*(_218738_v))))._field_Token, jule::Str::lit("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*(*((*(_218738_v))))._field_Kind.alloc)._field_Kind.ptr()), &__jule_any_type4)}));
	};
	if ((*((*(_218738_v))))._field_Constant) {
		if (((!(_1ce11c614_IsConst((*((*((*(_218738_v))))._field_Value))._field_Data.ptr()))) && (!(_1ce1523d5_comptime((*(*(*((*(_218738_v))))._field_Value.alloc)._field_Data.alloc)._field_Kind.ptr()))))) {
			_1ce093dc6_pushErr(_self_, (*((*(*((*(_218738_v))))._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
	} else {
		(*((*((*((*(_218738_v))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*(*(*((*(_218738_v))))._field_Value.alloc)._field_Data.alloc)._field_untyped=false;
	};
	if ((_1ce15214e_Tup((*(*((*(_218738_v))))._field_Kind.alloc)._field_Kind) != nullptr)) {
		(*(*((*(_218738_v))))._field_Kind.alloc)._field_Kind=nullptr;
	};
}



inline void _1ce0aabe0_evalVarValue(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce0b4105_Var>* _224037_decl, jule::Trait<_1ce16c7b8_Lookup> _224053_l) {
	if ((!(_1ce0b44ce_IsInitialized((*(_224037_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_1ce11d934_Eval> _224517_eval = nullptr;;
	if (((*((*(_224037_decl))))._field_Kind != nullptr)) {
		_224517_eval=_1ce09ab36_evalpd(_self_, _224053_l, (*(*((*(_224037_decl))))._field_Kind.alloc)._field_Kind, (*(_224037_decl)));
	} else {
		_224517_eval=_1ce09ab36_evalpd(_self_, _224053_l, nullptr, (*(_224037_decl)));
	};
	(*(_224517_eval))._field_immutable=(!((*((*(_224037_decl))))._field_Mutable));
	(*((*((*(_224037_decl))))._field_Value))._field_Data=_1ce13bb94_evalExpr(_224517_eval, (*(*((*(_224037_decl))))._field_Value.alloc)._field_Expr);
}



inline void _1ce0ab053_checkVar(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce0b4105_Var>* _225733_decl, jule::Trait<_1ce16c7b8_Lookup> _225749_l) {
	_1ce0aabe0_evalVarValue(_self_, _225733_decl, _225749_l);
	if (((*((*((*(_225733_decl))))._field_Value))._field_Data == nullptr)) {
		return;;
	};
	_1ce0aa87c_checkVarValue(_self_, _225733_decl);
}



inline void _1ce0ab251_checkGlobals(jule::Ptr<_1ce08b42e_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6b11670:;
		if (it != expr_end) {
			jule::Ptr<_1ce0b4105_Var> _226721_decl = *it;
			{
				if ((*(_226721_decl))._field_Binded) {
					goto _iter_next_1b6b11670;
				};
				if (((_1ce0b44ce_IsInitialized(_226721_decl) && ((*((*_226721_decl.alloc)._field_Value))._field_Data == nullptr)) || (_1ce0b4765_IsTypeInferred(_226721_decl) && ((*((*_226721_decl.alloc)._field_Kind))._field_Kind == nullptr)))) {
					_1ce0ab053_checkVar(_self_, &(_226721_decl), jule::Trait<_1ce16c7b8_Lookup>(_self_, 3));
				};
			}
			_iter_next_1b6b11670:;
			++it;
			goto _iter_begin_1b6b11670;
		}
		_iter_end_1b6b11670:;
	};
}



inline jule::Ptr<_1ce00a832_FnIns> _1ce0ab64c_readyToCheckFn(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1cdee571d_StructIns>* _228139_s, jule::Ptr<_1ce00792d_Fn>* _228159_f) {
	jule::Ptr<_1ce00a832_FnIns> _228213_ins = _1ce00918d_instance((*(_228159_f)));;
	if (((*((*(_228159_f))))._field_Instances.len() != 0LL)) {
		return _228213_ins;;
	};
	(*(_228213_ins))._field_Owner=(*(_228139_s));
	_1ce00949b_appendInstance((*(_228159_f)).ptr(), &(_228213_ins));
	(*_228213_ins.alloc)._field_reloaded=true;
	if (_1ce09ed5a_reloadFnInsTypes(_self_, _228213_ins)) {
		return _228213_ins;;
	};
	return nullptr;;
}



inline void _1ce0ab9b0_checkTypeMethod(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1cdee571d_StructIns>* _229540_s, jule::Ptr<_1ce00792d_Fn>* _229560_f) {
	if (((*((*(_229560_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1ce00a832_FnIns> _230013_ins = (*((*(_229560_f))))._field_Instances[0LL];;
	if (((*((*(_230013_ins))._field_Scope))._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1ce0ae463_checkFnIns(_self_, &(_230013_ins));
}



inline jule::Ptr<_1ce00a832_FnIns> _1ce0abe66_checkStructInsOp(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1cdee571d_StructIns>* _230841_s, jule::Ptr<_1ce00792d_Fn>* _230861_f, jule::Fn<jule::Bool(jule::Ptr<_1ce00792d_Fn>)> _230869_p) {
	if (((((*(_230861_f)) == nullptr) || ((*((*(_230861_f))))._field_Generics.len() > 0LL)) || (!(_230869_p((*(_230861_f))))))) {
		return nullptr;;
	};
	return (*((*(_230861_f))))._field_Instances[0LL];;
}



inline jule::Bool _1ce0ac362_checkStructEnv(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1cdee571d_StructIns>* _231839_s, jule::Ptr<_1cdeab4b4_Token> _231858_errorToken) {
	jule::Bool __jule_func_result = false;
	_1ce15ea85_typeChecker _231913_tc = _1ce15ea85_typeChecker{._field_s=(*((*((*(_231839_s))))._field_Decl))._field_sema, ._field_rootLookup=jule::Trait<_1ce16c7b8_Lookup>((*(*((*(_231839_s))))._field_Decl.alloc)._field_sema, 3), ._field_lookup=jule::Trait<_1ce16c7b8_Lookup>((*(*((*(_231839_s))))._field_Decl.alloc)._field_sema, 3), ._field_referencer=jule::new_ptr<_1ce15da95_referencer>(_1ce15da95_referencer{._field_ident=(*(*((*(_231839_s))))._field_Decl.alloc)._field_Ident, ._field_owner=jule::Any((*((*(_231839_s))))._field_Decl, &__jule_any_type65), }), ._field_refers=(*((*(_231839_s))))._field_Refers, };;
	if (((*((*(_231839_s))))._field_Generics.len() > 0LL)) {
		_231913_tc._field_useGenerics=jule::Slice<jule::Ptr<_1ce14bdd5_TypeAlias>>::alloc(0LL, (*((*(_231839_s))))._field_Generics.len());
		{
			auto expr = &((*((*(_231839_s))))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b6b1cc53:;
			if (it != expr_end) {
				jule::I32 _233218_i = it - expr->begin();
				jule::Ptr<_1ce14b2e1_InsGeneric> _233225_g = *it;
				{
					jule::Ptr<_1cdecdc9a_GenericDecl> _233321_decl = (*(*((*(_231839_s))))._field_Decl.alloc)._field_Generics[_233218_i];;
					{ jule::Slice<jule::Ptr<_1ce14bdd5_TypeAlias>> &__jule_push_dest = _231913_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_1ce14bdd5_TypeAlias>(_1ce14bdd5_TypeAlias{._field_Token=(*_233321_decl.alloc)._field_Token, ._field_Ident=(*(_233321_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1ce154d99_TypeSymbol>(_1ce154d99_TypeSymbol{._field_Kind=(*(_233225_g))._field_Kind}), })); };
				}
				_iter_next_1b6b1cc53:;
				++it;
				_233218_i++;
				goto _iter_begin_1b6b1cc53;
			}
			_iter_end_1b6b1cc53:;
		};
	};
	jule::Ptr<_1ce116894_SymbolTable> _234213_oldFile = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1ce0939a8_setCurrentFile(_self_, _234213_oldFile);
	});;
	if (((*((*_self_.alloc)._field_file))._field_File != (*((*(*((*(_231839_s))))._field_Decl.alloc)._field_Token))._field_File)) {
		jule::Ptr<_1ce116894_SymbolTable> _234617_file = _1ce08a175_findFile(&((*_self_.alloc)._field_files), &((*(*(*((*(_231839_s))))._field_Decl.alloc)._field_Token.alloc)._field_File));;
		if ((_234617_file != nullptr)) {
			_1ce0939a8_setCurrentFile(_self_, _234617_file);
		};
	};
	if (((*((*(_231839_s))))._field_Generics.len() > 0LL)) {
		jule::Ptr<_1ce04201c_constraintChecker> _235317_cc = _1ce09964b_constraintChecker(_self_);;
		(*(_235317_cc))._field_et=_231858_errorToken;
		(*_235317_cc.alloc)._field_si=(*(_231839_s));
		(*_235317_cc.alloc)._field_genericsA=_231913_tc._field_useGenerics;
		(*_235317_cc.alloc)._field_uniq=true;
		if ((!(_1ce042e52_check(_235317_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*((*(_231839_s))))._field_Statics.len() > 0LL)) {
		jule::I32 _236617_n = (*_self_.alloc)._field_errors.len();;
		(*((*_self_.alloc)._field_files[0LL]))._field_TypeAliases=jule::append(_231913_tc._field_useGenerics,(*((*_self_.alloc)._field_files[0LL]))._field_TypeAliases);
		{
			auto expr = &((*((*(_231839_s))))._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b6b26553:;
			if (it != expr_end) {
				jule::Ptr<_1ce0b4105_Var> _236825_v = *it;
				{
					_1ce0a744a_checkVarDecl(_self_, &(_236825_v), jule::Trait<_1ce16c7b8_Lookup>(_self_, 3));
					_1ce0ab053_checkVar(_self_, &(_236825_v), jule::Trait<_1ce16c7b8_Lookup>(_self_, 3));
					__jule_func_result=((((*_self_.alloc)._field_errors.len() - _236617_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1b6b26553:;
				++it;
				goto _iter_begin_1b6b26553;
			}
			_iter_end_1b6b26553:;
		};
		(*((*_self_.alloc)._field_files[0LL]))._field_TypeAliases=(*((*_self_.alloc)._field_files[0LL]))._field_TypeAliases.slice(_231913_tc._field_useGenerics.len());
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1ce11d934_Eval> _237913_eval = _1ce09b373_eval(_self_, jule::Trait<_1ce16c7b8_Lookup>(_self_, 3));;
	(*((*(_231839_s))))._field_Comparable=(!((*(*((*(_231839_s))))._field_Decl.alloc)._field_Binded));
	{
		auto expr = &((*((*(_231839_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6b2a2b0:;
		if (it != expr_end) {
			jule::Ptr<_1cdee4b6d_FieldIns> _238121_f = *it;
			{
				jule::Ptr<_1ce14cbc7_TypeKind> _238217_kind = _1ce167230_checkDecl(&_231913_tc, &((*((*((*(_238121_f))._field_Decl))._field_Kind))._field_Decl));;
				__jule_func_result=((_238217_kind != nullptr) && __jule_func_result);
				if ((_238217_kind == nullptr)) {
					if (((_self_ != (*(*((*(_231839_s))))._field_Decl.alloc)._field_sema) && ((*((*(*((*(_231839_s))))._field_Decl.alloc)._field_sema))._field_errors.len() > 0LL))) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*(*((*(_231839_s))))._field_Decl.alloc)._field_sema.alloc)._field_errors);
						(*(*(*((*(_231839_s))))._field_Decl.alloc)._field_sema.alloc)._field_errors=nullptr;
					};
					goto _iter_next_1b6b2a2b0;
				};
				(*_238121_f.alloc)._field_Kind=_238217_kind;
				(*((*(_231839_s))))._field_Mutable=((*((*(_231839_s))))._field_Mutable || ((!((*(*_238121_f.alloc)._field_Decl.alloc)._field_Mutable)) && _1ce14e558_Mutable((*_238121_f.alloc)._field_Kind)));
				(*((*(_231839_s))))._field_Comparable=((*((*(_231839_s))))._field_Comparable && _1ce14e2c2_Comparable((*_238121_f.alloc)._field_Kind));
				if (((*(*_238121_f.alloc)._field_Decl.alloc)._field_Default == nullptr)) {
					goto _iter_next_1b6b2a2b0;
				};
				(*(_237913_eval))._field_prefix=(*_238121_f.alloc)._field_Kind;
				(*_237913_eval.alloc)._field_field=_238121_f;
				(*_238121_f.alloc)._field_Default=_1ce13bb94_evalExpr(_237913_eval, (*(*_238121_f.alloc)._field_Decl.alloc)._field_Default);
				if (((*_238121_f.alloc)._field_Default == nullptr)) {
					goto _iter_next_1b6b2a2b0;
				};
				;
				_1ce09b8d4_checkAssignType(_self_, false, &((*_238121_f.alloc)._field_Kind), &((*_238121_f.alloc)._field_Default), (*((*(*_238121_f.alloc)._field_Decl.alloc)._field_Default))._field_Token);
			}
			_iter_next_1b6b2a2b0:;
			++it;
			goto _iter_begin_1b6b2a2b0;
		}
		_iter_end_1b6b2a2b0:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ce0ac75d_precheckStructIns(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1cdee571d_StructIns>* _241542_s, jule::Ptr<_1cdeab4b4_Token> _241561_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1ce0ac362_checkStructEnv(_self_, _241542_s, _241561_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*((*(_241542_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6b34dad:;
		if (it != expr_end) {
			jule::Ptr<_1ce00792d_Fn> _242021_f = *it;
			{
				if (((*(_242021_f))._field_Generics.len() == 0LL)) {
					if ((_1ce0ab64c_readyToCheckFn(_self_, _241542_s, &(_242021_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1b6b34dad:;
			++it;
			goto _iter_begin_1b6b34dad;
		}
		_iter_end_1b6b34dad:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1ce0aca16_checkStructIns(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1cdee571d_StructIns>* _243039_s) {
	{
		auto expr = &((*((*(_243039_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6b367c7:;
		if (it != expr_end) {
			jule::Ptr<_1ce00792d_Fn> _243121_f = *it;
			{
				_1ce0ab9b0_checkTypeMethod(_self_, _243039_s, &(_243121_f));
			}
			_iter_next_1b6b367c7:;
			++it;
			goto _iter_begin_1b6b367c7;
		}
		_iter_end_1b6b367c7:;
	};
}



inline void _1ce0accbe_checkTypeStruct(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1cdee2990_Struct>* _243640_s) {
	if ((*((*(_243640_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_243640_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_243640_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6b3828a:;
		if (it != expr_end) {
			jule::Ptr<_1cdee571d_StructIns> _244921_ins = *it;
			{
				_1ce0aca16_checkStructIns(_self_, &(_244921_ins));
			}
			_iter_next_1b6b3828a:;
			++it;
			goto _iter_begin_1b6b3828a;
		}
		_iter_end_1b6b3828a:;
	};
}



inline void _1ce0acebc_checkStructTypes(jule::Ptr<_1ce08b42e_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6b39236:;
		if (it != expr_end) {
			jule::Ptr<_1cdee2990_Struct> _245521_s = *it;
			{
				_1ce0accbe_checkTypeStruct(_self_, &(_245521_s));
			}
			_iter_next_1b6b39236:;
			++it;
			goto _iter_begin_1b6b39236;
		}
		_iter_end_1b6b39236:;
	};
}



inline void _1ce0ad275_checkStructInsOperators(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1cdee571d_StructIns> _246047_s) {
	{
		auto expr = &((*(_246047_s))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6b3a1b0:;
		if (it != expr_end) {
			jule::Ptr<_1ce00792d_Fn> _246121_m = *it;
			{
				{
					auto &_match_expr{ (*(_246121_m))._field_Ident };
					
					if (_match_expr == jule::Str::lit("Eq", 2)) {
						_case_begin_1b6b3a80e:;
						{
							(*(_246047_s))._field_Operators._field_Eq=_1ce0abe66_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1ce0b5ea3_Eq);
							(*_246047_s.alloc)._field_Comparable=((*_246047_s.alloc)._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str::lit("Gt", 2)) {
						_case_begin_1b6b3ade7:;
						{
							(*(_246047_s))._field_Operators._field_Gt=_1ce0abe66_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1ce0b626c_Gt);
						}
					}
					else if (_match_expr == jule::Str::lit("GtEq", 4)) {
						_case_begin_1b6b3ae5d:;
						{
							(*(_246047_s))._field_Operators._field_GtEq=_1ce0abe66_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1ce0b6536_GtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Lt", 2)) {
						_case_begin_1b6b3aec4:;
						{
							(*(_246047_s))._field_Operators._field_Lt=_1ce0abe66_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1ce0b6800_Lt);
						}
					}
					else if (_match_expr == jule::Str::lit("LtEq", 4)) {
						_case_begin_1b6b3b03a:;
						{
							(*(_246047_s))._field_Operators._field_LtEq=_1ce0abe66_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1ce0b6ab9_LtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Shl", 3)) {
						_case_begin_1b6b3b0b2:;
						{
							(*(_246047_s))._field_Operators._field_Shl=_1ce0abe66_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1ce0b7207_Shl);
						}
					}
					else if (_match_expr == jule::Str::lit("Shr", 3)) {
						_case_begin_1b6b3b139:;
						{
							(*(_246047_s))._field_Operators._field_Shr=_1ce0abe66_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1ce0b74c1_Shr);
						}
					}
					else if (_match_expr == jule::Str::lit("Add", 3)) {
						_case_begin_1b6b3b1b1:;
						{
							(*(_246047_s))._field_Operators._field_Add=_1ce0abe66_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1ce0b778a_Add);
						}
					}
					else if (_match_expr == jule::Str::lit("Sub", 3)) {
						_case_begin_1b6b3b238:;
						{
							(*(_246047_s))._field_Operators._field_Sub=_1ce0abe66_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1ce0b7a54_Sub);
						}
					}
					else if (_match_expr == jule::Str::lit("Div", 3)) {
						_case_begin_1b6b3b2b0:;
						{
							(*(_246047_s))._field_Operators._field_Div=_1ce0abe66_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1ce0b7d1d_Div);
						}
					}
					else if (_match_expr == jule::Str::lit("Mul", 3)) {
						_case_begin_1b6b3b337:;
						{
							(*(_246047_s))._field_Operators._field_Mul=_1ce0abe66_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1ce0b80d7_Mul);
						}
					}
					else if (_match_expr == jule::Str::lit("Mod", 3)) {
						_case_begin_1b6b3b3ae:;
						{
							(*(_246047_s))._field_Operators._field_Mod=_1ce0abe66_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1ce0b83a1_Mod);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAnd", 6)) {
						_case_begin_1b6b3b436:;
						{
							(*(_246047_s))._field_Operators._field_BitAnd=_1ce0abe66_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1ce0b866a_BitAnd);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOr", 5)) {
						_case_begin_1b6b3b4ad:;
						{
							(*(_246047_s))._field_Operators._field_BitOr=_1ce0abe66_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1ce0b8934_BitOr);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXor", 6)) {
						_case_begin_1b6b3b535:;
						{
							(*(_246047_s))._field_Operators._field_BitXor=_1ce0abe66_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1ce0b8bed_BitXor);
						}
					}
					else if (_match_expr == jule::Str::lit("Neg", 3)) {
						_case_begin_1b6b3b5ac:;
						{
							(*(_246047_s))._field_Operators._field_Neg=_1ce0abe66_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1ce0b933b_Neg);
						}
					}
					else if (_match_expr == jule::Str::lit("Pos", 3)) {
						_case_begin_1b6b3b634:;
						{
							(*(_246047_s))._field_Operators._field_Pos=_1ce0abe66_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1ce0b9605_Pos);
						}
					}
					else if (_match_expr == jule::Str::lit("BitNot", 6)) {
						_case_begin_1b6b3b6ab:;
						{
							(*(_246047_s))._field_Operators._field_BitNot=_1ce0abe66_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1ce0b98be_BitNot);
						}
					}
					else if (_match_expr == jule::Str::lit("AddAssign", 9)) {
						_case_begin_1b6b3b733:;
						{
							(*(_246047_s))._field_Operators._field_AddAssign=_1ce0abe66_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1ce0ba00c_AddAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("SubAssign", 9)) {
						_case_begin_1b6b3b7aa:;
						{
							(*(_246047_s))._field_Operators._field_SubAssign=_1ce0abe66_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1ce0ba2c6_SubAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("DivAssign", 9)) {
						_case_begin_1b6b3b832:;
						{
							(*(_246047_s))._field_Operators._field_DivAssign=_1ce0abe66_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1ce0ba590_DivAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("MulAssign", 9)) {
						_case_begin_1b6b3b8a9:;
						{
							(*(_246047_s))._field_Operators._field_MulAssign=_1ce0abe66_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1ce0ba859_MulAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ModAssign", 9)) {
						_case_begin_1b6b3b931:;
						{
							(*(_246047_s))._field_Operators._field_ModAssign=_1ce0abe66_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1ce0bab23_ModAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShlAssign", 9)) {
						_case_begin_1b6b3b9a8:;
						{
							(*(_246047_s))._field_Operators._field_ShlAssign=_1ce0abe66_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1ce0baddc_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShrAssign", 9)) {
						_case_begin_1b6b3ba30:;
						{
							(*(_246047_s))._field_Operators._field_ShrAssign=_1ce0abe66_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1ce0bb1a6_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOrAssign", 11)) {
						_case_begin_1b6b3baa7:;
						{
							(*(_246047_s))._field_Operators._field_BitOrAssign=_1ce0abe66_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1ce0bb470_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAndAssign", 12)) {
						_case_begin_1b6b3bb2e:;
						{
							(*(_246047_s))._field_Operators._field_BitAndAssign=_1ce0abe66_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1ce0bb739_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXorAssign", 12)) {
						_case_begin_1b6b3bba6:;
						{
							(*(_246047_s))._field_Operators._field_BitXorAssign=_1ce0abe66_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1ce0bba03_BitXorAssign);
						}
					}
					_match_end_1b6b3aaea:;
				};
			}
			_iter_next_1b6b3a1b0:;
			++it;
			goto _iter_begin_1b6b3a1b0;
		}
		_iter_end_1b6b3a1b0:;
	};
}



inline void _1ce0ad52d_precheckStructType(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1cdee2990_Struct>* _252443_s) {
	if ((*((*(_252443_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_252443_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_252443_s))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1cdee571d_StructIns> _253517_ins = _1cdee2e02_instance((*(_252443_s)));;
		(*(_253517_ins))._field_Checked=true;
		_1cdee3210_appendInstance((*(_252443_s)).ptr(), &(_253517_ins));
		_1ce0ac75d_precheckStructIns(_self_, &(_253517_ins), nullptr);
	};
	_1ce0ad275_checkStructInsOperators(_self_, (*((*(_252443_s))))._field_Instances[0LL]);
}



inline void _1ce0ad72b_precheckStructTypes(jule::Ptr<_1ce08b42e_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6b52c11:;
		if (it != expr_end) {
			jule::Ptr<_1cdee2990_Struct> _254521_s = *it;
			{
				_1ce0ad52d_precheckStructType(_self_, &(_254521_s));
			}
			_iter_next_1b6b52c11:;
			++it;
			goto _iter_begin_1b6b52c11;
		}
		_iter_end_1b6b52c11:;
	};
}



inline void _1ce0ad9d4_checkRets(_1ce08b42e_Sema* _self_, jule::Ptr<_1ce00a832_FnIns>* _255033_f) {
	if (_1ce007da1_IsVoid((*((*(_255033_f))))._field_Decl.ptr())) {
		return;;
	};
	_1ce0b0e59_missingRetChecker _25549_mrc = static__1ce0b1322_new();;
	jule::Bool _25559_ok = _1ce0b2444_check(&_25549_mrc, (*((*(_255033_f))))._field_Scope);;
	if ((!(_25559_ok))) {
		_1ce093dc6_pushErr(_self_, (*(*((*(_255033_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("missing return at end of function", 33), jule::Slice<jule::Any>());
	};
}



inline void _1ce0add47_checkFnInsSc(_1ce08b42e_Sema* _self_, jule::Ptr<_1ce00a832_FnIns>* _256136_f, jule::Ptr<_1ce051acb_scopeChecker>* _256152_sc) {
	_1ce089729_appendRetVars(&((*((*((*(_256152_sc))))._field_table))._field_Vars), _256136_f);
	_1ce089a15_appendParamVars(&((*(*((*(_256152_sc))))._field_table.alloc)._field_Vars), _256136_f);
	_1ce089d01_appendGenericTypeAliases(&((*(*((*(_256152_sc))))._field_table.alloc)._field_TypeAliases), _256136_f);
	_1ce0632d5_check((*(_256152_sc)), &((*((*((*(_256136_f))))._field_Decl))._field_Scope), &((*((*(_256136_f))))._field_Scope));
	if ((!(_1ce0546a0_stopped((*(_256152_sc)).ptr())))) {
		_1ce0ad9d4_checkRets(_self_, _256136_f);
	};
}



inline void _1ce0ae1aa_checkFnInsCaller(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce00a832_FnIns>* _257441_f, jule::Ptr<_1cdeab4b4_Token> _257456_caller) {
	if ((*((*((*(_257441_f))))._field_Decl))._field_Binded) {
		return;;
	};
	jule::Ptr<_1ce116894_SymbolTable> _257913_old = (*((*(*((*(_257441_f))))._field_Decl.alloc)._field_sema))._field_file;;
	__JULE_DEFER({
		_1ce0939a8_setCurrentFile((*(*((*(_257441_f))))._field_Decl.alloc)._field_sema, _257913_old);
	});;
	jule::Ptr<_1ce116894_SymbolTable> _258113_file = _1ce08a175_findFile(&((*(*(*((*(_257441_f))))._field_Decl.alloc)._field_sema.alloc)._field_files), &((*((*(*((*(_257441_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_258113_file != nullptr)) {
		_1ce0939a8_setCurrentFile((*(*((*(_257441_f))))._field_Decl.alloc)._field_sema, _258113_file);
	};
	jule::Ptr<_1ce051acb_scopeChecker> _258613_sc = _1ce04696c_newScopeChecker(&((*(*((*(_257441_f))))._field_Decl.alloc)._field_sema), (*(_257441_f)));;
	(*(_258613_sc))._field_calledFrom=_257456_caller;
	_1ce0add47_checkFnInsSc(_self_.ptr(), _257441_f, &(_258613_sc));
	if (((*(*((*(_257441_f))))._field_Decl.alloc)._field_sema != _self_)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*(*((*(_257441_f))))._field_Decl.alloc)._field_sema.alloc)._field_errors);
		(*(*(*((*(_257441_f))))._field_Decl.alloc)._field_sema.alloc)._field_errors=nullptr;
	};
}



inline void _1ce0ae463_checkFnIns(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce00a832_FnIns>* _259635_f) {
	_1ce0ae1aa_checkFnInsCaller(_self_, _259635_f, nullptr);
}



inline void _1ce0ae71b_checkFunc(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce00792d_Fn>* _260034_f) {
	if ((*((*(_260034_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_260034_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_260034_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6b6114d:;
		if (it != expr_end) {
			jule::Ptr<_1ce00a832_FnIns> _261021_ins = *it;
			{
				_1ce0ae463_checkFnIns(_self_, &(_261021_ins));
			}
			_iter_next_1b6b6114d:;
			++it;
			goto _iter_begin_1b6b6114d;
		}
		_iter_end_1b6b6114d:;
	};
}



inline void _1ce0ae9c4_checkTestFn(_1ce08b42e_Sema* _self_, jule::Ptr<_1ce00a832_FnIns>* _261535_f) {
	if ((*((*((*(_261535_f))))._field_Decl))._field_Public) {
		_1ce093dc6_pushErr(_self_, (*(*((*(_261535_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("test function cannot be public", 30), jule::Slice<jule::Any>());
		_1ce094239_pushSuggestion(_self_, jule::Str::lit("dont use identifier which is starts with capital letter to avoid define as public", 81), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*(*((*(_261535_f))))._field_Decl.alloc)._field_Unsafety || (!(_1ce007da1_IsVoid((*((*(_261535_f))))._field_Decl)))) || ((*(*((*(_261535_f))))._field_Decl.alloc)._field_Generics.len() != 0LL)) || ((*((*(_261535_f))))._field_Params.len() != 1LL)) || (*((*(*((*(_261535_f))))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable) || (*((*(*((*(_261535_f))))._field_Decl.alloc)._field_Params[0LL]))._field_Reference)) {
		_1ce093dc6_pushErr(_self_, (*(*((*(_261535_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1ce094239_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ce1592cc_Sptr> _263313_sptr = _1ce1505ae_Sptr((*((*((*(_261535_f))))._field_Params[0LL]))._field_Kind.ptr());;
	if ((_263313_sptr == nullptr)) {
		_1ce093dc6_pushErr(_self_, (*(*((*(_261535_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1ce094239_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1cdee571d_StructIns> _26409_s = _1ce15189b_Struct((*(_263313_sptr))._field_Elem.ptr());;
	if (((_26409_s == nullptr) || (!(_1ce0714ad_isStdPackage(&((*((*((*((*(_26409_s))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("testing", 7)))))) {
		_1ce093dc6_pushErr(_self_, (*(*((*(_261535_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1ce094239_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1ce0aec7c_precheckFunc(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Ptr<_1ce00792d_Fn>* _264837_f) {
	if ((*((*(_264837_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_264837_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_264837_f))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1ce00a832_FnIns> _265917_ins = _1ce008e07_instanceForce((*(_264837_f)));;
		{ jule::Slice<jule::Ptr<_1ce00a832_FnIns>> &__jule_push_dest = (*((*(_264837_f))))._field_Instances; __jule_push_dest.push(_265917_ins); };
		jule::Bool _266113_ok = _1ce09ed5a_reloadFnInsTypes(_self_, _265917_ins);;
		(*(_265917_ins))._field_reloaded=true;
		if ((_266113_ok && _1ce1687e7_hasDirective(&((*((*(_264837_f))))._field_Directives), jule::Str::lit("test", 4)))) {
			_1ce0ae9c4_checkTestFn(_self_, &(_265917_ins));
		};
	};
}



inline void _1ce0aee7a_precheckFuncs(jule::Ptr<_1ce08b42e_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b838a0e5:;
		if (it != expr_end) {
			jule::Ptr<_1ce01ac0a_Trait> _267221_decl = *it;
			{
				{
					auto expr = &((*(_267221_decl))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b838aa30:;
					if (it != expr_end) {
						jule::Ptr<_1ce00792d_Fn> _267325_m = *it;
						{
							_1ce0aec7c_precheckFunc(_self_, &(_267325_m));
						}
						_iter_next_1b838aa30:;
						++it;
						goto _iter_begin_1b838aa30;
					}
					_iter_end_1b838aa30:;
				};
			}
			_iter_next_1b838a0e5:;
			++it;
			goto _iter_begin_1b838a0e5;
		}
		_iter_end_1b838a0e5:;
	};
	{
		auto expr = &((*(*_self_.alloc)._field_file.alloc)._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b838ada4:;
		if (it != expr_end) {
			jule::Ptr<_1ce00792d_Fn> _267721_decl = *it;
			{
				_1ce0aec7c_precheckFunc(_self_, &(_267721_decl));
			}
			_iter_next_1b838ada4:;
			++it;
			goto _iter_begin_1b838ada4;
		}
		_iter_end_1b838ada4:;
	};
}



inline void _1ce0b0178_checkFuncs(jule::Ptr<_1ce08b42e_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b838c306:;
		if (it != expr_end) {
			jule::Ptr<_1ce00792d_Fn> _268421_decl = *it;
			{
				_1ce0ae71b_checkFunc(_self_, &(_268421_decl));
			}
			_iter_next_1b838c306:;
			++it;
			goto _iter_begin_1b838c306;
		}
		_iter_end_1b838c306:;
	};
}



inline void _1ce0b0376_checkPackageTypes(jule::Ptr<_1ce08b42e_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b838d0d7:;
		if (it != expr_end) {
			jule::Ptr<_1ce116894_SymbolTable> _269221_f = *it;
			{
				_1ce0939a8_setCurrentFile(_self_.ptr(), _269221_f);
				_1ce0ab251_checkGlobals(_self_);
				_1ce0aee7a_precheckFuncs(_self_);
				_1ce0ad72b_precheckStructTypes(_self_);
			}
			_iter_next_1b838d0d7:;
			++it;
			goto _iter_begin_1b838d0d7;
		}
		_iter_end_1b838d0d7:;
	};
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b838eb33:;
		if (it != expr_end) {
			jule::Ptr<_1ce116894_SymbolTable> _270321_f = *it;
			{
				_1ce0939a8_setCurrentFile(_self_, _270321_f);
				_1ce0b0178_checkFuncs(_self_);
				_1ce0acebc_checkStructTypes(_self_);
			}
			_iter_next_1b838eb33:;
			++it;
			goto _iter_begin_1b838eb33;
		}
		_iter_end_1b838eb33:;
	};
}



inline void _1ce0b0574_setFileSemaFields(jule::Ptr<_1ce08b42e_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b839120b:;
		if (it != expr_end) {
			jule::Ptr<_1ce00792d_Fn> _271121_f = *it;
			{
				(*(_271121_f))._field_sema=_self_;
			}
			_iter_next_1b839120b:;
			++it;
			goto _iter_begin_1b839120b;
		}
		_iter_end_1b839120b:;
	};
	{
		auto expr = &((*(*_self_.alloc)._field_file.alloc)._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8391d55:;
		if (it != expr_end) {
			jule::Ptr<_1cdee2990_Struct> _271421_st = *it;
			{
				(*(_271421_st))._field_sema=_self_;
			}
			_iter_next_1b8391d55:;
			++it;
			goto _iter_begin_1b8391d55;
		}
		_iter_end_1b8391d55:;
	};
}



inline void _1ce0b0772_setSemaFields(jule::Ptr<_1ce08b42e_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8392a26:;
		if (it != expr_end) {
			jule::Ptr<_1ce116894_SymbolTable> _272021_file = *it;
			{
				_1ce0939a8_setCurrentFile(_self_.ptr(), _272021_file);
				_1ce0b0574_setFileSemaFields(_self_);
			}
			_iter_next_1b8392a26:;
			++it;
			goto _iter_begin_1b8392a26;
		}
		_iter_end_1b8392a26:;
	};
}



inline void _1ce0b0a2a_check(jule::Ptr<_1ce08b42e_Sema> _self_, jule::Slice<jule::Ptr<_1ce116894_SymbolTable>>* _272630_files) {
	(*(_self_))._field_files=(*(_272630_files));
	_1ce097847_checkImports(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1ce0b0772_setSemaFields(_self_);
	_1ce09833c_checkInherits(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1ce097c43_implImpls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1ce097e41_checkEnums(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1ce0aa261_checkPackageDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1ce0b0376_checkPackageTypes(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1ce08b42e_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags << ", ";
	_Stream << "meta:" << _Src._field_meta;
	_Stream << "}";
	return _Stream;
}



inline _1ce0b0e59_missingRetChecker static__1ce0b1322_new(void) {
	return _1ce0b0e59_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _1ce0b1630_checkConditional(_1ce0b0e59_missingRetChecker* _self_, jule::Ptr<_1ce04a410_Conditional> _277435_c) {
	{
		auto expr = &((*(_277435_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8398169:;
		if (it != expr_end) {
			jule::Ptr<_1ce049be5_If> _277521_elif = *it;
			{
				if ((_277521_elif == nullptr)) {
					return false;;
				};
				if ((!(_1ce0b2103_checkScope(_self_, (*(_277521_elif))._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1b8398169:;
			++it;
			goto _iter_begin_1b8398169;
		}
		_iter_end_1b8398169:;
	};
	return (((*_277435_c.alloc)._field_Default != nullptr) && _1ce0b2103_checkScope(_self_, (*(*_277435_c.alloc)._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1ce0b1971_checkMatch(_1ce0b0e59_missingRetChecker* _self_, jule::Ptr<_1ce04d90d_Match> _278629_m) {
	{
		auto expr = &((*(_278629_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b839a204:;
		if (it != expr_end) {
			jule::Ptr<_1ce04e436_Case> _278721_c = *it;
			{
				if ((_278721_c == nullptr)) {
					return false;;
				};
				jule::I32 _279113_n = (*(_self_))._field_breaked.len();;
				jule::Bool _279213_ok = _1ce0b2103_checkScope(_self_, (*(_278721_c))._field_Scope);;
				{
					
					if ((_279113_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1b839bb62:;
						{
							return false;;
						}
					}
					else if ((!(_279213_ok))) {
						_case_begin_1b839bc0b:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1b839bc72;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1b839bc72:;
						{
							(*(_self_))._field_falled=false;
							if (((*(_278721_c))._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1b839a204;
						}
					}
					_match_end_1b839b733:;
				};
			}
			_iter_next_1b839a204:;
			++it;
			goto _iter_begin_1b839a204;
		}
		_iter_end_1b839a204:;
	};
	return (((*_278629_m.alloc)._field_Default != nullptr) && _1ce0b2103_checkScope(_self_, (*(*_278629_m.alloc)._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1ce0b1cb2_checkInfIter(_1ce0b0e59_missingRetChecker* _self_, jule::Ptr<_1ce04a70c_InfIter> _281231_it) {
	jule::I32 _28139_n = (*(_self_))._field_breaked.len();;
	if (_1ce0b2103_checkScope(_self_, (*(_281231_it))._field_Scope)) {
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _28139_n);
		return true;;
	};
	if ((_28139_n != (*(_self_))._field_breaked.len())) {
		jule::Uintptr _281913_itaddr = static_cast<jule::Uintptr>(_281231_it);;
		{
			auto expr = (*(_self_))._field_breaked.slice(_28139_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1b83a0a34:;
			if (it != expr_end) {
				jule::Uintptr _282020_addr = *it;
				{
					if ((_281913_itaddr == _282020_addr)) {
						(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _28139_n);
						return false;;
					};
				}
				_iter_next_1b83a0a34:;
				++it;
				goto _iter_begin_1b83a0a34;
			}
			_iter_end_1b83a0a34:;
		};
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _28139_n);
	};
	return true;;
}



inline jule::Bool _1ce0b2103_checkScope(_1ce0b0e59_missingRetChecker* _self_, jule::Ptr<_1ce0497c7_Scope> _283129_s) {
	if ((_283129_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &((*(_283129_s))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b83a2481:;
		if (it != expr_end) {
			jule::Any _283521_st = *it;
			{
				{
					auto &_match_expr{ _283521_st };
					
					if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1b83a2d00:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type49) {
						_case_begin_1b83a2abe:;
						{
							jule::Uintptr _284117_addr = (*(_283521_st.unsafe_cast_ptr<_1ce04bd6d_BreakSt>()))._field_It;;
							if ((_284117_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_284117_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type41) {
						_case_begin_1b83a2d77:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type36) {
						_case_begin_1b83a2ddd:;
						{
							if (_1ce0b1cb2_checkInfIter(_self_, _283521_st.unsafe_cast_ptr<_1ce04a70c_InfIter>())) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type50) {
						_case_begin_1b83a2e65:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1b83a2edc:;
						{
							if (_1ce0b2103_checkScope(_self_, _283521_st.unsafe_cast_ptr<_1ce0497c7_Scope>())) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type24) {
						_case_begin_1b83a3064:;
						{
							{
								auto &_match_expr{ (*(_283521_st.cast_ptr<_1ce11bc0c_Data>(&__jule_any_type24)))._field_Model };
								
								if (_match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type23) {
									_case_begin_1b83a6d37:;
									{
										return true;;
									}
								}
								_match_end_1b83a6cc1:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type35) {
						_case_begin_1b83a30db:;
						{
							if (_1ce0b1630_checkConditional(_self_, _283521_st.unsafe_cast_ptr<_1ce04a410_Conditional>())) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type47) {
						_case_begin_1b83a3163:;
						{
							if (_1ce0b1971_checkMatch(_self_, _283521_st.unsafe_cast_ptr<_1ce04d90d_Match>())) {
								return true;;
							};
						}
					}
					_match_end_1b83a2be0:;
				};
			}
			_iter_next_1b83a2481:;
			++it;
			goto _iter_begin_1b83a2481;
		}
		_iter_end_1b83a2481:;
	};
	return false;;
}



inline jule::Bool _1ce0b2444_check(_1ce0b0e59_missingRetChecker* _self_, jule::Ptr<_1ce0497c7_Scope> _287724_s) {
	return _1ce0b2103_checkScope(_self_, _287724_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce0b0e59_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ce0b44ce_IsInitialized(_1ce0b4105_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1ce0b4765_IsTypeInferred(_1ce0b4105_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*((*(_self_))._field_Kind))._field_Decl == nullptr));;
}



inline jule::Bool _1ce0b49eb_untypedConstant(_1ce0b4105_Var* _self_) {
	return (_1ce0b4765_IsTypeInferred(_self_) && (*((*((*(_self_))._field_Value))._field_Data))._field_untyped);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce0b4105_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1ce0b559b_Dispose(jule::Ptr<_1ce00792d_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && ((*_1023_f.alloc)._field_Owner != nullptr)) && (*_1023_f.alloc)._field_Ident.equal("Dispose", 7)) && (!((*_1023_f.alloc)._field_Statically))) && (!((*_1023_f.alloc)._field_Unsafety))) && _1ce007da1_IsVoid(_1023_f)) && ((*_1023_f.alloc)._field_Generics.len() == 0LL)) && ((*_1023_f.alloc)._field_Params.len() == 1LL)) && (*((*_1023_f.alloc)._field_Params[0LL]))._field_Mutable) && (!(_1ce00680b_IsRef((*_1023_f.alloc)._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1ce0b5865_Str(jule::Ptr<_1ce00792d_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || ((*(_2419_f))._field_Owner == nullptr)) || (!(*(_2419_f))._field_Ident.equal("Str", 3))) || (*(_2419_f))._field_Statically) || (*(_2419_f))._field_Unsafety) || _1ce007da1_IsVoid(_2419_f.ptr())) || ((*(_2419_f))._field_Generics.len() != 0LL)) || ((*(_2419_f))._field_Params.len() != 1LL)) || (*((*(_2419_f))._field_Params[0LL]))._field_Mutable) || _1ce00680b_IsRef((*(_2419_f))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1ce00a832_FnIns> _3813_ins = (*(_2419_f))._field_Instances[0LL];;
	jule::Ptr<_1ce1557a1_Prim> _399_prim = _1ce150328_Prim((*(_3813_ins))._field_Result.ptr());;
	if ((_399_prim == nullptr)) {
		return false;;
	};
	return _1ce158c38_IsStr(_399_prim.ptr());;
}



inline jule::Bool static__1ce0b5bd9_logical(jule::Ptr<_1ce00792d_Fn>* _4624_f, jule::Str _4632_ident) {
	if (((((((((((((((*(_4624_f)) == nullptr) || ((*((*(_4624_f))))._field_Ident != _4632_ident)) || ((*((*(_4624_f))))._field_Owner == nullptr)) || ((*((*(_4624_f))))._field_Instances.len() == 0LL)) || (*((*(_4624_f))))._field_Statically) || (*((*(_4624_f))))._field_Unsafety) || _1ce007da1_IsVoid((*(_4624_f)).ptr())) || ((*((*(_4624_f))))._field_Generics.len() != 0LL)) || ((*((*(_4624_f))))._field_Params.len() != 2LL)) || (*((*((*(_4624_f))))._field_Params[0LL]))._field_Mutable) || _1ce00680b_IsRef((*((*(_4624_f))))._field_Params[0LL].ptr())) || (*((*((*(_4624_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_4624_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1ce00a832_FnIns> _6313_ins = (*((*(_4624_f))))._field_Instances[0LL];;
	jule::Ptr<_1ce1557a1_Prim> _649_prim = _1ce150328_Prim((*(_6313_ins))._field_Result.ptr());;
	if (((_649_prim == nullptr) || (!(_1ce1589a2_IsBool(_649_prim.ptr()))))) {
		return false;;
	};
	return ((*_6313_ins.alloc)._field_Owner == _1ce15189b_Struct((*((*_6313_ins.alloc)._field_Params[1LL]))._field_Kind.ptr()));;
}



inline jule::Bool static__1ce0b5ea3_Eq(jule::Ptr<_1ce00792d_Fn> _7218_f) {
	return static__1ce0b5bd9_logical(&(_7218_f), jule::Str::lit("Eq", 2));;
}



inline jule::Bool static__1ce0b626c_Gt(jule::Ptr<_1ce00792d_Fn> _7718_f) {
	return static__1ce0b5bd9_logical(&(_7718_f), jule::Str::lit("Gt", 2));;
}



inline jule::Bool static__1ce0b6536_GtEq(jule::Ptr<_1ce00792d_Fn> _8220_f) {
	return static__1ce0b5bd9_logical(&(_8220_f), jule::Str::lit("GtEq", 4));;
}



inline jule::Bool static__1ce0b6800_Lt(jule::Ptr<_1ce00792d_Fn> _8718_f) {
	return static__1ce0b5bd9_logical(&(_8718_f), jule::Str::lit("Lt", 2));;
}



inline jule::Bool static__1ce0b6ab9_LtEq(jule::Ptr<_1ce00792d_Fn> _9220_f) {
	return static__1ce0b5bd9_logical(&(_9220_f), jule::Str::lit("LtEq", 4));;
}



inline jule::Bool static__1ce0b6e3d_result(jule::Ptr<_1ce00792d_Fn>* _9623_f, jule::Str _9631_ident) {
	if (((((((((((((((*(_9623_f)) == nullptr) || ((*((*(_9623_f))))._field_Ident != _9631_ident)) || ((*((*(_9623_f))))._field_Owner == nullptr)) || ((*((*(_9623_f))))._field_Instances.len() == 0LL)) || (*((*(_9623_f))))._field_Statically) || (*((*(_9623_f))))._field_Unsafety) || _1ce007da1_IsVoid((*(_9623_f)).ptr())) || ((*((*(_9623_f))))._field_Generics.len() != 0LL)) || ((*((*(_9623_f))))._field_Params.len() != 2LL)) || (*((*((*(_9623_f))))._field_Params[0LL]))._field_Mutable) || _1ce00680b_IsRef((*((*(_9623_f))))._field_Params[0LL].ptr())) || (*((*((*(_9623_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_9623_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1ce00a832_FnIns> _11313_ins = (*((*(_9623_f))))._field_Instances[0LL];;
	return (_1ce15189b_Struct((*(_11313_ins))._field_Result.ptr()) == (*_11313_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1ce0b7207_Shl(jule::Ptr<_1ce00792d_Fn> _11819_f) {
	return static__1ce0b6e3d_result(&(_11819_f), jule::Str::lit("Shl", 3));;
}



inline jule::Bool static__1ce0b74c1_Shr(jule::Ptr<_1ce00792d_Fn> _12319_f) {
	return static__1ce0b6e3d_result(&(_12319_f), jule::Str::lit("Shr", 3));;
}



inline jule::Bool static__1ce0b778a_Add(jule::Ptr<_1ce00792d_Fn> _12819_f) {
	return static__1ce0b6e3d_result(&(_12819_f), jule::Str::lit("Add", 3));;
}



inline jule::Bool static__1ce0b7a54_Sub(jule::Ptr<_1ce00792d_Fn> _13319_f) {
	return static__1ce0b6e3d_result(&(_13319_f), jule::Str::lit("Sub", 3));;
}



inline jule::Bool static__1ce0b7d1d_Div(jule::Ptr<_1ce00792d_Fn> _13819_f) {
	return static__1ce0b6e3d_result(&(_13819_f), jule::Str::lit("Div", 3));;
}



inline jule::Bool static__1ce0b80d7_Mul(jule::Ptr<_1ce00792d_Fn> _14319_f) {
	return static__1ce0b6e3d_result(&(_14319_f), jule::Str::lit("Mul", 3));;
}



inline jule::Bool static__1ce0b83a1_Mod(jule::Ptr<_1ce00792d_Fn> _14819_f) {
	return static__1ce0b6e3d_result(&(_14819_f), jule::Str::lit("Mod", 3));;
}



inline jule::Bool static__1ce0b866a_BitAnd(jule::Ptr<_1ce00792d_Fn> _15322_f) {
	return static__1ce0b6e3d_result(&(_15322_f), jule::Str::lit("BitAnd", 6));;
}



inline jule::Bool static__1ce0b8934_BitOr(jule::Ptr<_1ce00792d_Fn> _15821_f) {
	return static__1ce0b6e3d_result(&(_15821_f), jule::Str::lit("BitOr", 5));;
}



inline jule::Bool static__1ce0b8bed_BitXor(jule::Ptr<_1ce00792d_Fn> _16322_f) {
	return static__1ce0b6e3d_result(&(_16322_f), jule::Str::lit("BitXor", 6));;
}



inline jule::Bool static__1ce0b9072_unary(jule::Ptr<_1ce00792d_Fn>* _16722_f, jule::Str _16730_ident) {
	if (((((((((((((*(_16722_f)) == nullptr) || ((*((*(_16722_f))))._field_Ident != _16730_ident)) || ((*((*(_16722_f))))._field_Owner == nullptr)) || ((*((*(_16722_f))))._field_Instances.len() == 0LL)) || (*((*(_16722_f))))._field_Statically) || (*((*(_16722_f))))._field_Unsafety) || _1ce007da1_IsVoid((*(_16722_f)).ptr())) || ((*((*(_16722_f))))._field_Generics.len() != 0LL)) || ((*((*(_16722_f))))._field_Params.len() != 1LL)) || (*((*((*(_16722_f))))._field_Params[0LL]))._field_Mutable) || _1ce00680b_IsRef((*((*(_16722_f))))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1ce00a832_FnIns> _18213_ins = (*((*(_16722_f))))._field_Instances[0LL];;
	return (_1ce15189b_Struct((*(_18213_ins))._field_Result.ptr()) == (*_18213_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1ce0b933b_Neg(jule::Ptr<_1ce00792d_Fn> _18719_f) {
	return static__1ce0b9072_unary(&(_18719_f), jule::Str::lit("Neg", 3));;
}



inline jule::Bool static__1ce0b9605_Pos(jule::Ptr<_1ce00792d_Fn> _19219_f) {
	return static__1ce0b9072_unary(&(_19219_f), jule::Str::lit("Pos", 3));;
}



inline jule::Bool static__1ce0b98be_BitNot(jule::Ptr<_1ce00792d_Fn> _19722_f) {
	return static__1ce0b9072_unary(&(_19722_f), jule::Str::lit("BitNot", 6));;
}



inline jule::Bool static__1ce0b9c43_assign(jule::Ptr<_1ce00792d_Fn>* _20123_f, jule::Str _20131_ident) {
	if (((((((((((((((*(_20123_f)) == nullptr) || ((*((*(_20123_f))))._field_Ident != _20131_ident)) || ((*((*(_20123_f))))._field_Owner == nullptr)) || ((*((*(_20123_f))))._field_Instances.len() == 0LL)) || (*((*(_20123_f))))._field_Statically) || (*((*(_20123_f))))._field_Unsafety) || (!(_1ce007da1_IsVoid((*(_20123_f)).ptr())))) || ((*((*(_20123_f))))._field_Generics.len() != 0LL)) || ((*((*(_20123_f))))._field_Params.len() != 2LL)) || (!((*((*((*(_20123_f))))._field_Params[0LL]))._field_Mutable))) || _1ce00680b_IsRef((*((*(_20123_f))))._field_Params[0LL].ptr())) || (*((*((*(_20123_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_20123_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1ce0ba00c_AddAssign(jule::Ptr<_1ce00792d_Fn> _22125_f) {
	return static__1ce0b9c43_assign(&(_22125_f), jule::Str::lit("AddAssign", 9));;
}



inline jule::Bool static__1ce0ba2c6_SubAssign(jule::Ptr<_1ce00792d_Fn> _22625_f) {
	return static__1ce0b9c43_assign(&(_22625_f), jule::Str::lit("SubAssign", 9));;
}



inline jule::Bool static__1ce0ba590_DivAssign(jule::Ptr<_1ce00792d_Fn> _23125_f) {
	return static__1ce0b9c43_assign(&(_23125_f), jule::Str::lit("DivAssign", 9));;
}



inline jule::Bool static__1ce0ba859_MulAssign(jule::Ptr<_1ce00792d_Fn> _23625_f) {
	return static__1ce0b9c43_assign(&(_23625_f), jule::Str::lit("MulAssign", 9));;
}



inline jule::Bool static__1ce0bab23_ModAssign(jule::Ptr<_1ce00792d_Fn> _24125_f) {
	return static__1ce0b9c43_assign(&(_24125_f), jule::Str::lit("ModAssign", 9));;
}



inline jule::Bool static__1ce0baddc_ShlAssign(jule::Ptr<_1ce00792d_Fn> _24625_f) {
	return static__1ce0b9c43_assign(&(_24625_f), jule::Str::lit("ShlAssign", 9));;
}



inline jule::Bool static__1ce0bb1a6_ShrAssign(jule::Ptr<_1ce00792d_Fn> _25125_f) {
	return static__1ce0b9c43_assign(&(_25125_f), jule::Str::lit("ShrAssign", 9));;
}



inline jule::Bool static__1ce0bb470_BitOrAssign(jule::Ptr<_1ce00792d_Fn> _25627_f) {
	return static__1ce0b9c43_assign(&(_25627_f), jule::Str::lit("BitOrAssign", 11));;
}



inline jule::Bool static__1ce0bb739_BitAndAssign(jule::Ptr<_1ce00792d_Fn> _26128_f) {
	return static__1ce0b9c43_assign(&(_26128_f), jule::Str::lit("BitAndAssign", 12));;
}



inline jule::Bool static__1ce0bba03_BitXorAssign(jule::Ptr<_1ce00792d_Fn> _26628_f) {
	return static__1ce0b9c43_assign(&(_26628_f), jule::Str::lit("BitXorAssign", 12));;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce0b4e80_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1ce103dc0_pushErr(_1ce1038c5_typeCompatibilityChecker* _self_, jule::Str _11926_fmt, jule::Slice<jule::Any> _11939_args) {
	_1ce093dc6_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11926_fmt, _11939_args);
}



inline jule::Bool _1ce104156_checkTrait(_1ce1038c5_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1ce14dca5_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1ce01ac0a_Trait> _12713_trt = _1ce151b32_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _12813_ref = false;;
	{
		
		if ((_1ce1505ae_Sptr((*(_self_))._field_src) != nullptr)) {
			_case_begin_1b83e87b3:;
			{
				_12813_ref=true;
				(*(_self_))._field_src=(*(_1ce1505ae_Sptr((*(_self_))._field_src)))._field_Elem;
				if ((_1ce15189b_Struct((*(_self_))._field_src) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1b83e885c;
			}
		}
		else if ((_1ce15189b_Struct((*(_self_))._field_src) != nullptr)) {
			_case_begin_1b83e885c:;
			{
				jule::Ptr<_1cdee571d_StructIns> _13813_s = _1ce15189b_Struct((*(_self_))._field_src);;
				if ((!(_1cdee40ce_IsImplements((*(_13813_s))._field_Decl.ptr(), _12713_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_12813_ref)) && _1ce102473_traitHasReferenceReceiver(&(_12713_trt)))) {
					_1ce103dc0_pushErr(_self_, jule::Str::lit("trait has reference receiver parameter used method, cannot assign non-reference instance", 88), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ce151b32_Trait((*(_self_))._field_src) != nullptr)) {
			_case_begin_1b83e88d4:;
			{
				jule::Ptr<_1ce01ac0a_Trait> _14817_base = _1ce151b32_Trait((*(_self_))._field_src);;
				if ((_12713_trt == _14817_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_1b83ed653:;
				{
					auto expr = &((*(_14817_base))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b83eda82:;
					if (it != expr_end) {
						jule::Ptr<_1cdee2990_Struct> _15320_s1 = *it;
						{
							{
								auto expr = &((*(_12713_trt))._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b83ee445:;
								if (it != expr_end) {
									jule::Ptr<_1cdee2990_Struct> _15424_s2 = *it;
									{
										if ((_15320_s1 == _15424_s2)) {
											goto _iter_next_1b83eda82;
										};
									}
									_iter_next_1b83ee445:;
									++it;
									goto _iter_begin_1b83ee445;
								}
								_iter_end_1b83ee445:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1b83eda82:;
						++it;
						goto _iter_begin_1b83eda82;
					}
					_iter_end_1b83eda82:;
				};
				{
					auto expr = &((*_12713_trt.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b83ee896:;
					if (it != expr_end) {
						jule::Ptr<_1ce00792d_Fn> _16125_m1 = *it;
						{
							jule::Ptr<_1ce00792d_Fn> _16221_m2 = _1ce01b8a9_FindMethod(_14817_base, (*(_16125_m1))._field_Ident);;
							if ((_16221_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1ce00a832_FnIns> _16617_m1k = _1ce09d908_getTraitCheckFnKind((*(_self_))._field_s, &(_16125_m1));;
							jule::Ptr<_1ce00a832_FnIns> _16717_m2k = _1ce09d908_getTraitCheckFnKind((*(_self_))._field_s, &(_16221_m2));;
							if ((!(_1ce00b79a_equalTrait(_16617_m1k, &(_16717_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1b83ee896:;
						++it;
						goto _iter_begin_1b83ee896;
					}
					_iter_end_1b83ee896:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b83e872a:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1b83e86b4:;
	};
}



inline jule::Bool _1ce1043dc_checkPtr(_1ce1038c5_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1ce14dca5_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1ce15ca94_Ptr> _18213_dest = _1ce150845_Ptr((*(_self_))._field_dest.ptr());;
	if (_1ce15d5cd_IsUnsafe(_18213_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1ce14d3d1_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1ce104673_checkPrim(_1ce1038c5_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*((*(_self_))._field_dest))._field_Variadic))) {
		jule::Ptr<_1ce1557a1_Prim> _19113_prim = _1ce150328_Prim((*(_self_))._field_dest);;
		if (((_19113_prim != nullptr) && _1ce158ebe_IsAny(_19113_prim))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1ce14d3d1_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1ce104a6e_typeEnum(_1ce1038c5_typeCompatibilityChecker* _self_, jule::Ptr<_1ce01eb21_TypeEnum>* _19928_e, jule::Ptr<_1ce14cbc7_TypeKind>* _19947_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_19928_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b84066e4:;
		if (it != expr_end) {
			jule::Ptr<_1ce01e549_TypeEnumItem> _20021_item = *it;
			{
				if (_1ce14d3d1_Equal((*((*(_20021_item))._field_Kind))._field_Kind, (*(_19947_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1ce01eb21_TypeEnum> _20417_ke = _1ce150d62_TypeEnum((*(*_20021_item.alloc)._field_Kind.alloc)._field_Kind);;
				if ((_20417_ke == nullptr)) {
					goto _iter_next_1b84066e4;
				};
				if (_1ce104a6e_typeEnum(_self_, &(_20417_ke), _19947_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1b84066e4:;
			++it;
			goto _iter_begin_1b84066e4;
		}
		_iter_end_1b84066e4:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ce104d05_checkTypeEnum(_1ce1038c5_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1ce14d3d1_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1ce01eb21_TypeEnum> _21913_e = _1ce150d62_TypeEnum((*(_self_))._field_dest);;
	__jule_func_result = _1ce104a6e_typeEnum(_self_, &(_21913_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1ce10508b_check(_1ce1038c5_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1ce150845_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1ce1043dc_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1ce14ea75_NilCompatible((*(_self_))._field_dest)) {
		if (_1ce14dca5_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1ce150328_Prim((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1b840be36:;
			{
				__jule_func_result = _1ce104673_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1ce150d62_TypeEnum((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1b840bebe:;
			{
				__jule_func_result = _1ce104d05_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1ce151b32_Trait((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1b840b8d6:;
			{
				__jule_func_result = _1ce104156_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b840b50c:;
			{
				__jule_func_result = _1ce14d3d1_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1b840b3db:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ce1038c5_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _1ce105b08_pushErr(_1ce105674_assignTypeChecker* _self_, jule::Str _25526_fmt, jule::Slice<jule::Any> _25539_args) {
	_1ce093dc6_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25526_fmt, _25539_args);
}



inline jule::Bool _1ce105d8e_checkValidity(_1ce105674_assignTypeChecker* _self_) {
	jule::Bool _26013_valid = true;;
	{
		
		if ((_1ce151615_Fn((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b840ebe7:;
			{
				jule::Ptr<_1ce00a832_FnIns> _26313_f = _1ce151615_Fn((*(*(_self_))._field_d.alloc)._field_Kind);;
				{
					
					if (_1ce00bcb7_IsBuiltin(_26313_f.ptr())) {
						_case_begin_1b8411545:;
						{
							_1ce105b08_pushErr(_self_, jule::Str::lit("builtin define cannot use as anonymous function", 47), jule::Slice<jule::Any>());
							_26013_valid=false;
						}
					}
					else if ((*((*(_26313_f))._field_Decl))._field_Binded) {
						_case_begin_1b84115de:;
						{
							_1ce105b08_pushErr(_self_, jule::Str::lit("binded functions cannot use as anonymous function", 49), jule::Slice<jule::Any>());
							_26013_valid=false;
						}
					}
					else if (((!((*((*(_26313_f))._field_Decl))._field_Statically)) && _1ce008137_IsMethod((*_26313_f.alloc)._field_Decl))) {
						_case_begin_1b8411655:;
						{
							_1ce105b08_pushErr(_self_, jule::Str::lit("non-static methods cannot use as anonymous function", 51), jule::Slice<jule::Any>());
							_26013_valid=false;
						}
					}
					else if ((((*((*(_26313_f))._field_Decl))._field_Generics.len() > 0LL) && ((*_26313_f.alloc)._field_Generics.len() == 0LL))) {
						_case_begin_1b84116bb:;
						{
							_1ce105b08_pushErr(_self_, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
							_1ce094239_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("instantiate generic function to use as anonymous function", 57), jule::Slice<jule::Any>());
							_26013_valid=false;
						}
					}
					_match_end_1b8411468:;
				};
			}
		}
		else if ((_1ce15214e_Tup((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b840ec91:;
			{
				_1ce105b08_pushErr(_self_, jule::Str::lit("tuples cannot assign to single define in same time", 50), jule::Slice<jule::Any>());
				_26013_valid=false;
			}
		}
		_match_end_1b840eb70:;
	};
	return _26013_valid;;
}



inline jule::Bool _1ce106125_checkConst(_1ce105674_assignTypeChecker* _self_) {
	if (((!((*((*(_self_))._field_d))._field_untyped)) || (_1ce150328_Prim((*(_self_))._field_dest.ptr()) == nullptr))) {
		return false;;
	};
	jule::Str _2929_kind = (*(_1ce150328_Prim((*(_self_))._field_dest)))._field_Kind;;
	{
		
		if (_22be15843_IsFloat(_2929_kind)) {
			_case_begin_1b841764a:;
			{
				if ((!(_1ce10282a_floatAssignable(&(_2929_kind), &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2929_kind;
			}
		}
		else if (_22be15502_IsInt(_2929_kind)) {
			_case_begin_1b84176d3:;
			{
				if ((!(_1ce1033db_intAssignable(_2929_kind, &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2929_kind;
			}
		}
		else {
			_case_begin_1b84175d4:;
			{
				return false;;
			}
		}
		_match_end_1b84174b3:;
	};
	return true;;
}



inline jule::Bool _1ce1063ab_checkCompatibility(_1ce105674_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1b84198d3:;
			{
				return false;;
			}
		}
		else if ((!(_1ce105d8e_checkValidity(_self_)))) {
			_case_begin_1b841997c:;
			{
				return false;;
			}
		}
		else if (_1ce106125_checkConst(_self_)) {
			_case_begin_1b84199e3:;
			{
				return true;;
			}
		}
		else if ((_1ce150acb_Enum((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8419a59:;
			{
				jule::Ptr<_1ce14cbc7_TypeKind> _32117_dkind = (*(_self_))._field_dest;;
				if ((_1ce150acb_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_32117_dkind=(*((*(_1ce150acb_Enum((*(_self_))._field_dest)))._field_Kind))._field_Kind;
				};
				jule::Ptr<_1ce1557a1_Prim> _32513_prim = _1ce150328_Prim((*(_self_))._field_dest);;
				if (((_32513_prim == nullptr) || _1ce158ebe_IsAny(_32513_prim.ptr()))) {
					goto _match_end_1b8418b9b;
				};
				jule::Ptr<_1ce14cbc7_TypeKind> _33017_dest = (*(*(_1ce150acb_Enum((*(*(_self_))._field_d.alloc)._field_Kind)))._field_Kind.alloc)._field_Kind;;
				return _1ce09c341_checkTypeCompatibility((*(_self_))._field_s, &(_33017_dest), &(_32117_dkind), &((*(_self_))._field_errorToken));;
			}
		}
		_match_end_1b8418b9b:;
	};
	return _1ce09cc15_checkTypeCompatibility1((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1ce106642_check(_1ce105674_assignTypeChecker* _self_) {
	jule::Bool _3379_ok = _1ce1063ab_checkCompatibility(_self_);;
	if ((_3379_ok && (!((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic)))) {
		_1ce16a1cd_applyImplicitCast(&((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));
	};
	return _3379_ok;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce105674_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b8433d81_annotateConstraintElem(_1ce107049_dynamicTypeAnnotation* _self_, jule::Ptr<_1ce14cbc7_TypeKind>* _35749_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1b84355ad:;
			{
				jule::Ptr<_1ce14cbc7_TypeKind> _36021_elem = nullptr;;
				{
					
{
						_case_begin_1b84363d3:;
						{
							_36021_elem=(*(_1ce1510e8_Arr((*(_35749_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1b8436328:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1cdec3d5b_ArrTypeDecl>()))._field_Elem;
				return _1ce108754_annotateConstraint(_self_, &(_36021_elem));;
			}
		}
		_match_end_1b8435547:;
	};
	return false;;
}

inline jule::Bool _1b8433633_annotateConstraintElem(_1ce107049_dynamicTypeAnnotation* _self_, jule::Ptr<_1ce14cbc7_TypeKind>* _35749_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1b84390a6:;
			{
				jule::Ptr<_1ce14cbc7_TypeKind> _36021_elem = nullptr;;
				{
					
{
						_case_begin_1b8439c33:;
						{
							_36021_elem=(*(_1ce15137e_Slc((*(_35749_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1b8439d21:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1cdec2ec0_SlcTypeDecl>()))._field_Elem;
				return _1ce108754_annotateConstraint(_self_, &(_36021_elem));;
			}
		}
		_match_end_1b8439040:;
	};
	return false;;
}

inline jule::Bool _1b84358dd_annotateConstraintElem(_1ce107049_dynamicTypeAnnotation* _self_, jule::Ptr<_1ce14cbc7_TypeKind>* _35749_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b843cb6a:;
			{
				jule::Ptr<_1ce14cbc7_TypeKind> _36021_elem = nullptr;;
				{
					
{
						_case_begin_1b843da17:;
						{
							_36021_elem=(*(_1ce150845_Ptr((*(_35749_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1b843d8d5:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1cdec35b9_PtrTypeDecl>()))._field_Elem;
				return _1ce108754_annotateConstraint(_self_, &(_36021_elem));;
			}
		}
		_match_end_1b843cb04:;
	};
	return false;;
}

inline jule::Bool _1b843b74b_annotateConstraintElem(_1ce107049_dynamicTypeAnnotation* _self_, jule::Ptr<_1ce14cbc7_TypeKind>* _35749_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1b84412cd:;
			{
				jule::Ptr<_1ce14cbc7_TypeKind> _36021_elem = nullptr;;
				{
					
{
						_case_begin_1b84421e1:;
						{
							_36021_elem=(*(_1ce1505ae_Sptr((*(_35749_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1b8442048:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1cdec2b3a_SptrTypeDecl>()))._field_Elem;
				return _1ce108754_annotateConstraint(_self_, &(_36021_elem));;
			}
		}
		_match_end_1b8441267:;
	};
	return false;;
}



inline jule::Bool _1ce107940_annotateConstraintMap(_1ce107049_dynamicTypeAnnotation* _self_, jule::Ptr<_1ce14cbc7_TypeKind>* _37745_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1b8421d19:;
			{
				jule::Ptr<_1ce15b444_Map> _38017_m = _1ce151db8_Map((*(_37745_k)).ptr());;
				jule::Ptr<_1cdec45a9_MapTypeDecl> _38117_m2 = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1cdec45a9_MapTypeDecl>();;
				(*(_self_))._field_c=(*(_38117_m2))._field_Key;
				if ((!(_1ce108754_annotateConstraint(_self_, &((*(_38017_m))._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=(*_38117_m2.alloc)._field_Val;
				__jule_func_result = _1ce108754_annotateConstraint(_self_, &((*_38017_m.alloc)._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1b8421ca3:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ce107c81_annotateConstraintTup(_1ce107049_dynamicTypeAnnotation* _self_, jule::Ptr<_1ce14cbc7_TypeKind>* _39245_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1b8424c2e:;
			{
				jule::Ptr<_1cdec32bc_TupleTypeDecl> _39517_tup = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1cdec32bc_TupleTypeDecl>();;
				jule::Ptr<_1ce15a894_Tuple> _39617_tup2 = _1ce15214e_Tup((*(_39245_k)).ptr());;
				{
					auto expr = &((*(_39617_tup2))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b8426549:;
					if (it != expr_end) {
						jule::Ptr<_1ce14cbc7_TypeKind> _39725_t2 = *it;
						{
							{
								auto expr = &((*(_39517_tup))._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b8426e95:;
								if (it != expr_end) {
									jule::Ptr<_1cdec1a90_TypeDecl> _39829_t = *it;
									{
										(*(_self_))._field_c=_39829_t;
										if (_1ce108754_annotateConstraint(_self_, &(_39725_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1b8426e95:;
									++it;
									goto _iter_begin_1b8426e95;
								}
								_iter_end_1b8426e95:;
							};
						}
						_iter_next_1b8426549:;
						++it;
						goto _iter_begin_1b8426549;
					}
					_iter_end_1b8426549:;
				};
			}
		}
		_match_end_1b8424bb8:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ce1080c2_annotateConstraintFn(_1ce107049_dynamicTypeAnnotation* _self_, jule::Ptr<_1ce14cbc7_TypeKind>* _40944_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b84274a1:;
			{
				jule::Ptr<_1cded3750_FnDecl> _41217_pf = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1cded3750_FnDecl>();;
				jule::Ptr<_1ce00a832_FnIns> _41317_f = _1ce151615_Fn((*(_40944_k)).ptr());;
				{
					auto expr = &((*(_41317_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b8429470:;
					if (it != expr_end) {
						jule::I32 _41418_i = it - expr->begin();
						jule::Ptr<_1ce009886_ParamIns> _41425_fp = *it;
						{
							(*(_self_))._field_c=(*((*(_41217_pf))._field_Params[_41418_i]))._field_Kind;
							if (_1ce108754_annotateConstraint(_self_, &((*(_41425_fp))._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1b8429470:;
						++it;
						_41418_i++;
						goto _iter_begin_1b8429470;
					}
					_iter_end_1b8429470:;
				};
				if (((*_41217_pf.alloc)._field_Result != nullptr)) {
					(*(_self_))._field_c=(*(*_41217_pf.alloc)._field_Result.alloc)._field_Kind;
					if (_1ce108754_annotateConstraint(_self_, &((*_41317_f.alloc)._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1b842743a:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ce108413_annotateConstraintIdent(_1ce107049_dynamicTypeAnnotation* _self_, jule::Ptr<_1ce14cbc7_TypeKind>* _43047_k) {
	jule::Ptr<_1cdec219a_IdentTypeDecl> _43113_ident = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1cdec219a_IdentTypeDecl>(&__jule_any_type20);;
	jule::Ptr<_1cdee571d_StructIns> _43213_s = _1ce15189b_Struct((*(_43047_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b842cde1:;
		if (it != expr_end) {
			jule::I32 _43313_i = it - expr->begin();
			jule::Ptr<_1cdecdc9a_GenericDecl> _43316_g = *it;
			{
				if (((*(_43316_g))._field_Ident == (*(_43113_ident))._field_Ident)) {
					jule::Ptr<_1ce14b2e1_InsGeneric> _43521_fg = (*((*(_self_))._field_f))._field_Generics[_43313_i];;
					if ((_43521_fg != nullptr)) {
						return false;;
					};
					_1ce108ab7_pushGeneric(_self_, _43047_k, _43313_i);
					return true;;
				};
				if ((_43213_s == nullptr)) {
					goto _iter_next_1b842cde1;
				};
				jule::Ptr<_1cdec1a90_TypeDecl> _44517_c = (*(_self_))._field_c;;
				{
					auto expr = &((*_43113_ident.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b842d870:;
					if (it != expr_end) {
						jule::Ptr<_1cdec1a90_TypeDecl> _44625_ig = *it;
						{
							(*(_self_))._field_c=_44625_ig;
							{
								auto expr = &((*(_43213_s))._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b8431521:;
								if (it != expr_end) {
									jule::Ptr<_1ce14b2e1_InsGeneric> _44829_sg = *it;
									{
										if (_1ce108754_annotateConstraint(_self_, &((*(_44829_sg))._field_Kind))) {
											return true;;
										};
									}
									_iter_next_1b8431521:;
									++it;
									goto _iter_begin_1b8431521;
								}
								_iter_end_1b8431521:;
							};
						}
						_iter_next_1b842d870:;
						++it;
						goto _iter_begin_1b842d870;
					}
					_iter_end_1b842d870:;
				};
				(*(_self_))._field_c=_44517_c;
			}
			_iter_next_1b842cde1:;
			++it;
			_43313_i++;
			goto _iter_begin_1b842cde1;
		}
		_iter_end_1b842cde1:;
	};
	return false;;
}



inline jule::Bool _1ce108754_annotateConstraint(_1ce107049_dynamicTypeAnnotation* _self_, jule::Ptr<_1ce14cbc7_TypeKind>* _45942_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1b8430e5a:;
			{
				return _1ce108413_annotateConstraintIdent(_self_, _45942_k);;
			}
		}
		_match_end_1b8430de4:;
	};
	{
		
		if ((_1ce1510e8_Arr((*(_45942_k)).ptr()) != nullptr)) {
			_case_begin_1b8432687:;
			{
				return _1b8433d81_annotateConstraintElem(_self_, _45942_k);;
			}
		}
		else if ((_1ce15137e_Slc((*(_45942_k)).ptr()) != nullptr)) {
			_case_begin_1b84326ed:;
			{
				return _1b8433633_annotateConstraintElem(_self_, _45942_k);;
			}
		}
		else if ((_1ce150845_Ptr((*(_45942_k)).ptr()) != nullptr)) {
			_case_begin_1b8432764:;
			{
				return _1b84358dd_annotateConstraintElem(_self_, _45942_k);;
			}
		}
		else if ((_1ce1505ae_Sptr((*(_45942_k)).ptr()) != nullptr)) {
			_case_begin_1b84327ca:;
			{
				return _1b843b74b_annotateConstraintElem(_self_, _45942_k);;
			}
		}
		else if ((_1ce151db8_Map((*(_45942_k)).ptr()) != nullptr)) {
			_case_begin_1b8432841:;
			{
				return _1ce107940_annotateConstraintMap(_self_, _45942_k);;
			}
		}
		else if ((_1ce151615_Fn((*(_45942_k)).ptr()) != nullptr)) {
			_case_begin_1b8432e29:;
			{
				return _1ce1080c2_annotateConstraintFn(_self_, _45942_k);;
			}
		}
		else if ((_1ce15214e_Tup((*(_45942_k)).ptr()) != nullptr)) {
			_case_begin_1b8432e90:;
			{
				return _1ce107c81_annotateConstraintTup(_self_, _45942_k);;
			}
		}
		else {
			_case_begin_1b84329b7:;
			{
				return false;;
			}
		}
		_match_end_1b8432962:;
	};
}



inline void _1ce108ab7_pushGeneric(_1ce107049_dynamicTypeAnnotation* _self_, jule::Ptr<_1ce14cbc7_TypeKind>* _48435_k, jule::I32 _48449_i) {
	(*((*(_self_))._field_f))._field_Generics[_48449_i]=jule::new_ptr<_1ce14b2e1_InsGeneric>(_1ce14b2e1_InsGeneric{._field_Kind=(*(_48435_k)), });
	jule::Ptr<_1cdecdc9a_GenericDecl> _48613_gd = (*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics[_48449_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8445337:;
		if (it != expr_end) {
			jule::Ptr<_1ce14cbc7_TypeKind> _48721_ignored = *it;
			{
				if (((*(_48613_gd))._field_Ident == _1ce14d090_Str(_48721_ignored.ptr()))) {
					(*_48721_ignored.alloc)._field_Kind=(*((*(_48435_k))))._field_Kind;
				};
			}
			_iter_next_1b8445337:;
			++it;
			goto _iter_begin_1b8445337;
		}
		_iter_end_1b8445337:;
	};
	if ((((*_48613_gd.alloc)._field_Constraint == nullptr) || ((*((*_48613_gd.alloc)._field_Constraint))._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=(*((*_48613_gd.alloc)._field_Constraint))._field_Mask[0LL];
	_1ce108754_annotateConstraint(_self_, _48435_k);
}



inline jule::Bool _1ce108e08_annotatePrim(_1ce107049_dynamicTypeAnnotation* _self_, jule::Ptr<_1ce14cbc7_TypeKind>* _49943_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1ce10ae2c_annotateAny(_self_, _49943_k);
	return __jule_func_result;;
}



inline jule::Bool _1ce109249_annotateArr(_1ce107049_dynamicTypeAnnotation* _self_, jule::Ptr<_1ce14cbc7_TypeKind>* _50342_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ce15c0c1_Arr> _50413_parr = _1ce1510e8_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_50413_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ce15c0c1_Arr> _50813_arr = _1ce1510e8_Arr((*(_50342_k)).ptr());;
	(*(_self_))._field_k=(&((*(_50413_parr))._field_Elem));
	__jule_func_result = _1ce10b26d_annotateKind(_self_, &((*(_50813_arr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1ce10958a_annotateSlc(_1ce107049_dynamicTypeAnnotation* _self_, jule::Ptr<_1ce14cbc7_TypeKind>* _51342_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ce159ca0_Slc> _51413_pslc = _1ce15137e_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_51413_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ce159ca0_Slc> _51813_slc = _1ce15137e_Slc((*(_51342_k)).ptr());;
	(*(_self_))._field_k=(&((*(_51413_pslc))._field_Elem));
	__jule_func_result = _1ce10b26d_annotateKind(_self_, &((*(_51813_slc))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1ce109986_checkMapKey(_1ce107049_dynamicTypeAnnotation* _self_, jule::Ptr<_1ce14cbc7_TypeKind>* _52341_k, jule::Ptr<_1ce14cbc7_TypeKind>* _52361_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ce14cbc7_TypeKind>* _52413_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_52341_k;
	__jule_func_result=_1ce10b26d_annotateKind(_self_, _52361_ck);
	(*(_self_))._field_k=_52413_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1ce109cc7_annotateMap(_1ce107049_dynamicTypeAnnotation* _self_, jule::Ptr<_1ce14cbc7_TypeKind>* _53142_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ce15b444_Map> _53213_pmap = _1ce151db8_Map((*((*(_self_))._field_k)).ptr());;
	if ((_53213_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ce15b444_Map> _53613_m = _1ce151db8_Map((*(_53142_k)).ptr());;
	__jule_func_result = (_1ce109986_checkMapKey(_self_, (&((*(_53213_pmap))._field_Key)), &((*(_53613_m))._field_Key)) && _1ce109986_checkMapKey(_self_, (&((*(_53213_pmap))._field_Val)), &((*_53613_m.alloc)._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1ce10a118_annotateFn(_1ce107049_dynamicTypeAnnotation* _self_, jule::Ptr<_1ce14cbc7_TypeKind>* _54141_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ce00a832_FnIns> _54213_pf = _1ce151615_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_54213_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ce00a832_FnIns> _54613_f = _1ce151615_Fn((*(_54141_k)).ptr());;
	{
		
		if (((*(_54213_pf))._field_Params.len() != (*(_54613_f))._field_Params.len())) {
			_case_begin_1b84529b5:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1ce007da1_IsVoid((*(_54213_pf))._field_Decl.ptr()) != _1ce007da1_IsVoid((*(_54613_f))._field_Decl))) {
			_case_begin_1b8452a5e:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1b845294e:;
	};
	__jule_func_result=true;
	jule::Ptr<_1ce14cbc7_TypeKind>* _55513_old = (*(_self_))._field_k;;
	{
		auto expr = &((*(_54613_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b84548da:;
		if (it != expr_end) {
			jule::I32 _55614_i = it - expr->begin();
			jule::Ptr<_1ce009886_ParamIns> _55621_fp = *it;
			{
				(*(_self_))._field_k=(&((*((*(_54213_pf))._field_Params[_55614_i]))._field_Kind));
				__jule_func_result=(_1ce10b26d_annotateKind(_self_, &((*(_55621_fp))._field_Kind)) && __jule_func_result);
			}
			_iter_next_1b84548da:;
			++it;
			_55614_i++;
			goto _iter_begin_1b84548da;
		}
		_iter_end_1b84548da:;
	};
	if ((!(_1ce007da1_IsVoid((*(_54213_pf))._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&((*(_54213_pf))._field_Result));
		__jule_func_result=(_1ce10b26d_annotateKind(_self_, &((*_54613_f.alloc)._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_55513_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1ce10a459_annotatePtr(_1ce107049_dynamicTypeAnnotation* _self_, jule::Ptr<_1ce14cbc7_TypeKind>* _57042_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ce15ca94_Ptr> _57113_pptr = _1ce150845_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_57113_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ce15ca94_Ptr> _57513_ptr = _1ce150845_Ptr((*(_57042_k)).ptr());;
	(*(_self_))._field_k=(&((*(_57113_pptr))._field_Elem));
	__jule_func_result = _1ce10b26d_annotateKind(_self_, &((*(_57513_ptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1ce10a79a_annotateSptr(_1ce107049_dynamicTypeAnnotation* _self_, jule::Ptr<_1ce14cbc7_TypeKind>* _58043_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ce1592cc_Sptr> _58113_ssptr = _1ce1505ae_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_58113_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ce1592cc_Sptr> _58513_sptr = _1ce1505ae_Sptr((*(_58043_k)).ptr());;
	(*(_self_))._field_k=(&((*(_58113_ssptr))._field_Elem));
	__jule_func_result = _1ce10b26d_annotateKind(_self_, &((*(_58513_sptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1ce10aadb_annotateStruct(_1ce107049_dynamicTypeAnnotation* _self_, jule::Ptr<_1ce14cbc7_TypeKind>* _59045_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1cdee571d_StructIns> _59113_s = _1ce15189b_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_59113_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1cdee571d_StructIns> _59513_s2 = _1ce15189b_Struct((*(_59045_k)).ptr());;
	if (((*(_59113_s))._field_Generics.len() != (*(_59513_s2))._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_59113_s))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b845d839:;
		if (it != expr_end) {
			jule::I32 _59914_i = it - expr->begin();
			jule::Ptr<_1ce14b2e1_InsGeneric> _59921_g = *it;
			{
				jule::Ptr<_1ce14b2e1_InsGeneric> _60017_g2 = (*_59513_s2.alloc)._field_Generics[_59914_i];;
				if (_1ce14d3d1_Equal((*(_59921_g))._field_Kind, (*(_60017_g2))._field_Kind)) {
					goto _iter_next_1b845d839;
				};
				(*(_self_))._field_k=(&((*_59921_g.alloc)._field_Kind));
				if ((!(_1ce10b26d_annotateKind(_self_, &((*_60017_g2.alloc)._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b845d839:;
			++it;
			_59914_i++;
			goto _iter_begin_1b845d839;
		}
		_iter_end_1b845d839:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ce10ae2c_annotateAny(_1ce107049_dynamicTypeAnnotation* _self_, jule::Ptr<_1ce14cbc7_TypeKind>* _61242_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _6139_kind = _1ce14d090_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8461dd1:;
		if (it != expr_end) {
			jule::I32 _61413_i = it - expr->begin();
			jule::Ptr<_1cdecdc9a_GenericDecl> _61416_g = *it;
			{
				if ((_6139_kind != (*(_61416_g))._field_Ident)) {
					goto _iter_next_1b8461dd1;
				};
				jule::Ptr<_1ce14b2e1_InsGeneric> _61813_t = (*((*(_self_))._field_f))._field_Generics[_61413_i];;
				{
					
					if ((_61813_t == nullptr) || ((*(_61813_t))._field_Kind == nullptr)) {
						_case_begin_1b84636c9:;
						{
							_1ce108ab7_pushGeneric(_self_, _61242_k, _61413_i);
						}
					}
					else if ((!(_1ce14d3d1_Equal((*(_61813_t))._field_Kind, (*(_61242_k)))))) {
						_case_begin_1b8463773:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1b8463597:;
				};
				(*((*((*(_self_))._field_k))))._field_Kind=(*((*(_61242_k))))._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1b8461dd1:;
			++it;
			_61413_i++;
			goto _iter_begin_1b8461dd1;
		}
		_iter_end_1b8461dd1:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ce10b26d_annotateKind(_1ce107049_dynamicTypeAnnotation* _self_, jule::Ptr<_1ce14cbc7_TypeKind>* _63343_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1ce10ae2c_annotateAny(_self_, _63343_k)) {
			_case_begin_1b8465cc5:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ce150328_Prim((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1b8465d3b:;
			{
				__jule_func_result = _1ce108e08_annotatePrim(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ce1510e8_Arr((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1b8465da2:;
			{
				__jule_func_result = _1ce109249_annotateArr(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ce15137e_Slc((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1b8465e29:;
			{
				__jule_func_result = _1ce10958a_annotateSlc(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ce151db8_Map((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1b84660c2:;
			{
				__jule_func_result = _1ce109cc7_annotateMap(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ce151615_Fn((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1b8466138:;
			{
				__jule_func_result = _1ce10a118_annotateFn(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ce150845_Ptr((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1b846619e:;
			{
				__jule_func_result = _1ce10a459_annotatePtr(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ce1505ae_Sptr((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1b8466226:;
			{
				__jule_func_result = _1ce10a79a_annotateSptr(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ce15189b_Struct((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1b846629d:;
			{
				__jule_func_result = _1ce10aadb_annotateStruct(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b8465ba4:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1b8465720:;
	};
}



inline jule::Bool _1ce10b504_annotate(_1ce107049_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*((*(_self_))._field_p))._field_Kind));
	__jule_func_result = _1ce10b26d_annotateKind(_self_, &((*((*(_self_))._field_a))._field_Kind));
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce107049_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1ce10c417_pushErrToken(_1ce10bda6_fnCallArgChecker* _self_, jule::Ptr<_1cdeab4b4_Token> _67831_token, jule::Str _67846_fmt, jule::Slice<jule::Any> _67859_args) {
	_1ce093dc6_pushErr((*((*(_self_))._field_e))._field_s.ptr(), _67831_token, _67846_fmt, _67859_args);
}



inline void _1ce10c77a_pushErr(_1ce10bda6_fnCallArgChecker* _self_, jule::Str _68226_fmt, jule::Slice<jule::Any> _68239_args) {
	_1ce10c417_pushErrToken(_self_, (*(_self_))._field_errorToken, _68226_fmt, _68239_args);
}



inline jule::Slice<jule::Ptr<_1ce009886_ParamIns>> _1ce10ca11_getParams(_1ce10bda6_fnCallArgChecker* _self_) {
	if (((((*((*(_self_))._field_f))._field_Params.len() > 0LL) && ((*((*(*(_self_))._field_f.alloc)._field_Params[0LL]))._field_Decl != nullptr)) && _1ce006575_IsSelf((*((*(*(_self_))._field_f.alloc)._field_Params[0LL]))._field_Decl))) {
		return (*(*(_self_))._field_f.alloc)._field_Params.slice(1LL);;
	};
	return (*(*(_self_))._field_f.alloc)._field_Params;;
}



inline jule::Bool _1ce10cd52_checkCounts(_1ce10bda6_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1ce009886_ParamIns>>* _69531_params) {
	jule::Bool __jule_func_result = false;
	jule::I32 _69613_n = (*(_69531_params)).len();;
	if (((_69613_n > 0LL) && _1ce006575_IsSelf((*((*(_69531_params))[0LL]))._field_Decl.ptr()))) {
		(_69613_n)--;
	};
	jule::I32 _70113_diff = (_69613_n - (*(_self_))._field_args.len());;
	jule::Str _70213_log = jule::Str();;
	{
		
		if ((_70113_diff == 0LL)) {
			_case_begin_1b8472c6b:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_69613_n > 0LL) && (*(*((*(_69531_params))[(_69613_n - 1LL)]))._field_Decl.alloc)._field_Variadic)) {
			_case_begin_1b8472b7d:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_70113_diff < 0LL) || (_70113_diff > (*(_69531_params)).len()))) {
			_case_begin_1b847284d:;
			{
				_70213_log=jule::Str::lit("argument overflow: passed more argument than expected to call @", 63);
			}
		}
		else {
			_case_begin_1b84727d7:;
			{
				_70213_log=jule::Str::lit("missing arguments to call @", 27);
			}
		}
		_match_end_1b8472782:;
	};
	_22ab0b88c_StrBuilder _71313_err = static__22ab0bb56_New(32LL);;
	_22ab154bc_WriteStr(&_71313_err, (*((*((*(_self_))._field_f))._field_Decl))._field_Ident);
	_22ab154bc_WriteStr(&_71313_err, jule::Str::lit("\n       want (", 14));
	{
		auto expr = _69531_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8475565:;
		if (it != expr_end) {
			jule::I32 _71613_i = it - expr->begin();
			jule::Ptr<_1ce009886_ParamIns> *_71616_p = it;
			{
				_22ab154bc_WriteStr(&_71313_err, _1ce14d090_Str((*((*(_71616_p))))._field_Kind.ptr()));
				if ((((*(_69531_params)).len() - _71613_i) > 1LL)) {
					_22ab154bc_WriteStr(&_71313_err, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1b8475565:;
			++it;
			_71613_i++;
			goto _iter_begin_1b8475565;
		}
		_iter_end_1b8475565:;
	};
	_22ab15775_WriteByte(&_71313_err, ')');
	_1ce10c77a_pushErr(_self_, _70213_log, jule::Slice<jule::Any>::make({jule::Any(_22ab15cb4_Str(&_71313_err), &__jule_any_type4)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ce10d308_checkArg(_1ce10bda6_fnCallArgChecker* _self_, jule::Ptr<_1ce009886_ParamIns>* _72732_p, jule::Ptr<_1ce11bc0c_Data>* _72751_arg, jule::Ptr<_1cdeab4b4_Token>* _72768_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1ce00cb0e_parameterUsesGenerics(_72732_p, &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics)))) {
		__jule_func_result=((!((*((*((*(_72732_p))))._field_Decl))._field_Variadic)) && _1ce115992_isGoodValueToInfer(_72751_arg));
		if (__jule_func_result) {
			_1ce107049_dynamicTypeAnnotation _73221_dta = _1ce107049_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_72732_p)), ._field_a=(*(_72751_arg)), ._field_errorToken=(*(_72768_errorToken)), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1ce10b504_annotate(&_73221_dta);
		};
		if ((!(__jule_func_result))) {
			_1ce10c417_pushErrToken(_self_, (*(_72768_errorToken)), jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1ce0a0c6d_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, (*(*((*(_72732_p))))._field_Decl.alloc)._field_Mutable, (*(*((*(_72732_p))))._field_Decl.alloc)._field_Reference, &((*((*(_72732_p))))._field_Kind), _72751_arg, _72768_errorToken)) {
		__jule_func_result = _1ce09b8d4_checkAssignType((*(*(_self_))._field_e.alloc)._field_s, (*(*((*(_72732_p))))._field_Decl.alloc)._field_Reference, &((*((*(_72732_p))))._field_Kind), _72751_arg, (*(_72768_errorToken)));
		return __jule_func_result;;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ce10d704_push(_1ce10bda6_fnCallArgChecker* _self_, jule::Ptr<_1ce009886_ParamIns>* _75628_p, jule::Ptr<_1cdec5dc4_Expr> _75646_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ce14cbc7_TypeKind> _75713_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _7589_oldImmut = (*(*(_self_))._field_e.alloc)._field_immutable;;
	(*(*(_self_))._field_e.alloc)._field_immutable=(!((*((*((*(_75628_p))))._field_Decl))._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(*((*(_75628_p))))._field_Decl.alloc)._field_Variadic)))) {
		(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_75628_p))))._field_Kind;
	} else {
		(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
	};
	jule::Ptr<_1ce11bc0c_Data> _76613_d = _1ce13bb94_evalExpr((*(_self_))._field_e, _75646_arg);;
	(*(*(_self_))._field_e.alloc)._field_prefix=_75713_old;
	(*(*(_self_))._field_e.alloc)._field_immutable=_7589_oldImmut;
	if ((_76613_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1ce10d308_checkArg(_self_, _75628_p, &(_76613_d), &((*(_75646_arg))._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_76613_d))._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _1ce10db00_pushVariadic(_1ce10bda6_fnCallArgChecker* _self_, jule::Ptr<_1ce009886_ParamIns>* _78036_p, jule::I32 _78054_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _78213_variadiced = false;;
	jule::Bool _7839_more = ((_78054_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1cdeec071_SliceExprModel> _78413_model = jule::new_ptr<_1cdeec071_SliceExprModel>(_1cdeec071_SliceExprModel{._field_ElemKind=(*((*(_78036_p))))._field_Kind, });;
	jule::Ptr<_1ce14cbc7_TypeKind> _78813_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Ptr<_1ce14cbc7_TypeKind> _79513_oldKind = (*((*(_78036_p))))._field_Kind;;
	(*((*(_78036_p))))._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>((*(*((*(_78036_p))))._field_Kind.alloc));
	(*(*((*(_78036_p))))._field_Kind.alloc)._field_Variadic=false;
	__JULE_DEFER({
		(*(*((*(_78036_p))))._field_Kind.alloc)._field_Variadic=false;
		(*((*(_78036_p))))._field_Kind=_79513_oldKind;
	});;
	for (; (_78054_i < (*(_self_))._field_args.len()); (_78054_i)++) {
		{
			jule::Ptr<_1cdec5dc4_Expr> _80417_arg = (*(_self_))._field_args[_78054_i];;
			{
				auto &_match_expr{ (*(_80417_arg))._field_Kind };
				
				if (_match_expr.type == &__jule_any_type75) {
					_case_begin_1b8487654:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(jule::new_ptr<_1ce159ca0_Slc>(_1ce159ca0_Slc{._field_Elem=(*((*(_78036_p))))._field_Kind}), 22)});
					}
				}
				else {
					_case_begin_1b8487951:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_78036_p))))._field_Kind;
					}
				}
				_match_end_1b84878eb:;
			};
			jule::Ptr<_1ce11bc0c_Data> _81717_d = _1ce13b512_eval((*(_self_))._field_e, _80417_arg);;
			if ((_81717_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1b8486b09;
			};
			if ((*((*(_81717_d))._field_Kind))._field_Variadic) {
				_78213_variadiced=true;
				(*(*((*(_78036_p))))._field_Kind.alloc)._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1ce10d308_checkArg(_self_, _78036_p, &(_81717_d), &((*(_80417_arg))._field_Token)));
				(*(*((*(_78036_p))))._field_Kind.alloc)._field_Variadic=false;
				{
					auto &_match_expr{ (*(_81717_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type76) {
						_case_begin_1b848a0b3:;
						{
							_78413_model=(*(_81717_d))._field_Model.unsafe_cast_ptr<_1cdeec071_SliceExprModel>();
							(*(_78413_model))._field_ElemKind=(*((*(_78036_p))))._field_Kind;
						}
					}
					else {
						_case_begin_1b848b6e1:;
						{
							_78413_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_81717_d))._field_Model); };
						}
					}
					_match_end_1b848b68b:;
				};
				(_78054_i)++;
				goto _iter_end_1b8486b09;
			};
			__jule_func_result=(__jule_func_result && _1ce10d308_checkArg(_self_, _78036_p, &(_81717_d), &((*_80417_arg.alloc)._field_Token)));
			(*(_78413_model))._field_Elems=jule::append((*_78413_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({(*(_81717_d))._field_Model}));
		}
	_iter_next_1b8486b09:;
	}
	_iter_end_1b8486b09:;;
	(*(*(_self_))._field_e.alloc)._field_prefix=_78813_old;
	if ((_78213_variadiced && _7839_more)) {
		_1ce10c417_pushErrToken(_self_, (*((*(_self_))._field_args[_78054_i]))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
	};
	if ((_78413_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_78413_model, &__jule_any_type76)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1ce10de41_checkArgs(_1ce10bda6_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1ce009886_ParamIns>>* _86133_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _8629_arg = (*((*(_self_))._field_e))._field_arg;;
	(*(*(_self_))._field_e.alloc)._field_arg=true;
	__jule_func_result=true;
	jule::I32 _86613_i = 0LL;;
	if ((((*(_86133_params)).len() > 0LL) && _1ce006575_IsSelf((*((*(_86133_params))[0LL]))._field_Decl.ptr()))) {
		(_86613_i)++;
	};
	_julec_label_1b8491a59:;
	while ((_86613_i < (*(_86133_params)).len())) {
		{
			jule::Ptr<_1ce009886_ParamIns> _87317_p = (*(_86133_params))[_86613_i];;
			{
				
				if ((*(*(_87317_p))._field_Decl.alloc)._field_Variadic) {
					_case_begin_1b8493693:;
					{
						__jule_func_result=(_1ce10db00_pushVariadic(_self_, &(_87317_p), _86613_i) && __jule_func_result);
						goto _iter_end_1b8491dcd;
					}
				}
				else if (((*(_self_))._field_args.len() <= _86613_i)) {
					_case_begin_1b8493792:;
					{
						__jule_func_result=false;
						goto _iter_end_1b8491dcd;
					}
				}
				else {
					_case_begin_1b84932ec:;
					{
						__jule_func_result=(_1ce10d704_push(_self_, &(_87317_p), (*(_self_))._field_args[_86613_i]) && __jule_func_result);
					}
				}
				_match_end_1b8493286:;
			};
			(_86613_i)++;
		}
	_iter_next_1b8491dcd:;
	}
	_iter_end_1b8491dcd:;;
	(*(*(_self_))._field_e.alloc)._field_arg=_8629_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1ce10e1c7_checkDynamicTypeAnnotation(_1ce10bda6_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_f))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8495970:;
		if (it != expr_end) {
			jule::Ptr<_1ce14b2e1_InsGeneric> _89316_g = *it;
			{
				if ((_89316_g == nullptr)) {
					_1ce10c77a_pushErr(_self_, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b8495970:;
			++it;
			goto _iter_begin_1b8495970;
		}
		_iter_end_1b8495970:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ce10e45d_check(_1ce10bda6_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1ce009886_ParamIns>> _90313_params = _1ce10ca11_getParams(_self_);;
	__jule_func_result=_1ce10cd52_checkCounts(_self_, &(_90313_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1ce10de41_checkArgs(_self_, &(_90313_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1ce10e1c7_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce10bda6_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1ce11033d_pushErr(_1ce10ecdd_structLitChecker* _self_, jule::Ptr<_1cdeab4b4_Token> _94126_token, jule::Str _94141_fmt, jule::Slice<jule::Any> _94154_args) {
	_1ce11de84_pushErr((*(_self_))._field_e.ptr(), _94126_token, _94141_fmt, _94154_args);
}



inline void _1ce1106a1_pushSuggestion(_1ce10ecdd_structLitChecker* _self_, jule::Str _94633_fmt, jule::Slice<jule::Any> _94646_args) {
	_1ce11e2e7_pushSuggestion((*(_self_))._field_e.ptr(), _94633_fmt, _94646_args);
}



inline void _1ce110abe_pushMatch(_1ce10ecdd_structLitChecker* _self_, jule::Ptr<_1cdee4b6d_FieldIns>* _95033_f, jule::Ptr<_1ce11bc0c_Data>* _95052_d, jule::Ptr<_1cdeab4b4_Token>* _95067_errorToken) {
	;
	jule::Bool _9569_mutable = ((!((*((*(_self_))._field_e))._field_immutable)) || ((*((*((*(_95033_f))))._field_Decl))._field_Mutable && ((*((*(_self_))._field_s))._field_Methods.len() > 0LL)));;
	if (_1ce0a0c6d_checkValidityForInitExpr((*(*(_self_))._field_e.alloc)._field_s, _9569_mutable, false, &((*((*(_95033_f))))._field_Kind), _95052_d, _95067_errorToken)) {
		_1ce09b8d4_checkAssignType((*(*(_self_))._field_e.alloc)._field_s, false, &((*((*(_95033_f))))._field_Kind), _95052_d, (*(_95067_errorToken)));
	};
	{ jule::Slice<jule::Ptr<_1cdeea5be_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_1cdeea5be_StructArgExprModel>(_1cdeea5be_StructArgExprModel{._field_Token=(*(_95067_errorToken)), ._field_Field=(*(_95033_f)), ._field_Expr=(*(_95052_d))})); };
}



inline void _1ce110e32_checkPair(_1ce10ecdd_structLitChecker* _self_, jule::Ptr<_1cdeca5e3_FieldExprPair>* _96933_pair, jule::Slice<jule::Ptr<_1cdec5dc4_Expr>>* _96960_exprs) {
	jule::Ptr<_1cdee4b6d_FieldIns> _97113_f = _1cdee6ac6_FindField((*(_self_))._field_s.ptr(), (*((*((*(_96933_pair))))._field_Field))._field_Kind);;
	if ((_97113_f == nullptr)) {
		_1ce11033d_pushErr(_self_, (*((*(_96933_pair))))._field_Field, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_96933_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4)}));
		return;;
	};
	if ((!(_1ce094635_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_97113_f))._field_Decl))._field_Public, (*(*(_97113_f))._field_Decl.alloc)._field_Token)))) {
		_1ce11033d_pushErr(_self_, (*((*(_96933_pair))))._field_Field, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_96933_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4)}));
		_1ce1106a1_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	_julec_label_1b84a1b35:;
	{
		auto expr = _96960_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b849e924:;
		if (it != expr_end) {
			jule::Ptr<_1cdec5dc4_Expr> _98321_expr = *it;
			{
				{
					auto &_match_expr{ (*(_98321_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type77) {
						_case_begin_1b84a2eee:;
						{
							jule::Ptr<_1cdeca5e3_FieldExprPair> _98621_dpair = (*(_98321_expr))._field_Kind.unsafe_cast_ptr<_1cdeca5e3_FieldExprPair>();;
							{
								
								if (((*(_96933_pair)) == _98621_dpair)) {
									_case_begin_1b84a3ecd:;
									{
										goto _iter_end_1b849e924;
									}
								}
								else if (((*(*((*(_96933_pair))))._field_Field.alloc)._field_Kind == (*(*(_98621_dpair))._field_Field.alloc)._field_Kind)) {
									_case_begin_1b84a4077:;
									{
										_1ce11033d_pushErr(_self_, (*((*(_96933_pair))))._field_Field, jule::Str::lit("@ already has expression", 24), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_96933_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4)}));
										goto _iter_end_1b849e924;
									}
								}
								_match_end_1b84a3e56:;
							};
						}
					}
					_match_end_1b84a2e88:;
				};
			}
			_iter_next_1b849e924:;
			++it;
			goto _iter_begin_1b849e924;
		}
		_iter_end_1b849e924:;
	};
	jule::Ptr<_1ce14cbc7_TypeKind> _99713_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_99713_prefix;
	});;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_97113_f))._field_Kind;
	jule::Ptr<_1ce11bc0c_Data> _100113_d = _1ce13bb94_evalExpr((*(_self_))._field_e, (*((*(_96933_pair))))._field_Expr);;
	if ((_100113_d == nullptr)) {
		return;;
	};
	_1ce110abe_pushMatch(_self_, &(_97113_f), &(_100113_d), &((*((*(_96933_pair))))._field_Field));
}



inline jule::Bool _1ce111273_readyExprs(_1ce10ecdd_structLitChecker* _self_, jule::Slice<jule::Ptr<_1cdec5dc4_Expr>>* _100834_exprs) {
	jule::Bool _100913_ok = true;;
	{
		auto expr = _100834_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b84a7b91:;
		if (it != expr_end) {
			jule::I32 _101014_i = it - expr->begin();
			jule::Ptr<_1cdec5dc4_Expr> _101021_expr = *it;
			{
				{
					auto &_match_expr{ (*(_101021_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_1b84a9126:;
						{
							jule::Ptr<_1cdecbbee_KeyValPair> _101321_pair = (*(_101021_expr))._field_Kind.unsafe_cast_ptr<_1cdecbbee_KeyValPair>();;
							{
								auto &_match_expr{ (*((*(_101321_pair))._field_Key))._field_Kind };
								
								if (_match_expr.type == &__jule_any_type79) {
									_case_begin_1b84a9ea1:;
									{
										goto _match_end_1b84aa468;
									}
								}
								else {
									_case_begin_1b84aa4bd:;
									{
										_1ce11033d_pushErr(_self_, (*(_101321_pair))._field_Colon, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
										_100913_ok=false;
										goto _iter_next_1b84a7b91;
									}
								}
								_match_end_1b84aa468:;
							};
							(*((*(_100834_exprs))[_101014_i]))._field_Kind=jule::Any(jule::new_ptr<_1cdeca5e3_FieldExprPair>(_1cdeca5e3_FieldExprPair{._field_Field=(*((*(_101321_pair))._field_Key))._field_Token, ._field_Expr=(*_101321_pair.alloc)._field_Val}), &__jule_any_type77);
						}
					}
					_match_end_1b84a90b0:;
				};
			}
			_iter_next_1b84a7b91:;
			++it;
			_101014_i++;
			goto _iter_begin_1b84a7b91;
		}
		_iter_end_1b84a7b91:;
	};
	return _100913_ok;;
}



inline void _1ce11152b_check(_1ce10ecdd_structLitChecker* _self_, jule::Slice<jule::Ptr<_1cdec5dc4_Expr>>* _103229_exprs) {
	if (((*(_103229_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1ce111273_readyExprs(_self_, _103229_exprs)))) {
		return;;
	};
	jule::Bool _103913_paired = false;;
	{
		auto expr = _103229_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b84acaec:;
		if (it != expr_end) {
			jule::I32 _104014_i = it - expr->begin();
			jule::Ptr<_1cdec5dc4_Expr> _104021_expr = *it;
			{
				{
					auto &_match_expr{ (*(_104021_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type77) {
						_case_begin_1b84b3c02:;
						{
							jule::Ptr<_1cdeca5e3_FieldExprPair> _104321_pair = (*(_104021_expr))._field_Kind.unsafe_cast_ptr<_1cdeca5e3_FieldExprPair>();;
							if (((_104014_i > 0LL) && (!(_103913_paired)))) {
								_1ce11033d_pushErr(_self_, (*(_104321_pair))._field_Field, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							_103913_paired=true;
							_1ce110e32_checkPair(_self_, &(_104321_pair), _103229_exprs);
						}
					}
					else {
						_case_begin_1b84ad911:;
						{
							if (_103913_paired) {
								_1ce11033d_pushErr(_self_, (*(_104021_expr))._field_Token, jule::Str::lit("argument must target to field", 29), jule::Slice<jule::Any>());
							};
							if ((_104014_i >= (*((*(_self_))._field_s))._field_Fields.len())) {
								_1ce11033d_pushErr(_self_, (*_104021_expr.alloc)._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>());
								goto _iter_next_1b84acaec;
							};
							jule::Ptr<_1cdee4b6d_FieldIns> _105821_field = (*(*(_self_))._field_s.alloc)._field_Fields[_104014_i];;
							if ((!(_1ce094635_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_105821_field))._field_Decl))._field_Public, (*(*_105821_field.alloc)._field_Decl.alloc)._field_Token)))) {
								_1ce11033d_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("structure cannot instantiating because it has non-public fields", 63), jule::Slice<jule::Any>());
								_1ce1106a1_pushSuggestion(_self_, jule::Str::lit("use field:expression pairs to instantiate", 41), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1ce14cbc7_TypeKind> _106621_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
							__JULE_DEFER({
								(*(*(_self_))._field_e.alloc)._field_prefix=_106621_prefix;
							});;
							(*(*(_self_))._field_e.alloc)._field_prefix=(*_105821_field.alloc)._field_Kind;
							jule::Ptr<_1ce11bc0c_Data> _107021_d = _1ce13bb94_evalExpr((*(_self_))._field_e, _104021_expr);;
							if ((_107021_d == nullptr)) {
								goto _iter_next_1b84acaec;
							};
							_1ce110abe_pushMatch(_self_, &(_105821_field), &(_107021_d), &((*_104021_expr.alloc)._field_Token));
						}
					}
					_match_end_1b84ad8ab:;
				};
			}
			_iter_next_1b84acaec:;
			++it;
			_104014_i++;
			goto _iter_begin_1b84acaec;
		}
		_iter_end_1b84acaec:;
	};
	if ((!(_103913_paired))) {
		jule::I32 _108113_n = (*((*(_self_))._field_s))._field_Fields.len();;
		jule::I32 _108217_diff = (_108113_n - (*(_103229_exprs)).len());;
		{
			
			if ((_108217_diff <= 0LL)) {
				_case_begin_1b84b6a3a:;
				{
					return;;
				}
			}
			_match_end_1b84b692a:;
		};
		_22ab0b88c_StrBuilder _108817_idents = static__22ab0bb56_New(32LL);;
		for (; (_108217_diff > 0LL); (_108217_diff)--) {
			{
				_22ab154bc_WriteStr(&_108817_idents, jule::Str::lit(", ", 2));
				_22ab154bc_WriteStr(&_108817_idents, (*((*((*(*(_self_))._field_s.alloc)._field_Fields[(_108113_n - _108217_diff)]))._field_Decl))._field_Ident);
			}
		_iter_next_1b84b7387:;
		}
		_iter_end_1b84b7387:;;
		_1ce11033d_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(static_cast<jule::Str>(_22ab16765_Buf(&_108817_idents).slice(2LL)), &__jule_any_type4)}));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ce10ecdd_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ce0b4105_Var> _1ce1120a9_buildVar(_1ce111ac0_rangeChecker* _self_, jule::Ptr<_1cded490a_VarDecl>* _110828_decl) {
	jule::Ptr<_1ce0b4105_Var> _110913_v = _1ce013d79_buildVar((*(_110828_decl)));;
	return _110913_v;;
}



inline void _1ce1122a7_setSizeKey(_1ce111ac0_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1cdeadd9b_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyA=_1ce1120a9_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_Kind=(*(_1ce238422_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
}



inline void _1ce1126c5_checkRangeExprValidity(_1ce111ac0_rangeChecker* _self_, jule::Ptr<_1ce11bc0c_Data>* _112746_d, jule::Ptr<_1ce0b4105_Var>* _112757_key, jule::Ptr<_1ce14cbc7_TypeKind>* _112773_k) {
	jule::Bool _112813__mut = (*((*(_112757_key))))._field_Mutable;;
	if ((_112813__mut && (!(_1ce14e558_Mutable((*(_112773_k)).ptr()))))) {
		_112813__mut=false;
	};
	_1ce0a0c6d_checkValidityForInitExpr((*((*(_self_))._field_sc))._field_s, _112813__mut, (*((*(_112757_key))))._field_Reference, &((*((*((*(_112757_key))))._field_Kind))._field_Kind), _112746_d, &((*((*(_self_))._field_rang))._field_InToken));
}



inline void _1ce1128c3_checkSlice(_1ce111ac0_rangeChecker* _self_) {
	_1ce1122a7_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1cdeadd9b_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1ce159ca0_Slc> _114613_slc = _1ce15137e_Slc((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1ce1120a9_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1ce154d99_TypeSymbol>(_1ce154d99_TypeSymbol{._field_Kind=(*(_114613_slc))._field_Elem});
	_1ce1126c5_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_114613_slc.alloc)._field_Elem));
}



inline void _1ce112ac1_checkArray(_1ce111ac0_rangeChecker* _self_) {
	_1ce1122a7_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1cdeadd9b_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1ce15c0c1_Arr> _115913_arr = _1ce1510e8_Arr((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1ce1120a9_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1ce154d99_TypeSymbol>(_1ce154d99_TypeSymbol{._field_Kind=(*(_115913_arr))._field_Elem});
	_1ce1126c5_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_115913_arr.alloc)._field_Elem));
}



inline void _1ce112cbe_checkMapKeyA(_1ce111ac0_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1cdeadd9b_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1ce15b444_Map> _117113_m = _1ce151db8_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyA=_1ce1120a9_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_Kind=jule::new_ptr<_1ce154d99_TypeSymbol>(_1ce154d99_TypeSymbol{._field_Kind=(*(_117113_m))._field_Key});
	jule::Ptr<_1ce11bc0c_Data> _117513_d = jule::new_ptr<_1ce11bc0c_Data>((*(*(_self_))._field_d.alloc));;
	(*_117513_d.alloc)._field_Kind=(*_117113_m.alloc)._field_Key;
	_1ce1126c5_checkRangeExprValidity(_self_, &(_117513_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyA), &((*_117113_m.alloc)._field_Key));
}



inline void _1ce112ebc_checkMapKeyB(_1ce111ac0_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1cdeadd9b_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1ce15b444_Map> _118613_m = _1ce151db8_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1ce1120a9_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1ce154d99_TypeSymbol>(_1ce154d99_TypeSymbol{._field_Kind=(*(_118613_m))._field_Val});
	jule::Ptr<_1ce11bc0c_Data> _119013_d = jule::new_ptr<_1ce11bc0c_Data>((*(*(_self_))._field_d.alloc));;
	(*_119013_d.alloc)._field_Kind=(*_118613_m.alloc)._field_Val;
	_1ce1126c5_checkRangeExprValidity(_self_, &(_119013_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_118613_m.alloc)._field_Val));
}



inline void _1ce1131ba_checkMap(_1ce111ac0_rangeChecker* _self_) {
	_1ce112cbe_checkMapKeyA(_self_);
	_1ce112ebc_checkMapKeyB(_self_);
}



inline void _1ce1133b8_checkStr(_1ce111ac0_rangeChecker* _self_) {
	_1ce1122a7_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1cdeadd9b_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1ce1120a9_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=(*(_1ce238422_findBuiltinTypeAlias(jule::Str::lit("u8", 2))))._field_Kind;
}



inline void _1ce1135b6_checkComptime(_1ce111ac0_rangeChecker* _self_) {
	_1ce1122a7_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyA != nullptr) && (*(*(*(_self_))._field_rang.alloc)._field_KeyA.alloc)._field_Mutable)) {
		_1ce093dc6_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(*(*(_self_))._field_rang.alloc)._field_KeyA.alloc)._field_Token, jule::Str::lit("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*(*(*(_self_))._field_rang.alloc)._field_KeyA.alloc)._field_Ident, &__jule_any_type4)}));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB != nullptr) && (*(*(*(_self_))._field_rang.alloc)._field_KeyB.alloc)._field_Mutable)) {
		_1ce093dc6_pushErr((*(*(_self_))._field_sc.alloc)._field_s, (*(*(*(_self_))._field_rang.alloc)._field_KeyB.alloc)._field_Token, jule::Str::lit("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*(*(*(_self_))._field_rang.alloc)._field_KeyB.alloc)._field_Ident, &__jule_any_type4)}));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB == nullptr) || _1cdeadd9b_IsIgnoreIdent((*(*(*(_self_))._field_rang.alloc)._field_KeyB.alloc)._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1ce1120a9_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
}



inline jule::Bool _1ce11384c_checkComptimeRange(_1ce111ac0_rangeChecker* _self_) {
	jule::Ptr<_1ce022c78_comptimeRange> _122513_range = _1ce1536c2_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_122513_range))._field_kind };
		
		if (_match_expr.type_is(true, 0) || _match_expr.type_is(true, 2) || _match_expr.type_is(true, 3) || _match_expr.type_is(true, 4) || _match_expr.type_is(true, 1) || _match_expr.type_is(true, 5)) {
			_case_begin_1b84dd37a:;
			{
				_1ce1135b6_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1b84dd677:;
			{
				_1ce093dc6_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1b84dd622:;
	};
}



inline jule::Bool _1ce113ad3_check(_1ce111ac0_rangeChecker* _self_) {
	{
		
		if ((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic) {
			_case_begin_1b84e0767:;
		}
		else if ((_1ce15137e_Slc((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b84e004c:;
			{
				_1ce1128c3_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1ce1510e8_Arr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b84e00b3:;
			{
				_1ce112ac1_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1ce151db8_Map((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b84e07cd:;
			{
				_1ce1131ba_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1ce1536c2_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b84e0844:;
			{
				return _1ce11384c_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1b84deeb4:;
			{
				jule::Ptr<_1ce1557a1_Prim> _125713_prim = _1ce150328_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (((_125713_prim != nullptr) && _1ce158c38_IsStr(_125713_prim))) {
					_1ce1133b8_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1b84ded2c:;
	};
	_1ce093dc6_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce111ac0_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1ce114760_prepareTypes(_1ce114331_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1ce00ba31_Types((*(_self_))._field_f);
	};
}



inline void _1ce114a18_prepareExprs(_1ce114331_retTypeChecker* _self_, jule::Ptr<_1cdec5dc4_Expr>* _128536_e) {
	if (((*(_128536_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_128536_e))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1b84e72b8:;
			{
				(*(_self_))._field_exprs=(*((*((*(_128536_e))))._field_Kind.unsafe_cast_ptr<_1cdec69b8_TupleExpr>()))._field_Expr;
			}
		}
		else {
			_case_begin_1b84e74a5:;
			{
				{ jule::Slice<jule::Ptr<_1cdec5dc4_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_128536_e))); };
			}
		}
		_match_end_1b84e7450:;
	};
}



inline void _1ce114c16_checkExprs(_1ce114331_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1ce11bc0c_Data>> _130113_datas = jule::Slice<jule::Ptr<_1ce11bc0c_Data>>::alloc(0LL, (*(_self_))._field_exprs.len());;
	jule::Ptr<_1ce11d934_Eval> _130213_eval = _1ce09b373_eval((*((*(_self_))._field_sc))._field_s, jule::Trait<_1ce16c7b8_Lookup>((*(_self_))._field_sc, 0));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b84ea2aa:;
		if (it != expr_end) {
			jule::I32 _130314_i = it - expr->begin();
			jule::Ptr<_1cdec5dc4_Expr> _130321_expr = *it;
			{
				if ((_130314_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1b84ea2aa;
				};
				jule::Ptr<_1ce14cbc7_TypeKind> _130817_t = (*(_self_))._field_types[_130314_i];;
				(*(_130213_eval))._field_prefix=_130817_t;
				jule::Ptr<_1ce11bc0c_Data> _131117_d = _1ce13bb94_evalExpr(_130213_eval, _130321_expr);;
				if ((_131117_d == nullptr)) {
					goto _iter_next_1b84ea2aa;
				};
				{ jule::Slice<jule::Ptr<_1ce11bc0c_Data>> &__jule_push_dest = _130113_datas; __jule_push_dest.push(_131117_d); };
				if (((!((*(_131117_d))._field_Mutable)) && _1ce14e558_Mutable((*(_131117_d))._field_Kind.ptr()))) {
					_1ce093dc6_pushErr((*(*(_self_))._field_sc.alloc)._field_s, (*(_self_))._field_errorToken, jule::Str::lit("mutable typed return expressions should be mutable", 50), jule::Slice<jule::Any>());
					return;;
				};
				_1ce105674_assignTypeChecker _132317_ac = _1ce105674_assignTypeChecker{._field_s=(*(*(_self_))._field_sc.alloc)._field_s, ._field_dest=_130817_t, ._field_d=_131117_d, ._field_errorToken=(*(_self_))._field_errorToken};;
				_1ce106642_check(&_132317_ac);
			}
			_iter_next_1b84ea2aa:;
			++it;
			_130314_i++;
			goto _iter_begin_1b84ea2aa;
		}
		_iter_end_1b84ea2aa:;
	};
	if ((_130113_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1ce0002a5_TupleExprModel>(_1ce0002a5_TupleExprModel{._field_Datas=_130113_datas}), &__jule_any_type81);
	} else if ((_130113_datas.len() == 1LL)) {
		(*(_self_))._field_model=(*(_130113_datas[0LL]))._field_Model;
	};
}



inline jule::Bool _1ce114e9c_tryFuncMultiRetForward(_1ce114331_retTypeChecker* _self_) {
	jule::Ptr<_1ce11d934_Eval> _134413_eval = _1ce09b373_eval((*((*(_self_))._field_sc))._field_s, jule::Trait<_1ce16c7b8_Lookup>((*(_self_))._field_sc, 0));;
	jule::Ptr<_1ce11bc0c_Data> _134513_d = _1ce13bb94_evalExpr(_134413_eval, (*(_self_))._field_exprs[0LL]);;
	if ((_134513_d == nullptr)) {
		return true;;
	};
	jule::Ptr<_1ce15a894_Tuple> _135113_tup = _1ce15214e_Tup((*(_134513_d))._field_Kind.ptr());;
	if ((_135113_tup == nullptr)) {
		return false;;
	};
	if (((*(_135113_tup))._field_Types.len() != (*(_self_))._field_types.len())) {
		goto _julec_label_1b850545d;
	};
	(*(_self_))._field_model=(*(_134513_d))._field_Model;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8501e4e:;
		if (it != expr_end) {
			jule::I32 _135913_i = it - expr->begin();
			{
				if ((!(_1ce09bd8a__checkTypeCompatibility((*(*(_self_))._field_sc.alloc)._field_s, &((*(_self_))._field_types[_135913_i]), &((*(_135113_tup))._field_Types[_135913_i]), (*(_self_))._field_errorToken)))) {
					goto _julec_label_1b850545d;
				};
			}
			_iter_next_1b8501e4e:;
			++it;
			_135913_i++;
			goto _iter_begin_1b8501e4e;
		}
		_iter_end_1b8501e4e:;
	};
	return true;;
	_julec_label_1b850545d:;
	_22ab0b88c_StrBuilder _136613_wanted = static__22ab0bb56_New(32LL);;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b850623e:;
		if (it != expr_end) {
			jule::I32 _136713_i = it - expr->begin();
			jule::Ptr<_1ce14cbc7_TypeKind> _136716_t = *it;
			{
				_22ab154bc_WriteStr(&_136613_wanted, _1ce14d090_Str(_136716_t.ptr()));
				if ((((*(_self_))._field_types.len() - _136713_i) > 1LL)) {
					_22ab154bc_WriteStr(&_136613_wanted, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1b850623e:;
			++it;
			_136713_i++;
			goto _iter_begin_1b850623e;
		}
		_iter_end_1b850623e:;
	};
	_22ab0b88c_StrBuilder _137313_given = static__22ab0bb56_New(32LL);;
	{
		auto expr = &((*(_135113_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8507e44:;
		if (it != expr_end) {
			jule::I32 _137413_i = it - expr->begin();
			jule::Ptr<_1ce14cbc7_TypeKind> _137416_t = *it;
			{
				_22ab154bc_WriteStr(&_137313_given, _1ce14d090_Str(_137416_t.ptr()));
				if ((((*(_self_))._field_types.len() - _137413_i) > 1LL)) {
					_22ab154bc_WriteStr(&_137313_given, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1b8507e44:;
			++it;
			_137413_i++;
			goto _iter_begin_1b8507e44;
		}
		_iter_end_1b8507e44:;
	};
	_1ce093dc6_pushErr((*(*(_self_))._field_sc.alloc)._field_s, (*(_self_))._field_errorToken, jule::Str::lit("function return forwaring is wrong\n       want (@)\n       have (@)", 66), jule::Slice<jule::Any>::make({jule::Any(_22ab15cb4_Str(&_136613_wanted), &__jule_any_type4),jule::Any(_22ab15cb4_Str(&_137313_given), &__jule_any_type4)}));
	return false;;
}



inline jule::Bool _1ce1152dd_check(_1ce114331_retTypeChecker* _self_, jule::Ptr<_1cdec5dc4_Expr>* _138429_e) {
	_1ce114760_prepareTypes(_self_);
	_1ce114a18_prepareExprs(_self_, _138429_e);
	{
		
		if ((((*(_self_))._field_exprs.len() == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
			_case_begin_1b850b420:;
			{
				if ((!(_1ce008b71_AnyVar((*((*(_self_))._field_f))._field_Decl.ptr())))) {
					_1ce093dc6_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("return statements of non-void functions should have return expression", 69), jule::Slice<jule::Any>());
					return false;;
				};
				return true;;
			}
		}
		else if (((((*(_self_))._field_exprs.len() > 0LL) && ((*(_self_))._field_f != nullptr)) && _1ce007da1_IsVoid((*(*(_self_))._field_f.alloc)._field_Decl.ptr()))) {
			_case_begin_1b850b486:;
			{
				_1ce093dc6_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("void functions is cannot returns any value", 42), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if ((((*(_self_))._field_exprs.len() == 1LL) && ((*(_self_))._field_types.len() > 1LL))) {
			_case_begin_1b850b4ec:;
			{
				{
					auto &_match_expr{ (*((*(_self_))._field_exprs[0LL]))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type82) {
						_case_begin_1b8510ba5:;
						{
							if (_1ce114e9c_tryFuncMultiRetForward(_self_)) {
								return true;;
							};
						}
					}
					_match_end_1b8510b0b:;
				};
				_1ce093dc6_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (((*(_self_))._field_exprs.len() < (*(_self_))._field_types.len())) {
			_case_begin_1b850b563:;
			{
				_1ce093dc6_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
			}
		}
		else if (((*(_self_))._field_exprs.len() > (*(_self_))._field_types.len())) {
			_case_begin_1b850b5c9:;
			{
				_1ce093dc6_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("overflow return expressions", 27), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b850b2bb:;
	};
	_1ce114c16_checkExprs(_self_);
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce114331_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ce06b0ac_ImportInfo> _1ce116d7d_SelectPackage(_1ce116894_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1ce06b0ac_ImportInfo>)> _2732_selector) {
	if ((_2732_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8513ea5:;
		if (it != expr_end) {
			jule::Ptr<_1ce06b0ac_ImportInfo> _3121_pkg = *it;
			{
				if (_2732_selector(_3121_pkg)) {
					return _3121_pkg;;
				};
			}
			_iter_next_1b8513ea5:;
			++it;
			goto _iter_begin_1b8513ea5;
		}
		_iter_end_1b8513ea5:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ce0b4105_Var> _1ce117279_FindVar(_1ce116894_SymbolTable* _self_, jule::Str _4126_ident, jule::Bool _4138_binded) {
	return _1ce11905b_findVar(_self_, &(_4126_ident), _4138_binded, false);;
}



inline jule::Ptr<_1ce14bdd5_TypeAlias> _1ce117675_FindTypeAlias(_1ce116894_SymbolTable* _self_, jule::Str _4732_ident, jule::Bool _4744_binded) {
	return _1ce119512_findTypeAlias(_self_, &(_4732_ident), _4744_binded, false);;
}



inline jule::Ptr<_1cdee2990_Struct> _1ce117a71_FindStruct(_1ce116894_SymbolTable* _self_, jule::Str _5329_ident, jule::Bool _5341_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b85166c2:;
		if (it != expr_end) {
			jule::Ptr<_1cdee2990_Struct> _5421_s = *it;
			{
				if ((((*(_5421_s))._field_Ident == _5329_ident) && ((*_5421_s.alloc)._field_Binded == _5341_binded))) {
					return _5421_s;;
				};
			}
			_iter_next_1b85166c2:;
			++it;
			goto _iter_begin_1b85166c2;
		}
		_iter_end_1b85166c2:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ce00792d_Fn> _1ce117e6c_FindFn(_1ce116894_SymbolTable* _self_, jule::Str _6425_ident, jule::Bool _6437_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8517c12:;
		if (it != expr_end) {
			jule::Ptr<_1ce00792d_Fn> _6521_f = *it;
			{
				if ((((*(_6521_f))._field_Ident == _6425_ident) && ((*_6521_f.alloc)._field_Binded == _6437_binded))) {
					return _6521_f;;
				};
			}
			_iter_next_1b8517c12:;
			++it;
			goto _iter_begin_1b8517c12;
		}
		_iter_end_1b8517c12:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ce01ac0a_Trait> _1ce1182ad_FindTrait(_1ce116894_SymbolTable* _self_, jule::Str _7528_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8519032:;
		if (it != expr_end) {
			jule::Ptr<_1ce01ac0a_Trait> _7621_t = *it;
			{
				if (((*(_7621_t))._field_Ident == _7528_ident)) {
					return _7621_t;;
				};
			}
			_iter_next_1b8519032:;
			++it;
			goto _iter_begin_1b8519032;
		}
		_iter_end_1b8519032:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ce01d416_Enum> _1ce1185ee_FindEnum(_1ce116894_SymbolTable* _self_, jule::Str _8627_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b851a000:;
		if (it != expr_end) {
			jule::Ptr<_1ce01d416_Enum> _8721_e = *it;
			{
				if (((*(_8721_e))._field_Ident == _8627_ident)) {
					return _8721_e;;
				};
			}
			_iter_next_1b851a000:;
			++it;
			goto _iter_begin_1b851a000;
		}
		_iter_end_1b851a000:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ce01eb21_TypeEnum> _1ce118940_FindTypeEnum(_1ce116894_SymbolTable* _self_, jule::Str _9731_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b851aebd:;
		if (it != expr_end) {
			jule::Ptr<_1ce01eb21_TypeEnum> _9821_e = *it;
			{
				if (((*(_9821_e))._field_Ident == _9731_ident)) {
					return _9821_e;;
				};
			}
			_iter_next_1b851aebd:;
			++it;
			goto _iter_begin_1b851aebd;
		}
		_iter_end_1b851aebd:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ce0b4105_Var> _1ce11905b_findVar(_1ce116894_SymbolTable* _self_, jule::Str* _10827_ident, jule::Bool _10839_binded, jule::Bool _10853_reverse) {
	if (_10853_reverse) {
		jule::I32 _11017_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_11017_i >= 0LL); (_11017_i)--) {
			{
				jule::Ptr<_1ce0b4105_Var> _11221_v = (*(_self_))._field_Vars[_11017_i];;
				if ((((*(_11221_v))._field_Ident == (*(_10827_ident))) && ((*_11221_v.alloc)._field_Binded == _10839_binded))) {
					return _11221_v;;
				};
			}
		_iter_next_1b851cd16:;
		}
		_iter_end_1b851cd16:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b851ce26:;
			if (it != expr_end) {
				jule::Ptr<_1ce0b4105_Var> _11825_v = *it;
				{
					if ((((*(_11825_v))._field_Ident == (*(_10827_ident))) && ((*_11825_v.alloc)._field_Binded == _10839_binded))) {
						return _11825_v;;
					};
				}
				_iter_next_1b851ce26:;
				++it;
				goto _iter_begin_1b851ce26;
			}
			_iter_end_1b851ce26:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1ce14bdd5_TypeAlias> _1ce119512_findTypeAlias(_1ce116894_SymbolTable* _self_, jule::Str* _12733_ident, jule::Bool _12745_binded, jule::Bool _12759_reverse) {
	if (_12759_reverse) {
		jule::I32 _12917_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_12917_i >= 0LL); (_12917_i)--) {
			{
				jule::Ptr<_1ce14bdd5_TypeAlias> _13121_ta = (*(_self_))._field_TypeAliases[_12917_i];;
				if ((((*(_13121_ta))._field_Ident == (*(_12733_ident))) && ((*_13121_ta.alloc)._field_Binded == _12745_binded))) {
					return _13121_ta;;
				};
			}
		_iter_next_1b852115a:;
		}
		_iter_end_1b852115a:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b852126a:;
			if (it != expr_end) {
				jule::Ptr<_1ce14bdd5_TypeAlias> _13725_ta = *it;
				{
					if ((((*(_13725_ta))._field_Ident == (*(_12733_ident))) && ((*_13725_ta.alloc)._field_Binded == _12745_binded))) {
						return _13725_ta;;
					};
				}
				_iter_next_1b852126a:;
				++it;
				goto _iter_begin_1b852126a;
			}
			_iter_end_1b852126a:;
		};
	};
	return nullptr;;
}



inline jule::Any _1ce11990d_defByIdent(_1ce116894_SymbolTable* _self_, jule::Str* _14830_ident, jule::Bool _14842_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8523822:;
		if (it != expr_end) {
			jule::Ptr<_1ce0b4105_Var> _14921_v = *it;
			{
				if ((((*(_14921_v))._field_Ident == (*(_14830_ident))) && ((*_14921_v.alloc)._field_Binded == _14842_binded))) {
					return jule::Any(_14921_v, &__jule_any_type8);;
				};
			}
			_iter_next_1b8523822:;
			++it;
			goto _iter_begin_1b8523822;
		}
		_iter_end_1b8523822:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8523b96:;
		if (it != expr_end) {
			jule::Ptr<_1ce14bdd5_TypeAlias> _15521_ta = *it;
			{
				if ((((*(_15521_ta))._field_Ident == (*(_14830_ident))) && ((*_15521_ta.alloc)._field_Binded == _14842_binded))) {
					return jule::Any(_15521_ta, &__jule_any_type66);;
				};
			}
			_iter_next_1b8523b96:;
			++it;
			goto _iter_begin_1b8523b96;
		}
		_iter_end_1b8523b96:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8524b0e:;
		if (it != expr_end) {
			jule::Ptr<_1cdee2990_Struct> _16121_s = *it;
			{
				if ((((*(_16121_s))._field_Ident == (*(_14830_ident))) && ((*_16121_s.alloc)._field_Binded == _14842_binded))) {
					return jule::Any(_16121_s, &__jule_any_type65);;
				};
			}
			_iter_next_1b8524b0e:;
			++it;
			goto _iter_begin_1b8524b0e;
		}
		_iter_end_1b8524b0e:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8525acc:;
		if (it != expr_end) {
			jule::Ptr<_1ce00792d_Fn> _16721_f = *it;
			{
				if ((((*(_16721_f))._field_Ident == (*(_14830_ident))) && ((*_16721_f.alloc)._field_Binded == _14842_binded))) {
					return jule::Any(_16721_f, &__jule_any_type64);;
				};
			}
			_iter_next_1b8525acc:;
			++it;
			goto _iter_begin_1b8525acc;
		}
		_iter_end_1b8525acc:;
	};
	if (_14842_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b85279be:;
		if (it != expr_end) {
			jule::Ptr<_1ce01ac0a_Trait> _17721_t = *it;
			{
				if (((*(_17721_t))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_17721_t, &__jule_any_type10);;
				};
			}
			_iter_next_1b85279be:;
			++it;
			goto _iter_begin_1b85279be;
		}
		_iter_end_1b85279be:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8528162:;
		if (it != expr_end) {
			jule::Ptr<_1ce01d416_Enum> _18321_e = *it;
			{
				if (((*(_18321_e))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_18321_e, &__jule_any_type67);;
				};
			}
			_iter_next_1b8528162:;
			++it;
			goto _iter_begin_1b8528162;
		}
		_iter_end_1b8528162:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b85290db:;
		if (it != expr_end) {
			jule::Ptr<_1ce01eb21_TypeEnum> _18921_te = *it;
			{
				if (((*(_18921_te))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_18921_te, &__jule_any_type68);;
				};
			}
			_iter_next_1b85290db:;
			++it;
			goto _iter_begin_1b85290db;
		}
		_iter_end_1b85290db:;
	};
	return nullptr;;
}



inline jule::Bool _1ce119db4_isDuplicatedIdent(_1ce116894_SymbolTable* _self_, jule::Uintptr _20132_itself, jule::Str* _20150_ident, jule::Bool _20162_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b852a340:;
		if (it != expr_end) {
			jule::Ptr<_1ce0b4105_Var> *_20216_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20216_v))) != _20132_itself) && ((*((*(_20216_v))))._field_Ident == (*(_20150_ident)))) && ((*(*(_20216_v)).alloc)._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1b852a340:;
			++it;
			goto _iter_begin_1b852a340;
		}
		_iter_end_1b852a340:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b852a692:;
		if (it != expr_end) {
			jule::Ptr<_1ce14bdd5_TypeAlias> *_20816_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20816_ta))) != _20132_itself) && ((*((*(_20816_ta))))._field_Ident == (*(_20150_ident)))) && ((*(*(_20816_ta)).alloc)._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1b852a692:;
			++it;
			goto _iter_begin_1b852a692;
		}
		_iter_end_1b852a692:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b852b82a:;
		if (it != expr_end) {
			jule::Ptr<_1cdee2990_Struct> *_21416_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21416_s))) != _20132_itself) && ((*((*(_21416_s))))._field_Ident == (*(_20150_ident)))) && ((*(*(_21416_s)).alloc)._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1b852b82a:;
			++it;
			goto _iter_begin_1b852b82a;
		}
		_iter_end_1b852b82a:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b852ca6d:;
		if (it != expr_end) {
			jule::Ptr<_1ce00792d_Fn> *_22016_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22016_f))) != _20132_itself) && ((*((*(_22016_f))))._field_Ident == (*(_20150_ident)))) && ((*(*(_22016_f)).alloc)._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1b852ca6d:;
			++it;
			goto _iter_begin_1b852ca6d;
		}
		_iter_end_1b852ca6d:;
	};
	if (_20162_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b852ee5a:;
		if (it != expr_end) {
			jule::Ptr<_1ce01ac0a_Trait> *_23016_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23016_t))) != _20132_itself) && ((*((*(_23016_t))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1b852ee5a:;
			++it;
			goto _iter_begin_1b852ee5a;
		}
		_iter_end_1b852ee5a:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6acd93c:;
		if (it != expr_end) {
			jule::Ptr<_1ce01d416_Enum> *_23616_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23616_e))) != _20132_itself) && ((*((*(_23616_e))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1e6acd93c:;
			++it;
			goto _iter_begin_1e6acd93c;
		}
		_iter_end_1e6acd93c:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7ac47a8:;
		if (it != expr_end) {
			jule::Ptr<_1ce01eb21_TypeEnum> *_24216_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24216_te))) != _20132_itself) && ((*((*(_24216_te))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1b7ac47a8:;
			++it;
			goto _iter_begin_1b7ac47a8;
		}
		_iter_end_1b7ac47a8:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce116894_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ce11c0e7_IsNil(_1ce11bc0c_Data* _self_) {
	return _1ce14dca5_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1ce11c37d_IsVoid(_1ce11bc0c_Data* _self_) {
	return _1ce14e03b_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1ce11c614_IsConst(_1ce11bc0c_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1ce11c955_GoodOperand(_1ce11bc0c_Data* _self_, jule::Ptr<_1ce11bc0c_Data>* _10531_other) {
	if ((_1ce150d62_TypeEnum((*((*(_10531_other))))._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1ce150328_Prim((*((*(_10531_other))))._field_Kind) == nullptr) || (!(_1ce158ebe_IsAny(_1ce150328_Prim((*((*(_10531_other))))._field_Kind).ptr())))) && (_1ce151b32_Trait((*((*(_10531_other))))._field_Kind) == nullptr)) && (!(_1ce14dca5_IsNil((*(_self_))._field_Kind))));;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce11bc0c_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce11cd84_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _1ce11de84_pushErr(_1ce11d934_Eval* _self_, jule::Ptr<_1cdeab4b4_Token> _13626_token, jule::Str _13641_fmt, jule::Slice<jule::Any> _13654_args) {
	_1ce093dc6_pushErr((*(_self_))._field_s.ptr(), _13626_token, _13641_fmt, _13654_args);
}



inline void _1ce11e2e7_pushSuggestion(_1ce11d934_Eval* _self_, jule::Str _14133_fmt, jule::Slice<jule::Any> _14146_args) {
	_1ce094239_pushSuggestion((*(_self_))._field_s.ptr(), _14133_fmt, _14146_args);
}



inline void _1ce11e4e5_allowBuiltin(_1ce11d934_Eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1ce11e6e3_disallowBuiltin(_1ce11d934_Eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1ce11e979_isUnsafe(_1ce11d934_Eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1ce11ec10_isGlobal(_1ce11d934_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1e6b25148:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1e6b25555:;
			{
				return false;;
			}
		}
		_match_end_1e6b25500:;
	};
}



inline jule::Bool _1ce12001d_applyNumericPrefix(_1ce11d934_Eval* _self_, jule::Ptr<_1ce11bc0c_Data>* _16842_d) {
	if ((((((*(_16842_d)) == nullptr) || (!(_1ce11c614_IsConst((*(_16842_d)).ptr())))) || (_1ce150328_Prim((*((*(_16842_d))))._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1ce1557a1_Prim> _1759_prim = _1ce150328_Prim((*(_self_))._field_prefix.ptr());;
	if ((_1759_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_22be15843_IsFloat(_1ce155ae2_Str(_1759_prim.ptr()))) {
			_case_begin_1e6b27e70:;
			{
				(*((*(_16842_d))))._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>((*((*(_self_))._field_prefix)));
				_22be19baa_SetF64((*((*(_16842_d))))._field_Constant.ptr(), _22be18d30_AsF64((*((*(_16842_d))))._field_Constant));
				(*(*((*(_16842_d))))._field_Constant.alloc)._field_Kind=(*(_1759_prim))._field_Kind;
			}
		}
		else if (_22be14e2a_IsSigInt(_1ce155ae2_Str(_1759_prim.ptr()))) {
			_case_begin_1e6b27ed6:;
			{
				if ((!(_1ce102b9e_sigAssignable(_1ce155ae2_Str(_1759_prim.ptr()), _16842_d)))) {
					return false;;
				};
				(*((*(_16842_d))))._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>((*((*(_self_))._field_prefix)));
				_22be190d8_SetI64((*((*(_16842_d))))._field_Constant.ptr(), _22be18813_AsI64((*((*(_16842_d))))._field_Constant));
				(*(*((*(_16842_d))))._field_Constant.alloc)._field_Kind=(*(_1759_prim))._field_Kind;
			}
		}
		else if (_22be15238_IsUnsigInt(_1ce155ae2_Str(_1759_prim.ptr()))) {
			_case_begin_1e6b2804c:;
			{
				if ((!(_1ce103067_unsigAssignable(_1ce155ae2_Str(_1759_prim.ptr()), _16842_d)))) {
					return false;;
				};
				(*((*(_16842_d))))._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>((*((*(_self_))._field_prefix)));
				_22be19391_SetU64((*((*(_16842_d))))._field_Constant.ptr(), _22be18a99_AsU64((*((*(_16842_d))))._field_Constant));
				(*(*((*(_16842_d))))._field_Constant.alloc)._field_Kind=(*(_1759_prim))._field_Kind;
			}
		}
		_match_end_1e6b27ac9:;
	};
	return true;;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce12035e_litStr(_1ce11d934_Eval* _self_, jule::Ptr<_1cdec6d5e_LitExpr>* _20322_l) {
	jule::Str _20413_s = jule::Str();;
	if (_1cdeac8a0_IsRawStr((*((*(_20322_l))))._field_Value)) {
		_20413_s=_1ce100e00_ToRawStr((*((*(_20322_l))))._field_Value);
	} else {
		_20413_s=_1ce101241_ToStr((*((*(_20322_l))))._field_Value);
	};
	jule::Ptr<_22be1616d_Const> _21013_constant = static__22be16e0a_NewStr(_20413_s);;
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce2353db_primStr, ._field_Mutable=true, ._field_Model=jule::Any(_21013_constant, &__jule_any_type19), ._field_Constant=_21013_constant});;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce1206a0_litRune(_1ce11d934_Eval* _self_, jule::Ptr<_1cdec6d5e_LitExpr>* _22023_l) {
	jule::I32 _2219_r = _1ce100be1_ToRune((*((*(_22023_l))))._field_Value);;
	jule::Ptr<_1ce11bc0c_Data> _22213_data = jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Constant=static__22be165ad_NewI64(static_cast<jule::I64>(_2219_r))});;
	jule::Bool _2269_isAscii = _1ce0d5ab6_IsAscii(_2219_r);;
	if (_2269_isAscii) {
		(*(_22213_data))._field_Kind=_1ce236dc1_primU8;
	} else {
		(*(_22213_data))._field_Kind=_1ce236860_primI32;
	};
	(*(_22213_data))._field_Model=jule::Any(jule::new_ptr<_1ce004001_RuneExprModel>(_1ce004001_RuneExprModel{._field_Code=_2219_r}), &__jule_any_type83);
	(*_22213_data.alloc)._field_Mutable=true;
	(*_22213_data.alloc)._field_IsRune=true;
	(*_22213_data.alloc)._field_untyped=true;
	return _22213_data;;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce1209e1_litFloat(_1ce11d934_Eval* _self_, jule::Ptr<_1cdec6d5e_LitExpr>* _24024_l) {
	jule::F64 _2419_f = ({
		auto except = _22bded056_ParseFloat((*((*(_24024_l))))._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_22be1616d_Const> _24213_constant = static__22be171c4_NewF64(_2419_f);;
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_untyped=true, ._field_Kind=_1ce237d6c_primF64, ._field_Mutable=true, ._field_Model=jule::Any(_24213_constant, &__jule_any_type19), ._field_Constant=_24213_constant});;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce120d32_litInt(_1ce11d934_Eval* _self_, jule::Ptr<_1cdec6d5e_LitExpr>* _25226_l) {
	;
	jule::Str _25513_lit = (*((*(_25226_l))))._field_Value;;
	jule::I32 _25613_base = 0LL;;
	{
		
		if (_22aae7867_HasPrefix(_25513_lit, jule::Str::lit("0x", 2))) {
			_case_begin_1e6b37a73:;
			{
				(_25513_lit).mut_slice(2LL);;
				_25613_base=16LLU;
			}
		}
		else if (_22aae7867_HasPrefix(_25513_lit, jule::Str::lit("0b", 2))) {
			_case_begin_1e6b37974:;
			{
				(_25513_lit).mut_slice(2LL);;
				_25613_base=2LLU;
			}
		}
		else if (_22aae7867_HasPrefix(_25513_lit, jule::Str::lit("0o", 2))) {
			_case_begin_1e6b37644:;
			{
				(_25513_lit).mut_slice(2LL);;
				_25613_base=8LLU;
			}
		}
		else if (((_25513_lit[0LL] == '0') && (_25513_lit.len() > 1LL))) {
			_case_begin_1e6b376aa:;
			{
				(_25513_lit).mut_slice(1LL);;
				_25613_base=8LLU;
			}
		}
		else {
			_case_begin_1e6b375cd:;
			{
				_25613_base=10LLU;
			}
		}
		_match_end_1e6b37567:;
	};
	jule::Ptr<_1ce11bc0c_Data> _27613_d = jule::new_ptr<_1ce11bc0c_Data>();;
	jule::Bool _27813_ok = true;;
	jule::I64 _2799_sig = ({
		auto except = _22bde6736_ParseInt(_25513_lit, _25613_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_27813_ok=false;

			0LL;
		});
	});;
	if (_27813_ok) {
		(*_27613_d.alloc)._field_Constant=static__22be165ad_NewI64(_2799_sig);
		(*_27613_d.alloc)._field_Kind=_1ce2360bd_primInt;
	} else {
		jule::U64 _28713_unsig = ({
			auto except = _22bde6280_ParseUint(_25513_lit, _25613_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1ce11de84_pushErr(_self_, (*((*(_25226_l))))._field_Token, jule::Str::lit("arithmetic value overflow: this value too big", 45), jule::Slice<jule::Any>());
				_1ce11e2e7_pushSuggestion(_self_, jule::Str::lit("floating-point literals may solve your problem", 46), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		(*_27613_d.alloc)._field_Constant=static__22be16877_NewU64(_28713_unsig);
		(*_27613_d.alloc)._field_Kind=_1ce235c05_primUint;
	};
	(*_27613_d.alloc)._field_Model=jule::Any((*_27613_d.alloc)._field_Constant, &__jule_any_type19);
	(*_27613_d.alloc)._field_untyped=true;
	if ((!(_1ce12001d_applyNumericPrefix(_self_, &(_27613_d))))) {
		_1ce145b9d_fitBitsize(&(_27613_d));
	};
	return _27613_d;;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce121173_litNum(_1ce11d934_Eval* _self_, jule::Ptr<_1cdec6d5e_LitExpr>* _30726_l) {
	{
		
		if (_1cdead54e_IsFloat((*((*(_30726_l))))._field_Value)) {
			_case_begin_1e6b3e915:;
			{
				return _1ce1209e1_litFloat(_self_, _30726_l);;
			}
		}
		else {
			_case_begin_1e6b3e89e:;
			{
				return _1ce120d32_litInt(_self_, _30726_l);;
			}
		}
		_match_end_1e6b3e7b1:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce1214b4_evalLit(_1ce11d934_Eval* _self_, jule::Ptr<_1cdec6d5e_LitExpr> _31626_lit) {
	{
		
		if (_1cdeac619_IsStr((*(_31626_lit))._field_Value)) {
			_case_begin_1e6b40a7b:;
			{
				return _1ce12035e_litStr(_self_, &(_31626_lit));;
			}
		}
		else if (_1cdeacb69_IsRune((*(_31626_lit))._field_Value)) {
			_case_begin_1e6b40b25:;
			{
				return _1ce1206a0_litRune(_self_, &(_31626_lit));;
			}
		}
		else if (_1cdead818_IsNum((*(_31626_lit))._field_Value)) {
			_case_begin_1e6b40b9c:;
			{
				return _1ce121173_litNum(_self_, &(_31626_lit));;
			}
		}
		else {
			_case_begin_1e6b4051a:;
			{
				return nullptr;;
			}
		}
		_match_end_1e6b4041b:;
	};
}



inline jule::Any _1ce121805_findBuiltins(_1ce11d934_Eval* _self_, jule::Str* _32932_ident) {
	if (_1ce0884e7_IsPub((*(_32932_ident)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 1)) {
				_case_begin_1e6b42dbe:;
				{
					jule::Any _33321_def = _1ce14596c_findBuiltinsImport(_32932_ident, (*(_self_))._field_lookup.cast_ptr<_1ce06b0ac_ImportInfo>(1));;
					if ((_33321_def != nullptr)) {
						return _33321_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, 3)) {
				_case_begin_1e6b42b16:;
				{
					jule::Any _33821_def = _1ce1466c6_findBuiltinsSema(_32932_ident, (*(_self_))._field_lookup.cast_ptr<_1ce08b42e_Sema>(3));;
					if ((_33821_def != nullptr)) {
						return _33821_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, 0)) {
				_case_begin_1e6b42e35:;
				{
					jule::Any _34321_def = _1ce1466c6_findBuiltinsSema(_32932_ident, (*((*(_self_))._field_lookup.cast_ptr<_1ce051acb_scopeChecker>(0)))._field_s);;
					if ((_34321_def != nullptr)) {
						return _34321_def;;
					};
				}
			}
			_match_end_1e6b42d25:;
		};
		return nullptr;;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1ce2386a8_findBuiltinDef(_32932_ident);;
}



inline jule::Any _1ce121c01_getDef(_1ce11d934_Eval* _self_, jule::Str* _35626_ident, jule::Bool _35638_binded) {
	jule::Ptr<_1ce0b4105_Var> _36113_v = _1ce16c7b8_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ce16ae9d_FindVar((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_36113_v != nullptr)) {
		return jule::Any(_36113_v, &__jule_any_type8);;
	};
	jule::Ptr<_1ce14bdd5_TypeAlias> _36613_ta = _1ce16c7b8_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ce16b399_FindTypeAlias((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_36613_ta != nullptr)) {
		return jule::Any(_36613_ta, &__jule_any_type66);;
	};
	if ((!(_35638_binded))) {
		jule::Ptr<_1ce01d416_Enum> _37217_enm = _1ce16c7b8_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ce16c323_FindEnum((*(_self_))._field_lookup, (*(_35626_ident)));;
		if ((_37217_enm != nullptr)) {
			return jule::Any(_37217_enm, &__jule_any_type67);;
		};
		jule::Ptr<_1ce01eb21_TypeEnum> _37717_tenm = _1ce16c7b8_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ce16c664_FindTypeEnum((*(_self_))._field_lookup, (*(_35626_ident)));;
		if ((_37717_tenm != nullptr)) {
			return jule::Any(_37717_tenm, &__jule_any_type68);;
		};
	};
	jule::Ptr<_1ce00792d_Fn> _38313_f = _1ce16c7b8_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ce16bb91_FindFn((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_38313_f != nullptr)) {
		return jule::Any(_38313_f, &__jule_any_type64);;
	};
	jule::Ptr<_1cdee2990_Struct> _38813_s = _1ce16c7b8_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ce16b795_FindStruct((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_38813_s != nullptr)) {
		return jule::Any(_38813_s, &__jule_any_type65);;
	};
	return _1ce121805_findBuiltins(_self_, _35626_ident);;
}



inline jule::Ptr<_1ce00da00_ReferenceStack> _1ce121e87_getOwnerRefers(_1ce11d934_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1e6b4b35b:;
			{
				jule::Ptr<_1ce051acb_scopeChecker> _39917_sc = _1ce054e53_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1ce051acb_scopeChecker>(0));;
				return (*((*(_39917_sc))._field_owner))._field_Refers;;
			}
		}
		else {
			_case_begin_1e6b4abeb:;
			{
				if ((((*(_self_))._field_owner != nullptr) && ((*(*(_self_))._field_owner.alloc)._field_Scope == nullptr))) {
					return (*(*(_self_))._field_owner.alloc)._field_Refers;;
				};
			}
		}
		_match_end_1e6b4ab96:;
	};
	return nullptr;;
}



inline void _1e6b5dca8_pushReference(_1ce11d934_Eval* _self_, jule::Ptr<_1ce00a832_FnIns>* _41140_ref) {
	jule::Ptr<_1ce00da00_ReferenceStack> _41213_refers = _1ce121e87_getOwnerRefers(_self_);;
	if (((_41213_refers != nullptr) && (!(_1e6b6110c_Exist(_41213_refers, (*(_41140_ref))))))) {
		_1ce00e7e2_Push(_41213_refers, jule::Any((*(_41140_ref)), &__jule_any_type7));
	};
}

inline void _1e6b73aae_pushReference(_1ce11d934_Eval* _self_, jule::Ptr<_1ce0b4105_Var>* _41140_ref) {
	jule::Ptr<_1ce00da00_ReferenceStack> _41213_refers = _1ce121e87_getOwnerRefers(_self_);;
	if (((_41213_refers != nullptr) && (!(_1e6b75dad_Exist(_41213_refers, (*(_41140_ref))))))) {
		_1ce00e7e2_Push(_41213_refers, jule::Any((*(_41140_ref)), &__jule_any_type8));
	};
}

inline void _1b86d3e66_pushReference(_1ce11d934_Eval* _self_, jule::Ptr<_1cdee571d_StructIns>* _41140_ref) {
	jule::Ptr<_1ce00da00_ReferenceStack> _41213_refers = _1ce121e87_getOwnerRefers(_self_);;
	if (((_41213_refers != nullptr) && (!(_1b86d62a9_Exist(_41213_refers, (*(_41140_ref))))))) {
		_1ce00e7e2_Push(_41213_refers, jule::Any((*(_41140_ref)), &__jule_any_type9));
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce122581__evalEnum(_1ce11d934_Eval* _self_, jule::Ptr<_1ce01d416_Enum> _41828_enm) {
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(_41828_enm, 3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce12297c_evalEnum(_1ce11d934_Eval* _self_, jule::Ptr<_1ce01d416_Enum> _42731_enm, jule::Ptr<_1cdeab4b4_Token> _42743_errorToken) {
	if ((!(_1ce094635_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_42731_enm))._field_Public, (*_42731_enm.alloc)._field_Token)))) {
		_1ce11de84_pushErr(_self_, _42743_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_42731_enm.alloc)._field_Ident, &__jule_any_type4)}));
		_1ce11e2e7_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1ce122581__evalEnum(_self_, _42731_enm);;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce122cbd__evalTypeEnum(_1ce11d934_Eval* _self_, jule::Ptr<_1ce01eb21_TypeEnum> _43632_enm) {
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(_43632_enm, 4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce1231b9_evalTypeEnum(_1ce11d934_Eval* _self_, jule::Ptr<_1ce01eb21_TypeEnum> _44535_enm, jule::Ptr<_1cdeab4b4_Token> _44551_errorToken) {
	if ((!(_1ce094635_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_44535_enm))._field_Public, (*_44535_enm.alloc)._field_Token)))) {
		_1ce11de84_pushErr(_self_, _44551_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_44535_enm.alloc)._field_Ident, &__jule_any_type4)}));
		_1ce11e2e7_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1ce122cbd__evalTypeEnum(_self_, _44535_enm);;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce12350a__evalStruct(_1ce11d934_Eval* _self_, jule::Ptr<_1cdee571d_StructIns> _45430_s) {
	jule::Ptr<_1ce11bc0c_Data> _45513_d = jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(_45430_s, 0)}), ._field_Model=jule::Any(_45430_s, &__jule_any_type9), ._field_Decl=true, });;
	if ((((*(_45430_s))._field_Decl != nullptr) && (*(*_45430_s.alloc)._field_Decl.alloc)._field_Binded)) {
		(*((*(_45513_d))._field_Kind))._field_BindIdent=(*(*_45430_s.alloc)._field_Decl.alloc)._field_Ident;
	};
	return _45513_d;;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce123906_evalStruct(_1ce11d934_Eval* _self_, jule::Ptr<_1cdee571d_StructIns> _46833_s, jule::Ptr<_1cdeab4b4_Token> _46848_errorToken) {
	if ((!(_1ce094635_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_46833_s))._field_Decl))._field_Public, (*(*_46833_s.alloc)._field_Decl.alloc)._field_Token)))) {
		_1ce11de84_pushErr(_self_, _46848_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(*_46833_s.alloc)._field_Decl.alloc)._field_Ident, &__jule_any_type4)}));
		_1ce11e2e7_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1ce1240aa_checkDeprecated(_self_, &((*(*_46833_s.alloc)._field_Decl.alloc)._field_Directives), _46848_errorToken);
	return _1ce12350a__evalStruct(_self_, _46833_s);;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce123c47_evalFnIns(_1ce11d934_Eval* _self_, jule::Ptr<_1ce00a832_FnIns> _47828_f) {
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(_47828_f, 1)}), ._field_Model=jule::Any(_47828_f, &__jule_any_type7), });;
}



inline void _1ce1240aa_checkDeprecated(_1ce11d934_Eval* _self_, jule::Slice<jule::Ptr<_1cdec0eac_Directive>>* _48739_directives, jule::Ptr<_1cdeab4b4_Token> _48770_tok) {
	if (_1ce11e979_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1cdec0eac_Directive> _4929_d = _1ce1455a4_findDirective(_48739_directives, jule::Str::lit("deprecated", 10));;
	if ((_4929_d != nullptr)) {
		if (((*_4929_d.alloc)._field_Args.len() == 0LL)) {
			_1ce11de84_pushErr(_self_, _48770_tok, jule::Str::lit("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("this code is deprecated", 23), &__jule_any_type4)}));
		} else {
			_1ce11de84_pushErr(_self_, _48770_tok, jule::Str::lit("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any((*((*_4929_d.alloc)._field_Args[0LL]))._field_Kind, &__jule_any_type4)}));
		};
		_1ce11e2e7_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule for deprecated codes or replace to successor", 60), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce1244a6_evalFn(_1ce11d934_Eval* _self_, jule::Ptr<_1ce00792d_Fn> _50329_f, jule::Ptr<_1cdeab4b4_Token> _50337_errorToken) {
	if ((!(_1ce094635_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_50329_f))._field_Public, (*_50329_f.alloc)._field_Token)))) {
		_1ce11de84_pushErr(_self_, _50337_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_50329_f.alloc)._field_Ident, &__jule_any_type4)}));
		_1ce11e2e7_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1ce1240aa_checkDeprecated(_self_, &((*_50329_f.alloc)._field_Directives), _50337_errorToken);
	jule::Ptr<_1ce00a832_FnIns> _51213_ins = _1ce00918d_instance(_50329_f);;
	_1e6b5dca8_pushReference(_self_, &(_51213_ins));
	return _1ce123c47_evalFnIns(_self_, _51213_ins);;
}



inline void _1ce1248c4_pushIllegalCycleError(_1ce11d934_Eval* _self_, jule::Ptr<_1ce0b4105_Var>* _51741_v1, jule::Ptr<_1ce0b4105_Var>* _51752_v2, _22ab0b88c_StrBuilder* _51767_message) {
	;
	jule::Str _5199_refers_to = _22a936b90_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*((*(_51741_v1))))._field_Ident, &__jule_any_type4),jule::Any((*((*(_51752_v2))))._field_Ident, &__jule_any_type4)}));;
	jule::Slice<jule::U8> _5209_buf = _22ab16765_Buf(_51767_message);;
	_22ab154bc_WriteStr(_51767_message, _22aae7070_Repeat(jule::Str::lit(" ", 1), 7LL));
	_22ab154bc_WriteStr(_51767_message, _5199_refers_to);
	_22ab15775_WriteByte(_51767_message, '\n');
	_22ab15214_Write(_51767_message, _5209_buf);
}



inline jule::Bool _1ce124cc0_checkCrossCycle(_1ce11d934_Eval* _self_, jule::Ptr<_1ce0b4105_Var>* _52735_v, _22ab0b88c_StrBuilder* _52749_message) {
	{
		auto expr = &((*((*(_52735_v))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6b65584:;
		if (it != expr_end) {
			jule::Ptr<_1ce0b4105_Var> *_52816_d = it;
			{
				if (((*(_52816_d)) == (*(_self_))._field_owner)) {
					_1ce1248c4_pushIllegalCycleError(_self_, _52735_v, _52816_d, _52749_message);
					return false;;
				};
				if ((!(_1ce124cc0_checkCrossCycle(_self_, _52816_d, _52749_message)))) {
					_1ce1248c4_pushIllegalCycleError(_self_, _52735_v, _52816_d, _52749_message);
					return false;;
				};
			}
			_iter_next_1e6b65584:;
			++it;
			goto _iter_begin_1e6b65584;
		}
		_iter_end_1e6b65584:;
	};
	return true;;
}



inline jule::Bool _1ce1251bb_checkIllegalCycles(_1ce11d934_Eval* _self_, jule::Ptr<_1ce0b4105_Var>* _54442_v, jule::Ptr<_1cdeab4b4_Token> _54451_declToken) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*((*(_self_))._field_owner))._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_54442_v)))) {
		_1ce11de84_pushErr(_self_, (*((*(_self_))._field_owner))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_owner))._field_Ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_22ab0b88c_StrBuilder _55713_message = static__22ab0bb56_New(32LL);;
	if ((!(_1ce124cc0_checkCrossCycle(_self_, _54442_v, &(_55713_message))))) {
		jule::Str _56017_errMsg = _22ab15cb4_Str(&_55713_message);;
		_22ab15eb2_Clear(&_55713_message);
		_1ce1248c4_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _54442_v, &(_55713_message));
		_56017_errMsg+=_22ab15cb4_Str(&_55713_message);
		_1ce11de84_pushErr(_self_, _54451_declToken, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_56017_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{ jule::Slice<jule::Ptr<_1ce0b4105_Var>> &__jule_push_dest = (*((*(_self_))._field_owner))._field_Depends; __jule_push_dest.push((*(_54442_v))); };
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce1255b7_evalVar(_1ce11d934_Eval* _self_, jule::Ptr<_1ce0b4105_Var> _57230_v, jule::Ptr<_1cdeab4b4_Token> _57239_errorToken) {
	if ((!(_1ce094635_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_57230_v))._field_Public, (*_57230_v.alloc)._field_Token)))) {
		_1ce11de84_pushErr(_self_, _57239_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_57230_v.alloc)._field_Ident, &__jule_any_type4)}));
		_1ce11e2e7_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1ce1240aa_checkDeprecated(_self_, &((*_57230_v.alloc)._field_Directives), _57239_errorToken);
	if (((*_57230_v.alloc)._field_Token == nullptr)) {
		goto _julec_label_1e6b7ad91;
	};
	(*_57230_v.alloc)._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1e6b6e093:;
			{
				jule::Bool _59113_ok = _1ce1251bb_checkIllegalCycles(_self_, &(_57230_v), _57239_errorToken);;
				if ((!(_59113_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1e6b6d69c:;
			{
				if (((!((*_57230_v.alloc)._field_Reference)) || _1ce11e979_isUnsafe(_self_))) {
					goto _match_end_1e6b6e01b;
				};
				jule::Ptr<_1ce051acb_scopeChecker> _59917_s = (*(_self_))._field_lookup.cast_ptr<_1ce051acb_scopeChecker>(0);;
				while ((((*(_59917_s))._field_owner == nullptr) && ((*_59917_s.alloc)._field_parent != nullptr))) {
					{
						_59917_s=(*_59917_s.alloc)._field_parent;
					}
				_iter_next_1e6b702a3:;
				}
				_iter_end_1e6b702a3:;;
				if (((((*_59917_s.alloc)._field_owner != nullptr) && (*((*_59917_s.alloc)._field_owner))._field_Anon) && ((*_57230_v.alloc)._field_Scope != (*((*_59917_s.alloc)._field_owner))._field_Scope))) {
					_1ce11de84_pushErr(_self_, _57239_errorToken, jule::Str::lit("anonymous functions cannot access to reference definition @ of parent scope", 75), jule::Slice<jule::Any>::make({jule::Any((*_57230_v.alloc)._field_Ident, &__jule_any_type4)}));
				};
			}
		}
		_match_end_1e6b6e01b:;
	};
	if (((*_57230_v.alloc)._field_Scope == nullptr)) {
		_1e6b73aae_pushReference(_self_, &(_57230_v));
	};
	if (((!((*_57230_v.alloc)._field_Binded)) && (((*_57230_v.alloc)._field_Value == nullptr) || ((*((*_57230_v.alloc)._field_Value))._field_Data == nullptr)))) {
		if ((*_57230_v.alloc)._field_Constant) {
			_1ce0ab053_checkVar((*(_self_))._field_s, &(_57230_v), jule::Trait<_1ce16c7b8_Lookup>((*(_self_))._field_s, 3));
			if ((((*_57230_v.alloc)._field_Value == nullptr) || ((*((*_57230_v.alloc)._field_Value))._field_Data == nullptr))) {
				return nullptr;;
			};
		};
	};
	if ((((*_57230_v.alloc)._field_Kind == nullptr) || ((*((*_57230_v.alloc)._field_Kind))._field_Kind == nullptr))) {
		if (((*_57230_v.alloc)._field_Scope != nullptr)) {
			return nullptr;;
		};
		_1ce0ab053_checkVar((*(_self_))._field_s, &(_57230_v), (*(_self_))._field_lookup);
		if ((((*_57230_v.alloc)._field_Kind == nullptr) || ((*((*_57230_v.alloc)._field_Kind))._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	_julec_label_1e6b7ad91:;
	jule::Ptr<_1ce11bc0c_Data> _64313_d = jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=(*((*_57230_v.alloc)._field_Kind))._field_Kind, ._field_Mutable=(*_57230_v.alloc)._field_Mutable, ._field_Reference=(*_57230_v.alloc)._field_Reference, ._field_Lvalue=(!((*_57230_v.alloc)._field_Constant)), ._field_Model=jule::Any(_57230_v, &__jule_any_type8), });;
	if ((((!((*_57230_v.alloc)._field_Binded)) && _1ce0b44ce_IsInitialized(_57230_v)) && ((*((*_57230_v.alloc)._field_Value))._field_Data != nullptr))) {
		(*(_64313_d))._field_IsRune=(*((*((*_57230_v.alloc)._field_Value))._field_Data))._field_IsRune;
	};
	if (((*_57230_v.alloc)._field_Constant && ((*((*((*_57230_v.alloc)._field_Value))._field_Data))._field_Constant != nullptr))) {
		(*_64313_d.alloc)._field_Constant=jule::new_ptr<_22be1616d_Const>((*(*((*((*_57230_v.alloc)._field_Value))._field_Data))._field_Constant.alloc));
		(*_64313_d.alloc)._field_Model=jule::Any((*_64313_d.alloc)._field_Constant, &__jule_any_type19);
		if (_1ce0b49eb_untypedConstant(_57230_v)) {
			_1ce12001d_applyNumericPrefix(_self_, &(_64313_d));
			(*_64313_d.alloc)._field_untyped=true;
		};
	};
	return _64313_d;;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce1259b3_evalTypeAlias(_1ce11d934_Eval* _self_, jule::Ptr<_1ce14bdd5_TypeAlias> _66736_ta, jule::Ptr<_1cdeab4b4_Token> _66752_errorToken) {
	if ((!(_1ce094635_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_66736_ta))._field_Public, (*_66736_ta.alloc)._field_Token)))) {
		_1ce11de84_pushErr(_self_, _66752_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_66736_ta.alloc)._field_Ident, &__jule_any_type4)}));
		_1ce11e2e7_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_66736_ta.alloc)._field_Used=true;
	jule::Trait<_1ce14c721_Kind> _67613_kind = (*((*((*_66736_ta.alloc)._field_Kind))._field_Kind))._field_Kind;;
	jule::Ptr<_1ce11bc0c_Data> _67717_d = nullptr;;
	{
		auto &_match_expr{ _67613_kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1e6b8653e:;
			{
				_67717_d=_1ce12350a__evalStruct(_self_, _67613_kind.cast_ptr<_1cdee571d_StructIns>(0));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1e6b850a9:;
			{
				_67717_d=_1ce122581__evalEnum(_self_, _67613_kind.cast_ptr<_1ce01d416_Enum>(3));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1e6b85120:;
			{
				_67717_d=_1ce122cbd__evalTypeEnum(_self_, _67613_kind.cast_ptr<_1ce01eb21_TypeEnum>(4));
			}
		}
		else {
			_case_begin_1e6b85043:;
			{
				_67717_d=jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=(*(*(*_66736_ta.alloc)._field_Kind.alloc)._field_Kind.alloc)._field_Kind}), ._field_Decl=true, });
				if ((*_66736_ta.alloc)._field_Binded) {
					(*((*(_67717_d))._field_Kind))._field_BindIdent=(*_66736_ta.alloc)._field_Ident;
				} else {
					(*((*(_67717_d))._field_Kind))._field_BindIdent=(*(*(*_66736_ta.alloc)._field_Kind.alloc)._field_Kind.alloc)._field_BindIdent;
				};
				(*(_67717_d))._field_Model=jule::Any((*_67717_d.alloc)._field_Kind, &__jule_any_type84);
			}
		}
		_match_end_1e6b84dab:;
	};
	(*((*(_67717_d))._field_Kind))._field_Generic=(*_66736_ta.alloc)._field_Generic;
	return _67717_d;;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce125dae_evalDef(_1ce11d934_Eval* _self_, jule::Any* _70331_def, jule::Ptr<_1cdeab4b4_Token> _70341_ident) {
	{
		auto &_match_expr{ (*(_70331_def)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1e6b8a653:;
			{
				return _1ce1255b7_evalVar(_self_, (*(_70331_def)).cast_ptr<_1ce0b4105_Var>(&__jule_any_type8), _70341_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1e6b8a6b9:;
			{
				return _1ce12297c_evalEnum(_self_, (*(_70331_def)).cast_ptr<_1ce01d416_Enum>(&__jule_any_type67), _70341_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1e6b8a730:;
			{
				return _1ce1231b9_evalTypeEnum(_self_, (*(_70331_def)).cast_ptr<_1ce01eb21_TypeEnum>(&__jule_any_type68), _70341_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1e6b8a796:;
			{
				return _1ce123906_evalStruct(_self_, _1cdee2e02_instance((*(_70331_def)).cast_ptr<_1cdee2990_Struct>(&__jule_any_type65)), _70341_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1e6b8a81d:;
			{
				jule::Ptr<_1ce00792d_Fn> _71417_f = (*(_70331_def)).cast_ptr<_1ce00792d_Fn>(&__jule_any_type64);;
				if ((!(*(_71417_f))._field_Ident.equal("init", 4))) {
					return _1ce1244a6_evalFn(_self_, _71417_f, _70341_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1e6b8a895:;
			{
				return _1ce123c47_evalFnIns(_self_, (*(_70331_def)).cast_ptr<_1ce00a832_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1e6b8a91c:;
			{
				return _1ce1259b3_evalTypeAlias(_self_, (*(_70331_def)).cast_ptr<_1ce14bdd5_TypeAlias>(&__jule_any_type66), _70341_ident);;
			}
		}
		_match_end_1e6b8a5ed:;
	};
	_1ce11de84_pushErr(_self_, _70341_ident, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_70341_ident))._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce126200_evalIdent(_1ce11d934_Eval* _self_, jule::Ptr<_1cdec76de_IdentExpr> _72728_ident) {
	jule::Any _72813_def = _1ce121c01_getDef(_self_, &((*(_72728_ident))._field_Ident), (*_72728_ident.alloc)._field_Binded);;
	return _1ce125dae_evalDef(_self_, &(_72813_def), (*_72728_ident.alloc)._field_Token);;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce126541_evalUnary(jule::Ptr<_1ce11d934_Eval> _self_, jule::Ptr<_1cdec7e81_UnaryExpr> _73233_u) {
	_1ce13c15b_unaryEval _73313_unary = static__1ce13c59b_new(_self_);;
	return _1ce13d9cb_eval(&_73313_unary, _73233_u);;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce126882_evalVariadic(jule::Ptr<_1ce11d934_Eval> _self_, jule::Ptr<_1cdec835a_VariadicExpr> _73736_v) {
	if (((*(_73736_v))._field_Expr == nullptr)) {
		_1ce11de84_pushErr(_self_.ptr(), (*_73736_v.alloc)._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ce14cbc7_TypeKind> _74313_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_74313_prefix;
	});;
	jule::Ptr<_1ce11bc0c_Data> _74713_d = _1ce13bb94_evalExpr(_self_, (*_73736_v.alloc)._field_Expr);;
	if ((_74713_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ce150092_Variadicable((*(_74713_d))._field_Kind.ptr())))) {
		_1ce11de84_pushErr(_self_, (*_73736_v.alloc)._field_Token, jule::Str::lit("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*(_74713_d))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	_1ce14a279_makeVariadic(&(_74713_d), (*(_1ce15137e_Slc((*(_74713_d))._field_Kind)))._field_Elem);
	return _74713_d;;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce126bc3_evalUnsafe(jule::Ptr<_1ce11d934_Eval> _self_, jule::Ptr<_1cdec7238_UnsafeExpr> _75934_u) {
	jule::Bool _7609_unsafety = (*(_self_))._field_unsafety;;
	(*_self_.alloc)._field_unsafety=true;
	jule::Ptr<_1ce11bc0c_Data> _76213_d = _1ce13bb94_evalExpr(_self_, (*(_75934_u))._field_Expr);;
	(*_self_.alloc)._field_unsafety=_7609_unsafety;
	return _76213_d;;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce127014_evalArr(jule::Ptr<_1ce11d934_Eval> _self_, jule::Ptr<_1cdecc42a_SliceExpr> _76731_s) {
	jule::Ptr<_1ce15c0c1_Arr> _76913_pt = _1ce1510e8_Arr((*(_self_))._field_prefix.ptr());;
	jule::Ptr<_1ce15c0c1_Arr> _77113_arr = jule::new_ptr<_1ce15c0c1_Arr>(_1ce15c0c1_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=(*(_76913_pt))._field_Elem});;
	jule::Bool _77713_filled = false;;
	if (((*(_76731_s))._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ (*((*(_76731_s))._field_Exprs[1LL]))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type75) {
				_case_begin_1e6b9acc3:;
				{
					if (((*((*((*(_76731_s))._field_Exprs[1LL]))._field_Kind.unsafe_cast_ptr<_1cdec835a_VariadicExpr>()))._field_Expr != nullptr)) {
						goto _match_end_1e6b9ac29;
					};
					if ((*_76913_pt.alloc)._field_Auto) {
						_1ce11de84_pushErr(_self_, (*_76731_s.alloc)._field_Token, jule::Str::lit("auto-sized arrays cannot filled", 31), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_77713_filled=true;
					(*_76731_s.alloc)._field_Exprs=(*_76731_s.alloc)._field_Exprs.slice(0LL, 1LL);
				}
			}
			_match_end_1e6b9ac29:;
		};
	};
	(*(_77113_arr))._field_N=(*_76731_s.alloc)._field_Exprs.len();
	if ((!((*_76913_pt.alloc)._field_Auto))) {
		if (((*_77113_arr.alloc)._field_N > (*_76913_pt.alloc)._field_N)) {
			_1ce11de84_pushErr(_self_, (*_76731_s.alloc)._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else if (((*_77113_arr.alloc)._field_N < (*_76913_pt.alloc)._field_N)) {
			(*_77113_arr.alloc)._field_N=(*_76913_pt.alloc)._field_N;
		};
	};
	jule::Ptr<_1cdeeeea8_ArrayExprModel> _80613_model = jule::new_ptr<_1cdeeeea8_ArrayExprModel>(_1cdeeeea8_ArrayExprModel{._field_Kind=_77113_arr, });;
	if (_77713_filled) {
		(*(_80613_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		(*(_80613_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*_76731_s.alloc)._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_1ce14cbc7_TypeKind> _81513_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=(*_77113_arr.alloc)._field_Elem;
	{
		auto expr = &((*_76731_s.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b864ce9b:;
		if (it != expr_end) {
			jule::Ptr<_1cdec5dc4_Expr> _81721_elem = *it;
			{
				jule::Ptr<_1ce11bc0c_Data> _81817_d = _1ce13bb94_evalExpr(_self_, _81721_elem);;
				if ((_81817_d == nullptr)) {
					goto _iter_next_1b864ce9b;
				};
				;
				if (_1ce0a0c6d_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_77113_arr.alloc)._field_Elem), &(_81817_d), &((*(_81721_elem))._field_Token))) {
					_1ce09b8d4_checkAssignType((*_self_.alloc)._field_s, false, &((*_77113_arr.alloc)._field_Elem), &(_81817_d), (*_81721_elem.alloc)._field_Token);
				};
				(*(_80613_model))._field_Elems=jule::append((*_80613_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({(*(_81817_d))._field_Model}));
			}
			_iter_next_1b864ce9b:;
			++it;
			goto _iter_begin_1b864ce9b;
		}
		_iter_end_1b864ce9b:;
	};
	(*_self_.alloc)._field_prefix=_81513_prefix;
	if (_77713_filled) {
		(*_80613_model.alloc)._field_Elems=jule::append((*_80613_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({nullptr}));
	};
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(_77113_arr, 25)}), ._field_Mutable=true, ._field_Model=jule::Any(_80613_model, &__jule_any_type85), });;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce1274ba_evalExpSlc(jule::Ptr<_1ce11d934_Eval> _self_, jule::Ptr<_1cdecc42a_SliceExpr> _84434_s, jule::Ptr<_1ce14cbc7_TypeKind> _84453_t, jule::Any _84471_first) {
	jule::Ptr<_1ce159ca0_Slc> _84513_slc = jule::new_ptr<_1ce159ca0_Slc>(_1ce159ca0_Slc{._field_Elem=_84453_t});;
	jule::I32 _84913_i = 0LL;;
	jule::Ptr<_1cdeec071_SliceExprModel> _85013_model = jule::new_ptr<_1cdeec071_SliceExprModel>(_1cdeec071_SliceExprModel{._field_ElemKind=_84453_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*(_84434_s))._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_84471_first != nullptr)) {
		(*(_85013_model))._field_Elems=jule::append((*_85013_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({_84471_first}));
		_84913_i=1LL;
	};
	jule::Ptr<_1ce14cbc7_TypeKind> _85913_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=(*(_84513_slc))._field_Elem;
	{
		auto expr = (*_84434_s.alloc)._field_Exprs.slice(_84913_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b8656108:;
		if (it != expr_end) {
			jule::Ptr<_1cdec5dc4_Expr> _86121_elem = *it;
			{
				jule::Ptr<_1ce11bc0c_Data> _86217_d = _1ce13bb94_evalExpr(_self_, _86121_elem);;
				if ((_86217_d != nullptr)) {
					;
					if (_1ce0a0c6d_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_84513_slc.alloc)._field_Elem), &(_86217_d), &((*(_86121_elem))._field_Token))) {
						_1ce09b8d4_checkAssignType((*_self_.alloc)._field_s, false, &((*_84513_slc.alloc)._field_Elem), &(_86217_d), (*_86121_elem.alloc)._field_Token);
					};
					(*_85013_model.alloc)._field_Elems=jule::append((*_85013_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({(*_86217_d.alloc)._field_Model}));
				};
			}
			_iter_next_1b8656108:;
			++it;
			goto _iter_begin_1b8656108;
		}
		_iter_end_1b8656108:;
	};
	(*_self_.alloc)._field_prefix=_85913_prefix;
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(_84513_slc, 22)}), ._field_Mutable=true, ._field_Model=jule::Any(_85013_model, &__jule_any_type76), });;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce12780b_evalSliceExpr(jule::Ptr<_1ce11d934_Eval> _self_, jule::Ptr<_1cdecc42a_SliceExpr> _88237_s) {
	if (((*(_self_))._field_prefix != nullptr)) {
		{
			
			if ((_1ce1510e8_Arr((*_self_.alloc)._field_prefix) != nullptr)) {
				_case_begin_1b865aa03:;
				{
					return _1ce127014_evalArr(_self_, _88237_s);;
				}
			}
			else if ((_1ce15137e_Slc((*_self_.alloc)._field_prefix) != nullptr)) {
				_case_begin_1b865aa9c:;
				{
					jule::Ptr<_1ce159ca0_Slc> _88821_pt = _1ce15137e_Slc((*_self_.alloc)._field_prefix);;
					return _1ce1274ba_evalExpSlc(_self_, _88237_s, (*(_88821_pt))._field_Elem, nullptr);;
				}
			}
			_match_end_1b865a926:;
		};
	};
	jule::Ptr<_1ce14cbc7_TypeKind> _89313_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	if (((*(_88237_s))._field_Exprs.len() == 0LL)) {
		_1ce11de84_pushErr(_self_, (*_88237_s.alloc)._field_Token, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ce11bc0c_Data> _90113_firstElem = _1ce13bb94_evalExpr(_self_, (*_88237_s.alloc)._field_Exprs[0LL]);;
	if ((_90113_firstElem == nullptr)) {
		return nullptr;;
	};
	;
	_1ce0a0c6d_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*(_90113_firstElem))._field_Kind), &(_90113_firstElem), &((*((*_88237_s.alloc)._field_Exprs[0LL]))._field_Token));
	jule::Ptr<_1ce11bc0c_Data> _91113_d = _1ce1274ba_evalExpSlc(_self_, _88237_s, (*(_90113_firstElem))._field_Kind, (*(_90113_firstElem))._field_Model);;
	(*_self_.alloc)._field_prefix=_89313_prefix;
	return _91113_d;;
}



inline void _1ce127b6e_checkIntegerIndexingByData(_1ce11d934_Eval* _self_, jule::Ptr<_1ce11bc0c_Data>* _91750_d, jule::Ptr<_1cdeab4b4_Token> _91764_token) {
	jule::Str _9189_errKey = _1ce147e36_checkDataForIntegerIndexing(_91750_d, &(_91764_token));;
	{
		auto &_match_expr{ _9189_errKey };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1b8663753:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str::lit("type @ is invalid for indexing", 30)) {
			_case_begin_1b8663434:;
			{
				_1ce11de84_pushErr(_self_, _91764_token, _9189_errKey, jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*((*(_91750_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_1b866308d:;
			{
				_1ce11de84_pushErr(_self_, _91764_token, _9189_errKey, jule::Slice<jule::Any>());
			}
		}
		_match_end_1b8663346:;
	};
}



inline void _1ce12808c_indexingPtr(_1ce11d934_Eval* _self_, jule::Ptr<_1ce11bc0c_Data>* _92935_d, jule::Ptr<_1ce11bc0c_Data>* _92950_index, jule::Ptr<_1cdeccd87_IndexingExpr>* _92969_i) {
	_1ce127b6e_checkIntegerIndexingByData(_self_, _92950_index, (*((*(_92969_i))))._field_Token);
	(*((*(_92935_d))))._field_Lvalue=true;
	jule::Ptr<_1ce15ca94_Ptr> _93313_ptr = _1ce150845_Ptr((*((*(_92935_d))))._field_Kind.ptr());;
	{
		
		if (_1ce15d5cd_IsUnsafe(_93313_ptr.ptr())) {
			_case_begin_1b8666305:;
			{
				_1ce11de84_pushErr(_self_, (*((*(_92969_i))))._field_Token, jule::Str::lit("unsafe pointers are not supports indexing", 41), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1ce11e979_isUnsafe(_self_)))) {
			_case_begin_1b866639e:;
			{
				_1ce11de84_pushErr(_self_, (*((*(_92969_i))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b866628e:;
	};
	(*((*(_92935_d))))._field_Kind=(*(_93313_ptr))._field_Elem;
}



inline void _1ce1284aa_indexingArr(_1ce11d934_Eval* _self_, jule::Ptr<_1ce11bc0c_Data>* _94535_d, jule::Ptr<_1ce11bc0c_Data>* _94550_index, jule::Ptr<_1cdeccd87_IndexingExpr>* _94569_i) {
	jule::Ptr<_1ce15c0c1_Arr> _94613_arr = _1ce1510e8_Arr((*((*(_94535_d))))._field_Kind.ptr());;
	(*((*(_94535_d))))._field_Kind=(*(_94613_arr))._field_Elem;
	_1ce127b6e_checkIntegerIndexingByData(_self_, _94550_index, (*((*(_94569_i))))._field_Token);
	(*((*(_94535_d))))._field_Lvalue=true;
	if ((_1ce11c614_IsConst((*(_94550_index)).ptr()) && (_22be18d30_AsF64((*((*(_94550_index))))._field_Constant.ptr()) >= static_cast<jule::F64>((*_94613_arr.alloc)._field_N)))) {
		_1ce11de84_pushErr(_self_, (*((*(_94569_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
	};
}



inline void _1ce1288c8_indexingSlc(_1ce11d934_Eval* _self_, jule::Ptr<_1ce11bc0c_Data>* _95535_d, jule::Ptr<_1ce11bc0c_Data>* _95550_index, jule::Ptr<_1cdeccd87_IndexingExpr>* _95569_i) {
	jule::Ptr<_1ce159ca0_Slc> _95613_slc = _1ce15137e_Slc((*((*(_95535_d))))._field_Kind.ptr());;
	(*((*(_95535_d))))._field_Kind=(*(_95613_slc))._field_Elem;
	_1ce127b6e_checkIntegerIndexingByData(_self_, _95550_index, (*((*(_95569_i))))._field_Token);
	(*((*(_95535_d))))._field_Lvalue=true;
	if ((!(_1ce11c614_IsConst((*(_95550_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_95535_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1b866d64d:;
			{
				jule::Ptr<_1cdeec071_SliceExprModel> _96717_m = (*((*(_95535_d))))._field_Model.unsafe_cast_ptr<_1cdeec071_SliceExprModel>();;
				jule::F64 _96813_indx = _22be18d30_AsF64((*((*(_95550_index))))._field_Constant.ptr());;
				if ((_96813_indx >= static_cast<jule::F64>((*(_96717_m))._field_Elems.len()))) {
					_1ce11de84_pushErr(_self_, (*((*(_95569_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
				} else {
					(*((*(_95535_d))))._field_Model=(*(_96717_m))._field_Elems[static_cast<jule::I32>(static_cast<jule::U64>(_96813_indx))];
					(*((*(_95535_d))))._field_Decl=true;
				};
			}
		}
		_match_end_1b866d5d7:;
	};
}



inline void _1ce128ce6_indexingMap(_1ce11d934_Eval* _self_, jule::Ptr<_1ce11bc0c_Data>* _97835_d, jule::Ptr<_1ce11bc0c_Data>* _97850_index, jule::Ptr<_1cdeccd87_IndexingExpr>* _97869_i) {
	(*((*(_97835_d))))._field_Lvalue=true;
	if (((*(_97850_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1ce15b444_Map> _98313_m = _1ce151db8_Map((*((*(_97835_d))))._field_Kind.ptr());;
	_1ce105674_assignTypeChecker _98413_atc = _1ce105674_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_98313_m))._field_Key, ._field_d=(*(_97850_index)), ._field_errorToken=(*((*(_97869_i))))._field_Token};;
	_1ce106642_check(&_98413_atc);
	(*((*(_97835_d))))._field_Kind=(*_98313_m.alloc)._field_Val;
}



inline void _1ce129214_indexingStr(_1ce11d934_Eval* _self_, jule::Ptr<_1ce11bc0c_Data>* _99435_d, jule::Ptr<_1ce11bc0c_Data>* _99450_index, jule::Ptr<_1cdeccd87_IndexingExpr>* _99469_i) {
	(*((*(_99435_d))))._field_Kind=_1ce236dc1_primU8;
	(*((*(_99435_d))))._field_Mutable=false;
	(*((*(_99435_d))))._field_Lvalue=true;
	if (((*(_99450_index)) == nullptr)) {
		return;;
	};
	_1ce127b6e_checkIntegerIndexingByData(_self_, _99450_index, (*((*(_99469_i))))._field_Token);
	if ((!(_1ce11c614_IsConst((*(_99450_index)).ptr())))) {
		(*((*(_99435_d))))._field_Constant=nullptr;
		(*((*(_99435_d))))._field_untyped=false;
		return;;
	};
	if (_1ce11c614_IsConst((*(_99435_d)).ptr())) {
		jule::Ptr<_1cdeab4b4_Token> _101213_errorToken = (*((*(_99469_i))))._field_Token;;
		jule::I64 _101313_j = _22be18813_AsI64((*((*(_99450_index))))._field_Constant.ptr());;
		jule::Str _101413_s = _22be182e6_ReadStr((*((*(_99435_d))))._field_Constant);;
		if ((static_cast<jule::I32>(_101313_j) >= _101413_s.len())) {
			_1ce11de84_pushErr(_self_, _101213_errorToken, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else {
			_22be19391_SetU64((*((*(_99435_d))))._field_Constant, static_cast<jule::U64>(_101413_s[static_cast<jule::I32>(_101313_j)]));
		};
	};
}



inline void _1ce129632_toIndexing(_1ce11d934_Eval* _self_, jule::Ptr<_1ce11bc0c_Data>* _102334_d, jule::Ptr<_1ce11bc0c_Data>* _102349_index, jule::Ptr<_1cdeccd87_IndexingExpr>* _102368_i) {
	{
		
		if ((_1ce150845_Ptr((*((*(_102334_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8679db8:;
			{
				_1ce12808c_indexingPtr(_self_, _102334_d, _102349_index, _102368_i);
				return;;
			}
		}
		else if ((_1ce1510e8_Arr((*((*(_102334_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8679e62:;
			{
				_1ce1284aa_indexingArr(_self_, _102334_d, _102349_index, _102368_i);
				return;;
			}
		}
		else if ((_1ce15137e_Slc((*((*(_102334_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8679ec8:;
			{
				_1ce1288c8_indexingSlc(_self_, _102334_d, _102349_index, _102368_i);
				return;;
			}
		}
		else if ((_1ce151db8_Map((*((*(_102334_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b867a03e:;
			{
				_1ce128ce6_indexingMap(_self_, _102334_d, _102349_index, _102368_i);
				return;;
			}
		}
		else if ((_1ce150328_Prim((*((*(_102334_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b867a0a5:;
			{
				jule::Ptr<_1ce1557a1_Prim> _103813_prim = _1ce150328_Prim((*((*(_102334_d))))._field_Kind);;
				{
					
					if (_1ce158c38_IsStr(_103813_prim.ptr())) {
						_case_begin_1b867e40b:;
						{
							_1ce129214_indexingStr(_self_, _102334_d, _102349_index, _102368_i);
							return;;
						}
					}
					_match_end_1b867e362:;
				};
			}
		}
		_match_end_1b8679c75:;
	};
	_1ce11de84_pushErr(_self_, (*((*(_102368_i))))._field_Token, jule::Str::lit("type @ is not support indexing", 30), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*((*(_102334_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Bool _1ce129ad8_pushGenericsFromExprSubIdent(jule::Ptr<_1ce11d934_Eval> _self_, jule::Ptr<_1cdec8ed7_SubIdentExpr>* _104853_sexpr, jule::Slice<jule::Ptr<_1cdec1a90_TypeDecl>>* _104914_generics, jule::Ptr<_1cdec5dc4_Expr>* _104942_expr) {
	jule::Ptr<_1cdec2464_SubIdentTypeDecl> _105013_t = jule::new_ptr<_1cdec2464_SubIdentTypeDecl>();;
	if ((!(_1ce148d49_pushSubIdentFromExpr(jule::Any((*(_104853_sexpr)), &__jule_any_type86), &(_105013_t))))) {
		_1ce11de84_pushErr(_self_.ptr(), (*((*(_104942_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_1cdec1a90_TypeDecl>> &__jule_push_dest = (*(_104914_generics)); __jule_push_dest.push(jule::new_ptr<_1cdec1a90_TypeDecl>(_1cdec1a90_TypeDecl{._field_Kind=jule::Any(_105013_t, &__jule_any_type87)})); };
	return true;;
}



inline jule::Bool _1ce129ed4_pushGenericsFromData(jule::Ptr<_1ce11d934_Eval> _self_, jule::Slice<jule::Ptr<_1cdec1a90_TypeDecl>>* _105945_generics, jule::Ptr<_1cdec5dc4_Expr>* _105973_expr) {
	{
		auto &_match_expr{ (*((*(_105973_expr))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1b86839b5:;
			{
				jule::Ptr<_1cdec7e81_UnaryExpr> _106217_u = (*((*(_105973_expr))))._field_Kind.unsafe_cast_ptr<_1cdec7e81_UnaryExpr>();;
				{
					auto &_match_expr{ (*((*(_106217_u))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(62LLU)) {
						_case_begin_1b868517b:;
						{
							jule::Ptr<_1cdec35b9_PtrTypeDecl> _106521_kind = jule::new_ptr<_1cdec35b9_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_1cdec1a90_TypeDecl>> _106621__generics = jule::Slice<jule::Ptr<_1cdec1a90_TypeDecl>>::alloc(0LL, 1LL);;
							_1ce129ed4_pushGenericsFromData(_self_, &(_106621__generics), &((*(_106217_u))._field_Expr));
							(*_106521_kind.alloc)._field_Elem=_106621__generics[0LL];
							{ jule::Slice<jule::Ptr<_1cdec1a90_TypeDecl>> &__jule_push_dest = (*(_105945_generics)); __jule_push_dest.push(jule::new_ptr<_1cdec1a90_TypeDecl>(_1cdec1a90_TypeDecl{._field_Token=(*((*(_105973_expr))))._field_Token, ._field_Kind=jule::Any(_106521_kind, &__jule_any_type71)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U32>(65LLU)) {
						_case_begin_1b8685984:;
						{
							jule::Ptr<_1cdec2b3a_SptrTypeDecl> _107421_kind = jule::new_ptr<_1cdec2b3a_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_1cdec1a90_TypeDecl>> _107521__generics = jule::Slice<jule::Ptr<_1cdec1a90_TypeDecl>>::alloc(0LL, 1LL);;
							_1ce129ed4_pushGenericsFromData(_self_, &(_107521__generics), &((*(_106217_u))._field_Expr));
							(*_107421_kind.alloc)._field_Elem=_107521__generics[0LL];
							{ jule::Slice<jule::Ptr<_1cdec1a90_TypeDecl>> &__jule_push_dest = (*(_105945_generics)); __jule_push_dest.push(jule::new_ptr<_1cdec1a90_TypeDecl>(_1cdec1a90_TypeDecl{._field_Token=(*((*(_105973_expr))))._field_Token, ._field_Kind=jule::Any(_107421_kind, &__jule_any_type72)})); };
						}
					}
					else {
						_case_begin_1b8684851:;
						{
							_1ce11de84_pushErr(_self_.ptr(), (*(_106217_u))._field_Op, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1b8684ce6:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1b8683a2b:;
			{
				{ jule::Slice<jule::Ptr<_1cdec1a90_TypeDecl>> &__jule_push_dest = (*(_105945_generics)); __jule_push_dest.push((*((*(_105973_expr))))._field_Kind.unsafe_cast_ptr<_1cdec1a90_TypeDecl>()); };
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1b8683a92:;
			{
				jule::Ptr<_1cdec8ed7_SubIdentExpr> _108917_sexpr = (*((*(_105973_expr))))._field_Kind.unsafe_cast_ptr<_1cdec8ed7_SubIdentExpr>();;
				return _1ce129ad8_pushGenericsFromExprSubIdent(_self_, &(_108917_sexpr), _105945_generics, _105973_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1b8682de3:;
			{
				jule::Ptr<_1cdec76de_IdentExpr> _109217_ident = (*((*(_105973_expr))))._field_Kind.unsafe_cast_ptr<_1cdec76de_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1cdec1a90_TypeDecl>> &__jule_push_dest = (*(_105945_generics)); __jule_push_dest.push(jule::new_ptr<_1cdec1a90_TypeDecl>(_1cdec1a90_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1cdec219a_IdentTypeDecl>(_1cdec219a_IdentTypeDecl{._field_Token=(*_109217_ident.alloc)._field_Token, ._field_Ident=(*_109217_ident.alloc)._field_Ident, ._field_Binded=(*(_109217_ident))._field_Binded, }), &__jule_any_type20)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1b8682e59:;
			{
				{
					auto expr = &((*((*((*(_105973_expr))))._field_Kind.unsafe_cast_ptr<_1cdec69b8_TupleExpr>()))._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b868c01d:;
					if (it != expr_end) {
						jule::Ptr<_1cdec5dc4_Expr> _110125_texpr = *it;
						{
							if ((!(_1ce129ed4_pushGenericsFromData(_self_, _105945_generics, &(_110125_texpr))))) {
								return false;;
							};
						}
						_iter_next_1b868c01d:;
						++it;
						goto _iter_begin_1b868c01d;
					}
					_iter_end_1b868c01d:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1b8682ec0:;
			{
				jule::Ptr<_1cdec8b0d_NsSelectionExpr> _110717_ns = (*((*(_105973_expr))))._field_Kind.unsafe_cast_ptr<_1cdec8b0d_NsSelectionExpr>();;
				jule::Ptr<_1cdec219a_IdentTypeDecl> _110817_decl = jule::new_ptr<_1cdec219a_IdentTypeDecl>(_1cdec219a_IdentTypeDecl{._field_Token=(*(_110717_ns))._field_Ident, ._field_Ident=(*((*_110717_ns.alloc)._field_Ident))._field_Kind, });;
				{ jule::Slice<jule::Ptr<_1cdec1a90_TypeDecl>> &__jule_push_dest = (*(_105945_generics)); __jule_push_dest.push(jule::new_ptr<_1cdec1a90_TypeDecl>(_1cdec1a90_TypeDecl{._field_Token=(*(_110817_decl))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1cdec283d_NamespaceTypeDecl>(_1cdec283d_NamespaceTypeDecl{._field_Idents=(*_110717_ns.alloc)._field_Ns, ._field_Kind=jule::new_ptr<_1cdec1a90_TypeDecl>(_1cdec1a90_TypeDecl{._field_Token=(*_110817_decl.alloc)._field_Token, ._field_Kind=jule::Any(_110817_decl, &__jule_any_type20)})}), &__jule_any_type91)})); };
			}
		}
		else {
			_case_begin_1b8682d7c:;
			{
				_1ce11de84_pushErr(_self_.ptr(), (*((*(_105973_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1b8682d27:;
	};
	return true;;
}



inline void _1ce12a347_evalIdentDeclFromIndexing(jule::Ptr<_1ce11d934_Eval> _self_, jule::Ptr<_1ce11bc0c_Data>* _112950_d, jule::Ptr<_1cdeccd87_IndexingExpr>* _112965_i) {
	jule::Ptr<_1cdee571d_StructIns> _113013_s = _1ce15189b_Struct((*((*(_112950_d))))._field_Kind.ptr());;
	if ((_113013_s == nullptr)) {
		_1ce11de84_pushErr(_self_.ptr(), (*((*((*(_112965_i))))._field_Expr))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*((*(_112950_d))))._field_Kind), &__jule_any_type4)}));
		(*(_112950_d))=nullptr;
		return;;
	};
	jule::Ptr<_1cdec219a_IdentTypeDecl> _113717_decl = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_112965_i))))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1b8693e26:;
			{
				jule::Ptr<_1cdec76de_IdentExpr> _114017_expr = (*((*((*(_112965_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1cdec76de_IdentExpr>();;
				_113717_decl=jule::new_ptr<_1cdec219a_IdentTypeDecl>(_1cdec219a_IdentTypeDecl{._field_Token=(*_114017_expr.alloc)._field_Token, ._field_Ident=(*_114017_expr.alloc)._field_Ident, ._field_Binded=(*(_114017_expr))._field_Binded, });
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1b8695312:;
			{
				jule::Ptr<_1cdec8b0d_NsSelectionExpr> _114717_expr = (*((*((*(_112965_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1cdec8b0d_NsSelectionExpr>();;
				_113717_decl=jule::new_ptr<_1cdec219a_IdentTypeDecl>(_1cdec219a_IdentTypeDecl{._field_Token=(*(_114717_expr))._field_Ident, ._field_Ident=(*((*_114717_expr.alloc)._field_Ident))._field_Kind, });
			}
		}
		else {
			_case_begin_1b86944a9:;
			{
				_1ce11de84_pushErr(_self_, (*((*(_112965_i))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				(*(_112950_d))=nullptr;
				return;;
			}
		}
		_match_end_1b8694454:;
	};
	if ((!(_1ce129ed4_pushGenericsFromData(_self_, &((*(_113717_decl))._field_Generics), &((*((*(_112965_i))))._field_Index))))) {
		(*(_112950_d))=nullptr;
		return;;
	};
	_113013_s=({ auto _wrap_copy = _1ce131d43_typeChecker(_self_); _1ce1639ce_fromStruct(&_wrap_copy, &(_113717_decl), &((*(_113013_s))._field_Decl)); });
	if ((_113013_s == nullptr)) {
		(*(_112950_d))=nullptr;
		return;;
	};
	(*(*((*(_112950_d))))._field_Kind.alloc)._field_Kind=jule::Trait<_1ce14c721_Kind>(_113013_s, 0);
}



inline jule::Bool _1ce12a7ed_checkGenericFn(jule::Ptr<_1ce11d934_Eval> _self_, jule::Ptr<_1ce00a832_FnIns>* _117239_f, jule::Ptr<_1cdeab4b4_Token>* _117255_et, jule::Any* _117272_model) {
	jule::Bool _11739_ok = _1ce09ed5a_reloadFnInsTypes((*(_self_))._field_s, (*(_117239_f)));;
	(*((*(_117239_f))))._field_reloaded=true;
	if ((!(_11739_ok))) {
		return false;;
	};
	jule::Ptr<_1ce00a832_FnIns> _117813_existInstance = _1ce00949b_appendInstance((*((*(_117239_f))))._field_Decl.ptr(), _117239_f);;
	if ((!(_1ce09ddae_checkConstraintsFn((*_self_.alloc)._field_s, _117239_f, _117255_et, _117813_existInstance)))) {
		return false;;
	};
	if ((_117813_existInstance != nullptr)) {
		_1ce148ad5_updateModelToGenericIns(_117272_model, &(_117813_existInstance));
		_1b869d1c7_updateRefer(_1ce121e87_getOwnerRefers(_self_), _117239_f, &(_117813_existInstance));
		(*(_117239_f))=_117813_existInstance;
	} else {
		_1ce0ae1aa_checkFnInsCaller((*_self_.alloc)._field_s, _117239_f, (*(_117255_et)));
	};
	return true;;
}



inline void _1ce12ab61_evalFnGenericFromIndexing(jule::Ptr<_1ce11d934_Eval> _self_, jule::Ptr<_1ce11bc0c_Data>* _120150_d, jule::Ptr<_1cdeccd87_IndexingExpr>* _120165_i) {
	jule::Slice<jule::Ptr<_1cdec1a90_TypeDecl>> _120213_generics = jule::Slice<jule::Ptr<_1cdec1a90_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_1ce129ed4_pushGenericsFromData(_self_, &(_120213_generics), &((*((*(_120165_i))))._field_Index))))) {
		(*(_120150_d))=nullptr;
		return;;
	};
	jule::Ptr<_1ce00a832_FnIns> _120813_f = _1ce151615_Fn((*((*(_120150_d))))._field_Kind.ptr());;
	jule::I32 _120913_genericsLen = 0LL;;
	if (((*(_120813_f))._field_Decl != nullptr)) {
		_120913_genericsLen=(*(*_120813_f.alloc)._field_Decl.alloc)._field_Generics.len();
	};
	if ((!(_1ce095405_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _120913_genericsLen, _120213_generics.len(), (*((*((*(_120165_i))))._field_Expr))._field_Token)))) {
		(*(_120150_d))=nullptr;
		return;;
	};
	(*_120813_f.alloc)._field_Generics=jule::Slice<jule::Ptr<_1ce14b2e1_InsGeneric>>::alloc(0LL, (*(*_120813_f.alloc)._field_Decl.alloc)._field_Generics.len());
	{
		auto expr = &(_120213_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b86a4ce4:;
		if (it != expr_end) {
			jule::Ptr<_1cdec1a90_TypeDecl> _122021_g = *it;
			{
				jule::Ptr<_1ce11bc0c_Data> _122117_k = _1ce132184_evalType(_self_, _122021_g);;
				if ((_122117_k == nullptr)) {
					(*(_120150_d))=nullptr;
					return;;
				};
				(*_120813_f.alloc)._field_Generics=jule::append((*_120813_f.alloc)._field_Generics,jule::Slice<jule::Ptr<_1ce14b2e1_InsGeneric>>::make({jule::new_ptr<_1ce14b2e1_InsGeneric>(_1ce14b2e1_InsGeneric{._field_Kind=(*(_122117_k))._field_Kind, })}));
			}
			_iter_next_1b86a4ce4:;
			++it;
			goto _iter_begin_1b86a4ce4;
		}
		_iter_end_1b86a4ce4:;
	};
	if (_1ce00bcb7_IsBuiltin(_120813_f)) {
		return;;
	};
	if (_1ce12a7ed_checkGenericFn(_self_, &(_120813_f), &((*(*((*(_120165_i))))._field_Expr.alloc)._field_Token), &((*((*(_120150_d))))._field_Model))) {
		(*(*((*(_120150_d))))._field_Kind.alloc)._field_Kind=jule::Trait<_1ce14c721_Kind>(_120813_f, 1);
	} else {
		(*(_120150_d))=nullptr;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce12aea2_evalIndexing(jule::Ptr<_1ce11d934_Eval> _self_, jule::Ptr<_1cdeccd87_IndexingExpr> _124036_i) {
	jule::Ptr<_1ce14cbc7_TypeKind> _124113_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_124113_prefix;
	});;
	jule::Ptr<_1ce11bc0c_Data> _124513_d = _1ce13ad80_evalExprKind(_self_, (*((*(_124036_i))._field_Expr))._field_Kind);;
	if ((_124513_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_124513_d))._field_Decl) {
		_1ce12a347_evalIdentDeclFromIndexing(_self_, &(_124513_d), &(_124036_i));
		return _124513_d;;
	};
	if ((_1ce151615_Fn((*(_124513_d))._field_Kind.ptr()) != nullptr)) {
		_1ce12ab61_evalFnGenericFromIndexing(_self_, &(_124513_d), &(_124036_i));
		return _124513_d;;
	};
	_1ce11bc0c_Data _126113_oldData = (*(_124513_d));;
	jule::Ptr<_1ce11bc0c_Data> _126313_index = _1ce13bb94_evalExpr(_self_, (*_124036_i.alloc)._field_Index);;
	if ((_126313_index == nullptr)) {
		return nullptr;;
	};
	(*(_124513_d))._field_Decl=false;
	_1ce129632_toIndexing(_self_, &(_124513_d), &(_126313_index), &(_124036_i));
	if (_1ce11c614_IsConst(_124513_d.ptr())) {
		(*(_124513_d))._field_Decl=false;
		(*(_124513_d))._field_Model=jule::Any((*(_124513_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_124513_d))._field_Decl) {
		(*(_124513_d))._field_Decl=false;
	} else {
		(*(_124513_d))._field_Model=jule::Any(jule::new_ptr<_1cdeec527_IndexingExprModel>(_1cdeec527_IndexingExprModel{._field_Token=(*_124036_i.alloc)._field_Token, ._field_Expr=jule::new_ptr<_1ce11bc0c_Data>(_126113_oldData), ._field_Index=_126313_index}), &__jule_any_type45);
	};
	return _124513_d;;
}



inline __jule_tuple_x_1ce11bc0c_Data__jule_tuple_x_1ce11bc0c_Data _1ce12b2e3_evalSlicingExprs(jule::Ptr<_1ce11d934_Eval> _self_, jule::Ptr<_1cdecd4e7_SlicingExpr>* _129441_s) {
	__jule_tuple_x_1ce11bc0c_Data__jule_tuple_x_1ce11bc0c_Data __jule_func_result;
	jule::Ptr<_1ce14cbc7_TypeKind> _129513_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_129513_prefix;
	});;
	jule::Ptr<_1ce11bc0c_Data> _129917_l = nullptr;;
	jule::Ptr<_1ce11bc0c_Data> _130017_r = nullptr;;
	if (((*((*(_129441_s))))._field_Start != nullptr)) {
		_129917_l=_1ce13bb94_evalExpr(_self_, (*((*(_129441_s))))._field_Start);
		if ((_129917_l != nullptr)) {
			_1ce127b6e_checkIntegerIndexingByData(_self_, &(_129917_l), (*((*(_129441_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_129917_l=jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce2360bd_primInt, ._field_Constant=static__22be165ad_NewI64(0LL)});
		(*((*(_129917_l))._field_Constant))._field_Kind=jule::Str::lit("int", 3);
		(*_129917_l.alloc)._field_Model=jule::Any((*_129917_l.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*((*(_129441_s))))._field_To != nullptr)) {
		_130017_r=_1ce13bb94_evalExpr(_self_, (*((*(_129441_s))))._field_To);
		if ((_130017_r != nullptr)) {
			_1ce127b6e_checkIntegerIndexingByData(_self_, &(_130017_r), (*((*(_129441_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _129917_l;
	__jule_func_result.__jule_result_arg1 = _130017_r;
	return __jule_func_result;;
}



inline void _1ce12b59b_slicingArr(_1ce11d934_Eval* _self_, jule::Ptr<_1ce11bc0c_Data>* _133030_d) {
	jule::Ptr<_1ce14cbc7_TypeKind> _133113_elemType = (*(_1ce1510e8_Arr((*((*(_133030_d))))._field_Kind.ptr())))._field_Elem;;
	(*((*(_133030_d))))._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(jule::new_ptr<_1ce159ca0_Slc>(_1ce159ca0_Slc{._field_Elem=_133113_elemType}), 22)});
	(*((*(_133030_d))))._field_Lvalue=false;
	(*((*(_133030_d))))._field_Mutable=((*((*(_133030_d))))._field_Mutable || (!(_1ce14e558_Mutable(_133113_elemType.ptr()))));
}



inline void _1ce12b9b9_slicingStr(_1ce11d934_Eval* _self_, jule::Ptr<_1ce11bc0c_Data>* _134530_d, jule::Ptr<_1ce11bc0c_Data>* _134541_l, jule::Ptr<_1ce11bc0c_Data>* _134552_r) {
	(*((*(_134530_d))))._field_Lvalue=false;
	(*((*(_134530_d))))._field_Mutable=true;
	if ((!(_1ce11c614_IsConst((*(_134530_d)).ptr())))) {
		return;;
	};
	if ((((*(_134541_l)) == nullptr) || ((*(_134552_r)) == nullptr))) {
		(*((*(_134530_d))))._field_Constant=nullptr;
		(*((*(_134530_d))))._field_untyped=false;
		return;;
	};
	if ((_1ce11c614_IsConst((*(_134541_l)).ptr()) && _1ce11c614_IsConst((*(_134552_r)).ptr()))) {
		jule::I64 _135913_left = _22be18813_AsI64((*((*(_134541_l))))._field_Constant.ptr());;
		if ((_135913_left < 0LL)) {
			return;;
		};
		jule::Str _136413_s = _22be182e6_ReadStr((*((*(_134530_d))))._field_Constant);;
		jule::I64 _136517_right = static_cast<jule::I64>(0LL);;
		if (((*(_134552_r)) == nullptr)) {
			_136517_right=static_cast<jule::I64>(_136413_s.len());
		} else {
			_136517_right=_22be18813_AsI64((*((*(_134552_r))))._field_Constant);
		};
		if ((_135913_left > _136517_right)) {
			return;;
		};
		_22be19902_SetStr((*((*(_134530_d))))._field_Constant, _136413_s.slice(static_cast<jule::I32>(_135913_left), static_cast<jule::I32>(_136517_right)));
		(*((*(_134530_d))))._field_Decl=true;
	} else {
		(*((*(_134530_d))))._field_Constant=nullptr;
		(*((*(_134530_d))))._field_untyped=false;
	};
}



inline void _1ce12be92_checkSlicing(_1ce11d934_Eval* _self_, jule::Ptr<_1ce11bc0c_Data>* _138336_d, jule::Ptr<_1ce11bc0c_Data>* _138347_l, jule::Ptr<_1ce11bc0c_Data>* _138358_r, jule::Ptr<_1cdecd4e7_SlicingExpr>* _138369_s) {
	{
		
		if ((_1ce1510e8_Arr((*((*(_138336_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b86c06e4:;
			{
				_1ce12b59b_slicingArr(_self_, _138336_d);
				return;;
			}
		}
		else if ((_1ce15137e_Slc((*((*(_138336_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b86c078d:;
			{
				return;;
			}
		}
		else if ((_1ce150328_Prim((*((*(_138336_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b86c0804:;
			{
				jule::Ptr<_1ce1557a1_Prim> _139113_prim = _1ce150328_Prim((*((*(_138336_d))))._field_Kind);;
				{
					
					if (_1ce158c38_IsStr(_139113_prim.ptr())) {
						_case_begin_1b86c3087:;
						{
							_1ce12b9b9_slicingStr(_self_, _138336_d, _138347_l, _138358_r);
							return;;
						}
					}
					_match_end_1b86c2edd:;
				};
			}
		}
		_match_end_1b86c05c3:;
	};
	_1ce11de84_pushErr(_self_, (*((*(_138369_s))))._field_Token, jule::Str::lit("type @ is not support slicing", 29), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*((*(_138336_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce12c2d3_evalSlicing(jule::Ptr<_1ce11d934_Eval> _self_, jule::Ptr<_1cdecd4e7_SlicingExpr> _140235_s) {
	jule::Ptr<_1ce11bc0c_Data> _140313_d = _1ce13bb94_evalExpr(_self_, (*(_140235_s))._field_Expr);;
	if ((_140313_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ce11bc0c_Data> _140813_l;;
	jule::Ptr<_1ce11bc0c_Data> _140820_r;;
	({
		__jule_tuple_x_1ce11bc0c_Data__jule_tuple_x_1ce11bc0c_Data __jule_assign_result = _1ce12b2e3_evalSlicingExprs(_self_, &(_140235_s));
		_140813_l = __jule_assign_result.__jule_result_arg0;
		_140820_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_140813_l == nullptr)) {
		return _140313_d;;
	};
	(*(_140313_d))._field_Decl=false;
	_1ce12be92_checkSlicing(_self_, &(_140313_d), &(_140813_l), &(_140820_r), &(_140235_s));
	if (_1ce11c614_IsConst(_140313_d.ptr())) {
		(*(_140313_d))._field_Decl=false;
		(*(_140313_d))._field_Model=jule::Any((*(_140313_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_140313_d))._field_Decl) {
		(*(_140313_d))._field_Decl=false;
	} else {
		jule::Ptr<_1cdeed814_SlicingExprModel> _142617_model = jule::new_ptr<_1cdeed814_SlicingExprModel>(_1cdeed814_SlicingExprModel{._field_Token=(*_140235_s.alloc)._field_Token, ._field_Expr=(*(_140313_d))._field_Model, ._field_Left=(*(_140813_l))._field_Model, });;
		if ((_140820_r != nullptr)) {
			(*(_142617_model))._field_Right=(*_140820_r.alloc)._field_Model;
		};
		(*(_140313_d))._field_Model=jule::Any(_142617_model, &__jule_any_type92);
	};
	return _140313_d;;
}



inline void _1ce12c701_castPtr(_1ce11d934_Eval* _self_, jule::Ptr<_1ce14cbc7_TypeKind> _143930_t, jule::Ptr<_1ce11bc0c_Data> _143948_d, jule::Ptr<_1cdeab4b4_Token> _143958_errorToken) {
	(*(_143948_d))._field_Constant=nullptr;
	(*_143948_d.alloc)._field_untyped=false;
	jule::Ptr<_1ce1592cc_Sptr> _14429_sptr = _1ce1505ae_Sptr((*_143948_d.alloc)._field_Kind.ptr());;
	if ((_14429_sptr != nullptr)) {
		if ((!(_1ce14d3d1_Equal((*(_1ce150845_Ptr(_143930_t.ptr())))._field_Elem, (*_14429_sptr.alloc)._field_Elem)))) {
			_1ce11de84_pushErr(_self_, _143958_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*_143948_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1ce14d090_Str(_143930_t), &__jule_any_type4)}));
		};
		return;;
	};
	if ((!(_1ce11e979_isUnsafe(_self_)))) {
		_1ce11de84_pushErr(_self_, _143958_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ce1557a1_Prim> _14559_prim = _1ce150328_Prim((*_143948_d.alloc)._field_Kind);;
	if (((_1ce150845_Ptr((*_143948_d.alloc)._field_Kind) == nullptr) && ((_14559_prim == nullptr) || (!(_22be15502_IsInt(_1ce155ae2_Str(_14559_prim.ptr()))))))) {
		_1ce11de84_pushErr(_self_, _143958_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*_143948_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1ce14d090_Str(_143930_t), &__jule_any_type4)}));
	};
}



inline void _1ce12cb1e_castStruct(_1ce11d934_Eval* _self_, jule::Ptr<_1ce14cbc7_TypeKind> _146133_t, jule::Ptr<_1ce11bc0c_Data> _146151_d, jule::Ptr<_1cdeab4b4_Token> _146161_errorToken) {
	(*(_146151_d))._field_Constant=nullptr;
	(*_146151_d.alloc)._field_untyped=false;
	jule::Ptr<_1ce01ac0a_Trait> _146413_tr = _1ce151b32_Trait((*_146151_d.alloc)._field_Kind.ptr());;
	if ((_146413_tr == nullptr)) {
		_1ce11de84_pushErr(_self_, _146161_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*_146151_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1ce14d090_Str(_146133_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1cdee571d_StructIns> _147013_s = _1ce15189b_Struct(_146133_t);;
	_1b86d3e66_pushReference(_self_, &(_147013_s));
	if ((!(_1cdee40ce_IsImplements((*(_147013_s))._field_Decl.ptr(), _146413_tr)))) {
		_1ce11de84_pushErr(_self_, _146161_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*_146151_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1ce14d090_Str(_146133_t), &__jule_any_type4)}));
	};
}



inline void _1ce12d03c_castRef(_1ce11d934_Eval* _self_, jule::Ptr<_1ce14cbc7_TypeKind> _147830_t, jule::Ptr<_1ce11bc0c_Data> _147848_d, jule::Ptr<_1cdeab4b4_Token> _147858_errorToken) {
	(*(_147848_d))._field_Constant=nullptr;
	(*_147848_d.alloc)._field_untyped=false;
	jule::Ptr<_1ce1592cc_Sptr> _148113_sptr = _1ce1505ae_Sptr(_147830_t.ptr());;
	jule::Ptr<_1ce15ca94_Ptr> _148313_ptr = _1ce150845_Ptr((*_147848_d.alloc)._field_Kind.ptr());;
	if (((_148313_ptr != nullptr) && _1ce14d3d1_Equal((*(_148113_sptr))._field_Elem, (*_148313_ptr.alloc)._field_Elem))) {
		if ((!(_1ce11e979_isUnsafe(_self_)))) {
			_1ce11de84_pushErr(_self_, _147858_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1ce15189b_Struct((*_148113_sptr.alloc)._field_Elem) != nullptr)) {
		_1ce12cb1e_castStruct(_self_, (*_148113_sptr.alloc)._field_Elem, _147848_d, _147858_errorToken);
		return;;
	};
	_1ce11de84_pushErr(_self_, _147858_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*_147848_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1ce14d090_Str(_147830_t), &__jule_any_type4)}));
}



inline void _1ce12d45a_castSlc(_1ce11d934_Eval* _self_, jule::Ptr<_1ce14cbc7_TypeKind> _150130_t, jule::Ptr<_1ce11bc0c_Data> _150148_d, jule::Ptr<_1cdeab4b4_Token> _150158_errorToken) {
	jule::Ptr<_22be1616d_Const> _15029_c = (*(_150148_d))._field_Constant;;
	(*_150148_d.alloc)._field_Constant=nullptr;
	(*_150148_d.alloc)._field_untyped=false;
	if ((_1ce150acb_Enum((*_150148_d.alloc)._field_Kind.ptr()) != nullptr)) {
		if (((_1ce150328_Prim((*((*(_1ce150acb_Enum((*_150148_d.alloc)._field_Kind)))._field_Kind))._field_Kind.ptr()) == nullptr) || (!(_1ce158c38_IsStr(_1ce150328_Prim((*(*(_1ce150acb_Enum((*_150148_d.alloc)._field_Kind)))._field_Kind.alloc)._field_Kind).ptr()))))) {
			_1ce11de84_pushErr(_self_, _150158_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*_150148_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1ce14d090_Str(_150130_t.ptr()), &__jule_any_type4)}));
			return;;
		};
	} else if (((_1ce150328_Prim((*_150148_d.alloc)._field_Kind.ptr()) == nullptr) || (!(_1ce158c38_IsStr(_1ce150328_Prim((*_150148_d.alloc)._field_Kind).ptr()))))) {
		_1ce11de84_pushErr(_self_, _150158_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*_150148_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1ce14d090_Str(_150130_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	_150130_t=(*(_1ce15137e_Slc(_150130_t.ptr())))._field_Elem;
	jule::Ptr<_1ce1557a1_Prim> _15179_prim = _1ce150328_Prim(_150130_t);;
	if (((_15179_prim == nullptr) || ((!(_1ce157198_IsU8(_15179_prim.ptr()))) && (!(_1ce156b7b_IsI32(_15179_prim.ptr())))))) {
		_1ce11de84_pushErr(_self_, _150158_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*_150148_d.alloc)._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ce14d090_Str(_150130_t), &__jule_any_type4)}));
		return;;
	};
	if ((_15029_c != nullptr)) {
		{
			
			if (_1ce157198_IsU8(_15179_prim.ptr())) {
				_case_begin_1b86e7c27:;
				{
					jule::Str _152717_s = _22be182e6_ReadStr(_15029_c);;
					jule::Ptr<_1cdeec071_SliceExprModel> _152821_model = jule::new_ptr<_1cdeec071_SliceExprModel>(_1cdeec071_SliceExprModel{._field_ElemKind=_150130_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _152717_s.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_152717_s);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b86e972e:;
						if (it != expr_end) {
							jule::U8 *_153224_b = it;
							{
								jule::Ptr<_22be1616d_Const> _153325_bc = static__22be16877_NewU64(static_cast<jule::U64>((*(_153224_b))));;
								(*(_153325_bc))._field_Kind=(*(_15179_prim))._field_Kind;
								(*(_152821_model))._field_Elems=jule::append((*_152821_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({jule::Any(_153325_bc, &__jule_any_type19)}));
							}
							_iter_next_1b86e972e:;
							++it;
							goto _iter_begin_1b86e972e;
						}
						_iter_end_1b86e972e:;
					};
					(*_150148_d.alloc)._field_Model=jule::Any(_152821_model, &__jule_any_type76);
					(*_150148_d.alloc)._field_Decl=true;
				}
			}
			else if (_1ce156b7b_IsI32(_15179_prim.ptr())) {
				_case_begin_1b86e7cc1:;
				{
					jule::Slice<jule::I32> _154017_runes = static_cast<jule::Slice<jule::I32>>(_22be182e6_ReadStr(_15029_c));;
					jule::Ptr<_1cdeec071_SliceExprModel> _154121_model = jule::new_ptr<_1cdeec071_SliceExprModel>(_1cdeec071_SliceExprModel{._field_ElemKind=_150130_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _154017_runes.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_154017_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b86ecb3e:;
						if (it != expr_end) {
							jule::I32 *_154524_r = it;
							{
								jule::Ptr<_22be1616d_Const> _154625_rc = static__22be165ad_NewI64(static_cast<jule::I64>((*(_154524_r))));;
								(*(_154625_rc))._field_Kind=(*(_15179_prim))._field_Kind;
								(*(_154121_model))._field_Elems=jule::append((*_154121_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({jule::Any(_154625_rc, &__jule_any_type19)}));
							}
							_iter_next_1b86ecb3e:;
							++it;
							goto _iter_begin_1b86ecb3e;
						}
						_iter_end_1b86ecb3e:;
					};
					(*_150148_d.alloc)._field_Model=jule::Any(_154121_model, &__jule_any_type76);
					(*_150148_d.alloc)._field_Decl=true;
				}
			}
			_match_end_1b86e7b4a:;
		};
	};
}



inline void _1ce12d7bd_castStr(_1ce11d934_Eval* _self_, jule::Ptr<_1ce11bc0c_Data> _155630_d, jule::Ptr<_1cdeab4b4_Token> _155640_errorToken) {
	if ((_1ce150acb_Enum((*(_155630_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ce01d416_Enum> _155817_e = _1ce150acb_Enum((*_155630_d.alloc)._field_Kind);;
		if (((_1ce150328_Prim((*((*(_155817_e))._field_Kind))._field_Kind.ptr()) != nullptr) && _1ce158c38_IsStr(_1ce150328_Prim((*(*_155817_e.alloc)._field_Kind.alloc)._field_Kind).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_22be1616d_Const> _15649_c = (*_155630_d.alloc)._field_Constant;;
	(*_155630_d.alloc)._field_Constant=nullptr;
	(*_155630_d.alloc)._field_untyped=false;
	if ((_1ce150328_Prim((*_155630_d.alloc)._field_Kind) != nullptr)) {
		jule::Ptr<_1ce1557a1_Prim> _156813_prim = _1ce150328_Prim((*_155630_d.alloc)._field_Kind);;
		if (((!(_1ce157198_IsU8(_156813_prim.ptr()))) && (!(_1ce156b7b_IsI32(_156813_prim))))) {
			_1ce11de84_pushErr(_self_, _155640_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1ce14d090_Str((*_155630_d.alloc)._field_Kind), &__jule_any_type4)}));
			return;;
		};
		if ((_15649_c != nullptr)) {
			{
				
				if (_1ce157198_IsU8(_156813_prim)) {
					_case_begin_1b8705482:;
					{
						(*_155630_d.alloc)._field_Constant=static__22be16e0a_NewStr(jule::Str::from_byte(static_cast<jule::U8>(_22be18a99_AsU64(_15649_c))));
						(*_155630_d.alloc)._field_Model=jule::Any((*_155630_d.alloc)._field_Constant, &__jule_any_type19);
						(*_155630_d.alloc)._field_Decl=true;
					}
				}
				else if (_1ce156b7b_IsI32(_156813_prim)) {
					_case_begin_1b870552b:;
					{
						(*_155630_d.alloc)._field_Constant=static__22be16e0a_NewStr(jule::Str::from_rune(static_cast<jule::I32>(_22be18813_AsI64(_15649_c))));
						(*_155630_d.alloc)._field_Model=jule::Any((*_155630_d.alloc)._field_Constant, &__jule_any_type19);
						(*_155630_d.alloc)._field_Decl=true;
					}
				}
				_match_end_1b8705383:;
			};
		};
		return;;
	};
	jule::Ptr<_1ce159ca0_Slc> _158913_s = _1ce15137e_Slc((*_155630_d.alloc)._field_Kind);;
	if ((_158913_s == nullptr)) {
		_1ce11de84_pushErr(_self_, _155640_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1ce14d090_Str((*_155630_d.alloc)._field_Kind), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1ce14cbc7_TypeKind> _159513_t = (*(_158913_s))._field_Elem;;
	jule::Ptr<_1ce1557a1_Prim> _15969_prim = _1ce150328_Prim(_159513_t.ptr());;
	if (((_15969_prim == nullptr) || ((!(_1ce157198_IsU8(_15969_prim.ptr()))) && (!(_1ce156b7b_IsI32(_15969_prim.ptr())))))) {
		_1ce11de84_pushErr(_self_, _155640_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1ce14d090_Str((*_155630_d.alloc)._field_Kind), &__jule_any_type4)}));
		return;;
	};
}



inline void _1ce12dbdb_castInt(_1ce11d934_Eval* _self_, jule::Ptr<_1ce14cbc7_TypeKind> _160330_t, jule::Ptr<_1ce11bc0c_Data> _160348_d, jule::Ptr<_1cdeab4b4_Token> _160358_errorToken) {
	if (_1ce11c614_IsConst(_160348_d.ptr())) {
		jule::Ptr<_1ce1557a1_Prim> _160513_prim = _1ce150328_Prim(_160330_t.ptr());;
		{
			
			if (_22be14e2a_IsSigInt((*(_160513_prim))._field_Kind)) {
				_case_begin_1b870da1d:;
				{
					_22be190d8_SetI64((*_160348_d.alloc)._field_Constant.ptr(), _22be18813_AsI64((*_160348_d.alloc)._field_Constant));
				}
			}
			else if (_22be15238_IsUnsigInt((*(_160513_prim))._field_Kind)) {
				_case_begin_1b870dab7:;
				{
					_22be19391_SetU64((*_160348_d.alloc)._field_Constant.ptr(), _22be18a99_AsU64((*_160348_d.alloc)._field_Constant));
				}
			}
			_match_end_1b870d996:;
		};
	} else {
		(*(_160348_d))._field_Constant=nullptr;
		(*_160348_d.alloc)._field_untyped=false;
	};
	if ((_1ce150acb_Enum((*(_160348_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ce01d416_Enum> _161813_e = _1ce150acb_Enum((*_160348_d.alloc)._field_Kind);;
		if (_22be15ac9_IsNum(_1ce14d090_Str((*((*(_161813_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1ce1505ae_Sptr((*_160348_d.alloc)._field_Kind) != nullptr)) {
		jule::Ptr<_1ce1557a1_Prim> _162513_prim = _1ce150328_Prim(_160330_t.ptr());;
		if ((!(_1ce15871b_IsUintptr(_162513_prim.ptr())))) {
			_1ce11de84_pushErr(_self_, _160358_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*_160348_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1ce14d090_Str(_160330_t), &__jule_any_type4)}));
		};
		return;;
	};
	if ((_1ce150845_Ptr((*_160348_d.alloc)._field_Kind) != nullptr)) {
		jule::Ptr<_1ce1557a1_Prim> _163213_prim = _1ce150328_Prim(_160330_t);;
		if (_1ce15871b_IsUintptr(_163213_prim.ptr())) {
		} else if ((!(_1ce11e979_isUnsafe(_self_)))) {
			_1ce11de84_pushErr(_self_, _160358_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1ce1557a1_Prim> _16419_prim = _1ce150328_Prim((*_160348_d.alloc)._field_Kind);;
	if (((_16419_prim != nullptr) && _22be15ac9_IsNum(_1ce155ae2_Str(_16419_prim)))) {
		return;;
	};
	_1ce11de84_pushErr(_self_, _160358_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*_160348_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1ce14d090_Str(_160330_t), &__jule_any_type4)}));
}



inline void _1ce12e109_castNum(_1ce11d934_Eval* _self_, jule::Ptr<_1ce14cbc7_TypeKind> _164930_t, jule::Ptr<_1ce11bc0c_Data> _164948_d, jule::Ptr<_1cdeab4b4_Token> _164958_errorToken) {
	if (_1ce11c614_IsConst(_164948_d.ptr())) {
		jule::Ptr<_1ce1557a1_Prim> _165113_prim = _1ce150328_Prim(_164930_t.ptr());;
		{
			
			if (_22be15843_IsFloat((*(_165113_prim))._field_Kind)) {
				_case_begin_1b8719d37:;
				{
					_22be19baa_SetF64((*_164948_d.alloc)._field_Constant.ptr(), _22be18d30_AsF64((*_164948_d.alloc)._field_Constant));
				}
			}
			else if (_22be14e2a_IsSigInt((*(_165113_prim))._field_Kind)) {
				_case_begin_1b8719dd1:;
				{
					_22be190d8_SetI64((*_164948_d.alloc)._field_Constant.ptr(), _22be18813_AsI64((*_164948_d.alloc)._field_Constant));
				}
			}
			else if (_22be15238_IsUnsigInt((*(_165113_prim))._field_Kind)) {
				_case_begin_1b8719e47:;
				{
					_22be19391_SetU64((*_164948_d.alloc)._field_Constant.ptr(), _22be18a99_AsU64((*_164948_d.alloc)._field_Constant));
				}
			}
			_match_end_1b8719c6b:;
		};
	} else {
		(*(_164948_d))._field_Constant=nullptr;
		(*_164948_d.alloc)._field_untyped=false;
	};
	if ((_1ce150acb_Enum((*(_164948_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ce01d416_Enum> _166613_e = _1ce150acb_Enum((*_164948_d.alloc)._field_Kind);;
		if (_22be15ac9_IsNum(_1ce14d090_Str((*((*(_166613_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1ce1557a1_Prim> _16729_prim = _1ce150328_Prim((*_164948_d.alloc)._field_Kind);;
	if (((_16729_prim != nullptr) && _22be15ac9_IsNum(_1ce155ae2_Str(_16729_prim)))) {
		return;;
	};
	_1ce11de84_pushErr(_self_, _164958_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*_164948_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1ce14d090_Str(_164930_t.ptr()), &__jule_any_type4)}));
}



inline void _1ce12e527_castPrim(_1ce11d934_Eval* _self_, jule::Ptr<_1ce14cbc7_TypeKind> _168031_t, jule::Ptr<_1ce11bc0c_Data> _168049_d, jule::Ptr<_1cdeab4b4_Token> _168059_errorToken) {
	jule::Ptr<_1ce1557a1_Prim> _16819_prim = _1ce150328_Prim(_168031_t.ptr());;
	{
		
		if (_1ce158ebe_IsAny(_16819_prim.ptr())) {
			_case_begin_1b87232e6:;
			{
				(*(_168049_d))._field_Constant=nullptr;
				(*_168049_d.alloc)._field_untyped=false;
			}
		}
		else if (_1ce158c38_IsStr(_16819_prim.ptr())) {
			_case_begin_1b8722eb6:;
			{
				_1ce12d7bd_castStr(_self_, _168049_d, _168059_errorToken);
			}
		}
		else if (_22be15502_IsInt(_1ce155ae2_Str(_16819_prim.ptr()))) {
			_case_begin_1b872302c:;
			{
				_1ce12dbdb_castInt(_self_, _168031_t, _168049_d, _168059_errorToken);
			}
		}
		else if (_22be15ac9_IsNum(_1ce155ae2_Str(_16819_prim.ptr()))) {
			_case_begin_1b8723093:;
			{
				_1ce12e109_castNum(_self_, _168031_t, _168049_d, _168059_errorToken);
			}
		}
		else {
			_case_begin_1b8722e50:;
			{
				_1ce11de84_pushErr(_self_, _168059_errorToken, jule::Str::lit("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str(_168031_t), &__jule_any_type4)}));
			}
		}
		_match_end_1b8722dea:;
	};
}



inline void _1ce12e88a_castConstant(_1ce11d934_Eval* _self_, jule::Ptr<_1ce14cbc7_TypeKind>* _169836_t, jule::Ptr<_1ce11bc0c_Data>* _169855_d) {
	if ((((*(_169855_d)) == nullptr) || (!(_1ce11c614_IsConst((*(_169855_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1ce1557a1_Prim> _17029_prim = _1ce150328_Prim((*(_169836_t)).ptr());;
	_1ce1485b8_castConstByType(&((*(_17029_prim))._field_Kind), _169855_d);
	(*((*(_169855_d))))._field_Model=jule::Any((*((*(_169855_d))))._field_Constant, &__jule_any_type19);
}



inline void _1ce12eca8_castTypeEnum(_1ce11d934_Eval* _self_, jule::Ptr<_1ce14cbc7_TypeKind>* _170736_t, jule::Ptr<_1ce11bc0c_Data>* _170755_d, jule::Ptr<_1cdeab4b4_Token>* _170770_errorToken) {
	jule::I32 _17089_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1ce09c341_checkTypeCompatibility((*(_self_))._field_s, &((*((*(_170755_d))))._field_Kind), _170736_t, _170770_errorToken)))) {
		(*(*(_self_))._field_s.alloc)._field_errors=(*(*(_self_))._field_s.alloc)._field_errors.slice(0LL, _17089_n);
		_1ce11de84_pushErr(_self_, (*(_170770_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*((*(_170755_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ce14d090_Str((*(_170736_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_170755_d))))._field_Constant=nullptr;
	(*((*(_170755_d))))._field_untyped=false;
}



inline void _1ce1301c6_castTypeEnumT(_1ce11d934_Eval* _self_, jule::Ptr<_1ce14cbc7_TypeKind>* _171737_t, jule::Ptr<_1ce11bc0c_Data>* _171756_d, jule::Ptr<_1cdeab4b4_Token>* _171771_errorToken) {
	jule::I32 _17189_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1ce09c341_checkTypeCompatibility((*(_self_))._field_s, _171737_t, &((*((*(_171756_d))))._field_Kind), _171771_errorToken)))) {
		(*(*(_self_))._field_s.alloc)._field_errors=(*(*(_self_))._field_s.alloc)._field_errors.slice(0LL, _17189_n);
		_1ce11de84_pushErr(_self_, (*(_171771_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*((*(_171756_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1ce14d090_Str((*(_171737_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_171756_d))))._field_Constant=nullptr;
	(*((*(_171756_d))))._field_untyped=false;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce13067c_evalCastByTypeNData(_1ce11d934_Eval* _self_, jule::Ptr<_1ce14cbc7_TypeKind> _172742_t, jule::Ptr<_1ce11bc0c_Data> _172760_d, jule::Ptr<_1cdeab4b4_Token> _172774_errorToken) {
	if (((_172760_d != nullptr) && (*_172760_d.alloc)._field_Decl)) {
		_1ce11de84_pushErr(_self_, _172774_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1ce11c0e7_IsNil(_172760_d)) {
			_case_begin_1b8730aa6:;
			{
				if ((!(_1ce14ea75_NilCompatible(_172742_t.ptr())))) {
					_1ce11de84_pushErr(_self_, _172774_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("<nil>", 5), &__jule_any_type4),jule::Any(_1ce14d090_Str(_172742_t), &__jule_any_type4)}));
				};
				(*_172760_d.alloc)._field_Constant=nullptr;
				(*_172760_d.alloc)._field_untyped=false;
			}
		}
		else if (((_1ce150328_Prim((*_172760_d.alloc)._field_Kind.ptr()) != nullptr) && _1ce158ebe_IsAny(_1ce150328_Prim((*_172760_d.alloc)._field_Kind).ptr()))) {
			_case_begin_1b8730b1c:;
			{
				if ((_1ce150acb_Enum(_172742_t.ptr()) != nullptr)) {
					_1ce11de84_pushErr(_self_, _172774_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
					_1ce11e2e7_pushSuggestion(_self_, jule::Str::lit("try cast to type of enum fields instead of enum", 47), jule::Slice<jule::Any>());
				} else if ((_1ce150d62_TypeEnum(_172742_t.ptr()) != nullptr)) {
					_1ce11de84_pushErr(_self_, _172774_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
				};
				(*_172760_d.alloc)._field_Constant=nullptr;
				(*_172760_d.alloc)._field_untyped=false;
			}
		}
		else if ((_1ce150d62_TypeEnum((*_172760_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8730b83:;
			{
				_1ce12eca8_castTypeEnum(_self_, &(_172742_t), &(_172760_d), &(_172774_errorToken));
			}
		}
		else if ((_1ce150d62_TypeEnum(_172742_t.ptr()) != nullptr)) {
			_case_begin_1b8730be9:;
			{
				_1ce1301c6_castTypeEnumT(_self_, &(_172742_t), &(_172760_d), &(_172774_errorToken));
			}
		}
		else if ((_1ce150845_Ptr(_172742_t.ptr()) != nullptr)) {
			_case_begin_1b8730c60:;
			{
				_1ce12c701_castPtr(_self_, _172742_t, _172760_d, _172774_errorToken);
			}
		}
		else if ((_1ce1505ae_Sptr(_172742_t.ptr()) != nullptr)) {
			_case_begin_1b8730cc6:;
			{
				_1ce12d03c_castRef(_self_, _172742_t, _172760_d, _172774_errorToken);
			}
		}
		else if ((_1ce15137e_Slc(_172742_t.ptr()) != nullptr)) {
			_case_begin_1b8731964:;
			{
				_1ce12d45a_castSlc(_self_, _172742_t, _172760_d, _172774_errorToken);
			}
		}
		else if ((_1ce15189b_Struct(_172742_t.ptr()) != nullptr)) {
			_case_begin_1b87319ca:;
			{
				_1ce12cb1e_castStruct(_self_, _172742_t, _172760_d, _172774_errorToken);
			}
		}
		else if ((_1ce150328_Prim(_172742_t.ptr()) != nullptr)) {
			_case_begin_1b8731a41:;
			{
				_1ce12e527_castPrim(_self_, _172742_t, _172760_d, _172774_errorToken);
				_1ce12e88a_castConstant(_self_, &(_172742_t), &(_172760_d));
			}
		}
		else {
			_case_begin_1b8730a40:;
			{
				_1ce11de84_pushErr(_self_, _172774_errorToken, jule::Str::lit("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str(_172742_t.ptr()), &__jule_any_type4)}));
				_172760_d=nullptr;
			}
		}
		_match_end_1b87309c9:;
	};
	if ((_172760_d == nullptr)) {
		return nullptr;;
	};
	(*_172760_d.alloc)._field_Mutable=((*_172760_d.alloc)._field_Mutable || (!(_1ce14e558_Mutable((*_172760_d.alloc)._field_Kind.ptr()))));
	if (((!((*_172760_d.alloc)._field_Decl)) && ((_1ce150acb_Enum((*_172760_d.alloc)._field_Kind) == nullptr) || (!(_1ce14d3d1_Equal((*((*(_1ce150acb_Enum((*_172760_d.alloc)._field_Kind)))._field_Kind))._field_Kind, _172742_t)))))) {
		_1ce1478a3_applyCastKind(&(_172760_d), &(_172742_t), &(_172774_errorToken));
		(*((*_172760_d.alloc)._field_Model.cast_ptr<_1cdeeb2e5_CastingExprModel>(&__jule_any_type93)))._field_Token=_172774_errorToken;
	} else {
		(*_172760_d.alloc)._field_Kind=_172742_t;
	};
	(*_172760_d.alloc)._field_Decl=false;
	(*_172760_d.alloc)._field_Lvalue=false;
	(*_172760_d.alloc)._field_untyped=false;
	if (_1ce11c614_IsConst(_172760_d)) {
		(*((*_172760_d.alloc)._field_Constant))._field_Kind=(*(_1ce150328_Prim(_172742_t.ptr())))._field_Kind;
	};
	return _172760_d;;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce130b33_evalCastT(jule::Ptr<_1ce11d934_Eval> _self_, jule::Ptr<_1ce14cbc7_TypeKind>* _180034_t, jule::Ptr<_1cdec5dc4_Expr>* _180053_e, jule::Ptr<_1cdeab4b4_Token>* _180068_et) {
	jule::Ptr<_1ce14cbc7_TypeKind> _180113_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_180113_prefix;
	});;
	if ((_1ce15137e_Slc((*(_180034_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_180053_e))))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type94) {
				_case_begin_1b8741c0a:;
				{
					(*_self_.alloc)._field_prefix=(*(_180034_t));
				}
			}
			_match_end_1b8741b94:;
		};
	};
	jule::Ptr<_1ce11bc0c_Data> _181013_d = _1ce13bb94_evalExpr(_self_, (*(_180053_e)));;
	if (((_181013_d == nullptr) || ((*_self_.alloc)._field_prefix != nullptr))) {
		return _181013_d;;
	};
	return _1ce13067c_evalCastByTypeNData(_self_, (*(_180034_t)), _181013_d, (*(_180068_et)));;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce130e74_evalCast(jule::Ptr<_1ce11d934_Eval> _self_, jule::Ptr<_1cdec8734_CastExpr> _181732_c) {
	jule::Ptr<_1ce154d99_TypeSymbol> _181813_t = _1ce010381_buildType((*(_181732_c))._field_Kind);;
	jule::Bool _18199_ok = _1ce099a47_checkType((*(_self_))._field_s, &(_181813_t), (*_self_.alloc)._field_lookup);;
	if ((!(_18199_ok))) {
		return nullptr;;
	};
	return _1ce130b33_evalCastT(_self_, &((*(_181813_t))._field_Kind), &((*_181732_c.alloc)._field_Expr), &((*((*_181732_c.alloc)._field_Kind))._field_Token));;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce1312b5_evalNsSelection(_1ce11d934_Eval* _self_, jule::Ptr<_1cdec8b0d_NsSelectionExpr> _182634_s) {
	jule::Str _18279_path = _1ce16971b_buildLinkPathByTokens(&((*(_182634_s))._field_Ns));;
	jule::Ptr<_1ce06b0ac_ImportInfo> _182813_imp = _1ce16c7b8_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ce16aaa2_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1ce06b0ac_ImportInfo>)>([=](jule::Ptr<_1ce06b0ac_ImportInfo> _182849_imp) mutable -> jule::Bool {
		if ((((*_182634_s.alloc)._field_Ns.len() == 1LL) && ((*(_182849_imp))._field_Alias == _18279_path))) {
			return true;;
		};
		return (((*_182849_imp.alloc)._field_LinkPath == _18279_path) && _1ce06dbc5_isAccessibleViaSelection(_182849_imp));;
	}));;
	if ((_182813_imp == nullptr)) {
		_1ce11de84_pushErr(_self_, (*_182634_s.alloc)._field_Ns[0LL], jule::Str::lit("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_18279_path, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Trait<_1ce16c7b8_Lookup> _184013_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1ce16c7b8_Lookup>(_182813_imp, 1);
	;
	_1ce11e6e3_disallowBuiltin(_self_);
	jule::Any _184513_def = _1ce121c01_getDef(_self_, &((*((*_182634_s.alloc)._field_Ident))._field_Kind), false);;
	_1ce11e4e5_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_184013_lookup;
	jule::Ptr<_1ce11bc0c_Data> _184813_d = _1ce125dae_evalDef(_self_, &(_184513_def), (*_182634_s.alloc)._field_Ident);;
	return _184813_d;;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce13176b_evalStructLitExplicit(jule::Ptr<_1ce11d934_Eval> _self_, jule::Ptr<_1cdee571d_StructIns> _185245_s, jule::Slice<jule::Ptr<_1cdec5dc4_Expr>> _185313_exprs, jule::Ptr<_1cdeab4b4_Token> _185333_errorToken) {
	jule::Bool _18549_ok = _1ce095405_checkGenericQuantity((*(_self_))._field_s.ptr(), (*((*(_185245_s))._field_Decl))._field_Generics.len(), (*_185245_s.alloc)._field_Generics.len(), _185333_errorToken);;
	if ((!(_18549_ok))) {
		return nullptr;;
	};
	if ((((*_self_.alloc)._field_field != nullptr) && ((*((*(*_self_.alloc)._field_field.alloc)._field_Decl))._field_Owner == (*_185245_s.alloc)._field_Decl))) {
		_1ce11de84_pushErr(_self_, _185333_errorToken, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(*_185245_s.alloc)._field_Decl.alloc)._field_Ident, &__jule_any_type4)}));
	};
	_1b86d3e66_pushReference(_self_, &(_185245_s));
	_1ce1240aa_checkDeprecated(_self_, &((*(*_185245_s.alloc)._field_Decl.alloc)._field_Directives), _185333_errorToken);
	_1ce10ecdd_structLitChecker _186713_slc = _1ce10ecdd_structLitChecker{._field_e=_self_, ._field_errorToken=_185333_errorToken, ._field_s=_185245_s, };;
	_1ce11152b_check(&_186713_slc, &(_185313_exprs));
	jule::Ptr<_1ce11bc0c_Data> _187413_d = jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(_185245_s, 0)}), ._field_Mutable=(!((*_self_.alloc)._field_immutable)), ._field_Model=jule::Any(jule::new_ptr<_1cdeea965_StructLitExprModel>(_1cdeea965_StructLitExprModel{._field_Strct=_185245_s, ._field_Args=_186713_slc._field_args}), &__jule_any_type95), });;
	if ((*(*_185245_s.alloc)._field_Decl.alloc)._field_Binded) {
		(*((*(_187413_d))._field_Kind))._field_BindIdent=(*(*_185245_s.alloc)._field_Decl.alloc)._field_Ident;
	};
	return _187413_d;;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce131aac_evalStructLit(jule::Ptr<_1ce11d934_Eval> _self_, jule::Ptr<_1cdecae1d_StructLit> _189037_lit) {
	jule::Ptr<_1ce154d99_TypeSymbol> _189113_t = _1ce010381_buildType((*(_189037_lit))._field_Kind);;
	jule::Bool _18929_ok = _1ce099a47_checkType((*(_self_))._field_s, &(_189113_t), (*_self_.alloc)._field_lookup);;
	if ((!(_18929_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1cdee571d_StructIns> _189713_s = _1ce15189b_Struct((*(_189113_t))._field_Kind.ptr());;
	if ((_189713_s == nullptr)) {
		if ((_1ce1505ae_Sptr((*_189113_t.alloc)._field_Kind) != nullptr)) {
			_189713_s=_1ce15189b_Struct((*(_1ce1505ae_Sptr((*_189113_t.alloc)._field_Kind)))._field_Elem.ptr());
			if ((_189713_s != nullptr)) {
				goto _julec_label_1b87580c8;
			};
		};
		_1ce11de84_pushErr(_self_, (*((*_189037_lit.alloc)._field_Kind))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1b87580c8:;
	jule::Ptr<_1ce11bc0c_Data> _191013_d = _1ce13176b_evalStructLitExplicit(_self_, _189713_s, (*_189037_lit.alloc)._field_Exprs, (*(*_189037_lit.alloc)._field_Kind.alloc)._field_Token);;
	if ((_1ce1505ae_Sptr((*_189113_t.alloc)._field_Kind) != nullptr)) {
		jule::Ptr<_1cdeea965_StructLitExprModel> _191217_model = (*(_191013_d))._field_Model.cast_ptr<_1cdeea965_StructLitExprModel>(&__jule_any_type95);;
		_1ce145ecd_makeStructLitAlloc(&(_191013_d), &(_191217_model));
	};
	return _191013_d;;
}



inline _1ce15ea85_typeChecker _1ce131d43_typeChecker(_1ce11d934_Eval* _self_) {
	return _1ce0987e3_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce132184_evalType(_1ce11d934_Eval* _self_, jule::Ptr<_1cdec1a90_TypeDecl> _192231_t) {
	jule::Ptr<_1ce154d99_TypeSymbol> _192313_tk = _1ce010381_buildType(_192231_t);;
	jule::Bool _19249_ok = _1ce099a47_checkType((*(_self_))._field_s, &(_192313_tk), (*(_self_))._field_lookup);;
	if ((!(_19249_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=(*(_192313_tk))._field_Kind, ._field_Model=jule::Any((*_192313_tk.alloc)._field_Kind, &__jule_any_type84), ._field_Decl=true, });;
}



inline void _1ce1324e7_callTypeFn(jule::Ptr<_1ce11d934_Eval> _self_, jule::Ptr<_1cdec9aed_FnCallExpr>* _193535_fc, jule::Ptr<_1ce11bc0c_Data>* _193557_d) {
	if (((*((*(_193535_fc))))._field_Args.len() < 1LL)) {
		_1ce11de84_pushErr(_self_.ptr(), (*((*(_193535_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("v", 1), &__jule_any_type4)}));
	} else if (((*((*(_193535_fc))))._field_Args.len() > 1LL)) {
		_1ce11de84_pushErr(_self_.ptr(), (*((*((*(_193535_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*((*(_193557_d))))._field_Kind.ptr()), &__jule_any_type4)}));
	} else if ((*((*(_193535_fc))))._field_IsCo) {
		_1ce11de84_pushErr(_self_.ptr(), (*((*(_193535_fc))))._field_Token, jule::Str::lit("concurrent calls are not allowed for type-cast calls", 52), jule::Slice<jule::Any>());
		(*(_193557_d))=nullptr;
		return;;
	} else if (((*((*(_193535_fc))))._field_Exception != nullptr)) {
		_1ce11de84_pushErr(_self_.ptr(), (*((*(_193535_fc))))._field_Token, jule::Str::lit("exceptionals are not supported for type-cast call", 49), jule::Slice<jule::Any>());
		(*(_193557_d))=nullptr;
		return;;
	};
	if (((*((*(_193535_fc))))._field_Args.len() > 0LL)) {
		jule::Ptr<_1cdec5dc4_Expr> _195117_arg = (*((*(_193535_fc))))._field_Args[0LL];;
		(*(_193557_d))=_1ce130b33_evalCastT(_self_, &((*((*(_193557_d))))._field_Kind), &(_195117_arg), &((*(_195117_arg))._field_Token));
		return;;
	};
	if (((*(_193557_d)) != nullptr)) {
		(*((*(_193557_d))))._field_Decl=false;
	};
}



inline void _1ce13285a_callBuiltinFn(jule::Ptr<_1ce11d934_Eval> _self_, jule::Ptr<_1cdec9aed_FnCallExpr>* _196138_fc, jule::Ptr<_1ce11bc0c_Data>* _196160_d) {
	if ((!(_1cdec9e72_Unhandled((*(_196138_fc)).ptr())))) {
		_1ce11de84_pushErr(_self_.ptr(), (*((*(_196138_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	(*(_196160_d))=(*(_1ce151615_Fn((*((*(_196160_d))))._field_Kind.ptr())))._field_caller(&(_self_), _196138_fc, _196160_d);
	if (((*(_196160_d)) == nullptr)) {
		return;;
	};
	(*((*(_196160_d))))._field_Mutable=true;
}



inline void _1ce132bbd_checkFnOfConcurrentCall(_1ce11d934_Eval* _self_, jule::Ptr<_1ce00a832_FnIns>* _197343_f, jule::Ptr<_1cdeab4b4_Token> _197354_errorToken) {
	if (_1ce11e979_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*((*(_197343_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8767e51:;
		if (it != expr_end) {
			jule::Ptr<_1ce009886_ParamIns> *_197716_p = it;
			{
				if (_1ce006575_IsSelf((*((*(_197716_p))))._field_Decl.ptr())) {
					if ((!(_1ce00680b_IsRef((*(*(_197716_p)).alloc)._field_Decl)))) {
						_1ce11de84_pushErr(_self_, _197354_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97), jule::Slice<jule::Any>());
						_1ce11e2e7_pushSuggestion(_self_, jule::Str::lit("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99), jule::Slice<jule::Any>());
					};
				};
				if ((*(*(*(_197716_p)).alloc)._field_Decl.alloc)._field_Reference) {
					_1ce11de84_pushErr(_self_, _197354_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96), jule::Slice<jule::Any>());
					_1ce11e2e7_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule with unsafe {} scope to make concurrent call", 60), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1b8767e51:;
			++it;
			goto _iter_begin_1b8767e51;
		}
		_iter_end_1b8767e51:;
	};
}



inline void _1ce1330db_processExceptionalHandler(_1ce11d934_Eval* _self_, jule::Ptr<_1ce00a832_FnIns>* _199249_f, jule::Ptr<_1cdec9aed_FnCallExpr>* _199265_fc, jule::Ptr<_1ce11bc0c_Data>* _199287_d) {
	jule::Bool _19939_resultNeeded = ((!(_1ce007da1_IsVoid((*((*(_199249_f))))._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_1ce051acb_scopeChecker> _199417_csc = nullptr;;
	jule::Ptr<_1ce0497c7_Scope> _199517_ch = nullptr;;
	jule::Ptr<_1cdeebb97_FnCallExprModel> _199713_model = (*((*(_199287_d))))._field_Model.cast_ptr<_1cdeebb97_FnCallExprModel>(&__jule_any_type34);;
	jule::Ptr<_1ce051acb_scopeChecker> _200113_sc = (*(_self_))._field_lookup.cast_ptr<_1ce051acb_scopeChecker>(0);;
	_199417_csc=_1ce06356b_newChildChecker(_200113_sc);
	if (_19939_resultNeeded) {
		(*(_199417_csc))._field_result=(*(_199249_f));
	};
	_199517_ch=_1ce0568c2_getChild(_200113_sc);
	(*((*((*(_199265_fc))))._field_Exception))._field_Parent=(*_200113_sc.alloc)._field_tree;
	(*((*_199417_csc.alloc)._field_table))._field_Vars=jule::append((*(*_199417_csc.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1ce0b4105_Var>>::make({_1ce146352_buildErrorVar(&(_199517_ch), _199265_fc)}));
	_1ce056ce0_checkChildSsc(_200113_sc, &((*((*(_199265_fc))))._field_Exception), &(_199517_ch), &(_199417_csc));
	(*(_199713_model))._field_Assigned=_19939_resultNeeded;
	(*_199713_model.alloc)._field_Except=_199517_ch;
	if ((_19939_resultNeeded && ((*_199417_csc.alloc)._field_result != nullptr))) {
		_1ce11de84_pushErr(_self_, (*((*(_199265_fc))))._field_Token, jule::Str::lit("exceptional returns an expression, therefore else block should return expression", 80), jule::Slice<jule::Any>());
	};
}



inline void _1ce13344e_callFn(jule::Ptr<_1ce11d934_Eval> _self_, jule::Ptr<_1cdec9aed_FnCallExpr>* _201931_fc, jule::Ptr<_1ce11bc0c_Data>* _201953_d) {
	jule::Ptr<_1ce00a832_FnIns> _202013_f = _1ce151615_Fn((*((*(_201953_d))))._field_Kind.ptr());;
	if (_1ce00bcb7_IsBuiltin(_202013_f.ptr())) {
		_1ce13285a_callBuiltinFn(_self_, _201931_fc, _201953_d);
		return;;
	};
	if ((_1ce11ec10_isGlobal(_self_) && (*((*_202013_f.alloc)._field_Decl))._field_Exceptional)) {
		_1ce11de84_pushErr(_self_, (*((*(_201931_fc))))._field_Token, jule::Str::lit("exceptionals are not allowed in global scope", 44), jule::Slice<jule::Any>());
		_1ce11e2e7_pushSuggestion(_self_, jule::Str::lit("wrap exceptional with a non-exceptional function", 48), jule::Slice<jule::Any>());
		(*(_201953_d))=nullptr;
		return;;
	};
	if (((!(_1ce008137_IsMethod((*_202013_f.alloc)._field_Decl))) && _1ce1687e7_hasDirective(&((*(*_202013_f.alloc)._field_Decl.alloc)._field_Directives), jule::Str::lit("test", 4)))) {
		_1ce11de84_pushErr(_self_, (*((*(_201931_fc))))._field_Token, jule::Str::lit("you cannot call test functions", 30), jule::Slice<jule::Any>());
		(*(_201953_d))=nullptr;
		return;;
	};
	if (((((!((*((*(_201953_d))))._field_Mutable)) && _1ce008137_IsMethod((*_202013_f.alloc)._field_Decl)) && (!((*(*_202013_f.alloc)._field_Decl.alloc)._field_Statically))) && (*((*(*_202013_f.alloc)._field_Decl.alloc)._field_Params[0LL]))._field_Mutable)) {
		if ((!((*_self_.alloc)._field_immutable))) {
			_1ce11de84_pushErr(_self_, (*((*(_201931_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_1cdeea965_StructLitExprModel> _204617_lit = _1ce14980b_isLitBased(&((*((*(_201953_d))))._field_Model));;
			if ((_204617_lit == nullptr)) {
				_1ce11de84_pushErr(_self_, (*((*(_201931_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
			} else {
				_1ce10e804_checkMutRiskOfStructLit(&((*_self_.alloc)._field_s), &(_204617_lit));
			};
		};
	} else if (((!(_1ce11e979_isUnsafe(_self_))) && (*(*_202013_f.alloc)._field_Decl.alloc)._field_Unsafety)) {
		_1ce11de84_pushErr(_self_, (*((*(_201931_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	jule::Bool _205813_dynamicAnnotation = ((((*(*_202013_f.alloc)._field_Decl.alloc)._field_Generics.len() > 0LL) && ((*_202013_f.alloc)._field_Generics.len() == 0LL)) && ((*_202013_f.alloc)._field_Params.len() > 0LL));;
	if (_205813_dynamicAnnotation) {
		(*_202013_f.alloc)._field_Generics=jule::Slice<jule::Ptr<_1ce14b2e1_InsGeneric>>::alloc((*(*_202013_f.alloc)._field_Decl.alloc)._field_Generics.len(), (*(*_202013_f.alloc)._field_Decl.alloc)._field_Generics.len());
	} else if (((*_202013_f.alloc)._field_Generics.len() != (*(*_202013_f.alloc)._field_Decl.alloc)._field_Generics.len())) {
		_1ce095405_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), (*(*_202013_f.alloc)._field_Decl.alloc)._field_Generics.len(), (*_202013_f.alloc)._field_Generics.len(), (*((*(_201931_fc))))._field_Token);
		(*(_201953_d))=nullptr;
		return;;
	};
	jule::Ptr<_1ce08b42e_Sema> _206713_old = (*_self_.alloc)._field_s;;
	if (((*(*_202013_f.alloc)._field_Decl.alloc)._field_Owner != nullptr)) {
		(*_self_.alloc)._field_s=(*(*(*_202013_f.alloc)._field_Decl.alloc)._field_Owner.alloc)._field_sema;
	};
	__JULE_DEFER({
		if ((_206713_old != (*_self_.alloc)._field_s)) {
			(*(_206713_old))._field_errors=jule::append((*_206713_old.alloc)._field_errors,(*((*_self_.alloc)._field_s))._field_errors);
			(*(*_self_.alloc)._field_s.alloc)._field_errors=nullptr;
		};
		(*_self_.alloc)._field_s=_206713_old;
	});;
	_1ce10bda6_fnCallArgChecker _208013_fcac = _1ce10bda6_fnCallArgChecker{._field_e=_self_, ._field_args=(*((*(_201931_fc))))._field_Args, ._field_errorToken=(*((*(_201931_fc))))._field_Token, ._field_dynamicAnnotation=_205813_dynamicAnnotation, };;
	if ((!(_205813_dynamicAnnotation))) {
		if ((!((*_202013_f.alloc)._field_reloaded))) {
			jule::Bool _208917_ok = _1ce09ed5a_reloadFnInsTypes((*_self_.alloc)._field_s, _202013_f);;
			(*_202013_f.alloc)._field_reloaded=true;
			if ((!(_208917_ok))) {
				(*(_201953_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1ce00a832_FnIns> _209617_existInstance = _1ce00949b_appendInstance((*_202013_f.alloc)._field_Decl, &(_202013_f));;
		if ((_209617_existInstance != nullptr)) {
			_202013_f=_209617_existInstance;
		};
	} else if ((!(_1ce09d5b7_buildFnNonGenericTypeKinds((*_self_.alloc)._field_s, &(_202013_f), &(_208013_fcac._field_ignored))))) {
		(*(_201953_d))=nullptr;
		return;;
	};
	_208013_fcac._field_f=_202013_f;
	jule::Bool _210713_ok = false;;
	if (((*(*_202013_f.alloc)._field_Decl.alloc)._field_Owner != nullptr)) {
		std::swap(_206713_old, (*_self_.alloc)._field_s);
		_210713_ok=_1ce10e45d_check(&_208013_fcac);
		std::swap(_206713_old, (*_self_.alloc)._field_s);
	} else {
		_210713_ok=_1ce10e45d_check(&_208013_fcac);
	};
	if (_205813_dynamicAnnotation) {
		if ((!(_210713_ok))) {
			(*(_201953_d))=nullptr;
			return;;
		};
		if ((!(_1ce12a7ed_checkGenericFn(_self_, &(_202013_f), &((*((*(_201931_fc))))._field_Token), &((*((*(_201953_d))))._field_Model))))) {
			(*(_201953_d))=nullptr;
			return;;
		};
	};
	jule::Any _212713_callModel = (*((*(_201953_d))))._field_Model;;
	if (_1ce007da1_IsVoid((*_202013_f.alloc)._field_Decl)) {
		(*(_201953_d))=_1ce147ab2_buildVoidData();
	} else {
		(*((*(_201953_d))))._field_Kind=(*_202013_f.alloc)._field_Result;
		(*((*(_201953_d))))._field_Lvalue=false;
	};
	jule::Ptr<_1cdeebb97_FnCallExprModel> _213613_model = jule::new_ptr<_1cdeebb97_FnCallExprModel>(_1cdeebb97_FnCallExprModel{._field_Token=(*((*(_201931_fc))))._field_Token, ._field_Func=_202013_f, ._field_IsCo=(*((*(_201931_fc))))._field_IsCo, ._field_Expr=_212713_callModel, ._field_Args=_208013_fcac._field_argModels, });;
	(*((*(_201953_d))))._field_Model=jule::Any(_213613_model, &__jule_any_type34);
	(*((*(_201953_d))))._field_Mutable=true;
	if ((*(*_202013_f.alloc)._field_Decl.alloc)._field_Exceptional) {
		if ((*((*(_201931_fc))))._field_IsCo) {
			_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*((*(_201931_fc))))._field_Token, jule::Str::lit("concurrent calls not supports exceptionals", 42), jule::Slice<jule::Any>());
			_1ce094239_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("handle exceptional in a separate function or anonymous function", 63), jule::Slice<jule::Any>());
		};
		{
			
			if (_1cdec9e72_Unhandled((*(_201931_fc)).ptr())) {
				_case_begin_1b878dd01:;
				{
					_1ce11de84_pushErr(_self_, (*((*(_201931_fc))))._field_Token, jule::Str::lit("exceptionals must be handled", 28), jule::Slice<jule::Any>());
					_1ce11e2e7_pushSuggestion(_self_, jule::Str::lit("use \"!\" operator after exceptional to handle it", 47), jule::Slice<jule::Any>());
				}
			}
			else if (_1cdeca208_Ignored((*(_201931_fc)).ptr())) {
				_case_begin_1b878da04:;
				{
					goto _match_end_1b878c7a0;
				}
			}
			else {
				_case_begin_1b878c805:;
				{
					_1ce1330db_processExceptionalHandler(_self_, &(_202013_f), _201931_fc, _201953_d);
				}
			}
			_match_end_1b878c7a0:;
		};
	} else if ((!(_1cdec9e72_Unhandled((*(_201931_fc)).ptr())))) {
		_1ce11de84_pushErr(_self_, (*((*(_201931_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	if ((*((*(_201931_fc))))._field_IsCo) {
		_1ce132bbd_checkFnOfConcurrentCall(_self_, &((*(_213613_model))._field_Func), (*((*(_201931_fc))))._field_Token);
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce133790_evalFnCall(jule::Ptr<_1ce11d934_Eval> _self_, jule::Ptr<_1cdec9aed_FnCallExpr> _217134_fc) {
	jule::Ptr<_1ce14cbc7_TypeKind> _217213_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_217213_prefix;
	});;
	{
		auto &_match_expr{ (*((*(_217134_fc))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1b8793399:;
			{
				if ((*((*((*(_217134_fc))._field_Expr))._field_Token))._field_Kind.equal("error", 5)) {
					return _1ce239a50_builtinCallerError(&(_self_), &(_217134_fc));;
				};
			}
		}
		_match_end_1b8793333:;
	};
	jule::Ptr<_1ce11bc0c_Data> _218513_d = _1ce13ad80_evalExprKind(_self_, (*(*_217134_fc.alloc)._field_Expr.alloc)._field_Kind);;
	if ((_218513_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_218513_d))._field_Decl) {
		_1ce1324e7_callTypeFn(_self_, &(_217134_fc), &(_218513_d));
		return _218513_d;;
	};
	if ((_1ce151615_Fn((*(_218513_d))._field_Kind.ptr()) == nullptr)) {
		_1ce11de84_pushErr(_self_, (*_217134_fc.alloc)._field_Token, jule::Str::lit("attempting to call a non-function", 33), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1ce13344e_callFn(_self_, &(_217134_fc), &(_218513_d));
	return _218513_d;;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce133b8b_evalEnumStatic(_1ce11d934_Eval* _self_, jule::Ptr<_1ce01d416_Enum> _220437_enm, jule::Ptr<_1cdeab4b4_Token> _220453_ident) {
	jule::Ptr<_1ce01c899_EnumItem> _220513_item = _1ce01e00a_FindItem(_220437_enm.ptr(), (*(_220453_ident))._field_Kind);;
	if ((_220513_item == nullptr)) {
		_1ce11de84_pushErr(_self_, _220453_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*_220437_enm.alloc)._field_Ident, &__jule_any_type4),jule::Any((*_220453_ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _1ce149542_evalEnumStatic(&(_220437_enm), &(_220513_item), &(_220453_ident));;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce134087_evalTypeEnumStatic(_1ce11d934_Eval* _self_, jule::Ptr<_1ce01eb21_TypeEnum> _221241_enm, jule::Ptr<_1cdeab4b4_Token> _221257_ident) {
	jule::Ptr<_1ce01e549_TypeEnumItem> _221313_item = _1ce0206d2_FindItem(_221241_enm.ptr(), (*(_221257_ident))._field_Kind);;
	if ((_221313_item == nullptr)) {
		_1ce11de84_pushErr(_self_, _221257_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*_221241_enm.alloc)._field_Ident, &__jule_any_type4),jule::Any((*_221257_ident.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if ((_1ce150acb_Enum((*((*(_221313_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8537429:;
			{
				return _1ce122581__evalEnum(_self_, _1ce150acb_Enum((*(*(_221313_item))._field_Kind.alloc)._field_Kind));;
			}
		}
		else if ((_1ce150d62_TypeEnum((*((*(_221313_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b85375b1:;
			{
				return _1ce122cbd__evalTypeEnum(_self_, _1ce150d62_TypeEnum((*(*(_221313_item))._field_Kind.alloc)._field_Kind));;
			}
		}
		else if ((_1ce15189b_Struct((*((*(_221313_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b85358cd:;
			{
				return _1ce12350a__evalStruct(_self_, _1ce15189b_Struct((*(*(_221313_item))._field_Kind.alloc)._field_Kind));;
			}
		}
		else {
			_case_begin_1b8535867:;
			{
				jule::Ptr<_1ce11bc0c_Data> _222617_d = jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=(*((*(_221313_item))._field_Kind))._field_Kind, ._field_Decl=true, });;
				(*(_222617_d))._field_Model=jule::Any((*_222617_d.alloc)._field_Kind, &__jule_any_type84);
				return _222617_d;;
			}
		}
		_match_end_1b85365c1:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce134483_evalStructStatic(_1ce11d934_Eval* _self_, jule::Ptr<_1cdee571d_StructIns> _223539_s, jule::Ptr<_1cdeab4b4_Token> _223554_ident) {
	jule::Ptr<_1ce11bc0c_Data> _223613_d = jule::new_ptr<_1ce11bc0c_Data>();;
	;
	jule::Ptr<_1ce00792d_Fn> _224013_method = _1cdee6785_FindMethod(_223539_s.ptr(), (*(_223554_ident))._field_Kind, true);;
	if ((_224013_method != nullptr)) {
		if ((!(_1ce094635_isAccessibleDefine((*(_self_))._field_s.ptr(), (*_224013_method.alloc)._field_Public, (*_224013_method.alloc)._field_Token)))) {
			_1ce11de84_pushErr(_self_, _223554_ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_223554_ident.alloc)._field_Kind, &__jule_any_type4)}));
			_1ce11e2e7_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1ce00a832_FnIns> _224717_ins = _1ce00918d_instance(_224013_method);;
		(*(_224717_ins))._field_Owner=_223539_s;
		_1e6b5dca8_pushReference(_self_, &(_224717_ins));
		(*_223613_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1cdeeeace_StructStaticIdentExprModel>(_1cdeeeace_StructStaticIdentExprModel{._field_Structure=_223539_s, ._field_Expr=(*_223613_d.alloc)._field_Model, ._field_Method=_224717_ins}), &__jule_any_type96);
		(*_223613_d.alloc)._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(_224717_ins, 1)});
		return _223613_d;;
	};
	jule::Ptr<_1ce0b4105_Var> _226113_sttc = _1cdee6e17_FindStatic(_223539_s, (*_223554_ident.alloc)._field_Kind);;
	if ((_226113_sttc != nullptr)) {
		return _1ce1255b7_evalVar(_self_, _226113_sttc, _223554_ident);;
	};
	_1ce11de84_pushErr(_self_, _223554_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*_223539_s.alloc)._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*_223554_ident.alloc)._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce134939_evalTraitSubIdent(_1ce11d934_Eval* _self_, jule::Ptr<_1ce11bc0c_Data> _227040_d, jule::Ptr<_1ce01ac0a_Trait> _227054_trt, jule::Ptr<_1cdeab4b4_Token> _227071_ident) {
	jule::Ptr<_1ce00792d_Fn> _227113_f = _1ce01b8a9_FindMethod(_227054_trt.ptr(), (*(_227071_ident))._field_Kind);;
	if ((_227113_f == nullptr)) {
		_1ce11de84_pushErr(_self_, _227071_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*_227054_trt.alloc)._field_Ident, &__jule_any_type4),jule::Any((*_227071_ident.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(_1ce00918d_instance(_227113_f), 1)}), ._field_Model=jule::Any(jule::new_ptr<_1cdeedd97_TraitSubIdentExprModel>(_1cdeedd97_TraitSubIdentExprModel{._field_Token=_227071_ident, ._field_Expr=(*(_227040_d))._field_Model, ._field_Method=_227113_f, ._field_Trt=_227054_trt}), &__jule_any_type97), });;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce134e9a_evalStructSubIdentField(_1ce11d934_Eval* _self_, jule::Ptr<_1ce11bc0c_Data>* _229047_d, jule::Ptr<_1cdee571d_StructIns>* _229062_s, jule::Ptr<_1cdeab4b4_Token>* _229082_tok, jule::Ptr<_1cdee4b6d_FieldIns>* _2290100_f) {
	jule::Ptr<_1cdeee738_StructSubIdentExprModel> _229113_model = jule::new_ptr<_1cdeee738_StructSubIdentExprModel>(_1cdeee738_StructSubIdentExprModel{._field_Token=(*(_229082_tok)), ._field_Expr=jule::new_ptr<_1ce11bc0c_Data>((*((*(_229047_d))))), ._field_Field=(*(_2290100_f)), ._field_Owner=(*(_229062_s))});;
	(*((*(_229047_d))))._field_Model=jule::Any(_229113_model, &__jule_any_type98);
	(*((*(_229047_d))))._field_Kind=(*((*(_2290100_f))))._field_Kind;
	(*((*(_229047_d))))._field_Lvalue=true;
	if (((*((*((*(_2290100_f))))._field_Decl))._field_Mutable && (!((*((*(_229047_d))))._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1b87a4e49:;
				{
					jule::Ptr<_1ce051acb_scopeChecker> _230517_scope = _1ce054bbc_getRoot((*(_self_))._field_lookup.cast_ptr<_1ce051acb_scopeChecker>(0));;
					(*((*(_229047_d))))._field_Mutable=(((*(_230517_scope))._field_owner != nullptr) && ((*(*_230517_scope.alloc)._field_owner.alloc)._field_Owner == (*(_229062_s))));
				}
			}
			_match_end_1b87a4de4:;
		};
	};
	return (*(_229047_d));;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce13550b_evalStructSubIdent(_1ce11d934_Eval* _self_, jule::Ptr<_1ce11bc0c_Data> _231341_d, jule::Ptr<_1cdee571d_StructIns> _231355_s, jule::Ptr<_1cdec8ed7_SubIdentExpr> _231374_si, jule::Bool _231393_ref) {
	jule::Ptr<_1cdee4b6d_FieldIns> _231413_f = _1cdee6ac6_FindField(_231355_s.ptr(), (*((*(_231374_si))._field_Ident))._field_Kind);;
	if ((_231413_f != nullptr)) {
		if ((!(_1ce094635_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*_231413_f.alloc)._field_Decl))._field_Public, (*(*_231413_f.alloc)._field_Decl.alloc)._field_Token)))) {
			_1ce11de84_pushErr(_self_, (*_231374_si.alloc)._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(*_231413_f.alloc)._field_Decl.alloc)._field_Ident, &__jule_any_type4)}));
			_1ce11e2e7_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		return _1ce134e9a_evalStructSubIdentField(_self_, &(_231341_d), &(_231355_s), &((*_231374_si.alloc)._field_Ident), &(_231413_f));;
	};
	;
	jule::Ptr<_1ce00792d_Fn> _232413_m = _1cdee6785_FindMethod(_231355_s, (*(*_231374_si.alloc)._field_Ident.alloc)._field_Kind, false);;
	if ((_232413_m == nullptr)) {
		_1ce11de84_pushErr(_self_, (*_231374_si.alloc)._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*_231355_s.alloc)._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*(*_231374_si.alloc)._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((!(_1ce094635_isAccessibleDefine((*(_self_))._field_s, (*(_232413_m))._field_Public, (*(_232413_m))._field_Token)))) {
		_1ce11de84_pushErr(_self_, (*_231374_si.alloc)._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_232413_m))._field_Ident, &__jule_any_type4)}));
		_1ce11e2e7_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	if ((_1ce00680b_IsRef((*(_232413_m))._field_Params[0LL].ptr()) && (!(_231393_ref)))) {
		_1ce11de84_pushErr(_self_, (*_231374_si.alloc)._field_Ident, jule::Str::lit("reference method cannot use with non-reference instance", 55), jule::Slice<jule::Any>());
	};
	_1ce1240aa_checkDeprecated(_self_, &((*(_232413_m))._field_Directives), (*_231374_si.alloc)._field_Ident);
	jule::Ptr<_1ce00a832_FnIns> _234013_ins = _1ce00918d_instance(_232413_m);;
	(*(_234013_ins))._field_Owner=_231355_s;
	_1e6b5dca8_pushReference(_self_, &(_234013_ins));
	jule::Ptr<_1ce11bc0c_Data> _234313_model = jule::new_ptr<_1ce11bc0c_Data>((*(_231341_d)));;
	(*_231341_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1cdeee738_StructSubIdentExprModel>(_1cdeee738_StructSubIdentExprModel{._field_Token=(*_231374_si.alloc)._field_Ident, ._field_Expr=_234313_model, ._field_Method=_234013_ins, ._field_Owner=_231355_s}), &__jule_any_type98);
	(*_231341_d.alloc)._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(_234013_ins, 1)});
	return _231341_d;;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce13584c_evalIntTypeStatic(_1ce11d934_Eval* _self_, jule::Ptr<_1cdeab4b4_Token> _235436_ident) {
	;
	{
		auto &_match_expr{ (*(_235436_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b87b40bd:;
			{
				jule::Ptr<_22be1616d_Const> _235817_c = static__22be165ad_NewI64(_22be11564_MaxI(jule::Str::lit("int", 3)));;
				(*(_235817_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_untyped=true, ._field_Kind=_1ce2360bd_primInt, ._field_Model=jule::Any(_235817_c, &__jule_any_type19), ._field_Constant=_235817_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1b87b4ad5:;
			{
				jule::Ptr<_22be1616d_Const> _236717_c = static__22be165ad_NewI64(static_cast<jule::I64>(_22be11b6e_Min(jule::Str::lit("int", 3))));;
				(*(_236717_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_untyped=true, ._field_Kind=_1ce2360bd_primInt, ._field_Model=jule::Any(_236717_c, &__jule_any_type19), ._field_Constant=_236717_c});;
			}
		}
		else {
			_case_begin_1b87b381a:;
			{
				_1ce11de84_pushErr(_self_, _235436_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("int", 3), &__jule_any_type4),jule::Any((*(_235436_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b87b3c38:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce135b8d_evalUintTypeStatic(_1ce11d934_Eval* _self_, jule::Ptr<_1cdeab4b4_Token> _238137_ident) {
	;
	{
		auto &_match_expr{ (*(_238137_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b87b7da2:;
			{
				jule::Ptr<_22be1616d_Const> _238517_c = static__22be16877_NewU64(_22be1182d_MaxU(jule::Str::lit("uint", 4)));;
				(*(_238517_c))._field_Kind=jule::Str::lit("uint", 4);
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_untyped=true, ._field_Kind=_1ce235c05_primUint, ._field_Model=jule::Any(_238517_c, &__jule_any_type19), ._field_Constant=_238517_c});;
			}
		}
		else {
			_case_begin_1b87b77db:;
			{
				_1ce11de84_pushErr(_self_, _238137_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("uint", 4), &__jule_any_type4),jule::Any((*(_238137_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b87b7a1c:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce135ece_evalI8TypeStatic(_1ce11d934_Eval* _self_, jule::Ptr<_1cdeab4b4_Token> _239935_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_239935_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b87bb0b4:;
			{
				jule::Ptr<_22be1616d_Const> _240517_c = static__22be165ad_NewI64(127LL);;
				(*(_240517_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_untyped=true, ._field_Kind=_1ce236310_primI8, ._field_Model=jule::Any(_240517_c, &__jule_any_type19), ._field_Constant=_240517_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1b87bbacb:;
			{
				jule::Ptr<_22be1616d_Const> _241417_c = static__22be165ad_NewI64(-128LL);;
				(*(_241417_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_untyped=true, ._field_Kind=_1ce236310_primI8, ._field_Model=jule::Any(_241417_c, &__jule_any_type19), ._field_Constant=_241417_c});;
			}
		}
		else {
			_case_begin_1b87ba943:;
			{
				_1ce11de84_pushErr(_self_, _239935_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i8", 2), &__jule_any_type4),jule::Any((*(_239935_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b87bac2e:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce136320_evalI16TypeStatic(_1ce11d934_Eval* _self_, jule::Ptr<_1cdeab4b4_Token> _242836_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_242836_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b87c0382:;
			{
				jule::Ptr<_22be1616d_Const> _243417_c = static__22be165ad_NewI64(32767LL);;
				(*(_243417_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_untyped=true, ._field_Kind=_1ce2365a7_primI16, ._field_Model=jule::Any(_243417_c, &__jule_any_type19), ._field_Constant=_243417_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1b87c0d99:;
			{
				jule::Ptr<_22be1616d_Const> _244317_c = static__22be165ad_NewI64(-32768LL);;
				(*(_244317_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_untyped=true, ._field_Kind=_1ce2365a7_primI16, ._field_Model=jule::Any(_244317_c, &__jule_any_type19), ._field_Constant=_244317_c});;
			}
		}
		else {
			_case_begin_1b87be705:;
			{
				_1ce11de84_pushErr(_self_, _242836_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i16", 3), &__jule_any_type4),jule::Any((*(_242836_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b87c000d:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce136661_evalI32TypeStatic(_1ce11d934_Eval* _self_, jule::Ptr<_1cdeab4b4_Token> _245736_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_245736_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b87c4650:;
			{
				jule::Ptr<_22be1616d_Const> _246317_c = static__22be165ad_NewI64(2147483647LL);;
				(*(_246317_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_untyped=true, ._field_Kind=_1ce236860_primI32, ._field_Model=jule::Any(_246317_c, &__jule_any_type19), ._field_Constant=_246317_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1b87c5167:;
			{
				jule::Ptr<_22be1616d_Const> _247217_c = static__22be165ad_NewI64(-2147483648LL);;
				(*(_247217_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_untyped=true, ._field_Kind=_1ce236860_primI32, ._field_Model=jule::Any(_247217_c, &__jule_any_type19), ._field_Constant=_247217_c});;
			}
		}
		else {
			_case_begin_1b87c39c3:;
			{
				_1ce11de84_pushErr(_self_, _245736_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i32", 3), &__jule_any_type4),jule::Any((*(_245736_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b87c42cb:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce1369a2_evalI64TypeStatic(_1ce11d934_Eval* _self_, jule::Ptr<_1cdeab4b4_Token> _248636_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_248636_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b87c891d:;
			{
				jule::Ptr<_22be1616d_Const> _249217_c = static__22be165ad_NewI64(jule::MAX_I64);;
				(*(_249217_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_untyped=true, ._field_Kind=_1ce236b18_primI64, ._field_Model=jule::Any(_249217_c, &__jule_any_type19), ._field_Constant=_249217_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1b87c9435:;
			{
				jule::Ptr<_22be1616d_Const> _250117_c = static__22be165ad_NewI64(jule::MIN_I64);;
				(*(_250117_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_untyped=true, ._field_Kind=_1ce236b18_primI64, ._field_Model=jule::Any(_250117_c, &__jule_any_type19), ._field_Constant=_250117_c});;
			}
		}
		else {
			_case_begin_1b87c7c91:;
			{
				_1ce11de84_pushErr(_self_, _248636_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i64", 3), &__jule_any_type4),jule::Any((*(_248636_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b87c8599:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce136ce3_evalU8TypeStatic(_1ce11d934_Eval* _self_, jule::Ptr<_1cdeab4b4_Token> _251535_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_251535_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b87cc823:;
			{
				jule::Ptr<_22be1616d_Const> _252017_c = static__22be16877_NewU64(255LLU);;
				(*(_252017_c))._field_Kind=jule::Str::lit("u8", 2);
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_untyped=true, ._field_Kind=_1ce236dc1_primU8, ._field_Model=jule::Any(_252017_c, &__jule_any_type19), ._field_Constant=_252017_c});;
			}
		}
		else {
			_case_begin_1b87cc05e:;
			{
				_1ce11de84_pushErr(_self_, _251535_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u8", 2), &__jule_any_type4),jule::Any((*(_251535_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b87cc438:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce137134_evalU16TypeStatic(_1ce11d934_Eval* _self_, jule::Ptr<_1cdeab4b4_Token> _253436_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_253436_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b87d05a1:;
			{
				jule::Ptr<_22be1616d_Const> _253917_c = static__22be16877_NewU64(65535LLU);;
				(*(_253917_c))._field_Kind=jule::Str::lit("u16", 3);
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_untyped=true, ._field_Kind=_1ce237179_primU16, ._field_Model=jule::Any(_253917_c, &__jule_any_type19), ._field_Constant=_253917_c});;
			}
		}
		else {
			_case_begin_1b87cecba:;
			{
				_1ce11de84_pushErr(_self_, _253436_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u16", 3), &__jule_any_type4),jule::Any((*(_253436_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b87d01b6:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce137475_evalU32TypeStatic(_1ce11d934_Eval* _self_, jule::Ptr<_1cdeab4b4_Token> _255336_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_255336_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b87d332e:;
			{
				jule::Ptr<_22be1616d_Const> _255817_c = static__22be16877_NewU64(4294967295LLU);;
				(*(_255817_c))._field_Kind=jule::Str::lit("u32", 3);
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_untyped=true, ._field_Kind=_1ce237432_primU32, ._field_Model=jule::Any(_255817_c, &__jule_any_type19), ._field_Constant=_255817_c});;
			}
		}
		else {
			_case_begin_1b87d2a48:;
			{
				_1ce11de84_pushErr(_self_, _255336_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u32", 3), &__jule_any_type4),jule::Any((*(_255336_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b87d2e44:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce1377b6_evalU64TypeStatic(_1ce11d934_Eval* _self_, jule::Ptr<_1cdeab4b4_Token> _257236_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_257236_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b87d60ac:;
			{
				jule::Ptr<_22be1616d_Const> _257717_c = static__22be16877_NewU64(jule::MAX_U64);;
				(*(_257717_c))._field_Kind=jule::Str::lit("u64", 3);
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_untyped=true, ._field_Kind=_1ce23791b_primU64, ._field_Model=jule::Any(_257717_c, &__jule_any_type19), ._field_Constant=_257717_c});;
			}
		}
		else {
			_case_begin_1b87d57c6:;
			{
				_1ce11de84_pushErr(_self_, _257236_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u64", 3), &__jule_any_type4),jule::Any((*(_257236_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b87d5bc2:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce137b07_evalF32TypeStatic(_1ce11d934_Eval* _self_, jule::Ptr<_1cdeab4b4_Token> _259136_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_259136_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b87d9544:;
			{
				jule::Ptr<_22be1616d_Const> _259817_c = static__22be171c4_NewF64(340282346638528860000000000000000000000.0);;
				(*(_259817_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_untyped=true, ._field_Kind=_1ce237b5d_primF32, ._field_Model=jule::Any(_259817_c, &__jule_any_type19), ._field_Constant=_259817_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1b87da05b:;
			{
				jule::Ptr<_22be1616d_Const> _260717_c = static__22be171c4_NewF64(-340282346638528860000000000000000000000.0);;
				(*(_260717_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_untyped=true, ._field_Kind=_1ce237b5d_primF32, ._field_Model=jule::Any(_260717_c, &__jule_any_type19), ._field_Constant=_260717_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1b87da0c2:;
			{
				jule::Ptr<_22be1616d_Const> _261617_c = static__22be171c4_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				(*(_261617_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_untyped=true, ._field_Kind=_1ce237b5d_primF32, ._field_Model=jule::Any(_261617_c, &__jule_any_type19), ._field_Constant=_261617_c});;
			}
		}
		else {
			_case_begin_1b87d88ea:;
			{
				_1ce11de84_pushErr(_self_, _259136_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("f32", 3), &__jule_any_type4),jule::Any((*(_259136_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b87d91ae:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce137e48_evalF64TypeStatic(_1ce11d934_Eval* _self_, jule::Ptr<_1cdeab4b4_Token> _263036_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_263036_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b87decdb:;
			{
				jule::Ptr<_22be1616d_Const> _263717_c = static__22be171c4_NewF64(jule::MAX_F64);;
				(*(_263717_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_untyped=true, ._field_Kind=_1ce237d6c_primF64, ._field_Model=jule::Any(_263717_c, &__jule_any_type19), ._field_Constant=_263717_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1b87e0803:;
			{
				jule::Ptr<_22be1616d_Const> _264617_c = static__22be171c4_NewF64(jule::MIN_F64);;
				(*(_264617_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_untyped=true, ._field_Kind=_1ce237d6c_primF64, ._field_Model=jule::Any(_264617_c, &__jule_any_type19), ._field_Constant=_264617_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1b87e0869:;
			{
				jule::Ptr<_22be1616d_Const> _265517_c = static__22be171c4_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				(*(_265517_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_untyped=true, ._field_Kind=_1ce237d6c_primF64, ._field_Model=jule::Any(_265517_c, &__jule_any_type19), ._field_Constant=_265517_c});;
			}
		}
		else {
			_case_begin_1b87de192:;
			{
				_1ce11de84_pushErr(_self_, _263036_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("f64", 3), &__jule_any_type4),jule::Any((*(_263036_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b87de956:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce138344_evalPrimStatic(_1ce11d934_Eval* _self_, jule::Str _266933_kind, jule::Ptr<_1cdeab4b4_Token> _266944_ident) {
	{
		auto &_match_expr{ _266933_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1b87e44c7:;
			{
				return _1ce13584c_evalIntTypeStatic(_self_, _266944_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1b87e41ca:;
			{
				return _1ce135b8d_evalUintTypeStatic(_self_, _266944_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1b87e4241:;
			{
				return _1ce135ece_evalI8TypeStatic(_self_, _266944_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1b87e42a7:;
			{
				return _1ce136320_evalI16TypeStatic(_self_, _266944_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1b87e431d:;
			{
				return _1ce136661_evalI32TypeStatic(_self_, _266944_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1b87e4384:;
			{
				return _1ce1369a2_evalI64TypeStatic(_self_, _266944_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1b87e43ea:;
			{
				return _1ce136ce3_evalU8TypeStatic(_self_, _266944_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1b87e50dd:;
			{
				return _1ce137134_evalU16TypeStatic(_self_, _266944_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1b87e5154:;
			{
				return _1ce137475_evalU32TypeStatic(_self_, _266944_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1b87e51ba:;
			{
				return _1ce1377b6_evalU64TypeStatic(_self_, _266944_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1b87e5231:;
			{
				return _1ce137b07_evalF32TypeStatic(_self_, _266944_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1b87e5297:;
			{
				return _1ce137e48_evalF64TypeStatic(_self_, _266944_ident);;
			}
		}
		else {
			_case_begin_1b87e0a45:;
			{
				_1ce11de84_pushErr(_self_, _266944_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_266933_kind, &__jule_any_type4),jule::Any((*(_266944_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b87e2e98:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce138740_evalTypeStatic(_1ce11d934_Eval* _self_, jule::Ptr<_1ce11bc0c_Data> _270137_d, jule::Ptr<_1cdec8ed7_SubIdentExpr> _270151_si) {
	{
		
		if ((_1ce150328_Prim((*(_270137_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b87e97a7:;
			{
				return _1ce138344_evalPrimStatic(_self_, _1ce155ae2_Str(_1ce150328_Prim((*_270137_d.alloc)._field_Kind).ptr()), (*(_270151_si))._field_Ident);;
			}
		}
		else if ((_1ce150acb_Enum((*(_270137_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b87ea5bb:;
			{
				return _1ce133b8b_evalEnumStatic(_self_, _1ce150acb_Enum((*_270137_d.alloc)._field_Kind), (*(_270151_si))._field_Ident);;
			}
		}
		else if ((_1ce150d62_TypeEnum((*(_270137_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b87ea632:;
			{
				return _1ce134087_evalTypeEnumStatic(_self_, _1ce150d62_TypeEnum((*_270137_d.alloc)._field_Kind), (*(_270151_si))._field_Ident);;
			}
		}
		else if ((_1ce15189b_Struct((*(_270137_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b87ea698:;
			{
				return _1ce134483_evalStructStatic(_self_, _1ce15189b_Struct((*_270137_d.alloc)._field_Kind), (*(_270151_si))._field_Ident);;
			}
		}
		else {
			_case_begin_1b87e9400:;
			{
				_1ce11de84_pushErr(_self_, (*(_270151_si))._field_Ident, jule::Str::lit("type @ is not supports sub-defines", 34), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*(_270137_d))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b87e9334:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1b8802518_comptimeObjSubIdent(_1ce11d934_Eval* _self_, jule::Ptr<_1ce0325a1_comptimeTypeInfo>* _271757_ct, jule::Ptr<_1ce11bc0c_Data>* _271777_d, jule::Ptr<_1cdec8ed7_SubIdentExpr>* _271788_si) {
	jule::Ptr<_1ce11bc0c_Data> _271813_cd = _1ce0387a5_subIdent((*(_271757_ct)), &((*((*((*(_271788_si))))._field_Ident))._field_Kind));;
	if ((_271813_cd == nullptr)) {
		_1ce11de84_pushErr(_self_, (*((*(_271788_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*((*(_271777_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_271788_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _271813_cd;;
}

inline jule::Ptr<_1ce11bc0c_Data> _1b8806b7c_comptimeObjSubIdent(_1ce11d934_Eval* _self_, jule::Ptr<_1ce02374b_comptimeStructField>* _271757_ct, jule::Ptr<_1ce11bc0c_Data>* _271777_d, jule::Ptr<_1cdec8ed7_SubIdentExpr>* _271788_si) {
	jule::Ptr<_1ce11bc0c_Data> _271813_cd = _1ce0250ee_subIdent((*(_271757_ct)), &((*((*((*(_271788_si))))._field_Ident))._field_Kind));;
	if ((_271813_cd == nullptr)) {
		_1ce11de84_pushErr(_self_, (*((*(_271788_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*((*(_271777_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_271788_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _271813_cd;;
}

inline jule::Ptr<_1ce11bc0c_Data> _1b880b29c_comptimeObjSubIdent(_1ce11d934_Eval* _self_, jule::Ptr<_1ce029cb3_comptimeEnumField>* _271757_ct, jule::Ptr<_1ce11bc0c_Data>* _271777_d, jule::Ptr<_1cdec8ed7_SubIdentExpr>* _271788_si) {
	jule::Ptr<_1ce11bc0c_Data> _271813_cd = _1ce02ad4c_subIdent((*(_271757_ct)), &((*((*((*(_271788_si))))._field_Ident))._field_Kind));;
	if ((_271813_cd == nullptr)) {
		_1ce11de84_pushErr(_self_, (*((*(_271788_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*((*(_271777_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_271788_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _271813_cd;;
}

inline jule::Ptr<_1ce11bc0c_Data> _1b8810911_comptimeObjSubIdent(_1ce11d934_Eval* _self_, jule::Ptr<_1ce02c755_comptimeParam>* _271757_ct, jule::Ptr<_1ce11bc0c_Data>* _271777_d, jule::Ptr<_1cdec8ed7_SubIdentExpr>* _271788_si) {
	jule::Ptr<_1ce11bc0c_Data> _271813_cd = _1ce02e6ad_subIdent((*(_271757_ct)), &((*((*((*(_271788_si))))._field_Ident))._field_Kind));;
	if ((_271813_cd == nullptr)) {
		_1ce11de84_pushErr(_self_, (*((*(_271788_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*((*(_271777_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_271788_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _271813_cd;;
}

inline jule::Ptr<_1ce11bc0c_Data> _1b88152a6_comptimeObjSubIdent(_1ce11d934_Eval* _self_, jule::Ptr<_1ce026a07_comptimeStatic>* _271757_ct, jule::Ptr<_1ce11bc0c_Data>* _271777_d, jule::Ptr<_1cdec8ed7_SubIdentExpr>* _271788_si) {
	jule::Ptr<_1ce11bc0c_Data> _271813_cd = _1ce028432_subIdent((*(_271757_ct)), &((*((*((*(_271788_si))))._field_Ident))._field_Kind));;
	if ((_271813_cd == nullptr)) {
		_1ce11de84_pushErr(_self_, (*((*(_271788_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*((*(_271777_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_271788_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _271813_cd;;
}

inline jule::Ptr<_1ce11bc0c_Data> _1b88198c6_comptimeObjSubIdent(_1ce11d934_Eval* _self_, jule::Ptr<_1ce038ab3_comptimeValue>* _271757_ct, jule::Ptr<_1ce11bc0c_Data>* _271777_d, jule::Ptr<_1cdec8ed7_SubIdentExpr>* _271788_si) {
	jule::Ptr<_1ce11bc0c_Data> _271813_cd = _1ce03b104_subIdent((*(_271757_ct)), &((*((*((*(_271788_si))))._field_Ident))._field_Kind));;
	if ((_271813_cd == nullptr)) {
		_1ce11de84_pushErr(_self_, (*((*(_271788_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*((*(_271777_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_271788_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _271813_cd;;
}

inline jule::Ptr<_1ce11bc0c_Data> _1b881dee6_comptimeObjSubIdent(_1ce11d934_Eval* _self_, jule::Ptr<_1ce03ca0c_comptimeFile>* _271757_ct, jule::Ptr<_1ce11bc0c_Data>* _271777_d, jule::Ptr<_1cdec8ed7_SubIdentExpr>* _271788_si) {
	jule::Ptr<_1ce11bc0c_Data> _271813_cd = _1ce03e448_subIdent((*(_271757_ct)), &((*((*((*(_271788_si))))._field_Ident))._field_Kind));;
	if ((_271813_cd == nullptr)) {
		_1ce11de84_pushErr(_self_, (*((*(_271788_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*((*(_271777_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_271788_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _271813_cd;;
}



inline __jule_tuple_x_1ce11bc0c_Data__jule_tuple_bool _1ce1390e2_tryComptimeObjSubIdent(_1ce11d934_Eval* _self_, jule::Ptr<_1ce11bc0c_Data>* _272546_d, jule::Ptr<_1cdec8ed7_SubIdentExpr> _272560_si) {
	__jule_tuple_x_1ce11bc0c_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((_1ce153bde_comptimeTypeInfo((*((*(_272546_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8800901:;
			{
				jule::Ptr<_1ce0325a1_comptimeTypeInfo> _272817_ct = _1ce153bde_comptimeTypeInfo((*((*(_272546_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1b8802518_comptimeObjSubIdent(_self_, &(_272817_ct), _272546_d, &(_272560_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ce152902_comptimeStructField((*((*(_272546_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8800527:;
			{
				jule::Ptr<_1ce02374b_comptimeStructField> _273117_ct = _1ce152902_comptimeStructField((*((*(_272546_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1b8806b7c_comptimeObjSubIdent(_self_, &(_273117_ct), _272546_d, &(_272560_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ce152e1e_comptimeEnumField((*((*(_272546_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b880058d:;
			{
				jule::Ptr<_1ce029cb3_comptimeEnumField> _273417_ct = _1ce152e1e_comptimeEnumField((*((*(_272546_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1b880b29c_comptimeObjSubIdent(_self_, &(_273417_ct), _272546_d, &(_272560_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ce15343b_comptimeParam((*((*(_272546_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8800604:;
			{
				jule::Ptr<_1ce02c755_comptimeParam> _273717_ct = _1ce15343b_comptimeParam((*((*(_272546_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1b8810911_comptimeObjSubIdent(_self_, &(_273717_ct), _272546_d, &(_272560_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ce15420b_comptimeStatic((*((*(_272546_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b880067b:;
			{
				jule::Ptr<_1ce026a07_comptimeStatic> _274017_ct = _1ce15420b_comptimeStatic((*((*(_272546_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1b88152a6_comptimeObjSubIdent(_self_, &(_274017_ct), _272546_d, &(_272560_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ce154492_comptimeValue((*((*(_272546_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8800703:;
			{
				jule::Ptr<_1ce038ab3_comptimeValue> _274317_ct = _1ce154492_comptimeValue((*((*(_272546_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1b88198c6_comptimeObjSubIdent(_self_, &(_274317_ct), _272546_d, &(_272560_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ce154728_comptimeFile((*((*(_272546_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b880077a:;
			{
				jule::Ptr<_1ce03ca0c_comptimeFile> _274617_ct = _1ce154728_comptimeFile((*((*(_272546_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1b881dee6_comptimeObjSubIdent(_self_, &(_274617_ct), _272546_d, &(_272560_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b88004b1:;
			{
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		_match_end_1b8800417:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce1394dd_evalObjSubIdent(_1ce11d934_Eval* _self_, jule::Ptr<_1ce11bc0c_Data> _275338_d, jule::Ptr<_1cdec8ed7_SubIdentExpr> _275352_si) {
	if (_1cdeadd9b_IsIgnoreIdent((*((*(_275352_si))._field_Ident))._field_Kind)) {
		_1ce11de84_pushErr(_self_, (*_275352_si.alloc)._field_Ident, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		jule::Ptr<_1ce11bc0c_Data> _276017_compData;;
		jule::Bool _276027_ok;;
		({
			__jule_tuple_x_1ce11bc0c_Data__jule_tuple_bool __jule_assign_result = _1ce1390e2_tryComptimeObjSubIdent(_self_, &(_275338_d), _275352_si);
			_276017_compData = __jule_assign_result.__jule_result_arg0;
			_276027_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_276027_ok) {
			return _276017_compData;;
		};
	};
	jule::Ptr<_1ce14cbc7_TypeKind> _276613_kind = (*(_275338_d))._field_Kind;;
	{
		
		if ((_1ce150845_Ptr((*_275338_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b88244c4:;
			{
				jule::Ptr<_1ce15ca94_Ptr> _276913_ptr = _1ce150845_Ptr((*_275338_d.alloc)._field_Kind);;
				if (_1ce15d5cd_IsUnsafe(_276913_ptr.ptr())) {
					goto _match_end_1b8824419;
				};
				if ((!(_1ce11e979_isUnsafe(_self_)))) {
					_1ce11de84_pushErr(_self_, (*_275352_si.alloc)._field_Ident, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				_276613_kind=(*(_1ce150845_Ptr((*_275338_d.alloc)._field_Kind)))._field_Elem;
				_1ce149ae7_makeImplicitDeref(&(_275338_d), (*_275352_si.alloc)._field_Ident);
			}
		}
		else if ((_1ce1505ae_Sptr((*_275338_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b882456d:;
			{
				_276613_kind=(*(_1ce1505ae_Sptr((*_275338_d.alloc)._field_Kind)))._field_Elem;
				_1ce149ae7_makeImplicitDeref(&(_275338_d), (*_275352_si.alloc)._field_Ident);
			}
		}
		_match_end_1b8824419:;
	};
	{
		
		if ((_1ce151b32_Trait((*_275338_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8824639:;
			{
				return _1ce134939_evalTraitSubIdent(_self_, _275338_d, _1ce151b32_Trait((*_275338_d.alloc)._field_Kind), (*_275352_si.alloc)._field_Ident);;
			}
		}
		else if ((_1ce15189b_Struct(_276613_kind.ptr()) != nullptr)) {
			_case_begin_1b88277d5:;
			{
				jule::Ptr<_1cdee571d_StructIns> _278713_s = _1ce15189b_Struct(_276613_kind);;
				if (_1ce146d69_isInstancedStruct(_278713_s)) {
					jule::Bool _278921_usedReferenceElem = (_1ce1505ae_Sptr((*_275338_d.alloc)._field_Kind.ptr()) != nullptr);;
					return _1ce13550b_evalStructSubIdent(_self_, _275338_d, _1ce15189b_Struct(_276613_kind), _275352_si, _278921_usedReferenceElem);;
				};
			}
		}
		_match_end_1b8827bc0:;
	};
	_1ce11de84_pushErr(_self_, (*_275352_si.alloc)._field_Ident, jule::Str::lit("object @ is not supports sub-defines", 36), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*_275338_d.alloc)._field_Kind.ptr()), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce13982e_evalSubIdent(jule::Ptr<_1ce11d934_Eval> _self_, jule::Ptr<_1cdec8ed7_SubIdentExpr> _279736_si) {
	jule::Ptr<_1ce14cbc7_TypeKind> _279813_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_279813_prefix;
	});;
	jule::Ptr<_1ce11bc0c_Data> _280113_d = _1ce13ad80_evalExprKind(_self_, (*((*(_279736_si))._field_Expr))._field_Kind);;
	if ((_280113_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_280113_d))._field_Decl) {
		return _1ce138740_evalTypeStatic(_self_, _280113_d, _279736_si);;
	};
	return _1ce1394dd_evalObjSubIdent(_self_, _280113_d, _279736_si);;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce139b70_evalTuple(jule::Ptr<_1ce11d934_Eval> _self_, jule::Ptr<_1cdec69b8_TupleExpr> _281133_tup) {
	jule::Ptr<_1ce15a894_Tuple> _281213_tupT = jule::new_ptr<_1ce15a894_Tuple>();;
	(*_281213_tupT.alloc)._field_Types=jule::Slice<jule::Ptr<_1ce14cbc7_TypeKind>>::alloc(0LL, (*(_281133_tup))._field_Expr.len());
	jule::Ptr<_1ce0002a5_TupleExprModel> _281513_model = jule::new_ptr<_1ce0002a5_TupleExprModel>(_1ce0002a5_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_1ce11bc0c_Data>>::alloc(0LL, (*_281133_tup.alloc)._field_Expr.len())});;
	jule::Bool _281913_ok = true;;
	{
		auto expr = &((*_281133_tup.alloc)._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8832669:;
		if (it != expr_end) {
			jule::Ptr<_1cdec5dc4_Expr> _282021_expr = *it;
			{
				jule::Ptr<_1ce11bc0c_Data> _282117_d = _1ce13bb94_evalExpr(_self_, _282021_expr);;
				if ((_282117_d == nullptr)) {
					_281913_ok=false;
					goto _iter_next_1b8832669;
				};
				(*_281213_tupT.alloc)._field_Types=jule::append((*_281213_tupT.alloc)._field_Types,jule::Slice<jule::Ptr<_1ce14cbc7_TypeKind>>::make({(*(_282117_d))._field_Kind}));
				(*(_281513_model))._field_Datas=jule::append((*_281513_model.alloc)._field_Datas,jule::Slice<jule::Ptr<_1ce11bc0c_Data>>::make({_282117_d}));
			}
			_iter_next_1b8832669:;
			++it;
			goto _iter_begin_1b8832669;
		}
		_iter_end_1b8832669:;
	};
	if ((!(_281913_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(_281213_tupT, 23)}), ._field_Model=jule::Any(_281513_model, &__jule_any_type81), });;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce13a06b_evalMap(jule::Ptr<_1ce11d934_Eval> _self_, jule::Ptr<_1ce15b444_Map> _284031_m, jule::Ptr<_1cdecb3c4_BraceLit> _284044_lit) {
	jule::Ptr<_1cdeed281_MapExprModel> _284113_model = jule::new_ptr<_1cdeed281_MapExprModel>(_1cdeed281_MapExprModel{._field_KeyKind=(*(_284031_m))._field_Key, ._field_ValKind=(*_284031_m.alloc)._field_Val, });;
	{
		auto expr = &((*(_284044_lit))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b883642b:;
		if (it != expr_end) {
			jule::Ptr<_1cdec5dc4_Expr> _284621_expr = *it;
			{
				{
					auto &_match_expr{ (*(_284621_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_1b8836a14:;
						{
							goto _match_end_1b8836d11;
						}
					}
					else {
						_case_begin_1b8836d66:;
						{
							_1ce11de84_pushErr(_self_.ptr(), (*(_284044_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1b8836d11:;
				};
				jule::Ptr<_1cdecbbee_KeyValPair> _285617_pair = (*(_284621_expr))._field_Kind.cast_ptr<_1cdecbbee_KeyValPair>(&__jule_any_type78);;
				jule::Ptr<_1ce11bc0c_Data> _285817_key = _1ce13bb94_evalExpr(_self_, (*(_285617_pair))._field_Key);;
				if ((_285817_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1ce11bc0c_Data> _286317_val = _1ce13bb94_evalExpr(_self_, (*_285617_pair.alloc)._field_Val);;
				if ((_286317_val == nullptr)) {
					return nullptr;;
				};
				;
				if (_1ce0a0c6d_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_284031_m.alloc)._field_Key), &(_285817_key), &((*((*_285617_pair.alloc)._field_Key))._field_Token))) {
					_1ce09b8d4_checkAssignType((*_self_.alloc)._field_s, false, &((*_284031_m.alloc)._field_Key), &(_285817_key), (*(*_285617_pair.alloc)._field_Key.alloc)._field_Token);
				};
				if (_1ce0a0c6d_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_284031_m.alloc)._field_Val), &(_286317_val), &((*((*_285617_pair.alloc)._field_Val))._field_Token))) {
					_1ce09b8d4_checkAssignType((*_self_.alloc)._field_s, false, &((*_284031_m.alloc)._field_Val), &(_286317_val), (*(*_285617_pair.alloc)._field_Val.alloc)._field_Token);
				};
				(*(_284113_model))._field_Entries=jule::append((*_284113_model.alloc)._field_Entries,jule::Slice<jule::Ptr<_1cdeeccca_KeyValPairExprModel>>::make({jule::new_ptr<_1cdeeccca_KeyValPairExprModel>(_1cdeeccca_KeyValPairExprModel{._field_Key=(*(_285817_key))._field_Model, ._field_Val=(*(_286317_val))._field_Model})}));
			}
			_iter_next_1b883642b:;
			++it;
			goto _iter_begin_1b883642b;
		}
		_iter_end_1b883642b:;
	};
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(_284031_m, 24)}), ._field_Mutable=true, ._field_Model=jule::Any(_284113_model, &__jule_any_type99), });;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce13a3ac_evalBraceLit(jule::Ptr<_1ce11d934_Eval> _self_, jule::Ptr<_1cdecb3c4_BraceLit> _288936_lit) {
	{
		
		if (((*(_self_))._field_prefix == nullptr)) {
			_case_begin_1b88408ec:;
			{
				_1ce11de84_pushErr(_self_, (*(_288936_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1ce151db8_Map((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1b8841205:;
			{
				return _1ce13a06b_evalMap(_self_, _1ce151db8_Map((*_self_.alloc)._field_prefix), _288936_lit);;
			}
		}
		else if ((_1ce15189b_Struct((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1b884126b:;
			{
				return _1ce13176b_evalStructLitExplicit(_self_, _1ce15189b_Struct((*_self_.alloc)._field_prefix), (*(_288936_lit))._field_Exprs, (*_288936_lit.alloc)._field_Token);;
			}
		}
		else {
			_case_begin_1b8840545:;
			{
				_1ce11de84_pushErr(_self_.ptr(), (*(_288936_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b884026a:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce13a6ed_evalAnonFunc(jule::Ptr<_1ce11d934_Eval> _self_, jule::Ptr<_1cded3750_FnDecl> _290436_decl) {
	_1ce15ea85_typeChecker _290513_tc = _1ce15ea85_typeChecker{._field_s=(*(_self_))._field_s, ._field_rootLookup=(*_self_.alloc)._field_lookup, ._field_lookup=(*_self_.alloc)._field_lookup, };;
	jule::Ptr<_1ce00a832_FnIns> _291013_ins = _1ce16675c_buildFunc(&_290513_tc, _290436_decl);;
	if ((_291013_ins == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b8845a56:;
			{
				jule::Ptr<_1ce051acb_scopeChecker> _291617_sc = (*_self_.alloc)._field_lookup.cast_ptr<_1ce051acb_scopeChecker>(0);;
				jule::Ptr<_1ce051acb_scopeChecker> _291717_scc = _1ce06356b_newChildChecker(_291617_sc);;
				(*(_291717_scc))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1ce050635_scopeLabel>>>(nullptr);
				(*_291717_scc.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1ce050bb8_scopeGoto>>>(nullptr);
				(*_291717_scc.alloc)._field_owner=nullptr;
				(*_291717_scc.alloc)._field_childIndex=0LL;
				(*_291717_scc.alloc)._field_it=0LLU;
				(*_291717_scc.alloc)._field_cse=0LLU;
				(*_291717_scc.alloc)._field_owner=_291013_ins;
				_1ce0add47_checkFnInsSc((*_self_.alloc)._field_s.ptr(), &(_291013_ins), &(_291717_scc));
			}
		}
		else {
			_case_begin_1b8846150:;
			{
				_1ce0ae463_checkFnIns((*_self_.alloc)._field_s, &(_291013_ins));
			}
		}
		_match_end_1b8846040:;
	};
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(_291013_ins, 1)}), ._field_Model=jule::Any(jule::new_ptr<_1cdeec901_AnonFnExprModel>(_1cdeec901_AnonFnExprModel{._field_Func=_291013_ins, ._field_Global=_1ce11ec10_isGlobal(_self_)}), &__jule_any_type100), });;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce13aa3e_evalBinary(jule::Ptr<_1ce11d934_Eval> _self_, jule::Ptr<_1cdec948d_BinaryExpr> _293934_op) {
	_1ce13e0e7_binaryEval _294013_bs = static__1ce13e69c_newPlain(_self_);;
	if (((*(_self_))._field_prefix != nullptr)) {
		jule::Ptr<_1ce1557a1_Prim> _294313_prim = _1ce150328_Prim((*_self_.alloc)._field_prefix);;
		if (((_294313_prim == nullptr) || (!(_22be15ac9_IsNum(_1ce155ae2_Str(_294313_prim.ptr())))))) {
			jule::Ptr<_1ce14cbc7_TypeKind> _294521_prefix = (*_self_.alloc)._field_prefix;;
			(*_self_.alloc)._field_prefix=nullptr;
			__JULE_DEFER({
				(*_self_.alloc)._field_prefix=_294521_prefix;
			});;
			return _1ce145175_eval(&_294013_bs, &(_293934_op));;
		};
	};
	return _1ce145175_eval(&_294013_bs, &(_293934_op));;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce13ad80_evalExprKind(jule::Ptr<_1ce11d934_Eval> _self_, jule::Any _295436_kind) {
	{
		auto &_match_expr{ _295436_kind };
		
		if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1b884e411:;
			{
				jule::Ptr<_1cdec618d_RangeExpr> _295717_e = _295436_kind.unsafe_cast_ptr<_1cdec618d_RangeExpr>();;
				return _1ce13ad80_evalExprKind(_self_, (*((*(_295717_e))._field_Expr))._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1b884e653:;
			{
				return _1ce1214b4_evalLit(_self_.ptr(), _295436_kind.unsafe_cast_ptr<_1cdec6d5e_LitExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1b884e6b9:;
			{
				return _1ce126200_evalIdent(_self_.ptr(), _295436_kind.unsafe_cast_ptr<_1cdec76de_IdentExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1b884e730:;
			{
				return _1ce126541_evalUnary(_self_, _295436_kind.unsafe_cast_ptr<_1cdec7e81_UnaryExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1b884e796:;
			{
				return _1ce126882_evalVariadic(_self_, _295436_kind.unsafe_cast_ptr<_1cdec835a_VariadicExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1b884e80c:;
			{
				return _1ce126bc3_evalUnsafe(_self_, _295436_kind.unsafe_cast_ptr<_1cdec7238_UnsafeExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1b884e873:;
			{
				return _1ce12780b_evalSliceExpr(_self_, _295436_kind.unsafe_cast_ptr<_1cdecc42a_SliceExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1b884ec19:;
			{
				return _1ce12aea2_evalIndexing(_self_, _295436_kind.unsafe_cast_ptr<_1cdeccd87_IndexingExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1b884ec80:;
			{
				return _1ce12c2d3_evalSlicing(_self_, _295436_kind.unsafe_cast_ptr<_1cdecd4e7_SlicingExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1b884ece6:;
			{
				return _1ce130e74_evalCast(_self_, _295436_kind.unsafe_cast_ptr<_1cdec8734_CastExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1b884ed5c:;
			{
				return _1ce1312b5_evalNsSelection(_self_.ptr(), _295436_kind.unsafe_cast_ptr<_1cdec8b0d_NsSelectionExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1b884edd4:;
			{
				return _1ce131aac_evalStructLit(_self_, _295436_kind.unsafe_cast_ptr<_1cdecae1d_StructLit>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1b884ee5b:;
			{
				return _1ce132184_evalType(_self_.ptr(), _295436_kind.unsafe_cast_ptr<_1cdec1a90_TypeDecl>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1b884eed3:;
			{
				return _1ce133790_evalFnCall(_self_, _295436_kind.unsafe_cast_ptr<_1cdec9aed_FnCallExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1b885005a:;
			{
				return _1ce13982e_evalSubIdent(_self_, _295436_kind.unsafe_cast_ptr<_1cdec8ed7_SubIdentExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1b88500d2:;
			{
				return _1ce139b70_evalTuple(_self_, _295436_kind.unsafe_cast_ptr<_1cdec69b8_TupleExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1b8850159:;
			{
				return _1ce13a3ac_evalBraceLit(_self_, _295436_kind.unsafe_cast_ptr<_1cdecb3c4_BraceLit>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b88501d1:;
			{
				return _1ce13a6ed_evalAnonFunc(_self_, _295436_kind.unsafe_cast_ptr<_1cded3750_FnDecl>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1b8850258:;
			{
				return _1ce13aa3e_evalBinary(_self_, _295436_kind.unsafe_cast_ptr<_1cdec948d_BinaryExpr>());;
			}
		}
		else {
			_case_begin_1b884e5dc:;
			{
				return nullptr;;
			}
		}
		_match_end_1b884e587:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce13b1c1_eval1(jule::Ptr<_1ce11d934_Eval> _self_, jule::Ptr<_1cdec5dc4_Expr> _300229_expr) {
	jule::Ptr<_1ce11bc0c_Data> _300313_d = _1ce13ad80_evalExprKind(_self_, (*(_300229_expr))._field_Kind);;
	if (((_300313_d == nullptr) || ((*(_300313_d))._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1ce151615_Fn((*(_300313_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b885b96d:;
			{
				jule::Ptr<_1ce00a832_FnIns> _301017_f = _1ce151615_Fn((*(_300313_d))._field_Kind.ptr());;
				if (_1ce00bcb7_IsBuiltin(_301017_f.ptr())) {
					_1ce093dc6_pushErr((*_self_.alloc)._field_s.ptr(), (*_300229_expr.alloc)._field_Token, jule::Str::lit("built-in functions should be invoked", 36), jule::Slice<jule::Any>());
					goto _match_end_1b885b0cc;
				};
				if (((*_301017_f.alloc)._field_Generics.len() != (*((*_301017_f.alloc)._field_Decl))._field_Generics.len())) {
					_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*_300229_expr.alloc)._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				};
				if (((!((*(*_301017_f.alloc)._field_Decl.alloc)._field_Statically)) && _1ce008137_IsMethod((*_301017_f.alloc)._field_Decl))) {
					_1ce093dc6_pushErr((*_self_.alloc)._field_s, (*_300229_expr.alloc)._field_Token, jule::Str::lit("methods should be invoked", 25), jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1b885b0cc:;
	};
	return _300313_d;;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce13b512_eval(jule::Ptr<_1ce11d934_Eval> _self_, jule::Ptr<_1cdec5dc4_Expr> _302928_expr) {
	jule::Ptr<_1ce11bc0c_Data> _303013_d = _1ce13b1c1_eval1(_self_, _302928_expr);;
	if ((_303013_d == nullptr)) {
		return nullptr;;
	};
	if (((((*_self_.alloc)._field_owner == nullptr) || (!((*((*_self_.alloc)._field_owner))._field_Constant))) && _1ce1523d5_comptime((*(_303013_d))._field_Kind.ptr()))) {
		_1ce093dc6_pushErr((*_self_.alloc)._field_s.ptr(), (*(_302928_expr))._field_Token, jule::Str::lit("compile-time evaluations cannot used as expression", 50), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _303013_d;;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce13b853_evalExpr1(jule::Ptr<_1ce11d934_Eval> _self_, jule::Ptr<_1cdec5dc4_Expr> _304433_expr) {
	jule::Ptr<_1ce11bc0c_Data> _304513_d = _1ce13b1c1_eval1(_self_, _304433_expr);;
	{
		
		if ((_304513_d == nullptr)) {
			_case_begin_1b8864811:;
			{
				return nullptr;;
			}
		}
		else if ((*(_304513_d))._field_Decl) {
			_case_begin_1b88648aa:;
			{
				_1ce11de84_pushErr(_self_, (*(_304433_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1b8864789:;
			{
				return _304513_d;;
			}
		}
		_match_end_1b8864734:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce13bb94_evalExpr(jule::Ptr<_1ce11d934_Eval> _self_, jule::Ptr<_1cdec5dc4_Expr> _306032_expr) {
	jule::Ptr<_1ce11bc0c_Data> _306113_d = _1ce13b512_eval(_self_, _306032_expr);;
	{
		
		if ((_306113_d == nullptr)) {
			_case_begin_1b8866703:;
			{
				return nullptr;;
			}
		}
		else if ((*(_306113_d))._field_Decl) {
			_case_begin_1b886679c:;
			{
				_1ce11de84_pushErr(_self_, (*(_306032_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1b886667b:;
			{
				return _306113_d;;
			}
		}
		_match_end_1b8866626:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ce11d934_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1ce13c15b_unaryEval static__1ce13c59b_new(jule::Ptr<_1ce11d934_Eval> _308123_e) {
	return _1ce13c15b_unaryEval{._field_e=_308123_e, };;
}



inline void _1ce13c799_minus(_1ce13c15b_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1b8868419:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1ce150328_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b88680d9:;
			{
				if ((!(_22be15ac9_IsNum(_1ce14d090_Str((*(*(_self_))._field_d.alloc)._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1ce15189b_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8868150:;
			{
				if (((*(_1ce15189b_Struct((*(*(_self_))._field_d.alloc)._field_Kind)))._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1b8868073:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b8867e74:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1ce11c614_IsConst((*(_self_))._field_d)) {
		{
			
			if (_22be1ab78_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b886cbd2:;
				{
					_22be19baa_SetF64((*(*(_self_))._field_d.alloc)._field_Constant, (-(_22be1857c_ReadF64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else if (_22be1a13e_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b886cb05:;
				{
					_22be190d8_SetI64((*(*(_self_))._field_d.alloc)._field_Constant, (-(_22be17a43_ReadI64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else if (_22be1a3c5_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b886c7c5:;
				{
					_22be190d8_SetI64((*(*(_self_))._field_d.alloc)._field_Constant, (-(_22be18813_AsI64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else {
				_case_begin_1b886c75e:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.minus, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3119:17"));;
				}
			}
			_match_end_1b886c6b5:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1cdeea091_UnaryExprModel>(_1cdeea091_UnaryExprModel{._field_Expr=jule::new_ptr<_1ce11bc0c_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1ce13c997_plus(_1ce13c15b_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1b8873259:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1ce150328_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8872e29:;
			{
				if ((!(_22be15ac9_IsNum(_1ce14d090_Str((*(*(_self_))._field_d.alloc)._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1ce15189b_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8872e90:;
			{
				if (((*(_1ce15189b_Struct((*(*(_self_))._field_d.alloc)._field_Kind)))._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1b8872db3:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b8872cb4:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1ce11c614_IsConst((*(_self_))._field_d)) {
		{
			
			if (_22be1ab78_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b8877a22:;
				{
					_22be19baa_SetF64((*(*(_self_))._field_d.alloc)._field_Constant, (+(_22be1857c_ReadF64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else if (_22be1a13e_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b8877945:;
				{
					_22be190d8_SetI64((*(*(_self_))._field_d.alloc)._field_Constant, (+(_22be17a43_ReadI64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else if (_22be1a3c5_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b8877615:;
				{
					_22be190d8_SetI64((*(*(_self_))._field_d.alloc)._field_Constant, (+(_22be18813_AsI64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else {
				_case_begin_1b887759e:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.plus, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3164:17"));;
				}
			}
			_match_end_1b8877505:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1cdeea091_UnaryExprModel>(_1cdeea091_UnaryExprModel{._field_Expr=jule::new_ptr<_1ce11bc0c_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1ce13cb95_caret(_1ce13c15b_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1b887d099:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1ce150328_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b887cc69:;
			{
				if ((!(_22be15502_IsInt(_1ce14d090_Str((*(*(_self_))._field_d.alloc)._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1ce15189b_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b887ccd0:;
			{
				if (((*(_1ce15189b_Struct((*(*(_self_))._field_d.alloc)._field_Kind)))._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1b887cc03:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b887cb04:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1ce11c614_IsConst((*(_self_))._field_d)) {
		{
			
			if (_22be1a13e_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b8882862:;
				{
					_22be190d8_SetI64((*(*(_self_))._field_d.alloc)._field_Constant, (~(_22be17a43_ReadI64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else if (_22be1a3c5_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b8882774:;
				{
					_22be19391_SetU64((*(*(_self_))._field_d.alloc)._field_Constant, (~(_22be17cc9_ReadU64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else {
				_case_begin_1b88823de:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.caret, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3207:17"));;
				}
			}
			_match_end_1b8882345:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1cdeea091_UnaryExprModel>(_1cdeea091_UnaryExprModel{._field_Expr=jule::new_ptr<_1ce11bc0c_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1ce13cd93_excl(_1ce13c15b_unaryEval* _self_) {
	jule::Ptr<_1ce1557a1_Prim> _32219_t = _1ce150328_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
	if (((_32219_t == nullptr) || (!(_1ce1589a2_IsBool(_32219_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1ce11c614_IsConst((*(_self_))._field_d)) {
		{
			
			if (_22be1a65b_IsBool((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b8888acc:;
				{
					_22be19649_SetBool((*(*(_self_))._field_d.alloc)._field_Constant, (!(_22be18060_ReadBool((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else {
				_case_begin_1b8888648:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.excl, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3235:17"));;
				}
			}
			_match_end_1b888857c:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1cdeea091_UnaryExprModel>(_1cdeea091_UnaryExprModel{._field_Expr=jule::new_ptr<_1ce11bc0c_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1ce13d091_star(_1ce13c15b_unaryEval* _self_) {
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1cdeea091_UnaryExprModel>(_1cdeea091_UnaryExprModel{._field_Expr=jule::new_ptr<_1ce11bc0c_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
	{
		
		if ((_1ce150845_Ptr((*(*(_self_))._field_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b888c350:;
			{
				if ((!(_1ce11e979_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1ce11de84_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1ce15ca94_Ptr> _326017_t = _1ce150845_Ptr((*(*(_self_))._field_d.alloc)._field_Kind);;
				if (_1ce15d5cd_IsUnsafe(_326017_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*(*(_self_))._field_d.alloc)._field_Kind=(*_326017_t.alloc)._field_Elem;
				(*(*(_self_))._field_d.alloc)._field_Mutable=true;
			}
		}
		else if ((_1ce1505ae_Sptr((*(*(_self_))._field_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b888c031:;
			{
				(*(*(_self_))._field_d.alloc)._field_Kind=(*(_1ce1505ae_Sptr((*(*(_self_))._field_d.alloc)._field_Kind)))._field_Elem;
			}
		}
		else {
			_case_begin_1b888beba:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b888aedb:;
	};
	(*(*(_self_))._field_d.alloc)._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=true;
}



inline void _1ce13d28e_amper(_1ce13c15b_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1b8895930:;
			{
				jule::Ptr<_1cdeea965_StructLitExprModel> _328217_lit = (*((*(_self_))._field_d))._field_Model.unsafe_cast_ptr<_1cdeea965_StructLitExprModel>();;
				_1ce145ecd_makeStructLitAlloc(&((*(_self_))._field_d), &(_328217_lit));
			}
		}
		else {
			_case_begin_1b8892dc2:;
			{
				{
					
					if (_1ce168ab1_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1b8893752:;
						{
							(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(jule::new_ptr<_1ce15ca94_Ptr>(_1ce15ca94_Ptr{._field_Elem=(*(*(_self_))._field_d.alloc)._field_Kind}), 26)});
							(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1cdeea091_UnaryExprModel>(_1cdeea091_UnaryExprModel{._field_Expr=jule::new_ptr<_1ce11bc0c_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
						}
					}
					else {
						_case_begin_1b88929c6:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_1b8893345:;
				};
			}
		}
		_match_end_1b8892d6c:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
}



inline void _1ce13d48c_typeDecl(_1ce13c15b_unaryEval* _self_) {
	_1ce15ea85_typeChecker _330713_tc = _1ce15ea85_typeChecker{._field_s=(*((*(_self_))._field_e))._field_s, ._field_rootLookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_lookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_errorToken=(*((*(_self_))._field_u))._field_Op, };;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1b889ad86:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(_1ce164e75_buildPtrFromType(&_330713_tc, &((*(*(_self_))._field_d.alloc)._field_Kind)), 26)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Kind, &__jule_any_type84);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1b889911a:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(_1ce1647e3_buildSptrFromType(&_330713_tc, &((*(*(_self_))._field_d.alloc)._field_Kind)), 21)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Kind, &__jule_any_type84);
			}
		}
		else {
			_case_begin_1b8898a65:;
			{
				_1ce11de84_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_1ce14d090_Str((*((*(_self_))._field_d))._field_Kind.ptr()), &__jule_any_type4)}));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b88990a4:;
	};
	(*((*(_self_))._field_d))._field_Decl=true;
}



inline void _1ce13d68a_evalData(_1ce13c15b_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1b889eab0:;
			{
				jule::Ptr<_1ce14cbc7_TypeKind> _333217_prefix = (*((*(_self_))._field_e))._field_prefix;;
				(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
				(*(_self_))._field_d=_1ce13b512_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
				(*(*(_self_))._field_e.alloc)._field_prefix=_333217_prefix;
			}
		}
		else {
			_case_begin_1b8899181:;
			{
				(*(_self_))._field_d=_1ce13b512_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
			}
		}
		_match_end_1b889e6d6:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce13d9cb_eval(_1ce13c15b_unaryEval* _self_, jule::Ptr<_1cdec7e81_UnaryExpr> _334127_u) {
	(*(_self_))._field_u=_334127_u;
	_1ce13d68a_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*((*(_self_))._field_d))._field_Decl) {
		_1ce13d48c_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1ce14cbc7_TypeKind> _33529_kind = (*((*(_self_))._field_d))._field_Kind;;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1b88a4257:;
			{
				_1ce13c799_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1b88a42bd:;
			{
				_1ce13c997_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1b88a4334:;
			{
				_1ce13cb95_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(68LLU)) {
			_case_begin_1b88a439a:;
			{
				_1ce13cd93_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1b88a4411:;
			{
				_1ce13d091_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1b88a4477:;
			{
				_1ce13d28e_amper(_self_);
			}
		}
		else {
			_case_begin_1b88a3c18:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1b88a41e1:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1b88a4961:;
			{
				_1ce11de84_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_1ce14d090_Str(_33529_kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if (_1ce11c614_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1b88a292b:;
			{
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Constant, &__jule_any_type19);
			}
		}
		_match_end_1b88a6402:;
	};
	return (*(_self_))._field_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce13c15b_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1ce13e0e7_binaryEval static__1ce13e69c_newPlain(jule::Ptr<_1ce11d934_Eval> _338928_e) {
	return _1ce13e0e7_binaryEval{._field_e=_338928_e, };;
}



inline _1ce13e0e7_binaryEval static__1ce13ea21_new(jule::Ptr<_1ce11d934_Eval> _339523_e, jule::Ptr<_1cdeab4b4_Token> _339537_op) {
	return _1ce13e0e7_binaryEval{._field_e=_339523_e, ._field_op=_339537_op};;
}



inline jule::Bool _1ce13eca7_checkTypeCompatibility(_1ce13e0e7_binaryEval* _self_) {
	return _1ce09cc15_checkTypeCompatibility1((*((*(_self_))._field_e))._field_s, &((*((*(_self_))._field_l))._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));;
}



inline jule::Bool _1ce14003d_checkStructCommonOperatorCompatibility(_1ce13e0e7_binaryEval* _self_) {
	jule::Ptr<_1ce00a832_FnIns> _340917_overload = nullptr;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1b88abbaa:;
			{
				_340917_overload=(*(_1ce15189b_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1b88ab88b:;
			{
				_340917_overload=(*(_1ce15189b_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1b88ab902:;
			{
				_340917_overload=(*(_1ce15189b_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Add;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1b88ab968:;
			{
				_340917_overload=(*(_1ce15189b_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1b88ab9ce:;
			{
				_340917_overload=(*(_1ce15189b_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Div;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1b88aba45:;
			{
				_340917_overload=(*(_1ce15189b_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1b88abaab:;
			{
				_340917_overload=(*(_1ce15189b_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1b88ad1a6:;
			{
				_340917_overload=(*(_1ce15189b_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU)) {
			_case_begin_1b88ad21c:;
			{
				_340917_overload=(*(_1ce15189b_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1b88ad283:;
			{
				_340917_overload=(*(_1ce15189b_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1b88ab3b3:;
			{
				_1ce11de84_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ce14d090_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_1b88ab825:;
	};
	if ((_340917_overload == nullptr)) {
		_1ce11de84_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ce14d090_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_1ce009886_ParamIns> _344113_p = (*(_340917_overload))._field_Params[1LL];;
	return _1ce09b8d4_checkAssignType((*(*(_self_))._field_e.alloc)._field_s, (*((*(_344113_p))._field_Decl))._field_Reference, &((*_344113_p.alloc)._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op);;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce1402c4_evalComptimeTypeInfo(_1ce13e0e7_binaryEval* _self_) {
	jule::Ptr<_1ce0325a1_comptimeTypeInfo> _344613_r = _1ce153bde_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((_344613_r == nullptr)) {
		_1ce11de84_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("comptimeTypeInfo", 16), &__jule_any_type4),jule::Any(_1ce14d090_Str((*(*(_self_))._field_r.alloc)._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ce0325a1_comptimeTypeInfo> _345113_l = _1ce153bde_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind);;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1b88bbd30:;
			{
				jule::Ptr<_22be1616d_Const> _345417_constant = static__22be16b41_NewBool(_1ce14d3d1_Equal((*(_345113_l))._field_base, (*(_344613_r))._field_base));;
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce235694_primBool, ._field_Model=jule::Any(_345417_constant, &__jule_any_type19), ._field_Constant=_345417_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1b88bd1c7:;
			{
				jule::Ptr<_22be1616d_Const> _346117_constant = static__22be16b41_NewBool((!(_1ce14d3d1_Equal((*(_345113_l))._field_base, (*(_344613_r))._field_base))));;
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce235694_primBool, ._field_Model=jule::Any(_346117_constant, &__jule_any_type19), ._field_Constant=_346117_constant});;
			}
		}
		else {
			_case_begin_1b88bb6ae:;
			{
				_1ce11de84_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ce14d090_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b88bb99a:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce14055a_evalNil(_1ce13e0e7_binaryEval* _self_) {
	if ((!(_1ce14ea75_NilCompatible((*((*(_self_))._field_r))._field_Kind.ptr())))) {
		_1ce11de84_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4),jule::Any(_1ce14d090_Str((*(*(_self_))._field_r.alloc)._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1b88c296d:;
			{
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce235694_primBool, });;
			}
		}
		else {
			_case_begin_1b88c0828:;
			{
				_1ce11de84_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b88c25d8:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce1407e1_evalEnum(_1ce13e0e7_binaryEval* _self_) {
	jule::Ptr<_1ce01d416_Enum> _349213_enm = _1ce150acb_Enum((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1b88c4c6c:;
			{
				jule::Ptr<_1ce14cbc7_TypeKind> _349617_rkind = (*((*(_self_))._field_r))._field_Kind;;
				if ((_1ce150acb_Enum((*(*(_self_))._field_r.alloc)._field_Kind) != nullptr)) {
					_349617_rkind=(*((*(_1ce150acb_Enum((*(*(_self_))._field_r.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
				if ((!(_1ce09c341_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*(*(_349213_enm))._field_Kind.alloc)._field_Kind), &(_349617_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce235694_primBool, });;
			}
		}
		_match_end_1b88c4c06:;
	};
	if (((_1ce150acb_Enum((*(*(_self_))._field_r.alloc)._field_Kind) == nullptr) || (_349213_enm != _1ce150acb_Enum((*(*(_self_))._field_r.alloc)._field_Kind)))) {
		_1ce11de84_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any((*_349213_enm.alloc)._field_Ident, &__jule_any_type4),jule::Any(_1ce14d090_Str((*(*(_self_))._field_r.alloc)._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1b88ca701:;
			{
				if ((!(_22be15ac9_IsNum(_1ce14d090_Str((*(*_349213_enm.alloc)._field_Kind.alloc)._field_Kind.ptr()))))) {
					_1ce11de84_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*_349213_enm.alloc)._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce235694_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1b88cb746:;
			{
				jule::Ptr<_1ce01c899_EnumItem> _352613_first = (*_349213_enm.alloc)._field_Items[0LL];;
				{
					
					if (_22be1a13e_IsI64((*((*((*(_352613_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1b88cee0e:;
						{
							if ((_22be17a43_ReadI64((*(*(*_352613_first.alloc)._field_Value.alloc)._field_Data.alloc)._field_Constant) == 0LL)) {
								goto _julec_label_1b88d4d15;
							};
							goto _julec_label_1b88d1031;
						}
					}
					else if (_22be1a3c5_IsU64((*((*((*(_352613_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1b88ced32:;
						{
							if ((_22be17cc9_ReadU64((*(*(*_352613_first.alloc)._field_Value.alloc)._field_Data.alloc)._field_Constant) == 0LLU)) {
								goto _julec_label_1b88d4d15;
							};
							goto _julec_label_1b88d1031;
						}
					}
					else {
						_case_begin_1b88ce97a:;
						{
							jule::panic(jule::Str::lit("unimplemented enum type, this panic call should be unreachable", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:3539:17"));;
						}
					}
					_match_end_1b88ce914:;
				};
				_julec_label_1b88d1031:;
				_1ce11de84_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("the @ enum type is not supports @ operator", 42), jule::Slice<jule::Any>::make({jule::Any((*_349213_enm.alloc)._field_Ident, &__jule_any_type4),jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				_1ce11e2e7_pushSuggestion((*(_self_))._field_e, jule::Str::lit("define default enum field (the first one is default) with zero value to use & operator", 86), jule::Slice<jule::Any>());
				_julec_label_1b88d4d15:;
				goto _case_begin_1b88cb7ac;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU) || _match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1b88cb7ac:;
			{
				if (((_1ce150328_Prim((*(*_349213_enm.alloc)._field_Kind.alloc)._field_Kind.ptr()) == nullptr) || (!(_22be15502_IsInt(_1ce155ae2_Str(_1ce150328_Prim((*(*_349213_enm.alloc)._field_Kind.alloc)._field_Kind).ptr())))))) {
					_1ce11de84_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*_349213_enm.alloc)._field_Ident, &__jule_any_type4)}));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1b88c4cd3:;
			{
				_1ce11de84_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*_349213_enm.alloc)._field_Ident, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b88ca36b:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce140a77_evalTypeEnum(_1ce13e0e7_binaryEval* _self_) {
	jule::Ptr<_1ce01eb21_TypeEnum> _355913_enm = _1ce150d62_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr());;
	if ((!(_1ce13eca7_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1b88d9a40:;
			{
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce235694_primBool, });;
			}
		}
		else {
			_case_begin_1b88d8de6:;
			{
				_1ce11de84_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ce01ee62_Str(_355913_enm.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b88d9655:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce140d0d_evalSptr(_1ce13e0e7_binaryEval* _self_) {
	if ((!(_1ce13eca7_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1b88dbe1b:;
			{
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce235694_primBool, });;
			}
		}
		else {
			_case_begin_1b88dae70:;
			{
				_1ce11de84_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ce14d090_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b88dba86:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce141094_evalPtr(_1ce13e0e7_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(53LLU) || _match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1b88de160:;
			{
				if ((!(_1ce13eca7_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce235694_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1b88e04e6:;
			{
				if ((_1ce150845_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) == nullptr)) {
					std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				};
				if (_1ce15d5cd_IsUnsafe(_1ce150845_Ptr((*(*(_self_))._field_l.alloc)._field_Kind).ptr())) {
					_1ce11de84_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ce14d090_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
				};
				if ((!(_1ce147166_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1ce11de84_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("type @ is incompatible to use for pointer arithmetic", 52), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1b88dd79c:;
			{
				_1ce11de84_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ce14d090_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b88dd6d1:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce14132a_evalArr(_1ce13e0e7_binaryEval* _self_) {
	if ((!(_1ce13eca7_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1b88e6bb2:;
			{
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce235694_primBool, });;
			}
		}
		else {
			_case_begin_1b88e64ca:;
			{
				_1ce11de84_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ce14d090_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b88e682c:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce1415b1_evalSlc(_1ce13e0e7_binaryEval* _self_) {
	if ((!(_1ce13eca7_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1b88e9346:;
			{
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce235694_primBool, });;
			}
		}
		else {
			_case_begin_1b88e839a:;
			{
				_1ce11de84_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ce14d090_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b88e8eb1:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce141847_evalStruct(_1ce13e0e7_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(70LLU)) {
			_case_begin_1b88eaca4:;
			{
				if (((*(_1ce15189b_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Gt == nullptr)) {
					_1ce11de84_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ce14d090_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce235694_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1b88eb2e3:;
			{
				if (((*(_1ce15189b_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_GtEq == nullptr)) {
					_1ce11de84_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ce14d090_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce235694_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(69LLU)) {
			_case_begin_1b88eb359:;
			{
				if (((*(_1ce15189b_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Lt == nullptr)) {
					_1ce11de84_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ce14d090_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce235694_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1b88eb3c0:;
			{
				if (((*(_1ce15189b_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_LtEq == nullptr)) {
					_1ce11de84_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ce14d090_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce235694_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1b88eb436:;
			{
				if ((!(_1ce13eca7_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce235694_primBool, });;
			}
		}
		_match_end_1b88eab0b:;
	};
	if ((!(_1ce14003d_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce141acd_evalTrait(_1ce13e0e7_binaryEval* _self_) {
	if ((!(_1ce13eca7_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1b8907277:;
			{
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce235694_primBool, });;
			}
		}
		else {
			_case_begin_1b8906672:;
			{
				_1ce11de84_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ce14d090_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b8906de2:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce141d64_evalAny(_1ce13e0e7_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1b8908bd5:;
			{
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce235694_primBool, });;
			}
		}
		else {
			_case_begin_1b8908b08:;
			{
				_1ce11de84_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("any", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b8908a3c:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce1420ea_evalBool(_1ce13e0e7_binaryEval* _self_) {
	if ((!(_1ce13eca7_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(54LLU) || _match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1b8911517:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1b891056b:;
			{
				_1ce11de84_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ce14d090_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b8911182:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce142381_evalStr(_1ce13e0e7_binaryEval* _self_) {
	jule::Str _375813_rk = _1ce14d090_Str((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((!_375813_rk.equal("str", 3))) {
		_1ce11de84_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_375813_rk, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1b89152eb:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1b8916187:;
			{
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce235694_primBool, });;
			}
		}
		else {
			_case_begin_1b89140db:;
			{
				_1ce11de84_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("str", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b8914e11:;
	};
}



inline void _1ce14257e_setTypeToGreater(_1ce13e0e7_binaryEval* _self_) {
	jule::Ptr<_1ce1557a1_Prim> _37839_lp = _1ce150328_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	jule::Ptr<_1ce1557a1_Prim> _37849_rp = _1ce150328_Prim((*((*(_self_))._field_r))._field_Kind);;
	if (_1ce11c614_IsConst((*(_self_))._field_l)) {
		if ((!(_1ce11c614_IsConst((*(_self_))._field_r)))) {
			(*(*(_self_))._field_l.alloc)._field_Kind=(*(*(_self_))._field_r.alloc)._field_Kind;
			(*((*(*(_self_))._field_l.alloc)._field_Constant))._field_Kind=(*(_37849_rp))._field_Kind;
			return;;
		};
		goto _julec_label_1b891ab1a;
	};
	if (_1ce11c614_IsConst((*(_self_))._field_r)) {
		(*(*(*(_self_))._field_r.alloc)._field_Constant.alloc)._field_Kind=(*(_37839_lp))._field_Kind;
		return;;
	};
	_julec_label_1b891ab1a:;
	if (((*(*(_self_))._field_l.alloc)._field_untyped && (!((*(*(_self_))._field_r.alloc)._field_untyped)))) {
		(*(*(_self_))._field_l.alloc)._field_Kind=(*(*(_self_))._field_r.alloc)._field_Kind;
		if (_1ce11c614_IsConst((*(_self_))._field_l)) {
			(*(*(*(_self_))._field_l.alloc)._field_Constant.alloc)._field_Kind=(*_37849_rp.alloc)._field_Kind;
		};
		(*(*(_self_))._field_l.alloc)._field_untyped=false;
		return;;
	} else if (((!((*(*(_self_))._field_l.alloc)._field_untyped)) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		return;;
	};
	if (_22be13cb4_IsGreater((*_37849_rp.alloc)._field_Kind, (*_37839_lp.alloc)._field_Kind)) {
		(*(*(_self_))._field_l.alloc)._field_Kind=(*(*(_self_))._field_r.alloc)._field_Kind;
		if (_1ce11c614_IsConst((*(_self_))._field_l)) {
			(*(*(*(_self_))._field_l.alloc)._field_Constant.alloc)._field_Kind=(*_37849_rp.alloc)._field_Kind;
		};
	};
}



inline void _1ce142837_checkModData(_1ce13e0e7_binaryEval* _self_, jule::Ptr<_1ce11bc0c_Data>* _381636_d) {
	if ((!(_1ce11c614_IsConst((*(_381636_d)).ptr())))) {
		if (((_1ce150328_Prim((*((*(_381636_d))))._field_Kind.ptr()) == nullptr) || (!(_22be15502_IsInt((*(_1ce150328_Prim((*((*(_381636_d))))._field_Kind)))._field_Kind))))) {
			_1ce11de84_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1ce102b9e_sigAssignable(jule::Str::lit("i64", 3), _381636_d)) {
			_case_begin_1b8923903:;
			{
				_22be190d8_SetI64((*((*(_381636_d))))._field_Constant.ptr(), _22be18813_AsI64((*((*(_381636_d))))._field_Constant));
			}
		}
		else if (_1ce103067_unsigAssignable(jule::Str::lit("u64", 3), _381636_d)) {
			_case_begin_1b89235e5:;
			{
				_22be19391_SetU64((*((*(_381636_d))))._field_Constant.ptr(), _22be18a99_AsU64((*((*(_381636_d))))._field_Constant));
			}
		}
		else {
			_case_begin_1b892357e:;
			{
				_1ce11de84_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b89234e6:;
	};
}



inline void _1ce142a35_mod(_1ce13e0e7_binaryEval* _self_) {
	_1ce142837_checkModData(_self_, &((*(_self_))._field_l));
	_1ce142837_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1ce142e31_numbersAreCompatibile(_1ce13e0e7_binaryEval* _self_, jule::Str* _383837_lk, jule::Str* _383847_rk) {
	if ((!(_22be15ac9_IsNum((*(_383847_rk)))))) {
		return false;;
	};
	if ((_1ce11c614_IsConst((*(_self_))._field_l.ptr()) && (*(*(_self_))._field_l.alloc)._field_untyped)) {
		return true;;
	};
	if ((*(_383837_lk)).equal("f32", 3)) {
		if ((_1ce11c614_IsConst((*(_self_))._field_r.ptr()) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1ce10282a_floatAssignable(_383837_lk, &((*(_self_))._field_r));;
		};
		return (*(_383847_rk)).equal("f32", 3);;
	};
	if ((*(_383837_lk)).equal("f64", 3)) {
		if ((_1ce11c614_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1ce10282a_floatAssignable(_383837_lk, &((*(_self_))._field_r));;
		};
		return (*(_383847_rk)).equal("f64", 3);;
	};
	if ((_1ce11c614_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		return _1ce1033db_intAssignable((*(_383837_lk)), &((*(_self_))._field_r));;
	};
	return ((*(_383837_lk)) == (*(_383847_rk)));;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce1431b7_evalFloat(_1ce13e0e7_binaryEval* _self_) {
	jule::Str _38649_lk = (*(_1ce150328_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _38659_rk = (*(_1ce150328_Prim((*((*(_self_))._field_r))._field_Kind)))._field_Kind;;
	if ((!(_1ce142e31_numbersAreCompatibile(_self_, &(_38649_lk), &(_38659_rk))))) {
		_1ce09c75e_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1b892d831:;
			{
				if (((!(_1ce11c614_IsConst((*(_self_))._field_l))) || (!(_1ce1033db_intAssignable(jule::Str::lit("i64", 3), &((*(_self_))._field_l)))))) {
					_1ce11de84_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38649_lk, &__jule_any_type4),jule::Any(_38659_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((!(_1ce11c614_IsConst((*(_self_))._field_r))) || (!(_1ce1033db_intAssignable(jule::Str::lit("u64", 3), &((*(_self_))._field_r)))))) {
					_1ce11de84_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38649_lk, &__jule_any_type4),jule::Any(_38659_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_22be190d8_SetI64((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), _22be18813_AsI64((*(*(_self_))._field_l.alloc)._field_Constant));
				_22be19391_SetU64((*(*(_self_))._field_r.alloc)._field_Constant, _22be18a99_AsU64((*(*(_self_))._field_r.alloc)._field_Constant));
				if ((!(_1ce146990_isOkForShifting(&((*(_self_))._field_r))))) {
					_1ce11de84_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1b892d7ba:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1b892dea2:;
			{
				_1ce14257e_setTypeToGreater(_self_);
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce235694_primBool, });;
			}
		}
		_match_end_1b892de4c:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1b8935c01:;
			{
				_1ce14257e_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1b89368e4:;
			{
				if ((!(_22be15502_IsInt(_38659_rk)))) {
					_1ce11de84_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38649_lk, &__jule_any_type4),jule::Any(_38659_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_1ce142a35_mod(_self_);
				_1ce14257e_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1b892e090:;
			{
				_1ce11de84_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for floating-point type(s)", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b8935151:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce14344d_evalInt(_1ce13e0e7_binaryEval* _self_) {
	jule::Str _39289_lk = (*(_1ce150328_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _39299_rk = (*(_1ce150328_Prim((*((*(_self_))._field_r))._field_Kind)))._field_Kind;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1b893a431:;
			{
				if (((!(_22be15502_IsInt(_39289_lk))) || (!(_22be15502_IsInt(_39299_rk))))) {
					_1ce11de84_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_39289_lk, &__jule_any_type4),jule::Any(_39299_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if ((!(_1ce146990_isOkForShifting(&((*(_self_))._field_r))))) {
					_1ce11de84_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1b893a71c:;
	};
	if ((!(_1ce142e31_numbersAreCompatibile(_self_, &(_39289_lk), &(_39299_rk))))) {
		_1ce09c75e_pushCompatiblityError((*(*(_self_))._field_e.alloc)._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1b893e04a:;
			{
				return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce235694_primBool, });;
			}
		}
		_match_end_1b893ded4:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(65LLU) || _match_expr == static_cast<jule::U32>(66LLU) || _match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1b8940810:;
			{
				_1ce14257e_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1b8941503:;
			{
				_1ce142a35_mod(_self_);
				_1ce14257e_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1b893e138:;
			{
				_1ce11de84_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for integer type(s)", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b8940403:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce1436d4_evalPrim(_1ce13e0e7_binaryEval* _self_) {
	jule::Ptr<_1ce1557a1_Prim> _39859_prim = _1ce150328_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		
		if (_1ce1589a2_IsBool(_39859_prim.ptr())) {
			_case_begin_1b8943bcb:;
			{
				return _1ce1420ea_evalBool(_self_);;
			}
		}
		else if (_1ce158c38_IsStr(_39859_prim.ptr())) {
			_case_begin_1b8943c75:;
			{
				return _1ce142381_evalStr(_self_);;
			}
		}
		_match_end_1b8943b65:;
	};
	if ((_1ce150328_Prim((*((*(_self_))._field_r))._field_Kind) == nullptr)) {
		_1ce11de84_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1ce155ae2_Str(_39859_prim.ptr()), &__jule_any_type4),jule::Any(_1ce14d090_Str((*(*(_self_))._field_r.alloc)._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if (_22be15843_IsFloat((*_39859_prim.alloc)._field_Kind)) {
			_case_begin_1b8946706:;
			{
				return _1ce1431b7_evalFloat(_self_);;
			}
		}
		else if (_22be15502_IsInt((*_39859_prim.alloc)._field_Kind)) {
			_case_begin_1b894678e:;
			{
				return _1ce14344d_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1b8946690:;
			{
				return nullptr;;
			}
		}
		_match_end_1b8943d1e:;
	};
}



inline void _1ce1438d2_checkSpecialCases(_1ce13e0e7_binaryEval* _self_) {
	if (((!(_1ce14e2c2_Comparable((*((*(_self_))._field_l))._field_Kind.ptr()))) && (!(_1ce14dca5_IsNil((*((*(_self_))._field_r))._field_Kind))))) {
		_1ce11de84_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
	} else if (((!(_1ce14e2c2_Comparable((*((*(_self_))._field_r))._field_Kind.ptr()))) && (!(_1ce14dca5_IsNil((*((*(_self_))._field_l))._field_Kind))))) {
		_1ce11de84_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*(*(_self_))._field_r.alloc)._field_Kind), &__jule_any_type4)}));
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce143b68_evalOp(_1ce13e0e7_binaryEval* _self_) {
	_1ce1438d2_checkSpecialCases(_self_);
	{
		
		if (_1ce14e03b_Void((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_1b894c0ad:;
			{
				_1ce11de84_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("void", 4), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if ((_1ce153bde_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b894d455:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b894d4bb;
			}
		}
		else if ((_1ce153bde_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b894d4bb:;
			{
				return _1ce1402c4_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_1ce150328_Prim((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr) && _1ce158ebe_IsAny(_1ce150328_Prim((*(*(_self_))._field_r.alloc)._field_Kind).ptr()))) {
			_case_begin_1b894be37:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b894be9d;
			}
		}
		else if (_1ce14dca5_IsNil((*((*(_self_))._field_r))._field_Kind.ptr())) {
			_case_begin_1b894be9d:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b894d5a9;
			}
		}
		else if (_1ce14dca5_IsNil((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_1b894d5a9:;
			{
				return _1ce14055a_evalNil(_self_);;
			}
		}
		else if (((_1ce150328_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr) && _1ce158ebe_IsAny(_1ce150328_Prim((*(*(_self_))._field_l.alloc)._field_Kind).ptr()))) {
			_case_begin_1b894d620:;
			{
				return _1ce141d64_evalAny(_self_);;
			}
		}
		else if ((_1ce150d62_TypeEnum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b894d686:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b894d6ec;
			}
		}
		else if ((_1ce150d62_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b894d6ec:;
			{
				return _1ce140a77_evalTypeEnum(_self_);;
			}
		}
		else if ((_1ce150acb_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b894d763:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b894d7c9;
			}
		}
		else if ((_1ce150acb_Enum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b894d7c9:;
			{
				return _1ce1407e1_evalEnum(_self_);;
			}
		}
		else if ((_1ce1505ae_Sptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b894d840:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b894d8a6;
			}
		}
		else if ((_1ce1505ae_Sptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b894d8a6:;
			{
				return _1ce140d0d_evalSptr(_self_);;
			}
		}
		else if ((_1ce150845_Ptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b894d91c:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b894d983;
			}
		}
		else if ((_1ce150845_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b894d983:;
			{
				return _1ce141094_evalPtr(_self_);;
			}
		}
		else if ((_1ce1510e8_Arr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b894d9e9:;
			{
				return _1ce14132a_evalArr(_self_);;
			}
		}
		else if ((_1ce15137e_Slc((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b894da60:;
			{
				return _1ce1415b1_evalSlc(_self_);;
			}
		}
		else if ((_1ce151b32_Trait((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b894dac6:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b894db3c;
			}
		}
		else if ((_1ce151b32_Trait((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b894db3c:;
			{
				return _1ce141acd_evalTrait(_self_);;
			}
		}
		else if ((_1ce15189b_Struct((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b894dba3:;
			{
				return _1ce141847_evalStruct(_self_);;
			}
		}
		else if ((_1ce150328_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b894dc19:;
			{
				return _1ce1436d4_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1b894b82c:;
			{
				_1ce11de84_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1ce14d090_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b894bc17:;
	};
}



inline void _1ce143e21_evalConst(_1ce13e0e7_binaryEval* _self_, jule::Ptr<_1ce11bc0c_Data>* _407633_d) {
	{
		
		if (((*(_407633_d)) == nullptr) || ((*((*(_self_))._field_l))._field_Model == nullptr) || ((*((*(_self_))._field_r))._field_Model == nullptr)) {
			_case_begin_1b89618b9:;
			{
				return;;
			}
		}
		else if ((!(_1ce11c614_IsConst((*(_self_))._field_l.ptr()))) || (!(_1ce11c614_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1b8961e6e:;
			{
				(*((*(_407633_d))))._field_Constant=nullptr;
				(*((*(_407633_d))))._field_untyped=false;
				return;;
			}
		}
		_match_end_1b89617dc:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1b896204b:;
			{
				(*((*(_407633_d))))._field_Constant=static__22be16b41_NewBool(_22be1bc23_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1b896446b:;
			{
				(*((*(_407633_d))))._field_Constant=static__22be16b41_NewBool((!(_22be1bc23_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1b89644d2:;
			{
				(*((*(_407633_d))))._field_Constant=static__22be16b41_NewBool(_22be1b8d2_Or((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1b8964548:;
			{
				(*((*(_407633_d))))._field_Constant=static__22be16b41_NewBool(_22be1b591_And((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(70LLU)) {
			_case_begin_1b89645ae:;
			{
				(*((*(_407633_d))))._field_Constant=static__22be16b41_NewBool(_22be1c6e6_Gt((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(69LLU)) {
			_case_begin_1b8964636:;
			{
				(*((*(_407633_d))))._field_Constant=static__22be16b41_NewBool(_22be1c064_Lt((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1b89646ad:;
			{
				(*((*(_407633_d))))._field_Constant=static__22be16b41_NewBool(_22be1ca37_GtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1b8964735:;
			{
				(*((*(_407633_d))))._field_Constant=static__22be16b41_NewBool(_22be1c3a5_LtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1b89647ac:;
			{
				_22be1cd78_Add((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_407633_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1b8964834:;
			{
				_22be1d1b9_Sub((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_407633_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1b89648ab:;
			{
				_22be1d50a_Mul((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_407633_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1b8964933:;
			{
				jule::Bool _411613_ok = _22be1d84b_Div((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));;
				if (((!(_411613_ok)) && (_22be18d30_AsF64((*(*(_self_))._field_r.alloc)._field_Constant) == 0LL))) {
					_1ce11de84_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_407633_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
				jule::Ptr<_1ce1557a1_Prim> _412117_prim = _1ce150328_Prim((*((*(_407633_d))))._field_Kind.ptr());;
				{
					
					if (_22be14e2a_IsSigInt((*(_412117_prim))._field_Kind)) {
						_case_begin_1b89759aa:;
						{
							_22be190d8_SetI64((*((*(_407633_d))))._field_Constant, _22be18813_AsI64((*((*(_407633_d))))._field_Constant));
						}
					}
					else if (_22be15238_IsUnsigInt((*(_412117_prim))._field_Kind)) {
						_case_begin_1b8975a54:;
						{
							_22be19391_SetU64((*((*(_407633_d))))._field_Constant, _22be18a99_AsU64((*((*(_407633_d))))._field_Constant));
						}
					}
					_match_end_1b8975955:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1b89649aa:;
			{
				jule::Bool _412913_ok = _22be1db8c_Mod((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));;
				if (((!(_412913_ok)) && (_22be18d30_AsF64((*(*(_self_))._field_r.alloc)._field_Constant) == 0LL))) {
					_1ce11de84_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_407633_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU)) {
			_case_begin_1b8964a32:;
			{
				_22be1e31e_BitwiseOr((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_407633_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1b8964aa9:;
			{
				_22be1decd_BitwiseAnd((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_407633_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1b8964b31:;
			{
				_22be1e660_Xor((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_407633_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1b8964ba8:;
			{
				_22be1e9a1_Lshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_407633_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1b8964c30:;
			{
				_22be1ece2_Rshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_407633_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		_match_end_1b8963778:;
	};
	(*((*(_407633_d))))._field_Model=jule::Any((*((*(_407633_d))))._field_Constant, &__jule_any_type19);
	_1ce1482cc_applyCastModelByEnum(_407633_d, _1ce150acb_Enum((*((*(_407633_d))))._field_Kind.ptr()), &((*(_self_))._field_op));
}



inline void _1ce1441c9_checkData(_1ce13e0e7_binaryEval* _self_, jule::Ptr<_1ce11bc0c_Data>* _415433_d) {
	jule::Ptr<_1ce00a832_FnIns> _41559_f = _1ce151615_Fn((*((*(_415433_d))))._field_Kind.ptr());;
	if ((((_41559_f != nullptr) && ((*_41559_f.alloc)._field_Decl != nullptr)) && _1ce008137_IsMethod((*_41559_f.alloc)._field_Decl))) {
		_1ce11de84_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("invalid expression used for binary operation", 44), jule::Slice<jule::Any>());
	};
}



inline void _1ce1443c7_checkDatas(_1ce13e0e7_binaryEval* _self_) {
	_1ce1441c9_checkData(_self_, &((*(_self_))._field_l));
	_1ce1441c9_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1ce144680_setModel(_1ce13e0e7_binaryEval* _self_, jule::Ptr<_1ce11bc0c_Data>* _416632_d) {
	if (_1ce11c614_IsConst((*(_416632_d)).ptr())) {
		if (((_1ce11c614_IsConst((*(_self_))._field_l.ptr()) && _1ce11c614_IsConst((*(_self_))._field_r.ptr())) || (((*(*(_self_))._field_l.alloc)._field_Model == nullptr) && ((*(*(_self_))._field_r.alloc)._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_1ce11bc0c_Data> _417513_l = (*(_self_))._field_l;;
	jule::Ptr<_1ce11bc0c_Data> _417520_r = (*(_self_))._field_r;;
	({
		jule::Ptr<_1ce11bc0c_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1ce11bc0c_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_417513_l = ___jule_assign_arg;
		_417520_r = _1___jule_assign_arg;
	});
	if ((!(_1ce11c955_GoodOperand(_417513_l, &(_417520_r))))) {
		std::swap(_417513_l, _417520_r);
	};
	(*((*(_416632_d))))._field_Model=jule::Any(jule::new_ptr<_1cdee9bb7_BinaryExprModel>(_1cdee9bb7_BinaryExprModel{._field_Left=jule::new_ptr<_1cdee96bc_OperandExprModel>(_1cdee96bc_OperandExprModel{._field_Kind=(*_417513_l.alloc)._field_Kind, ._field_Model=(*_417513_l.alloc)._field_Model}), ._field_Right=jule::new_ptr<_1cdee96bc_OperandExprModel>(_1cdee96bc_OperandExprModel{._field_Kind=(*_417520_r.alloc)._field_Kind, ._field_Model=(*_417520_r.alloc)._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type111);
}



inline void _1ce144938_postEval(_1ce13e0e7_binaryEval* _self_, jule::Ptr<_1ce11bc0c_Data>* _419332_d) {
	(*((*(_419332_d))))._field_Lvalue=false;
	_1ce144680_setModel(_self_, _419332_d);
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce144d34_solveExplicit(_1ce13e0e7_binaryEval* _self_, jule::Ptr<_1ce11bc0c_Data>* _419837_l, jule::Ptr<_1ce11bc0c_Data>* _419852_r) {
	({
		jule::Ptr<_1ce11bc0c_Data> ___jule_assign_arg = (*(_419837_l));
		jule::Ptr<_1ce11bc0c_Data> _1___jule_assign_arg = (*(_419852_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1ce1443c7_checkDatas(_self_);
	jule::Ptr<_1ce11bc0c_Data> _420313_d = _1ce143b68_evalOp(_self_);;
	({
		jule::Ptr<_1ce11bc0c_Data> ___jule_assign_arg = (*(_419837_l));
		jule::Ptr<_1ce11bc0c_Data> _1___jule_assign_arg = (*(_419852_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1ce143e21_evalConst(_self_, &(_420313_d));
	if ((_420313_d != nullptr)) {
		(*_420313_d.alloc)._field_Mutable=true;
		_1ce144938_postEval(_self_, &(_420313_d));
	};
	return _420313_d;;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce145175_eval(_1ce13e0e7_binaryEval* _self_, jule::Ptr<_1cdec948d_BinaryExpr>* _421828_op) {
	if (((*((*((*(_421828_op))))._field_Op))._field_Id == static_cast<jule::U32>(71LLU))) {
		_1ce11de84_pushErr((*(_self_))._field_e.ptr(), (*((*(_421828_op))))._field_Op, jule::Str::lit("assignments not available for expressions", 41), jule::Slice<jule::Any>());
		_1ce11e2e7_pushSuggestion((*(_self_))._field_e, jule::Str::lit("use clear imperative approach, comes relevant assignment statement before the expression", 88), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ce11bc0c_Data> _422513_l = _1ce13b853_evalExpr1((*(_self_))._field_e, (*((*(_421828_op))))._field_Left);;
	if (((_422513_l == nullptr) || ((*(_422513_l))._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1ce14cbc7_TypeKind> _423013_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_422513_l))._field_Kind;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_423013_prefix;
	});;
	jule::Ptr<_1ce11bc0c_Data> _423313_r = _1ce13b853_evalExpr1((*(_self_))._field_e, (*((*(_421828_op))))._field_Right);;
	if (((_423313_r == nullptr) || ((*(_423313_r))._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*((*(_421828_op))))._field_Op;
	jule::Ptr<_1ce11bc0c_Data> _424013_d = _1ce144d34_solveExplicit(_self_, &(_422513_l), &(_423313_r));;
	if ((((_424013_d != nullptr) && (*(_422513_l))._field_IsRune) && (*(_423313_r))._field_IsRune)) {
		(*_424013_d.alloc)._field_IsRune=true;
	};
	return _424013_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce13e0e7_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce14b2e1_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce14bdd5_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ce14d090_Str(_1ce14cbc7_TypeKind* _self_) {
	if (_1ce14dca5_IsNil(_self_)) {
		return jule::Str::lit("nil", 3);;
	};
	_22ab0b88c_StrBuilder _7413_kind = static__22ab0bb56_New(16LL);;
	if ((*(_self_))._field_Variadic) {
		_22ab154bc_WriteStr(&_7413_kind, jule::Str::lit("...", 3));
	};
	if (_1ce14da1e_Binded(_self_)) {
		_22ab154bc_WriteStr(&_7413_kind, jule::Str::lit("cpp.", 4));
		_22ab154bc_WriteStr(&_7413_kind, (*(_self_))._field_BindIdent);
	} else {
		_22ab154bc_WriteStr(&_7413_kind, _1ce14c721_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._1ce14c27b_Str((*(_self_))._field_Kind));
	};
	return _22ab15cb4_Str(&_7413_kind);;
}



inline jule::Bool _1ce14d3d1_Equal(jule::Ptr<_1ce14cbc7_TypeKind> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _9021_other) {
	if (_1ce14dca5_IsNil(_self_.ptr())) {
		return _1ce14dca5_IsNil(_9021_other.ptr());;
	};
	if (_1ce14da1e_Binded(_self_)) {
		return (_1ce14da1e_Binded(_9021_other) && ((*_self_.alloc)._field_BindIdent == (*_9021_other.alloc)._field_BindIdent));;
	};
	return _1ce14c721_Kind_mptr_data[((*_self_.alloc)._field_Kind).type_offset]._1ce14c5bc_Equal((*_self_.alloc)._field_Kind, _9021_other);;
}



inline jule::Bool _1ce14da1e_Binded(_1ce14cbc7_TypeKind* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _1ce14dca5_IsNil(_1ce14cbc7_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1ce14e03b_Void(_1ce14cbc7_TypeKind* _self_) {
	jule::Ptr<_1ce1557a1_Prim> _1109_prim = _1ce150328_Prim(&(*(_self_)));;
	return ((_1109_prim != nullptr) && (*_1109_prim.alloc)._field_Kind.equal("void", 4));;
}



inline jule::Bool _1ce14e2c2_Comparable(_1ce14cbc7_TypeKind* _self_) {
	{
		_1ce14cbc7_TypeKind* _11717__self = _self_;;
		if ((_1ce15189b_Struct(_11717__self) != nullptr)) {
			return (*(_1ce15189b_Struct(_11717__self)))._field_Comparable;;
		};
		return (((_1ce151db8_Map(_11717__self) == nullptr) && (_1ce15137e_Slc(_11717__self) == nullptr)) && (_1ce151615_Fn(_11717__self) == nullptr));;
	};
}



inline jule::Bool _1ce14e558_Mutable(_1ce14cbc7_TypeKind* _self_) {
	{
		_1ce14cbc7_TypeKind* _12817__self = _self_;;
		if ((_1ce15189b_Struct(_12817__self) != nullptr)) {
			return (*(_1ce15189b_Struct(_12817__self)))._field_Mutable;;
		};
		if ((_1ce151b32_Trait(_12817__self) != nullptr)) {
			return true;;
		};
		if ((_1ce150328_Prim(_12817__self) != nullptr)) {
			jule::Ptr<_1ce1557a1_Prim> _13617_p = _1ce150328_Prim(_12817__self);;
			return _1ce158ebe_IsAny(_13617_p.ptr());;
		};
		if ((_1ce1510e8_Arr(_12817__self) != nullptr)) {
			return _1ce14e558_Mutable((*(_1ce1510e8_Arr(_12817__self)))._field_Elem.ptr());;
		};
		return (((_1ce15137e_Slc(_12817__self) != nullptr) || (_1ce150845_Ptr(_12817__self) != nullptr)) || (_1ce1505ae_Sptr(_12817__self) != nullptr));;
	};
}



inline jule::Bool _1ce14e7de_Ordered(_1ce14cbc7_TypeKind* _self_) {
	{
		_1ce14cbc7_TypeKind* _15117__self = _self_;;
		jule::Ptr<_1ce1557a1_Prim> _15213_prim = _1ce150328_Prim(_15117__self);;
		if ((_15213_prim != nullptr)) {
			return (_22be15ac9_IsNum((*_15213_prim.alloc)._field_Kind) || _1ce158c38_IsStr(_15213_prim));;
		};
		if ((_1ce150845_Ptr(_15117__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_1cdee571d_StructIns> _15913_s = _1ce15189b_Struct(_15117__self);;
		if ((_15913_s != nullptr)) {
			return (((((*_15913_s.alloc)._field_Operators._field_Gt != nullptr) && ((*_15913_s.alloc)._field_Operators._field_GtEq != nullptr)) && ((*_15913_s.alloc)._field_Operators._field_Lt != nullptr)) && ((*_15913_s.alloc)._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_1ce01d416_Enum> _16613_enm = _1ce150acb_Enum(_15117__self);;
		if ((_16613_enm != nullptr)) {
			return _22be15ac9_IsNum(_1ce14d090_Str((*((*_16613_enm.alloc)._field_Kind))._field_Kind.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _1ce14ea75_NilCompatible(_1ce14cbc7_TypeKind* _self_) {
	{
		_1ce14cbc7_TypeKind* _17717__self = _self_;;
		jule::Ptr<_1ce1557a1_Prim> _17913_prim = _1ce150328_Prim(_17717__self);;
		if (((_17913_prim != nullptr) && _1ce158ebe_IsAny(_17913_prim))) {
			return true;;
		};
		return (((((((_1ce14dca5_IsNil(_17717__self) || (_1ce151615_Fn(_17717__self) != nullptr)) || (_1ce1505ae_Sptr(_17717__self) != nullptr)) || (_1ce150845_Ptr(_17717__self) != nullptr)) || (_1ce151b32_Trait(_17717__self) != nullptr)) || (_1ce15137e_Slc(_17717__self) != nullptr)) || (_1ce151db8_Map(_17717__self) != nullptr)) || (_1ce150d62_TypeEnum(_17717__self) != nullptr));;
	};
}



inline jule::Bool _1ce14ed0b_PerformsRC(_1ce14cbc7_TypeKind* _self_) {
	{
		_1ce14cbc7_TypeKind* _19817__self = _self_;;
		jule::Ptr<_1ce1557a1_Prim> _19913_prim = _1ce150328_Prim(_19817__self);;
		if ((_19913_prim != nullptr)) {
			return (_1ce158ebe_IsAny(_19913_prim) || _1ce158c38_IsStr(_19913_prim));;
		};
		return (((_1ce1505ae_Sptr(_19817__self) != nullptr) || (_1ce15137e_Slc(_19817__self) != nullptr)) || (_1ce151b32_Trait(_19817__self) != nullptr));;
	};
}



inline jule::Bool _1ce150092_Variadicable(_1ce14cbc7_TypeKind* _self_) {
	{
		_1ce14cbc7_TypeKind* _21017__self = _self_;;
		return (_1ce15137e_Slc(_21017__self) != nullptr);;
	};
}



inline jule::Ptr<_1ce1557a1_Prim> _1ce150328_Prim(_1ce14cbc7_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 20)) {
			_case_begin_1b89ae4b6:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ce1557a1_Prim>(20);;
			}
		}
		else {
			_case_begin_1b89c2e9c:;
			{
				return nullptr;;
			}
		}
		_match_end_1b89c2e47:;
	};
}



inline jule::Ptr<_1ce1592cc_Sptr> _1ce1505ae_Sptr(_1ce14cbc7_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 21)) {
			_case_begin_1b89c35c9:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ce1592cc_Sptr>(21);;
			}
		}
		else {
			_case_begin_1b89c3d38:;
			{
				return nullptr;;
			}
		}
		_match_end_1b89c3cd3:;
	};
}



inline jule::Ptr<_1ce15ca94_Ptr> _1ce150845_Ptr(_1ce14cbc7_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_1b89c460d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ce15ca94_Ptr>(26);;
			}
		}
		else {
			_case_begin_1b89c4a5e:;
			{
				return nullptr;;
			}
		}
		_match_end_1b89c4a09:;
	};
}



inline jule::Ptr<_1ce01d416_Enum> _1ce150acb_Enum(_1ce14cbc7_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1b89c5334:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ce01d416_Enum>(3);;
			}
		}
		else {
			_case_begin_1b89c5785:;
			{
				return nullptr;;
			}
		}
		_match_end_1b89c5730:;
	};
}



inline jule::Ptr<_1ce01eb21_TypeEnum> _1ce150d62_TypeEnum(_1ce14cbc7_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1b89c605a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ce01eb21_TypeEnum>(4);;
			}
		}
		else {
			_case_begin_1b89c64ab:;
			{
				return nullptr;;
			}
		}
		_match_end_1b89c6456:;
	};
}



inline jule::Ptr<_1ce15c0c1_Arr> _1ce1510e8_Arr(_1ce14cbc7_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 25)) {
			_case_begin_1b89c6c81:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ce15c0c1_Arr>(25);;
			}
		}
		else {
			_case_begin_1b89c71d2:;
			{
				return nullptr;;
			}
		}
		_match_end_1b89c717c:;
	};
}



inline jule::Ptr<_1ce159ca0_Slc> _1ce15137e_Slc(_1ce14cbc7_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 22)) {
			_case_begin_1b89c79a7:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ce159ca0_Slc>(22);;
			}
		}
		else {
			_case_begin_1b89c7e08:;
			{
				return nullptr;;
			}
		}
		_match_end_1b89c7da3:;
	};
}



inline jule::Ptr<_1ce00a832_FnIns> _1ce151615_Fn(_1ce14cbc7_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_1b89c86cd:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ce00a832_FnIns>(1);;
			}
		}
		else {
			_case_begin_1b89c8b2e:;
			{
				return nullptr;;
			}
		}
		_match_end_1b89c8ac9:;
	};
}



inline jule::Ptr<_1cdee571d_StructIns> _1ce15189b_Struct(_1ce14cbc7_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b89c9404:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1cdee571d_StructIns>(0);;
			}
		}
		else {
			_case_begin_1b89c9855:;
			{
				return nullptr;;
			}
		}
		_match_end_1b89c9800:;
	};
}



inline jule::Ptr<_1ce01ac0a_Trait> _1ce151b32_Trait(_1ce14cbc7_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 2)) {
			_case_begin_1b89ca12a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ce01ac0a_Trait>(2);;
			}
		}
		else {
			_case_begin_1b89ca57b:;
			{
				return nullptr;;
			}
		}
		_match_end_1b89ca526:;
	};
}



inline jule::Ptr<_1ce15b444_Map> _1ce151db8_Map(_1ce14cbc7_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 24)) {
			_case_begin_1b89cad62:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ce15b444_Map>(24);;
			}
		}
		else {
			_case_begin_1b89cb2b3:;
			{
				return nullptr;;
			}
		}
		_match_end_1b89cb25d:;
	};
}



inline jule::Ptr<_1ce15a894_Tuple> _1ce15214e_Tup(_1ce14cbc7_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 23)) {
			_case_begin_1b89cbaaa:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ce15a894_Tuple>(23);;
			}
		}
		else {
			_case_begin_1b89cc00b:;
			{
				return nullptr;;
			}
		}
		_match_end_1b89cbea6:;
	};
}



inline jule::Bool _1ce1523d5_comptime(_1ce14cbc7_TypeKind* _self_) {
	return (((((((((((((_1ce153958_comptimeTypeInfos(_self_) != nullptr) || (_1ce153bde_comptimeTypeInfo(_self_) != nullptr)) || (_1ce15266b_comptimeStructFields(_self_) != nullptr)) || (_1ce152902_comptimeStructField(_self_) != nullptr)) || (_1ce152b88_comptimeEnumFields(_self_) != nullptr)) || (_1ce152e1e_comptimeEnumField(_self_) != nullptr)) || (_1ce153e75_comptimeStatics(_self_) != nullptr)) || (_1ce15420b_comptimeStatic(_self_) != nullptr)) || (_1ce1531a5_comptimeParams(_self_) != nullptr)) || (_1ce15343b_comptimeParam(_self_) != nullptr)) || (_1ce154492_comptimeValue(_self_) != nullptr)) || (_1ce1549ae_comptimeFiles(_self_) != nullptr)) || (_1ce154728_comptimeFile(_self_) != nullptr));;
}



inline jule::Ptr<_1ce02540c_comptimeStructFields> _1ce15266b_comptimeStructFields(_1ce14cbc7_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 7)) {
			_case_begin_1b73d1e73:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ce02540c_comptimeStructFields>(7);;
			}
		}
		else {
			_case_begin_1b73ccb72:;
			{
				return nullptr;;
			}
		}
		_match_end_1b73cec73:;
	};
}



inline jule::Ptr<_1ce02374b_comptimeStructField> _1ce152902_comptimeStructField(_1ce14cbc7_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 6)) {
			_case_begin_1b73cab70:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ce02374b_comptimeStructField>(6);;
			}
		}
		else {
			_case_begin_1b73c2e42:;
			{
				return nullptr;;
			}
		}
		_match_end_1b73c2ddc:;
	};
}



inline jule::Ptr<_1ce02b15a_comptimeEnumFields> _1ce152b88_comptimeEnumFields(_1ce14cbc7_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 11)) {
			_case_begin_1b853d4da:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ce02b15a_comptimeEnumFields>(11);;
			}
		}
		else {
			_case_begin_1b85327dc:;
			{
				return nullptr;;
			}
		}
		_match_end_1b8532787:;
	};
}



inline jule::Ptr<_1ce029cb3_comptimeEnumField> _1ce152e1e_comptimeEnumField(_1ce14cbc7_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 10)) {
			_case_begin_1b853dd26:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ce029cb3_comptimeEnumField>(10);;
			}
		}
		else {
			_case_begin_1b853e079:;
			{
				return nullptr;;
			}
		}
		_match_end_1b853e024:;
	};
}



inline jule::Ptr<_1ce02e8de_comptimeParams> _1ce1531a5_comptimeParams(_1ce14cbc7_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 13)) {
			_case_begin_1b73bb039:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ce02e8de_comptimeParams>(13);;
			}
		}
		else {
			_case_begin_1b812e21e:;
			{
				return nullptr;;
			}
		}
		_match_end_1b812e1b9:;
	};
}



inline jule::Ptr<_1ce02c755_comptimeParam> _1ce15343b_comptimeParam(_1ce14cbc7_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 12)) {
			_case_begin_1b812e8e5:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ce02c755_comptimeParam>(12);;
			}
		}
		else {
			_case_begin_1b812ea8d:;
			{
				return nullptr;;
			}
		}
		_match_end_1b812ea38:;
	};
}



inline jule::Ptr<_1ce022c78_comptimeRange> _1ce1536c2_comptimeRange(_1ce14cbc7_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 5)) {
			_case_begin_1b8540047:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ce022c78_comptimeRange>(5);;
			}
		}
		else {
			_case_begin_1b85402cd:;
			{
				return nullptr;;
			}
		}
		_match_end_1b8540278:;
	};
}



inline jule::Ptr<_1ce030ea6_comptimeTypeInfos> _1ce153958_comptimeTypeInfos(_1ce14cbc7_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 14)) {
			_case_begin_1b8540a1a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ce030ea6_comptimeTypeInfos>(14);;
			}
		}
		else {
			_case_begin_1b8540bb3:;
			{
				return nullptr;;
			}
		}
		_match_end_1b8540b5d:;
	};
}



inline jule::Ptr<_1ce0325a1_comptimeTypeInfo> _1ce153bde_comptimeTypeInfo(_1ce14cbc7_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 15)) {
			_case_begin_1b8541235:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ce0325a1_comptimeTypeInfo>(15);;
			}
		}
		else {
			_case_begin_1b85418c8:;
			{
				return nullptr;;
			}
		}
		_match_end_1b8541873:;
	};
}



inline jule::Ptr<_1ce0286b8_comptimeStatics> _1ce153e75_comptimeStatics(_1ce14cbc7_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 9)) {
			_case_begin_1b8541e5b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ce0286b8_comptimeStatics>(9);;
			}
		}
		else {
			_case_begin_1b8542610:;
			{
				return nullptr;;
			}
		}
		_match_end_1b85425aa:;
	};
}



inline jule::Ptr<_1ce026a07_comptimeStatic> _1ce15420b_comptimeStatic(_1ce14cbc7_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 8)) {
			_case_begin_1b8542e29:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ce026a07_comptimeStatic>(8);;
			}
		}
		else {
			_case_begin_1b8543347:;
			{
				return nullptr;;
			}
		}
		_match_end_1b85432e2:;
	};
}



inline jule::Ptr<_1ce038ab3_comptimeValue> _1ce154492_comptimeValue(_1ce14cbc7_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 16)) {
			_case_begin_1b8543e08:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ce038ab3_comptimeValue>(16);;
			}
		}
		else {
			_case_begin_1b85440a1:;
			{
				return nullptr;;
			}
		}
		_match_end_1b854404b:;
	};
}



inline jule::Ptr<_1ce03ca0c_comptimeFile> _1ce154728_comptimeFile(_1ce14cbc7_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 18)) {
			_case_begin_1b8544b51:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ce03ca0c_comptimeFile>(18);;
			}
		}
		else {
			_case_begin_1b8544ce9:;
			{
				return nullptr;;
			}
		}
		_match_end_1b8544c94:;
	};
}



inline jule::Ptr<_1ce03b412_comptimeFiles> _1ce1549ae_comptimeFiles(_1ce14cbc7_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 17)) {
			_case_begin_1b8545899:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ce03b412_comptimeFiles>(17);;
			}
		}
		else {
			_case_begin_1b8545a42:;
			{
				return nullptr;;
			}
		}
		_match_end_1b85459dc:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ce14cbc7_TypeKind _Src) {
	_Stream << _1ce14d090_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1ce15521d_checked(_1ce154d99_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce154d99_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ce155ae2_Str(_1ce1557a1_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1ce155e33_Equal(jule::Ptr<_1ce1557a1_Prim> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _50821_other) {
	jule::Ptr<_1ce1557a1_Prim> _5099_prim = _1ce150328_Prim(_50821_other.ptr());;
	if ((_5099_prim == nullptr)) {
		return false;;
	};
	return ((*(_self_))._field_Kind == (*(_5099_prim))._field_Kind);;
}



inline jule::Bool _1ce1563c8_IsConstraint(_1ce1557a1_Prim* _self_) {
	return ((((!(_1ce158c38_IsStr(_self_))) && (!(_1ce158ebe_IsAny(_self_)))) && (!(_1ce1589a2_IsBool(_self_)))) && (!(_22be15ac9_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1ce15665e_IsI8(_1ce1557a1_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i8", 2);;
}



inline jule::Bool _1ce1568e5_IsI16(_1ce1557a1_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i16", 3);;
}



inline jule::Bool _1ce156b7b_IsI32(_1ce1557a1_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i32", 3);;
}



inline jule::Bool _1ce156e12_IsI64(_1ce1557a1_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i64", 3);;
}



inline jule::Bool _1ce157198_IsU8(_1ce1557a1_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u8", 2);;
}



inline jule::Bool _1ce15742e_IsU16(_1ce1557a1_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u16", 3);;
}



inline jule::Bool _1ce1576b5_IsU32(_1ce1557a1_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u32", 3);;
}



inline jule::Bool _1ce15794b_IsU64(_1ce1557a1_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u64", 3);;
}



inline jule::Bool _1ce157bd2_IsF32(_1ce1557a1_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f32", 3);;
}



inline jule::Bool _1ce157e68_IsF64(_1ce1557a1_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f64", 3);;
}



inline jule::Bool _1ce1581ee_IsInt(_1ce1557a1_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("int", 3);;
}



inline jule::Bool _1ce158485_IsUint(_1ce1557a1_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uint", 4);;
}



inline jule::Bool _1ce15871b_IsUintptr(_1ce1557a1_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uintptr", 7);;
}



inline jule::Bool _1ce1589a2_IsBool(_1ce1557a1_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("bool", 4);;
}



inline jule::Bool _1ce158c38_IsStr(_1ce1557a1_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("str", 3);;
}



inline jule::Bool _1ce158ebe_IsAny(_1ce1557a1_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("any", 3);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce1557a1_Prim _Src) {
	_Stream << _1ce155ae2_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ce159651_Str(_1ce1592cc_Sptr* _self_) {
	return (jule::Str::lit("&", 1) + _1ce14d090_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1ce159992_Equal(jule::Ptr<_1ce1592cc_Sptr> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _58521_other) {
	jule::Ptr<_1ce1592cc_Sptr> _5869_sptr = _1ce1505ae_Sptr(_58521_other.ptr());;
	if ((_5869_sptr == nullptr)) {
		return false;;
	};
	return _1ce14d3d1_Equal((*(_self_))._field_Elem, (*(_5869_sptr))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce1592cc_Sptr _Src) {
	_Stream << _1ce159651_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ce15a234_Str(_1ce159ca0_Slc* _self_) {
	return (jule::Str::lit("[]", 2) + _1ce14d090_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1ce15a575_Equal(jule::Ptr<_1ce159ca0_Slc> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _60421_other) {
	jule::Ptr<_1ce159ca0_Slc> _6059_slc = _1ce15137e_Slc(_60421_other.ptr());;
	if ((_6059_slc == nullptr)) {
		return false;;
	};
	return _1ce14d3d1_Equal((*(_self_))._field_Elem, (*(_6059_slc))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce159ca0_Slc _Src) {
	_Stream << _1ce15a234_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ce15ac18_Str(_1ce15a894_Tuple* _self_) {
	_22ab0b88c_StrBuilder _62113_s = static__22ab0bb56_New(16LL);;
	_22ab15775_WriteByte(&_62113_s, '(');
	_22ab154bc_WriteStr(&_62113_s, _1ce14d090_Str((*(_self_))._field_Types[0LL].ptr()));
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b8556019:;
		if (it != expr_end) {
			jule::Ptr<_1ce14cbc7_TypeKind> *_62416_t = it;
			{
				_22ab15775_WriteByte(&_62113_s, ',');
				_22ab154bc_WriteStr(&_62113_s, _1ce14d090_Str((*(_62416_t)).ptr()));
			}
			_iter_next_1b8556019:;
			++it;
			goto _iter_begin_1b8556019;
		}
		_iter_end_1b8556019:;
	};
	_22ab15775_WriteByte(&_62113_s, ')');
	return _22ab15cb4_Str(&_62113_s);;
}



inline jule::Bool _1ce15b059_Equal(jule::Ptr<_1ce15a894_Tuple> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _63321_other) {
	jule::Ptr<_1ce15a894_Tuple> _6349_tup = _1ce15214e_Tup(_63321_other.ptr());;
	if ((_6349_tup == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Types.len() != (*(_6349_tup))._field_Types.len())) {
		return false;;
	};
	jule::I32 _64113_i = 0LL;;
	for (; (_64113_i < (*_self_.alloc)._field_Types.len()); (_64113_i)++) {
		{
			if ((!(_1ce14d3d1_Equal((*_self_.alloc)._field_Types[_64113_i], (*(_6349_tup))._field_Types[_64113_i])))) {
				return false;;
			};
		}
	_iter_next_1b855848e:;
	}
	_iter_end_1b855848e:;;
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce15a894_Tuple _Src) {
	_Stream << _1ce15ac18_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ce15b7b8_Str(_1ce15b444_Map* _self_) {
	_22ab0b88c_StrBuilder _66113_s = static__22ab0bb56_New(16LL);;
	_22ab154bc_WriteStr(&_66113_s, jule::Str::lit("map[", 4));
	_22ab154bc_WriteStr(&_66113_s, _1ce14d090_Str((*(_self_))._field_Key.ptr()));
	_22ab15775_WriteByte(&_66113_s, ']');
	_22ab154bc_WriteStr(&_66113_s, _1ce14d090_Str((*(_self_))._field_Val.ptr()));
	return _22ab15cb4_Str(&_66113_s);;
}



inline jule::Bool _1ce15bb09_Equal(jule::Ptr<_1ce15b444_Map> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _67021_other) {
	jule::Ptr<_1ce15b444_Map> _6719_m = _1ce151db8_Map(_67021_other.ptr());;
	if ((_6719_m == nullptr)) {
		return false;;
	};
	return (_1ce14d3d1_Equal((*(_self_))._field_Key, (*(_6719_m))._field_Key) && _1ce14d3d1_Equal((*_self_.alloc)._field_Val, (*(_6719_m))._field_Val));;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce15b444_Map _Src) {
	_Stream << _1ce15b7b8_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ce15c445_Str(_1ce15c0c1_Arr* _self_) {
	_22ab0b88c_StrBuilder _68913_s = static__22ab0bb56_New(16LL);;
	_22ab15775_WriteByte(&_68913_s, '[');
	_22ab154bc_WriteStr(&_68913_s, _22be080a5_Itoa((*(_self_))._field_N));
	_22ab15775_WriteByte(&_68913_s, ']');
	_22ab154bc_WriteStr(&_68913_s, _1ce14d090_Str((*(_self_))._field_Elem.ptr()));
	return _22ab15cb4_Str(&_68913_s);;
}



inline jule::Bool _1ce15c786_Equal(jule::Ptr<_1ce15c0c1_Arr> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _69821_other) {
	jule::Ptr<_1ce15c0c1_Arr> _6999_arr = _1ce1510e8_Arr(_69821_other.ptr());;
	if ((_6999_arr == nullptr)) {
		return false;;
	};
	return (((*(_self_))._field_N == (*(_6999_arr))._field_N) && _1ce14d3d1_Equal((*_self_.alloc)._field_Elem, (*(_6999_arr))._field_Elem));;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce15c0c1_Arr _Src) {
	_Stream << _1ce15c445_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ce15ce18_Str(_1ce15ca94_Ptr* _self_) {
	if (_1ce15d5cd_IsUnsafe(_self_)) {
		return jule::Str::lit("*unsafe", 7);;
	};
	return (jule::Str::lit("*", 1) + _1ce14d090_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1ce15d259_Equal(jule::Ptr<_1ce15ca94_Ptr> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _72221_other) {
	jule::Ptr<_1ce15ca94_Ptr> _7239_ptr = _1ce150845_Ptr(_72221_other.ptr());;
	if ((_7239_ptr == nullptr)) {
		return false;;
	};
	return _1ce14d3d1_Equal((*(_self_))._field_Elem, (*(_7239_ptr))._field_Elem);;
}



inline jule::Bool _1ce15d5cd_IsUnsafe(_1ce15ca94_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce15ca94_Ptr _Src) {
	_Stream << _1ce15ce18_Str(&_Src);
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce15da95_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1ce1602c2_pushErr(_1ce15ea85_typeChecker* _self_, jule::Ptr<_1cdeab4b4_Token> _80826_token, jule::Str _80841_fmt, jule::Slice<jule::Any> _80854_args) {
	_1ce093dc6_pushErr((*(_self_))._field_s.ptr(), _80826_token, _80841_fmt, _80854_args);
}



inline void _1ce1604c0_allowBuiltin(_1ce15ea85_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1ce1606bd_disallowBuiltin(_1ce15ea85_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1b8568647_pushReference(_1ce15ea85_typeChecker* _self_, jule::Ptr<_1cdee571d_StructIns>* _82040_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1b86d62a9_Exist((*(_self_))._field_refers.ptr(), (*(_82040_t)))) {
		return;;
	};
	_1ce00e7e2_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_82040_t)), &__jule_any_type9));
}

inline void _1b856b062_pushReference(_1ce15ea85_typeChecker* _self_, jule::Ptr<_1ce01ac0a_Trait>* _82040_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1b856cccd_Exist((*(_self_))._field_refers.ptr(), (*(_82040_t)))) {
		return;;
	};
	_1ce00e7e2_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_82040_t)), &__jule_any_type10));
}



inline void _1ce160c2e_pushReferenceByKind(_1ce15ea85_typeChecker* _self_, jule::Ptr<_1ce14cbc7_TypeKind>* _83043_k) {
	{
		
		if ((_1ce15189b_Struct((*(_83043_k)).ptr()) != nullptr)) {
			_case_begin_1b856727d:;
			{
				jule::Ptr<_1cdee571d_StructIns> _83317_t = _1ce15189b_Struct((*(_83043_k)).ptr());;
				_1b8568647_pushReference(_self_, &(_83317_t));
			}
		}
		else if ((_1ce151b32_Trait((*(_83043_k)).ptr()) != nullptr)) {
			_case_begin_1b8567327:;
			{
				jule::Ptr<_1ce01ac0a_Trait> _83617_t = _1ce151b32_Trait((*(_83043_k)).ptr());;
				_1b856b062_pushReference(_self_, &(_83617_t));
			}
		}
		_match_end_1b856716d:;
	};
}



inline void _1ce16114c_pushCycleError(_1ce15ea85_typeChecker* _self_, jule::Any _84129_def1, jule::Any _84140_def2, _22ab0b88c_StrBuilder* _84156_message) {
	;
	jule::Fn<jule::Str(jule::Any*)> _8439_getIdent = jule::Fn<jule::Str(jule::Any*)>([=](jule::Any* _84325_def) mutable -> jule::Str {
		{
			auto &_match_expr{ (*(_84325_def)) };
			
			if (_match_expr.type == &__jule_any_type66) {
				_case_begin_1b85711aa:;
				{
					return (*((*(_84325_def)).cast_ptr<_1ce14bdd5_TypeAlias>(&__jule_any_type66)))._field_Ident;;
				}
			}
			else if (_match_expr.type == &__jule_any_type65) {
				_case_begin_1b8570907:;
				{
					return (*((*(_84325_def)).cast_ptr<_1cdee2990_Struct>(&__jule_any_type65)))._field_Ident;;
				}
			}
			else {
				_case_begin_1b8570ab1:;
				{
					return jule::Str();;
				}
			}
			_match_end_1b8570a5b:;
		};
	});;
	jule::Str _8539_m = _22ab15cb4_Str(_84156_message);;
	jule::Str _8549_def1Ident = _8439_getIdent(&(_84129_def1));;
	jule::Str _8559_def2Ident = _8439_getIdent(&(_84140_def2));;
	jule::Str _8569_refersTo = _22a936b90_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_8549_def1Ident, &__jule_any_type4),jule::Any(_8559_def2Ident, &__jule_any_type4)}));;
	_22ab154bc_WriteStr(_84156_message, _22aae7070_Repeat(jule::Str::lit(" ", 1), 7LL));
	_22ab154bc_WriteStr(_84156_message, _8569_refersTo);
	_22ab15775_WriteByte(_84156_message, '\n');
	_22ab154bc_WriteStr(_84156_message, _8539_m);
}



inline jule::Bool _1ce161548_checkCrossCycle(_1ce15ea85_typeChecker* _self_, jule::Any _86330_decl, _22ab0b88c_StrBuilder* _86346_message) {
	{
		auto &_match_expr{ _86330_decl };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b857429b:;
			{
				jule::Ptr<_1ce14bdd5_TypeAlias> _86613_ta = _86330_decl.unsafe_cast_ptr<_1ce14bdd5_TypeAlias>();;
				{
					auto expr = &((*(_86613_ta))._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b8575247:;
					if (it != expr_end) {
						jule::Any *_86720_d = it;
						{
							{
								
								if (((*(_86720_d)) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1b8575a1c:;
									{
										_1ce16114c_pushCycleError(_self_, jule::Any(_86613_ta, &__jule_any_type66), (*(_86720_d)), _86346_message);
										return false;;
									}
								}
								else if ((!(_1ce161548_checkCrossCycle(_self_, (*(_86720_d)), _86346_message)))) {
									_case_begin_1b8575aa5:;
									{
										_1ce16114c_pushCycleError(_self_, jule::Any(_86613_ta, &__jule_any_type66), (*(_86720_d)), _86346_message);
										return false;;
									}
								}
								_match_end_1b857591d:;
							};
						}
						_iter_next_1b8575247:;
						++it;
						goto _iter_begin_1b8575247;
					}
					_iter_end_1b8575247:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1b8574103:;
			{
				jule::Ptr<_1cdee2990_Struct> _87813_s = _86330_decl.unsafe_cast_ptr<_1cdee2990_Struct>();;
				{
					auto expr = &((*(_87813_s))._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b857758a:;
					if (it != expr_end) {
						jule::Ptr<_1cdee2990_Struct> *_87920_d = it;
						{
							{
								
								if ((__jule_any_type65_compare((*((*(_self_))._field_referencer))._field_owner, (*(_87920_d))))) {
									_case_begin_1b8577d60:;
									{
										_1ce16114c_pushCycleError(_self_, jule::Any(_87813_s, &__jule_any_type65), jule::Any((*(_87920_d)), &__jule_any_type65), _86346_message);
										return false;;
									}
								}
								else if ((!(_1ce161548_checkCrossCycle(_self_, jule::Any((*(_87920_d)), &__jule_any_type65), _86346_message)))) {
									_case_begin_1b8577de8:;
									{
										_1ce16114c_pushCycleError(_self_, jule::Any(_87813_s, &__jule_any_type65), jule::Any((*(_87920_d)), &__jule_any_type65), _86346_message);
										return false;;
									}
								}
								_match_end_1b8577c61:;
							};
						}
						_iter_next_1b857758a:;
						++it;
						goto _iter_begin_1b857758a;
					}
					_iter_end_1b857758a:;
				};
			}
		}
		_match_end_1b8574246:;
	};
	return true;;
}



inline jule::Bool _1ce161944_checkIllegalCycles(_1ce15ea85_typeChecker* _self_, jule::Ptr<_1cdec219a_IdentTypeDecl>* _89738_ident, jule::Any _89765_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _89765_decl };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1b8579e50:;
			{
				if ((*(_89765_decl.unsafe_cast_ptr<_1cdee2990_Struct>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b85778a9:;
			{
				if ((*(_89765_decl.unsafe_cast_ptr<_1ce14bdd5_TypeAlias>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1b8579a98:;
	};
	if ((_89765_decl == (*((*(_self_))._field_referencer))._field_owner)) {
		_1ce1602c2_pushErr(_self_, (*((*(_89738_ident))))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_referencer))._field_ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_22ab0b88c_StrBuilder _92013_message = static__22ab0bb56_New(32LL);;
	if ((!(_1ce161548_checkCrossCycle(_self_, _89765_decl, &(_92013_message))))) {
		jule::Str _92317_errMsg = _22ab15cb4_Str(&_92013_message);;
		_22ab15eb2_Clear(&_92013_message);
		_1ce16114c_pushCycleError(_self_, (*((*(_self_))._field_referencer))._field_owner, _89765_decl, &(_92013_message));
		_92317_errMsg+=_22ab15cb4_Str(&_92013_message);
		_1ce1602c2_pushErr(_self_, (*((*(_89738_ident))))._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_92317_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b857e87d:;
			{
				{
					{ jule::Slice<jule::Any> *__jule_push_dest = (*((*(_self_))._field_referencer))._field_refs; __jule_push_dest->push(_89765_decl); };
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1b857ca35:;
			{
				{
					auto &_match_expr{ _89765_decl };
					
					if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1b857ed12:;
						{
							jule::Ptr<_1cdee2990_Struct> _93921_s = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1cdee2990_Struct>();;
							(*(_93921_s))._field_Depends=jule::append((*_93921_s.alloc)._field_Depends,jule::Slice<jule::Ptr<_1cdee2990_Struct>>::make({_89765_decl.unsafe_cast_ptr<_1cdee2990_Struct>()}));
						}
					}
					_match_end_1b85801a8:;
				};
			}
		}
		_match_end_1b857e828:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait<_1ce14c721_Kind> _1ce161d40_fromTypeAlias(_1ce15ea85_typeChecker* _self_, jule::Ptr<_1cdec219a_IdentTypeDecl>* _94733_decl, jule::Ptr<_1ce14bdd5_TypeAlias>* _94760_ta) {
	if ((!(_1ce094635_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_94760_ta))))._field_Public, (*((*(_94760_ta))))._field_Token)))) {
		_1ce1602c2_pushErr(_self_, (*((*(_94733_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_94733_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_94760_ta))))._field_Used=true;
	if (((*((*(_94733_decl))))._field_Generics.len() > 0LL)) {
		_1ce1602c2_pushErr(_self_, (*((*(_94733_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_94733_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b8585466:;
			if (it != expr_end) {
				jule::Ptr<_1ce14bdd5_TypeAlias> _96420_bg = *it;
				{
					if (((_96420_bg == (*(_94760_ta))) || (((*((*((*(_94760_ta))))._field_Kind))._field_Kind != nullptr) && _1ce14d3d1_Equal((*(*((*(_94760_ta))))._field_Kind.alloc)._field_Kind, (*(*(_96420_bg))._field_Kind.alloc)._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1b8585466;
					};
				}
				_iter_next_1b8585466:;
				++it;
				goto _iter_begin_1b8585466;
			}
			_iter_end_1b8585466:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b8587743:;
			if (it != expr_end) {
				jule::Ptr<_1ce14bdd5_TypeAlias> _97520_bg = *it;
				{
					if ((_97520_bg == (*(_94760_ta)))) {
						_1ce1602c2_pushErr(_self_, (*((*(_94733_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_94733_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					{
						auto expr = &((*((*(_94760_ta))))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b8588106:;
						if (it != expr_end) {
							jule::Ptr<_1ce14bdd5_TypeAlias> _98024_dg = *it;
							{
								if ((_97520_bg == _98024_dg)) {
									_1ce1602c2_pushErr(_self_, (*((*(_94733_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_94733_decl))))._field_Ident, &__jule_any_type4)}));
									return nullptr;;
								};
							}
							_iter_next_1b8588106:;
							++it;
							goto _iter_begin_1b8588106;
						}
						_iter_end_1b8588106:;
					};
				}
				_iter_next_1b8587743:;
				++it;
				goto _iter_begin_1b8587743;
			}
			_iter_end_1b8587743:;
		};
	};
	jule::Bool _98913_ok = _1ce161944_checkIllegalCycles(_self_, _94733_decl, jule::Any((*(_94760_ta)), &__jule_any_type66));;
	if ((!(_98913_ok))) {
		return nullptr;;
	};
	if (((*(*((*(_94760_ta))))._field_Kind.alloc)._field_Kind == nullptr)) {
		_98913_ok=_1ce0a1169_checkTypeAliasDeclKind((*(_self_))._field_s, _94760_ta, (*(_self_))._field_lookup);
		if ((!(_98913_ok))) {
			return nullptr;;
		};
	};
	if (((*((*(_94760_ta))))._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		(*(*(_self_))._field_ownerAlias.alloc)._field_Generics=jule::append((*(*(_self_))._field_ownerAlias.alloc)._field_Generics,jule::Slice<jule::Ptr<_1ce14bdd5_TypeAlias>>::make({(*(_94760_ta))}));
	};
	jule::Ptr<_1ce14cbc7_TypeKind> _100813_tk = jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Generic=(*((*(_94760_ta))))._field_Generic, ._field_Kind=(*(*(*((*(_94760_ta))))._field_Kind.alloc)._field_Kind.alloc)._field_Kind});;
	_1ce160c2e_pushReferenceByKind(_self_, &(_100813_tk));
	if ((*((*(_94760_ta))))._field_Binded) {
		(*(_100813_tk))._field_BindIdent=(*((*(_94760_ta))))._field_Ident;
	} else {
		(*(_100813_tk))._field_BindIdent=(*(*(*((*(_94760_ta))))._field_Kind.alloc)._field_Kind.alloc)._field_BindIdent;
	};
	return jule::Trait<_1ce14c721_Kind>(_100813_tk, 19);;
}



inline jule::Ptr<_1ce01d416_Enum> _1ce16223b_fromEnum(_1ce15ea85_typeChecker* _self_, jule::Ptr<_1cdec219a_IdentTypeDecl>* _102128_decl, jule::Ptr<_1ce01d416_Enum>* _102155_e) {
	if ((!(_1ce094635_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_102155_e))))._field_Public, (*((*(_102155_e))))._field_Token)))) {
		_1ce1602c2_pushErr(_self_, (*((*(_102128_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_102128_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_102128_decl))))._field_Generics.len() > 0LL)) {
		_1ce1602c2_pushErr(_self_, (*((*(_102128_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_102128_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_102155_e));;
}



inline jule::Ptr<_1ce01eb21_TypeEnum> _1ce162637_fromTypeEnum(_1ce15ea85_typeChecker* _self_, jule::Ptr<_1cdec219a_IdentTypeDecl>* _103332_decl, jule::Ptr<_1ce01eb21_TypeEnum>* _103359_e) {
	if ((!(_1ce094635_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_103359_e))))._field_Public, (*((*(_103359_e))))._field_Token)))) {
		_1ce1602c2_pushErr(_self_, (*((*(_103332_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_103332_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_103332_decl))))._field_Generics.len() > 0LL)) {
		_1ce1602c2_pushErr(_self_, (*((*(_103332_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_103332_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_103359_e));;
}



inline jule::Ptr<_1ce01ac0a_Trait> _1ce162a33_fromTrait(_1ce15ea85_typeChecker* _self_, jule::Ptr<_1cdec219a_IdentTypeDecl>* _104529_decl, jule::Ptr<_1ce01ac0a_Trait>* _104556_t) {
	if ((!(_1ce094635_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_104556_t))))._field_Public, (*((*(_104556_t))))._field_Token)))) {
		_1ce1602c2_pushErr(_self_, (*((*(_104529_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_104529_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_104529_decl))))._field_Generics.len() > 0LL)) {
		_1ce1602c2_pushErr(_self_, (*((*(_104529_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_104529_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_1b856b062_pushReference(_self_, _104556_t);
	return (*(_104556_t));;
}



inline jule::Bool _1ce162e2e_checkStructIns(_1ce15ea85_typeChecker* _self_, jule::Ptr<_1cdee571d_StructIns>* _105838_ins, jule::Ptr<_1cdeab4b4_Token>* _105860_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_105838_ins))))._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_105838_ins))))._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (__jule_any_type65_compare((*(*(_self_))._field_referencer.alloc)._field_owner, (*((*(_105838_ins))))._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1ce0ac75d_precheckStructIns((*(_self_))._field_s, _105838_ins, (*(_105860_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*((*(_105838_ins))))._field_Generics.len() > 0LL)) {
		_1ce0ad275_checkStructInsOperators((*(_self_))._field_s, (*(_105838_ins)));
		_1ce0aca16_checkStructIns((*(_self_))._field_s, _105838_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1ce1631d7_appendUsedStructReference(_1ce15ea85_typeChecker* _self_, jule::Ptr<_1cdee2990_Struct>* _107949_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1b859bd0c:;
			{
				jule::Ptr<_1cdee2990_Struct> _108517_refS = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1cdee2990_Struct>();;
				if ((!(_1cdee4420_IsUses(_108517_refS.ptr(), (*(_107949_s)))))) {
					(*_108517_refS.alloc)._field_Uses=jule::append((*_108517_refS.alloc)._field_Uses,jule::Slice<jule::Ptr<_1cdee2990_Struct>>::make({(*(_107949_s))}));
				};
			}
		}
		_match_end_1b859bca7:;
	};
}



inline jule::Ptr<_1cdee571d_StructIns> _1ce1635d3_buildStructInstance(_1ce15ea85_typeChecker* _self_, jule::Ptr<_1cdec219a_IdentTypeDecl>* _109243_decl, jule::Ptr<_1cdee2990_Struct>* _109270_s) {
	jule::Ptr<_1ce15da95_referencer> _109413_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1ce14bdd5_TypeAlias>> _109613_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1b859ecaa:;
				{
					jule::Ptr<_1ce051acb_scopeChecker> _110321_sc = (*(_self_))._field_lookup.cast_ptr<_1ce051acb_scopeChecker>(0);;
					jule::Ptr<_1ce051acb_scopeChecker> _110421_hard = _1ce054e53_getHardRoot(_110321_sc);;
					if ((((*((*(_110421_hard))._field_owner))._field_Owner == nullptr) || ((*((*(*_110421_hard.alloc)._field_owner.alloc)._field_Owner))._field_Decl != (*(_109270_s))))) {
						goto _match_end_1b859ec55;
					};
					jule::I32 _110817_n = ((*(*_110421_hard.alloc)._field_owner.alloc)._field_Generics.len() + (*((*(*_110421_hard.alloc)._field_owner.alloc)._field_Owner))._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=(*((*_110421_hard.alloc)._field_table))._field_TypeAliases.slice(0LL, _110817_n);
				}
			}
			_match_end_1b859ec55:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait<_1ce16c7b8_Lookup> _111813_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1cdee571d_StructIns> _112213_ins = _1cdee2e02_instance((*(_109270_s)));;
	(*(_112213_ins))._field_Generics=jule::Slice<jule::Ptr<_1ce14b2e1_InsGeneric>>::alloc(0LL, (*((*(_109243_decl))))._field_Generics.len());
	{
		auto expr = &((*((*(_109243_decl))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b85a5101:;
		if (it != expr_end) {
			jule::Ptr<_1cdec1a90_TypeDecl> _112421_g = *it;
			{
				jule::Ptr<_1ce14cbc7_TypeKind> _112517_kind = _1ce166dde_build(_self_, &((*(_112421_g))._field_Kind));;
				if ((_112517_kind == nullptr)) {
					return nullptr;;
				};
				(*_112213_ins.alloc)._field_Generics=jule::append((*_112213_ins.alloc)._field_Generics,jule::Slice<jule::Ptr<_1ce14b2e1_InsGeneric>>::make({jule::new_ptr<_1ce14b2e1_InsGeneric>(_1ce14b2e1_InsGeneric{._field_Kind=_112517_kind, })}));
			}
			_iter_next_1b85a5101:;
			++it;
			goto _iter_begin_1b85a5101;
		}
		_iter_end_1b85a5101:;
	};
	(*(_self_))._field_lookup=_111813_lookup;
	(*(_self_))._field_bannedGenerics=_109613_bannedGenerics;
	(*(_self_))._field_referencer=_109413_referencer;
	return _112213_ins;;
}



inline jule::Ptr<_1cdee571d_StructIns> _1ce1639ce_fromStruct(_1ce15ea85_typeChecker* _self_, jule::Ptr<_1cdec219a_IdentTypeDecl>* _114034_decl, jule::Ptr<_1cdee2990_Struct>* _114061_s) {
	if ((!(_1ce094635_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_114061_s))))._field_Public, (*((*(_114061_s))))._field_Token)))) {
		_1ce1602c2_pushErr(_self_, (*((*(_114034_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_114034_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*((*(_114034_decl))))._field_Generics.len() > 0LL)) {
			_1ce1602c2_pushErr(_self_, (*((*(_114034_decl))))._field_Token, jule::Str::lit("generics are not allowed in this scope", 38), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1cdee571d_StructIns>(_1cdee571d_StructIns{._field_Decl=(*(_114061_s)), });;
	};
	jule::Bool _115813_ok = _1ce161944_checkIllegalCycles(_self_, _114034_decl, jule::Any((*(_114061_s)), &__jule_any_type65));;
	if ((!(_115813_ok))) {
		return nullptr;;
	};
	_1ce1631d7_appendUsedStructReference(_self_, _114061_s);
	jule::Ptr<_1cdee571d_StructIns> _116413_ins = _1ce1635d3_buildStructInstance(_self_, _114034_decl, _114061_s);;
	if ((_116413_ins == nullptr)) {
		return nullptr;;
	};
	_115813_ok=_1ce095405_checkGenericQuantity((*(_self_))._field_s, (*((*(_116413_ins))._field_Decl))._field_Generics.len(), (*(_116413_ins))._field_Generics.len(), (*((*(_114034_decl))))._field_Token);
	if ((!(_115813_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1cdee571d_StructIns> _117413_existInstance = _1cdee3210_appendInstance((*(_114061_s)).ptr(), &(_116413_ins));;
	if ((_117413_existInstance != nullptr)) {
		if ((!(_1ce09e365_checkConstraintsStruct((*(_self_))._field_s, &(_116413_ins), &((*((*(_114034_decl))))._field_Token), _117413_existInstance)))) {
			return nullptr;;
		};
		_1b8568647_pushReference(_self_, &(_117413_existInstance));
		return _117413_existInstance;;
	};
	if ((!(_1ce162e2e_checkStructIns(_self_, &(_116413_ins), &((*((*(_114034_decl))))._field_Token))))) {
		return nullptr;;
	};
	_1b8568647_pushReference(_self_, &(_116413_ins));
	return _116413_ins;;
}



inline jule::Trait<_1ce14c721_Kind> _1ce163d20_getDef(_1ce15ea85_typeChecker* _self_, jule::Ptr<_1cdec219a_IdentTypeDecl>* _119830_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b85ae57d:;
		if (it != expr_end) {
			jule::Ptr<_1cdecdc9a_GenericDecl> _119916_g = *it;
			{
				if (((*(_119916_g))._field_Ident == (*((*(_119830_decl))))._field_Ident)) {
					return jule::Trait<_1ce14c721_Kind>(_1ce169ae5_buildPrimType((*_119916_g.alloc)._field_Ident), 20);;
				};
			}
			_iter_next_1b85ae57d:;
			++it;
			goto _iter_begin_1b85ae57d;
		}
		_iter_end_1b85ae57d:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b85aeced:;
		if (it != expr_end) {
			jule::Ptr<_1ce14bdd5_TypeAlias> _120521_g = *it;
			{
				if (((*(_120521_g))._field_Ident == (*((*(_119830_decl))))._field_Ident)) {
					if (((*((*(_119830_decl))))._field_Generics.len() > 0LL)) {
						_1ce1602c2_pushErr(_self_, (*((*(_119830_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_119830_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					jule::Ptr<_1cdee571d_StructIns> _121121_st = _1ce15189b_Struct((*((*_120521_g.alloc)._field_Kind))._field_Kind.ptr());;
					if ((_121121_st != nullptr)) {
						jule::Bool _121321_ok = _1ce161944_checkIllegalCycles(_self_, _119830_decl, jule::Any((*_121121_st.alloc)._field_Decl, &__jule_any_type65));;
						if ((!(_121321_ok))) {
							return nullptr;;
						};
					};
					return (*(*(*_120521_g.alloc)._field_Kind.alloc)._field_Kind.alloc)._field_Kind;;
				};
			}
			_iter_next_1b85aeced:;
			++it;
			goto _iter_begin_1b85aeced;
		}
		_iter_end_1b85aeced:;
	};
	if ((!((*((*(_119830_decl))))._field_Binded))) {
		jule::Ptr<_1ce01d416_Enum> _122317_e = _1ce16c7b8_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ce16c323_FindEnum((*(_self_))._field_lookup, (*((*(_119830_decl))))._field_Ident);;
		if ((_122317_e != nullptr)) {
			return jule::Trait<_1ce14c721_Kind>(_1ce16223b_fromEnum(_self_, _119830_decl, &(_122317_e)), 3);;
		};
		jule::Ptr<_1ce01eb21_TypeEnum> _122817_te = _1ce16c7b8_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ce16c664_FindTypeEnum((*(_self_))._field_lookup, (*((*(_119830_decl))))._field_Ident);;
		if ((_122817_te != nullptr)) {
			return jule::Trait<_1ce14c721_Kind>(_1ce162637_fromTypeEnum(_self_, _119830_decl, &(_122817_te)), 4);;
		};
		jule::Ptr<_1ce01ac0a_Trait> _123317_t = _1ce16c7b8_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ce16bed2_FindTrait((*(_self_))._field_lookup, (*((*(_119830_decl))))._field_Ident);;
		if ((_123317_t != nullptr)) {
			return jule::Trait<_1ce14c721_Kind>(_1ce162a33_fromTrait(_self_, _119830_decl, &(_123317_t)), 2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1ce1602c2_pushErr(_self_, (*((*(_119830_decl))))._field_Token, jule::Str::lit("binded definitions are not allowed in this scope", 48), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1cdee2990_Struct> _124213_s = _1ce16c7b8_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ce16b795_FindStruct((*(_self_))._field_lookup, (*((*(_119830_decl))))._field_Ident, (*((*(_119830_decl))))._field_Binded);;
	if ((_124213_s != nullptr)) {
		return jule::Trait<_1ce14c721_Kind>(_1ce1639ce_fromStruct(_self_, _119830_decl, &(_124213_s)), 0);;
	};
	jule::Ptr<_1ce14bdd5_TypeAlias> _124713_ta = _1ce16c7b8_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ce16b399_FindTypeAlias((*(_self_))._field_lookup, (*((*(_119830_decl))))._field_Ident, (*((*(_119830_decl))))._field_Binded);;
	if (((_124713_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_124713_ta=_1ce238422_findBuiltinTypeAlias((*((*(_119830_decl))))._field_Ident);
	};
	if ((_124713_ta != nullptr)) {
		return _1ce161d40_fromTypeAlias(_self_, _119830_decl, &(_124713_ta));;
	};
	_1ce1602c2_pushErr(_self_, (*((*(_119830_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_119830_decl))))._field_Ident, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Trait<_1ce14c721_Kind> _1ce164161_buildIdent(_1ce15ea85_typeChecker* _self_, jule::Ptr<_1cdec219a_IdentTypeDecl> _125933_decl) {
	return _1ce163d20_getDef(_self_, &(_125933_decl));;
}



inline jule::Trait<_1ce14c721_Kind> _1ce1644a2_buildSubIdent(_1ce15ea85_typeChecker* _self_, jule::Ptr<_1cdec2464_SubIdentTypeDecl> _126336_decl) {
	jule::Trait<_1ce14c721_Kind> _126413_ident = _1ce164161_buildIdent(_self_, (*(_126336_decl))._field_Idents[0LL]);;
	if ((_126413_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _126413_ident };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1b85bc9cb:;
			{
				goto _match_end_1b85bccd9;
			}
		}
		else {
			_case_begin_1b85bcd3e:;
			{
				_1ce1602c2_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b85bccd9:;
	};
	jule::Ptr<_1ce01eb21_TypeEnum> _127513_t = _126413_ident.cast_ptr<_1ce01eb21_TypeEnum>(4);;
	jule::Slice<jule::Ptr<_1cdec219a_IdentTypeDecl>> _127613_idents = (*_126336_decl.alloc)._field_Idents.slice(1LL);;
	{
		auto expr = &(_127613_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b85be55a:;
		if (it != expr_end) {
			jule::I32 _127713_i = it - expr->begin();
			jule::Ptr<_1cdec219a_IdentTypeDecl> _127716_id = *it;
			{
				jule::Ptr<_1ce01e549_TypeEnumItem> _127817_item = _1ce0206d2_FindItem(_127513_t.ptr(), (*(_127716_id))._field_Ident);;
				if ((_127817_item == nullptr)) {
					_1ce1602c2_pushErr(_self_, (*_127716_id.alloc)._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*_127513_t.alloc)._field_Ident, &__jule_any_type4),jule::Any((*_127716_id.alloc)._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((_127613_idents.len() - _127713_i) == 1LL)) {
					_1ce160c2e_pushReferenceByKind(_self_, &((*((*(_127817_item))._field_Kind))._field_Kind));
					return jule::Trait<_1ce14c721_Kind>((*(*(_127817_item))._field_Kind.alloc)._field_Kind, 19);;
				};
				_127513_t=_1ce150d62_TypeEnum((*(*(_127817_item))._field_Kind.alloc)._field_Kind.ptr());
				if ((_127513_t == nullptr)) {
					_1ce1602c2_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1b85be55a:;
			++it;
			_127713_i++;
			goto _iter_begin_1b85be55a;
		}
		_iter_end_1b85be55a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ce1592cc_Sptr> _1ce1647e3_buildSptrFromType(_1ce15ea85_typeChecker* _self_, jule::Ptr<_1ce14cbc7_TypeKind>* _129741_elem) {
	{
		
		if (((*(_129741_elem)) == nullptr)) {
			_case_begin_1b85c3c57:;
			{
				return nullptr;;
			}
		}
		else if ((_1ce15189b_Struct((*(_129741_elem)).ptr()) != nullptr)) {
			_case_begin_1b85c3d01:;
			{
				jule::Ptr<_1cdee571d_StructIns> _130313_s = _1ce15189b_Struct((*(_129741_elem)).ptr());;
				if ((((*(_130313_s))._field_Decl != nullptr) && (*(*_130313_s.alloc)._field_Decl.alloc)._field_Binded)) {
					_1ce1602c2_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1ce1510e8_Arr((*(_129741_elem)).ptr()) != nullptr) && (*(_1ce1510e8_Arr((*(_129741_elem)).ptr())))._field_Auto)) {
			_case_begin_1b85c3d67:;
			{
				_1ce1602c2_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b85bec75:;
	};
	return jule::new_ptr<_1ce1592cc_Sptr>(_1ce1592cc_Sptr{._field_Elem=(*(_129741_elem))});;
}



inline jule::Ptr<_1ce1592cc_Sptr> _1ce164b34_buildSptr(_1ce15ea85_typeChecker* _self_, jule::Ptr<_1cdec2b3a_SptrTypeDecl> _131732_decl) {
	jule::Bool _13189_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13189_cycleRisk;
	});;
	jule::Ptr<_1ce14cbc7_TypeKind> _132213_elem = _1ce167230_checkDecl(_self_, &((*(_131732_decl))._field_Elem));;
	return _1ce1647e3_buildSptrFromType(_self_, &(_132213_elem));;
}



inline jule::Ptr<_1ce15ca94_Ptr> _1ce164e75_buildPtrFromType(_1ce15ea85_typeChecker* _self_, jule::Ptr<_1ce14cbc7_TypeKind>* _132640_elem) {
	{
		
		if (((*(_132640_elem)) == nullptr)) {
			_case_begin_1b85c8d5b:;
			{
				return nullptr;;
			}
		}
		else if (((_1ce1510e8_Arr((*(_132640_elem)).ptr()) != nullptr) && (*(_1ce1510e8_Arr((*(_132640_elem)).ptr())))._field_Auto)) {
			_case_begin_1b85c8e05:;
			{
				_1ce1602c2_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return jule::new_ptr<_1ce15ca94_Ptr>();;
			}
		}
		_match_end_1b85c8c4b:;
	};
	return jule::new_ptr<_1ce15ca94_Ptr>(_1ce15ca94_Ptr{._field_Elem=(*(_132640_elem))});;
}



inline jule::Ptr<_1ce15ca94_Ptr> _1ce1652b6_buildPtr(_1ce15ea85_typeChecker* _self_, jule::Ptr<_1cdec35b9_PtrTypeDecl> _134131_decl) {
	jule::Bool _13429_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13429_cycleRisk;
	});;
	jule::Ptr<_1ce14cbc7_TypeKind> _134617_elem = nullptr;;
	if ((!(_1cdec392c_IsUnsafe(_134131_decl.ptr())))) {
		_134617_elem=_1ce167230_checkDecl(_self_, &((*_134131_decl.alloc)._field_Elem));
		return _1ce164e75_buildPtrFromType(_self_, &(_134617_elem));;
	};
	return jule::new_ptr<_1ce15ca94_Ptr>(_1ce15ca94_Ptr{._field_Elem=_134617_elem});;
}



inline jule::Ptr<_1ce159ca0_Slc> _1ce165607_buildSlc(_1ce15ea85_typeChecker* _self_, jule::Ptr<_1cdec2ec0_SlcTypeDecl> _135831_decl) {
	jule::Bool _13599_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13599_cycleRisk;
	});;
	jule::Ptr<_1ce14cbc7_TypeKind> _136313_elem = _1ce167230_checkDecl(_self_, &((*(_135831_decl))._field_Elem));;
	{
		
		if ((_136313_elem == nullptr)) {
			_case_begin_1b85cde71:;
			{
				return nullptr;;
			}
		}
		else if (((_1ce1510e8_Arr(_136313_elem.ptr()) != nullptr) && (*(_1ce1510e8_Arr(_136313_elem)))._field_Auto)) {
			_case_begin_1b85ce009:;
			{
				_1ce1602c2_pushErr(_self_, (*((*_135831_decl.alloc)._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b85cde1b:;
	};
	return jule::new_ptr<_1ce159ca0_Slc>(_1ce159ca0_Slc{._field_Elem=_136313_elem});;
}



inline jule::Ptr<_1ce15c0c1_Arr> _1ce165948_buildArr(_1ce15ea85_typeChecker* _self_, jule::Ptr<_1cdec3d5b_ArrTypeDecl> _137931_decl) {
	jule::I32 _138013_n = 0LL;;
	if ((!(_1cdec41be_AutoSized(_137931_decl.ptr())))) {
		jule::Ptr<_1ce11bc0c_Data> _138317_size = _1ce13bb94_evalExpr(_1ce09b373_eval((*(_self_))._field_s, (*(_self_))._field_lookup), (*_137931_decl.alloc)._field_Size);;
		if ((_138317_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1ce11c614_IsConst(_138317_size.ptr())))) {
			_1ce1602c2_pushErr(_self_, (*((*_137931_decl.alloc)._field_Size))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1ce150328_Prim((*(_138317_size))._field_Kind.ptr()) == nullptr) || (!(_22be15502_IsInt((*(_1ce150328_Prim((*(_138317_size))._field_Kind)))._field_Kind))))) {
			_1ce1602c2_pushErr(_self_, (*((*_137931_decl.alloc)._field_Size))._field_Token, jule::Str::lit("array size must be integer", 26), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138013_n=static_cast<jule::I32>(_22be18813_AsI64((*(_138317_size))._field_Constant.ptr()));
		if ((_138013_n < 0LL)) {
			_1ce1602c2_pushErr(_self_, (*((*_137931_decl.alloc)._field_Elem))._field_Token, jule::Str::lit("array size must be positive integer", 35), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _140117_max = _22be11564_MaxI(jule::Str::lit("int", 3));;
			if (((_22be0943b_BitSize != 64LL) && (static_cast<jule::I64>(_138013_n) > _140117_max))) {
				_1ce1602c2_pushErr(_self_, (*((*_137931_decl.alloc)._field_Size))._field_Token, jule::Str::lit("array with size @ overflows limit (@) of the system", 51), jule::Slice<jule::Any>::make({jule::Any(_1ce149113_constoa(&((*(_138317_size))._field_Constant)), &__jule_any_type4),jule::Any(_22be07cdb_FmtInt(_140117_max, 10LL), &__jule_any_type4)}));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1ce14cbc7_TypeKind> _141013_elem = _1ce167230_checkDecl(_self_, &((*_137931_decl.alloc)._field_Elem));;
	{
		
		if ((_141013_elem == nullptr)) {
			_case_begin_1b85d8aa2:;
			{
				return nullptr;;
			}
		}
		else if (((_1ce1510e8_Arr(_141013_elem.ptr()) != nullptr) && (*(_1ce1510e8_Arr(_141013_elem)))._field_Auto)) {
			_case_begin_1b85d8b4b:;
			{
				_1ce1602c2_pushErr(_self_, (*((*_137931_decl.alloc)._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b85d6eac:;
	};
	return jule::new_ptr<_1ce15c0c1_Arr>(_1ce15c0c1_Arr{._field_Auto=_1cdec41be_AutoSized(_137931_decl), ._field_N=_138013_n, ._field_Elem=_141013_elem});;
}



inline jule::Ptr<_1ce15b444_Map> _1ce165c89_buildMap(_1ce15ea85_typeChecker* _self_, jule::Ptr<_1cdec45a9_MapTypeDecl> _142831_decl) {
	jule::Bool _14299_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14299_cycleRisk;
	});;
	jule::Ptr<_1ce14cbc7_TypeKind> _143313_key = _1ce167230_checkDecl(_self_, &((*(_142831_decl))._field_Key));;
	if ((_143313_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ce14cbc7_TypeKind> _143813_val = _1ce167230_checkDecl(_self_, &((*_142831_decl.alloc)._field_Val));;
	if ((_143813_val == nullptr)) {
		return nullptr;;
	};
	if ((_1ce150acb_Enum(_143813_val.ptr()) != nullptr)) {
		_1ce1602c2_pushErr(_self_, (*((*_142831_decl.alloc)._field_Val))._field_Token, jule::Str::lit("maps do not support enums as map key type", 41), jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1ce15b444_Map>(_1ce15b444_Map{._field_Key=_143313_key, ._field_Val=_143813_val});;
}



inline jule::Ptr<_1ce15a894_Tuple> _1ce1660ca_buildTuple(_1ce15ea85_typeChecker* _self_, jule::Ptr<_1cdec32bc_TupleTypeDecl> _145233_decl) {
	jule::Slice<jule::Ptr<_1ce14cbc7_TypeKind>> _145313_types = jule::Slice<jule::Ptr<_1ce14cbc7_TypeKind>>::alloc(0LL, (*(_145233_decl))._field_Types.len());;
	{
		auto expr = &((*_145233_decl.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b85e00e7:;
		if (it != expr_end) {
			jule::Ptr<_1cdec1a90_TypeDecl> _145421_t = *it;
			{
				jule::Ptr<_1ce14cbc7_TypeKind> _145517_kind = _1ce167230_checkDecl(_self_, &(_145421_t));;
				if ((_145517_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1ce14cbc7_TypeKind>> &__jule_push_dest = _145313_types; __jule_push_dest.push(_145517_kind); };
			}
			_iter_next_1b85e00e7:;
			++it;
			goto _iter_begin_1b85e00e7;
		}
		_iter_end_1b85e00e7:;
	};
	return jule::new_ptr<_1ce15a894_Tuple>(_1ce15a894_Tuple{._field_Types=_145313_types});;
}



inline jule::Bool _1ce16641b_checkFuncTypes(_1ce15ea85_typeChecker* _self_, jule::Ptr<_1ce00a832_FnIns>* _146538_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_146538_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b85e1b32:;
		if (it != expr_end) {
			jule::Ptr<_1ce009886_ParamIns> _146621_p = *it;
			{
				(*(_146621_p))._field_Kind=_1ce166dde_build(_self_, &((*((*((*((*_146621_p.alloc)._field_Decl))._field_Kind))._field_Decl))._field_Kind));
				__jule_func_result=((*_146621_p.alloc)._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1ce09ea19_checkFnParamKind((*(_self_))._field_s, &(_146621_p));
			}
			_iter_next_1b85e1b32:;
			++it;
			goto _iter_begin_1b85e1b32;
		}
		_iter_end_1b85e1b32:;
	};
	if ((!(_1ce007da1_IsVoid((*((*(_146538_f))))._field_Decl.ptr())))) {
		(*((*(_146538_f))))._field_Result=_1ce166dde_build(_self_, &((*(*((*((*(*((*(_146538_f))))._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl.alloc)._field_Kind));
		__jule_func_result = ((*((*(_146538_f))))._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1ce00a832_FnIns> _1ce16675c_buildFunc(_1ce15ea85_typeChecker* _self_, jule::Ptr<_1cded3750_FnDecl> _148332_decl) {
	jule::Bool _14849_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14849_cycleRisk;
	});;
	if (((*(_148332_decl))._field_Generics.len() > 0LL)) {
		_1ce1602c2_pushErr(_self_, (*_148332_decl.alloc)._field_Token, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ce00792d_Fn> _149313_f = _1ce011e98_buildFunc(_148332_decl);;
	jule::I32 _14959_n = (*((*(_self_))._field_s))._field_errors.len();;
	_1ce0a8d0e_checkAnonFuncDecl((*(_self_))._field_s, &(_149313_f));
	if ((_14959_n != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1ce00a832_FnIns> _150113_ins = _1ce008e07_instanceForce(_149313_f);;
	(*(_150113_ins))._field_Anon=true;
	jule::Bool _15049_ok = _1ce16641b_checkFuncTypes(_self_, &(_150113_ins));;
	if ((!(_15049_ok))) {
		return nullptr;;
	};
	return _150113_ins;;
}



inline jule::Trait<_1ce14c721_Kind> _1ce166a9d_buildByNamespace(_1ce15ea85_typeChecker* _self_, jule::Ptr<_1cdec283d_NamespaceTypeDecl> _151239_decl) {
	jule::Str _15139_path = _1ce16971b_buildLinkPathByTokens(&((*(_151239_decl))._field_Idents));;
	jule::Ptr<_1ce06b0ac_ImportInfo> _151413_imp = _1ce16c7b8_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1ce16aaa2_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1ce06b0ac_ImportInfo>)>([=](jule::Ptr<_1ce06b0ac_ImportInfo> _151449_imp) mutable -> jule::Bool {
		if ((((*_151239_decl.alloc)._field_Idents.len() == 1LL) && ((*(_151449_imp))._field_Alias == _15139_path))) {
			return true;;
		};
		return (((*_151449_imp.alloc)._field_LinkPath == _15139_path) && _1ce06dbc5_isAccessibleViaSelection(_151449_imp));;
	}));;
	jule::Str _15219_selfIdent = jule::Str::lit("self", 4);;
	if (((_151413_imp == nullptr) || (!(_1ce06d5ed_isLookupable(_151413_imp.ptr(), &(_15219_selfIdent)))))) {
		_1ce1602c2_pushErr(_self_, (*_151239_decl.alloc)._field_Idents[0LL], jule::Str::lit("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_15139_path, &__jule_any_type4)}));
		return nullptr;;
	};
	_1ce1606bd_disallowBuiltin(_self_);
	jule::Trait<_1ce16c7b8_Lookup> _152813_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1ce16c7b8_Lookup>(_151413_imp, 1);
	jule::Ptr<_1ce14cbc7_TypeKind> _153013_kind = _1ce167230_checkDecl(_self_, &((*_151239_decl.alloc)._field_Kind));;
	(*(_self_))._field_lookup=_152813_lookup;
	_1ce1604c0_allowBuiltin(_self_);
	return jule::Trait<_1ce14c721_Kind>(_153013_kind, 19);;
}



inline jule::Ptr<_1ce14cbc7_TypeKind> _1ce166dde_build(_1ce15ea85_typeChecker* _self_, jule::Any* _153629_declKind) {
	jule::Trait<_1ce14c721_Kind> _153717_kind = nullptr;;
	{
		auto &_match_expr{ (*(_153629_declKind)) };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1b8601933:;
			{
				jule::Trait<_1ce14c721_Kind> _154017_t = _1ce164161_buildIdent(_self_, (*(_153629_declKind)).cast_ptr<_1cdec219a_IdentTypeDecl>(&__jule_any_type20));;
				if ((_154017_t != nullptr)) {
					_153717_kind=_154017_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1b8600d61:;
			{
				jule::Trait<_1ce14c721_Kind> _154517_t = _1ce1644a2_buildSubIdent(_self_, (*(_153629_declKind)).cast_ptr<_1cdec2464_SubIdentTypeDecl>(&__jule_any_type87));;
				if ((_154517_t != nullptr)) {
					_153717_kind=_154517_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1b8600eb5:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ce1592cc_Sptr> _155117_t = _1ce164b34_buildSptr(_self_, (*(_153629_declKind)).cast_ptr<_1cdec2b3a_SptrTypeDecl>(&__jule_any_type72));;
				if ((_155117_t != nullptr)) {
					_153717_kind=jule::Trait<_1ce14c721_Kind>(_155117_t, 21);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b860102b:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ce15ca94_Ptr> _155717_t = _1ce1652b6_buildPtr(_self_, (*(_153629_declKind)).cast_ptr<_1cdec35b9_PtrTypeDecl>(&__jule_any_type71));;
				if ((_155717_t != nullptr)) {
					_153717_kind=jule::Trait<_1ce14c721_Kind>(_155717_t, 26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1b8601092:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ce159ca0_Slc> _156317_t = _1ce165607_buildSlc(_self_, (*(_153629_declKind)).cast_ptr<_1cdec2ec0_SlcTypeDecl>(&__jule_any_type70));;
				if ((_156317_t != nullptr)) {
					_153717_kind=jule::Trait<_1ce14c721_Kind>(_156317_t, 22);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1b8601108:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ce15c0c1_Arr> _156917_t = _1ce165948_buildArr(_self_, (*(_153629_declKind)).cast_ptr<_1cdec3d5b_ArrTypeDecl>(&__jule_any_type69));;
				if ((_156917_t != nullptr)) {
					_153717_kind=jule::Trait<_1ce14c721_Kind>(_156917_t, 25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1b860116e:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ce15b444_Map> _157517_t = _1ce165c89_buildMap(_self_, (*(_153629_declKind)).cast_ptr<_1cdec45a9_MapTypeDecl>(&__jule_any_type73));;
				if ((_157517_t != nullptr)) {
					_153717_kind=jule::Trait<_1ce14c721_Kind>(_157517_t, 24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1b86011d5:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ce15a894_Tuple> _158117_t = _1ce1660ca_buildTuple(_self_, (*(_153629_declKind)).cast_ptr<_1cdec32bc_TupleTypeDecl>(&__jule_any_type74));;
				if ((_158117_t != nullptr)) {
					_153717_kind=jule::Trait<_1ce14c721_Kind>(_158117_t, 23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b86019ee:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ce00a832_FnIns> _158717_t = _1ce16675c_buildFunc(_self_, (*(_153629_declKind)).cast_ptr<_1cded3750_FnDecl>(&__jule_any_type14));;
				if ((_158717_t != nullptr)) {
					_153717_kind=jule::Trait<_1ce14c721_Kind>(_158717_t, 1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1b8601a65:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait<_1ce14c721_Kind> _159317_t = _1ce166a9d_buildByNamespace(_self_, (*(_153629_declKind)).cast_ptr<_1cdec283d_NamespaceTypeDecl>(&__jule_any_type91));;
				if ((_159317_t != nullptr)) {
					_153717_kind=_159317_t;
				};
			}
		}
		else {
			_case_begin_1b8600e4e:;
			{
				_1ce1602c2_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b8600de9:;
	};
	if ((_153717_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _153717_kind };
		
		if (_match_expr.type_is(true, 19)) {
			_case_begin_1b860eda3:;
			{
				return _153717_kind.cast_ptr<_1ce14cbc7_TypeKind>(19);;
			}
		}
		else {
			_case_begin_1b8601dd9:;
			{
				jule::Ptr<_1ce14cbc7_TypeKind> _160817_tk = jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=_153717_kind});;
				{
					auto &_match_expr{ _153717_kind };
					
					if (_match_expr.type_is(true, 20)) {
						_case_begin_1b860d29c:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_1ce14cbc7_TypeKind>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_160817_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, 0)) {
						_case_begin_1b860d126:;
						{
							jule::Ptr<_1cdee571d_StructIns> _161517_s = _153717_kind.cast_ptr<_1cdee571d_StructIns>(0);;
							if ((((*(_161517_s))._field_Decl != nullptr) && (*(*_161517_s.alloc)._field_Decl.alloc)._field_Binded)) {
								(*(_160817_tk))._field_BindIdent=(*(*_161517_s.alloc)._field_Decl.alloc)._field_Ident;
							};
						}
					}
					_match_end_1b860d247:;
				};
				return _160817_tk;;
			}
		}
		_match_end_1b860c411:;
	};
}



inline jule::Ptr<_1ce14cbc7_TypeKind> _1ce167230_checkDecl(_1ce15ea85_typeChecker* _self_, jule::Ptr<_1cdec1a90_TypeDecl>* _162433_decl) {
	jule::Ptr<_1cdeab4b4_Token> _162613_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*((*(_162433_decl))))._field_Token;
	jule::Ptr<_1ce14cbc7_TypeKind> _162913_kind = _1ce166dde_build(_self_, &((*((*(_162433_decl))))._field_Kind));;
	(*(_self_))._field_errorToken=_162613_errorToken;
	return _162913_kind;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce15ea85_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "cycleRisk:" << _Src._field_cycleRisk << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1ce167b7b_prim(jule::Str* _165121_ident, jule::Ptr<_1ce1557a1_Prim> _165133_t) {
	return ((*(_165133_t))._field_Kind == (*(_165121_ident)));;
}



inline jule::Bool static__1ce168000_exist(jule::Str* _165522_ident, jule::Ptr<_1ce14cbc7_TypeKind>* _165539_k) {
	{
		
		if ((_1ce150328_Prim((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1b8614bdd:;
			{
				return static__1ce167b7b_prim(_165522_ident, _1ce150328_Prim((*(_165539_k)).ptr()));;
			}
		}
		else if ((_1ce1505ae_Sptr((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1b8614c65:;
			{
				jule::Ptr<_1ce1592cc_Sptr> _166017_sptr = _1ce1505ae_Sptr((*(_165539_k)).ptr());;
				return static__1ce168000_exist(_165522_ident, &((*(_166017_sptr))._field_Elem));;
			}
		}
		else if ((_1ce150845_Ptr((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1b8614cdc:;
			{
				jule::Ptr<_1ce15ca94_Ptr> _166317_ptr = _1ce150845_Ptr((*(_165539_k)).ptr());;
				return static__1ce168000_exist(_165522_ident, &((*(_166317_ptr))._field_Elem));;
			}
		}
		else if ((_1ce15137e_Slc((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1b8614d64:;
			{
				jule::Ptr<_1ce159ca0_Slc> _166617_slc = _1ce15137e_Slc((*(_165539_k)).ptr());;
				return static__1ce168000_exist(_165522_ident, &((*(_166617_slc))._field_Elem));;
			}
		}
		else if ((_1ce1510e8_Arr((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1b861501d:;
			{
				jule::Ptr<_1ce15c0c1_Arr> _166917_arr = _1ce1510e8_Arr((*(_165539_k)).ptr());;
				return static__1ce168000_exist(_165522_ident, &((*(_166917_arr))._field_Elem));;
			}
		}
		else if ((_1ce151db8_Map((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1b8615084:;
			{
				jule::Ptr<_1ce15b444_Map> _167217_m = _1ce151db8_Map((*(_165539_k)).ptr());;
				return (static__1ce168000_exist(_165522_ident, &((*(_167217_m))._field_Key)) || static__1ce168000_exist(_165522_ident, &((*_167217_m.alloc)._field_Val)));;
			}
		}
		else if ((_1ce15189b_Struct((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1b86150ea:;
			{
				jule::Ptr<_1cdee571d_StructIns> _167617_s = _1ce15189b_Struct((*(_165539_k)).ptr());;
				{
					auto expr = &((*(_167617_s))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b861c1e0:;
					if (it != expr_end) {
						jule::Ptr<_1ce14b2e1_InsGeneric> _167725_g = *it;
						{
							if (static__1ce168000_exist(_165522_ident, &((*(_167725_g))._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1b861c1e0:;
						++it;
						goto _iter_begin_1b861c1e0;
					}
					_iter_end_1b861c1e0:;
				};
				return false;;
			}
		}
		else if ((_1ce151615_Fn((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1b8615172:;
			{
				jule::Ptr<_1ce00a832_FnIns> _168417_f = _1ce151615_Fn((*(_165539_k)).ptr());;
				{
					auto expr = &((*(_168417_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b861dd18:;
					if (it != expr_end) {
						jule::Ptr<_1ce009886_ParamIns> _168525_p = *it;
						{
							if (_1ce006575_IsSelf((*(_168525_p))._field_Decl.ptr())) {
								goto _iter_next_1b861dd18;
							};
							if (static__1ce168000_exist(_165522_ident, &((*_168525_p.alloc)._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1b861dd18:;
						++it;
						goto _iter_begin_1b861dd18;
					}
					_iter_end_1b861dd18:;
				};
				if (((*_168417_f.alloc)._field_Result != nullptr)) {
					return static__1ce168000_exist(_165522_ident, &((*_168417_f.alloc)._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1ce15214e_Tup((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1b86151e9:;
			{
				jule::Ptr<_1ce15a894_Tuple> _169817_tup = _1ce15214e_Tup((*(_165539_k)).ptr());;
				{
					auto expr = &((*(_169817_tup))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b8621634:;
					if (it != expr_end) {
						jule::Ptr<_1ce14cbc7_TypeKind> _169925_t = *it;
						{
							if (static__1ce168000_exist(_165522_ident, &(_169925_t))) {
								return true;;
							};
						}
						_iter_next_1b8621634:;
						++it;
						goto _iter_begin_1b8621634;
					}
					_iter_end_1b8621634:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1b8614abc:;
			{
				return false;;
			}
		}
		_match_end_1b86149bd:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ce16773b_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b57310c6_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b5776d31_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1b5777d43_stop(_1b57776c2_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1b57780c9_stopped(_1b57776c2_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1b5778360_finished(_1b57776c2_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1b57785e6_isLastSt(_1b57776c2_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1b5778959_pushErr(_1b57776c2_scopeParser* _self_, jule::Ptr<_1cdeab4b4_Token> _18926_token, jule::Str _18941_fmt) {
	_1b5796438_pushErr((*(_self_))._field_p.ptr(), _18926_token, _18941_fmt, jule::Slice<jule::Any>());
}



inline void _1b5778cbc_pushSuggestion(_1b57776c2_scopeParser* _self_, jule::Str _19433_fmt, jule::Slice<jule::Any> _19446_args) {
	_1b579679b_pushSuggestion((*(_self_))._field_p.ptr(), _19433_fmt, _19446_args);
}



inline void _1b5779075_insertAsNext(_1b57776c2_scopeParser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _19836_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1b5776d31_stmt>(_1b5776d31_stmt{._field_tokens=(*(_19836_tokens)), });
}



inline jule::Ptr<_1b5776d31_stmt> _1b577930b_next(_1b57776c2_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1cded1ab1_ScopeTree> _1b5779707_buildScope(_1b57776c2_scopeParser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _20834_tokens, jule::Ptr<_1cdeab4b4_Token> _20856_end) {
	jule::Ptr<_1cded1ab1_ScopeTree> _20913_s = _1b5775aaa_newScope();;
	(*(_20913_s))._field_Parent=(*(_self_))._field_s;
	(*_20913_s.alloc)._field_End=_20856_end;
	_1b57776c2_scopeParser _21213_ssp = _1b57776c2_scopeParser{._field_p=(*(_self_))._field_p, };;
	_1b578457a_build(&_21213_ssp, _20834_tokens, &(_20913_s));
	return _20913_s;;
}



inline jule::Ptr<_1cded490a_VarDecl> _1b5779a48_buildVarSt(_1b57776c2_scopeParser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _21934_tokens) {
	jule::Ptr<_1cded490a_VarDecl> _22013_v = _1b57992b5_buildVar((*(_self_))._field_p, (*(_21934_tokens)));;
	(*(_22013_v))._field_Scope=(*(_self_))._field_s;
	return _22013_v;;
}



inline jule::Ptr<_1cded4cd4_RetSt> _1b5779d89_buildRetSt(_1b57776c2_scopeParser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _22533_tokens) {
	jule::Ptr<_1cded4cd4_RetSt> _22613_st = jule::new_ptr<_1cded4cd4_RetSt>(_1cded4cd4_RetSt{._field_Token=_22533_tokens[0LL], });;
	if ((_22533_tokens.len() > 1LL)) {
		(_22533_tokens).mut_slice(1LL);;
		(*(_22613_st))._field_Expr=_1b5796adc_buildExpr((*(_self_))._field_p, &(_22533_tokens));
	};
	return _22613_st;;
}



inline jule::Ptr<_1cded5554_Iter> _1b577a1ca_buildWhileNextIter(_1b57776c2_scopeParser* _self_, jule::Ptr<_1b5776d31_stmt>* _23642_s) {
	jule::Ptr<_1cded5554_Iter> _23713_it = jule::new_ptr<_1cded5554_Iter>(_1cded5554_Iter{._field_Token=(*((*(_23642_s))))._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _24013_tokens = (*((*(_23642_s))))._field_tokens.slice(1LL);;
	jule::Ptr<_1cded5d7e_WhileKind> _24113_kind = jule::new_ptr<_1cded5d7e_WhileKind>();;
	if ((_24013_tokens.len() > 0LL)) {
		(*_24113_kind.alloc)._field_Expr=_1b5796adc_buildExpr((*(_self_))._field_p, &(_24013_tokens));
	};
	if (_1b57785e6_isLastSt(_self_)) {
		_1b5778959_pushErr(_self_, (*(_23713_it))._field_Token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	_24013_tokens=(*(_1b577930b_next(_self_)))._field_tokens;
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _25313_stTokens = _1b5790e16_getBlockExpr(&(_24013_tokens));;
	if ((_25313_stTokens.len() > 0LL)) {
		jule::Ptr<_1b5776d31_stmt> _25517_stmt = jule::new_ptr<_1b5776d31_stmt>(_1b5776d31_stmt{._field_tokens=_25313_stTokens, ._field_terminated=(*((*(_23642_s))))._field_terminated});;
		(*_24113_kind.alloc)._field_NextToken=_25313_stTokens[0LL];
		(*_24113_kind.alloc)._field_Next=_1b5784217_buildSt(_self_, &(_25517_stmt));
	};
	jule::I32 _26313_i = _25313_stTokens.len();;
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _26413_blockTokens = _1b5794139_range(&(_26313_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_24013_tokens));;
	if ((_26413_blockTokens == nullptr)) {
		_1b5777d43_stop(_self_);
		_1b5778959_pushErr(_self_, (*_23713_it.alloc)._field_Token, jule::Str::lit("body is not exist", 17));
		_1b5778cbc_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_26313_i < _24013_tokens.len())) {
		_1b5778959_pushErr(_self_, _24013_tokens[_26313_i], jule::Str::lit("invalid syntax", 14));
	};
	(*_23713_it.alloc)._field_Scope=_1b5779707_buildScope(_self_, &(_26413_blockTokens), _24013_tokens[(_26313_i - 1LL)]);
	(*_23713_it.alloc)._field_Kind=jule::Any(_24113_kind, &__jule_any_type37);
	return _23713_it;;
}



inline jule::Ptr<_1cded5d7e_WhileKind> _1b577a51b_buildWhileIterKind(_1b57776c2_scopeParser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _28142_tokens) {
	return jule::new_ptr<_1cded5d7e_WhileKind>(_1cded5d7e_WhileKind{._field_Expr=_1b5796adc_buildExpr((*(_self_))._field_p, _28142_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>> _1b577a85c_getRangeKindKeysTokens(_1b57776c2_scopeParser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _28746_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>> _28813_vars;;
	jule::Slice<_22a93672d_Log> _28819_errs;;
	({
		__jule_tuple_ssx_1cdeab4b4_Token__jule_tuple_s_22a93672d_Log __jule_assign_result = _1b57948a9_parts(_28746_toks, static_cast<jule::U32>(5LLU), true);
		_28813_vars = __jule_assign_result.__jule_result_arg0;
		_28819_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_28819_errs);
	return _28813_vars;;
}



inline jule::Ptr<_1cded490a_VarDecl> _1b577ab9d_buildRangeKindKey(_1b57776c2_scopeParser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _29341_tokens) {
	if (((*(_29341_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1cded490a_VarDecl> _29713_key = jule::new_ptr<_1cded490a_VarDecl>(_1cded490a_VarDecl{._field_Token=(*(_29341_tokens))[0LL], ._field_Setter=(*(_29341_tokens))[0LL], });;
	if (((*((*(_29713_key))._field_Token))._field_Id == static_cast<jule::U32>(32LLU))) {
		(*_29713_key.alloc)._field_Mutable=true;
		if (((*(_29341_tokens)).len() == 1LL)) {
			_1b5778959_pushErr(_self_, (*_29713_key.alloc)._field_Token, jule::Str::lit("invalid syntax", 14));
		};
		(*_29713_key.alloc)._field_Token=(*(_29341_tokens))[1LL];
	} else if (((*(_29341_tokens)).len() > 1LL)) {
		_1b5778959_pushErr(_self_, (*(_29341_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	if (((*((*(_29713_key))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1b5778959_pushErr(_self_, (*_29713_key.alloc)._field_Token, jule::Str::lit("invalid syntax", 14));
		_1b5778cbc_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_29713_key.alloc)._field_Ident=(*(*_29713_key.alloc)._field_Token.alloc)._field_Kind;
	return _29713_key;;
}



inline jule::Slice<jule::Ptr<_1cded490a_VarDecl>> _1b577aede_buildRangeKindKeys(_1b57776c2_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>>* _31942_parts) {
	jule::Slice<jule::Ptr<_1cded490a_VarDecl>> _32017_keys = nullptr;;
	{
		auto expr = _31942_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b81ab675:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _32121_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_1cded490a_VarDecl>> &__jule_push_dest = _32017_keys; __jule_push_dest.push(_1b577ab9d_buildRangeKindKey(_self_, &(_32121_tokens))); };
			}
			_iter_next_1b81ab675:;
			++it;
			goto _iter_begin_1b81ab675;
		}
		_iter_end_1b81ab675:;
	};
	return _32017_keys;;
}



inline void _1b577b352_setupRangeKindKeysPlain(_1b57776c2_scopeParser* _self_, jule::Ptr<_1cded6786_RangeKind>* _32747_rng, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _32769_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>> _32813_keyTokens = _1b577a85c_getRangeKindKeysTokens(_self_, _32769_tokens);;
	if ((_32813_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_32813_keyTokens.len() > 2LL)) {
		_1b5778959_pushErr(_self_, (*((*(_32747_rng))))._field_InToken, jule::Str::lit("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1cded490a_VarDecl>> _33513_keys = _1b577aede_buildRangeKindKeys(_self_, &(_32813_keyTokens));;
	(*((*(_32747_rng))))._field_KeyA=_33513_keys[0LL];
	if ((_33513_keys.len() > 1LL)) {
		(*((*(_32747_rng))))._field_KeyB=_33513_keys[1LL];
	};
}



inline void _1b577b6b5_setupRangeKindKeysExplicit(_1b57776c2_scopeParser* _self_, jule::Ptr<_1cded6786_RangeKind>* _34250_rng, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _34272_tokens) {
	jule::I32 _34313_i = 0LL;;
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _34413_rang = _1b5794139_range(&(_34313_i), static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), _34272_tokens);;
	if ((_34313_i < (*(_34272_tokens)).len())) {
		_1b5778959_pushErr(_self_, (*((*(_34250_rng))))._field_InToken, jule::Str::lit("invalid syntax", 14));
	};
	_1b577b352_setupRangeKindKeysPlain(_self_, _34250_rng, &(_34413_rang));
}



inline void _1b577ba28_setupRangeKindKeys(_1b57776c2_scopeParser* _self_, jule::Ptr<_1cded6786_RangeKind>* _35142_rng, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _35164_tokens) {
	if (((*((*(_35164_tokens))[0LL]))._field_Id == static_cast<jule::U32>(74LLU))) {
		_1b577b6b5_setupRangeKindKeysExplicit(_self_, _35142_rng, _35164_tokens);
		return;;
	};
	_1b577b352_setupRangeKindKeysPlain(_self_, _35142_rng, _35164_tokens);
}



inline jule::Ptr<_1cded6786_RangeKind> _1b577bece_buildRangeIterKind(_1b57776c2_scopeParser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _35942_var_tokens, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _36014_exprTokens, jule::Ptr<_1cdeab4b4_Token>* _36041_inToken) {
	jule::Ptr<_1cded6786_RangeKind> _36113_rng = jule::new_ptr<_1cded6786_RangeKind>(_1cded6786_RangeKind{._field_InToken=(*(_36041_inToken)), });;
	if (((*(_36014_exprTokens)).len() == 0LL)) {
		_1b5778959_pushErr(_self_, (*(_36113_rng))._field_InToken, jule::Str::lit("expression missing", 18));
		return _36113_rng;;
	};
	(*_36113_rng.alloc)._field_Expr=_1b5796adc_buildExpr((*(_self_))._field_p, _36014_exprTokens);
	if (((*(_35942_var_tokens)).len() > 0LL)) {
		_1b577ba28_setupRangeKindKeys(_self_, &(_36113_rng), _35942_var_tokens);
	};
	return _36113_rng;;
}



inline jule::Any _1b577c3ca_buildCommonIterKind(_1b57776c2_scopeParser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _37543_tokens, jule::Ptr<_1cdeab4b4_Token>* _37562_err_tok) {
	jule::I32 _37613_braceN = 0LL;;
	{
		auto expr = _37543_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b81b6042:;
		if (it != expr_end) {
			jule::I32 _37714_i = it - expr->begin();
			jule::Ptr<_1cdeab4b4_Token> _37721_tok = *it;
			{
				{
					auto &_match_expr{ (*(_37721_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1b81b69c1:;
						{
							(_37613_braceN)++;
							goto _iter_next_1b81b6042;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1b81b6d9a:;
						{
							(_37613_braceN)--;
						}
					}
					_match_end_1b81b6cbd:;
				};
				if ((_37613_braceN != 0LL)) {
					goto _iter_next_1b81b6042;
				};
				{
					auto &_match_expr{ (*(_37721_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(12LLU)) {
						_case_begin_1b81b7eab:;
						{
							jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _39421_declTokens = (*(_37543_tokens)).slice(0LL, _37714_i);;
							jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _39521_exprTokens = (*(_37543_tokens)).slice((_37714_i + 1LL));;
							return jule::Any(_1b577bece_buildRangeIterKind(_self_, &(_39421_declTokens), &(_39521_exprTokens), &(_37721_tok)), &__jule_any_type39);;
						}
					}
					_match_end_1b81b8594:;
				};
			}
			_iter_next_1b81b6042:;
			++it;
			_37714_i++;
			goto _iter_begin_1b81b6042;
		}
		_iter_end_1b81b6042:;
	};
	return jule::Any(_1b577a51b_buildWhileIterKind(_self_, _37543_tokens), &__jule_any_type37);;
}



inline jule::Ptr<_1cded5554_Iter> _1b577c71b_buildCommonIter(_1b57776c2_scopeParser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _40238_tokens) {
	jule::Ptr<_1cded5554_Iter> _40313_it = jule::new_ptr<_1cded5554_Iter>(_1cded5554_Iter{._field_Token=_40238_tokens[0LL], });;
	(_40238_tokens).mut_slice(1LL);;
	if ((_40238_tokens.len() == 0LL)) {
		_1b5777d43_stop(_self_);
		_1b5778959_pushErr(_self_, (*(_40313_it))._field_Token, jule::Str::lit("body is not exist", 17));
		_1b5778cbc_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _41313_exprTokens = _1b5790e16_getBlockExpr(&(_40238_tokens));;
	if ((_41313_exprTokens.len() > 0LL)) {
		(*_40313_it.alloc)._field_Kind=_1b577c3ca_buildCommonIterKind(_self_, &(_41313_exprTokens), &((*_40313_it.alloc)._field_Token));
	};
	jule::I32 _41713_i = _41313_exprTokens.len();;
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _41813_scopeTokens = _1b5794139_range(&(_41713_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_40238_tokens));;
	if ((_41813_scopeTokens == nullptr)) {
		_1b5777d43_stop(_self_);
		_1b5778959_pushErr(_self_, (*_40313_it.alloc)._field_Token, jule::Str::lit("body is not exist", 17));
		_1b5778cbc_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_41713_i < _40238_tokens.len())) {
		_1b5778959_pushErr(_self_, _40238_tokens[_41713_i], jule::Str::lit("invalid syntax", 14));
	};
	(*_40313_it.alloc)._field_Scope=_1b5779707_buildScope(_self_, &(_41813_scopeTokens), _40238_tokens[(_41713_i - 1LL)]);
	return _40313_it;;
}



inline jule::Ptr<_1cded5554_Iter> _1b577ca5c_buildIterSt(_1b57776c2_scopeParser* _self_, jule::Ptr<_1b5776d31_stmt>* _43235_st) {
	if ((*((*(_43235_st))))._field_terminated) {
		return _1b577a1ca_buildWhileNextIter(_self_, _43235_st);;
	};
	return _1b577c71b_buildCommonIter(_self_, (*((*(_43235_st))))._field_tokens);;
}



inline jule::Ptr<_1cded6b60_BreakSt> _1b577cd9d_buildBreakSt(_1b57776c2_scopeParser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _43936_tokens) {
	jule::Ptr<_1cded6b60_BreakSt> _44013_brk = jule::new_ptr<_1cded6b60_BreakSt>(_1cded6b60_BreakSt{._field_Token=(*(_43936_tokens))[0LL], });;
	if (((*(_43936_tokens)).len() > 1LL)) {
		if (((*((*(_43936_tokens))[1LL]))._field_Id != static_cast<jule::U32>(1LLU))) {
			_1b5778959_pushErr(_self_, (*(_43936_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_1b5778cbc_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_44013_brk))._field_Label=(*(_43936_tokens))[1LL];
			if (((*(_43936_tokens)).len() > 2LL)) {
				_1b5778959_pushErr(_self_, (*(_43936_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _44013_brk;;
}



inline jule::Ptr<_1cded7039_ContSt> _1b577d1de_buildContSt(_1b57776c2_scopeParser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _45735_tokens) {
	jule::Ptr<_1cded7039_ContSt> _45813_cont = jule::new_ptr<_1cded7039_ContSt>(_1cded7039_ContSt{._field_Token=(*(_45735_tokens))[0LL], });;
	if (((*(_45735_tokens)).len() > 1LL)) {
		if (((*((*(_45735_tokens))[1LL]))._field_Id != static_cast<jule::U32>(1LLU))) {
			_1b5778959_pushErr(_self_, (*(_45735_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_1b5778cbc_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_45813_cont))._field_Label=(*(_45735_tokens))[1LL];
			if (((*(_45735_tokens)).len() > 2LL)) {
				_1b5778959_pushErr(_self_, (*(_45735_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _45813_cont;;
}



inline jule::Ptr<_1cded74e0_If> _1b577d530_buildIf(_1b57776c2_scopeParser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _47531_tokens) {
	jule::Ptr<_1cded74e0_If> _47613_model = jule::new_ptr<_1cded74e0_If>(_1cded74e0_If{._field_Token=(*(_47531_tokens))[0LL], });;
	((*(_47531_tokens))).mut_slice(1LL);;
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _48013_exprTokens = _1b5790e16_getBlockExpr(_47531_tokens);;
	jule::I32 _48113_i = 0LL;;
	if ((_48013_exprTokens.len() == 0LL)) {
		_1b5778959_pushErr(_self_, (*(_47613_model))._field_Token, jule::Str::lit("expression missing", 18));
	} else {
		_48113_i=_48013_exprTokens.len();
	};
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _48713_scopeTokens = _1b5794139_range(&(_48113_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _47531_tokens);;
	if ((_48713_scopeTokens == nullptr)) {
		_1b5777d43_stop(_self_);
		_1b5778959_pushErr(_self_, (*(_47613_model))._field_Token, jule::Str::lit("body is not exist", 17));
		_1b5778cbc_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1cdeab4b4_Token> _49413_end = (*(_47531_tokens))[(_48113_i - 1LL)];;
	if ((_48113_i < (*(_47531_tokens)).len())) {
		if (((*((*(_47531_tokens))[_48113_i]))._field_Id == static_cast<jule::U32>(14LLU))) {
			((*(_47531_tokens))).mut_slice(_48113_i);;
		} else {
			_1b5778959_pushErr(_self_, (*(_47531_tokens))[_48113_i], jule::Str::lit("invalid syntax", 14));
			(*(_47531_tokens))=nullptr;
		};
	};
	(*_47613_model.alloc)._field_Expr=_1b5796adc_buildExpr((*(_self_))._field_p, &(_48013_exprTokens));
	(*_47613_model.alloc)._field_Scope=_1b5779707_buildScope(_self_, &(_48713_scopeTokens), _49413_end);
	return _47613_model;;
}



inline jule::Ptr<_1cded78b9_Else> _1b577d871_buildElse(_1b57776c2_scopeParser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _50833_tokens) {
	jule::Ptr<_1cded78b9_Else> _50913_els = jule::new_ptr<_1cded78b9_Else>(_1cded78b9_Else{._field_Token=(*(_50833_tokens))[0LL], });;
	((*(_50833_tokens))).mut_slice(1LL);;
	jule::I32 _51313_i = 0LL;;
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _51413_scopeTokens = _1b5794139_range(&(_51313_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _50833_tokens);;
	if ((_51413_scopeTokens == nullptr)) {
		if ((_51313_i < (*(_50833_tokens)).len())) {
			_1b5778959_pushErr(_self_, (*(_50913_els))._field_Token, jule::Str::lit("else's cannot have any expression", 33));
		} else {
			_1b5777d43_stop(_self_);
			_1b5778959_pushErr(_self_, (*(_50913_els))._field_Token, jule::Str::lit("body is not exist", 17));
			_1b5778cbc_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_51313_i < (*(_50833_tokens)).len())) {
		_1b5778959_pushErr(_self_, (*(_50833_tokens))[_51313_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_50913_els))._field_Scope=_1b5779707_buildScope(_self_, &(_51413_scopeTokens), (*(_50833_tokens))[(_51313_i - 1LL)]);
	return _50913_els;;
}



inline jule::Ptr<_1cded7d70_Conditional> _1b577dbb2_buildIfElseChain(_1b57776c2_scopeParser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _53239_tokens) {
	jule::Ptr<_1cded7d70_Conditional> _53313_chain = jule::new_ptr<_1cded7d70_Conditional>(_1cded7d70_Conditional{._field_Head=_1b577d530_buildIf(_self_, &(_53239_tokens)), });;
	if (((*(_53313_chain))._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53239_tokens.len() != 0LL)) {
		{
			if (((*(_53239_tokens[0LL]))._field_Id != static_cast<jule::U32>(14LLU))) {
				goto _iter_end_1b81d34b0;
			};
			if (((_53239_tokens.len() > 1LL) && ((*(_53239_tokens[1LL]))._field_Id == static_cast<jule::U32>(13LLU)))) {
				(_53239_tokens).mut_slice(1LL);;
				jule::Ptr<_1cded74e0_If> _54521_elif = _1b577d530_buildIf(_self_, &(_53239_tokens));;
				(*_53313_chain.alloc)._field_Tail=jule::append((*_53313_chain.alloc)._field_Tail,jule::Slice<jule::Ptr<_1cded74e0_If>>::make({_54521_elif}));
				goto _iter_next_1b81d34b0;
			};
			(*_53313_chain.alloc)._field_Default=_1b577d871_buildElse(_self_, &(_53239_tokens));
			goto _iter_end_1b81d34b0;
		}
	_iter_next_1b81d34b0:;
	}
	_iter_end_1b81d34b0:;;
	return _53313_chain;;
}



inline jule::Ptr<_1cdec5dc4_Expr> _1b577e003_buildCoCallSt(_1b57776c2_scopeParser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _55536_tokens) {
	jule::Ptr<_1cdeab4b4_Token> _5569_token = _55536_tokens[0LL];;
	(_55536_tokens).mut_slice(1LL);;
	jule::Ptr<_1cdec5dc4_Expr> _55813_e = _1b5796adc_buildExpr((*(_self_))._field_p, &(_55536_tokens));;
	if ((_55813_e == nullptr)) {
		return _55813_e;;
	};
	{
		auto &_match_expr{ (*(_55813_e))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1b81d8130:;
			{
				(*((*(_55813_e))._field_Kind.unsafe_cast_ptr<_1cdec9aed_FnCallExpr>()))._field_IsCo=true;
			}
		}
		else {
			_case_begin_1b81d7b24:;
			{
				_1b5778959_pushErr(_self_, _5569_token, jule::Str::lit("statement must have function call expression", 44));
			}
		}
		_match_end_1b81d7abe:;
	};
	return _55813_e;;
}



inline jule::Ptr<_1cdece54d_GotoSt> _1b577e344_buildGotoSt(_1b57776c2_scopeParser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _57135_tokens) {
	jule::Ptr<_1cdece54d_GotoSt> _57213_gt = jule::new_ptr<_1cdece54d_GotoSt>(_1cdece54d_GotoSt{._field_Token=(*(_57135_tokens))[0LL], });;
	if (((*(_57135_tokens)).len() == 1LL)) {
		_1b5778959_pushErr(_self_, (*(_57213_gt))._field_Token, jule::Str::lit("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if (((*(_57135_tokens)).len() > 2LL)) {
		_1b5778959_pushErr(_self_, (*(_57135_tokens))[2LL], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_1cdeab4b4_Token> _58113_identToken = (*(_57135_tokens))[1LL];;
	if (((*(_58113_identToken))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1b5778959_pushErr(_self_, _58113_identToken, jule::Str::lit("invalid syntax", 14));
		_1b5778cbc_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return _57213_gt;;
	};
	(*(_57213_gt))._field_Label=_58113_identToken;
	return _57213_gt;;
}



inline jule::Ptr<_1cdece84a_FallSt> _1b577e685_buildFallSt(_1b57776c2_scopeParser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _59135_tokens) {
	jule::Ptr<_1cdece84a_FallSt> _59213_fll = jule::new_ptr<_1cdece84a_FallSt>(_1cdece84a_FallSt{._field_Token=(*(_59135_tokens))[0LL]});;
	if (((*(_59135_tokens)).len() > 1LL)) {
		_1b5778959_pushErr(_self_, (*(_59135_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	return _59213_fll;;
}



inline jule::Ptr<_1cded85ac_TypeAliasDecl> _1b577e9c6_buildTypeAliasSt(_1b57776c2_scopeParser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _60140_tokens) {
	jule::Ptr<_1cded85ac_TypeAliasDecl> _60213_tad = _1b5798380_buildTypeAliasDecl((*(_self_))._field_p, _60140_tokens);;
	(*(_60213_tad))._field_Scope=(*(_self_))._field_s;
	return _60213_tad;;
}



inline void _1b577ee9e_pushCaseExpr(_1b57776c2_scopeParser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _60735_tokens, jule::Ptr<_1cdeab4b4_Token> _60757_token, jule::Bool _6089_typeMatch, jule::Slice<jule::Ptr<_1cdec5dc4_Expr>>* _60831_exprs) {
	if ((_60735_tokens.len() == 0LL)) {
		return;;
	};
	if (_6089_typeMatch) {
		jule::I32 _61317_i = 0LL;;
		jule::Ptr<_1cdec1a90_TypeDecl> _61417_t;;
		jule::Bool _61420_ok;;
		({
			__jule_tuple_x_1cdec1a90_TypeDecl__jule_tuple_bool __jule_assign_result = _1b579803e_buildType((*(_self_))._field_p, &(_60735_tokens), (&(_61317_i)), true);
			_61417_t = __jule_assign_result.__jule_result_arg0;
			_61420_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_61420_ok) {
			{ jule::Slice<jule::Ptr<_1cdec5dc4_Expr>> &__jule_push_dest = (*(_60831_exprs)); __jule_push_dest.push(jule::new_ptr<_1cdec5dc4_Expr>(_1cdec5dc4_Expr{._field_Token=_60735_tokens[0LL], ._field_End=_60735_tokens[(_60735_tokens.len() - 1LL)], ._field_Kind=jule::Any(_61417_t, &__jule_any_type89)})); };
			if ((_61317_i < _60735_tokens.len())) {
				_1b5778959_pushErr(_self_, _60735_tokens[_61317_i], jule::Str::lit("invalid syntax", 14));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_1cdec5dc4_Expr>> &__jule_push_dest = (*(_60831_exprs)); __jule_push_dest.push(_1b5796adc_buildExpr((*(_self_))._field_p, &(_60735_tokens))); };
}



inline __jule_tuple_sx_1cdec5dc4_Expr__jule_tuple_bool _1b5780455_buildCaseExprs(_1b57776c2_scopeParser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _63038_tokens, jule::Ptr<_1cdeab4b4_Token>* _63061_colon, jule::Bool _63076_typeMatch) {
	__jule_tuple_sx_1cdec5dc4_Expr__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::Ptr<_1cdec5dc4_Expr>> _63113_exprs = jule::Slice<jule::Ptr<_1cdec5dc4_Expr>>::alloc(0LL, 1LL);;
	jule::I32 _63213_braceN = 0LL;;
	jule::I32 _63313_j = 0LL;;
	{
		auto expr = _63038_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b81e3b74:;
		if (it != expr_end) {
			jule::I32 _63414_i = it - expr->begin();
			jule::Ptr<_1cdeab4b4_Token> _63421_tok = *it;
			{
				{
					auto &_match_expr{ (*(_63421_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1b81e5318:;
						{
							(_63213_braceN)++;
							goto _iter_next_1b81e3b74;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(75LLU) || _match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU)) {
						_case_begin_1b81e56e2:;
						{
							(_63213_braceN)--;
							goto _iter_next_1b81e3b74;
						}
					}
					_match_end_1b81e5615:;
				};
				if ((_63213_braceN != 0LL)) {
					goto _iter_next_1b81e3b74;
				};
				{
					
					if (((*(_63421_tok))._field_Id == static_cast<jule::U32>(66LLU))) {
						_case_begin_1b81e6d75:;
						{
							jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _65317_exprTokens = (*(_63038_tokens)).slice(_63313_j, _63414_i);;
							if ((_65317_exprTokens.len() == 0LL)) {
								_1b5778959_pushErr(_self_, _63421_tok, jule::Str::lit("expression missing", 18));
							} else {
								_1b577ee9e_pushCaseExpr(_self_, (*(_63038_tokens)).slice(_63313_j, _63414_i), _63421_tok, _63076_typeMatch, &(_63113_exprs));
							};
							_63313_j=(_63414_i + 1LL);
						}
					}
					else if (((*(_63421_tok))._field_Id == static_cast<jule::U32>(8LLU))) {
						_case_begin_1b81e6ddb:;
						{
							(*(_63061_colon))=_63421_tok;
							_1b577ee9e_pushCaseExpr(_self_, (*(_63038_tokens)).slice(_63313_j, _63414_i), _63421_tok, _63076_typeMatch, &(_63113_exprs));
							((*(_63038_tokens))).mut_slice((_63414_i + 1LL));;
							__jule_func_result.__jule_result_arg0 = _63113_exprs;
							__jule_func_result.__jule_result_arg1 = (((_63414_i - _63313_j) == 0LL) || (_63113_exprs.len() != 0LL));
							return __jule_func_result;;
						}
					}
					_match_end_1b81e6c65:;
				};
			}
			_iter_next_1b81e3b74:;
			++it;
			_63414_i++;
			goto _iter_begin_1b81e3b74;
		}
		_iter_end_1b81e3b74:;
	};
	_1b5778959_pushErr(_self_, (*(_63038_tokens))[0LL], jule::Str::lit("invalid syntax", 14));
	(*(_63038_tokens))=nullptr;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline jule::Ptr<_1cded1ab1_ScopeTree> _1b5780796_buildCaseScope(_1b57776c2_scopeParser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _67238_tokens) {
	jule::I32 _67313_n = 0LL;;
	for (;;) {
		{
			jule::I32 _67517_i = 0LL;;
			jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _67617_next;;
			({
				__jule_tuple_sx_1cdeab4b4_Token__jule_tuple_bool __jule_assign_result = _1b5776a01_skipSt(&(_67517_i), (*(_67238_tokens)).slice(_67313_n));
				_67617_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_67617_next.len() == 0LL)) {
				goto _iter_end_1b81ea97d;
			};
			jule::Ptr<_1cdeab4b4_Token> _68013_tok = _67617_next[0LL];;
			if (((*(_68013_tok))._field_Id != static_cast<jule::U32>(66LLU))) {
				_67313_n+=_67517_i;
				goto _iter_next_1b81ea97d;
			};
			jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _68517_scopeTokens = (*(_67238_tokens)).slice(0LL, _67313_n);;
			jule::Ptr<_1cded1ab1_ScopeTree> _68617_scope = _1b5779707_buildScope(_self_, &(_68517_scopeTokens), (*(_67238_tokens))[_67313_n]);;
			((*(_67238_tokens))).mut_slice(_67313_n);;
			return _68617_scope;;
		}
	_iter_next_1b81ea97d:;
	}
	_iter_end_1b81ea97d:;;
	jule::Ptr<_1cdeab4b4_Token> _69017_end;;
	if (((*(_67238_tokens)).len() > 0LL)) {
		_69017_end=(*(_67238_tokens))[((*(_67238_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1cded1ab1_ScopeTree> _69413_scope = _1b5779707_buildScope(_self_, _67238_tokens, _69017_end);;
	(*(_67238_tokens))=nullptr;
	return _69413_scope;;
}



inline __jule_tuple_x_1cded8a63_Case__jule_tuple_bool _1b5780b92_buildCase(_1b57776c2_scopeParser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _69933_tokens, jule::Bool _69951_typeMatch) {
	__jule_tuple_x_1cded8a63_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1cded8a63_Case> _70013_c = jule::new_ptr<_1cded8a63_Case>(_1cded8a63_Case{._field_Token=(*(_69933_tokens))[0LL], });;
	((*(_69933_tokens))).mut_slice(1LL);;
	jule::Ptr<_1cdeab4b4_Token> _70417_colon = nullptr;;
	jule::Bool _70518_ok;;
	({
		__jule_tuple_sx_1cdec5dc4_Expr__jule_tuple_bool __jule_assign_result = _1b5780455_buildCaseExprs(_self_, _69933_tokens, &(_70417_colon), _69951_typeMatch);
		(*(_70013_c))._field_Exprs = __jule_assign_result.__jule_result_arg0;
		_70518_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*_70013_c.alloc)._field_Scope=_1b5780796_buildCaseScope(_self_, _69933_tokens);
	if (((*((*_70013_c.alloc)._field_Scope))._field_End == nullptr)) {
		(*(*_70013_c.alloc)._field_Scope.alloc)._field_End=_70417_colon;
	};
	jule::Bool _7109_isDefault = (_70518_ok && ((*_70013_c.alloc)._field_Exprs.len() == 0LL));;
	__jule_func_result.__jule_result_arg0 = _70013_c;
	__jule_func_result.__jule_result_arg1 = _7109_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1cded8a63_Case__jule_tuple_x_1cded78b9_Else _1b578108d_buildCases(_1b57776c2_scopeParser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _71433_tokens, jule::Bool _71451_typeMatch) {
	__jule_tuple_sx_1cded8a63_Case__jule_tuple_x_1cded78b9_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1cded8a63_Case>> _71517_cases = nullptr;;
	jule::Ptr<_1cded78b9_Else> _71617_def = nullptr;;
	jule::Bool _71713_defNotLast = false;;
	while ((_71433_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1cdeab4b4_Token> _71917_tok = _71433_tokens[0LL];;
			if (((*(_71917_tok))._field_Id != static_cast<jule::U32>(66LLU))) {
				_1b5778959_pushErr(_self_, _71917_tok, jule::Str::lit("invalid syntax", 14));
				goto _iter_end_1b8203e70;
			};
			jule::Ptr<_1cded8a63_Case> _72417_c;;
			jule::Bool _72420_isDefault;;
			({
				__jule_tuple_x_1cded8a63_Case__jule_tuple_bool __jule_assign_result = _1b5780b92_buildCase(_self_, &(_71433_tokens), _71451_typeMatch);
				_72417_c = __jule_assign_result.__jule_result_arg0;
				_72420_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72420_isDefault) {
				(*(_72417_c))._field_Token=_71917_tok;
				if ((_71617_def == nullptr)) {
					_71617_def=jule::new_ptr<_1cded78b9_Else>(_1cded78b9_Else{._field_Token=(*_72417_c.alloc)._field_Token, ._field_Scope=(*_72417_c.alloc)._field_Scope});
				} else {
					_1b5778959_pushErr(_self_, _71917_tok, jule::Str::lit("invalid syntax", 14));
				};
			} else {
				_71713_defNotLast=(_71713_defNotLast || (_71617_def != nullptr));
				{ jule::Slice<jule::Ptr<_1cded8a63_Case>> &__jule_push_dest = _71517_cases; __jule_push_dest.push(_72417_c); };
			};
		}
	_iter_next_1b8203e70:;
	}
	_iter_end_1b8203e70:;;
	if (_71713_defNotLast) {
		_1b5778959_pushErr(_self_, (*(_71617_def))._field_Token, jule::Str::lit("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71517_cases;
	__jule_func_result.__jule_result_arg1 = _71617_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1cded937c_MatchCase> _1b57813ce_buildMatchCase(_1b57776c2_scopeParser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _74837_tokens) {
	jule::Ptr<_1cded937c_MatchCase> _74913_m = jule::new_ptr<_1cded937c_MatchCase>(_1cded937c_MatchCase{._field_Token=_74837_tokens[0LL], });;
	(_74837_tokens).mut_slice(1LL);;
	if (((_74837_tokens.len() > 0LL) && ((*(_74837_tokens[0LL]))._field_Id == static_cast<jule::U32>(7LLU)))) {
		(*(_74913_m))._field_TypeMatch=true;
		(_74837_tokens).mut_slice(1LL);;
	};
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _75913_exprTokens = _1b5790e16_getBlockExpr(&(_74837_tokens));;
	if ((_75913_exprTokens.len() > 0LL)) {
		(*_74913_m.alloc)._field_Expr=_1b5796adc_buildExpr((*(_self_))._field_p, &(_75913_exprTokens));
	} else if ((*_74913_m.alloc)._field_TypeMatch) {
		_1b5778959_pushErr(_self_, (*_74913_m.alloc)._field_Token, jule::Str::lit("expression missing", 18));
	};
	jule::I32 _76613_i = _75913_exprTokens.len();;
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _76713_blockToks = _1b5794139_range(&(_76613_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_74837_tokens));;
	if ((_76713_blockToks == nullptr)) {
		_1b5777d43_stop(_self_);
		_1b5778959_pushErr(_self_, (*_74913_m.alloc)._field_Token, jule::Str::lit("body is not exist", 17));
		_1b5778cbc_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_76613_i < _74837_tokens.len())) {
		_1b5778959_pushErr(_self_, _74837_tokens[_76613_i], jule::Str::lit("invalid syntax", 14));
	};
	(*_74913_m.alloc)._field_End=_74837_tokens[(_76613_i - 1LL)];
	({
		__jule_tuple_sx_1cded8a63_Case__jule_tuple_x_1cded78b9_Else __jule_assign_result = _1b578108d_buildCases(_self_, _76713_blockToks, (*_74913_m.alloc)._field_TypeMatch);
		(*_74913_m.alloc)._field_Cases = __jule_assign_result.__jule_result_arg0;
		(*_74913_m.alloc)._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _74913_m;;
}



inline jule::Ptr<_1cded1ab1_ScopeTree> _1b5781720_buildScopeSt(_1b57776c2_scopeParser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _78135_tokens) {
	jule::Bool _78213_isUnsafe = false;;
	jule::Bool _78313_isDeferred = false;;
	jule::Ptr<_1cdeab4b4_Token> _78413_token = _78135_tokens[0LL];;
	if (((*(_78413_token))._field_Id == static_cast<jule::U32>(31LLU))) {
		_78213_isUnsafe=true;
		(_78135_tokens).mut_slice(1LL);;
		if ((_78135_tokens.len() == 0LL)) {
			_1b5778959_pushErr(_self_, _78413_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
		_78413_token=_78135_tokens[0LL];
		if (((*_78413_token.alloc)._field_Id == static_cast<jule::U32>(33LLU))) {
			_78313_isDeferred=true;
			(_78135_tokens).mut_slice(1LL);;
			if ((_78135_tokens.len() == 0LL)) {
				_1b5778959_pushErr(_self_, _78413_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if (((*(_78413_token))._field_Id == static_cast<jule::U32>(33LLU))) {
		_78313_isDeferred=true;
		(_78135_tokens).mut_slice(1LL);;
		if ((_78135_tokens.len() == 0LL)) {
			_1b5778959_pushErr(_self_, _78413_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I32 _81013_i = 0LL;;
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _81113_scopeTokens = _1b5794139_range(&(_81013_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_78135_tokens));;
	if ((_81113_scopeTokens == nullptr)) {
		_1b5778959_pushErr(_self_, _78413_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	} else if ((_81013_i < _78135_tokens.len())) {
		_1b5778959_pushErr(_self_, _78135_tokens[_81013_i], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_1cded1ab1_ScopeTree> _81813_scope = _1b5779707_buildScope(_self_, &(_81113_scopeTokens), _78135_tokens[(_81013_i - 1LL)]);;
	(*(_81813_scope))._field_Unsafety=_78213_isUnsafe;
	(*_81813_scope.alloc)._field_Deferred=_78313_isDeferred;
	return _81813_scope;;
}



inline jule::Ptr<_1cdece174_LabelSt> _1b5781a61_buildLabelSt(_1b57776c2_scopeParser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _82436_tokens) {
	jule::Ptr<_1cdece174_LabelSt> _82513_lbl = jule::new_ptr<_1cdece174_LabelSt>(_1cdece174_LabelSt{._field_Token=(*(_82436_tokens))[0LL], ._field_Ident=(*((*(_82436_tokens))[0LL]))._field_Kind});;
	if (((*(_82436_tokens)).len() > 2LL)) {
		((*(_82436_tokens))).mut_slice(2LL);;
		_1b5779075_insertAsNext(_self_, _82436_tokens);
	};
	return _82513_lbl;;
}



inline __jule_tuple__1cded11ed_StmtData__jule_tuple_bool _1b5781da2_buildIdSt(_1b57776c2_scopeParser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _83933_tokens) {
	__jule_tuple__1cded11ed_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_83933_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1cdeab4b4_Token> _84413_token = (*(_83933_tokens))[1LL];;
	{
		auto &_match_expr{ (*(_84413_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(8LLU)) {
			_case_begin_1b8219a24:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1b5781a61_buildLabelSt(_self_, _83933_tokens), &__jule_any_type56);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b821a2d8:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1b5792588_assignInfo> _1b57821e3_buildAssignInfo(_1b57776c2_scopeParser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _85339_tokens) {
	jule::Ptr<_1b5792588_assignInfo> _85413_info = jule::new_ptr<_1b5792588_assignInfo>(_1b5792588_assignInfo{._field_ok=true});;
	jule::I32 _85713_braceN = 0LL;;
	{
		auto expr = _85339_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b821ba04:;
		if (it != expr_end) {
			jule::I32 _85814_i = it - expr->begin();
			jule::Ptr<_1cdeab4b4_Token> _85821_token = *it;
			{
				{
					auto &_match_expr{ (*(_85821_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1b821c472:;
						{
							(_85713_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1b821c818:;
						{
							(_85713_braceN)--;
						}
					}
					_match_end_1b821c74c:;
				};
				{
					
					if ((_85713_braceN > 0LL)) {
						_case_begin_1b821c917:;
						{
							goto _iter_next_1b821ba04;
						}
					}
					else if (((!(_1cdeb1310_IsAssignOp((*(_85821_token))._field_Id))) && ((*_85821_token.alloc)._field_Id != static_cast<jule::U32>(38LLU)))) {
						_case_begin_1b821d9e5:;
						{
							goto _iter_next_1b821ba04;
						}
					}
					_match_end_1b821d95c:;
				};
				(*(_85413_info))._field_l=(*(_85339_tokens)).slice(0LL, _85814_i);
				if (((*_85413_info.alloc)._field_l.len() == 0LL)) {
					(*_85413_info.alloc)._field_ok=false;
				};
				(*_85413_info.alloc)._field_setter=_85821_token;
				if (((_85814_i + 1LL) >= (*(_85339_tokens)).len())) {
					(*_85413_info.alloc)._field_r=nullptr;
					(*_85413_info.alloc)._field_ok=_1cdeb1046_IsPostfixOp((*((*_85413_info.alloc)._field_setter))._field_Id);
					goto _iter_end_1b821ba04;
				};
				(*_85413_info.alloc)._field_r=(*(_85339_tokens)).slice((_85814_i + 1LL));
				if (_1cdeb1046_IsPostfixOp((*(*_85413_info.alloc)._field_setter.alloc)._field_Id)) {
					if (((*_85413_info.alloc)._field_r.len() > 0LL)) {
						_1b5778959_pushErr(_self_, (*_85413_info.alloc)._field_r[0LL], jule::Str::lit("invalid syntax", 14));
						(*_85413_info.alloc)._field_r=nullptr;
					};
				};
				goto _iter_end_1b821ba04;
			}
			_iter_next_1b821ba04:;
			++it;
			_85814_i++;
			goto _iter_begin_1b821ba04;
		}
		_iter_end_1b821ba04:;
	};
	return _85413_info;;
}



inline jule::Ptr<_1cdeceeaa_AssignLeft> _1b5782534_buildAssignL(_1b57776c2_scopeParser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _89836_tokens) {
	jule::Ptr<_1cdeceeaa_AssignLeft> _89913_l = jule::new_ptr<_1cdeceeaa_AssignLeft>(_1cdeceeaa_AssignLeft{._field_Token=(*(_89836_tokens))[0LL], });;
	if (((*((*(_89836_tokens))[0LL]))._field_Id == static_cast<jule::U32>(1LLU))) {
		(*(_89913_l))._field_Ident=(*((*_89913_l.alloc)._field_Token))._field_Kind;
	};
	(*_89913_l.alloc)._field_Expr=_1b5796adc_buildExpr((*(_self_))._field_p, _89836_tokens);
	return _89913_l;;
}



inline jule::Slice<jule::Ptr<_1cdeceeaa_AssignLeft>> _1b5782875_buildAssignLs(_1b57776c2_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>>* _90937_parts) {
	jule::Slice<jule::Ptr<_1cdeceeaa_AssignLeft>> _91017_lefts = nullptr;;
	{
		auto expr = _90937_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8bcb0b7:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _91121_part = *it;
			{
				jule::Ptr<_1cdeceeaa_AssignLeft> _91217_l = _1b5782534_buildAssignL(_self_, &(_91121_part));;
				{ jule::Slice<jule::Ptr<_1cdeceeaa_AssignLeft>> &__jule_push_dest = _91017_lefts; __jule_push_dest.push(_91217_l); };
			}
			_iter_next_1b8bcb0b7:;
			++it;
			goto _iter_begin_1b8bcb0b7;
		}
		_iter_end_1b8bcb0b7:;
	};
	return _91017_lefts;;
}



inline __jule_tuple__1cded11ed_StmtData__jule_tuple_bool _1b5782bb6_buildPlainAssign(_1b57776c2_scopeParser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _91840_tokens) {
	__jule_tuple__1cded11ed_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1b5792588_assignInfo> _91913_info = _1b57821e3_buildAssignInfo(_self_, _91840_tokens);;
	if ((!((*(_91913_info))._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1cded053d_AssignSt> _92413_assign = jule::new_ptr<_1cded053d_AssignSt>(_1cded053d_AssignSt{._field_Setter=(*_91913_info.alloc)._field_setter, });;
	if (((*((*_91913_info.alloc)._field_setter))._field_Id == static_cast<jule::U32>(38LLU))) {
		(*(_92413_assign))._field_Declarative=true;
		(*_92413_assign.alloc)._field_Right=_1b5796adc_buildExpr((*(_self_))._field_p, &((*_91913_info.alloc)._field_r));
		jule::Bool _93213_ok = _1b57830b2_buildDeclAssign1(_self_, &((*_91913_info.alloc)._field_l), &(_92413_assign));;
		if ((!(_93213_ok))) {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		if (((*_92413_assign.alloc)._field_Left.len() > 1LL)) {
			__jule_func_result.__jule_result_arg0 = jule::Any(_92413_assign, &__jule_any_type58);
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		jule::Ptr<_1cdeceeaa_AssignLeft> _94117_left = (*_92413_assign.alloc)._field_Left[0LL];;
		jule::Ptr<_1cded490a_VarDecl> _94217_decl = jule::new_ptr<_1cded490a_VarDecl>(_1cded490a_VarDecl{._field_Scope=(*(_self_))._field_s, ._field_Token=(*(_94117_left))._field_Token, ._field_Setter=(*_92413_assign.alloc)._field_Setter, ._field_Ident=(*_94117_left.alloc)._field_Ident, ._field_Mutable=(*_94117_left.alloc)._field_Mutable, ._field_Reference=(*_94117_left.alloc)._field_Reference, ._field_Expr=(*_92413_assign.alloc)._field_Right});;
		__jule_func_result.__jule_result_arg0 = jule::Any(_94217_decl, &__jule_any_type16);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>> _95413_parts;;
	jule::Slice<_22a93672d_Log> _95420_errs;;
	({
		__jule_tuple_ssx_1cdeab4b4_Token__jule_tuple_s_22a93672d_Log __jule_assign_result = _1b57948a9_parts(&((*_91913_info.alloc)._field_l), static_cast<jule::U32>(5LLU), true);
		_95413_parts = __jule_assign_result.__jule_result_arg0;
		_95420_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_95420_errs.len() > 0LL)) {
		(*(*(_self_))._field_p.alloc)._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_95420_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(*_92413_assign.alloc)._field_Left=_1b5782875_buildAssignLs(_self_, &(_95413_parts));
	if (((*_91913_info.alloc)._field_r != nullptr)) {
		(*_92413_assign.alloc)._field_Right=_1b5796adc_buildExpr((*(_self_))._field_p, &((*_91913_info.alloc)._field_r));
	};
	__jule_func_result.__jule_result_arg0 = jule::Any(_92413_assign, &__jule_any_type58);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _1b57830b2_buildDeclAssign1(_1b57776c2_scopeParser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _96840_lefts, jule::Ptr<_1cded053d_AssignSt>* _96862_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>> _97013_parts;;
	jule::Slice<_22a93672d_Log> _97020_errs;;
	({
		__jule_tuple_ssx_1cdeab4b4_Token__jule_tuple_s_22a93672d_Log __jule_assign_result = _1b57948a9_parts(_96840_lefts, static_cast<jule::U32>(5LLU), true);
		_97013_parts = __jule_assign_result.__jule_result_arg0;
		_97020_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_97020_errs.len() > 0LL)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_97020_errs);
		return false;;
	};
	{
		auto expr = &(_97013_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8bd7777:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _97621_part = *it;
			{
				jule::Bool _97717_isMut = false;;
				jule::Bool _97817_isRef = false;;
				jule::Ptr<_1cdeab4b4_Token> _98013_token = _97621_part[0LL];;
				if (((*(_98013_token))._field_Id == static_cast<jule::U32>(32LLU))) {
					_97717_isMut=true;
					(_97621_part).mut_slice(1LL);;
					if ((_97621_part.len() == 0LL)) {
						_1b5778959_pushErr(_self_, _98013_token, jule::Str::lit("invalid syntax", 14));
						return false;;
					};
				};
				if (((*(_97621_part[0LL]))._field_Id == static_cast<jule::U32>(65LLU))) {
					_97817_isRef=true;
					(_97621_part).mut_slice(1LL);;
					if ((_97621_part.len() == 0LL)) {
						_1b5778959_pushErr(_self_, _98013_token, jule::Str::lit("invalid syntax", 14));
						return false;;
					};
				};
				if ((((*(_97621_part[0LL]))._field_Id != static_cast<jule::U32>(1LLU)) && ((*(_97621_part[0LL]))._field_Id != static_cast<jule::U32>(74LLU)))) {
					_1b5778959_pushErr(_self_, _98013_token, jule::Str::lit("invalid syntax", 14));
					return false;;
				};
				jule::Ptr<_1cdeceeaa_AssignLeft> _100417_l = _1b5782534_buildAssignL(_self_, &(_97621_part));;
				(*(_100417_l))._field_Mutable=_97717_isMut;
				(*_100417_l.alloc)._field_Reference=_97817_isRef;
				{ jule::Slice<jule::Ptr<_1cdeceeaa_AssignLeft>> &__jule_push_dest = (*((*(_96862_assign))))._field_Left; __jule_push_dest.push(_100417_l); };
			}
			_iter_next_1b8bd7777:;
			++it;
			goto _iter_begin_1b8bd7777;
		}
		_iter_end_1b8bd7777:;
	};
	return true;;
}



inline __jule_tuple_x_1cded053d_AssignSt__jule_tuple_bool _1b5783403_buildDeclAssign(_1b57776c2_scopeParser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _101338_tokens) {
	__jule_tuple_x_1cded053d_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_101338_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(_101338_tokens).mut_slice(1LL);;
	jule::Ptr<_1cdeab4b4_Token> _101913_token = _101338_tokens[0LL];;
	if (((*(_101913_token))._field_Id != static_cast<jule::U32>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1cded053d_AssignSt> _102413_assign = jule::new_ptr<_1cded053d_AssignSt>(_1cded053d_AssignSt{._field_Declarative=true, });;
	jule::I32 _102813_i = 0LL;;
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _102913_rang = _1b5794139_range(&(_102813_i), static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), &(_101338_tokens));;
	if ((_102913_rang == nullptr)) {
		_1b5778959_pushErr(_self_, _101913_token, jule::Str::lit("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_102813_i + 1LL) < _101338_tokens.len())) {
		(*(_102413_assign))._field_Setter=_101338_tokens[_102813_i];
		if (((*((*_102413_assign.alloc)._field_Setter))._field_Id != static_cast<jule::U32>(71LLU))) {
			_1b5778959_pushErr(_self_, (*_102413_assign.alloc)._field_Setter, jule::Str::lit("invalid syntax", 14));
		};
		(_102813_i)++;
		jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _103917_exprTokens = _101338_tokens.slice(_102813_i);;
		(*_102413_assign.alloc)._field_Right=_1b5796adc_buildExpr((*(_self_))._field_p, &(_103917_exprTokens));
	};
	jule::Bool _10439_ok = _1b57830b2_buildDeclAssign1(_self_, &(_102913_rang), &(_102413_assign));;
	__jule_func_result.__jule_result_arg0 = _102413_assign;
	__jule_func_result.__jule_result_arg1 = _10439_ok;
	return __jule_func_result;;
}



inline __jule_tuple__1cded11ed_StmtData__jule_tuple_bool _1b5783744_buildAssignSt(_1b57776c2_scopeParser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _104737_tokens) {
	__jule_tuple__1cded11ed_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1b5792940_checkAssignTokens(_104737_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_104737_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1b8be69c8:;
			{
				({
					__jule_tuple_x_1cded053d_AssignSt__jule_tuple_bool __jule_assign_result = _1b5783403_buildDeclAssign(_self_, (*(_104737_tokens)));
					__jule_func_result.__jule_result_arg0 = jule::Any(__jule_assign_result.__jule_result_arg0, &__jule_any_type58);
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1b8be5e4a:;
			{
				({
					__jule_tuple__1cded11ed_StmtData__jule_tuple_bool __jule_assign_result = _1b5782bb6_buildPlainAssign(_self_, _104737_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1b8be6412:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1cdec6798_UseExpr> _1b5783a85_buildUseExpr(_1b57776c2_scopeParser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _106036_tokens) {
	if (((*(_106036_tokens)).len() == 1LL)) {
		_1b5778959_pushErr(_self_, (*(_106036_tokens))[0LL], jule::Str::lit("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_1cdec6798_UseExpr> _106513_ue = jule::new_ptr<_1cdec6798_UseExpr>(_1cdec6798_UseExpr{._field_Token=(*(_106036_tokens))[0LL], });;
	((*(_106036_tokens))).mut_slice(1LL);;
	(*(_106513_ue))._field_Expr=_1b5796adc_buildExpr((*(_self_))._field_p, _106036_tokens);
	return _106513_ue;;
}



inline jule::Any _1b5783dc6_buildConstSt(_1b57776c2_scopeParser* _self_, jule::Ptr<_1b5776d31_stmt>* _107336_st) {
	if (((*((*(_107336_st))))._field_tokens.len() == 1LL)) {
		_1b5778959_pushErr(_self_, (*((*(_107336_st))))._field_tokens[0LL], jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_107336_st))))._field_tokens[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(9LLU)) {
			_case_begin_1b8beb0d7:;
			{
				(*((*(_107336_st))))._field_tokens=(*((*(_107336_st))))._field_tokens.slice(1LL);
				jule::Ptr<_1cded5554_Iter> _108117_iter = _1b577ca5c_buildIterSt(_self_, _107336_st);;
				if ((_108117_iter != nullptr)) {
					(*_108117_iter.alloc)._field_Comptime=true;
				};
				return jule::Any(_108117_iter, &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(23LLU)) {
			_case_begin_1b8beadb7:;
			{
				(*((*(_107336_st))))._field_tokens=(*((*(_107336_st))))._field_tokens.slice(1LL);
				jule::Ptr<_1cded937c_MatchCase> _108817_mt = _1b57813ce_buildMatchCase(_self_, (*((*(_107336_st))))._field_tokens);;
				if ((_108817_mt != nullptr)) {
					(*_108817_mt.alloc)._field_Comptime=true;
				};
				return jule::Any(_108817_mt, &__jule_any_type59);;
			}
		}
		else {
			_case_begin_1b8be9932:;
			{
				return jule::Any(_1b5779a48_buildVarSt(_self_, &((*((*(_107336_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		_match_end_1b8bea955:;
	};
}



inline jule::Any _1b5784217_buildSt(_1b57776c2_scopeParser* _self_, jule::Ptr<_1b5776d31_stmt>* _109831_st) {
	jule::Ptr<_1cdeab4b4_Token> _109913_token = (*((*(_109831_st))))._field_tokens[0LL];;
	if (((*(_109913_token))._field_Id == static_cast<jule::U32>(1LLU))) {
		jule::Any _110117_s;;
		jule::Bool _110120_ok;;
		({
			__jule_tuple__1cded11ed_StmtData__jule_tuple_bool __jule_assign_result = _1b5781da2_buildIdSt(_self_, &((*((*(_109831_st))))._field_tokens));
			_110117_s = __jule_assign_result.__jule_result_arg0;
			_110120_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_110120_ok) {
			return _110117_s;;
		};
	};
	jule::Any _110713_s;;
	jule::Bool _110716_ok;;
	({
		__jule_tuple__1cded11ed_StmtData__jule_tuple_bool __jule_assign_result = _1b5783744_buildAssignSt(_self_, &((*((*(_109831_st))))._field_tokens));
		_110713_s = __jule_assign_result.__jule_result_arg0;
		_110716_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_110716_ok) {
		return _110713_s;;
	};
	{
		auto &_match_expr{ (*(_109913_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(16LLU)) {
			_case_begin_1b8c01a49:;
			{
				return jule::Any(_1b5783a85_buildUseExpr(_self_, &((*((*(_109831_st))))._field_tokens)), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU)) {
			_case_begin_1b8c017d5:;
			{
				return _1b5783dc6_buildConstSt(_self_, _109831_st);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(34LLU) || _match_expr == static_cast<jule::U32>(30LLU) || _match_expr == static_cast<jule::U32>(32LLU)) {
			_case_begin_1b8c02264:;
			{
				return jule::Any(_1b5779a48_buildVarSt(_self_, &((*((*(_109831_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(2LLU)) {
			_case_begin_1b8c022ca:;
			{
				return jule::Any(_1b5779d89_buildRetSt(_self_, (*((*(_109831_st))))._field_tokens), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(9LLU)) {
			_case_begin_1b8c02341:;
			{
				return jule::Any(_1b577ca5c_buildIterSt(_self_, _109831_st), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(10LLU)) {
			_case_begin_1b8c023a7:;
			{
				return jule::Any(_1b577cd9d_buildBreakSt(_self_, &((*((*(_109831_st))))._field_tokens)), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(11LLU)) {
			_case_begin_1b8c0241d:;
			{
				return jule::Any(_1b577d1de_buildContSt(_self_, &((*((*(_109831_st))))._field_tokens)), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(13LLU)) {
			_case_begin_1b8c02484:;
			{
				return jule::Any(_1b577dbb2_buildIfElseChain(_self_, (*((*(_109831_st))))._field_tokens), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(22LLU)) {
			_case_begin_1b8c024ea:;
			{
				return jule::Any(_1b577e003_buildCoCallSt(_self_, (*((*(_109831_st))))._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(18LLU)) {
			_case_begin_1b8c02561:;
			{
				return jule::Any(_1b577e344_buildGotoSt(_self_, &((*((*(_109831_st))))._field_tokens)), &__jule_any_type57);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(28LLU)) {
			_case_begin_1b8c025d8:;
			{
				return jule::Any(_1b577e685_buildFallSt(_self_, &((*((*(_109831_st))))._field_tokens)), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1b8c02660:;
			{
				return jule::Any(_1b577e9c6_buildTypeAliasSt(_self_, &((*((*(_109831_st))))._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(23LLU)) {
			_case_begin_1b8c026d7:;
			{
				return jule::Any(_1b57813ce_buildMatchCase(_self_, (*((*(_109831_st))))._field_tokens), &__jule_any_type59);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1b8c0275e:;
			{
				if (((*((*(_109831_st))))._field_tokens.len() < 1LL)) {
					goto _match_end_1b8c01e12;
				};
				if ((((*((*((*(_109831_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U32>(33LLU)) || ((*((*((*(_109831_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U32>(72LLU)))) {
					return jule::Any(_1b5781720_buildScopeSt(_self_, (*((*(_109831_st))))._field_tokens), &__jule_any_type51);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(33LLU)) {
			_case_begin_1b8c027d6:;
			{
				return jule::Any(_1b5781720_buildScopeSt(_self_, (*((*(_109831_st))))._field_tokens), &__jule_any_type51);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(72LLU)) {
			_case_begin_1b8c0285d:;
			{
				return jule::Any(_1b5781720_buildScopeSt(_self_, (*((*(_109831_st))))._field_tokens), &__jule_any_type51);;
			}
		}
		_match_end_1b8c01e12:;
	};
	jule::Ptr<_1cdec5dc4_Expr> _115413_expr = _1b5796adc_buildExpr((*(_self_))._field_p, &((*((*(_109831_st))))._field_tokens));;
	if ((_115413_expr != nullptr)) {
		return jule::Any(_115413_expr, &__jule_any_type52);;
	};
	_1b5778959_pushErr(_self_, _109913_token, jule::Str::lit("invalid syntax", 14));
	return nullptr;;
}



inline void _1b578457a_build(_1b57776c2_scopeParser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _116229_tokens, jule::Ptr<_1cded1ab1_ScopeTree>* _116252_s) {
	if (((*(_116252_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1b57771d8_splitStmts(_116229_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_116252_s));
	while (((!(_1b57785e6_isLastSt(_self_))) && (!(_1b5778360_finished(_self_))))) {
		{
			jule::Ptr<_1b5776d31_stmt> _117017_st = _1b577930b_next(_self_);;
			jule::Any _117117_data = _1b5784217_buildSt(_self_, &(_117017_st));;
			if ((_117117_data != nullptr)) {
				(*((*(_self_))._field_s))._field_Stmts=jule::append((*(*(_self_))._field_s.alloc)._field_Stmts,jule::Slice<_1cded1451_Stmt>::make({_1cded1451_Stmt{._field_Token=(*(_117017_st))._field_tokens[0LL], ._field_Data=_117117_data}}));
			};
			if (_1b57780c9_stopped(_self_)) {
				goto _iter_end_1b8c0ea02;
			};
		}
	_iter_next_1b8c0ea02:;
	}
	_iter_end_1b8c0ea02:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b57776c2_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1b57858cd_pushErr(_1b57850e7_exprBuilder* _self_, jule::Ptr<_1cdeab4b4_Token> _4526_token, jule::Str _4541_fmt, jule::Slice<jule::Any> _4554_args) {
	_1b5796438_pushErr((*(_self_))._field_p.ptr(), _4526_token, _4541_fmt, _4554_args);
}



inline void _1b5785c41_pushSuggestion(_1b57850e7_exprBuilder* _self_, jule::Str _5033_fmt, jule::Slice<jule::Any> _5046_args) {
	_1b579679b_pushSuggestion((*(_self_))._field_p.ptr(), _5033_fmt, _5046_args);
}



inline jule::Ptr<_1cdec69b8_TupleExpr> _1b5786082_buildTuple(_1b57850e7_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>>* _5434_parts) {
	jule::Ptr<_1cdec69b8_TupleExpr> _5513_tuple = jule::new_ptr<_1cdec69b8_TupleExpr>(_1cdec69b8_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_1cdec5dc4_Expr>>::alloc(0LL, (*(_5434_parts)).len())});;
	{
		auto expr = _5434_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8c2ecb9:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _5821_part = *it;
			{
				(*(_5513_tuple))._field_Expr=jule::append((*_5513_tuple.alloc)._field_Expr,jule::Slice<jule::Ptr<_1cdec5dc4_Expr>>::make({_1b5790476_buildFromTokens(_self_, _5821_part)}));
			}
			_iter_next_1b8c2ecb9:;
			++it;
			goto _iter_begin_1b8c2ecb9;
		}
		_iter_end_1b8c2ecb9:;
	};
	return _5513_tuple;;
}



inline jule::Ptr<_1cdec6d5e_LitExpr> _1b57863c3_buildLit(_1b57850e7_exprBuilder* _self_, jule::Ptr<_1cdeab4b4_Token> _6427_token) {
	return jule::new_ptr<_1cdec6d5e_LitExpr>(_1cdec6d5e_LitExpr{._field_Token=_6427_token, ._field_Value=(*(_6427_token))._field_Kind});;
}



inline jule::Any _1b5786a55_buildSingle(_1b57850e7_exprBuilder* _self_, jule::Ptr<_1cdeab4b4_Token> _7534_token) {
	{
		auto &_match_expr{ (*(_7534_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(4LLU)) {
			_case_begin_1b8c31c44:;
			{
				return jule::Any(_1b57863c3_buildLit(_self_, _7534_token), &__jule_any_type102);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(39LLU)) {
			_case_begin_1b8c31caa:;
			{
				return jule::Any(jule::new_ptr<_1cdec835a_VariadicExpr>(_1cdec835a_VariadicExpr{._field_Token=_7534_token, }), &__jule_any_type75);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(1LLU) || _match_expr == static_cast<jule::U32>(24LLU) || _match_expr == static_cast<jule::U32>(36LLU)) {
			_case_begin_1b8c31d21:;
			{
				return jule::Any(_1b5791862_buildIdentExpr(&(_7534_token)), &__jule_any_type79);;
			}
		}
		_match_end_1b8c31b89:;
	};
	_1b57858cd_pushErr(_self_, _7534_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1cdec76de_IdentExpr> _1b5786d96_buildBindIdent(_1b57850e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _9238_tokens) {
	if (((*((*(_9238_tokens))[0LL]))._field_Id != static_cast<jule::U32>(27LLU))) {
		return nullptr;;
	} else if (((*((*(_9238_tokens))[1LL]))._field_Id != static_cast<jule::U32>(17LLU))) {
		_1b57858cd_pushErr(_self_, (*(_9238_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b5785c41_pushSuggestion(_self_, jule::Str::lit("use dot (.) to access binded defines", 36), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1cdeab4b4_Token> _10013_token = (*(_9238_tokens))[2LL];;
	if (((*(_10013_token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1b57858cd_pushErr(_self_, (*(_9238_tokens))[2LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b5785c41_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1cdec76de_IdentExpr> _10613_expr = _1b5791862_buildIdentExpr(&(_10013_token));;
	(*(_10613_expr))._field_Binded=true;
	return _10613_expr;;
}



inline jule::Ptr<_1cdec7e81_UnaryExpr> _1b57871d7_buildUnary(_1b57850e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _11133_tokens) {
	jule::Ptr<_1cdeab4b4_Token> _11213_op = _11133_tokens[0LL];;
	if ((_11133_tokens.len() == 1LL)) {
		_1b57858cd_pushErr(_self_, _11213_op, jule::Str::lit("missing expression for unary operator", 37), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1cdeabc01_IsUnaryOp((*(_11213_op))._field_Id)))) {
		_1b57858cd_pushErr(_self_, _11213_op, jule::Str::lit("invalid unary operator: @", 25), jule::Slice<jule::Any>::make({jule::Any((*_11213_op.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	(_11133_tokens).mut_slice(1LL);;
	return jule::new_ptr<_1cdec7e81_UnaryExpr>(_1cdec7e81_UnaryExpr{._field_Op=_11213_op, ._field_Expr=_1b5790476_buildFromTokens(_self_, _11133_tokens)});;
}



inline jule::Ptr<_1cdec8ed7_SubIdentExpr> _1b5787528_buildObjSubIdent(_1b57850e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _13239_tokens) {
	jule::I32 _13313_i = (_13239_tokens.len() - 1LL);;
	jule::Ptr<_1cdeab4b4_Token> _13413_identToken = _13239_tokens[_13313_i];;
	(_13313_i)--;
	(_13239_tokens).mut_slice(0LL, _13313_i);;
	if ((_13239_tokens.len() == 0LL)) {
		_1b57858cd_pushErr(_self_, _13413_identToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1cdec8ed7_SubIdentExpr>(_1cdec8ed7_SubIdentExpr{._field_Expr=_1b5790476_buildFromTokens(_self_, _13239_tokens), ._field_Ident=_13413_identToken});;
}



inline jule::Ptr<_1cdec8b0d_NsSelectionExpr> _1b5787869_buildNsSubIdent(_1b57850e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _14739_tokens) {
	jule::Ptr<_1cdec8b0d_NsSelectionExpr> _14813_ns = jule::new_ptr<_1cdec8b0d_NsSelectionExpr>();;
	if ((((*(_14739_tokens)).len() == 3LL) && ((*((*(_14739_tokens))[0LL]))._field_Id == static_cast<jule::U32>(31LLU)))) {
		(*_14813_ns.alloc)._field_Ns=(*(_14739_tokens)).slice(0LL, 1LL);
		(*_14813_ns.alloc)._field_Ident=(*(_14739_tokens))[2LL];
	} else {
		{
			auto expr = _14739_tokens;
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b8c3c9ec:;
			if (it != expr_end) {
				jule::I32 _15418_i = it - expr->begin();
				jule::Ptr<_1cdeab4b4_Token> _15425_token = *it;
				{
					if (((_15418_i & 1LL) == 0LL)) {
						if (((*(_15425_token))._field_Id != static_cast<jule::U32>(1LLU))) {
							_1b57858cd_pushErr(_self_, _15425_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							_1b5785c41_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
						};
						(*_14813_ns.alloc)._field_Ns=jule::append((*_14813_ns.alloc)._field_Ns,jule::Slice<jule::Ptr<_1cdeab4b4_Token>>::make({_15425_token}));
					} else if (((*(_15425_token))._field_Id != static_cast<jule::U32>(19LLU))) {
						_1b57858cd_pushErr(_self_, _15425_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_1b5785c41_pushSuggestion(_self_, jule::Str::lit("expected double colon \"::\"", 26), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1b8c3c9ec:;
				++it;
				_15418_i++;
				goto _iter_begin_1b8c3c9ec;
			}
			_iter_end_1b8c3c9ec:;
		};
		(*_14813_ns.alloc)._field_Ident=(*_14813_ns.alloc)._field_Ns[((*_14813_ns.alloc)._field_Ns.len() - 1LL)];
		(*_14813_ns.alloc)._field_Ns=(*_14813_ns.alloc)._field_Ns.slice(0LL, ((*_14813_ns.alloc)._field_Ns.len() - 1LL));
	};
	return _14813_ns;;
}



inline jule::Ptr<_1cdec1a90_TypeDecl> _1b5787baa_buildType(_1b57850e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _17233_tokens) {
	jule::I32 _17313_i = 0LL;;
	jule::Ptr<_1cdec1a90_TypeDecl> _17413_t;;
	jule::Bool _17416_ok;;
	({
		__jule_tuple_x_1cdec1a90_TypeDecl__jule_tuple_bool __jule_assign_result = _1b579803e_buildType((*(_self_))._field_p, _17233_tokens, (&(_17313_i)), false);
		_17413_t = __jule_assign_result.__jule_result_arg0;
		_17416_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_17416_ok))) {
		_1b57858cd_pushErr(_self_, (*(_17233_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_17313_i < (*(_17233_tokens)).len())) {
		_1b57858cd_pushErr(_self_, (*(_17233_tokens))[_17313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _17413_t;;
}



inline jule::Any _1b5787eeb_buildSubIdent(_1b57850e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _18637_tokens) {
	jule::I32 _1879_i = ((*(_18637_tokens)).len() - 2LL);;
	jule::Ptr<_1cdeab4b4_Token> _1889_token = (*(_18637_tokens))[_1879_i];;
	{
		auto &_match_expr{ (*(_1889_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(17LLU)) {
			_case_begin_1b8c463da:;
			{
				return jule::Any(_1b5787528_buildObjSubIdent(_self_, (*(_18637_tokens))), &__jule_any_type86);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_1b8c46a06:;
			{
				return jule::Any(_1b5787869_buildNsSubIdent(_self_, _18637_tokens), &__jule_any_type90);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(77LLU)) {
			_case_begin_1b8c46a6c:;
			{
				return jule::Any(_1b5787baa_buildType(_self_, _18637_tokens), &__jule_any_type89);;
			}
		}
		_match_end_1b8c46682:;
	};
	_1b57858cd_pushErr(_self_, _1889_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1cdec835a_VariadicExpr> _1b578833c_buildVariadic(_1b57850e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _20236_tokens) {
	jule::Ptr<_1cdeab4b4_Token> _20313_token = _20236_tokens[(_20236_tokens.len() - 1LL)];;
	(_20236_tokens).mut_slice(0LL, (_20236_tokens.len() - 1LL));;
	return jule::new_ptr<_1cdec835a_VariadicExpr>(_1cdec835a_VariadicExpr{._field_Token=_20313_token, ._field_Expr=_1b5790476_buildFromTokens(_self_, _20236_tokens)});;
}



inline jule::Ptr<_1cdec618d_RangeExpr> _1b578867d_buildBetweenParentheses(_1b57850e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _21146_tokens) {
	if ((_21146_tokens.len() == 2LL)) {
		_1b57858cd_pushErr(_self_, _21146_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		_1b5785c41_pushSuggestion(_self_, jule::Str::lit("empty parentheses are not valid expression, must include an expression in range", 79), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_21146_tokens).mut_slice(1LL, (_21146_tokens.len() - 1LL));;
	return jule::new_ptr<_1cdec618d_RangeExpr>(_1cdec618d_RangeExpr{._field_Expr=_1b5790476_buildFromTokens(_self_, _21146_tokens)});;
}



inline jule::Ptr<_1cdec8734_CastExpr> _1b57889be_tryBuildCast(_1b57850e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _22336_tokens) {
	jule::I32 _22413_rangeN = 0LL;;
	{
		auto expr = _22336_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8c4ba2d:;
		if (it != expr_end) {
			jule::I32 _22513_i = it - expr->begin();
			jule::Ptr<_1cdeab4b4_Token> _22516_token = *it;
			{
				{
					auto &_match_expr{ (*(_22516_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1b8c4c666:;
						{
							(_22413_rangeN)++;
							goto _iter_next_1b8c4ba2d;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1b8c4ca40:;
						{
							(_22413_rangeN)--;
						}
					}
					_match_end_1b8c4c963:;
				};
				if ((_22413_rangeN > 0LL)) {
					goto _iter_next_1b8c4ba2d;
				} else if (((_22513_i + 1LL) == (*(_22336_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _24417_typeTokens = (*(_22336_tokens)).slice(0LL, (_22513_i + 1LL));;
				jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _24517_exprTokens = (*(_22336_tokens)).slice((_22513_i + 1LL));;
				if ((_24517_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1cdeab4b4_Token> _25213_tok = _24517_exprTokens[0LL];;
				if (((*(_25213_tok))._field_Id != static_cast<jule::U32>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_1cdec8734_CastExpr> _25717_cast = jule::new_ptr<_1cdec8734_CastExpr>(_1cdec8734_CastExpr{});;
				if ((_24517_exprTokens.len() == 2LL)) {
					_1b57858cd_pushErr(_self_, _24517_exprTokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
					_1b5785c41_pushSuggestion(_self_, jule::Str::lit("give an expression for casting", 30), jule::Slice<jule::Any>());
				};
				if ((_24417_typeTokens.len() == 2LL)) {
					_1b57858cd_pushErr(_self_, _24417_typeTokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					_1b5785c41_pushSuggestion(_self_, jule::Str::lit("type declaration expected for casting", 37), jule::Slice<jule::Any>());
				} else {
					(_24417_typeTokens).mut_slice(1LL, (_24417_typeTokens.len() - 1LL));;
					jule::I32 _27121_typeIndex = 0LL;;
					jule::Ptr<_1cdec1a90_TypeDecl> _27221_t;;
					jule::Bool _27224_ok;;
					({
						__jule_tuple_x_1cdec1a90_TypeDecl__jule_tuple_bool __jule_assign_result = _1b579803e_buildType((*(_self_))._field_p, &(_24417_typeTokens), (&(_27121_typeIndex)), true);
						_27221_t = __jule_assign_result.__jule_result_arg0;
						_27224_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_27224_ok && (_27121_typeIndex < _24417_typeTokens.len()))) {
						_1b57858cd_pushErr(_self_, _24417_typeTokens[_27121_typeIndex], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					} else if ((!(_27224_ok))) {
						return _25717_cast;;
					};
					(*(_25717_cast))._field_Kind=_27221_t;
					if ((_24517_exprTokens.len() > 2LL)) {
						jule::I32 _28225_j = 0LL;;
						_1b5794139_range(&(_28225_j), static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), &(_24517_exprTokens));
						if ((_28225_j < _24517_exprTokens.len())) {
							return nullptr;;
						};
						(_24517_exprTokens).mut_slice(0LL, _28225_j);;
						(*_25717_cast.alloc)._field_Expr=_1b5790476_buildFromTokens(_self_, _24517_exprTokens);
					};
				};
				return _25717_cast;;
			}
			_iter_next_1b8c4ba2d:;
			++it;
			_22513_i++;
			goto _iter_begin_1b8c4ba2d;
		}
		_iter_end_1b8c4ba2d:;
	};
	return nullptr;;
}



inline void _1b5788ddc_pushArg(_1b57850e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cdec5dc4_Expr>>* _29731_args, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _29750_tokens, jule::Ptr<_1cdeab4b4_Token> _29768_err_token) {
	if ((_29750_tokens.len() == 0LL)) {
		_1b57858cd_pushErr(_self_, _29768_err_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b5785c41_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_1cdec5dc4_Expr>> &__jule_push_dest = (*(_29731_args)); __jule_push_dest.push(_1b5790476_buildFromTokens(_self_, _29750_tokens)); };
}



inline jule::Slice<jule::Ptr<_1cdec5dc4_Expr>> _1b578922d_buildArgs(_1b57850e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _30632_tokens) {
	if ((_30632_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1cdec5dc4_Expr>> _31217_args = nullptr;;
	jule::I32 _31313_last = 0LL;;
	jule::I32 _31413_rangeN = 0LL;;
	(_30632_tokens).mut_slice(1LL, (_30632_tokens.len() - 1LL));;
	{
		auto expr = &(_30632_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8c5a3cc:;
		if (it != expr_end) {
			jule::I32 _31613_i = it - expr->begin();
			jule::Ptr<_1cdeab4b4_Token> _31616_token = *it;
			{
				{
					auto &_match_expr{ (*(_31616_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1b8c5abb3:;
						{
							(_31413_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1b8c5b08c:;
						{
							(_31413_rangeN)--;
						}
					}
					_match_end_1b8c5aeb0:;
				};
				if (((_31413_rangeN > 0LL) || ((*(_31616_token))._field_Id != static_cast<jule::U32>(5LLU)))) {
					goto _iter_next_1b8c5a3cc;
				};
				_1b5788ddc_pushArg(_self_, &(_31217_args), _30632_tokens.slice(_31313_last, _31613_i), _31616_token);
				_31313_last=(_31613_i + 1LL);
			}
			_iter_next_1b8c5a3cc:;
			++it;
			_31613_i++;
			goto _iter_begin_1b8c5a3cc;
		}
		_iter_end_1b8c5a3cc:;
	};
	if ((_31313_last < _30632_tokens.len())) {
		if ((_31313_last == 0LL)) {
			if ((_30632_tokens.len() > 0LL)) {
				_1b5788ddc_pushArg(_self_, &(_31217_args), _30632_tokens.slice(_31313_last), _30632_tokens[_31313_last]);
			};
		} else {
			_1b5788ddc_pushArg(_self_, &(_31217_args), _30632_tokens.slice(_31313_last), _30632_tokens[(_31313_last - 1LL)]);
		};
	};
	return _31217_args;;
}



inline jule::Ptr<_1cdec9aed_FnCallExpr> _1b5789a25_buildFnCall(_1b57850e7_exprBuilder* _self_, jule::Ptr<_1cdeab4b4_Token>* _37235_token, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _37255_expr, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _37276_args) {
	return jule::new_ptr<_1cdec9aed_FnCallExpr>(_1cdec9aed_FnCallExpr{._field_Token=(*(_37235_token)), ._field_Expr=_1b5790476_buildFromTokens(_self_, (*(_37255_expr))), ._field_Args=_1b578922d_buildArgs(_self_, (*(_37276_args))), });;
}



inline jule::Any _1b5789d66_buildParenthesesRange(_1b57850e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _38045_tokens) {
	jule::Ptr<_1cdeab4b4_Token> _38113_token = (*(_38045_tokens))[0LL];;
	if (((*(_38113_token))._field_Id == static_cast<jule::U32>(74LLU))) {
		jule::Ptr<_1cdec8734_CastExpr> _38317_expr = _1b57889be_tryBuildCast(_self_, _38045_tokens);;
		if ((_38317_expr != nullptr)) {
			return jule::Any(_38317_expr, &__jule_any_type106);;
		};
	};
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _38813_exprTokens;;
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _38829_args_tokens;;
	({
		__jule_tuple_sx_1cdeab4b4_Token__jule_tuple_sx_1cdeab4b4_Token __jule_assign_result = _1b5794403_rangeLast(_38045_tokens);
		_38813_exprTokens = __jule_assign_result.__jule_result_arg0;
		_38829_args_tokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_38813_exprTokens.len() == 0LL)) {
		return jule::Any(_1b578867d_buildBetweenParentheses(_self_, _38829_args_tokens), &__jule_any_type101);;
	};
	return jule::Any(_1b5789a25_buildFnCall(_self_, &(_38113_token), &(_38813_exprTokens), &(_38829_args_tokens)), &__jule_any_type82);;
}



inline jule::Ptr<_1cdec7238_UnsafeExpr> _1b578a1a7_buildUnsafeExpr(_1b57850e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _39738_tokens) {
	jule::Ptr<_1cdeab4b4_Token> _39813_token = _39738_tokens[0LL];;
	(_39738_tokens).mut_slice(1LL);;
	jule::I32 _40013_i = 0LL;;
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _40113_rangeTokens = _1b5794139_range(&(_40013_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_39738_tokens));;
	if ((_40113_rangeTokens.len() == 0LL)) {
		_1b57858cd_pushErr(_self_, _39738_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1cdec7238_UnsafeExpr>(_1cdec7238_UnsafeExpr{._field_Token=_39813_token, ._field_Expr=_1b5790476_buildFromTokens(_self_, _40113_rangeTokens)});;
}



inline jule::Ptr<_1cded3750_FnDecl> _1b578a4e8_buildAnonFn(_1b57850e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _41235_tokens) {
	jule::Ptr<_1cded3750_FnDecl> _41313_f = _1b579c681_buildFn((*(_self_))._field_p, _41235_tokens, false, false);;
	if ((!(_1cded3ab3_IsAnon(_41313_f.ptr())))) {
		_1b57858cd_pushErr(_self_, (*_41313_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b5785c41_pushSuggestion(_self_, jule::Str::lit("anonymous function expected, remove identifier of function", 58), jule::Slice<jule::Any>());
	};
	return _41313_f;;
}



inline jule::Any _1b578a839_buildUnsafe(_1b57850e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _42135_tokens) {
	{
		auto &_match_expr{ (*((*(_42135_tokens))[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1b8c6cdc3:;
			{
				return jule::Any(_1b578a4e8_buildAnonFn(_self_, _42135_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_1b8c6c29b:;
			{
				return jule::Any(_1b578a1a7_buildUnsafeExpr(_self_, (*(_42135_tokens))), &__jule_any_type103);;
			}
		}
		_match_end_1b8c6c6db:;
	};
}



inline void _1b578ac57_pushRangeLitPart(_1b57850e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _43139_part, jule::Ptr<_1cdeab4b4_Token> _4329_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>>* _43234_parts) {
	if ((_43139_part.len() == 0LL)) {
		_1b57858cd_pushErr(_self_, _4329_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b5785c41_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>> &__jule_push_dest = (*(_43234_parts)); __jule_push_dest.push(_43139_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>> _1b578b098_getBraceRangeLitExprParts(_1b57850e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _44248_tokens) {
	if ((_44248_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>> _44817_parts = nullptr;;
	jule::I32 _45013_last = 0LL;;
	jule::I32 _45113_rangeN = 0LL;;
	(_44248_tokens).mut_slice(1LL, (_44248_tokens.len() - 1LL));;
	{
		auto expr = &(_44248_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8c71800:;
		if (it != expr_end) {
			jule::I32 _45313_i = it - expr->begin();
			jule::Ptr<_1cdeab4b4_Token> _45316_token = *it;
			{
				{
					auto &_match_expr{ (*(_45316_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1b8c720d6:;
						{
							(_45113_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1b8c724b0:;
						{
							(_45113_rangeN)--;
						}
					}
					_match_end_1b8c723d3:;
				};
				if (((_45113_rangeN > 0LL) || ((*(_45316_token))._field_Id != static_cast<jule::U32>(5LLU)))) {
					goto _iter_next_1b8c71800;
				};
				_1b578ac57_pushRangeLitPart(_self_, _44248_tokens.slice(_45013_last, _45313_i), _45316_token, &(_44817_parts));
				_45013_last=(_45313_i + 1LL);
			}
			_iter_next_1b8c71800:;
			++it;
			_45313_i++;
			goto _iter_begin_1b8c71800;
		}
		_iter_end_1b8c71800:;
	};
	if ((_45013_last < _44248_tokens.len())) {
		if ((_45013_last == 0LL)) {
			if ((_44248_tokens.len() > 0LL)) {
				_1b578ac57_pushRangeLitPart(_self_, _44248_tokens.slice(_45013_last), _44248_tokens[_45013_last], &(_44817_parts));
			};
		} else {
			_1b578ac57_pushRangeLitPart(_self_, _44248_tokens.slice(_45013_last), _44248_tokens[(_45013_last - 1LL)], &(_44817_parts));
		};
	};
	return _44817_parts;;
}



inline jule::Ptr<_1cdeca5e3_FieldExprPair> _1b578b3d9_buildFieldExprPair(_1b57850e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _48441_tokens) {
	if (((_48441_tokens.len() - 2LL) == 0LL)) {
		_1b57858cd_pushErr(_self_, _48441_tokens[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1cdeca5e3_FieldExprPair> _48913_pair = jule::new_ptr<_1cdeca5e3_FieldExprPair>(_1cdeca5e3_FieldExprPair{._field_Field=_48441_tokens[0LL], });;
	(_48441_tokens).mut_slice(2LL);;
	(*(_48913_pair))._field_Expr=_1b5790476_buildFromTokens(_self_, _48441_tokens);
	return _48913_pair;;
}



inline jule::Ptr<_1cdec5dc4_Expr> _1b578b72a_buildStructLitExpr(_1b57850e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _49742_tokens) {
	jule::Ptr<_1cdeab4b4_Token> _49813_token = (*(_49742_tokens))[0LL];;
	if ((((*(_49813_token))._field_Id == static_cast<jule::U32>(1LLU)) && ((*(_49742_tokens)).len() > 1LL))) {
		_49813_token=(*(_49742_tokens))[1LL];
		if (((*_49813_token.alloc)._field_Id == static_cast<jule::U32>(8LLU))) {
			return jule::new_ptr<_1cdec5dc4_Expr>(_1cdec5dc4_Expr{._field_Token=_49813_token, ._field_End=(*(_49742_tokens))[((*(_49742_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1b578b3d9_buildFieldExprPair(_self_, (*(_49742_tokens))), &__jule_any_type77)});;
		};
	};
	return _1b5790476_buildFromTokens(_self_, (*(_49742_tokens)));;
}



inline jule::Slice<jule::Ptr<_1cdec5dc4_Expr>> _1b578ba6b_buildStructLitExprs(_1b57850e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _51243_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>> _51313_parts = _1b578b098_getBraceRangeLitExprParts(_self_, (*(_51243_tokens)));;
	if ((_51313_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1cdec5dc4_Expr>> _51813_pairs = jule::Slice<jule::Ptr<_1cdec5dc4_Expr>>::alloc(0LL, _51313_parts.len());;
	{
		auto expr = &(_51313_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8c7ad04:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _51921_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1cdec5dc4_Expr>> &__jule_push_dest = _51813_pairs; __jule_push_dest.push(_1b578b72a_buildStructLitExpr(_self_, &(_51921_part))); };
			}
			_iter_next_1b8c7ad04:;
			++it;
			goto _iter_begin_1b8c7ad04;
		}
		_iter_end_1b8c7ad04:;
	};
	return _51813_pairs;;
}



inline jule::Ptr<_1cdecae1d_StructLit> _1b578bdac_buildTypedStructLiteral(_1b57850e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _52546_tokens) {
	jule::I32 _52613_i = 0LL;;
	jule::Ptr<_1cdec1a90_TypeDecl> _52713_t;;
	jule::Bool _52716_ok;;
	({
		__jule_tuple_x_1cdec1a90_TypeDecl__jule_tuple_bool __jule_assign_result = _1b579803e_buildType((*(_self_))._field_p, &(_52546_tokens), (&(_52613_i)), true);
		_52713_t = __jule_assign_result.__jule_result_arg0;
		_52716_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_52716_ok))) {
		return nullptr;;
	} else if ((_52613_i >= _52546_tokens.len())) {
		_1b57858cd_pushErr(_self_, _52546_tokens[_52613_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_52546_tokens).mut_slice(_52613_i);;
	jule::Ptr<_1cdeab4b4_Token> _5369_token = _52546_tokens[0LL];;
	if (((*(_5369_token))._field_Id != static_cast<jule::U32>(72LLU))) {
		_1b57858cd_pushErr(_self_, _5369_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1cdecae1d_StructLit>(_1cdecae1d_StructLit{._field_End=_52546_tokens[(_52546_tokens.len() - 1LL)], ._field_Kind=_52713_t, ._field_Exprs=_1b578ba6b_buildStructLitExprs(_self_, &(_52546_tokens))});;
}



inline jule::Ptr<_1cdec5dc4_Expr> _1b578c1ed_buildBraceLitPart(_1b57850e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _54941_tokens) {
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _55013_l;;
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _55020_r;;
	({
		__jule_tuple_sx_1cdeab4b4_Token__jule_tuple_sx_1cdeab4b4_Token __jule_assign_result = _1b57912ce_splitDelim(_54941_tokens, static_cast<jule::U32>(8LLU));
		_55013_l = __jule_assign_result.__jule_result_arg0;
		_55020_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_55013_l != nullptr)) {
		return jule::new_ptr<_1cdec5dc4_Expr>(_1cdec5dc4_Expr{._field_Token=(*(_54941_tokens))[0LL], ._field_End=(*(_54941_tokens))[((*(_54941_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1cdecbbee_KeyValPair>(_1cdecbbee_KeyValPair{._field_Key=_1b5790476_buildFromTokens(_self_, _55013_l), ._field_Val=_1b5790476_buildFromTokens(_self_, _55020_r), ._field_Colon=(*(_54941_tokens))[_55013_l.len()]}), &__jule_any_type78)});;
	};
	return _1b5790476_buildFromTokens(_self_, (*(_54941_tokens)));;
}



inline jule::Ptr<_1cdecb3c4_BraceLit> _1b578c53e_buildBraceLit(_1b57850e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _56637_tokens) {
	jule::Ptr<_1cdecb3c4_BraceLit> _56713_lit = jule::new_ptr<_1cdecb3c4_BraceLit>(_1cdecb3c4_BraceLit{._field_Token=(*(_56637_tokens))[0LL], ._field_End=(*(_56637_tokens))[((*(_56637_tokens)).len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>> _57213_parts = _1b578b098_getBraceRangeLitExprParts(_self_, (*(_56637_tokens)));;
	if ((_57213_parts == nullptr)) {
		return _56713_lit;;
	};
	(*(_56713_lit))._field_Exprs=jule::Slice<jule::Ptr<_1cdec5dc4_Expr>>::alloc(0LL, _57213_parts.len());
	{
		auto expr = &(_57213_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8c8557d:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _57821_part = *it;
			{
				(*_56713_lit.alloc)._field_Exprs=jule::append((*_56713_lit.alloc)._field_Exprs,jule::Slice<jule::Ptr<_1cdec5dc4_Expr>>::make({_1b578c1ed_buildBraceLitPart(_self_, &(_57821_part))}));
			}
			_iter_next_1b8c8557d:;
			++it;
			goto _iter_begin_1b8c8557d;
		}
		_iter_end_1b8c8557d:;
	};
	return _56713_lit;;
}



inline jule::Any _1b578c880_buildBraceRange(_1b57850e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _58539_tokens) {
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _58613_exprTokens;;
	jule::I32 _58625_rangeN;;
	({
		__jule_tuple_sx_1cdeab4b4_Token__jule_tuple_int __jule_assign_result = _1b5791b2b_getRangeExprTokens(_58539_tokens);
		_58613_exprTokens = __jule_assign_result.__jule_result_arg0;
		_58625_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_58613_exprTokens.len() == 0LL)) {
			_case_begin_1b8c871b7:;
			{
				return jule::Any(_1b578c53e_buildBraceLit(_self_, _58539_tokens), &__jule_any_type108);;
			}
		}
		else if ((_58625_rangeN > 0LL)) {
			_case_begin_1b8c8723e:;
			{
				_1b57858cd_pushErr(_self_, (*(_58539_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b8c87162:;
	};
	jule::Ptr<_1cdeab4b4_Token> _5979_elseToken = _58613_exprTokens[(_58613_exprTokens.len() - 1LL)];;
	if (((*(_58613_exprTokens[(_58613_exprTokens.len() - 1LL)]))._field_Id == static_cast<jule::U32>(14LLU))) {
		(_58613_exprTokens).mut_slice(0LL, (_58613_exprTokens.len() - 1LL));;
		jule::Any _60017_d = _1b578ece4_build(_self_, &(_58613_exprTokens));;
		if ((_60017_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _60017_d };
			
			if (_match_expr.type == &__jule_any_type82) {
				_case_begin_1b8c89ac1:;
				{
					((*(_58539_tokens))).mut_slice((_58613_exprTokens.len() + 1LL));;
					jule::I32 _60721_i = 0LL;;
					jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _60821_rangeTokens = _1b5794139_range(&(_60721_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _58539_tokens);;
					jule::Ptr<_1cdec9aed_FnCallExpr> _60921_model = _60017_d.unsafe_cast_ptr<_1cdec9aed_FnCallExpr>();;
					if (_1cdeca208_Ignored(_60921_model.ptr())) {
						_1b57858cd_pushErr(_self_, _5979_elseToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_1b5785c41_pushSuggestion(_self_, jule::Str::lit("just ignore exceptional or handle it but you cannot do both at same time", 72), jule::Slice<jule::Any>());
					};
					(*_60921_model.alloc)._field_Exception=_1b57975d2_buildScope((*(_self_))._field_p, &(_60821_rangeTokens), (*(_58539_tokens))[(_60721_i - 1LL)]);
					return _60017_d;;
				}
			}
			else {
				_case_begin_1b8c89e12:;
				{
					_1b57858cd_pushErr(_self_, _58613_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1b8c89dac:;
		};
	};
	{
		auto &_match_expr{ (*(_58613_exprTokens[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1b8c8e532:;
			{
				return _1b578a839_buildUnsafe(_self_, _58539_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1b8c8eb3c:;
			{
				return jule::Any(_1b578a4e8_buildAnonFn(_self_, _58539_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(1LLU) || _match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1b8c8eba3:;
			{
				return jule::Any(_1b578bdac_buildTypedStructLiteral(_self_, (*(_58539_tokens))), &__jule_any_type107);;
			}
		}
		else {
			_case_begin_1b8c8c73e:;
			{
				_1b57858cd_pushErr(_self_, _58613_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b8c8dee3:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>> _1b578cbc1_getEnumerableParts(_1b57850e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _63741_tokens) {
	(_63741_tokens).mut_slice(1LL, (_63741_tokens.len() - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>> _63913_parts;;
	jule::Slice<_22a93672d_Log> _63920_errors;;
	({
		__jule_tuple_ssx_1cdeab4b4_Token__jule_tuple_s_22a93672d_Log __jule_assign_result = _1b57948a9_parts(&(_63741_tokens), static_cast<jule::U32>(5LLU), true);
		_63913_parts = __jule_assign_result.__jule_result_arg0;
		_63920_errors = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_63920_errors);
	return _63913_parts;;
}



inline jule::Ptr<_1cdecc42a_SliceExpr> _1b578d012_buildSlice(_1b57850e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _64433_tokens) {
	jule::Ptr<_1cdecc42a_SliceExpr> _64513_slc = jule::new_ptr<_1cdecc42a_SliceExpr>(_1cdecc42a_SliceExpr{._field_Token=_64433_tokens[0LL], ._field_End=_64433_tokens[(_64433_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>> _65013_parts = _1b578cbc1_getEnumerableParts(_self_, _64433_tokens);;
	if ((_65013_parts.len() == 0LL)) {
		return _64513_slc;;
	};
	(*(_64513_slc))._field_Exprs=jule::Slice<jule::Ptr<_1cdec5dc4_Expr>>::alloc(0LL, _65013_parts.len());
	{
		auto expr = &(_65013_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8c94aa9:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _65621_p = *it;
			{
				if ((_65621_p.len() == 0LL)) {
					goto _iter_next_1b8c94aa9;
				};
				(*_64513_slc.alloc)._field_Exprs=jule::append((*_64513_slc.alloc)._field_Exprs,jule::Slice<jule::Ptr<_1cdec5dc4_Expr>>::make({_1b5790476_buildFromTokens(_self_, _65621_p)}));
			}
			_iter_next_1b8c94aa9:;
			++it;
			goto _iter_begin_1b8c94aa9;
		}
		_iter_end_1b8c94aa9:;
	};
	return _64513_slc;;
}



inline jule::Ptr<_1cdeccd87_IndexingExpr> _1b578d4b8_buildIndexing(_1b57850e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _66636_exprTokens, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _66713_tokens, jule::Ptr<_1cdeab4b4_Token> _66735_errorToken) {
	jule::Ptr<_1cdeab4b4_Token> _66813_end = _66713_tokens[(_66713_tokens.len() - 1LL)];;
	(_66713_tokens).mut_slice(1LL, (_66713_tokens.len() - 1LL));;
	if ((_66713_tokens.len() == 0LL)) {
		_1b57858cd_pushErr(_self_, _66735_errorToken, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1cdec5dc4_Expr> _67413_expr = _1b5790476_buildFromTokens(_self_, _66636_exprTokens);;
	if ((_67413_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1cdec5dc4_Expr> _67813_index = _1b5790476_buildFromTokens(_self_, _66713_tokens);;
	if ((_67813_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1cdeccd87_IndexingExpr>(_1cdeccd87_IndexingExpr{._field_Token=_66735_errorToken, ._field_End=_66813_end, ._field_Expr=_67413_expr, ._field_Index=_67813_index});;
}



inline jule::Ptr<_1cdecd4e7_SlicingExpr> _1b578dad4_buildSlicing(_1b57850e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _69036_exprTokens, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _69063_start, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _69114_to, jule::Ptr<_1cdeab4b4_Token>* _69133_errorToken, jule::Ptr<_1cdeab4b4_Token> _69157_end) {
	jule::Ptr<_1cdecd4e7_SlicingExpr> _69213_slc = jule::new_ptr<_1cdecd4e7_SlicingExpr>(_1cdecd4e7_SlicingExpr{._field_Token=(*(_69133_errorToken)), ._field_End=_69157_end, ._field_Expr=_1b5790476_buildFromTokens(_self_, (*(_69036_exprTokens))), });;
	if (((*(_69063_start)).len() > 0LL)) {
		(*(_69213_slc))._field_Start=_1b5790476_buildFromTokens(_self_, (*(_69063_start)));
	};
	if (((*(_69114_to)).len() > 0LL)) {
		(*_69213_slc.alloc)._field_To=_1b5790476_buildFromTokens(_self_, (*(_69114_to)));
	};
	return _69213_slc;;
}



inline jule::Any _1b578de25_buildBracketRange(_1b57850e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _70640_tokens) {
	jule::Ptr<_1cdeab4b4_Token> _70713_errorToken = _70640_tokens[0LL];;
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _70813_exprTokens;;
	jule::I32 _70825_rangeN;;
	({
		__jule_tuple_sx_1cdeab4b4_Token__jule_tuple_int __jule_assign_result = _1b5791b2b_getRangeExprTokens(&(_70640_tokens));
		_70813_exprTokens = __jule_assign_result.__jule_result_arg0;
		_70825_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_70813_exprTokens.len() == 0LL)) {
		return jule::Any(_1b578d012_buildSlice(_self_, _70640_tokens), &__jule_any_type94);;
	} else if ((_70825_rangeN > 0LL)) {
		_1b57858cd_pushErr(_self_, _70713_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_70640_tokens).mut_slice(_70813_exprTokens.len());;
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _72313_splitTokens = _70640_tokens.slice(1LL, (_70640_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _72413_start;;
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _72424_to;;
	({
		__jule_tuple_sx_1cdeab4b4_Token__jule_tuple_sx_1cdeab4b4_Token __jule_assign_result = _1b57912ce_splitDelim(&(_72313_splitTokens), static_cast<jule::U32>(8LLU));
		_72413_start = __jule_assign_result.__jule_result_arg0;
		_72424_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_72413_start != nullptr) || (_72424_to != nullptr))) {
		return jule::Any(_1b578dad4_buildSlicing(_self_, &(_70813_exprTokens), &(_72413_start), &(_72424_to), &(_70713_errorToken), _70640_tokens[(_70640_tokens.len() - 1LL)]), &__jule_any_type105);;
	};
	return jule::Any(_1b578d4b8_buildIndexing(_self_, _70813_exprTokens, _70640_tokens, _70713_errorToken), &__jule_any_type104);;
}



inline jule::Any _1b578e266_buildExclRight(_1b57850e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _73138_tokens) {
	jule::Ptr<_1cdeab4b4_Token> _7329_token = (*(_73138_tokens))[((*(_73138_tokens)).len() - 1LL)];;
	((*(_73138_tokens))).mut_slice(0LL, ((*(_73138_tokens)).len() - 1LL));;
	jule::Any _73413_d = _1b578ece4_build(_self_, _73138_tokens);;
	if ((_73413_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _73413_d };
		
		if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1b8ca2a62:;
			{
				(*(_73413_d.unsafe_cast_ptr<_1cdec9aed_FnCallExpr>()))._field_Exception=jule::new_ptr<_1cded1ab1_ScopeTree>(_1cded1ab1_ScopeTree{._field_Deferred=true, });
				return _73413_d;;
			}
		}
		_match_end_1b8ca2a0c:;
	};
	_1b57858cd_pushErr(_self_, _7329_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1b578e5a7_buildData(_1b57850e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _74933_tokens) {
	{
		auto _match_expr{ (*(_74933_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1b8ca41b2:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1b8ca4228:;
			{
				return _1b5786a55_buildSingle(_self_, (*(_74933_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1b8ca428e:;
			{
				if (((*((*(_74933_tokens))[0LL]))._field_Id == static_cast<jule::U32>(27LLU))) {
					return jule::Any(_1b5786d96_buildBindIdent(_self_, _74933_tokens), &__jule_any_type79);;
				};
			}
		}
		_match_end_1b8ca4019:;
	};
	jule::Ptr<_1cdeab4b4_Token> _76113_token = (*(_74933_tokens))[((*(_74933_tokens)).len() - 1LL)];;
	if (((*(_76113_token))._field_Id == static_cast<jule::U32>(39LLU))) {
		return jule::Any(_1b578833c_buildVariadic(_self_, (*(_74933_tokens))), &__jule_any_type75);;
	};
	_76113_token=(*(_74933_tokens))[0LL];
	if (_1cdeabc01_IsUnaryOp((*_76113_token.alloc)._field_Id)) {
		if (((*(_74933_tokens)).len() > 1LL)) {
			_76113_token=(*(_74933_tokens))[1LL];
			if (((*_76113_token.alloc)._field_Id == static_cast<jule::U32>(31LLU))) {
				return jule::Any(_1b5787baa_buildType(_self_, _74933_tokens), &__jule_any_type89);;
			};
		};
		return jule::Any(_1b57871d7_buildUnary(_self_, (*(_74933_tokens))), &__jule_any_type88);;
	};
	if (((*(_74933_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ (*(_76113_token))._field_Id };
			
			if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
				_case_begin_1b8ca8c55:;
				{
					if (((*(_74933_tokens)).len() > 3LL)) {
						jule::Ptr<_1cdeab4b4_Token> _78721_t = (*(_74933_tokens))[((*(_74933_tokens)).len() - 1LL)];;
						if (((*(_78721_t))._field_Id == static_cast<jule::U32>(75LLU))) {
							goto _match_end_1b8ca898b;
						};
					};
					jule::Ptr<_1cdeab4b4_Token> _79317_next = (*(_74933_tokens))[1LL];;
					if (((*(_79317_next))._field_Id != static_cast<jule::U32>(77LLU))) {
						goto _match_end_1b8ca898b;
					};
					return jule::Any(_1b5787baa_buildType(_self_, _74933_tokens), &__jule_any_type89);;
				}
			}
			_match_end_1b8ca898b:;
		};
	};
	_76113_token=(*(_74933_tokens))[((*(_74933_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ (*(_76113_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_1b8cabe12:;
			{
				return _1b5787eeb_buildSubIdent(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(68LLU)) {
			_case_begin_1b8cabe9a:;
			{
				return _1b578e266_buildExclRight(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(75LLU)) {
			_case_begin_1b8cac011:;
			{
				return _1b5789d66_buildParenthesesRange(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_1b8cac077:;
			{
				return _1b578c880_buildBraceRange(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(77LLU)) {
			_case_begin_1b8cac0dd:;
			{
				return _1b578de25_buildBracketRange(_self_, (*(_74933_tokens)));;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1b8cac165:;
			{
				return jule::Any(_1b5787baa_buildType(_self_, _74933_tokens), &__jule_any_type89);;
			}
		}
		_match_end_1b8cabdac:;
	};
	_1b57858cd_pushErr(_self_, _76113_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1b578e9a3_buildBinary(_1b57850e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _82135_tokens, jule::I32 _82153_i) {
	jule::Ptr<_1cdeab4b4_Token> _82213_op = (*(_82135_tokens))[_82153_i];;
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _82313_leftTokens = (*(_82135_tokens)).slice(0LL, _82153_i);;
	if ((_1b579083e_isTypeOp(&((*(_82213_op))._field_Id)) && _1b5790b4c_isTypeRange(&(_82313_leftTokens)))) {
		return jule::Any(_1b5787baa_buildType(_self_, _82135_tokens), &__jule_any_type89);;
	};
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _82813_rightTokens = (*(_82135_tokens)).slice((_82153_i + 1LL));;
	if ((_82313_leftTokens.len() == 0LL)) {
		_1b57858cd_pushErr(_self_, (*(_82135_tokens))[_82153_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b5785c41_pushSuggestion(_self_, jule::Str::lit("left operand expected for binary operator", 41), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_82813_rightTokens.len() == 0LL)) {
		_1b57858cd_pushErr(_self_, (*(_82135_tokens))[_82153_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b5785c41_pushSuggestion(_self_, jule::Str::lit("right operand expected for binary operator", 42), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1cdec948d_BinaryExpr>(_1cdec948d_BinaryExpr{._field_Left=_1b5790476_buildFromTokens(_self_, _82313_leftTokens), ._field_Right=_1b5790476_buildFromTokens(_self_, _82813_rightTokens), ._field_Op=_82213_op}), &__jule_any_type109);;
}



inline jule::Any _1b578ece4_build(_1b57850e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _84629_tokens) {
	if (((*((*(_84629_tokens))[0LL]))._field_Id == static_cast<jule::U32>(37LLU))) {
		return jule::Any(_1b5787baa_buildType(_self_, _84629_tokens), &__jule_any_type89);;
	};
	jule::I32 _8509_i = _1b5791598_findLowestPrecOp(_84629_tokens);;
	if ((_8509_i == -1LL)) {
		return _1b578e5a7_buildData(_self_, _84629_tokens);;
	};
	return _1b578e9a3_buildBinary(_self_, _84629_tokens, _8509_i);;
}



inline jule::Any _1b5790135_buildKind(_1b57850e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _85733_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>> _85813_parts;;
	jule::Slice<_22a93672d_Log> _85820_errors;;
	({
		__jule_tuple_ssx_1cdeab4b4_Token__jule_tuple_s_22a93672d_Log __jule_assign_result = _1b57948a9_parts(_85733_tokens, static_cast<jule::U32>(5LLU), true);
		_85813_parts = __jule_assign_result.__jule_result_arg0;
		_85820_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_85820_errors != nullptr)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_85820_errors);
		return nullptr;;
	} else if ((_85813_parts.len() > 1LL)) {
		return jule::Any(_1b5786082_buildTuple(_self_, &(_85813_parts)), &__jule_any_type80);;
	};
	return _1b578ece4_build(_self_, _85733_tokens);;
}



inline jule::Ptr<_1cdec5dc4_Expr> _1b5790476_buildFromTokens(_1b57850e7_exprBuilder* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _86838_tokens) {
	if ((_86838_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _87213_kind = _1b5790135_buildKind(_self_, &(_86838_tokens));;
	if ((_87213_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1cdec5dc4_Expr>(_1cdec5dc4_Expr{._field_Token=_86838_tokens[0LL], ._field_End=_86838_tokens[(_86838_tokens.len() - 1LL)], ._field_Kind=_87213_kind});;
}





std::ostream &operator<<(std::ostream &_Stream, _1b57850e7_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b5792588_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1b5795c84_stop(_1b5795987_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1b579601a_stopped(_1b5795987_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1b5796438_pushErr(_1b5795987_parser* _self_, jule::Ptr<_1cdeab4b4_Token> _20826_token, jule::Str _20841_fmt, jule::Slice<jule::Any> _20854_args) {
	{ jule::Slice<_22a93672d_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1b579506e_compilerErr(&(_20826_token), &(_20841_fmt), _20854_args)); };
}



inline void _1b579679b_pushSuggestion(_1b5795987_parser* _self_, jule::Str _21333_fmt, jule::Slice<jule::Any> _21346_args) {
	{
		_1b5795415_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _21333_fmt, _21346_args);
	};
}



inline jule::Ptr<_1cdec5dc4_Expr> _1b5796adc_buildExpr(jule::Ptr<_1b5795987_parser> _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _21734_tokens) {
	return _1b5790476_buildFromTokens((*(_self_))._field_ep.ptr(), (*(_21734_tokens)));;
}



inline jule::Ptr<_1cdec0eac_Directive> _1b5796e2d_buildDirective(_1b5795987_parser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _22137_tokens) {
	if ((_22137_tokens.len() == 1LL)) {
		_1b5796438_pushErr(_self_, _22137_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_22137_tokens[1LL]))._field_Column != ((*(_22137_tokens[0LL]))._field_Column + 1LL))) {
		_1b5796438_pushErr(_self_, _22137_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1cdec0eac_Directive>(_1cdec0eac_Directive{._field_Tag=_22137_tokens[1LL], ._field_Args=_22137_tokens.slice(2LL)});;
}



inline void _1b57971d6_pushDirective(_1b5795987_parser* _self_, jule::Ptr<_1cdec0eac_Directive> _23636_d) {
	if ((_23636_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8cd9769:;
		if (it != expr_end) {
			jule::Ptr<_1cdec0eac_Directive> _24116_pd = *it;
			{
				if (((*((*(_23636_d))._field_Tag))._field_Kind == (*(*(_24116_pd))._field_Tag.alloc)._field_Kind)) {
					return;;
				};
			}
			_iter_next_1b8cd9769:;
			++it;
			goto _iter_begin_1b8cd9769;
		}
		_iter_end_1b8cd9769:;
	};
	{ jule::Slice<jule::Ptr<_1cdec0eac_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_23636_d); };
}



inline jule::Ptr<_1cded1ab1_ScopeTree> _1b57975d2_buildScope(jule::Ptr<_1b5795987_parser> _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _24935_tokens, jule::Ptr<_1cdeab4b4_Token> _24957_end) {
	jule::Ptr<_1cded1ab1_ScopeTree> _25013_s = _1b5775aaa_newScope();;
	(*(_25013_s))._field_End=_24957_end;
	_1b57776c2_scopeParser _25213_sp = _1b57776c2_scopeParser{._field_p=_self_, };;
	_1b578457a_build(&_25213_sp, _24935_tokens, &(_25013_s));
	return _25013_s;;
}



inline __jule_tuple_x_1cdec1a90_TypeDecl__jule_tuple_bool _1b5797a88__buildType(jule::Ptr<_1b5795987_parser> _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _25942_tokens, jule::I32* _26013_i, jule::Bool _26022_err) {
	__jule_tuple_x_1cdec1a90_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1b57a7b64_typeBuilder _26113_tb = _1b57a7b64_typeBuilder{._field_p=_self_, ._field_tokens=(*(_25942_tokens)), ._field_i=_26013_i, ._field_err=_26022_err};;
	jule::Ptr<_1cdec1a90_TypeDecl> _26713_decl;;
	jule::Bool _26719_ok;;
	({
		__jule_tuple_x_1cdec1a90_TypeDecl__jule_tuple_bool __jule_assign_result = _1b57aab45_build(&_26113_tb);
		_26713_decl = __jule_assign_result.__jule_result_arg0;
		_26719_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _26713_decl;
	__jule_func_result.__jule_result_arg1 = _26719_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_1cdec1a90_TypeDecl__jule_tuple_bool _1b579803e_buildType(jule::Ptr<_1b5795987_parser> _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _27241_tokens, jule::I32* _27313_i, jule::Bool _27322_err) {
	__jule_tuple_x_1cdec1a90_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1cdeab4b4_Token> _2749_token = (*(_27241_tokens))[(*(_27313_i))];;
	jule::Ptr<_1cdec1a90_TypeDecl> _27513_t;;
	jule::Bool _27516_ok;;
	({
		__jule_tuple_x_1cdec1a90_TypeDecl__jule_tuple_bool __jule_assign_result = _1b5797a88__buildType(_self_, _27241_tokens, _27313_i, _27322_err);
		_27513_t = __jule_assign_result.__jule_result_arg0;
		_27516_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_27322_err && (!(_27516_ok)))) {
		_1b5796438_pushErr(_self_, _2749_token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _27513_t;
	__jule_func_result.__jule_result_arg1 = _27516_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1cded85ac_TypeAliasDecl> _1b5798380_buildTypeAliasDecl(jule::Ptr<_1b5795987_parser> _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _28243_tokens) {
	jule::I32 _28313_i = 1LL;;
	if ((_28313_i >= (*(_28243_tokens)).len())) {
		_1b5796438_pushErr(_self_.ptr(), (*(_28243_tokens))[(_28313_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1cded85ac_TypeAliasDecl> _28813_tad = jule::new_ptr<_1cded85ac_TypeAliasDecl>(_1cded85ac_TypeAliasDecl{._field_Token=(*(_28243_tokens))[1LL], ._field_Ident=(*((*(_28243_tokens))[1LL]))._field_Kind, });;
	jule::Ptr<_1cdeab4b4_Token> _29213_token = (*(_28243_tokens))[_28313_i];;
	if (((*(_29213_token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1b5796438_pushErr(_self_, _29213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b579679b_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_28313_i)++;
	if ((_28313_i >= (*(_28243_tokens)).len())) {
		_1b5796438_pushErr(_self_, (*(_28243_tokens))[(_28313_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _28813_tad;;
	};
	_29213_token=(*(_28243_tokens))[_28313_i];
	if (((*_29213_token.alloc)._field_Id != static_cast<jule::U32>(8LLU))) {
		_1b5796438_pushErr(_self_, (*(_28243_tokens))[(_28313_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b579679b_pushSuggestion(_self_, jule::Str::lit("expected colon \":\"", 18), jule::Slice<jule::Any>());
		return _28813_tad;;
	};
	(_28313_i)++;
	if ((_28313_i >= (*(_28243_tokens)).len())) {
		_1b5796438_pushErr(_self_, (*(_28243_tokens))[(_28313_i - 1LL)], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return _28813_tad;;
	};
	jule::Ptr<_1cdec1a90_TypeDecl> _31313_t;;
	jule::Bool _31316_ok;;
	({
		__jule_tuple_x_1cdec1a90_TypeDecl__jule_tuple_bool __jule_assign_result = _1b579803e_buildType(_self_, _28243_tokens, (&(_28313_i)), true);
		_31313_t = __jule_assign_result.__jule_result_arg0;
		_31316_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_28813_tad))._field_Kind=_31313_t;
	if ((_31316_ok && (_28313_i < (*(_28243_tokens)).len()))) {
		_1b5796438_pushErr(_self_, (*(_28243_tokens))[_28313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_28813_tad.alloc)._field_Public=_1ce0884e7_IsPub((*_28813_tad.alloc)._field_Ident);
	return _28813_tad;;
}



inline void _1b57986e3_buildVarTypeAndExpr(jule::Ptr<_1b5795987_parser> _self_, jule::Ptr<_1cded490a_VarDecl>* _32244_v, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _32262_tokens) {
	jule::I32 _32313_i = 0LL;;
	jule::Ptr<_1cdeab4b4_Token> _32413_tok = (*(_32262_tokens))[_32313_i];;
	if (((*(_32413_tok))._field_Id == static_cast<jule::U32>(8LLU))) {
		(_32313_i)++;
		if (((_32313_i >= (*(_32262_tokens)).len()) || ((*((*(_32262_tokens))[_32313_i]))._field_Id == static_cast<jule::U32>(71LLU)))) {
			_1b5796438_pushErr(_self_.ptr(), _32413_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1cdec1a90_TypeDecl> _33117_t;;
		jule::Bool _33120_ok;;
		({
			__jule_tuple_x_1cdec1a90_TypeDecl__jule_tuple_bool __jule_assign_result = _1b579803e_buildType(_self_, _32262_tokens, (&(_32313_i)), true);
			_33117_t = __jule_assign_result.__jule_result_arg0;
			_33120_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_33120_ok) {
			(*((*(_32244_v))))._field_Kind=_33117_t;
			if ((_32313_i >= (*(_32262_tokens)).len())) {
				return;;
			};
			_32413_tok=(*(_32262_tokens))[_32313_i];
		};
	};
	if (((*_32413_tok.alloc)._field_Id != static_cast<jule::U32>(71LLU))) {
		_1b5796438_pushErr(_self_, _32413_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_32244_v))))._field_Setter=_32413_tok;
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _34713_exprTokens = (*(_32262_tokens)).slice((_32313_i + 1LL));;
	if ((_34713_exprTokens.len() == 0LL)) {
		_1b5796438_pushErr(_self_, _32413_tok, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_32244_v))))._field_Expr=_1b5796adc_buildExpr(_self_, &(_34713_exprTokens));
}



inline void _1b5798a56_buildVarCommon(jule::Ptr<_1b5795987_parser> _self_, jule::Ptr<_1cded490a_VarDecl>* _35539_v, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _35556_tokens) {
	(*((*(_35539_v))))._field_Token=_35556_tokens[0LL];
	if (((*((*((*(_35539_v))))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1b5796438_pushErr(_self_.ptr(), (*((*(_35539_v))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b579679b_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_35539_v))))._field_Ident=(*(*((*(_35539_v))))._field_Token.alloc)._field_Kind;
	(*((*(_35539_v))))._field_Public=_1ce0884e7_IsPub((*((*(_35539_v))))._field_Ident);
	(*((*(_35539_v))))._field_Kind=nullptr;
	if ((_35556_tokens.len() > 1LL)) {
		(_35556_tokens).mut_slice(1LL);;
		_1b57986e3_buildVarTypeAndExpr(_self_, _35539_v, &(_35556_tokens));
	};
}



inline void _1b5798e74_buildVarBegin(_1b5795987_parser* _self_, jule::Ptr<_1cded490a_VarDecl>* _37137_v, jule::I32* _37155_i, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _37164_tokens) {
	jule::Ptr<_1cdeab4b4_Token> _3729_tok = (*(_37164_tokens))[(*(_37155_i))];;
	{
		auto &_match_expr{ (*(_3729_tok))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_1b8d053de:;
			{
				(*((*(_37137_v))))._field_Statically=true;
				goto _case_begin_1b8d058ea;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1b8d058ea:;
			{
				((*(_37155_i)))++;
				if (((*(_37155_i)) >= (*(_37164_tokens)).len())) {
					_1b5796438_pushErr(_self_, _3729_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				if (((*((*(_37164_tokens))[(*(_37155_i))]))._field_Id == static_cast<jule::U32>(32LLU))) {
					(*((*(_37137_v))))._field_Mutable=true;
					((*(_37155_i)))++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU)) {
			_case_begin_1b8d050c0:;
			{
				((*(_37155_i)))++;
				(*((*(_37137_v))))._field_Constant=true;
			}
		}
		else {
			_case_begin_1b8d04cc3:;
			{
				_1b5796438_pushErr(_self_, _3729_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1b8d04d5b:;
	};
	if (((*(_37155_i)) >= (*(_37164_tokens)).len())) {
		_1b5796438_pushErr(_self_, _3729_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1cded490a_VarDecl> _1b57992b5_buildVar(jule::Ptr<_1b5795987_parser> _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _40132_tokens) {
	jule::I32 _40213_i = 0LL;;
	jule::Ptr<_1cded490a_VarDecl> _40313_v = jule::new_ptr<_1cded490a_VarDecl>(_1cded490a_VarDecl{._field_Token=_40132_tokens[0LL], });;
	_1b5798e74_buildVarBegin(_self_.ptr(), &(_40313_v), &(_40213_i), &(_40132_tokens));
	if ((_40213_i >= _40132_tokens.len())) {
		return nullptr;;
	};
	(_40132_tokens).mut_slice(_40213_i);;
	if (((*(_40132_tokens[0LL]))._field_Id == static_cast<jule::U32>(65LLU))) {
		(*(_40313_v))._field_Reference=true;
		if ((_40132_tokens.len() == 1LL)) {
			return nullptr;;
		};
		(_40132_tokens).mut_slice(1LL);;
	};
	_1b5798a56_buildVarCommon(_self_, &(_40313_v), _40132_tokens);
	return _40313_v;;
}



inline jule::Ptr<_1cdecdc9a_GenericDecl> _1b5799606_buildGeneric(jule::Ptr<_1b5795987_parser> _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _42337_tokens) {
	jule::Ptr<_1cdecdc9a_GenericDecl> _42413_g = jule::new_ptr<_1cdecdc9a_GenericDecl>(_1cdecdc9a_GenericDecl{._field_Token=(*(_42337_tokens))[0LL], });;
	if (((*((*(_42413_g))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1b5796438_pushErr(_self_.ptr(), (*_42413_g.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b579679b_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_42413_g.alloc)._field_Ident=(*(*_42413_g.alloc)._field_Token.alloc)._field_Kind;
	if (((*(_42337_tokens)).len() > 1LL)) {
		if (((*((*(_42337_tokens))[1LL]))._field_Id != static_cast<jule::U32>(8LLU))) {
			_1b5796438_pushErr(_self_, (*(_42337_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_42337_tokens)).len() == 2LL)) {
			_1b5796438_pushErr(_self_, (*(_42337_tokens))[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _44117_constraintTokens = (*(_42337_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>> _44217_parts;;
		jule::Slice<_22a93672d_Log> _44224_errors;;
		({
			__jule_tuple_ssx_1cdeab4b4_Token__jule_tuple_s_22a93672d_Log __jule_assign_result = _1b57948a9_parts(&(_44117_constraintTokens), static_cast<jule::U32>(66LLU), true);
			_44217_parts = __jule_assign_result.__jule_result_arg0;
			_44224_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_44224_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_44224_errors);
			return nullptr;;
		};
		(*_42413_g.alloc)._field_Constraint=jule::new_ptr<_1cdecd7e4_Constraint>(_1cdecd7e4_Constraint{._field_Mask=jule::Slice<jule::Ptr<_1cdec1a90_TypeDecl>>::alloc(0LL, _44217_parts.len())});
		{
			auto expr = &(_44217_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b8d12de1:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _44825_part = *it;
				{
					jule::I32 _44921_i = 0LL;;
					jule::Ptr<_1cdec1a90_TypeDecl> _45021_kind;;
					({
						__jule_tuple_x_1cdec1a90_TypeDecl__jule_tuple_bool __jule_assign_result = _1b579803e_buildType(_self_, &(_44825_part), (&(_44921_i)), true);
						_45021_kind = __jule_assign_result.__jule_result_arg0;
					});
					(*((*_42413_g.alloc)._field_Constraint))._field_Mask=jule::append((*(*_42413_g.alloc)._field_Constraint.alloc)._field_Mask,jule::Slice<jule::Ptr<_1cdec1a90_TypeDecl>>::make({_45021_kind}));
					if ((_44921_i < _44825_part.len())) {
						_1b5796438_pushErr(_self_, _44825_part[_44921_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1b8d12de1:;
				++it;
				goto _iter_begin_1b8d12de1;
			}
			_iter_end_1b8d12de1:;
		};
	};
	return _42413_g;;
}



inline jule::Slice<jule::Ptr<_1cdecdc9a_GenericDecl>> _1b5799a02_buildGenerics(jule::Ptr<_1b5795987_parser> _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _46038_tokens, jule::Ptr<_1cdeab4b4_Token>* _46057_errorToken) {
	if (((*(_46038_tokens)).len() == 0LL)) {
		_1b5796438_pushErr(_self_.ptr(), (*(_46057_errorToken)), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>> _46613_parts;;
	jule::Slice<_22a93672d_Log> _46620_errors;;
	({
		__jule_tuple_ssx_1cdeab4b4_Token__jule_tuple_s_22a93672d_Log __jule_assign_result = _1b57948a9_parts(_46038_tokens, static_cast<jule::U32>(5LLU), true);
		_46613_parts = __jule_assign_result.__jule_result_arg0;
		_46620_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_46620_errors.len() > 0LL)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_46620_errors);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1cdecdc9a_GenericDecl>> _47213_generics = jule::Slice<jule::Ptr<_1cdecdc9a_GenericDecl>>::alloc(0LL, _46613_parts.len());;
	{
		auto expr = &(_46613_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8d17b0a:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _47321_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1cdecdc9a_GenericDecl>> &__jule_push_dest = _47213_generics; __jule_push_dest.push(_1b5799606_buildGeneric(_self_, &(_47321_part))); };
			}
			_iter_next_1b8d17b0a:;
			++it;
			goto _iter_begin_1b8d17b0a;
		}
		_iter_end_1b8d17b0a:;
	};
	return _47213_generics;;
}



inline jule::Ptr<_1cded22ed_ParamDecl> _1b5799d43_buildSelfParam(_1b5795987_parser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _48037_tokens) {
	if ((_48037_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1cded22ed_ParamDecl> _48513_param = jule::new_ptr<_1cded22ed_ParamDecl>();;
	jule::I32 _48813_i = 0LL;;
	if (((*(_48037_tokens[_48813_i]))._field_Id == static_cast<jule::U32>(32LLU))) {
		(*_48513_param.alloc)._field_Mutable=true;
		(_48813_i)++;
		if ((_48813_i >= _48037_tokens.len())) {
			_1b5796438_pushErr(_self_, _48037_tokens[(_48813_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	_22ab0b88c_StrBuilder _49813_ident = static__22ab0bb56_New(5LL);;
	if (((*(_48037_tokens[_48813_i]))._field_Id == static_cast<jule::U32>(65LLU))) {
		_22ab154bc_WriteStr(&_49813_ident, jule::Str::lit("&", 1));
		(_48813_i)++;
		if ((_48813_i >= _48037_tokens.len())) {
			_1b5796438_pushErr(_self_, _48037_tokens[(_48813_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if (((*(_48037_tokens[_48813_i]))._field_Id == static_cast<jule::U32>(24LLU))) {
		_22ab154bc_WriteStr(&_49813_ident, jule::Str::lit("self", 4));
		(*_48513_param.alloc)._field_Token=_48037_tokens[_48813_i];
		(_48813_i)++;
		if ((_48813_i < _48037_tokens.len())) {
			_1b5796438_pushErr(_self_, _48037_tokens[_48813_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	};
	(*_48513_param.alloc)._field_Ident=_22ab15cb4_Str(&_49813_ident);
	return _48513_param;;
}



inline void _1b579a261_paramTypeBegin(_1b5795987_parser* _self_, jule::Ptr<_1cded22ed_ParamDecl>* _52238_param, jule::I32* _52262_i, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _52271_tokens) {
	for (; ((*(_52262_i)) < (*(_52271_tokens)).len()); ((*(_52262_i)))++) {
		{
			jule::Ptr<_1cdeab4b4_Token> _52413_token = (*(_52271_tokens))[(*(_52262_i))];;
			if (((*(_52413_token))._field_Id != static_cast<jule::U32>(39LLU))) {
				return;;
			};
			if ((*((*(_52238_param))))._field_Variadic) {
				_1b5796438_pushErr(_self_, _52413_token, jule::Str::lit("define is already variadic", 26), jule::Slice<jule::Any>());
				goto _iter_next_1b8d20382;
			};
			(*((*(_52238_param))))._field_Variadic=true;
		}
	_iter_next_1b8d20382:;
	}
	_iter_end_1b8d20382:;;
}



inline void _1b579a5c4_buildParamType(jule::Ptr<_1b5795987_parser> _self_, jule::Ptr<_1cded22ed_ParamDecl>* _53739_param, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _53763_tokens) {
	jule::I32 _53813_i = 0LL;;
	_1b579a261_paramTypeBegin(_self_.ptr(), _53739_param, &(_53813_i), _53763_tokens);
	if ((_53813_i >= (*(_53763_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1cdec1a90_TypeDecl__jule_tuple_bool __jule_assign_result = _1b579803e_buildType(_self_, _53763_tokens, (&(_53813_i)), true);
		(*((*(_53739_param))))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_53813_i < (*(_53763_tokens)).len())) {
		_1b5796438_pushErr(_self_, (*(_53763_tokens))[_53813_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1b579a937_buildParamBody(jule::Ptr<_1b5795987_parser> _self_, jule::Ptr<_1cded22ed_ParamDecl>* _55039_param, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _55062_tokens) {
	jule::Ptr<_1cdeab4b4_Token> _55113_tok = _55062_tokens[0LL];;
	if ((_55062_tokens.len() == 1LL)) {
		(*((*(_55039_param))))._field_Ident=(*(_55113_tok))._field_Kind;
		return;;
	} else if ((_55062_tokens.len() < 3LL)) {
		_1b5796438_pushErr(_self_.ptr(), _55113_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_55062_tokens[1LL]))._field_Id != static_cast<jule::U32>(8LLU))) {
		(*((*(_55039_param))))._field_Ident=jule::Str::lit("<anonymous>", 11);
		_1b579a5c4_buildParamType(_self_, _55039_param, &(_55062_tokens));
		return;;
	};
	(*((*(_55039_param))))._field_Ident=(*(_55113_tok))._field_Kind;
	(_55062_tokens).mut_slice(2LL);;
	_1b579a5c4_buildParamType(_self_, _55039_param, &(_55062_tokens));
}



inline jule::Ptr<_1cded22ed_ParamDecl> _1b579ac78_buildParam(jule::Ptr<_1b5795987_parser> _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _57034_tokens) {
	jule::Ptr<_1cded22ed_ParamDecl> _57113_param = jule::new_ptr<_1cded22ed_ParamDecl>(_1cded22ed_ParamDecl{._field_Token=_57034_tokens[0LL], });;
	if (((*((*(_57113_param))._field_Token))._field_Id == static_cast<jule::U32>(32LLU))) {
		(*_57113_param.alloc)._field_Mutable=true;
		if ((_57034_tokens.len() == 1LL)) {
			_1b5796438_pushErr(_self_.ptr(), _57034_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_57034_tokens).mut_slice(1LL);;
		(*_57113_param.alloc)._field_Token=_57034_tokens[0LL];
	};
	if ((_57034_tokens.len() >= 3LL)) {
		if (((*(*_57113_param.alloc)._field_Token.alloc)._field_Id == static_cast<jule::U32>(65LLU))) {
			if ((_57034_tokens.len() == 1LL)) {
				_1b5796438_pushErr(_self_, _57034_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if ((((*(_57034_tokens[1LL]))._field_Id == static_cast<jule::U32>(1LLU)) && ((*(_57034_tokens[2LL]))._field_Id == static_cast<jule::U32>(8LLU)))) {
				(*_57113_param.alloc)._field_Reference=true;
				(_57034_tokens).mut_slice(1LL);;
				(*_57113_param.alloc)._field_Token=_57034_tokens[0LL];
			};
		};
	};
	if (((*(*_57113_param.alloc)._field_Token.alloc)._field_Id != static_cast<jule::U32>(1LLU))) {
		(*_57113_param.alloc)._field_Ident=jule::Str::lit("<anonymous>", 11);
		_1b579a5c4_buildParamType(_self_, &(_57113_param), &(_57034_tokens));
	} else {
		_1b579a937_buildParamBody(_self_, &(_57113_param), _57034_tokens);
	};
	return _57113_param;;
}



inline void _1b579b031_checkParams(_1b5795987_parser* _self_, jule::Slice<jule::Ptr<_1cded22ed_ParamDecl>>* _61335_params) {
	{
		auto expr = _61335_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b82e9362:;
		if (it != expr_end) {
			jule::Ptr<_1cded22ed_ParamDecl> _61421_param = *it;
			{
				if ((_1cded2672_IsSelf(_61421_param.ptr()) || ((*_61421_param.alloc)._field_Kind != nullptr))) {
					goto _iter_next_1b82e9362;
				};
				if (((*_61421_param.alloc)._field_Token == nullptr)) {
					_1b5796438_pushErr(_self_, (*_61421_param.alloc)._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
				} else {
					(*_61421_param.alloc)._field_Kind=jule::new_ptr<_1cdec1a90_TypeDecl>(_1cdec1a90_TypeDecl{._field_Token=(*_61421_param.alloc)._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1cdec219a_IdentTypeDecl>(_1cdec219a_IdentTypeDecl{._field_Token=(*_61421_param.alloc)._field_Token, ._field_Ident=(*((*_61421_param.alloc)._field_Token))._field_Kind, }), &__jule_any_type20)});
					(*_61421_param.alloc)._field_Ident=jule::Str::lit("<anonymous>", 11);
				};
			}
			_iter_next_1b82e9362:;
			++it;
			goto _iter_begin_1b82e9362;
		}
		_iter_end_1b82e9362:;
	};
}



inline jule::Slice<jule::Ptr<_1cded22ed_ParamDecl>> _1b579b42c_buildParams(jule::Ptr<_1b5795987_parser> _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _63336_tokens, jule::Bool _63354_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>> _63413_parts;;
	jule::Slice<_22a93672d_Log> _63420_errs;;
	({
		__jule_tuple_ssx_1cdeab4b4_Token__jule_tuple_s_22a93672d_Log __jule_assign_result = _1b57948a9_parts(_63336_tokens, static_cast<jule::U32>(5LLU), true);
		_63413_parts = __jule_assign_result.__jule_result_arg0;
		_63420_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_63420_errs);
	if ((_63413_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1cded22ed_ParamDecl>> _64017_params = nullptr;;
	if ((_63354_method && (_63413_parts.len() > 0LL))) {
		jule::Ptr<_1cded22ed_ParamDecl> _64217_param = _1b5799d43_buildSelfParam(_self_, _63413_parts[0LL]);;
		if (((_64217_param != nullptr) && _1cded2672_IsSelf(_64217_param))) {
			{ jule::Slice<jule::Ptr<_1cded22ed_ParamDecl>> &__jule_push_dest = _64017_params; __jule_push_dest.push(_64217_param); };
			(_63413_parts).mut_slice(1LL);;
		};
	};
	{
		auto expr = &(_63413_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8300c09:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _64921_part = *it;
			{
				if ((_64921_part.len() == 0LL)) {
					goto _iter_next_1b8300c09;
				};
				jule::Ptr<_1cded22ed_ParamDecl> _65317_param = _1b579ac78_buildParam(_self_, _64921_part);;
				if ((_65317_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_1cded22ed_ParamDecl>> &__jule_push_dest = _64017_params; __jule_push_dest.push(_65317_param); };
				};
			}
			_iter_next_1b8300c09:;
			++it;
			goto _iter_begin_1b8300c09;
		}
		_iter_end_1b8300c09:;
	};
	_1b579b031_checkParams(_self_, &(_64017_params));
	return _64017_params;;
}



inline __jule_tuple_x_1cdec4983_RetTypeDecl__jule_tuple_bool _1b579b828_buildMultiRetType(jule::Ptr<_1b5795987_parser> _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _66342_tokens, jule::I32* _66365_i) {
	__jule_tuple_x_1cdec4983_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1cdec4983_RetTypeDecl>();
	((*(_66365_i)))++;
	if (((*(_66365_i)) >= (*(_66342_tokens)).len())) {
		((*(_66365_i)))--;
		({
			__jule_tuple_x_1cdec1a90_TypeDecl__jule_tuple_bool __jule_assign_result = _1b579803e_buildType(_self_, _66342_tokens, _66365_i, false);
			(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_66365_i)))--;
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _67313_rangeTokens = _1b5794139_range(_66365_i, static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), _66342_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>> _67513_parts;;
	jule::Slice<_22a93672d_Log> _67520_errs;;
	({
		__jule_tuple_ssx_1cdeab4b4_Token__jule_tuple_s_22a93672d_Log __jule_assign_result = _1b57948a9_parts(&(_67313_rangeTokens), static_cast<jule::U32>(5LLU), true);
		_67513_parts = __jule_assign_result.__jule_result_arg0;
		_67520_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_67520_errs);
	if ((_67513_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1cdec1a90_TypeDecl>> _68113_types = jule::Slice<jule::Ptr<_1cdec1a90_TypeDecl>>::alloc(0LL, _67513_parts.len());;
	(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::Slice<jule::Ptr<_1cdeab4b4_Token>>::alloc(0LL, _67513_parts.len());
	{
		auto expr = &(_67513_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8306979:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _68321_part = *it;
			{
				if ((_68321_part.len() == 0LL)) {
					goto _iter_next_1b8306979;
				};
				jule::Ptr<_1cdeab4b4_Token> _68717_token = _68321_part[0LL];;
				jule::I32 _68817_offset = 0LL;;
				if ((_68321_part.len() > 1LL)) {
					_68717_token=_68321_part[1LL];
					if (((*(_68717_token))._field_Id == static_cast<jule::U32>(8LLU))) {
						_68817_offset=2LL;
						if ((_68321_part.len() < 3LL)) {
							_1b5796438_pushErr(_self_, _68717_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							goto _iter_next_1b8306979;
						};
					};
				};
				_68717_token=_68321_part[0LL];
				if ((_68817_offset != 2LL)) {
					jule::Ptr<_1cdeab4b4_Token> _70421_newToken = jule::new_ptr<_1cdeab4b4_Token>((*_68717_token.alloc));;
					(*_70421_newToken.alloc)._field_Kind=jule::Str::lit("<anonymous>", 11);
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,jule::Slice<jule::Ptr<_1cdeab4b4_Token>>::make({_70421_newToken}));
				} else {
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,jule::Slice<jule::Ptr<_1cdeab4b4_Token>>::make({_68717_token}));
				};
				jule::Ptr<_1cdec1a90_TypeDecl> _71117_tk;;
				({
					__jule_tuple_x_1cdec1a90_TypeDecl__jule_tuple_bool __jule_assign_result = _1b579803e_buildType(_self_, &(_68321_part), (&(_68817_offset)), true);
					_71117_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_68817_offset < _68321_part.len())) {
					_1b5796438_pushErr(_self_, _68321_part[_68817_offset], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1cdec1a90_TypeDecl>> &__jule_push_dest = _68113_types; __jule_push_dest.push(_71117_tk); };
			}
			_iter_next_1b8306979:;
			++it;
			goto _iter_begin_1b8306979;
		}
		_iter_end_1b8306979:;
	};
	if ((_68113_types.len() > 1LL)) {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=jule::new_ptr<_1cdec1a90_TypeDecl>(_1cdec1a90_TypeDecl{._field_Token=(*(_66342_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1cdec32bc_TupleTypeDecl>(_1cdec32bc_TupleTypeDecl{._field_Types=_68113_types}), &__jule_any_type74)});
	} else {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=_68113_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1cdec4983_RetTypeDecl__jule_tuple_bool _1b579bc24_buildRetType(jule::Ptr<_1b5795987_parser> _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _73437_tokens, jule::I32* _73460_i) {
	__jule_tuple_x_1cdec4983_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1cdec4983_RetTypeDecl>();
	if (((*(_73460_i)) >= (*(_73437_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1cdeab4b4_Token> _74013_token = (*(_73437_tokens))[(*(_73460_i))];;
	{
		auto &_match_expr{ (*(_74013_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(72LLU)) {
			_case_begin_1b8310994:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(71LLU)) {
			_case_begin_1b8310a0a:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(8LLU)) {
			_case_begin_1b8310a71:;
			{
				if ((((*(_73460_i)) + 1LL) >= (*(_73437_tokens)).len())) {
					_1b5796438_pushErr(_self_.ptr(), _74013_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_73460_i)))++;
				_74013_token=(*(_73437_tokens))[(*(_73460_i))];
				{
					auto &_match_expr{ (*(_74013_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1b8311c81:;
						{
							({
								__jule_tuple_x_1cdec4983_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1b579b828_buildMultiRetType(_self_, _73437_tokens, _73460_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1b8312974:;
						{
							_1b5796438_pushErr(_self_, _74013_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_1b83128ec:;
				};
				({
					__jule_tuple_x_1cdec1a90_TypeDecl__jule_tuple_bool __jule_assign_result = _1b579803e_buildType(_self_, _73437_tokens, _73460_i, true);
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1b831093e:;
	};
	((*(_73460_i)))++;
	_1b5796438_pushErr(_self_.ptr(), _74013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1cded3750_FnDecl> _1b579c1ca_buildFnPrototype(jule::Ptr<_1b5795987_parser> _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _77341_tokens, jule::I32* _77364_i, jule::Bool _77372_method) {
	jule::Ptr<_1cded3750_FnDecl> _77413_f = jule::new_ptr<_1cded3750_FnDecl>(_1cded3750_FnDecl{._field_Token=(*(_77341_tokens))[(*(_77364_i))], });;
	if (((*((*(_77413_f))._field_Token))._field_Id == static_cast<jule::U32>(34LLU))) {
		(*_77413_f.alloc)._field_Statically=true;
		((*(_77364_i)))++;
		if (((*(_77364_i)) >= (*(_77341_tokens)).len())) {
			_1b5796438_pushErr(_self_.ptr(), (*_77413_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_77413_f.alloc)._field_Token=(*(_77341_tokens))[(*(_77364_i))];
	};
	if (((*(*_77413_f.alloc)._field_Token.alloc)._field_Id == static_cast<jule::U32>(31LLU))) {
		(*_77413_f.alloc)._field_Unsafety=true;
		((*(_77364_i)))++;
		if (((*(_77364_i)) >= (*(_77341_tokens)).len())) {
			_1b5796438_pushErr(_self_, (*_77413_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_77413_f.alloc)._field_Token=(*(_77341_tokens))[(*(_77364_i))];
	};
	((*(_77364_i)))++;
	if (((*(_77364_i)) >= (*(_77341_tokens)).len())) {
		_1b5796438_pushErr(_self_, (*_77413_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1cdeab4b4_Token> _8079_tok = (*(_77341_tokens))[(*(_77364_i))];;
	if (((*(_8079_tok))._field_Id == static_cast<jule::U32>(1LLU))) {
		((*(_77364_i)))++;
		if (((*(_77364_i)) >= (*(_77341_tokens)).len())) {
			_1b5796438_pushErr(_self_, (*_77413_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_77413_f.alloc)._field_Ident=(*_8079_tok.alloc)._field_Kind;
	} else {
		(*_77413_f.alloc)._field_Ident=jule::Str::lit("<anonymous>", 11);
	};
	jule::Ptr<_1cdeab4b4_Token> _8199_errorToken = (*(_77341_tokens))[(*(_77364_i))];;
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _82013_genericsTokens = _1b5794139_range(_77364_i, static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), _77341_tokens);;
	if ((_82013_genericsTokens != nullptr)) {
		(*_77413_f.alloc)._field_Generics=_1b5799a02_buildGenerics(_self_, &(_82013_genericsTokens), &(_8199_errorToken));
	};
	if (((*((*(_77341_tokens))[(*(_77364_i))]))._field_Id != static_cast<jule::U32>(74LLU))) {
		_1b5796438_pushErr(_self_, (*(_77341_tokens))[(*(_77364_i))], jule::Str::lit("missing function parentheses", 28), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _83013_paramsToks = _1b5794139_range(_77364_i, static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), _77341_tokens);;
	if ((_83013_paramsToks.len() > 0LL)) {
		(*_77413_f.alloc)._field_Params=_1b579b42c_buildParams(_self_, &(_83013_paramsToks), _77372_method);
	};
	if (((*(_77364_i)) < (*(_77341_tokens)).len())) {
		jule::Ptr<_1cdeab4b4_Token> _83613_token = (*(_77341_tokens))[(*(_77364_i))];;
		if (((*(_83613_token))._field_Id == static_cast<jule::U32>(68LLU))) {
			(*_77413_f.alloc)._field_Exceptional=true;
			((*(_77364_i)))++;
		};
	};
	(*_77413_f.alloc)._field_Public=_1ce0884e7_IsPub((*_77413_f.alloc)._field_Ident);
	({
		__jule_tuple_x_1cdec4983_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1b579bc24_buildRetType(_self_, _77341_tokens, _77364_i);
		(*_77413_f.alloc)._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _77413_f;;
}



inline jule::Ptr<_1cded3750_FnDecl> _1b579c681_buildFn(jule::Ptr<_1b5795987_parser> _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _85032_tokens, jule::Bool _85050_method, jule::Bool _85064_prototype) {
	jule::I32 _85113_i = 0LL;;
	jule::Ptr<_1cded3750_FnDecl> _85213_f = _1b579c1ca_buildFnPrototype(_self_, _85032_tokens, &(_85113_i), _85050_method);;
	if (_85064_prototype) {
		if ((_85113_i < (*(_85032_tokens)).len())) {
			_1b5796438_pushErr(_self_, (*(_85032_tokens))[(_85113_i + 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		return _85213_f;;
	} else if ((_85213_f == nullptr)) {
		return _85213_f;;
	};
	if ((_85113_i >= (*(_85032_tokens)).len())) {
		_1b5795c84_stop(_self_);
		_1b5796438_pushErr(_self_, (*(_85213_f))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1b579679b_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _86813_blockTokens = _1b5794139_range(&(_85113_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _85032_tokens);;
	if ((_86813_blockTokens != nullptr)) {
		(*_85213_f.alloc)._field_Scope=_1b57975d2_buildScope(_self_, &(_86813_blockTokens), (*(_85032_tokens))[(_85113_i - 1LL)]);
		(*((*_85213_f.alloc)._field_Scope))._field_Unsafety=(*_85213_f.alloc)._field_Unsafety;
		if ((_85113_i < (*(_85032_tokens)).len())) {
			_1b5796438_pushErr(_self_, (*(_85032_tokens))[_85113_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	} else {
		_1b5795c84_stop(_self_);
		_1b5796438_pushErr(_self_, (*_85213_f.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1b579679b_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _85213_f;;
}



inline jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _1b579c9c2_getUseDeclSelectors(_1b5795987_parser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _88442_tokens) {
	jule::I32 _88513_i = 0LL;;
	_88442_tokens=_1b5794139_range(&(_88513_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_88442_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>> _88713_parts;;
	jule::Slice<_22a93672d_Log> _88720_errs;;
	({
		__jule_tuple_ssx_1cdeab4b4_Token__jule_tuple_s_22a93672d_Log __jule_assign_result = _1b57948a9_parts(&(_88442_tokens), static_cast<jule::U32>(5LLU), true);
		_88713_parts = __jule_assign_result.__jule_result_arg0;
		_88720_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_88720_errs.len() > 0LL)) {
		((*(_self_))._field_errors).append(_88720_errs);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _89313_selectors = jule::Slice<jule::Ptr<_1cdeab4b4_Token>>::alloc(0LL, _88713_parts.len());;
	{
		auto expr = &(_88713_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b832adbb:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _89421_part = *it;
			{
				if ((_89421_part.len() > 1LL)) {
					_1b5796438_pushErr(_self_, _89421_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1cdeab4b4_Token> _89817_tok = _89421_part[0LL];;
				if ((((*(_89817_tok))._field_Id != static_cast<jule::U32>(1LLU)) && ((*_89817_tok.alloc)._field_Id != static_cast<jule::U32>(24LLU)))) {
					_1b5796438_pushErr(_self_, _89817_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					_1b579679b_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					goto _iter_next_1b832adbb;
				};
				{ jule::Slice<jule::Ptr<_1cdeab4b4_Token>> &__jule_push_dest = _89313_selectors; __jule_push_dest.push(_89817_tok); };
			}
			_iter_next_1b832adbb:;
			++it;
			goto _iter_begin_1b832adbb;
		}
		_iter_end_1b832adbb:;
	};
	return _89313_selectors;;
}



inline void _1b579cd35_buildBindUseDecl(_1b5795987_parser* _self_, jule::Ptr<_1cded9b96_UseDecl>* _90940_decl, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _90957_tokens) {
	if (((*(_90957_tokens)).len() > 1LL)) {
		_1b5796438_pushErr(_self_, (*(_90957_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1cdeab4b4_Token> _9139_token = (*(_90957_tokens))[0LL];;
	if ((((*(_9139_token))._field_Id != static_cast<jule::U32>(4LLU)) || (((*_9139_token.alloc)._field_Kind[0LL] != '`') && ((*_9139_token.alloc)._field_Kind[0LL] != '\"')))) {
		_1b5796438_pushErr(_self_, _9139_token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_90940_decl))))._field_Binded=true;
	(*((*(_90940_decl))))._field_LinkPath=(*_9139_token.alloc)._field_Kind.slice(1LL, ((*_9139_token.alloc)._field_Kind.len() - 1LL));
}



inline jule::Str _1b579d176_useDeclTokstoa(_1b5795987_parser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _92234_tokens) {
	jule::I32 _92313_n = 0LL;;
	{
		auto expr = _92234_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b83332ad:;
		if (it != expr_end) {
			jule::Ptr<_1cdeab4b4_Token> *_92416_token = it;
			{
				if ((((*((*(_92416_token))))._field_Id != static_cast<jule::U32>(1LLU)) && ((*(*(_92416_token)).alloc)._field_Id != static_cast<jule::U32>(19LLU)))) {
					_1b5796438_pushErr(_self_, (*(_92416_token)), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				_92313_n+=(*(*(_92416_token)).alloc)._field_Kind.len();
			}
			_iter_next_1b83332ad:;
			++it;
			goto _iter_begin_1b83332ad;
		}
		_iter_end_1b83332ad:;
	};
	_22ab0b88c_StrBuilder _93013_s = static__22ab0bb56_New(_92313_n);;
	{
		auto expr = _92234_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8333423:;
		if (it != expr_end) {
			jule::Ptr<_1cdeab4b4_Token> *_93116_token = it;
			{
				_22ab154bc_WriteStr(&_93013_s, (*((*(_93116_token))))._field_Kind);
			}
			_iter_next_1b8333423:;
			++it;
			goto _iter_begin_1b8333423;
		}
		_iter_end_1b8333423:;
	};
	return _22ab15cb4_Str(&_93013_s);;
}



inline void _1b579d4d9_buildStdUseDecl(_1b5795987_parser* _self_, jule::Ptr<_1cded9b96_UseDecl>* _93739_decl, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _93759_tokens) {
	(*((*(_93739_decl))))._field_Std=true;
	jule::Ptr<_1cdeab4b4_Token> _94013_token = _93759_tokens[0LL];;
	if ((_93759_tokens.len() < 3LL)) {
		_1b5796438_pushErr(_self_, _94013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(_93759_tokens).mut_slice(2LL);;
	_94013_token=_93759_tokens[(_93759_tokens.len() - 1LL)];
	{
		auto &_match_expr{ (*(_94013_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_1b8337dc8:;
			{
				_1b5796438_pushErr(_self_, _94013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_1b8337e3e:;
			{
				jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _95321_selectors = nullptr;;
				({
					__jule_tuple_sx_1cdeab4b4_Token__jule_tuple_sx_1cdeab4b4_Token __jule_assign_result = _1b5794403_rangeLast(&(_93759_tokens));
					_93759_tokens = __jule_assign_result.__jule_result_arg0;
					_95321_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_93739_decl))))._field_Selected=_1b579c9c2_getUseDeclSelectors(_self_, _95321_selectors);
				if ((_93759_tokens.len() == 0LL)) {
					_1b5796438_pushErr(_self_, _94013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_94013_token=_93759_tokens[(_93759_tokens.len() - 1LL)];
				if (((*(_94013_token))._field_Id != static_cast<jule::U32>(19LLU))) {
					_1b5796438_pushErr(_self_, _94013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_93759_tokens).mut_slice(0LL, (_93759_tokens.len() - 1LL));;
				if ((_93759_tokens.len() == 0LL)) {
					_1b5796438_pushErr(_self_, _94013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1b8337ea5:;
			{
				(_93759_tokens).mut_slice(0LL, (_93759_tokens.len() - 1LL));;
				if ((_93759_tokens.len() == 0LL)) {
					_1b5796438_pushErr(_self_, _94013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_94013_token=_93759_tokens[(_93759_tokens.len() - 1LL)];
				if (((*(_94013_token))._field_Id != static_cast<jule::U32>(19LLU))) {
					_1b5796438_pushErr(_self_, _94013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_93759_tokens).mut_slice(0LL, (_93759_tokens.len() - 1LL));;
				if ((_93759_tokens.len() == 0LL)) {
					_1b5796438_pushErr(_self_, _94013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_93739_decl))))._field_Full=true;
			}
		}
		_match_end_1b8337d73:;
	};
	if (((_93759_tokens.len() == 1LL) && ((*(_93759_tokens[0LL]))._field_Id == static_cast<jule::U32>(31LLU)))) {
		(*((*(_93739_decl))))._field_LinkPath=jule::Str::lit("std::unsafe", 11);
	} else {
		(*((*(_93739_decl))))._field_LinkPath=(jule::Str::lit("std::", 5) + _1b579d176_useDeclTokstoa(_self_, &(_93759_tokens)));
	};
}



inline void _1b579d84c_buildIdentUseDecl(_1b5795987_parser* _self_, jule::Ptr<_1cded9b96_UseDecl>* _99541_decl, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _99561_tokens) {
	(*((*(_99541_decl))))._field_Std=false;
	jule::Ptr<_1cdeab4b4_Token> _99813_token = _99561_tokens[(_99561_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ (*(_99813_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_1b834194d:;
			{
				_1b5796438_pushErr(_self_, _99813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_1b83428b6:;
			{
				jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _100421_selectors = nullptr;;
				({
					__jule_tuple_sx_1cdeab4b4_Token__jule_tuple_sx_1cdeab4b4_Token __jule_assign_result = _1b5794403_rangeLast(&(_99561_tokens));
					_99561_tokens = __jule_assign_result.__jule_result_arg0;
					_100421_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_99541_decl))))._field_Selected=_1b579c9c2_getUseDeclSelectors(_self_, _100421_selectors);
				if ((_99561_tokens.len() == 0LL)) {
					_1b5796438_pushErr(_self_, _99813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99813_token=_99561_tokens[(_99561_tokens.len() - 1LL)];
				if (((*(_99813_token))._field_Id != static_cast<jule::U32>(19LLU))) {
					_1b5796438_pushErr(_self_, _99813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_99561_tokens).mut_slice(0LL, (_99561_tokens.len() - 1LL));;
				if ((_99561_tokens.len() == 0LL)) {
					_1b5796438_pushErr(_self_, _99813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1b834292c:;
			{
				(_99561_tokens).mut_slice(0LL, (_99561_tokens.len() - 1LL));;
				if ((_99561_tokens.len() == 0LL)) {
					_1b5796438_pushErr(_self_, _99813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99813_token=_99561_tokens[(_99561_tokens.len() - 1LL)];
				if (((*(_99813_token))._field_Id != static_cast<jule::U32>(19LLU))) {
					_1b5796438_pushErr(_self_, _99813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_99561_tokens).mut_slice(0LL, (_99561_tokens.len() - 1LL));;
				if ((_99561_tokens.len() == 0LL)) {
					_1b5796438_pushErr(_self_, _99813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_99541_decl))))._field_Full=true;
			}
		}
		_match_end_1b8342795:;
	};
	(*((*(_99541_decl))))._field_LinkPath=_1b579d176_useDeclTokstoa(_self_, &(_99561_tokens));
}



inline void _1b579dbb0_parseUseDecl(_1b5795987_parser* _self_, jule::Ptr<_1cded9b96_UseDecl>* _104336_decl, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _104356_tokens) {
	if ((*((*(_104336_decl))))._field_Binded) {
		_1b579cd35_buildBindUseDecl(_self_, _104336_decl, &(_104356_tokens));
		return;;
	};
	jule::Ptr<_1cdeab4b4_Token> _104913_token = _104356_tokens[0LL];;
	if (((*(_104913_token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1b5796438_pushErr(_self_, _104913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b579679b_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	if (((_104356_tokens.len() > 2LL) && ((*(_104356_tokens[1LL]))._field_Id == static_cast<jule::U32>(9LLU)))) {
		(*((*(_104336_decl))))._field_Alias=(*_104913_token.alloc)._field_Kind;
		if (((*(_104356_tokens[2LL]))._field_Id != static_cast<jule::U32>(1LLU))) {
			_1b5796438_pushErr(_self_, _104913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_1b579679b_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			return;;
		};
		(_104356_tokens).mut_slice(2LL);;
		_104913_token=_104356_tokens[0LL];
	};
	;
	{
		
		if ((*_104913_token.alloc)._field_Kind.equal("std", 3)) {
			_case_begin_1b834ea38:;
			{
				_1b579d4d9_buildStdUseDecl(_self_, _104336_decl, _104356_tokens);
			}
		}
		else {
			_case_begin_1b834e692:;
			{
				_1b579d84c_buildIdentUseDecl(_self_, _104336_decl, _104356_tokens);
			}
		}
		_match_end_1b834e63c:;
	};
}



inline jule::Ptr<_1cded9b96_UseDecl> _1b579e0ab_buildUseDecl(_1b5795987_parser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _107735_tokens, jule::Bool _107753_binded) {
	jule::Ptr<_1cded9b96_UseDecl> _107813_decl = jule::new_ptr<_1cded9b96_UseDecl>(_1cded9b96_UseDecl{._field_Token=_107735_tokens[0LL], ._field_Binded=_107753_binded, });;
	if ((_107735_tokens.len() < 2LL)) {
		_1b5796438_pushErr(_self_, (*(_107813_decl))._field_Token, jule::Str::lit("missing path of use statement", 29), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_107735_tokens).mut_slice(1LL);;
	_1b579dbb0_parseUseDecl(_self_, &(_107813_decl), _107735_tokens);
	return _107813_decl;;
}



inline jule::Ptr<_1cdec1a90_TypeDecl> _1b579e4a7_buildTypeEnumItemKind(jule::Ptr<_1b5795987_parser> _self_, jule::I32* _109146_i, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _109159_tokens) {
	jule::I32 _109213_braceN = 0LL;;
	jule::I32 _10939_exprStart = (*(_109146_i));;
	for (; ((*(_109146_i)) < (*(_109159_tokens)).len()); ((*(_109146_i)))++) {
		{
			jule::Ptr<_1cdeab4b4_Token> _109513_t = (*(_109159_tokens))[(*(_109146_i))];;
			{
				auto &_match_expr{ (*(_109513_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1b8353a3c:;
					{
						(_109213_braceN)++;
						goto _iter_next_1b8353025;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1b8353d8e:;
					{
						(_109213_braceN)--;
					}
				}
				_match_end_1b8353d28:;
			};
			if ((_109213_braceN > 0LL)) {
				goto _iter_next_1b8353025;
			};
			if ((((*(_109513_t))._field_Id == static_cast<jule::U32>(5LLU)) || (((*(_109146_i)) + 1LL) >= (*(_109159_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _111125_kindTokens = nullptr;;
				if (((*_109513_t.alloc)._field_Id == static_cast<jule::U32>(5LLU))) {
					_111125_kindTokens=(*(_109159_tokens)).slice(_10939_exprStart, (*(_109146_i)));
				} else {
					_111125_kindTokens=(*(_109159_tokens)).slice(_10939_exprStart);
				};
				jule::I32 _111721_j = 0LL;;
				jule::Ptr<_1cdec1a90_TypeDecl> _111821_kind;;
				({
					__jule_tuple_x_1cdec1a90_TypeDecl__jule_tuple_bool __jule_assign_result = _1b579803e_buildType(_self_, &(_111125_kindTokens), (&(_111721_j)), true);
					_111821_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_111721_j < _111125_kindTokens.len())) {
					_1b5796438_pushErr(_self_, _111125_kindTokens[_111721_j], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				return _111821_kind;;
			};
		}
	_iter_next_1b8353025:;
	}
	_iter_end_1b8353025:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1cdedb538_TypeEnumItemDecl>> _1b579e7e8_buildTypeEnumItems(jule::Ptr<_1b5795987_parser> _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _112843_tokens) {
	jule::Slice<jule::Ptr<_1cdedb538_TypeEnumItemDecl>> _112913_items = jule::Slice<jule::Ptr<_1cdedb538_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I32 _113013_i = 0LL;;
	for (; (_113013_i < (*(_112843_tokens)).len()); (_113013_i)++) {
		{
			jule::Ptr<_1cdeab4b4_Token> _113217_t = (*(_112843_tokens))[_113013_i];;
			jule::Ptr<_1cdedb538_TypeEnumItemDecl> _113317_item = jule::new_ptr<_1cdedb538_TypeEnumItemDecl>();;
			(*_113317_item.alloc)._field_Token=_113217_t;
			if ((((*((*_113317_item.alloc)._field_Token))._field_Id == static_cast<jule::U32>(1LLU)) && (((*(_112843_tokens)).len() - _113013_i) > 2LL))) {
				_113217_t=(*(_112843_tokens))[(_113013_i + 1LL)];
				if (((*(_113217_t))._field_Id == static_cast<jule::U32>(8LLU))) {
					(*_113317_item.alloc)._field_Ident=(*(*_113317_item.alloc)._field_Token.alloc)._field_Kind;
					_113013_i+=2LL;
					if (((_113013_i >= (*(_112843_tokens)).len()) || ((*((*(_112843_tokens))[_113013_i]))._field_Id == static_cast<jule::U32>(5LLU)))) {
						_1b5796438_pushErr(_self_.ptr(), _113217_t, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
						goto _iter_next_1b8358c84;
					};
				};
			};
			(*_113317_item.alloc)._field_Kind=_1b579e4a7_buildTypeEnumItemKind(_self_, &(_113013_i), _112843_tokens);
			{ jule::Slice<jule::Ptr<_1cdedb538_TypeEnumItemDecl>> &__jule_push_dest = _112913_items; __jule_push_dest.push(_113317_item); };
		}
	_iter_next_1b8358c84:;
	}
	_iter_end_1b8358c84:;;
	return _112913_items;;
}



inline jule::Ptr<_1cdedbb98_TypeEnumDecl> _1b579eb39_buildTypeEnumDecl(jule::Ptr<_1b5795987_parser> _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _115242_tokens) {
	jule::I32 _115313_i = 1LL;;
	jule::Ptr<_1cdedbb98_TypeEnumDecl> _115413_e = jule::new_ptr<_1cdedbb98_TypeEnumDecl>(_1cdedbb98_TypeEnumDecl{._field_Token=(*(_115242_tokens))[_115313_i], });;
	if (((*((*(_115413_e))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1b5796438_pushErr(_self_.ptr(), (*_115413_e.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b579679b_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_115413_e.alloc)._field_Ident=(*(*_115413_e.alloc)._field_Token.alloc)._field_Kind;
	_115313_i+=3LL;
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _116413_itemTokens = _1b5794139_range(&(_115313_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _115242_tokens);;
	if ((_116413_itemTokens == nullptr)) {
		_1b5795c84_stop(_self_);
		_1b5796438_pushErr(_self_, (*_115413_e.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1b579679b_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _115413_e;;
	} else if ((_115313_i < (*(_115242_tokens)).len())) {
		_1b5796438_pushErr(_self_, (*(_115242_tokens))[_115313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_115413_e.alloc)._field_Public=_1ce0884e7_IsPub((*_115413_e.alloc)._field_Ident);
	(*_115413_e.alloc)._field_End=(*(_115242_tokens))[(_115313_i - 1LL)];
	(*_115413_e.alloc)._field_Items=_1b579e7e8_buildTypeEnumItems(_self_, &(_116413_itemTokens));
	return _115413_e;;
}



inline jule::Ptr<_1cdec5dc4_Expr> _1b57a0035_buildEnumItemExpr(jule::Ptr<_1b5795987_parser> _self_, jule::I32* _117942_i, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _117955_tokens) {
	jule::I32 _118013_braceN = 0LL;;
	jule::I32 _11819_exprStart = (*(_117942_i));;
	for (; ((*(_117942_i)) < (*(_117955_tokens)).len()); ((*(_117942_i)))++) {
		{
			jule::Ptr<_1cdeab4b4_Token> _118313_t = (*(_117955_tokens))[(*(_117942_i))];;
			{
				auto &_match_expr{ (*(_118313_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1b8366940:;
					{
						(_118013_braceN)++;
						goto _iter_next_1b8365e28;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1b8366c92:;
					{
						(_118013_braceN)--;
					}
				}
				_match_end_1b8366c2b:;
			};
			if ((_118013_braceN > 0LL)) {
				goto _iter_next_1b8365e28;
			};
			if ((((*(_118313_t))._field_Id == static_cast<jule::U32>(5LLU)) || (((*(_117942_i)) + 1LL) >= (*(_117955_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _119925_exprTokens = nullptr;;
				if (((*_118313_t.alloc)._field_Id == static_cast<jule::U32>(5LLU))) {
					_119925_exprTokens=(*(_117955_tokens)).slice(_11819_exprStart, (*(_117942_i)));
				} else {
					_119925_exprTokens=(*(_117955_tokens)).slice(_11819_exprStart);
				};
				return _1b5796adc_buildExpr(_self_, &(_119925_exprTokens));;
			};
		}
	_iter_next_1b8365e28:;
	}
	_iter_end_1b8365e28:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1cdeda14c_EnumItemDecl>> _1b57a0376_buildEnumItems(jule::Ptr<_1b5795987_parser> _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _121139_tokens) {
	jule::Slice<jule::Ptr<_1cdeda14c_EnumItemDecl>> _121213_items = jule::Slice<jule::Ptr<_1cdeda14c_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I32 _121313_i = 0LL;;
	for (; (_121313_i < (*(_121139_tokens)).len()); (_121313_i)++) {
		{
			jule::Ptr<_1cdeab4b4_Token> _121517_t = (*(_121139_tokens))[_121313_i];;
			jule::Ptr<_1cdeda14c_EnumItemDecl> _121617_item = jule::new_ptr<_1cdeda14c_EnumItemDecl>();;
			(*_121617_item.alloc)._field_Token=_121517_t;
			if (((*((*_121617_item.alloc)._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
				_1b5796438_pushErr(_self_.ptr(), (*_121617_item.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1b579679b_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			};
			(*_121617_item.alloc)._field_Ident=(*(*_121617_item.alloc)._field_Token.alloc)._field_Kind;
			if ((((_121313_i + 1LL) >= (*(_121139_tokens)).len()) || ((*((*(_121139_tokens))[(_121313_i + 1LL)]))._field_Id == static_cast<jule::U32>(5LLU)))) {
				if (((_121313_i + 1LL) < (*(_121139_tokens)).len())) {
					(_121313_i)++;
				};
				{ jule::Slice<jule::Ptr<_1cdeda14c_EnumItemDecl>> &__jule_push_dest = _121213_items; __jule_push_dest.push(_121617_item); };
				goto _iter_next_1b836a856;
			};
			(_121313_i)++;
			_121517_t=(*(_121139_tokens))[_121313_i];
			(_121313_i)++;
			if (((*(_121517_t))._field_Id != static_cast<jule::U32>(8LLU))) {
				_1b5796438_pushErr(_self_, _121517_t, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1b579679b_pushSuggestion(_self_, jule::Str::lit("expected colon \":\" for assignment", 33), jule::Slice<jule::Any>());
				goto _iter_next_1b836a856;
			};
			if (((_121313_i >= (*(_121139_tokens)).len()) || ((*((*(_121139_tokens))[_121313_i]))._field_Id == static_cast<jule::U32>(5LLU)))) {
				_1b5796438_pushErr(_self_, _121517_t, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
				goto _iter_next_1b836a856;
			};
			(*_121617_item.alloc)._field_Expr=_1b57a0035_buildEnumItemExpr(_self_, &(_121313_i), _121139_tokens);
			{ jule::Slice<jule::Ptr<_1cdeda14c_EnumItemDecl>> &__jule_push_dest = _121213_items; __jule_push_dest.push(_121617_item); };
		}
	_iter_next_1b836a856:;
	}
	_iter_end_1b836a856:;;
	return _121213_items;;
}



inline jule::Ptr<_1cdedac0d_EnumDecl> _1b57a06b7_buildEnumDecl(jule::Ptr<_1b5795987_parser> _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _124838_tokens) {
	if (((*(_124838_tokens)).len() < 3LL)) {
		_1b5796438_pushErr(_self_.ptr(), (*(_124838_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1cdedac0d_EnumDecl> _125313_e = jule::new_ptr<_1cdedac0d_EnumDecl>(_1cdedac0d_EnumDecl{._field_Token=(*(_124838_tokens))[1LL], });;
	if (((*((*(_125313_e))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1b5796438_pushErr(_self_, (*_125313_e.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b579679b_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_125313_e.alloc)._field_Ident=(*(*_125313_e.alloc)._field_Token.alloc)._field_Kind;
	jule::I32 _126113_i = 2LL;;
	if (((*((*(_124838_tokens))[_126113_i]))._field_Id == static_cast<jule::U32>(8LLU))) {
		(_126113_i)++;
		if ((_126113_i >= (*(_124838_tokens)).len())) {
			_1b5796438_pushErr(_self_, (*(_124838_tokens))[(_126113_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return _125313_e;;
		};
		({
			__jule_tuple_x_1cdec1a90_TypeDecl__jule_tuple_bool __jule_assign_result = _1b579803e_buildType(_self_, _124838_tokens, (&(_126113_i)), true);
			(*_125313_e.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_126113_i >= (*(_124838_tokens)).len())) {
			_1b5795c84_stop(_self_);
			_1b5796438_pushErr(_self_, (*_125313_e.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
			_1b579679b_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
			return _125313_e;;
		};
	} else {
		(*_125313_e.alloc)._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _127813_itemTokens = _1b5794139_range(&(_126113_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _124838_tokens);;
	if ((_127813_itemTokens == nullptr)) {
		_1b5795c84_stop(_self_);
		_1b5796438_pushErr(_self_, (*_125313_e.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1b579679b_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _125313_e;;
	} else if ((_126113_i < (*(_124838_tokens)).len())) {
		_1b5796438_pushErr(_self_, (*(_124838_tokens))[_126113_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_125313_e.alloc)._field_Public=_1ce0884e7_IsPub((*_125313_e.alloc)._field_Ident);
	(*_125313_e.alloc)._field_End=(*(_124838_tokens))[(_126113_i - 1LL)];
	(*_125313_e.alloc)._field_Items=_1b57a0376_buildEnumItems(_self_, &(_127813_itemTokens));
	return _125313_e;;
}



inline jule::Any _1b57a0a08_buildNodeEnumDecl(jule::Ptr<_1b5795987_parser> _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _129342_tokens) {
	if ((((*(_129342_tokens)).len() > 3LL) && ((*((*(_129342_tokens))[2LL]))._field_Id == static_cast<jule::U32>(8LLU)))) {
		if (((*((*(_129342_tokens))[3LL]))._field_Id == static_cast<jule::U32>(7LLU))) {
			return jule::Any(_1b579eb39_buildTypeEnumDecl(_self_, _129342_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_1b57a06b7_buildEnumDecl(_self_, _129342_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_1cdedbe62_FieldDecl> _1b57a0d49_buildField(jule::Ptr<_1b5795987_parser> _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _130234_tokens) {
	jule::Ptr<_1cdedbe62_FieldDecl> _130313_f = jule::new_ptr<_1cdedbe62_FieldDecl>();;
	(*_130313_f.alloc)._field_Mutable=((*(_130234_tokens[0LL]))._field_Id == static_cast<jule::U32>(32LLU));
	if ((*_130313_f.alloc)._field_Mutable) {
		if ((_130234_tokens.len() == 1LL)) {
			_1b5796438_pushErr(_self_.ptr(), _130234_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_130234_tokens).mut_slice(1LL);;
	};
	(*_130313_f.alloc)._field_Token=_130234_tokens[0LL];
	if (((*((*_130313_f.alloc)._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1b5796438_pushErr(_self_, (*_130313_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b579679b_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_130313_f.alloc)._field_Ident=(*(*_130313_f.alloc)._field_Token.alloc)._field_Kind;
	if ((_130234_tokens.len() == 1LL)) {
		_1b5796438_pushErr(_self_, _130234_tokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_130234_tokens.len() < 3LL) || ((*(_130234_tokens[1LL]))._field_Id != static_cast<jule::U32>(8LLU)))) {
		_1b5796438_pushErr(_self_, _130234_tokens[1LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_130234_tokens).mut_slice(2LL);;
	jule::I32 _133113_i = 0LL;;
	({
		__jule_tuple_x_1cdec1a90_TypeDecl__jule_tuple_bool __jule_assign_result = _1b579803e_buildType(_self_, &(_130234_tokens), (&(_133113_i)), true);
		(*_130313_f.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_133113_i < _130234_tokens.len())) {
		jule::Ptr<_1cdeab4b4_Token> _133413_token = _130234_tokens[_133113_i];;
		if (((*(_133413_token))._field_Id != static_cast<jule::U32>(71LLU))) {
			_1b5796438_pushErr(_self_, _130234_tokens[_133113_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_133113_i)++;
		if ((_133113_i >= _130234_tokens.len())) {
			_1b5796438_pushErr(_self_, _133413_token, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_130234_tokens).mut_slice(_133113_i);;
		(*_130313_f.alloc)._field_Default=_1b5796adc_buildExpr(_self_, &(_130234_tokens));
	};
	(*_130313_f.alloc)._field_Public=_1ce0884e7_IsPub((*_130313_f.alloc)._field_Ident);
	return _130313_f;;
}



inline jule::Slice<jule::Ptr<_1cdedbe62_FieldDecl>> _1b57a118a_buildStructDeclFields(jule::Ptr<_1b5795987_parser> _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _135145_tokens) {
	jule::Slice<jule::Ptr<_1cdedbe62_FieldDecl>> _135217_fields = nullptr;;
	jule::Slice<jule::Ptr<_1b5776d31_stmt>> _135313_stmts = _1b57771d8_splitStmts(&(_135145_tokens));;
	{
		auto expr = &(_135313_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8e9b3cb:;
		if (it != expr_end) {
			jule::Ptr<_1b5776d31_stmt> _135421_stmt = *it;
			{
				_135145_tokens=(*(_135421_stmt))._field_tokens;
				jule::Ptr<_1cdedbe62_FieldDecl> _135617_f = _1b57a0d49_buildField(_self_, _135145_tokens);;
				{ jule::Slice<jule::Ptr<_1cdedbe62_FieldDecl>> &__jule_push_dest = _135217_fields; __jule_push_dest.push(_135617_f); };
			}
			_iter_next_1b8e9b3cb:;
			++it;
			goto _iter_begin_1b8e9b3cb;
		}
		_iter_end_1b8e9b3cb:;
	};
	return _135217_fields;;
}



inline jule::Ptr<_1cdedc858_StructDecl> _1b57a14cb_buildStructDecl(jule::Ptr<_1b5795987_parser> _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _136240_tokens) {
	if (((*(_136240_tokens)).len() < 3LL)) {
		_1b5796438_pushErr(_self_.ptr(), (*(_136240_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I32 _136813_i = 1LL;;
	jule::Ptr<_1cdedc858_StructDecl> _136913_s = jule::new_ptr<_1cdedc858_StructDecl>(_1cdedc858_StructDecl{._field_Token=(*(_136240_tokens))[_136813_i], });;
	if (((*((*(_136913_s))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1b5796438_pushErr(_self_, (*_136913_s.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b579679b_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_136813_i)++;
	if ((_136813_i >= (*(_136240_tokens)).len())) {
		_1b5796438_pushErr(_self_, (*(_136240_tokens))[_136813_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _136913_s;;
	};
	(*_136913_s.alloc)._field_Ident=(*(*_136913_s.alloc)._field_Token.alloc)._field_Kind;
	jule::Ptr<_1cdeab4b4_Token> _13839_errorToken = (*(_136240_tokens))[_136813_i];;
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _138413_genericsTokens = _1b5794139_range(&(_136813_i), static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), _136240_tokens);;
	if ((_138413_genericsTokens != nullptr)) {
		(*_136913_s.alloc)._field_Generics=_1b5799a02_buildGenerics(_self_, &(_138413_genericsTokens), &(_13839_errorToken));
	};
	if ((_136813_i >= (*(_136240_tokens)).len())) {
		_1b5796438_pushErr(_self_, (*(_136240_tokens))[(_136813_i - 1LL)], jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1b579679b_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _136913_s;;
	};
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _139413_bodyTokens = _1b5794139_range(&(_136813_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _136240_tokens);;
	if ((_139413_bodyTokens == nullptr)) {
		_1b5795c84_stop(_self_);
		_1b5796438_pushErr(_self_, (*_136913_s.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1b579679b_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _136913_s;;
	};
	if ((_136813_i < (*(_136240_tokens)).len())) {
		_1b5796438_pushErr(_self_, (*(_136240_tokens))[_136813_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_136913_s.alloc)._field_Public=_1ce0884e7_IsPub((*_136913_s.alloc)._field_Ident);
	(*_136913_s.alloc)._field_Fields=_1b57a118a_buildStructDeclFields(_self_, _139413_bodyTokens);
	(*_136913_s.alloc)._field_End=(*(_136240_tokens))[(_136813_i - 1LL)];
	return _136913_s;;
}



inline void _1b57a1784_checkMethodReceiver(_1b5795987_parser* _self_, jule::Ptr<_1cded3750_FnDecl>* _141039_f) {
	if ((*((*(_141039_f))))._field_Statically) {
		if ((((*((*(_141039_f))))._field_Params.len() > 0LL) && _1cded2672_IsSelf((*((*(_141039_f))))._field_Params[0LL].ptr()))) {
			_1b5796438_pushErr(_self_, (*((*(_141039_f))))._field_Token, jule::Str::lit("static functions cannot have receiver parameter", 47), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*((*(_141039_f))))._field_Params.len() == 0LL)) {
		_1b5796438_pushErr(_self_, (*((*(_141039_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1cded22ed_ParamDecl> _14229_param = (*((*(_141039_f))))._field_Params[0LL];;
	if ((!(_1cded2672_IsSelf(_14229_param.ptr())))) {
		_1b5796438_pushErr(_self_, (*((*(_141039_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1b57a1ae7_buildTraitBody(jule::Ptr<_1b5795987_parser> _self_, jule::Ptr<_1cdedd095_TraitDecl>* _142939_t, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _142958_tokens) {
	jule::Slice<jule::Ptr<_1b5776d31_stmt>> _143013_stmts = _1b57771d8_splitStmts(&(_142958_tokens));;
	{
		auto expr = &(_143013_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8eabb28:;
		if (it != expr_end) {
			jule::Ptr<_1b5776d31_stmt> _143121_stmt = *it;
			{
				_142958_tokens=(*(_143121_stmt))._field_tokens;
				if ((_142958_tokens.len() == 0LL)) {
					goto _iter_next_1b8eabb28;
				};
				{
					auto &_match_expr{ (*(_142958_tokens[0LL]))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(29LLU)) {
						_case_begin_1b8eb0698:;
						{
							jule::Ptr<_1cded3750_FnDecl> _143821_f = _1b579c681_buildFn(_self_, &(_142958_tokens), true, true);;
							if ((_143821_f == nullptr)) {
								goto _match_end_1b8ead003;
							};
							_1b57a1784_checkMethodReceiver(_self_, &(_143821_f));
							if (((*(_143821_f))._field_Generics.len() > 0LL)) {
								_1b5796438_pushErr(_self_, (*(_143821_f))._field_Token, jule::Str::lit("trait methods cannot have generics", 34), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1cded3750_FnDecl>> &__jule_push_dest = (*((*(_142939_t))))._field_Methods; __jule_push_dest.push(_143821_f); };
						}
					}
					else {
						_case_begin_1b8eac80a:;
						{
							jule::I32 _144821_i = 0LL;;
							jule::Ptr<_1cdec1a90_TypeDecl> _144921_ti;;
							jule::Bool _144925_ok;;
							({
								__jule_tuple_x_1cdec1a90_TypeDecl__jule_tuple_bool __jule_assign_result = _1b579803e_buildType(_self_, &(_142958_tokens), (&(_144821_i)), true);
								_144921_ti = __jule_assign_result.__jule_result_arg0;
								_144925_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_144925_ok))) {
								goto _match_end_1b8ead003;
							};
							if ((_144821_i < _142958_tokens.len())) {
								_1b5796438_pushErr(_self_, _142958_tokens[_144821_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1cdec1a90_TypeDecl>> &__jule_push_dest = (*((*(_142939_t))))._field_Inherits; __jule_push_dest.push(_144921_ti); };
						}
					}
					_match_end_1b8ead003:;
				};
			}
			_iter_next_1b8eabb28:;
			++it;
			goto _iter_begin_1b8eabb28;
		}
		_iter_end_1b8eabb28:;
	};
}



inline jule::Ptr<_1cdedd095_TraitDecl> _1b57a1e38_buildTraitDecl(jule::Ptr<_1b5795987_parser> _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _146139_tokens) {
	if (((*(_146139_tokens)).len() < 3LL)) {
		_1b5796438_pushErr(_self_.ptr(), (*(_146139_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1cdedd095_TraitDecl> _146613_t = jule::new_ptr<_1cdedd095_TraitDecl>(_1cdedd095_TraitDecl{._field_Token=(*(_146139_tokens))[1LL], });;
	if (((*((*(_146613_t))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1b5796438_pushErr(_self_, (*_146613_t.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b579679b_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_146613_t.alloc)._field_Ident=(*(*_146613_t.alloc)._field_Token.alloc)._field_Kind;
	jule::I32 _147413_i = 2LL;;
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _147513_bodyTokens = _1b5794139_range(&(_147413_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _146139_tokens);;
	if ((_147513_bodyTokens == nullptr)) {
		_1b5795c84_stop(_self_);
		_1b5796438_pushErr(_self_, (*_146613_t.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1b579679b_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_147413_i < (*(_146139_tokens)).len())) {
		_1b5796438_pushErr(_self_, (*(_146139_tokens))[_147413_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_146613_t.alloc)._field_Public=_1ce0884e7_IsPub((*_146613_t.alloc)._field_Ident);
	_1b57a1ae7_buildTraitBody(_self_, &(_146613_t), _147513_bodyTokens);
	(*_146613_t.alloc)._field_End=(*(_146139_tokens))[(_147413_i - 1LL)];
	return _146613_t;;
}



inline jule::Ptr<_1cded3750_FnDecl> _1b57a2279_buildBindFn(jule::Ptr<_1b5795987_parser> _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _149135_tokens) {
	(_149135_tokens).mut_slice(1LL);;
	jule::Ptr<_1cded3750_FnDecl> _149313_f = _1b579c681_buildFn(_self_, &(_149135_tokens), false, true);;
	if ((_149313_f != nullptr)) {
		(*_149313_f.alloc)._field_Public=false;
		(*_149313_f.alloc)._field_Binded=true;
	};
	return _149313_f;;
}



inline jule::Ptr<_1cded490a_VarDecl> _1b57a25ba_buildBindVar(jule::Ptr<_1b5795987_parser> _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _150136_tokens) {
	(_150136_tokens).mut_slice(1LL);;
	jule::Ptr<_1cded490a_VarDecl> _150313_v = _1b57992b5_buildVar(_self_, _150136_tokens);;
	if ((_150313_v != nullptr)) {
		(*_150313_v.alloc)._field_Public=false;
		(*_150313_v.alloc)._field_Binded=true;
		if (((*_150313_v.alloc)._field_Expr != nullptr)) {
			_1b5796438_pushErr(_self_, (*_150313_v.alloc)._field_Token, jule::Str::lit("binded variables cannot have expression", 39), jule::Slice<jule::Any>());
		};
	};
	return _150313_v;;
}



inline jule::Ptr<_1cdedc858_StructDecl> _1b57a290b_buildBindStruct(jule::Ptr<_1b5795987_parser> _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _151439_tokens) {
	(_151439_tokens).mut_slice(1LL);;
	jule::Ptr<_1cdedc858_StructDecl> _151613_s = _1b57a14cb_buildStructDecl(_self_, &(_151439_tokens));;
	if ((_151613_s != nullptr)) {
		(*_151613_s.alloc)._field_Public=false;
		{
			auto expr = &((*_151613_s.alloc)._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b8ebe82d:;
			if (it != expr_end) {
				jule::Ptr<_1cdedbe62_FieldDecl> _151925_f = *it;
				{
					(*(_151925_f))._field_Public=true;
				}
				_iter_next_1b8ebe82d:;
				++it;
				goto _iter_begin_1b8ebe82d;
			}
			_iter_end_1b8ebe82d:;
		};
		(*_151613_s.alloc)._field_Binded=true;
	};
	return _151613_s;;
}



inline jule::Ptr<_1cded85ac_TypeAliasDecl> _1b57a2c4c_buildBindTypeAlias(jule::Ptr<_1b5795987_parser> _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _152842_tokens) {
	(_152842_tokens).mut_slice(1LL);;
	jule::Ptr<_1cded85ac_TypeAliasDecl> _153013_t = _1b5798380_buildTypeAliasDecl(_self_, &(_152842_tokens));;
	if ((_153013_t != nullptr)) {
		(*_153013_t.alloc)._field_Public=false;
		(*_153013_t.alloc)._field_Binded=true;
	};
	return _153013_t;;
}



inline jule::Ptr<_1cded9b96_UseDecl> _1b57a308d_buildBindUse(jule::Ptr<_1b5795987_parser> _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _153836_tokens) {
	if ((_153836_tokens.len() == 1LL)) {
		_1b5796438_pushErr(_self_.ptr(), _153836_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_153836_tokens).mut_slice(1LL);;
	;
	return _1b579e0ab_buildUseDecl(_self_, _153836_tokens, true);;
}



inline jule::Any _1b57a33ce_buildBind(jule::Ptr<_1b5795987_parser> _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _154934_tokens) {
	jule::Ptr<_1cdeab4b4_Token> _155013_token = (*(_154934_tokens))[0LL];;
	if (((*(_154934_tokens)).len() == 1LL)) {
		_1b5796438_pushErr(_self_.ptr(), _155013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_155013_token=(*(_154934_tokens))[1LL];
	{
		auto &_match_expr{ (*(_155013_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(29LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1b8ec55e2:;
			{
				return jule::Any(_1b57a2279_buildBindFn(_self_, (*(_154934_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU) || _match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1b8ec5658:;
			{
				return jule::Any(_1b57a25ba_buildBindVar(_self_, (*(_154934_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(21LLU)) {
			_case_begin_1b8ec527e:;
			{
				return jule::Any(_1b57a290b_buildBindStruct(_self_, (*(_154934_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1b8ec52e5:;
			{
				return jule::Any(_1b57a2c4c_buildBindTypeAlias(_self_, (*(_154934_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_1b8ec4602:;
			{
				_1b5796438_pushErr(_self_, _155013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b8ec5229:;
	};
	return nullptr;;
}



inline jule::Ptr<_1cded3750_FnDecl> _1b57a3720_getMethod(jule::Ptr<_1b5795987_parser> _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _157334_tokens) {
	jule::I32 _157413_i = 0LL;;
	jule::Ptr<_1cdeab4b4_Token> _157513_token = (*(_157334_tokens))[_157413_i];;
	if (((*(_157513_token))._field_Id == static_cast<jule::U32>(34LLU))) {
		if (((_157413_i + 1LL) >= (*(_157334_tokens)).len())) {
			_1b5796438_pushErr(_self_.ptr(), _157513_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_157413_i)++;
		_157513_token=(*(_157334_tokens))[_157413_i];
	};
	if (((*_157513_token.alloc)._field_Id == static_cast<jule::U32>(31LLU))) {
		if (((_157413_i + 1LL) >= (*(_157334_tokens)).len())) {
			_1b5796438_pushErr(_self_, _157513_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_157413_i)++;
		_157513_token=(*(_157334_tokens))[_157413_i];
	};
	if (((*_157513_token.alloc)._field_Id != static_cast<jule::U32>(29LLU))) {
		_1b5796438_pushErr(_self_, _157513_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1b579c681_buildFn(_self_, _157334_tokens, true, false);;
}



inline void _1b57a3a83_parseImplBody(jule::Ptr<_1b5795987_parser> _self_, jule::Ptr<_1cdedd705_Impl>* _160238_ipl, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _160255_tokens) {
	jule::Slice<jule::Ptr<_1b5776d31_stmt>> _160313_stmts = _1b57771d8_splitStmts(_160255_tokens);;
	{
		auto expr = &(_160313_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8ecce8a:;
		if (it != expr_end) {
			jule::Ptr<_1b5776d31_stmt> _160421_stmt = *it;
			{
				(*(_160255_tokens))=(*(_160421_stmt))._field_tokens;
				jule::Ptr<_1cdeab4b4_Token> _160617_token = (*(_160255_tokens))[0LL];;
				{
					auto &_match_expr{ (*(_160617_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(35LLU)) {
						_case_begin_1b8ecd6c7:;
						{
							_1b57971d6_pushDirective(_self_.ptr(), _1b5796e2d_buildDirective(_self_, (*(_160255_tokens))));
							goto _iter_next_1b8ecce8a;
						}
					}
					_match_end_1b8ece2ee:;
				};
				{
					auto &_match_expr{ (*(_160617_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(6LLU)) {
						_case_begin_1b8ed04dc:;
						{
							jule::Ptr<_1cded490a_VarDecl> _161521_v = _1b57992b5_buildVar(_self_, (*(_160255_tokens)));;
							if ((_161521_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_1cded490a_VarDecl>> &__jule_push_dest = (*((*(_160238_ipl))))._field_Statics; __jule_push_dest.push(_161521_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U32>(34LLU) || _match_expr == static_cast<jule::U32>(29LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
						_case_begin_1b8ed0553:;
						{
							jule::Ptr<_1cded3750_FnDecl> _162221_f = _1b57a3720_getMethod(_self_, _160255_tokens);;
							if ((_162221_f != nullptr)) {
								_1b57a1784_checkMethodReceiver(_self_, &(_162221_f));
								_1b57a44bd_applyFnMeta(_self_, &(_162221_f));
								{ jule::Slice<jule::Ptr<_1cded3750_FnDecl>> &__jule_push_dest = (*((*(_160238_ipl))))._field_Methods; __jule_push_dest.push(_162221_f); };
							};
						}
					}
					else {
						_case_begin_1b8ece420:;
						{
							_1b5796438_pushErr(_self_, _160617_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							goto _iter_next_1b8ecce8a;
						}
					}
					_match_end_1b8ece909:;
				};
			}
			_iter_next_1b8ecce8a:;
			++it;
			goto _iter_begin_1b8ecce8a;
		}
		_iter_end_1b8ecce8a:;
	};
}



inline jule::Ptr<_1cdedd705_Impl> _1b57a3dc4_buildImpl(jule::Ptr<_1b5795987_parser> _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _163533_tokens) {
	jule::Ptr<_1cdeab4b4_Token> _163613_token = _163533_tokens[0LL];;
	if ((_163533_tokens.len() < 2LL)) {
		_1b5796438_pushErr(_self_.ptr(), _163613_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I32 _164213_i = 1LL;;
	jule::Ptr<_1cdec1a90_TypeDecl> _164413_base;;
	jule::Bool _164423_ok;;
	({
		__jule_tuple_x_1cdec1a90_TypeDecl__jule_tuple_bool __jule_assign_result = _1b579803e_buildType(_self_, &(_163533_tokens), (&(_164213_i)), true);
		_164413_base = __jule_assign_result.__jule_result_arg0;
		_164423_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_164423_ok))) {
		return nullptr;;
	};
	if ((_164213_i >= _163533_tokens.len())) {
		_1b5796438_pushErr(_self_, _163613_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1cdedd705_Impl> _165313_ipl = jule::new_ptr<_1cdedd705_Impl>(_1cdedd705_Impl{._field_Base=_164413_base, });;
	_163613_token=_163533_tokens[_164213_i];
	if (((*(_163613_token))._field_Id != static_cast<jule::U32>(9LLU))) {
		if (((*_163613_token.alloc)._field_Id == static_cast<jule::U32>(72LLU))) {
			std::swap((*(_165313_ipl))._field_Base, (*_165313_ipl.alloc)._field_Dest);
			goto _julec_label_1b8edc0ba;
		};
		_1b5795c84_stop(_self_);
		_1b5796438_pushErr(_self_, _163613_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1b579679b_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_164213_i)++;
	if ((_164213_i >= _163533_tokens.len())) {
		_1b5795c84_stop(_self_);
		_1b5796438_pushErr(_self_, _163613_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1b579679b_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1cdec1a90_TypeDecl__jule_tuple_bool __jule_assign_result = _1b579803e_buildType(_self_, &(_163533_tokens), (&(_164213_i)), true);
		(*_165313_ipl.alloc)._field_Dest = __jule_assign_result.__jule_result_arg0;
		_164423_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_164423_ok))) {
		return nullptr;;
	};
	if ((_164213_i >= _163533_tokens.len())) {
		_1b5795c84_stop(_self_);
		_1b5796438_pushErr(_self_, _163613_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1b579679b_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1b8edc0ba:;
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _169113_bodyTokens = _1b5794139_range(&(_164213_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_163533_tokens));;
	if ((_169113_bodyTokens == nullptr)) {
		_1b5795c84_stop(_self_);
		_1b5796438_pushErr(_self_, _163613_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1b579679b_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_164213_i < _163533_tokens.len())) {
		_1b5796438_pushErr(_self_, _163533_tokens[_164213_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_165313_ipl.alloc)._field_End=_163533_tokens[(_164213_i - 1LL)];
	_1b57a3a83_parseImplBody(_self_, &(_165313_ipl), &(_169113_bodyTokens));
	return _165313_ipl;;
}



inline jule::Any _1b57a4215_buildNodeData(jule::Ptr<_1b5795987_parser> _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _170638_tokens) {
	jule::Ptr<_1cdeab4b4_Token> _170713_token = (*(_170638_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_170713_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(29LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1b8ee1e5a:;
			{
				jule::Ptr<_1cded3750_FnDecl> _171117_f = _1b579c681_buildFn(_self_, _170638_tokens, false, false);;
				if ((_171117_f != nullptr)) {
					(*_171117_f.alloc)._field_Global=true;
				};
				return jule::Any(_171117_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(30LLU) || _match_expr == static_cast<jule::U32>(6LLU) || _match_expr == static_cast<jule::U32>(32LLU) || _match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_1b8ee1d8e:;
			{
				return jule::Any(_1b57992b5_buildVar(_self_, (*(_170638_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1b8ee2554:;
			{
				return jule::Any(_1b5798380_buildTypeAliasDecl(_self_, _170638_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(20LLU)) {
			_case_begin_1b8ee1a92:;
			{
				return _1b57a0a08_buildNodeEnumDecl(_self_, _170638_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(21LLU)) {
			_case_begin_1b8ee1b08:;
			{
				return jule::Any(_1b57a14cb_buildStructDecl(_self_, _170638_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(25LLU)) {
			_case_begin_1b8ee1b6e:;
			{
				return jule::Any(_1b57a1e38_buildTraitDecl(_self_, _170638_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(26LLU)) {
			_case_begin_1b8ee1bd5:;
			{
				return jule::Any(_1b57a3dc4_buildImpl(_self_, (*(_170638_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1b8ee1c4b:;
			{
				return _1b57a33ce_buildBind(_self_, _170638_tokens);;
			}
		}
		else {
			_case_begin_1b8ee1795:;
			{
				_1b5796438_pushErr(_self_.ptr(), _170713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b8ee1a3c:;
	};
}



inline void _1b57a44bd_applyFnMeta(_1b5795987_parser* _self_, jule::Ptr<_1cded3750_FnDecl>* _173935_f) {
	(*((*(_173935_f))))._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1b57a4776_applyMeta(_1b5795987_parser* _self_, _1cdec0a8e_Node* _174433_node) {
	{
		auto &_match_expr{ (*(_174433_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1b8ee8505:;
			{
				jule::Ptr<_1cded490a_VarDecl> _174717_v = (*(_174433_node))._field_Data.unsafe_cast_ptr<_1cded490a_VarDecl>();;
				if ((_174717_v == nullptr)) {
					return;;
				};
				(*(_174717_v))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b8ee825d:;
			{
				jule::Ptr<_1cded3750_FnDecl> _175417_f = (*(_174433_node))._field_Data.unsafe_cast_ptr<_1cded3750_FnDecl>();;
				if ((_175417_f == nullptr)) {
					return;;
				};
				_1b57a44bd_applyFnMeta(_self_, &(_175417_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1b8ee859e:;
			{
				jule::Ptr<_1cdedc858_StructDecl> _176017_sd = (*(_174433_node))._field_Data.unsafe_cast_ptr<_1cdedc858_StructDecl>();;
				if ((_176017_sd == nullptr)) {
					return;;
				};
				(*(_176017_sd))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1b8ee847d:;
	};
}



inline void _1b57a4a2e_pushUseDecl(jule::Ptr<_1b5795987_parser> _self_, jule::Ptr<_1cded9b96_UseDecl>* _176936_decl) {
	(*((*(_self_))._field_ast))._field_UseDecls=jule::append((*(*_self_.alloc)._field_ast.alloc)._field_UseDecls,jule::Slice<jule::Ptr<_1cded9b96_UseDecl>>::make({(*(_176936_decl))}));
	if (((*(*_self_.alloc)._field_ast.alloc)._field_Nodes.len() > 0LL)) {
		_1b5796438_pushErr(_self_, (*((*(_176936_decl))))._field_Token, jule::Str::lit("use declarations must declared top of source code", 49), jule::Slice<jule::Any>());
		_1b579679b_pushSuggestion(_self_, jule::Str::lit("move this use declaration to top of source file", 47), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1b57a4d70_pushMetaNodes(jule::Ptr<_1b5795987_parser> _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _177738_tokens) {
	{
		auto &_match_expr{ (*((*(_177738_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(16LLU)) {
			_case_begin_1b8eee86e:;
			{
				;
				jule::Ptr<_1cded9b96_UseDecl> _178117_decl = _1b579e0ab_buildUseDecl(_self_.ptr(), (*(_177738_tokens)), false);;
				_1b57a4a2e_pushUseDecl(_self_, &(_178117_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1b8eee8d5:;
			{
				if ((((*(_177738_tokens)).len() > 1LL) && ((*((*(_177738_tokens))[1LL]))._field_Id == static_cast<jule::U32>(16LLU)))) {
					jule::Ptr<_1cded9b96_UseDecl> _178621_decl = _1b57a308d_buildBindUse(_self_, (*(_177738_tokens)));;
					_1b57a4a2e_pushUseDecl(_self_, &(_178621_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(35LLU)) {
			_case_begin_1b8eee94b:;
			{
				_1b57971d6_pushDirective(_self_.ptr(), _1b5796e2d_buildDirective(_self_, (*(_177738_tokens))));
				return true;;
			}
		}
		_match_end_1b8eee770:;
	};
	return false;;
}



inline _1cdec0a8e_Node _1b57a51b1_parseNode(jule::Ptr<_1b5795987_parser> _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _179734_st) {
	_1cdec0a8e_Node _179813_node = _1cdec0a8e_Node{._field_Token=(*(_179734_st))[0LL], };;
	if (_1b57a4d70_pushMetaNodes(_self_, _179734_st)) {
		return _179813_node;;
	};
	jule::Any _180613_data = _1b57a4215_buildNodeData(_self_, _179734_st);;
	if ((_180613_data == nullptr)) {
		return _179813_node;;
	};
	_179813_node._field_Data=_180613_data;
	_1b57a4776_applyMeta(_self_, &(_179813_node));
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1b5796438_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
	(*_self_.alloc)._field_directives=nullptr;
	return _179813_node;;
}



inline void _1b57a5469_appendNode(jule::Ptr<_1b5795987_parser> _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _182135_st) {
	if (((*(_182135_st)).len() == 0LL)) {
		return;;
	};
	_1cdec0a8e_Node _182513_node = _1b57a51b1_parseNode(_self_, _182135_st);;
	if (((_182513_node._field_Data == nullptr) || _1b579601a_stopped(_self_))) {
		return;;
	};
	(*((*_self_.alloc)._field_ast))._field_Nodes=jule::append((*(*_self_.alloc)._field_ast.alloc)._field_Nodes,jule::Slice<_1cdec0a8e_Node>::make({_182513_node}));
}



inline void _1b57a5942_removeRange(_1b5795987_parser* _self_, jule::I32 _183230_i, jule::U32 _183238_id, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _183252_tokens, jule::Slice<jule::I32>* _183275_ranges) {
	jule::U32 _18339_close = _1b5794b40_getCloseOfBrace(_183238_id);;
	for (; (_183230_i >= 0LL); (_183230_i)--) {
		{
			jule::Ptr<_1cdeab4b4_Token> _183513_tok = (*(_183252_tokens))[(*(_183275_ranges))[_183230_i]];;
			if (((*(_183513_tok))._field_Id != _18339_close)) {
				goto _iter_next_1b9009aaa;
			};
			(*(_183275_ranges))=jule::append((*(_183275_ranges)).slice(0LL, _183230_i),(*(_183275_ranges)).slice((_183230_i + 1LL)));
			goto _iter_end_1b9009aaa;
		}
	_iter_next_1b9009aaa:;
	}
	_iter_end_1b9009aaa:;;
}



inline void _1b57a5d60_pushWrongOrderCloseErr(_1b5795987_parser* _self_, jule::Ptr<_1cdeab4b4_Token>* _184442_t, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _184454_tokens, jule::Slice<jule::I32>* _184473_ranges) {
	{
		auto &_match_expr{ (*((*(_184454_tokens))[(*(_184473_ranges))[((*(_184473_ranges)).len() - 1LL)]]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(74LLU)) {
			_case_begin_1b900bd98:;
			{
				_1b5796438_pushErr(_self_, (*(_184442_t)), jule::Str::lit("was expected parentheses close", 30), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U32>(72LLU)) {
			_case_begin_1b900be0e:;
			{
				_1b5796438_pushErr(_self_, (*(_184442_t)), jule::Str::lit("was expected brace close", 24), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U32>(76LLU)) {
			_case_begin_1b900be75:;
			{
				_1b5796438_pushErr(_self_, (*(_184442_t)), jule::Str::lit("was expected bracket close", 26), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b900bc99:;
	};
}



inline void _1b57a6338_pushRangeClose(_1b5795987_parser* _self_, jule::Ptr<_1cdeab4b4_Token> _185533_t, jule::U32 _185544_left, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _185560_tokens, jule::Slice<jule::I32>* _185583_ranges) {
	jule::I32 _18569_n = (*(_185583_ranges)).len();;
	if ((_18569_n == 0LL)) {
		{
			auto &_match_expr{ (*(_185533_t))._field_Id };
			
			if (_match_expr == static_cast<jule::U32>(77LLU)) {
				_case_begin_1b900ea5a:;
				{
					_1b5796438_pushErr(_self_, _185533_t, jule::Str::lit("extra closed brackets", 21), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U32>(73LLU)) {
				_case_begin_1b900eac1:;
				{
					_1b5796438_pushErr(_self_, _185533_t, jule::Str::lit("extra closed braces", 19), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U32>(75LLU)) {
				_case_begin_1b900eb37:;
				{
					_1b5796438_pushErr(_self_, _185533_t, jule::Str::lit("extra closed parentheses", 24), jule::Slice<jule::Any>());
				}
			}
			_match_end_1b900e9a0:;
		};
		return;;
	} else if (((*((*(_185560_tokens))[(*(_185583_ranges))[(_18569_n - 1LL)]]))._field_Id != _185544_left)) {
		_1b57a5d60_pushWrongOrderCloseErr(_self_, &(_185533_t), _185560_tokens, _185583_ranges);
	};
	_1b57a5942_removeRange(_self_, (_18569_n - 1LL), (*(_185533_t))._field_Id, _185560_tokens, _185583_ranges);
}



inline void _1b57a65e1_checkRanges(_1b5795987_parser* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _187331_tokens) {
	jule::Slice<jule::I32> _187417_ranges = nullptr;;
	{
		auto expr = _187331_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9011c9e:;
		if (it != expr_end) {
			jule::I32 _187613_i = it - expr->begin();
			jule::Ptr<_1cdeab4b4_Token> *_187616_token = it;
			{
				{
					auto &_match_expr{ (*((*(_187616_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1b90139c6:;
						{
							{ jule::Slice<jule::I32> &__jule_push_dest = _187417_ranges; __jule_push_dest.push(_187613_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1b9013a4d:;
						{
							_1b57a6338_pushRangeClose(_self_, (*(_187616_token)), static_cast<jule::U32>(74LLU), _187331_tokens, &(_187417_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU)) {
						_case_begin_1b9013ab4:;
						{
							_1b57a6338_pushRangeClose(_self_, (*(_187616_token)), static_cast<jule::U32>(72LLU), _187331_tokens, &(_187417_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(77LLU)) {
						_case_begin_1b9013b2a:;
						{
							_1b57a6338_pushRangeClose(_self_, (*(_187616_token)), static_cast<jule::U32>(76LLU), _187331_tokens, &(_187417_ranges));
						}
					}
					_match_end_1b901391b:;
				};
			}
			_iter_next_1b9011c9e:;
			++it;
			_187613_i++;
			goto _iter_begin_1b9011c9e;
		}
		_iter_end_1b9011c9e:;
	};
	{
		auto expr = &(_187417_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9015c1a:;
		if (it != expr_end) {
			jule::I32 _189116_i = *it;
			{
				jule::Ptr<_1cdeab4b4_Token> _189213_token = (*(_187331_tokens))[_189116_i];;
				{
					auto &_match_expr{ (*(_189213_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1b9016974:;
						{
							_1b5796438_pushErr(_self_, _189213_token, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1b90169da:;
						{
							_1b5796438_pushErr(_self_, _189213_token, jule::Str::lit("brace waiting to close", 22), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1b9016a51:;
						{
							_1b5796438_pushErr(_self_, _189213_token, jule::Str::lit("bracket are waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					_match_end_1b9016710:;
				};
			}
			_iter_next_1b9015c1a:;
			++it;
			goto _iter_begin_1b9015c1a;
		}
		_iter_end_1b9015c1a:;
	};
}



inline void _1b57a6899_parse(jule::Ptr<_1b5795987_parser> _self_, jule::Ptr<_1cdeb1c4a_File>* _190430_f) {
	(*(_self_))._field_ast=jule::new_ptr<_1cdebead2_Ast>(_1cdebead2_Ast{._field_File=(*(_190430_f)), });
	(*_self_.alloc)._field_ep=jule::new_ptr<_1b57850e7_exprBuilder>(_1b57850e7_exprBuilder{._field_p=_self_});
	_1b57a65e1_checkRanges(_self_, &((*((*(_190430_f))))._field_Tokens));
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1b5776d31_stmt>> _191713_stmts = _1b57771d8_splitStmts(&((*((*(_190430_f))))._field_Tokens));;
	jule::I32 _192013_i = 0LL;;
	for (; (_192013_i < _191713_stmts.len()); (_192013_i)++) {
		{
			jule::Ptr<_1b5776d31_stmt> _192217_stmt = _191713_stmts[_192013_i];;
			if (((*(_192217_stmt))._field_tokens.len() < 2LL)) {
				return;;
			};
			if (((*((*_192217_stmt.alloc)._field_tokens[0LL]))._field_Id != static_cast<jule::U32>(35LLU))) {
				goto _iter_end_1b901a33a;
			};
			if ((!(_22a938488_IsTopDirective((*((*_192217_stmt.alloc)._field_tokens[1LL]))._field_Kind)))) {
				goto _iter_end_1b901a33a;
			};
			(*((*_self_.alloc)._field_ast))._field_TopDirectives=jule::append((*(*_self_.alloc)._field_ast.alloc)._field_TopDirectives,jule::Slice<jule::Ptr<_1cdec0eac_Directive>>::make({_1b5796e2d_buildDirective(_self_, (*_192217_stmt.alloc)._field_tokens)}));
		}
	_iter_next_1b901a33a:;
	}
	_iter_end_1b901a33a:;;
	(*_self_.alloc)._field_errors=nullptr;
	for (; (_192013_i < _191713_stmts.len()); (_192013_i)++) {
		{
			jule::Ptr<_1b5776d31_stmt> _193917_stmt = _191713_stmts[_192013_i];;
			_1b57a5469_appendNode(_self_, &((*(_193917_stmt))._field_tokens));
			if (_1b579601a_stopped(_self_)) {
				goto _iter_end_1b901d690;
			};
		}
	_iter_next_1b901d690:;
	}
	_iter_end_1b901d690:;;
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1b5796438_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1b5795987_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ep:" << _Src._field_ep;
	_Stream << "}";
	return _Stream;
}



inline void _1b57a8208_pushErr(_1b57a7b64_typeBuilder* _self_, jule::Ptr<_1cdeab4b4_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*(_self_))._field_err) {
		_1b5796438_pushErr((*(_self_))._field_p.ptr(), _4126_token, _4141_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1b57a856b_pushSuggestion(_1b57a7b64_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*(_self_))._field_err) {
		_1b579679b_pushSuggestion((*(_self_))._field_p.ptr(), _4833_fmt, _4846_args);
	};
}



inline jule::Ptr<_1cdec1a90_TypeDecl> _1b57a8802_buildNamespace(_1b57a7b64_typeBuilder* _self_) {
	jule::Ptr<_1cdec1a90_TypeDecl> _5513_t = jule::new_ptr<_1cdec1a90_TypeDecl>(_1cdec1a90_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], });;
	jule::Ptr<_1cdec283d_NamespaceTypeDecl> _5913_nst = jule::new_ptr<_1cdec283d_NamespaceTypeDecl>();;
	jule::I32 _6013_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1cdeab4b4_Token> _6217_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_6013_n & 1LL) == 0LL)) {
				if (((*(_6217_token))._field_Id != static_cast<jule::U32>(1LLU))) {
					_1b57a8208_pushErr(_self_, _6217_token, jule::Str::lit("invalid syntax", 14));
					_1b57a856b_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				};
				(*_5913_nst.alloc)._field_Idents=jule::append((*_5913_nst.alloc)._field_Idents,jule::Slice<jule::Ptr<_1cdeab4b4_Token>>::make({_6217_token}));
			} else if (((*(_6217_token))._field_Id != static_cast<jule::U32>(19LLU))) {
				goto _iter_end_1b9023cb1;
			};
			(_6013_n)++;
		}
	_iter_next_1b9023cb1:;
	}
	_iter_end_1b9023cb1:;;
	(*_5913_nst.alloc)._field_Idents=(*_5913_nst.alloc)._field_Idents.slice(0LL, ((*_5913_nst.alloc)._field_Idents.len() - 1LL));
	((*((*(_self_))._field_i)))--;
	(*_5913_nst.alloc)._field_Kind=_1b57a90a5_buildIdent(_self_);
	(*(_5513_t))._field_Kind=jule::Any(_5913_nst, &__jule_any_type91);
	return _5513_t;;
}



inline jule::Slice<jule::Ptr<_1cdec1a90_TypeDecl>> _1b57a8a88_buildGenerics(_1b57a7b64_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1cdeab4b4_Token> _889_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((*(_889_token))._field_Id != static_cast<jule::U32>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>> _9313_parts = _1b57a8d1e_identGenerics(_self_);;
	if ((_9313_parts.len() == 0LL)) {
		_1b57a8208_pushErr(_self_, _889_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1cdec1a90_TypeDecl>> _9913_types = jule::Slice<jule::Ptr<_1cdec1a90_TypeDecl>>::alloc(0LL, _9313_parts.len());;
	{
		auto expr = &(_9313_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b902b923:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _10021_part = *it;
			{
				jule::I32 _10117_j = 0LL;;
				jule::Ptr<_1cdec1a90_TypeDecl> _10217_t;;
				({
					__jule_tuple_x_1cdec1a90_TypeDecl__jule_tuple_bool __jule_assign_result = _1b579803e_buildType((*(_self_))._field_p, &(_10021_part), (&(_10117_j)), true);
					_10217_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_10117_j < _10021_part.len())) {
					_1b57a8208_pushErr(_self_, _10021_part[_10117_j], jule::Str::lit("invalid syntax", 14));
				};
				{ jule::Slice<jule::Ptr<_1cdec1a90_TypeDecl>> &__jule_push_dest = _9913_types; __jule_push_dest.push(_10217_t); };
			}
			_iter_next_1b902b923:;
			++it;
			goto _iter_begin_1b902b923;
		}
		_iter_end_1b902b923:;
	};
	return _9913_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>> _1b57a8d1e_identGenerics(_1b57a7b64_typeBuilder* _self_) {
	jule::I32 _1129_first = (*((*(_self_))._field_i));;
	jule::I32 _11313_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1cdeab4b4_Token> _11513_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ (*(_11513_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(76LLU)) {
					_case_begin_1b90301b8:;
					{
						(_11313_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(77LLU)) {
					_case_begin_1b903051a:;
					{
						(_11313_rangeN)--;
					}
				}
				_match_end_1b90304a4:;
			};
			if ((_11313_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1b902e52a;
			};
		}
	_iter_next_1b902e52a:;
	}
	_iter_end_1b902e52a:;;
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _12713_tokens = (*(_self_))._field_tokens.slice((_1129_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>> _12813_parts;;
	jule::Slice<_22a93672d_Log> _12820_errors;;
	({
		__jule_tuple_ssx_1cdeab4b4_Token__jule_tuple_s_22a93672d_Log __jule_assign_result = _1b57948a9_parts(&(_12713_tokens), static_cast<jule::U32>(5LLU), true);
		_12813_parts = __jule_assign_result.__jule_result_arg0;
		_12820_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_12820_errors);
	};
	return _12813_parts;;
}



inline jule::Ptr<_1cdec1a90_TypeDecl> _1b57a90a5_buildIdent(_1b57a7b64_typeBuilder* _self_) {
	jule::Bool _13613_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_13613_next && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U32>(19LLU)))) {
		return _1b57a8802_buildNamespace(_self_);;
	};
	jule::Ptr<_1cdeab4b4_Token> _14013_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1cdec219a_IdentTypeDecl> _14113_it = jule::new_ptr<_1cdec219a_IdentTypeDecl>(_1cdec219a_IdentTypeDecl{._field_Token=_14013_token, ._field_Ident=(*(_14013_token))._field_Kind, ._field_Binded=false, });;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1cdec1a90_TypeDecl> _14713_itd = jule::new_ptr<_1cdec1a90_TypeDecl>(_1cdec1a90_TypeDecl{._field_Token=_14013_token, ._field_Kind=jule::Any(_14113_it, &__jule_any_type20)});;
	if (((!(_13613_next)) || ((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U32>(17LLU)))) {
		(*(_14113_it))._field_Generics=_1b57a8a88_buildGenerics(_self_);
		return _14713_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1b57a8208_pushErr(_self_, _14013_token, jule::Str::lit("invalid syntax", 14));
		return _14713_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1b57a8208_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("invalid syntax", 14));
		return _14713_itd;;
	};
	jule::Ptr<_1cdec2464_SubIdentTypeDecl> _16413_sit = jule::new_ptr<_1cdec2464_SubIdentTypeDecl>();;
	(*_16413_sit.alloc)._field_Idents=jule::append((*_16413_sit.alloc)._field_Idents,jule::Slice<jule::Ptr<_1cdec219a_IdentTypeDecl>>::make({_14113_it}));
	jule::Ptr<_1cdec1a90_TypeDecl> _16613_ident = _1b57a90a5_buildIdent(_self_);;
	{
		auto &_match_expr{ (*(_16613_ident))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1b903b070:;
			{
				(*_16413_sit.alloc)._field_Idents=jule::append((*_16413_sit.alloc)._field_Idents,jule::Slice<jule::Ptr<_1cdec219a_IdentTypeDecl>>::make({(*(_16613_ident))._field_Kind.unsafe_cast_ptr<_1cdec219a_IdentTypeDecl>()}));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1b9038c71:;
			{
				(*_16413_sit.alloc)._field_Idents=jule::append((*_16413_sit.alloc)._field_Idents,(*((*(_16613_ident))._field_Kind.unsafe_cast_ptr<_1cdec2464_SubIdentTypeDecl>()))._field_Idents);
			}
		}
		_match_end_1b90340e0:;
	};
	return jule::new_ptr<_1cdec1a90_TypeDecl>(_1cdec1a90_TypeDecl{._field_Token=_14013_token, ._field_Kind=jule::Any(_16413_sit, &__jule_any_type87)});;
}



inline jule::Ptr<_1cdec1a90_TypeDecl> _1b57a933b_buildCppLink(_1b57a7b64_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id != static_cast<jule::U32>(17LLU)))) {
		_1b57a8208_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1cdec1a90_TypeDecl> _18513_t = _1b57a90a5_buildIdent(_self_);;
	(*((*(_18513_t))._field_Kind.cast_ptr<_1cdec219a_IdentTypeDecl>(&__jule_any_type20)))._field_Binded=true;
	return _18513_t;;
}



inline jule::Ptr<_1cdec1a90_TypeDecl> _1b57a95c2_buildFn(_1b57a7b64_typeBuilder* _self_) {
	jule::Ptr<_1cdeab4b4_Token> _19113_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1cded3750_FnDecl> _19213_f = _1b579c1ca_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_19213_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1cded3ab3_IsAnon(_19213_f.ptr())))) {
		_1b57a8208_pushErr(_self_, (*(_19213_f))._field_Token, jule::Str::lit("invalid syntax", 14));
	};
	return jule::new_ptr<_1cdec1a90_TypeDecl>(_1cdec1a90_TypeDecl{._field_Token=_19113_token, ._field_Kind=jule::Any(_19213_f, &__jule_any_type14)});;
}



inline jule::Ptr<_1cdec1a90_TypeDecl> _1b57a9858_buildPtr(_1b57a7b64_typeBuilder* _self_) {
	jule::Ptr<_1cdeab4b4_Token> _20613_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1b57a8208_pushErr(_self_, _20613_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id == static_cast<jule::U32>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1cdec1a90_TypeDecl>(_1cdec1a90_TypeDecl{._field_Token=_20613_token, ._field_Kind=jule::Any(jule::new_ptr<_1cdec35b9_PtrTypeDecl>(_1cdec35b9_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type71)});;
	};
	jule::Ptr<_1cdec1a90_TypeDecl> _22313_elem = _1b57aa8ae_step(_self_);;
	if ((_22313_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1cdec1a90_TypeDecl>(_1cdec1a90_TypeDecl{._field_Token=_20613_token, ._field_Kind=jule::Any(jule::new_ptr<_1cdec35b9_PtrTypeDecl>(_1cdec35b9_PtrTypeDecl{._field_Elem=_22313_elem}), &__jule_any_type71)});;
}



inline jule::Ptr<_1cdec1a90_TypeDecl> _1b57a9ade_buildSptr(_1b57a7b64_typeBuilder* _self_) {
	jule::Ptr<_1cdeab4b4_Token> _23713_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1b57a8208_pushErr(_self_, _23713_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1cdec1a90_TypeDecl> _24413_elem = _1b57aa8ae_step(_self_);;
	if ((_24413_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1cdec1a90_TypeDecl>(_1cdec1a90_TypeDecl{._field_Token=_23713_token, ._field_Kind=jule::Any(jule::new_ptr<_1cdec2b3a_SptrTypeDecl>(_1cdec2b3a_SptrTypeDecl{._field_Elem=_24413_elem}), &__jule_any_type72)});;
}



inline jule::Ptr<_1cdec1a90_TypeDecl> _1b57a9d75_buildSlc(_1b57a7b64_typeBuilder* _self_) {
	jule::Ptr<_1cdeab4b4_Token> _25813_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1cdec1a90_TypeDecl> _26013_elem = _1b57aa8ae_step(_self_);;
	if ((_26013_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1cdec1a90_TypeDecl>(_1cdec1a90_TypeDecl{._field_Token=_25813_token, ._field_Kind=jule::Any(jule::new_ptr<_1cdec2ec0_SlcTypeDecl>(_1cdec2ec0_SlcTypeDecl{._field_Elem=_26013_elem}), &__jule_any_type70)});;
}



inline jule::Ptr<_1cdec1a90_TypeDecl> _1b57aa10b_buildArr(_1b57a7b64_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _27313_exprTokens = _1b5794139_range(&((*((*(_self_))._field_i))), static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1b57a8208_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1cdec1a90_TypeDecl> _27913_elem = _1b57aa8ae_step(_self_);;
	if ((_27913_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1cdec3d5b_ArrTypeDecl> _28413_arrt = jule::new_ptr<_1cdec3d5b_ArrTypeDecl>(_1cdec3d5b_ArrTypeDecl{._field_Elem=_27913_elem, });;
	jule::Ptr<_1cdeab4b4_Token> _28813_token = _27313_exprTokens[0LL];;
	if (((_27313_exprTokens.len() == 1LL) && ((*(_28813_token))._field_Id == static_cast<jule::U32>(39LLU)))) {
	} else {
		(*(_28413_arrt))._field_Size=_1b5796adc_buildExpr((*(_self_))._field_p, &(_27313_exprTokens));
	};
	return jule::new_ptr<_1cdec1a90_TypeDecl>(_1cdec1a90_TypeDecl{._field_Token=_28813_token, ._field_Kind=jule::Any(_28413_arrt, &__jule_any_type69)});;
}



inline jule::Ptr<_1cdec1a90_TypeDecl> _1b57aa392_buildMap(_1b57a7b64_typeBuilder* _self_) {
	jule::Ptr<_1cdeab4b4_Token> _30213_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1b57a8208_pushErr(_self_, _30213_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _31013_keyTokens = _1b5794139_range(&((*((*(_self_))._field_i))), static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1b57a8208_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	} else if ((_31013_keyTokens.len() == 0LL)) {
		_1b57a8208_pushErr(_self_, _30213_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1cdec45a9_MapTypeDecl> _31913_mapt = jule::new_ptr<_1cdec45a9_MapTypeDecl>();;
	jule::I32 _32013_j = 0LL;;
	jule::Ptr<_1cdec1a90_TypeDecl> _32113_keyt;;
	jule::Bool _32123_ok;;
	({
		__jule_tuple_x_1cdec1a90_TypeDecl__jule_tuple_bool __jule_assign_result = _1b579803e_buildType((*(_self_))._field_p, &(_31013_keyTokens), (&(_32013_j)), (*(_self_))._field_err);
		_32113_keyt = __jule_assign_result.__jule_result_arg0;
		_32123_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32123_ok))) {
		return nullptr;;
	} else if ((_32013_j < _31013_keyTokens.len())) {
		_1b57a8208_pushErr(_self_, _31013_keyTokens[_32013_j], jule::Str::lit("invalid syntax", 14));
	};
	(*_31913_mapt.alloc)._field_Key=_32113_keyt;
	jule::Ptr<_1cdec1a90_TypeDecl> _32913_valt;;
	({
		__jule_tuple_x_1cdec1a90_TypeDecl__jule_tuple_bool __jule_assign_result = _1b579803e_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_32913_valt = __jule_assign_result.__jule_result_arg0;
		_32123_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32123_ok))) {
		return nullptr;;
	};
	(*_31913_mapt.alloc)._field_Val=_32913_valt;
	return jule::new_ptr<_1cdec1a90_TypeDecl>(_1cdec1a90_TypeDecl{._field_Token=_30213_mapToken, ._field_Kind=jule::Any(_31913_mapt, &__jule_any_type73)});;
}



inline jule::Ptr<_1cdec1a90_TypeDecl> _1b57aa628_buildEnumerable(_1b57a7b64_typeBuilder* _self_) {
	jule::Ptr<_1cdeab4b4_Token> _34113_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_1b57a8208_pushErr(_self_, _34113_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_34113_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((*(_34113_token))._field_Id == static_cast<jule::U32>(77LLU))) {
		return _1b57a9d75_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1b57aa10b_buildArr(_self_);;
}



inline jule::Ptr<_1cdec1a90_TypeDecl> _1b57aa8ae_step(_1b57a7b64_typeBuilder* _self_) {
	jule::Ptr<_1cdeab4b4_Token> _3569_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ (*(_3569_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_1b905b535:;
			{
				return _1b57a90a5_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1b905b0c3:;
			{
				return _1b57a933b_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1b905b656:;
			{
				return _1b57a95c2_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1b905aca4:;
			{
				return _1b57a9858_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1b905ad1a:;
			{
				return _1b57a9ade_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1b905ad81:;
			{
				return jule::new_ptr<_1cdec1a90_TypeDecl>(_1cdec1a90_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1cdec2b3a_SptrTypeDecl>(_1cdec2b3a_SptrTypeDecl{._field_Elem=_1b57a9ade_buildSptr(_self_)}), &__jule_any_type72)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(76LLU)) {
			_case_begin_1b905ade7:;
			{
				return _1b57aa628_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(37LLU)) {
			_case_begin_1b905ae5d:;
			{
				return _1b57aa392_buildMap(_self_);;
			}
		}
		else {
			_case_begin_1b905a9a7:;
			{
				((*((*(_self_))._field_i)))++;
				_1b57a8208_pushErr(_self_, _3569_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1b905aa40:;
	};
}



inline __jule_tuple_x_1cdec1a90_TypeDecl__jule_tuple_bool _1b57aab45_build(_1b57a7b64_typeBuilder* _self_) {
	__jule_tuple_x_1cdec1a90_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1cdec1a90_TypeDecl> _38813_root = _1b57aa8ae_step(_self_);;
	if ((_38813_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1b57a73a0_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _38813_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b57a7b64_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce361eb8_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _1ce3639e2_pushErr(_1ce363492_directiveEval* _self_, jule::Ptr<_1cdeab4b4_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	{ jule::Slice<_22a93672d_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_22a93672d_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*(_2126_t))._field_Row, ._field_Column=(*_2126_t.alloc)._field_Column, ._field_Path=(*((*_2126_t.alloc)._field_File))._field_Path, ._field_Text=_22a936b90_Logf(_2137_fmt, _2150_args), }); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>> _1ce363ddd_splitOperans(_1ce363492_directiveEval* _self_, jule::U32 _3331_op, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _3349_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>> _3413_parts = jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>>::alloc(0LL, 10LL);;
	jule::I32 _3513_i = 0LL;;
	jule::I32 _3613_rangeN = 0LL;;
	jule::I32 _3713_last = 0LL;;
	for (; (_3513_i < ((*(_3349_tokens)).len() - 1LL)); (_3513_i)++) {
		{
			jule::Ptr<_1cdeab4b4_Token> _3913_b = (*(_3349_tokens))[_3513_i];;
			{
				auto &_match_expr{ (*(_3913_b))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1b9080eb6:;
					{
						(_3613_rangeN)++;
						goto _iter_next_1b90804b0;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1b9081318:;
					{
						(_3613_rangeN)--;
					}
				}
				_match_end_1b90812a2:;
			};
			if (((_3613_rangeN > 0LL) || ((*(_3913_b))._field_Id != _3331_op))) {
				goto _iter_next_1b90804b0;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>> &__jule_push_dest = _3413_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3713_last, _3513_i)); };
			_3713_last=(_3513_i + 1LL);
		}
	_iter_next_1b90804b0:;
	}
	_iter_end_1b90804b0:;;
	if ((_3713_last < (*(_3349_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>> &__jule_push_dest = _3413_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3713_last)); };
	} else {
		_1ce3639e2_pushErr(_self_, (*(_3349_tokens))[(_3713_last - 1LL)], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _3413_parts;;
}



inline jule::Bool _1ce36422e_evalDirectiveIdent(_1ce363492_directiveEval* _self_, jule::Str _6433_ident) {
	if ((_6433_ident).empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9083d76:;
		if (it != expr_end) {
			jule::Str *_6816_var = it;
			{
				if (((*(_6816_var)) == _6433_ident)) {
					return true;;
				};
			}
			_iter_next_1b9083d76:;
			++it;
			goto _iter_begin_1b9083d76;
		}
		_iter_end_1b9083d76:;
	};
	return false;;
}



inline jule::Bool _1ce364570_evalDirectivePart(_1ce363492_directiveEval* _self_, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _7840_part) {
	jule::Bool _799_logicalNot = ((*(_7840_part[0LL]))._field_Id == static_cast<jule::U32>(68LLU));;
	if (_799_logicalNot) {
		(_7840_part).mut_slice(1LL);;
	};
	if ((_7840_part.len() > 1LL)) {
		_1ce3639e2_pushErr(_self_, _7840_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _8913_result = _1ce36422e_evalDirectiveIdent(_self_, (*(_7840_part[0LL]))._field_Kind);;
	if (_799_logicalNot) {
		_8913_result=(!(_8913_result));
	};
	return _8913_result;;
}



inline jule::Bool _1ce364806_eval(_1ce363492_directiveEval* _self_) {
	if (((*((*(_self_))._field_d))._field_Args.len() == 0LL)) {
		_1ce3639e2_pushErr(_self_, (*(*(_self_))._field_d.alloc)._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _10213_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>> _10413_logicalOrParts = _1ce363ddd_splitOperans(_self_, static_cast<jule::U32>(55LLU), &((*(*(_self_))._field_d.alloc)._field_Args));;
	if ((_10413_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_10413_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9089596:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _10921_part = *it;
			{
				jule::Bool _11017_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>> _11117_logicalAndParts = _1ce363ddd_splitOperans(_self_, static_cast<jule::U32>(54LLU), &(_10921_part));;
				if ((_11117_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_11117_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b908ace5:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _11625_andPart = *it;
						{
							jule::Ptr<_1cdeab4b4_Token> _11717_first = _11625_andPart[0LL];;
							if (((*(_11717_first))._field_Id == static_cast<jule::U32>(74LLU))) {
								jule::Ptr<_1cdeab4b4_Token> _11921_end = _11625_andPart[(_11625_andPart.len() - 1LL)];;
								if (((*(_11921_end))._field_Id != static_cast<jule::U32>(75LLU))) {
									_1ce3639e2_pushErr(_self_, _11717_first, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
									return false;;
								};
								(_11625_andPart).mut_slice(1LL, (_11625_andPart.len() - 1LL));;
							};
							_11017_and=(_11017_and && _1ce364570_evalDirectivePart(_self_, _11625_andPart));
						}
						_iter_next_1b908ace5:;
						++it;
						goto _iter_begin_1b908ace5;
					}
					_iter_end_1b908ace5:;
				};
				_10213_result=(_10213_result || _11017_and);
			}
			_iter_next_1b9089596:;
			++it;
			goto _iter_begin_1b9089596;
		}
		_iter_end_1b9089596:;
	};
	return _10213_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce363492_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b57abc9a_JuleImporter> static__1b57ac196_New(_1ce361eb8_CompileInfo _5819_info) {
	jule::Ptr<_1b57abc9a_JuleImporter> _5913_imp = jule::new_ptr<_1b57abc9a_JuleImporter>(_1b57abc9a_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_22abd9a25_PathStdlib}), });;
	_1ce362848_initVars(&((*(_5913_imp))._field_vars), &(_5819_info));
	return _5913_imp;;
}



inline jule::Slice<jule::Ptr<_1ce06b0ac_ImportInfo>> _1b57ac42c_AllPackages(_1b57abc9a_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1b57ac86c_SetModPath(_1b57abc9a_JuleImporter* _self_, jule::Str _7529_path) {
	(*(_self_))._field_mod=_7529_path;
}



inline jule::Str _1b57acb03_GetModPath(_1b57abc9a_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1b57ace44_ModById(_1b57abc9a_JuleImporter* _self_, jule::I32 _8322_id) {
	return (*(_self_))._field_mods[_8322_id];;
}



inline jule::Ptr<_1ce06b0ac_ImportInfo> _1b57ad285_GetImport(_1b57abc9a_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b909244a:;
		if (it != expr_end) {
			jule::Ptr<_1ce06b0ac_ImportInfo> _8821_p = *it;
			{
				if (((*(_8821_p))._field_Path == _8728_path)) {
					return _8821_p;;
				};
			}
			_iter_next_1b909244a:;
			++it;
			goto _iter_begin_1b909244a;
		}
		_iter_end_1b909244a:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1cdebead2_Ast__jule_tuple_s_22a93672d_Log _1b57ad681_ImportPackage(_1b57abc9a_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	__jule_tuple_sx_1cdebead2_Ast__jule_tuple_s_22a93672d_Log __jule_func_result;
	jule::Slice<jule::Ptr<_2439c6321_DirEntry>> _9713_dirents = ({
		auto except = static__22ab1b9bd_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_22a93672d_Log>::make({_1b57ab7b1_flatCompilerErr((jule::Str::lit("connot read package directory: ", 31) + _9632_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_2439c6321_DirEntry>>(nullptr);});
	});;
	if (_9643_update_mod) {
		jule::Str _10213_newMod = _1ce0878d1_FindModuleFileDeep(_9632_path);;
		if ((_10213_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_10213_newMod;
			jule::Slice<_22a93672d_Log> _10521_errs = _1ce087b9a_CheckModuleFile(&((*(_self_))._field_mod));;
			if ((_10521_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _10521_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1cdebead2_Ast>> _11213_asts = jule::Slice<jule::Ptr<_1cdebead2_Ast>>::alloc(0LL, _9713_dirents.len());;
	{
		auto expr = &(_9713_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9093a9a:;
		if (it != expr_end) {
			jule::Ptr<_2439c6321_DirEntry> _11316_dirent = *it;
			{
				if ((_2439ca6aa_IsDir((*(_11316_dirent))._field_Stat.ptr()) || (!(_22aae815e_HasSuffix((*_11316_dirent.alloc)._field_Name, jule::Str::lit(".jule", 5)))))) {
					goto _iter_next_1b9093a9a;
				};
				jule::Str _11913__path = _22ab189a9_Join(jule::Slice<jule::Str>::make({_9632_path,(*_11316_dirent.alloc)._field_Name}));;
				jule::Ptr<_1cdeb1c4a_File> _12017_file = _1cdeb3125_NewFileSet(_11913__path);;
				_1cdeb2168_Fill(_12017_file.ptr(), _1b57ab4a3_readBuff((*_12017_file.alloc)._field_Path));
				jule::Slice<_22a93672d_Log> _12217_errors = _1cdebe609_Lex(_12017_file, static_cast<jule::I32>(0LL));;
				if ((_12217_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12217_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1b57310c6_FileInfo> _12717_finfo = _1b5774a76_ParseFile(_12017_file);;
				if (((*(_12717_finfo))._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = (*_12717_finfo.alloc)._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1ce341aad_isPassFileAnnotation((*_11316_dirent.alloc)._field_Name)))) {
					goto _iter_next_1b9093a9a;
				};
				jule::Bool _13713_r;;
				jule::Slice<_22a93672d_Log> _13720_logs;;
				({
					__jule_tuple_bool__jule_tuple_s_22a93672d_Log __jule_assign_result = _1b57add68_isPassBuildDirectives(_self_, &((*_12717_finfo.alloc)._field_Ast));
					_13713_r = __jule_assign_result.__jule_result_arg0;
					_13720_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13720_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13720_logs;
					return __jule_func_result;;
				};
				if ((!(_13713_r))) {
					goto _iter_next_1b9093a9a;
				};
				{ jule::Slice<jule::Ptr<_1cdebead2_Ast>> &__jule_push_dest = _11213_asts; __jule_push_dest.push((*_12717_finfo.alloc)._field_Ast); };
			}
			_iter_next_1b9093a9a:;
			++it;
			goto _iter_begin_1b9093a9a;
		}
		_iter_end_1b9093a9a:;
	};
	__jule_func_result.__jule_result_arg0 = _11213_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1b57ad939_Imported(_1b57abc9a_JuleImporter* _self_, jule::Ptr<_1ce06b0ac_ImportInfo> _15331_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b90965c5:;
		if (it != expr_end) {
			jule::Ptr<_1ce06b0ac_ImportInfo> _15516_p = *it;
			{
				if ((((*(_15516_p))._field_Binded == (*(_15331_imp))._field_Binded) && ((*_15516_p.alloc)._field_LinkPath == (*_15331_imp.alloc)._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1b90965c5:;
			++it;
			goto _iter_begin_1b90965c5;
		}
		_iter_end_1b90965c5:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b909dda2:;
			if (it != expr_end) {
				jule::I32 _16217_i = it - expr->begin();
				jule::Str _16220_mod = *it;
				{
					if (((*(_self_))._field_mod == _16220_mod)) {
						(*_15331_imp.alloc)._field_ModId=_16217_i;
						goto _julec_label_1b909e523;
					};
				}
				_iter_next_1b909dda2:;
				++it;
				_16217_i++;
				goto _iter_begin_1b909dda2;
			}
			_iter_end_1b909dda2:;
		};
		(*_15331_imp.alloc)._field_ModId=(*(_self_))._field_mods.len();
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_1b909e523:;
	};
	{ jule::Slice<jule::Ptr<_1ce06b0ac_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_15331_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_22a93672d_Log _1b57add68_isPassBuildDirectives(_1b57abc9a_JuleImporter* _self_, jule::Ptr<_1cdebead2_Ast>* _17945_file) {
	__jule_tuple_bool__jule_tuple_s_22a93672d_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*((*(_17945_file))))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b90a1e2c:;
		if (it != expr_end) {
			jule::Ptr<_1cdec0eac_Directive> _18021_td = *it;
			{
				if ((!(*((*(_18021_td))._field_Tag))._field_Kind.equal("build", 5))) {
					goto _iter_next_1b90a1e2c;
				};
				_1ce363492_directiveEval _18417_de = _1ce363492_directiveEval{._field_d=_18021_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _18813_result = _1ce364806_eval(&_18417_de);;
				if ((_18417_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _18417_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_18813_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1b90a1e2c:;
			++it;
			goto _iter_begin_1b90a1e2c;
		}
		_iter_end_1b90a1e2c:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b57abc9a_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b57b1eae_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b90c3899_isCommonOrdered(jule::Slice<jule::Ptr<_1cdee2990_Struct>> _1834_s, jule::Ptr<_1cdee2990_Struct> _1842_t) {
	{
		auto expr = &((*(_1842_t))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b90c4b0e:;
		if (it != expr_end) {
			jule::Ptr<_1cdee2990_Struct> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b90c536d:;
					if (it != expr_end) {
						jule::Ptr<_1cdee2990_Struct> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1b90c536d:;
						++it;
						goto _iter_begin_1b90c536d;
					}
					_iter_end_1b90c536d:;
				};
			}
			_iter_next_1b90c4b0e:;
			++it;
			goto _iter_begin_1b90c4b0e;
		}
		_iter_end_1b90c4b0e:;
	};
	return true;;
}

inline jule::Bool _1b90c878e_isCommonOrdered(jule::Slice<jule::Ptr<_1ce0b4105_Var>> _1834_s, jule::Ptr<_1ce0b4105_Var> _1842_t) {
	{
		auto expr = &((*(_1842_t))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b90c99b0:;
		if (it != expr_end) {
			jule::Ptr<_1ce0b4105_Var> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b90ca21e:;
					if (it != expr_end) {
						jule::Ptr<_1ce0b4105_Var> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1b90ca21e:;
						++it;
						goto _iter_begin_1b90ca21e;
					}
					_iter_end_1b90ca21e:;
				};
			}
			_iter_next_1b90c99b0:;
			++it;
			goto _iter_begin_1b90c99b0;
		}
		_iter_end_1b90c99b0:;
	};
	return true;;
}



inline void _1b90c0005_orderCommon(jule::Slice<jule::Ptr<_1cdee2990_Struct>>* _3135_s) {
	jule::I32 _3213_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b90c1479:;
		if (it != expr_end) {
			{
				jule::Bool _3417_swapped = false;;
				jule::I32 _3517_k = 0LL;;
				for (; (_3517_k < _3213_n); (_3517_k)++) {
					{
						if ((!(_1b90c3899_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3517_k])))) {
							std::swap((*(_3135_s))[_3517_k], (*(_3135_s))[(_3517_k + 1LL)]);
							_3417_swapped=true;
						};
					}
				_iter_next_1b90c2018:;
				}
				_iter_end_1b90c2018:;;
				if ((!(_3417_swapped))) {
					goto _iter_end_1b90c1479;
				};
				(_3213_n)--;
			}
			_iter_next_1b90c1479:;
			++it;
			goto _iter_begin_1b90c1479;
		}
		_iter_end_1b90c1479:;
	};
}

inline void _1b90c5a88_orderCommon(jule::Slice<jule::Ptr<_1ce0b4105_Var>>* _3135_s) {
	jule::I32 _3213_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b90c636e:;
		if (it != expr_end) {
			{
				jule::Bool _3417_swapped = false;;
				jule::I32 _3517_k = 0LL;;
				for (; (_3517_k < _3213_n); (_3517_k)++) {
					{
						if ((!(_1b90c878e_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3517_k])))) {
							std::swap((*(_3135_s))[_3517_k], (*(_3135_s))[(_3517_k + 1LL)]);
							_3417_swapped=true;
						};
					}
				_iter_next_1b90c6e0d:;
				}
				_iter_end_1b90c6e0d:;;
				if ((!(_3417_swapped))) {
					goto _iter_end_1b90c636e;
				};
				(_3213_n)--;
			}
			_iter_next_1b90c636e:;
			++it;
			goto _iter_begin_1b90c636e;
		}
		_iter_end_1b90c636e:;
	};
}



inline void static__1b57b2b19_orderStructures(jule::Slice<jule::Ptr<_1cdee2990_Struct>>* _5136_structs) {
	_1b90c0005_orderCommon(_5136_structs);
}



inline void static__1b57b2d4a_orderVars(jule::Slice<jule::Ptr<_1ce0b4105_Var>>* _5730_vars) {
	_1b90c5a88_orderCommon(_5730_vars);
}





std::ostream &operator<<(std::ostream &_Stream, _1b57b2245_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b59255d9_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1b592a7cb_optimizeChild(jule::Ptr<_1b592a2e2_scopeDeadCode> _self_, jule::Ptr<_1ce0497c7_Scope>* _3938_s) {
	jule::Ptr<_1b592a2e2_scopeDeadCode> _4013_sdc = jule::new_ptr<_1b592a2e2_scopeDeadCode>(_1b592a2e2_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3938_s)), ._field_stmts=(&((*((*(_3938_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, });;
	{
		_1b592d1e6_optimizeStmts(_4013_sdc);
	};
}



inline void _1b592aa84_optimizeBodyChildExceptional(jule::Ptr<_1b592a2e2_scopeDeadCode> _self_, jule::Ptr<_1ce0497c7_Scope>* _5053_s) {
	jule::Ptr<_1b592a2e2_scopeDeadCode> _5113_sdc = jule::new_ptr<_1b592a2e2_scopeDeadCode>(_1b592a2e2_scopeDeadCode{._field_s=(*(_5053_s)), ._field_stmts=(&((*((*(_5053_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=true});;
	{
		_1b592d1e6_optimizeStmts(_5113_sdc);
	};
}



inline void _1b592ad3c_optimizeBodyChild(jule::Ptr<_1b592a2e2_scopeDeadCode> _self_, jule::Ptr<_1ce0497c7_Scope>* _6142_s) {
	jule::Ptr<_1b592a2e2_scopeDeadCode> _6213_sdc = jule::new_ptr<_1b592a2e2_scopeDeadCode>(_1b592a2e2_scopeDeadCode{._field_s=(*(_6142_s)), ._field_stmts=(&((*((*(_6142_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, });;
	{
		_1b592d1e6_optimizeStmts(_6213_sdc);
	};
}



inline void _1b592b0e5_optimizeExprModel(jule::Ptr<_1b592a2e2_scopeDeadCode> _self_, jule::Any* _7142_model) {
	_1b592e57c_exprDeadCode _729_edc = static__1b592ebba_new(&(_self_));;
	_1b5935ae4_optimize(&_729_edc, _7142_model);
}



inline void _1b592b2e3_eliminateFollowed(_1b592a2e2_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		(*((*(_self_))._field_stmts))=(*((*(_self_))._field_stmts)).slice(0LL, ((*(_self_))._field_i + 1LL));
	};
	jule::Ptr<_1b592a2e2_scopeDeadCode> _8313_parent = (*(_self_))._field_parent;;
	while ((_8313_parent != nullptr)) {
		{
			{
				(*((*_8313_parent.alloc)._field_stmts))=(*((*_8313_parent.alloc)._field_stmts)).slice(0LL, ((*_8313_parent.alloc)._field_i + 1LL));
			};
			_8313_parent=(*_8313_parent.alloc)._field_parent;
		}
	_iter_next_1b916b1e4:;
	}
	_iter_end_1b916b1e4:;;
}



inline void _1b592b59b_pushGoto(jule::Ptr<_1b592a2e2_scopeDeadCode> _self_, jule::Ptr<_1ce04c544_GotoSt> _9232_gt) {
	jule::I32 _9313_i = 0LL;;
	for (; (_9313_i < (*((*(_self_))._field_labels)).len()); (_9313_i)++) {
		{
			if (((*(_9232_gt))._field_Ident == (*((*(*_self_.alloc)._field_labels.alloc)[_9313_i]))._field_Ident)) {
				return;;
			};
		}
	_iter_next_1b916de2d:;
	}
	_iter_end_1b916de2d:;;
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*_self_.alloc)._field_gotos.alloc),jule::Slice<jule::Ptr<_1ce04c544_GotoSt>>::make({_9232_gt}));
}



inline void _1b592b854_pushLabel(jule::Ptr<_1b592a2e2_scopeDeadCode> _self_, jule::Ptr<_1ce04c16a_Label> _10233_l) {
	jule::I32 _10313_i = 0LL;;
	while ((_10313_i < (*((*(_self_))._field_gotos)).len())) {
		{
			if (((*(_10233_l))._field_Ident == (*((*(*_self_.alloc)._field_gotos.alloc)[_10313_i]))._field_Ident)) {
				jule::copy((*((*(_self_))._field_gotos)).slice(_10313_i), (*((*(_self_))._field_gotos)).slice((_10313_i + 1LL)));
				(*(*_self_.alloc)._field_gotos.alloc)=(*(*_self_.alloc)._field_gotos.alloc).slice(0LL, ((*(*_self_.alloc)._field_gotos.alloc).len() - 1LL));
				goto _iter_next_1b917110b;
			};
			(_10313_i)++;
		}
	_iter_next_1b917110b:;
	}
	_iter_end_1b917110b:;;
	(*((*_self_.alloc)._field_labels))=jule::append((*(*_self_.alloc)._field_labels.alloc),jule::Slice<jule::Ptr<_1ce04c16a_Label>>::make({_10233_l}));
}



inline void _1b592bb0c_optimizeRangeIter(jule::Ptr<_1b592a2e2_scopeDeadCode> _self_, jule::Ptr<_1ce04b60e_RangeIter> _11541_it) {
	_1b592b0e5_optimizeExprModel(_self_, &((*((*(_11541_it))._field_Expr))._field_Model));
	_1b592ad3c_optimizeBodyChild(_self_, &((*_11541_it.alloc)._field_Scope));
}



inline void _1b592bdb5_optimizeWhileIter(jule::Ptr<_1b592a2e2_scopeDeadCode> _self_, jule::Ptr<_1ce04abb3_WhileIter> _12041_it) {
	_1b592b0e5_optimizeExprModel(_self_, &((*(_12041_it))._field_Expr));
	if (((*_12041_it.alloc)._field_Next != nullptr)) {
		_1b592cee8_optimizeStmt(_self_, (*_12041_it.alloc)._field_Next);
	};
	_1b592ad3c_optimizeBodyChild(_self_, &((*_12041_it.alloc)._field_Scope));
}



inline void _1b592c16d_optimizeInfIter(jule::Ptr<_1b592a2e2_scopeDeadCode> _self_, jule::Ptr<_1ce04a70c_InfIter> _12839_it) {
	_1b592ad3c_optimizeBodyChild(_self_, &((*(_12839_it))._field_Scope));
}



inline void _1b592c426_optimizeConditional(jule::Ptr<_1b592a2e2_scopeDeadCode> _self_, jule::Ptr<_1ce04a410_Conditional> _13243_c) {
	{
		auto expr = &((*(_13243_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b91780d0:;
		if (it != expr_end) {
			jule::Ptr<_1ce049be5_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1b592b0e5_optimizeExprModel(_self_, &((*_13321_case.alloc)._field_Expr));
					_1b592ad3c_optimizeBodyChild(_self_, &((*_13321_case.alloc)._field_Scope));
				};
			}
			_iter_next_1b91780d0:;
			++it;
			goto _iter_begin_1b91780d0;
		}
		_iter_end_1b91780d0:;
	};
	if (((*_13243_c.alloc)._field_Default != nullptr)) {
		if (((*_13243_c.alloc)._field_Elifs.len() == 0LL)) {
			_1b592a7cb_optimizeChild(_self_, &((*(*_13243_c.alloc)._field_Default.alloc)._field_Scope));
		} else {
			_1b592ad3c_optimizeBodyChild(_self_, &((*(*_13243_c.alloc)._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1b592c6ce_optimizeMatch(jule::Ptr<_1b592a2e2_scopeDeadCode> _self_, jule::Ptr<_1ce04d90d_Match> _15037_m) {
	{
		auto expr = &((*(_15037_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b917b611:;
		if (it != expr_end) {
			jule::Ptr<_1ce04e436_Case> _15121_case = *it;
			{
				{
					auto expr = &((*(_15121_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b917c06d:;
					if (it != expr_end) {
						jule::Ptr<_1ce11bc0c_Data> _15225_expr = *it;
						{
							_1b592b0e5_optimizeExprModel(_self_, &((*(_15225_expr))._field_Model));
						}
						_iter_next_1b917c06d:;
						++it;
						goto _iter_begin_1b917c06d;
					}
					_iter_end_1b917c06d:;
				};
				_1b592ad3c_optimizeBodyChild(_self_, &((*_15121_case.alloc)._field_Scope));
			}
			_iter_next_1b917b611:;
			++it;
			goto _iter_begin_1b917b611;
		}
		_iter_end_1b917b611:;
	};
	if (((*_15037_m.alloc)._field_Default != nullptr)) {
		if (((*_15037_m.alloc)._field_Cases.len() == 0LL)) {
			_1b592a7cb_optimizeChild(_self_, &((*(*_15037_m.alloc)._field_Default.alloc)._field_Scope));
		} else {
			_1b592ad3c_optimizeBodyChild(_self_, &((*(*_15037_m.alloc)._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1b592c987_optimizeAssign(jule::Ptr<_1b592a2e2_scopeDeadCode> _self_, jule::Ptr<_1ce04cdc4_Assign> _16838_assign) {
	_1b592b0e5_optimizeExprModel(_self_, &((*((*(_16838_assign))._field_L))._field_Model));
	_1b592b0e5_optimizeExprModel(_self_, &((*((*_16838_assign.alloc)._field_R))._field_Model));
}



inline void _1b592cc40_optimizeMultiAssign(jule::Ptr<_1b592a2e2_scopeDeadCode> _self_, jule::Ptr<_1ce04d29d_MultiAssign> _17343_assign) {
	{
		auto expr = &((*(_17343_assign))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9181407:;
		if (it != expr_end) {
			jule::Ptr<_1ce11bc0c_Data> _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1b592b0e5_optimizeExprModel(_self_, &((*_17421_l.alloc)._field_Model));
				};
			}
			_iter_next_1b9181407:;
			++it;
			goto _iter_begin_1b9181407;
		}
		_iter_end_1b9181407:;
	};
	_1b592b0e5_optimizeExprModel(_self_, &((*_17343_assign.alloc)._field_R));
}



inline void _1b592cee8_optimizeStmt(jule::Ptr<_1b592a2e2_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1b9183074:;
			{
				jule::Ptr<_1ce0497c7_Scope> _18517_scope = _18236_st.unsafe_cast_ptr<_1ce0497c7_Scope>();;
				if ((*(_18517_scope))._field_Deferred) {
					_1b592d526_eliminateDeadCodeOfScope(_18517_scope);
				} else {
					_1b592a7cb_optimizeChild(_self_, &(_18517_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1b9182cdd:;
			{
				_1b592bb0c_optimizeRangeIter(_self_, _18236_st.unsafe_cast_ptr<_1ce04b60e_RangeIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1b91830eb:;
			{
				_1b592bdb5_optimizeWhileIter(_self_, _18236_st.unsafe_cast_ptr<_1ce04abb3_WhileIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1b9183162:;
			{
				_1b592c16d_optimizeInfIter(_self_, _18236_st.unsafe_cast_ptr<_1ce04a70c_InfIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1b91831d9:;
			{
				_1b592c426_optimizeConditional(_self_, _18236_st.unsafe_cast_ptr<_1ce04a410_Conditional>());
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1b9183261:;
			{
				_1b592c6ce_optimizeMatch(_self_, _18236_st.unsafe_cast_ptr<_1ce04d90d_Match>());
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1b91832d8:;
			{
				_1b592c987_optimizeAssign(_self_, _18236_st.unsafe_cast_ptr<_1ce04cdc4_Assign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1b9183360:;
			{
				_1b592cc40_optimizeMultiAssign(_self_, _18236_st.unsafe_cast_ptr<_1ce04d29d_MultiAssign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b91833d7:;
			{
				jule::Ptr<_1ce11bc0c_Data> _20617_d = _18236_st.unsafe_cast_ptr<_1ce11bc0c_Data>();;
				if ((*(_self_))._field_except) {
					goto _match_end_1b9182e31;
				};
				{
					auto &_match_expr{ (*(_20617_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type29) {
						_case_begin_1b9188d16:;
						{
							_1b592b2e3_eliminateFollowed(_self_);
						}
					}
					else {
						_case_begin_1b9189476:;
						{
							_1b592b0e5_optimizeExprModel(_self_, &((*(_20617_d))._field_Model));
						}
					}
					_match_end_1b9189421:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1b918345e:;
			{
				_1b592b2e3_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1b91834d6:;
			{
				_1b592b59b_pushGoto(_self_, _18236_st.unsafe_cast_ptr<_1ce04c544_GotoSt>());
				_1b592b2e3_eliminateFollowed(_self_);
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1b918355d:;
			{
				_1b592b854_pushLabel(_self_, _18236_st.unsafe_cast_ptr<_1ce04c16a_Label>());
			}
		}
		_match_end_1b9182e31:;
	};
}



inline void _1b592d1e6_optimizeStmts(jule::Ptr<_1b592a2e2_scopeDeadCode> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_stmts)).len()); ((*_self_.alloc)._field_i)++) {
		{
			_1b592cee8_optimizeStmt(_self_, (*((*_self_.alloc)._field_stmts))[(*_self_.alloc)._field_i]);
		}
	_iter_next_1b918bd91:;
	}
	_iter_end_1b918bd91:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b592a2e2_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1b592e57c_exprDeadCode static__1b592ebba_new(jule::Ptr<_1b592a2e2_scopeDeadCode>* _4824_s) {
	return _1b592e57c_exprDeadCode{._field_s=(*(_4824_s))};;
}



inline void _1b592ee73_binary(_1b592e57c_exprDeadCode* _self_, jule::Ptr<_1cdee9bb7_BinaryExprModel> _5425_m) {
	_1b5935ae4_optimize(_self_, &((*((*(_5425_m))._field_Left))._field_Model));
	_1b5935ae4_optimize(_self_, &((*((*_5425_m.alloc)._field_Right))._field_Model));
}



inline void _1b593022b_unary(_1b592e57c_exprDeadCode* _self_, jule::Ptr<_1cdeea091_UnaryExprModel> _5924_m) {
	_1b5935ae4_optimize(_self_, &((*((*(_5924_m))._field_Expr))._field_Model));
}



inline void _1b59304d4_structureLit(_1b592e57c_exprDeadCode* _self_, jule::Ptr<_1cdeea965_StructLitExprModel> _6331_m) {
	{
		auto expr = &((*(_6331_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9190702:;
		if (it != expr_end) {
			jule::Ptr<_1cdeea5be_StructArgExprModel> _6421_arg = *it;
			{
				_1b5935ae4_optimize(_self_, &((*((*(_6421_arg))._field_Expr))._field_Model));
			}
			_iter_next_1b9190702:;
			++it;
			goto _iter_begin_1b9190702;
		}
		_iter_end_1b9190702:;
	};
}



inline void _1b593078c_allocStructure(_1b592e57c_exprDeadCode* _self_, jule::Ptr<_1cdeeac62_AllocStructLitExprModel> _6933_m) {
	_1b59304d4_structureLit(_self_, (*(_6933_m))._field_Lit);
}



inline void _1b5930a45_casting(_1b592e57c_exprDeadCode* _self_, jule::Ptr<_1cdeeb2e5_CastingExprModel> _7326_m) {
	_1b5935ae4_optimize(_self_, &((*((*(_7326_m))._field_Expr))._field_Model));
}



inline void _1b5930ced_args(_1b592e57c_exprDeadCode* _self_, jule::Slice<jule::Any>* _7724_args) {
	{
		auto expr = _7724_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9192ced:;
		if (it != expr_end) {
			jule::Any _7821_arg = *it;
			{
				_1b5935ae4_optimize(_self_, &(_7821_arg));
			}
			_iter_next_1b9192ced:;
			++it;
			goto _iter_begin_1b9192ced;
		}
		_iter_end_1b9192ced:;
	};
}



inline void _1b59310a6_funcCall(_1b592e57c_exprDeadCode* _self_, jule::Ptr<_1cdeebb97_FnCallExprModel> _8327_m) {
	_1b5935ae4_optimize(_self_, &((*(_8327_m))._field_Expr));
	_1b5930ced_args(_self_, &((*_8327_m.alloc)._field_Args));
	if (((*_8327_m.alloc)._field_Except != nullptr)) {
		_1b592aa84_optimizeBodyChildExceptional((*(_self_))._field_s, &((*_8327_m.alloc)._field_Except));
	};
}



inline void _1b593135e_slice(_1b592e57c_exprDeadCode* _self_, jule::Ptr<_1cdeec071_SliceExprModel> _9124_m) {
	_1b5930ced_args(_self_, &((*(_9124_m))._field_Elems));
}



inline void _1b5931617_array(_1b592e57c_exprDeadCode* _self_, jule::Ptr<_1cdeeeea8_ArrayExprModel> _9524_m) {
	if ((((*(_9524_m))._field_Elems.len() == 2LL) && ((*_9524_m.alloc)._field_Elems[1LL] == nullptr))) {
		_1b5935ae4_optimize(_self_, &((*_9524_m.alloc)._field_Elems[0LL]));
	};
	_1b5930ced_args(_self_, &((*_9524_m.alloc)._field_Elems));
}



inline void _1b59318c0_indexing(_1b592e57c_exprDeadCode* _self_, jule::Ptr<_1cdeec527_IndexingExprModel> _10227_m) {
	_1b5935ae4_optimize(_self_, &((*((*(_10227_m))._field_Expr))._field_Model));
	_1b5935ae4_optimize(_self_, &((*((*_10227_m.alloc)._field_Index))._field_Model));
}



inline void _1b5931b78_anonFunc(_1b592e57c_exprDeadCode* _self_, jule::Ptr<_1cdeec901_AnonFnExprModel> _10727_m) {
	_1b592d526_eliminateDeadCodeOfScope((*((*(_10727_m))._field_Func))._field_Scope);
}



inline void _1b5931e31_mapExpr(_1b592e57c_exprDeadCode* _self_, jule::Ptr<_1cdeed281_MapExprModel> _11126_m) {
	{
		auto expr = &((*(_11126_m))._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8d31c45:;
		if (it != expr_end) {
			jule::Ptr<_1cdeeccca_KeyValPairExprModel> _11221_pair = *it;
			{
				_1b5935ae4_optimize(_self_, &((*(_11221_pair))._field_Key));
				_1b5935ae4_optimize(_self_, &((*_11221_pair.alloc)._field_Val));
			}
			_iter_next_1b8d31c45:;
			++it;
			goto _iter_begin_1b8d31c45;
		}
		_iter_end_1b8d31c45:;
	};
}



inline void _1b59321d9_slicing(_1b592e57c_exprDeadCode* _self_, jule::Ptr<_1cdeed814_SlicingExprModel> _11826_m) {
	_1b5935ae4_optimize(_self_, &((*(_11826_m))._field_Expr));
	_1b5935ae4_optimize(_self_, &((*_11826_m.alloc)._field_Left));
	if (((*_11826_m.alloc)._field_Right != nullptr)) {
		_1b5935ae4_optimize(_self_, &((*_11826_m.alloc)._field_Right));
	};
}



inline void _1b5932492_traitSub(_1b592e57c_exprDeadCode* _self_, jule::Ptr<_1cdeedd97_TraitSubIdentExprModel> _12627_m) {
	_1b5935ae4_optimize(_self_, &((*(_12627_m))._field_Expr));
}



inline void _1b593274a_structureSub(_1b592e57c_exprDeadCode* _self_, jule::Ptr<_1cdeee738_StructSubIdentExprModel> _13031_m) {
	_1b5935ae4_optimize(_self_, &((*((*(_13031_m))._field_Expr))._field_Model));
}



inline void _1b5932a03_tuple(_1b592e57c_exprDeadCode* _self_, jule::Ptr<_1ce0002a5_TupleExprModel> _13424_m) {
	{
		auto expr = &((*(_13424_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8d36563:;
		if (it != expr_end) {
			jule::Ptr<_1ce11bc0c_Data> _13521_d = *it;
			{
				_1b5935ae4_optimize(_self_, &((*(_13521_d))._field_Model));
			}
			_iter_next_1b8d36563:;
			++it;
			goto _iter_begin_1b8d36563;
		}
		_iter_end_1b8d36563:;
	};
}



inline void _1b5932cab_newCall(_1b592e57c_exprDeadCode* _self_, jule::Ptr<_1ce000e32_BuiltinNewCallExprModel> _14026_m) {
	if (((*(_14026_m))._field_Init != nullptr)) {
		_1b5935ae4_optimize(_self_, &((*_14026_m.alloc)._field_Init));
	};
}



inline void _1b5933064_outCall(_1b592e57c_exprDeadCode* _self_, jule::Ptr<_1ce00067e_BuiltinOutCallExprModel> _14626_m) {
	_1b5935ae4_optimize(_self_, &((*(_14626_m))._field_Expr));
}



inline void _1b593331c_outlnCall(_1b592e57c_exprDeadCode* _self_, jule::Ptr<_1ce000a58_BuiltinOutlnCallExprModel> _15028_m) {
	_1b5935ae4_optimize(_self_, &((*(_15028_m))._field_Expr));
}



inline void _1b59335c5_panicCall(_1b592e57c_exprDeadCode* _self_, jule::Ptr<_1ce00130b_BuiltinPanicCallExprModel> _15428_m) {
	_1b5935ae4_optimize(_self_, &((*(_15428_m))._field_Expr));
}



inline void _1b593387d_assertCall(_1b592e57c_exprDeadCode* _self_, jule::Ptr<_1ce0017b2_BuiltinAssertCallExprModel> _15829_m) {
	_1b5935ae4_optimize(_self_, &((*(_15829_m))._field_Expr));
}



inline void _1b5933b36_errorCall(_1b592e57c_exprDeadCode* _self_, jule::Ptr<_1ce0033b8_BuiltinErrorCallExprModel> _16228_m) {
	_1b5935ae4_optimize(_self_, &((*((*(_16228_m))._field_Err))._field_Model));
}



inline void _1b5933dde_makeCall(_1b592e57c_exprDeadCode* _self_, jule::Ptr<_1ce001c68_BuiltinMakeCallExprModel> _16627_m) {
	if (((*(_16627_m))._field_Len != nullptr)) {
		_1b5935ae4_optimize(_self_, &((*_16627_m.alloc)._field_Len));
	};
	if (((*_16627_m.alloc)._field_Cap != nullptr)) {
		_1b5935ae4_optimize(_self_, &((*_16627_m.alloc)._field_Cap));
	};
}



inline void _1b5934197_appendCall(_1b592e57c_exprDeadCode* _self_, jule::Ptr<_1ce002142_BuiltinAppendCallExprModel> _17529_m) {
	_1b5935ae4_optimize(_self_, &((*(_17529_m))._field_Dest));
	_1b5935ae4_optimize(_self_, &((*_17529_m.alloc)._field_Elements));
}



inline void _1b5934450_lenCall(_1b592e57c_exprDeadCode* _self_, jule::Ptr<_1ce00243e_BuiltinLenCallExprModel> _18026_m) {
	_1b5935ae4_optimize(_self_, &((*((*(_18026_m))._field_Expr))._field_Model));
}



inline void _1b5934708_capCall(_1b592e57c_exprDeadCode* _self_, jule::Ptr<_1ce00273b_BuiltinCapCallExprModel> _18426_m) {
	_1b5935ae4_optimize(_self_, &((*((*(_18426_m))._field_Expr))._field_Model));
}



inline void _1b59349b1_deleteCall(_1b592e57c_exprDeadCode* _self_, jule::Ptr<_1ce002b15_BuiltinDeleteCallExprModel> _18829_m) {
	_1b5935ae4_optimize(_self_, &((*((*(_18829_m))._field_Dest))._field_Model));
	if (((*_18829_m.alloc)._field_Key != nullptr)) {
		_1b5935ae4_optimize(_self_, &((*(*_18829_m.alloc)._field_Key.alloc)._field_Model));
	};
}



inline void _1b5934c69_sizeof(_1b592e57c_exprDeadCode* _self_, jule::Ptr<_1ce003a6c_SizeofExprModel> _19525_m) {
	_1b5935ae4_optimize(_self_, &((*(_19525_m))._field_Expr));
}



inline void _1b5935022_alignof(_1b592e57c_exprDeadCode* _self_, jule::Ptr<_1ce003c59_AlignofExprModel> _19926_m) {
	_1b5935ae4_optimize(_self_, &((*(_19926_m))._field_Expr));
}



inline void _1b59352ca_integratedToStr(_1b592e57c_exprDeadCode* _self_, jule::Ptr<_1ce0042ed_IntegratedToStrExprModel> _20334_m) {
	_1b5935ae4_optimize(_self_, &((*(_20334_m))._field_Expr));
}



inline void _1b5935583_free(_1b592e57c_exprDeadCode* _self_, jule::Ptr<_1ce0049c4_FreeExprModel> _20723_m) {
	_1b5935ae4_optimize(_self_, &((*(_20723_m))._field_Expr));
}



inline void _1b593583b_backendEmit(_1b592e57c_exprDeadCode* _self_, jule::Ptr<_1ce0046c7_BackendEmitExprModel> _21130_m) {
	_1b5930ced_args(_self_, &((*(_21130_m))._field_Exprs));
}



inline void _1b5935ae4_optimize(_1b592e57c_exprDeadCode* _self_, jule::Any* _21528_model) {
	{
		auto &_match_expr{ (*(_21528_model)) };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1b8d4484b:;
			{
				_1b592ee73_binary(_self_, (*(_21528_model)).cast_ptr<_1cdee9bb7_BinaryExprModel>(&__jule_any_type111));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1b8d44461:;
			{
				_1b593022b_unary(_self_, (*(_21528_model)).cast_ptr<_1cdeea091_UnaryExprModel>(&__jule_any_type110));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1b8d448c3:;
			{
				_1b59304d4_structureLit(_self_, (*(_21528_model)).cast_ptr<_1cdeea965_StructLitExprModel>(&__jule_any_type95));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b8d44939:;
			{
				_1b593078c_allocStructure(_self_, (*(_21528_model)).cast_ptr<_1cdeeac62_AllocStructLitExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1b8d449b1:;
			{
				_1b5930a45_casting(_self_, (*(_21528_model)).cast_ptr<_1cdeeb2e5_CastingExprModel>(&__jule_any_type93));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1b8d44a38:;
			{
				_1b59310a6_funcCall(_self_, (*(_21528_model)).cast_ptr<_1cdeebb97_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1b8d44ab0:;
			{
				_1b593135e_slice(_self_, (*(_21528_model)).cast_ptr<_1cdeec071_SliceExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1b8d44b37:;
			{
				_1b5931617_array(_self_, (*(_21528_model)).cast_ptr<_1cdeeeea8_ArrayExprModel>(&__jule_any_type85));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1b8d44bae:;
			{
				_1b59318c0_indexing(_self_, (*(_21528_model)).cast_ptr<_1cdeec527_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b8d44c36:;
			{
				_1b5931b78_anonFunc(_self_, (*(_21528_model)).cast_ptr<_1cdeec901_AnonFnExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1b8d44cad:;
			{
				_1b5931e31_mapExpr(_self_, (*(_21528_model)).cast_ptr<_1cdeed281_MapExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1b8d44d35:;
			{
				_1b59321d9_slicing(_self_, (*(_21528_model)).cast_ptr<_1cdeed814_SlicingExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1b8d44dac:;
			{
				_1b5932492_traitSub(_self_, (*(_21528_model)).cast_ptr<_1cdeedd97_TraitSubIdentExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b8d44e34:;
			{
				_1b593274a_structureSub(_self_, (*(_21528_model)).cast_ptr<_1cdeee738_StructSubIdentExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1b8d44eab:;
			{
				_1b5932a03_tuple(_self_, (*(_21528_model)).cast_ptr<_1ce0002a5_TupleExprModel>(&__jule_any_type81));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1b8d45033:;
			{
				_1b5933064_outCall(_self_, (*(_21528_model)).cast_ptr<_1ce00067e_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1b8d450aa:;
			{
				_1b593331c_outlnCall(_self_, (*(_21528_model)).cast_ptr<_1ce000a58_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1b8d45132:;
			{
				_1b5932cab_newCall(_self_, (*(_21528_model)).cast_ptr<_1ce000e32_BuiltinNewCallExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1b8d451a9:;
			{
				_1b59335c5_panicCall(_self_, (*(_21528_model)).cast_ptr<_1ce00130b_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1b8d45231:;
			{
				_1b593387d_assertCall(_self_, (*(_21528_model)).cast_ptr<_1ce0017b2_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b8d452a8:;
			{
				_1b5933b36_errorCall(_self_, (*(_21528_model)).cast_ptr<_1ce0033b8_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1b8d45330:;
			{
				_1b5933dde_makeCall(_self_, (*(_21528_model)).cast_ptr<_1ce001c68_BuiltinMakeCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1b8d453a7:;
			{
				_1b5934197_appendCall(_self_, (*(_21528_model)).cast_ptr<_1ce002142_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1b8d4542e:;
			{
				_1b5934450_lenCall(_self_, (*(_21528_model)).cast_ptr<_1ce00243e_BuiltinLenCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1b8d454a6:;
			{
				_1b5934708_capCall(_self_, (*(_21528_model)).cast_ptr<_1ce00273b_BuiltinCapCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1b8d4552d:;
			{
				_1b59349b1_deleteCall(_self_, (*(_21528_model)).cast_ptr<_1ce002b15_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1b8d455a5:;
			{
				_1b5934c69_sizeof(_self_, (*(_21528_model)).cast_ptr<_1ce003a6c_SizeofExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1b8d4562c:;
			{
				_1b5935022_alignof(_self_, (*(_21528_model)).cast_ptr<_1ce003c59_AlignofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1b8d456a4:;
			{
				_1b59352ca_integratedToStr(_self_, (*(_21528_model)).cast_ptr<_1ce0042ed_IntegratedToStrExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1b8d4572b:;
			{
				_1b5935583_free(_self_, (*(_21528_model)).cast_ptr<_1ce0049c4_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1b8d457a3:;
			{
				_1b593583b_backendEmit(_self_, (*(_21528_model)).cast_ptr<_1ce0046c7_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_1b8d445a4:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1b592e57c_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce245dad_ExceptionalForwardingExprModel _Src) {
	_Stream << "ExceptionalForwardingExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce246232_SwapExprModel _Src) {
	_Stream << "SwapExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce24660b_EmptyCompareExprModel _Src) {
	_Stream << "EmptyCompareExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Neg:" << _Src._field_Neg;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce246980_RefExprModel _Src) {
	_Stream << "RefExprModel{";
	_Stream << "Var:" << _Src._field_Var;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce246e03_StrCompExprModel _Src) {
	_Stream << "StrCompExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "NotEq:" << _Src._field_NotEq;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce247486_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce247783_UnsafeBinaryExprModel _Src) {
	_Stream << "UnsafeBinaryExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce247b18_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce247ee2_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce2483bb_AppendToSliceExprModel _Src) {
	_Stream << "AppendToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Slice:" << _Src._field_Slice;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce248795_StrRuneIter _Src) {
	_Stream << "StrRuneIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Base:" << _Src._field_Base;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce248a92_UnsafeDerefExprModel _Src) {
	_Stream << "UnsafeDerefExprModel{";
	_Stream << "Base:" << _Src._field_Base;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce248d8e_UnsafeCastingExprModel _Src) {
	_Stream << "UnsafeCastingExprModel{";
	_Stream << "Base:" << _Src._field_Base;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce249a71_nilVar _Src) {
	_Stream << "nilVar{";
	_Stream << "var:" << _Src._field_var << ", ";
	_Stream << "safe:" << _Src._field_safe;
	_Stream << "}";
	return _Stream;
}



inline void _1ce24a324_pushVar(_1ce249db2_nils* _self_, jule::Uintptr _2926_var, jule::Bool _2940_safe) {
	if (((!(_1ce2677d6_Access)) || (_2926_var == 0LLU))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8dac919:;
		if (it != expr_end) {
			_1ce249a71_nilVar _3421_v = *it;
			{
				if ((_3421_v._field_var == _2926_var)) {
					_3421_v._field_safe=_2940_safe;
					return;;
				};
			}
			_iter_next_1b8dac919:;
			++it;
			goto _iter_begin_1b8dac919;
		}
		_iter_end_1b8dac919:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8dad7d8:;
		if (it != expr_end) {
			_1ce249a71_nilVar _4121_v = *it;
			{
				if ((_4121_v._field_var == 0LLU)) {
					_4121_v._field_var=_2926_var;
					_4121_v._field_safe=_2940_safe;
					return;;
				};
			}
			_iter_next_1b8dad7d8:;
			++it;
			goto _iter_begin_1b8dad7d8;
		}
		_iter_end_1b8dad7d8:;
	};
	{ jule::Slice<_1ce249a71_nilVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1ce249a71_nilVar{._field_var=_2926_var, ._field_safe=_2940_safe}); };
}



inline jule::Bool _1ce24a665_removeVar(_1ce249db2_nils* _self_, jule::Uintptr _5228_var) {
	if ((_5228_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b8db0741:;
			if (it != expr_end) {
				_1ce249a71_nilVar _5425_v = *it;
				{
					if ((_5425_v._field_var == _5228_var)) {
						_5425_v._field_var=0LLU;
						_5425_v._field_safe=false;
						return true;;
					};
				}
				_iter_next_1b8db0741:;
				++it;
				goto _iter_begin_1b8db0741;
			}
			_iter_end_1b8db0741:;
		};
	};
	return false;;
}



inline jule::Bool _1ce24a9a6_isSafe(_1ce249db2_nils* _self_, jule::Uintptr _6625_var) {
	if ((_6625_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b8db1da2:;
			if (it != expr_end) {
				_1ce249a71_nilVar _6820_v = *it;
				{
					if ((_6820_v._field_var == _6625_var)) {
						return _6820_v._field_safe;;
					};
				}
				_iter_next_1b8db1da2:;
				++it;
				goto _iter_begin_1b8db1da2;
			}
			_iter_end_1b8db1da2:;
		};
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce249db2_nils _Src) {
	_Stream << "nils{";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ce24cb40_scopeOptimizer> static__1ce24d1b2_new(jule::Ptr<_1ce0497c7_Scope> _5023_scope) {
	jule::Ptr<_1ce24cb40_scopeOptimizer> _5113_sc = jule::new_ptr<_1ce24cb40_scopeOptimizer>(_1ce24cb40_scopeOptimizer{._field_scope=_5023_scope, ._field_data=jule::new_ptr<_1ce2625e4_data>(_1ce2625e4_data{._field_boundary=jule::new_ptr<_1ce263edb_boundary>(), ._field_nils=jule::new_ptr<_1ce249db2_nils>(), ._field_dynamic=jule::new_ptr<_1ce25e69b_dynamic>()})});;
	return _5113_sc;;
}



inline void _1ce24d46a_setCurrentStmt(jule::Ptr<_1ce24cb40_scopeOptimizer> _self_, jule::Any _6238_stmt) {
	(*((*(_self_))._field_scope))._field_Stmts[(*_self_.alloc)._field_i]=(*(((jule::Any*)((&(_6238_stmt))))));
}



inline void _1ce24d668_removeCurrent(jule::Ptr<_1ce24cb40_scopeOptimizer> _self_) {
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts.slice(0LL, (*_self_.alloc)._field_i),(*(*_self_.alloc)._field_scope.alloc)._field_Stmts.slice(((*_self_.alloc)._field_i + 1LL)));
}



inline jule::Bool _1ce24d8ee_isLastStmt(jule::Ptr<_1ce24cb40_scopeOptimizer> _self_) {
	jule::Ptr<_1ce24cb40_scopeOptimizer> _7213_r = _self_;;
	for (; (_7213_r != nullptr); _7213_r=(*_7213_r.alloc)._field_parent) {
		{
			if ((((*((*_7213_r.alloc)._field_scope))._field_Stmts.len() - (*_7213_r.alloc)._field_i) != 1LL)) {
				return false;;
			};
		}
	_iter_next_1b8dc16a8:;
	}
	_iter_end_1b8dc16a8:;;
	return true;;
}



inline jule::Bool _1ce24db85_isIter(jule::Ptr<_1ce24cb40_scopeOptimizer> _self_) {
	jule::Ptr<_1ce24cb40_scopeOptimizer> _8213_r = (*(_self_))._field_parent;;
	for (; (_8213_r != nullptr); _8213_r=(*_8213_r.alloc)._field_parent) {
		{
			{
				auto &_match_expr{ (*((*(_8213_r))._field_scope))._field_Stmts[(*(_8213_r))._field_i] };
				
				if (_match_expr.type == &__jule_any_type40 || _match_expr.type == &__jule_any_type38 || _match_expr.type == &__jule_any_type36) {
					_case_begin_1b8dc3e08:;
					{
						return true;;
					}
				}
				_match_end_1b8dc3d70:;
			};
		}
	_iter_next_1b8dc2e4b:;
	}
	_iter_end_1b8dc2e4b:;;
	return false;;
}



inline void _1ce24de3d_optimizeData(jule::Ptr<_1ce24cb40_scopeOptimizer> _self_, jule::Ptr<_1ce11bc0c_Data> _9436_d) {
	{
		auto &_match_expr{ (*(_9436_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1b8dc50d5:;
			{
				jule::Ptr<_1cdeebb97_FnCallExprModel> _9717_m = (*(_9436_d))._field_Model.unsafe_cast_ptr<_1cdeebb97_FnCallExprModel>();;
				if (_2434dd82d_Production) {
					if (((!(_1ce00bcb7_IsBuiltin((*(_9717_m))._field_Func.ptr()))) && _1ce25279e_isStdPackage(&((*((*((*((*(*_9717_m.alloc)._field_Func.alloc)._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("debug", 5)))) {
						_1ce24d46a_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
				static__1ce2553c8_optimizeData(&((*(_9436_d))._field_Model), &((*_self_.alloc)._field_data));
				if (((((((_1ce268c5a_Exceptional && (*(*(*_9717_m.alloc)._field_Func.alloc)._field_Decl.alloc)._field_Exceptional) && ((*_9717_m.alloc)._field_Except != nullptr)) && ((*(*_9717_m.alloc)._field_Except.alloc)._field_Stmts.len() == 1LL)) && _1ce2539d1_isForwarded(&((*_9717_m.alloc)._field_Except))) && _1ce24d8ee_isLastStmt(_self_)) && (!(_1ce24db85_isIter(_self_))))) {
					_1ce24d46a_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1ce245dad_ExceptionalForwardingExprModel>(_1ce245dad_ExceptionalForwardingExprModel{._field_Expr=_9717_m}), &__jule_any_type120));
				};
				return;;
			}
		}
		_match_end_1b8dc506e:;
	};
	static__1ce2553c8_optimizeData(&((*_9436_d.alloc)._field_Model), &((*_self_.alloc)._field_data));
}



inline void _1ce24e1e6_optimizeVar(jule::Ptr<_1ce24cb40_scopeOptimizer> _self_, jule::Ptr<_1ce0b4105_Var> _12035_v) {
	if (((*(_12035_v))._field_Value != nullptr)) {
		if (((((*((*(_self_))._field_data))._field_nils != nullptr) && _1ce24b523_isNilValidType((*((*_12035_v.alloc)._field_Kind))._field_Kind)) && _1ce24b259_isGuaranteedNonNilExpr(&((*(*_self_.alloc)._field_data.alloc)._field_nils), (*((*(*_12035_v.alloc)._field_Value.alloc)._field_Data))._field_Model))) {
			;
			_1ce24a324_pushVar((*(*_self_.alloc)._field_data.alloc)._field_nils, _1ce24b864_getNilVar(jule::Any(_12035_v, &__jule_any_type8)), true);
		};
		if (((*(*_self_.alloc)._field_data.alloc)._field_dynamic != nullptr)) {
			jule::Ptr<_1ce14cbc7_TypeKind> _12921_kind = _1ce260e72_isTypeGuaranteedDynamicData(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*(*_12035_v.alloc)._field_Kind.alloc)._field_Kind, (*(*(*_12035_v.alloc)._field_Value.alloc)._field_Data.alloc)._field_Model);;
			if ((_12921_kind != nullptr)) {
				if (_1ce260a43_isDynamicValidType((*(*_12035_v.alloc)._field_Kind.alloc)._field_Kind)) {
					_1ce25eb0d_pushVar((*(*_self_.alloc)._field_data.alloc)._field_dynamic, _1ce2612b3_getDynamicVar(jule::Any(_12035_v, &__jule_any_type8)), _12921_kind);
				};
			};
		};
		static__1ce2553c8_optimizeData(&((*(*(*_12035_v.alloc)._field_Value.alloc)._field_Data.alloc)._field_Model), &((*_self_.alloc)._field_data));
	};
}



inline void _1ce24e49e_optimizeConditional(jule::Ptr<_1ce24cb40_scopeOptimizer> _self_, jule::Ptr<_1ce04a410_Conditional> _14143_c) {
	_1ce2620e9_dataCheckpoint _14213_checkpoint = _1ce262968_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_14143_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8dd35cc:;
		if (it != expr_end) {
			jule::Ptr<_1ce049be5_If> _14321_elif = *it;
			{
				static__1ce2553c8_optimizeData(&((*(_14321_elif))._field_Expr), &((*_self_.alloc)._field_data));
				_1ce25212d_optimizeChild(_self_, (*_14321_elif.alloc)._field_Scope);
				if ((((*(_14143_c))._field_Elifs.len() > 1LL) || ((*_14143_c.alloc)._field_Default != nullptr))) {
					_1ce262c21_loadCheckpoint((*_self_.alloc)._field_data, &(_14213_checkpoint));
				};
			}
			_iter_next_1b8dd35cc:;
			++it;
			goto _iter_begin_1b8dd35cc;
		}
		_iter_end_1b8dd35cc:;
	};
	if (((*_14143_c.alloc)._field_Default != nullptr)) {
		_1ce25212d_optimizeChild(_self_, (*(*_14143_c.alloc)._field_Default.alloc)._field_Scope);
		_1ce262c21_loadCheckpoint((*_self_.alloc)._field_data, &(_14213_checkpoint));
	};
	if ((!(_1ce268210_Cond))) {
		return;;
	};
	jule::Bool _15913_constCase = false;;
	{
		auto expr = &((*_14143_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8dd7218:;
		if (it != expr_end) {
			jule::I32 _16214_i = it - expr->begin();
			jule::Ptr<_1ce049be5_If> _16221_elif = *it;
			{
				if ((!(_1ce252aac_isConstantValidConditionalCase(&(_16221_elif))))) {
					goto _iter_next_1b8dd7218;
				};
				_15913_constCase=true;
				(*_14143_c.alloc)._field_Elifs=(*_14143_c.alloc)._field_Elifs.slice(0LL, _16214_i);
				(*_14143_c.alloc)._field_Default=jule::new_ptr<_1ce049ee2_Else>(_1ce049ee2_Else{._field_Scope=(*(_16221_elif))._field_Scope});
				goto _iter_end_1b8dd7218;
			}
			_iter_next_1b8dd7218:;
			++it;
			_16214_i++;
			goto _iter_begin_1b8dd7218;
		}
		_iter_end_1b8dd7218:;
	};
	if (((*_14143_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1ce049be5_If>* _17913_i = (&((*_14143_c.alloc)._field_Elifs[0LL]));;
	jule::Ptr<_1ce049be5_If>* _1809_end = (&((*_14143_c.alloc)._field_Elifs[((*_14143_c.alloc)._field_Elifs.len() - 1LL)]));;
	for (; (_17913_i <= _1809_end); (_17913_i)++) {
		{
			{
				if (_1ce25344d_isUnreachableConditionalCase(&((*(_17913_i))))) {
					(*(_17913_i))=nullptr;
				};
			};
		}
	_iter_next_1b8dd9da8:;
	}
	_iter_end_1b8dd9da8:;;
	if (((*_14143_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_15913_constCase))) {
		return;;
	};
	jule::I32 _19813_only = -1LL;;
	{
		auto expr = &((*_14143_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8ddc1c9:;
		if (it != expr_end) {
			jule::I32 _19913_j = it - expr->begin();
			jule::Ptr<_1ce049be5_If> _19916_elif = *it;
			{
				if ((_19916_elif != nullptr)) {
					if ((_19813_only != -1LL)) {
						return;;
					};
					_19813_only=_19913_j;
				};
			}
			_iter_next_1b8ddc1c9:;
			++it;
			_19913_j++;
			goto _iter_begin_1b8ddc1c9;
		}
		_iter_end_1b8ddc1c9:;
	};
	if ((_19813_only != -1LL)) {
		_1ce24d46a_setCurrentStmt(_self_, jule::Any((*((*_14143_c.alloc)._field_Elifs[_19813_only]))._field_Scope, &__jule_any_type22));
	};
}



inline void _1ce24e8bc_buildDefaultConstantTrueCase(jule::Ptr<_1ce24cb40_scopeOptimizer> _self_, jule::Ptr<_1ce04e436_Case> _21552_case, jule::I32* _21570_i, jule::Ptr<_1ce04d90d_Match>* _21583_m) {
	(*(_21552_case))._field_Exprs=nullptr;
	jule::I32 _2179_start = (*(_21570_i));;
	_julec_label_1b8dde6a4:;
	for (;;) {
		{
			if (((*((*_21552_case.alloc)._field_Scope))._field_Stmts.len() == 0LL)) {
				goto _iter_end_1b8dde71a;
			};
			jule::Any *_22318_stmt = &((*(*_21552_case.alloc)._field_Scope.alloc)._field_Stmts[((*(*_21552_case.alloc)._field_Scope.alloc)._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_22318_stmt)) };
				
				if (_match_expr.type == &__jule_any_type48) {
					_case_begin_1b8de1d6b:;
					{
						((*(_21570_i)))++;
						if (((*(_21570_i)) >= (*((*(_21583_m))))._field_Cases.len())) {
							(*(_22318_stmt))=jule::Any((*((*((*(_21583_m))))._field_Default))._field_Scope, &__jule_any_type22);
							goto _iter_end_1b8dde71a;
						};
						_21552_case=(*((*(_21583_m))))._field_Cases[(*(_21570_i))];
						(*(_22318_stmt))=jule::Any((*_21552_case.alloc)._field_Scope, &__jule_any_type22);
					}
				}
				else {
					_case_begin_1b8de1ee2:;
					{
						goto _iter_end_1b8dde71a;
					}
				}
				_match_end_1b8de1e8c:;
			};
		}
	_iter_next_1b8dde71a:;
	}
	_iter_end_1b8dde71a:;;
	(*((*(_21583_m))))._field_Default=(*((*(_21583_m))))._field_Cases[_2179_start];
	(*((*(_21583_m))))._field_Cases=(*((*(_21583_m))))._field_Cases.slice(0LL, _2179_start);
}



inline void _1ce24eb75_optimizeMatch(jule::Ptr<_1ce24cb40_scopeOptimizer> _self_, jule::Ptr<_1ce04d90d_Match> _24137_m) {
	jule::Uintptr _24213_var = 0LLU;;
	if ((_1ce2692bb_Dynamic && (*(_24137_m))._field_TypeMatch)) {
		_24213_var=_1ce2612b3_getDynamicVar((*((*_24137_m.alloc)._field_Expr))._field_Model);
	};
	_1ce2620e9_dataCheckpoint _24613_checkpoint = _1ce262968_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_24137_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8de6513:;
		if (it != expr_end) {
			jule::Ptr<_1ce04e436_Case> _24721_case = *it;
			{
				{
					auto expr = &((*(_24721_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b8de6dd7:;
					if (it != expr_end) {
						jule::Ptr<_1ce11bc0c_Data> _24825_expr = *it;
						{
							static__1ce2553c8_optimizeData(&((*(_24825_expr))._field_Model), &((*_self_.alloc)._field_data));
						}
						_iter_next_1b8de6dd7:;
						++it;
						goto _iter_begin_1b8de6dd7;
					}
					_iter_end_1b8de6dd7:;
				};
				if ((((*_24721_case.alloc)._field_Exprs.len() == 1LL) && ((*(*_self_.alloc)._field_data.alloc)._field_dynamic != nullptr))) {
					jule::Ptr<_1ce14cbc7_TypeKind> _25321_kind = _1ce260e72_isTypeGuaranteedDynamicData(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*((*_24721_case.alloc)._field_Exprs[0LL]))._field_Kind, nullptr);;
					if ((_25321_kind != nullptr)) {
						_1ce25eb0d_pushVar((*(*_self_.alloc)._field_data.alloc)._field_dynamic, _24213_var, _25321_kind);
					} else {
						_1ce25ee4e_removeVar((*(*_self_.alloc)._field_data.alloc)._field_dynamic, _24213_var);
					};
				};
				_1ce25212d_optimizeChild(_self_, (*_24721_case.alloc)._field_Scope);
				if ((((*_24137_m.alloc)._field_Cases.len() > 1LL) || ((*_24137_m.alloc)._field_Default != nullptr))) {
					_1ce262c21_loadCheckpoint((*_self_.alloc)._field_data, &(_24613_checkpoint));
				};
			}
			_iter_next_1b8de6513:;
			++it;
			goto _iter_begin_1b8de6513;
		}
		_iter_end_1b8de6513:;
	};
	if (((*_24137_m.alloc)._field_Default != nullptr)) {
		_1ce25212d_optimizeChild(_self_, (*(*_24137_m.alloc)._field_Default.alloc)._field_Scope);
		_1ce262c21_loadCheckpoint((*_self_.alloc)._field_data, &(_24613_checkpoint));
	};
	if ((!(_1ce268210_Cond))) {
		return;;
	};
	jule::Bool _27413_constCase = false;;
	{
		auto expr = &((*_24137_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8ded839:;
		if (it != expr_end) {
			jule::I32 _27718_i = it - expr->begin();
			jule::Ptr<_1ce04e436_Case> _27725_case = *it;
			{
				if ((!(_1ce2531b7_isConstantValidMatchCase(&(_27725_case))))) {
					goto _iter_next_1b8ded839;
				};
				_27413_constCase=true;
				_1ce24e8bc_buildDefaultConstantTrueCase(_self_, _27725_case, &(_27718_i), &(_24137_m));
				goto _iter_end_1b8ded839;
			}
			_iter_next_1b8ded839:;
			++it;
			_27718_i++;
			goto _iter_begin_1b8ded839;
		}
		_iter_end_1b8ded839:;
	};
	if (((*_24137_m.alloc)._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1ce04e436_Case>* _29113_i = (&((*_24137_m.alloc)._field_Cases[0LL]));;
	jule::Ptr<_1ce04e436_Case>* _2929_end = (&((*_24137_m.alloc)._field_Cases[((*_24137_m.alloc)._field_Cases.len() - 1LL)]));;
	for (; (_29113_i <= _2929_end); (_29113_i)++) {
		{
			{
				if (_1ce253717_isUnreachableMatchCase(&((*(_29113_i))))) {
					(*(_29113_i))=nullptr;
				};
			};
		}
	_iter_next_1b8e009e5:;
	}
	_iter_end_1b8e009e5:;;
	if ((!(_27413_constCase))) {
		return;;
	};
	jule::I32 _30613_only = -1LL;;
	{
		auto expr = &((*_24137_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8e026b7:;
		if (it != expr_end) {
			jule::I32 _30713_j = it - expr->begin();
			jule::Ptr<_1ce04e436_Case> _30716_case = *it;
			{
				if ((_30716_case != nullptr)) {
					if ((_30613_only != -1LL)) {
						return;;
					};
					_30613_only=_30713_j;
				};
			}
			_iter_next_1b8e026b7:;
			++it;
			_30713_j++;
			goto _iter_begin_1b8e026b7;
		}
		_iter_end_1b8e026b7:;
	};
	if ((_30613_only != -1LL)) {
		_1ce24d46a_setCurrentStmt(_self_, jule::Any((*((*_24137_m.alloc)._field_Cases[_30613_only]))._field_Scope, &__jule_any_type22));
	};
}



inline void _1ce24ee2d_optimizeRangeIter(jule::Ptr<_1ce24cb40_scopeOptimizer> _self_, jule::Ptr<_1ce04b60e_RangeIter> _32341_it) {
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && ((*(_32341_it))._field_KeyA != nullptr))) {
		_1ce26444d_pushVar((*(*_self_.alloc)._field_data.alloc)._field_boundary, _1ce26641c_getBoundaryVar((*((*_32341_it.alloc)._field_Expr))._field_Model), jule::Any((*_32341_it.alloc)._field_KeyA, &__jule_any_type8));
	};
	_1ce25212d_optimizeChild(_self_, (*_32341_it.alloc)._field_Scope);
	if (_1ce269013_Iter) {
		{
			auto &_match_expr{ (*((*(_32341_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type93) {
				_case_begin_1b8e07315:;
				{
					jule::Ptr<_1cdeeb2e5_CastingExprModel> _33521_cem = (*((*(_32341_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1cdeeb2e5_CastingExprModel>();;
					jule::Ptr<_1ce1557a1_Prim> _33617_eprim = _1ce150328_Prim((*(_33521_cem))._field_ExprKind.ptr());;
					if (((_33617_eprim == nullptr) || (!(_1ce158c38_IsStr(_33617_eprim.ptr()))))) {
						goto _match_end_1b8e0729e;
					};
					jule::Ptr<_1ce159ca0_Slc> _34021_s = _1ce15137e_Slc((*_33521_cem.alloc)._field_Kind.ptr());;
					if ((_34021_s == nullptr)) {
						goto _match_end_1b8e0729e;
					};
					jule::Ptr<_1ce1557a1_Prim> _34417_prim = _1ce150328_Prim((*(_34021_s))._field_Elem.ptr());;
					if ((_34417_prim == nullptr)) {
						goto _match_end_1b8e0729e;
					};
					{
						
						if (_1ce157198_IsU8(_34417_prim.ptr())) {
							_case_begin_1b8e0abcb:;
							{
								(*_32341_it.alloc)._field_Expr=(*_33521_cem.alloc)._field_Expr;
							}
						}
						else if (_1ce156b7b_IsI32(_34417_prim.ptr())) {
							_case_begin_1b8e0ad30:;
							{
								static__1ce2553c8_optimizeData(&((*((*_33521_cem.alloc)._field_Expr))._field_Model), &((*_self_.alloc)._field_data));
								_1ce24d46a_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1ce248795_StrRuneIter>(_1ce248795_StrRuneIter{._field_Expr=(*_33521_cem.alloc)._field_Expr, ._field_Base=_32341_it}), &__jule_any_type121));
								return;;
							}
						}
						_match_end_1b8e08c2e:;
					};
				}
			}
			_match_end_1b8e0729e:;
		};
	};
	static__1ce2553c8_optimizeData(&((*(*_32341_it.alloc)._field_Expr.alloc)._field_Model), &((*_self_.alloc)._field_data));
}



inline void _1ce2501d6_optimizeWhileIter(jule::Ptr<_1ce24cb40_scopeOptimizer> _self_, jule::Ptr<_1ce04abb3_WhileIter> _36841_it) {
	static__1ce2553c8_optimizeData(&((*(_36841_it))._field_Expr), &((*(_self_))._field_data));
	_1ce251d75_optimizeStmt(_self_, (*_36841_it.alloc)._field_Next);
	_1ce25212d_optimizeChild(_self_, (*_36841_it.alloc)._field_Scope);
}



inline jule::Bool _1ce250527_substr(jule::Ptr<_1ce24cb40_scopeOptimizer> _self_, jule::Ptr<_1ce04cdc4_Assign> _37430_a) {
	if (((*((*(_37430_a))._field_Op))._field_Id != static_cast<jule::U32>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_37430_a))._field_R))._field_Model };
		
		if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1b8e10bd1:;
			{
				jule::Ptr<_1cdeed814_SlicingExprModel> _38017_sem = (*((*(_37430_a))._field_R))._field_Model.unsafe_cast_ptr<_1cdeed814_SlicingExprModel>();;
				if (((*(_38017_sem))._field_Expr == (*((*_37430_a.alloc)._field_L))._field_Model)) {
					_1ce24d46a_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1ce247486_MutSlicingExprModel>(_1ce247486_MutSlicingExprModel{._field_Token=(*_38017_sem.alloc)._field_Token, ._field_Expr=(*_38017_sem.alloc)._field_Expr, ._field_Left=(*_38017_sem.alloc)._field_Left, ._field_Right=(*_38017_sem.alloc)._field_Right}), &__jule_any_type122));
					return true;;
				};
			}
		}
		_match_end_1b8e10b6a:;
	};
	return false;;
}



inline jule::Bool _1ce250868_strAssign(jule::Ptr<_1ce24cb40_scopeOptimizer> _self_, jule::Ptr<_1ce04cdc4_Assign> _39433_a) {
	if ((!(_1ce268452_Str))) {
		return false;;
	};
	jule::Ptr<_1ce1557a1_Prim> _3989_lp = _1ce150328_Prim((*((*(_39433_a))._field_L))._field_Kind.ptr());;
	if (((_3989_lp == nullptr) || (!(_1ce158c38_IsStr(_3989_lp.ptr()))))) {
		return false;;
	};
	return _1ce250527_substr(_self_, _39433_a);;
}



inline jule::Bool _1ce250ba9_sliceAssign(jule::Ptr<_1ce24cb40_scopeOptimizer> _self_, jule::Ptr<_1ce04cdc4_Assign> _40535_a) {
	if (((!(_1ce2686e9_Slice)) || (_1ce15137e_Slc((*((*(_40535_a))._field_L))._field_Kind.ptr()) == nullptr))) {
		return false;;
	};
	return _1ce250527_substr(_self_, _40535_a);;
}



inline void _1ce250e62_optimizePostfix(jule::Ptr<_1ce24cb40_scopeOptimizer> _self_, jule::Ptr<_1ce04c91d_Postfix> _41339_postfix) {
	if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
		_1ce265ac0_possibleBoundaryRemove(&((*(*_self_.alloc)._field_data.alloc)._field_boundary), (*(_41339_postfix))._field_Expr);
	};
	static__1ce2553c8_optimizeData(&((*_41339_postfix.alloc)._field_Expr), &((*_self_.alloc)._field_data));
}



inline void _1ce25121a_optimizeAssign(jule::Ptr<_1ce24cb40_scopeOptimizer> _self_, jule::Ptr<_1ce04cdc4_Assign> _42038_assign) {
	if ((((*((*(_42038_assign))._field_Op))._field_Id == static_cast<jule::U32>(71LLU)) && _1ce245275_equalModels((*((*_42038_assign.alloc)._field_L))._field_Model, (*((*_42038_assign.alloc)._field_R))._field_Model))) {
		_1ce24d668_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return;;
	};
	if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
		if (_1ce265d89_isBoundaryRiskyType((*(*_42038_assign.alloc)._field_L.alloc)._field_Kind)) {
			_1ce265ac0_possibleBoundaryRemove(&((*(*_self_.alloc)._field_data.alloc)._field_boundary), (*(*_42038_assign.alloc)._field_L.alloc)._field_Model);
		};
	};
	if (((*(*_self_.alloc)._field_data.alloc)._field_nils != nullptr)) {
		if (_1ce24b259_isGuaranteedNonNilExpr(&((*(*_self_.alloc)._field_data.alloc)._field_nils), (*(*_42038_assign.alloc)._field_R.alloc)._field_Model)) {
			if (_1ce24b523_isNilValidType((*(*_42038_assign.alloc)._field_L.alloc)._field_Kind)) {
				;
				_1ce24a324_pushVar((*(*_self_.alloc)._field_data.alloc)._field_nils, _1ce24b864_getNilVar((*(*_42038_assign.alloc)._field_L.alloc)._field_Model), true);
			};
		} else {
			_1ce24ad91_possibleNilRemove(&((*(*_self_.alloc)._field_data.alloc)._field_nils), (*(*_42038_assign.alloc)._field_L.alloc)._field_Model);
		};
	};
	if (((*(*_self_.alloc)._field_data.alloc)._field_dynamic != nullptr)) {
		jule::Ptr<_1ce14cbc7_TypeKind> _44417_kind = _1ce260e72_isTypeGuaranteedDynamicData(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*(*_42038_assign.alloc)._field_R.alloc)._field_Kind, (*(*_42038_assign.alloc)._field_R.alloc)._field_Model);;
		if ((_44417_kind != nullptr)) {
			if (_1ce260a43_isDynamicValidType((*(*_42038_assign.alloc)._field_L.alloc)._field_Kind)) {
				_1ce25eb0d_pushVar((*(*_self_.alloc)._field_data.alloc)._field_dynamic, _1ce2612b3_getDynamicVar((*(*_42038_assign.alloc)._field_L.alloc)._field_Model), _44417_kind);
			};
		} else {
			_1ce260735_possibleDynamicRemove(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*(*_42038_assign.alloc)._field_L.alloc)._field_Model);
		};
	};
	{
		
		if (_1ce250868_strAssign(_self_, _42038_assign) || _1ce250ba9_sliceAssign(_self_, _42038_assign)) {
			_case_begin_1b8e23a29:;
			{
				return;;
			}
		}
		_match_end_1b8e201c9:;
	};
	static__1ce2553c8_optimizeData(&((*(*_42038_assign.alloc)._field_L.alloc)._field_Model), &((*_self_.alloc)._field_data));
	static__1ce2553c8_optimizeData(&((*(*_42038_assign.alloc)._field_R.alloc)._field_Model), &((*_self_.alloc)._field_data));
	{
		auto &_match_expr{ (*((*(_42038_assign))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(43LLU) || _match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1b8e25982:;
			{
				if (((!(_1ce26752d_Math)) || (_1ce15189b_Struct((*(*_42038_assign.alloc)._field_L.alloc)._field_Kind.ptr()) != nullptr))) {
					goto _match_end_1b8e2591b;
				};
				jule::U32 _47013_oldId = (*(*_42038_assign.alloc)._field_Op.alloc)._field_Id;;
				jule::Str _47020_oldKind = (*(*_42038_assign.alloc)._field_Op.alloc)._field_Kind;;
				({
					jule::U32 ___jule_assign_arg = (*(*_42038_assign.alloc)._field_Op.alloc)._field_Id;
					jule::Str _1___jule_assign_arg = (*(*_42038_assign.alloc)._field_Op.alloc)._field_Kind;
					_47013_oldId = ___jule_assign_arg;
					_47020_oldKind = _1___jule_assign_arg;
				});
				{
					auto &_match_expr{ (*((*(_42038_assign))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(43LLU)) {
						_case_begin_1b8e28754:;
						{
							(*(*_42038_assign.alloc)._field_Op.alloc)._field_Id=static_cast<jule::U32>(63LLU);
							(*(*_42038_assign.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("/", 1);
						}
					}
					else if (_match_expr == static_cast<jule::U32>(44LLU)) {
						_case_begin_1b8e28666:;
						{
							(*(*_42038_assign.alloc)._field_Op.alloc)._field_Id=static_cast<jule::U32>(64LLU);
							(*(*_42038_assign.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("%", 1);
						}
					}
					else {
						_case_begin_1b8e28006:;
						{
							jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/opt/scope.jule:479:17"));;
						}
					}
					_match_end_1b8e282e2:;
				};
				jule::Any _48117_model = jule::Any(jule::new_ptr<_1cdee9bb7_BinaryExprModel>(_1cdee9bb7_BinaryExprModel{._field_Left=(*_42038_assign.alloc)._field_L, ._field_Right=(*_42038_assign.alloc)._field_R, ._field_Op=(*_42038_assign.alloc)._field_Op}), &__jule_any_type111);;
				static__1ce2553c8_optimizeData(&(_48117_model), &((*_self_.alloc)._field_data));
				{
					auto &_match_expr{ _48117_model };
					
					if (_match_expr.type == &__jule_any_type111) {
						_case_begin_1b8e27e4b:;
						{
							(*_42038_assign.alloc)._field_R=jule::new_ptr<_1cdee96bc_OperandExprModel>((*(*_42038_assign.alloc)._field_R.alloc));
							(*(*_42038_assign.alloc)._field_Op.alloc)._field_Id=static_cast<jule::U32>(71LLU);
							(*(*_42038_assign.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("=", 1);
							(*(*_42038_assign.alloc)._field_R.alloc)._field_Model=_48117_model;
							return;;
						}
					}
					_match_end_1b8e2b823:;
				};
				(*(*_42038_assign.alloc)._field_Op.alloc)._field_Id=_47013_oldId;
				(*(*_42038_assign.alloc)._field_Op.alloc)._field_Kind=_47020_oldKind;
				return;;
			}
		}
		_match_end_1b8e2591b:;
	};
	if (_1ce267231_Append) {
		{
			auto &_match_expr{ (*((*(_42038_assign))._field_R))._field_Model };
			
			if (_match_expr.type == &__jule_any_type26) {
				_case_begin_1b8e2e77c:;
				{
					jule::Ptr<_1ce002142_BuiltinAppendCallExprModel> _50321_m = (*(*_42038_assign.alloc)._field_R.alloc)._field_Model.cast_ptr<_1ce002142_BuiltinAppendCallExprModel>(&__jule_any_type26);;
					if ((!(_1ce25d722_areSameLvalueExprModel(&((*(*_42038_assign.alloc)._field_L.alloc)._field_Model), &((*(_50321_m))._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ (*(_50321_m))._field_Elements };
						
						if (_match_expr.type == &__jule_any_type76) {
							_case_begin_1b8e30c23:;
							{
								_1ce24d46a_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1ce247ee2_PushToSliceExprModel>(_1ce247ee2_PushToSliceExprModel{._field_Dest=(*_50321_m.alloc)._field_Dest, ._field_Elems=(*(_50321_m))._field_Elements.unsafe_cast_ptr<_1cdeec071_SliceExprModel>()}), &__jule_any_type123));
							}
						}
						else {
							_case_begin_1b8e312c8:;
							{
								_1ce24d46a_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1ce2483bb_AppendToSliceExprModel>(_1ce2483bb_AppendToSliceExprModel{._field_Dest=(*(*_42038_assign.alloc)._field_L.alloc)._field_Model, ._field_Slice=(*_50321_m.alloc)._field_Elements}), &__jule_any_type124));
							}
						}
						_match_end_1b8e31273:;
					};
				}
			}
			_match_end_1b8e2e716:;
		};
	};
}



inline jule::Bool _1ce25155b_tryOptimizeSwap(jule::Ptr<_1ce24cb40_scopeOptimizer> _self_, jule::Ptr<_1ce04d29d_MultiAssign>* _52540_assign) {
	if (((((!(_1ce2689a2_Assign)) || ((*((*(_52540_assign))))._field_L.len() != 2LL)) || ((*((*(_52540_assign))))._field_L[0LL] == nullptr)) || ((*((*(_52540_assign))))._field_L[1LL] == nullptr))) {
		return false;;
	};
	jule::Ptr<_1ce0002a5_TupleExprModel> _53017_tup;;
	{
		auto &_match_expr{ (*((*(_52540_assign))))._field_R };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1b8e34de2:;
			{
				_53017_tup=(*((*(_52540_assign))))._field_R.unsafe_cast_ptr<_1ce0002a5_TupleExprModel>();
			}
		}
		_match_end_1b8e34d7b:;
	};
	if (((_53017_tup == nullptr) || ((*(_53017_tup))._field_Datas.len() != 2LL))) {
		return false;;
	};
	if ((_1ce245275_equalModels((*((*((*(_52540_assign))))._field_L[0LL]))._field_Model, (*((*(_53017_tup))._field_Datas[0LL]))._field_Model) && _1ce245275_equalModels((*((*((*(_52540_assign))))._field_L[1LL]))._field_Model, (*((*(_53017_tup))._field_Datas[1LL]))._field_Model))) {
		_1ce24d668_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return true;;
	};
	if (((!(_1ce245275_equalModels((*((*((*(_52540_assign))))._field_L[0LL]))._field_Model, (*((*(_53017_tup))._field_Datas[1LL]))._field_Model))) || (!(_1ce245275_equalModels((*((*((*(_52540_assign))))._field_L[1LL]))._field_Model, (*((*(_53017_tup))._field_Datas[0LL]))._field_Model))))) {
		return false;;
	};
	jule::Ptr<_1ce246232_SwapExprModel> _55213_model = jule::new_ptr<_1ce246232_SwapExprModel>(_1ce246232_SwapExprModel{._field_Left=(*((*(_52540_assign))))._field_L[0LL], ._field_Right=(*((*(_52540_assign))))._field_L[1LL]});;
	static__1ce2553c8_optimizeData(&((*((*(_55213_model))._field_Left))._field_Model), &((*_self_.alloc)._field_data));
	static__1ce2553c8_optimizeData(&((*((*_55213_model.alloc)._field_Right))._field_Model), &((*_self_.alloc)._field_data));
	_1ce24d46a_setCurrentStmt(_self_, jule::Any(_55213_model, &__jule_any_type125));
	return true;;
}



inline void _1ce251814_optimizeMultiAssign(jule::Ptr<_1ce24cb40_scopeOptimizer> _self_, jule::Ptr<_1ce04d29d_MultiAssign> _56243_assign) {
	if (_1ce25155b_tryOptimizeSwap(_self_, &(_56243_assign))) {
		return;;
	};
	jule::Ptr<_1ce0002a5_TupleExprModel> _56713_tup = static_cast<jule::Ptr<_1ce0002a5_TupleExprModel>>(nullptr);;
	{
		auto &_match_expr{ (*(_56243_assign))._field_R };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1b8e3d8e0:;
			{
				_56713_tup=(*(_56243_assign))._field_R.unsafe_cast_ptr<_1ce0002a5_TupleExprModel>();
			}
		}
		_match_end_1b8e3d879:;
	};
	{
		auto expr = &((*(_56243_assign))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8e3ca10:;
		if (it != expr_end) {
			jule::I32 _57214_i = it - expr->begin();
			jule::Ptr<_1ce11bc0c_Data> _57221_l = *it;
			{
				if ((_57221_l != nullptr)) {
					if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
						if (_1ce265d89_isBoundaryRiskyType((*_57221_l.alloc)._field_Kind)) {
							_1ce265ac0_possibleBoundaryRemove(&((*(*_self_.alloc)._field_data.alloc)._field_boundary), (*_57221_l.alloc)._field_Model);
						};
					};
					if (((*(*_self_.alloc)._field_data.alloc)._field_nils != nullptr)) {
						if (((_56713_tup != nullptr) && _1ce24b259_isGuaranteedNonNilExpr(&((*(*_self_.alloc)._field_data.alloc)._field_nils), (*((*_56713_tup.alloc)._field_Datas[_57214_i]))._field_Model))) {
							if (_1ce24b523_isNilValidType((*_57221_l.alloc)._field_Kind)) {
								;
								_1ce24a324_pushVar((*(*_self_.alloc)._field_data.alloc)._field_nils, _1ce24b864_getNilVar((*_57221_l.alloc)._field_Model), true);
							};
						} else {
							_1ce24ad91_possibleNilRemove(&((*(*_self_.alloc)._field_data.alloc)._field_nils), (*_57221_l.alloc)._field_Model);
						};
					};
					if ((((*(*_self_.alloc)._field_data.alloc)._field_dynamic != nullptr) && (_56713_tup != nullptr))) {
						jule::Ptr<_1ce14cbc7_TypeKind> _59025_kind = _1ce260e72_isTypeGuaranteedDynamicData(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*((*_56713_tup.alloc)._field_Datas[_57214_i]))._field_Kind, (*((*_56713_tup.alloc)._field_Datas[_57214_i]))._field_Model);;
						if ((_59025_kind != nullptr)) {
							if (_1ce260a43_isDynamicValidType((*_57221_l.alloc)._field_Kind)) {
								_1ce25eb0d_pushVar((*(*_self_.alloc)._field_data.alloc)._field_dynamic, _1ce2612b3_getDynamicVar((*_57221_l.alloc)._field_Model), _59025_kind);
							};
						} else {
							_1ce260735_possibleDynamicRemove(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*_57221_l.alloc)._field_Model);
						};
					};
					static__1ce2553c8_optimizeData(&((*_57221_l.alloc)._field_Model), &((*_self_.alloc)._field_data));
				};
			}
			_iter_next_1b8e3ca10:;
			++it;
			_57214_i++;
			goto _iter_begin_1b8e3ca10;
		}
		_iter_end_1b8e3ca10:;
	};
	static__1ce2553c8_optimizeData(&((*_56243_assign.alloc)._field_R), &((*_self_.alloc)._field_data));
}



inline void _1ce251abc_optimizeRet(jule::Ptr<_1ce24cb40_scopeOptimizer> _self_, jule::Ptr<_1ce04eec5_RetSt> _60635_r) {
	static__1ce2553c8_optimizeData(&((*(_60635_r))._field_Expr), &((*(_self_))._field_data));
	if ((!(_1ce268c5a_Exceptional))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_60635_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1b8e49830:;
			{
				goto _match_end_1b8e49940;
			}
		}
		else {
			_case_begin_1b8e49995:;
			{
				return;;
			}
		}
		_match_end_1b8e49940:;
	};
	jule::Ptr<_1cdeebb97_FnCallExprModel> _62013_fc = (*_60635_r.alloc)._field_Expr.cast_ptr<_1cdeebb97_FnCallExprModel>(&__jule_any_type34);;
	if (((((!((*((*((*(_62013_fc))._field_Func))._field_Decl))._field_Exceptional)) || ((*_62013_fc.alloc)._field_Except == nullptr)) || ((*((*_62013_fc.alloc)._field_Except))._field_Stmts.len() != 1LL)) || (!(_1ce2539d1_isForwarded(&((*_62013_fc.alloc)._field_Except)))))) {
		return;;
	};
	_1ce24d46a_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1ce245dad_ExceptionalForwardingExprModel>(_1ce245dad_ExceptionalForwardingExprModel{._field_Expr=_62013_fc}), &__jule_any_type120));
}



inline void _1ce251d75_optimizeStmt(jule::Ptr<_1ce24cb40_scopeOptimizer> _self_, jule::Any _63036_stmt) {
	{
		auto &_match_expr{ _63036_stmt };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1b8e4cda5:;
			{
				_1ce25212d_optimizeChild(_self_, _63036_stmt.unsafe_cast_ptr<_1ce0497c7_Scope>());
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b8e4cadb:;
			{
				_1ce24de3d_optimizeData(_self_, _63036_stmt.unsafe_cast_ptr<_1ce11bc0c_Data>());
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b8e4ce1b:;
			{
				_1ce24e1e6_optimizeVar(_self_, _63036_stmt.unsafe_cast_ptr<_1ce0b4105_Var>());
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1b8e4ce82:;
			{
				_1ce24e49e_optimizeConditional(_self_, _63036_stmt.unsafe_cast_ptr<_1ce04a410_Conditional>());
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1b8e4cee8:;
			{
				_1ce24ee2d_optimizeRangeIter(_self_, _63036_stmt.unsafe_cast_ptr<_1ce04b60e_RangeIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1b8e4d05e:;
			{
				_1ce2501d6_optimizeWhileIter(_self_, _63036_stmt.unsafe_cast_ptr<_1ce04abb3_WhileIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1b8e4d0d6:;
			{
				_1ce25212d_optimizeChild(_self_, (*(_63036_stmt.unsafe_cast_ptr<_1ce04a70c_InfIter>()))._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1b8e4d15d:;
			{
				_1ce25121a_optimizeAssign(_self_, _63036_stmt.unsafe_cast_ptr<_1ce04cdc4_Assign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1b8e4d1d5:;
			{
				_1ce251814_optimizeMultiAssign(_self_, _63036_stmt.unsafe_cast_ptr<_1ce04d29d_MultiAssign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1b8e4d25c:;
			{
				_1ce24eb75_optimizeMatch(_self_, _63036_stmt.unsafe_cast_ptr<_1ce04d90d_Match>());
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1b8e4d2d4:;
			{
				_1ce251abc_optimizeRet(_self_, _63036_stmt.unsafe_cast_ptr<_1ce04eec5_RetSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1b8e4d35b:;
			{
				_1ce250e62_optimizePostfix(_self_, _63036_stmt.unsafe_cast_ptr<_1ce04c91d_Postfix>());
			}
		}
		_match_end_1b8e4cc62:;
	};
}



inline void _1ce25212d_optimizeChild(jule::Ptr<_1ce24cb40_scopeOptimizer> _self_, jule::Ptr<_1ce0497c7_Scope> _65937_child) {
	jule::Ptr<_1ce24cb40_scopeOptimizer> _66013_so = static__1ce24d1b2_new(_65937_child);;
	(*(_66013_so))._field_parent=_self_;
	(*_66013_so.alloc)._field_data=(*(_self_))._field_data;
	_1ce25232b_optimize(_66013_so);
}



inline void _1ce25232b_optimize(jule::Ptr<_1ce24cb40_scopeOptimizer> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_scope))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1ce251d75_optimizeStmt(_self_, (*(*_self_.alloc)._field_scope.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1b8e5630e:;
	}
	_iter_end_1b8e5630e:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce24cb40_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline void static__1ce2550dc_optimize(jule::Any* _5829_model) {
	static__1ce2553c8_optimizeData(_5829_model, &(_1ce261bed_emptyData));
}



inline void static__1ce2553c8_optimizeData(jule::Any* _6233_model, jule::Ptr<_1ce2625e4_data>* _6256_d) {
	if (_1b5936155_exprEnabled) {
		jule::Ptr<_1ce25498d_exprOptimizer> _6517_exop = jule::new_ptr<_1ce25498d_exprOptimizer>(_1ce25498d_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)(_6233_model)), ._field_data=(*(_6256_d))});;
		_1ce25cdd6_do(_6517_exop.ptr());
	};
}



inline jule::Bool _1ce255719_selfCmpCond(_1ce25498d_exprOptimizer* _self_, jule::Ptr<_1cdee9bb7_BinaryExprModel>* _7331_m) {
	if ((!(_1ce245275_equalModels((*((*((*(_7331_m))))._field_Left))._field_Model, (*((*((*(_7331_m))))._field_Right))._field_Model)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_7331_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(53LLU) || _match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1b8e65a05:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__22be16b41_NewBool(true), &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU)) {
			_case_begin_1b8e65a8d:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__22be16b41_NewBool(false), &__jule_any_type19);
				return true;;
			}
		}
		else {
			_case_begin_1b8e648b1:;
			{
				return false;;
			}
		}
		_match_end_1b8e6598e:;
	};
}



inline jule::Bool _1ce255a5a_boolCond(_1ce25498d_exprOptimizer* _self_, jule::Ptr<_1cdee9bb7_BinaryExprModel>* _9728_m) {
	jule::Ptr<_1ce1557a1_Prim> _989_lp = _1ce150328_Prim((*((*((*(_9728_m))))._field_Left))._field_Kind.ptr());;
	if (((_989_lp == nullptr) || (!(_1ce1589a2_IsBool(_989_lp.ptr()))))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_9728_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b8e6a28a:;
			{
				std::swap((*((*(_9728_m))))._field_Left, (*((*(_9728_m))))._field_Right);
			}
		}
		else {
			_case_begin_1b8e694ba:;
			{
				{
					auto &_match_expr{ (*((*((*(_9728_m))))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1b8e687a5:;
						{
							goto _match_end_1b8e69cc3;
						}
					}
					else {
						_case_begin_1b8e69d28:;
						{
							return false;;
						}
					}
					_match_end_1b8e69cc3:;
				};
			}
		}
		_match_end_1b8e69465:;
	};
	jule::Ptr<_22be1616d_Const> _11513_c = (*((*((*(_9728_m))))._field_Right))._field_Model.cast_ptr<_22be1616d_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ (*((*((*(_9728_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1b8e6bd80:;
			{
				if (_22be18060_ReadBool(_11513_c.ptr())) {
					(*((*(_self_))._field_model))=(*(*((*(_9728_m))))._field_Left.alloc)._field_Model;
				} else {
					_22be19649_SetBool(_11513_c.ptr(), false);
					(*((*(_self_))._field_model))=jule::Any(_11513_c, &__jule_any_type19);
				};
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1b8e6be29:;
			{
				if (_22be18060_ReadBool(_11513_c.ptr())) {
					_22be19649_SetBool(_11513_c, true);
					(*((*(_self_))._field_model))=jule::Any(_11513_c, &__jule_any_type19);
				} else {
					(*((*(_self_))._field_model))=(*(*((*(_9728_m))))._field_Left.alloc)._field_Model;
				};
				return true;;
			}
		}
		else {
			_case_begin_1b8e69d8e:;
		}
		_match_end_1b8e6bd19:;
	};
	return false;;
}



inline jule::Bool _1ce255d9b_strCond(_1ce25498d_exprOptimizer* _self_, jule::Ptr<_1cdee9bb7_BinaryExprModel> _15026_m) {
	jule::Ptr<_1ce1557a1_Prim> _1519_lp = _1ce150328_Prim((*((*(_15026_m))._field_Left))._field_Kind.ptr());;
	if (((_1519_lp == nullptr) || (!(_1ce158c38_IsStr(_1519_lp.ptr()))))) {
		return false;;
	};
	if ((((*((*_15026_m.alloc)._field_Op))._field_Id != static_cast<jule::U32>(50LLU)) && ((*(*_15026_m.alloc)._field_Op.alloc)._field_Id != static_cast<jule::U32>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_15026_m))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b8e7397a:;
			{
				std::swap((*_15026_m.alloc)._field_Left, (*_15026_m.alloc)._field_Right);
			}
		}
		else {
			_case_begin_1b8e72baa:;
			{
				{
					auto &_match_expr{ (*((*(_15026_m))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1b8e71725:;
						{
							goto _match_end_1b8e734b3;
						}
					}
					else {
						_case_begin_1b8e73518:;
						{
							return false;;
						}
					}
					_match_end_1b8e734b3:;
				};
			}
		}
		_match_end_1b8e72b55:;
	};
	jule::Ptr<_22be1616d_Const> _17113_c = (*((*_15026_m.alloc)._field_Right))._field_Model.cast_ptr<_22be1616d_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ (*((*(_15026_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1b8e73590:;
			{
				if ((_22be182e6_ReadStr(_17113_c.ptr())).empty()) {
					jule::Any _17521_model = jule::Any(jule::new_ptr<_1ce24660b_EmptyCompareExprModel>(_1ce24660b_EmptyCompareExprModel{._field_Expr=(*(*_15026_m.alloc)._field_Left.alloc)._field_Model, ._field_Neg=false}), &__jule_any_type126);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_17521_model))))));
					goto _match_end_1b8e75493;
				};
				jule::Any _18217_model = jule::Any(jule::new_ptr<_1ce246e03_StrCompExprModel>(_1ce246e03_StrCompExprModel{._field_Left=(*(*_15026_m.alloc)._field_Left.alloc)._field_Model, ._field_Right=_17113_c, ._field_NotEq=false}), &__jule_any_type127);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_18217_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1b8e7552b:;
			{
				if ((_22be182e6_ReadStr(_17113_c.ptr())).empty()) {
					jule::Any _19021_model = jule::Any(jule::new_ptr<_1ce24660b_EmptyCompareExprModel>(_1ce24660b_EmptyCompareExprModel{._field_Expr=(*(*_15026_m.alloc)._field_Left.alloc)._field_Model, ._field_Neg=true}), &__jule_any_type126);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_19021_model))))));
					goto _match_end_1b8e75493;
				};
				jule::Any _19717_model = jule::Any(jule::new_ptr<_1ce246e03_StrCompExprModel>(_1ce246e03_StrCompExprModel{._field_Left=(*(*_15026_m.alloc)._field_Left.alloc)._field_Model, ._field_Right=_17113_c, ._field_NotEq=true}), &__jule_any_type127);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_19717_model))))));
			}
		}
		_match_end_1b8e75493:;
	};
	return true;;
}



inline jule::Bool _1ce256352_tryNeutralElement1(_1ce25498d_exprOptimizer* _self_, jule::Ptr<_1cdee9bb7_BinaryExprModel>* _20738_m, jule::Ptr<_22be1616d_Const> _20763_c, jule::Ptr<_1cdee96bc_OperandExprModel>* _20775_nc) {
	if (_22be1a8e2_IsStr(_20763_c.ptr())) {
		if ((!(_1ce268452_Str))) {
			return false;;
		};
		if (((_22be182e6_ReadStr(_20763_c)).empty() && ((*((*((*(_20738_m))))._field_Op))._field_Id == static_cast<jule::U32>(60LLU)))) {
			(*((*(_self_))._field_model))=(*((*(_20775_nc))))._field_Model;
			return true;;
		};
		return false;;
	};
	if (((!(_1ce26752d_Math)) || (_22be18d30_AsF64(_20763_c) != 0LL))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_20738_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1b8e7e128:;
			{
				if (((*(_20775_nc)) == (*((*(_20738_m))))._field_Left)) {
					(*(*(_self_))._field_model.alloc)=(*((*(_20775_nc))))._field_Model;
					return true;;
				};
				(*(*(_self_))._field_model.alloc)=jule::Any(_20763_c, &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1b8e7ece9:;
			{
				_22be190d8_SetI64(_20763_c, 0LL);
				(*(*(_self_))._field_model.alloc)=jule::Any(_20763_c, &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1b8e7ed60:;
			{
				(*(*(_self_))._field_model.alloc)=(*((*(_20775_nc))))._field_Model;
				return true;;
			}
		}
		_match_end_1b8e7ebb7:;
	};
	return false;;
}



inline jule::Bool _1ce256693_tryNeutralElement(_1ce25498d_exprOptimizer* _self_, jule::Ptr<_1cdee9bb7_BinaryExprModel>* _25137_m) {
	{
		auto &_match_expr{ (*((*((*(_25137_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b8e832d6:;
			{
				jule::Ptr<_22be1616d_Const> _25517_c = (*((*((*(_25137_m))))._field_Left))._field_Model.unsafe_cast_ptr<_22be1616d_Const>();;
				return _1ce256352_tryNeutralElement1(_self_, _25137_m, _25517_c, &((*((*(_25137_m))))._field_Right));;
			}
		}
		_match_end_1b8e83270:;
	};
	{
		auto &_match_expr{ (*((*((*(_25137_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b8e84408:;
			{
				jule::Ptr<_22be1616d_Const> _26017_c = (*((*((*(_25137_m))))._field_Right))._field_Model.unsafe_cast_ptr<_22be1616d_Const>();;
				return _1ce256352_tryNeutralElement1(_self_, _25137_m, _26017_c, &((*((*(_25137_m))))._field_Left));;
			}
		}
		_match_end_1b8e843a3:;
	};
	return false;;
}



inline void _1ce25694b_checkBinaryForBoundary(_1ce25498d_exprOptimizer* _self_, jule::Ptr<_1cdee9bb7_BinaryExprModel>* _26642_m) {
	if (((*((*(_self_))._field_data))._field_boundary == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*((*(_26642_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1b8e86c02:;
			{
				jule::Ptr<_1ce00243e_BuiltinLenCallExprModel> _27217_blc = (*((*((*(_26642_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1ce00243e_BuiltinLenCallExprModel>();;
				if ((!(_1ce266153_isBoundaryValidType((*((*(_27217_blc))._field_Expr))._field_Kind)))) {
					return;;
				};
				if ((((*((*((*(_26642_m))))._field_Op))._field_Id != static_cast<jule::U32>(70LLU)) && ((*(*((*(_26642_m))))._field_Op.alloc)._field_Id != static_cast<jule::U32>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_26642_m))))._field_Op.alloc)._field_Id == static_cast<jule::U32>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_26642_m))))._field_Right))._field_Model };
						
						if (_match_expr.type == &__jule_any_type19) {
							_case_begin_1b9256345:;
							{
								jule::Ptr<_22be1616d_Const> _28425_c = jule::new_ptr<_22be1616d_Const>((*((*((*((*(_26642_m))))._field_Right))._field_Model.cast_ptr<_22be1616d_Const>(&__jule_any_type19))));;
								_22be1d1b9_Sub(_28425_c, (*(static__22be165ad_NewI64(1LL))));
								_1ce26444d_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1ce26641c_getBoundaryVar((*(*_27217_blc.alloc)._field_Expr.alloc)._field_Model), jule::Any(_28425_c, &__jule_any_type19));
							}
						}
						_match_end_1b92562ce:;
					};
					return;;
				};
				_1ce26444d_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1ce26641c_getBoundaryVar((*(*_27217_blc.alloc)._field_Expr.alloc)._field_Model), (*(*((*(_26642_m))))._field_Right.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1b8e86b8b:;
	};
	{
		auto &_match_expr{ (*((*((*(_26642_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1b9253650:;
			{
				jule::Ptr<_1ce00243e_BuiltinLenCallExprModel> _29517_blc = (*((*((*(_26642_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1ce00243e_BuiltinLenCallExprModel>();;
				if ((!(_1ce266153_isBoundaryValidType((*(*(_29517_blc))._field_Expr.alloc)._field_Kind)))) {
					return;;
				};
				if ((((*(*((*(_26642_m))))._field_Op.alloc)._field_Id != static_cast<jule::U32>(69LLU)) && ((*(*((*(_26642_m))))._field_Op.alloc)._field_Id != static_cast<jule::U32>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_26642_m))))._field_Op.alloc)._field_Id == static_cast<jule::U32>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_26642_m))))._field_Left))._field_Model };
						
						if (_match_expr.type == &__jule_any_type19) {
							_case_begin_1b925ccb9:;
							{
								jule::Ptr<_22be1616d_Const> _30725_c = jule::new_ptr<_22be1616d_Const>((*((*((*((*(_26642_m))))._field_Left))._field_Model.cast_ptr<_22be1616d_Const>(&__jule_any_type19))));;
								_22be1d1b9_Sub(_30725_c, (*(static__22be165ad_NewI64(1LL))));
								_1ce26444d_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1ce26641c_getBoundaryVar((*(*_29517_blc.alloc)._field_Expr.alloc)._field_Model), jule::Any(_30725_c, &__jule_any_type19));
							}
						}
						_match_end_1b925cc53:;
					};
					return;;
				};
				_1ce26444d_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1ce26641c_getBoundaryVar((*(*_29517_blc.alloc)._field_Expr.alloc)._field_Model), (*(*((*(_26642_m))))._field_Left.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1b92535d9:;
	};
}



inline void _1ce256c04_checkBinaryForNil(_1ce25498d_exprOptimizer* _self_, jule::Ptr<_1cdee9bb7_BinaryExprModel>* _31837_m) {
	if (((*((*(_self_))._field_data))._field_nils == nullptr)) {
		return;;
	};
	jule::Uintptr _32213_var = _1ce24b864_getNilVar((*((*((*(_31837_m))))._field_Left))._field_Model);;
	if ((_32213_var != 0LLU)) {
		if ((!(_1ce24b523_isNilValidType((*(*((*(_31837_m))))._field_Left.alloc)._field_Kind)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_31837_m))))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type19) {
				_case_begin_1b926361b:;
				{
					_1ce24a324_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _32213_var, ((*((*((*(_31837_m))))._field_Op))._field_Id == static_cast<jule::U32>(51LLU)));
				}
			}
			_match_end_1b92635a5:;
		};
		return;;
	};
	_32213_var=_1ce24b864_getNilVar((*((*((*(_31837_m))))._field_Right))._field_Model);
	if ((_32213_var != 0LLU)) {
		if ((!(_1ce24b523_isNilValidType((*(*((*(_31837_m))))._field_Right.alloc)._field_Kind)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_31837_m))))._field_Left))._field_Model };
			
			if (_match_expr.type == &__jule_any_type19) {
				_case_begin_1b9265cb1:;
				{
					_1ce24a324_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _32213_var, ((*(*((*(_31837_m))))._field_Op.alloc)._field_Id == static_cast<jule::U32>(51LLU)));
				}
			}
			_match_end_1b9265c4a:;
		};
		return;;
	};
}



inline void _1ce256eac_binary(_1ce25498d_exprOptimizer* _self_, jule::Ptr<_1cdee9bb7_BinaryExprModel> _35025_m) {
	_1ce25694b_checkBinaryForBoundary(_self_, &(_35025_m));
	_1ce256c04_checkBinaryForNil(_self_, &(_35025_m));
	static__1ce2553c8_optimizeData(&((*((*(_35025_m))._field_Left))._field_Model), &((*(_self_))._field_data));
	static__1ce2553c8_optimizeData(&((*((*_35025_m.alloc)._field_Right))._field_Model), &((*(_self_))._field_data));
	if (_1ce268210_Cond) {
		{
			
			if (_1ce255d9b_strCond(_self_, _35025_m) || _1ce255a5a_boolCond(_self_, &(_35025_m)) || _1ce255719_selfCmpCond(_self_, &(_35025_m))) {
				_case_begin_1b92689b7:;
				{
					return;;
				}
			}
			_match_end_1b92688eb:;
		};
	};
	if (_1ce256693_tryNeutralElement(_self_, &(_35025_m))) {
		return;;
	};
	if ((!(_1ce26752d_Math))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_35025_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b9267e06:;
			{
				goto _match_end_1b9269cb5;
			}
		}
		else {
			_case_begin_1b9269d1a:;
			{
				return;;
			}
		}
		_match_end_1b9269cb5:;
	};
	jule::Ptr<_1ce1557a1_Prim> _3869_lp = _1ce150328_Prim((*(*_35025_m.alloc)._field_Left.alloc)._field_Kind.ptr());;
	if ((_3869_lp == nullptr)) {
		return;;
	};
	jule::Ptr<_1ce1557a1_Prim> _3909_rp = _1ce150328_Prim((*(*_35025_m.alloc)._field_Right.alloc)._field_Kind);;
	if ((_3909_rp == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_35025_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1b926c878:;
			{
				jule::Bool _39713_ok;;
				jule::U64 _39717_x;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1ce25d359_checkForBitShiftOpt(&((*_35025_m.alloc)._field_Left), &((*_35025_m.alloc)._field_Right));
					_39713_ok = __jule_assign_result.__jule_result_arg0;
					_39717_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_39713_ok) {
					(*((*_35025_m.alloc)._field_Op))._field_Id=static_cast<jule::U32>(56LLU);
					(*(*_35025_m.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("<<", 2);
					jule::Ptr<_22be1616d_Const> _40121_c = (*(*_35025_m.alloc)._field_Right.alloc)._field_Model.cast_ptr<_22be1616d_Const>(&__jule_any_type19);;
					_22be19391_SetU64(_40121_c.ptr(), _39717_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1b926c4b0:;
			{
				jule::Bool _40813_ok;;
				jule::U64 _40817_x;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1ce25d359_checkForBitShiftOpt(&((*_35025_m.alloc)._field_Left), &((*_35025_m.alloc)._field_Right));
					_40813_ok = __jule_assign_result.__jule_result_arg0;
					_40817_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_40813_ok) {
					(*((*_35025_m.alloc)._field_Op))._field_Id=static_cast<jule::U32>(57LLU);
					(*(*_35025_m.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit(">>", 2);
					jule::Ptr<_22be1616d_Const> _41221_c = (*(*_35025_m.alloc)._field_Right.alloc)._field_Model.cast_ptr<_22be1616d_Const>(&__jule_any_type19);;
					_22be19391_SetU64(_41221_c.ptr(), _40817_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1b926c526:;
			{
				jule::Ptr<_22be1616d_Const> _41917_c = (*(*_35025_m.alloc)._field_Right.alloc)._field_Model.cast_ptr<_22be1616d_Const>(&__jule_any_type19);;
				if ((_22be18d30_AsF64(_41917_c.ptr()) == 2LL)) {
					(*((*_35025_m.alloc)._field_Op))._field_Id=static_cast<jule::U32>(65LLU);
					(*(*_35025_m.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("&", 1);
					_22be190d8_SetI64(_41917_c, 1LL);
					return;;
				};
			}
		}
		else {
			_case_begin_1b926c0c5:;
			{
				return;;
			}
		}
		_match_end_1b926c449:;
	};
	jule::Any _43413_model = jule::Any(jule::new_ptr<_1ce247783_UnsafeBinaryExprModel>(_1ce247783_UnsafeBinaryExprModel{._field_Node=_35025_m}), &__jule_any_type128);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_43413_model))))));
}



inline void _1ce257265_unary(_1ce25498d_exprOptimizer* _self_, jule::Ptr<_1cdeea091_UnaryExprModel> _43824_m) {
	static__1ce2553c8_optimizeData(&((*((*(_43824_m))._field_Expr))._field_Model), &((*(_self_))._field_data));
	if ((!(_1ce267d47_Ptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_43824_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1b92770e1:;
			{
				{
					auto &_match_expr{ (*((*(_43824_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_1b927819c:;
						{
							jule::Ptr<_1cdeea091_UnaryExprModel> _44721_um = (*((*(_43824_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1cdeea091_UnaryExprModel>();;
							if (((*((*(_44721_um))._field_Op))._field_Id == static_cast<jule::U32>(65LLU))) {
								(*((*(_self_))._field_model))=(*(*_44721_um.alloc)._field_Expr.alloc)._field_Model;
								return;;
							};
							return;;
						}
					}
					_match_end_1b9278136:;
				};
				if ((!(_1ce2677d6_Access))) {
					return;;
				};
				if ((((*((*(_self_))._field_data))._field_nils != nullptr) && _1ce24b523_isNilValidType((*(*_43824_m.alloc)._field_Expr.alloc)._field_Kind))) {
					jule::Uintptr _46117_var = _1ce24b864_getNilVar((*(*_43824_m.alloc)._field_Expr.alloc)._field_Model);;
					if (_1ce24a9a6_isSafe((*(*(_self_))._field_data.alloc)._field_nils, _46117_var)) {
						jule::Any _46325_model = jule::Any(jule::new_ptr<_1ce248a92_UnsafeDerefExprModel>(_1ce248a92_UnsafeDerefExprModel{._field_Base=_43824_m}), &__jule_any_type129);;
						(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_46325_model))))));
						return;;
					};
					_1ce24a324_pushVar((*(*(_self_))._field_data.alloc)._field_nils, _46117_var, true);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1b927750e:;
			{
				{
					auto &_match_expr{ (*((*(_43824_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1b927db97:;
						{
							jule::Ptr<_1ce0b4105_Var> _47321_v = (*((*(_43824_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1ce0b4105_Var>();;
							if ((*(_47321_v))._field_Reference) {
								jule::Any _47525_model = jule::Any(jule::new_ptr<_1ce246980_RefExprModel>(_1ce246980_RefExprModel{._field_Var=_47321_v}), &__jule_any_type130);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_47525_model))))));
							};
						}
					}
					_match_end_1b927db31:;
				};
			}
		}
		_match_end_1b92773bb:;
	};
}



inline void _1ce25751d_structureLit(_1ce25498d_exprOptimizer* _self_, jule::Ptr<_1cdeea965_StructLitExprModel> _48231_m) {
	{
		auto expr = &((*(_48231_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b927d515:;
		if (it != expr_end) {
			jule::Ptr<_1cdeea5be_StructArgExprModel> _48321_arg = *it;
			{
				if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
					if (_1ce265d89_isBoundaryRiskyType((*((*(_48321_arg))._field_Expr))._field_Kind)) {
						_1ce265ac0_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), jule::Any(_48321_arg, &__jule_any_type131));
					};
				};
				if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
					_1ce24ad91_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*_48321_arg.alloc)._field_Expr.alloc)._field_Model);
				};
				if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
					_1ce260735_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*_48321_arg.alloc)._field_Expr.alloc)._field_Model);
				};
				static__1ce2553c8_optimizeData(&((*(*_48321_arg.alloc)._field_Expr.alloc)._field_Model), &((*(_self_))._field_data));
			}
			_iter_next_1b927d515:;
			++it;
			goto _iter_begin_1b927d515;
		}
		_iter_end_1b927d515:;
	};
}



inline void _1ce2577c6_allocStructure(_1ce25498d_exprOptimizer* _self_, jule::Ptr<_1cdeeac62_AllocStructLitExprModel> _49933_m) {
	_1ce25751d_structureLit(_self_, (*(_49933_m))._field_Lit);
}



inline void _1ce257a7e_casting(_1ce25498d_exprOptimizer* _self_, jule::Ptr<_1cdeeb2e5_CastingExprModel> _50326_m) {
	jule::Bool _5049_valid = _1ce260a43_isDynamicValidType((*(_50326_m))._field_ExprKind);;
	jule::Uintptr _5059_var = _1ce2612b3_getDynamicVar((*((*_50326_m.alloc)._field_Expr))._field_Model);;
	if (((_5049_valid && ((*((*(_self_))._field_data))._field_dynamic != nullptr)) && _1ce26034a_isFits((*(*(_self_))._field_data.alloc)._field_dynamic, _5059_var, (*_50326_m.alloc)._field_Kind))) {
		jule::Any _50717_model = jule::Any(jule::new_ptr<_1ce248d8e_UnsafeCastingExprModel>(_1ce248d8e_UnsafeCastingExprModel{._field_Base=_50326_m}), &__jule_any_type132);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_50717_model))))));
		return;;
	};
	static__1ce2553c8_optimizeData(&((*(*_50326_m.alloc)._field_Expr.alloc)._field_Model), &((*(_self_))._field_data));
	if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && _5049_valid)) {
		_1ce25eb0d_pushVar((*(*(_self_))._field_data.alloc)._field_dynamic, _5059_var, (*_50326_m.alloc)._field_Kind);
	};
}



inline void _1ce257de2_args(_1ce25498d_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1ce009886_ParamIns>> _51723_params, jule::Slice<jule::Any>* _51749_args) {
	{
		auto expr = _51749_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b928a401:;
		if (it != expr_end) {
			jule::I32 _51814_i = it - expr->begin();
			jule::Any _51821_arg = *it;
			{
				if ((_51814_i < _51723_params.len())) {
					jule::Ptr<_1ce009886_ParamIns> _52021_p = _51723_params[_51814_i];;
					if (((*((*(_52021_p))._field_Decl))._field_Mutable && (*(*_52021_p.alloc)._field_Decl.alloc)._field_Reference)) {
						if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
							if (_1ce265d89_isBoundaryRiskyType((*_52021_p.alloc)._field_Kind)) {
								_1ce265ac0_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), _51821_arg);
							};
						};
						if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
							_1ce24ad91_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), _51821_arg);
						};
						if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
							_1ce260735_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), _51821_arg);
						};
					};
				};
				static__1ce2553c8_optimizeData(&(_51821_arg), &((*(_self_))._field_data));
				(*(_51749_args))[_51814_i]=_51821_arg;
			}
			_iter_next_1b928a401:;
			++it;
			_51814_i++;
			goto _iter_begin_1b928a401;
		}
		_iter_end_1b928a401:;
	};
}



inline void _1ce25819a_scope(_1ce25498d_exprOptimizer* _self_, jule::Ptr<_1ce0497c7_Scope>* _54025_s) {
	jule::Ptr<_1ce24cb40_scopeOptimizer> _54113_scopt = static__1ce24d1b2_new((*(_54025_s)));;
	(*(_54113_scopt))._field_data=(*(_self_))._field_data;
	_1ce25232b_optimize(_54113_scopt);
}



inline void _1ce258453_funcCall(_1ce25498d_exprOptimizer* _self_, jule::Ptr<_1cdeebb97_FnCallExprModel> _54627_m) {
	static__1ce2553c8_optimizeData(&((*(_54627_m))._field_Expr), &((*(_self_))._field_data));
	_1ce257de2_args(_self_, (*((*_54627_m.alloc)._field_Func))._field_Params, &((*_54627_m.alloc)._field_Args));
	if (((*_54627_m.alloc)._field_Except != nullptr)) {
		_1ce25819a_scope(_self_, &((*_54627_m.alloc)._field_Except));
	};
}



inline void _1ce25870b_slice(_1ce25498d_exprOptimizer* _self_, jule::Ptr<_1cdeec071_SliceExprModel> _55424_m) {
	_1ce257de2_args(_self_, nullptr, &((*(_55424_m))._field_Elems));
}



inline void _1ce2589b4_array(_1ce25498d_exprOptimizer* _self_, jule::Ptr<_1cdeeeea8_ArrayExprModel> _55824_m) {
	if ((((*(_55824_m))._field_Elems.len() == 2LL) && ((*_55824_m.alloc)._field_Elems[1LL] == nullptr))) {
		jule::Any _56017_elem = (*_55824_m.alloc)._field_Elems[0LL];;
		static__1ce2553c8_optimizeData(&(_56017_elem), &((*(_self_))._field_data));
		(*_55824_m.alloc)._field_Elems[0LL]=_56017_elem;
	};
	_1ce257de2_args(_self_, nullptr, &((*_55824_m.alloc)._field_Elems));
}



inline void _1ce258c6c_indexing(_1ce25498d_exprOptimizer* _self_, jule::Ptr<_1cdeec527_IndexingExprModel> _56727_m) {
	static__1ce2553c8_optimizeData(&((*((*(_56727_m))._field_Expr))._field_Model), &((*(_self_))._field_data));
	static__1ce2553c8_optimizeData(&((*((*_56727_m.alloc)._field_Index))._field_Model), &((*(_self_))._field_data));
	if ((!(_1ce2677d6_Access))) {
		return;;
	};
	jule::Bool _5749_array = (_1ce1510e8_Arr((*(*_56727_m.alloc)._field_Expr.alloc)._field_Kind.ptr()) != nullptr);;
	if ((_5749_array && _1ce11c614_IsConst((*_56727_m.alloc)._field_Index))) {
		jule::Any _57717_model = jule::Any(jule::new_ptr<_1ce247b18_UnsafeIndexingExprModel>(_1ce247b18_UnsafeIndexingExprModel{._field_Node=_56727_m}), &__jule_any_type133);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_57717_model))))));
		return;;
	};
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && _1ce266153_isBoundaryValidType((*(*_56727_m.alloc)._field_Expr.alloc)._field_Kind))) {
		jule::Uintptr _58313_var = _1ce26641c_getBoundaryVar((*(*_56727_m.alloc)._field_Expr.alloc)._field_Model);;
		if (_1ce264b8a_fitsMaxSize((*(*(_self_))._field_data.alloc)._field_boundary, _58313_var, (*(*_56727_m.alloc)._field_Index.alloc)._field_Model)) {
			jule::Any _58521_model = jule::Any(jule::new_ptr<_1ce247b18_UnsafeIndexingExprModel>(_1ce247b18_UnsafeIndexingExprModel{._field_Node=_56727_m}), &__jule_any_type133);;
			(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_58521_model))))));
			return;;
		};
		_1ce26444d_pushVar((*(*(_self_))._field_data.alloc)._field_boundary, _58313_var, (*(*_56727_m.alloc)._field_Index.alloc)._field_Model);
	};
}



inline void _1ce259025_anonFunc(_1ce25498d_exprOptimizer* _self_, jule::Ptr<_1cdeec901_AnonFnExprModel> _59327_m) {
	_1ce25819a_scope(_self_, &((*((*(_59327_m))._field_Func))._field_Scope));
}



inline void _1ce2592cd_mapExpr(_1ce25498d_exprOptimizer* _self_, jule::Ptr<_1cdeed281_MapExprModel> _59726_m) {
	{
		auto expr = &((*(_59726_m))._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b929d799:;
		if (it != expr_end) {
			jule::Ptr<_1cdeeccca_KeyValPairExprModel> _59821_pair = *it;
			{
				static__1ce2553c8_optimizeData(&((*(_59821_pair))._field_Key), &((*(_self_))._field_data));
				static__1ce2553c8_optimizeData(&((*_59821_pair.alloc)._field_Val), &((*(_self_))._field_data));
			}
			_iter_next_1b929d799:;
			++it;
			goto _iter_begin_1b929d799;
		}
		_iter_end_1b929d799:;
	};
}



inline void _1ce259586_slicing(_1ce25498d_exprOptimizer* _self_, jule::Ptr<_1cdeed814_SlicingExprModel> _60426_m) {
	static__1ce2553c8_optimizeData(&((*(_60426_m))._field_Expr), &((*(_self_))._field_data));
	static__1ce2553c8_optimizeData(&((*_60426_m.alloc)._field_Left), &((*(_self_))._field_data));
	if (((*_60426_m.alloc)._field_Right != nullptr)) {
		static__1ce2553c8_optimizeData(&((*_60426_m.alloc)._field_Right), &((*(_self_))._field_data));
	};
}



inline void _1ce25983e_traitSub(_1ce25498d_exprOptimizer* _self_, jule::Ptr<_1cdeedd97_TraitSubIdentExprModel> _61227_m) {
	static__1ce2553c8_optimizeData(&((*(_61227_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1ce259ae7_structureSub(_1ce25498d_exprOptimizer* _self_, jule::Ptr<_1cdeee738_StructSubIdentExprModel> _61631_m) {
	static__1ce2553c8_optimizeData(&((*((*(_61631_m))._field_Expr))._field_Model), &((*(_self_))._field_data));
}



inline void _1ce259da0_tuple(_1ce25498d_exprOptimizer* _self_, jule::Ptr<_1ce0002a5_TupleExprModel> _62024_m) {
	{
		auto expr = &((*(_62024_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b92a2a89:;
		if (it != expr_end) {
			jule::Ptr<_1ce11bc0c_Data> _62121_d = *it;
			{
				static__1ce2553c8_optimizeData(&((*(_62121_d))._field_Model), &((*(_self_))._field_data));
			}
			_iter_next_1b92a2a89:;
			++it;
			goto _iter_begin_1b92a2a89;
		}
		_iter_end_1b92a2a89:;
	};
}



inline void _1ce25a158_newCall(_1ce25498d_exprOptimizer* _self_, jule::Ptr<_1ce000e32_BuiltinNewCallExprModel> _62626_m) {
	if (((*(_62626_m))._field_Init != nullptr)) {
		static__1ce2553c8_optimizeData(&((*_62626_m.alloc)._field_Init), &((*(_self_))._field_data));
	};
}



inline void _1ce25a411_outCall(_1ce25498d_exprOptimizer* _self_, jule::Ptr<_1ce00067e_BuiltinOutCallExprModel> _63226_m) {
	static__1ce2553c8_optimizeData(&((*(_63226_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1ce25a6b9_outlnCall(_1ce25498d_exprOptimizer* _self_, jule::Ptr<_1ce000a58_BuiltinOutlnCallExprModel> _63628_m) {
	static__1ce2553c8_optimizeData(&((*(_63628_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1ce25a972_panicCall(_1ce25498d_exprOptimizer* _self_, jule::Ptr<_1ce00130b_BuiltinPanicCallExprModel> _64028_m) {
	static__1ce2553c8_optimizeData(&((*(_64028_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1ce25ac2a_assertCall(_1ce25498d_exprOptimizer* _self_, jule::Ptr<_1ce0017b2_BuiltinAssertCallExprModel> _64429_m) {
	static__1ce2553c8_optimizeData(&((*(_64429_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1ce25aed3_errorCall(_1ce25498d_exprOptimizer* _self_, jule::Ptr<_1ce0033b8_BuiltinErrorCallExprModel> _64828_m) {
	static__1ce2553c8_optimizeData(&((*((*(_64828_m))._field_Err))._field_Model), &((*(_self_))._field_data));
}



inline void _1ce25b28b_makeCall(_1ce25498d_exprOptimizer* _self_, jule::Ptr<_1ce001c68_BuiltinMakeCallExprModel> _65227_m) {
	if (((*(_65227_m))._field_Len != nullptr)) {
		static__1ce2553c8_optimizeData(&((*_65227_m.alloc)._field_Len), &((*(_self_))._field_data));
	};
	if (((*_65227_m.alloc)._field_Cap != nullptr)) {
		static__1ce2553c8_optimizeData(&((*_65227_m.alloc)._field_Cap), &((*(_self_))._field_data));
	};
}



inline void _1ce25b544_appendCall(_1ce25498d_exprOptimizer* _self_, jule::Ptr<_1ce002142_BuiltinAppendCallExprModel> _66129_m) {
	static__1ce2553c8_optimizeData(&((*(_66129_m))._field_Dest), &((*(_self_))._field_data));
	static__1ce2553c8_optimizeData(&((*_66129_m.alloc)._field_Elements), &((*(_self_))._field_data));
}



inline void _1ce25b7ec_lenCall(_1ce25498d_exprOptimizer* _self_, jule::Ptr<_1ce00243e_BuiltinLenCallExprModel> _66626_m) {
	static__1ce2553c8_optimizeData(&((*((*(_66626_m))._field_Expr))._field_Model), &((*(_self_))._field_data));
}



inline void _1ce25baa5_capCall(_1ce25498d_exprOptimizer* _self_, jule::Ptr<_1ce00273b_BuiltinCapCallExprModel> _67026_m) {
	static__1ce2553c8_optimizeData(&((*((*(_67026_m))._field_Expr))._field_Model), &((*(_self_))._field_data));
}



inline void _1ce25bd5d_deleteCall(_1ce25498d_exprOptimizer* _self_, jule::Ptr<_1ce002b15_BuiltinDeleteCallExprModel> _67429_m) {
	static__1ce2553c8_optimizeData(&((*((*(_67429_m))._field_Dest))._field_Model), &((*(_self_))._field_data));
	if (((*_67429_m.alloc)._field_Key != nullptr)) {
		static__1ce2553c8_optimizeData(&((*(*_67429_m.alloc)._field_Key.alloc)._field_Model), &((*(_self_))._field_data));
	};
}



inline void _1ce25c116_sizeof(_1ce25498d_exprOptimizer* _self_, jule::Ptr<_1ce003a6c_SizeofExprModel> _68125_m) {
	static__1ce2553c8_optimizeData(&((*(_68125_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1ce25c3be_alignof(_1ce25498d_exprOptimizer* _self_, jule::Ptr<_1ce003c59_AlignofExprModel> _68526_m) {
	static__1ce2553c8_optimizeData(&((*(_68526_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1ce25c677_integratedToStr(_1ce25498d_exprOptimizer* _self_, jule::Ptr<_1ce0042ed_IntegratedToStrExprModel> _68934_m) {
	static__1ce2553c8_optimizeData(&((*(_68934_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1ce25c930_free(_1ce25498d_exprOptimizer* _self_, jule::Ptr<_1ce0049c4_FreeExprModel> _69323_m) {
	static__1ce2553c8_optimizeData(&((*(_69323_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1ce25cbd8_backendEmit(_1ce25498d_exprOptimizer* _self_, jule::Ptr<_1ce0046c7_BackendEmitExprModel> _69730_m) {
	_1ce257de2_args(_self_, nullptr, &((*(_69730_m))._field_Exprs));
}



inline void _1ce25cdd6_do(_1ce25498d_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_model)) };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1b92b12a1:;
			{
				_1ce256eac_binary(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1cdee9bb7_BinaryExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1b92b0c40:;
			{
				_1ce257265_unary(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1cdeea091_UnaryExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1b92b1328:;
			{
				_1ce25751d_structureLit(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1cdeea965_StructLitExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b92b138e:;
			{
				_1ce2577c6_allocStructure(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1cdeeac62_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1b92b1416:;
			{
				_1ce257a7e_casting(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1cdeeb2e5_CastingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1b92b148d:;
			{
				_1ce258453_funcCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1cdeebb97_FnCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1b92b1515:;
			{
				_1ce25870b_slice(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1cdeec071_SliceExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1b92b158c:;
			{
				_1ce2589b4_array(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1cdeeeea8_ArrayExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1b92b1614:;
			{
				_1ce258c6c_indexing(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1cdeec527_IndexingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b92b168b:;
			{
				_1ce259025_anonFunc(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1cdeec901_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1b92b1713:;
			{
				_1ce2592cd_mapExpr(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1cdeed281_MapExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1b92b178a:;
			{
				_1ce259586_slicing(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1cdeed814_SlicingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1b92b1812:;
			{
				_1ce25983e_traitSub(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1cdeedd97_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b92b1889:;
			{
				_1ce259ae7_structureSub(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1cdeee738_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1b92b1911:;
			{
				_1ce259da0_tuple(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1ce0002a5_TupleExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1b92b1988:;
			{
				_1ce25a411_outCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1ce00067e_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1b92b1a10:;
			{
				_1ce25a6b9_outlnCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1ce000a58_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1b92b1a87:;
			{
				_1ce25a158_newCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1ce000e32_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1b92b1b0e:;
			{
				_1ce25a972_panicCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1ce00130b_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1b92b1b86:;
			{
				_1ce25ac2a_assertCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1ce0017b2_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b92b1c0d:;
			{
				_1ce25aed3_errorCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1ce0033b8_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1b92b1c85:;
			{
				_1ce25b28b_makeCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1ce001c68_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1b92b1d0c:;
			{
				_1ce25b544_appendCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1ce002142_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1b92b1d84:;
			{
				_1ce25b7ec_lenCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1ce00243e_BuiltinLenCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1b92b1e0b:;
			{
				_1ce25baa5_capCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1ce00273b_BuiltinCapCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1b92b1e83:;
			{
				_1ce25bd5d_deleteCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1ce002b15_BuiltinDeleteCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1b92b200a:;
			{
				_1ce25c116_sizeof(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1ce003a6c_SizeofExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1b92b2082:;
			{
				_1ce25c3be_alignof(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1ce003c59_AlignofExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1b92b2109:;
			{
				_1ce25c677_integratedToStr(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1ce0042ed_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1b92b2181:;
			{
				_1ce25c930_free(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1ce0049c4_FreeExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1b92b2208:;
			{
				_1ce25cbd8_backendEmit(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1ce0046c7_BackendEmitExprModel>());
			}
		}
		_match_end_1b92b1009:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ce25498d_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce25e35a_dynamicVar _Src) {
	_Stream << "dynamicVar{";
	_Stream << "var:" << _Src._field_var << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline void _1ce25eb0d_pushVar(jule::Ptr<_1ce25e69b_dynamic> _self_, jule::Uintptr _3127_var, jule::Ptr<_1ce14cbc7_TypeKind> _3145_kind) {
	if (((!(_1ce2692bb_Dynamic)) || (_3127_var == 0LLU))) {
		return;;
	};
	_3145_kind=_1ce260e72_isTypeGuaranteedDynamicData(&(_self_), _3145_kind, nullptr);
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b91a6938:;
		if (it != expr_end) {
			_1ce25e35a_dynamicVar _3721_v = *it;
			{
				if ((_3721_v._field_var == _3127_var)) {
					_3721_v._field_kind=_3145_kind;
					return;;
				};
			}
			_iter_next_1b91a6938:;
			++it;
			goto _iter_begin_1b91a6938;
		}
		_iter_end_1b91a6938:;
	};
	{
		auto expr = &((*_self_.alloc)._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b91a6d45:;
		if (it != expr_end) {
			_1ce25e35a_dynamicVar _4421_v = *it;
			{
				if ((_4421_v._field_var == 0LLU)) {
					({
						jule::Uintptr ___jule_assign_arg = _3127_var;
						jule::Ptr<_1ce14cbc7_TypeKind> _1___jule_assign_arg = _3145_kind;
						_4421_v._field_var = ___jule_assign_arg;
						_4421_v._field_kind = _1___jule_assign_arg;
					});
					return;;
				};
			}
			_iter_next_1b91a6d45:;
			++it;
			goto _iter_begin_1b91a6d45;
		}
		_iter_end_1b91a6d45:;
	};
	(*_self_.alloc)._field_vars=jule::append((*_self_.alloc)._field_vars,jule::Slice<_1ce25e35a_dynamicVar>::make({_1ce25e35a_dynamicVar{._field_var=_3127_var, ._field_kind=_3145_kind}}));
}



inline jule::Bool _1ce25ee4e_removeVar(_1ce25e69b_dynamic* _self_, jule::Uintptr _5428_var) {
	if ((_5428_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b91a9562:;
			if (it != expr_end) {
				_1ce25e35a_dynamicVar _5625_v = *it;
				{
					if ((_5625_v._field_var == _5428_var)) {
						_5625_v._field_var=0LLU;
						_5625_v._field_kind=nullptr;
						return true;;
					};
				}
				_iter_next_1b91a9562:;
				++it;
				goto _iter_begin_1b91a9562;
			}
			_iter_end_1b91a9562:;
		};
	};
	return false;;
}



inline jule::Bool _1ce26034a_isFits(_1ce25e69b_dynamic* _self_, jule::Uintptr _6825_var, jule::Ptr<_1ce14cbc7_TypeKind> _6839_kind) {
	if ((_6825_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b91aade3:;
			if (it != expr_end) {
				_1ce25e35a_dynamicVar _7020_v = *it;
				{
					if ((_7020_v._field_var == _6825_var)) {
						return ((_7020_v._field_kind != nullptr) && _1ce14d3d1_Equal(_7020_v._field_kind, _6839_kind));;
					};
				}
				_iter_next_1b91aade3:;
				++it;
				goto _iter_begin_1b91aade3;
			}
			_iter_end_1b91aade3:;
		};
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce25e69b_dynamic _Src) {
	_Stream << "dynamic{";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline _1ce2620e9_dataCheckpoint _1ce262968_getCheckpoint(_1ce2625e4_data* _self_) {
	_1ce2620e9_dataCheckpoint _2513_c = _1ce2620e9_dataCheckpoint{};;
	_2513_c._field_boundary._field_vars=jule::append(jule::Slice<_1ce263b9a_boundaryVar>::alloc(0LL, 0LL),(*((*(_self_))._field_boundary))._field_vars);
	{
		auto expr = &(_2513_c._field_boundary._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b91accc4:;
		if (it != expr_end) {
			jule::I32 _2713_i = it - expr->begin();
			{
				_2513_c._field_boundary._field_vars[_2713_i]._field_maxSize=jule::append(jule::Slice<jule::Any>::alloc(0LL, 0LL, jule::Any(nullptr)),_2513_c._field_boundary._field_vars[_2713_i]._field_maxSize);
			}
			_iter_next_1b91accc4:;
			++it;
			_2713_i++;
			goto _iter_begin_1b91accc4;
		}
		_iter_end_1b91accc4:;
	};
	_2513_c._field_nils._field_vars=jule::append(jule::Slice<_1ce249a71_nilVar>::alloc(0LL, 0LL),(*((*(_self_))._field_nils))._field_vars);
	_2513_c._field_dynamic._field_vars=jule::append(jule::Slice<_1ce25e35a_dynamicVar>::alloc(0LL, 0LL),(*((*(_self_))._field_dynamic))._field_vars);
	return _2513_c;;
}



inline void _1ce262c21_loadCheckpoint(_1ce2625e4_data* _self_, _1ce2620e9_dataCheckpoint* _3538_c) {
	(*((*(_self_))._field_boundary))=(*(_3538_c))._field_boundary;
	(*((*(_self_))._field_nils))=(*(_3538_c))._field_nils;
	(*((*(_self_))._field_dynamic))=(*(_3538_c))._field_dynamic;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce2625e4_data _Src) {
	_Stream << "data{";
	_Stream << "boundary:" << _Src._field_boundary << ", ";
	_Stream << "nils:" << _Src._field_nils << ", ";
	_Stream << "dynamic:" << _Src._field_dynamic;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce263b9a_boundaryVar _Src) {
	_Stream << "boundaryVar{";
	_Stream << "var:" << _Src._field_var << ", ";
	_Stream << "maxSize:" << _Src._field_maxSize;
	_Stream << "}";
	return _Stream;
}



inline void _1ce26444d_pushVar(_1ce263edb_boundary* _self_, jule::Uintptr _2426_var, jule::Any _2444_maxSize) {
	if (((!(_1ce2677d6_Access)) || (_2426_var == 0LLU))) {
		return;;
	};
	if ((!(_1ce265053_isValidBoundaryInfo(_2444_maxSize)))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b91c1de8:;
		if (it != expr_end) {
			_1ce263b9a_boundaryVar _3221_v = *it;
			{
				if ((_3221_v._field_var == _2426_var)) {
					{
						auto expr = &(_3221_v._field_maxSize);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b91c2b63:;
						if (it != expr_end) {
							jule::I32 _3421_i = it - expr->begin();
							jule::Any _3424_max = *it;
							{
								if (_1ce265790_fitsSize(_2444_maxSize, _3424_max)) {
									_3221_v._field_maxSize[_3421_i]=_2444_maxSize;
									return;;
								};
							}
							_iter_next_1b91c2b63:;
							++it;
							_3421_i++;
							goto _iter_begin_1b91c2b63;
						}
						_iter_end_1b91c2b63:;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = _3221_v._field_maxSize; __jule_push_dest.push(_2444_maxSize); };
					return;;
				};
			}
			_iter_next_1b91c1de8:;
			++it;
			goto _iter_begin_1b91c1de8;
		}
		_iter_end_1b91c1de8:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b91c2756:;
		if (it != expr_end) {
			_1ce263b9a_boundaryVar _4621_v = *it;
			{
				if ((_4621_v._field_var == 0LLU)) {
					_4621_v._field_var=_2426_var;
					{ jule::Slice<jule::Any> &__jule_push_dest = _4621_v._field_maxSize; __jule_push_dest.push(_2444_maxSize); };
					return;;
				};
			}
			_iter_next_1b91c2756:;
			++it;
			goto _iter_begin_1b91c2756;
		}
		_iter_end_1b91c2756:;
	};
	{ jule::Slice<_1ce263b9a_boundaryVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1ce263b9a_boundaryVar{._field_var=_2426_var, ._field_maxSize=jule::Slice<jule::Any>::make({_2444_maxSize})}); };
}



inline jule::Bool _1ce264b8a_fitsMaxSize(_1ce263edb_boundary* _self_, jule::Uintptr _7130_var, jule::Any _7144_expr) {
	if ((_7130_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b91c7508:;
			if (it != expr_end) {
				_1ce263b9a_boundaryVar _7320_v = *it;
				{
					if ((_7320_v._field_var == _7130_var)) {
						return (_1ce26541b_fitsMaxSize(_7320_v._field_maxSize, _7144_expr) != -1LL);;
					};
				}
				_iter_next_1b91c7508:;
				++it;
				goto _iter_begin_1b91c7508;
			}
			_iter_end_1b91c7508:;
		};
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce263edb_boundary _Src) {
	_Stream << "boundary{";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b593661c_Optimizer> static__1b5936a90_New(jule::Ptr<_1b57ae72b_IR>* _2624_ir) {
	return jule::new_ptr<_1b593661c_Optimizer>(_1b593661c_Optimizer{._field_ir=(*(_2624_ir))});;
}



inline void _1b5936d48_optimizeGlobal(_1b593661c_Optimizer* _self_, jule::Ptr<_1ce0b4105_Var>* _3238_v) {
	if ((!((*((*(_3238_v))))._field_Binded))) {
		static__1ce2550dc_optimize(&((*((*((*((*(_3238_v))))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1b5937101_optimizeFunction(_1b593661c_Optimizer* _self_, jule::Ptr<_1ce00792d_Fn>* _3840_func) {
	if ((*((*(_3840_func))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_3840_func))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b91cc80a:;
		if (it != expr_end) {
			jule::Ptr<_1ce00a832_FnIns> _4221_ins = *it;
			{
				jule::Ptr<_1ce24cb40_scopeOptimizer> _4317_so = static__1ce24d1b2_new((*(_4221_ins))._field_Scope);;
				_1ce25232b_optimize(_4317_so);
			}
			_iter_next_1b91cc80a:;
			++it;
			goto _iter_begin_1b91cc80a;
		}
		_iter_end_1b91cc80a:;
	};
}



inline void _1b59373a9_optimizeStruct(_1b593661c_Optimizer* _self_, jule::Ptr<_1cdee2990_Struct>* _4838_s) {
	if ((*((*(_4838_s))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_4838_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b91cdeb0:;
		if (it != expr_end) {
			jule::Ptr<_1cdee571d_StructIns> _5221_ins = *it;
			{
				{
					auto expr = &((*(_5221_ins))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b91ce895:;
					if (it != expr_end) {
						jule::Ptr<_1cdee4b6d_FieldIns> _5325_f = *it;
						{
							if (((*(_5325_f))._field_Default != nullptr)) {
								static__1ce2550dc_optimize(&((*(*_5325_f.alloc)._field_Default.alloc)._field_Model));
							};
						}
						_iter_next_1b91ce895:;
						++it;
						goto _iter_begin_1b91ce895;
					}
					_iter_end_1b91ce895:;
				};
				{
					auto expr = &((*_5221_ins.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b91cecd5:;
					if (it != expr_end) {
						jule::Ptr<_1ce00792d_Fn> _5825_m = *it;
						{
							_1b5937101_optimizeFunction(_self_, &(_5825_m));
						}
						_iter_next_1b91cecd5:;
						++it;
						goto _iter_begin_1b91cecd5;
					}
					_iter_end_1b91cecd5:;
				};
			}
			_iter_next_1b91cdeb0:;
			++it;
			goto _iter_begin_1b91cdeb0;
		}
		_iter_end_1b91cdeb0:;
	};
}



inline void _1b5937662_optimizeGlobals(_1b593661c_Optimizer* _self_, jule::Ptr<_1ce06ded3_Package>* _6439_p) {
	{
		auto expr = &((*((*(_6439_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b91ce532:;
		if (it != expr_end) {
			jule::Ptr<_1ce116894_SymbolTable> _6521_f = *it;
			{
				{
					auto expr = &((*(_6521_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b91d1e08:;
					if (it != expr_end) {
						jule::Ptr<_1ce0b4105_Var> _6625_v = *it;
						{
							_1b5936d48_optimizeGlobal(_self_, &(_6625_v));
						}
						_iter_next_1b91d1e08:;
						++it;
						goto _iter_begin_1b91d1e08;
					}
					_iter_end_1b91d1e08:;
				};
			}
			_iter_next_1b91ce532:;
			++it;
			goto _iter_begin_1b91ce532;
		}
		_iter_end_1b91ce532:;
	};
}



inline void _1b593791a_optimizeFunctions(_1b593661c_Optimizer* _self_, jule::Ptr<_1ce06ded3_Package>* _7241_p) {
	{
		auto expr = &((*((*(_7241_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b91d28ed:;
		if (it != expr_end) {
			jule::Ptr<_1ce116894_SymbolTable> _7321_f = *it;
			{
				{
					auto expr = &((*(_7321_f))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b91d3305:;
					if (it != expr_end) {
						jule::Ptr<_1ce00792d_Fn> _7425_func = *it;
						{
							_1b5937101_optimizeFunction(_self_, &(_7425_func));
						}
						_iter_next_1b91d3305:;
						++it;
						goto _iter_begin_1b91d3305;
					}
					_iter_end_1b91d3305:;
				};
			}
			_iter_next_1b91d28ed:;
			++it;
			goto _iter_begin_1b91d28ed;
		}
		_iter_end_1b91d28ed:;
	};
}



inline void _1b5937bc3_optimizeStructs(_1b593661c_Optimizer* _self_, jule::Ptr<_1ce06ded3_Package>* _8039_p) {
	{
		auto expr = &((*((*(_8039_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b91d3cea:;
		if (it != expr_end) {
			jule::Ptr<_1ce116894_SymbolTable> _8121_f = *it;
			{
				{
					auto expr = &((*(_8121_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b91d4702:;
					if (it != expr_end) {
						jule::Ptr<_1cdee2990_Struct> _8225_s = *it;
						{
							_1b59373a9_optimizeStruct(_self_, &(_8225_s));
						}
						_iter_next_1b91d4702:;
						++it;
						goto _iter_begin_1b91d4702;
					}
					_iter_end_1b91d4702:;
				};
			}
			_iter_next_1b91d3cea:;
			++it;
			goto _iter_begin_1b91d3cea;
		}
		_iter_end_1b91d3cea:;
	};
}



inline void _1b5937e7b_optimizePackage(_1b593661c_Optimizer* _self_, jule::Ptr<_1ce06ded3_Package>* _8839_p) {
	_1b5937662_optimizeGlobals(_self_, _8839_p);
	_1b593791a_optimizeFunctions(_self_, _8839_p);
	_1b5937bc3_optimizeStructs(_self_, _8839_p);
}



inline void _1b5938179_Optimize(_1b593661c_Optimizer* _self_) {
	_1b5938421_detectEnabled();
	if (_1ce266e78_Deadcode) {
		_1b592891c_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1b593641e_scopeEnabled || _1b5936155_exprEnabled)) {
		{
			auto expr = &((*((*(_self_))._field_ir))._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b91d66e3:;
			if (it != expr_end) {
				jule::Ptr<_1ce06b0ac_ImportInfo> _10425_u = *it;
				{
					if ((!((*(_10425_u))._field_Binded))) {
						_1b5937e7b_optimizePackage(_self_, &((*_10425_u.alloc)._field_Package));
					};
				}
				_iter_next_1b91d66e3:;
				++it;
				goto _iter_begin_1b91d66e3;
			}
			_iter_end_1b91d66e3:;
		};
		_1b5937e7b_optimizePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	};
	if (_1ce266e78_Deadcode) {
		_1b592de83_EliminateScopes(&((*(_self_))._field_ir));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1b593661c_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1b5938971_Reset(void) {
	jule::out(jule::Str::lit("\033[0m", 4));
}



inline void static__1b595d259_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__1b5938971_Reset();
}





std::ostream &operator<<(std::ostream &_Stream, _1b595e3d1_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1b5960c2e_LogFlat(_22a93672d_Log* _1424_l) {
	jule::outln((*(_1424_l))._field_Text);
}



inline void static__1b5960e60_LogError(_22a93672d_Log* _1925_l) {
	jule::out(jule::Str::lit("\033[31m", 5));
	jule::out(jule::Str::lit("error: ", 7));
	jule::out((*(_1925_l))._field_Text);
	static__1b5938971_Reset();
	if (((*(_1925_l))._field_Path.len() != 0LL)) {
		jule::out(jule::Str::lit("\n  --> ", 7));
		jule::out((*(_1925_l))._field_Path);
	};
	if ((((*(_1925_l))._field_Row != 0LL) && ((*(_1925_l))._field_Column != 0LL))) {
		jule::out(jule::Str::lit(":", 1));
		jule::out(_22be080a5_Itoa((*(_1925_l))._field_Row));
		jule::out(jule::Str::lit(":", 1));
		jule::out(_22be080a5_Itoa((*(_1925_l))._field_Column));
	};
	if (((*(_1925_l))._field_Line.len() != 0LL)) {
		jule::Str _3617_line = _22aaee3b8_TrimLeft((*(_1925_l))._field_Line, jule::Str::lit("\r\n\v\b ", 5));;
		jule::I32 _3717_offset = (((*(_1925_l))._field_Line.len() - _3617_line.len()) + 1LL);;
		jule::I32 _3817_oldLen = _3617_line.len();;
		_3617_line=_22aaee3b8_TrimLeft(_3617_line, jule::Str::lit("\t", 1));
		if ((_3817_oldLen != _3617_line.len())) {
			_3717_offset+=((_3817_oldLen - _3617_line.len()) << 3LLU);
		};
		jule::out(jule::Str::lit("\n  ", 3));
		jule::Str _4413_row = _22be080a5_Itoa((*(_1925_l))._field_Row);;
		jule::out(_4413_row);
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_3617_line);
		jule::out(jule::Str::lit("\n  ", 3));
		jule::out(_22aae7070_Repeat(jule::Str::lit(" ", 1), _4413_row.len()));
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_22aae7070_Repeat(jule::Str::lit(" ", 1), ((*(_1925_l))._field_Column - _3717_offset)));
		jule::out(jule::Str::lit("^", 1));
		if (((*(_1925_l))._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str::lit("\n  ", 3));
			jule::out(_22aae7070_Repeat(jule::Str::lit(" ", 1), _4413_row.len()));
			jule::out(jule::Str::lit(" | ", 3));
			static__1b595d259_Print(jule::Str::lit("\033[95m", 5), jule::Str::lit("suggestion: ", 12));
			jule::out((*(_1925_l))._field_Suggestion);
		};
	};
	jule::outln(jule::Str::lit("\n", 1));
}



inline void static__1b5961191_Log(_22a93672d_Log* _6520_l) {
	{
		auto &_match_expr{ (*(_6520_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I32>(0LL)) {
			_case_begin_1b91e3b40:;
			{
				static__1b5960c2e_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I32>(1LL)) {
			_case_begin_1b91e4338:;
			{
				static__1b5960e60_LogError(_6520_l);
			}
		}
		_match_end_1b91e425b:;
	};
}



inline void static__1b59613c2_PrintLogs(jule::Slice<_22a93672d_Log>* _7526_logs) {
	{
		auto expr = _7526_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b91e4932:;
		if (it != expr_end) {
			_22a93672d_Log *_7616_l = it;
			{
				static__1b5961191_Log(_7616_l);
			}
			_iter_next_1b91e4932:;
			++it;
			goto _iter_begin_1b91e4932;
		}
		_iter_end_1b91e4932:;
	};
	jule::out(jule::Str::lit("=== ", 4));
	jule::out(_22be080a5_Itoa((*(_7526_logs)).len()));
	jule::outln(jule::Str::lit(" error generated ===", 20));
}





std::ostream &operator<<(std::ostream &_Stream, _1b5960954_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b6283c6b_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1b6284442_Time static__1b62847e9_Unix(jule::U64 _9120_sec) {
	return _1b6284442_Time{._field_sec=_9120_sec};;
}



inline _1b6284442_Time static__1b6284a08_Now(void) {
	return static__1b62847e9_Unix(_1b6286532_unix());;
}



inline _1b6283c6b_AbsTime _1b62861e1_Abs(_1b6284442_Time* _self_) {
	jule::U64 _1279_secs = ((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _12813_days = (_1279_secs / 86400LLU);;
	jule::U64 _12913_remSecs = (_1279_secs % 86400LL);;
	if ((_12913_remSecs < 0LLU)) {
		_12913_remSecs+=86400LLU;
		(_12813_days)--;
	};
	jule::U64 _13513_qcCycles = (_12813_days / 146097LLU);;
	jule::U64 _13613_remDays = (_12813_days % 146097LL);;
	if ((_13613_remDays < 0LLU)) {
		_13613_remDays+=146097LLU;
		(_13513_qcCycles)--;
	};
	jule::U64 _14213_cCycles = (_13613_remDays / 36524LLU);;
	if ((_14213_cCycles == 4LLU)) {
		(_14213_cCycles)--;
	};
	_13613_remDays-=(_14213_cCycles * 36524LLU);
	jule::U64 _14813_qCycles = (_13613_remDays / 1461LLU);;
	if ((_14813_qCycles == 25LLU)) {
		(_14813_qCycles)--;
	};
	_13613_remDays-=(_14813_qCycles * 1461LLU);
	jule::U64 _15413_remYears = (_13613_remDays / 365LLU);;
	if ((_15413_remYears == 4LLU)) {
		(_15413_remYears)--;
	};
	_13613_remDays-=(_15413_remYears * 365LLU);
	jule::U64 _16013_leap = static_cast<jule::U64>(0LLU);;
	if (((_15413_remYears == 0LLU) && ((_14813_qCycles > 0LLU) || (_14213_cCycles == 0LLU)))) {
		_16013_leap=1LLU;
	};
	jule::U64 _16413_yDay = (((_13613_remDays + 31LLU) + 28LLU) + _16013_leap);;
	if ((_16413_yDay >= (365LLU + _16013_leap))) {
		_16413_yDay-=(365LLU + _16013_leap);
	};
	jule::U64 _16913_months = static_cast<jule::U64>(0LLU);;
	for (; (_1b62831cc_mdays[static_cast<jule::I32>(_16913_months)] <= _13613_remDays); (_16913_months)++) {
		{
			_13613_remDays-=_1b62831cc_mdays[static_cast<jule::I32>(_16913_months)];
		}
	_iter_next_1b9222dd3:;
	}
	_iter_end_1b9222dd3:;;
	_1b6283c6b_AbsTime _17413_t = _1b6283c6b_AbsTime{};;
	_17413_t._field_Year=((((_15413_remYears + (4LLU * _14813_qCycles)) + (100LLU * _14213_cCycles)) + (400LLU * _13513_qcCycles)) + 100LLU);
	_17413_t._field_Month=(_16913_months + 2LLU);
	if ((_17413_t._field_Month >= 12LLU)) {
		_17413_t._field_Month-=12LLU;
		(_17413_t._field_Year)++;
	};
	_17413_t._field_Month+=1LLU;
	_17413_t._field_Year+=1900LLU;
	_17413_t._field_Day=(_13613_remDays + 1LLU);
	_17413_t._field_WeekDay=((3LLU + _12813_days) % 7LL);
	if ((_17413_t._field_WeekDay < 0LLU)) {
		_17413_t._field_WeekDay+=7LLU;
	};
	_17413_t._field_YearDay=_16413_yDay;
	_17413_t._field_Hour=(_12913_remSecs / 3600LLU);
	_17413_t._field_Minute=((_12913_remSecs / 60LLU) % 60LL);
	_17413_t._field_Second=(_12913_remSecs % 60LL);
	return _17413_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b6284442_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b61ae56a_scopeCoder> static__1b61aeba8_new(jule::Ptr<_1b628d825_ObjectCoder>* _7024_oc) {
	return jule::new_ptr<_1b61ae56a_scopeCoder>(_1b61ae56a_scopeCoder{._field_oc=(*(_7024_oc))});;
}



inline void _1b930d562_iterHead(jule::Ptr<_1b61ae56a_scopeCoder> _self_, jule::Ptr<_1ce04b60e_RangeIter>* _7732_it, jule::Bool* _7744_ref, jule::Str _7755_begin) {
	_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1b628e480_addIndent((*_self_.alloc)._field_oc);
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1ce266b7b_Copy && _1b61bb0b0_isCopyOptimizable(&((*((*(_7732_it))))._field_Expr)))) {
		(*(_7744_ref))=true;
		{
			auto &_match_expr{ (*((*((*(_7732_it))))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1b93118c8:;
				{
					jule::Ptr<_1ce0b4105_Var> _8617_v = (*((*((*(_7732_it))))._field_Expr))._field_Model.unsafe_cast_ptr<_1ce0b4105_Var>();;
					if ((*(_8617_v))._field_Reference) {
						_1b61cb91c_model((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*((*(_7732_it))))._field_Expr))._field_Model);
						goto _match_end_1b9312038;
					};
					goto _case_begin_1b931208d;
				}
			}
			else {
				_case_begin_1b931208d:;
				{
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
					_1b61cb91c_model((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*((*(_7732_it))))._field_Expr))._field_Model);
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1b9312038:;
		};
	} else {
		_1b61c2050_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*((*(_7732_it))))._field_Expr))._field_Model);
	};
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("auto it = expr", 14));
	if ((*(_7744_ref))) {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("->", 2));
	} else {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	};
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("begin();\n", 9));
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("auto expr_end = expr", 20));
	if ((*(_7744_ref))) {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("->", 2));
	} else {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	};
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("end();\n", 7));
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, _7755_begin);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("if (it != expr_end) {\n", 22));
	_1b628e480_addIndent((*_self_.alloc)._field_oc);
	_1b628e87b_indent((*_self_.alloc)._field_oc);
}



inline void _1b61b037e_rangeIndexIter(jule::Ptr<_1b61ae56a_scopeCoder> _self_, jule::Ptr<_1ce04b60e_RangeIter>* _12639_it) {
	_22ab0b88c_StrBuilder _12713_sb = static__22ab0bb56_New(64LL);;
	static__1b61d55b3_iterBegin(&(_12713_sb), static_cast<jule::Uintptr>((*(_12639_it))));
	jule::Str _1299_begin = _22ab15cb4_Str(&_12713_sb);;
	_22ab15eb2_Clear(&_12713_sb);
	static__1b61d5b8a_iterNext(&(_12713_sb), static_cast<jule::Uintptr>((*(_12639_it))));
	jule::Str _1329_next = _22ab15cb4_Str(&_12713_sb);;
	jule::Bool _13413_ref = false;;
	_1b930d562_iterHead(_self_, _12639_it, &(_13413_ref), _1299_begin);
	if (((*((*(_12639_it))))._field_KeyA != nullptr)) {
		_1b6296b4c_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_12639_it))))._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			if (_13413_ref) {
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("it - expr->begin()", 18));
			} else {
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("it - expr.begin()", 17));
			};
		}));
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1b628e87b_indent((*_self_.alloc)._field_oc);
	};
	if (((*((*(_12639_it))))._field_KeyB != nullptr)) {
		(*(*((*(_12639_it))))._field_KeyB.alloc)._field_Reference=(_1ce266b7b_Copy && _1b61bb478_isIterCopyOptimizable(&((*((*(_12639_it))))._field_Expr), &((*((*(_12639_it))))._field_KeyB)));
		_1b6296b4c_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_12639_it))))._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			{
				if ((*(*((*(_12639_it))))._field_KeyB.alloc)._field_Reference) {
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("it", 2));
				} else {
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("*it", 3));
				};
			};
		}));
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1b628e87b_indent((*_self_.alloc)._field_oc);
	};
	_1b61ba93e_scope(_self_, (*((*(_12639_it))))._field_Scope);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, _1329_next);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("++it;\n", 6));
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	if (((*((*(_12639_it))))._field_KeyA != nullptr)) {
		static__1b61d52c7_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(_12639_it))))._field_KeyA);
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("++;\n", 4));
		_1b628e87b_indent((*_self_.alloc)._field_oc);
	};
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("goto ", 5));
	_1b628dec9_write((*_self_.alloc)._field_oc, _1299_begin);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1b628e67d_doneIndent((*_self_.alloc)._field_oc);
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	static__1b61d589e_iterEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_12639_it))));
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1b628e67d_doneIndent((*_self_.alloc)._field_oc);
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1b61b0637_rangeHashmapIter(jule::Ptr<_1b61ae56a_scopeCoder> _self_, jule::Ptr<_1ce04b60e_RangeIter>* _19341_it) {
	_22ab0b88c_StrBuilder _19413_sb = static__22ab0bb56_New(64LL);;
	static__1b61d55b3_iterBegin(&(_19413_sb), static_cast<jule::Uintptr>((*(_19341_it))));
	jule::Str _1969_begin = _22ab15cb4_Str(&_19413_sb);;
	_22ab15eb2_Clear(&_19413_sb);
	static__1b61d5b8a_iterNext(&(_19413_sb), static_cast<jule::Uintptr>((*(_19341_it))));
	jule::Str _1999_next = _22ab15cb4_Str(&_19413_sb);;
	jule::Bool _20113_ref = false;;
	_1b930d562_iterHead(_self_, _19341_it, &(_20113_ref), _1969_begin);
	if (((*((*(_19341_it))))._field_KeyA != nullptr)) {
		_1b6296b4c_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_19341_it))))._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("it->first", 9));
		}));
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1b628e87b_indent((*_self_.alloc)._field_oc);
	};
	if (((*((*(_19341_it))))._field_KeyB != nullptr)) {
		_1b6296b4c_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_19341_it))))._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("it->second", 10));
		}));
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1b628e87b_indent((*_self_.alloc)._field_oc);
	};
	_1b61ba93e_scope(_self_, (*((*(_19341_it))))._field_Scope);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, _1999_next);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("++it;\n", 6));
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("goto ", 5));
	_1b628dec9_write((*_self_.alloc)._field_oc, _1969_begin);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1b628e67d_doneIndent((*_self_.alloc)._field_oc);
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	static__1b61d589e_iterEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_19341_it))));
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1b628e67d_doneIndent((*_self_.alloc)._field_oc);
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1b61b08e0_strRuneIter(jule::Ptr<_1b61ae56a_scopeCoder> _self_, jule::Ptr<_1ce248795_StrRuneIter> _24035_it) {
	_22ab0b88c_StrBuilder _24113_sb = static__22ab0bb56_New(64LL);;
	static__1b61d55b3_iterBegin(&(_24113_sb), static_cast<jule::Uintptr>((*(_24035_it))._field_Base));
	jule::Str _2439_begin = _22ab15cb4_Str(&_24113_sb);;
	_22ab15eb2_Clear(&_24113_sb);
	static__1b61d5b8a_iterNext(&(_24113_sb), static_cast<jule::Uintptr>((*_24035_it.alloc)._field_Base));
	jule::Str _2469_next = _22ab15cb4_Str(&_24113_sb);;
	_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1b628e480_addIndent((*_self_.alloc)._field_oc);
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	jule::Bool _25213_ref = false;;
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1ce266b7b_Copy && _1b61bb0b0_isCopyOptimizable(&((*_24035_it.alloc)._field_Expr)))) {
		_25213_ref=true;
		{
			auto &_match_expr{ (*((*(_24035_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1b93421bc:;
				{
					jule::Ptr<_1ce0b4105_Var> _25817_v = (*((*(_24035_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1ce0b4105_Var>();;
					if ((*(_25817_v))._field_Reference) {
						_1b61cb91c_model((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_24035_it.alloc)._field_Expr))._field_Model);
						goto _match_end_1b934282c;
					};
					goto _case_begin_1b9342882;
				}
			}
			else {
				_case_begin_1b9342882:;
				{
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
					_1b61cb91c_model((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_24035_it.alloc)._field_Expr))._field_Model);
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1b934282c:;
		};
	} else {
		_1b61c2050_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_24035_it.alloc)._field_Expr))._field_Model);
	};
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("char *it = expr", 15));
	if (_25213_ref) {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("->", 2));
	} else {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	};
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("operator char*();\n", 18));
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("const char *end = it + expr", 27));
	if (_25213_ref) {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("->", 2));
	} else {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	};
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("len();\n", 7));
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	if (((*((*_24035_it.alloc)._field_Base))._field_KeyA != nullptr)) {
		_1b6296b4c_varInitExpr((*_self_.alloc)._field_oc, &((*(*_24035_it.alloc)._field_Base.alloc)._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("0", 1));
		}));
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1b628e87b_indent((*_self_.alloc)._field_oc);
	};
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("std::size_t len;\n", 17));
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	if (((*(*_24035_it.alloc)._field_Base.alloc)._field_KeyB != nullptr)) {
		_1b6296b4c_varInitExpr((*_self_.alloc)._field_oc, &((*(*_24035_it.alloc)._field_Base.alloc)._field_KeyB), nullptr);
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1b628e87b_indent((*_self_.alloc)._field_oc);
	};
	_1b628dec9_write((*_self_.alloc)._field_oc, _2439_begin);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("std::tie(", 9));
	if (((*(*_24035_it.alloc)._field_Base.alloc)._field_KeyB != nullptr)) {
		static__1b61d52c7_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(*_24035_it.alloc)._field_Base.alloc)._field_KeyB);
	} else {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("std::ignore", 11));
	};
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(", len) = jule::utf8_decode_rune_str(it, end - it", 48));
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(");\n", 3));
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("if (it < end) {\n", 16));
	_1b628e480_addIndent((*_self_.alloc)._field_oc);
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b61ba93e_scope(_self_, (*(*_24035_it.alloc)._field_Base.alloc)._field_Scope);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, _2469_next);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("it += len;\n", 11));
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	if (((*(*_24035_it.alloc)._field_Base.alloc)._field_KeyA != nullptr)) {
		static__1b61d52c7_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(*_24035_it.alloc)._field_Base.alloc)._field_KeyA);
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("++;\n", 4));
		_1b628e87b_indent((*_self_.alloc)._field_oc);
	};
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("goto ", 5));
	_1b628dec9_write((*_self_.alloc)._field_oc, _2439_begin);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1b628e67d_doneIndent((*_self_.alloc)._field_oc);
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
	_1b628e67d_doneIndent((*_self_.alloc)._field_oc);
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1b61b0b98_ifCase(jule::Ptr<_1b61ae56a_scopeCoder> _self_, jule::Ptr<_1ce049be5_If> _34830_i) {
	if (((*(_34830_i))._field_Expr != nullptr)) {
		_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		_1b61c2050_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_34830_i.alloc)._field_Expr);
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(") ", 2));
	};
	_1b61ba93e_scope(_self_, (*_34830_i.alloc)._field_Scope);
}



inline void _1b61b0e51_conditional(jule::Ptr<_1b61ae56a_scopeCoder> _self_, jule::Ptr<_1ce04a410_Conditional> _35735_c) {
	jule::Bool _35813_writed = false;;
	{
		auto expr = &((*(_35735_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9362cae:;
		if (it != expr_end) {
			jule::Ptr<_1ce049be5_If> _35921_elif = *it;
			{
				if ((_35921_elif == nullptr)) {
					goto _iter_next_1b9362cae;
				};
				if (_35813_writed) {
					_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
				};
				_35813_writed=true;
				_1b61b0b98_ifCase(_self_, _35921_elif);
			}
			_iter_next_1b9362cae:;
			++it;
			goto _iter_begin_1b9362cae;
		}
		_iter_end_1b9362cae:;
	};
	if (((*_35735_c.alloc)._field_Default != nullptr)) {
		if (_35813_writed) {
			_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(" else ", 6));
		};
		_1b61ba93e_scope(_self_, (*(*_35735_c.alloc)._field_Default.alloc)._field_Scope);
	};
}



inline void _1b61b1209_infIter(jule::Ptr<_1b61ae56a_scopeCoder> _self_, jule::Ptr<_1ce04a70c_InfIter> _37731_it) {
	_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("for (;;) {\n", 11));
	_1b628e480_addIndent((*_self_.alloc)._field_oc);
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b61ba93e_scope(_self_, (*(_37731_it))._field_Scope);
	_1b628e67d_doneIndent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	static__1b61d5b8a_iterNext(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_37731_it));
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	static__1b61d589e_iterEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_37731_it));
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(":;", 2));
}



inline void _1b61b14b2_whileIter(jule::Ptr<_1b61ae56a_scopeCoder> _self_, jule::Ptr<_1ce04abb3_WhileIter> _39433_it) {
	if ((((*(_39433_it))._field_Expr != nullptr) && ((*_39433_it.alloc)._field_Next == nullptr))) {
		_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("while (", 7));
		_1b61c2050_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_39433_it.alloc)._field_Expr);
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(") {", 3));
	} else {
		_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
		if (((*(_39433_it))._field_Expr != nullptr)) {
			_1b61c2050_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_39433_it.alloc)._field_Expr);
		};
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("; ", 2));
		if (((*_39433_it.alloc)._field_Next != nullptr)) {
			_1b61b5571_st(_self_, (*_39433_it.alloc)._field_Next);
		};
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(") {", 3));
	};
	if (((*((*(_39433_it))._field_Scope))._field_Stmts.len() == 0LL)) {
		_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1b628e480_addIndent((*_self_.alloc)._field_oc);
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b61ba93e_scope(_self_, (*_39433_it.alloc)._field_Scope);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1b628e67d_doneIndent((*_self_.alloc)._field_oc);
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	static__1b61d5b8a_iterNext(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_39433_it));
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	static__1b61d589e_iterEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_39433_it));
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(":;", 2));
}



inline void _1b61b176a_rangeIter(jule::Ptr<_1b61ae56a_scopeCoder> _self_, jule::Ptr<_1ce04b60e_RangeIter> _43333_it) {
	{
		
		if ((_1ce15137e_Slc((*((*(_43333_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b93786ed:;
			{
				_1b61b037e_rangeIndexIter(_self_, &(_43333_it));
			}
		}
		else if ((_1ce1510e8_Arr((*((*(_43333_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b93783bd:;
			{
				_1b61b037e_rangeIndexIter(_self_, &(_43333_it));
			}
		}
		else if ((_1ce151db8_Map((*((*(_43333_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b9378434:;
			{
				_1b61b0637_rangeHashmapIter(_self_, &(_43333_it));
			}
		}
		else {
			_case_begin_1b9378357:;
			{
				_1b61b037e_rangeIndexIter(_self_, &(_43333_it));
			}
		}
		_match_end_1b9378258:;
	};
}



inline void _1b61b1a23_cont(jule::Ptr<_1b61ae56a_scopeCoder> _self_, jule::Ptr<_1ce04b994_ContSt> _44624_c) {
	_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1b61d5b8a_iterNext(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_44624_c))._field_It);
}



inline void _1b61b1ccb_label(jule::Ptr<_1b61ae56a_scopeCoder> _self_, jule::Ptr<_1ce04c16a_Label> _45125_l) {
	static__1b61d5e76_label(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(_45125_l));
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(":", 1));
}



inline void _1b61b2084_gotoSt(jule::Ptr<_1b61ae56a_scopeCoder> _self_, jule::Ptr<_1ce04c544_GotoSt> _45626_gt) {
	_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1b61d5e76_label(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_45626_gt))._field_Label));
}



inline void _1b61b233c_postfix(jule::Ptr<_1b61ae56a_scopeCoder> _self_, jule::Ptr<_1ce04c91d_Postfix> _46131_p) {
	_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1b61c2050_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_46131_p))._field_Expr);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	_1b628dec9_write((*_self_.alloc)._field_oc, (*_46131_p.alloc)._field_Op);
}



inline void _1b61b25e5_assign(jule::Ptr<_1b61ae56a_scopeCoder> _self_, jule::Ptr<_1ce04cdc4_Assign> _46830_a) {
	_1b61c2050_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_46830_a))._field_L))._field_Model);
	_1b628dec9_write((*_self_.alloc)._field_oc, (*((*_46830_a.alloc)._field_Op))._field_Kind);
	_1b61c2050_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_46830_a.alloc)._field_R))._field_Model);
}



inline void _1b61b289d_mapLookupAssign(jule::Ptr<_1b61ae56a_scopeCoder> _self_, jule::Ptr<_1ce04d29d_MultiAssign>* _47440_a) {
	jule::Ptr<_1cdeec527_IndexingExprModel> _47513_iem = (*((*(_47440_a))))._field_R.cast_ptr<_1cdeec527_IndexingExprModel>(&__jule_any_type45);;
	_1b61c2050_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_47513_iem))._field_Expr))._field_Model);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(".lookup(", 8));
	_1b61c2050_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_47513_iem.alloc)._field_Index))._field_Model);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_47440_a))))._field_L[0LL] != nullptr)) {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
		_1b61c2050_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*((*(_47440_a))))._field_L[0LL]))._field_Model);
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("), ", 3));
	} else {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("nullptr, ", 9));
	};
	if (((*((*(_47440_a))))._field_L[1LL] != nullptr)) {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
		_1b61c2050_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*((*(_47440_a))))._field_L[1LL]))._field_Model);
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	} else {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b61b2b56_multiAssignTup(jule::Ptr<_1b61ae56a_scopeCoder> _self_, jule::Ptr<_1ce04d29d_MultiAssign>* _49739_a) {
	_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1b628e480_addIndent((*_self_.alloc)._field_oc);
	jule::Ptr<_1ce0002a5_TupleExprModel> _50113_tup = (*((*(_49739_a))))._field_R.cast_ptr<_1ce0002a5_TupleExprModel>(&__jule_any_type81);;
	{
		auto expr = &((*(_50113_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b938dcc9:;
		if (it != expr_end) {
			jule::I32 _50314_i = it - expr->begin();
			jule::Ptr<_1ce11bc0c_Data> _50321_r = *it;
			{
				_1b628e87b_indent((*_self_.alloc)._field_oc);
				jule::Ptr<_1ce11bc0c_Data> _50517_l = (*((*(_49739_a))))._field_L[_50314_i];;
				if ((_50517_l != nullptr)) {
					{
						auto &_match_expr{ (*(_50517_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1b9391aac:;
							{
								jule::Ptr<_1ce0b4105_Var> _50925_v = (*(_50517_l))._field_Model.unsafe_cast_ptr<_1ce0b4105_Var>();;
								if (((*(_50925_v))._field_Reference && (!(_1ce0b44ce_IsInitialized(_50925_v))))) {
									static__1b61d52c7_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _50925_v);
									_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(" = &(", 5));
									_1b61c2050_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_50321_r))._field_Model);
									_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(");\n", 3));
									(*((*(_49739_a))))._field_L[_50314_i]=nullptr;
									goto _iter_next_1b938dcc9;
								};
							}
						}
						_match_end_1b9391a57:;
					};
					_1b62a4451_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_50517_l.alloc)._field_Kind);
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(" ", 1));
					static__1b61d3528_toOut(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1b61add0b_assignArgName, static_cast<jule::Uintptr>(_50314_i));
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
				};
				_1b61c2050_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_50321_r.alloc)._field_Model);
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1b938dcc9:;
			++it;
			_50314_i++;
			goto _iter_begin_1b938dcc9;
		}
		_iter_end_1b938dcc9:;
	};
	{
		auto expr = &((*((*(_49739_a))))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9397882:;
		if (it != expr_end) {
			jule::I32 _53014_i = it - expr->begin();
			jule::Ptr<_1ce11bc0c_Data> _53021_l = *it;
			{
				if ((_53021_l == nullptr)) {
					goto _iter_next_1b9397882;
				};
				_1b628e87b_indent((*_self_.alloc)._field_oc);
				_1b61c2050_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_53021_l))._field_Model);
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
				static__1b61d3528_toOut(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1b61add0b_assignArgName, static_cast<jule::Uintptr>(_53014_i));
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1b9397882:;
			++it;
			_53014_i++;
			goto _iter_begin_1b9397882;
		}
		_iter_end_1b9397882:;
	};
	_1b628e67d_doneIndent((*_self_.alloc)._field_oc);
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
}



inline void _1b61b2e0e_multiAssignFn(jule::Ptr<_1b61ae56a_scopeCoder> _self_, jule::Ptr<_1ce04d29d_MultiAssign>* _54638_a) {
	_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1b628e480_addIndent((*_self_.alloc)._field_oc);
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	jule::Ptr<_1cdeebb97_FnCallExprModel> _55113_f = (*((*(_54638_a))))._field_R.cast_ptr<_1cdeebb97_FnCallExprModel>(&__jule_any_type34);;
	_1b5e5275e_codeMut1((*((*(*_self_.alloc)._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*((*(_55113_f))._field_Func))._field_Result));
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(" __jule_assign_result = ", 24));
	_1b61c2050_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*(_54638_a))))._field_R);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	jule::Ptr<_1ce15a894_Tuple> _55713_tup = _1ce15214e_Tup((*(*_55113_f.alloc)._field_Func.alloc)._field_Result.ptr());;
	{
		auto expr = &((*((*(_54638_a))))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b93a2293:;
		if (it != expr_end) {
			jule::I32 _55814_i = it - expr->begin();
			jule::Ptr<_1ce11bc0c_Data> _55821_l = *it;
			{
				if ((_55821_l != nullptr)) {
					;
					_1b628e87b_indent((*_self_.alloc)._field_oc);
					_1b61c2050_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_55821_l.alloc)._field_Model);
					{
						
						if (_1ce14d3d1_Equal((*(_55713_tup))._field_Types[_55814_i], (*_55821_l.alloc)._field_Kind)) {
							_case_begin_1b951e5ec:;
							{
								_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(" = __jule_assign_result.__jule_result_arg", 41));
								_1b628dec9_write((*_self_.alloc)._field_oc, _22be080a5_Itoa(_55814_i));
							}
						}
						else if (_1b61cdd1a_isAny(&((*_55821_l.alloc)._field_Kind))) {
							_case_begin_1b93a63c9:;
							{
								_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(" = jule::Any(__jule_assign_result.__jule_result_arg", 51));
								_1b628dec9_write((*_self_.alloc)._field_oc, _22be080a5_Itoa(_55814_i));
								_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(", &__jule_any_type", 18));
								_1b628dec9_write((*_self_.alloc)._field_oc, _22be080a5_Itoa(_1b629000d_pushAnyType((*_self_.alloc)._field_oc, (*(_55713_tup))._field_Types[_55814_i])));
								_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
							}
						}
						else {
							_case_begin_1b93a37d3:;
							{
								_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
								if ((_1ce151b32_Trait((*(_55713_tup))._field_Types[_55814_i].ptr()) != nullptr)) {
									jule::Ptr<_1ce01ac0a_Trait> _57729_t1 = _1ce151b32_Trait((*_55821_l.alloc)._field_Kind.ptr());;
									jule::Ptr<_1ce01ac0a_Trait> _57829_t2 = _1ce151b32_Trait((*_55713_tup.alloc)._field_Types[_55814_i].ptr());;
									_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_assign_result.__jule_result_arg", 38));
									_1b628dec9_write((*_self_.alloc)._field_oc, _22be080a5_Itoa(_55814_i));
									_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(".mask<", 6));
									static__1b61d433c_traitDecl(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _57729_t1);
									_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
									_1b62911c9_pushAndWriteMaskMapper((*_self_.alloc)._field_oc, _57729_t1, _57829_t2);
									_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
									goto _match_end_1b93a4806;
								};
								_1b62a4451_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_55821_l.alloc)._field_Kind);
								_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
								_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_assign_result.__jule_result_arg", 38));
								_1b628dec9_write((*_self_.alloc)._field_oc, _22be080a5_Itoa(_55814_i));
								_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
								_1b628dec9_write((*_self_.alloc)._field_oc, _22be080a5_Itoa(_1b6290d66_findTypeOffset((*_self_.alloc)._field_oc, _1ce151b32_Trait((*_55821_l.alloc)._field_Kind), (*_55713_tup.alloc)._field_Types[_55814_i])));
								_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
							}
						}
						_match_end_1b93a4806:;
					};
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
				};
			}
			_iter_next_1b93a2293:;
			++it;
			_55814_i++;
			goto _iter_begin_1b93a2293;
		}
		_iter_end_1b93a2293:;
	};
	_1b628e67d_doneIndent((*_self_.alloc)._field_oc);
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
}



inline void _1b61b31b7_multiAssign(jule::Ptr<_1b61ae56a_scopeCoder> _self_, jule::Ptr<_1ce04d29d_MultiAssign> _60535_a) {
	{
		auto &_match_expr{ (*(_60535_a))._field_R };
		
		if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1b95254b0:;
			{
				_1b61b289d_mapLookupAssign(_self_, &(_60535_a));
				return;;
			}
		}
		_match_end_1b952545a:;
	};
	{
		auto &_match_expr{ (*(_60535_a))._field_R };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1b9525559:;
			{
				_1b61b2b56_multiAssignTup(_self_, &(_60535_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1b952634b:;
			{
				_1b61b2e0e_multiAssignFn(_self_, &(_60535_a));
			}
		}
		else {
			_case_begin_1b9525a43:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:619:13"));;
			}
		}
		_match_end_1b95259dd:;
	};
}



inline jule::Fn<void(void)> _1b61b3508_matchExpr(jule::Ptr<_1b61ae56a_scopeCoder> _self_, jule::Ptr<_1ce04d90d_Match> _62333_m) {
	if ((!(_1ce11c614_IsConst((*(_62333_m))._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
		});;
	};
	if (((!(_22be1a65b_IsBool((*(*_62333_m.alloc)._field_Expr.alloc)._field_Constant.ptr()))) || (!(_22be18060_ReadBool((*(*_62333_m.alloc)._field_Expr.alloc)._field_Constant))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1b61c2050_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(*_62333_m.alloc)._field_Expr.alloc)._field_Model);
		});;
	};
	return nullptr;;
}



inline void _1b61b386b_case(jule::Ptr<_1b61ae56a_scopeCoder> _self_, jule::Ptr<_1ce04d90d_Match> _63328_m, jule::Ptr<_1ce04e436_Case> _63343_c) {
	if ((((*(_63343_c))._field_Exprs.len() != 0LL) && (!((*(_63328_m))._field_Comptime)))) {
		if ((((*_63328_m.alloc)._field_Cases.len() > 0LL) && ((*_63328_m.alloc)._field_Cases[0LL] == _63343_c))) {
			_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		} else {
			_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
		};
		{
			auto expr = &((*_63343_c.alloc)._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b952d243:;
			if (it != expr_end) {
				jule::I32 _64018_i = it - expr->begin();
				jule::Ptr<_1ce11bc0c_Data> _64025_expr = *it;
				{
					{
						
						if ((!((*_63328_m.alloc)._field_TypeMatch))) {
							_case_begin_1b9535a97:;
							{
								jule::Fn<void(void)> _64321_caseExpr = _1b61b3508_matchExpr(_self_, _63328_m);;
								if (_1ce11c955_GoodOperand((*_63328_m.alloc)._field_Expr.ptr(), &(_64025_expr))) {
									if ((_64321_caseExpr != nullptr)) {
										_64321_caseExpr();
										_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(" == ", 4));
									};
									_1b61c2050_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_64025_expr))._field_Model);
								} else {
									_1b61c2050_possibleRefExpr((*((*_self_.alloc)._field_oc))._field_ec, (*(_64025_expr))._field_Model);
									if ((_64321_caseExpr != nullptr)) {
										_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(" == ", 4));
										_64321_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1b952de14:;
							{
								_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
								jule::Ptr<_1ce14cbc7_TypeKind> _65925_tk = (*(_64025_expr))._field_Model.cast_ptr<_1ce14cbc7_TypeKind>(&__jule_any_type84);;
								if ((_1ce151b32_Trait((*((*_63328_m.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
									_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(".type_is(", 9));
									_1b61be635_boolean((*(*_self_.alloc)._field_oc.alloc)._field_ec, (_1ce1505ae_Sptr((*_64025_expr.alloc)._field_Kind) != nullptr));
									_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
									_1b628dec9_write((*_self_.alloc)._field_oc, _22be080a5_Itoa(_1b6290d66_findTypeOffset((*_self_.alloc)._field_oc, _1ce151b32_Trait((*(*_63328_m.alloc)._field_Expr.alloc)._field_Kind), (*_64025_expr.alloc)._field_Kind)));
									_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
								} else {
									jule::I32 _66725_j = _1b629000d_pushAnyType((*_self_.alloc)._field_oc, _65925_tk);;
									_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(".type == &__jule_any_type", 25));
									_1b628dec9_write((*_self_.alloc)._field_oc, _22be080a5_Itoa(_66725_j));
								};
							}
						}
						_match_end_1b952dd15:;
					};
					if ((((*_63343_c.alloc)._field_Exprs.len() - _64018_i) > 1LL)) {
						_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit(" || ", 4));
					};
				}
				_iter_next_1b952d243:;
				++it;
				_64018_i++;
				goto _iter_begin_1b952d243;
			}
			_iter_end_1b952d243:;
		};
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(") ", 2));
	} else if ((((*(_63328_m))._field_Default == _63343_c) && ((*_63328_m.alloc)._field_Cases.len() != 0LL))) {
		_1b628e87b_indent((*(_self_))._field_oc);
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("else ", 5));
	};
	_1b628e480_addIndent((*(_self_))._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("{\n", 2));
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	static__1b61d654d_caseBegin(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_63343_c));
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	if (((*((*(_63343_c))._field_Scope))._field_Stmts.len() > 0LL)) {
		_1b628e87b_indent((*_self_.alloc)._field_oc);
		_1b61ba93e_scope(_self_, (*_63343_c.alloc)._field_Scope);
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	};
	_1b628e67d_doneIndent((*_self_.alloc)._field_oc);
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1b61b3b24_matchSt(jule::Ptr<_1b61ae56a_scopeCoder> _self_, jule::Ptr<_1ce04d90d_Match> _70131_m) {
	if ((((*(_70131_m))._field_Cases.len() == 0LL) && ((*_70131_m.alloc)._field_Default == nullptr))) {
		return;;
	};
	if (((*_70131_m.alloc)._field_Comptime && (((*_70131_m.alloc)._field_Default == nullptr) || ((*((*((*_70131_m.alloc)._field_Default))._field_Scope))._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1b628e480_addIndent((*_self_.alloc)._field_oc);
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	if (((!((*_70131_m.alloc)._field_Comptime)) && (!(_1ce11c614_IsConst((*_70131_m.alloc)._field_Expr.ptr()))))) {
		if ((_1ce266b7b_Copy && _1b61bb0b0_isCopyOptimizable(&((*_70131_m.alloc)._field_Expr)))) {
			_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("auto &_match_expr{ ", 19));
		} else {
			_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("auto _match_expr{ ", 18));
		};
		_1b61c2050_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(*_70131_m.alloc)._field_Expr.alloc)._field_Model);
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(" };\n", 4));
		_1b628e87b_indent((*_self_.alloc)._field_oc);
	};
	if (((*_70131_m.alloc)._field_Cases.len() > 0LL)) {
		{
			auto expr = &((*_70131_m.alloc)._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b954859e:;
			if (it != expr_end) {
				jule::Ptr<_1ce04e436_Case> _72925_c = *it;
				{
					if ((_72925_c == nullptr)) {
						goto _iter_next_1b954859e;
					};
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
					_1b628e87b_indent((*_self_.alloc)._field_oc);
					_1b61b386b_case(_self_, _70131_m, _72925_c);
				}
				_iter_next_1b954859e:;
				++it;
				goto _iter_begin_1b954859e;
			}
			_iter_end_1b954859e:;
		};
	};
	if (((*_70131_m.alloc)._field_Default != nullptr)) {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1b61b386b_case(_self_, _70131_m, (*_70131_m.alloc)._field_Default);
	};
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	static__1b61d6262_matchEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_70131_m));
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(":;", 2));
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1b628e67d_doneIndent((*_self_.alloc)._field_oc);
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1b61b3dcc_fallSt(jule::Ptr<_1b61ae56a_scopeCoder> _self_, jule::Ptr<_1ce04eb2e_FallSt> _75626_f) {
	_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1b61d654d_caseBegin(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_75626_f))._field_DestCase);
}



inline void _1b61b4185_breakSt(jule::Ptr<_1b61ae56a_scopeCoder> _self_, jule::Ptr<_1ce04bd6d_BreakSt> _76127_b) {
	_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	if (((*(_76127_b))._field_It != 0LLU)) {
		static__1b61d589e_iterEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_76127_b.alloc)._field_It);
	} else {
		static__1b61d6262_matchEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_76127_b))._field_Mtch);
	};
}



inline void _1b61b443d_setResult(jule::Ptr<_1b61ae56a_scopeCoder> _self_, jule::Ptr<_1ce04eec5_RetSt> _77033_r) {
	if (((*((*((*((*(_77033_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
		_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = ", 21));
		_1b61c2050_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_77033_r.alloc)._field_Expr);
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
		_1b628e87b_indent((*_self_.alloc)._field_oc);
		return;;
	};
	{
		auto &_match_expr{ (*(_77033_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1b955339a:;
			{
				jule::Slice<jule::Ptr<_1ce11bc0c_Data>> _78017_datas = (*((*(_77033_r))._field_Expr.unsafe_cast_ptr<_1ce0002a5_TupleExprModel>()))._field_Datas;;
				{
					auto expr = &(_78017_datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b9556e70:;
					if (it != expr_end) {
						jule::I32 _78117_i = it - expr->begin();
						jule::Ptr<_1ce11bc0c_Data> _78120_data = *it;
						{
							_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1b628dec9_write((*_self_.alloc)._field_oc, _22be080a5_Itoa(_78117_i));
							_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
							_1b61c2050_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_78120_data))._field_Model);
							_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
							_1b628e87b_indent((*_self_.alloc)._field_oc);
						}
						_iter_next_1b9556e70:;
						++it;
						_78117_i++;
						goto _iter_begin_1b9556e70;
					}
					_iter_end_1b9556e70:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1b955604b:;
			{
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_func_result = std::move(", 31));
				_1b61cb91c_model((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_77033_r.alloc)._field_Expr);
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(");\n", 3));
			}
		}
		else {
			_case_begin_1b9555b83:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:794:13"));;
			}
		}
		_match_end_1b9555b2d:;
	};
}



inline void _1b61b46e6_retSt(jule::Ptr<_1b61ae56a_scopeCoder> _self_, jule::Ptr<_1ce04eec5_RetSt> _79829_r) {
	if (_1ce007da1_IsVoid((*((*(_79829_r))._field_Func))._field_Decl.ptr())) {
		if ((*(*(*_79829_r.alloc)._field_Func.alloc)._field_Decl.alloc)._field_Exceptional) {
			_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};", 31));
			return;;
		};
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("return;", 7));
		return;;
	} else if (((*((*((*((*(_79829_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 0LL)) {
		if ((*(*(*_79829_r.alloc)._field_Func.alloc)._field_Decl.alloc)._field_Exceptional) {
			_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
			_1b62a4451_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(*_79829_r.alloc)._field_Func.alloc)._field_Result);
			_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(">{.result=", 10));
			_1b61c2050_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_79829_r.alloc)._field_Expr);
			_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("};", 2));
		} else {
			_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
			_1b61c2050_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_79829_r.alloc)._field_Expr);
			_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
		};
		return;;
	};
	if (((*(_79829_r))._field_Expr != nullptr)) {
		_1b61b443d_setResult(_self_, _79829_r);
	};
	if ((*((*((*_79829_r.alloc)._field_Func))._field_Decl))._field_Exceptional) {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
		_1b5e5275e_codeMut1((*((*(*_self_.alloc)._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*(*_79829_r.alloc)._field_Func.alloc)._field_Result));
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(">{.result=__jule_func_result};", 30));
	} else {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("return __jule_func_result;", 26));
	};
}



inline void _1b61b499e_var(jule::Ptr<_1b61ae56a_scopeCoder> _self_, jule::Ptr<_1ce0b4105_Var> _83427_v) {
	if ((!((*(_83427_v))._field_Constant))) {
		_1b6296e05_var((*(_self_))._field_oc, _83427_v);
	};
}



inline void _1b61b4c57_mutSlicing(jule::Ptr<_1b61ae56a_scopeCoder> _self_, jule::Ptr<_1ce247486_MutSlicingExprModel> _84034_m) {
	_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1b61c2050_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_84034_m))._field_Expr);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(").mut_slice(", 12));
	if ((!(_2434dd82d_Production))) {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
		_1b6291482_locInfo((*_self_.alloc)._field_oc, &((*_84034_m.alloc)._field_Token));
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
	};
	_1b61c2050_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_84034_m.alloc)._field_Left);
	if (((*_84034_m.alloc)._field_Right != nullptr)) {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
		_1b61c2050_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_84034_m.alloc)._field_Right);
	};
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(");", 2));
}



inline void _1b61b5010_swap(jule::Ptr<_1b61ae56a_scopeCoder> _self_, jule::Ptr<_1ce246232_SwapExprModel> _85728_m) {
	_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("std::swap(", 10));
	_1b61c2050_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*(_85728_m))._field_Left))._field_Model);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	_1b61c2050_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_85728_m.alloc)._field_Right))._field_Model);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b61b52b8_exceptionalForwarding(jule::Ptr<_1b61ae56a_scopeCoder> _self_, jule::Ptr<_1ce245dad_ExceptionalForwardingExprModel> _86545_m) {
	_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	_1b61c3c33_pureFuncCall((*(*_self_.alloc)._field_oc.alloc)._field_ec, &((*(_86545_m))._field_Expr));
}



inline void _1b61b5571_st(jule::Ptr<_1b61ae56a_scopeCoder> _self_, jule::Any _87126_st) {
	if ((_87126_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _87126_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1b9573ba1:;
			{
				_1b61ba93e_scope(_self_, _87126_st.unsafe_cast_ptr<_1ce0497c7_Scope>());
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b95742bc:;
			{
				_1b61b499e_var(_self_, _87126_st.unsafe_cast_ptr<_1ce0b4105_Var>());
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b9574333:;
			{
				_1b61cb91c_model((*((*(_self_))._field_oc))._field_ec, (*(_87126_st.unsafe_cast_ptr<_1ce11bc0c_Data>()))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1b9574a5e:;
			{
				_1b61b0e51_conditional(_self_, _87126_st.unsafe_cast_ptr<_1ce04a410_Conditional>());
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1b9574ac5:;
			{
				_1b61b1209_infIter(_self_, _87126_st.unsafe_cast_ptr<_1ce04a70c_InfIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1b9574b3b:;
			{
				_1b61b14b2_whileIter(_self_, _87126_st.unsafe_cast_ptr<_1ce04abb3_WhileIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1b9574ba2:;
			{
				_1b61b176a_rangeIter(_self_, _87126_st.unsafe_cast_ptr<_1ce04b60e_RangeIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1b9574c18:;
			{
				_1b61b1a23_cont(_self_, _87126_st.unsafe_cast_ptr<_1ce04b994_ContSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1b9574c7e:;
			{
				_1b61b1ccb_label(_self_, _87126_st.unsafe_cast_ptr<_1ce04c16a_Label>());
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1b9574ce5:;
			{
				_1b61b2084_gotoSt(_self_, _87126_st.unsafe_cast_ptr<_1ce04c544_GotoSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1b9574d5b:;
			{
				_1b61b233c_postfix(_self_, _87126_st.unsafe_cast_ptr<_1ce04c91d_Postfix>());
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1b9574dc2:;
			{
				_1b61b25e5_assign(_self_, _87126_st.unsafe_cast_ptr<_1ce04cdc4_Assign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1b9574e38:;
			{
				_1b61b31b7_multiAssign(_self_, _87126_st.unsafe_cast_ptr<_1ce04d29d_MultiAssign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1b9574e9e:;
			{
				_1b61b3b24_matchSt(_self_, _87126_st.unsafe_cast_ptr<_1ce04d90d_Match>());
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1b9575026:;
			{
				_1b61b3dcc_fallSt(_self_, _87126_st.unsafe_cast_ptr<_1ce04eb2e_FallSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1b957509d:;
			{
				_1b61b4185_breakSt(_self_, _87126_st.unsafe_cast_ptr<_1ce04bd6d_BreakSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1b9575125:;
			{
				_1b61b46e6_retSt(_self_, _87126_st.unsafe_cast_ptr<_1ce04eec5_RetSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1b957519c:;
			{
				_1b61c9145_pushToSlice((*((*(_self_))._field_oc))._field_ec, _87126_st.unsafe_cast_ptr<_1ce247ee2_PushToSliceExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1b9575224:;
			{
				_1b61c93ed_appendToSlice((*((*(_self_))._field_oc))._field_ec, _87126_st.unsafe_cast_ptr<_1ce2483bb_AppendToSliceExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1b957529b:;
			{
				_1b61b4c57_mutSlicing(_self_, _87126_st.unsafe_cast_ptr<_1ce247486_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1b9575323:;
			{
				_1b61b5010_swap(_self_, _87126_st.unsafe_cast_ptr<_1ce246232_SwapExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1b957539a:;
			{
				_1b61b52b8_exceptionalForwarding(_self_, _87126_st.unsafe_cast_ptr<_1ce245dad_ExceptionalForwardingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1b9575422:;
			{
				_1b61b08e0_strRuneIter(_self_, _87126_st.unsafe_cast_ptr<_1ce248795_StrRuneIter>());
			}
		}
		else {
			_case_begin_1b957409c:;
			{
				_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1b9573d27:;
	};
}



inline void _1b61ba6ca_scopeStmts(jule::Ptr<_1b61ae56a_scopeCoder> _self_, jule::Ptr<_1ce0497c7_Scope>* _92735_s) {
	{
		auto expr = &((*((*(_92735_s))))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9582e13:;
		if (it != expr_end) {
			jule::Any _92821_st = *it;
			{
				_1b628e87b_indent((*(_self_))._field_oc);
				_1b61b5571_st(_self_, _92821_st);
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1b9582e13:;
			++it;
			goto _iter_begin_1b9582e13;
		}
		_iter_end_1b9582e13:;
	};
}



inline void _1b61ba93e_scope(jule::Ptr<_1b61ae56a_scopeCoder> _self_, jule::Ptr<_1ce0497c7_Scope> _93629_s) {
	_1b628e480_addIndent((*(_self_))._field_oc);
	if ((*(_93629_s))._field_Deferred) {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("__JULE_DEFER(", 13));
	};
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("{\n", 2));
	_1b61ba6ca_scopeStmts(_self_, &(_93629_s));
	_1b628e67d_doneIndent((*_self_.alloc)._field_oc);
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
	if ((*_93629_s.alloc)._field_Deferred) {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(");", 2));
	};
}



inline void _1b61babe7_funcScope(jule::Ptr<_1b61ae56a_scopeCoder> _self_, jule::Ptr<_1ce00a832_FnIns> _95233_f) {
	if (((*(_95233_f))._field_Scope == nullptr)) {
		return;;
	};
	_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1b628e480_addIndent((*_self_.alloc)._field_oc);
	if ((!(_1ce007da1_IsVoid((*_95233_f.alloc)._field_Decl.ptr())))) {
		jule::Ptr<_1ce15a894_Tuple> _95917_tup = _1ce15214e_Tup((*_95233_f.alloc)._field_Result.ptr());;
		if ((_95917_tup != nullptr)) {
			_1b628e87b_indent((*_self_.alloc)._field_oc);
			_1b5e52088_tup((*((*(*_self_.alloc)._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _95917_tup);
			_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(" __jule_func_result;\n", 21));
			{
				auto expr = &((*_95917_tup.alloc)._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b958c291:;
				if (it != expr_end) {
					jule::I32 _96422_i = it - expr->begin();
					jule::Ptr<_1ce14cbc7_TypeKind> _96429_t = *it;
					{
						if (_1b5e54b5c_shouldInitialized(&(_96429_t))) {
							_1b628e87b_indent((*_self_.alloc)._field_oc);
							_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1b628dec9_write((*_self_.alloc)._field_oc, _22be080a5_Itoa(_96422_i));
							_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
							_1b61cbbc5_initExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, _96429_t);
							_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
						};
					}
					_iter_next_1b958c291:;
					++it;
					_96422_i++;
					goto _iter_begin_1b958c291;
				}
				_iter_end_1b958c291:;
			};
		} else if (((*((*(*_95233_f.alloc)._field_Decl.alloc)._field_Result))._field_Idents.len() == 1LL)) {
			_1b628e87b_indent((*_self_.alloc)._field_oc);
			_1b62a4451_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_95233_f.alloc)._field_Result);
			_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(" __jule_func_result", 19));
			if (_1b5e54b5c_shouldInitialized(&((*_95233_f.alloc)._field_Result))) {
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
				_1b61cbbc5_initExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_95233_f.alloc)._field_Result);
			};
			_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
		};
	};
	_1b61ba6ca_scopeStmts(_self_, &((*_95233_f.alloc)._field_Scope));
	if (((*(*_95233_f.alloc)._field_Decl.alloc)._field_Exceptional && _1ce007da1_IsVoid((*_95233_f.alloc)._field_Decl))) {
		_1b628e87b_indent((*_self_.alloc)._field_oc);
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("return jule::VoidExceptional{};\n", 32));
	};
	_1b628e67d_doneIndent((*_self_.alloc)._field_oc);
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}





std::ostream &operator<<(std::ostream &_Stream, _1b61ae56a_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b61bdc0b_exprCoder> static__1b61be0c4_new(jule::Ptr<_1b628d825_ObjectCoder>* _10924_oc) {
	return jule::new_ptr<_1b61bdc0b_exprCoder>(_1b61bdc0b_exprCoder{._field_oc=(*(_10924_oc))});;
}



inline void _1b61be37c_string(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_22be1616d_Const>* _11527_c) {
	jule::Str _1169_content = _22be182e6_ReadStr((*(_11527_c)).ptr());;
	if ((_1169_content.len() == 0LL)) {
		_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		return;;
	};
	jule::Str _1219_len = _22be07cdb_FmtInt(static_cast<jule::I64>(_1169_content.len()), 10LL);;
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::Str", 9));
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("::lit(", 6));
	_1b61cc9b7_cstrLit(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1169_content);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	_1b628dec9_write((*_self_.alloc)._field_oc, _1219_len);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b61be635_boolean(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Bool _13027_b) {
	if (_13027_b) {
		_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("true", 4));
	} else {
		_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
	};
}



inline void _1b61be833_nilLit(jule::Ptr<_1b61bdc0b_exprCoder> _self_) {
	_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
}



inline jule::Bool _1b61beb74_ftoaSpecialCases(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::F64* _14237_x) {
	{
		
		if (_22bdac18b_IsNaN((*(_14237_x)))) {
			_case_begin_1b95b23d7:;
			{
				_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("NAN", 3));
			}
		}
		else if (_22bdac81d_IsInf((*(_14237_x)), 1LL)) {
			_case_begin_1b95b2481:;
			{
				_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("INFINITY", 8));
			}
		}
		else if (_22bdac81d_IsInf((*(_14237_x)), -1LL)) {
			_case_begin_1b95b2508:;
			{
				_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1b95b234e:;
			{
				return false;;
			}
		}
		_match_end_1b95b2250:;
	};
	return true;;
}



inline void _1b61bee2c_float32(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_22be1616d_Const>* _15628_c) {
	jule::F64 _1579_x = _22be18d30_AsF64((*(_15628_c)).ptr());;
	if (_1b61beb74_ftoaSpecialCases(_self_, &(_1579_x))) {
		return;;
	};
	{
		
		if ((_1579_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1b95b661c:;
			{
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F32", 13));
			}
		}
		else if ((_1579_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1b95b56d7:;
			{
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1b95b5671:;
			{
				_1b61ccd5d_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _1579_x, 32LL);
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("f", 1));
			}
		}
		_match_end_1b95b552d:;
	};
}



inline void _1b61c01d5_float64(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_22be1616d_Const>* _17528_c) {
	jule::F64 _1769_x = _22be18d30_AsF64((*(_17528_c)).ptr());;
	if (_1b61beb74_ftoaSpecialCases(_self_, &(_1769_x))) {
		return;;
	};
	{
		
		if ((_1769_x == jule::MAX_F64)) {
			_case_begin_1b95b909d:;
			{
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F64", 13));
			}
		}
		else if ((_1769_x == jule::MIN_F64)) {
			_case_begin_1b95b8bc4:;
			{
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1b95b8b5d:;
			{
				_1b61ccd5d_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _1769_x, 64LL);
			}
		}
		_match_end_1b95b8a1a:;
	};
}



inline void _1b61c048d_constant(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_22be1616d_Const> _19332_c) {
	{
		
		if (_22be1a8e2_IsStr(_19332_c.ptr())) {
			_case_begin_1b95bae07:;
			{
				_1b61be37c_string(_self_, &(_19332_c));
			}
		}
		else if (_22be1a65b_IsBool(_19332_c.ptr())) {
			_case_begin_1b95bae6d:;
			{
				_1b61be635_boolean(_self_, _22be18060_ReadBool(_19332_c));
			}
		}
		else if (_22be1ab78_IsF64(_19332_c.ptr())) {
			_case_begin_1b95baed4:;
			{
				{
					
					if ((*_19332_c.alloc)._field_Kind.equal("f32", 3)) {
						_case_begin_1b95bd899:;
						{
							_1b61bee2c_float32(_self_, &(_19332_c));
						}
					}
					else {
						_case_begin_1b95bd525:;
						{
							_1b61c01d5_float64(_self_, &(_19332_c));
						}
					}
					_match_end_1b95bd426:;
				};
			}
		}
		else if (_22be1a13e_IsI64(_19332_c.ptr())) {
			_case_begin_1b95bb04a:;
			{
				_1b61cd149_itoa(&((*((*(_self_))._field_oc))._field_Buf), _22be17a43_ReadI64(_19332_c));
			}
		}
		else if (_22be1a3c5_IsU64(_19332_c.ptr())) {
			_case_begin_1b95bb0b1:;
			{
				_1b61cd435_utoa(&((*((*(_self_))._field_oc))._field_Buf), _22be17cc9_ReadU64(_19332_c));
			}
		}
		else if (_22be1ae0e_IsNil(_19332_c.ptr())) {
			_case_begin_1b95bb127:;
			{
				_1b61be833_nilLit(_self_);
			}
		}
		else {
			_case_begin_1b95bad91:;
			{
				_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1b95baca3:;
	};
}



inline void _1b61c08ab_divByZeroBinary(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1cdeab4b4_Token>* _21736_op, jule::Ptr<_1cdee96bc_OperandExprModel>* _21753_l, jule::Ptr<_1cdee96bc_OperandExprModel>* _21780_r) {
	_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("jule::", 6));
	{
		auto &_match_expr{ (*((*(_21736_op))))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_1b95c1b99:;
			{
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("div(", 4));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU) || _match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1b95c2639:;
			{
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("mod(", 4));
			}
		}
		_match_end_1b95c25b2:;
	};
	if ((!(_2434dd82d_Production))) {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
		_1b6291482_locInfo((*_self_.alloc)._field_oc, _21736_op);
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\",", 2));
	};
	_1b61c2050_possibleRefExpr(_self_, (*((*(_21753_l))))._field_Model);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
	_1b61c2050_possibleRefExpr(_self_, (*((*(_21780_r))))._field_Model);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b61c0b64_unsafeBinary(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1cdee9bb7_BinaryExprModel> _23936_m) {
	if ((((*((*(_23936_m))._field_Op))._field_Id == static_cast<jule::U32>(50LLU)) || ((*(*_23936_m.alloc)._field_Op.alloc)._field_Id == static_cast<jule::U32>(51LLU)))) {
		if (_1b61cdd1a_isAny(&((*((*_23936_m.alloc)._field_Left))._field_Kind))) {
			if (((!(_1ce14dca5_IsNil((*((*_23936_m.alloc)._field_Right))._field_Kind.ptr()))) && (!(_1b61cdd1a_isAny(&((*(*_23936_m.alloc)._field_Right.alloc)._field_Kind)))))) {
				_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				if (((*(*_23936_m.alloc)._field_Op.alloc)._field_Id == static_cast<jule::U32>(51LLU))) {
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("!", 1));
				};
				jule::I32 _24921_i = _1b629000d_pushAnyType((*_self_.alloc)._field_oc, (*(*_23936_m.alloc)._field_Right.alloc)._field_Kind);;
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_any_type", 15));
				_1b628dec9_write((*_self_.alloc)._field_oc, _22be080a5_Itoa(_24921_i));
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("_compare(", 9));
				_1b61c2050_possibleRefExpr(_self_, (*(*_23936_m.alloc)._field_Left.alloc)._field_Model);
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
				_1b61c2050_possibleRefExpr(_self_, (*(*_23936_m.alloc)._field_Right.alloc)._field_Model);
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("))", 2));
				return;;
			};
		};
	};
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1b61c2050_possibleRefExpr(_self_, (*(*_23936_m.alloc)._field_Left.alloc)._field_Model);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(" ", 1));
	_1b628dec9_write((*_self_.alloc)._field_oc, (*(*_23936_m.alloc)._field_Op.alloc)._field_Kind);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(" ", 1));
	_1b61c2050_possibleRefExpr(_self_, (*(*_23936_m.alloc)._field_Right.alloc)._field_Model);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b61c0e1c_binary(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1cdee9bb7_BinaryExprModel> _27030_m) {
	{
		auto &_match_expr{ (*((*(_27030_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1b95d37e3:;
			{
				if ((_1ce15189b_Struct((*((*(_27030_m))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1b61c08ab_divByZeroBinary(_self_, &((*_27030_m.alloc)._field_Op), &((*_27030_m.alloc)._field_Left), &((*_27030_m.alloc)._field_Right));
					return;;
				};
			}
		}
		_match_end_1b95d3738:;
	};
	_1b61c0b64_unsafeBinary(_self_, _27030_m);
}



inline void _1b61c11c5_var(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1ce0b4105_Var> _28227_m) {
	if ((*(_28227_m))._field_Binded) {
		jule::Ptr<_1cdec0eac_Directive> _28413_d = _1b5e544ca_findDirective(&((*_28227_m.alloc)._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_28413_d != nullptr)) {
			_1b628e282_writeBytes((*(_self_))._field_oc, _1b629ad71_concatAllParts((*_28413_d.alloc)._field_Args));
			_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1b61d52c7_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _28227_m);
}



inline void _1b61c147d_structureIns(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1cdee571d_StructIns> _29336_m) {
	_1b62a2707_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _29336_m);
}



inline void _1b61c1736_unary(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1cdeea091_UnaryExprModel> _29729_m) {
	{
		auto &_match_expr{ (*((*(_29729_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1b93dd5ed:;
			{
				_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("(~(", 3));
				_1b61c2050_possibleRefExpr(_self_, (*((*(_29729_m))._field_Expr))._field_Model);
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1b93ddbd6:;
			{
				if ((_2434dd82d_Production || (_1ce1505ae_Sptr((*((*(_29729_m))._field_Expr))._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1b93ddb09;
				};
				_1b61c2050_possibleRefExpr(_self_, (*(*_29729_m.alloc)._field_Expr.alloc)._field_Model);
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(".get(\"", 6));
				_1b6291482_locInfo((*_self_.alloc)._field_oc, &((*_29729_m.alloc)._field_Op));
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\")", 2));
				return;;
			}
		}
		_match_end_1b93ddb09:;
	};
	_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1b628dec9_write((*_self_.alloc)._field_oc, (*((*(_29729_m))._field_Op))._field_Kind);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1b61c2050_possibleRefExpr(_self_, (*((*_29729_m.alloc)._field_Expr))._field_Model);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("))", 2));
}



inline void _1b61c19de_structureLit(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1cdeea965_StructLitExprModel> _32136_m) {
	if ((*((*((*(_32136_m))._field_Strct))._field_Decl))._field_Binded) {
		_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	};
	static__1b61d4c00_structureIns(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*_32136_m.alloc)._field_Strct));
	if ((*(*(*_32136_m.alloc)._field_Strct.alloc)._field_Decl.alloc)._field_Binded) {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	};
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
	if (((*_32136_m.alloc)._field_Args.len() > 0LL)) {
		_julec_label_1b93e8839:;
		{
			auto expr = &((*(*_32136_m.alloc)._field_Strct.alloc)._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b93e89d2:;
			if (it != expr_end) {
				jule::I32 _33417_i = it - expr->begin();
				jule::Ptr<_1cdee4b6d_FieldIns> _33420_f = *it;
				{
					{
						auto expr = &((*_32136_m.alloc)._field_Args);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b93e9829:;
						if (it != expr_end) {
							jule::Ptr<_1cdeea5be_StructArgExprModel> _33529_arg = *it;
							{
								if (((*(_33529_arg))._field_Field == _33420_f)) {
									_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
									static__1b61d4edb_field(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*((*_33529_arg.alloc)._field_Field))._field_Decl));
									_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("=", 1));
									_1b61c2050_possibleRefExpr(_self_, (*((*_33529_arg.alloc)._field_Expr))._field_Model);
									if ((((*(*_32136_m.alloc)._field_Strct.alloc)._field_Fields.len() - _33417_i) > 1LL)) {
										_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
									};
									goto _iter_next_1b93e89d2;
								};
							}
							_iter_next_1b93e9829:;
							++it;
							goto _iter_begin_1b93e9829;
						}
						_iter_end_1b93e9829:;
					};
				}
				_iter_next_1b93e89d2:;
				++it;
				_33417_i++;
				goto _iter_begin_1b93e89d2;
			}
			_iter_end_1b93e89d2:;
		};
	};
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1b61c1c97_allocStructure(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1cdeeac62_AllocStructLitExprModel> _35238_m) {
	_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	static__1b61d4c00_structureIns(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*((*(_35238_m))._field_Lit))._field_Strct));
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
	_1b61c19de_structureLit(_self_, (*_35238_m.alloc)._field_Lit);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b61c2050_possibleRefExpr(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Any _36035_expr) {
	{
		auto &_match_expr{ _36035_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b9401b83:;
			{
				jule::Ptr<_1ce0b4105_Var> _36313_v = _36035_expr.unsafe_cast_ptr<_1ce0b4105_Var>();;
				if ((*(_36313_v))._field_Reference) {
					_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("(*(", 3));
					_1b61cb91c_model(_self_, _36035_expr);
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("))", 2));
					return;;
				};
			}
		}
		_match_end_1b9401b2d:;
	};
	_1b61cb91c_model(_self_, _36035_expr);
}



inline void _1b61c246d_castTraitFromTrait(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1cdeeb2e5_CastingExprModel>* _37443_m, jule::Ptr<_1ce01ac0a_Trait> _37469_t1, jule::Ptr<_1ce01ac0a_Trait> _37485_t2) {
	_1b61c2050_possibleRefExpr(_self_, (*((*((*(_37443_m))))._field_Expr))._field_Model);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(".mask<", 6));
	static__1b61d433c_traitDecl(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _37469_t1);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
	_1b62911c9_pushAndWriteMaskMapper((*_self_.alloc)._field_oc, _37469_t1, _37485_t2);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b61c2726_casting(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1cdeeb2e5_CastingExprModel> _38931_m) {
	{
		
		if (_1b61cdd1a_isAny(&((*(_38931_m))._field_Kind))) {
			_case_begin_1b94073c5:;
			{
				if (_1ce14dca5_IsNil((*_38931_m.alloc)._field_ExprKind.ptr())) {
					_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("jule::Any()", 11));
					return;;
				};
				if ((_1ce150d62_TypeEnum((*_38931_m.alloc)._field_ExprKind) != nullptr)) {
					_1b61c2050_possibleRefExpr(_self_, (*((*_38931_m.alloc)._field_Expr))._field_Model);
					return;;
				};
				jule::I32 _40013_i = _1b629000d_pushAnyType((*_self_.alloc)._field_oc, (*_38931_m.alloc)._field_ExprKind);;
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::Any(", 10));
				{
					auto &_match_expr{ (*((*(_38931_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1b940a7c4:;
						{
							jule::Ptr<_1ce1557a1_Prim> _40417_prim = _1ce150328_Prim((*_38931_m.alloc)._field_ExprKind);;
							if (((_40417_prim != nullptr) && _22be15502_IsInt((*_40417_prim.alloc)._field_Kind))) {
								_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("static_cast<", 12));
								_1b629e79d_prim((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _40417_prim);
								_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
								_1b61c2050_possibleRefExpr(_self_, (*(*_38931_m.alloc)._field_Expr.alloc)._field_Model);
								_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1b940b2b9;
							};
							goto _case_begin_1b940b31e;
						}
					}
					else {
						_case_begin_1b940b31e:;
						{
							_1b61c2050_possibleRefExpr(_self_, (*(*_38931_m.alloc)._field_Expr.alloc)._field_Model);
						}
					}
					_match_end_1b940b2b9:;
				};
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(", &__jule_any_type", 18));
				_1b628dec9_write((*_self_.alloc)._field_oc, _22be080a5_Itoa(_40013_i));
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if (_1b61cdd1a_isAny(&((*(_38931_m))._field_ExprKind))) {
			_case_begin_1b940746e:;
			{
				_1b61c2050_possibleRefExpr(_self_, (*((*_38931_m.alloc)._field_Expr))._field_Model);
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1ce1505ae_Sptr((*_38931_m.alloc)._field_Kind.ptr()) != nullptr)) {
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1b62a4451_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_1ce1505ae_Sptr((*_38931_m.alloc)._field_Kind)))._field_Elem);
				} else {
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("cast<", 5));
					_1b62a4451_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_38931_m.alloc)._field_Kind);
				};
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
				if ((!(_2434dd82d_Production))) {
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
					_1b6291482_locInfo((*_self_.alloc)._field_oc, &((*_38931_m.alloc)._field_Token));
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
				};
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("&__jule_any_type", 16));
				_1b628dec9_write((*_self_.alloc)._field_oc, _22be080a5_Itoa(_1b629000d_pushAnyType((*_self_.alloc)._field_oc, (*_38931_m.alloc)._field_Kind)));
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1ce150845_Ptr((*(_38931_m))._field_ExprKind.ptr()) != nullptr) || (_1ce150845_Ptr((*_38931_m.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b94074d5:;
			{
				_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1b62a4451_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_38931_m.alloc)._field_Kind);
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")(", 2));
				_1b61c2050_possibleRefExpr(_self_, (*((*_38931_m.alloc)._field_Expr))._field_Model);
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if ((_1ce151b32_Trait((*(_38931_m))._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1b940754b:;
			{
				if ((_1ce151b32_Trait((*_38931_m.alloc)._field_Kind.ptr()) != nullptr)) {
					_1b61c246d_castTraitFromTrait(_self_, &(_38931_m), _1ce151b32_Trait((*_38931_m.alloc)._field_Kind), _1ce151b32_Trait((*_38931_m.alloc)._field_ExprKind));
					return;;
				};
				_1b61c2050_possibleRefExpr(_self_, (*((*_38931_m.alloc)._field_Expr))._field_Model);
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1ce1505ae_Sptr((*_38931_m.alloc)._field_Kind) != nullptr)) {
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1b62a4451_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_1ce1505ae_Sptr((*_38931_m.alloc)._field_Kind)))._field_Elem);
				} else {
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("cast<", 5));
					_1b62a4451_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_38931_m.alloc)._field_Kind);
				};
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
				if ((!(_2434dd82d_Production))) {
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
					_1b6291482_locInfo((*_self_.alloc)._field_oc, &((*_38931_m.alloc)._field_Token));
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
				};
				_1b628dec9_write((*_self_.alloc)._field_oc, _22be080a5_Itoa(_1b6290d66_findTypeOffset((*_self_.alloc)._field_oc, _1ce151b32_Trait((*_38931_m.alloc)._field_ExprKind), (*_38931_m.alloc)._field_Kind)));
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1ce151b32_Trait((*(_38931_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b94075b2:;
			{
				_1b62a4451_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_38931_m.alloc)._field_Kind);
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
				_1b61c2050_possibleRefExpr(_self_, (*((*_38931_m.alloc)._field_Expr))._field_Model);
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
				_1b628dec9_write((*_self_.alloc)._field_oc, _22be080a5_Itoa(_1b6290d66_findTypeOffset((*_self_.alloc)._field_oc, _1ce151b32_Trait((*_38931_m.alloc)._field_Kind), (*_38931_m.alloc)._field_ExprKind)));
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1b940724e:;
	};
	jule::Ptr<_1ce1557a1_Prim> _4819_prim = _1ce150328_Prim((*(_38931_m))._field_Kind.ptr());;
	jule::Ptr<_1ce1557a1_Prim> _4829_eprim = _1ce150328_Prim((*_38931_m.alloc)._field_ExprKind.ptr());;
	if ((((_4829_eprim != nullptr) && (_4819_prim != nullptr)) && _1ce158c38_IsStr(_4819_prim))) {
		if (_1ce157198_IsU8(_4829_eprim)) {
			_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_byte(", 21));
		} else {
			_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_rune(", 21));
		};
		_1b61c2050_possibleRefExpr(_self_, (*((*_38931_m.alloc)._field_Expr))._field_Model);
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("static_cast<", 12));
	_1b62a4451_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_38931_m.alloc)._field_Kind);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
	_1b61c2050_possibleRefExpr(_self_, (*(*_38931_m.alloc)._field_Expr.alloc)._field_Model);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b61c29ce_models(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Slice<jule::Any> _50030_args) {
	if ((_50030_args.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &(_50030_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9433566:;
		if (it != expr_end) {
			jule::I32 _50414_i = it - expr->begin();
			jule::Any _50421_a = *it;
			{
				_1b61c2050_possibleRefExpr(_self_, _50421_a);
				if (((_50030_args.len() - _50414_i) > 1LL)) {
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
				};
			}
			_iter_next_1b9433566:;
			++it;
			_50414_i++;
			goto _iter_begin_1b9433566;
		}
		_iter_end_1b9433566:;
	};
}



inline void _1b61c2c87_args(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1cdeebb97_FnCallExprModel>* _51229_m) {
	jule::I32 _51313_j = 0LL;;
	if (((((*((*((*(_51229_m))))._field_Func))._field_Owner != nullptr) && (!((*((*(*((*(_51229_m))))._field_Func.alloc)._field_Decl))._field_Statically))) || (((*(*((*(_51229_m))))._field_Func.alloc)._field_Params.len() > 0LL) && _1ce006575_IsSelf((*((*(*((*(_51229_m))))._field_Func.alloc)._field_Params[0LL]))._field_Decl.ptr())))) {
		(_51313_j)++;
	};
	{
		auto expr = &((*((*(_51229_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9436734:;
		if (it != expr_end) {
			jule::I32 _51813_i = it - expr->begin();
			jule::Any _51816_arg = *it;
			{
				jule::Ptr<_1ce009886_ParamIns> _51913_p = (*(*((*(_51229_m))))._field_Func.alloc)._field_Params[_51313_j];;
				if ((((*(_51913_p))._field_Decl != nullptr) && (*(*_51913_p.alloc)._field_Decl.alloc)._field_Reference)) {
					{
						auto &_match_expr{ _51816_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1b9439506:;
							{
								jule::Ptr<_1ce0b4105_Var> _52321_v = _51816_arg.unsafe_cast_ptr<_1ce0b4105_Var>();;
								if ((*(_52321_v))._field_Reference) {
									_1b61cb91c_model(_self_, _51816_arg);
									goto _julec_label_1b9438e62;
								};
							}
						}
						_match_end_1b94394a1:;
					};
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
					_1b61cb91c_model(_self_, _51816_arg);
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
					goto _julec_label_1b9438e62;
				};
				_1b61c2050_possibleRefExpr(_self_, _51816_arg);
				_julec_label_1b9438e62:;
				if ((((*((*(_51229_m))))._field_Args.len() - _51813_i) > 1LL)) {
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
				};
				(_51313_j)++;
			}
			_iter_next_1b9436734:;
			++it;
			_51813_i++;
			goto _iter_begin_1b9436734;
		}
		_iter_end_1b9436734:;
	};
}



inline void _1b61c3040_modelForCall(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Any _54336_expr) {
	{
		auto &_match_expr{ _54336_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b943e30d:;
			{
				_1b61c65b5_funcIns(_self_, _54336_expr.unsafe_cast_ptr<_1ce00a832_FnIns>());
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b943e154:;
			{
				jule::Ptr<_1cdeee738_StructSubIdentExprModel> _54917_ssie = _54336_expr.unsafe_cast_ptr<_1cdeee738_StructSubIdentExprModel>();;
				if (((*(_54917_ssie))._field_Method != nullptr)) {
					_1b61c65b5_funcIns(_self_, (*_54917_ssie.alloc)._field_Method);
					return;;
				};
			}
		}
		_match_end_1b943e297:;
	};
	_1b61c2050_possibleRefExpr(_self_, _54336_expr);
}



inline void _1b61c32e8_pushCallInf(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1cdeebb97_FnCallExprModel>* _55832_m) {
	if ((_2434dd82d_Production || (!((*((*((*(_55832_m))))._field_Func))._field_Anon)))) {
		_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		return;;
	};
	if ((*(*((*(_55832_m))))._field_Func.alloc)._field_Anon) {
		{
			auto &_match_expr{ (*((*(_55832_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type98) {
				_case_begin_1b9442d5b:;
				{
					if ((*((*((*((*((*((*(_55832_m))))._field_Expr.unsafe_cast_ptr<_1cdeee738_StructSubIdentExprModel>()))._field_Field))._field_Decl))._field_Owner))._field_Binded) {
						_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
						return;;
					};
				}
			}
			_match_end_1b9442d06:;
		};
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(".call", 5));
	};
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("(\"", 2));
	_1b6291482_locInfo((*_self_.alloc)._field_oc, &((*((*(_55832_m))))._field_Token));
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
	if (((*((*(_55832_m))))._field_Args.len() != 0LL)) {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	};
}



inline jule::Bool _1b61c3639_isWrapped(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1cdeebb97_FnCallExprModel>* _58134_m) {
	if ((((!(_1ce00bcb7_IsBuiltin((*((*(_58134_m))))._field_Func.ptr()))) && ((*((*(*((*(_58134_m))))._field_Func.alloc)._field_Decl))._field_Params.len() > 0LL)) && _1ce006575_IsSelf((*(*(*((*(_58134_m))))._field_Func.alloc)._field_Decl.alloc)._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_58134_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type98) {
				_case_begin_1b9447aa8:;
				{
					jule::Ptr<_1cdeee738_StructSubIdentExprModel> _58521_ssie = (*((*(_58134_m))))._field_Expr.unsafe_cast_ptr<_1cdeee738_StructSubIdentExprModel>();;
					{
						
						if (_1ce00680b_IsRef((*(*(*((*(_58134_m))))._field_Func.alloc)._field_Decl.alloc)._field_Params[0LL].ptr()) || (_1ce1505ae_Sptr((*((*(_58521_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1b9449747:;
							{
								goto _match_end_1b94489dd;
							}
						}
						else {
							_case_begin_1b9448a54:;
							{
								if ((_1ce15189b_Struct((*((*(_58521_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									if ((!((*(*_58521_ssie.alloc)._field_Expr.alloc)._field_Lvalue))) {
										_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("({ auto _wrap_copy = ", 21));
										_1b61cb91c_model(_self_, (*(*_58521_ssie.alloc)._field_Expr.alloc)._field_Model);
										_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1b94489dd:;
					};
				}
			}
			_match_end_1b9447a53:;
		};
	};
	return false;;
}



inline jule::Bool _1b61c397a_writeReceiver(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Any _60537_m) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ _60537_m };
		
		if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1b944e351:;
			{
				_1b61c2050_possibleRefExpr(_self_, (*((*(_60537_m.unsafe_cast_ptr<_1cdeea091_UnaryExprModel>()))._field_Expr))._field_Model);
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1b944e560:;
			{
				_1b61c2050_possibleRefExpr(_self_, (*((*((*(_60537_m.unsafe_cast_ptr<_1ce248a92_UnsafeDerefExprModel>()))._field_Base))._field_Expr))._field_Model);
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b944e4e9:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:614:13"));;
			}
		}
		_match_end_1b944e494:;
	};
}



inline void _1b61c3c33_pureFuncCall(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1cdeebb97_FnCallExprModel>* _61837_m) {
	jule::Bool _6199_wrapped = _1b61c3639_isWrapped(_self_, _61837_m);;
	_1b61c3040_modelForCall(_self_, (*((*(_61837_m))))._field_Expr);
	if ((!(_1ce00bcb7_IsBuiltin((*((*(_61837_m))))._field_Func.ptr())))) {
		if (((*((*(*((*(_61837_m))))._field_Func.alloc)._field_Decl))._field_Binded && ((*(*((*(_61837_m))))._field_Func.alloc)._field_Generics.len() > 0LL))) {
			if ((!(_1b5e54893_hasDirective(&((*(*(*((*(_61837_m))))._field_Func.alloc)._field_Decl.alloc)._field_Directives), jule::Str::lit("cdef", 4))))) {
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("<", 1));
				{
					auto expr = &((*(*((*(_61837_m))))._field_Func.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b9453630:;
					if (it != expr_end) {
						jule::I32 _62526_i = it - expr->begin();
						jule::Ptr<_1ce14b2e1_InsGeneric> _62533_g = *it;
						{
							_1b62a4451_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_62533_g))._field_Kind);
							if ((((*(*((*(_61837_m))))._field_Func.alloc)._field_Generics.len() - _62526_i) > 1LL)) {
								_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
							};
						}
						_iter_next_1b9453630:;
						++it;
						_62526_i++;
						goto _iter_begin_1b9453630;
					}
					_iter_end_1b9453630:;
				};
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(">", 1));
			};
		};
	};
	_1b61c32e8_pushCallInf(_self_, _61837_m);
	jule::Bool _63613_locinfo = false;;
	if ((((!(_1ce00bcb7_IsBuiltin((*((*(_61837_m))))._field_Func))) && ((*(*(*((*(_61837_m))))._field_Func.alloc)._field_Decl.alloc)._field_Params.len() > 0LL)) && _1ce006575_IsSelf((*(*(*((*(_61837_m))))._field_Func.alloc)._field_Decl.alloc)._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_61837_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type98) {
				_case_begin_1b94588cc:;
				{
					jule::Ptr<_1cdeee738_StructSubIdentExprModel> _64021_ssie = (*((*(_61837_m))))._field_Expr.unsafe_cast_ptr<_1cdeee738_StructSubIdentExprModel>();;
					{
						
						if (_1ce00680b_IsRef((*(*(*((*(_61837_m))))._field_Func.alloc)._field_Decl.alloc)._field_Params[0LL].ptr())) {
							_case_begin_1b945d283:;
							{
								_1b61c397a_writeReceiver(_self_, (*((*(_64021_ssie))._field_Expr))._field_Model);
							}
						}
						else if ((_1ce1505ae_Sptr((*((*(_64021_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1b9459966:;
							{
								jule::Bool _64721_safe = _1b61c397a_writeReceiver(_self_, (*(*_64021_ssie.alloc)._field_Expr.alloc)._field_Model);;
								if (_64721_safe) {
									_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(".ptr(", 5));
									if ((!(_2434dd82d_Production))) {
										_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
										_1b6291482_locInfo((*_self_.alloc)._field_oc, &((*((*(_61837_m))))._field_Token));
										_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
									};
									_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
								};
							}
						}
						else {
							_case_begin_1b9459900:;
							{
								if ((_1ce15189b_Struct((*((*(_64021_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ (*((*(_64021_ssie))._field_Expr))._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_1b945a1c5:;
											{
												jule::Ptr<_1ce0b4105_Var> _66129_v = (*((*(_64021_ssie))._field_Expr))._field_Model.unsafe_cast_ptr<_1ce0b4105_Var>();;
												if ((*(_66129_v))._field_Reference) {
													goto _match_end_1b945a6ae;
												};
												goto _case_begin_1b945a714;
											}
										}
										else {
											_case_begin_1b945a714:;
											{
												_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("&", 1));
											}
										}
										_match_end_1b945a6ae:;
									};
								};
								if (_6199_wrapped) {
									_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("_wrap_copy", 10));
								} else if ((_1ce150845_Ptr((*(*_64021_ssie.alloc)._field_Expr.alloc)._field_Kind) == nullptr)) {
									_1b61cb91c_model(_self_, (*(*_64021_ssie.alloc)._field_Expr.alloc)._field_Model);
								} else {
									_1b61c2050_possibleRefExpr(_self_, (*((*((*(*_64021_ssie.alloc)._field_Expr.alloc)._field_Model.cast_ptr<_1cdeea091_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
								};
							}
						}
						_match_end_1b9459889:;
					};
					if (((*((*(_61837_m))))._field_Args.len() > 0LL)) {
						_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1b9458569:;
				{
					_1b61c2050_possibleRefExpr(_self_, (*((*((*(_61837_m))))._field_Expr.unsafe_cast_ptr<_1cdeedd97_TraitSubIdentExprModel>()))._field_Expr);
					if ((!(_2434dd82d_Production))) {
						_63613_locinfo=true;
					};
					if (((*((*(_61837_m))))._field_Args.len() > 0LL)) {
						_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			_match_end_1b9458866:;
		};
	};
	_1b61c2c87_args(_self_, _61837_m);
	if (_63613_locinfo) {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(", \"", 3));
		_1b6291482_locInfo((*_self_.alloc)._field_oc, &((*((*(_61837_m))))._field_Token));
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
	};
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	if (_6199_wrapped) {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("; })", 4));
	};
}



inline void _1b61c3edb_coFuncCall(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1cdeebb97_FnCallExprModel>* _70635_m) {
	_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1b628e480_addIndent((*_self_.alloc)._field_oc);
	_22ab0b88c_StrBuilder _70913_head = static__22ab0bb56_New(32LL);;
	_22ab154bc_WriteStr(&_70913_head, jule::Str::lit("std::thread([", 13));
	if (((*((*((*(_70635_m))))._field_Func))._field_Owner != nullptr)) {
		_22ab154bc_WriteStr(&_70913_head, jule::Str::lit("_self_", 6));
		if (((*((*(_70635_m))))._field_Args.len() > 0LL)) {
			_22ab154bc_WriteStr(&_70913_head, jule::Str::lit(", ", 2));
		};
	};
	{
		auto expr = &((*((*(_70635_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b946db12:;
		if (it != expr_end) {
			jule::I32 _71713_i = it - expr->begin();
			jule::Any _71716_arg = *it;
			{
				if ((_71713_i > 0LL)) {
					_22ab154bc_WriteStr(&_70913_head, jule::Str::lit(", ", 2));
				};
				{
					auto &_match_expr{ _71716_arg };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1b94700b9:;
						{
							jule::Ptr<_1ce0b4105_Var> _72321_v = _71716_arg.unsafe_cast_ptr<_1ce0b4105_Var>();;
							static__1b61d52c7_var(&(_70913_head), _72321_v);
							goto _iter_next_1b946db12;
						}
					}
					_match_end_1b946e88d:;
				};
				jule::Str _72713_name = (jule::Str::lit("_co_arg_", 8) + _22be080a5_Itoa(_71713_i));;
				_22ab154bc_WriteStr(&_70913_head, _72713_name);
				_1b628e87b_indent((*_self_.alloc)._field_oc);
				_1b62a4451_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(*((*(_70635_m))))._field_Func.alloc)._field_Params[_71713_i]))._field_Kind);
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(" ", 1));
				if ((*((*((*(*((*(_70635_m))))._field_Func.alloc)._field_Params[_71713_i]))._field_Decl))._field_Reference) {
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("&", 1));
				};
				_1b628dec9_write((*_self_.alloc)._field_oc, _72713_name);
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
				_1b61c2050_possibleRefExpr(_self_, _71716_arg);
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
				jule::Any _73913_argS = jule::Any(_72713_name, &__jule_any_type4);;
				(*((*(_70635_m))))._field_Args[_71713_i]=(*(((jule::Any*)((&(_73913_argS))))));
			}
			_iter_next_1b946db12:;
			++it;
			_71713_i++;
			goto _iter_begin_1b946db12;
		}
		_iter_end_1b946db12:;
	};
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_22ab15214_Write(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf, _22ab16765_Buf(&_70913_head));
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("](void) mutable -> void {\n", 26));
	_1b628e480_addIndent((*_self_.alloc)._field_oc);
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b61c3c33_pureFuncCall(_self_, _70635_m);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1b628e67d_doneIndent((*_self_.alloc)._field_oc);
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("}).detach();\n", 13));
	_1b628e67d_doneIndent((*_self_.alloc)._field_oc);
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1b61c434e_writeUseExpr(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1ce00a832_FnIns>* _75737_f, jule::Ptr<_1ce11bc0c_Data> _75752_d) {
	if ((_1ce15214e_Tup((*(_75752_d))._field_Kind.ptr()) == nullptr)) {
		_1b61c2050_possibleRefExpr(_self_, (*_75752_d.alloc)._field_Model);
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
		return;;
	};
	jule::Ptr<_1ce0002a5_TupleExprModel> _76313_tup = (*_75752_d.alloc)._field_Model.cast_ptr<_1ce0002a5_TupleExprModel>(&__jule_any_type81);;
	_1b5e52088_tup((*((*(*_self_.alloc)._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1ce15214e_Tup((*((*(_75737_f))))._field_Result.ptr()));
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
	{
		auto expr = &((*_76313_tup.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b947d5d3:;
		if (it != expr_end) {
			jule::I32 _76613_i = it - expr->begin();
			jule::Ptr<_1ce11bc0c_Data> _76616_data = *it;
			{
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(".__jule_result_arg", 18));
				_1b628dec9_write((*_self_.alloc)._field_oc, _22be080a5_Itoa(_76613_i));
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("=", 1));
				_1b61c2050_possibleRefExpr(_self_, (*(_76616_data))._field_Model);
				if ((((*(_76313_tup))._field_Datas.len() - _76613_i) > 1LL)) {
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1b947d5d3:;
			++it;
			_76613_i++;
			goto _iter_begin_1b947d5d3;
		}
		_iter_end_1b947d5d3:;
	};
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("};", 2));
}



inline void _1b61c4607_funcCall(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1cdeebb97_FnCallExprModel> _77832_m) {
	if ((*(_77832_m))._field_IsCo) {
		_1b61c3edb_coFuncCall(_self_, &(_77832_m));
		return;;
	};
	if (((_1ce00bcb7_IsBuiltin((*_77832_m.alloc)._field_Func.ptr()) || (!((*((*(*_77832_m.alloc)._field_Func.alloc)._field_Decl))._field_Exceptional))) || (((*_77832_m.alloc)._field_Except != nullptr) && ((*(*_77832_m.alloc)._field_Except.alloc)._field_Stmts.len() == 0LL)))) {
		_1b61c3c33_pureFuncCall(_self_, &(_77832_m));
		return;;
	};
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("({\n", 3));
	_1b628e480_addIndent((*_self_.alloc)._field_oc);
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("auto except = ", 14));
	_1b61c3c33_pureFuncCall(_self_, &(_77832_m));
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	if (((*_77832_m.alloc)._field_Except != nullptr)) {
		if ((((*(*_77832_m.alloc)._field_Func.alloc)._field_Result == nullptr) || (!((*_77832_m.alloc)._field_Assigned)))) {
			_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("if (!except.ok()) ", 18));
			_1b61ba93e_scope((*(*_self_.alloc)._field_oc.alloc)._field_sc, (*_77832_m.alloc)._field_Except);
			_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		} else {
			jule::Bool _80617_forwarded = _1b61cd80e_isForwarded(&((*_77832_m.alloc)._field_Except));;
			_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("(except.ok()) ? (except.result) : (", 35));
			if (_80617_forwarded) {
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
			};
			jule::Any _81121_stmt = (*(*_77832_m.alloc)._field_Except.alloc)._field_Stmts[((*(*_77832_m.alloc)._field_Except.alloc)._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _81121_stmt };
				
				if (_match_expr.type == &__jule_any_type24) {
					_case_begin_1b948c1a2:;
					{
						(*(*_77832_m.alloc)._field_Except.alloc)._field_Stmts=(*(*_77832_m.alloc)._field_Except.alloc)._field_Stmts.slice(0LL, ((*(*_77832_m.alloc)._field_Except.alloc)._field_Stmts.len() - 1LL));
						_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("{\n", 2));
						_1b628e480_addIndent((*_self_.alloc)._field_oc);
						_1b61ba6ca_scopeStmts((*(*_self_.alloc)._field_oc.alloc)._field_sc, &((*_77832_m.alloc)._field_Except));
						_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
						_1b628e87b_indent((*_self_.alloc)._field_oc);
						_1b61c434e_writeUseExpr(_self_, &((*_77832_m.alloc)._field_Func), _81121_stmt.unsafe_cast_ptr<_1ce11bc0c_Data>());
						_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
						_1b628e67d_doneIndent((*_self_.alloc)._field_oc);
						_1b628e87b_indent((*_self_.alloc)._field_oc);
						_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
					}
				}
				else {
					_case_begin_1b948d6ae:;
					{
						_1b61ba93e_scope((*(*_self_.alloc)._field_oc.alloc)._field_sc, (*_77832_m.alloc)._field_Except);
					}
				}
				_match_end_1b948d659:;
			};
			if (_80617_forwarded) {
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(" ", 1));
				_1b61cbbc5_initExpr(_self_, (*(*_77832_m.alloc)._field_Func.alloc)._field_Result);
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(";}", 2));
			};
			_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(");\n", 3));
		};
		_1b628e67d_doneIndent((*_self_.alloc)._field_oc);
	} else {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1b6291482_locInfo((*_self_.alloc)._field_oc, &((*_77832_m.alloc)._field_Token));
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\"));\n", 5));
		if ((!(_1ce007da1_IsVoid((*(*_77832_m.alloc)._field_Func.alloc)._field_Decl)))) {
			_1b628e87b_indent((*_self_.alloc)._field_oc);
			_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("(except.result);\n", 17));
		};
		_1b628e67d_doneIndent((*_self_.alloc)._field_oc);
	};
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
}



inline void _1b61c48b0_slice(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1cdeec071_SliceExprModel> _85129_m) {
	if (((*(_85129_m))._field_Elems.len() == 0LL)) {
		_1b62a1184_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_85129_m.alloc)._field_ElemKind);
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1b62a1184_asSlice((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_85129_m.alloc)._field_ElemKind);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("::make({", 8));
	_1b61c29ce_models(_self_, (*_85129_m.alloc)._field_Elems);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
}



inline void _1b61c4b68_indexing(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1cdeec527_IndexingExprModel> _86332_m) {
	{
		auto &_match_expr{ (*((*(_86332_m))._field_Expr))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b949ed74:;
			{
				_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::at(", 14));
				if ((!(_2434dd82d_Production))) {
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
					_1b6291482_locInfo((*_self_.alloc)._field_oc, &((*(_86332_m))._field_Token));
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
				};
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("reinterpret_cast<const jule::U8*>(", 34));
				jule::Str _87413_s = _22be182e6_ReadStr((*((*(_86332_m))._field_Expr))._field_Model.unsafe_cast_ptr<_22be1616d_Const>().ptr());;
				_1b61cc9b7_cstrLit(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _87413_s);
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("), ", 3));
				_1b628dec9_write((*_self_.alloc)._field_oc, _22be080a5_Itoa(_87413_s.len()));
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
				_1b61c2050_possibleRefExpr(_self_, (*((*_86332_m.alloc)._field_Index))._field_Model);
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1b949ed1e:;
	};
	_1b61c2050_possibleRefExpr(_self_, (*((*_86332_m.alloc)._field_Expr))._field_Model);
	{
		
		if (_2434dd82d_Production || (_1ce150845_Ptr((*(*_86332_m.alloc)._field_Expr.alloc)._field_Kind.ptr()) != nullptr) || (_1ce151db8_Map((*(*_86332_m.alloc)._field_Expr.alloc)._field_Kind) != nullptr) || _1b61cda51_isExprComesFromBind(&((*_86332_m.alloc)._field_Expr))) {
			_case_begin_1b94a8ae7:;
			{
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("[", 1));
				_1b61c2050_possibleRefExpr(_self_, (*(*_86332_m.alloc)._field_Index.alloc)._field_Model);
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1b94a3608:;
			{
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(".at(\"", 5));
				_1b6291482_locInfo((*_self_.alloc)._field_oc, &((*_86332_m.alloc)._field_Token));
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
				_1b61c2050_possibleRefExpr(_self_, (*(*_86332_m.alloc)._field_Index.alloc)._field_Model);
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1b94a64eb:;
	};
}



inline void _1b61c4e21_unsafeIndexing(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1ce247b18_UnsafeIndexingExprModel> _90338_m) {
	_1b61c2050_possibleRefExpr(_self_, (*((*((*(_90338_m))._field_Node))._field_Expr))._field_Model);
	{
		
		if (_2434dd82d_Production || (_1ce150845_Ptr((*(*(*_90338_m.alloc)._field_Node.alloc)._field_Expr.alloc)._field_Kind.ptr()) != nullptr) || (_1ce151db8_Map((*(*(*_90338_m.alloc)._field_Node.alloc)._field_Expr.alloc)._field_Kind) != nullptr)) {
			_case_begin_1b94ac920:;
			{
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("[", 1));
				_1b61c2050_possibleRefExpr(_self_, (*((*(*_90338_m.alloc)._field_Node.alloc)._field_Index))._field_Model);
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1b94ab9da:;
			{
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(".__at(", 6));
				_1b61c2050_possibleRefExpr(_self_, (*((*(*_90338_m.alloc)._field_Node.alloc)._field_Index))._field_Model);
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1b94ac58a:;
	};
}



inline void _1b61c51c9_anonFunc(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1cdeec901_AnonFnExprModel> _92032_m) {
	_1b62a40dd_func((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_92032_m))._field_Func);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("([=]", 4));
	_1b62967d9_paramsIns((*_self_.alloc)._field_oc, &((*((*_92032_m.alloc)._field_Func))._field_Params));
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(" mutable -> ", 12));
	_1b62a3917_funcInsResult((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*_92032_m.alloc)._field_Func));
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(" ", 1));
	_1b61babe7_funcScope((*(*_self_.alloc)._field_oc.alloc)._field_sc, (*_92032_m.alloc)._field_Func);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b61c5482_mapExpr(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1cdeed281_MapExprModel> _93131_m) {
	_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("jule::Map<", 10));
	_1b62a4451_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_93131_m))._field_KeyKind);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	_1b62a4451_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_93131_m.alloc)._field_ValKind);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(">({", 3));
	if (((*_93131_m.alloc)._field_Entries.len() > 0LL)) {
		{
			auto expr = &((*_93131_m.alloc)._field_Entries);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b94ba356:;
			if (it != expr_end) {
				jule::I32 _93818_i = it - expr->begin();
				jule::Ptr<_1cdeeccca_KeyValPairExprModel> _93825_pair = *it;
				{
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
					_1b61c2050_possibleRefExpr(_self_, (*(_93825_pair))._field_Key);
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
					_1b61c2050_possibleRefExpr(_self_, (*_93825_pair.alloc)._field_Val);
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
					if ((((*_93131_m.alloc)._field_Entries.len() - _93818_i) > 1LL)) {
						_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1b94ba356:;
				++it;
				_93818_i++;
				goto _iter_begin_1b94ba356;
			}
			_iter_end_1b94ba356:;
		};
	};
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
}



inline void _1b61c573a_slicing(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1cdeed814_SlicingExprModel> _95231_m) {
	_1b61c2050_possibleRefExpr(_self_, (*(_95231_m))._field_Expr);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(".slice(", 7));
	if ((!(_2434dd82d_Production))) {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
		_1b6291482_locInfo((*_self_.alloc)._field_oc, &((*_95231_m.alloc)._field_Token));
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
	};
	_1b61c2050_possibleRefExpr(_self_, (*_95231_m.alloc)._field_Left);
	if (((*_95231_m.alloc)._field_Right != nullptr)) {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
		_1b61c2050_possibleRefExpr(_self_, (*_95231_m.alloc)._field_Right);
	};
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b61c59e3_traitSub(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1cdeedd97_TraitSubIdentExprModel> _96832_m) {
	static__1b61d433c_traitDecl(&((*((*(_self_))._field_oc))._field_Buf), (*(_96832_m))._field_Trt);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("_mptr_data", 10));
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("[(", 2));
	_1b61c2050_possibleRefExpr(_self_, (*_96832_m.alloc)._field_Expr);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(").type_offset].", 15));
	static__1b61d3c65_func(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*_96832_m.alloc)._field_Method));
}



inline void _1b61c5c9b_structureSub(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1cdeee738_StructSubIdentExprModel> _97736_m) {
	_1b61c2050_possibleRefExpr(_self_, (*((*(_97736_m))._field_Expr))._field_Model);
	if (((*_97736_m.alloc)._field_Field == nullptr)) {
		return;;
	};
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	static__1b61d4edb_field(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*((*_97736_m.alloc)._field_Field))._field_Decl));
}



inline void _1b61c6054_array(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1cdeeeea8_ArrayExprModel> _98629_m) {
	_1b62a2a6a_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_98629_m))._field_Kind);
	if (((*_98629_m.alloc)._field_Elems.len() == 0LL)) {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	if ((((*_98629_m.alloc)._field_Elems.len() == 2LL) && ((*_98629_m.alloc)._field_Elems[1LL] == nullptr))) {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
		_1b61c2050_possibleRefExpr(_self_, (*_98629_m.alloc)._field_Elems[0LL]);
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("({", 2));
	_1b61c29ce_models(_self_, (*_98629_m.alloc)._field_Elems);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
	return;;
}



inline void _1b61c630c_funcInsCommon(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1ce00a832_FnIns> _100937_m) {
	_1b62a40dd_func((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _100937_m);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1b61c65b5_funcIns(_self_, _100937_m);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b61c65b5_funcIns(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1ce00a832_FnIns> _101631_m) {
	if ((((*(_101631_m))._field_Decl != nullptr) && (*(*_101631_m.alloc)._field_Decl.alloc)._field_Binded)) {
		jule::Ptr<_1cdec0eac_Directive> _101813_d = _1b5e544ca_findDirective(&((*(*_101631_m.alloc)._field_Decl.alloc)._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_101813_d != nullptr)) {
			_1b628e282_writeBytes((*(_self_))._field_oc, _1b629ad71_concatAllParts((*_101813_d.alloc)._field_Args));
			_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1b61d4051_funcIns(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &(_101631_m));
}



inline void _1b61c686d_tuple(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1ce0002a5_TupleExprModel> _102729_m) {
	{
		auto expr = &((*_102729_m.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b94d4381:;
		if (it != expr_end) {
			jule::I32 _102814_i = it - expr->begin();
			jule::Ptr<_1ce11bc0c_Data> _102821_d = *it;
			{
				_1b61c2050_possibleRefExpr(_self_, (*(_102821_d))._field_Model);
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
				if ((((*(_102729_m))._field_Datas.len() - _102814_i) > 1LL)) {
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
					_1b628e87b_indent((*_self_.alloc)._field_oc);
				};
			}
			_iter_next_1b94d4381:;
			++it;
			_102814_i++;
			goto _iter_begin_1b94d4381;
		}
		_iter_end_1b94d4381:;
	};
}



inline void _1b61c6b26_newCall(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1ce000e32_BuiltinNewCallExprModel> _103831_m) {
	_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_1b62a4451_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_103831_m))._field_Kind);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
	if (((*_103831_m.alloc)._field_Init != nullptr)) {
		_1b61c2050_possibleRefExpr(_self_, (*_103831_m.alloc)._field_Init);
	};
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b61c6dce_outCall(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1ce00067e_BuiltinOutCallExprModel> _104831_m) {
	if (((*(_104831_m))._field_Debug && _2434dd82d_Production)) {
		return;;
	};
	_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("jule::out(", 10));
	_1b61c2050_possibleRefExpr(_self_, (*_104831_m.alloc)._field_Expr);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b61c7187_outlnCall(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1ce000a58_BuiltinOutlnCallExprModel> _105733_m) {
	if (((*(_105733_m))._field_Debug && _2434dd82d_Production)) {
		return;;
	};
	_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("jule::outln(", 12));
	_1b61c2050_possibleRefExpr(_self_, (*_105733_m.alloc)._field_Expr);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b61c7440_panicCall(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1ce00130b_BuiltinPanicCallExprModel> _106633_m) {
	_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("jule::panic(", 12));
	_1b61c2050_possibleRefExpr(_self_, (*(_106633_m))._field_Expr);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(" + jule::Str(\"\\nlocation: ", 26));
	_1b6291482_locInfo((*_self_.alloc)._field_oc, &((*_106633_m.alloc)._field_Token));
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1b61c76e8_assertCall(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1ce0017b2_BuiltinAssertCallExprModel> _107434_m) {
	if (_2434dd82d_Production) {
		return;;
	};
	_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("if (!(", 6));
	_1b61c2050_possibleRefExpr(_self_, (*(_107434_m))._field_Expr);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")) jule::panic(jule::Str(", 25));
	_1b61cc9b7_cstrLit(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_107434_m.alloc)._field_Log);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(") + jule::Str(\"\\nlocation: ", 27));
	_1b6291482_locInfo((*_self_.alloc)._field_oc, &((*_107434_m.alloc)._field_Token));
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1b61c79a1_errorCall(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1ce0033b8_BuiltinErrorCallExprModel> _108733_m) {
	_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	if (_1ce007da1_IsVoid((*((*(_108733_m))._field_Func))._field_Decl.ptr())) {
		{
			auto &_match_expr{ (*((*(_108733_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1b94e57d2:;
				{
					jule::Ptr<_1ce0b4105_Var> _109217_v = (*((*(_108733_m))._field_Err))._field_Model.unsafe_cast_ptr<_1ce0b4105_Var>();;
					if ((*(_109217_v))._field_Ident.equal("error", 5)) {
						_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::VoidExceptional{.error=std::move(except.error)}", 53));
						return;;
					};
				}
			}
			_match_end_1b94e577c:;
		};
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::VoidExceptional{.error=jule::Any(", 39));
	} else {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::Exceptional<", 18));
		_1b5e5275e_codeMut1((*((*(*_self_.alloc)._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*((*(_108733_m))._field_Func))._field_Result));
		{
			auto &_match_expr{ (*((*(_108733_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1b94e9c48:;
				{
					jule::Ptr<_1ce0b4105_Var> _110417_v = (*((*(_108733_m))._field_Err))._field_Model.unsafe_cast_ptr<_1ce0b4105_Var>();;
					if ((*(_110417_v))._field_Ident.equal("error", 5)) {
						_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(">{.error=except.error}", 22));
						return;;
					};
				}
			}
			_match_end_1b94e9be3:;
		};
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(">{.error=jule::Any(", 19));
	};
	_1b61c2050_possibleRefExpr(_self_, (*((*(_108733_m))._field_Err))._field_Model);
	jule::I32 _11139_i = _1b629000d_pushAnyType((*_self_.alloc)._field_oc, (*(*_108733_m.alloc)._field_Err.alloc)._field_Kind);;
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(", &__jule_any_type", 18));
	_1b628dec9_write((*_self_.alloc)._field_oc, _22be080a5_Itoa(_11139_i));
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")}", 2));
}



inline void _1b61c7c59_copyCall(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1ce002ede_BuiltinCopyCallExprModel> _111932_m) {
	_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("jule::copy(", 11));
	_1b61c2050_possibleRefExpr(_self_, (*((*(_111932_m))._field_Dest))._field_Model);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	_1b61c2050_possibleRefExpr(_self_, (*((*_111932_m.alloc)._field_Src))._field_Model);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b61c8012_lenCall(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1ce00243e_BuiltinLenCallExprModel> _112731_m) {
	_1b61c2050_possibleRefExpr(_self_, (*((*(_112731_m))._field_Expr))._field_Model);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(".len()", 6));
}



inline void _1b61c82ba_capCall(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1ce00273b_BuiltinCapCallExprModel> _113231_m) {
	_1b61c2050_possibleRefExpr(_self_, (*((*(_113231_m))._field_Expr))._field_Model);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(".cap()", 6));
}



inline void _1b61c8573_deleteCall(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1ce002b15_BuiltinDeleteCallExprModel> _113734_m) {
	_1b61c2050_possibleRefExpr(_self_, (*((*(_113734_m))._field_Dest))._field_Model);
	if (((*_113734_m.alloc)._field_Key != nullptr)) {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(".del(", 5));
		_1b61c2050_possibleRefExpr(_self_, (*(*_113734_m.alloc)._field_Key.alloc)._field_Model);
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	} else {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(".clear()", 8));
	};
}



inline void _1b61c882b_makeCallSlice(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1ce001c68_BuiltinMakeCallExprModel>* _114838_m) {
	jule::Ptr<_1ce159ca0_Slc> _114913_slice = _1ce15137e_Slc((*((*(_114838_m))))._field_Kind.ptr());;
	_1b62a4451_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(_114838_m))))._field_Kind);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("::alloc(", 8));
	_1b61c2050_possibleRefExpr(_self_, (*((*(_114838_m))))._field_Len);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_114838_m))))._field_Cap != nullptr)) {
		_1b61c2050_possibleRefExpr(_self_, (*((*(_114838_m))))._field_Cap);
	} else {
		_1b61c2050_possibleRefExpr(_self_, (*((*(_114838_m))))._field_Len);
	};
	if (_1b5e54b5c_shouldInitialized(&((*(_114913_slice))._field_Elem))) {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
		_1b61cbbc5_initExpr(_self_, (*_114913_slice.alloc)._field_Elem);
	};
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b61c8ad4_makeCallStr(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1ce001c68_BuiltinMakeCallExprModel>* _116636_m) {
	_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("::alloc(", 8));
	_1b61c2050_possibleRefExpr(_self_, (*((*(_116636_m))))._field_Len);
	if (((*((*(_116636_m))))._field_Cap != nullptr)) {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
		_1b61c2050_possibleRefExpr(_self_, (*((*(_116636_m))))._field_Cap);
	};
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b61c8d8c_makeCall(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1ce001c68_BuiltinMakeCallExprModel> _117732_m) {
	if ((_1ce15137e_Slc((*(_117732_m))._field_Kind.ptr()) != nullptr)) {
		_1b61c882b_makeCallSlice(_self_, &(_117732_m));
		return;;
	};
	_1b61c8ad4_makeCallStr(_self_, &(_117732_m));
}



inline void _1b61c9145_pushToSlice(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1ce247ee2_PushToSliceExprModel> _118535_m) {
	;
	_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("{ ", 2));
	_1b62a1184_asSlice((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(_118535_m))._field_Elems))._field_ElemKind);
	jule::Bool _119313_ptr = false;;
	{
		auto &_match_expr{ (*(_118535_m))._field_Dest };
		
		if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1b9512304:;
			{
				jule::Ptr<_1cdeea091_UnaryExprModel> _119717_u = (*(_118535_m))._field_Dest.unsafe_cast_ptr<_1cdeea091_UnaryExprModel>();;
				if ((_1ce150845_Ptr((*((*(_119717_u))._field_Expr))._field_Kind.ptr()) != nullptr)) {
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(" *__jule_push_dest = ", 21));
					_1b61c2050_possibleRefExpr(_self_, (*(*_119717_u.alloc)._field_Expr.alloc)._field_Model);
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("; ", 2));
					_119313_ptr=true;
					goto _match_end_1b951404d;
				};
				goto _case_begin_1b95140a3;
			}
		}
		else {
			_case_begin_1b95140a3:;
			{
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(" &__jule_push_dest = ", 21));
				_1b61c2050_possibleRefExpr(_self_, (*_118535_m.alloc)._field_Dest);
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("; ", 2));
			}
		}
		_match_end_1b951404d:;
	};
	if (((*(*_118535_m.alloc)._field_Elems.alloc)._field_Elems.len() == 1LL)) {
		if (_119313_ptr) {
			_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_push_dest->push(", 23));
		} else {
			_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_push_dest.push(", 22));
		};
		_1b61c2050_possibleRefExpr(_self_, (*(*_118535_m.alloc)._field_Elems.alloc)._field_Elems[0LL]);
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("); }", 4));
		return;;
	};
	if (_119313_ptr) {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_push_dest.alloc_for_append(", 34));
	};
	_1b628dec9_write((*_self_.alloc)._field_oc, _22be080a5_Itoa((*(*_118535_m.alloc)._field_Elems.alloc)._field_Elems.len()));
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("); ", 3));
	{
		auto expr = &((*(*_118535_m.alloc)._field_Elems.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b967c64a:;
		if (it != expr_end) {
			jule::Any _123121_e = *it;
			{
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_push_dest", 16));
				if (_119313_ptr) {
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("->__push(", 9));
				} else {
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(".__push(", 8));
				};
				_1b61c2050_possibleRefExpr(_self_, _123121_e);
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_1b967c64a:;
			++it;
			goto _iter_begin_1b967c64a;
		}
		_iter_end_1b967c64a:;
	};
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1b61c93ed_appendToSlice(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1ce2483bb_AppendToSliceExprModel> _124537_m) {
	_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1b61c2050_possibleRefExpr(_self_, (*(_124537_m))._field_Dest);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(").append(", 9));
	_1b61c2050_possibleRefExpr(_self_, (*_124537_m.alloc)._field_Slice);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(");", 2));
}



inline void _1b61c96a6_appendCall(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1ce002142_BuiltinAppendCallExprModel> _125334_m) {
	_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("jule::append(", 13));
	_1b61c2050_possibleRefExpr(_self_, (*(_125334_m))._field_Dest);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
	_1b61c2050_possibleRefExpr(_self_, (*_125334_m.alloc)._field_Elements);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b61c995e_sizeof(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1ce003a6c_SizeofExprModel> _126130_m) {
	_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("sizeof(", 7));
	_1b61c2050_possibleRefExpr(_self_, (*(_126130_m))._field_Expr);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b61c9c17_alignof(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1ce003c59_AlignofExprModel> _126731_m) {
	_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("alignof(", 8));
	_1b61c2050_possibleRefExpr(_self_, (*(_126731_m))._field_Expr);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b61c9ec0_runeLit(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1ce004001_RuneExprModel> _127327_m) {
	if (((*(_127327_m))._field_Code <= 127LL)) {
		_22ab15775_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\'');
		jule::Str _127617_b = _1b61cc39b_sbtoa(static_cast<jule::U8>((*_127327_m.alloc)._field_Code));;
		if (_127617_b.equal("'", 1)) {
			_22ab15775_WriteByte(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf, '\\');
		};
		_22ab154bc_WriteStr(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf, _127617_b);
		_22ab15775_WriteByte(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf, '\'');
		return;;
	};
	_1b61cd149_itoa(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::I64>((*_127327_m.alloc)._field_Code));
}



inline void _1b61ca278_structureStatic(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1cdeeeace_StructStaticIdentExprModel> _128739_m) {
	static__1b61d4051_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &((*(_128739_m))._field_Method));
}



inline void _1b61ca531_integratedToStr(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1ce0042ed_IntegratedToStrExprModel> _129139_m) {
	_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("jule::to_str(", 13));
	_1b61c2050_possibleRefExpr(_self_, (*(_129139_m))._field_Expr);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1b61ca7d9_backendEmit(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1ce0046c7_BackendEmitExprModel> _129735_m) {
	if (((*(_129735_m))._field_Exprs.len() == 0LL)) {
		_1b628dec9_write((*(_self_))._field_oc, (*_129735_m.alloc)._field_Code);
		return;;
	};
	jule::I32 _13029_n = _22ab16248_Len(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf);;
	jule::Slice<jule::Any> _130313_args = jule::Slice<jule::Any>::alloc((*_129735_m.alloc)._field_Exprs.len(), (*_129735_m.alloc)._field_Exprs.len());;
	{
		auto expr = &((*_129735_m.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b968ec67:;
		if (it != expr_end) {
			jule::I32 _130414_i = it - expr->begin();
			jule::Any _130421_expr = *it;
			{
				_1b61c2050_possibleRefExpr(_self_, _130421_expr);
				jule::Slice<jule::U8> _130617_buf = _22ab16765_Buf(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf);;
				_130313_args[_130414_i]=jule::Any(static_cast<jule::Str>(_130617_buf.slice(_13029_n)), &__jule_any_type4);
				{
					_22ab16a1d_SetBuf(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf, _130617_buf.slice(0LL, _13029_n));
				};
			}
			_iter_next_1b968ec67:;
			++it;
			_130414_i++;
			goto _iter_begin_1b968ec67;
		}
		_iter_end_1b968ec67:;
	};
	_1b628dec9_write((*_self_.alloc)._field_oc, _1ce23397d_Format((*_129735_m.alloc)._field_Code, _130313_args));
}



inline void _1b61caa92_free(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1ce0049c4_FreeExprModel> _131328_m) {
	_1b61c2050_possibleRefExpr(_self_, (*(_131328_m))._field_Expr);
	if (_2434dd223_RC) {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(".dealloc()", 10));
		return;;
	};
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(".__free()", 9));
}



inline void _1b61cad4a_strComp(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1ce246e03_StrCompExprModel> _132231_m) {
	if ((*(_132231_m))._field_NotEq) {
		_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("(!", 2));
	};
	jule::Str _13269_s = _22be182e6_ReadStr((*_132231_m.alloc)._field_Right.ptr());;
	_1b61c2050_possibleRefExpr(_self_, (*_132231_m.alloc)._field_Left);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(".equal(", 7));
	_1b61cc9b7_cstrLit(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _13269_s);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	_1b628dec9_write((*_self_.alloc)._field_oc, _22be080a5_Itoa(_13269_s.len()));
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	if ((*_132231_m.alloc)._field_NotEq) {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1b61cb103_emptyCompare(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1ce24660b_EmptyCompareExprModel> _133836_m) {
	if ((*(_133836_m))._field_Neg) {
		_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
	};
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1b61c2050_possibleRefExpr(_self_, (*_133836_m.alloc)._field_Expr);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(").empty()", 9));
}



inline void _1b61cb3ab_unsafeDeref(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1ce248a92_UnsafeDerefExprModel> _134735_m) {
	{
		
		if ((_1ce1505ae_Sptr((*((*((*(_134735_m))._field_Base))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b969d803:;
			{
				_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1b61c2050_possibleRefExpr(_self_, (*(*(*_134735_m.alloc)._field_Base.alloc)._field_Expr.alloc)._field_Model);
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(".alloc)", 7));
			}
		}
		else {
			_case_begin_1b969d36e:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1354:13"));;
			}
		}
		_match_end_1b969d270:;
	};
}



inline void _1b61cb664_unsafeCasting(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1ce248d8e_UnsafeCastingExprModel> _135837_m) {
	{
		
		if (_1b61cdd1a_isAny(&((*((*(_135837_m))._field_Base))._field_ExprKind))) {
			_case_begin_1b96a14a4:;
			{
				_1b61c2050_possibleRefExpr(_self_, (*((*(*_135837_m.alloc)._field_Base.alloc)._field_Expr))._field_Model);
				if ((_1ce1505ae_Sptr((*(*_135837_m.alloc)._field_Base.alloc)._field_Kind.ptr()) != nullptr)) {
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast_ptr<", 17));
					_1b62a4451_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_1ce1505ae_Sptr((*(*_135837_m.alloc)._field_Base.alloc)._field_Kind)))._field_Elem);
				} else {
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast<", 13));
					_1b62a4451_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(*_135837_m.alloc)._field_Base.alloc)._field_Kind);
				};
				_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(">()", 3));
			}
		}
		else {
			_case_begin_1b96a1020:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1371:13"));;
			}
		}
		_match_end_1b96a0e21:;
	};
}



inline void _1b61cb91c_model(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Any _137529_m) {
	{
		auto &_match_expr{ _137529_m };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1b96a6aa3:;
			{
				_1b628dec9_write((*(_self_))._field_oc, _137529_m.unsafe_cast<jule::Str>());
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1b96a6c4b:;
			{
				_1b62a4451_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _137529_m.unsafe_cast_ptr<_1ce14cbc7_TypeKind>());
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b96a6cb2:;
			{
				_1b61c048d_constant(_self_, _137529_m.unsafe_cast_ptr<_22be1616d_Const>());
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b96a6d28:;
			{
				_1b61c11c5_var(_self_, _137529_m.unsafe_cast_ptr<_1ce0b4105_Var>());
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b96a6d8e:;
			{
				_1b61c147d_structureIns(_self_, _137529_m.unsafe_cast_ptr<_1cdee571d_StructIns>());
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b96a6e05:;
			{
				_1b61c630c_funcInsCommon(_self_, _137529_m.unsafe_cast_ptr<_1ce00a832_FnIns>());
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1b96a6e6b:;
			{
				_1b61c0b64_unsafeBinary(_self_, (*(_137529_m.unsafe_cast_ptr<_1ce247783_UnsafeBinaryExprModel>()))._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1b96a7aa4:;
			{
				_1b61c0e1c_binary(_self_, _137529_m.unsafe_cast_ptr<_1cdee9bb7_BinaryExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1b96a7b1a:;
			{
				_1b61c1736_unary(_self_, _137529_m.unsafe_cast_ptr<_1cdeea091_UnaryExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1b96a7b81:;
			{
				_1b61c19de_structureLit(_self_, _137529_m.unsafe_cast_ptr<_1cdeea965_StructLitExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b96a7be7:;
			{
				_1b61c1c97_allocStructure(_self_, _137529_m.unsafe_cast_ptr<_1cdeeac62_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1b96a7c5d:;
			{
				_1b61c2726_casting(_self_, _137529_m.unsafe_cast_ptr<_1cdeeb2e5_CastingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1b96a7cc4:;
			{
				_1b61c4607_funcCall(_self_, _137529_m.unsafe_cast_ptr<_1cdeebb97_FnCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1b96a7d3a:;
			{
				_1b61c48b0_slice(_self_, _137529_m.unsafe_cast_ptr<_1cdeec071_SliceExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1b96a7db2:;
			{
				_1b61c6054_array(_self_, _137529_m.unsafe_cast_ptr<_1cdeeeea8_ArrayExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1b96a7e39:;
			{
				_1b61c4e21_unsafeIndexing(_self_, _137529_m.unsafe_cast_ptr<_1ce247b18_UnsafeIndexingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1b96a7eb1:;
			{
				_1b61c4b68_indexing(_self_, _137529_m.unsafe_cast_ptr<_1cdeec527_IndexingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b96a8038:;
			{
				_1b61c51c9_anonFunc(_self_, _137529_m.unsafe_cast_ptr<_1cdeec901_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1b96a80b0:;
			{
				_1b61c5482_mapExpr(_self_, _137529_m.unsafe_cast_ptr<_1cdeed281_MapExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1b96a8137:;
			{
				_1b61c573a_slicing(_self_, _137529_m.unsafe_cast_ptr<_1cdeed814_SlicingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1b96a81ae:;
			{
				_1b61c59e3_traitSub(_self_, _137529_m.unsafe_cast_ptr<_1cdeedd97_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b96a8236:;
			{
				_1b61c5c9b_structureSub(_self_, _137529_m.unsafe_cast_ptr<_1cdeee738_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1b96a82ad:;
			{
				_1b61c686d_tuple(_self_, _137529_m.unsafe_cast_ptr<_1ce0002a5_TupleExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1b96a8335:;
			{
				_1b61c6dce_outCall(_self_, _137529_m.unsafe_cast_ptr<_1ce00067e_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1b96a83ac:;
			{
				_1b61c7187_outlnCall(_self_, _137529_m.unsafe_cast_ptr<_1ce000a58_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1b96a8434:;
			{
				_1b61c6b26_newCall(_self_, _137529_m.unsafe_cast_ptr<_1ce000e32_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1b96a84ab:;
			{
				_1b61c7440_panicCall(_self_, _137529_m.unsafe_cast_ptr<_1ce00130b_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1b96a8533:;
			{
				_1b61c76e8_assertCall(_self_, _137529_m.unsafe_cast_ptr<_1ce0017b2_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b96a85aa:;
			{
				_1b61c79a1_errorCall(_self_, _137529_m.unsafe_cast_ptr<_1ce0033b8_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1b96a8632:;
			{
				_1b61c8d8c_makeCall(_self_, _137529_m.unsafe_cast_ptr<_1ce001c68_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1b96a86a9:;
			{
				_1b61c96a6_appendCall(_self_, _137529_m.unsafe_cast_ptr<_1ce002142_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1b96a8731:;
			{
				_1b61c7c59_copyCall(_self_, _137529_m.unsafe_cast_ptr<_1ce002ede_BuiltinCopyCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1b96a87a8:;
			{
				_1b61c8012_lenCall(_self_, _137529_m.unsafe_cast_ptr<_1ce00243e_BuiltinLenCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1b96a8830:;
			{
				_1b61c82ba_capCall(_self_, _137529_m.unsafe_cast_ptr<_1ce00273b_BuiltinCapCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1b96a88a7:;
			{
				_1b61c8573_deleteCall(_self_, _137529_m.unsafe_cast_ptr<_1ce002b15_BuiltinDeleteCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1b96a892e:;
			{
				_1b61c995e_sizeof(_self_, _137529_m.unsafe_cast_ptr<_1ce003a6c_SizeofExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1b96a89a6:;
			{
				_1b61c9c17_alignof(_self_, _137529_m.unsafe_cast_ptr<_1ce003c59_AlignofExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1b96a8a2d:;
			{
				_1b61c9ec0_runeLit(_self_, _137529_m.unsafe_cast_ptr<_1ce004001_RuneExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1b96a8aa5:;
			{
				_1b61ca278_structureStatic(_self_, _137529_m.unsafe_cast_ptr<_1cdeeeace_StructStaticIdentExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1b96a8b2c:;
			{
				_1b61ca531_integratedToStr(_self_, _137529_m.unsafe_cast_ptr<_1ce0042ed_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1b96a8ba4:;
			{
				_1b61ca7d9_backendEmit(_self_, _137529_m.unsafe_cast_ptr<_1ce0046c7_BackendEmitExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1b96a8c2b:;
			{
				_1b61caa92_free(_self_, _137529_m.unsafe_cast_ptr<_1ce0049c4_FreeExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1b96a8ca3:;
			{
				_1b61cad4a_strComp(_self_, _137529_m.unsafe_cast_ptr<_1ce246e03_StrCompExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1b96a8d2a:;
			{
				_1b61c11c5_var(_self_, (*(_137529_m.unsafe_cast_ptr<_1ce246980_RefExprModel>()))._field_Var);
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1b96a8da2:;
			{
				_1b61cb103_emptyCompare(_self_, _137529_m.unsafe_cast_ptr<_1ce24660b_EmptyCompareExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1b96a8e29:;
			{
				_1b61cb3ab_unsafeDeref(_self_, _137529_m.unsafe_cast_ptr<_1ce248a92_UnsafeDerefExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1b96a8ea1:;
			{
				_1b61cb664_unsafeCasting(_self_, _137529_m.unsafe_cast_ptr<_1ce248d8e_UnsafeCastingExprModel>());
			}
		}
		else {
			_case_begin_1b96a6bd5:;
			{
				_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1b96a1c24:;
	};
}



inline void _1b61cbbc5_initExpr(jule::Ptr<_1b61bdc0b_exprCoder> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _147632_t) {
	if (_1ce14ea75_NilCompatible(_147632_t.ptr())) {
		if ((_1ce150845_Ptr(_147632_t) != nullptr)) {
			_1b628dec9_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		} else {
			_1b62a4451_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _147632_t);
			_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1ce15a894_Tuple> _148613_tup = _1ce15214e_Tup(_147632_t);;
	if ((_148613_tup != nullptr)) {
		_1b5e52088_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _148613_tup);
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
		{
			auto expr = &((*_148613_tup.alloc)._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b8b7ee17:;
			if (it != expr_end) {
				jule::I32 _149018_i = it - expr->begin();
				jule::Ptr<_1ce14cbc7_TypeKind> _149025_tt = *it;
				{
					if ((!(_1b5e54b5c_shouldInitialized(&(_149025_tt))))) {
						goto _iter_next_1b8b7ee17;
					};
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(".__jule_result_arg", 18));
					_1b628dec9_write((*_self_.alloc)._field_oc, _22be080a5_Itoa(_149018_i));
					_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("=", 1));
					_1b61cbbc5_initExpr(_self_, _149025_tt);
					if ((((*_148613_tup.alloc)._field_Types.len() - _149018_i) > 1LL)) {
						_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
					};
				}
				_iter_next_1b8b7ee17:;
				++it;
				_149018_i++;
				goto _iter_begin_1b8b7ee17;
			}
			_iter_end_1b8b7ee17:;
		};
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	jule::Ptr<_1ce01d416_Enum> _150513_enm = _1ce150acb_Enum(_147632_t);;
	if ((_150513_enm != nullptr)) {
		_1b61cb91c_model(_self_, (*((*((*((*_150513_enm.alloc)._field_Items[0LL]))._field_Value))._field_Data))._field_Model);
		return;;
	};
	jule::Ptr<_1ce1557a1_Prim> _15109_prim = _1ce150328_Prim(_147632_t);;
	if ((_15109_prim != nullptr)) {
		if (_22be15ac9_IsNum((*_15109_prim.alloc)._field_Kind)) {
			_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("0", 1));
		} else if (_1ce1589a2_IsBool(_15109_prim)) {
			_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("false", 5));
		} else if (_1ce158c38_IsStr(_15109_prim)) {
			_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::Str()", 11));
		};
		return;;
	};
	if ((_1ce1510e8_Arr(_147632_t) != nullptr)) {
		jule::Ptr<_1ce15c0c1_Arr> _152217_arr = _1ce1510e8_Arr(_147632_t);;
		_1b62a4451_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _147632_t);
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
		_1b61cbbc5_initExpr(_self_, (*(_152217_arr))._field_Elem);
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	jule::Ptr<_1cdee571d_StructIns> _152913_s = _1ce15189b_Struct(_147632_t);;
	if ((((_152913_s != nullptr) && (*((*_152913_s.alloc)._field_Decl))._field_Binded) && (_1b5e544ca_findDirective(&((*(*_152913_s.alloc)._field_Decl.alloc)._field_Directives), jule::Str::lit("typedef", 7)) == nullptr))) {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
		_1b62a4451_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _147632_t);
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("){}", 3));
		return;;
	};
	_1b62a4451_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _147632_t);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("()", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1b61bdc0b_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b61ced60_TestCoder> static__1b61d02d3_New(jule::Ptr<_1b628d825_ObjectCoder>* _2924_oc) {
	return jule::new_ptr<_1b61ced60_TestCoder>(_1b61ced60_TestCoder{._field_oc=(*(_2924_oc))});;
}



inline jule::Ptr<_1ce06b0ac_ImportInfo> _1b61d0569_findTestingPackage(jule::Ptr<_1b61ced60_TestCoder> _self_) {
	{
		auto expr = &((*((*((*(_self_))._field_oc))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8b908ea:;
		if (it != expr_end) {
			jule::Ptr<_1ce06b0ac_ImportInfo> _3621_imp = *it;
			{
				if ((*(_3621_imp))._field_LinkPath.equal("std::testing", 12)) {
					return _3621_imp;;
				};
			}
			_iter_next_1b8b908ea:;
			++it;
			goto _iter_begin_1b8b908ea;
		}
		_iter_end_1b8b908ea:;
	};
	return nullptr;;
}



inline void _1b61d0822_appendTest(jule::Ptr<_1b61ced60_TestCoder> _self_, jule::Ptr<_1ce00a832_FnIns> _4434_f) {
	_1b628e87b_indent((*(_self_))._field_oc);
	_1b61d105e_callTmReset(_self_);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("std::cout << \">>> TEST RUNNING: \" ", 34));
	_1b61cc9b7_cstrLit(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(_4434_f))._field_Decl))._field_Ident);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(" << std::endl;\n", 15));
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	static__1b61d4051_funcIns(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &(_4434_f));
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("(_t);\n", 6));
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("post_test();\n", 13));
}



inline void _1b61d0aca_appendPackageTests(jule::Ptr<_1b61ced60_TestCoder> _self_, jule::Ptr<_1ce06ded3_Package>* _5943_p) {
	{
		auto expr = &((*((*(_5943_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8b971d7:;
		if (it != expr_end) {
			jule::Ptr<_1ce116894_SymbolTable> _6021_file = *it;
			{
				{
					auto expr = &((*(_6021_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b8b97b44:;
					if (it != expr_end) {
						jule::Ptr<_1ce00792d_Fn> _6125_f = *it;
						{
							if (_1b5e54893_hasDirective(&((*(_6125_f))._field_Directives), jule::Str::lit("test", 4))) {
								_1b61d0822_appendTest(_self_, (*_6125_f.alloc)._field_Instances[0LL]);
							};
						}
						_iter_next_1b8b97b44:;
						++it;
						goto _iter_begin_1b8b97b44;
					}
					_iter_end_1b8b97b44:;
				};
			}
			_iter_next_1b8b971d7:;
			++it;
			goto _iter_begin_1b8b971d7;
		}
		_iter_end_1b8b971d7:;
	};
}



inline jule::Bool _1b61d0d61_readyTestingPackage(jule::Ptr<_1b61ced60_TestCoder> _self_) {
	jule::Ptr<_1ce06b0ac_ImportInfo> _7013_p = _1b61d0569_findTestingPackage(_self_);;
	if ((_7013_p == nullptr)) {
		return false;;
	};
	(*_self_.alloc)._field_t=(*(_1ce06c289_FindStruct(_7013_p.ptr(), jule::Str::lit("T", 1), false)))._field_Instances[0LL];
	(*_self_.alloc)._field_tmReset=_1cdee6785_FindMethod((*_self_.alloc)._field_t.ptr(), jule::Str::lit("reset", 5), false);
	(*_self_.alloc)._field_tmFailed=_1cdee6785_FindMethod((*_self_.alloc)._field_t, jule::Str::lit("Failed", 6), false);
	(*_self_.alloc)._field_tmSkipped=_1cdee6785_FindMethod((*_self_.alloc)._field_t, jule::Str::lit("Skipped", 7), false);
	return true;;
}



inline void _1b61d105e_callTmReset(jule::Ptr<_1b61ced60_TestCoder> _self_) {
	static__1b61d3c65_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmReset));
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1b61d125c_callTmFailed(jule::Ptr<_1b61ced60_TestCoder> _self_) {
	static__1b61d3c65_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmFailed));
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1b61d145a_callTmSkipped(jule::Ptr<_1b61ced60_TestCoder> _self_) {
	static__1b61d3c65_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmSkipped));
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1b61d1658_Serialize(jule::Ptr<_1b61ced60_TestCoder> _self_) {
	_1b629a47a_serializeHead((*(_self_))._field_oc);
	__JULE_DEFER({
		_1b629a27c_end((*_self_.alloc)._field_oc);
	});;
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\nvoid test_point(void) {\n", 25));
	_1b628e480_addIndent((*_self_.alloc)._field_oc);
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	if ((!(_1b61d0d61_readyTestingPackage(_self_)))) {
		_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
		_1b628e67d_doneIndent((*_self_.alloc)._field_oc);
		return;;
	};
	_22ab0b88c_StrBuilder _11813_tb = static__22ab0bb56_New(40LL);;
	_1b62a2707_structureIns((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &(_11813_tb), (*_self_.alloc)._field_t);
	_1b629ee74_asSptr((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _22ab16765_Buf(&_11813_tb));
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(" _t = jule::new_ptr<", 20));
	_1b628e282_writeBytes((*_self_.alloc)._field_oc, _22ab16765_Buf(&_11813_tb));
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(">(); _t.ref = nullptr;\n", 23));
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("auto post_test = [&](void) {\n", 29));
	_1b628e480_addIndent((*_self_.alloc)._field_oc);
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("++total;\n", 9));
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("if (", 4));
	_1b61d125c_callTmFailed(_self_);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("else if (", 9));
	_1b61d145a_callTmSkipped(_self_);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1b628e67d_doneIndent((*_self_.alloc)._field_oc);
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("};\n", 3));
	_1b61d0aca_appendPackageTests(_self_, &((*((*(*_self_.alloc)._field_oc.alloc)._field_ir))._field_Main));
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("\n\n", 2));
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("if (failed != 0) std::exit(1);\n", 31));
	_1b628e67d_doneIndent((*_self_.alloc)._field_oc);
	_1b628e87b_indent((*_self_.alloc)._field_oc);
	_1b628dec9_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1b61ced60_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline void static__1b61d3182_writeIdentTo(_22ab0b88c_StrBuilder* _3433_buf, jule::Str* _3451_ident) {
	{
		auto expr = _3451_ident;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8bb2631:;
		if (it != expr_end) {
			jule::U8 *_3516_b = it;
			{
				if (((*(_3516_b)) >= 128LLU)) {
					goto _julec_label_1b8bb37a8;
				};
			}
			_iter_next_1b8bb2631:;
			++it;
			goto _iter_begin_1b8bb2631;
		}
		_iter_end_1b8bb2631:;
	};
	_22ab154bc_WriteStr(_3433_buf, (*(_3451_ident)));
	return;;
	_julec_label_1b8bb37a8:;
	{
		auto expr = _3451_ident;
		char *it = expr->operator char*();
		const char *end = it + expr->len();
		std::size_t len;
		jule::I32 _4516_r;
		_iter_begin_1b8bb3ac7:;
		std::tie(_4516_r, len) = jule::utf8_decode_rune_str(it, end - it);
		if (it < end) {
			{
				if ((_4516_r < 128LL)) {
					_22ab15775_WriteByte(_3433_buf, static_cast<jule::U8>(_4516_r));
					goto _iter_next_1b8bb3ac7;
				};
				_22ab154bc_WriteStr(_3433_buf, _22be07cdb_FmtInt(static_cast<jule::I64>(_4516_r), 15LL));
			}
			_iter_next_1b8bb3ac7:;
			it += len;
			goto _iter_begin_1b8bb3ac7;
		}
	};
}



inline void static__1b61d3528_toOut(_22ab0b88c_StrBuilder* _6226_buf, jule::Str _6243_ident, jule::Uintptr _6255_addr) {
	_22ab15775_WriteByte(_6226_buf, '_');
	if ((_6255_addr != 0LLU)) {
		_22ab154bc_WriteStr(_6226_buf, _22be07923_FmtUint(static_cast<jule::U64>(_6255_addr), 15LL));
		_22ab15775_WriteByte(_6226_buf, '_');
	};
	static__1b61d3182_writeIdentTo(_6226_buf, &(_6243_ident));
}



inline void static__1b61d3979_toLocal(_22ab0b88c_StrBuilder* _7728_buf, jule::I32 _7745_row, jule::I32 _7755_col, jule::Str* _7766_ident) {
	_22ab15775_WriteByte(_7728_buf, '_');
	_22ab154bc_WriteStr(_7728_buf, _22be080a5_Itoa(_7745_row));
	_22ab154bc_WriteStr(_7728_buf, _22be080a5_Itoa(_7755_col));
	_22ab15775_WriteByte(_7728_buf, '_');
	static__1b61d3182_writeIdentTo(_7728_buf, _7766_ident);
}



inline void static__1b61d3c65_func(_22ab0b88c_StrBuilder* _8525_buf, jule::Ptr<_1ce00792d_Fn>* _8543_f) {
	{
		
		if ((*((*(_8543_f))))._field_Binded) {
			_case_begin_1b8bb8439:;
			{
				_22ab154bc_WriteStr(_8525_buf, (*((*(_8543_f))))._field_Ident);
				return;;
			}
		}
		else if ((*((*(_8543_f))))._field_Ident.equal("main", 4)) {
			_case_begin_1b8bb84d3:;
			{
				_22ab154bc_WriteStr(_8525_buf, jule::Str::lit("entry_point", 11));
				return;;
			}
		}
		else if (_1ce008137_IsMethod((*(_8543_f)).ptr())) {
			_case_begin_1b8bb8549:;
			{
				if ((*((*(_8543_f))))._field_Statically) {
					_22ab154bc_WriteStr(_8525_buf, jule::Str::lit("static_", 7));
				};
			}
		}
		_match_end_1b8bb82d5:;
	};
	static__1b61d3528_toOut(_8525_buf, (*((*(_8543_f))))._field_Ident, static_cast<jule::Uintptr>((*(_8543_f))));
}



inline void static__1b61d4051_funcIns(_22ab0b88c_StrBuilder* _10128_buf, jule::Ptr<_1ce00a832_FnIns>* _10146_f) {
	if (_1ce00bcb7_IsBuiltin((*(_10146_f)).ptr())) {
		_22ab154bc_WriteStr(_10128_buf, jule::Str::lit("jule::", 6));
		_22ab154bc_WriteStr(_10128_buf, (*((*((*(_10146_f))))._field_Decl))._field_Ident);
		return;;
	};
	if (((*(*((*(_10146_f))))._field_Decl.alloc)._field_Binded || ((*((*(_10146_f))))._field_Generics.len() == 0LL))) {
		static__1b61d3c65_func(_10128_buf, &((*((*(_10146_f))))._field_Decl));
		return;;
	};
	static__1b61d3528_toOut(_10128_buf, (*(*((*(_10146_f))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_10146_f))));
}



inline void static__1b61d433c_traitDecl(_22ab0b88c_StrBuilder* _11630_buf, jule::Ptr<_1ce01ac0a_Trait> _11647_t) {
	static__1b61d3528_toOut(_11630_buf, (*(_11647_t))._field_Ident, static_cast<jule::Uintptr>(_11647_t));
}



inline void static__1b61d4628_param(_22ab0b88c_StrBuilder* _12026_buf, jule::Ptr<_1ce005e59_Param>* _12044_p) {
	if ((_1cdeae165_IsAnonIdent((*((*(_12044_p))))._field_Ident) || _1cdeadd9b_IsIgnoreIdent((*((*(_12044_p))))._field_Ident))) {
		return;;
	};
	if (_1ce006575_IsSelf((*(_12044_p)).ptr())) {
		_22ab154bc_WriteStr(_12026_buf, jule::Str::lit("_self_", 6));
		return;;
	};
	if (((*((*(_12044_p))))._field_Token == nullptr)) {
		static__1b61d3979_toLocal(_12026_buf, 0LL, 0LL, &((*((*(_12044_p))))._field_Ident));
		return;;
	};
	static__1b61d3979_toLocal(_12026_buf, (*((*((*(_12044_p))))._field_Token))._field_Row, (*((*((*(_12044_p))))._field_Token))._field_Column, &((*((*(_12044_p))))._field_Ident));
}



inline void static__1b61d4914_structure(_22ab0b88c_StrBuilder* _13530_buf, jule::Ptr<_1cdee2990_Struct>* _13548_s) {
	if ((*((*(_13548_s))))._field_Binded) {
		if ((!(_1b5e54893_hasDirective(&((*((*(_13548_s))))._field_Directives), jule::Str::lit("typedef", 7))))) {
			_22ab154bc_WriteStr(_13530_buf, jule::Str::lit("struct ", 7));
		};
		_22ab154bc_WriteStr(_13530_buf, (*((*(_13548_s))))._field_Ident);
		return;;
	};
	static__1b61d3528_toOut(_13530_buf, (*((*(_13548_s))))._field_Ident, static_cast<jule::Uintptr>((*(_13548_s))));
}



inline void static__1b61d4c00_structureIns(_22ab0b88c_StrBuilder* _14633_buf, jule::Ptr<_1cdee571d_StructIns>* _14651_s) {
	if (((*((*((*(_14651_s))))._field_Decl))._field_Binded || ((*((*(_14651_s))))._field_Generics.len() == 0LL))) {
		static__1b61d4914_structure(_14633_buf, &((*((*(_14651_s))))._field_Decl));
		return;;
	};
	static__1b61d3528_toOut(_14633_buf, (*(*((*(_14651_s))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_14651_s))));
}



inline void static__1b61d4edb_field(_22ab0b88c_StrBuilder* _15426_buf, jule::Ptr<_1cdedea69_Field>* _15444_f) {
	if ((*((*((*(_15444_f))))._field_Owner))._field_Binded) {
		_22ab154bc_WriteStr(_15426_buf, (*((*(_15444_f))))._field_Ident);
		return;;
	};
	_22ab154bc_WriteStr(_15426_buf, jule::Str::lit("_field_", 7));
	static__1b61d3182_writeIdentTo(_15426_buf, &((*((*(_15444_f))))._field_Ident));
}



inline void static__1b61d52c7_var(_22ab0b88c_StrBuilder* _16424_buf, jule::Ptr<_1ce0b4105_Var> _16445_v) {
	{
		
		if ((*(_16445_v))._field_Binded) {
			_case_begin_1b97d72bb:;
			{
				_22ab154bc_WriteStr(_16424_buf, (*_16445_v.alloc)._field_Ident);
			}
		}
		else if ((*(_16445_v))._field_Ident.equal("error", 5)) {
			_case_begin_1b97d7332:;
			{
				_22ab154bc_WriteStr(_16424_buf, jule::Str::lit("except.error", 12));
			}
		}
		else if ((*(_16445_v))._field_Ident.equal("self", 4)) {
			_case_begin_1b97d7398:;
			{
				_22ab154bc_WriteStr(_16424_buf, jule::Str::lit("_self_", 6));
			}
		}
		else if (((*(_16445_v))._field_RetOrder == -1LL)) {
			_case_begin_1b97d740e:;
			{
				_22ab154bc_WriteStr(_16424_buf, jule::Str::lit("__jule_func_result", 18));
			}
		}
		else if (((*(_16445_v))._field_RetOrder >= 0LL)) {
			_case_begin_1b97d7475:;
			{
				_22ab154bc_WriteStr(_16424_buf, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
				_22ab154bc_WriteStr(_16424_buf, _22be080a5_Itoa((*_16445_v.alloc)._field_RetOrder));
			}
		}
		else if (((*(_16445_v))._field_Scope != nullptr)) {
			_case_begin_1b97d74db:;
			{
				static__1b61d3979_toLocal(_16424_buf, (*((*_16445_v.alloc)._field_Token))._field_Row, (*(*_16445_v.alloc)._field_Token.alloc)._field_Column, &((*_16445_v.alloc)._field_Ident));
			}
		}
		else {
			_case_begin_1b97d7255:;
			{
				static__1b61d3528_toOut(_16424_buf, (*(_16445_v))._field_Ident, static_cast<jule::Uintptr>(_16445_v));
			}
		}
		_match_end_1b97d7156:;
	};
}



inline void static__1b61d55b3_iterBegin(_22ab0b88c_StrBuilder* _18630_buf, jule::Uintptr _18647_it) {
	_22ab154bc_WriteStr(_18630_buf, jule::Str::lit("_iter_begin_", 12));
	_22ab154bc_WriteStr(_18630_buf, _22be07923_FmtUint(static_cast<jule::U64>(_18647_it), 15LL));
}



inline void static__1b61d589e_iterEnd(_22ab0b88c_StrBuilder* _19128_buf, jule::Uintptr _19145_it) {
	_22ab154bc_WriteStr(_19128_buf, jule::Str::lit("_iter_end_", 10));
	_22ab154bc_WriteStr(_19128_buf, _22be07923_FmtUint(static_cast<jule::U64>(_19145_it), 15LL));
}



inline void static__1b61d5b8a_iterNext(_22ab0b88c_StrBuilder* _19629_buf, jule::Uintptr _19646_it) {
	_22ab154bc_WriteStr(_19629_buf, jule::Str::lit("_iter_next_", 11));
	_22ab154bc_WriteStr(_19629_buf, _22be07923_FmtUint(static_cast<jule::U64>(_19646_it), 15LL));
}



inline void static__1b61d5e76_label(_22ab0b88c_StrBuilder* _20126_buf, jule::Uintptr _20143_u) {
	_22ab154bc_WriteStr(_20126_buf, jule::Str::lit("_julec_label_", 13));
	_22ab154bc_WriteStr(_20126_buf, _22be07923_FmtUint(static_cast<jule::U64>(_20143_u), 15LL));
}



inline void static__1b61d6262_matchEnd(_22ab0b88c_StrBuilder* _20629_buf, jule::Uintptr _20646_m) {
	_22ab154bc_WriteStr(_20629_buf, jule::Str::lit("_match_end_", 11));
	_22ab154bc_WriteStr(_20629_buf, _22be07923_FmtUint(static_cast<jule::U64>(_20646_m), 15LL));
}



inline void static__1b61d654d_caseBegin(_22ab0b88c_StrBuilder* _21130_buf, jule::Uintptr _21147_c) {
	_22ab154bc_WriteStr(_21130_buf, jule::Str::lit("_case_begin_", 12));
	_22ab154bc_WriteStr(_21130_buf, _22be07923_FmtUint(static_cast<jule::U64>(_21147_c), 15LL));
}





std::ostream &operator<<(std::ostream &_Stream, _1b61d2b76_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b628bd0c_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b628c3d4_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "ti:" << _Src._field_ti << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b628c7ad_traitCast _Src) {
	_Stream << "traitCast{";
	_Stream << "t1:" << _Src._field_t1 << ", ";
	_Stream << "t2:" << _Src._field_t2;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b629d318_Str(_1b629ce72_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1b629d659_Equal(jule::Ptr<_1b629ce72_customType> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _4121_k) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b629ce72_customType _Src) {
	_Stream << _1b629d318_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1b629da88_typeCoder> static__1b629e0c7_new(jule::Ptr<_1b628d825_ObjectCoder>* _6624_oc) {
	jule::Ptr<_1b629da88_typeCoder> _6713_tc = jule::new_ptr<_1b629da88_typeCoder>(_1b629da88_typeCoder{._field_oc=(*(_6624_oc)), });;
	(*(_6713_tc))._field_rc=static__1b5e506a2_new(&(_6713_tc));
	return _6713_tc;;
}



inline void _1b629e43a_toType(_1b629da88_typeCoder* _self_, _22ab0b88c_StrBuilder* _7330_buf, jule::Str _7351_id) {
	if ((!_7351_id.equal("uintptr", 7))) {
		_7351_id=_22be0a21c_RealKindOf(_7351_id);
	};
	_22ab154bc_WriteStr(_7330_buf, jule::Str::lit("jule::", 6));
	if (((97LL <= _7351_id[0LL]) && (_7351_id[0LL] <= 122LLU))) {
		_22ab15775_WriteByte(_7330_buf, (_7351_id[0LL] - 32LLU));
	} else {
		_22ab15775_WriteByte(_7330_buf, _7351_id[0LL]);
	};
	_22ab154bc_WriteStr(_7330_buf, _7351_id.slice(1LL));
}



inline void _1b629e79d_prim(_1b629da88_typeCoder* _self_, _22ab0b88c_StrBuilder* _8728_buf, jule::Ptr<_1ce1557a1_Prim> _8745_p) {
	_1b629e43a_toType(_self_, _8728_buf, (*(_8745_p))._field_Kind);
}



inline void _1b629eb11_tuple(_1b629da88_typeCoder* _self_, _22ab0b88c_StrBuilder* _9229_buf, jule::Ptr<_1ce15a894_Tuple> _9250_t) {
	_22ab154bc_WriteStr(_9229_buf, jule::Str::lit("std::tuple<", 11));
	{
		auto expr = &((*_9250_t.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b997bbad:;
		if (it != expr_end) {
			jule::I32 _9414_i = it - expr->begin();
			jule::Ptr<_1ce14cbc7_TypeKind> _9421_tk = *it;
			{
				_1b62a4451_kind(_self_, _9229_buf, _9421_tk);
				if ((((*(_9250_t))._field_Types.len() - _9414_i) > 1LL)) {
					_22ab15775_WriteByte(_9229_buf, ',');
				};
			}
			_iter_next_1b997bbad:;
			++it;
			_9414_i++;
			goto _iter_begin_1b997bbad;
		}
		_iter_end_1b997bbad:;
	};
	_22ab15775_WriteByte(_9229_buf, '>');
}



inline void _1b629ee74_asSptr(_1b629da88_typeCoder* _self_, _22ab0b88c_StrBuilder* _10430_buf, jule::Slice<jule::U8> _10447_elem) {
	_22ab154bc_WriteStr(_10430_buf, jule::Str::lit("jule::Ptr<", 10));
	_22ab15214_Write(_10430_buf, _10447_elem);
	_22ab15775_WriteByte(_10430_buf, '>');
}



inline void _1b62a02d7_sptr(_1b629da88_typeCoder* _self_, _22ab0b88c_StrBuilder* _11128_buf, jule::Ptr<_1ce1592cc_Sptr> _11149_sptr) {
	_22ab154bc_WriteStr(_11128_buf, jule::Str::lit("jule::Ptr<", 10));
	_1b62a4451_kind(_self_, _11128_buf, (*(_11149_sptr))._field_Elem);
	_22ab15775_WriteByte(_11128_buf, '>');
}



inline void _1b62a064a_ptr(_1b629da88_typeCoder* _self_, _22ab0b88c_StrBuilder* _11827_buf, jule::Ptr<_1ce15ca94_Ptr> _11848_p) {
	;
	if (_1ce15d5cd_IsUnsafe(_11848_p.ptr())) {
		_22ab154bc_WriteStr(_11827_buf, jule::Str::lit("void*", 5));
	} else {
		_1b62a4451_kind(_self_, _11827_buf, (*(_11848_p))._field_Elem);
		_22ab154bc_WriteStr(_11827_buf, jule::Str::lit("*", 1));
	};
}



inline void _1b62a09ad_enumDecl(_1b629da88_typeCoder* _self_, _22ab0b88c_StrBuilder* _12932_buf, jule::Ptr<_1ce01d416_Enum> _12953_e) {
	_1b62a4451_kind(_self_, _12932_buf, (*((*(_12953_e))._field_Kind))._field_Kind);
}



inline void _1b62a0d21_typeEnumDecl(_1b629da88_typeCoder* _self_, _22ab0b88c_StrBuilder* _13436_buf, jule::Ptr<_1ce01eb21_TypeEnum> _13457_e) {
	_22ab154bc_WriteStr(_13436_buf, jule::Str::lit("jule::Any", 9));
}



inline void _1b62a1184_asSlice(_1b629da88_typeCoder* _self_, _22ab0b88c_StrBuilder* _13831_buf, jule::Ptr<_1ce14cbc7_TypeKind> _13852_elem) {
	_22ab154bc_WriteStr(_13831_buf, jule::Str::lit("jule::Slice<", 12));
	_1b62a4451_kind(_self_, _13831_buf, _13852_elem);
	_22ab15775_WriteByte(_13831_buf, '>');
}



inline void _1b62a14e7_slice(_1b629da88_typeCoder* _self_, _22ab0b88c_StrBuilder* _14529_buf, jule::Ptr<_1ce159ca0_Slc> _14550_s) {
	_1b62a1184_asSlice(_self_, _14529_buf, (*(_14550_s))._field_Elem);
}



inline void _1b62a185a_mapType(_1b629da88_typeCoder* _self_, _22ab0b88c_StrBuilder* _15031_buf, jule::Ptr<_1ce15b444_Map> _15052_m) {
	_22ab154bc_WriteStr(_15031_buf, jule::Str::lit("jule::Map<", 10));
	_1b62a4451_kind(_self_, _15031_buf, (*(_15052_m))._field_Key);
	_22ab15775_WriteByte(_15031_buf, ',');
	_1b62a4451_kind(_self_, _15031_buf, (*_15052_m.alloc)._field_Val);
	_22ab15775_WriteByte(_15031_buf, '>');
}



inline void _1b62a2031_traitDecl(_1b629da88_typeCoder* _self_, _22ab0b88c_StrBuilder* _16533_buf, jule::Ptr<_1ce01ac0a_Trait> _16550_t) {
	_22ab154bc_WriteStr(_16533_buf, jule::Str::lit("jule::Trait<", 12));
	static__1b61d433c_traitDecl(_16533_buf, _16550_t);
	_22ab15775_WriteByte(_16533_buf, '>');
}



inline void _1b62a2394_structure(_1b629da88_typeCoder* _self_, _22ab0b88c_StrBuilder* _17233_buf, jule::Ptr<_1cdee2990_Struct> _17250_s) {
	static__1b61d4914_structure(_17233_buf, &(_17250_s));
}



inline void _1b62a2707_structureIns(_1b629da88_typeCoder* _self_, _22ab0b88c_StrBuilder* _17736_buf, jule::Ptr<_1cdee571d_StructIns> _17757_s) {
	if ((!((*((*(_17757_s))._field_Decl))._field_Binded))) {
		static__1b61d4c00_structureIns(_17736_buf, &(_17757_s));
		return;;
	};
	jule::Ptr<_1cdec0eac_Directive> _1829_d = _1b5e544ca_findDirective(&((*(*_17757_s.alloc)._field_Decl.alloc)._field_Directives), jule::Str::lit("namespace", 9));;
	if ((_1829_d != nullptr)) {
		_22ab15214_Write(_17736_buf, _1b629ad71_concatAllParts((*_1829_d.alloc)._field_Args));
		_22ab154bc_WriteStr(_17736_buf, jule::Str::lit("::", 2));
	};
	static__1b61d4c00_structureIns(_17736_buf, &(_17757_s));
	if (((*_17757_s.alloc)._field_Generics.len() > 0LL)) {
		_22ab15775_WriteByte(_17736_buf, '<');
		{
			auto expr = &((*_17757_s.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b998b272:;
			if (it != expr_end) {
				jule::I32 _19018_i = it - expr->begin();
				jule::Ptr<_1ce14b2e1_InsGeneric> _19025_g = *it;
				{
					_1b62a4451_kind(_self_, _17736_buf, (*(_19025_g))._field_Kind);
					if ((((*_17757_s.alloc)._field_Generics.len() - _19018_i) > 1LL)) {
						_22ab15775_WriteByte(_17736_buf, ',');
					};
				}
				_iter_next_1b998b272:;
				++it;
				_19018_i++;
				goto _iter_begin_1b998b272;
			}
			_iter_end_1b998b272:;
		};
		_22ab15775_WriteByte(_17736_buf, '>');
	};
}



inline void _1b62a2a6a_array(_1b629da88_typeCoder* _self_, _22ab0b88c_StrBuilder* _20129_buf, jule::Ptr<_1ce15c0c1_Arr> _20150_a) {
	_22ab154bc_WriteStr(_20129_buf, jule::Str::lit("jule::Array<", 12));
	_1b62a4451_kind(_self_, _20129_buf, (*(_20150_a))._field_Elem);
	_22ab15775_WriteByte(_20129_buf, ',');
	_22ab154bc_WriteStr(_20129_buf, _22be080a5_Itoa((*_20150_a.alloc)._field_N));
	_22ab15775_WriteByte(_20129_buf, '>');
}



inline void _1b62a3241_paramIns(_1b629da88_typeCoder* _self_, _22ab0b88c_StrBuilder* _22432_buf, jule::Ptr<_1ce009886_ParamIns>* _22454_p) {
	if ((*((*((*(_22454_p))))._field_Decl))._field_Variadic) {
		_22ab154bc_WriteStr(_22432_buf, jule::Str::lit("jule::Slice<", 12));
		_1b62a4451_kind(_self_, _22432_buf, (*((*(_22454_p))))._field_Kind);
		_22ab15775_WriteByte(_22432_buf, '>');
	} else {
		_1b62a4451_kind(_self_, _22432_buf, (*((*(_22454_p))))._field_Kind);
	};
	if ((*((*((*(_22454_p))))._field_Decl))._field_Reference) {
		_22ab15775_WriteByte(_22432_buf, '*');
	};
}



inline void _1b62a3917_funcInsResult(_1b629da88_typeCoder* _self_, _22ab0b88c_StrBuilder* _25637_s, jule::Ptr<_1ce00a832_FnIns>* _25657_f) {
	if (_1ce007da1_IsVoid((*((*(_25657_f))))._field_Decl.ptr())) {
		if ((*(*((*(_25657_f))))._field_Decl.alloc)._field_Exceptional) {
			_22ab154bc_WriteStr(_25637_s, jule::Str::lit("jule::VoidExceptional", 21));
		} else {
			_22ab154bc_WriteStr(_25637_s, jule::Str::lit("void", 4));
		};
		return;;
	};
	if ((*(*((*(_25657_f))))._field_Decl.alloc)._field_Exceptional) {
		_22ab154bc_WriteStr(_25637_s, jule::Str::lit("jule::Exceptional<", 18));
		_1b5e5275e_codeMut1((*(_self_))._field_rc.ptr(), _25637_s, &((*((*(_25657_f))))._field_Result));
		_22ab15775_WriteByte(_25637_s, '>');
		return;;
	};
	_1b5e5275e_codeMut1((*(_self_))._field_rc, _25637_s, &((*((*(_25657_f))))._field_Result));
}



inline void _1b62a3c7a_anonFunc(_1b629da88_typeCoder* _self_, _22ab0b88c_StrBuilder* _27432_buf, jule::Ptr<_1ce00a832_FnIns> _27453_f) {
	if ((((*(_27453_f))._field_Result != nullptr) && (_1ce15214e_Tup((*_27453_f.alloc)._field_Result) != nullptr))) {
		_1b62902b6_pushResultIns((*(_self_))._field_oc, &(_27453_f));
	};
	_1b62a3917_funcInsResult(_self_, _27432_buf, &(_27453_f));
	_22ab15775_WriteByte(_27432_buf, '(');
	if (((*_27453_f.alloc)._field_Params.len() > 0LL)) {
		{
			auto expr = &((*_27453_f.alloc)._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b999c88d:;
			if (it != expr_end) {
				jule::I32 _28118_i = it - expr->begin();
				jule::Ptr<_1ce009886_ParamIns> _28125_param = *it;
				{
					if (_1ce006575_IsSelf((*(_28125_param))._field_Decl.ptr())) {
						goto _iter_next_1b999c88d;
					};
					_1b62a3241_paramIns(_self_, _27432_buf, &(_28125_param));
					if ((((*_27453_f.alloc)._field_Params.len() - _28118_i) > 1LL)) {
						_22ab15775_WriteByte(_27432_buf, ',');
					};
				}
				_iter_next_1b999c88d:;
				++it;
				_28118_i++;
				goto _iter_begin_1b999c88d;
			}
			_iter_end_1b999c88d:;
		};
	} else {
		_22ab154bc_WriteStr(_27432_buf, jule::Str::lit("void", 4));
	};
	_22ab15775_WriteByte(_27432_buf, ')');
}



inline void _1b62a40dd_func(_1b629da88_typeCoder* _self_, _22ab0b88c_StrBuilder* _29728_buf, jule::Ptr<_1ce00a832_FnIns> _29749_f) {
	_22ab154bc_WriteStr(_29728_buf, jule::Str::lit("jule::Fn<", 9));
	_1b62a3c7a_anonFunc(_self_, _29728_buf, _29749_f);
	_22ab15775_WriteByte(_29728_buf, '>');
}



inline void _1b62a4451_kind(_1b629da88_typeCoder* _self_, _22ab0b88c_StrBuilder* _30428_buf, jule::Ptr<_1ce14cbc7_TypeKind> _30449_k) {
	{
		
		if ((_1ce15189b_Struct(_30449_k.ptr()) != nullptr)) {
			_case_begin_1b99a1595:;
			{
				_1b62a2707_structureIns(_self_, _30428_buf, _1ce15189b_Struct(_30449_k));
				return;;
			}
		}
		else if (_1ce14da1e_Binded(_30449_k.ptr())) {
			_case_begin_1b99a163e:;
			{
				_22ab154bc_WriteStr(_30428_buf, (*_30449_k.alloc)._field_BindIdent);
				return;;
			}
		}
		else if ((_1ce150328_Prim(_30449_k.ptr()) != nullptr)) {
			_case_begin_1b99a16a5:;
			{
				_1b629e79d_prim(_self_, _30428_buf, _1ce150328_Prim(_30449_k));
				return;;
			}
		}
		else if ((_1ce15214e_Tup(_30449_k.ptr()) != nullptr)) {
			_case_begin_1b99a171b:;
			{
				_1b629eb11_tuple(_self_, _30428_buf, _1ce15214e_Tup(_30449_k));
				return;;
			}
		}
		else if ((_1ce1505ae_Sptr(_30449_k.ptr()) != nullptr)) {
			_case_begin_1b99a1782:;
			{
				_1b62a02d7_sptr(_self_, _30428_buf, _1ce1505ae_Sptr(_30449_k));
				return;;
			}
		}
		else if ((_1ce150845_Ptr(_30449_k.ptr()) != nullptr)) {
			_case_begin_1b99a1809:;
			{
				_1b62a064a_ptr(_self_, _30428_buf, _1ce150845_Ptr(_30449_k));
				return;;
			}
		}
		else if ((_1ce150acb_Enum(_30449_k.ptr()) != nullptr)) {
			_case_begin_1b99a1881:;
			{
				_1b62a09ad_enumDecl(_self_, _30428_buf, _1ce150acb_Enum(_30449_k));
				return;;
			}
		}
		else if ((_1ce150d62_TypeEnum(_30449_k.ptr()) != nullptr)) {
			_case_begin_1b99a1908:;
			{
				_1b62a0d21_typeEnumDecl(_self_, _30428_buf, _1ce150d62_TypeEnum(_30449_k));
				return;;
			}
		}
		else if ((_1ce15137e_Slc(_30449_k.ptr()) != nullptr)) {
			_case_begin_1b99a1980:;
			{
				_1b62a14e7_slice(_self_, _30428_buf, _1ce15137e_Slc(_30449_k));
				return;;
			}
		}
		else if ((_1ce151db8_Map(_30449_k.ptr()) != nullptr)) {
			_case_begin_1b99a1a07:;
			{
				_1b62a185a_mapType(_self_, _30428_buf, _1ce151db8_Map(_30449_k));
				return;;
			}
		}
		else if ((_1ce151b32_Trait(_30449_k.ptr()) != nullptr)) {
			_case_begin_1b99a1a7e:;
			{
				_1b62a2031_traitDecl(_self_, _30428_buf, _1ce151b32_Trait(_30449_k));
				return;;
			}
		}
		else if ((_1ce1510e8_Arr(_30449_k.ptr()) != nullptr)) {
			_case_begin_1b99a1b06:;
			{
				_1b62a2a6a_array(_self_, _30428_buf, _1ce1510e8_Arr(_30449_k));
				return;;
			}
		}
		else if ((_1ce151615_Fn(_30449_k.ptr()) != nullptr)) {
			_case_begin_1b99a1b7d:;
			{
				_1b62a40dd_func(_self_, _30428_buf, _1ce151615_Fn(_30449_k));
				return;;
			}
		}
		_match_end_1b99a13b9:;
	};
	{
		auto &_match_expr{ (*(_30449_k))._field_Kind };
		
		if (_match_expr.type_is(true, 27)) {
			_case_begin_1b99a1c16:;
			{
				_22ab154bc_WriteStr(_30428_buf, (*((*(_30449_k))._field_Kind.cast_ptr<_1b629ce72_customType>(27)))._field_kind);
			}
		}
		else {
			_case_begin_1b99aa55a:;
			{
				_22ab154bc_WriteStr(_30428_buf, jule::Str::lit("[<unimplemented_type_kind>]", 27));
			}
		}
		_match_end_1b99aa505:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1b629da88_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b5e501b8_resultCoder> static__1b5e506a2_new(jule::Ptr<_1b629da88_typeCoder>* _37124_tc) {
	return jule::new_ptr<_1b5e501b8_resultCoder>(_1b5e501b8_resultCoder{._field_tc=(*(_37124_tc))});;
}



inline void _1b5e50a15_ptr(_1b5e501b8_resultCoder* _self_, _22ab0b88c_StrBuilder* _37527_s, jule::Ptr<_1ce15ca94_Ptr> _37546_p) {
	_22ab154bc_WriteStr(_37527_s, jule::Str::lit("p", 1));
	_1b5e523eb_codeMut(_self_, _37527_s, &((*(_37546_p))._field_Elem));
}



inline void _1b5e50d78_sptr(_1b5e501b8_resultCoder* _self_, _22ab0b88c_StrBuilder* _38028_s, jule::Ptr<_1ce1592cc_Sptr> _38047_p) {
	_22ab154bc_WriteStr(_38028_s, jule::Str::lit("x", 1));
	_1b5e523eb_codeMut(_self_, _38028_s, &((*(_38047_p))._field_Elem));
}



inline void _1b5e511db_mapType(_1b5e501b8_resultCoder* _self_, _22ab0b88c_StrBuilder* _38531_s, jule::Ptr<_1ce15b444_Map> _38550_p) {
	_22ab154bc_WriteStr(_38531_s, jule::Str::lit("m", 1));
	_1b5e523eb_codeMut(_self_, _38531_s, &((*(_38550_p))._field_Key));
	_1b5e523eb_codeMut(_self_, _38531_s, &((*_38550_p.alloc)._field_Val));
}



inline void _1b5e5154e_slice(_1b5e501b8_resultCoder* _self_, _22ab0b88c_StrBuilder* _39129_s, jule::Ptr<_1ce159ca0_Slc> _39148_slc) {
	_22ab154bc_WriteStr(_39129_s, jule::Str::lit("s", 1));
	_1b5e523eb_codeMut(_self_, _39129_s, &((*(_39148_slc))._field_Elem));
}



inline void _1b5e518b2_arr(_1b5e501b8_resultCoder* _self_, _22ab0b88c_StrBuilder* _39627_s, jule::Ptr<_1ce15c0c1_Arr> _39646_arr) {
	_22ab154bc_WriteStr(_39627_s, jule::Str::lit("a", 1));
	_22ab154bc_WriteStr(_39627_s, _22be07cdb_FmtInt(static_cast<jule::I64>((*(_39646_arr))._field_N), 16LL));
	_1b5e523eb_codeMut(_self_, _39627_s, &((*_39646_arr.alloc)._field_Elem));
}



inline void _1b5e51c25_func(_1b5e501b8_resultCoder* _self_, _22ab0b88c_StrBuilder* _40228_s, jule::Ptr<_1ce00a832_FnIns> _40247_f) {
	_22ab154bc_WriteStr(_40228_s, jule::Str::lit("f", 1));
	{
		auto expr = &((*(_40247_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b99b29d5:;
		if (it != expr_end) {
			jule::Ptr<_1ce009886_ParamIns> _40421_p = *it;
			{
				if ((*((*(_40421_p))._field_Decl))._field_Reference) {
					_22ab154bc_WriteStr(_40228_s, jule::Str::lit("r", 1));
				};
				_1b5e523eb_codeMut(_self_, _40228_s, &((*_40421_p.alloc)._field_Kind));
			}
			_iter_next_1b99b29d5:;
			++it;
			goto _iter_begin_1b99b29d5;
		}
		_iter_end_1b99b29d5:;
	};
	if (((*_40247_f.alloc)._field_Result != nullptr)) {
		_1b5e523eb_codeMut(_self_, _40228_s, &((*_40247_f.alloc)._field_Result));
	};
}



inline void _1b5e52088_tup(_1b5e501b8_resultCoder* _self_, _22ab0b88c_StrBuilder* _41527_s, jule::Ptr<_1ce15a894_Tuple> _41546_tup) {
	{
		auto expr = &((*(_41546_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b99b5136:;
		if (it != expr_end) {
			jule::Ptr<_1ce14cbc7_TypeKind> _41621_t = *it;
			{
				_22ab154bc_WriteStr(_41527_s, jule::Str::lit("__jule_tuple_", 13));
				_1b5e523eb_codeMut(_self_, _41527_s, &(_41621_t));
			}
			_iter_next_1b99b5136:;
			++it;
			goto _iter_begin_1b99b5136;
		}
		_iter_end_1b99b5136:;
	};
}



inline void _1b5e523eb_codeMut(_1b5e501b8_resultCoder* _self_, _22ab0b88c_StrBuilder* _42231_s, jule::Ptr<_1ce14cbc7_TypeKind>* _42251_t) {
	{
		auto &_match_expr{ (*((*(_42251_t))))._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_1b99b6335:;
			{
				_1b5e50a15_ptr(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1ce15ca94_Ptr>(26));
			}
		}
		else if (_match_expr.type_is(true, 21)) {
			_case_begin_1b99b6a50:;
			{
				_1b5e50d78_sptr(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1ce1592cc_Sptr>(21));
			}
		}
		else if (_match_expr.type_is(true, 24)) {
			_case_begin_1b99b67db:;
			{
				_1b5e511db_mapType(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1ce15b444_Map>(24));
			}
		}
		else if (_match_expr.type_is(true, 22)) {
			_case_begin_1b99b6852:;
			{
				_1b5e5154e_slice(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1ce159ca0_Slc>(22));
			}
		}
		else if (_match_expr.type_is(true, 25)) {
			_case_begin_1b99b68b8:;
			{
				_1b5e518b2_arr(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1ce15c0c1_Arr>(25));
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1b99b692e:;
			{
				_1b5e51c25_func(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1ce00a832_FnIns>(1));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1b99b6c92:;
			{
				jule::Ptr<_1ce01d416_Enum> _43713_te = (*((*(_42251_t))))._field_Kind.cast_ptr<_1ce01d416_Enum>(3);;
				static__1b61d3528_toOut(_42231_s, (*(_43713_te))._field_Ident, static_cast<jule::Uintptr>(_43713_te));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1b99b6d08:;
			{
				jule::Ptr<_1ce01eb21_TypeEnum> _44013_te = (*((*(_42251_t))))._field_Kind.cast_ptr<_1ce01eb21_TypeEnum>(4);;
				static__1b61d3528_toOut(_42231_s, (*(_44013_te))._field_Ident, static_cast<jule::Uintptr>(_44013_te));
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1b99b6d6e:;
			{
				jule::Ptr<_1cdee571d_StructIns> _44317_si = (*((*(_42251_t))))._field_Kind.cast_ptr<_1cdee571d_StructIns>(0);;
				static__1b61d4c00_structureIns(_42231_s, &(_44317_si));
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1b99b6dd5:;
			{
				jule::Ptr<_1ce01ac0a_Trait> _44617_trt = (*((*(_42251_t))))._field_Kind.cast_ptr<_1ce01ac0a_Trait>(2);;
				static__1b61d433c_traitDecl(_42231_s, _44617_trt);
			}
		}
		else if (_match_expr.type_is(true, 20)) {
			_case_begin_1b99b6e5c:;
			{
				_22ab154bc_WriteStr(_42231_s, (*((*((*(_42251_t))))._field_Kind.cast_ptr<_1ce1557a1_Prim>(20)))._field_Kind);
			}
		}
		else if (_match_expr.type_is(true, 23)) {
			_case_begin_1b99b6ed4:;
			{
				_1b5e52088_tup(_self_, _42231_s, (*((*(_42251_t))))._field_Kind.cast_ptr<_1ce15a894_Tuple>(23));
			}
		}
		else {
			_case_begin_1b99b6687:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:453:13"));;
			}
		}
		_match_end_1b99b6632:;
	};
}



inline void _1b5e5275e_codeMut1(_1b5e501b8_resultCoder* _self_, _22ab0b88c_StrBuilder* _45732_s, jule::Ptr<_1ce14cbc7_TypeKind>* _45752_t) {
	jule::Ptr<_1ce15a894_Tuple> _45813_tup = _1ce15214e_Tup((*(_45752_t)).ptr());;
	if ((_45813_tup != nullptr)) {
		_1b5e52088_tup(_self_, _45732_s, _45813_tup);
	} else {
		_1b62a4451_kind((*(_self_))._field_tc.ptr(), _45732_s, (*(_45752_t)));
	};
}



inline jule::Slice<jule::U8> _1b5e52aa0_code(_1b5e501b8_resultCoder* _self_, jule::Ptr<_1ce14cbc7_TypeKind>* _46628_t) {
	_22ab0b88c_StrBuilder _46713_s = static__22ab0bb56_New(20LL);;
	_1b5e523eb_codeMut(_self_, &(_46713_s), _46628_t);
	return _22ab16765_Buf(&_46713_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1b5e501b8_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b99c3177_Name(_1b99c2c15_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b99c32cb_What(_1b99c2c15_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b99c3430_Reset(_1b99c2c15_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b99c3584_Short(_1b99c2c15_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b99c2c15_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1b99c64bb_Name(_1b99c6851_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b99c6b3c_What(_1b99c6851_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b99c6c80_Reset(_1b99c6851_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b99c6dc3_Short(_1b99c6851_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b99c6851_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1b99c9b73_Name(_1b99ca008_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b99ca2e4_What(_1b99ca008_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b99ca437_Reset(_1b99ca008_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b99ca57a_Short(_1b99ca008_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b99ca008_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1b99cd36e_Name(_1b99cd704_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b99cd9e0_What(_1b99cd704_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b99cdb33_Reset(_1b99cd704_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b99cdc76_Short(_1b99cd704_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b99cd704_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1b99d1a26_Name(_1b99d1dab_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b99d2197_What(_1b99d1dab_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b99d22da_Reset(_1b99d1dab_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b99d242d_Short(_1b99d1dab_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b99d1dab_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b5eba81b_FlagSet> static__1b5ebab07_New(void) {
	return jule::new_ptr<_1b5eba81b_FlagSet>(_1b5eba81b_FlagSet{._field_flags=jule::Slice<jule::Trait<_1b5eb8c48_CommonFlag>>::alloc(0LL, 20LL)});;
}



inline jule::Trait<_1b5eb8c48_CommonFlag> _1b5ebb0ad_FindFlag(_1b5eba81b_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b99dbeb5:;
		if (it != expr_end) {
			jule::Trait<_1b5eb8c48_CommonFlag> _7221_flag = *it;
			{
				if ((_1b5eb8c48_CommonFlag_mptr_data[(_7221_flag).type_offset]._1b5e88113_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;;
				};
			}
			_iter_next_1b99dbeb5:;
			++it;
			goto _iter_begin_1b99dbeb5;
		}
		_iter_end_1b99dbeb5:;
	};
	return nullptr;;
}



inline jule::Trait<_1b5eb8c48_CommonFlag> _1b5ebb3ee_FindFlagShort(_1b5eba81b_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b99dc515:;
		if (it != expr_end) {
			jule::Trait<_1b5eb8c48_CommonFlag> _8221_flag = *it;
			{
				if ((_1b5eb8c48_CommonFlag_mptr_data[(_8221_flag).type_offset]._1b5e88256_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;;
				};
			}
			_iter_next_1b99dc515:;
			++it;
			goto _iter_begin_1b99dc515;
		}
		_iter_end_1b99dc515:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1b5ebb9c6_Parse(_1b5eba81b_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_1b5ebd2d0_argParser _11613_ap = _1b5ebd2d0_argParser{._field_set=(*(_self_)), ._field_args=_11524_args, };;
	({
		auto except = _1b5ebe7cb_parse(&_11613_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>{.result=_11613_ap._field_content};;
}



inline jule::Ptr<_1b99d1dab_Flag> _1b9a4a056_addFlagCommon(_1b5eba81b_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	if ((_1b5ebb0ad_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:133:13"));;
	};
	if (((_13146_short != 0LL) && (_1b5ebb3ee_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:13"));;
	};
	jule::Ptr<_1b99d1dab_Flag> _14013_flag = jule::new_ptr<_1b99d1dab_Flag>(_1b99d1dab_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_1b5eb8c48_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_1b5eb8c48_CommonFlag>(_14013_flag, 4)); };
	return _14013_flag;;
}

inline jule::Ptr<_1b99cd704_Flag> _1b9a51e70_addFlagCommon(_1b5eba81b_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	if ((_1b5ebb0ad_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:133:13"));;
	};
	if (((_13146_short != 0LL) && (_1b5ebb3ee_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:13"));;
	};
	jule::Ptr<_1b99cd704_Flag> _14013_flag = jule::new_ptr<_1b99cd704_Flag>(_1b99cd704_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_1b5eb8c48_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_1b5eb8c48_CommonFlag>(_14013_flag, 3)); };
	return _14013_flag;;
}



inline void _1b9a47cac_AddVar(_1b5eba81b_FlagSet* _self_, jule::Ptr<jule::Str> _16762_var, jule::Str _16771_name, jule::I32 _16782_short, jule::Str _16795_what) {
	jule::Ptr<_1b99d1dab_Flag> _16813_flag = _1b9a4a056_addFlagCommon(_self_, _16771_name, _16782_short, _16795_what);;
	(*(_16813_flag))._field_default=(*(_16762_var));
	(*_16813_flag.alloc)._field_data=_16762_var;
}

inline void _1b9a4ec1a_AddVar(_1b5eba81b_FlagSet* _self_, jule::Ptr<jule::Bool> _16762_var, jule::Str _16771_name, jule::I32 _16782_short, jule::Str _16795_what) {
	jule::Ptr<_1b99cd704_Flag> _16813_flag = _1b9a51e70_addFlagCommon(_self_, _16771_name, _16782_short, _16795_what);;
	(*(_16813_flag))._field_default=(*(_16762_var));
	(*_16813_flag.alloc)._field_data=_16762_var;
}





std::ostream &operator<<(std::ostream &_Stream, _1b5eba81b_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _1b99e4be3_parseInteger(_1b5ebd2d0_argParser* _self_, jule::Str* _18231_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I32)> _18239_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18231_s))).empty()) {
			_case_begin_1b99e780b:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_22aae7867_HasPrefix((*(_18231_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1b99e7b91:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_22aae7867_HasPrefix((*(_18231_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1b99e7355:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_22aae7867_HasPrefix((*(_18231_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1b99e73bb:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18231_s))[0LL] == '0')) {
			_case_begin_1b99e7432:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1b99e72de:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1b99e71e0:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1b99ec4c0_parseInteger(_1b5ebd2d0_argParser* _self_, jule::Str* _18231_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I32)> _18239_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18231_s))).empty()) {
			_case_begin_1b9a00094:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_22aae7867_HasPrefix((*(_18231_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1b9a00429:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_22aae7867_HasPrefix((*(_18231_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1b99eeadd:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_22aae7867_HasPrefix((*(_18231_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1b99eeb54:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18231_s))[0LL] == '0')) {
			_case_begin_1b99eebba:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1b99eea77:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1b99ee978:;
	};
	return __jule_func_result;;
}



inline jule::Str _1b5ebdae9_getData(_1b5ebd2d0_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1b5ebdd6e_processFlag(_1b5ebd2d0_argParser* _self_, jule::Trait<_1b5eb8c48_CommonFlag>* _20935_flag) {
	{
		auto &_match_expr{ (*(_20935_flag)) };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1b99e1e10:;
			{
				jule::Ptr<_1b99cd704_Flag> _21217_bf = (*(_20935_flag)).cast_ptr<_1b99cd704_Flag>(3);;
				(*((*(_21217_bf))._field_data))=(!((*_21217_bf.alloc)._field_default));
				return jule::VoidExceptional{};;
			}
		}
		_match_end_1b99e1daa:;
	};
	jule::Str _2179_data = _1b5ebdae9_getData(_self_);;
	if ((_2179_data).empty()) {
		return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + _1b5eb8c48_CommonFlag_mptr_data[((*(_20935_flag))).type_offset]._1b5e88113_Name((*(_20935_flag)))) + jule::Str::lit(": expression missing", 20)), &__jule_any_type4)};
	};
	{
		auto &_match_expr{ (*(_20935_flag)) };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b99e3c9c:;
			{
				jule::Ptr<_1b99c2c15_Flag> _22417_intf = (*(_20935_flag)).cast_ptr<_1b99c2c15_Flag>(0);;
				jule::Bool _22527_ok;;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1b99e4be3_parseInteger(_self_, &(_2179_data), jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I32)>([=](jule::Str _22565_s, jule::I32 _22573_base) mutable -> __jule_tuple_i64__jule_tuple_bool {
						__jule_tuple_i64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = ({
							auto except = _22bde6736_ParseInt(_22565_s, _22573_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LL;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						});
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*((*(_22417_intf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_22527_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_22527_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + _1b5eb8c48_CommonFlag_mptr_data[((*(_20935_flag))).type_offset]._1b5e88113_Name((*(_20935_flag)))) + jule::Str::lit(": expression must be valid signed integer", 41)), &__jule_any_type4)};
				};
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1b99e362b:;
			{
				jule::Ptr<_1b99c6851_Flag> _23217_uintf = (*(_20935_flag)).cast_ptr<_1b99c6851_Flag>(1);;
				jule::Bool _23328_ok;;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1b99ec4c0_parseInteger(_self_, &(_2179_data), jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I32)>([=](jule::Str _23366_s, jule::I32 _23374_base) mutable -> __jule_tuple_u64__jule_tuple_bool {
						__jule_tuple_u64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = ({
							auto except = _22bde6280_ParseUint(_23366_s, _23374_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LLU;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						});
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*((*(_23217_uintf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23328_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23328_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + _1b5eb8c48_CommonFlag_mptr_data[((*(_20935_flag))).type_offset]._1b5e88113_Name((*(_20935_flag)))) + jule::Str::lit(": expression must be valid unsigned integer", 43)), &__jule_any_type4)};
				};
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1b99e3d35:;
			{
				jule::Ptr<_1b99ca008_Flag> _24017_ff = (*(_20935_flag)).cast_ptr<_1b99ca008_Flag>(2);;
				(*((*(_24017_ff))._field_data))=({
					auto except = _22bded056_ParseFloat(_2179_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + _1b5eb8c48_CommonFlag_mptr_data[((*(_20935_flag))).type_offset]._1b5e88113_Name((*(_20935_flag)))) + jule::Str::lit(": expression must be valid floating-point", 41)), &__jule_any_type4)};
					} 0;});
				});
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1b99e3d9b:;
			{
				(*((*((*(_20935_flag)).cast_ptr<_1b99d1dab_Flag>(4)))._field_data))=_2179_data;
			}
		}
		_match_end_1b99e36b4:;
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1b5ebe127_singleDash(_1b5ebd2d0_argParser* _self_, jule::Str* _24930_arg) {
	if (((*(_24930_arg)).len() == 1LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_24930_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4)};
	};
	{
		auto expr = (*(_24930_arg)).slice(1LL);
		char *it = expr.operator char*();
		const char *end = it + expr.len();
		std::size_t len;
		jule::I32 _25416_r;
		_iter_begin_1b9a06672:;
		std::tie(_25416_r, len) = jule::utf8_decode_rune_str(it, end - it);
		if (it < end) {
			{
				jule::Trait<_1b5eb8c48_CommonFlag> _25517_flag = _1b5ebb3ee_FindFlagShort(&(*(_self_))._field_set, _25416_r);;
				if ((_25517_flag == nullptr)) {
					return jule::VoidExceptional{.error=jule::Any((((*(_24930_arg)) + jule::Str::lit(": flag is not exist: ", 21)) + jule::Str::from_rune(_25416_r)), &__jule_any_type4)};
				};
				({
					auto except = _1b5ebdd6e_processFlag(_self_, &(_25517_flag));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
			}
			_iter_next_1b9a06672:;
			it += len;
			goto _iter_begin_1b9a06672;
		}
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1b5ebe3d0_doubleDash(_1b5ebd2d0_argParser* _self_, jule::Str* _26330_arg) {
	if (((*(_26330_arg)).len() == 2LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26330_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4)};
	};
	jule::Trait<_1b5eb8c48_CommonFlag> _26713_flag = _1b5ebb0ad_FindFlag(&(*(_self_))._field_set, (*(_26330_arg)).slice(2LL));;
	if ((_26713_flag == nullptr)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26330_arg)) + jule::Str::lit(": flag is not exist", 19)), &__jule_any_type4)};
	};
	return _1b5ebdd6e_processFlag(_self_, &(_26713_flag));
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1b5ebe5cd_tryArg(_1b5ebd2d0_argParser* _self_) {
	jule::Str _2759_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional{};;
	};
	if ((_2759_arg[0LL] == '-')) {
		if (((_2759_arg.len() > 1LL) && (_2759_arg[1LL] == '-'))) {
			({
				auto except = _1b5ebe3d0_doubleDash(_self_, &(_2759_arg));
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
			return jule::VoidExceptional{};;
		};
		({
			auto except = _1b5ebe127_singleDash(_self_, &(_2759_arg));
			if (!except.ok()) {
				return jule::VoidExceptional{.error=std::move(except.error)};
			}
		});
		return jule::VoidExceptional{};;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_2759_arg); };
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1b5ebe7cb_parse(_1b5ebd2d0_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1b5ebe5cd_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
		}
	_iter_next_1b9a0c0c3:;
	}
	_iter_end_1b9a0c0c3:;;
	return jule::VoidExceptional{};
}





std::ostream &operator<<(std::ostream &_Stream, _1b5ebd2d0_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b628d825_ObjectCoder> static__1b628dc21_New(jule::Ptr<_1b57ae72b_IR>* _9424_ir, _1b628bd0c_SerializationInfo _9433_info) {
	jule::Ptr<_1b628d825_ObjectCoder> _9513_oc = jule::new_ptr<_1b628d825_ObjectCoder>(_1b628d825_ObjectCoder{._field_ir=(*(_9424_ir)), ._field_info=_9433_info, });;
	(*(_9513_oc))._field_ec=static__1b61be0c4_new(&(_9513_oc));
	(*_9513_oc.alloc)._field_sc=static__1b61aeba8_new(&(_9513_oc));
	(*_9513_oc.alloc)._field_tc=static__1b629e0c7_new(&(_9513_oc));
	return _9513_oc;;
}



inline void _1b628dec9_write(jule::Ptr<_1b628d825_ObjectCoder> _self_, jule::Str _10525_s) {
	_22ab154bc_WriteStr(&(*(_self_))._field_Buf, _10525_s);
}



inline void _1b628e282_writeBytes(jule::Ptr<_1b628d825_ObjectCoder> _self_, jule::Slice<jule::U8> _10930_b) {
	_22ab15214_Write(&(*(_self_))._field_Buf, _10930_b);
}



inline void _1b628e480_addIndent(jule::Ptr<_1b628d825_ObjectCoder> _self_) {
	(*(_self_))._field_indentBuffer=jule::append((*_self_.alloc)._field_indentBuffer,jule::Slice<jule::U8>::make({9LLU}));
}



inline void _1b628e67d_doneIndent(jule::Ptr<_1b628d825_ObjectCoder> _self_) {
	(*(_self_))._field_indentBuffer=(*_self_.alloc)._field_indentBuffer.slice(0LL, ((*_self_.alloc)._field_indentBuffer.len() - 1LL));
}



inline void _1b628e87b_indent(jule::Ptr<_1b628d825_ObjectCoder> _self_) {
	_22ab15214_Write(&(*(_self_))._field_Buf, (*_self_.alloc)._field_indentBuffer);
}



inline jule::I32 _1b628ebbc_findAnyType(jule::Ptr<_1b628d825_ObjectCoder> _self_, jule::Ptr<_1ce14cbc7_TypeKind>* _12836_t) {
	{
		auto expr = &((*(_self_))._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b980c016:;
		if (it != expr_end) {
			jule::I32 _12914_i = it - expr->begin();
			jule::Ptr<_1ce14cbc7_TypeKind> _12921_at = *it;
			{
				if (_1ce14d3d1_Equal(_12921_at, (*(_12836_t)))) {
					return _12914_i;;
				};
			}
			_iter_next_1b980c016:;
			++it;
			_12914_i++;
			goto _iter_begin_1b980c016;
		}
		_iter_end_1b980c016:;
	};
	return -1LL;;
}



inline jule::I32 _1b629000d_pushAnyType(jule::Ptr<_1b628d825_ObjectCoder> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _13735_t) {
	if ((_1ce150acb_Enum(_13735_t.ptr()) != nullptr)) {
		_13735_t=(*((*(_1ce150acb_Enum(_13735_t)))._field_Kind))._field_Kind;
	};
	jule::I32 _14113_i = _1b628ebbc_findAnyType(_self_, &(_13735_t));;
	if ((_14113_i != -1LL)) {
		return _14113_i;;
	};
	_14113_i=(*_self_.alloc)._field_anyTypeMap.len();
	(*_self_.alloc)._field_anyTypeMap=jule::append((*_self_.alloc)._field_anyTypeMap,jule::Slice<jule::Ptr<_1ce14cbc7_TypeKind>>::make({_13735_t}));
	jule::Str _1479_si = _22be080a5_Itoa(_14113_i);;
	if ((_1ce1505ae_Sptr(_13735_t) != nullptr)) {
		_22ab0b88c_StrBuilder _14917_elemKind = static__22ab0bb56_New(40LL);;
		_1b62a4451_kind((*_self_.alloc)._field_tc.ptr(), &(_14917_elemKind), (*(_1ce1505ae_Sptr(_13735_t)))._field_Elem);
		_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("void __jule_any_type", 20));
		_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, _1479_si);
		_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64));
		_22ab15214_Write(&(*_self_.alloc)._field_anyObj, _22ab16765_Buf(&_14917_elemKind));
		_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(">().dealloc(); }\n", 17));
		_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, _1479_si);
		_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_any_type", 25));
		_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, _1479_si);
		_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 58));
		_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
		_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, _1479_si);
		_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
		_1b629ee74_asSptr((*_self_.alloc)._field_tc, &((*_self_.alloc)._field_anyObj), _22ab16765_Buf(&_14917_elemKind));
		_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
		_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, _1479_si);
		_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52));
	} else {
		jule::Bool _17613_comparable = _1ce14e2c2_Comparable(_13735_t);;
		_22ab0b88c_StrBuilder _17717_kindB = static__22ab0bb56_New(40LL);;
		_1b62a4451_kind((*_self_.alloc)._field_tc.ptr(), &(_17717_kindB), _13735_t);
		jule::Slice<jule::U8> _17913_kind = _22ab16765_Buf(&_17717_kindB);;
		if (_243a89b54_BytesStr(_17913_kind).equal("[<unimplemented_type_kind>]", 27)) {
			jule::outln(_1ce14d090_Str(_13735_t));
		};
		_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("void __jule_any_type", 20));
		_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, _1479_si);
		_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64));
		_22ab15214_Write(&(*_self_.alloc)._field_anyObj, _17913_kind);
		_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(">().dealloc(); }\n", 17));
		if (_17613_comparable) {
			_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, _1479_si);
			_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<", 66));
			_22ab15214_Write(&(*_self_.alloc)._field_anyObj, _17913_kind);
			_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(alloc) == *reinterpret_cast<", 31));
			_22ab15214_Write(&(*_self_.alloc)._field_anyObj, _17913_kind);
			_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(other); }\n", 13));
		};
		_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Str __jule_any_type", 25));
		_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, _1479_si);
		_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<", 76));
		if ((_1ce150845_Ptr(_13735_t) == nullptr)) {
			_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("const ", 6));
			_22ab15214_Write(&(*_self_.alloc)._field_anyObj, _17913_kind);
		} else {
			_22ab15214_Write(&(*_self_.alloc)._field_anyObj, _17913_kind);
			_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("* const", 7));
		};
		_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(alloc)); }\n", 14));
		_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, _1479_si);
		_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_any_type", 25));
		_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, _1479_si);
		_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_dealloc, ", 10));
		if (_17613_comparable) {
			_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(".eq=__jule_any_type", 19));
			_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, _1479_si);
			_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq, ", 5));
		};
		_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(".to_str=__jule_any_type", 23));
		_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, _1479_si);
		_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str};\n", 10));
		if (_17613_comparable) {
			_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, _1479_si);
			_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
			_22ab15214_Write(&(*_self_.alloc)._field_anyObj, _17913_kind);
			_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
			_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, _1479_si);
			_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && __jule_any_type", 19));
			_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, _1479_si);
			_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(any.data.alloc, (void*)&other); }\n", 38));
		};
	};
	return _14113_i;;
}



inline void _1b62902b6_pushResultIns(jule::Ptr<_1b628d825_ObjectCoder> _self_, jule::Ptr<_1ce00a832_FnIns>* _24738_f) {
	jule::Str _2489_s = static_cast<jule::Str>(_1b5e52aa0_code((*((*(_self_))._field_tc))._field_rc.ptr(), &((*((*(_24738_f))))._field_Result)));;
	jule::Bool _24912_ok;;
	(*_self_.alloc)._field_resultMap.lookup(_2489_s, nullptr, &(_24912_ok));
	if (_24912_ok) {
		return;;
	};
	(*_self_.alloc)._field_resultMap[_2489_s]=false;
	_22ab154bc_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("struct ", 7));
	_22ab154bc_WriteStr(&(*_self_.alloc)._field_resultDecls, _2489_s);
	_22ab154bc_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(" {\n", 3));
	{
		auto expr = &((*(_1ce15214e_Tup((*((*(_24738_f))))._field_Result.ptr())))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b982cab4:;
		if (it != expr_end) {
			jule::I32 _25714_i = it - expr->begin();
			jule::Ptr<_1ce14cbc7_TypeKind> _25721_t = *it;
			{
				_22ab15775_WriteByte(&(*_self_.alloc)._field_resultDecls, 9LLU);
				_1b62a4451_kind((*_self_.alloc)._field_tc, &((*_self_.alloc)._field_resultDecls), _25721_t);
				_22ab15775_WriteByte(&(*_self_.alloc)._field_resultDecls, ' ');
				_22ab154bc_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("__jule_result_arg", 17));
				_22ab154bc_WriteStr(&(*_self_.alloc)._field_resultDecls, _22be080a5_Itoa(_25714_i));
				_22ab154bc_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(";\n", 2));
			}
			_iter_next_1b982cab4:;
			++it;
			_25714_i++;
			goto _iter_begin_1b982cab4;
		}
		_iter_end_1b982cab4:;
	};
	_22ab154bc_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("};\n", 3));
}



inline void _1b629056e_pushResult(jule::Ptr<_1b628d825_ObjectCoder> _self_, jule::Ptr<_1ce00792d_Fn>* _26835_f) {
	if ((_1ce007da1_IsVoid((*(_26835_f)).ptr()) || ((*((*((*(_26835_f))))._field_Result))._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I32 _27213_n = (*((*(_26835_f))))._field_Instances.len();;
	if (((*((*(_26835_f))))._field_Generics.len() == 0LL)) {
		_27213_n=1LL;
	};
	{
		auto expr = (*((*(_26835_f))))._field_Instances.slice(0LL, _27213_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b9832b63:;
		if (it != expr_end) {
			jule::Ptr<_1ce00a832_FnIns> _27621_ins = *it;
			{
				_1b62902b6_pushResultIns(_self_, &(_27621_ins));
			}
			_iter_next_1b9832b63:;
			++it;
			goto _iter_begin_1b9832b63;
		}
		_iter_end_1b9832b63:;
	};
}



inline jule::I32 _1b629096a_findTypeOffsetS(_1b628d825_ObjectCoder* _self_, jule::Ptr<_1ce01ac0a_Trait> _28130_t, jule::Ptr<_1cdee571d_StructIns> _28145_s) {
	if (((*(_28130_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9833c85:;
		if (it != expr_end) {
			jule::Ptr<_1b628c3d4_traitHash> *_28516_hash = it;
			{
				if ((((*((*(_28516_hash))))._field_t == _28130_t) && ((*(*(_28516_hash)).alloc)._field_s == _28145_s))) {
					return (*(*(_28516_hash)).alloc)._field_i;;
				};
			}
			_iter_next_1b9833c85:;
			++it;
			goto _iter_begin_1b9833c85;
		}
		_iter_end_1b9833c85:;
	};
	return -1LL;;
}



inline jule::I32 _1b6290d66_findTypeOffset(_1b628d825_ObjectCoder* _self_, jule::Ptr<_1ce01ac0a_Trait> _29329_t, jule::Ptr<_1ce14cbc7_TypeKind> _29344_k) {
	if (((*(_29329_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1cdee571d_StructIns> _29717_s = nullptr;;
	if ((_1ce1505ae_Sptr(_29344_k.ptr()) != nullptr)) {
		_29344_k=(*(_1ce1505ae_Sptr(_29344_k)))._field_Elem;
	};
	_29717_s=_1ce15189b_Struct(_29344_k);
	if ((_29717_s == nullptr)) {
		return -1LL;;
	};
	return _1b629096a_findTypeOffsetS(_self_, _29329_t, _29717_s);;
}



inline void _1b62911c9_pushAndWriteMaskMapper(jule::Ptr<_1b628d825_ObjectCoder> _self_, jule::Ptr<_1ce01ac0a_Trait> _30846_t1, jule::Ptr<_1ce01ac0a_Trait> _30862_t2) {
	_22ab0b88c_StrBuilder _30913_ident = static__22ab0bb56_New(32LL);;
	_22ab154bc_WriteStr(&_30913_ident, jule::Str::lit("__jule_trait_offset_mapper_", 27));
	_22ab154bc_WriteStr(&_30913_ident, _22be07923_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30862_t2)), 15LL));
	_22ab154bc_WriteStr(&_30913_ident, jule::Str::lit("_to_", 4));
	_22ab154bc_WriteStr(&_30913_ident, _22be07923_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30846_t1)), 15LL));
	_22ab15214_Write(&(*(_self_))._field_Buf, _22ab16765_Buf(&_30913_ident));
	{
		auto expr = &((*_self_.alloc)._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b983a231:;
		if (it != expr_end) {
			_1b628c7ad_traitCast _31716_m = *it;
			{
				if (((_31716_m._field_t1 == _30846_t1) && (_31716_m._field_t2 == _30862_t2))) {
					return;;
				};
			}
			_iter_next_1b983a231:;
			++it;
			goto _iter_begin_1b983a231;
		}
		_iter_end_1b983a231:;
	};
	(*_self_.alloc)._field_traitCastMap=jule::append((*_self_.alloc)._field_traitCastMap,jule::Slice<_1b628c7ad_traitCast>::make({_1b628c7ad_traitCast{._field_t1=_30846_t1, ._field_t2=_30862_t2}}));
	;
	_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Int", 9));
	_22ab15775_WriteByte(&(*_self_.alloc)._field_anyObj, ' ');
	_22ab15214_Write(&(*_self_.alloc)._field_anyObj, _22ab16765_Buf(&_30913_ident));
	_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(const jule::Int offset) noexcept { ", 36));
	{
		auto expr = &((*(_30846_t1))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b983c178:;
		if (it != expr_end) {
			jule::Ptr<_1cdee2990_Struct> _33621_s1 = *it;
			{
				{
					auto expr = &((*(_30862_t2))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b983db19:;
					if (it != expr_end) {
						jule::Ptr<_1cdee2990_Struct> _33720_s2 = *it;
						{
							if ((_33621_s1 == _33720_s2)) {
								{
									auto expr = &((*(_33621_s1))._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1b983e983:;
									if (it != expr_end) {
										jule::Ptr<_1cdee571d_StructIns> _33933_s1i = *it;
										{
											jule::I32 _34025_i1 = _1b629096a_findTypeOffsetS(_self_, _30846_t1, _33933_s1i);;
											jule::I32 _34125_i2 = _1b629096a_findTypeOffsetS(_self_, _30862_t2, _33933_s1i);;
											_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("if (offset == ", 14));
											_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, _22be080a5_Itoa(_34125_i2));
											_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(") return ", 9));
											_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, _22be080a5_Itoa(_34025_i1));
											_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; ", 2));
										}
										_iter_next_1b983e983:;
										++it;
										goto _iter_begin_1b983e983;
									}
									_iter_end_1b983e983:;
								};
							};
						}
						_iter_next_1b983db19:;
						++it;
						goto _iter_begin_1b983db19;
					}
					_iter_end_1b983db19:;
				};
			}
			_iter_next_1b983c178:;
			++it;
			goto _iter_begin_1b983c178;
		}
		_iter_end_1b983c178:;
	};
	_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" return ", 8));
	_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, _22be080a5_Itoa(0LL));
	_22ab154bc_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; }\n", 4));
}



inline void _1b6291482_locInfo(jule::Ptr<_1b628d825_ObjectCoder> _self_, jule::Ptr<_1cdeab4b4_Token>* _35728_t) {
	jule::Str *_35810_loc = &((*((*((*(_35728_t))))._field_File))._field_Path);;
	if (_2434dd82d_Production) {
		{
			
			if (_22aae7867_HasPrefix((*(_35810_loc)), _22abd9a25_PathStdlib)) {
				_case_begin_1b9844bdb:;
				{
					_1b61cc687_cstrBytes(&((*(_self_))._field_Buf), (*(_35810_loc)).slice((_22ab1969c_Dir(_22abd9a25_PathStdlib).len() + 1LL)));
				}
			}
			else if (_22aae7867_HasPrefix((*(_35810_loc)), (*((*(_self_))._field_ir))._field_Root)) {
				_case_begin_1b9844cc9:;
				{
					_1b61cc687_cstrBytes(&((*_self_.alloc)._field_Buf), (*(_35810_loc)).slice((_22ab1969c_Dir((*(*_self_.alloc)._field_ir.alloc)._field_Root).len() + 1LL)));
				}
			}
			else {
				_case_begin_1b9844834:;
				{
					_1b61cc687_cstrBytes(&((*(_self_))._field_Buf), (*(_35810_loc)));
				}
			}
			_match_end_1b9844768:;
		};
	} else {
		_1b61cc687_cstrBytes(&((*(_self_))._field_Buf), (*(_35810_loc)));
	};
	_1b628dec9_write(_self_, jule::Str::lit(":", 1));
	_1b628dec9_write(_self_, _22be080a5_Itoa((*((*(_35728_t))))._field_Row));
	_1b628dec9_write(_self_, jule::Str::lit(":", 1));
	_1b628dec9_write(_self_, _22be080a5_Itoa((*((*(_35728_t))))._field_Column));
}



inline void _1b6291680_head(jule::Ptr<_1b628d825_ObjectCoder> _self_) {
	_1b6284442_Time _3849_time = static__1b6284a08_Now();;
	_1b6283c6b_AbsTime _3859_abs = _1b62861e1_Abs(&_3849_time);;
	_1b628dec9_write(_self_, jule::Str::lit("// Auto generated by JuleC.\n", 28));
	_1b628dec9_write(_self_, jule::Str::lit("// JuleC version: ", 18));
	_1b628dec9_write(_self_, jule::Str::lit("jule0.0.16 @master", 18));
	_1b628dec9_write(_self_, jule::Str::lit("\n", 1));
	_1b628dec9_write(_self_, jule::Str::lit("// Date: ", 9));
	_1b628dec9_write(_self_, _22be07923_FmtUint(_3859_abs._field_Day, 10LL));
	_1b628dec9_write(_self_, jule::Str::lit("/", 1));
	_1b628dec9_write(_self_, _22be07923_FmtUint(_3859_abs._field_Month, 10LL));
	_1b628dec9_write(_self_, jule::Str::lit("/", 1));
	_1b628dec9_write(_self_, _22be07923_FmtUint(_3859_abs._field_Year, 10LL));
	_1b628dec9_write(_self_, jule::Str::lit(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1b628dec9_write(_self_, (*_self_.alloc)._field_info._field_Compiler);
	_1b628dec9_write(_self_, jule::Str::lit(" ", 1));
	_1b628dec9_write(_self_, (*_self_.alloc)._field_info._field_CompilerCommand);
	_1b628dec9_write(_self_, jule::Str::lit("\n\n", 2));
	if (_2434dd82d_Production) {
		_1b628dec9_write(_self_, jule::Str::lit("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_2434dd223_RC))) {
		_1b628dec9_write(_self_, jule::Str::lit("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_2434dd5db_Safety))) {
		_1b628dec9_write(_self_, jule::Str::lit("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1b629187d_links(_self_);
	_1b628dec9_write(_self_, jule::Str::lit("\n\n#include \"", 12));
	_1b628dec9_write(_self_, _22abda3c7_PathApi);
	_1b628dec9_write(_self_, jule::Str::lit("\"\n\n", 3));
}



inline void _1b629187d_links(jule::Ptr<_1b628d825_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9851368:;
		if (it != expr_end) {
			jule::Ptr<_1ce06b0ac_ImportInfo> _42216_used = *it;
			{
				{
					
					if ((!((*(_42216_used))._field_Binded))) {
						_case_begin_1b985215a:;
						{
							goto _iter_next_1b9851368;
						}
					}
					else if (_22a929116_IsStdHeaderPath((*(_42216_used))._field_Path)) {
						_case_begin_1b98521e3:;
						{
							_1b628dec9_write(_self_, jule::Str::lit("#include ", 9));
							_1b628dec9_write(_self_, (*_42216_used.alloc)._field_Path);
							_1b628dec9_write(_self_, jule::Str::lit("\n", 1));
						}
					}
					else if (_22a9293e1_IsValidHeaderExt(_22ab18c40_Ext((*(_42216_used))._field_Path))) {
						_case_begin_1b9852259:;
						{
							_1b628dec9_write(_self_, jule::Str::lit("#include \"", 10));
							_1b628dec9_write(_self_, (*_42216_used.alloc)._field_Path);
							_1b628dec9_write(_self_, jule::Str::lit("\"\n", 2));
						}
					}
					_match_end_1b9852017:;
				};
			}
			_iter_next_1b9851368:;
			++it;
			goto _iter_begin_1b9851368;
		}
		_iter_end_1b9851368:;
	};
}



inline void _1b6291b36_prepareStructure(_1b628d825_ObjectCoder* _self_, jule::Ptr<_1cdee2990_Struct>* _43840_s) {
	{
		auto expr = &((*((*(_43840_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b98550c5:;
		if (it != expr_end) {
			jule::Ptr<_1cdee571d_StructIns> _43921_ins = *it;
			{
				{
					auto expr = &((*(_43921_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b9855988:;
					if (it != expr_end) {
						jule::Ptr<_1ce00792d_Fn> _44025_m = *it;
						{
							if ((*(_44025_m))._field_Statically) {
								goto _iter_next_1b9855988;
							};
							{
								auto expr = &((*_44025_m.alloc)._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b98564d3:;
								if (it != expr_end) {
									jule::Ptr<_1ce00a832_FnIns> _44429_mins = *it;
									{
										jule::Ptr<_1ce009886_ParamIns> _44525_p = (*(_44429_mins))._field_Params[0LL];;
										_22ab0b88c_StrBuilder _44625_kind = static__22ab0bb56_New(40LL);;
										_1b62a4451_kind((*(_self_))._field_tc.ptr(), &(_44625_kind), (*(_44525_p))._field_Kind);
										if ((!(_1ce00680b_IsRef((*_44525_p.alloc)._field_Decl.ptr())))) {
											_22ab154bc_WriteStr(&_44625_kind, jule::Str::lit("*", 1));
										};
										(*_44525_p.alloc)._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(jule::new_ptr<_1b629ce72_customType>(_1b629ce72_customType{._field_kind=_22ab15cb4_Str(&_44625_kind)}), 27)});
									}
									_iter_next_1b98564d3:;
									++it;
									goto _iter_begin_1b98564d3;
								}
								_iter_end_1b98564d3:;
							};
						}
						_iter_next_1b9855988:;
						++it;
						goto _iter_begin_1b9855988;
					}
					_iter_end_1b9855988:;
				};
			}
			_iter_next_1b98550c5:;
			++it;
			goto _iter_begin_1b98550c5;
		}
		_iter_end_1b98550c5:;
	};
}



inline void _1b6291d34_prepareStructures(jule::Ptr<_1b628d825_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b98558de:;
		if (it != expr_end) {
			jule::Ptr<_1cdee2990_Struct> _46221_s = *it;
			{
				if (((*(_46221_s))._field_Token != nullptr)) {
					_1b6291b36_prepareStructure(_self_.ptr(), &(_46221_s));
				};
			}
			_iter_next_1b98558de:;
			++it;
			goto _iter_begin_1b98558de;
		}
		_iter_end_1b98558de:;
	};
}



inline void _1b62920dc_iterPackages(jule::Ptr<_1b628d825_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1ce06ded3_Package>*)> _46932_f) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b985aac0:;
		if (it != expr_end) {
			jule::Ptr<_1ce06b0ac_ImportInfo> _47021_used = *it;
			{
				if ((!((*(_47021_used))._field_Binded))) {
					_46932_f(&((*_47021_used.alloc)._field_Package));
				};
			}
			_iter_next_1b985aac0:;
			++it;
			goto _iter_begin_1b985aac0;
		}
		_iter_end_1b985aac0:;
	};
	_46932_f(&((*(*_self_.alloc)._field_ir.alloc)._field_Main));
}



inline void _1b62922da_buildTraitMap(jule::Ptr<_1b628d825_ObjectCoder> _self_) {
	_1b62920dc_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1ce06ded3_Package>*)>([=](jule::Ptr<_1ce06ded3_Package>* _47935_pkg) mutable -> void {
		_1b629aa63_iterFiles(_47935_pkg, jule::Fn<void(jule::Ptr<_1ce116894_SymbolTable>*)>([=](jule::Ptr<_1ce116894_SymbolTable>* _48036_file) mutable -> void {
			{
				auto expr = &((*((*(_48036_file))))._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b985e4b9:;
				if (it != expr_end) {
					jule::Ptr<_1ce01ac0a_Trait> _48129_t = *it;
					{
						if (((*(_48129_t))._field_Token == nullptr)) {
							return;;
						};
						if (((*_48129_t.alloc)._field_Implemented.len() == 0LL)) {
							jule::Ptr<_1b628c3d4_traitHash> _48629_hash = jule::new_ptr<_1b628c3d4_traitHash>(_1b628c3d4_traitHash{._field_t=_48129_t, ._field_s=nullptr, ._field_i=0LL});;
							_22ab0b88c_StrBuilder _49129_b = static__22ab0bb56_New((*_48129_t.alloc)._field_Ident.len());;
							static__1b61d3182_writeIdentTo(&(_49129_b), &((*_48129_t.alloc)._field_Ident));
							(*(_48629_hash))._field_ti=_22ab15cb4_Str(&_49129_b);
							(*_self_.alloc)._field_tmap=jule::append((*_self_.alloc)._field_tmap,jule::Slice<jule::Ptr<_1b628c3d4_traitHash>>::make({_48629_hash}));
							goto _iter_next_1b985e4b9;
						};
						jule::I32 _49725_i = 0LL;;
						{
							auto expr = &((*_48129_t.alloc)._field_Implemented);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1b985ee37:;
							if (it != expr_end) {
								jule::Ptr<_1cdee2990_Struct> _49833_s = *it;
								{
									{
										auto expr = &((*(_49833_s))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1b98638b9:;
										if (it != expr_end) {
											jule::Ptr<_1cdee571d_StructIns> _49937_ins = *it;
											{
												jule::Ptr<_1b628c3d4_traitHash> _50033_hash = jule::new_ptr<_1b628c3d4_traitHash>(_1b628c3d4_traitHash{._field_t=_48129_t, ._field_s=_49937_ins, ._field_i=_49725_i});;
												_22ab0b88c_StrBuilder _50533_b = static__22ab0bb56_New((*_48129_t.alloc)._field_Ident.len());;
												static__1b61d3182_writeIdentTo(&(_50533_b), &((*_48129_t.alloc)._field_Ident));
												(*(_50033_hash))._field_ti=_22ab15cb4_Str(&_50533_b);
												(*_self_.alloc)._field_tmap=jule::append((*_self_.alloc)._field_tmap,jule::Slice<jule::Ptr<_1b628c3d4_traitHash>>::make({_50033_hash}));
												(_49725_i)++;
											}
											_iter_next_1b98638b9:;
											++it;
											goto _iter_begin_1b98638b9;
										}
										_iter_end_1b98638b9:;
									};
								}
								_iter_next_1b985ee37:;
								++it;
								goto _iter_begin_1b985ee37;
							}
							_iter_end_1b985ee37:;
						};
						_1b629b811_pushMethodsFromInherits(&(_48129_t), &(_48129_t));
					}
					_iter_next_1b985e4b9:;
					++it;
					goto _iter_begin_1b985e4b9;
				}
				_iter_end_1b985e4b9:;
			};
		}));
	}));
}



inline void _1b62924d8_traitDecls(jule::Ptr<_1b628d825_ObjectCoder> _self_) {
	_1b62920dc_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1ce06ded3_Package>*)>([=](jule::Ptr<_1ce06ded3_Package>* _52135_pkg) mutable -> void {
		_1b629aa63_iterFiles(_52135_pkg, jule::Fn<void(jule::Ptr<_1ce116894_SymbolTable>*)>([=](jule::Ptr<_1ce116894_SymbolTable>* _52236_file) mutable -> void {
			{
				auto expr = &((*((*(_52236_file))))._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b98674d3:;
				if (it != expr_end) {
					jule::Ptr<_1ce01ac0a_Trait> _52329_t = *it;
					{
						if (((*(_52329_t))._field_Token == nullptr)) {
							return;;
						};
						_1b628e87b_indent(_self_);
						_1b628dec9_write(_self_, jule::Str::lit("struct ", 7));
						static__1b61d433c_traitDecl(&((*_self_.alloc)._field_Buf), _52329_t);
						_1b628dec9_write(_self_, jule::Str::lit("{};\n", 4));
					}
					_iter_next_1b98674d3:;
					++it;
					goto _iter_begin_1b98674d3;
				}
				_iter_end_1b98674d3:;
			};
		}));
	}));
}



inline void _1b6292791_structurePlainDecl(jule::Ptr<_1b628d825_ObjectCoder> _self_, jule::Ptr<_1cdee2990_Struct>* _53643_s) {
	{
		auto expr = &((*((*(_53643_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b98640c3:;
		if (it != expr_end) {
			jule::Ptr<_1cdee571d_StructIns> _53721_ins = *it;
			{
				_1b628dec9_write(_self_, jule::Str::lit("struct ", 7));
				static__1b61d4c00_structureIns(&((*_self_.alloc)._field_Buf), &(_53721_ins));
				_1b628dec9_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1b98640c3:;
			++it;
			goto _iter_begin_1b98640c3;
		}
		_iter_end_1b98640c3:;
	};
}



inline void _1b629298e_structurePlainDecls(jule::Ptr<_1b628d825_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b986977c:;
		if (it != expr_end) {
			jule::Ptr<_1cdee2990_Struct> _54521_s = *it;
			{
				if (((*(_54521_s))._field_Token != nullptr)) {
					_1b6292791_structurePlainDecl(_self_, &(_54521_s));
				};
			}
			_iter_next_1b986977c:;
			++it;
			goto _iter_begin_1b986977c;
		}
		_iter_end_1b986977c:;
	};
}



inline void _1b6292c47_fieldDecl(jule::Ptr<_1b628d825_ObjectCoder> _self_, jule::Ptr<_1cdee4b6d_FieldIns>* _55234_f) {
	_1b62a4451_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_55234_f))))._field_Kind);
	_1b628dec9_write(_self_, jule::Str::lit(" ", 1));
	static__1b61d4edb_field(&((*_self_.alloc)._field_Buf), &((*((*(_55234_f))))._field_Decl));
	if (((*((*(_55234_f))))._field_Default == nullptr)) {
		if (_1b5e54b5c_shouldInitialized(&((*((*(_55234_f))))._field_Kind))) {
			_1b628dec9_write(_self_, jule::Str::lit(" = ", 3));
			_1b61cbbc5_initExpr((*_self_.alloc)._field_ec, (*((*(_55234_f))))._field_Kind);
		};
	} else {
		_1b628dec9_write(_self_, jule::Str::lit(" = ", 3));
		_1b61c2050_possibleRefExpr((*_self_.alloc)._field_ec, (*((*((*(_55234_f))))._field_Default))._field_Model);
	};
	_1b628dec9_write(_self_, jule::Str::lit(";", 1));
}



inline void _1b6293000_structureDestructor(jule::Ptr<_1b628d825_ObjectCoder> _self_, jule::Ptr<_1cdee571d_StructIns>* _57044_s) {
	;
	jule::Ptr<_1ce00792d_Fn> _5739_disposeMethod = _1cdee6785_FindMethod((*(_57044_s)).ptr(), jule::Str::lit("Dispose", 7), false);;
	jule::Bool _57413_disposed = static__1ce0b559b_Dispose(_5739_disposeMethod);;
	if ((!(_57413_disposed))) {
		return;;
	};
	_1b628dec9_write(_self_, jule::Str::lit("~", 1));
	static__1b61d4c00_structureIns(&((*_self_.alloc)._field_Buf), _57044_s);
	_1b628dec9_write(_self_, jule::Str::lit("(void) { ", 9));
	static__1b61d3c65_func(&((*_self_.alloc)._field_Buf), &(_5739_disposeMethod));
	_1b628dec9_write(_self_, jule::Str::lit("(this); }", 9));
}



inline void _1b6293363_structureOperatorEq(jule::Ptr<_1b628d825_ObjectCoder> _self_, jule::Slice<jule::U8> _58639_ident, jule::Ptr<_1cdee571d_StructIns>* _58659_s) {
	if ((!((*((*(_58659_s))))._field_Comparable))) {
		return;;
	};
	if (((*((*(_58659_s))))._field_Operators._field_Eq != nullptr)) {
		_1b6293ae4_structureOperator(_self_, _58639_ident, &((*((*(_58659_s))))._field_Operators._field_Eq), jule::Str::lit("==", 2));
		return;;
	};
	_1b628e87b_indent(_self_);
	if (_1ce267a8e_Inline) {
		_1b628dec9_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1b628dec9_write(_self_, jule::Str::lit("bool operator==(", 16));
	_1b628e282_writeBytes(_self_, _58639_ident);
	_1b628dec9_write(_self_, jule::Str::lit(" _other) {", 10));
	if (((*((*(_58659_s))))._field_Fields.len() > 0LL)) {
		_1b628e480_addIndent(_self_);
		_1b628dec9_write(_self_, jule::Str::lit("\n", 1));
		_1b628e87b_indent(_self_);
		_1b628dec9_write(_self_, jule::Str::lit("return ", 7));
		_1b628e480_addIndent(_self_);
		jule::Bool _60917_writed = false;;
		{
			auto expr = &((*((*(_58659_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b95de359:;
			if (it != expr_end) {
				jule::Ptr<_1cdee4b6d_FieldIns> _61025_f = *it;
				{
					jule::Ptr<_1cdee571d_StructIns> _61217_strct = _1ce15189b_Struct((*(_61025_f))._field_Kind.ptr());;
					if ((((_61217_strct != nullptr) && ((*_61217_strct.alloc)._field_Decl != nullptr)) && (*(*_61217_strct.alloc)._field_Decl.alloc)._field_Binded)) {
						goto _iter_next_1b95de359;
					};
					if (_60917_writed) {
						_1b628dec9_write(_self_, jule::Str::lit(" &&", 3));
					};
					_60917_writed=true;
					_1b628dec9_write(_self_, jule::Str::lit("\n", 1));
					_1b628e87b_indent(_self_);
					_1b628dec9_write(_self_, jule::Str::lit("this->", 6));
					_22ab0b88c_StrBuilder _62321_fIdent = static__22ab0bb56_New((*((*_61025_f.alloc)._field_Decl))._field_Ident.len());;
					static__1b61d4edb_field(&(_62321_fIdent), &((*_61025_f.alloc)._field_Decl));
					_1b628e282_writeBytes(_self_, _22ab16765_Buf(&_62321_fIdent));
					_1b628dec9_write(_self_, jule::Str::lit(" == _other.", 11));
					_1b628e282_writeBytes(_self_, _22ab16765_Buf(&_62321_fIdent));
				}
				_iter_next_1b95de359:;
				++it;
				goto _iter_begin_1b95de359;
			}
			_iter_end_1b95de359:;
		};
		_1b628e67d_doneIndent(_self_);
		if ((!(_60917_writed))) {
			_1b628dec9_write(_self_, jule::Str::lit("true", 4));
		};
		_1b628dec9_write(_self_, jule::Str::lit(";\n", 2));
		_1b628e67d_doneIndent(_self_);
		_1b628e87b_indent(_self_);
		_1b628dec9_write(_self_, jule::Str::lit("}", 1));
	} else {
		_1b628dec9_write(_self_, jule::Str::lit(" return true; }", 15));
	};
	_1b628dec9_write(_self_, jule::Str::lit("\n\n", 2));
}



inline void _1b62936c6_structureOperatorNotEq(jule::Ptr<_1b628d825_ObjectCoder> _self_, jule::Slice<jule::U8> _64342_ident, jule::Ptr<_1cdee571d_StructIns>* _64362_s) {
	if ((!((*((*(_64362_s))))._field_Comparable))) {
		return;;
	};
	_1b628e87b_indent(_self_);
	if (_1ce267a8e_Inline) {
		_1b628dec9_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1b628dec9_write(_self_, jule::Str::lit("bool operator!=(", 16));
	_1b628e282_writeBytes(_self_, _64342_ident);
	_1b628dec9_write(_self_, jule::Str::lit(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1b6293ae4_structureOperator(jule::Ptr<_1b628d825_ObjectCoder> _self_, jule::Slice<jule::U8> _65737_ident, jule::Ptr<_1ce00a832_FnIns>* _65757_f, jule::Str _65768_op) {
	if (((*(_65757_f)) == nullptr)) {
		return;;
	};
	jule::Bool _6629_unary = ((*((*(_65757_f))))._field_Params.len() == 1LL);;
	jule::Bool _6639_assignment = _1ce007da1_IsVoid((*((*(_65757_f))))._field_Decl.ptr());;
	_1b628e87b_indent(_self_);
	if (_1ce267a8e_Inline) {
		_1b628dec9_write(_self_, jule::Str::lit("inline ", 7));
	};
	if (_6639_assignment) {
		_1b628e282_writeBytes(_self_, _65737_ident);
		_1b628dec9_write(_self_, jule::Str::lit("&", 1));
	} else {
		if ((_1ce150328_Prim((*((*(_65757_f))))._field_Result.ptr()) == nullptr)) {
			_1b628e282_writeBytes(_self_, _65737_ident);
		} else {
			_1b628dec9_write(_self_, jule::Str::lit("jule::Bool", 10));
		};
	};
	_1b628dec9_write(_self_, jule::Str::lit(" operator", 9));
	_1b628dec9_write(_self_, _65768_op);
	_1b628dec9_write(_self_, jule::Str::lit("(", 1));
	if ((!(_6629_unary))) {
		jule::Ptr<_1ce009886_ParamIns> _68517_p = (*((*(_65757_f))))._field_Params[1LL];;
		_1b62a3241_paramIns((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), &(_68517_p));
		_1b628dec9_write(_self_, jule::Str::lit(" _other", 7));
	};
	_1b628dec9_write(_self_, jule::Str::lit(") { ", 4));
	if ((!(_6639_assignment))) {
		_1b628dec9_write(_self_, jule::Str::lit("return ", 7));
	};
	static__1b61d4051_funcIns(&((*_self_.alloc)._field_Buf), _65757_f);
	if ((!(_6629_unary))) {
		_1b628dec9_write(_self_, jule::Str::lit("(this, _other); ", 16));
		if (_6639_assignment) {
			_1b628dec9_write(_self_, jule::Str::lit("return *this; ", 14));
		};
		_1b628dec9_write(_self_, jule::Str::lit("}", 1));
	} else {
		_1b628dec9_write(_self_, jule::Str::lit("(this); }", 9));
	};
	_1b628dec9_write(_self_, jule::Str::lit("\n\n", 2));
}



inline void _1b6293d9c_structureOperators(jule::Ptr<_1b628d825_ObjectCoder> _self_, jule::Ptr<_1cdee571d_StructIns>* _70643_s) {
	_22ab0b88c_StrBuilder _70713_sb = static__22ab0bb56_New(40LL);;
	static__1b61d4c00_structureIns(&(_70713_sb), _70643_s);
	jule::Slice<jule::U8> _7099_ident = _22ab16765_Buf(&_70713_sb);;
	_1b6293363_structureOperatorEq(_self_, _7099_ident, _70643_s);
	_1b62936c6_structureOperatorNotEq(_self_, _7099_ident, _70643_s);
	_1b6293ae4_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Gt), jule::Str::lit(">", 1));
	_1b6293ae4_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_GtEq), jule::Str::lit(">=", 2));
	_1b6293ae4_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Lt), jule::Str::lit("<", 1));
	_1b6293ae4_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_LtEq), jule::Str::lit("<=", 2));
	_1b6293ae4_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Shl), jule::Str::lit("<<", 2));
	_1b6293ae4_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Shr), jule::Str::lit(">>", 2));
	_1b6293ae4_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Add), jule::Str::lit("+", 1));
	_1b6293ae4_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Sub), jule::Str::lit("-", 1));
	_1b6293ae4_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Div), jule::Str::lit("/", 1));
	_1b6293ae4_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Mul), jule::Str::lit("*", 1));
	_1b6293ae4_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Mod), jule::Str::lit("%", 1));
	_1b6293ae4_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_BitAnd), jule::Str::lit("&", 1));
	_1b6293ae4_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_BitOr), jule::Str::lit("|", 1));
	_1b6293ae4_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_BitXor), jule::Str::lit("^", 1));
	_1b6293ae4_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Neg), jule::Str::lit("-", 1));
	_1b6293ae4_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_Pos), jule::Str::lit("+", 1));
	_1b6293ae4_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_BitNot), jule::Str::lit("~", 1));
	_1b6293ae4_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_AddAssign), jule::Str::lit("+=", 2));
	_1b6293ae4_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_SubAssign), jule::Str::lit("-=", 2));
	_1b6293ae4_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_DivAssign), jule::Str::lit("/=", 2));
	_1b6293ae4_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_MulAssign), jule::Str::lit("*=", 2));
	_1b6293ae4_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_ModAssign), jule::Str::lit("%=", 2));
	_1b6293ae4_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_ShlAssign), jule::Str::lit("<<=", 3));
	_1b6293ae4_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_ShrAssign), jule::Str::lit(">>=", 3));
	_1b6293ae4_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_BitOrAssign), jule::Str::lit("|=", 2));
	_1b6293ae4_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_BitAndAssign), jule::Str::lit("&=", 2));
	_1b6293ae4_structureOperator(_self_, _7099_ident, &((*((*(_70643_s))))._field_Operators._field_BitXorAssign), jule::Str::lit("^=", 2));
}



inline void _1b6294155_structureInsDecl(jule::Ptr<_1b628d825_ObjectCoder> _self_, jule::Ptr<_1cdee571d_StructIns>* _74741_s) {
	{
		auto expr = &((*((*(_74741_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8a0b931:;
		if (it != expr_end) {
			jule::Ptr<_1ce00792d_Fn> _74821_m = *it;
			{
				if (_1b629bd94_isHeadDecl(&(_74821_m))) {
					_1b62955eb_funcDecl(_self_, &(_74821_m), false);
				};
			}
			_iter_next_1b8a0b931:;
			++it;
			goto _iter_begin_1b8a0b931;
		}
		_iter_end_1b8a0b931:;
	};
	_1b628dec9_write(_self_, jule::Str::lit("struct ", 7));
	static__1b61d4c00_structureIns(&((*_self_.alloc)._field_Buf), _74741_s);
	_1b628dec9_write(_self_, jule::Str::lit(" {\n", 3));
	_1b628e480_addIndent(_self_);
	{
		auto expr = &((*((*(_74741_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8a0c24a:;
		if (it != expr_end) {
			jule::Ptr<_1cdee4b6d_FieldIns> _75921_f = *it;
			{
				_1b628e87b_indent(_self_);
				_1b6292c47_fieldDecl(_self_, &(_75921_f));
				_1b628dec9_write(_self_, jule::Str::lit("\n", 1));
			}
			_iter_next_1b8a0c24a:;
			++it;
			goto _iter_begin_1b8a0c24a;
		}
		_iter_end_1b8a0c24a:;
	};
	_1b628e87b_indent(_self_);
	_1b6293000_structureDestructor(_self_, _74741_s);
	_1b628dec9_write(_self_, jule::Str::lit("\n\n", 2));
	_1b6293d9c_structureOperators(_self_, _74741_s);
	_1b628dec9_write(_self_, jule::Str::lit("\n", 1));
	_1b628e67d_doneIndent(_self_);
	_1b628e87b_indent(_self_);
	_1b628dec9_write(_self_, jule::Str::lit("};", 2));
}



inline void _1b629440d_structureDecl(jule::Ptr<_1b628d825_ObjectCoder> _self_, jule::Ptr<_1cdee2990_Struct>* _77738_s) {
	{
		auto expr = &((*((*(_77738_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8a11e97:;
		if (it != expr_end) {
			jule::Ptr<_1cdee571d_StructIns> _77821_ins = *it;
			{
				_1b6294155_structureInsDecl(_self_, &(_77821_ins));
			}
			_iter_next_1b8a11e97:;
			++it;
			goto _iter_begin_1b8a11e97;
		}
		_iter_end_1b8a11e97:;
	};
}



inline void _1b629460b_structureDecls(jule::Ptr<_1b628d825_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8a12706:;
		if (it != expr_end) {
			jule::Ptr<_1cdee2990_Struct> _78421_s = *it;
			{
				if (((*(_78421_s))._field_Token != nullptr)) {
					_1b629440d_structureDecl(_self_, &(_78421_s));
					_1b628dec9_write(_self_, jule::Str::lit("\n", 1));
				};
			}
			_iter_next_1b8a12706:;
			++it;
			goto _iter_begin_1b8a12706;
		}
		_iter_end_1b8a12706:;
	};
}



inline void _1b6294809_structureMethodDecls(jule::Ptr<_1b628d825_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8a1373a:;
		if (it != expr_end) {
			jule::Ptr<_1cdee2990_Struct> _79321_s = *it;
			{
				if (((*(_79321_s))._field_Token != nullptr)) {
					{
						auto expr = &((*_79321_s.alloc)._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b8a157c5:;
						if (it != expr_end) {
							jule::Ptr<_1cdee571d_StructIns> _79529_ins = *it;
							{
								{
									auto expr = &((*(_79529_ins))._field_Methods);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1b8a161ee:;
									if (it != expr_end) {
										jule::Ptr<_1ce00792d_Fn> _79633_m = *it;
										{
											if ((!(_1b629bd94_isHeadDecl(&(_79633_m))))) {
												_1b629056e_pushResult(_self_, &(_79633_m));
												_1b62955eb_funcDecl(_self_, &(_79633_m), false);
											};
										}
										_iter_next_1b8a161ee:;
										++it;
										goto _iter_begin_1b8a161ee;
									}
									_iter_end_1b8a161ee:;
								};
							}
							_iter_next_1b8a157c5:;
							++it;
							goto _iter_begin_1b8a157c5;
						}
						_iter_end_1b8a157c5:;
					};
				};
			}
			_iter_next_1b8a1373a:;
			++it;
			goto _iter_begin_1b8a1373a;
		}
		_iter_end_1b8a1373a:;
	};
}



inline void _1b6294ab2_paramsDecls(jule::Ptr<_1b628d825_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1ce009886_ParamIns>>* _80836_params) {
	if (((*(_80836_params)).len() == 0LL)) {
		_1b628dec9_write(_self_, jule::Str::lit("(void)", 6));
		return;;
	};
	_1b628dec9_write(_self_, jule::Str::lit("(", 1));
	{
		auto expr = _80836_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8a169d5:;
		if (it != expr_end) {
			jule::I32 _81514_i = it - expr->begin();
			jule::Ptr<_1ce009886_ParamIns> _81521_p = *it;
			{
				_1b62a3241_paramIns((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), &(_81521_p));
				if ((((*(_80836_params)).len() - _81514_i) > 1LL)) {
					_1b628dec9_write(_self_, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1b8a169d5:;
			++it;
			_81514_i++;
			goto _iter_begin_1b8a169d5;
		}
		_iter_end_1b8a169d5:;
	};
	_1b628dec9_write(_self_, jule::Str::lit(")", 1));
}



inline void _1b6294e25_funcHead(jule::Ptr<_1b628d825_ObjectCoder> _self_, jule::Ptr<_1ce00a832_FnIns>* _82533_f, jule::Bool _82544_ptr) {
	if ((((!(_82544_ptr)) && _1ce267a8e_Inline) && (!(_1ce0083bd_IsEntryPoint((*((*(_82533_f))))._field_Decl.ptr()))))) {
		_1b628dec9_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1b62a3917_funcInsResult((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), _82533_f);
	if (_82544_ptr) {
		_1b628dec9_write(_self_, jule::Str::lit("(*", 2));
		static__1b61d4051_funcIns(&((*_self_.alloc)._field_Buf), _82533_f);
		_1b628dec9_write(_self_, jule::Str::lit(")", 1));
	} else {
		_1b628dec9_write(_self_, jule::Str::lit(" ", 1));
		static__1b61d4051_funcIns(&((*_self_.alloc)._field_Buf), _82533_f);
	};
}



inline void _1b6295288_funcDeclIns(jule::Ptr<_1b628d825_ObjectCoder> _self_, jule::Ptr<_1ce00a832_FnIns>* _84036_f, jule::Bool _84047_ptr) {
	_1b628e87b_indent(_self_);
	_1b6294e25_funcHead(_self_, _84036_f, _84047_ptr);
	_1b6294ab2_paramsDecls(_self_, &((*((*(_84036_f))))._field_Params));
	_1b628dec9_write(_self_, jule::Str::lit(";\n", 2));
}



inline void _1b62955eb_funcDecl(jule::Ptr<_1b628d825_ObjectCoder> _self_, jule::Ptr<_1ce00792d_Fn>* _84733_f, jule::Bool _84741_ptr) {
	{
		auto expr = &((*((*(_84733_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8a2013c:;
		if (it != expr_end) {
			jule::Ptr<_1ce00a832_FnIns> _84821_c = *it;
			{
				_1b6295288_funcDeclIns(_self_, &(_84821_c), _84741_ptr);
			}
			_iter_next_1b8a2013c:;
			++it;
			goto _iter_begin_1b8a2013c;
		}
		_iter_end_1b8a2013c:;
	};
}



inline void _1b6295a19_funcDeclTrait(jule::Ptr<_1b628d825_ObjectCoder> _self_, jule::Ptr<_1ce01ac0a_Trait>* _85338_t, jule::Ptr<_1ce00792d_Fn>* _85354_f, jule::Bool _85362_ptr) {
	{
		auto expr = &((*((*(_85354_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8a2146d:;
		if (it != expr_end) {
			jule::Ptr<_1ce00a832_FnIns> _85421_c = *it;
			{
				jule::Ptr<_1ce14cbc7_TypeKind> _85517_k = (*((*(_85421_c))._field_Params[0LL]))._field_Kind;;
				(*((*_85421_c.alloc)._field_Params[0LL]))._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>((*(_85338_t)), 2)});
				_1b6295288_funcDeclIns(_self_, &(_85421_c), _85362_ptr);
				(*((*_85421_c.alloc)._field_Params[0LL]))._field_Kind=_85517_k;
			}
			_iter_next_1b8a2146d:;
			++it;
			goto _iter_begin_1b8a2146d;
		}
		_iter_end_1b8a2146d:;
	};
}



inline void _1b6295c17_funcDecls(jule::Ptr<_1b628d825_ObjectCoder> _self_) {
	_1b62920dc_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1ce06ded3_Package>*)>([=](jule::Ptr<_1ce06ded3_Package>* _86335_pkg) mutable -> void {
		_1b629aa63_iterFiles(_86335_pkg, jule::Fn<void(jule::Ptr<_1ce116894_SymbolTable>*)>([=](jule::Ptr<_1ce116894_SymbolTable>* _86436_file) mutable -> void {
			{
				auto expr = &((*((*(_86436_file))))._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b8a25b9d:;
				if (it != expr_end) {
					jule::Ptr<_1ce00792d_Fn> _86529_f = *it;
					{
						if (((!((*(_86529_f))._field_Binded)) && ((*_86529_f.alloc)._field_Token != nullptr))) {
							_1b629056e_pushResult(_self_, &(_86529_f));
							_1b62955eb_funcDecl(_self_, &(_86529_f), false);
						};
					}
					_iter_next_1b8a25b9d:;
					++it;
					goto _iter_begin_1b8a25b9d;
				}
				_iter_end_1b8a25b9d:;
			};
		}));
	}));
}



inline void _1b629607a_traitDataTypeMethods(jule::Ptr<_1b628d825_ObjectCoder> _self_, jule::Ptr<_1ce01ac0a_Trait>* _87545_owner, jule::Ptr<_1ce01ac0a_Trait>* _87565_t) {
	{
		auto expr = &((*((*(_87565_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8a257c4:;
		if (it != expr_end) {
			jule::Ptr<_1ce00792d_Fn> _87621_m = *it;
			{
				jule::Ptr<_1ce00a832_FnIns> _87717_ins = (*(_87621_m))._field_Instances[0LL];;
				jule::Ptr<_1ce009886_ParamIns> _87817_p = (*(_87717_ins))._field_Params[0LL];;
				(*(_87817_p))._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>((*(_87565_t)), 2)});
				{
					auto expr = (*_87717_ins.alloc)._field_Params.slice(1LL);
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_1b8a2961e:;
					if (it != expr_end) {
						jule::I32 _88218_i = it - expr.begin();
						jule::Ptr<_1ce009886_ParamIns> _88225_ip = *it;
						{
							if (_1cdeae165_IsAnonIdent((*((*(_88225_ip))._field_Decl))._field_Ident)) {
								(*(*_88225_ip.alloc)._field_Decl.alloc)._field_Ident=(jule::Str::lit("_", 1) + _22be080a5_Itoa(_88218_i));
							};
						}
						_iter_next_1b8a2961e:;
						++it;
						_88218_i++;
						goto _iter_begin_1b8a2961e;
					}
					_iter_end_1b8a2961e:;
				};
				if ((!(_2434dd82d_Production))) {
					jule::Ptr<_1ce009886_ParamIns> _88821_lp = (*_87717_ins.alloc)._field_Params[((*_87717_ins.alloc)._field_Params.len() - 1LL)];;
					{
						auto &_match_expr{ (*((*(_88821_lp))._field_Kind))._field_Kind };
						
						if (_match_expr.type_is(true, 27)) {
							_case_begin_1b8a2c556:;
							{
								goto _match_end_1b8a2c138;
							}
						}
						else {
							_case_begin_1b8a2c18d:;
							{
								(*_87717_ins.alloc)._field_Params=jule::append((*_87717_ins.alloc)._field_Params,jule::Slice<jule::Ptr<_1ce009886_ParamIns>>::make({jule::new_ptr<_1ce009886_ParamIns>(_1ce009886_ParamIns{._field_Decl=jule::new_ptr<_1ce005e59_Param>(_1ce005e59_Param{._field_Ident=jule::Str::lit("__file", 6)}), ._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(jule::new_ptr<_1b629ce72_customType>(_1b629ce72_customType{._field_kind=jule::Str::lit("const char*", 11)}), 27)})})}));
							}
						}
						_match_end_1b8a2c138:;
					};
				};
				_1b629056e_pushResult(_self_, &(_87621_m));
				_1b6295a19_funcDeclTrait(_self_, _87545_owner, &(_87621_m), true);
			}
			_iter_next_1b8a257c4:;
			++it;
			goto _iter_begin_1b8a257c4;
		}
		_iter_end_1b8a257c4:;
	};
}



inline void _1b6296278_traitDataTypes(jule::Ptr<_1b628d825_ObjectCoder> _self_) {
	_1b62920dc_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1ce06ded3_Package>*)>([=](jule::Ptr<_1ce06ded3_Package>* _91135_pkg) mutable -> void {
		_1b629aa63_iterFiles(_91135_pkg, jule::Fn<void(jule::Ptr<_1ce116894_SymbolTable>*)>([=](jule::Ptr<_1ce116894_SymbolTable>* _91236_file) mutable -> void {
			{
				auto expr = &((*((*(_91236_file))))._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b8a30d1d:;
				if (it != expr_end) {
					jule::Ptr<_1ce01ac0a_Trait> _91329_t = *it;
					{
						if (((*(_91329_t))._field_Token == nullptr)) {
							return;;
						};
						if (((*_91329_t.alloc)._field_Methods.len() == 0LL)) {
							goto _iter_next_1b8a30d1d;
						};
						_1b628dec9_write(_self_, jule::Str::lit("struct ", 7));
						static__1b61d433c_traitDecl(&((*_self_.alloc)._field_Buf), _91329_t);
						_1b628dec9_write(_self_, jule::Str::lit("MptrData", 8));
						_1b628dec9_write(_self_, jule::Str::lit(" {\n", 3));
						_1b628e480_addIndent(_self_);
						_1b629607a_traitDataTypeMethods(_self_, &(_91329_t), &(_91329_t));
						_1b628e67d_doneIndent(_self_);
						_1b628e87b_indent(_self_);
						_1b628dec9_write(_self_, jule::Str::lit("};\n\n", 4));
					}
					_iter_next_1b8a30d1d:;
					++it;
					goto _iter_begin_1b8a30d1d;
				}
				_iter_end_1b8a30d1d:;
			};
		}));
	}));
}



inline void _1b6296531_paramIns(jule::Ptr<_1b628d825_ObjectCoder> _self_, jule::Ptr<_1ce009886_ParamIns>* _93433_p) {
	_1b62a3241_paramIns((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), _93433_p);
	_1b628dec9_write(_self_, jule::Str::lit(" ", 1));
	static__1b61d4628_param(&((*_self_.alloc)._field_Buf), &((*((*(_93433_p))))._field_Decl));
}



inline void _1b62967d9_paramsIns(jule::Ptr<_1b628d825_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1ce009886_ParamIns>>* _94034_params) {
	if (((*(_94034_params)).len() == 0LL)) {
		_1b628dec9_write(_self_, jule::Str::lit("(void)", 6));
		return;;
	};
	_1b628dec9_write(_self_, jule::Str::lit("(", 1));
	{
		auto expr = _94034_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8a35bd0:;
		if (it != expr_end) {
			jule::I32 _94614_i = it - expr->begin();
			jule::Ptr<_1ce009886_ParamIns> _94621_p = *it;
			{
				_1b6296531_paramIns(_self_, &(_94621_p));
				if ((((*(_94034_params)).len() - _94614_i) > 1LL)) {
					_1b628dec9_write(_self_, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1b8a35bd0:;
			++it;
			_94614_i++;
			goto _iter_begin_1b8a35bd0;
		}
		_iter_end_1b8a35bd0:;
	};
	_1b628dec9_write(_self_, jule::Str::lit(")", 1));
}



inline void _1b6296b4c_varInitExpr(jule::Ptr<_1b628d825_ObjectCoder> _self_, jule::Ptr<_1ce0b4105_Var>* _95536_v, jule::Fn<void(void)> _95545_init) {
	if ((*((*(_95536_v))))._field_Statically) {
		_1b628dec9_write(_self_, jule::Str::lit("static ", 7));
	};
	_1b62a4451_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*((*(_95536_v))))._field_Kind))._field_Kind);
	_1b628dec9_write(_self_, jule::Str::lit(" ", 1));
	if ((*((*(_95536_v))))._field_Reference) {
		_1b628dec9_write(_self_, jule::Str::lit("*", 1));
	};
	static__1b61d52c7_var(&((*_self_.alloc)._field_Buf), (*(_95536_v)));
	if ((_95545_init != nullptr)) {
		_1b628dec9_write(_self_, jule::Str::lit(" = ", 3));
		_95545_init();
	};
	_1b628dec9_write(_self_, jule::Str::lit(";", 1));
}



inline void _1b6296e05_var(jule::Ptr<_1b628d825_ObjectCoder> _self_, jule::Ptr<_1ce0b4105_Var> _97327_v) {
	if (_1cdeadd9b_IsIgnoreIdent((*(_97327_v))._field_Ident)) {
		return;;
	};
	if ((((*_97327_v.alloc)._field_Value != nullptr) && ((*(*_97327_v.alloc)._field_Value.alloc)._field_Expr != nullptr))) {
		if (((*((*(*_97327_v.alloc)._field_Value.alloc)._field_Data))._field_Model != nullptr)) {
			if ((*_97327_v.alloc)._field_Reference) {
				_1b6296b4c_varInitExpr(_self_, &(_97327_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1b628dec9_write(_self_, jule::Str::lit("&(", 2));
					_1b61cb91c_model((*_self_.alloc)._field_ec, (*(*(*_97327_v.alloc)._field_Value.alloc)._field_Data.alloc)._field_Model);
					_1b628dec9_write(_self_, jule::Str::lit(")", 1));
				}));
			} else {
				_1b6296b4c_varInitExpr(_self_, &(_97327_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1b61c2050_possibleRefExpr((*_self_.alloc)._field_ec, (*(*(*_97327_v.alloc)._field_Value.alloc)._field_Data.alloc)._field_Model);
				}));
			};
			return;;
		};
		_1b6296b4c_varInitExpr(_self_, &(_97327_v), nullptr);
		return;;
	};
	if ((*_97327_v.alloc)._field_Reference) {
		_1b6296b4c_varInitExpr(_self_, &(_97327_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1b628dec9_write(_self_, jule::Str::lit("nullptr", 7));
		}));
		return;;
	};
	if (_1b5e54b5c_shouldInitialized(&((*((*_97327_v.alloc)._field_Kind))._field_Kind))) {
		_1b6296b4c_varInitExpr(_self_, &(_97327_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1b61cbbc5_initExpr((*_self_.alloc)._field_ec, (*(*_97327_v.alloc)._field_Kind.alloc)._field_Kind);
		}));
		return;;
	};
	_1b6296b4c_varInitExpr(_self_, &(_97327_v), nullptr);
}



inline void _1b62971ad_funcIns(jule::Ptr<_1b628d825_ObjectCoder> _self_, jule::Ptr<_1ce00a832_FnIns>* _100432_f) {
	_1b6294e25_funcHead(_self_, _100432_f, false);
	_1b62967d9_paramsIns(_self_, &((*((*(_100432_f))))._field_Params));
	_1b628dec9_write(_self_, jule::Str::lit(" ", 1));
	_1b61babe7_funcScope((*_self_.alloc)._field_sc, (*(_100432_f)));
	if (((*((*(_100432_f))))._field_Scope != nullptr)) {
		_1b628dec9_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1b6297466_func(jule::Ptr<_1b628d825_ObjectCoder> _self_, jule::Ptr<_1ce00792d_Fn>* _101429_f) {
	{
		auto expr = &((*((*(_101429_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8a4798e:;
		if (it != expr_end) {
			jule::Ptr<_1ce00a832_FnIns> _101521_ins = *it;
			{
				_1b62971ad_funcIns(_self_, &(_101521_ins));
			}
			_iter_next_1b8a4798e:;
			++it;
			goto _iter_begin_1b8a4798e;
		}
		_iter_end_1b8a4798e:;
	};
}



inline void _1b62977c9_funcTrait(jule::Ptr<_1b628d825_ObjectCoder> _self_, jule::Ptr<_1b628c3d4_traitHash>* _102034_hash, jule::Ptr<_1ce00792d_Fn>* _102057_f) {
	jule::Str _10219_ident = (*((*(_102057_f))))._field_Ident;;
	{
		auto expr = &((*((*(_102057_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8a49265:;
		if (it != expr_end) {
			jule::Ptr<_1ce00a832_FnIns> _102221_ins = *it;
			{
				(*(_102221_ins))._field_Scope=nullptr;
				_22ab0b88c_StrBuilder _102517_s = static__22ab0bb56_New((((((*((*(_102057_f))))._field_Ident.len() + _10219_ident.len()) + (*((*(_102034_hash))))._field_ti.len()) + 2LL) + 4LLU));;
				_22ab154bc_WriteStr(&_102517_s, _10219_ident);
				_22ab15775_WriteByte(&_102517_s, '_');
				_22ab154bc_WriteStr(&_102517_s, (*((*(_102034_hash))))._field_ti);
				_22ab15775_WriteByte(&_102517_s, '_');
				_22ab154bc_WriteStr(&_102517_s, _22be080a5_Itoa((*((*(_102034_hash))))._field_i));
				(*((*(_102057_f))))._field_Ident=_22ab15cb4_Str(&_102517_s);
				jule::Ptr<_1ce14cbc7_TypeKind> _103417_k = (*((*_102221_ins.alloc)._field_Params[0LL]))._field_Kind;;
				(*((*_102221_ins.alloc)._field_Params[0LL]))._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>((*((*(_102034_hash))))._field_t, 2)});
				_1b62971ad_funcIns(_self_, &(_102221_ins));
				(*((*_102221_ins.alloc)._field_Params[0LL]))._field_Kind=_103417_k;
			}
			_iter_next_1b8a49265:;
			++it;
			goto _iter_begin_1b8a49265;
		}
		_iter_end_1b8a49265:;
	};
	(*((*(_102057_f))))._field_Ident=_10219_ident;
}



inline void _1b6297b3c_traitWrapper(jule::Ptr<_1b628d825_ObjectCoder> _self_, jule::Ptr<_1ce00792d_Fn>* _104237_m, jule::Ptr<_1b628c3d4_traitHash>* _104250_hash) {
	_1b62977c9_funcTrait(_self_, _104250_hash, _104237_m);
	if (((*((*(_104250_hash))))._field_s == nullptr)) {
		if (_2434dd82d_Production) {
			_1b628dec9_write(_self_, jule::Str::lit(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
		} else {
			_1b628dec9_write(_self_, jule::Str::lit(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
		};
		return;;
	};
	jule::Bool _10549_ptr = (!(_1ce00680b_IsRef((*((*(_104237_m))))._field_Params[0LL].ptr())));;
	jule::Ptr<_1ce00792d_Fn> _105613_sm = _1cdee6785_FindMethod((*((*(_104250_hash))))._field_s.ptr(), (*((*(_104237_m))))._field_Ident, false);;
	if (((_105613_sm == nullptr) || ((*(_105613_sm))._field_Instances.len() == 0LL))) {
		return;;
	};
	_1b628e480_addIndent(_self_);
	_1b628dec9_write(_self_, jule::Str::lit("{\n", 2));
	_1b628e87b_indent(_self_);
	if (((*(_105613_sm))._field_Exceptional || (!(_1ce007da1_IsVoid(_105613_sm.ptr()))))) {
		_1b628dec9_write(_self_, jule::Str::lit("return ", 7));
	};
	static__1b61d3c65_func(&((*_self_.alloc)._field_Buf), &(_105613_sm));
	_1b628dec9_write(_self_, jule::Str::lit("(", 1));
	if (_10549_ptr) {
		_1b628dec9_write(_self_, jule::Str::lit("_self_.safe_ptr<", 16));
		_1b62a2707_structureIns((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_104250_hash))))._field_s);
		_1b628dec9_write(_self_, jule::Str::lit(">(", 2));
		if ((!(_2434dd82d_Production))) {
			_1b628dec9_write(_self_, jule::Str::lit("_00___file", 10));
		};
		_1b628dec9_write(_self_, jule::Str::lit(")", 1));
	} else {
		_1b628dec9_write(_self_, jule::Str::lit("_self_.data.as<", 15));
		_1b62a2394_structure((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*(_105613_sm))._field_Owner);
		_1b628dec9_write(_self_, jule::Str::lit(">()", 3));
	};
	{
		auto expr = (*((*(_104237_m))))._field_Params.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b8a556b1:;
		if (it != expr_end) {
			jule::Ptr<_1ce005e59_Param> _108216_mp = *it;
			{
				_1b628dec9_write(_self_, jule::Str::lit(", ", 2));
				static__1b61d4628_param(&((*_self_.alloc)._field_Buf), &(_108216_mp));
			}
			_iter_next_1b8a556b1:;
			++it;
			goto _iter_begin_1b8a556b1;
		}
		_iter_end_1b8a556b1:;
	};
	_1b628dec9_write(_self_, jule::Str::lit(");\n}\n", 5));
	_1b628e67d_doneIndent(_self_);
}



inline void _1b6297d3a_traitWrappers(jule::Ptr<_1b628d825_ObjectCoder> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8a5a298:;
		if (it != expr_end) {
			jule::Ptr<_1b628c3d4_traitHash> _109121_hash = *it;
			{
				{
					auto expr = &((*((*(_109121_hash))._field_t))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b8a5abe4:;
					if (it != expr_end) {
						jule::Ptr<_1ce00792d_Fn> _109225_m = *it;
						{
							_1b6297b3c_traitWrapper(_self_, &(_109225_m), &(_109121_hash));
						}
						_iter_next_1b8a5abe4:;
						++it;
						goto _iter_begin_1b8a5abe4;
					}
					_iter_end_1b8a5abe4:;
				};
			}
			_iter_next_1b8a5a298:;
			++it;
			goto _iter_begin_1b8a5a298;
		}
		_iter_end_1b8a5a298:;
	};
}



inline void _1b629819d_traitDataMethods(jule::Ptr<_1b628d825_ObjectCoder> _self_, jule::Ptr<_1ce01ac0a_Trait>* _109841_t, jule::Ptr<_1b628c3d4_traitHash>* _109853_hash) {
	{
		auto expr = &((*((*(_109841_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8a5bc6c:;
		if (it != expr_end) {
			jule::Ptr<_1ce00792d_Fn> _109921_m = *it;
			{
				_22ab0b88c_StrBuilder _110017_mIdent = static__22ab0bb56_New((*(_109921_m))._field_Ident.len());;
				static__1b61d3c65_func(&(_110017_mIdent), &(_109921_m));
				_1b628e87b_indent(_self_);
				_1b628dec9_write(_self_, jule::Str::lit(".", 1));
				_1b628e282_writeBytes(_self_, _22ab16765_Buf(&_110017_mIdent));
				_1b628dec9_write(_self_, jule::Str::lit("=", 1));
				_1b628e282_writeBytes(_self_, _22ab16765_Buf(&_110017_mIdent));
				_1b628dec9_write(_self_, jule::Str::lit("_", 1));
				_1b628dec9_write(_self_, (*((*(_109853_hash))))._field_ti);
				_1b628dec9_write(_self_, jule::Str::lit("_", 1));
				_1b628dec9_write(_self_, _22be080a5_Itoa((*((*(_109853_hash))))._field_i));
				_1b628dec9_write(_self_, jule::Str::lit(",\n", 2));
			}
			_iter_next_1b8a5bc6c:;
			++it;
			goto _iter_begin_1b8a5bc6c;
		}
		_iter_end_1b8a5bc6c:;
	};
}



inline void _1b6298511_traitData(jule::Ptr<_1b628d825_ObjectCoder> _self_, jule::Ptr<_1b628c3d4_traitHash>* _111534_hash, jule::Ptr<_1ce01ac0a_Trait>* _111557_old) {
	if (((*((*((*(_111534_hash))))._field_t))._field_Methods.len() == 0LL)) {
		return;;
	};
	_22ab0b88c_StrBuilder _111913_ident = static__22ab0bb56_New((*(*((*(_111534_hash))))._field_t.alloc)._field_Ident.len());;
	static__1b61d433c_traitDecl(&(_111913_ident), (*((*(_111534_hash))))._field_t);
	if (((*((*(_111534_hash))))._field_t != (*(_111557_old)))) {
		if (((*(_111557_old)) != nullptr)) {
			_1b628e67d_doneIndent(_self_);
			_1b628e87b_indent(_self_);
			_1b628dec9_write(_self_, jule::Str::lit("};\n", 3));
		};
		_1b628dec9_write(_self_, jule::Str::lit("static ", 7));
		_1b628e282_writeBytes(_self_, _22ab16765_Buf(&_111913_ident));
		_1b628dec9_write(_self_, jule::Str::lit("MptrData ", 9));
		_1b628e282_writeBytes(_self_, _22ab16765_Buf(&_111913_ident));
		_1b628dec9_write(_self_, jule::Str::lit("_mptr_data[] = {\n", 17));
		(*(_111557_old))=(*((*(_111534_hash))))._field_t;
		_1b628e480_addIndent(_self_);
	};
	_1b628e87b_indent(_self_);
	_1b628dec9_write(_self_, jule::Str::lit("{\n", 2));
	_1b628e480_addIndent(_self_);
	_1b629819d_traitDataMethods(_self_, &((*((*(_111534_hash))))._field_t), _111534_hash);
	_1b628e67d_doneIndent(_self_);
	_1b628e87b_indent(_self_);
	_1b628dec9_write(_self_, jule::Str::lit("},\n", 3));
}



inline void _1b629870e_traitDatas(jule::Ptr<_1b628d825_ObjectCoder> _self_) {
	jule::Ptr<_1ce01ac0a_Trait> _114517_old = nullptr;;
	{
		auto expr = &((*_self_.alloc)._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b99400d3:;
		if (it != expr_end) {
			jule::Ptr<_1b628c3d4_traitHash> _114621_hash = *it;
			{
				_1b6298511_traitData(_self_, &(_114621_hash), &(_114517_old));
			}
			_iter_next_1b99400d3:;
			++it;
			goto _iter_begin_1b99400d3;
		}
		_iter_end_1b99400d3:;
	};
	if ((_114517_old != nullptr)) {
		_1b628e67d_doneIndent(_self_);
		_1b628e87b_indent(_self_);
		_1b628dec9_write(_self_, jule::Str::lit("};\n", 3));
	};
}



inline void _1b629890c_globals(jule::Ptr<_1b628d825_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9941b73:;
		if (it != expr_end) {
			jule::Ptr<_1ce0b4105_Var> _115721_v = *it;
			{
				_1b62a4451_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_115721_v))._field_Kind))._field_Kind);
				_1b628dec9_write(_self_, jule::Str::lit(" ", 1));
				static__1b61d52c7_var(&((*_self_.alloc)._field_Buf), _115721_v);
				_1b628dec9_write(_self_, jule::Str::lit(" = ", 3));
				_1b61cb91c_model((*_self_.alloc)._field_ec, (*((*((*_115721_v.alloc)._field_Value))._field_Data))._field_Model);
				_1b628dec9_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1b9941b73:;
			++it;
			goto _iter_begin_1b9941b73;
		}
		_iter_end_1b9941b73:;
	};
}



inline void _1b6298b0a_decls(jule::Ptr<_1b628d825_ObjectCoder> _self_) {
	_1b62924d8_traitDecls(_self_);
	_1b629298e_structurePlainDecls(_self_);
	_1b629460b_structureDecls(_self_);
	(*_self_.alloc)._field_headPos=_22ab16248_Len(&(*_self_.alloc)._field_Buf);
	_1b6294809_structureMethodDecls(_self_);
	_1b6295c17_funcDecls(_self_);
	_1b628dec9_write(_self_, jule::Str::lit("\n\n", 2));
	_1b6296278_traitDataTypes(_self_);
	_1b628dec9_write(_self_, jule::Str::lit("\n\n", 2));
	_1b6297d3a_traitWrappers(_self_);
	_1b628dec9_write(_self_, jule::Str::lit("\n\n", 2));
	_1b629870e_traitDatas(_self_);
	_1b628dec9_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_declPos=_22ab16248_Len(&(*_self_.alloc)._field_Buf);
	_1b629890c_globals(_self_);
}



inline void _1b6298db3_structureMethods(jule::Ptr<_1b628d825_ObjectCoder> _self_, jule::Ptr<_1cdee571d_StructIns>* _118541_s) {
	{
		auto expr = &((*((*(_118541_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b994976e:;
		if (it != expr_end) {
			jule::Ptr<_1ce00792d_Fn> _118621_f = *it;
			{
				_1b6297466_func(_self_, &(_118621_f));
				_1b628dec9_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1b994976e:;
			++it;
			goto _iter_begin_1b994976e;
		}
		_iter_end_1b994976e:;
	};
}



inline void _1b629916b_structureOstream(jule::Ptr<_1b628d825_ObjectCoder> _self_, jule::Ptr<_1cdee571d_StructIns>* _119241_s) {
	_1b628e87b_indent(_self_);
	_1b628dec9_write(_self_, jule::Str::lit("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	static__1b61d4c00_structureIns(&((*_self_.alloc)._field_Buf), _119241_s);
	_1b628dec9_write(_self_, jule::Str::lit(" _Src) {\n", 9));
	_1b628e480_addIndent(_self_);
	_1b628e87b_indent(_self_);
	jule::Ptr<_1ce00792d_Fn> _120013_fts = _1cdee6785_FindMethod((*(_119241_s)).ptr(), jule::Str::lit("Str", 3), false);;
	if (static__1ce0b5865_Str(_120013_fts)) {
		_1b628dec9_write(_self_, jule::Str::lit("_Stream << ", 11));
		static__1b61d3c65_func(&((*_self_.alloc)._field_Buf), &(_120013_fts));
		_1b628dec9_write(_self_, jule::Str::lit("(&_Src);\n", 9));
	} else {
		_1b628dec9_write(_self_, jule::Str::lit("_Stream << \"", 12));
		_1b61cc687_cstrBytes(&((*_self_.alloc)._field_Buf), (*((*((*(_119241_s))))._field_Decl))._field_Ident);
		_1b628dec9_write(_self_, jule::Str::lit("{\";\n", 4));
		{
			auto expr = &((*((*(_119241_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b994e39a:;
			if (it != expr_end) {
				jule::I32 _121018_i = it - expr->begin();
				jule::Ptr<_1cdee4b6d_FieldIns> _121025_f = *it;
				{
					_1b628e87b_indent(_self_);
					_1b628dec9_write(_self_, jule::Str::lit("_Stream << \"", 12));
					_1b61cc687_cstrBytes(&((*_self_.alloc)._field_Buf), (*((*(_121025_f))._field_Decl))._field_Ident);
					_1b628dec9_write(_self_, jule::Str::lit(":", 1));
					jule::Ptr<_1cdee571d_StructIns> _121717_strct = _1ce15189b_Struct((*_121025_f.alloc)._field_Kind.ptr());;
					if ((((_121717_strct != nullptr) && ((*_121717_strct.alloc)._field_Decl != nullptr)) && (*(*_121717_strct.alloc)._field_Decl.alloc)._field_Binded)) {
						_1b628dec9_write(_self_, jule::Str::lit(" cpp.", 5));
						static__1b61d4edb_field(&((*_self_.alloc)._field_Buf), &((*_121025_f.alloc)._field_Decl));
						_1b628dec9_write(_self_, jule::Str::lit("\"", 1));
					} else {
						_1b628dec9_write(_self_, jule::Str::lit("\" << _Src.", 10));
						static__1b61d4edb_field(&((*_self_.alloc)._field_Buf), &((*_121025_f.alloc)._field_Decl));
					};
					if (((_121018_i + 1LL) < (*((*(_119241_s))))._field_Fields.len())) {
						_1b628dec9_write(_self_, jule::Str::lit(" << \", \"", 8));
					};
					_1b628dec9_write(_self_, jule::Str::lit(";\n", 2));
				}
				_iter_next_1b994e39a:;
				++it;
				_121018_i++;
				goto _iter_begin_1b994e39a;
			}
			_iter_end_1b994e39a:;
		};
		_1b628e87b_indent(_self_);
		_1b628dec9_write(_self_, jule::Str::lit("_Stream << \"}\";\n", 16));
	};
	_1b628e87b_indent(_self_);
	_1b628dec9_write(_self_, jule::Str::lit("return _Stream;\n", 16));
	_1b628e67d_doneIndent(_self_);
	_1b628dec9_write(_self_, jule::Str::lit("}", 1));
}



inline void _1b6299424_structureIns(jule::Ptr<_1b628d825_ObjectCoder> _self_, jule::Ptr<_1cdee571d_StructIns>* _124337_s) {
	_1b6298db3_structureMethods(_self_, _124337_s);
	_1b628dec9_write(_self_, jule::Str::lit("\n\n", 2));
	_1b629916b_structureOstream(_self_, _124337_s);
}



inline void _1b62996cc_structure(jule::Ptr<_1b628d825_ObjectCoder> _self_, jule::Ptr<_1cdee2990_Struct>* _124934_s) {
	{
		auto expr = &((*((*(_124934_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b995878e:;
		if (it != expr_end) {
			jule::Ptr<_1cdee571d_StructIns> _125021_ins = *it;
			{
				_1b6299424_structureIns(_self_, &(_125021_ins));
				_1b628dec9_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1b995878e:;
			++it;
			goto _iter_begin_1b995878e;
		}
		_iter_end_1b995878e:;
	};
}



inline void _1b62998ca_structures(jule::Ptr<_1b628d825_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9958edc:;
		if (it != expr_end) {
			jule::Ptr<_1cdee2990_Struct> _125721_s = *it;
			{
				if (((*(_125721_s))._field_Token != nullptr)) {
					_1b62996cc_structure(_self_, &(_125721_s));
					_1b628dec9_write(_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1b9958edc:;
			++it;
			goto _iter_begin_1b9958edc;
		}
		_iter_end_1b9958edc:;
	};
}



inline void _1b6299ac8_funcs(jule::Ptr<_1b628d825_ObjectCoder> _self_) {
	_1b62920dc_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1ce06ded3_Package>*)>([=](jule::Ptr<_1ce06ded3_Package>* _126635_pkg) mutable -> void {
		_1b629aa63_iterFiles(_126635_pkg, jule::Fn<void(jule::Ptr<_1ce116894_SymbolTable>*)>([=](jule::Ptr<_1ce116894_SymbolTable>* _126736_file) mutable -> void {
			{
				auto expr = &((*((*(_126736_file))))._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b995d2dd:;
				if (it != expr_end) {
					jule::Ptr<_1ce00792d_Fn> _126829_f = *it;
					{
						if (((!(_2434dce6a_Test)) && _1b5e54893_hasDirective(&((*(_126829_f))._field_Directives), jule::Str::lit("test", 4)))) {
							goto _iter_next_1b995d2dd;
						};
						if (((!((*_126829_f.alloc)._field_Binded)) && ((*_126829_f.alloc)._field_Token != nullptr))) {
							_1b6297466_func(_self_, &(_126829_f));
							_1b628dec9_write(_self_, jule::Str::lit("\n\n", 2));
						};
					}
					_iter_next_1b995d2dd:;
					++it;
					goto _iter_begin_1b995d2dd;
				}
				_iter_end_1b995d2dd:;
			};
		}));
	}));
}



inline void _1b6299d81_pushInit(jule::Ptr<_1b628d825_ObjectCoder> _self_, jule::Ptr<_1ce06ded3_Package>* _128133_pkg) {
	_1b629aa63_iterFiles(_128133_pkg, jule::Fn<void(jule::Ptr<_1ce116894_SymbolTable>*)>([=](jule::Ptr<_1ce116894_SymbolTable>* _128232_file) mutable -> void {
		{
			auto expr = &((*((*(_128232_file))))._field_Funcs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b9960d3a:;
			if (it != expr_end) {
				jule::Ptr<_1ce00792d_Fn> _128320_f = *it;
				{
					if ((*(_128320_f))._field_Ident.equal("init", 4)) {
						_1b628e87b_indent(_self_);
						static__1b61d3c65_func(&((*_self_.alloc)._field_Buf), &(_128320_f));
						_1b628dec9_write(_self_, jule::Str::lit("();\n", 4));
					};
				}
				_iter_next_1b9960d3a:;
				++it;
				goto _iter_begin_1b9960d3a;
			}
			_iter_end_1b9960d3a:;
		};
	}));
}



inline void _1b629a07e_initCaller(jule::Ptr<_1b628d825_ObjectCoder> _self_) {
	_1b628dec9_write(_self_, jule::Str::lit("void __jule_call_initializers(void) {\n", 38));
	_1b628e480_addIndent(_self_);
	_1b62920dc_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1ce06ded3_Package>*)>([=](jule::Ptr<_1ce06ded3_Package>* _129635_pkg) mutable -> void {
		_1b6299d81_pushInit(_self_, _129635_pkg);
	}));
	_1b628e67d_doneIndent(_self_);
	_1b628dec9_write(_self_, jule::Str::lit("\n}", 2));
}



inline void _1b629a27c_end(jule::Ptr<_1b628d825_ObjectCoder> _self_) {
	_1b628dec9_write(_self_, jule::Str::lit("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_2434dce6a_Test) {
		_1b628dec9_write(_self_, jule::Str::lit("test_point();", 13));
	} else {
		_1b628dec9_write(_self_, jule::Str::lit("entry_point();", 14));
	};
	_1b628dec9_write(_self_, jule::Str::lit("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1b629a47a_serializeHead(jule::Ptr<_1b628d825_ObjectCoder> _self_) {
	_1b6291d34_prepareStructures(_self_);
	_1b62922da_buildTraitMap(_self_);
	_1b6291680_head(_self_);
	_1b628dec9_write(_self_, jule::Str::lit("\n", 1));
	_1b6298b0a_decls(_self_);
	if ((_22ab16248_Len(&(*_self_.alloc)._field_resultDecls) > 0LL)) {
		jule::Slice<jule::U8> _133117_head = jule::Slice<jule::U8>::alloc(0LL, (_22ab16248_Len(&(*_self_.alloc)._field_Buf) + _22ab16248_Len(&(*_self_.alloc)._field_resultDecls)), 0);;
		(_133117_head).append(_22ab16765_Buf(&(*_self_.alloc)._field_Buf).slice(0LL, (*_self_.alloc)._field_headPos));;
		(_133117_head).append(_22ab16765_Buf(&(*_self_.alloc)._field_resultDecls));;
		(*_self_.alloc)._field_declPos+=_22ab16248_Len(&(*_self_.alloc)._field_resultDecls);
		(_133117_head).append(_22ab16765_Buf(&(*_self_.alloc)._field_Buf).slice((*_self_.alloc)._field_headPos));;
		{
			_22ab16a1d_SetBuf(&(*_self_.alloc)._field_Buf, _133117_head);
		};
	};
	_1b628dec9_write(_self_, jule::Str::lit("\n", 1));
	_1b62998ca_structures(_self_);
	_1b6299ac8_funcs(_self_);
	_1b629a07e_initCaller(_self_);
	_1b628dec9_write(_self_, jule::Str::lit("\n\n", 2));
	if ((_22ab16248_Len(&(*_self_.alloc)._field_anyObj) > 0LL)) {
		jule::Slice<jule::U8> _134617_head = jule::Slice<jule::U8>::alloc(0LL, (_22ab16248_Len(&(*_self_.alloc)._field_Buf) + _22ab16248_Len(&(*_self_.alloc)._field_anyObj)), 0);;
		(_134617_head).append(_22ab16765_Buf(&(*_self_.alloc)._field_Buf).slice(0LL, (*_self_.alloc)._field_declPos));;
		(_134617_head).append(_22ab16765_Buf(&(*_self_.alloc)._field_anyObj));;
		(_134617_head).append(_22ab16765_Buf(&(*_self_.alloc)._field_Buf).slice((*_self_.alloc)._field_declPos));;
		{
			_22ab16a1d_SetBuf(&(*_self_.alloc)._field_Buf, _134617_head);
		};
	};
}



inline void _1b629a678_Serialize(jule::Ptr<_1b628d825_ObjectCoder> _self_) {
	_1b629a47a_serializeHead(_self_);
	_1b629a27c_end(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1b628d825_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Buf:" << _Src._field_Buf << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "traitCastMap:" << _Src._field_traitCastMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ce2620e9_dataCheckpoint _Src) {
	_Stream << "dataCheckpoint{";
	_Stream << "boundary:" << _Src._field_boundary << ", ";
	_Stream << "nils:" << _Src._field_nils << ", ";
	_Stream << "dynamic:" << _Src._field_dynamic;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b5925a07_ObjectDeadCode> static__1b5925e9c_new(jule::Ptr<_1b57ae72b_IR>* _3524_ir) {
	return jule::new_ptr<_1b5925a07_ObjectDeadCode>(_1b5925a07_ObjectDeadCode{._field_ir=(*(_3524_ir))});;
}



inline jule::Bool _1b9108b32_isLive(jule::Ptr<_1b5925a07_ObjectDeadCode> _self_, jule::Ptr<_1ce01ac0a_Trait>* _4130_t) {
	jule::Slice<jule::Ptr<_1ce01ac0a_Trait>> _4217_live = nullptr;;
	{
		
{
			_case_begin_1b910a826:;
			{
				_4217_live=(*(_self_))._field_live._field_traits;
			}
		}
		_match_end_1b910a705:;
	};
	{
		auto expr = &(_4217_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b910b926:;
		if (it != expr_end) {
			jule::I32 _5313_i = it - expr->begin();
			{
				if ((_4217_live[_5313_i] == (*(_4130_t)))) {
					return true;;
				};
			}
			_iter_next_1b910b926:;
			++it;
			_5313_i++;
			goto _iter_begin_1b910b926;
		}
		_iter_end_1b910b926:;
	};
	return false;;
}

inline jule::Bool _1b910e583_isLive(jule::Ptr<_1b5925a07_ObjectDeadCode> _self_, jule::Ptr<_1ce00a832_FnIns>* _4130_t) {
	jule::Slice<jule::Ptr<_1ce00a832_FnIns>> _4217_live = nullptr;;
	{
		
{
			_case_begin_1b91111bc:;
			{
				_4217_live=(*(_self_))._field_live._field_fns;
			}
		}
		_match_end_1b9111112:;
	};
	{
		auto expr = &(_4217_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9111167:;
		if (it != expr_end) {
			jule::I32 _5313_i = it - expr->begin();
			{
				if ((_4217_live[_5313_i] == (*(_4130_t)))) {
					return true;;
				};
			}
			_iter_next_1b9111167:;
			++it;
			_5313_i++;
			goto _iter_begin_1b9111167;
		}
		_iter_end_1b9111167:;
	};
	return false;;
}

inline jule::Bool _1b91178bb_isLive(jule::Ptr<_1b5925a07_ObjectDeadCode> _self_, jule::Ptr<_1cdee571d_StructIns>* _4130_t) {
	jule::Slice<jule::Ptr<_1cdee571d_StructIns>> _4217_live = nullptr;;
	{
		
{
			_case_begin_1b9119add:;
			{
				_4217_live=(*(_self_))._field_live._field_structs;
			}
		}
		_match_end_1b9119c0e:;
	};
	{
		auto expr = &(_4217_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b911ac87:;
		if (it != expr_end) {
			jule::I32 _5313_i = it - expr->begin();
			{
				if ((_4217_live[_5313_i] == (*(_4130_t)))) {
					return true;;
				};
			}
			_iter_next_1b911ac87:;
			++it;
			_5313_i++;
			goto _iter_begin_1b911ac87;
		}
		_iter_end_1b911ac87:;
	};
	return false;;
}

inline jule::Bool _1b911c690_isLive(jule::Ptr<_1b5925a07_ObjectDeadCode> _self_, jule::Ptr<_1ce0b4105_Var>* _4130_t) {
	jule::Slice<jule::Ptr<_1ce0b4105_Var>> _4217_live = nullptr;;
	{
		
{
			_case_begin_1b911e087:;
			{
				_4217_live=(*(_self_))._field_live._field_vars;
			}
		}
		_match_end_1b911e21e:;
	};
	{
		auto expr = &(_4217_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b911d5e7:;
		if (it != expr_end) {
			jule::I32 _5313_i = it - expr->begin();
			{
				if ((_4217_live[_5313_i] == (*(_4130_t)))) {
					return true;;
				};
			}
			_iter_next_1b911d5e7:;
			++it;
			_5313_i++;
			goto _iter_begin_1b911d5e7;
		}
		_iter_end_1b911d5e7:;
	};
	return false;;
}



inline void _1b910900b_pushLive(jule::Ptr<_1b5925a07_ObjectDeadCode> _self_, jule::Ptr<_1ce01ac0a_Trait> _6135_t) {
	{
		
{
			_case_begin_1b910c98d:;
			{
				(*(_self_))._field_live._field_traits=jule::append((*_self_.alloc)._field_live._field_traits,jule::Slice<jule::Ptr<_1ce01ac0a_Trait>>::make({_6135_t}));
			}
		}
		_match_end_1b910c7e5:;
	};
}

inline void _1b910e95c_pushLive(jule::Ptr<_1b5925a07_ObjectDeadCode> _self_, jule::Ptr<_1ce00a832_FnIns> _6135_t) {
	{
		
{
			_case_begin_1b9113664:;
			{
				(*(_self_))._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,jule::Slice<jule::Ptr<_1ce00a832_FnIns>>::make({_6135_t}));
			}
		}
		_match_end_1b911381d:;
	};
}

inline void _1b9115941_pushLive(jule::Ptr<_1b5925a07_ObjectDeadCode> _self_, jule::Ptr<_1cdee571d_StructIns> _6135_t) {
	{
		
{
			_case_begin_1b911716d:;
			{
				(*(_self_))._field_live._field_structs=jule::append((*_self_.alloc)._field_live._field_structs,jule::Slice<jule::Ptr<_1cdee571d_StructIns>>::make({_6135_t}));
			}
		}
		_match_end_1b911703b:;
	};
}

inline void _1b911ca69_pushLive(jule::Ptr<_1b5925a07_ObjectDeadCode> _self_, jule::Ptr<_1ce0b4105_Var> _6135_t) {
	{
		
{
			_case_begin_1b91217b5:;
			{
				(*(_self_))._field_live._field_vars=jule::append((*_self_.alloc)._field_live._field_vars,jule::Slice<jule::Ptr<_1ce0b4105_Var>>::make({_6135_t}));
			}
		}
		_match_end_1b912170a:;
	};
}



inline void _1b592684e_setReferencesAsLive(jule::Ptr<_1b5925a07_ObjectDeadCode> _self_, jule::Ptr<_1ce00da00_ReferenceStack>* _7444_rs) {
	if (((*(_7444_rs)) == nullptr)) {
		return;;
	};
	jule::I32 _7813_i = 0LL;;
	for (; (_7813_i < _1ce00e1e8_Len((*(_7444_rs)).ptr())); (_7813_i)++) {
		{
			jule::Any _8017_ref = _1ce00e539_At((*(_7444_rs)).ptr(), _7813_i);;
			{
				auto &_match_expr{ _8017_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_1b91077e0:;
					{
						jule::Ptr<_1ce01ac0a_Trait> _8321_t = _8017_ref.unsafe_cast_ptr<_1ce01ac0a_Trait>();;
						if (_1b9108b32_isLive(_self_, &(_8321_t))) {
							goto _iter_next_1b9106a86;
						};
						_1b910900b_pushLive(_self_, _8321_t);
						{
							auto expr = &((*(_8321_t))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1b91083e5:;
							if (it != expr_end) {
								jule::Ptr<_1ce00792d_Fn> _8829_ins = *it;
								{
									{
										auto expr = &((*(_8829_ins))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1b9109814:;
										if (it != expr_end) {
											jule::Ptr<_1ce00a832_FnIns> _8933_mins = *it;
											{
												if (_1b910e583_isLive(_self_, &(_8933_mins))) {
													goto _iter_next_1b9109814;
												};
												_1b910e95c_pushLive(_self_, _8933_mins);
												_1b592684e_setReferencesAsLive(_self_, &((*(_8933_mins))._field_Refers));
											}
											_iter_next_1b9109814:;
											++it;
											goto _iter_begin_1b9109814;
										}
										_iter_end_1b9109814:;
									};
								}
								_iter_next_1b91083e5:;
								++it;
								goto _iter_begin_1b91083e5;
							}
							_iter_end_1b91083e5:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1b910768b:;
					{
						jule::Ptr<_1ce00a832_FnIns> _9821_f = _8017_ref.unsafe_cast_ptr<_1ce00a832_FnIns>();;
						if (_1b910e583_isLive(_self_, &(_9821_f))) {
							goto _match_end_1b9107559;
						};
						if ((((*(_9821_f))._field_Owner != nullptr) && (!((*((*_9821_f.alloc)._field_Decl))._field_Statically)))) {
							if ((!(_1b91178bb_isLive(_self_, &((*_9821_f.alloc)._field_Owner))))) {
								_1b9115941_pushLive(_self_, (*_9821_f.alloc)._field_Owner);
								_1b592684e_setReferencesAsLive(_self_, &((*(*_9821_f.alloc)._field_Owner.alloc)._field_Refers));
							};
						};
						_1b910e95c_pushLive(_self_, _9821_f);
						_1b592684e_setReferencesAsLive(_self_, &((*_9821_f.alloc)._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_1b9107889:;
					{
						jule::Ptr<_1ce0b4105_Var> _11121_v = _8017_ref.unsafe_cast_ptr<_1ce0b4105_Var>();;
						if (_1b911c690_isLive(_self_, &(_11121_v))) {
							goto _match_end_1b9107559;
						};
						_1b911ca69_pushLive(_self_, _11121_v);
						_1b592684e_setReferencesAsLive(_self_, &((*(_11121_v))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_1b9107900:;
					{
						jule::Ptr<_1cdee571d_StructIns> _11821_s = _8017_ref.unsafe_cast_ptr<_1cdee571d_StructIns>();;
						if (_1b91178bb_isLive(_self_, &(_11821_s))) {
							goto _match_end_1b9107559;
						};
						_1b9115941_pushLive(_self_, _11821_s);
						_1b592684e_setReferencesAsLive(_self_, &((*(_11821_s))._field_Refers));
						{
							auto expr = &((*_11821_s.alloc)._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1b9123476:;
							if (it != expr_end) {
								jule::Ptr<_1ce00792d_Fn> _12429_m = *it;
								{
									{
										auto expr = &((*(_12429_m))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1b91247da:;
										if (it != expr_end) {
											jule::Ptr<_1ce00a832_FnIns> _12533_ins = *it;
											{
												if (_1b910e583_isLive(_self_, &(_12533_ins))) {
													goto _iter_next_1b91247da;
												};
												if (_1b5929522_isTraitMethod(&(_11821_s), &(_12533_ins))) {
													_1b910e95c_pushLive(_self_, _12533_ins);
													_1b592684e_setReferencesAsLive(_self_, &((*(_12533_ins))._field_Refers));
												};
												;
												;
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Eq)) {
														_1b910e95c_pushLive(_self_, _12533_ins);
														_1b592684e_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Gt)) {
														_1b910e95c_pushLive(_self_, _12533_ins);
														_1b592684e_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_GtEq)) {
														_1b910e95c_pushLive(_self_, _12533_ins);
														_1b592684e_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Lt)) {
														_1b910e95c_pushLive(_self_, _12533_ins);
														_1b592684e_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_LtEq)) {
														_1b910e95c_pushLive(_self_, _12533_ins);
														_1b592684e_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Shl)) {
														_1b910e95c_pushLive(_self_, _12533_ins);
														_1b592684e_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Shr)) {
														_1b910e95c_pushLive(_self_, _12533_ins);
														_1b592684e_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Add)) {
														_1b910e95c_pushLive(_self_, _12533_ins);
														_1b592684e_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Sub)) {
														_1b910e95c_pushLive(_self_, _12533_ins);
														_1b592684e_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Div)) {
														_1b910e95c_pushLive(_self_, _12533_ins);
														_1b592684e_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Mul)) {
														_1b910e95c_pushLive(_self_, _12533_ins);
														_1b592684e_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Mod)) {
														_1b910e95c_pushLive(_self_, _12533_ins);
														_1b592684e_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitAnd)) {
														_1b910e95c_pushLive(_self_, _12533_ins);
														_1b592684e_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitOr)) {
														_1b910e95c_pushLive(_self_, _12533_ins);
														_1b592684e_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitXor)) {
														_1b910e95c_pushLive(_self_, _12533_ins);
														_1b592684e_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Neg)) {
														_1b910e95c_pushLive(_self_, _12533_ins);
														_1b592684e_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Pos)) {
														_1b910e95c_pushLive(_self_, _12533_ins);
														_1b592684e_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitNot)) {
														_1b910e95c_pushLive(_self_, _12533_ins);
														_1b592684e_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_AddAssign)) {
														_1b910e95c_pushLive(_self_, _12533_ins);
														_1b592684e_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_SubAssign)) {
														_1b910e95c_pushLive(_self_, _12533_ins);
														_1b592684e_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_DivAssign)) {
														_1b910e95c_pushLive(_self_, _12533_ins);
														_1b592684e_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_MulAssign)) {
														_1b910e95c_pushLive(_self_, _12533_ins);
														_1b592684e_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_ModAssign)) {
														_1b910e95c_pushLive(_self_, _12533_ins);
														_1b592684e_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_ShlAssign)) {
														_1b910e95c_pushLive(_self_, _12533_ins);
														_1b592684e_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_ShrAssign)) {
														_1b910e95c_pushLive(_self_, _12533_ins);
														_1b592684e_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitOrAssign)) {
														_1b910e95c_pushLive(_self_, _12533_ins);
														_1b592684e_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitAndAssign)) {
														_1b910e95c_pushLive(_self_, _12533_ins);
														_1b592684e_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitXorAssign)) {
														_1b910e95c_pushLive(_self_, _12533_ins);
														_1b592684e_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
											}
											_iter_next_1b91247da:;
											++it;
											goto _iter_begin_1b91247da;
										}
										_iter_end_1b91247da:;
									};
								}
								_iter_next_1b9123476:;
								++it;
								goto _iter_begin_1b9123476;
							}
							_iter_end_1b9123476:;
						};
					}
				}
				_match_end_1b9107559:;
			};
		}
	_iter_next_1b9106a86:;
	}
	_iter_end_1b9106a86:;;
}



inline void _1b5926b07_inits(jule::Ptr<_1b5925a07_ObjectDeadCode> _self_, jule::Ptr<_1ce06ded3_Package>* _15630_pkg) {
	{
		auto expr = &((*((*(_15630_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9106aec:;
		if (it != expr_end) {
			jule::Ptr<_1ce116894_SymbolTable> _15721_file = *it;
			{
				{
					auto expr = &((*(_15721_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b91246a8:;
					if (it != expr_end) {
						jule::Ptr<_1ce00792d_Fn> _15825_f = *it;
						{
							if ((*(_15825_f))._field_Ident.equal("init", 4)) {
								jule::Ptr<_1ce00a832_FnIns> _16025_ins = (*_15825_f.alloc)._field_Instances[0LL];;
								(*(_self_))._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,jule::Slice<jule::Ptr<_1ce00a832_FnIns>>::make({_16025_ins}));
								_1b592684e_setReferencesAsLive(_self_, &((*(_16025_ins))._field_Refers));
							};
						}
						_iter_next_1b91246a8:;
						++it;
						goto _iter_begin_1b91246a8;
					}
					_iter_end_1b91246a8:;
				};
			}
			_iter_next_1b9106aec:;
			++it;
			goto _iter_begin_1b9106aec;
		}
		_iter_end_1b9106aec:;
	};
}



inline void _1b5926db0_collectLivePackage(jule::Ptr<_1b5925a07_ObjectDeadCode> _self_, jule::Ptr<_1ce06ded3_Package>* _16843_pkg) {
	_1b5926b07_inits(_self_, _16843_pkg);
	if (_2434dce6a_Test) {
		{
			auto expr = &((*((*(_16843_pkg))))._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b914341e:;
			if (it != expr_end) {
				jule::Ptr<_1ce116894_SymbolTable> _17425_file = *it;
				{
					{
						auto expr = &((*(_17425_file))._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b9143d48:;
						if (it != expr_end) {
							jule::Ptr<_1ce00792d_Fn> _17529_f = *it;
							{
								if (_1b5929159_hasDirective(&((*(_17529_f))._field_Directives), jule::Str::lit("test", 4))) {
									jule::Ptr<_1ce00a832_FnIns> _17729_ins = (*_17529_f.alloc)._field_Instances[0LL];;
									(*_self_.alloc)._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,jule::Slice<jule::Ptr<_1ce00a832_FnIns>>::make({_17729_ins}));
									_1b592684e_setReferencesAsLive(_self_, &((*(_17729_ins))._field_Refers));
								};
							}
							_iter_next_1b9143d48:;
							++it;
							goto _iter_begin_1b9143d48;
						}
						_iter_end_1b9143d48:;
					};
				}
				_iter_next_1b914341e:;
				++it;
				goto _iter_begin_1b914341e;
			}
			_iter_end_1b914341e:;
		};
	};
}



inline void _1b59270ad_collectLive(jule::Ptr<_1b5925a07_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9143a7e:;
		if (it != expr_end) {
			jule::Ptr<_1ce06b0ac_ImportInfo> _18721_used = *it;
			{
				if ((!((*(_18721_used))._field_Binded))) {
					_1b5926db0_collectLivePackage(_self_, &((*_18721_used.alloc)._field_Package));
				};
			}
			_iter_next_1b9143a7e:;
			++it;
			goto _iter_begin_1b9143a7e;
		}
		_iter_end_1b9143a7e:;
	};
	_1b5926db0_collectLivePackage(_self_, &((*(*_self_.alloc)._field_ir.alloc)._field_Main));
	jule::Ptr<_1ce00792d_Fn> _19513_main = _1ce070567_FindFn((*(*_self_.alloc)._field_ir.alloc)._field_Main.ptr(), jule::Str::lit("main", 4), false);;
	jule::Ptr<_1ce00a832_FnIns> _19613_ins = (*(_19513_main))._field_Instances[0LL];;
	(*_self_.alloc)._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,jule::Slice<jule::Ptr<_1ce00a832_FnIns>>::make({_19613_ins}));
	_1b592684e_setReferencesAsLive(_self_, &((*(_19613_ins))._field_Refers));
}



inline void _1b5927366_removeDeadGlobals(jule::Ptr<_1b5925a07_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ce0b4105_Var>>* _20142_vars) {
	jule::I32 _20213_i = 0LL;;
	while ((_20213_i < (*(_20142_vars)).len())) {
		{
			jule::Ptr<_1ce0b4105_Var> _20413_v = (*(_20142_vars))[_20213_i];;
			if (_1b911c690_isLive(_self_, &(_20413_v))) {
				(_20213_i)++;
				goto _iter_next_1b9149e3c;
			};
			(*(_20142_vars))=jule::append((*(_20142_vars)).slice(0LL, _20213_i),(*(_20142_vars)).slice((_20213_i + 1LL)));
		}
	_iter_next_1b9149e3c:;
	}
	_iter_end_1b9149e3c:;;
}



inline void _1b592761e_removeDeadFns(jule::Ptr<_1b5925a07_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ce00792d_Fn>>* _21338_funcs) {
	jule::I32 _21413_i = 0LL;;
	while ((_21413_i < (*(_21338_funcs)).len())) {
		{
			jule::Ptr<_1ce00792d_Fn> _21617_f = (*(_21338_funcs))[_21413_i];;
			jule::I32 _21717_j = 0LL;;
			while ((_21717_j < (*(_21617_f))._field_Instances.len())) {
				{
					jule::Ptr<_1ce00a832_FnIns> _21917_ins = (*_21617_f.alloc)._field_Instances[_21717_j];;
					if (_1b910e583_isLive(_self_, &(_21917_ins))) {
						(_21717_j)++;
						goto _iter_next_1b914c7d0;
					};
					(*_21617_f.alloc)._field_Instances=jule::append((*_21617_f.alloc)._field_Instances.slice(0LL, _21717_j),(*_21617_f.alloc)._field_Instances.slice((_21717_j + 1LL)));
				}
			_iter_next_1b914c7d0:;
			}
			_iter_end_1b914c7d0:;;
			if (((*_21617_f.alloc)._field_Instances.len() == 0LL)) {
				(*(_21338_funcs))=jule::append((*(_21338_funcs)).slice(0LL, _21413_i),(*(_21338_funcs)).slice((_21413_i + 1LL)));
				goto _iter_next_1b914ba10;
			};
			(_21413_i)++;
		}
	_iter_next_1b914ba10:;
	}
	_iter_end_1b914ba10:;;
}



inline void _1b59278c7_removeDeadStructs(jule::Ptr<_1b5925a07_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1cdee2990_Struct>>* _23442_structs) {
	jule::I32 _23513_i = 0LL;;
	while ((_23513_i < (*(_23442_structs)).len())) {
		{
			jule::Ptr<_1cdee2990_Struct> _23717_s = (*(_23442_structs))[_23513_i];;
			jule::I32 _23817_j = 0LL;;
			while ((_23817_j < (*(_23717_s))._field_Instances.len())) {
				{
					jule::Ptr<_1cdee571d_StructIns> _24021_ins = (*_23717_s.alloc)._field_Instances[_23817_j];;
					_1b592761e_removeDeadFns(_self_, &((*(_24021_ins))._field_Methods));
					if ((((*_24021_ins.alloc)._field_Methods.len() != 0LL) || _1b91178bb_isLive(_self_, &(_24021_ins)))) {
						(_23817_j)++;
						goto _iter_next_1b915151a;
					};
					(*_23717_s.alloc)._field_Instances=jule::append((*_23717_s.alloc)._field_Instances.slice(0LL, _23817_j),(*_23717_s.alloc)._field_Instances.slice((_23817_j + 1LL)));
				}
			_iter_next_1b915151a:;
			}
			_iter_end_1b915151a:;;
			if (((*_23717_s.alloc)._field_Instances.len() == 0LL)) {
				(*(_23442_structs))=jule::append((*(_23442_structs)).slice(0LL, _23513_i),(*(_23442_structs)).slice((_23513_i + 1LL)));
				goto _iter_next_1b9150728;
			};
			(_23513_i)++;
		}
	_iter_next_1b9150728:;
	}
	_iter_end_1b9150728:;;
}



inline void _1b5927b80_removeDeadTraits(jule::Ptr<_1b5925a07_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ce01ac0a_Trait>>* _25641_traits) {
	jule::I32 _25713_i = 0LL;;
	while ((_25713_i < (*(_25641_traits)).len())) {
		{
			jule::Ptr<_1ce01ac0a_Trait> _25917_t = (*(_25641_traits))[_25713_i];;
			if ((!(_1b9108b32_isLive(_self_, &(_25917_t))))) {
				(*(_25641_traits))=jule::append((*(_25641_traits)).slice(0LL, _25713_i),(*(_25641_traits)).slice((_25713_i + 1LL)));
				goto _iter_next_1b9154ebe;
			};
			jule::I32 _26417_j = 0LL;;
			while ((_26417_j < (*(_25917_t))._field_Implemented.len())) {
				{
					jule::Ptr<_1cdee2990_Struct> _26617_s = (*_25917_t.alloc)._field_Implemented[_26417_j];;
					if (((*(_26617_s))._field_Instances.len() > 0LL)) {
						(_26417_j)++;
						goto _iter_next_1b9155a08;
					};
					(*_25917_t.alloc)._field_Implemented=jule::append((*_25917_t.alloc)._field_Implemented.slice(0LL, _26417_j),(*_25917_t.alloc)._field_Implemented.slice((_26417_j + 1LL)));
				}
			_iter_next_1b9155a08:;
			}
			_iter_end_1b9155a08:;;
			(_25713_i)++;
		}
	_iter_next_1b9154ebe:;
	}
	_iter_end_1b9154ebe:;;
}



inline void _1b5927e38_removeDeadsFile(jule::Ptr<_1b5925a07_ObjectDeadCode> _self_, jule::Ptr<_1ce116894_SymbolTable>* _27740_file) {
	_1b592761e_removeDeadFns(_self_, &((*((*(_27740_file))))._field_Funcs));
	_1b59278c7_removeDeadStructs(_self_, &((*((*(_27740_file))))._field_Structs));
	_1b5927b80_removeDeadTraits(_self_, &((*((*(_27740_file))))._field_Traits));
	_1b5927366_removeDeadGlobals(_self_, &((*((*(_27740_file))))._field_Vars));
}



inline void _1b59281e1_removeDeadsPackage(jule::Ptr<_1b5925a07_ObjectDeadCode> _self_, jule::Ptr<_1ce06ded3_Package>* _28443_pkg) {
	{
		auto expr = &((*((*(_28443_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b915a6cd:;
		if (it != expr_end) {
			jule::Ptr<_1ce116894_SymbolTable> _28521_file = *it;
			{
				_1b5927e38_removeDeadsFile(_self_, &(_28521_file));
			}
			_iter_next_1b915a6cd:;
			++it;
			goto _iter_begin_1b915a6cd;
		}
		_iter_end_1b915a6cd:;
	};
}



inline void _1b59283de_removeDeads(jule::Ptr<_1b5925a07_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b915ae3c:;
		if (it != expr_end) {
			jule::Ptr<_1ce06b0ac_ImportInfo> _29121_used = *it;
			{
				if ((!((*(_29121_used))._field_Binded))) {
					_1b59281e1_removeDeadsPackage(_self_, &((*_29121_used.alloc)._field_Package));
				};
			}
			_iter_next_1b915ae3c:;
			++it;
			goto _iter_begin_1b915ae3c;
		}
		_iter_end_1b915ae3c:;
	};
	_1b59281e1_removeDeadsPackage(_self_, &((*(*_self_.alloc)._field_ir.alloc)._field_Main));
}



inline void _1b59285dc_elimanate(jule::Ptr<_1b5925a07_ObjectDeadCode> _self_) {
	_1b59270ad_collectLive(_self_);
	_1b59283de_removeDeads(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1b5925a07_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_1b57ae72b_IR__jule_tuple_s_22a93672d_Log static__1b57aebc1_Build(jule::Str _2721_path, jule::I32 _2732_flags) {
	__jule_tuple_x_1b57ae72b_IR__jule_tuple_s_22a93672d_Log __jule_func_result;
	jule::Ptr<_1b57abc9a_JuleImporter> _2813_importer = static__1b57ac196_New(_1b57b16a6_buildCompileInfo());;
	jule::Slice<jule::Ptr<_1cdebead2_Ast>> _2913_files;;
	jule::Slice<_22a93672d_Log> _2924_logs;;
	({
		__jule_tuple_sx_1cdebead2_Ast__jule_tuple_s_22a93672d_Log __jule_assign_result = _1b57ad681_ImportPackage(_2813_importer.ptr(), _2721_path, true);
		_2913_files = __jule_assign_result.__jule_result_arg0;
		_2924_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2924_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2924_logs;
		return __jule_func_result;;
	};
	jule::Str _339_root = _2721_path;;
	if ((_2913_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1ce06ded3_Package> _3913_pkg;;
	({
		__jule_tuple_x_1ce06ded3_Package__jule_tuple_s_22a93672d_Log __jule_assign_result = _1ce16de5c_AnalyzePackage(_2913_files, jule::Trait<_1ce068197_Importer>(_2813_importer, 0), _2732_flags);
		_3913_pkg = __jule_assign_result.__jule_result_arg0;
		_2924_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2924_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2924_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1b57ae72b_IR> _4413_ir = jule::new_ptr<_1b57ae72b_IR>(_1b57ae72b_IR{._field_Root=_339_root, ._field_Main=_3913_pkg, ._field_Used=_1b57ac42c_AllPackages(_2813_importer), });;
	(*(_4413_ir))._field_Passes=_1b57b1497_getAllUniquePasses(&((*_4413_ir.alloc)._field_Main), (*_4413_ir.alloc)._field_Used);
	__jule_func_result.__jule_result_arg0 = _4413_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1b57b01aa_appendStructs(_1b57ae72b_IR* _self_, jule::Ptr<_1ce06ded3_Package>* _5633_p, jule::Slice<jule::Ptr<_1cdee2990_Struct>>* _5657_buffer) {
	{
		auto expr = &((*((*(_5633_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b90b7393:;
		if (it != expr_end) {
			jule::Ptr<_1ce116894_SymbolTable> _5721_f = *it;
			{
				{
					auto expr = &((*(_5721_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b90b7ccd:;
					if (it != expr_end) {
						jule::Ptr<_1cdee2990_Struct> _5825_s = *it;
						{
							if ((!((*(_5825_s))._field_Binded))) {
								{ jule::Slice<jule::Ptr<_1cdee2990_Struct>> &__jule_push_dest = (*(_5657_buffer)); __jule_push_dest.push(_5825_s); };
							};
						}
						_iter_next_1b90b7ccd:;
						++it;
						goto _iter_begin_1b90b7ccd;
					}
					_iter_end_1b90b7ccd:;
				};
			}
			_iter_next_1b90b7393:;
			++it;
			goto _iter_begin_1b90b7393;
		}
		_iter_end_1b90b7393:;
	};
}



inline jule::Slice<jule::Ptr<_1cdee2990_Struct>> _1b57b0441_GetAllStructures(_1b57ae72b_IR* _self_) {
	jule::Slice<jule::Ptr<_1cdee2990_Struct>> _6917_buffer = nullptr;;
	_1b57b01aa_appendStructs(_self_, &((*(_self_))._field_Main), &(_6917_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b90b8eaa:;
		if (it != expr_end) {
			jule::Ptr<_1ce06b0ac_ImportInfo> _7121_u = *it;
			{
				if ((!((*(_7121_u))._field_Binded))) {
					_1b57b01aa_appendStructs(_self_, &((*_7121_u.alloc)._field_Package), &(_6917_buffer));
				};
			}
			_iter_next_1b90b8eaa:;
			++it;
			goto _iter_begin_1b90b8eaa;
		}
		_iter_end_1b90b8eaa:;
	};
	return _6917_buffer;;
}



inline void _1b57b07a4_appendGlobals(_1b57ae72b_IR* _self_, jule::Ptr<_1ce06ded3_Package>* _7933_p, jule::Slice<jule::Ptr<_1ce0b4105_Var>>* _7957_buffer) {
	{
		auto expr = &((*((*(_7933_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b90ba5d8:;
		if (it != expr_end) {
			jule::Ptr<_1ce116894_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &((*(_8021_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b90bb023:;
					if (it != expr_end) {
						jule::Ptr<_1ce0b4105_Var> _8125_v = *it;
						{
							if (((((*(_8125_v))._field_Token != nullptr) && (!((*_8125_v.alloc)._field_Binded))) && (!((*_8125_v.alloc)._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_1ce0b4105_Var>> &__jule_push_dest = (*(_7957_buffer)); __jule_push_dest.push(_8125_v); };
							};
						}
						_iter_next_1b90bb023:;
						++it;
						goto _iter_begin_1b90bb023;
					}
					_iter_end_1b90bb023:;
				};
			}
			_iter_next_1b90ba5d8:;
			++it;
			goto _iter_begin_1b90ba5d8;
		}
		_iter_end_1b90ba5d8:;
	};
}



inline jule::Slice<jule::Ptr<_1ce0b4105_Var>> _1b57b0a3a_GetAllGlobals(_1b57ae72b_IR* _self_) {
	jule::Slice<jule::Ptr<_1ce0b4105_Var>> _9217_buffer = nullptr;;
	_1b57b07a4_appendGlobals(_self_, &((*(_self_))._field_Main), &(_9217_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b90bc93c:;
		if (it != expr_end) {
			jule::Ptr<_1ce06b0ac_ImportInfo> _9421_u = *it;
			{
				if ((!((*(_9421_u))._field_Binded))) {
					_1b57b07a4_appendGlobals(_self_, &((*_9421_u.alloc)._field_Package), &(_9217_buffer));
				};
			}
			_iter_next_1b90bc93c:;
			++it;
			goto _iter_begin_1b90bc93c;
		}
		_iter_end_1b90bc93c:;
	};
	return _9217_buffer;;
}



inline void _1b57b0c38_Order(_1b57ae72b_IR* _self_) {
	(*(_self_))._field_Ordered._field_Structs=_1b57b0441_GetAllStructures(_self_);
	(*(_self_))._field_Ordered._field_Globals=_1b57b0a3a_GetAllGlobals(_self_);
	static__1b57b2b19_orderStructures(&((*(_self_))._field_Ordered._field_Structs));
	static__1b57b2d4a_orderVars(&((*(_self_))._field_Ordered._field_Globals));
}





std::ostream &operator<<(std::ostream &_Stream, _1b57ae72b_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1cdee5a92_Str(_1cdee571d_StructIns* _self_) {
	_22ab0b88c_StrBuilder _23913_kind = static__22ab0bb56_New(32LL);;
	_22ab154bc_WriteStr(&_23913_kind, (*((*(_self_))._field_Decl))._field_Ident);
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		_22ab15775_WriteByte(&_23913_kind, '[');
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b7a178d8:;
			if (it != expr_end) {
				jule::I32 _24317_i = it - expr->begin();
				jule::Ptr<_1ce14b2e1_InsGeneric> *_24320_g = it;
				{
					_22ab154bc_WriteStr(&_23913_kind, _1ce14d090_Str((*((*(_24320_g))))._field_Kind.ptr()));
					if ((_24317_i < ((*(_self_))._field_Generics.len() - 1LL))) {
						_22ab15775_WriteByte(&_23913_kind, ',');
					};
				}
				_iter_next_1b7a178d8:;
				++it;
				_24317_i++;
				goto _iter_begin_1b7a178d8;
			}
			_iter_end_1b7a178d8:;
		};
		_22ab15775_WriteByte(&_23913_kind, ']');
	};
	return _22ab15cb4_Str(&_23913_kind);;
}



inline jule::Bool _1cdee5dd3_Equal(jule::Ptr<_1cdee571d_StructIns> _self_, jule::Ptr<_1ce14cbc7_TypeKind> _25521_other) {
	jule::Ptr<_1cdee571d_StructIns> _2569_s = _1ce15189b_Struct(_25521_other.ptr());;
	if ((_2569_s == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Decl != (*(_2569_s))._field_Decl)) {
		return false;;
	};
	if (((*_self_.alloc)._field_Generics.len() != (*(_2569_s))._field_Generics.len())) {
		return false;;
	};
	jule::I32 _26913_i = 0LL;;
	for (; (_26913_i < (*_self_.alloc)._field_Generics.len()); (_26913_i)++) {
		{
			if ((!(_1ce14d3d1_Equal((*((*_self_.alloc)._field_Generics[_26913_i]))._field_Kind, (*((*(_2569_s))._field_Generics[_26913_i]))._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1b7a1b8ed:;
	}
	_iter_end_1b7a1b8ed:;;
	return true;;
}



inline jule::Bool _1cdee6389_Same(_1cdee571d_StructIns* _self_, jule::Ptr<_1cdee571d_StructIns> _28319_s) {
	if ((((*(_self_))._field_Decl != (*(_28319_s))._field_Decl) || ((*_28319_s.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7a1e505:;
		if (it != expr_end) {
			jule::I32 _28713_i = it - expr->begin();
			jule::Ptr<_1ce14b2e1_InsGeneric> *_28716_g = it;
			{
				jule::Ptr<_1ce14b2e1_InsGeneric> _28813_g2 = (*_28319_s.alloc)._field_Generics[_28713_i];;
				if ((((*((*((*(_28716_g))))._field_Kind))._field_BindIdent != (*(*(_28813_g2))._field_Kind.alloc)._field_BindIdent) || (!(_1ce14d3d1_Equal((*(*(_28716_g)).alloc)._field_Kind, (*_28813_g2.alloc)._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1b7a1e505:;
			++it;
			_28713_i++;
			goto _iter_begin_1b7a1e505;
		}
		_iter_end_1b7a1e505:;
	};
	return true;;
}



inline jule::Ptr<_1ce00792d_Fn> _1cdee6785_FindMethod(_1cdee571d_StructIns* _self_, jule::Str _29829_ident, jule::Bool _29841_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7a22030:;
		if (it != expr_end) {
			jule::Ptr<_1ce00792d_Fn> _29921_f = *it;
			{
				if ((((*(_29921_f))._field_Statically == _29841_statically) && ((*_29921_f.alloc)._field_Ident == _29829_ident))) {
					return _29921_f;;
				};
			}
			_iter_next_1b7a22030:;
			++it;
			goto _iter_begin_1b7a22030;
		}
		_iter_end_1b7a22030:;
	};
	return nullptr;;
}



inline jule::Ptr<_1cdee4b6d_FieldIns> _1cdee6ac6_FindField(_1cdee571d_StructIns* _self_, jule::Str _30928_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7a23350:;
		if (it != expr_end) {
			jule::Ptr<_1cdee4b6d_FieldIns> _31021_f = *it;
			{
				if (((*((*(_31021_f))._field_Decl))._field_Ident == _30928_ident)) {
					return _31021_f;;
				};
			}
			_iter_next_1b7a23350:;
			++it;
			goto _iter_begin_1b7a23350;
		}
		_iter_end_1b7a23350:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ce0b4105_Var> _1cdee6e17_FindStatic(_1cdee571d_StructIns* _self_, jule::Str _32029_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7a238b1:;
		if (it != expr_end) {
			jule::Ptr<_1ce0b4105_Var> _32121_v = *it;
			{
				if (((*(_32121_v))._field_Ident == _32029_ident)) {
					return _32121_v;;
				};
			}
			_iter_next_1b7a238b1:;
			++it;
			goto _iter_begin_1b7a238b1;
		}
		_iter_end_1b7a238b1:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1cdee571d_StructIns _Src) {
	_Stream << _1cdee5a92_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_22acaed1a_Cmd> static__22acb0216_New(jule::Str _2619_path) {
	return jule::new_ptr<_22acaed1a_Cmd>(_22acaed1a_Cmd{._field_path=_2619_path, });;
}



inline jule::VoidExceptional _22acb0414_Spawn(_22acaed1a_Cmd* _self_) {
	return _22abd7b44_spawn(_self_);
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I32> _22acb0898_Wait(_22acaed1a_Cmd* _self_) {
	return _22abd80c8_wait(_self_);
}



inline jule::VoidExceptional _22abd7b44_spawn(_22acaed1a_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid != -1LL)) {
		jule::panic(jule::Str::lit("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_unix.jule:83:13"));;
	};
	jule::Str _859_path = (*(_self_))._field_path;;
	jule::Array<signed,2> _8613_pipe = jule::Array<signed,2>(0);;
	if ((pipe((&(_8613_pipe[0LL]))) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I32>(3LL), &__jule_any_type0)};
	};
	if ((_243992793_Fcntl(static_cast<jule::I32>(_8613_pipe[1LL]), F_SETFD, (fcntl(static_cast<jule::I32>(_8613_pipe[1LL]), F_GETFD) | FD_CLOEXEC)) == -1LL)) {
		_2439be0d8_Close(static_cast<jule::I32>(_8613_pipe[0LL]));
		_2439be0d8_Close(static_cast<jule::I32>(_8613_pipe[1LL]));
		return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I32>(3LL), &__jule_any_type0)};
	};
	(*(_self_))._field_attrs._field_pid=fork();
	{
		auto &_match_expr{ (*(_self_))._field_attrs._field_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_1b705ae3d:;
			{
				return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I32>(3LL), &__jule_any_type0)};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1b705a118:;
			{
				_2439be0d8_Close(static_cast<jule::I32>(_8613_pipe[0LL]));
				jule::Slice<jule::Str> _10117_args = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len()));;
				_10117_args[0LL]=_859_path;
				(_10117_args).append((*(_self_))._field_Args);;
				({
					auto except = _22abd78e1_setenv(&((*(_self_))._field_Env));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
				_22abd76b0_execvp(&(_859_path), &(_10117_args));
				jule::Str _10613_code = _22abd3612_Itoa(_2438e7d14_GetLastErrno());;
				{
					_2439be490_Write(static_cast<jule::I32>(_8613_pipe[1LL]), (&(_10613_code[0LL])), static_cast<jule::U32>(_10613_code.len()));
				};
				_2439be0d8_Close(static_cast<jule::I32>(_8613_pipe[1LL]));
				_22abd94c5_Exit(1LL);
			}
		}
		else {
			_case_begin_1b7055a4d:;
			{
				_2439be0d8_Close(static_cast<jule::I32>(_8613_pipe[1LL]));
				jule::Array<jule::U8,16> _11221_buf = jule::Array<jule::U8,16>(0);;
				jule::I32 _11313_n = _2439bdc0e_Read(static_cast<jule::I32>(_8613_pipe[0LL]), (&(_11221_buf[0LL])), static_cast<jule::U32>(16LLU));;
				_2439be0d8_Close(static_cast<jule::I32>(_8613_pipe[0LL]));
				if ((_11313_n != 0LL)) {
					(*(_self_))._field_attrs._field_pid=-1LL;
					jule::I32 _11717_code;;
					({
						__jule_tuple_int__jule_tuple_bool __jule_assign_result = _22abc99c1_AtoiBp((&(_11221_buf[0LL])), _11313_n);
						_11717_code = __jule_assign_result.__jule_result_arg0;
					});
					return jule::VoidExceptional{.error=jule::Any(_22abd8958_processErrorFromCode(_11717_code), &__jule_any_type0)};
				};
			}
		}
		_match_end_1b7058039:;
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I32> _22abd80c8_wait(_22acaed1a_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid == -1LL)) {
		jule::panic(jule::Str::lit("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_unix.jule:135:13"));;
	};
	jule::I32 _13713_stat = 0LL;;
	{
		if ((waitpid((*(_self_))._field_attrs._field_pid, ((signed*)((&(_13713_stat)))), 0LL) == -1LL)) {
			return jule::Exceptional<jule::I32>{.error=jule::Any(_22abd8bab_getLastProcessError(), &__jule_any_type0)};
		};
	};
	(*(_self_))._field_attrs._field_pid=-1LL;
	return jule::Exceptional<jule::I32>{.result=WEXITSTATUS(_13713_stat)};;
}





std::ostream &operator<<(std::ostream &_Stream, _22acaed1a_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "attrs:" << _Src._field_attrs << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}



inline void _243952434_Free(void* _4520_ptr) {
	free(_4520_ptr);
}



inline jule::Str _243982c28_BytePtrToStr(jule::U8* _6924_s) {
	if ((_6924_s == nullptr)) {
		return jule::Str();;
	};
	jule::I32 _739_n = 0LL;;
	{
		for (; (_6924_s[_739_n] != 0LLU); (_739_n)++) {};
	};
	if ((_739_n == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _809_buf = jule::Slice<jule::U8>::alloc(_739_n, _739_n, 0);;
	_739_n=0LL;
	{
		for (; (_6924_s[_739_n] != 0LLU); (_739_n)++) {
			{
				_809_buf[_739_n]=_6924_s[_739_n];
			}
		_iter_next_1b5ee9839:;
		}
		_iter_end_1b5ee9839:;;
	};
	return static_cast<jule::Str>(_809_buf);;
}



inline jule::Slice<jule::U8> _243982eae_StrToBytes(jule::Str _9315_s) {
	{
		auto expr = &(_9315_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5eea2c9:;
		if (it != expr_end) {
			jule::I32 _949_i = it - expr->begin();
			jule::U8 *_9412_b = it;
			{
				if (((*(_9412_b)) == 0LLU)) {
					jule::Slice<jule::U8> _9617_bytes = jule::Slice<jule::U8>::alloc((_949_i + 1LL), (_949_i + 1LL), 0);;
					jule::copy(_9617_bytes, _9315_s.slice(0LL, _9617_bytes.len()));
					return _9617_bytes;;
				};
			}
			_iter_next_1b5eea2c9:;
			++it;
			_949_i++;
			goto _iter_begin_1b5eea2c9;
		}
		_iter_end_1b5eea2c9:;
	};
	jule::Slice<jule::U8> _1019_bytes = jule::Slice<jule::U8>::alloc((_9315_s.len() + 1LL), (_9315_s.len() + 1LL), 0);;
	jule::copy(_1019_bytes, _9315_s);
	return _1019_bytes;;
}



inline jule::I32 _2438e7d14_GetLastErrno(void) {
	return errno;;
}



inline jule::I32 _243992793_Fcntl(jule::I32 _5410_handle, jule::I32 _5423_cmd, jule::I32 _5433_arg) {
	return fcntl(_5410_handle, _5423_cmd, _5433_arg);;
}



inline jule::I32 _243992b17_Stat(jule::U8* _5916_path, struct stat* _5933_stat) {
	return stat(((char*)(_5916_path)), _5933_stat);;
}



inline jule::I32 _243993046_Open(jule::U8* _6416_path, jule::I32 _6429_flag, jule::I32 _6440_mode) {
	return open(((char*)(_6416_path)), _6429_flag, _6440_mode);;
}



inline jule::U8* _2439933ba_Getcwd(jule::U8* _7018_buff, jule::U32 _7031_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_7018_buff)), _7031_bufflen)));;
}



inline DIR* _2439938b5_Opendir(jule::U8* _7519_path) {
	return opendir(((char*)(_7519_path)));;
}



inline struct dirent* _243993a91_Readdir(DIR* _7823_dir) {
	return readdir(_7823_dir);;
}



inline jule::I32 _243993d38_Closedir(DIR* _8124_dir) {
	return closedir(_8124_dir);;
}



inline jule::I32 _243994740_Mkdir(jule::U8* _9017_path, jule::I32 _9030_mode) {
	return mkdir(((char*)(_9017_path)), _9030_mode);;
}



inline jule::I32 _243994a09_Rmdir(jule::U8* _9517_path) {
	return rmdir(((char*)(_9517_path)));;
}



inline jule::I32 _243994cc3_Unlink(jule::U8* _9818_path) {
	return unlink(((char*)(_9818_path)));;
}



inline jule::I32 _2439bdc0e_Read(jule::I32 _2016_handle, void* _2033_buff, jule::U32 _2048_n) {
	return read(_2016_handle, _2033_buff, _2048_n);;
}



inline jule::I32 _2439be0d8_Close(jule::I32 _2510_handle) {
	return close(_2510_handle);;
}



inline jule::I32 _2439be490_Write(jule::I32 _2817_handle, void* _2830_buff, jule::U32 _2845_n) {
	return write(_2817_handle, _2830_buff, _2845_n);;
}



inline void _2439be6c1_Exit(jule::I32 _339_code) {
	exit(_339_code);
}



inline jule::Str _243a7db26_Str(jule::U8* _108_b, jule::I32 _1018_n) {
	jule::Str _119_s = jule::Str();;
	{
		_119_s.buffer = jule::Ptr<jule::U8>::make(_108_b, nullptr);
		_119_s._len = _1018_n;
		_119_s._slice = _108_b;
	};
	return _119_s;;
}



inline jule::Slice<jule::U8> _1b6305d43_Slice(jule::U8* _2316_e, jule::I32 _2326_n) {
	jule::Slice<jule::U8> _249_buf = static_cast<jule::Slice<jule::U8>>(nullptr);;
	{
		_249_buf.data = jule::Ptr<jule::U8>::make(_2316_e, nullptr);
		_249_buf._len = _2326_n;
		_249_buf._cap = _2326_n;
		_249_buf._slice = _2316_e;
	};
	return _249_buf;;
}



inline jule::Slice<jule::U8> _243a898bd_StrBytes(jule::Str _4113_s) {
	if ((_4113_s.len() == 0LL)) {
		return nullptr;;
	};
	return _1b6305d43_Slice((&(_4113_s[0LL])), _4113_s.len());;
}



inline jule::Str _243a89b54_BytesStr(jule::Slice<jule::U8> _5013_b) {
	if ((_5013_b.len() == 0LL)) {
		return jule::Str();;
	};
	return _243a7db26_Str((&(_5013_b[0LL])), _5013_b.len());;
}



inline jule::Str _243a89e1d_StrFromBytes(jule::Slice<jule::U8> _5817_b) {
	return (*(((jule::Str*)((&(_5817_b))))));;
}



inline jule::I32 _243ab0372_getLastOsError(void) {
	jule::I32 _305_err = _2438e7d14_GetLastErrno();;
	{
		auto &_match_expr{ _305_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1b630dab5:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1b630d499:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1b630d510:;
			{
				return static_cast<jule::I32>(2LL);;
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1b630d587:;
			{
				return static_cast<jule::I32>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1b630d60e:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1b630d796:;
			{
				return static_cast<jule::I32>(5LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1b630d80c:;
			{
				return static_cast<jule::I32>(6LL);;
			}
		}
		else {
			_case_begin_1b630d257:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		_match_end_1b630d3ab:;
	};
}



inline jule::Slice<jule::Str> _243ab4ac4_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _243ab5036_WorkingDir(void) {
	return _243ab5971_getwd();
}



inline jule::Exceptional<jule::Str> _243ab5971_getwd(void) {
	jule::U8* _119_buf = _2439933ba_Getcwd(nullptr, 0LLU);;
	if ((_119_buf == nullptr)) {
		return jule::Exceptional<jule::Str>{.error=jule::Any(_243ab0372_getLastOsError(), &__jule_any_type0)};
	};
	jule::Str _155_pwd = _243982c28_BytePtrToStr(_119_buf);;
	{
		_243952434_Free(_119_buf);
	};
	return jule::Exceptional<jule::Str>{.result=_155_pwd};;
}



inline jule::Bool _22a7c98ac_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_22a83762e__PROPERTIES[static_cast<jule::I32>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _22a840a77_isExcludingLatin(_22a7d3883_Letter, _7613_r);;
}



inline jule::Bool _22a83edea_is16(jule::Slice<_22a83d15c_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b70c5293:;
			if (it != expr_end) {
				jule::I32 _19313_i = it - expr->begin();
				{
					_22a83d15c_Range16* _19413_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < (*(_19413_range))._field_Lo)) {
							return false;;
						};
						if ((_19128_r <= (*(_19413_range))._field_Hi)) {
							return (((*(_19413_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_19413_range))._field_Lo),(*(_19413_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1b70c5293:;
				++it;
				_19313_i++;
				goto _iter_begin_1b70c5293;
			}
			_iter_end_1b70c5293:;
		};
		return false;;
	};
	jule::I32 _2089_lo = 0LL;;
	jule::I32 _2099_hi = _1919_ranges.len();;
	while ((_2089_lo < _2099_hi)) {
		{
			jule::I32 _2119_m = (_2089_lo + ((_2099_hi - _2089_lo) >> 1LLU));;
			_22a83d15c_Range16* _2129_range = (&(_1919_ranges[_2119_m]));;
			{
				if ((((*(_2129_range))._field_Lo <= _19128_r) && (_19128_r <= (*(_2129_range))._field_Hi))) {
					return (((*(_2129_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_2129_range))._field_Lo),(*(_2129_range))._field_Stride) == 0LLU));;
				};
				if ((_19128_r < (*(_2129_range))._field_Lo)) {
					_2099_hi=_2119_m;
				} else {
					_2089_lo=(_2119_m + 1LL);
				};
			};
		}
	_iter_next_1b70c401c:;
	}
	_iter_end_1b70c401c:;;
	return false;;
}



inline jule::Bool _22a84026e_is32(jule::Slice<_22a83d68a_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b70cb8a4:;
			if (it != expr_end) {
				jule::I32 _23013_i = it - expr->begin();
				{
					_22a83d68a_Range32* _23113_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < (*(_23113_range))._field_Lo)) {
							return false;;
						};
						if ((_22828_r <= (*(_23113_range))._field_Hi)) {
							return (((*(_23113_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_23113_range))._field_Lo),(*(_23113_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1b70cb8a4:;
				++it;
				_23013_i++;
				goto _iter_begin_1b70cb8a4;
			}
			_iter_end_1b70cb8a4:;
		};
		return false;;
	};
	jule::I32 _2459_lo = 0LL;;
	jule::I32 _2469_hi = _2289_ranges.len();;
	while ((_2459_lo < _2469_hi)) {
		{
			jule::I32 _2489_m = (_2459_lo + ((_2469_hi - _2459_lo) >> 1LLU));;
			_22a83d68a_Range32* _2499_range = (&(_2289_ranges[_2489_m]));;
			{
				if ((((*(_2499_range))._field_Lo <= _22828_r) && (_22828_r <= (*(_2499_range))._field_Hi))) {
					return (((*(_2499_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_2499_range))._field_Lo),(*(_2499_range))._field_Stride) == 0LLU));;
				};
				if ((_22828_r < (*(_2499_range))._field_Lo)) {
					_2469_hi=_2489_m;
				} else {
					_2459_lo=(_2489_m + 1LL);
				};
			};
		}
	_iter_next_1b70cb310:;
	}
	_iter_end_1b70cb310:;;
	return false;;
}



inline jule::Bool _22a840a77_isExcludingLatin(jule::Ptr<_22a83db0d_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_22a83d15c_Range16> *_28010_R16 = &((*(_27821_rangeTab))._field_R16);;
		jule::I32 _2829_off = (*_27821_rangeTab.alloc)._field_LatinOffset;;
		if ((((*(_28010_R16)).len() > _2829_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_28010_R16))[((*(_28010_R16)).len() - 1LL)]._field_Hi)))) {
			return _22a83edea_is16((*(_28010_R16)).slice(_2829_off), static_cast<jule::U16>(_27844_r));;
		};
	};
	jule::Slice<_22a83d68a_Range32> *_2876_R32 = &((*_27821_rangeTab.alloc)._field_R32);;
	if ((((*(_2876_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_2876_R32))[0LL]._field_Lo)))) {
		return _22a84026e_is32((*(_2876_R32)), static_cast<jule::U32>(_27844_r));;
	};
	return false;;
}



inline jule::Bool _22a840cb9_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_22a83762e__PROPERTIES[static_cast<jule::I32>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _22a840a77_isExcludingLatin(_22a7d9b53_Upper, _29512_r);;
}



inline __jule_tuple_i32__jule_tuple_int _22aaa33e4_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1865_p0 = _18215_p[0LL];;
	jule::U8 _1875_x = _22aaa215c_first[static_cast<jule::I32>(_1865_p0)];;
	if ((_1875_x >= 240LLU)) {
		jule::I32 _1929_mask = static_cast<jule::I32>(((_1875_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_18215_p[0LL]) & (~(_1929_mask))) | (65533LL & _1929_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _1955_sz = static_cast<jule::I32>((_1875_x & 7LLU));;
	_22aaa2712_acceptRange _1965_accept = _22aaa2aa8_acceptRanges[static_cast<jule::I32>((_1875_x >> 4LLU))];;
	if ((_18215_p.len() < _1955_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2005_b1 = _18215_p[1LL];;
	if (((_2005_b1 < _1965_accept._field_lo) || (_1965_accept._field_hi < _2005_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1955_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_1865_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2005_b1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2075_b2 = _18215_p[2LL];;
	if (((_2075_b2 < 128LLU) || (191LL < _2075_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1955_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_1865_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2005_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2075_b2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2145_b3 = _18215_p[3LL];;
	if (((_2145_b3 < 128LLU) || (191LL < _2145_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_1865_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2005_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2075_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2145_b3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _22aaa3735_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2335_s0 = _22918_s[0LL];;
	jule::U8 _2345_x = _22aaa215c_first[static_cast<jule::I32>(_2335_s0)];;
	if ((_2345_x >= 240LLU)) {
		jule::I32 _2399_mask = static_cast<jule::I32>(((_2345_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_22918_s[0LL]) & (~(_2399_mask))) | (65533LL & _2399_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _2425_sz = static_cast<jule::I32>((_2345_x & 7LLU));;
	_22aaa2712_acceptRange _2435_accept = _22aaa2aa8_acceptRanges[static_cast<jule::I32>((_2345_x >> 4LLU))];;
	if ((_22918_s.len() < _2425_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2475_s1 = _22918_s[1LL];;
	if (((_2475_s1 < _2435_accept._field_lo) || (_2435_accept._field_hi < _2475_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2425_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_2335_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2475_s1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2545_s2 = _22918_s[2LL];;
	if (((_2545_s2 < 128LLU) || (191LL < _2545_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2425_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_2335_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2475_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2545_s2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2615_s3 = _22918_s[3LL];;
	if (((_2615_s3 < 128LLU) || (191LL < _2615_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_2335_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2475_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2545_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2615_s3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _22aaa3c85_DecodeLastRuneStr(jule::Str _31722_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_31722_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I32 _3215_end = _31722_s.len();;
	jule::I32 _3229_start = (_3215_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(_31722_s[_3229_start]);
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _3309_lim = (_3215_end - 4LL);;
	if ((_3309_lim < 0LL)) {
		_3309_lim=0LL;
	};
	(_3229_start)--;
	for (; (_3229_start >= _3309_lim); (_3229_start)--) {
		{
			if (_22aaa54a1_RuneStart(_31722_s[_3229_start])) {
				goto _iter_end_1b7125106;
			};
		}
	_iter_next_1b7125106:;
	}
	_iter_end_1b7125106:;;
	if ((_3229_start < 0LL)) {
		_3229_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22aaa3735_DecodeRuneStr(_31722_s.slice(_3229_start, _3215_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3229_start + __jule_func_result.__jule_result_arg1) != _3215_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::Slice<jule::U8> _22aaa47d0_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(_40530_r)}));;
	};
	return _22aaa4b54_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _22aaa4b54_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4145_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4145_i <= 2047LLU)) {
			_case_begin_1b7134687:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({(192LL | static_cast<jule::U8>((_41242_r >> 6LL))),(128LL | (static_cast<jule::U8>(_41242_r) & 63LLU))}));;
			}
		}
		else if ((_4145_i > 1114111LLU) || ((55296LL <= _4145_i) && (_4145_i <= 57343LLU))) {
			_case_begin_1b7133268:;
			{
				_41242_r=128LL;
				goto _case_begin_1b71332ce;
			}
		}
		else if ((_4145_i <= 65535LLU)) {
			_case_begin_1b71332ce:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({(224LL | static_cast<jule::U8>((_41242_r >> 12LL))),(128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)),(128LL | (static_cast<jule::U8>(_41242_r) & 63LLU))}));;
			}
		}
		else {
			_case_begin_1b7132a1a:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({(240LL | static_cast<jule::U8>((_41242_r >> 18LL))),(128LL | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU)),(128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)),(128LL | (static_cast<jule::U8>(_41242_r) & 63LLU))}));;
			}
		}
		_match_end_1b71329b5:;
	};
}



inline jule::I32 _22aaa51d7_RuneCountStr(jule::Str _47317_s) {
	jule::I32 __jule_func_result = 0;
	jule::I32 _4749_i = 0LL;;
	for (; (_4749_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _47613_c = _47317_s[_4749_i];;
			if ((_47613_c < 128LLU)) {
				(_4749_i)++;
				goto _iter_next_1b713cb68;
			};
			jule::U8 _4829_x = _22aaa215c_first[static_cast<jule::I32>(_47613_c)];;
			if ((_4829_x == 241LLU)) {
				(_4749_i)++;
				goto _iter_next_1b713cb68;
			};
			jule::I32 _48713_size = static_cast<jule::I32>((_4829_x & 7LLU));;
			if (((_4749_i + _48713_size) > _47317_s.len())) {
				(_4749_i)++;
				goto _iter_next_1b713cb68;
			};
			_22aaa2712_acceptRange _4929_accept = _22aaa2aa8_acceptRanges[static_cast<jule::I32>((_4829_x >> 4LLU))];;
			_47613_c=_47317_s[(_4749_i + 1LL)];
			if (((_47613_c < _4929_accept._field_lo) || (_4929_accept._field_hi < _47613_c))) {
				_48713_size=1LL;
			} else if ((_48713_size == 2LL)) {
			} else {
				_47613_c=_47317_s[(_4749_i + 2LL)];
				if (((_47613_c < 128LLU) || (191LL < _47613_c))) {
					_48713_size=1LL;
				} else if ((_48713_size == 3LL)) {
				} else {
					_47613_c=_47317_s[(_4749_i + 3LL)];
					if (((_47613_c < 128LLU) || (191LL < _47613_c))) {
						_48713_size=1LL;
					};
				};
			};
			_4749_i+=_48713_size;
		}
	_iter_next_1b713cb68:;
	}
	_iter_end_1b713cb68:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _22aaa54a1_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I32 _22aae62c2_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b) {
	jule::U8* _469_it = _4535_end;;
	for (; (_469_it >= _4517_begin); (_469_it)--) {
		{
			{
				if (((*(_469_it)) == _4547_b)) {
					return ((jule::I32)((_469_it - _4517_begin)));;
				};
			};
		}
	_iter_next_1b6e821a5:;
	}
	_iter_end_1b6e821a5:;;
	return -1LL;;
}



inline jule::I32 _22aae68ee_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b) {
	{
		auto expr = &(_6816_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6e8255c:;
		if (it != expr_end) {
			jule::I32 _709_i = it - expr->begin();
			jule::U8 *_7012_se = it;
			{
				if (((*(_7012_se)) == _6824_b)) {
					return _709_i;;
				};
			}
			_iter_next_1b6e8255c:;
			++it;
			_709_i++;
			goto _iter_begin_1b6e8255c;
		}
		_iter_end_1b6e8255c:;
	};
	return -1LL;;
}



inline jule::I32 _22aae6c73_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b) {
	if ((_7920_s.len() == 0LL)) {
		return -1LL;;
	};
	return _22aae62c2_findLastByte((&(_7920_s[0LL])), (&(_7920_s[(_7920_s.len() - 1LL)])), _7928_b);;
}



inline jule::Str _22aae7070_Repeat(jule::Str _1111_s, jule::I32 _1123_n) {
	if ((_1123_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1111_s.len() > jule::div(2147483647LL,_1123_n))) {
		jule::panic(jule::Str::lit("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:16:9"));;
	};
	_22ab0b88c_StrBuilder _189_ss = static__22ab0bb56_New((_1111_s.len() * _1123_n));;
	for (; (_1123_n > 0LL); (_1123_n)--) {
		{
			_22ab154bc_WriteStr(&_189_ss, _1111_s);
		}
	_iter_next_1b6ea0a42:;
	}
	_iter_end_1b6ea0a42:;;
	return _22ab15cb4_Str(&_189_ss);;
}



inline jule::Bool _22aae74e3_hasPrefix(jule::Str* _2515_s, jule::Str* _2524_sub, jule::I32 _2538_start) {
	if ((((*(_2524_sub)).len() == 0LL) || (((*(_2515_s)).len() - _2538_start) < (*(_2524_sub)).len()))) {
		return false;;
	};
	jule::I32 _309_i = 0LL;;
	for (; (_309_i < (*(_2524_sub)).len()); ({
		jule::I32 ___jule_assign_arg = (_309_i + 1LL);
		jule::I32 _1___jule_assign_arg = (_2538_start + 1LL);
		_309_i = ___jule_assign_arg;
		_2538_start = _1___jule_assign_arg;
	})) {
		{
			if (((*(_2515_s))[_2538_start] != (*(_2524_sub))[_309_i])) {
				return false;;
			};
		}
	_iter_next_1b6ea2a88:;
	}
	_iter_end_1b6ea2a88:;;
	return true;;
}



inline jule::Bool _22aae7867_HasPrefix(jule::Str _4014_s, jule::Str _4022_sub) {
	return _22aae74e3_hasPrefix(&(_4014_s), &(_4022_sub), 0LL);;
}



inline jule::Bool _22aae7d1d_hasSuffix(jule::Str* _4415_s, jule::Str* _4424_sub, jule::I32 _4438_start) {
	if ((((*(_4424_sub)).len() == 0LL) || (((*(_4415_s)).len() - _4438_start) < (*(_4424_sub)).len()))) {
		return false;;
	};
	_4438_start=((*(_4415_s)).len() - _4438_start);
	jule::I32 _509_i = 0LL;;
	for (; (_509_i < (*(_4424_sub)).len()); (_509_i)++) {
		{
			if (((*(_4415_s))[((_4438_start - _509_i) - 1LL)] != (*(_4424_sub))[(((*(_4424_sub)).len() - _509_i) - 1LL)])) {
				return false;;
			};
		}
	_iter_next_1b6ea54a3:;
	}
	_iter_end_1b6ea54a3:;;
	return true;;
}



inline jule::Bool _22aae815e_HasSuffix(jule::Str _6014_s, jule::Str _6022_sub) {
	return _22aae7d1d_hasSuffix(&(_6014_s), &(_6022_sub), 0LL);;
}



inline jule::I32 _22aae858d_FindAt(jule::Str _6811_s, jule::Str _6819_sub, jule::I32 _6833_i) {
	if ((((_6833_i < 0LL) || (_6811_s.len() < _6819_sub.len())) || (_6819_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_6833_i < _6811_s.len()); (_6833_i)++) {
		{
			if (_22aae74e3_hasPrefix(&(_6811_s), &(_6819_sub), _6833_i)) {
				return _6833_i;;
			};
		}
	_iter_next_1b6ea8792:;
	}
	_iter_end_1b6ea8792:;;
	return -1LL;;
}



inline jule::I32 _22aae8912_Find(jule::Str _839_s, jule::Str _8317_sub) {
	return _22aae858d_FindAt(_839_s, _8317_sub, 0LL);;
}



inline jule::I32 _22aae8e51_FindLastAt(jule::Str _9115_s, jule::Str _9123_sub, jule::I32 _9133_i) {
	jule::I32 _929_j = ((_9133_i - _9123_sub.len()) + 1LL);;
	if (((((_9123_sub.len() == 0LL) || (_9133_i < 0LL)) || (_9133_i >= _9115_s.len())) || (_929_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_1b6eab4dc:;
	for (; (_929_j >= 0LL); (_929_j)--) {
		{
			jule::I32 _9813_k = _929_j;;
			jule::I32 _9913_z = 0LL;;
			for (; (_9913_z < _9123_sub.len()); ({
				jule::I32 ___jule_assign_arg = (_9813_k + 1LL);
				jule::I32 _1___jule_assign_arg = (_9913_z + 1LL);
				_9813_k = ___jule_assign_arg;
				_9913_z = _1___jule_assign_arg;
			})) {
				{
					if ((_9115_s[_9813_k] != _9123_sub[_9913_z])) {
						goto _iter_next_1b6eab146;
					};
				}
			_iter_next_1b6eac103:;
			}
			_iter_end_1b6eac103:;;
			return _929_j;;
		}
	_iter_next_1b6eab146:;
	}
	_iter_end_1b6eab146:;;
	return -1LL;;
}



inline jule::I32 _22aae924d_FindLast(jule::Str _11313_s, jule::Str _11321_sub) {
	return _22aae8e51_FindLastAt(_11313_s, _11321_sub, (_11313_s.len() - 1LL));;
}



inline jule::I32 _22aaea99c_FindLastByte(jule::Str _17717_s, jule::U8 _17725_b) {
	return _22aae6c73_FindLastByteStr(_17717_s, _17725_b);;
}



inline jule::I32 _22aaeb052_FindRune(jule::Str _18413_s, jule::I32 _18421_r) {
	jule::I32 _1859_i = 0LL;;
	while ((_1859_i < _18413_s.len())) {
		{
			jule::I32 _1879_br;;
			jule::I32 _18713_n;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22aaa3735_DecodeRuneStr(_18413_s.slice(_1859_i));
				_1879_br = __jule_assign_result.__jule_result_arg0;
				_18713_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_18421_r == _1879_br)) {
				return _1859_i;;
			};
			_1859_i+=_18713_n;
		}
	_iter_next_1b6eb4737:;
	}
	_iter_end_1b6eb4737:;;
	return -1LL;;
}



inline jule::I32 _22aaeb63a_FindAny(jule::Str _21412_s, jule::Str _21420_runes) {
	jule::I32 _2159_i = 0LL;;
	while ((_2159_i < _21412_s.len())) {
		{
			jule::I32 _2179_r;;
			jule::I32 _21712_n;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22aaa3735_DecodeRuneStr(_21412_s.slice(_2159_i));
				_2179_r = __jule_assign_result.__jule_result_arg0;
				_21712_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_22aaeb052_FindRune(_21420_runes, _2179_r) != -1LL)) {
				return _2159_i;;
			};
			_2159_i+=_21712_n;
		}
	_iter_next_1b6eb795a:;
	}
	_iter_end_1b6eb795a:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _22aaebddd_Split(jule::Str _24410_s, jule::Str _24418_sub, jule::I32 _24432_n) {
	jule::I32 _2459_cap = _24432_n;;
	if ((_24432_n < 0LL)) {
		_2459_cap=16LLU;
	};
	jule::Slice<jule::Str> _2499_parts = jule::Slice<jule::Str>::alloc(0LL, _2459_cap);;
	if ((_24432_n == 0LL)) {
		return _2499_parts;;
	};
	if ((_24432_n < 0LL)) {
		_24432_n=_24410_s.len();
	};
	jule::I32 _2569_i = 0LL;;
	for (; (_24432_n > 0LL); (_24432_n)--) {
		{
			jule::I32 _2589_j = _22aae858d_FindAt(_24410_s, _24418_sub, _2569_i);;
			if ((_2589_j == -1LL)) {
				goto _iter_end_1b6ebc09c;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _2499_parts; __jule_push_dest.push(_24410_s.slice(_2569_i, _2589_j)); };
			_2569_i=(_2589_j + _24418_sub.len());
		}
	_iter_next_1b6ebc09c:;
	}
	_iter_end_1b6ebc09c:;;
	if (((_24432_n > 0LL) && (_2569_i < _24410_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _2499_parts; __jule_push_dest.push(_24410_s.slice(_2569_i)); };
	};
	return _2499_parts;;
}



inline jule::Bool _22aaec262_Contains(jule::Str _27213_s, jule::Str _27221_sub) {
	return (_22aae858d_FindAt(_27213_s, _27221_sub, 0LL) != -1LL);;
}



inline jule::Bool _22aaeccce_ContainsAny(jule::Str _28716_s, jule::Str _28724_runes) {
	return (_22aaeb63a_FindAny(_28716_s, _28724_runes) != -1LL);;
}



inline jule::I32 _22aaed153_Count(jule::Str _29310_s, jule::Str _29318_sub) {
	if ((_29318_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _2979_n = 0LL;;
	jule::I32 _2989_i = 0LL;;
	for (;;) {
		{
			jule::I32 _3009_j = _22aae858d_FindAt(_29310_s, _29318_sub, _2989_i);;
			if ((_3009_j == -1LL)) {
				goto _iter_end_1b6ec2811;
			};
			(_2979_n)++;
			_2989_i=(_3009_j + _29318_sub.len());
		}
	_iter_next_1b6ec2811:;
	}
	_iter_end_1b6ec2811:;;
	return _2979_n;;
}



inline jule::Str _22aaed63c_Replace(jule::Str _31312_s, jule::Str _31320_sub, jule::Str _31330_new, jule::I32 _31344_n) {
	if (((_31344_n == 0LL) || (_31320_sub == _31330_new))) {
		return _31312_s;;
	};
	jule::I32 _3185_m = _22aaed153_Count(_31312_s, _31320_sub);;
	if ((_3185_m == 0LL)) {
		return _31312_s;;
	};
	if (((_31344_n < 0LL) || (_3185_m < _31344_n))) {
		_31344_n=_3185_m;
	};
	_22ab0b88c_StrBuilder _3269_ss = static__22ab0bb56_New(((_31312_s.len() + (_31344_n * (_31330_new.len() - _31320_sub.len()))) + 1LL));;
	jule::I32 _3279_i = 0LL;;
	for (; (_31344_n > 0LL); (_31344_n)--) {
		{
			jule::I32 _3299_j = _22aae858d_FindAt(_31312_s, _31320_sub, _3279_i);;
			if ((_3299_j == -1LL)) {
				goto _iter_end_1b6ec4a22;
			};
			_22ab154bc_WriteStr(&_3269_ss, _31312_s.slice(_3279_i, _3299_j));
			_22ab154bc_WriteStr(&_3269_ss, _31330_new);
			_3279_i=(_3299_j + _31320_sub.len());
		}
	_iter_next_1b6ec4a22:;
	}
	_iter_end_1b6ec4a22:;;
	_22ab154bc_WriteStr(&_3269_ss, _31312_s.slice(_3279_i));
	return _22ab15cb4_Str(&_3269_ss);;
}



inline jule::Str _22aaee3b8_TrimLeft(jule::Str _37017_s, jule::Str _37025_cutset) {
	jule::I32 _3719_i = 0LL;;
	while ((_3719_i < _37017_s.len())) {
		{
			jule::I32 _3739_r;;
			jule::I32 _37312_n;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22aaa3735_DecodeRuneStr(_37017_s.slice(_3719_i));
				_3739_r = __jule_assign_result.__jule_result_arg0;
				_37312_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_22aaeb052_FindRune(_37025_cutset, _3739_r) == -1LL)) {
				return _37017_s.slice(_3719_i);;
			};
			_3719_i+=_37312_n;
		}
	_iter_next_1b6ecab7c:;
	}
	_iter_end_1b6ecab7c:;;
	return jule::Str();;
}



inline jule::Str _22aaee73c_TrimRight(jule::Str _38414_s, jule::Str _38422_cutset) {
	jule::I32 _3859_i = _38414_s.len();;
	while ((_3859_i > 0LL)) {
		{
			jule::I32 _3879_r;;
			jule::I32 _38712_n;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22aaa3c85_DecodeLastRuneStr(_38414_s.slice(0LL, _3859_i));
				_3879_r = __jule_assign_result.__jule_result_arg0;
				_38712_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_22aaeb052_FindRune(_38422_cutset, _3879_r) == -1LL)) {
				return _38414_s.slice(0LL, _3859_i);;
			};
			_3859_i-=_38712_n;
		}
	_iter_next_1b6ecc5a7:;
	}
	_iter_end_1b6ecc5a7:;;
	return jule::Str();;
}



inline jule::Str _22aaeed47_Trim(jule::Str _3989_s, jule::Str _39817_cutset) {
	return _22aaee3b8_TrimLeft(_22aaee73c_TrimRight(_3989_s, _39817_cutset), _39817_cutset);;
}



inline jule::Str _22ab00177_Join(jule::Slice<jule::Str> _4049_parts, jule::Str _40423_sep) {
	{
		auto _match_expr{ _4049_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1b6ece697:;
			{
				return jule::Str();;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1b6ececa2:;
			{
				return _4049_parts[0LL];;
			}
		}
		_match_end_1b6ecea93:;
	};
	jule::I32 _4119_n = 0LL;;
	{
		auto expr = &(_4049_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6ed0005:;
		if (it != expr_end) {
			jule::Str *_41212_part = it;
			{
				_4119_n+=(*(_41212_part)).len();
				(_4119_n)++;
			}
			_iter_next_1b6ed0005:;
			++it;
			goto _iter_begin_1b6ed0005;
		}
		_iter_end_1b6ed0005:;
	};
	_22ab0b88c_StrBuilder _4169_s = static__22ab0bb56_New((_4119_n + 1LL));;
	_22ab154bc_WriteStr(&_4169_s, _4049_parts[0LL]);
	{
		auto expr = _4049_parts.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b6ed18a8:;
		if (it != expr_end) {
			jule::Str *_41812_part = it;
			{
				_22ab154bc_WriteStr(&_4169_s, _40423_sep);
				_22ab154bc_WriteStr(&_4169_s, (*(_41812_part)));
			}
			_iter_next_1b6ed18a8:;
			++it;
			goto _iter_begin_1b6ed18a8;
		}
		_iter_end_1b6ed18a8:;
	};
	return _22ab15cb4_Str(&_4169_s);;
}



inline jule::Str _22ab18091_Clean(jule::Str _10914_path) {
	jule::Str _1105_originalPath = _10914_path;;
	jule::I32 _1115_volLen = _22ab1ad63_volumeNameLen(_10914_path);;
	(_10914_path).mut_slice(_1115_volLen);;
	if ((_10914_path).empty()) {
		if ((((_1115_volLen > 1LL) && _22ab1a78b_IsPathSep(_1105_originalPath[0LL])) && _22ab1a78b_IsPathSep(_1105_originalPath[1LL]))) {
			return _22ab18668_FromSlash(_1105_originalPath);;
		};
		return (_1105_originalPath + jule::Str::lit(".", 1));;
	};
	jule::Bool _1205_rooted = _22ab1a78b_IsPathSep(_10914_path[0LL]);;
	jule::I32 _1275_n = _10914_path.len();;
	_22ab17238_lazyBuff _1289_out = _22ab17238_lazyBuff{._field_path=_10914_path, ._field_volAndPath=_1105_originalPath, ._field_volLen=_1115_volLen};;
	jule::I32 _1339_r = 0LL;;
	jule::I32 _13316_dotdot = 0LL;;
	({
		jule::I32 ___jule_assign_arg = 0LL;
		jule::I32 _1___jule_assign_arg = 0LL;
		_1339_r = ___jule_assign_arg;
		_13316_dotdot = _1___jule_assign_arg;
	});
	if (_1205_rooted) {
		_22ab17942_append(&_1289_out, 47LLU);
		({
			jule::I32 ___jule_assign_arg = 1LL;
			jule::I32 _1___jule_assign_arg = 1LL;
			_1339_r = ___jule_assign_arg;
			_13316_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_1339_r < _1275_n)) {
		{
			{
				
				if (_22ab1a78b_IsPathSep(_10914_path[_1339_r])) {
					_case_begin_1b6ee2c93:;
					{
						(_1339_r)++;
					}
				}
				else if (((_10914_path[_1339_r] == '.') && (((_1339_r + 1LL) == _1275_n) || _22ab1a78b_IsPathSep(_10914_path[(_1339_r + 1LL)])))) {
					_case_begin_1b6ede872:;
					{
						(_1339_r)++;
					}
				}
				else if ((((_10914_path[_1339_r] == '.') && (_10914_path[(_1339_r + 1LL)] == '.')) && (((_1339_r + 2LL) == _1275_n) || _22ab1a78b_IsPathSep(_10914_path[(_1339_r + 2LL)])))) {
					_case_begin_1b6ede8d8:;
					{
						_1339_r+=2LL;
						{
							
							if ((_1289_out._field_w > _13316_dotdot)) {
								_case_begin_1b6ee5d73:;
								{
									(_1289_out._field_w)--;
									while (((_1289_out._field_w > _13316_dotdot) && (!(_22ab1a78b_IsPathSep(_22ab17689_index(&_1289_out, _1289_out._field_w)))))) {
										{
											(_1289_out._field_w)--;
										}
									_iter_next_1b6ee65e3:;
									}
									_iter_end_1b6ee65e3:;;
								}
							}
							else if ((!(_1205_rooted))) {
								_case_begin_1b6ee5e0b:;
								{
									if ((_1289_out._field_w > 0LL)) {
										_22ab17942_append(&_1289_out, 47LLU);
									};
									_22ab17942_append(&_1289_out, '.');
									_22ab17942_append(&_1289_out, '.');
									_13316_dotdot=_1289_out._field_w;
								}
							}
							_match_end_1b6ee59ee:;
						};
					}
				}
				else {
					_case_begin_1b6ede80b:;
					{
						if (((_1205_rooted && (_1289_out._field_w != 1LL)) || ((!(_1205_rooted)) && (_1289_out._field_w != 0LL)))) {
							_22ab17942_append(&_1289_out, 47LLU);
						};
						;
						for (; ((_1339_r < _1275_n) && (!(_22ab1a78b_IsPathSep(_10914_path[_1339_r])))); (_1339_r)++) {
							{
								_22ab17942_append(&_1289_out, _10914_path[_1339_r]);
							}
						_iter_next_1b6ee0b70:;
						}
						_iter_end_1b6ee0b70:;;
					}
				}
				_match_end_1b6eddd9e:;
			};
		}
	_iter_next_1b6ede5db:;
	}
	_iter_end_1b6ede5db:;;
	if ((_1289_out._field_w == 0LL)) {
		_22ab17942_append(&_1289_out, '.');
	};
	return _22ab18668_FromSlash(_22ab17bc8_string(&_1289_out));;
}



inline jule::Str _22ab18668_FromSlash(jule::Str _21214_path) {
	{
		return _21214_path;;
	};
}



inline jule::Str _22ab189a9_Join(jule::Slice<jule::Str> _2269_elem) {
	return _22ab1b43a_join(_2269_elem);;
}



inline jule::Str _22ab18c40_Ext(jule::Str _2318_path) {
	jule::I32 _2329_i = (_2318_path.len() - 1LL);;
	for (; ((_2329_i >= 0LL) && (!(_22ab1a78b_IsPathSep(_2318_path[_2329_i])))); (_2329_i)--) {
		{
			if ((_2318_path[_2329_i] == '.')) {
				return _2318_path.slice(_2329_i);;
			};
		}
	_iter_next_1b6ee9c78:;
	}
	_iter_end_1b6ee9c78:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _22ab19009_Abs(jule::Str _2468_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Str _2475_abs_path;;
	jule::Bool _24715_ok;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _22ab1b1a4_abs(_2468_path);
		_2475_abs_path = __jule_assign_result.__jule_result_arg0;
		_24715_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _2475_abs_path;
	__jule_func_result.__jule_result_arg1 = _24715_ok;
	return __jule_func_result;;
}



inline jule::Str _22ab192c3_Base(jule::Str _25513_path) {
	if ((_25513_path).empty()) {
		return jule::Str::lit(".", 1);;
	};
	while (((_25513_path.len() > 0LL) && _22ab1a78b_IsPathSep(_25513_path[(_25513_path.len() - 1LL)]))) {
		{
			(_25513_path).mut_slice(0LL, (_25513_path.len() - 1LL));;
		}
	_iter_next_1b6eebb48:;
	}
	_iter_end_1b6eebb48:;;
	(_25513_path).mut_slice(_22ab198de_VolumeName(_25513_path).len());;
	jule::I32 _2669_i = (_25513_path.len() - 1LL);;
	while (((_2669_i >= 0LL) && (!(_22ab1a78b_IsPathSep(_25513_path[_2669_i]))))) {
		{
			(_2669_i)--;
		}
	_iter_next_1b6eec3da:;
	}
	_iter_end_1b6eec3da:;;
	if ((_2669_i >= 0LL)) {
		(_25513_path).mut_slice((_2669_i + 1LL));;
	};
	if ((_25513_path).empty()) {
		return jule::Str::lit("/", 1);;
	};
	return _25513_path;;
}



inline jule::Str _22ab1969c_Dir(jule::Str _2868_path) {
	jule::Str _2875_vol = _22ab198de_VolumeName(_2868_path);;
	jule::I32 _2889_i = (_2868_path.len() - 1LL);;
	while (((_2889_i >= _2875_vol.len()) && (!(_22ab1a78b_IsPathSep(_2868_path[_2889_i]))))) {
		{
			(_2889_i)--;
		}
	_iter_next_1b70007c8:;
	}
	_iter_end_1b70007c8:;;
	jule::Str _2925_dir = _22ab18091_Clean(_2868_path.slice(_2875_vol.len(), (_2889_i + 1LL)));;
	if ((_2925_dir.equal(".", 1) && (_2875_vol.len() > 2LL))) {
		return _2875_vol;;
	};
	return (_2875_vol + _2925_dir);;
}



inline jule::Str _22ab198de_VolumeName(jule::Str _30415_path) {
	return _22ab18668_FromSlash(_30415_path.slice(0LL, _22ab1ad63_volumeNameLen(_30415_path)));;
}



inline jule::Bool _22ab1a78b_IsPathSep(jule::U8 _4814_c) {
	return (47LL == _4814_c);;
}



inline jule::Bool _22ab1aa99_IsAbs(jule::Str _5310_path) {
	return _22aae7867_HasPrefix(_5310_path, jule::Str::lit("/", 1));;
}



inline jule::I32 _22ab1ad63_volumeNameLen(jule::Str _5918_path) {
	return 0LL;;
}



inline __jule_tuple_str__jule_tuple_bool _22ab1b1a4_abs(jule::Str _638_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_22ab1aa99_IsAbs(_638_path)) {
		__jule_func_result.__jule_result_arg0 = _22ab18091_Clean(_638_path);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Str _675_wd = ({
		auto except = _243ab5036_WorkingDir();
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = jule::Str();
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} jule::Str();});
	});;
	__jule_func_result.__jule_result_arg0 = _22ab1b43a_join(jule::Slice<jule::Str>::make({_675_wd,_638_path}));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _22ab1b43a_join(jule::Slice<jule::Str> _739_elem) {
	{
		auto expr = &(_739_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7008bdd:;
		if (it != expr_end) {
			jule::I32 _749_i = it - expr->begin();
			jule::Str *_7412_e = it;
			{
				if (!((*(_7412_e))).empty()) {
					return _22ab18091_Clean(_22ab00177_Join(_739_elem.slice(_749_i), jule::Str::lit("/", 1)));;
				};
			}
			_iter_next_1b7008bdd:;
			++it;
			_749_i++;
			goto _iter_begin_1b7008bdd;
		}
		_iter_end_1b7008bdd:;
	};
	return jule::Str();;
}



inline jule::I32 _2439c4693_getLastFsError(void) {
	jule::I32 _725_err = _2438e7d14_GetLastErrno();;
	{
		auto &_match_expr{ _725_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1b7016547:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1b7016437:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1b7015d93:;
			{
				return static_cast<jule::I32>(2LL);;
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1b7015e09:;
			{
				return static_cast<jule::I32>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1b7015e70:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1b7015ed6:;
			{
				return static_cast<jule::I32>(5LL);;
			}
		}
		else if (_match_expr == 75LL) {
			_case_begin_1b701605d:;
			{
				return static_cast<jule::I32>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1b70160d5:;
			{
				return static_cast<jule::I32>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1b70166e0:;
			{
				return static_cast<jule::I32>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1b7016767:;
			{
				return static_cast<jule::I32>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1b70167de:;
			{
				return static_cast<jule::I32>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1b7016866:;
			{
				return static_cast<jule::I32>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1b70168dd:;
			{
				return static_cast<jule::I32>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1b7016965:;
			{
				return static_cast<jule::I32>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1b70169dc:;
			{
				return static_cast<jule::I32>(14LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1b7016a64:;
			{
				return static_cast<jule::I32>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1b7016adb:;
			{
				return static_cast<jule::I32>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1b7016b63:;
			{
				return static_cast<jule::I32>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1b7016bda:;
			{
				return static_cast<jule::I32>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1b7016c62:;
			{
				return static_cast<jule::I32>(19LL);;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1b7016cd9:;
			{
				return static_cast<jule::I32>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1b7016d61:;
			{
				return static_cast<jule::I32>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1b7016dd8:;
			{
				return static_cast<jule::I32>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1b7016e60:;
			{
				return static_cast<jule::I32>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1b7016ed7:;
			{
				return static_cast<jule::I32>(24LL);;
			}
		}
		else if (_match_expr == 105LL) {
			_case_begin_1b701705e:;
			{
				return static_cast<jule::I32>(25LL);;
			}
		}
		else if (_match_expr == 74LL) {
			_case_begin_1b70170d6:;
			{
				return static_cast<jule::I32>(26LL);;
			}
		}
		else if (_match_expr == 39LL) {
			_case_begin_1b701715d:;
			{
				return static_cast<jule::I32>(27LL);;
			}
		}
		else {
			_case_begin_1b7015bd9:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		_match_end_1b7015d3d:;
	};
}



inline __jule_tuple_int__jule_tuple_bool _22abc99c1_AtoiBp(jule::U8* _722_b, jule::I32 _736_n) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Bool _89_neg = ((*(_722_b)) == '-');;
	if (_89_neg) {
		if ((_736_n == 1LL)) {
			return __jule_func_result;;
		};
		(_736_n)--;
		(_722_b)++;
	};
	for (; (_736_n > 0LL); (_736_n)--) {
		{
			if ((('0' <= (*(_722_b))) && ((*(_722_b)) <= '9'))) {
				__jule_func_result.__jule_result_arg0*=10LL;
				__jule_func_result.__jule_result_arg0+=static_cast<jule::I32>(((*(_722_b)) - '0'));
			} else {
				return __jule_func_result;;
			};
			(_722_b)++;
		}
	_iter_next_1b703d75b:;
	}
	_iter_end_1b703d75b:;;
	__jule_func_result.__jule_result_arg1=true;
	if (_89_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	return __jule_func_result;;
}



inline jule::Str _22abd3612_Itoa(jule::I32 _89_x) {
	if ((_89_x < 0LL)) {
		return (jule::Str::lit("-", 1) + _22abd3920_Utoa(static_cast<jule::U32>((-(_89_x)))));;
	};
	return _22abd3920_Utoa(static_cast<jule::U32>(_89_x));;
}



inline jule::Str _22abd3920_Utoa(jule::U32 _1613_x) {
	if ((_1613_x == 0LLU)) {
		return jule::Str::lit("0", 1);;
	};
	jule::Slice<jule::U8> _209_buf = jule::Slice<jule::U8>::alloc(20LL, 20LL, 0);;
	jule::I32 _219_i = 0LL;;
	while ((_1613_x >= 10LLU)) {
		{
			jule::U32 _239_q = (_1613_x / 10LLU);;
			_209_buf[_219_i]=static_cast<jule::U8>((('0' + _1613_x) - (_239_q * 10LLU)));
			(_219_i)++;
			_1613_x=_239_q;
		}
	_iter_next_1b7045202:;
	}
	_iter_end_1b7045202:;;
	_209_buf[_219_i]=static_cast<jule::U8>(('0' + _1613_x));
	(_209_buf).mut_slice(0LL, (_219_i + 1LL));;
	_22abd3b51_rev(&(_209_buf));
	return _243a89e1d_StrFromBytes(_209_buf);;
}



inline void _22abd3b51_rev(jule::Slice<jule::U8>* _3513_b) {
	jule::I32 _369_i = 0LL;;
	for (; (_369_i < ((*(_3513_b)).len() >> 1LL)); (_369_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = (*(_3513_b))[(((*(_3513_b)).len() - 1LL) - _369_i)];
				jule::U8 _1___jule_assign_arg = (*(_3513_b))[_369_i];
				(*(_3513_b))[_369_i] = ___jule_assign_arg;
				(*(_3513_b))[(((*(_3513_b)).len() - 1LL) - _369_i)] = _1___jule_assign_arg;
			});
		}
	_iter_next_1b7048ed6:;
	}
	_iter_end_1b7048ed6:;;
}



inline jule::Slice<char*> _22abd733b_strSliceToCstrSlice(jule::Slice<jule::Str>* _3525_s, jule::Slice<jule::Slice<jule::U8>>* _3540_bargs) {
	jule::Slice<char*> _369_cs = jule::Slice<char*>::alloc(((*(_3525_s)).len() + 1LL), ((*(_3525_s)).len() + 1LL), nullptr);;
	(*(_3540_bargs))=jule::Slice<jule::Slice<jule::U8>>::alloc((*(_3525_s)).len(), (*(_3525_s)).len());
	{
		auto expr = _3525_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7064dc0:;
		if (it != expr_end) {
			jule::I32 _389_i = it - expr->begin();
			jule::Str *_3812_arg = it;
			{
				jule::Slice<jule::U8> _3913_barg = _243982eae_StrToBytes((*(_3812_arg)));;
				(*(_3540_bargs))[_389_i]=_3913_barg;
				_369_cs[_389_i]=((char*)((&(_3913_barg[0LL]))));
			}
			_iter_next_1b7064dc0:;
			++it;
			_389_i++;
			goto _iter_begin_1b7064dc0;
		}
		_iter_end_1b7064dc0:;
	};
	_369_cs[(_369_cs.len() - 1LL)]=nullptr;
	return _369_cs;;
}



inline jule::I32 _22abd76b0_execvp(jule::Str* _4712_file, jule::Slice<jule::Str>* _4724_argv) {
	jule::Slice<jule::Slice<jule::U8>> _489_bargs = static_cast<jule::Slice<jule::Slice<jule::U8>>>(nullptr);;
	jule::Slice<char*> _495_cargv = _22abd733b_strSliceToCstrSlice(_4724_argv, &(_489_bargs));;
	jule::Slice<jule::U8> _505_s = _243982eae_StrToBytes((*(_4712_file)));;
	{
		return execvp(((char*)((&(_505_s[0LL])))), (char*const*)(&(_495_cargv[0LL])));;
	};
}



inline jule::VoidExceptional _22abd78e1_setenv(jule::Slice<jule::Str>* _5612_envv) {
	;
	{
		auto expr = _5612_envv;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7068676:;
		if (it != expr_end) {
			jule::Str *_5812_env = it;
			{
				jule::I32 _599_i = _22aae68ee_FindByteStr((*(_5812_env)), '=');;
				if ((_599_i == -1LL)) {
					return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0)};
				};
				{
					jule::Slice<jule::U8> _6413_key = _243982eae_StrToBytes((*(_5812_env)).slice(0LL, _599_i));;
					if ((((*(_5812_env)).len() - _599_i) == 1LL)) {
						jule::Str _6617_val = jule::Str::lit("\x00", 1);;
						if ((setenv(((char*)((&(_6413_key[0LL])))), ((char*)((&(_6617_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0)};
						};
					} else {
						jule::Slice<jule::U8> _7117_val = _243982eae_StrToBytes((*(_5812_env)).slice((_599_i + 1LL)));;
						if ((setenv(((char*)((&(_6413_key[0LL])))), ((char*)((&(_7117_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0)};
						};
					};
				};
			}
			_iter_next_1b7068676:;
			++it;
			goto _iter_begin_1b7068676;
		}
		_iter_end_1b7068676:;
	};
	return jule::VoidExceptional{};
}



inline jule::I32 _22abd8958_processErrorFromCode(jule::I32 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 13LL) {
			_case_begin_1b706ee96:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1b706d1d6:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else {
			_case_begin_1b706de73:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		_match_end_1b706dba9:;
	};
}



inline jule::I32 _22abd8bab_getLastProcessError(void) {
	return _22abd8958_processErrorFromCode(_2438e7d14_GetLastErrno());;
}



inline void _22abd94c5_Exit(jule::I32 _129_code) {
	_2439be6c1_Exit(_129_code);
}



inline jule::Str _22abd96d4_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _22a929116_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _22a9293e1_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_22a926d6c_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7202018:;
		if (it != expr_end) {
			jule::Str *_3212_validExt = it;
			{
				if ((_3121_ext == (*(_3212_validExt)))) {
					return true;;
				};
			}
			_iter_next_1b7202018:;
			++it;
			goto _iter_begin_1b7202018;
		}
		_iter_end_1b7202018:;
	};
	return false;;
}



inline jule::Bool _22a9296aa_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_22a928b2c_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7202535:;
		if (it != expr_end) {
			jule::Str *_4512_e = it;
			{
				if ((_4118_ext == (*(_4512_e)))) {
					return true;;
				};
			}
			_iter_next_1b7202535:;
			++it;
			goto _iter_begin_1b7202535;
		}
		_iter_end_1b7202535:;
	};
	{
		auto expr = &(_22a928d3b_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b72037bc:;
		if (it != expr_end) {
			jule::Str *_5012_e = it;
			{
				if ((_4118_ext == (*(_5012_e)))) {
					return true;;
				};
			}
			_iter_next_1b72037bc:;
			++it;
			goto _iter_begin_1b72037bc;
		}
		_iter_end_1b72037bc:;
	};
	return false;;
}



inline jule::Str _22a936b90_Logf(jule::Str _3239_fmt, jule::Slice<jule::Any> _32322_args) {
	return _22a937630_applyFmt(_3239_fmt, _32322_args);;
}



inline jule::Str _22a936e9d_argToStr(jule::Any _32713_arg) {
	{
		auto &_match_expr{ _32713_arg };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1b7204735:;
			{
				return _32713_arg.unsafe_cast<jule::Str>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1b7204d95:;
			{
				return jule::Str::from_byte(_32713_arg.unsafe_cast<jule::U8>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1b7204e0b:;
			{
				return jule::Str::from_rune(_32713_arg.unsafe_cast<jule::I32>());;
			}
		}
		else {
			_case_begin_1b7204966:;
			{
				return jule::Str::lit("<fmt?>", 6);;
			}
		}
		_match_end_1b7204911:;
	};
}



inline jule::I32 _22a937267_findNextFmt(jule::Str _34016_fmt) {
	{
		auto expr = &(_34016_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7205c75:;
		if (it != expr_end) {
			jule::I32 _3419_i = it - expr->begin();
			jule::U8 *_34112_b = it;
			{
				if (((*(_34112_b)) == '@')) {
					return _3419_i;;
				};
			}
			_iter_next_1b7205c75:;
			++it;
			_3419_i++;
			goto _iter_begin_1b7205c75;
		}
		_iter_end_1b7205c75:;
	};
	return -1LL;;
}



inline jule::Str _22a937630_applyFmt(jule::Str _34917_fmt, jule::Slice<jule::Any> _34927_args) {
	_22ab0b88c_StrBuilder _3509_s = static__22ab0bb56_New(32LL);;
	{
		auto expr = &(_34927_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7206979:;
		if (it != expr_end) {
			jule::Any *_35112_arg = it;
			{
				jule::I32 _3529_i = _22a937267_findNextFmt(_34917_fmt);;
				if ((_3529_i == -1LL)) {
					goto _iter_end_1b7206979;
				};
				_22ab154bc_WriteStr(&_3509_s, _34917_fmt.slice(0LL, _3529_i));
				_22ab154bc_WriteStr(&_3509_s, _22a936e9d_argToStr((*(_35112_arg))));
				(_34917_fmt).mut_slice((_3529_i + 1LL));;
			}
			_iter_next_1b7206979:;
			++it;
			goto _iter_begin_1b7206979;
		}
		_iter_end_1b7206979:;
	};
	_22ab154bc_WriteStr(&_3509_s, _34917_fmt);
	return _22ab15cb4_Str(&_3509_s);;
}



inline jule::Bool _22a938488_IsTopDirective(jule::Str _2219_directive) {
	return (_2219_directive.equal("pass", 4) || _2219_directive.equal("build", 5));;
}



inline jule::Bool _22a9398a7_IsWindows(jule::Str _3714_os) {
	return _3714_os.equal("windows", 7);;
}



inline jule::Bool _22a939bb5_IsDarwin(jule::Str _4013_os) {
	return _4013_os.equal("darwin", 6);;
}



inline jule::Bool _22a939e7e_IsLinux(jule::Str _4312_os) {
	return _4312_os.equal("linux", 5);;
}



inline jule::Bool _22a93a2c0_IsI386(jule::Str _4611_arch) {
	return _4611_arch.equal("i386", 4);;
}



inline jule::Bool _22a93a556_IsAmd64(jule::Str _4912_arch) {
	return _4912_arch.equal("amd64", 5);;
}



inline jule::Bool _22a93a820_IsArm64(jule::Str _5212_arch) {
	return _5212_arch.equal("arm64", 5);;
}



inline jule::Bool _22a93aad9_IsUnix(jule::Str _5511_os) {
	return (_22a939bb5_IsDarwin(_5511_os) || _22a939e7e_IsLinux(_5511_os));;
}



inline jule::Bool _22a93aeb3_Is32Bit(jule::Str _5812_arch) {
	return _22a93a2c0_IsI386(_5812_arch);;
}



inline jule::Bool _22a93b205_Is64Bit(jule::Str _6112_arch) {
	return (_22a93a556_IsAmd64(_6112_arch) || _22a93a820_IsArm64(_6112_arch));;
}



inline void _22abdaa7b_init(void) {
	jule::Str _259_path = _22abd96d4_Executable();;
	if ((_259_path).empty()) {
		jule::panic(jule::Str::lit("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_22abda0ca_PathWd=({
			auto except = _243ab5036_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str::lit("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_22abd9d22_PathExec=_22ab1969c_Dir(_259_path);
		_22abd9a25_PathStdlib=_22ab189a9_Join(jule::Slice<jule::Str>::make({_22abd9d22_PathExec,jule::Str::lit("..", 2),jule::Str::lit("std", 3)}));
		_22abda3c7_PathApi=_22ab189a9_Join(jule::Slice<jule::Str>::make({_22abd9d22_PathExec,jule::Str::lit("..", 2),jule::Str::lit("api", 3),jule::Str::lit("jule.hpp", 8)}));
	};
}



inline jule::I32 _22bd99d16_LeadingZeros64(jule::U64 _6119_x) {
	return (64LL - _22bda269d_Len64(_6119_x));;
}



inline jule::I32 _22bd9ac5c_TrailingZeros(jule::U32 _8318_x) {
	;
	return _22bd9b90b_TrailingZeros64(static_cast<jule::U64>(_8318_x));;
}



inline jule::I32 _22bd9b642_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I32>(_22bd9a454__DE_BRUIJN32_TAB[static_cast<jule::I32>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]);;
}



inline jule::I32 _22bd9b90b_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I32>(_22bd9a9e8__DE_BRUIJN64_TAB[static_cast<jule::I32>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]);;
}



inline jule::I32 _22bda23d4_Len32(jule::U32 _35214_x) {
	jule::I32 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I32>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I32>(_35214_x))));
	return __jule_func_result;;
}



inline jule::I32 _22bda269d_Len64(jule::U64 _36614_x) {
	jule::I32 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I32>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I32>(_36614_x))));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _22bda343a_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=((_41510_x + _41518_y) + _41526_carry);
	__jule_func_result.__jule_result_arg1=(((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _22bda4c44_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5015_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5025_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5035_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5045_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5055_w0 = (_5015_x0 * _5035_y0);;
	jule::U64 _5065_t = ((_5025_x1 * _5035_y0) + (_5055_w0 >> 32LLU));;
	jule::U64 _5079_w1 = (_5065_t & 4294967295LLU);;
	jule::U64 _5085_w2 = (_5065_t >> 32LLU);;
	_5079_w1+=(_5015_x0 * _5045_y1);
	__jule_func_result.__jule_result_arg0=(((_5025_x1 * _5045_y1) + _5085_w2) + (_5079_w1 >> 32LLU));
	__jule_func_result.__jule_result_arg1=(_49910_x * _49918_y);
	return __jule_func_result;;
}



inline jule::U32 _22bca6b24_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _22bca6e32_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _22bca71eb_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _22bca753c_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _22bca9aa0_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1b71e090d:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_22bdac81d_IsInf(_4714_f, 0LL) || _22bdac18b_IsNaN(_4714_f)) {
			_case_begin_1b71e09a7:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1b71e0831:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _22bdacad7_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _569_x = _22bca71eb_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I32>(((_569_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_569_x=(_569_x & 9227875636482146303LLU);
	_569_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=_22bca753c_F64FromBits(_569_x);
	return __jule_func_result;;
}



inline jule::F64 _22bdabd7d_NaN(void) {
	return _22bca753c_F64FromBits(9221120237041090561LLU);;
}



inline jule::Bool _22bdac18b_IsNaN(jule::F64 _5210_f) {
	return false;;
}



inline jule::F64 _22bdac455_Inf(jule::I32 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return _22bca753c_F64FromBits(9218868437227405312LLU);;
	};
	return _22bca753c_F64FromBits(18442240474082181120LLU);;
}



inline jule::Bool _22bdac81d_IsInf(jule::F64 _7210_f, jule::I32 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _22bdacad7_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_22bdaee91_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = (_8214_x * 4503599627370496LLU);
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _22bdae5ab_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_22bdac18b_IsNaN(_1118_x) || _22bdac81d_IsInf(_1118_x, 1LL)) {
			_case_begin_1ce74293c:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1ce7429d6:;
			{
				return _22bdabd7d_NaN();;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1ce742a4c:;
			{
				return _22bdac455_Inf(-1LL);;
			}
		}
		_match_end_1ce742882:;
	};
	jule::F64 _1339_f1;;
	jule::I32 _13317_ki;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _22bca9aa0_Frexp(_1118_x);
		_1339_f1 = __jule_assign_result.__jule_result_arg0;
		_13317_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1339_f1 < 0.7071067811865476)) {
		_1339_f1*=2LL;
		(_13317_ki)--;
	};
	jule::F64 _1385_f = (_1339_f1 - 1LL);;
	jule::F64 _1395_k = static_cast<jule::F64>(_13317_ki);;
	jule::F64 _1425_s = jule::div(_1385_f,(2LL + _1385_f));;
	jule::F64 _1435_s2 = (_1425_s * _1425_s);;
	jule::F64 _1445_s4 = (_1435_s2 * _1435_s2);;
	jule::F64 _1455_t1 = (_1435_s2 * (0.6666666666666735 + (_1445_s4 * (0.2857142874366239 + (_1445_s4 * (0.1818357216161805 + (_1445_s4 * 0.14798198605116586)))))));;
	jule::F64 _1465_t2 = (_1445_s4 * (0.3999999999940942 + (_1445_s4 * (0.22222198432149784 + (_1445_s4 * 0.15313837699209373)))));;
	jule::F64 _1475_R = (_1455_t1 + _1465_t2);;
	jule::F64 _1485_hfsq = ((0.5 * _1385_f) * _1385_f);;
	return ((_1395_k * 0.6931471803691238) - ((_1485_hfsq - ((_1425_s * (_1485_hfsq + _1475_R)) + (_1395_k * 0.00000000019082149292705877))) - _1385_f));;
}



inline jule::F64 _22bdaee91_Abs(jule::F64 _438_x) {
	return _22bca753c_F64FromBits((_22bca71eb_F64Bits(_438_x) & 9223372036854775807LLU));;
}



inline __jule_tuple_f64__jule_tuple_f64 _22bdb6a69_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _465_absF = _22bdaee91_Abs(_449_f);;
	jule::F64 _479_i = 0LL;;
	if ((_465_absF > 4503599627370496LL)) {
		_479_i=_449_f;
	} else {
		_479_i=(_465_absF + 4503599627370496LL);
		_479_i-=4503599627370496LL;
		while ((_479_i > _465_absF)) {
			{
				(_479_i)--;
			}
		_iter_next_1b74dee1b:;
		}
		_iter_end_1b74dee1b:;;
		if ((_449_f < 0LL)) {
			_479_i=(-(_479_i));
		};
	};
	__jule_func_result.__jule_result_arg0 = _479_i;
	__jule_func_result.__jule_result_arg1 = (_449_f - _479_i);
	return __jule_func_result;;
}



inline jule::F64 _22bdb7372_Log2(jule::F64 _449_x) {
	jule::F64 _455_frac;;
	jule::I32 _4511_exp;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _22bca9aa0_Frexp(_449_x);
		_455_frac = __jule_assign_result.__jule_result_arg0;
		_4511_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_455_frac == 0.5)) {
		return static_cast<jule::F64>((_4511_exp - 1LL));;
	};
	return ((_22bdae5ab_Log(_455_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4511_exp));;
}



inline jule::Str _22bde129c_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I32 _7932_prec, jule::I32 _7943_bitSize) {
	return _243a89e1d_StrFromBytes(_22bde1885_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _22bde4c40_max(((_7932_prec + 4LL) + 1LL), 25LL), 0), _7913_f, _7921_fmt, _7932_prec, _7943_bitSize));;
}



inline jule::Slice<jule::U8> _22bde1885_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I32 _8758_prec, jule::I32 _8769_bitSize) {
	jule::U64 _889_bits = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_22bde008c_floatInfo> _8913_flt = nullptr;;
	{
		auto &_match_expr{ _8769_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1b73288ae:;
			{
				_889_bits=static_cast<jule::U64>(_22bca6b24_F32Bits(static_cast<jule::F32>(_8733_val)));
				_8913_flt=((jule::Ptr<_22bde008c_floatInfo>)((&(_22bde0488_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1b7328925:;
			{
				_889_bits=_22bca71eb_F64Bits(_8733_val);
				_8913_flt=((jule::Ptr<_22bde008c_floatInfo>)((&(_22bde0785_f64info))));
			}
		}
		else {
			_case_begin_1b732669d:;
			{
				jule::panic(jule::Str::lit("std::conv: illegal bitSize", 26) + jule::Str("\nlocation: std/conv/ftoa.jule:98:9"));;
			}
		}
		_match_end_1b73281b6:;
	};
	jule::Bool _1015_neg = ((_889_bits >> ((*(_8913_flt))._field_expbits + (*_8913_flt.alloc)._field_mantbits)) != 0LLU);;
	jule::I32 _1029_exp = (static_cast<jule::I32>((_889_bits >> (*_8913_flt.alloc)._field_mantbits)) & static_cast<jule::I32>(((1LL << (*_8913_flt.alloc)._field_expbits) - 1LL)));;
	jule::U64 _1039_mant = (_889_bits & ((static_cast<jule::U64>(1LLU) << (*_8913_flt.alloc)._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _1029_exp };
		
		if (_match_expr == static_cast<jule::I32>(((1LL << (*_8913_flt.alloc)._field_expbits) - 1LL))) {
			_case_begin_1b732c7c5:;
			{
				{
					
					if ((_1039_mant != 0LLU)) {
						_case_begin_1b732e024:;
						{
							return jule::append(_8720_dst,jule::Str::lit("nan", 3));;
						}
					}
					else if (_1015_neg) {
						_case_begin_1b732e112:;
						{
							return jule::append(_8720_dst,jule::Str::lit("-inf", 4));;
						}
					}
					else {
						_case_begin_1b732d8b4:;
						{
							return jule::append(_8720_dst,jule::Str::lit("+inf", 4));;
						}
					}
					_match_end_1b732d7b5:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1b732c8a2:;
			{
				(_1029_exp)++;
			}
		}
		else {
			_case_begin_1b732b928:;
			{
				_1039_mant|=(static_cast<jule::U64>(1LLU) << (*_8913_flt.alloc)._field_mantbits);
			}
		}
		_match_end_1b732c2db:;
	};
	_1029_exp+=(*_8913_flt.alloc)._field_bias;
	if ((_8743_fmt == 'b')) {
		return _22bde3db5_fmtB(_8720_dst, _1015_neg, _1039_mant, _1029_exp, &((*_8913_flt.alloc)));;
	};
	if (((_8743_fmt == 'x') || (_8743_fmt == 'X'))) {
		return _22bde4547_fmtX(_8720_dst, _8758_prec, _8743_fmt, _1015_neg, _1039_mant, _1029_exp, &((*_8913_flt.alloc)));;
	};
	;
	_22bde0c19_decimalSlice _1379_digs = _22bde0c19_decimalSlice{};;
	jule::Bool _1389_ok = false;;
	jule::Bool _1405_shortest = (_8758_prec < 0LL);;
	if (_1405_shortest) {
		_1379_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_22bdeeb90_ryuFtoaShortest(&(_1379_digs), _1039_mant, (_1029_exp - static_cast<jule::I32>((*_8913_flt.alloc)._field_mantbits)), &((*_8913_flt.alloc)));
		_1389_ok=true;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1b732c41d:;
				{
					_8758_prec=_22bde4c40_max((_1379_digs._field_nd - 1LL), 0LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1b7332bd7:;
				{
					_8758_prec=_22bde4c40_max((_1379_digs._field_nd - _1379_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1b7332c4d:;
				{
					_8758_prec=_1379_digs._field_nd;
				}
			}
			_match_end_1b7331ca2:;
		};
	} else if ((_8743_fmt != 'f')) {
		jule::I32 _15713_digits = _8758_prec;;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1b7334bc8:;
				{
					(_15713_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1b7334ca5:;
				{
					if ((_8758_prec == 0LL)) {
						_8758_prec=1LL;
					};
					_15713_digits=_8758_prec;
				}
			}
			else {
				_case_begin_1b7334788:;
				{
					_15713_digits=1LL;
				}
			}
			_match_end_1b7334876:;
		};
		if (((_8769_bitSize == 32LL) && (_15713_digits <= 9LL))) {
			_1379_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_22bded8d6_ryuFtoaFixed32(&(_1379_digs), static_cast<jule::U32>(_1039_mant), (_1029_exp - static_cast<jule::I32>((*_8913_flt.alloc)._field_mantbits)), _15713_digits);
			_1389_ok=true;
		} else if ((_15713_digits <= 18LL)) {
			_1379_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_22bdedd7b_ryuFtoaFixed64(&(_1379_digs), _1039_mant, (_1029_exp - static_cast<jule::I32>((*_8913_flt.alloc)._field_mantbits)), _15713_digits);
			_1389_ok=true;
		};
	};
	if ((!(_1389_ok))) {
		return _22bde208e_bigFtoa(_8720_dst, _8758_prec, _8743_fmt, _1015_neg, _1039_mant, _1029_exp, &((*_8913_flt.alloc)));;
	};
	return _22bde2765_fmtDigits(_8720_dst, _1405_shortest, _1015_neg, _1379_digs, _8758_prec, _8743_fmt);;
}



inline jule::Slice<jule::U8> _22bde208e_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I32 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1885_mant, jule::I32 _18816_exp, _22bde008c_floatInfo* _18827_flt) {
	_22be03974_decimal _1899_d = _22be03974_decimal{};;
	_22be03d2b_assign(&_1899_d, _1885_mant);
	_22be040d4_shift(&_1899_d, (_18816_exp - static_cast<jule::I32>((*(_18827_flt))._field_mantbits)));
	_22bde0c19_decimalSlice _1929_digs = _22bde0c19_decimalSlice{};;
	jule::Bool _1935_shortest = (_18733_prec < 0LL);;
	if (_1935_shortest) {
		_22bde2b83_roundShortest(&(_1899_d), _1885_mant, _18816_exp, _18827_flt);
		_1929_digs=_22bde0c19_decimalSlice{._field_d=_1899_d._field_d.slice(0LL), ._field_nd=_1899_d._field_nd, ._field_dp=_1899_d._field_dp, };
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1b733aae1:;
				{
					_18733_prec=(_1929_digs._field_nd - 1LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1b733b927:;
				{
					_18733_prec=_22bde4c40_max((_1929_digs._field_nd - _1929_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1b733b98d:;
				{
					_18733_prec=_1929_digs._field_nd;
				}
			}
			_match_end_1b733b7a1:;
		};
	} else {
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1b733a87c:;
				{
					_22be048ed_round(&_1899_d, (_18733_prec + 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1b733a8e3:;
				{
					_22be048ed_round(&_1899_d, (_1899_d._field_dp + _18733_prec));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1b733a959:;
				{
					if ((_18733_prec == 0LL)) {
						_18733_prec=1LL;
					};
					_22be048ed_round(&_1899_d, _18733_prec);
				}
			}
			_match_end_1b733d0dd:;
		};
		_1929_digs=_22bde0c19_decimalSlice{._field_d=_1899_d._field_d.slice(0LL), ._field_nd=_1899_d._field_nd, ._field_dp=_1899_d._field_dp, };
	};
	return _22bde2765_fmtDigits(_18716_dst, _1935_shortest, _18755_neg, _1929_digs, _18733_prec, _18744_fmt);;
}



inline jule::Slice<jule::U8> _22bde2765_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _22bde0c19_decimalSlice _2255_digs, jule::I32 _22529_prec, jule::U8 _22540_fmt) {
	{
		auto &_match_expr{ _22540_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1b7341146:;
			{
				return _22bde3227_fmtE(_22418_dst, _22447_neg, _2255_digs, _22529_prec, _22540_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1b73411ac:;
			{
				return _22bde3711_fmtF(_22418_dst, _22447_neg, _2255_digs, _22529_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1b7341223:;
			{
				jule::I32 _23313_eprec = _22529_prec;;
				if (((_23313_eprec > _2255_digs._field_nd) && (_2255_digs._field_nd >= _2255_digs._field_dp))) {
					_23313_eprec=_2255_digs._field_nd;
				};
				if (_22431_shortest) {
					_23313_eprec=6LL;
				};
				jule::I32 _2439_exp = (_2255_digs._field_dp - 1LL);;
				if (((_2439_exp < -4LL) || (_2439_exp >= _23313_eprec))) {
					if ((_22529_prec > _2255_digs._field_nd)) {
						_22529_prec=_2255_digs._field_nd;
					};
					return _22bde3227_fmtE(_22418_dst, _22447_neg, _2255_digs, (_22529_prec - 1LL), ((_22540_fmt + 'e') - 'g'));;
				};
				if ((_22529_prec > _2255_digs._field_dp)) {
					_22529_prec=_2255_digs._field_nd;
				};
				return _22bde3711_fmtF(_22418_dst, _22447_neg, _2255_digs, _22bde4c40_max((_22529_prec - _2255_digs._field_dp), 0LL));;
			}
		}
		_match_end_1b734109c:;
	};
	return jule::append(_22418_dst,jule::Slice<jule::U8>::make({'%',_22540_fmt}));;
}



inline void _22bde2b83_roundShortest(_22be03974_decimal* _26223_d, jule::U64 _26235_mant, jule::I32 _26246_exp, _22bde008c_floatInfo* _26257_flt) {
	if ((_26235_mant == 0LLU)) {
		(*(_26223_d))._field_nd=0LL;
		return;;
	};
	jule::I32 _2835_minexp = ((*(_26257_flt))._field_bias + 1LL);;
	if (((_26246_exp > _2835_minexp) && ((332LL * ((*(_26223_d))._field_dp - (*(_26223_d))._field_nd)) >= (100LL * (_26246_exp - static_cast<jule::I32>((*(_26257_flt))._field_mantbits)))))) {
		return;;
	};
	_22be03974_decimal _2929_upper = _22be03974_decimal{};;
	_22be03d2b_assign(&_2929_upper, ((_26235_mant << 1LLU) + 1LLU));
	_22be040d4_shift(&_2929_upper, ((_26246_exp - static_cast<jule::I32>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::U64 _3029_mantlo = static_cast<jule::U64>(0LLU);;
	jule::I32 _3039_explo = 0LL;;
	if (((_26235_mant > (1LLU << (*(_26257_flt))._field_mantbits)) || (_26246_exp == _2835_minexp))) {
		_3029_mantlo=(_26235_mant - 1LLU);
		_3039_explo=_26246_exp;
	} else {
		_3029_mantlo=((_26235_mant << 1LLU) - 1LLU);
		_3039_explo=(_26246_exp - 1LL);
	};
	_22be03974_decimal _3119_lower = _22be03974_decimal{};;
	_22be03d2b_assign(&_3119_lower, ((_3029_mantlo << 1LLU) + 1LLU));
	_22be040d4_shift(&_3119_lower, ((_3039_explo - static_cast<jule::I32>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::Bool _3185_inclusive = ((_26235_mant & 1LL) == 0LLU);;
	jule::U8 _3319_upperdelta = static_cast<jule::U8>(0LLU);;
	jule::I32 _3359_ui = 0LL;;
	for (; ; (_3359_ui)++) {
		{
			jule::I32 _3409_mi = ((_3359_ui - _2929_upper._field_dp) + (*(_26223_d))._field_dp);;
			if ((_3409_mi >= (*(_26223_d))._field_nd)) {
				goto _iter_end_1b734c98d;
			};
			jule::I32 _3449_li = ((_3359_ui - _2929_upper._field_dp) + _3119_lower._field_dp);;
			jule::U8 _34513_l = static_cast<jule::U8>(48LLU);;
			if (((_3449_li >= 0LL) && (_3449_li < _3119_lower._field_nd))) {
				_34513_l=_3119_lower._field_d[_3449_li];
			};
			jule::U8 _34913_m = static_cast<jule::U8>(48LLU);;
			if ((_3409_mi >= 0LL)) {
				_34913_m=(*(_26223_d))._field_d[_3409_mi];
			};
			jule::U8 _35313_u = static_cast<jule::U8>(48LLU);;
			if ((_3359_ui < _2929_upper._field_nd)) {
				_35313_u=_2929_upper._field_d[_3359_ui];
			};
			jule::Bool _3619_okdown = ((_34513_l != _34913_m) || (_3185_inclusive && ((_3449_li + 1LL) == _3119_lower._field_nd)));;
			{
				
				if (((_3319_upperdelta == 0LLU) && ((_34913_m + 1LLU) < _35313_u))) {
					_case_begin_1b761da0b:;
					{
						_3319_upperdelta=2LLU;
					}
				}
				else if (((_3319_upperdelta == 0LLU) && (_34913_m != _35313_u))) {
					_case_begin_1b761daa5:;
					{
						_3319_upperdelta=1LLU;
					}
				}
				else if (((_3319_upperdelta == 1LLU) && ((_34913_m != '9') || (_35313_u != '0')))) {
					_case_begin_1b761db1b:;
					{
						_3319_upperdelta=2LLU;
					}
				}
				_match_end_1b761d9a6:;
			};
			jule::Bool _3829_okup = ((_3319_upperdelta > 0LLU) && ((_3185_inclusive || (_3319_upperdelta > 1LLU)) || ((_3359_ui + 1LL) < _2929_upper._field_nd)));;
			{
				
				if ((_3619_okdown && _3829_okup)) {
					_case_begin_1b7621569:;
					{
						_22be048ed_round(_26223_d, (_3409_mi + 1LL));
						return;;
					}
				}
				else if (_3619_okdown) {
					_case_begin_1b7621602:;
					{
						_22be0438c_roundDown(_26223_d, (_3409_mi + 1LL));
						return;;
					}
				}
				else if (_3829_okup) {
					_case_begin_1b7621668:;
					{
						_22be04645_roundUp(_26223_d, (_3409_mi + 1LL));
						return;;
					}
				}
				_match_end_1b761db82:;
			};
		}
	_iter_next_1b734c98d:;
	}
	_iter_end_1b734c98d:;;
}



inline jule::Slice<jule::U8> _22bde3227_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _22bde0c19_decimalSlice _40137_d, jule::I32 _40154_prec, jule::U8 _40165_fmt) {
	if (_40126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _4089_ch = '0';;
	if ((_40137_d._field_nd != 0LL)) {
		_4089_ch=_40137_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4089_ch); };
	if ((_40154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('.'); };
		jule::I32 _41713_i = 1LL;;
		jule::I32 _4189_m = _22bde48bb_min(_40137_d._field_nd, (_40154_prec + 1LL));;
		if ((_41713_i < _4189_m)) {
			(_40113_dst).append(_40137_d._field_d.slice(_41713_i, _4189_m));;
			_41713_i=_4189_m;
		};
		for (; (_41713_i <= _40154_prec); (_41713_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1b762565b:;
		}
		_iter_end_1b762565b:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_40165_fmt); };
	jule::I32 _4309_exp = (_40137_d._field_dp - 1LL);;
	if ((_40137_d._field_nd == 0LL)) {
		_4309_exp=0LL;
	};
	if ((_4309_exp < 0LL)) {
		_4089_ch='-';
		_4309_exp=(-(_4309_exp));
	} else {
		_4089_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4089_ch); };
	{
		
		if ((_4309_exp < 10LL)) {
			_case_begin_1b7627d01:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push((static_cast<jule::U8>(_4309_exp) + '0')); };
			}
		}
		else if ((_4309_exp < 100LL)) {
			_case_begin_1b7628032:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((static_cast<jule::U8>((_4309_exp / 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_4309_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1b76271b8:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((static_cast<jule::U8>((_4309_exp / 100LL)) + '0')); __jule_push_dest.__push(((static_cast<jule::U8>((_4309_exp / 10LL)) % 10LL) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_4309_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1b76277b2:;
	};
	return _40113_dst;;
}



inline jule::Slice<jule::U8> _22bde3711_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _22bde0c19_decimalSlice _45637_d, jule::I32 _45654_prec) {
	if (_45626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('-'); };
	};
	if ((_45637_d._field_dp > 0LL)) {
		jule::I32 _46413_m = _22bde48bb_min(_45637_d._field_nd, _45637_d._field_dp);;
		(_45613_dst).append(_45637_d._field_d.slice(0LL, _46413_m));;
		for (; (_46413_m < _45637_d._field_dp); (_46413_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1b762b574:;
		}
		_iter_end_1b762b574:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
	};
	if ((_45654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('.'); };
		jule::I32 _47513_i = 0LL;;
		for (; (_47513_i < _45654_prec); (_47513_i)++) {
			{
				jule::U8 _47717_ch = static_cast<jule::U8>(48LLU);;
				jule::I32 _47813_j = (_45637_d._field_dp + _47513_i);;
				if (((0LL <= _47813_j) && (_47813_j < _45637_d._field_nd))) {
					_47717_ch=_45637_d._field_d[_47813_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push(_47717_ch); };
			}
		_iter_next_1b762d125:;
		}
		_iter_end_1b762d125:;;
	};
	return _45613_dst;;
}



inline jule::Slice<jule::U8> _22bde3db5_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I32 _48952_exp, _22bde008c_floatInfo* _48963_flt) {
	if (_48926_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _22be08c21_fmtBits(_48913_dst, _48937_mant, 10LL, false, true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('p'); };
	_48952_exp-=static_cast<jule::I32>((*(_48963_flt))._field_mantbits);
	if ((_48952_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _22be08c21_fmtBits(_48913_dst, static_cast<jule::U64>(_48952_exp), 10LL, (_48952_exp < 0LL), true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48913_dst;;
}



inline jule::Slice<jule::U8> _22bde4547_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I32 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5129_mant, jule::I32 _51224_exp, _22bde008c_floatInfo* _51235_flt) {
	if ((_5129_mant == 0LLU)) {
		_51224_exp=0LL;
	};
	_5129_mant<<=(60LLU - (*(_51235_flt))._field_mantbits);
	while (((_5129_mant != 0LLU) && ((_5129_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5129_mant<<=1LLU;
			(_51224_exp)--;
		}
	_iter_next_1b7632e93:;
	}
	_iter_end_1b7632e93:;;
	if (((_51126_prec >= 0LL) && (_51126_prec < 15LL))) {
		jule::U32 _5269_shift = static_cast<jule::U32>((_51126_prec << 2LLU));;
		jule::U64 _5279_extra = ((_5129_mant << _5269_shift) & 1152921504606846975LLU);;
		_5129_mant>>=(60LLU - _5269_shift);
		if (((_5279_extra | (_5129_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5129_mant)++;
		};
		_5129_mant<<=(60LLU - _5269_shift);
		if (((_5129_mant & 2305843009213693952LLU) != 0LLU)) {
			_5129_mant>>=1LLU;
			(_51224_exp)++;
		};
	};
	jule::Str _5409_hex = jule::Str();;
	if ((_51137_fmt == 'X')) {
		_5409_hex=jule::Str::lit("0123456789ABCDEF", 16);
	} else {
		_5409_hex=jule::Str::lit("0123456789abcdef", 16);
	};
	if (_51148_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_51137_fmt); __jule_push_dest.__push(('0' + static_cast<jule::U8>(((_5129_mant >> 60LLU) & 1LLU)))); };
	_5129_mant<<=4LLU;
	if (((_51126_prec < 0LL) && (_5129_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		while ((_5129_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5409_hex[static_cast<jule::I32>(((_5129_mant >> 60LLU) & 15LLU))]); };
				_5129_mant<<=4LLU;
			}
		_iter_next_1b7638839:;
		}
		_iter_end_1b7638839:;;
	} else if ((_51126_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		jule::I32 _56313_i = 0LL;;
		for (; (_56313_i < _51126_prec); (_56313_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5409_hex[static_cast<jule::I32>(((_5129_mant >> 60LLU) & 15LLU))]); };
				_5129_mant<<=4LLU;
			}
		_iter_next_1b763a033:;
		}
		_iter_end_1b763a033:;;
	};
	jule::U8 _5719_ch = static_cast<jule::U8>(80LLU);;
	if ((_51137_fmt == _22bde58cd_lower(_51137_fmt))) {
		_5719_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5719_ch); };
	if ((_51224_exp < 0LL)) {
		_5719_ch='-';
		_51224_exp=(-(_51224_exp));
	} else {
		_5719_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5719_ch); };
	{
		
		if ((_51224_exp < 100LL)) {
			_case_begin_1b763c1cd:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((static_cast<jule::U8>((_51224_exp / 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_51224_exp % 10LL)) + '0')); };
			}
		}
		else if ((_51224_exp < 1000LL)) {
			_case_begin_1b763ca2a:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((static_cast<jule::U8>((_51224_exp / 100LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>(((_51224_exp / 10LL) % 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_51224_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1b763c167:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push((static_cast<jule::U8>((_51224_exp / 1000LL)) + '0')); __jule_push_dest.__push(((static_cast<jule::U8>((_51224_exp / 100LL)) % 10LL) + '0')); __jule_push_dest.__push((static_cast<jule::U8>(((_51224_exp / 10LL) % 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_51224_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1b763c013:;
	};
	return _51113_dst;;
}



inline jule::I32 _22bde48bb_min(jule::I32 _5968_a, jule::I32 _59616_b) {
	if ((_5968_a < _59616_b)) {
		return _5968_a;;
	};
	return _59616_b;;
}



inline jule::I32 _22bde4c40_max(jule::I32 _6038_a, jule::I32 _60316_b) {
	if ((_6038_a > _60316_b)) {
		return _6038_a;;
	};
	return _60316_b;;
}



inline jule::U8 _22bde58cd_lower(jule::U8 _4710_c) {
	return (_4710_c | 32LL);;
}



inline __jule_tuple_u64__jule_tuple__22b7e7c81_ConvError _22bde5d51_parseUint(jule::Str* _5119_s, jule::I32 _5131_base, jule::I32 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__22b7e7c81_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (((*(_5119_s))).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_1b764369b:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_1b7643712:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_22bde58cd_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_1b764514d:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_22bde58cd_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_1b764524c:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_22bde58cd_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_1b7644d1d:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1b7644ca7:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_1b7644bdb:;
					};
				};
			}
		}
		else {
			_case_begin_1b7642ac9:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1b7642a74:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=64LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _909_cutoff = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1b764911e:;
			{
				_909_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1b7648d22:;
			{
				_909_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1b764445a:;
			{
				_909_cutoff=(jule::div(jule::MAX_U64,static_cast<jule::U64>(_5131_base)) + 1LLU);
			}
		}
		_match_end_1b7648c34:;
	};
	jule::U64 _1009_maxVal = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1b7648d88:;
			{
				_1009_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1b7644955:;
			{
				_1009_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1b764a2eb:;
	};
	jule::U64 _1089_n = static_cast<jule::U64>(0LLU);;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b764b198:;
		if (it != expr_end) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11013_d = static_cast<jule::U8>(0LLU);;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1b764c4a7:;
						{
							_11013_d=(_10912_c - '0');
						}
					}
					else if ((('a' <= _22bde58cd_lower(_10912_c)) && (_22bde58cd_lower(_10912_c) <= 'z'))) {
						_case_begin_1b764c3db:;
						{
							_11013_d=((_22bde58cd_lower(_10912_c) - 'a') + 10LLU);
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1b764c001:;
						{
							goto _iter_next_1b764b198;
						}
					}
					else {
						_case_begin_1b764be8a:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1b764be24:;
				};
				if ((_11013_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
					return __jule_func_result;;
				};
				if ((_1089_n >= _909_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _1009_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(1LL);
					return __jule_func_result;;
				};
				_1089_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _1329_n1 = (_1089_n + static_cast<jule::U64>(_11013_d));;
				if (((_1329_n1 < _1089_n) || (_1329_n1 > _1009_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _1009_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(1LL);
					return __jule_func_result;;
				};
				_1089_n=_1329_n1;
			}
			_iter_next_1b764b198:;
			++it;
			goto _iter_begin_1b764b198;
		}
		_iter_end_1b764b198:;
	};
	__jule_func_result.__jule_result_arg0 = _1089_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _22bde6280_ParseUint(jule::Str _14618_s, jule::I32 _14630_base, jule::I32 _14645_bitSize) {
	jule::U64 _1475_un;;
	jule::I32 _1479_err;;
	({
		__jule_tuple_u64__jule_tuple__22b7e7c81_ConvError __jule_assign_result = _22bde5d51_parseUint(&(_14618_s), _14630_base, _14645_bitSize);
		_1475_un = __jule_assign_result.__jule_result_arg0;
		_1479_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1479_err != static_cast<jule::I32>(0LL))) {
		return jule::Exceptional<jule::U64>{.error=jule::Any(_1479_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::U64>{.result=_1475_un};;
}



inline jule::Exceptional<jule::I64> _22bde6736_ParseInt(jule::Str _17217_s, jule::I32 _17225_base, jule::I32 _17240_bitSize) {
	if ((_17217_s).empty()) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0)};
	};
	jule::Bool _1789_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_1789_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _1879_un;;
	jule::I32 _18713_err;;
	({
		__jule_tuple_u64__jule_tuple__22b7e7c81_ConvError __jule_assign_result = _22bde5d51_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_1879_un = __jule_assign_result.__jule_result_arg0;
		_18713_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18713_err != static_cast<jule::I32>(0LL)) && (_18713_err != static_cast<jule::I32>(1LL)))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_18713_err, &__jule_any_type0)};
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1965_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U32>((_17240_bitSize - 1LL))));;
	if (((!(_1789_neg)) && (_1879_un >= _1965_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type0)};
	};
	if ((_1789_neg && (_1879_un > _1965_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type0)};
	};
	jule::I64 _2039_n = static_cast<jule::I64>(_1879_un);;
	if (_1789_neg) {
		_2039_n=(-(_2039_n));
	};
	return jule::Exceptional<jule::I64>{.result=_2039_n};;
}



inline __jule_tuple_f64__jule_tuple_bool _22bde73e6_eiselLemire64(jule::U64 _4122_man, jule::I32 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=_22bca753c_F64FromBits(9223372036854775808LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I32 _575_clz = _22bd99d16_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U32>(_575_clz);
	;
	jule::U64 _609_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_575_clz));;
	jule::U64 _639_xHi;;
	jule::U64 _6318_xLo;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _22bda4c44_Mul64(_4122_man, _22bde8260_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_639_xHi = __jule_assign_result.__jule_result_arg0;
		_6318_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_639_xHi & 511LLU) == 511LLU) && ((_6318_xLo + _4122_man) < _4122_man))) {
		jule::U64 _679_yHi;;
		jule::U64 _6714_yLo;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _22bda4c44_Mul64(_4122_man, _22bde8260_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_679_yHi = __jule_assign_result.__jule_result_arg0;
			_6714_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _6813_mergedHi = _639_xHi;;
		jule::U64 _6823_mergedLo = (_6318_xLo + _679_yHi);;
		({
			jule::U64 ___jule_assign_arg = _639_xHi;
			jule::U64 _1___jule_assign_arg = (_6318_xLo + _679_yHi);
			_6813_mergedHi = ___jule_assign_arg;
			_6823_mergedLo = _1___jule_assign_arg;
		});
		if ((_6823_mergedLo < _6318_xLo)) {
			(_6813_mergedHi)++;
		};
		if (((((_6813_mergedHi & 511LLU) == 511LLU) && ((_6823_mergedLo + 1LLU) == 0LLU)) && ((_6714_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _6813_mergedHi;
			jule::U64 _1___jule_assign_arg = _6823_mergedLo;
			_639_xHi = ___jule_assign_arg;
			_6318_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _795_msb = (_639_xHi >> 63LLU);;
	jule::U64 _809_retMantissa = (_639_xHi >> (_795_msb + 9LLU));;
	_609_retExp2-=(1LLU ^ _795_msb);
	if ((((_6318_xLo == 0LLU) && ((_639_xHi & 511LLU) == 0LLU)) && ((_809_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_809_retMantissa+=(_809_retMantissa & 1LLU);
	_809_retMantissa>>=1LLU;
	if (((_809_retMantissa >> 53LLU) > 0LLU)) {
		_809_retMantissa>>=1LLU;
		_609_retExp2+=1LLU;
	};
	if (((_609_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1039_retBits = ((_609_retExp2 << 52LLU) | (_809_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_1039_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = _22bca753c_F64FromBits(_1039_retBits);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _22bde7869_eiselLemire32(jule::U64 _11022_man, jule::I32 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=_22bca6e32_F32FromBits(2147483648LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I32 _1325_clz = _22bd99d16_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U32>(_1325_clz);
	;
	jule::U64 _1359_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1325_clz));;
	jule::U64 _1389_x_hi;;
	jule::U64 _13819_x_lo;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _22bda4c44_Mul64(_11022_man, _22bde8260_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_1389_x_hi = __jule_assign_result.__jule_result_arg0;
		_13819_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_1389_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13819_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _1429_y_hi;;
		jule::U64 _14215_y_lo;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _22bda4c44_Mul64(_11022_man, _22bde8260_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_1429_y_hi = __jule_assign_result.__jule_result_arg0;
			_14215_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _14313_merged_hi = _1389_x_hi;;
		jule::U64 _14324_merged_lo = (_13819_x_lo + _1429_y_hi);;
		({
			jule::U64 ___jule_assign_arg = _1389_x_hi;
			jule::U64 _1___jule_assign_arg = (_13819_x_lo + _1429_y_hi);
			_14313_merged_hi = ___jule_assign_arg;
			_14324_merged_lo = _1___jule_assign_arg;
		});
		if ((_14324_merged_lo < _13819_x_lo)) {
			(_14313_merged_hi)++;
		};
		if (((((_14313_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14324_merged_lo + 1LLU) == 0LLU)) && ((_14215_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _14313_merged_hi;
			jule::U64 _1___jule_assign_arg = _14324_merged_lo;
			_1389_x_hi = ___jule_assign_arg;
			_13819_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1545_msb = (_1389_x_hi >> 63LLU);;
	jule::U64 _1559_retMantissa = (_1389_x_hi >> (_1545_msb + 38LLU));;
	_1359_retExp2-=(1LLU ^ _1545_msb);
	if ((((_13819_x_lo == 0LLU) && ((_1389_x_hi & 274877906943LLU) == 0LLU)) && ((_1559_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_1559_retMantissa+=(_1559_retMantissa & 1LLU);
	_1559_retMantissa>>=1LLU;
	if (((_1559_retMantissa >> 24LLU) > 0LLU)) {
		_1559_retMantissa>>=1LLU;
		_1359_retExp2+=1LLU;
	};
	if (((_1359_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1789_retBits = ((_1359_retExp2 << 23LLU) | (_1559_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_1789_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = _22bca6e32_F32FromBits(static_cast<jule::U32>(_1789_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I32 _22bde964b_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix) {
	jule::I32 _479_n = _4638_prefix.len();;
	if ((_479_n > _4630_s.len())) {
		_479_n=_4630_s.len();
	};
	jule::I32 _519_i = 0LL;;
	for (; (_519_i < _479_n); (_519_i)++) {
		{
			jule::U8 _5313_c = _4630_s[_519_i];;
			if ((('A' <= _5313_c) && (_5313_c <= 'Z'))) {
				_5313_c+=32LL;
			};
			if ((_5313_c != _4638_prefix[_519_i])) {
				return _519_i;;
			};
		}
	_iter_next_1b767192c:;
	}
	_iter_end_1b767192c:;;
	return _479_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _22bde9959_special(jule::Str _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I32 _739_sign = 1LL;;
	jule::I32 _749_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1b767527c:;
			{
				if ((_6912_s[0LL] == '-')) {
					_739_sign=-1LL;
				};
				_749_nsign=1LL;
				{
					jule::Str* _8317_sp = (&(_6912_s));;
					(*(_8317_sp))=(*(_8317_sp)).slice(1LL);
				};
				goto _case_begin_1b76752e3;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1b76752e3:;
			{
				jule::I32 _8813_caseN = _22bde964b_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("infinity", 8));;
				if (((3LL < _8813_caseN) && (_8813_caseN < 8LL))) {
					_8813_caseN=3LL;
				};
				if (((_8813_caseN == 3LL) || (_8813_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = _22bdac455_Inf(_739_sign);
					__jule_func_result.__jule_result_arg1 = (_749_nsign + __jule_func_result.__jule_result_arg1);
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1b7675359:;
			{
				if ((_22bde964b_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = _22bdabd7d_NaN();
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1b76751d3:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _22bde9c23_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1b767a87b:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1b767a8e2:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1b767a491:;
	};
	jule::U64 _1229_base = static_cast<jule::U64>(10LLU);;
	jule::I32 _1239_maxMantDigits = 19LL;;
	jule::U8 _1249_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_22bde58cd_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_1229_base=16LLU;
		_1239_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_1249_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _1329_sawdot = false;;
	jule::Bool _1339_sawdigits = false;;
	jule::I32 _1349_nd = 0LL;;
	jule::I32 _1359_ndMant = 0LL;;
	jule::I32 _1369_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _1389_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_1389_c == '_')) {
					_case_begin_1b76808c5:;
					{
						goto _iter_next_1b767ec26;
					}
				}
				else if ((_1389_c == '.')) {
					_case_begin_1b768096e:;
					{
						if (_1329_sawdot) {
							goto _julec_label_1b7685358;
						};
						_1329_sawdot=true;
						_1369_dp=_1349_nd;
						goto _iter_next_1b767ec26;
					}
				}
				else if ((('0' <= _1389_c) && (_1389_c <= '9'))) {
					_case_begin_1b76809d5:;
					{
						_1339_sawdigits=true;
						if (((_1389_c == '0') && (_1349_nd == 0LL))) {
							(_1369_dp)--;
							goto _iter_next_1b767ec26;
						};
						(_1349_nd)++;
						if ((_1359_ndMant < _1239_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_1229_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_1389_c - '0'));
							(_1359_ndMant)++;
						} else if ((_1389_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1b767ec26;
					}
				}
				else if ((((_1229_base == 16LLU) && ('a' <= _22bde58cd_lower(_1389_c))) && (_22bde58cd_lower(_1389_c) <= 'f'))) {
					_case_begin_1b7680a4b:;
					{
						_1339_sawdigits=true;
						(_1349_nd)++;
						if ((_1359_ndMant < _1239_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_22bde58cd_lower(_1389_c) - 'a') + 10LLU));
							(_1359_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1b767ec26;
					}
				}
				_match_end_1b76807e8:;
			};
			goto _iter_end_1b767ec26;
		}
	_iter_next_1b767ec26:;
	}
	_iter_end_1b767ec26:;;
	_julec_label_1b7685358:;
	if ((!(_1339_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_1329_sawdot))) {
		_1369_dp=_1349_nd;
	};
	if ((_1229_base == 16LLU)) {
		_1369_dp*=4LL;
		_1359_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_22bde58cd_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _1249_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I32 _20113_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_20113_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I32 _21113_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1b7687b63;
				};
				if ((_21113_e < 10000LL)) {
					_21113_e=(((_21113_e * 10LL) + static_cast<jule::I32>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0');
				};
			}
		_iter_next_1b7687b63:;
		}
		_iter_end_1b7687b63:;;
		_1369_dp+=(_21113_e * _20113_esign);
	} else if ((_1229_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=(_1369_dp - _1359_ndMant);
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _22bdeb76e_atof64exact(jule::U64 _48616_mantissa, jule::I32 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48616_mantissa >> _22bde0785_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_48616_mantissa);
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_1b7691b8e:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_1b7691c05:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_22bdeab36_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _22bdeab36_f64pow10[_48635_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_1b7691c6b:;
			{
				__jule_func_result.__jule_result_arg0 = jule::div(__jule_func_result.__jule_result_arg0,_22bdeab36_f64pow10[(-(_48635_exp))]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b7691595:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _22bdebb9d_atof32exact(jule::U64 _52016_mantissa, jule::I32 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_52016_mantissa >> _22bde0488_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_52016_mantissa);
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_1b7695dd5:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_1b7695e4b:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_22bdeae66_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _22bdeae66_f32pow10[_52035_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_1b7695eb2:;
			{
				__jule_func_result.__jule_result_arg0 = jule::div(__jule_func_result.__jule_result_arg0,_22bdeae66_f32pow10[(-(_52035_exp))]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b76957db:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__22b7e7c81_ConvError _22bdec242_atofHex(_22bde008c_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I32 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__22b7e7c81_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I32 _5575_maxExp = ((static_cast<jule::I32>((1LL << (*(_55613_flt))._field_expbits)) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I32 _5585_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I32>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && ((_55633_mantissa >> ((*(_55613_flt))._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55633_mantissa<<=1LLU;
			(_55652_exp)--;
		}
	_iter_next_1b76997ce:;
	}
	_iter_end_1b76997ce:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while (((_55633_mantissa >> ((1LLU + (*(_55613_flt))._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1b769bb99:;
	}
	_iter_end_1b769bb99:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5585_minExp - 2LL)))) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1b769c02e:;
	}
	_iter_end_1b769c02e:;;
	jule::U64 _5889_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa>>=2LLU;
	_5889_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_5889_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == (1LLU << (1LLU + (*(_55613_flt))._field_mantbits)))) {
			_55633_mantissa>>=1LLU;
			(_55652_exp)++;
		};
	};
	if (((_55633_mantissa >> (*(_55613_flt))._field_mantbits) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I32 _6039_err = static_cast<jule::I32>(0LL);;
	if ((_55652_exp > _5575_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>((1LL << (*(_55613_flt))._field_mantbits));
		_55652_exp=(_5575_maxExp + 1LL);
		_6039_err=static_cast<jule::I32>(1LL);
	};
	jule::U64 _6109_bits = (_55633_mantissa & ((1LLU << (*(_55613_flt))._field_mantbits) - 1LLU));;
	_6109_bits|=(static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & static_cast<jule::I32>(((1LL << (*(_55613_flt))._field_expbits) - 1LL)))) << (*(_55613_flt))._field_mantbits);
	if (_55662_neg) {
		_6109_bits|=((1LLU << (*(_55613_flt))._field_mantbits) << (*(_55613_flt))._field_expbits);
	};
	if (((*(_55613_flt)) == _22bde0488_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_22bca6e32_F32FromBits(static_cast<jule::U32>(_6109_bits)));
		__jule_func_result.__jule_result_arg1 = _6039_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _22bca753c_F64FromBits(_6109_bits);
	__jule_func_result.__jule_result_arg1 = _6039_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__22b7e7c81_ConvError _22bdec61b_atof32(jule::Str _62111_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__22b7e7c81_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6239_val;;
		jule::I32 _62314__n;;
		jule::Bool _62318_ok;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _22bde9959_special(_62111_s);
			_6239_val = __jule_assign_result.__jule_result_arg0;
			_62314__n = __jule_assign_result.__jule_result_arg1;
			_62318_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62318_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6239_val);
			__jule_func_result.__jule_result_arg1 = _62314__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6295_mantissa;;
	jule::I32 _62915_exp;;
	jule::Bool _62920_neg;;
	jule::Bool _62925_trunc;;
	jule::Bool _62932_hex;;
	jule::I32 _62937__n;;
	jule::Bool _62945_ok;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _22bde9c23_readFloat(&(_62111_s));
		_6295_mantissa = __jule_assign_result.__jule_result_arg0;
		_62915_exp = __jule_assign_result.__jule_result_arg1;
		_62920_neg = __jule_assign_result.__jule_result_arg2;
		_62925_trunc = __jule_assign_result.__jule_result_arg3;
		_62932_hex = __jule_assign_result.__jule_result_arg4;
		_62937__n = __jule_assign_result.__jule_result_arg5;
		_62945_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62937__n;
	if ((!(_62945_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	if (_62932_hex) {
		jule::F64 _63613_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__22b7e7c81_ConvError __jule_assign_result = _22bdec242_atofHex(&(_22bde0488_f32info), _6295_mantissa, _62915_exp, _62920_neg, _62925_trunc);
			_63613_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_63613_ff);
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62925_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _22bdebb9d_atof32exact(_6295_mantissa, _62915_exp, _62920_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62945_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62945_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _22bde7869_eiselLemire32(_6295_mantissa, _62915_exp, _62920_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62945_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62945_ok) {
			if ((!(_62925_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _65817_fUp = static_cast<jule::F32>(0.0f);;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _22bde7869_eiselLemire32((_6295_mantissa + 1LLU), _62915_exp, _62920_neg);
				_65817_fUp = __jule_assign_result.__jule_result_arg0;
				_62945_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62945_ok && (__jule_func_result.__jule_result_arg0 == _65817_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_22be03974_decimal _6679_d = _22be03974_decimal{};;
	if ((!(_22bdea3a5_set(&_6679_d, _243a898bd_StrBytes(_62111_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _6715_b;;
	jule::Bool _6718_ovf;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _22bdea6e6_floatBits(&_6679_d, &(_22bde0488_f32info));
		_6715_b = __jule_assign_result.__jule_result_arg0;
		_6718_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_22bca6e32_F32FromBits(static_cast<jule::U32>(_6715_b));
	if (_6718_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I32>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__22b7e7c81_ConvError _22bdec85d_atof64(jule::Str _67911_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__22b7e7c81_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6819_val;;
		jule::I32 _68114__n;;
		jule::Bool _68118_ok;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _22bde9959_special(_67911_s);
			_6819_val = __jule_assign_result.__jule_result_arg0;
			_68114__n = __jule_assign_result.__jule_result_arg1;
			_68118_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68118_ok) {
			__jule_func_result.__jule_result_arg0 = _6819_val;
			__jule_func_result.__jule_result_arg1 = _68114__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6875_mantissa;;
	jule::I32 _68715_exp;;
	jule::Bool _68720_neg;;
	jule::Bool _68725_trunc;;
	jule::Bool _68732_hex;;
	jule::I32 _68737__n;;
	jule::Bool _68745_ok;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _22bde9c23_readFloat(&(_67911_s));
		_6875_mantissa = __jule_assign_result.__jule_result_arg0;
		_68715_exp = __jule_assign_result.__jule_result_arg1;
		_68720_neg = __jule_assign_result.__jule_result_arg2;
		_68725_trunc = __jule_assign_result.__jule_result_arg3;
		_68732_hex = __jule_assign_result.__jule_result_arg4;
		_68737__n = __jule_assign_result.__jule_result_arg5;
		_68745_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68737__n;
	if ((!(_68745_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	if (_68732_hex) {
		({
			__jule_tuple_f64__jule_tuple__22b7e7c81_ConvError __jule_assign_result = _22bdec242_atofHex(&(_22bde0785_f64info), _6875_mantissa, _68715_exp, _68720_neg, _68725_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68725_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _22bdeb76e_atof64exact(_6875_mantissa, _68715_exp, _68720_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68745_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68745_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _22bde73e6_eiselLemire64(_6875_mantissa, _68715_exp, _68720_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68745_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68745_ok) {
			if ((!(_68725_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _71517_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _22bde73e6_eiselLemire64((_6875_mantissa + 1LLU), _68715_exp, _68720_neg);
				_71517_fUp = __jule_assign_result.__jule_result_arg0;
				_68745_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68745_ok && (__jule_func_result.__jule_result_arg0 == _71517_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_22be03974_decimal _7249_d = _22be03974_decimal{};;
	if ((!(_22bdea3a5_set(&_7249_d, _243a898bd_StrBytes(_67911_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _7285_b;;
	jule::Bool _7288_ovf;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _22bdea6e6_floatBits(&_7249_d, &(_22bde0785_f64info));
		_7285_b = __jule_assign_result.__jule_result_arg0;
		_7288_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_22bca753c_F64FromBits(_7285_b);
	if (_7288_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I32>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__22b7e7c81_ConvError _22bdecbd2_parseFloatPrefix(jule::Str* _73622_s, jule::I32 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__22b7e7c81_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _7389_f;;
		jule::I32 _73812_n;;
		jule::I32 _73815_err;;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__22b7e7c81_ConvError __jule_assign_result = _22bdec61b_atof32((*(_73622_s)));
			_7389_f = __jule_assign_result.__jule_result_arg0;
			_73812_n = __jule_assign_result.__jule_result_arg1;
			_73815_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_7389_f);
		__jule_func_result.__jule_result_arg1 = _73812_n;
		__jule_func_result.__jule_result_arg2 = _73815_err;
		return __jule_func_result;;
	};
	jule::F64 _7415_f;;
	jule::I32 _7418_n;;
	jule::I32 _74111_err;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__22b7e7c81_ConvError __jule_assign_result = _22bdec85d_atof64((*(_73622_s)));
		_7415_f = __jule_assign_result.__jule_result_arg0;
		_7418_n = __jule_assign_result.__jule_result_arg1;
		_74111_err = __jule_assign_result.__jule_result_arg2;
	});
	__jule_func_result.__jule_result_arg0 = _7415_f;
	__jule_func_result.__jule_result_arg1 = _7418_n;
	__jule_func_result.__jule_result_arg2 = _74111_err;
	return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _22bded056_ParseFloat(jule::Str _76915_s, jule::I32 _76923_bitSize) {
	jule::F64 _7705_f;;
	jule::I32 _7708_n;;
	jule::I32 _77011_err;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__22b7e7c81_ConvError __jule_assign_result = _22bdecbd2_parseFloatPrefix(&(_76915_s), _76923_bitSize);
		_7705_f = __jule_assign_result.__jule_result_arg0;
		_7708_n = __jule_assign_result.__jule_result_arg1;
		_77011_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_7708_n != _76915_s.len()) && ((_77011_err == static_cast<jule::I32>(0LL)) || (_77011_err != static_cast<jule::I32>(2LL))))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0)};
	};
	if ((_77011_err != static_cast<jule::I32>(0LL))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(_77011_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::F64>{.result=_7705_f};;
}



inline void _22bded8d6_ryuFtoaFixed32(_22bde0c19_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I32 _4956_exp, jule::I32 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I32 _629_e2 = _4956_exp;;
	jule::I32 _635_b = _22bda23d4_Len32(_4945_mant);;
	if ((_635_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U32>((25LL - _635_b));
		_629_e2+=(static_cast<jule::I32>(_635_b) - 25LL);
	};
	jule::I32 _745_q = (((-(_22bdeee26_mulByLog2Log10((_629_e2 + 24LL)))) + _4966_prec) - 1LL);;
	jule::Bool _799_exact = ((_745_q <= 27LL) && (_745_q >= 0LL));;
	jule::U32 _819_di;;
	jule::I32 _8113_dexp2;;
	jule::Bool _8124_d0;;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _22be0181d_mult64bitPow10(_4945_mant, _629_e2, _745_q);
		_819_di = __jule_assign_result.__jule_result_arg0;
		_8113_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8124_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8113_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_745_q < 0LL) && (_745_q >= -10LL)) && _22be020c1_divisibleByPow5(static_cast<jule::U64>(_4945_mant), (-(_745_q))))) {
		_799_exact=true;
		_8124_d0=true;
	};
	jule::U32 _945_extra = static_cast<jule::U32>((-(_8113_dexp2)));;
	jule::U32 _955_extraMask = static_cast<jule::U32>(((1LL << _945_extra) - 1LL));;
	jule::U32 _979_dfrac = static_cast<jule::U32>(0LLU);;
	({
		jule::U32 ___jule_assign_arg = (_819_di >> _945_extra);
		jule::U32 _1___jule_assign_arg = (_819_di & _955_extraMask);
		_819_di = ___jule_assign_arg;
		_979_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _999_roundUp = false;;
	if (_799_exact) {
		_999_roundUp=(((_979_dfrac > (1LLU << (_945_extra - 1LLU))) || ((_979_dfrac == (1LLU << (_945_extra - 1LLU))) && (!(_8124_d0)))) || (((_979_dfrac == (1LLU << (_945_extra - 1LLU))) && _8124_d0) && ((_819_di & 1LLU) == 1LLU)));
	} else {
		_999_roundUp=((_979_dfrac >> (_945_extra - 1LLU)) == 1LLU);
	};
	if ((_979_dfrac != 0LLU)) {
		_8124_d0=false;
	};
	_22bdee6b7_formatDecimal(_4924_d, static_cast<jule::U64>(_819_di), (!(_8124_d0)), _999_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_745_q;
}



inline void _22bdedd7b_ryuFtoaFixed64(_22bde0c19_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I32 _12156_exp, jule::I32 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I32 _1319_e2 = _12156_exp;;
	jule::I32 _1325_b = _22bda269d_Len64(_12145_mant);;
	if ((_1325_b < 55LL)) {
		_12145_mant=(_12145_mant << static_cast<jule::U32>((55LL - _1325_b)));
		_1319_e2+=(static_cast<jule::I32>(_1325_b) - 55LL);
	};
	jule::I32 _1465_q = (((-(_22bdeee26_mulByLog2Log10((_1319_e2 + 54LL)))) + _12166_prec) - 1LL);;
	jule::Bool _1519_exact = ((_1465_q <= 55LL) && (_1465_q >= 0LL));;
	jule::U64 _1539_di;;
	jule::I32 _15313_dexp2;;
	jule::Bool _15324_d0;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _22be01c4c_mult128bitPow10(_12145_mant, _1319_e2, _1465_q);
		_1539_di = __jule_assign_result.__jule_result_arg0;
		_15313_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15324_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15313_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1465_q < 0LL) && (_1465_q >= -22LL)) && _22be020c1_divisibleByPow5(_12145_mant, (-(_1465_q))))) {
		_1519_exact=true;
		_15324_d0=true;
	};
	jule::U32 _1665_extra = static_cast<jule::U32>((-(_15313_dexp2)));;
	jule::U64 _1675_extraMask = static_cast<jule::U64>(((1LL << _1665_extra) - 1LL));;
	jule::U64 _1699_dfrac = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_1539_di >> _1665_extra);
		jule::U64 _1___jule_assign_arg = (_1539_di & _1675_extraMask);
		_1539_di = ___jule_assign_arg;
		_1699_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _1719_roundUp = false;;
	if (_1519_exact) {
		_1719_roundUp=(((_1699_dfrac > (1LLU << (_1665_extra - 1LLU))) || ((_1699_dfrac == (1LLU << (_1665_extra - 1LLU))) && (!(_15324_d0)))) || (((_1699_dfrac == (1LLU << (_1665_extra - 1LLU))) && _15324_d0) && ((_1539_di & 1LLU) == 1LLU)));
	} else {
		_1719_roundUp=((_1699_dfrac >> (_1665_extra - 1LLU)) == 1LLU);
	};
	if ((_1699_dfrac != 0LLU)) {
		_15324_d0=false;
	};
	_22bdee6b7_formatDecimal(_12124_d, _1539_di, (!(_15324_d0)), _1719_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1465_q;
}



inline void _22bdee6b7_formatDecimal(_22bde0c19_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I32 _20088_prec) {
	jule::U64 _2015_max = _22bdee1bc_u64pow10[_20088_prec];;
	jule::I32 _2029_trimmed = 0LL;;
	while ((_20044_m >= _2015_max)) {
		{
			jule::U64 _2049_a = (_20044_m / 10LLU);;
			jule::U64 _20412_b = (_20044_m % 10LL);;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_2049_a = ___jule_assign_arg;
				_20412_b = _1___jule_assign_arg;
			});
			_20044_m=_2049_a;
			(_2029_trimmed)++;
			if ((_20412_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20412_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20412_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1b76d2c13:;
	}
	_iter_end_1b76d2c13:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2015_max)) {
		_20044_m/=10LLU;
		(_2029_trimmed)++;
	};
	jule::U32 _2299_n = static_cast<jule::U32>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I32>(_20088_prec);
	jule::U64 _2319_v = _20044_m;;
	while ((_2319_v >= 100LLU)) {
		{
			jule::U64 _23313_v1 = static_cast<jule::U64>(0LLU);;
			jule::U64 _23413_v2 = static_cast<jule::U64>(0LLU);;
			if (((_2319_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2319_v) / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2319_v) % 100LL));
					_23313_v1 = ___jule_assign_arg;
					_23413_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = (_2319_v / 100LLU);
					jule::U64 _1___jule_assign_arg = (_2319_v % 100LL);
					_23313_v1 = ___jule_assign_arg;
					_23413_v2 = _1___jule_assign_arg;
				});
			};
			_2299_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I32>((_2299_n + 1LLU))]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>(((2LL * _23413_v2) + 1LLU)));
			(*(_20023_d))._field_d[static_cast<jule::I32>(_2299_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((2LL * _23413_v2)));
			_2319_v=_23313_v1;
		}
	_iter_next_1b76d57e8:;
	}
	_iter_end_1b76d57e8:;;
	if ((_2319_v > 0LLU)) {
		(_2299_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I32>(_2299_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>(((2LL * _2319_v) + 1LLU)));
	};
	if ((_2319_v >= 10LLU)) {
		(_2299_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I32>(_2299_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((2LL * _2319_v)));
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_2029_trimmed)++;
		}
	_iter_next_1b76db887:;
	}
	_iter_end_1b76db887:;;
	(*(_20023_d))._field_dp=((*(_20023_d))._field_nd + _2029_trimmed);
}



inline void _22bdeeb90_ryuFtoaShortest(_22bde0c19_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I32 _26157_exp, _22bde008c_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_22bd9b90b_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U32>((-(_26157_exp)));
		_22be00c6d_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _2735_ml;;
	jule::U64 _2739_mc;;
	jule::U64 _27313_mu;;
	jule::I32 _27321_e2;;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _22be0061e_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_2735_ml = __jule_assign_result.__jule_result_arg0;
		_2739_mc = __jule_assign_result.__jule_result_arg1;
		_27313_mu = __jule_assign_result.__jule_result_arg2;
		_27321_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27321_e2 == 0LL)) {
		_22be00c6d_ryuDigits(_26125_d, _2735_ml, _2739_mc, _27313_mu, true, false);
		return;;
	};
	jule::I32 _2795_q = (_22bdeee26_mulByLog2Log10((-(_27321_e2))) + 1LL);;
	jule::U64 _2839_dl = static_cast<jule::U64>(0LLU);;
	jule::U64 _2849_dc = static_cast<jule::U64>(0LLU);;
	jule::U64 _2859_du = static_cast<jule::U64>(0LLU);;
	jule::Bool _2869_dl0 = false;;
	jule::Bool _2879_dc0 = false;;
	jule::Bool _2889_du0 = false;;
	if (((*(_26168_flt)) == _22bde0488_f32info)) {
		jule::U32 _29013_dl32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _29113_dc32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _29213_du32 = static_cast<jule::U32>(0LLU);;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _22be0181d_mult64bitPow10(static_cast<jule::U32>(_2735_ml), _27321_e2, _2795_q);
			_29013_dl32 = __jule_assign_result.__jule_result_arg0;
			_2869_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _22be0181d_mult64bitPow10(static_cast<jule::U32>(_2739_mc), _27321_e2, _2795_q);
			_29113_dc32 = __jule_assign_result.__jule_result_arg0;
			_2879_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _22be0181d_mult64bitPow10(static_cast<jule::U32>(_27313_mu), _27321_e2, _2795_q);
			_29213_du32 = __jule_assign_result.__jule_result_arg0;
			_27321_e2 = __jule_assign_result.__jule_result_arg1;
			_2889_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(_29013_dl32);
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(_29113_dc32);
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(_29213_du32);
			_2839_dl = ___jule_assign_arg;
			_2849_dc = _1___jule_assign_arg;
			_2859_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _22be01c4c_mult128bitPow10(_2735_ml, _27321_e2, _2795_q);
			_2839_dl = __jule_assign_result.__jule_result_arg0;
			_2869_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _22be01c4c_mult128bitPow10(_2739_mc, _27321_e2, _2795_q);
			_2849_dc = __jule_assign_result.__jule_result_arg0;
			_2879_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _22be01c4c_mult128bitPow10(_27313_mu, _27321_e2, _2795_q);
			_2859_du = __jule_assign_result.__jule_result_arg0;
			_27321_e2 = __jule_assign_result.__jule_result_arg1;
			_2889_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27321_e2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2795_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_2869_dl0 = ___jule_assign_arg;
			_2879_dc0 = _1___jule_assign_arg;
			_2889_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2795_q < 0LL) && (_2795_q >= -24LL))) {
		if (_22be020c1_divisibleByPow5(_2735_ml, (-(_2795_q)))) {
			_2869_dl0=true;
		};
		if (_22be020c1_divisibleByPow5(_2739_mc, (-(_2795_q)))) {
			_2879_dc0=true;
		};
		if (_22be020c1_divisibleByPow5(_27313_mu, (-(_2795_q)))) {
			_2889_du0=true;
		};
	};
	jule::U32 _3255_extra = static_cast<jule::U32>((-(_27321_e2)));;
	jule::U64 _3265_extraMask = static_cast<jule::U64>(((1LL << _3255_extra) - 1LL));;
	jule::U64 _3289_fracl = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_2839_dl >> _3255_extra);
		jule::U64 _1___jule_assign_arg = (_2839_dl & _3265_extraMask);
		_2839_dl = ___jule_assign_arg;
		_3289_fracl = _1___jule_assign_arg;
	});
	jule::U64 _3309_fracc = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_2849_dc >> _3255_extra);
		jule::U64 _1___jule_assign_arg = (_2849_dc & _3265_extraMask);
		_2849_dc = ___jule_assign_arg;
		_3309_fracc = _1___jule_assign_arg;
	});
	jule::U64 _3329_fracu = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_2859_du >> _3255_extra);
		jule::U64 _1___jule_assign_arg = (_2859_du & _3265_extraMask);
		_2859_du = ___jule_assign_arg;
		_3329_fracu = _1___jule_assign_arg;
	});
	jule::Bool _3389_uok = ((!(_2889_du0)) || (_3329_fracu > 0LLU));;
	if ((_2889_du0 && (_3329_fracu == 0LLU))) {
		_3389_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_3389_uok))) {
		(_2859_du)--;
	};
	jule::Bool _3479_cup = false;;
	if (_2879_dc0) {
		_3479_cup=((_3309_fracc > (1LLU << (_3255_extra - 1LLU))) || ((_3309_fracc == (1LLU << (_3255_extra - 1LLU))) && ((_2849_dc & 1LLU) == 1LLU)));
	} else {
		_3479_cup=((_3309_fracc >> (_3255_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3615_lok = ((_2869_dl0 && (_3289_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3615_lok))) {
		(_2839_dl)++;
	};
	jule::Bool _3665_c0 = (_2879_dc0 && (_3309_fracc == 0LLU));;
	_22be00c6d_ryuDigits(_26125_d, _2839_dl, _2849_dc, _2859_du, _3665_c0, _3479_cup);
	(*(_26125_d))._field_dp-=_2795_q;
}



inline jule::I32 _22bdeee26_mulByLog2Log10(jule::I32 _37719_x) {
	return ((_37719_x * 78913LL) >> 18LL);;
}



inline jule::I32 _22be001e0_mulByLog10Log2(jule::I32 _38719_x) {
	return ((_38719_x * 108853LL) >> 15LL);;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _22be0061e_computeBounds(jule::U64 _39518_mant, jule::I32 _39529_exp, _22bde008c_floatInfo* _3966_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << (*(_3966_flt))._field_mantbits)) || (_39529_exp == (((*(_3966_flt))._field_bias + 1LL) - static_cast<jule::I32>((*(_3966_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = ((2LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (2LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = ((2LL * _39518_mant) + 1LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 1LL);
	} else {
		({
			jule::U64 ___jule_assign_arg = ((4LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (4LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = ((4LL * _39518_mant) + 2LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 2LL);
	};
	return __jule_func_result;;
}



inline void _22be00c6d_ryuDigits(_22bde0c19_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _4109_lhi;;
	jule::U32 _41014_llo;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _22be0238a_divmod1e9(_40936_lower);
		_4109_lhi = __jule_assign_result.__jule_result_arg0;
		_41014_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4115_chi;;
	jule::U32 _41110_clo;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _22be0238a_divmod1e9(_40948_central);
		_4115_chi = __jule_assign_result.__jule_result_arg0;
		_41110_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4125_uhi;;
	jule::U32 _41210_ulo;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _22be0238a_divmod1e9(_40962_upper);
		_4125_uhi = __jule_assign_result.__jule_result_arg0;
		_41210_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4125_uhi == 0LLU)) {
		_22be013de_ryuDigits32(_40919_d, _41014_llo, _41110_clo, _41210_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_4109_lhi < _4125_uhi)) {
		if ((_41014_llo != 0LLU)) {
			(_4109_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41110_clo == 0LLU));
		_40992_cup=((_41110_clo > 500000000LL) || ((_41110_clo == 500000000LL) && _40992_cup));
		_22be013de_ryuDigits32(_40919_d, _4109_lhi, _4115_chi, _4125_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U32 _42813_n = static_cast<jule::U32>(9LLU);;
		jule::U32 _42913_v = _4115_chi;;
		while ((_42913_v > 0LLU)) {
			{
				jule::U32 _43113_v1 = (_42913_v / 10LLU);;
				jule::U32 _43117_v2 = (_42913_v % 10LL);;
				({
					jule::U32 ___jule_assign_arg = (_42913_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_42913_v % 10LL);
					_43113_v1 = ___jule_assign_arg;
					_43117_v2 = _1___jule_assign_arg;
				});
				_42913_v=_43113_v1;
				(_42813_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I32>(_42813_n)]=static_cast<jule::U8>((_43117_v2 + '0'));
			}
		_iter_next_1b7709e05:;
		}
		_iter_end_1b7709e05:;;
		(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(static_cast<jule::I32>(_42813_n));
		(*(_40919_d))._field_nd=static_cast<jule::I32>((9LL - _42813_n));
		_22be013de_ryuDigits32(_40919_d, _41014_llo, _41110_clo, _41210_ulo, _40978_c0, _40992_cup, ((*(_40919_d))._field_nd + 8LL));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1b770ca2e:;
	}
	_iter_end_1b770ca2e:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(1LL);
		}
	_iter_next_1b770a961:;
	}
	_iter_end_1b770a961:;;
}



inline void _22be013de_ryuDigits32(_22bde0c19_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I32 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		(*(_45421_d))._field_dp=(_45554_endindex + 1LL);
		return;;
	};
	jule::I32 _4609_trimmed = 0LL;;
	jule::I32 _4639_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _4709_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47113_c = (_45458_central / 10LLU);;
			jule::U32 _47120_cdigit = (_45458_central % 10LL);;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_47113_c = ___jule_assign_arg;
				_47120_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _4729_u = (_4559_upper / 10LLU);;
			if ((_4709_l > _4729_u)) {
				goto _iter_end_1b771027e;
			};
			if (((_4709_l == (_47113_c + 1LLU)) && (_47113_c < _4729_u))) {
				(_47113_c)++;
				_47120_cdigit=0LLU;
				_45539_cup=false;
			};
			(_4609_trimmed)++;
			_45525_c0=(_45525_c0 && (_4639_cNextDigit == 0LL));
			_4639_cNextDigit=static_cast<jule::I32>(_47120_cdigit);
			({
				jule::U32 ___jule_assign_arg = _4709_l;
				jule::U32 _1___jule_assign_arg = _47113_c;
				jule::U32 _2___jule_assign_arg = _4729_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4559_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1b771027e:;
	}
	_iter_end_1b771027e:;;
	if ((_4609_trimmed > 0LL)) {
		_45539_cup=(((_4639_cNextDigit > 5LL) || ((_4639_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_4639_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_4609_trimmed;
	jule::U32 _5099_v = _45458_central;;
	jule::I32 _5109_n = _45554_endindex;;
	while ((_5109_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _5129_v1 = (_5099_v / 100LLU);;
			jule::U32 _51213_v2 = (_5099_v % 100LL);;
			({
				jule::U32 ___jule_assign_arg = (_5099_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_5099_v % 100LL);
				_5129_v1 = ___jule_assign_arg;
				_51213_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_5109_n]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>(((2LL * _51213_v2) + 1LLU)));
			(*(_45421_d))._field_d[(_5109_n - 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((2LL * _51213_v2)));
			_5109_n-=2LL;
			_5099_v=_5129_v1;
		}
	_iter_next_1b7712946:;
	}
	_iter_end_1b7712946:;;
	if ((_5109_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_5109_n]=static_cast<jule::U8>((_5099_v + '0'));
	};
	(*(_45421_d))._field_nd=(_45554_endindex + 1LL);
	(*(_45421_d))._field_dp=((*(_45421_d))._field_nd + _4609_trimmed);
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _22be0181d_mult64bitPow10(jule::U32 _53419_m, jule::I32 _53431_e2, jule::I32 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (_53419_m << 6LLU);
		__jule_func_result.__jule_result_arg1 = (_53431_e2 - 6LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str::lit("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _5439_pow = _22bde8260_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_5439_pow+=1LLU;
	};
	jule::U64 _5485_hi;;
	jule::U64 _5489_lo;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _22bda4c44_Mul64(static_cast<jule::U64>(_53419_m), _5439_pow);
		_5485_hi = __jule_assign_result.__jule_result_arg0;
		_5489_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_22be001e0_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(((_5485_hi << 7LLU) | (_5489_lo >> 57LLU)));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_5489_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _22be01c4c_mult128bitPow10(jule::U64 _56220_m, jule::I32 _56232_e2, jule::I32 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (_56220_m << 8LLU);
		__jule_func_result.__jule_result_arg1 = (_56232_e2 - 8LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str::lit("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _5719_pow = _22bde8260_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_5719_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_22be001e0_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _5795_l1;;
	jule::U64 _5799_l0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _22bda4c44_Mul64(_56220_m, _5719_pow[0LL]);
		_5795_l1 = __jule_assign_result.__jule_result_arg0;
		_5799_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5809_h1;;
	jule::U64 _58013_h0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _22bda4c44_Mul64(_56220_m, _5719_pow[1LL]);
		_5809_h1 = __jule_assign_result.__jule_result_arg0;
		_58013_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5815_mid;;
	jule::U64 _58110_carry;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _22bda343a_Add64(_5795_l1, _58013_h0, 0LLU);
		_5815_mid = __jule_assign_result.__jule_result_arg0;
		_58110_carry = __jule_assign_result.__jule_result_arg1;
	});
	_5809_h1+=_58110_carry;
	__jule_func_result.__jule_result_arg0 = ((_5809_h1 << 9LLU) | (_5815_mid >> 55LLU));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_5815_mid << 9LLU) == 0LLU) && (_5799_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _22be020c1_divisibleByPow5(jule::U64 _58624_m, jule::I32 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I32 _5909_i = 0LL;;
	for (; (_5909_i < _58632_k); (_5909_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1b7724b23:;
	}
	_iter_end_1b7724b23:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _22be0238a_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_60214_x / 1000000000LL));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>((_60214_x % 1000000000LL));
		return __jule_func_result;;
	};
}



inline void _22be052c2_trim(_22be03974_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_1b77283a7:;
	}
	_iter_end_1b77283a7:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _22be055ad_rightShift(_22be03974_decimal* _28420_a, jule::U32 _28432_k) {
	jule::I32 _2859_r = 0LL;;
	jule::I32 _2869_w = 0LL;;
	jule::U32 _2899_n = static_cast<jule::U32>(0LLU);;
	for (; ((_2899_n >> _28432_k) == 0LLU); (_2859_r)++) {
		{
			if ((_2859_r >= (*(_28420_a))._field_nd)) {
				if ((_2899_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while (((_2899_n >> _28432_k) == 0LLU)) {
					{
						_2899_n=(_2899_n * 10LLU);
						(_2859_r)++;
					}
				_iter_next_1b772b2bc:;
				}
				_iter_end_1b772b2bc:;;
				goto _iter_end_1b7729d48;
			};
			jule::U32 _3039_c = static_cast<jule::U32>((*(_28420_a))._field_d[_2859_r]);;
			_2899_n=(((_2899_n * 10LLU) + _3039_c) - '0');
		}
	_iter_next_1b7729d48:;
	}
	_iter_end_1b7729d48:;;
	(*(_28420_a))._field_dp-=(_2859_r - 1LL);
	jule::U32 _3085_mask = (static_cast<jule::U32>((1LL << _28432_k)) - 1LLU);;
	for (; (_2859_r < (*(_28420_a))._field_nd); (_2859_r)++) {
		{
			jule::U32 _3129_c = static_cast<jule::U32>((*(_28420_a))._field_d[_2859_r]);;
			jule::U32 _3139_dig = (_2899_n >> _28432_k);;
			_2899_n&=_3085_mask;
			(*(_28420_a))._field_d[_2869_w]=static_cast<jule::U8>((_3139_dig + '0'));
			(_2869_w)++;
			_2899_n=(((_2899_n * 10LLU) + _3129_c) - '0');
		}
	_iter_next_1b772b3aa:;
	}
	_iter_end_1b772b3aa:;;
	while ((_2899_n > 0LLU)) {
		{
			jule::U32 _3229_dig = (_2899_n >> _28432_k);;
			_2899_n&=_3085_mask;
			if ((_2869_w < 800LL)) {
				(*(_28420_a))._field_d[_2869_w]=static_cast<jule::U8>((_3229_dig + '0'));
				(_2869_w)++;
			} else if ((_3229_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_2899_n=(_2899_n * 10LLU);
		}
	_iter_next_1b772d92e:;
	}
	_iter_end_1b772d92e:;;
	(*(_28420_a))._field_nd=_2869_w;
	_22be052c2_trim(_28420_a);
}



inline jule::Bool _22be05a64_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I32 _33835_end, jule::Str* _33846_s) {
	jule::I32 _3399_i = 0LL;;
	for (; (_3399_i < (*(_33846_s)).len()); (_3399_i)++) {
		{
			if ((_3399_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_3399_i] != (*(_33846_s))[_3399_i])) {
				return (_33821_b[_3399_i] < (*(_33846_s))[_3399_i]);;
			};
		}
	_iter_next_1b7732999:;
	}
	_iter_end_1b7732999:;;
	return false;;
}



inline void _22be05d1c_leftShift(_22be03974_decimal* _35219_a, jule::U32 _35231_k) {
	jule::I32 _3539_delta = _22be0338b_leftCheats[static_cast<jule::I32>(_35231_k)]._field_delta;;
	if (_22be05a64_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &(_22be0338b_leftCheats[static_cast<jule::I32>(_35231_k)]._field_cutoff))) {
		(_3539_delta)--;
	};
	jule::I32 _3589_r = (*(_35219_a))._field_nd;;
	jule::I32 _3599_w = ((*(_35219_a))._field_nd + _3539_delta);;
	jule::U32 _3629_n = static_cast<jule::U32>(0LLU);;
	(_3589_r)--;
	for (; (_3589_r >= 0LL); (_3589_r)--) {
		{
			_3629_n+=((static_cast<jule::U32>((*(_35219_a))._field_d[_3589_r]) - '0') << _35231_k);
			jule::U32 _3669_quo = (_3629_n / 10LLU);;
			jule::U32 _3679_rem = (_3629_n - (10LLU * _3669_quo));;
			(_3599_w)--;
			if ((_3599_w < 800LL)) {
				(*(_35219_a))._field_d[_3599_w]=static_cast<jule::U8>((_3679_rem + '0'));
			} else if ((_3679_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3629_n=_3669_quo;
		}
	_iter_next_1b7735e97:;
	}
	_iter_end_1b7735e97:;;
	while ((_3629_n > 0LLU)) {
		{
			jule::U32 _3799_quo = (_3629_n / 10LLU);;
			jule::U32 _3809_rem = (_3629_n - (10LLU * _3799_quo));;
			(_3599_w)--;
			if ((_3599_w < 800LL)) {
				(*(_35219_a))._field_d[_3599_w]=static_cast<jule::U8>((_3809_rem + '0'));
			} else if ((_3809_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3629_n=_3799_quo;
		}
	_iter_next_1b7736283:;
	}
	_iter_end_1b7736283:;;
	(*(_35219_a))._field_nd+=_3539_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_3539_delta;
	_22be052c2_trim(_35219_a);
}



inline jule::Bool _22be06191_shouldRoundUp(_22be03974_decimal* _39919_a, jule::I32 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && ((((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _22be07923_FmtUint(jule::U64 _6112_i, jule::I32 _6120_base) {
	if (((_6112_i < 100LLU) && (_6120_base == 10LL))) {
		return _22be083e6_small(static_cast<jule::I32>(_6112_i));;
	};
	jule::Str _658_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _22be08c21_fmtBits(nullptr, _6112_i, _6120_base, false, false);
		_658_s = __jule_assign_result.__jule_result_arg1;
	});
	return _658_s;;
}



inline jule::Str _22be07cdb_FmtInt(jule::I64 _7211_i, jule::I32 _7219_base) {
	if ((((0LL <= _7211_i) && (_7211_i < 100LL)) && (_7219_base == 10LL))) {
		return _22be083e6_small(static_cast<jule::I32>(_7211_i));;
	};
	jule::Str _768_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _22be08c21_fmtBits(nullptr, static_cast<jule::U64>(_7211_i), _7219_base, (_7211_i < 0LL), false);
		_768_s = __jule_assign_result.__jule_result_arg1;
	});
	return _768_s;;
}



inline jule::Str _22be080a5_Itoa(jule::I32 _819_i) {
	return _22be07cdb_FmtInt(static_cast<jule::I64>(_819_i), 10LL);;
}



inline jule::Str _22be083e6_small(jule::I32 _8610_i) {
	if ((_8610_i < 10LL)) {
		return jule::Str::from_byte(static_cast<jule::U8>(('0' + _8610_i)));;
	};
	jule::Slice<jule::U8> _909_buf = jule::Slice<jule::U8>::alloc(3LL, 3LL, 0);;
	_909_buf[0LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, (_8610_i << 1LL));
	_909_buf[1LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, ((_8610_i << 1LL) + 1LL));
	return _243a89e1d_StrFromBytes(_909_buf.slice(0LL, 2LL));;
}



inline jule::Bool _22be0867c_isPowerOfTwo(jule::I32 _9617_x) {
	return ((_9617_x & (_9617_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _22be08c21_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I32 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10541_base < 2LL) || (_10541_base > 36LL))) {
		jule::panic(jule::Str::lit("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:107:9"));;
	};
	jule::Slice<jule::U8> _1119_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I32 _1129_i = _1119_a.len();;
	if (_10552_neg) {
		_10533_u=(-(_10533_u));
	};
	{
		
		if ((_10541_base == 10LL)) {
			_case_begin_1b7776b31:;
			{
				;
				jule::U32 _15413_us = static_cast<jule::U32>(_10533_u);;
				while ((_15413_us >= 100LLU)) {
					{
						jule::U32 _15613_is = ((_15413_us % 100LL) << 1LLU);;
						_15413_us/=100LLU;
						_1129_i-=2LL;
						_1119_a[(_1129_i + 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((_15613_is + 1LLU)));
						_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>(_15613_is));
					}
				_iter_next_1b777a3e8:;
				}
				_iter_end_1b777a3e8:;;
				jule::U32 _1649_is = (_15413_us << 1LLU);;
				(_1129_i)--;
				_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((_1649_is + 1LLU)));
				if ((_15413_us >= 10LLU)) {
					(_1129_i)--;
					_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>(_1649_is));
				};
			}
		}
		else if (_22be0867c_isPowerOfTwo(_10541_base)) {
			_case_begin_1b7770c7e:;
			{
				jule::U32 _1799_shift = (static_cast<jule::U32>(_22bd9ac5c_TrailingZeros(static_cast<jule::U32>(_10541_base))) & 7LLU);;
				jule::U64 _1809_b = static_cast<jule::U64>(_10541_base);;
				jule::U32 _1819_m = (static_cast<jule::U32>(_10541_base) - 1LLU);;
				while ((_10533_u >= _1809_b)) {
					{
						(_1129_i)--;
						_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>((static_cast<jule::U32>(_10533_u) & _1819_m)));
						_10533_u>>=_1799_shift;
					}
				_iter_next_1b7780c39:;
				}
				_iter_end_1b7780c39:;;
				(_1129_i)--;
				_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>(static_cast<jule::U32>(_10533_u)));
			}
		}
		else {
			_case_begin_1b7770740:;
			{
				jule::U64 _1929_b = static_cast<jule::U64>(_10541_base);;
				while ((_10533_u >= _1929_b)) {
					{
						(_1129_i)--;
						jule::U64 _19813_q = jule::div(_10533_u,_1929_b);;
						_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>(static_cast<jule::U32>((_10533_u - (_19813_q * _1929_b)))));
						_10533_u=_19813_q;
					}
				_iter_next_1b7776092:;
				}
				_iter_end_1b7776092:;;
				(_1129_i)--;
				_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>(static_cast<jule::U32>(_10533_u)));
			}
		}
		_match_end_1b77706a7:;
	};
	if (_10552_neg) {
		(_1129_i)--;
		_1119_a[_1129_i]='-';
	};
	if (_10563_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10516_dst,_1119_a.slice(_1129_i));
		return __jule_func_result;;
	};
	jule::I32 _2175_n = jule::copy(_1119_a, _1119_a.slice(_1129_i));;
	__jule_func_result.__jule_result_arg1=_243a89e1d_StrFromBytes(_1119_a.slice(0LL, _2175_n));
	return __jule_func_result;;
}



inline jule::Str _22be0a21c_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1b7795a40:;
			{
				return _22be09738_SysInt;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1b77943bd:;
			{
				return _22be099e1_SysUint;;
			}
		}
		else {
			_case_begin_1b7792c90:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1b7795d1a:;
	};
}



inline jule::I32 _22be0a4d6_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str::lit("i8", 2) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1b7796ab8:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3) || _match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1b7796cc7:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3) || _match_expr == jule::Str::lit("u32", 3) || _match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1b7796d3d:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3) || _match_expr == jule::Str::lit("u64", 3) || _match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1b7796b2e:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("int", 3) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1b7796b95:;
			{
				return _22be0943b_BitSize;;
			}
		}
		else {
			_case_begin_1b7796799:;
			{
				return -1LL;;
			}
		}
		_match_end_1b7796a1e:;
	};
}



inline jule::Str _22be0a827_IntFromBits(jule::I32 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1b77991c5:;
			{
				return jule::Str::lit("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1b779923b:;
			{
				return jule::Str::lit("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1b77992a2:;
			{
				return jule::Str::lit("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1b7799329:;
			{
				return jule::Str::lit("i64", 3);;
			}
		}
		else {
			_case_begin_1b7798c1e:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b7798911:;
	};
}



inline jule::Str _22be0aaad_UintFromBits(jule::I32 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1b779a44b:;
			{
				return jule::Str::lit("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1b7799eea:;
			{
				return jule::Str::lit("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1b779a4d4:;
			{
				return jule::Str::lit("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1b779a54a:;
			{
				return jule::Str::lit("u64", 3);;
			}
		}
		else {
			_case_begin_1b7799c64:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b7799e51:;
	};
}



inline jule::Str _22be0ad77_FloatFromBits(jule::I32 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1b779b6c2:;
			{
				return jule::Str::lit("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1b779b271:;
			{
				return jule::Str::lit("f64", 3);;
			}
		}
		else {
			_case_begin_1b779aeda:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b779b1c7:;
	};
}



inline jule::Bool _22be0b97c_CheckBitFloat(jule::Str _15118_val, jule::I32 _15128_bit) {
	({
		auto except = _22bded056_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I32 _22be0bc46_BitsizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1b77a14eb:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1b779ea7c:;
			{
				return 64LLU;;
			}
		}
		_match_end_1b779e98e:;
	};
}



inline jule::I32 _22be0c010_BitsizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1b77a2233:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1b77a1ae5:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1b77a1b5b:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1b77a1a6d:;
			{
				return 64LLU;;
			}
		}
		_match_end_1b77a19a2:;
	};
}



inline jule::I32 _22be0c2c9_BitsizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1b77a3c7e:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1b77a2eae:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1b77a3025:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1b77a2e37:;
			{
				return 64LLU;;
			}
		}
		_match_end_1b77a3399:;
	};
}



inline void _22be0c472_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _22abda938_Arch };
			
			if (_match_expr == jule::Str::lit("arm64", 5) || _match_expr == jule::Str::lit("amd64", 5)) {
				_case_begin_1b77a46ca:;
				{
					_22be0943b_BitSize=64LLU;
					_22be09738_SysInt=jule::Str::lit("i64", 3);
					_22be099e1_SysUint=jule::Str::lit("u64", 3);
				}
			}
			else if (_match_expr == jule::Str::lit("i386", 4)) {
				_case_begin_1b77a4cb3:;
				{
					_22be0943b_BitSize=32LLU;
					_22be09738_SysInt=jule::Str::lit("i32", 3);
					_22be099e1_SysUint=jule::Str::lit("u32", 3);
				}
			}
			_match_end_1b77a4c19:;
		};
	};
}



inline void _22be0c5e8_init(void) {
	_22be0c472_UpdateTarget();
}



inline jule::I64 _22be11256_MinI(jule::Str _6113_k) {
	_6113_k=_22be0a21c_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1b77a6e08:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1b77a6e6e:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1b77a6ed5:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1b77a704b:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1b77a407b:;
			{
				return 0LL;;
			}
		}
		_match_end_1b77a5148:;
	};
}



inline jule::I64 _22be11564_MaxI(jule::Str _7913_k) {
	_7913_k=_22be0a21c_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1b77a84ae:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1b77a8525:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1b77a858b:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1b77a8602:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1b77a835a:;
			{
				return 0LL;;
			}
		}
		_match_end_1b77a8305:;
	};
}



inline jule::U64 _22be1182d_MaxU(jule::Str _9713_k) {
	_9713_k=_22be0a21c_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1b77a9aa9:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1b77a9b20:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1b77a9b86:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1b77a9bec:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1b77a9955:;
			{
				return 0LLU;;
			}
		}
		_match_end_1b77a9900:;
	};
}



inline jule::F64 _22be11b6e_Min(jule::Str _11512_k) {
	_11512_k=_22be0a21c_RealKindOf(_11512_k);
	jule::I64 _1175_i = _22be11256_MinI(_11512_k);;
	if ((_1175_i != 0LL)) {
		return static_cast<jule::F64>(_1175_i);;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1b77ac21b:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1b77ab649:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1b77ab55b:;
			{
				return 0LL;;
			}
		}
		_match_end_1b77ab5e4:;
	};
}



inline jule::F64 _22be11e05_Max(jule::Str _13312_k) {
	_13312_k=_22be0a21c_RealKindOf(_13312_k);
	jule::I64 _1355_i = _22be11564_MaxI(_13312_k);;
	if ((_1355_i != 0LL)) {
		return static_cast<jule::F64>(_1355_i);;
	};
	jule::U64 _1395_u = _22be1182d_MaxU(_13312_k);;
	if ((_1395_u != 0LLU)) {
		return static_cast<jule::F64>(_1395_u);;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1b77ae52b:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1b77ad8e3:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1b77ad805:;
			{
				return 0LL;;
			}
		}
		_match_end_1b77ad88d:;
	};
}



inline jule::Bool _22be123ab_IsI16Greater(jule::Str _621_k) {
	return _621_k.equal("i8", 2);;
}



inline jule::Bool _22be126b9_IsI32Greater(jule::Str _1121_k) {
	return (_1121_k.equal("i8", 2) || _1121_k.equal("i16", 3));;
}



inline jule::Bool _22be12983_IsI64Greater(jule::Str _1621_k) {
	return ((_1621_k.equal("i8", 2) || _1621_k.equal("i16", 3)) || _1621_k.equal("i32", 3));;
}



inline jule::Bool _22be12cc4_IsU16Greater(jule::Str _2321_k) {
	return _2321_k.equal("u8", 2);;
}



inline jule::Bool _22be1305a_IsU32Greater(jule::Str _2821_k) {
	return (_2821_k.equal("u8", 2) || _2821_k.equal("u16", 3));;
}



inline jule::Bool _22be13324_IsU64Greater(jule::Str _3421_k) {
	return ((_3421_k.equal("u8", 2) || _3421_k.equal("u16", 3)) || _3421_k.equal("u32", 3));;
}



inline jule::Bool _22be135dd_IsF32Greater(jule::Str _4117_k) {
	return (!_4117_k.equal("f64", 3));;
}



inline jule::Bool _22be139b7_IsF64Greater(jule::Str _4617_k) {
	return true;;
}



inline jule::Bool _22be13cb4_IsGreater(jule::Str _5118_k1, jule::Str _5127_k2) {
	{
		auto &_match_expr{ _5118_k1 };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1b77b2d15:;
			{
				return _22be14e2a_IsSigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1b77b2d7b:;
			{
				return _22be15238_IsUnsigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1b77b2de2:;
			{
				return _22be15238_IsUnsigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1b77b2e69:;
			{
				return _22be123ab_IsI16Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1b77b3101:;
			{
				return _22be126b9_IsI32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1b77b3178:;
			{
				return _22be12983_IsI64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1b77b3200:;
			{
				return _22be12cc4_IsU16Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1b77b3277:;
			{
				return _22be1305a_IsU32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1b77b3387:;
			{
				return _22be13324_IsU64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1b77b33ed:;
			{
				return _22be135dd_IsF32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1b77b3464:;
			{
				return _22be139b7_IsF64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1b77b34ca:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b77b29c4:;
			{
				return false;;
			}
		}
		_match_end_1b77b2b6c:;
	};
}



inline jule::Bool _22be14e2a_IsSigInt(jule::Str _2717_k) {
	return ((((_2717_k.equal("i8", 2) || _2717_k.equal("i16", 3)) || _2717_k.equal("i32", 3)) || _2717_k.equal("i64", 3)) || _2717_k.equal("int", 3));;
}



inline jule::Bool _22be15238_IsUnsigInt(jule::Str _3619_k) {
	return (((((_3619_k.equal("u8", 2) || _3619_k.equal("u16", 3)) || _3619_k.equal("u32", 3)) || _3619_k.equal("u64", 3)) || _3619_k.equal("uint", 4)) || _3619_k.equal("uintptr", 7));;
}



inline jule::Bool _22be15502_IsInt(jule::Str _4610_k) {
	return (_22be14e2a_IsSigInt(_4610_k) || _22be15238_IsUnsigInt(_4610_k));;
}



inline jule::Bool _22be15843_IsFloat(jule::Str _5112_k) {
	return (_5112_k.equal("f32", 3) || _5112_k.equal("f64", 3));;
}



inline jule::Bool _22be15ac9_IsNum(jule::Str _5610_k) {
	return (_22be15502_IsInt(_5610_k) || _22be15843_IsFloat(_5610_k));;
}



inline jule::Bool _22be15d93_IsSigNum(jule::Str _6113_k) {
	return (_22be14e2a_IsSigInt(_6113_k) || _22be15843_IsFloat(_6113_k));;
}



inline void _22be20188_lshiftUnsig(_22be1616d_Const* _59021_c, _22be1616d_Const* _59032_x) {
	jule::U64 _5915_l = _22be18a99_AsU64(_59021_c);;
	jule::U64 _5925_r = _22be18a99_AsU64(_59032_x);;
	_22be19391_SetU64(_59021_c, (_5915_l << _5925_r));
}



inline void _22be204b8_rshiftUnsig(_22be1616d_Const* _59621_c, _22be1616d_Const* _59632_x) {
	jule::U64 _5975_l = _22be18a99_AsU64(_59621_c);;
	jule::U64 _5985_r = _22be18a99_AsU64(_59632_x);;
	_22be19391_SetU64(_59621_c, (_5975_l >> _5985_r));
}



inline jule::Bool _1cdeabc01_IsUnaryOp(jule::U32 _33414_id) {
	{
		auto expr = &(_21065a24c_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b786b4b7:;
		if (it != expr_end) {
			jule::U32 *_33512_op = it;
			{
				if ((_33414_id == (*(_33512_op)))) {
					return true;;
				};
			}
			_iter_next_1b786b4b7:;
			++it;
			goto _iter_begin_1b786b4b7;
		}
		_iter_end_1b786b4b7:;
	};
	return false;;
}



inline jule::Bool _1cdeac00e_IsBinOp(jule::U32 _34412_id) {
	{
		auto expr = &(_1cdea53c0_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b786bcae:;
		if (it != expr_end) {
			jule::U32 *_34512_op = it;
			{
				if ((_34412_id == (*(_34512_op)))) {
					return true;;
				};
			}
			_iter_next_1b786bcae:;
			++it;
			goto _iter_begin_1b786bcae;
		}
		_iter_end_1b786bcae:;
	};
	return false;;
}



inline jule::Bool _1cdeac619_IsStr(jule::Str _36410_k) {
	return (!(_36410_k).empty() && ((_36410_k[0LL] == '\"') || _1cdeac8a0_IsRawStr(_36410_k)));;
}



inline jule::Bool _1cdeac8a0_IsRawStr(jule::Str _36713_k) {
	return (!(_36713_k).empty() && (_36713_k[0LL] == '`'));;
}



inline jule::Bool _1cdeacb69_IsRune(jule::Str _37111_k) {
	return (!(_37111_k).empty() && (_37111_k[0LL] == '\''));;
}



inline jule::Bool _1cdead54e_IsFloat(jule::Str _38012_k) {
	if (_22aae7867_HasPrefix(_38012_k, jule::Str::lit("0x", 2))) {
		return _22aaeccce_ContainsAny(_38012_k, jule::Str::lit(".pP", 3));;
	};
	return _22aaeccce_ContainsAny(_38012_k, jule::Str::lit(".eE", 3));;
}



inline jule::Bool _1cdead818_IsNum(jule::Str _38810_k) {
	if ((_38810_k).empty()) {
		return false;;
	};
	jule::U8 _3935_b = _38810_k[0LL];;
	return ((_3935_b == '.') || (('0' <= _3935_b) && (_3935_b <= '9')));;
}



inline jule::Bool _1cdeadd9b_IsIgnoreIdent(jule::Str _40318_ident) {
	return _40318_ident.equal("_", 1);;
}



inline jule::Bool _1cdeae165_IsAnonIdent(jule::Str _40616_ident) {
	return _40616_ident.equal("<anonymous>", 11);;
}



inline jule::Bool _1cdeae6e8_IsSpace(jule::I32 _41912_r) {
	{
		auto expr = &(_210659e61_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b787417e:;
		if (it != expr_end) {
			jule::I32 *_42012_cr = it;
			{
				if ((_41912_r == (*(_42012_cr)))) {
					return true;;
				};
			}
			_iter_next_1b787417e:;
			++it;
			goto _iter_begin_1b787417e;
		}
		_iter_end_1b787417e:;
	};
	return false;;
}



inline jule::Bool _1cdeaebe3_IsLetter(jule::I32 _42913_r) {
	return _22a7c98ac_IsLetter(_42913_r);;
}



inline jule::Bool _1cdeb0166_IsDecimal(jule::U8 _44914_b) {
	return (('0' <= _44914_b) && (_44914_b <= '9'));;
}



inline jule::Bool _1cdeb0430_IsBinary(jule::U8 _45213_b) {
	return ((_45213_b == '0') || (_45213_b == '1'));;
}



inline jule::Bool _1cdeb06e9_IsOctal(jule::U8 _45512_b) {
	return (('0' <= _45512_b) && (_45512_b <= '7'));;
}



inline jule::Bool _1cdeb09b3_IsHex(jule::U8 _45810_b) {
	{
		
		if ((('0' <= _45810_b) && (_45810_b <= '9'))) {
			_case_begin_1b7877902:;
			{
				return true;;
			}
		}
		else if ((('a' <= _45810_b) && (_45810_b <= 'f'))) {
			_case_begin_1b787799b:;
			{
				return true;;
			}
		}
		else if ((('A' <= _45810_b) && (_45810_b <= 'F'))) {
			_case_begin_1b7877a23:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b7877869:;
			{
				return false;;
			}
		}
		_match_end_1b7876835:;
	};
}



inline jule::Bool _1cdeb0c7c_IsAssign(jule::U32 _47313_id) {
	return ((((((((_47313_id == static_cast<jule::U32>(1LLU)) || (_47313_id == static_cast<jule::U32>(27LLU))) || (_47313_id == static_cast<jule::U32>(30LLU))) || (_47313_id == static_cast<jule::U32>(32LLU))) || (_47313_id == static_cast<jule::U32>(24LLU))) || (_47313_id == static_cast<jule::U32>(74LLU))) || (_47313_id == static_cast<jule::U32>(62LLU))) || (_47313_id == static_cast<jule::U32>(65LLU)));;
}



inline jule::Bool _1cdeb1046_IsPostfixOp(jule::U32 _48516_id) {
	{
		auto expr = &(_1cdea5997_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7879041:;
		if (it != expr_end) {
			jule::U32 *_48612_op = it;
			{
				if ((_48516_id == (*(_48612_op)))) {
					return true;;
				};
			}
			_iter_next_1b7879041:;
			++it;
			goto _iter_begin_1b7879041;
		}
		_iter_end_1b7879041:;
	};
	return false;;
}



inline jule::Bool _1cdeb1310_IsAssignOp(jule::U32 _49515_id) {
	if (_1cdeb1046_IsPostfixOp(_49515_id)) {
		return true;;
	};
	{
		auto expr = &(_1cdea5c83_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b787b0ed:;
		if (it != expr_end) {
			jule::U32 *_49912_op = it;
			{
				if ((_49515_id == (*(_49912_op)))) {
					return true;;
				};
			}
			_iter_next_1b787b0ed:;
			++it;
			goto _iter_begin_1b787b0ed;
		}
		_iter_end_1b787b0ed:;
	};
	return false;;
}



inline jule::Ptr<_1cdeb1c4a_File> _1cdeb3125_NewFileSet(jule::Str _5715_path) {
	return jule::new_ptr<_1cdeb1c4a_File>(_1cdeb1c4a_File{._field_Path=_5715_path, });;
}



inline _22a93672d_Log _1cdeb4b4e_makeErr(jule::I32 _10012_row, jule::I32 _10022_col, jule::Ptr<_1cdeb1c4a_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args) {
	return _22a93672d_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_10012_row, ._field_Column=_10022_col, ._field_Path=(*((*(_10033_f))))._field_Path, ._field_Text=_22a936b90_Logf(_10043_fmt, _10056_args), };;
}



inline jule::Bool _1cdeb5017_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix) {
	if (((*(_11020_bytes)).len() < _11035_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11035_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7886988:;
		if (it != expr_end) {
			jule::I32 _1149_i = it - expr->begin();
			{
				if (((*(_11020_bytes))[_1149_i] != _11035_prefix[_1149_i])) {
					return false;;
				};
			}
			_iter_next_1b7886988:;
			++it;
			_1149_i++;
			goto _iter_begin_1b7886988;
		}
		_iter_end_1b7886988:;
	};
	return true;;
}



inline jule::Str _1cdeb538b_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I32 _12232_i) {
	jule::Str __jule_func_result;
	(_12232_i)++;
	if ((_12232_i >= (*(_12215_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _1289_b = (*(_12215_txt))[_12232_i];;
	if ((_1289_b == '_')) {
		return __jule_func_result;;
	};
	if (((_1289_b == '+') || (_1289_b == '-'))) {
		(_12232_i)++;
		if ((_12232_i >= (*(_12215_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12215_txt))[_12232_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I32 _1425_first = _12232_i;;
	for (; (_12232_i < (*(_12215_txt)).len()); (_12232_i)++) {
		{
			_1289_b=(*(_12215_txt))[_12232_i];
			if (((_1289_b != '_') && (!(_1cdeb0166_IsDecimal(_1289_b))))) {
				goto _iter_end_1b78897e3;
			};
		}
	_iter_next_1b78897e3:;
	}
	_iter_end_1b78897e3:;;
	if ((_12232_i == _1425_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_12215_txt)).slice(0LL, _12232_i));
	return __jule_func_result;;
}



inline jule::Str _1cdeb5754_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I32 _15628_i) {
	return _1cdeb538b_floatFmtE(_15615_txt, _15628_i);;
}



inline jule::Str _1cdeb5ac8_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I32 _16036_i) {
	if (((*(_16019_txt))[_16036_i] != '.')) {
		return jule::Str();;
	};
	(_16036_i)++;
	_julec_label_1b788b7d4:;
	for (; (_16036_i < (*(_16019_txt)).len()); (_16036_i)++) {
		{
			jule::U8 _1689_b = (*(_16019_txt))[_16036_i];;
			{
				
				if ((_1689_b == '_') || _1cdeb0166_IsDecimal(_1689_b)) {
					_case_begin_1b788c6b4:;
					{
						goto _iter_next_1b788b64c;
					}
				}
				else if (_1cdeb7459_isFloatFmtP(_1689_b, _16036_i)) {
					_case_begin_1b788c75d:;
					{
						return _1cdeb5754_floatFmtP(_16019_txt, _16036_i);;
					}
				}
				else {
					_case_begin_1b788c63c:;
					{
						goto _iter_end_1b788b64c;
					}
				}
				_match_end_1b788c5c6:;
			};
		}
	_iter_next_1b788b64c:;
	}
	_iter_end_1b788b64c:;;
	return jule::Str();;
}



inline jule::Str _1cdeb5e4c_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I32 _18136_i) {
	_18136_i+=2LL;
	return _1cdeb538b_floatFmtE(_18119_txt, _18136_i);;
}



inline jule::Str _1cdeb62c1_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I32 _18635_i) {
	(_18635_i)++;
	return _1cdeb538b_floatFmtE(_18618_txt, _18635_i);;
}



inline jule::Str _1cdeb6755_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I32 _19131_i) {
	jule::Str __jule_func_result;
	(_19131_i)++;
	if ((_19131_i >= (*(_19114_txt)).len())) {
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)));
		return __jule_func_result;;
	};
	if (((*(_19114_txt))[_19131_i] == '_')) {
		(_19131_i)--;
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
		return __jule_func_result;;
	};
	for (; (_19131_i < (*(_19114_txt)).len()); (_19131_i)++) {
		{
			jule::U8 _2019_b = (*(_19114_txt))[_19131_i];;
			if (((_19131_i > 1LL) && ((_2019_b == 'e') || (_2019_b == 'E')))) {
				__jule_func_result = _1cdeb538b_floatFmtE(_19114_txt, _19131_i);
				return __jule_func_result;;
			};
			if (((_2019_b != '_') && (!(_1cdeb0166_IsDecimal(_2019_b))))) {
				goto _iter_end_1b7890310;
			};
		}
	_iter_next_1b7890310:;
	}
	_iter_end_1b7890310:;;
	if ((_19131_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
	return __jule_func_result;;
}



inline jule::Str _1cdeb6997_commonNum(jule::Slice<jule::U8>* _21615_txt) {
	jule::Str __jule_func_result;
	jule::I32 _2179_i = 0LL;;
	_julec_label_1b7890a6e:;
	for (; (_2179_i < (*(_21615_txt)).len()); (_2179_i)++) {
		{
			jule::U8 _2209_b = (*(_21615_txt))[_2179_i];;
			{
				
				if ((_2209_b == '.')) {
					_case_begin_1b7893599:;
					{
						__jule_func_result = _1cdeb6755_floatNum(_21615_txt, _2179_i);
						return __jule_func_result;;
					}
				}
				else if ((_2209_b == '_')) {
					_case_begin_1b7893643:;
					{
						goto _iter_next_1b78929a5;
					}
				}
				else if (_1cdeb70d5_isFloatFmtE(_2209_b, _2179_i)) {
					_case_begin_1b78936a9:;
					{
						__jule_func_result = _1cdeb538b_floatFmtE(_21615_txt, _2179_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1cdeb0166_IsDecimal(_2209_b)))) {
					_case_begin_1b7893720:;
					{
						goto _iter_end_1b78929a5;
					}
				}
				_match_end_1b78934bc:;
			};
		}
	_iter_next_1b78929a5:;
	}
	_iter_end_1b78929a5:;;
	if ((_2179_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_21615_txt)).slice(0LL, _2179_i));
	return __jule_func_result;;
}



inline jule::Str _1cdeb6c61_binaryNum(jule::Slice<jule::U8>* _23915_txt) {
	jule::Str __jule_func_result;
	if ((!(_1cdeb5017_bytesHasPrefix(_23915_txt, jule::Str::lit("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_23915_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I32 _2489_i = 2LL;;
	for (; (_2489_i < (*(_23915_txt)).len()); (_2489_i)++) {
		{
			if ((((*(_23915_txt))[_2489_i] != '_') && (!(_1cdeb0430_IsBinary((*(_23915_txt))[_2489_i]))))) {
				goto _iter_end_1b789648c;
			};
		}
	_iter_next_1b789648c:;
	}
	_iter_end_1b789648c:;;
	if ((_2489_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_23915_txt)).slice(0LL, _2489_i));
	return __jule_func_result;;
}



inline jule::Bool _1cdeb70d5_isFloatFmtE(jule::U8 _26116_b, jule::I32 _26125_i) {
	return ((_26125_i > 0LL) && ((_26116_b == 'e') || (_26116_b == 'E')));;
}



inline jule::Bool _1cdeb7459_isFloatFmtP(jule::U8 _26516_b, jule::I32 _26525_i) {
	return ((_26525_i > 0LL) && ((_26516_b == 'p') || (_26516_b == 'P')));;
}



inline jule::Bool _1cdeb77cd_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I32 _26938_i) {
	if (((*(_26921_txt))[_26938_i] != '.')) {
		return false;;
	};
	(_26938_i)++;
	_julec_label_1b78993b3:;
	for (; (_26938_i < (*(_26921_txt)).len()); (_26938_i)++) {
		{
			jule::U8 _2769_b = (*(_26921_txt))[_26938_i];;
			{
				
				if ((_2769_b == '_') || _1cdeb0166_IsDecimal(_2769_b)) {
					_case_begin_1b789a062:;
					{
						goto _iter_next_1b7898ea6;
					}
				}
				else if (_1cdeb7459_isFloatFmtP(_2769_b, _26938_i)) {
					_case_begin_1b789a10b:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1b7899eda:;
					{
						goto _iter_end_1b7898ea6;
					}
				}
				_match_end_1b7899e74:;
			};
		}
	_iter_next_1b7898ea6:;
	}
	_iter_end_1b7898ea6:;;
	return false;;
}



inline jule::Bool _1cdeb7b52_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I32 _29033_i) {
	{
		
		if (((*(_29020_txt)).len() < 3LL)) {
			_case_begin_1b789b371:;
			{
				goto _case_begin_1b789b41a;
			}
		}
		else if (((*(_29020_txt))[_29033_i] != '.')) {
			_case_begin_1b789b41a:;
			{
				goto _case_begin_1b789b492;
			}
		}
		else if ((((*(_29020_txt))[(_29033_i + 1LL)] != 'p') && ((*(_29020_txt))[(_29033_i + 1LL)] != 'P'))) {
			_case_begin_1b789b492:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1b789b2d8:;
			{
				return true;;
			}
		}
		_match_end_1b789b1d9:;
	};
}



inline jule::Bool _1cdeb7ec6_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I32 _30334_i) {
	{
		
		if (((*(_30321_txt)).len() < 4LL)) {
			_case_begin_1b789d142:;
			{
				goto _case_begin_1b789d1a8;
			}
		}
		else if (((*(_30321_txt))[_30334_i] != '.')) {
			_case_begin_1b789d1a8:;
			{
				goto _case_begin_1b789d21e;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 1LL)] != 'f') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'F'))) {
			_case_begin_1b789d21e:;
			{
				goto _case_begin_1b789d296;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 2LL)] != 'p') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'P'))) {
			_case_begin_1b789d296:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1b789d076:;
			{
				return true;;
			}
		}
		_match_end_1b789cb03:;
	};
}



inline jule::Str _1cdeb84c1_octalNum(jule::Slice<jule::U8>* _31814_txt) {
	jule::Str __jule_func_result;
	if (((*(_31814_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31814_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I32 _3269_octalStart = 1LL;;
	jule::Bool _3289_o = false;;
	if (((*(_31814_txt))[1LL] == 'o')) {
		if (((*(_31814_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_3269_octalStart)++;
		_3289_o=true;
	};
	jule::I32 _3379_i = _3269_octalStart;;
	for (; (_3379_i < (*(_31814_txt)).len()); (_3379_i)++) {
		{
			jule::U8 _3399_b = (*(_31814_txt))[_3379_i];;
			if ((_3399_b == '.')) {
				if (_3289_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1cdeb6755_floatNum(_31814_txt, _3379_i);
				return __jule_func_result;;
			};
			if (_1cdeb70d5_isFloatFmtE(_3399_b, _3379_i)) {
				__jule_func_result = _1cdeb538b_floatFmtE(_31814_txt, _3379_i);
				return __jule_func_result;;
			};
			if (((_3399_b != '_') && (!(_1cdeb06e9_IsOctal(_3399_b))))) {
				goto _iter_end_1b78a22bc;
			};
		}
	_iter_next_1b78a22bc:;
	}
	_iter_end_1b78a22bc:;;
	if ((_3379_i == _3269_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_31814_txt)).slice(0LL, _3379_i));
	return __jule_func_result;;
}



inline jule::Str _1cdeb869c_hexNum(jule::Slice<jule::U8>* _36012_txt) {
	jule::Str __jule_func_result;
	if (((*(_36012_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36012_txt))[0LL] != '0') || (((*(_36012_txt))[1LL] != 'x') && ((*(_36012_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I32 _3699_i = 2LL;;
	_julec_label_1b78a625a:;
	for (; (_3699_i < (*(_36012_txt)).len()); (_3699_i)++) {
		{
			jule::U8 _3729_b = (*(_36012_txt))[_3699_i];;
			{
				
				if (_1cdeb7b52_isFloatFmtDotp(_36012_txt, _3699_i)) {
					_case_begin_1b78a6e3c:;
					{
						__jule_func_result = _1cdeb62c1_floatFmtDotp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1cdeb7ec6_isFloatFmtDotfp(_36012_txt, _3699_i)) {
					_case_begin_1b78a6ed6:;
					{
						__jule_func_result = _1cdeb5e4c_floatFmtDotfp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1cdeb7459_isFloatFmtP(_3729_b, _3699_i)) {
					_case_begin_1b78a704c:;
					{
						__jule_func_result = _1cdeb5754_floatFmtP(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1cdeb77cd_isFloatFmtDotnp(_36012_txt, _3699_i)) {
					_case_begin_1b78a70b3:;
					{
						__jule_func_result = _1cdeb5ac8_floatFmtDotnp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (((_3729_b != '_') && (!(_1cdeb09b3_IsHex(_3729_b))))) {
					_case_begin_1b78a7129:;
					{
						goto _iter_end_1b78a639d;
					}
				}
				_match_end_1b78a6d4e:;
			};
		}
	_iter_next_1b78a639d:;
	}
	_iter_end_1b78a639d:;;
	if ((_3699_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_36012_txt)).slice(0LL, _3699_i));
	return __jule_func_result;;
}



inline jule::Str _1cdeb89ee_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I32 _39328_n) {
	jule::Str __jule_func_result;
	if (((*(_39315_txt)).len() < _39328_n)) {
		return __jule_func_result;;
	};
	;
	jule::I32 _3999_i = 2LL;;
	for (; (_3999_i < _39328_n); (_3999_i)++) {
		{
			if ((!(_1cdeb09b3_IsHex((*(_39315_txt))[_3999_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1b78a96ae:;
	}
	_iter_end_1b78a96ae:;;
	__jule_func_result=static_cast<jule::Str>((*(_39315_txt)).slice(0LL, _39328_n));
	return __jule_func_result;;
}



inline jule::Str _1cdeb8cb8_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt) {
	return _1cdeb89ee_hexEscape(_41127_txt, 10LL);;
}



inline jule::Str _1cdeb9082_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt) {
	return _1cdeb89ee_hexEscape(_41630_txt, 6LL);;
}



inline jule::Str _1cdeb934b_hexByteEscape(jule::Slice<jule::U8>* _42119_txt) {
	return _1cdeb89ee_hexEscape(_42119_txt, 4LL);;
}



inline jule::Str _1cdeb9615_byteEscape(jule::Slice<jule::U8>* _42616_txt) {
	jule::Str __jule_func_result;
	if (((*(_42616_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1cdeb06e9_IsOctal((*(_42616_txt))[1LL]))) || (!(_1cdeb06e9_IsOctal((*(_42616_txt))[2LL])))) || (!(_1cdeb06e9_IsOctal((*(_42616_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_42616_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_22a93672d_Log> _1cdebe609_Lex(jule::Ptr<_1cdeb1c4a_File> _80912_f, jule::I32 _80922_mode) {
	if ((_80912_f == nullptr)) {
		return nullptr;;
	};
	_1cdeb9d85_lex _8149_lex = _1cdeb9d85_lex{._field_mode=_80922_mode, ._field_file=_80912_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_1cdebcb9b_newLine(&_8149_lex);
	_1cdeba979_lex(&_8149_lex);
	if ((_8149_lex._field_errors.len() > 0LL)) {
		return _8149_lex._field_errors;;
	};
	(*(_80912_f))._field_Tokens=_8149_lex._field_tokens;
	return nullptr;;
}



inline jule::Bool _1ce087628_FindModuleFile(jule::Slice<jule::Ptr<_2439c6321_DirEntry>>* _1320_dirents) {
	{
		auto expr = _1320_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b79423c3:;
		if (it != expr_end) {
			jule::Ptr<_2439c6321_DirEntry> *_1412_d = it;
			{
				if (((!(_2439ca6aa_IsDir((*((*(_1412_d))))._field_Stat.ptr()))) && (*(*(_1412_d)).alloc)._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1b79423c3:;
			++it;
			goto _iter_begin_1b79423c3;
		}
		_iter_end_1b79423c3:;
	};
	return false;;
}



inline jule::Str _1ce0878d1_FindModuleFileDeep(jule::Str _2527_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_2439c6321_DirEntry>> _2713_dirents = ({
				auto except = static__22ab1b9bd_Read(_2527_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1b7941d0c;
				} jule::Slice<jule::Ptr<_2439c6321_DirEntry>>(nullptr);});
			});;
			jule::Bool _319_exist = _1ce087628_FindModuleFile(&(_2713_dirents));;
			if (_319_exist) {
				return _2527_path;;
			};
			jule::I32 _369_n = _2527_path.len();;
			_2527_path=_22ab1969c_Dir(_2527_path);
			if ((_2527_path.len() == _369_n)) {
				goto _iter_end_1b7941d0c;
			};
		}
	_iter_next_1b7941d0c:;
	}
	_iter_end_1b7941d0c:;;
	return jule::Str();;
}



inline jule::Slice<_22a93672d_Log> _1ce087b9a_CheckModuleFile(jule::Str* _4721_path) {
	jule::Slice<jule::U8> _485_bytes = ({
		auto except = static__2439c8b92_Read(_22ab189a9_Join(jule::Slice<jule::Str>::make({(*(_4721_path)),jule::Str::lit("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_22a93672d_Log>::make({_22a93672d_Log{._field_Kind=static_cast<jule::I32>(0LL), ._field_Text=jule::Str::lit("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _545_s = _22aaeed47_Trim(_243a89b54_BytesStr(_485_bytes), jule::Str::lit(" \n\r\t\v", 5));;
	if ((_545_s.len() != 0LL)) {
		return jule::Slice<_22a93672d_Log>::make({_22a93672d_Log{._field_Kind=static_cast<jule::I32>(0LL), ._field_Text=jule::Str::lit("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Bool _1ce0884e7_IsPub(jule::Str _910_ident) {
	if ((_910_ident[0LL] < 128LLU)) {
		jule::U8 _119_b = _910_ident[0LL];;
		return (('A' <= _119_b) && (_119_b <= 'Z'));;
	};
	jule::I32 _145_r;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22aaa3735_DecodeRuneStr(_910_ident);
		_145_r = __jule_assign_result.__jule_result_arg0;
	});
	return _22a840cb9_IsUpper(_145_r);;
}



inline jule::Bool _1ce0d5ab6_IsAscii(jule::I32 _1112_r) {
	;
	return (_1112_r <= 127LL);;
}



inline jule::I32 _1ce100be1_ToRune(jule::Str _2015_lit) {
	jule::I32 _219_r = static_cast<jule::I32>(0LL);;
	(_2015_lit).mut_slice(1LL, (_2015_lit.len() - 1LL));;
	if (((_2015_lit[0LL] == '\\') && (_2015_lit.len() > 1LL))) {
		jule::I32 _2413_i = 0LL;;
		_219_r=_1ce10184b_runeFromEsqSeq(_2015_lit, &(_2413_i));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22aaa3735_DecodeRuneStr(_2015_lit);
			_219_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _219_r;;
}



inline jule::Str _1ce100e00_ToRawStr(jule::Str _3613_lit) {
	if ((_3613_lit.len() == 2LL)) {
		return jule::Str();;
	};
	return _3613_lit.slice(1LL, (_3613_lit.len() - 1LL));;
}



inline jule::Str _1ce101241_ToStr(jule::Str _4714_lit) {
	if ((_4714_lit.len() == 2LL)) {
		return jule::Str();;
	};
	jule::Bool _539_isPure = true;;
	{
		auto expr = &(_4714_lit);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b794eba5:;
		if (it != expr_end) {
			jule::U8 _5412_b = *it;
			{
				if (((_5412_b >= 128LLU) || (_5412_b == '\\'))) {
					_539_isPure=false;
					goto _iter_end_1b794eba5;
				};
			}
			_iter_next_1b794eba5:;
			++it;
			goto _iter_begin_1b794eba5;
		}
		_iter_end_1b794eba5:;
	};
	if (_539_isPure) {
		return _4714_lit.slice(1LL, (_4714_lit.len() - 1LL));;
	};
	(_4714_lit).mut_slice(1LL, (_4714_lit.len() - 1LL));;
	jule::Slice<jule::U8> _689_s = jule::Slice<jule::U8>::alloc(0LL, _4714_lit.len(), 0);;
	jule::I32 _699_i = 0LL;;
	while ((_699_i < _4714_lit.len())) {
		{
			jule::U8 _719_b = _4714_lit[_699_i];;
			if ((_719_b == '\\')) {
				_1ce101be2_strEsqSeq(&(_689_s), _4714_lit, &(_699_i));
			} else {
				jule::I32 _7513_r;;
				jule::I32 _7516_size;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22aaa3735_DecodeRuneStr(_4714_lit.slice(_699_i));
					_7513_r = __jule_assign_result.__jule_result_arg0;
					_7516_size = __jule_assign_result.__jule_result_arg1;
				});
				_699_i+=_7516_size;
				_689_s=_22aaa47d0_AppendRune(_689_s, _7513_r);
			};
		}
	_iter_next_1b7951bb8:;
	}
	_iter_end_1b7951bb8:;;
	return _243a89e1d_StrFromBytes(_689_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1ce1014c7_tryBtoaCommonEsq(jule::Str _8321_s) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_8321_s.len() < 2LL) || (_8321_s[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _8321_s[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1b795410a:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1b7954836:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1b795489c:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1b7954913:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1b7954979:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1b7954a01:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1b7954a78:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1b7954b00:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1b7954b77:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1b7954bee:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1b795469e:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1ce10184b_runeFromEsqSeq(jule::Str _11319_s, jule::I32* _11332_i) {
	jule::U8 _1145_b;;
	jule::Bool _1148_ok;;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1ce1014c7_tryBtoaCommonEsq(_11319_s.slice((*(_11332_i))));
		_1145_b = __jule_assign_result.__jule_result_arg0;
		_1148_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_11332_i)))++;
	if (_1148_ok) {
		((*(_11332_i)))++;
		return static_cast<jule::I32>(_1145_b);;
	};
	{
		auto &_match_expr{ _11319_s[(*(_11332_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1b7959781:;
			{
				;
				jule::I32 _1249_r = static_cast<jule::I32>(({
					auto except = _22bde6280_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 5LL)), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:124:19"));
					(except.result);
				}));;
				(*(_11332_i))+=5LL;
				return _1249_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1b7958e9a:;
			{
				;
				jule::I32 _1299_r = static_cast<jule::I32>(({
					auto except = _22bde6280_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 9LL)), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:129:19"));
					(except.result);
				}));;
				(*(_11332_i))+=9LL;
				return _1299_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1b7959583:;
			{
				;
				jule::Str _1349_seq = _11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _22bde6280_ParseUint(_1349_seq, 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:136:18"));
					(except.result);
				}));;
			}
		}
		else {
			_case_begin_1b79582b8:;
			{
				;
				jule::Str _1399_seq = _11319_s.slice((*(_11332_i)), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _22bde6280_ParseUint(_1399_seq.slice(1LL), 8LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:141:18"));
					(except.result);
				}));;
			}
		}
		_match_end_1b795850a:;
	};
}



inline void _1ce101be2_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I32* _14545_i) {
	jule::I32 _1465_r = _1ce10184b_runeFromEsqSeq(_14532_s, _14545_i);;
	if ((_1465_r <= 255LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = (*(_14519_buf)); __jule_push_dest.push(static_cast<jule::U8>(_1465_r)); };
		return;;
	};
	(*(_14519_buf))=_22aaa47d0_AppendRune((*(_14519_buf)), _1465_r);
}



inline jule::I32 _1ce23067d_findFormatPrefix(jule::Slice<jule::U8>* _1122_bytes, jule::I32 _1141_i) {
	while ((_1141_i < (*(_1122_bytes)).len())) {
		{
			jule::I32 _139_r;;
			jule::I32 _1312_size;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22aaa33e4_DecodeRune((*(_1122_bytes)).slice(_1141_i));
				_139_r = __jule_assign_result.__jule_result_arg0;
				_1312_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_139_r == '{')) {
				return _1141_i;;
			};
			_1141_i+=_1312_size;
		}
	_iter_next_1b79854d2:;
	}
	_iter_end_1b79854d2:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1ce2309ad_getFormatRange(jule::I32* _2724_i, jule::Slice<jule::U8>* _2737_bytes) {
	jule::I32 _285_start = (*(_2724_i));;
	jule::I32 _299_braces = 0LL;;
	while (((*(_2724_i)) < (*(_2737_bytes)).len())) {
		{
			jule::I32 _319_r;;
			jule::I32 _3112_size;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22aaa33e4_DecodeRune((*(_2737_bytes)).slice((*(_2724_i))));
				_319_r = __jule_assign_result.__jule_result_arg0;
				_3112_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2724_i))+=_3112_size;
			{
				auto &_match_expr{ _319_r };
				
				if (_match_expr == '{') {
					_case_begin_1b7987dec:;
					{
						(_299_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1b7988062:;
					{
						(_299_braces)--;
						if ((_299_braces == 0LL)) {
							return (*(_2737_bytes)).slice(_285_start, (*(_2724_i)));;
						};
					}
				}
				_match_end_1b7987e85:;
			};
		}
	_iter_next_1b7986ea6:;
	}
	_iter_end_1b7986ea6:;;
	return nullptr;;
}



inline void _1ce230c99_FmtByDefault(_22ab0b88c_StrBuilder* _4722_buf, jule::Any* _4740_arg) {
	if (((*(_4740_arg)) == nullptr)) {
		_22ab154bc_WriteStr(_4722_buf, jule::Str::lit("<nil>", 5));
		return;;
	};
	{
		auto &_match_expr{ (*(_4740_arg)) };
		
		if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1b7989c56:;
			{
				_22ab154bc_WriteStr(_4722_buf, _22bde129c_FmtFloat(static_cast<jule::F64>((*(_4740_arg)).cast<jule::F32>(&__jule_any_type135)), 'g', -1LL, 32LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1b79873d5:;
			{
				_22ab154bc_WriteStr(_4722_buf, _22bde129c_FmtFloat((*(_4740_arg)).cast<jule::F64>(&__jule_any_type5), 'g', -1LL, 64LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1b7989096:;
			{
				_22ab154bc_WriteStr(_4722_buf, _22be07cdb_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I8>(&__jule_any_type136)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type137) {
			_case_begin_1b798910c:;
			{
				_22ab154bc_WriteStr(_4722_buf, _22be07cdb_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I16>(&__jule_any_type137)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1b79896e5:;
			{
				_22ab154bc_WriteStr(_4722_buf, _22be07cdb_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I32>(&__jule_any_type6)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1b798975b:;
			{
				_22ab154bc_WriteStr(_4722_buf, _22be07cdb_FmtInt((*(_4740_arg)).cast<jule::I64>(&__jule_any_type1), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1b7989d22:;
			{
				_22ab154bc_WriteStr(_4722_buf, _22be07923_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U8>(&__jule_any_type134)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type138) {
			_case_begin_1b7989d88:;
			{
				_22ab154bc_WriteStr(_4722_buf, _22be07923_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U16>(&__jule_any_type138)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type139) {
			_case_begin_1b7989dee:;
			{
				_22ab154bc_WriteStr(_4722_buf, _22be07923_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U32>(&__jule_any_type139)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1b7989e65:;
			{
				_22ab154bc_WriteStr(_4722_buf, _22be07923_FmtUint((*(_4740_arg)).cast<jule::U64>(&__jule_any_type2), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1b7989ecb:;
			{
				_22ab154bc_WriteStr(_4722_buf, (*(_4740_arg)).cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1b798a042:;
			{
				if ((*(_4740_arg)).cast<jule::Bool>(&__jule_any_type3)) {
					_22ab154bc_WriteStr(_4722_buf, jule::Str::lit("true", 4));
				} else {
					_22ab154bc_WriteStr(_4722_buf, jule::Str::lit("false", 5));
				};
			}
		}
		else {
			_case_begin_1b7989030:;
			{
				_22ab154bc_WriteStr(_4722_buf, jule::to_str((*(_4740_arg))));
			}
		}
		_match_end_1b7989580:;
	};
}



inline void _1ce2311b7_applyFmtByDefault(_22ab0b88c_StrBuilder* _8627_buf, jule::I32* _8649_j, jule::Slice<jule::Any> _8657_args) {
	jule::Any _875_arg = _8657_args[(*(_8649_j))];;
	((*(_8649_j)))++;
	_1ce230c99_FmtByDefault(_8627_buf, &(_875_arg));
}



inline void _1ce2315d5_applyFmt(jule::Slice<jule::U8>* _9418_fmt, _22ab0b88c_StrBuilder* _9436_buf, jule::I32* _9458_j, jule::Slice<jule::Any> _9466_args) {
	if (((*(_9418_fmt)).len() == 2LL)) {
		_1ce2311b7_applyFmtByDefault(_9436_buf, _9458_j, _9466_args);
		return;;
	};
	if (((((((*(_9418_fmt)).len() == 4LL) && ((*(_9418_fmt))[0LL] == '{')) && ((*(_9418_fmt))[1LL] == '{')) && ((*(_9418_fmt))[2LL] == '}')) && ((*(_9418_fmt))[3LL] == '}'))) {
		_22ab154bc_WriteStr(_9436_buf, jule::Str::lit("{}", 2));
		return;;
	};
	_22ab15214_Write(_9436_buf, (*(_9418_fmt)));
}



inline jule::Slice<jule::U8> _1ce231959_Format(jule::Str _11511_fmt, jule::Slice<jule::Any> _11521_args) {
	jule::Slice<jule::U8> _1169_fmtBytes = _243a898bd_StrBytes(_11511_fmt);;
	if ((_11521_args.len() == 0LL)) {
		return _1169_fmtBytes;;
	};
	jule::I32 _1209_i = _1ce23067d_findFormatPrefix(&(_1169_fmtBytes), 0LL);;
	if ((_1209_i == -1LL)) {
		return _1169_fmtBytes;;
	};
	jule::I32 _1249_j = 0LL;;
	jule::I32 _1259_last = 0LL;;
	_22ab0b88c_StrBuilder _1269_buf = static__22ab0bb56_New(_11511_fmt.len());;
	for (; (_1209_i != -1LL); _1209_i=_1ce23067d_findFormatPrefix(&(_1169_fmtBytes), _1209_i)) {
		{
			_22ab15214_Write(&_1269_buf, _1169_fmtBytes.slice(_1259_last, _1209_i));
			jule::Slice<jule::U8> _12913_format = _1ce2309ad_getFormatRange(&(_1209_i), &(_1169_fmtBytes));;
			if ((_12913_format == nullptr)) {
				goto _iter_next_1b7997280;
			};
			_1ce2315d5_applyFmt(&(_12913_format), &(_1269_buf), &(_1249_j), _11521_args);
			if ((_1249_j >= _11521_args.len())) {
				_22ab15214_Write(&_1269_buf, _1169_fmtBytes.slice(_1209_i));
				_1259_last=_1169_fmtBytes.len();
				goto _iter_end_1b7997280;
			};
			_1259_last=_1209_i;
		}
	_iter_next_1b7997280:;
	}
	_iter_end_1b7997280:;;
	if ((_1259_last < _1169_fmtBytes.len())) {
		_22ab15214_Write(&_1269_buf, _1169_fmtBytes.slice(_1259_last));
	};
	return _22ab16765_Buf(&_1269_buf);;
}



inline jule::Str _1ce23397d_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args) {
	return _243a89e1d_StrFromBytes(_1ce231959_Format(_3111_fmt, _3121_args));;
}



inline jule::Bool _1ce00cb0e_parameterUsesGenerics(jule::Ptr<_1ce009886_ParamIns>* _38431_p, jule::Slice<jule::Ptr<_1cdecdc9a_GenericDecl>>* _38446_generics) {
	if (_1ce006575_IsSelf((*((*(_38431_p))))._field_Decl.ptr())) {
		return false;;
	};
	return _1ce16842e_kindUsesGenerics(&((*((*(_38431_p))))._field_Kind), _38446_generics);;
}



inline jule::Ptr<_1ce154d99_TypeSymbol> _1ce010381_buildType(jule::Ptr<_1cdec1a90_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ce154d99_TypeSymbol>(_1ce154d99_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_1ce11cd84_Value> _1ce01068e_buildExpr(jule::Ptr<_1cdec5dc4_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ce11cd84_Value>(_1ce11cd84_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_1ce14bdd5_TypeAlias> _1ce010958_buildTypeAlias(jule::Ptr<_1cded85ac_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1ce14bdd5_TypeAlias>(_1ce14bdd5_TypeAlias{._field_Scope=(*(_11223_decl))._field_Scope, ._field_Public=(*_11223_decl.alloc)._field_Public, ._field_Binded=(*_11223_decl.alloc)._field_Binded, ._field_Token=(*_11223_decl.alloc)._field_Token, ._field_Ident=(*_11223_decl.alloc)._field_Ident, ._field_Kind=_1ce010381_buildType((*_11223_decl.alloc)._field_Kind), });;
}



inline jule::Ptr<_1cdedea69_Field> _1ce010c99_buildField(jule::Ptr<_1cdedbe62_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1cdedea69_Field>(_1cdedea69_Field{._field_Token=(*(_12319_decl))._field_Token, ._field_Public=(*_12319_decl.alloc)._field_Public, ._field_Mutable=(*_12319_decl.alloc)._field_Mutable, ._field_Ident=(*_12319_decl.alloc)._field_Ident, ._field_Kind=_1ce010381_buildType((*_12319_decl.alloc)._field_Kind), ._field_Default=(*_12319_decl.alloc)._field_Default});;
}



inline jule::Slice<jule::Ptr<_1cdedea69_Field>> _1ce011030_buildFields(jule::Slice<jule::Ptr<_1cdedbe62_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_1cdedea69_Field>> _1359_fields = jule::Slice<jule::Ptr<_1cdedea69_Field>>::alloc(0LL, (*(_13421_decls)).len());;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7bb7b43:;
		if (it != expr_end) {
			jule::Ptr<_1cdedbe62_FieldDecl> _13617_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1cdedea69_Field>> &__jule_push_dest = _1359_fields; __jule_push_dest.push(_1ce010c99_buildField(_13617_decl)); };
			}
			_iter_next_1b7bb7b43:;
			++it;
			goto _iter_begin_1b7bb7b43;
		}
		_iter_end_1b7bb7b43:;
	};
	return _1359_fields;;
}



inline jule::Ptr<_1cdee2990_Struct> _1ce0112e9_buildStruct(jule::Ptr<_1cdedc858_StructDecl> _14220_decl) {
	return jule::new_ptr<_1cdee2990_Struct>(_1cdee2990_Struct{._field_Token=(*(_14220_decl))._field_Token, ._field_Ident=(*_14220_decl.alloc)._field_Ident, ._field_Fields=_1ce011030_buildFields(&((*_14220_decl.alloc)._field_Fields)), ._field_Public=(*_14220_decl.alloc)._field_Public, ._field_Binded=(*_14220_decl.alloc)._field_Binded, ._field_Directives=(*_14220_decl.alloc)._field_Directives, ._field_Generics=(*_14220_decl.alloc)._field_Generics, });;
}



inline jule::Ptr<_1ce005e59_Param> _1ce0115b3_buildParam(jule::Ptr<_1cded22ed_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1ce005e59_Param>(_1ce005e59_Param{._field_Token=(*(_15419_decl))._field_Token, ._field_Mutable=(*_15419_decl.alloc)._field_Mutable, ._field_Variadic=(*_15419_decl.alloc)._field_Variadic, ._field_Reference=(*_15419_decl.alloc)._field_Reference, ._field_Kind=_1ce010381_buildType((*_15419_decl.alloc)._field_Kind), ._field_Ident=(*_15419_decl.alloc)._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1ce005e59_Param>> _1ce01198c_buildParams(jule::Slice<jule::Ptr<_1cded22ed_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_1ce005e59_Param>> _1669_params = jule::Slice<jule::Ptr<_1ce005e59_Param>>::alloc(0LL, (*(_16521_decls)).len());;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7bbd82a:;
		if (it != expr_end) {
			jule::Ptr<_1cded22ed_ParamDecl> _16717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ce005e59_Param>> &__jule_push_dest = _1669_params; __jule_push_dest.push(_1ce0115b3_buildParam(_16717_decl)); };
			}
			_iter_next_1b7bbd82a:;
			++it;
			goto _iter_begin_1b7bbd82a;
		}
		_iter_end_1b7bbd82a:;
	};
	return _1669_params;;
}



inline jule::Ptr<_1ce0056c8_RetType> _1ce011bce_buildRetType(jule::Ptr<_1cdec4983_RetTypeDecl> _17321_decl) {
	if ((((*(_17321_decl))._field_Idents == nullptr) && ((*_17321_decl.alloc)._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1ce0056c8_RetType>(_1ce0056c8_RetType{._field_Kind=_1ce010381_buildType((*_17321_decl.alloc)._field_Kind), ._field_Idents=(*_17321_decl.alloc)._field_Idents});;
}



inline jule::Ptr<_1ce00792d_Fn> _1ce011e98_buildFunc(jule::Ptr<_1cded3750_FnDecl> _18318_decl) {
	return jule::new_ptr<_1ce00792d_Fn>(_1ce00792d_Fn{._field_Token=(*(_18318_decl))._field_Token, ._field_Global=(*_18318_decl.alloc)._field_Global, ._field_Unsafety=(*_18318_decl.alloc)._field_Unsafety, ._field_Public=(*_18318_decl.alloc)._field_Public, ._field_Binded=(*_18318_decl.alloc)._field_Binded, ._field_Statically=(*_18318_decl.alloc)._field_Statically, ._field_Exceptional=(*_18318_decl.alloc)._field_Exceptional, ._field_Ident=(*_18318_decl.alloc)._field_Ident, ._field_Directives=(*_18318_decl.alloc)._field_Directives, ._field_Scope=(*_18318_decl.alloc)._field_Scope, ._field_Generics=(*_18318_decl.alloc)._field_Generics, ._field_Result=_1ce011bce_buildRetType((*_18318_decl.alloc)._field_Result), ._field_Params=_1ce01198c_buildParams(&((*_18318_decl.alloc)._field_Params)), });;
}



inline jule::Slice<jule::Ptr<_1ce00792d_Fn>> _1ce012262_buildMethods(jule::Slice<jule::Ptr<_1cded3750_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_1ce00792d_Fn>> _2029_methods = jule::Slice<jule::Ptr<_1ce00792d_Fn>>::alloc(0LL, (*(_20122_decls)).len());;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7bc072d:;
		if (it != expr_end) {
			jule::Ptr<_1cded3750_FnDecl> _20317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ce00792d_Fn>> &__jule_push_dest = _2029_methods; __jule_push_dest.push(_1ce011e98_buildFunc(_20317_decl)); };
			}
			_iter_next_1b7bc072d:;
			++it;
			goto _iter_begin_1b7bc072d;
		}
		_iter_end_1b7bc072d:;
	};
	return _2029_methods;;
}



inline jule::Slice<jule::Ptr<_1ce154d99_TypeSymbol>> _1ce01252b_buildTraitInherits(jule::Slice<jule::Ptr<_1cdec1a90_TypeDecl>>* _20928_inherits) {
	jule::Slice<jule::Ptr<_1ce154d99_TypeSymbol>> _2109_symbols = jule::Slice<jule::Ptr<_1ce154d99_TypeSymbol>>::alloc(0LL, (*(_20928_inherits)).len());;
	{
		auto expr = _20928_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7bc449b:;
		if (it != expr_end) {
			jule::Ptr<_1cdec1a90_TypeDecl> _21117_it = *it;
			{
				{ jule::Slice<jule::Ptr<_1ce154d99_TypeSymbol>> &__jule_push_dest = _2109_symbols; __jule_push_dest.push(_1ce010381_buildType(_21117_it)); };
			}
			_iter_next_1b7bc449b:;
			++it;
			goto _iter_begin_1b7bc449b;
		}
		_iter_end_1b7bc449b:;
	};
	return _2109_symbols;;
}



inline jule::Ptr<_1ce01ac0a_Trait> _1ce0127e5_buildTrait(jule::Ptr<_1cdedd095_TraitDecl> _21719_decl) {
	return jule::new_ptr<_1ce01ac0a_Trait>(_1ce01ac0a_Trait{._field_Token=(*(_21719_decl))._field_Token, ._field_Ident=(*_21719_decl.alloc)._field_Ident, ._field_Public=(*_21719_decl.alloc)._field_Public, ._field_Inherits=_1ce01252b_buildTraitInherits(&((*_21719_decl.alloc)._field_Inherits)), ._field_Methods=_1ce012262_buildMethods(&((*_21719_decl.alloc)._field_Methods)), });;
}



inline jule::Ptr<_1ce01c899_EnumItem> _1ce012aae_buildEnumItem(jule::Ptr<_1cdeda14c_EnumItemDecl> _22722_decl) {
	return jule::new_ptr<_1ce01c899_EnumItem>(_1ce01c899_EnumItem{._field_Token=(*(_22722_decl))._field_Token, ._field_Ident=(*_22722_decl.alloc)._field_Ident, ._field_Value=_1ce01068e_buildExpr((*_22722_decl.alloc)._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1ce01c899_EnumItem>> _1ce012d78_buildEnumItems(jule::Slice<jule::Ptr<_1cdeda14c_EnumItemDecl>>* _23524_decls) {
	jule::Slice<jule::Ptr<_1ce01c899_EnumItem>> _2369_items = jule::Slice<jule::Ptr<_1ce01c899_EnumItem>>::alloc(0LL, (*(_23524_decls)).len());;
	{
		auto expr = _23524_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7bc6866:;
		if (it != expr_end) {
			jule::Ptr<_1cdeda14c_EnumItemDecl> _23717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ce01c899_EnumItem>> &__jule_push_dest = _2369_items; __jule_push_dest.push(_1ce012aae_buildEnumItem(_23717_decl)); };
			}
			_iter_next_1b7bc6866:;
			++it;
			goto _iter_begin_1b7bc6866;
		}
		_iter_end_1b7bc6866:;
	};
	return _2369_items;;
}



inline jule::Ptr<_1ce01d416_Enum> _1ce013373_buildEnum(jule::Ptr<_1cdedac0d_EnumDecl> _24318_decl) {
	return jule::new_ptr<_1ce01d416_Enum>(_1ce01d416_Enum{._field_Token=(*(_24318_decl))._field_Token, ._field_Public=(*_24318_decl.alloc)._field_Public, ._field_Ident=(*_24318_decl.alloc)._field_Ident, ._field_Kind=_1ce010381_buildType((*_24318_decl.alloc)._field_Kind), ._field_Items=_1ce012d78_buildEnumItems(&((*_24318_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1ce01e549_TypeEnumItem> _1ce01354e_buildTypeEnumItem(jule::Ptr<_1cdedb538_TypeEnumItemDecl> _25326_decl) {
	return jule::new_ptr<_1ce01e549_TypeEnumItem>(_1ce01e549_TypeEnumItem{._field_Token=(*(_25326_decl))._field_Token, ._field_Ident=(*_25326_decl.alloc)._field_Ident, ._field_Kind=_1ce010381_buildType((*_25326_decl.alloc)._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1ce01e549_TypeEnumItem>> _1ce0137e6_buildTypeEnumItems(jule::Slice<jule::Ptr<_1cdedb538_TypeEnumItemDecl>>* _26128_decls) {
	jule::Slice<jule::Ptr<_1ce01e549_TypeEnumItem>> _2629_items = jule::Slice<jule::Ptr<_1ce01e549_TypeEnumItem>>::alloc(0LL, (*(_26128_decls)).len());;
	{
		auto expr = _26128_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7bcaedb:;
		if (it != expr_end) {
			jule::Ptr<_1cdedb538_TypeEnumItemDecl> _26317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ce01e549_TypeEnumItem>> &__jule_push_dest = _2629_items; __jule_push_dest.push(_1ce01354e_buildTypeEnumItem(_26317_decl)); };
			}
			_iter_next_1b7bcaedb:;
			++it;
			goto _iter_begin_1b7bcaedb;
		}
		_iter_end_1b7bcaedb:;
	};
	return _2629_items;;
}



inline jule::Ptr<_1ce01eb21_TypeEnum> _1ce013ab0_buildTypeEnum(jule::Ptr<_1cdedbb98_TypeEnumDecl> _26922_decl) {
	return jule::new_ptr<_1ce01eb21_TypeEnum>(_1ce01eb21_TypeEnum{._field_Token=(*(_26922_decl))._field_Token, ._field_Public=(*_26922_decl.alloc)._field_Public, ._field_Ident=(*_26922_decl.alloc)._field_Ident, ._field_Items=_1ce0137e6_buildTypeEnumItems(&((*_26922_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1ce0b4105_Var> _1ce013d79_buildVar(jule::Ptr<_1cded490a_VarDecl> _27817_decl) {
	return jule::new_ptr<_1ce0b4105_Var>(_1ce0b4105_Var{._field_Token=(*(_27817_decl))._field_Token, ._field_Ident=(*_27817_decl.alloc)._field_Ident, ._field_Binded=(*_27817_decl.alloc)._field_Binded, ._field_Constant=(*_27817_decl.alloc)._field_Constant, ._field_Mutable=(*_27817_decl.alloc)._field_Mutable, ._field_Public=(*_27817_decl.alloc)._field_Public, ._field_Statically=(*_27817_decl.alloc)._field_Statically, ._field_Reference=(*_27817_decl.alloc)._field_Reference, ._field_Kind=_1ce010381_buildType((*_27817_decl.alloc)._field_Kind), ._field_Value=_1ce01068e_buildExpr((*_27817_decl.alloc)._field_Expr), ._field_Refers=static__1ce00dcec_new(), ._field_Directives=(*_27817_decl.alloc)._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_1ce0b4105_Var>> _1ce014143_buildVars(jule::Slice<jule::Ptr<_1cded490a_VarDecl>> _29518_decls) {
	jule::Slice<jule::Ptr<_1ce0b4105_Var>> _2969_vars = jule::Slice<jule::Ptr<_1ce0b4105_Var>>::alloc(0LL, _29518_decls.len());;
	{
		auto expr = &(_29518_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7bcca26:;
		if (it != expr_end) {
			jule::Ptr<_1cded490a_VarDecl> _29717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ce0b4105_Var>> &__jule_push_dest = _2969_vars; __jule_push_dest.push(_1ce013d79_buildVar(_29717_decl)); };
			}
			_iter_next_1b7bcca26:;
			++it;
			goto _iter_begin_1b7bcca26;
		}
		_iter_end_1b7bcca26:;
	};
	return _2969_vars;;
}



inline jule::Ptr<_1ce044371_Impl> _1ce01440c_buildImpl(jule::Ptr<_1cdedd705_Impl> _30318_decl) {
	return jule::new_ptr<_1ce044371_Impl>(_1ce044371_Impl{._field_Base=(*(_30318_decl))._field_Base, ._field_Dest=(*_30318_decl.alloc)._field_Dest, ._field_Methods=_1ce012262_buildMethods(&((*_30318_decl.alloc)._field_Methods)), ._field_Statics=_1ce014143_buildVars((*_30318_decl.alloc)._field_Statics)});;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce03e7bc_buildAsComptimeMethodData(jule::Ptr<_1ce00a832_FnIns>* _142135_f) {
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>((*(_142135_f)), 1)}), });;
}



inline jule::Ptr<_1ce06b0ac_ImportInfo> _1ce03eaca_findComptimePackage(jule::Ptr<_1ce08b42e_Sema>* _142929_s) {
	return _1ce08b8c4_SelectPackage((*(_142929_s)).ptr(), jule::Fn<jule::Bool(jule::Ptr<_1ce06b0ac_ImportInfo>)>([=](jule::Ptr<_1ce06b0ac_ImportInfo> _143028_pkg) mutable -> jule::Bool {
		return (*(_143028_pkg))._field_LinkPath.equal("std::comptime", 13);;
	}));;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce03ee4e_buildComptimeTypeInfoData(jule::Ptr<_1ce08b42e_Sema>* _143535_s, jule::Ptr<_1ce14cbc7_TypeKind>* _143550_t) {
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(_1ce08ac69_pushComptimeTypeInfo((*((*(_143535_s))))._field_meta.ptr(), _143550_t), 15)}), });;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce040290_buildComptimeValue(jule::Ptr<_1ce11bc0c_Data>* _144328_d) {
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(jule::new_ptr<_1ce038ab3_comptimeValue>(_1ce038ab3_comptimeValue{._field_data=(*(_144328_d))}), 16)}), });;
}



inline jule::Str _1ce04331a_toStrConstraints(jule::Ptr<_1ce14b2e1_InsGeneric> _14321_g) {
	_22ab0b88c_StrBuilder _1449_sb = static__22ab0bb56_New(128LL);;
	{
		auto expr = &((*_14321_g.alloc)._field_Constraint);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b59ab20d:;
		if (it != expr_end) {
			jule::I32 _1459_i = it - expr->begin();
			jule::Ptr<_1ce14cbc7_TypeKind> *_14512_c = it;
			{
				_22ab154bc_WriteStr(&_1449_sb, _1ce14d090_Str((*(_14512_c)).ptr()));
				if ((((*(_14321_g))._field_Constraint.len() - _1459_i) > 1LL)) {
					_22ab154bc_WriteStr(&_1449_sb, jule::Str::lit(" | ", 3));
				};
			}
			_iter_next_1b59ab20d:;
			++it;
			_1459_i++;
			goto _iter_begin_1b59ab20d;
		}
		_iter_end_1b59ab20d:;
	};
	return _22ab15cb4_Str(&_1449_sb);;
}



inline jule::Bool _1ce0436d3_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1ce14cbc7_TypeKind>* _15434_g) {
	{
		auto &_match_expr{ (*(_15421_c)) };
		
		if (_match_expr == jule::Str::lit("signed", 6)) {
			_case_begin_1b59ad056:;
			{
				jule::Ptr<_1ce1557a1_Prim> _1579_prim = _1ce150328_Prim((*(_15434_g)).ptr());;
				if ((_1579_prim == nullptr)) {
					return false;;
				};
				return _22be15d93_IsSigNum((*(_1579_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("unsigned", 8)) {
			_case_begin_1b59ad0bc:;
			{
				jule::Ptr<_1ce1557a1_Prim> _1639_prim = _1ce150328_Prim((*(_15434_g)).ptr());;
				if ((_1639_prim == nullptr)) {
					return false;;
				};
				return _22be15238_IsUnsigInt((*(_1639_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("float", 5)) {
			_case_begin_1b59ad133:;
			{
				jule::Ptr<_1ce1557a1_Prim> _1699_prim = _1ce150328_Prim((*(_15434_g)).ptr());;
				if ((_1699_prim == nullptr)) {
					return false;;
				};
				return _22be15843_IsFloat((*(_1699_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("numeric", 7)) {
			_case_begin_1b59ad1aa:;
			{
				jule::Ptr<_1ce1557a1_Prim> _1759_prim = _1ce150328_Prim((*(_15434_g)).ptr());;
				if ((_1759_prim == nullptr)) {
					return false;;
				};
				return _22be15ac9_IsNum((*(_1759_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("mutable", 7)) {
			_case_begin_1b59ad375:;
			{
				return _1ce14e558_Mutable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("immutable", 9)) {
			_case_begin_1b59ad3db:;
			{
				return (!(_1ce14e558_Mutable((*(_15434_g)).ptr())));;
			}
		}
		else if (_match_expr == jule::Str::lit("comparable", 10)) {
			_case_begin_1b59ad452:;
			{
				return _1ce14e2c2_Comparable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("ordered", 7)) {
			_case_begin_1b59ad4b8:;
			{
				return _1ce14e7de_Ordered((*(_15434_g)).ptr());;
			}
		}
		else {
			_case_begin_1b59ac495:;
			{
				return false;;
			}
		}
		_match_end_1b59acd58:;
	};
}



inline jule::Bool _1ce04399c_isBuiltinConstraint(jule::Str* _19325_ident) {
	{
		auto expr = &(_1ce0416d1_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b59b3dc5:;
		if (it != expr_end) {
			jule::Str *_19412_bc = it;
			{
				if (((*(_19325_ident)) == (*(_19412_bc)))) {
					return true;;
				};
			}
			_iter_next_1b59b3dc5:;
			++it;
			goto _iter_begin_1b59b3dc5;
		}
		_iter_end_1b59b3dc5:;
	};
	return false;;
}



inline jule::Ptr<_1ce051acb_scopeChecker> _1ce0465a4_newScopeCheckerBase(jule::Ptr<_1ce08b42e_Sema>* _5829_s, jule::Ptr<_1ce00a832_FnIns> _5843_owner) {
	return jule::new_ptr<_1ce051acb_scopeChecker>(_1ce051acb_scopeChecker{._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_1ce116894_SymbolTable>(), });;
}



inline jule::Ptr<_1ce051acb_scopeChecker> _1ce04696c_newScopeChecker(jule::Ptr<_1ce08b42e_Sema>* _6625_s, jule::Ptr<_1ce00a832_FnIns> _6639_owner) {
	jule::Ptr<_1ce051acb_scopeChecker> _679_base = _1ce0465a4_newScopeCheckerBase(_6625_s, _6639_owner);;
	(*(_679_base))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1ce050635_scopeLabel>>>(nullptr);
	(*_679_base.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1ce050bb8_scopeGoto>>>(nullptr);
	return _679_base;;
}



inline jule::Ptr<_1ce050635_scopeLabel> _1ce046ce1_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_1ce051acb_scopeChecker> _7637_scope) {
	jule::Ptr<_1ce050635_scopeLabel> _779_label = _1ce0555d5_findLabelScope(_7637_scope, _7621_ident);;
	while ((_779_label == nullptr)) {
		{
			if ((((*_7637_scope.alloc)._field_parent == nullptr) || ((*_7637_scope.alloc)._field_owner != nullptr))) {
				return nullptr;;
			};
			_7637_scope=(*_7637_scope.alloc)._field_parent;
			_779_label=_1ce0555d5_findLabelScope(_7637_scope, _7621_ident);
		}
	_iter_next_1b59cba8b:;
	}
	_iter_end_1b59cba8b:;;
	return _779_label;;
}



inline jule::Bool _1ce0471a9_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1ce0497c7_Scope>* _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1b7e61d98:;
			{
				jule::Ptr<_1cdeebb97_FnCallExprModel> _939_fcem = _9021_Model.unsafe_cast_ptr<_1cdeebb97_FnCallExprModel>();;
				if (((*(_939_fcem))._field_Except == (*(_9034_sc)))) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b7e608ad:;
			{
				jule::Ptr<_1ce11bc0c_Data> _989_d = _9021_Model.unsafe_cast_ptr<_1ce11bc0c_Data>();;
				return _1ce0471a9_modelIsGotoScope((*(_989_d))._field_Model, _9034_sc);;
			}
		}
		_match_end_1b7e61d43:;
	};
	return false;;
}



inline jule::Bool _1ce04752d_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_1ce0497c7_Scope>* _10434_sc) {
	{
		auto &_match_expr{ (*(_10421_stmt)) };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1b7e64395:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1ce0497c7_Scope>(&__jule_any_type22) == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1b7e6440b:;
			{
				return ((*((*(_10421_stmt)).cast_ptr<_1ce04a70c_InfIter>(&__jule_any_type36)))._field_Scope == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1b7e64472:;
			{
				jule::Ptr<_1ce04b60e_RangeIter> _1119_it = (*(_10421_stmt)).cast_ptr<_1ce04b60e_RangeIter>(&__jule_any_type40);;
				return (((*(_1119_it))._field_Scope == (*(_10434_sc))) || _1ce0471a9_modelIsGotoScope((*((*_1119_it.alloc)._field_Expr))._field_Model, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1b7e64032:;
			{
				jule::Ptr<_1ce04abb3_WhileIter> _1149_it = (*(_10421_stmt)).cast_ptr<_1ce04abb3_WhileIter>(&__jule_any_type38);;
				return ((((*(_1149_it))._field_Scope == (*(_10434_sc))) || _1ce0471a9_modelIsGotoScope((*_1149_it.alloc)._field_Expr, _10434_sc)) || _1ce0471a9_modelIsGotoScope((*_1149_it.alloc)._field_Next, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1b7e64098:;
			{
				jule::Ptr<_1ce04d90d_Match> _1199_m = (*(_10421_stmt)).cast_ptr<_1ce04d90d_Match>(&__jule_any_type47);;
				{
					auto expr = &((*(_1199_m))._field_Cases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7e68894:;
					if (it != expr_end) {
						jule::Ptr<_1ce04e436_Case> *_12016_c = it;
						{
							if (((*((*(_12016_c))))._field_Scope == (*(_10434_sc)))) {
								return true;;
							};
							{
								auto expr = &((*(*(_12016_c)).alloc)._field_Exprs);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b7e694dd:;
								if (it != expr_end) {
									jule::Ptr<_1ce11bc0c_Data> *_12420_expr = it;
									{
										if (_1ce0471a9_modelIsGotoScope((*((*(_12420_expr))))._field_Model, _10434_sc)) {
											return true;;
										};
									}
									_iter_next_1b7e694dd:;
									++it;
									goto _iter_begin_1b7e694dd;
								}
								_iter_end_1b7e694dd:;
							};
						}
						_iter_next_1b7e68894:;
						++it;
						goto _iter_begin_1b7e68894;
					}
					_iter_end_1b7e68894:;
				};
				return (((*_1199_m.alloc)._field_Default != nullptr) && ((*(*_1199_m.alloc)._field_Default.alloc)._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1b7e6410e:;
			{
				jule::Ptr<_1ce04a410_Conditional> _1329_c = (*(_10421_stmt)).cast_ptr<_1ce04a410_Conditional>(&__jule_any_type35);;
				{
					auto expr = &((*(_1329_c))._field_Elifs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7e6b3ad:;
					if (it != expr_end) {
						jule::Ptr<_1ce049be5_If> *_13316_elif = it;
						{
							if ((((*((*(_13316_elif))))._field_Scope == (*(_10434_sc))) || _1ce0471a9_modelIsGotoScope((*(*(_13316_elif)).alloc)._field_Expr, _10434_sc))) {
								return true;;
							};
						}
						_iter_next_1b7e6b3ad:;
						++it;
						goto _iter_begin_1b7e6b3ad;
					}
					_iter_end_1b7e6b3ad:;
				};
				return (((*_1329_c.alloc)._field_Default != nullptr) && ((*(*_1329_c.alloc)._field_Default.alloc)._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b7e64175:;
			{
				jule::Ptr<_1ce11bc0c_Data> _1409_d = (*(_10421_stmt)).cast_ptr<_1ce11bc0c_Data>(&__jule_any_type24);;
				return _1ce0471a9_modelIsGotoScope((*(_1409_d))._field_Model, _10434_sc);;
			}
		}
		else {
			_case_begin_1b7e6233d:;
			{
				return false;;
			}
		}
		_match_end_1b7e63b03:;
	};
}



inline jule::I32 _1ce0478a2_countMatchType(jule::Ptr<_1ce04d90d_Match>* _14720_m, jule::Ptr<_1ce14cbc7_TypeKind>* _14732_t) {
	jule::I32 _1489_n = 0LL;;
	jule::Str _1495_kind = _1ce14d090_Str((*(_14732_t)).ptr());;
	_julec_label_1b7e6e2e5:;
	{
		auto expr = &((*((*(_14720_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7e6e724:;
		if (it != expr_end) {
			jule::Ptr<_1ce04e436_Case> *_15112_c = it;
			{
				if (((*(_15112_c)) == nullptr)) {
					goto _iter_next_1b7e6e724;
				};
				{
					auto expr = &((*((*(_15112_c))))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7e7044a:;
					if (it != expr_end) {
						jule::Ptr<_1ce11bc0c_Data> *_15616_expr = it;
						{
							if (((*(_15616_expr)) == nullptr)) {
								goto _iter_end_1b7e6e724;
							};
							if ((_1495_kind == _1ce14d090_Str((*((*(_15616_expr))))._field_Model.cast_ptr<_1ce14cbc7_TypeKind>(&__jule_any_type84).ptr()))) {
								(_1489_n)++;
							};
						}
						_iter_next_1b7e7044a:;
						++it;
						goto _iter_begin_1b7e7044a;
					}
					_iter_end_1b7e7044a:;
				};
			}
			_iter_next_1b7e6e724:;
			++it;
			goto _iter_begin_1b7e6e724;
		}
		_iter_end_1b7e6e724:;
	};
	return _1489_n;;
}



inline jule::Slice<jule::Ptr<_1ce11bc0c_Data>> _1ce047b6b_getDatasFromTupleData(jule::Ptr<_1ce11bc0c_Data>* _17131_d) {
	if ((_1ce15214e_Tup((*((*(_17131_d))))._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_17131_d))))._field_Model };
			
			if (_match_expr.type == &__jule_any_type81) {
				_case_begin_1b7e748a0:;
				{
					return (*((*((*(_17131_d))))._field_Model.unsafe_cast_ptr<_1ce0002a5_TupleExprModel>()))._field_Datas;;
				}
			}
			else {
				_case_begin_1b7e71e85:;
				{
					jule::Ptr<_1ce15a894_Tuple> _17717_t = _1ce15214e_Tup((*((*(_17131_d))))._field_Kind);;
					jule::Slice<jule::Ptr<_1ce11bc0c_Data>> _17817_r = jule::Slice<jule::Ptr<_1ce11bc0c_Data>>::alloc(0LL, (*(_17717_t))._field_Types.len());;
					{
						auto expr = &((*_17717_t.alloc)._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b7e7375b:;
						if (it != expr_end) {
							jule::Ptr<_1ce14cbc7_TypeKind> _17925_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_1ce11bc0c_Data>> &__jule_push_dest = _17817_r; __jule_push_dest.push(jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_17925_kind, ._field_Mutable=true, })); };
							}
							_iter_next_1b7e7375b:;
							++it;
							goto _iter_begin_1b7e7375b;
						}
						_iter_end_1b7e7375b:;
					};
					return _17817_r;;
				}
			}
			_match_end_1b7e71e30:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1ce11bc0c_Data>>::make({(*(_17131_d))});;
	};
}



inline jule::Bool _1ce0484a7_checkMut(jule::Ptr<_1ce08b42e_Sema>* _20618_s, jule::Ptr<_1ce11bc0c_Data>* _20629_left, jule::Ptr<_1ce11bc0c_Data> _20646_right, jule::Ptr<_1cdeab4b4_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*((*(_20629_left))))._field_Mutable))) {
			_case_begin_1b7e77a4b:;
			{
				_1ce093dc6_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("cannot assign to immutable storage", 34), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!((*_20646_right.alloc)._field_Mutable))) && _1ce14e558_Mutable((*_20646_right.alloc)._field_Kind.ptr()))) {
			_case_begin_1b7e77ae5:;
			{
				if ((((*(_20660_op))._field_Id != static_cast<jule::U32>(71LLU)) && (_1ce15189b_Struct((*_20646_right.alloc)._field_Kind) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1ce093dc6_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*_20646_right.alloc)._field_Kind), &__jule_any_type4)}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b7e779d5:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b7e7793b:;
	};
}



inline jule::Bool _1ce048991_checkAssign(jule::Ptr<_1ce08b42e_Sema>* _22521_s, jule::Ptr<_1ce11bc0c_Data>* _22536_left, jule::Ptr<_1ce11bc0c_Data> _22553_right, jule::Ptr<_1cdeab4b4_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ce00a832_FnIns> _2265_f = _1ce151615_Fn((*((*(_22536_left))))._field_Kind.ptr());;
	if ((((_2265_f != nullptr) && ((*_2265_f.alloc)._field_Decl != nullptr)) && (*(*_2265_f.alloc)._field_Decl.alloc)._field_Global)) {
		_1ce093dc6_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("type is not support assignment", 30), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1ce11c614_IsConst((*(_22536_left)).ptr())) {
			_case_begin_1b7e7d315:;
			{
				_1ce093dc6_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("constants is can't assign", 25), jule::Slice<jule::Any>());
				_1ce094239_pushSuggestion((*(_22521_s)).ptr(), jule::Str::lit("remove constant qualifer if you need to assign", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*((*(_22536_left))))._field_Lvalue))) {
			_case_begin_1b7e7d37b:;
			{
				_1ce093dc6_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("invalid expression: expected lvalue for assignment", 50), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1ce0484a7_checkMut(_22521_s, _22536_left, _22553_right, _22567_op)))) {
			_case_begin_1b7e7d3e2:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b7e7d25a:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b7e7d106:;
	};
}



inline jule::Bool _1ce048c5a_isValidAstStForNextSt(jule::Any* _24731_n) {
	{
		auto &_match_expr{ (*(_24731_n)) };
		
		if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1b7e807e0:;
			{
				return (!((*((*(_24731_n)).cast_ptr<_1cded053d_AssignSt>(&__jule_any_type58)))._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1b7e8056a:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b7e80438:;
			{
				return false;;
			}
		}
		_match_end_1b7e7972e:;
	};
}



inline jule::Bool _1ce049024_isValidStForNextSt(jule::Any* _25824_st) {
	{
		auto &_match_expr{ (*(_25824_st)) };
		
		if (_match_expr.type == &__jule_any_type43 || _match_expr.type == &__jule_any_type44 || _match_expr.type == &__jule_any_type46) {
			_case_begin_1b7e7dada:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b7e814b1:;
			{
				{
					auto &_match_expr{ (*((*(_25824_st)).cast_ptr<_1ce11bc0c_Data>(&__jule_any_type24)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type34) {
						_case_begin_1b7e8246d:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1b7e82935:;
						{
							return false;;
						}
					}
					_match_end_1b7e828d0:;
				};
			}
		}
		else {
			_case_begin_1b7e8144a:;
			{
				return false;;
			}
		}
		_match_end_1b7e80b53:;
	};
}



inline jule::Bool _1ce0492dd_stmtIsDef(jule::Any* _27615_st) {
	{
		auto &_match_expr{ (*(_27615_st)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b7e82d97:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b7e822b4:;
			{
				return false;;
			}
		}
		_match_end_1b7e81e1d:;
	};
}



inline jule::U32 _1ce0638e0_removeEqFromOp(jule::U32 _216219_op) {
	{
		auto &_match_expr{ _216219_op };
		
		if (_match_expr == static_cast<jule::U32>(40LLU)) {
			_case_begin_1b7e83b67:;
			{
				return static_cast<jule::U32>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(41LLU)) {
			_case_begin_1b7e83bcd:;
			{
				return static_cast<jule::U32>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(42LLU)) {
			_case_begin_1b7e8387b:;
			{
				return static_cast<jule::U32>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_1b7e838e2:;
			{
				return static_cast<jule::U32>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1b7e83cbb:;
			{
				return static_cast<jule::U32>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(45LLU)) {
			_case_begin_1b7e83d32:;
			{
				return static_cast<jule::U32>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(46LLU)) {
			_case_begin_1b7e83d98:;
			{
				return static_cast<jule::U32>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(47LLU)) {
			_case_begin_1b7e83e0e:;
			{
				return static_cast<jule::U32>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(48LLU)) {
			_case_begin_1b7e83e86:;
			{
				return static_cast<jule::U32>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(49LLU)) {
			_case_begin_1b7e84063:;
			{
				return static_cast<jule::U32>(66LLU);;
			}
		}
		else {
			_case_begin_1b7e833b4:;
			{
				return _216219_op;;
			}
		}
		_match_end_1b7e837b0:;
	};
}



inline void _1ce063b21_makeComptimeRange(jule::Ptr<_1ce11bc0c_Data>* _219127_d) {
	{
		
		if ((_1ce15266b_comptimeStructFields((*((*(_219127_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7e84470:;
			{
				(*((*(_219127_d))))._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(jule::new_ptr<_1ce022c78_comptimeRange>(_1ce022c78_comptimeRange{._field_kind=jule::Trait<_1ce022a58_comptimeRangeKind>(_1ce15266b_comptimeStructFields((*((*(_219127_d))))._field_Kind), 0)}), 5)});
			}
		}
		else if ((_1ce152b88_comptimeEnumFields((*((*(_219127_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7e879d4:;
			{
				(*((*(_219127_d))))._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(jule::new_ptr<_1ce022c78_comptimeRange>(_1ce022c78_comptimeRange{._field_kind=jule::Trait<_1ce022a58_comptimeRangeKind>(_1ce152b88_comptimeEnumFields((*((*(_219127_d))))._field_Kind), 2)}), 5)});
			}
		}
		else if ((_1ce153958_comptimeTypeInfos((*((*(_219127_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7e87a4a:;
			{
				(*((*(_219127_d))))._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(jule::new_ptr<_1ce022c78_comptimeRange>(_1ce022c78_comptimeRange{._field_kind=jule::Trait<_1ce022a58_comptimeRangeKind>(_1ce153958_comptimeTypeInfos((*((*(_219127_d))))._field_Kind), 4)}), 5)});
			}
		}
		else if ((_1ce1531a5_comptimeParams((*((*(_219127_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7e844d6:;
			{
				(*((*(_219127_d))))._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(jule::new_ptr<_1ce022c78_comptimeRange>(_1ce022c78_comptimeRange{._field_kind=jule::Trait<_1ce022a58_comptimeRangeKind>(_1ce1531a5_comptimeParams((*((*(_219127_d))))._field_Kind), 3)}), 5)});
			}
		}
		else if ((_1ce153e75_comptimeStatics((*((*(_219127_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7e8454c:;
			{
				(*((*(_219127_d))))._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(jule::new_ptr<_1ce022c78_comptimeRange>(_1ce022c78_comptimeRange{._field_kind=jule::Trait<_1ce022a58_comptimeRangeKind>(_1ce153e75_comptimeStatics((*((*(_219127_d))))._field_Kind), 1)}), 5)});
			}
		}
		else if ((_1ce1549ae_comptimeFiles((*((*(_219127_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7e845b3:;
			{
				(*((*(_219127_d))))._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(jule::new_ptr<_1ce022c78_comptimeRange>(_1ce022c78_comptimeRange{._field_kind=jule::Trait<_1ce022a58_comptimeRangeKind>(_1ce1549ae_comptimeFiles((*((*(_219127_d))))._field_Kind), 5)}), 5)});
			}
		}
		else {
			_case_begin_1b7e84409:;
			{
				(*((*(_219127_d))))._field_Decl=true;
			}
		}
		_match_end_1b7e876a4:;
	};
}



inline jule::Bool _1ce06411b_canComptimeMatch(jule::Ptr<_1ce11bc0c_Data>* _221226_d) {
	if ((!(_1ce115992_isGoodValueToInfer(_221226_d)))) {
		return false;;
	};
	return (_1ce11c614_IsConst((*(_221226_d)).ptr()) || (_1ce153bde_comptimeTypeInfo((*((*(_221226_d))))._field_Kind.ptr()) != nullptr));;
}



inline jule::Ptr<_1ce0b4105_Var> _1ce068593_findVarInPackage(jule::Slice<jule::Ptr<_1ce116894_SymbolTable>>* _4626_files, jule::Str* _4650_ident, jule::Bool _4662_binded) {
	{
		auto expr = _4626_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c5442c:;
		if (it != expr_end) {
			jule::Ptr<_1ce116894_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1ce0b4105_Var> _4813_v = _1ce117279_FindVar(_4717_f.ptr(), (*(_4650_ident)), _4662_binded);;
				if ((_4813_v != nullptr)) {
					return _4813_v;;
				};
			}
			_iter_next_1b7c5442c:;
			++it;
			goto _iter_begin_1b7c5442c;
		}
		_iter_end_1b7c5442c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ce14bdd5_TypeAlias> _1ce068a16_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1ce116894_SymbolTable>>* _5832_files, jule::Str* _5856_ident, jule::Bool _5868_binded) {
	{
		auto expr = _5832_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c559a0:;
		if (it != expr_end) {
			jule::Ptr<_1ce116894_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1ce14bdd5_TypeAlias> _6013_ta = _1ce117675_FindTypeAlias(_5917_f.ptr(), (*(_5856_ident)), _5868_binded);;
				if ((_6013_ta != nullptr)) {
					return _6013_ta;;
				};
			}
			_iter_next_1b7c559a0:;
			++it;
			goto _iter_begin_1b7c559a0;
		}
		_iter_end_1b7c559a0:;
	};
	return nullptr;;
}



inline jule::Ptr<_1cdee2990_Struct> _1ce068e45_findStructInPackage(jule::Slice<jule::Ptr<_1ce116894_SymbolTable>>* _7029_files, jule::Str* _7053_ident, jule::Bool _7065_binded) {
	{
		auto expr = _7029_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c56eac:;
		if (it != expr_end) {
			jule::Ptr<_1ce116894_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1cdee2990_Struct> _7213_s = _1ce117a71_FindStruct(_7117_f.ptr(), (*(_7053_ident)), _7065_binded);;
				if ((_7213_s != nullptr)) {
					return _7213_s;;
				};
			}
			_iter_next_1b7c56eac:;
			++it;
			goto _iter_begin_1b7c56eac;
		}
		_iter_end_1b7c56eac:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ce00792d_Fn> _1ce0693eb_findFnInPackage(jule::Slice<jule::Ptr<_1ce116894_SymbolTable>>* _8225_files, jule::Str* _8249_ident, jule::Bool _8261_binded) {
	{
		auto expr = _8225_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c584b9:;
		if (it != expr_end) {
			jule::Ptr<_1ce116894_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1ce00792d_Fn> _8413_f = _1ce117e6c_FindFn(_8317_file.ptr(), (*(_8249_ident)), _8261_binded);;
				if ((_8413_f != nullptr)) {
					return _8413_f;;
				};
			}
			_iter_next_1b7c584b9:;
			++it;
			goto _iter_begin_1b7c584b9;
		}
		_iter_end_1b7c584b9:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ce01ac0a_Trait> _1ce06973c_findTraitInPackage(jule::Slice<jule::Ptr<_1ce116894_SymbolTable>>* _9428_files, jule::Str* _9452_ident) {
	{
		auto expr = _9428_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c59795:;
		if (it != expr_end) {
			jule::Ptr<_1ce116894_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1ce01ac0a_Trait> _9613_t = _1ce1182ad_FindTrait(_9517_f.ptr(), (*(_9452_ident)));;
				if ((_9613_t != nullptr)) {
					return _9613_t;;
				};
			}
			_iter_next_1b7c59795:;
			++it;
			goto _iter_begin_1b7c59795;
		}
		_iter_end_1b7c59795:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ce01d416_Enum> _1ce069ab1_findEnumInPackage(jule::Slice<jule::Ptr<_1ce116894_SymbolTable>>* _10627_files, jule::Str* _10651_ident) {
	{
		auto expr = _10627_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c59d06:;
		if (it != expr_end) {
			jule::Ptr<_1ce116894_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1ce01d416_Enum> _10813_e = _1ce1185ee_FindEnum(_10717_f.ptr(), (*(_10651_ident)));;
				if ((_10813_e != nullptr)) {
					return _10813_e;;
				};
			}
			_iter_next_1b7c59d06:;
			++it;
			goto _iter_begin_1b7c59d06;
		}
		_iter_end_1b7c59d06:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ce01eb21_TypeEnum> _1ce069e35_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1ce116894_SymbolTable>>* _11831_files, jule::Str* _11855_ident) {
	{
		auto expr = _11831_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c5b137:;
		if (it != expr_end) {
			jule::Ptr<_1ce116894_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1ce01eb21_TypeEnum> _12013_e = _1ce118940_FindTypeEnum(_11917_f.ptr(), (*(_11855_ident)));;
				if ((_12013_e != nullptr)) {
					return _12013_e;;
				};
			}
			_iter_next_1b7c5b137:;
			++it;
			goto _iter_begin_1b7c5b137;
		}
		_iter_end_1b7c5b137:;
	};
	return nullptr;;
}



inline jule::Any _1ce06a474_defByIdentPackage(jule::Slice<jule::Ptr<_1ce116894_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_binded) {
	{
		auto expr = _12927_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c5d458:;
		if (it != expr_end) {
			jule::Ptr<_1ce116894_SymbolTable> _13017_file = *it;
			{
				jule::Any _13113_def = _1ce11990d_defByIdent(_13017_file.ptr(), _12951_ident, _12963_binded);;
				if ((_13113_def != nullptr)) {
					return _13113_def;;
				};
			}
			_iter_next_1b7c5d458:;
			++it;
			goto _iter_begin_1b7c5d458;
		}
		_iter_end_1b7c5d458:;
	};
	return nullptr;;
}



inline jule::Bool _1ce0714ad_isStdPackage(jule::Str* _35518_f, jule::Str _35526_p) {
	return _22aae7867_HasPrefix((*(_35518_f)), _22ab189a9_Join(jule::Slice<jule::Str>::make({_22abd9a25_PathStdlib,_35526_p})));;
}



inline jule::Bool _1ce088abe_isValidModelForRef(jule::Any* _1328_m) {
	{
		auto &_match_expr{ (*(_1328_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b7c6e0e5:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b7c6e15b:;
			{
				jule::Ptr<_1cdeee738_StructSubIdentExprModel> _1813_model = (*(_1328_m)).cast_ptr<_1cdeee738_StructSubIdentExprModel>(&__jule_any_type98);;
				return (((*(_1813_model))._field_Field != nullptr) && _1ce088abe_isValidModelForRef(&((*((*_1813_model.alloc)._field_Expr))._field_Model)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1b7c6e1c2:;
			{
				jule::Ptr<_1cdeea091_UnaryExprModel> _2113_unary = (*(_1328_m)).cast_ptr<_1cdeea091_UnaryExprModel>(&__jule_any_type110);;
				if (((*((*(_2113_unary))._field_Op))._field_Id != static_cast<jule::U32>(62LLU))) {
					return false;;
				};
				if ((_1ce150845_Ptr((*((*_2113_unary.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1ce1505ae_Sptr((*(*_2113_unary.alloc)._field_Expr.alloc)._field_Kind) == nullptr)) {
					return false;;
				};
				return _1ce088abe_isValidModelForRef(&((*(*_2113_unary.alloc)._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1b7c6e238:;
			{
				jule::Ptr<_1cdeec527_IndexingExprModel> _3513_indexing = (*(_1328_m)).cast_ptr<_1cdeec527_IndexingExprModel>(&__jule_any_type45);;
				return _1ce088abe_isValidModelForRef(&((*((*(_3513_indexing))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1b7c6d820:;
			{
				return false;;
			}
		}
		_match_end_1b7c6d7ba:;
	};
}



inline _22a93672d_Log _1ce089075_compilerErr(jule::Ptr<_1cdeab4b4_Token>* _4217_token, jule::Bool _4232_line, jule::Str _4244_fmt, jule::Slice<jule::Any> _4257_args) {
	_22a93672d_Log _439_log = _22a93672d_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*((*(_4217_token))))._field_Row, ._field_Column=(*((*(_4217_token))))._field_Column, ._field_Path=(*((*((*(_4217_token))))._field_File))._field_Path, ._field_Text=_22a936b90_Logf(_4244_fmt, _4257_args), };;
	if (_4232_line) {
		_439_log._field_Line=_1cdeb2c5c_GetRow((*((*(_4217_token))))._field_File, (*((*(_4217_token))))._field_Row);
	};
	return _439_log;;
}



inline jule::Bool _1ce0893e9_impIsLookupable(jule::Ptr<_1ce06b0ac_ImportInfo>* _5621_i, jule::Str* _5638_ident) {
	if ((*((*(_5621_i))))._field_Binded) {
		return false;;
	};
	if ((!((*((*(_5621_i))))._field_ImportAll))) {
		if (((*((*(_5621_i))))._field_Selected.len() > 0LL)) {
			return _1ce06d93e_existIdent((*(_5621_i)).ptr(), (*(_5638_ident)));;
		};
	};
	return (*((*(_5621_i))))._field_ImportAll;;
}



inline void _1ce089729_appendRetVars(jule::Slice<jule::Ptr<_1ce0b4105_Var>>* _6823_dest, jule::Ptr<_1ce00a832_FnIns>* _6842_f) {
	if ((_1ce007da1_IsVoid((*((*(_6842_f))))._field_Decl.ptr()) || ((*((*(_6842_f))))._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1ce14cbc7_TypeKind>> _739_types = _1ce00ba31_Types((*(_6842_f)).ptr());;
	{
		auto expr = &((*((*(*((*(_6842_f))))._field_Decl.alloc)._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c79d8c:;
		if (it != expr_end) {
			jule::I32 _7410_i = it - expr->begin();
			jule::Ptr<_1cdeab4b4_Token> _7417_ident = *it;
			{
				if ((_1cdeadd9b_IsIgnoreIdent((*(_7417_ident))._field_Kind) || _1cdeae165_IsAnonIdent((*_7417_ident.alloc)._field_Kind))) {
					goto _iter_next_1b7c79d8c;
				};
				{ jule::Slice<jule::Ptr<_1ce0b4105_Var>> &__jule_push_dest = (*(_6823_dest)); __jule_push_dest.push(jule::new_ptr<_1ce0b4105_Var>(_1ce0b4105_Var{._field_Scope=(*((*(_6842_f))))._field_Scope, ._field_Token=_7417_ident, ._field_Ident=(*_7417_ident.alloc)._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_1ce154d99_TypeSymbol>(_1ce154d99_TypeSymbol{._field_Kind=_739_types[_7410_i]}), ._field_Value=jule::new_ptr<_1ce11cd84_Value>(_1ce11cd84_Value{._field_Data=jule::new_ptr<_1ce11bc0c_Data>()}), ._field_RetOrder=_7410_i, })); };
			}
			_iter_next_1b7c79d8c:;
			++it;
			_7410_i++;
			goto _iter_begin_1b7c79d8c;
		}
		_iter_end_1b7c79d8c:;
	};
	if ((((*(*(*((*(_6842_f))))._field_Decl.alloc)._field_Result.alloc)._field_Idents.len() == 1LL) && ((*(_6823_dest)).len() == 1LL))) {
		(*((*(_6823_dest))[((*(_6823_dest)).len() - 1LL)]))._field_RetOrder=-1LL;
	};
}



inline void _1ce089a15_appendParamVars(jule::Slice<jule::Ptr<_1ce0b4105_Var>>* _9825_dest, jule::Ptr<_1ce00a832_FnIns>* _9844_f) {
	if (((*((*(_9844_f))))._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_9844_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c7e743:;
		if (it != expr_end) {
			jule::Ptr<_1ce009886_ParamIns> _10317_p = *it;
			{
				if ((_1cdeadd9b_IsIgnoreIdent((*((*(_10317_p))._field_Decl))._field_Ident) || _1cdeae165_IsAnonIdent((*(*_10317_p.alloc)._field_Decl.alloc)._field_Ident))) {
					goto _iter_next_1b7c7e743;
				};
				jule::Ptr<_1ce0b4105_Var> _10813_v = jule::new_ptr<_1ce0b4105_Var>(_1ce0b4105_Var{._field_Scope=(*((*(_9844_f))))._field_Scope, ._field_Token=(*(*_10317_p.alloc)._field_Decl.alloc)._field_Token, ._field_Ident=(*(*_10317_p.alloc)._field_Decl.alloc)._field_Ident, ._field_Mutable=(*(*_10317_p.alloc)._field_Decl.alloc)._field_Mutable, ._field_Used=true, ._field_Reference=(*(*_10317_p.alloc)._field_Decl.alloc)._field_Reference, ._field_Kind=jule::new_ptr<_1ce154d99_TypeSymbol>(), ._field_Value=jule::new_ptr<_1ce11cd84_Value>(_1ce11cd84_Value{._field_Data=jule::new_ptr<_1ce11bc0c_Data>()}), });;
				{
					
					if (_1ce006575_IsSelf((*_10317_p.alloc)._field_Decl)) {
						_case_begin_1b7c8356b:;
						{
							(*((*(_10813_v))._field_Kind))._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1ce14c721_Kind>((*((*(_9844_f))))._field_Owner, 0)});
							(*_10813_v.alloc)._field_Reference=(!(_1ce00680b_IsRef((*_10317_p.alloc)._field_Decl)));
							if (_1ce00680b_IsRef((*_10317_p.alloc)._field_Decl)) {
								(*_10813_v.alloc)._field_Ident=(*_10813_v.alloc)._field_Ident.slice(1LL);
								(*((*(*_10813_v.alloc)._field_Kind.alloc)._field_Kind))._field_Kind=jule::Trait<_1ce14c721_Kind>(jule::new_ptr<_1ce1592cc_Sptr>(_1ce1592cc_Sptr{._field_Elem=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_BindIdent=(*(*(*_10813_v.alloc)._field_Kind.alloc)._field_Kind.alloc)._field_BindIdent, ._field_Kind=(*(*(*_10813_v.alloc)._field_Kind.alloc)._field_Kind.alloc)._field_Kind})}), 21);
							};
						}
					}
					else if ((*(*_10317_p.alloc)._field_Decl.alloc)._field_Variadic) {
						_case_begin_1b7c832b3:;
						{
							(*((*(_10813_v))._field_Kind))._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1ce14c721_Kind>(jule::new_ptr<_1ce159ca0_Slc>(_1ce159ca0_Slc{._field_Elem=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_BindIdent=(*((*_10317_p.alloc)._field_Kind))._field_BindIdent, ._field_Kind=(*(*_10317_p.alloc)._field_Kind.alloc)._field_Kind})}), 22)});
						}
					}
					else {
						_case_begin_1b7c8324c:;
						{
							(*((*(_10813_v))._field_Kind))._field_Kind=(*_10317_p.alloc)._field_Kind;
						}
					}
					_match_end_1b7c8313c:;
				};
				{ jule::Slice<jule::Ptr<_1ce0b4105_Var>> &__jule_push_dest = (*(_9825_dest)); __jule_push_dest.push(_10813_v); };
			}
			_iter_next_1b7c7e743:;
			++it;
			goto _iter_begin_1b7c7e743;
		}
		_iter_end_1b7c7e743:;
	};
}



inline void _1ce089d01_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1ce14bdd5_TypeAlias>>* _15834_dest, jule::Ptr<_1ce00a832_FnIns>* _15859_f) {
	jule::I32 _1599_size = (*((*(_15859_f))))._field_Generics.len();;
	if (((*((*((*(_15859_f))))._field_Decl))._field_Owner != nullptr)) {
		_1599_size+=(*(*(*((*(_15859_f))))._field_Decl.alloc)._field_Owner.alloc)._field_Generics.len();
	};
	if ((_1599_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_15859_f))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c8ba19:;
		if (it != expr_end) {
			jule::I32 _16810_i = it - expr->begin();
			jule::Ptr<_1ce14b2e1_InsGeneric> _16817_g = *it;
			{
				jule::Ptr<_1cdecdc9a_GenericDecl> _16913_decl = (*(*((*(_15859_f))))._field_Decl.alloc)._field_Generics[_16810_i];;
				{ jule::Slice<jule::Ptr<_1ce14bdd5_TypeAlias>> &__jule_push_dest = (*(_15834_dest)); __jule_push_dest.push(jule::new_ptr<_1ce14bdd5_TypeAlias>(_1ce14bdd5_TypeAlias{._field_Scope=(*(*((*(_15859_f))))._field_Decl.alloc)._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_16913_decl.alloc)._field_Token, ._field_Ident=(*(_16913_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1ce154d99_TypeSymbol>(_1ce154d99_TypeSymbol{._field_Kind=(*(_16817_g))._field_Kind}), })); };
			}
			_iter_next_1b7c8ba19:;
			++it;
			_16810_i++;
			goto _iter_begin_1b7c8ba19;
		}
		_iter_end_1b7c8ba19:;
	};
	if (((*(*((*(_15859_f))))._field_Decl.alloc)._field_Owner != nullptr)) {
		jule::Ptr<_1cdee571d_StructIns> _18113_owner = (*((*(_15859_f))))._field_Owner;;
		{
			auto expr = &((*_18113_owner.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b7c8d004:;
			if (it != expr_end) {
				jule::I32 _18214_i = it - expr->begin();
				jule::Ptr<_1ce14b2e1_InsGeneric> _18221_g = *it;
				{
					jule::Ptr<_1cdecdc9a_GenericDecl> _18317_decl = (*((*(_18113_owner))._field_Decl))._field_Generics[_18214_i];;
					{ jule::Slice<jule::Ptr<_1ce14bdd5_TypeAlias>> &__jule_push_dest = (*(_15834_dest)); __jule_push_dest.push(jule::new_ptr<_1ce14bdd5_TypeAlias>(_1ce14bdd5_TypeAlias{._field_Scope=(*(*((*(_15859_f))))._field_Decl.alloc)._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_18317_decl.alloc)._field_Token, ._field_Ident=(*(_18317_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1ce154d99_TypeSymbol>(_1ce154d99_TypeSymbol{._field_Kind=(*(_18221_g))._field_Kind}), })); };
				}
				_iter_next_1b7c8d004:;
				++it;
				_18214_i++;
				goto _iter_begin_1b7c8d004;
			}
			_iter_end_1b7c8d004:;
		};
	};
}



inline jule::Ptr<_1ce116894_SymbolTable> _1ce08a175_findFile(jule::Slice<jule::Ptr<_1ce116894_SymbolTable>>* _19618_files, jule::Ptr<_1cdeb1c4a_File>* _19642_handler) {
	{
		auto expr = _19618_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c9202a:;
		if (it != expr_end) {
			jule::Ptr<_1ce116894_SymbolTable> _19717_fl = *it;
			{
				if (((*(_19717_fl))._field_File == (*(_19642_handler)))) {
					return _19717_fl;;
				};
			}
			_iter_next_1b7c9202a:;
			++it;
			goto _iter_begin_1b7c9202a;
		}
		_iter_end_1b7c9202a:;
	};
	return nullptr;;
}



inline void _1ce08a62b_pushSuggestion(_22a93672d_Log* _20530_log, jule::Str _20541_fmt, jule::Slice<jule::Any> _20554_args) {
	(*(_20530_log))._field_Suggestion=_22a936b90_Logf(_20541_fmt, _20554_args);
}



inline void _1ce0b27da_pushImplemented(jule::Ptr<_1ce01ac0a_Trait> _288224_t, jule::Ptr<_1cdee2990_Struct>* _288240_d) {
	_julec_label_1b7c93e50:;
	{
		
		if (((*(_288224_t))._field_Implemented.len() > 0LL)) {
			_case_begin_1b7c94cca:;
			{
				{
					auto expr = &((*_288224_t.alloc)._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7c95737:;
					if (it != expr_end) {
						jule::Ptr<_1cdee2990_Struct> _288616_s = *it;
						{
							if ((_288616_s == (*(_288240_d)))) {
								goto _match_end_1b7c94280;
							};
						}
						_iter_next_1b7c95737:;
						++it;
						goto _iter_begin_1b7c95737;
					}
					_iter_end_1b7c95737:;
				};
				goto _case_begin_1b7c94329;
			}
		}
		else {
			_case_begin_1b7c94329:;
			{
				(*(_288224_t))._field_Implemented=jule::append((*_288224_t.alloc)._field_Implemented,jule::Slice<jule::Ptr<_1cdee2990_Struct>>::make({(*(_288240_d))}));
			}
		}
		_match_end_1b7c94280:;
	};
	{
		auto expr = &((*(_288224_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c95aab:;
		if (it != expr_end) {
			jule::Ptr<_1ce154d99_TypeSymbol> _289517_i = *it;
			{
				_1ce0b27da_pushImplemented(_1ce151b32_Trait((*(_289517_i))._field_Kind.ptr()), _288240_d);
			}
			_iter_next_1b7c95aab:;
			++it;
			goto _iter_begin_1b7c95aab;
		}
		_iter_end_1b7c95aab:;
	};
}



inline void _1ce0b2ac6_pushImplements(jule::Ptr<_1cdee2990_Struct>* _290024_s, jule::Ptr<_1ce01ac0a_Trait> _290040_t) {
	_julec_label_1b7c96e97:;
	{
		
		if (((*((*(_290024_s))))._field_Implements.len() > 0LL)) {
			_case_begin_1b7c97c34:;
			{
				{
					auto expr = &((*((*(_290024_s))))._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7c98691:;
					if (it != expr_end) {
						jule::Ptr<_1ce01ac0a_Trait> _290416_b = *it;
						{
							if ((_290416_b == _290040_t)) {
								goto _match_end_1b7c971d9;
							};
						}
						_iter_next_1b7c98691:;
						++it;
						goto _iter_begin_1b7c98691;
					}
					_iter_end_1b7c98691:;
				};
				goto _case_begin_1b7c97283;
			}
		}
		else {
			_case_begin_1b7c97283:;
			{
				{ jule::Slice<jule::Ptr<_1ce01ac0a_Trait>> &__jule_push_dest = (*((*(_290024_s))))._field_Implements; __jule_push_dest.push(_290040_t); };
			}
		}
		_match_end_1b7c971d9:;
	};
	{
		auto expr = &((*(_290040_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c98a15:;
		if (it != expr_end) {
			jule::Ptr<_1ce154d99_TypeSymbol> _291317_i = *it;
			{
				_1ce0b2ac6_pushImplements(_290024_s, _1ce151b32_Trait((*(_291317_i))._field_Kind.ptr()));
			}
			_iter_next_1b7c98a15:;
			++it;
			goto _iter_begin_1b7c98a15;
		}
		_iter_end_1b7c98a15:;
	};
}



inline jule::Bool _1ce102473_traitHasReferenceReceiver(jule::Ptr<_1ce01ac0a_Trait>* _2831_t) {
	{
		auto expr = &((*((*(_2831_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b83d2c75:;
		if (it != expr_end) {
			jule::Ptr<_1ce00792d_Fn> *_2912_f = it;
			{
				if ((*((*(_2912_f))))._field_Statically) {
					goto _iter_next_1b83d2c75;
				};
				jule::Ptr<_1ce005e59_Param> _359_p = (*(*(_2912_f)).alloc)._field_Params[0LL];;
				if ((_1ce00680b_IsRef(_359_p.ptr()) && _1ce006575_IsSelf(_359_p))) {
					return true;;
				};
			}
			_iter_next_1b83d2c75:;
			++it;
			goto _iter_begin_1b83d2c75;
		}
		_iter_end_1b83d2c75:;
	};
	return false;;
}



inline jule::Bool _1ce10282a_floatAssignable(jule::Str* _4321_kind, jule::Ptr<_1ce11bc0c_Data>* _4333_d) {
	jule::Str _445_value = _22bde129c_FmtFloat(_22be18d30_AsF64((*((*(_4333_d))))._field_Constant.ptr()), 'g', -1LL, 64LL);;
	return _22be0b97c_CheckBitFloat(_445_value, _22be0a4d6_BitsizeOf((*(_4321_kind))));;
}



inline jule::Bool _1ce102b9e_sigAssignable(jule::Str _4818_kind, jule::Ptr<_1ce11bc0c_Data>* _4830_d) {
	jule::F64 _495_min = _22be11b6e_Min(_4818_kind);;
	jule::F64 _505_max = _22be11e05_Max(_4818_kind);;
	{
		
		if (_22be1ab78_IsF64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1b83d67b2:;
			{
				jule::F64 _539_x = _22be1857c_ReadF64((*((*(_4830_d))))._field_Constant);;
				jule::F64 _549_i;;
				jule::F64 _5412_frac;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _22bdb6a69_Modf(_539_x);
					_549_i = __jule_assign_result.__jule_result_arg0;
					_5412_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_5412_frac != 0LL)) {
					return false;;
				};
				return ((_549_i >= _495_min) && (_549_i <= _505_max));;
			}
		}
		else if (_22be1a3c5_IsU64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1b83d6828:;
			{
				jule::F64 _609_x = _22be18d30_AsF64((*((*(_4830_d))))._field_Constant);;
				if ((_609_x <= _505_max)) {
					return true;;
				};
			}
		}
		else if (_22be1a13e_IsI64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1b83d688e:;
			{
				jule::F64 _659_x = _22be18d30_AsF64((*((*(_4830_d))))._field_Constant);;
				return ((_495_min <= _659_x) && (_659_x <= _505_max));;
			}
		}
		_match_end_1b83d66a2:;
	};
	return false;;
}



inline jule::Bool _1ce103067_unsigAssignable(jule::Str _7120_kind, jule::Ptr<_1ce11bc0c_Data>* _7132_d) {
	jule::F64 _725_max = _22be11e05_Max(_7120_kind);;
	if (((*((*(_7132_d))))._field_IsRune && _7120_kind.equal("u8", 2))) {
		return _1ce0d5ab6_IsAscii(static_cast<jule::I32>(_22be17a43_ReadI64((*((*(_7132_d))))._field_Constant.ptr())));;
	};
	{
		
		if (_22be1ab78_IsF64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1b83dc3bc:;
			{
				jule::F64 _799_x = _22be1857c_ReadF64((*((*(_7132_d))))._field_Constant);;
				if ((_799_x < 0LL)) {
					return false;;
				};
				jule::F64 _839_i;;
				jule::F64 _8312_frac;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _22bdb6a69_Modf(_799_x);
					_839_i = __jule_assign_result.__jule_result_arg0;
					_8312_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_8312_frac != 0LL)) {
					return false;;
				};
				return (_839_i <= _725_max);;
			}
		}
		else if (_22be1a3c5_IsU64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1b83dc433:;
			{
				jule::F64 _899_x = _22be18d30_AsF64((*((*(_7132_d))))._field_Constant);;
				if ((_899_x <= _725_max)) {
					return true;;
				};
			}
		}
		else if (_22be1a13e_IsI64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1b83dc499:;
			{
				jule::F64 _949_x = _22be18d30_AsF64((*((*(_7132_d))))._field_Constant);;
				return ((0LL <= _949_x) && (_949_x <= _725_max));;
			}
		}
		_match_end_1b83dba3c:;
	};
	return false;;
}



inline jule::Bool _1ce1033db_intAssignable(jule::Str _10018_kind, jule::Ptr<_1ce11bc0c_Data>* _10030_d) {
	{
		
		if (_22be14e2a_IsSigInt(_10018_kind)) {
			_case_begin_1b83e20c5:;
			{
				return _1ce102b9e_sigAssignable(_10018_kind, _10030_d);;
			}
		}
		else if (_22be15238_IsUnsigInt(_10018_kind)) {
			_case_begin_1b83e215d:;
			{
				return _1ce103067_unsigAssignable(_10018_kind, _10030_d);;
			}
		}
		else {
			_case_begin_1b83e1aec:;
			{
				return false;;
			}
		}
		_match_end_1b83e0d0a:;
	};
}



inline void _1ce10e804_checkMutRiskOfStructLit(jule::Ptr<_1ce08b42e_Sema>* _92033_s, jule::Ptr<_1cdeea965_StructLitExprModel>* _92044_m) {
	{
		auto expr = &((*((*(_92044_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b83e31d6:;
		if (it != expr_end) {
			jule::Ptr<_1cdeea5be_StructArgExprModel> *_92112_arg = it;
			{
				if ((*((*((*((*(_92112_arg))))._field_Field))._field_Decl))._field_Mutable) {
					goto _iter_next_1b83e31d6;
				};
				if (((!((*((*(*(_92112_arg)).alloc)._field_Expr))._field_Mutable)) && _1ce14e558_Mutable((*(*(*(_92112_arg)).alloc)._field_Expr.alloc)._field_Kind.ptr()))) {
					_1ce093dc6_pushErr((*(_92033_s)).ptr(), (*(*(_92112_arg)).alloc)._field_Token, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*(*(*(_92112_arg)).alloc)._field_Expr.alloc)._field_Kind), &__jule_any_type4)}));
				};
			}
			_iter_next_1b83e31d6:;
			++it;
			goto _iter_begin_1b83e31d6;
		}
		_iter_end_1b83e31d6:;
	};
}



inline jule::Ptr<_1ce14cbc7_TypeKind> _1ce115640_lenKind(void) {
	return _1ce2360bd_primInt;;
}



inline jule::Bool _1ce115992_isGoodValueToInfer(jule::Ptr<_1ce11bc0c_Data>* _142124_d) {
	return (!(_1ce11c0e7_IsNil((*(_142124_d)).ptr())));;
}



inline jule::Ptr<_1cdec0eac_Directive> _1ce1455a4_findDirective(jule::Slice<jule::Ptr<_1cdec0eac_Directive>>* _425223_directives, jule::Str _425254_d) {
	{
		auto expr = _425223_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6aceb4c:;
		if (it != expr_end) {
			jule::Ptr<_1cdec0eac_Directive> _425317_dr = *it;
			{
				if (((*((*(_425317_dr))._field_Tag))._field_Kind == _425254_d)) {
					return _425317_dr;;
				};
			}
			_iter_next_1e6aceb4c:;
			++it;
			goto _iter_begin_1e6aceb4c;
		}
		_iter_end_1e6aceb4c:;
	};
	return nullptr;;
}



inline jule::Any _1ce14596c_findBuiltinsImport(jule::Str* _426124_ident, jule::Ptr<_1ce06b0ac_ImportInfo> _426136_imp) {
	return _1ce2396cb_findPackageBuiltinDef(&((*(_426136_imp))._field_LinkPath), _426124_ident);;
}



inline void _1ce145b9d_fitBitsize(jule::Ptr<_1ce11bc0c_Data>* _427020_d) {
	jule::Ptr<_1ce1557a1_Prim> _42719_prim = _1ce150328_Prim((*((*(_427020_d))))._field_Kind.ptr());;
	jule::I32 _42725_z = _22be0a4d6_BitsizeOf(_1ce155ae2_Str(_42719_prim.ptr()));;
	{
		
		if (_22be1a13e_IsI64((*((*(_427020_d))))._field_Constant.ptr())) {
			_case_begin_1e6ad2413:;
			{
				jule::I32 _42759_k = _22be0c010_BitsizeOfInt(_22be17a43_ReadI64((*((*(_427020_d))))._field_Constant));;
				if (((_42759_k > _42725_z) || _22be15238_IsUnsigInt((*_42719_prim.alloc)._field_Kind))) {
					(*(*((*(_427020_d))))._field_Constant.alloc)._field_Kind=_22be0a827_IntFromBits(_42759_k);
					(*((*(_427020_d))))._field_Kind=(*((*(_1ce238422_findBuiltinTypeAlias((*(*((*(_427020_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_22be1a3c5_IsU64((*((*(_427020_d))))._field_Constant.ptr())) {
			_case_begin_1e6ad2479:;
			{
				jule::I32 _42819_k = _22be0c2c9_BitsizeOfUint(_22be17cc9_ReadU64((*((*(_427020_d))))._field_Constant));;
				if (((_42819_k > _42725_z) || _22be14e2a_IsSigInt((*_42719_prim.alloc)._field_Kind))) {
					(*(*((*(_427020_d))))._field_Constant.alloc)._field_Kind=_22be0aaad_UintFromBits(_42819_k);
					(*((*(_427020_d))))._field_Kind=(*((*(_1ce238422_findBuiltinTypeAlias((*(*((*(_427020_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_22be1ab78_IsF64((*((*(_427020_d))))._field_Constant.ptr())) {
			_case_begin_1e6ad24e0:;
			{
				if ((_42725_z == 64LLU)) {
					return;;
				};
				jule::I32 _42919_k = _22be0bc46_BitsizeOfFloat(_22be1857c_ReadF64((*((*(_427020_d))))._field_Constant));;
				if ((_42919_k > _42725_z)) {
					(*(*((*(_427020_d))))._field_Constant.alloc)._field_Kind=_22be0ad77_FloatFromBits(_42919_k);
					(*((*(_427020_d))))._field_Kind=(*((*(_1ce238422_findBuiltinTypeAlias((*(*((*(_427020_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		_match_end_1e6ad2303:;
	};
}



inline void _1ce145ecd_makeStructLitAlloc(jule::Ptr<_1ce11bc0c_Data>* _429928_d, jule::Ptr<_1cdeea965_StructLitExprModel>* _429943_lit) {
	(*((*(_429928_d))))._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(jule::new_ptr<_1ce1592cc_Sptr>(_1ce1592cc_Sptr{._field_Elem=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>((*((*(_429943_lit))))._field_Strct, 0)})}), 21)});
	(*((*(_429928_d))))._field_Model=jule::Any(jule::new_ptr<_1cdeeac62_AllocStructLitExprModel>(_1cdeeac62_AllocStructLitExprModel{._field_Lit=(*(_429943_lit))}), &__jule_any_type112);
}



inline jule::Ptr<_1ce0b4105_Var> _1ce146352_buildErrorVar(jule::Ptr<_1ce0497c7_Scope>* _431023_s, jule::Ptr<_1cdec9aed_FnCallExpr>* _431039_fc) {
	return jule::new_ptr<_1ce0b4105_Var>(_1ce0b4105_Var{._field_Scope=(*(_431023_s)), ._field_Token=(*((*(_431039_fc))))._field_Token, ._field_Ident=jule::Str::lit("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=(*(_1ce238422_findBuiltinTypeAlias(jule::Str::lit("any", 3))))._field_Kind, ._field_Value=jule::new_ptr<_1ce11cd84_Value>(_1ce11cd84_Value{._field_Data=jule::new_ptr<_1ce11bc0c_Data>()}), });;
}



inline jule::Any _1ce1466c6_findBuiltinsSema(jule::Str* _432522_ident, jule::Ptr<_1ce08b42e_Sema> _432538_s) {
	{
		auto expr = &((*((*(_432538_s))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1e6addc38:;
		if (it != expr_end) {
			jule::Ptr<_1ce06b0ac_ImportInfo> _432617_imp = *it;
			{
				if (((*(_432617_imp))._field_ImportAll || _1ce06d93e_existIdent(_432617_imp, (*(_432522_ident))))) {
					jule::Any _432817_def = _1ce14596c_findBuiltinsImport(_432522_ident, _432617_imp);;
					if ((_432817_def != nullptr)) {
						return _432817_def;;
					};
				};
			}
			_iter_next_1e6addc38:;
			++it;
			goto _iter_begin_1e6addc38;
		}
		_iter_end_1e6addc38:;
	};
	jule::Str _43369_ppath = _1cdeb23ee_Dir((*(*_432538_s.alloc)._field_file.alloc)._field_File.ptr());;
	if (_22aae7867_HasPrefix(_43369_ppath, _22abd9a25_PathStdlib)) {
		(_43369_ppath).mut_slice(_22abd9a25_PathStdlib.len());;
		_43369_ppath=(jule::Str::lit("std", 3) + _22aaed63c_Replace(_43369_ppath, jule::Str::lit("/", 1), jule::Str::lit("::", 2), -1LL));
		return _1ce2396cb_findPackageBuiltinDef(&(_43369_ppath), _432522_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1ce146990_isOkForShifting(jule::Ptr<_1ce11bc0c_Data>* _435025_d) {
	if (_1ce11c614_IsConst((*(_435025_d)).ptr())) {
		{
			
			if (_22be1a13e_IsI64((*((*(_435025_d))))._field_Constant.ptr())) {
				_case_begin_1e6ae2126:;
				{
					return (_22be17a43_ReadI64((*((*(_435025_d))))._field_Constant) >= 0LL);;
				}
			}
			else if (_22be1a3c5_IsU64((*((*(_435025_d))))._field_Constant.ptr())) {
				_case_begin_1e6ae21c0:;
				{
					return true;;
				}
			}
			else if (_22be1ab78_IsF64((*((*(_435025_d))))._field_Constant.ptr())) {
				_case_begin_1e6ae2247:;
				{
					return (_22be1857c_ReadF64((*((*(_435025_d))))._field_Constant) >= 0LL);;
				}
			}
			else {
				_case_begin_1e6ae208d:;
				{
					return false;;
				}
			}
			_match_end_1e6ae1ec2:;
		};
	};
	jule::Ptr<_1ce1557a1_Prim> _43635_prim = _1ce150328_Prim((*((*(_435025_d))))._field_Kind.ptr());;
	return ((_43635_prim != nullptr) && _22be15502_IsInt(_1ce155ae2_Str(_43635_prim)));;
}



inline jule::Bool _1ce146d69_isInstancedStruct(jule::Ptr<_1cdee571d_StructIns> _436722_s) {
	return ((*((*(_436722_s))._field_Decl))._field_Generics.len() == (*_436722_s.alloc)._field_Generics.len());;
}



inline jule::Bool _1ce147166_isPtrArithmeticCompatible(jule::Ptr<_1ce11bc0c_Data>* _437135_l, jule::Ptr<_1ce11bc0c_Data>* _437150_r) {
	jule::Ptr<_1ce15ca94_Ptr> _43725_ptr = _1ce150845_Ptr((*((*(_437150_r))))._field_Kind.ptr());;
	if ((_43725_ptr != nullptr)) {
		return _1ce14d3d1_Equal((*(_1ce150845_Ptr((*((*(_437135_l))))._field_Kind)))._field_Elem, (*_43725_ptr.alloc)._field_Elem);;
	};
	if (_1ce11c614_IsConst((*(_437150_r)).ptr())) {
		return _1ce1033db_intAssignable(jule::Str::lit("int", 3), _437150_r);;
	};
	_1ce1038c5_typeCompatibilityChecker _43799_tcc = _1ce1038c5_typeCompatibilityChecker{._field_dest=_1ce2360bd_primInt, ._field_src=(*((*(_437150_r))))._field_Kind, };;
	return _1ce10508b_check(&_43799_tcc);;
}



inline void _1ce14750c_applyCastKindModel(jule::Ptr<_1ce11bc0c_Data>* _438628_d, jule::Ptr<_1ce14cbc7_TypeKind>* _438643_t, jule::Ptr<_1cdeab4b4_Token>* _438662_token) {
	(*((*(_438628_d))))._field_Model=jule::Any(jule::new_ptr<_1cdeeb2e5_CastingExprModel>(_1cdeeb2e5_CastingExprModel{._field_Token=(*(_438662_token)), ._field_Expr=jule::new_ptr<_1ce11bc0c_Data>((*((*(_438628_d))))), ._field_Kind=(*(_438643_t)), ._field_ExprKind=(*((*(_438628_d))))._field_Kind}), &__jule_any_type93);
}



inline void _1ce1478a3_applyCastKind(jule::Ptr<_1ce11bc0c_Data>* _439523_d, jule::Ptr<_1ce14cbc7_TypeKind>* _439538_t, jule::Ptr<_1cdeab4b4_Token>* _439557_token) {
	_1ce14750c_applyCastKindModel(_439523_d, _439538_t, _439557_token);
	(*((*(_439523_d))))._field_Kind=(*(_439538_t));
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce147ab2_buildVoidData(void) {
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce234d36_primVoid, });;
}



inline jule::Str _1ce147e36_checkDataForIntegerIndexing(jule::Ptr<_1ce11bc0c_Data>* _440637_d, jule::Ptr<_1cdeab4b4_Token>* _440652_token) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_440637_d)) == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_1ce150328_Prim((*((*(_440637_d))))._field_Kind.ptr()) == nullptr)) {
			_case_begin_1e6aeb95a:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_22be15502_IsInt(_1ce155ae2_Str(_1ce150328_Prim((*((*(_440637_d))))._field_Kind.ptr()).ptr()))))) {
			_case_begin_1e6aeb9c1:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_1ce11c614_IsConst((*(_440637_d)).ptr())) {
			_case_begin_1e6aeba37:;
			{
				if ((_22be18d30_AsF64((*((*(_440637_d))))._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str::lit("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_1ce150328_Prim((*((*(_440637_d))))._field_Kind.ptr()) == nullptr) || _1ce11c614_IsConst((*(_440637_d)).ptr()) || (_22be0a21c_RealKindOf(_1ce155ae2_Str(_1ce150328_Prim((*((*(_440637_d))))._field_Kind).ptr())) != _22be0a21c_RealKindOf(jule::Str::lit("int", 3)))) {
			_case_begin_1e6aeba9d:;
			{
				_1ce1478a3_applyCastKind(_440637_d, &(_1ce2360bd_primInt), _440652_token);
			}
		}
		_match_end_1e6aeb8a0:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _1ce1482cc_applyCastModelByEnum(jule::Ptr<_1ce11bc0c_Data>* _443130_d, jule::Ptr<_1ce01d416_Enum> _443144_e, jule::Ptr<_1cdeab4b4_Token>* _443159_token) {
	if ((_443144_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1ce1557a1_Prim> _44355_p = _1ce150328_Prim((*((*(_443144_e))._field_Kind))._field_Kind.ptr());;
	if (_1ce158c38_IsStr(_44355_p.ptr())) {
		return;;
	};
	_1ce14750c_applyCastKindModel(_443130_d, &((*(*(_443144_e))._field_Kind.alloc)._field_Kind), _443159_token);
}



inline void _1ce1485b8_castConstByType(jule::Str* _444221_t, jule::Ptr<_1ce11bc0c_Data>* _444234_d) {
	{
		
		if (_22be14e2a_IsSigInt((*(_444221_t)))) {
			_case_begin_1e6b028b7:;
			{
				{
					auto _match_expr{ _22be0a4d6_BitsizeOf(_22be0a21c_RealKindOf((*(_444221_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1e6b03489:;
						{
							_22be190d8_SetI64((*((*(_444234_d))))._field_Constant.ptr(), _22be18813_AsI64((*((*(_444234_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1e6b03500:;
						{
							_22be190d8_SetI64((*((*(_444234_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I32>(_22be18813_AsI64((*((*(_444234_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1e6b03566:;
						{
							_22be190d8_SetI64((*((*(_444234_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I16>(_22be18813_AsI64((*((*(_444234_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1e6b035cc:;
						{
							_22be190d8_SetI64((*((*(_444234_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I8>(_22be18813_AsI64((*((*(_444234_d))))._field_Constant))));
						}
					}
					_match_end_1e6b031c0:;
				};
			}
		}
		else if (_22be15238_IsUnsigInt((*(_444221_t)))) {
			_case_begin_1e6b02961:;
			{
				{
					auto _match_expr{ _22be0a4d6_BitsizeOf(_22be0a21c_RealKindOf((*(_444221_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1e6b075c0:;
						{
							_22be19391_SetU64((*((*(_444234_d))))._field_Constant.ptr(), _22be18a99_AsU64((*((*(_444234_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1e6b07636:;
						{
							_22be19391_SetU64((*((*(_444234_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U32>(_22be18a99_AsU64((*((*(_444234_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1e6b0769c:;
						{
							_22be19391_SetU64((*((*(_444234_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U16>(_22be18a99_AsU64((*((*(_444234_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1e6b07713:;
						{
							_22be19391_SetU64((*((*(_444234_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U8>(_22be18a99_AsU64((*((*(_444234_d))))._field_Constant))));
						}
					}
					_match_end_1e6b02e5b:;
				};
			}
		}
		else if (_22be15843_IsFloat((*(_444221_t)))) {
			_case_begin_1e6b029c7:;
			{
				{
					auto _match_expr{ _22be0a4d6_BitsizeOf(_22be0a21c_RealKindOf((*(_444221_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1e6b07a87:;
						{
							_22be19baa_SetF64((*((*(_444234_d))))._field_Constant.ptr(), _22be18d30_AsF64((*((*(_444234_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1e6b0b717:;
						{
							_22be19baa_SetF64((*((*(_444234_d))))._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F32>(_22be18d30_AsF64((*((*(_444234_d))))._field_Constant))));
						}
					}
					_match_end_1e6b07b64:;
				};
			}
		}
		_match_end_1e6b02774:;
	};
}



inline void _1ce148ad5_updateModelToGenericIns(jule::Any* _447633_m, jule::Ptr<_1ce00a832_FnIns>* _447652_f) {
	{
		auto &_match_expr{ (*(_447633_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1e6b0ba9c:;
			{
				(*(_447633_m))=jule::Any((*(_447652_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1e6b0a6c2:;
			{
				(*((*(_447633_m)).cast_ptr<_1cdeee738_StructSubIdentExprModel>(&__jule_any_type98)))._field_Method=(*(_447652_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1e6b0bb13:;
			{
				(*((*(_447633_m)).cast_ptr<_1cdeeeace_StructStaticIdentExprModel>(&__jule_any_type96)))._field_Method=(*(_447652_f));
			}
		}
		_match_end_1e6b0cb7a:;
	};
}



inline jule::Bool _1ce148d49_pushSubIdentFromExpr(jule::Any _448729_expr, jule::Ptr<_1cdec2464_SubIdentTypeDecl>* _448750_t) {
	{
		auto &_match_expr{ _448729_expr };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1e6b0e363:;
			{
				jule::Ptr<_1cdec76de_IdentExpr> _449013_e = _448729_expr.unsafe_cast_ptr<_1cdec76de_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1cdec219a_IdentTypeDecl>> &__jule_push_dest = (*((*(_448750_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1cdec219a_IdentTypeDecl>(_1cdec219a_IdentTypeDecl{._field_Token=(*(_449013_e))._field_Token, ._field_Ident=(*_449013_e.alloc)._field_Ident, })); };
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1e6b106b6:;
			{
				jule::Ptr<_1cdec8ed7_SubIdentExpr> _449613_e = _448729_expr.unsafe_cast_ptr<_1cdec8ed7_SubIdentExpr>();;
				if ((!(_1ce148d49_pushSubIdentFromExpr((*((*(_449613_e))._field_Expr))._field_Kind, _448750_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_1cdec219a_IdentTypeDecl>> &__jule_push_dest = (*((*(_448750_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1cdec219a_IdentTypeDecl>(_1cdec219a_IdentTypeDecl{._field_Token=(*_449613_e.alloc)._field_Ident, ._field_Ident=(*((*_449613_e.alloc)._field_Ident))._field_Kind, })); };
			}
		}
		else {
			_case_begin_1e6b10232:;
			{
				return false;;
			}
		}
		_match_end_1e6b0eb9e:;
	};
	return true;;
}



inline jule::Str _1ce149113_constoa(jule::Ptr<_22be1616d_Const>* _451013_c) {
	{
		
		if (_22be1a13e_IsI64((*(_451013_c)).ptr())) {
			_case_begin_1e6b108b4:;
			{
				return _22be07cdb_FmtInt(_22be17a43_ReadI64((*(_451013_c)).ptr()), 10LL);;
			}
		}
		else if (_22be1a3c5_IsU64((*(_451013_c)).ptr())) {
			_case_begin_1e6b13477:;
			{
				return _22be07923_FmtUint(_22be17cc9_ReadU64((*(_451013_c)).ptr()), 10LL);;
			}
		}
		else {
			_case_begin_1e6b10298:;
			{
				return jule::Str();;
			}
		}
		_match_end_1e6b1280b:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce149542_evalEnumStatic(jule::Ptr<_1ce01d416_Enum>* _452124_enm, jule::Ptr<_1ce01c899_EnumItem>* _452141_item, jule::Ptr<_1cdeab4b4_Token>* _452163_token) {
	jule::Ptr<_1ce11bc0c_Data> _45229_d = jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>((*(_452124_enm)), 3)}), });;
	if (((*(_452141_item)) != nullptr)) {
		(*(_45229_d))._field_Constant=jule::new_ptr<_22be1616d_Const>((*(*((*((*((*(_452141_item))))._field_Value))._field_Data))._field_Constant.alloc));
		(*_45229_d.alloc)._field_Model=jule::Any((*_45229_d.alloc)._field_Constant, &__jule_any_type19);
		_1ce1482cc_applyCastModelByEnum(&(_45229_d), (*(_452124_enm)), _452163_token);
	};
	return _45229_d;;
}



inline jule::Ptr<_1cdeea965_StructLitExprModel> _1ce14980b_isLitBased(jule::Any* _453820_m) {
	{
		auto &_match_expr{ (*(_453820_m)) };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1e6b1824b:;
			{
				return (*(_453820_m)).cast_ptr<_1cdeea965_StructLitExprModel>(&__jule_any_type95);;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1e6b182b2:;
			{
				return (*((*(_453820_m)).cast_ptr<_1cdeeac62_AllocStructLitExprModel>(&__jule_any_type112)))._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1e6b18328:;
			{
				jule::Ptr<_1cdeee738_StructSubIdentExprModel> _454513_ssi = (*(_453820_m)).cast_ptr<_1cdeee738_StructSubIdentExprModel>(&__jule_any_type98);;
				return _1ce14980b_isLitBased(&((*((*(_454513_ssi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1e6b1838e:;
			{
				jule::Ptr<_1cdeeb2e5_CastingExprModel> _454813_c = (*(_453820_m)).cast_ptr<_1cdeeb2e5_CastingExprModel>(&__jule_any_type93);;
				return _1ce14980b_isLitBased(&((*((*(_454813_c))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1e6b17d0b:;
			{
				return nullptr;;
			}
		}
		_match_end_1e6b16634:;
	};
}



inline void _1ce149ae7_makeImplicitDeref(jule::Ptr<_1ce11bc0c_Data>* _455527_d, jule::Ptr<_1cdeab4b4_Token> _455541_baseToken) {
	jule::Ptr<_1cdeea091_UnaryExprModel> _45569_unary = jule::new_ptr<_1cdeea091_UnaryExprModel>(_1cdeea091_UnaryExprModel{._field_Expr=jule::new_ptr<_1ce11bc0c_Data>((*((*(_455527_d))))), ._field_Op=jule::new_ptr<_1cdeab4b4_Token>((*(_455541_baseToken)))});;
	(*((*(_45569_unary))._field_Op))._field_Id=static_cast<jule::U32>(62LLU);
	(*(*_45569_unary.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("*", 1);
	(*((*(_455527_d))))._field_Model=jule::Any(_45569_unary, &__jule_any_type110);
}



inline void _1b869d1c7_updateRefer(jule::Ptr<_1ce00da00_ReferenceStack> _456623_ref, jule::Ptr<_1ce00a832_FnIns>* _456646_old, jule::Ptr<_1ce00a832_FnIns>* _456659_new) {
	{
		auto expr = &((*_456623_ref.alloc)._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b869ead0:;
		if (it != expr_end) {
			jule::I32 _45679_i = it - expr->begin();
			jule::Any _456712_sym = *it;
			{
				if ((__jule_any_type7_compare(_456712_sym, (*(_456646_old))))) {
					(*(_456623_ref))._field_buffer[_45679_i]=jule::Any((*(_456659_new)), &__jule_any_type7);
				};
			}
			_iter_next_1b869ead0:;
			++it;
			_45679_i++;
			goto _iter_begin_1b869ead0;
		}
		_iter_end_1b869ead0:;
	};
}



inline void _1ce14a279_makeVariadic(jule::Ptr<_1ce11bc0c_Data>* _457422_d, jule::Ptr<_1ce14cbc7_TypeKind> _457436_elem) {
	(*((*(_457422_d))))._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_BindIdent=(*_457436_elem.alloc)._field_BindIdent, ._field_Generic=(*(_457436_elem))._field_Generic, ._field_Variadic=true, ._field_Kind=(*_457436_elem.alloc)._field_Kind});
}



inline jule::Bool _1ce16842e_kindUsesGenerics(jule::Ptr<_1ce14cbc7_TypeKind>* _171126_k, jule::Slice<jule::Ptr<_1cdecdc9a_GenericDecl>>* _171141_generics) {
	{
		auto expr = _171141_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b899329c:;
		if (it != expr_end) {
			jule::Ptr<_1cdecdc9a_GenericDecl> *_171212_g = it;
			{
				if (static__1ce168000_exist(&((*((*(_171212_g))))._field_Ident), _171126_k)) {
					return true;;
				};
			}
			_iter_next_1b899329c:;
			++it;
			goto _iter_begin_1b899329c;
		}
		_iter_end_1b899329c:;
	};
	return false;;
}



inline jule::Bool _1ce1687e7_hasDirective(jule::Slice<jule::Ptr<_1cdec0eac_Directive>>* _172122_directives, jule::Str _172153_tag) {
	{
		auto expr = _172122_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b89943be:;
		if (it != expr_end) {
			jule::Ptr<_1cdec0eac_Directive> _172217_dr = *it;
			{
				if (((*((*(_172217_dr))._field_Tag))._field_Kind == _172153_tag)) {
					return true;;
				};
			}
			_iter_next_1b89943be:;
			++it;
			goto _iter_begin_1b89943be;
		}
		_iter_end_1b89943be:;
	};
	return false;;
}



inline jule::Bool _1ce168ab1_canGetPtr(jule::Ptr<_1ce11bc0c_Data>* _173019_d) {
	{
		
		if ((!((*((*(_173019_d))))._field_Lvalue)) || _1ce11c614_IsConst((*(_173019_d)).ptr())) {
			_case_begin_1b899547a:;
			{
				return false;;
			}
		}
		else if ((_1ce151615_Fn((*((*(_173019_d))))._field_Kind.ptr()) != nullptr) || (_1ce150acb_Enum((*((*(_173019_d))))._field_Kind) != nullptr)) {
			_case_begin_1b8995513:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1b8995414:;
			{
				return true;;
			}
		}
		_match_end_1b89948ca:;
	};
}



inline jule::Bool _1ce168e02_isValidForSptrType(jule::Ptr<_1ce14cbc7_TypeKind>* _174228_t) {
	jule::Ptr<_1cdee571d_StructIns> _17439_s = _1ce15189b_Struct((*(_174228_t)).ptr());;
	if ((((_17439_s != nullptr) && ((*_17439_s.alloc)._field_Decl != nullptr)) && (*(*_17439_s.alloc)._field_Decl.alloc)._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1ce169188_isValidForRef(jule::Ptr<_1ce14cbc7_TypeKind>* _175123_t) {
	return (_1ce151615_Fn((*(_175123_t)).ptr()) == nullptr);;
}



inline jule::Bool _1ce169452_isBuiltinStrConvertable(jule::Ptr<_1ce14cbc7_TypeKind>* _175433_t) {
	return ((((!(_1ce14e03b_Void((*(_175433_t)).ptr()))) && (_1ce151615_Fn((*(_175433_t)).ptr()) == nullptr)) && (_1ce15214e_Tup((*(_175433_t)).ptr()) == nullptr)) && (!(_1ce1523d5_comptime((*(_175433_t)).ptr()))));;
}



inline jule::Str _1ce16971b_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _175827_tokens) {
	if ((((*(_175827_tokens)).len() == 1LL) && ((*((*(_175827_tokens))[0LL]))._field_Id == static_cast<jule::U32>(31LLU)))) {
		return jule::Str::lit("std::unsafe", 11);;
	};
	jule::I32 _17629_n = 0LL;;
	{
		auto expr = _175827_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b899b32c:;
		if (it != expr_end) {
			jule::Ptr<_1cdeab4b4_Token> *_176312_token = it;
			{
				_17629_n+=(*((*(_176312_token))))._field_Kind.len();
				_17629_n+=2LL;
			}
			_iter_next_1b899b32c:;
			++it;
			goto _iter_begin_1b899b32c;
		}
		_iter_end_1b899b32c:;
	};
	_22ab0b88c_StrBuilder _17679_s = static__22ab0bb56_New(_17629_n);;
	{
		auto expr = _175827_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b899c1c9:;
		if (it != expr_end) {
			jule::I32 _17689_i = it - expr->begin();
			jule::Ptr<_1cdeab4b4_Token> *_176812_token = it;
			{
				_22ab154bc_WriteStr(&_17679_s, (*((*(_176812_token))))._field_Kind);
				if ((((*(_175827_tokens)).len() - _17689_i) > 1LL)) {
					_22ab154bc_WriteStr(&_17679_s, jule::Str::lit("::", 2));
				};
			}
			_iter_next_1b899c1c9:;
			++it;
			_17689_i++;
			goto _iter_begin_1b899c1c9;
		}
		_iter_end_1b899c1c9:;
	};
	return _22ab15cb4_Str(&_17679_s);;
}



inline jule::Ptr<_1ce1557a1_Prim> _1ce169ae5_buildPrimType(jule::Str _177718_kind) {
	return jule::new_ptr<_1ce1557a1_Prim>(_1ce1557a1_Prim{._field_Kind=_177718_kind});;
}



inline void _1ce16a1cd_applyImplicitCast(jule::Ptr<_1ce14cbc7_TypeKind>* _180527_dest, jule::Ptr<_1ce11bc0c_Data>* _180549_d, jule::Ptr<_1cdeab4b4_Token>* _180564_token) {
	if (_1ce14dca5_IsNil((*((*(_180549_d))))._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1ce1557a1_Prim> _18095_destPrim = _1ce150328_Prim((*(_180527_dest)).ptr());;
	if (((_18095_destPrim != nullptr) && _1ce158ebe_IsAny(_18095_destPrim))) {
		jule::Ptr<_1ce1557a1_Prim> _18119_prim = _1ce150328_Prim((*((*(_180549_d))))._field_Kind);;
		if (((_18119_prim == nullptr) || (!(_1ce158ebe_IsAny(_18119_prim.ptr()))))) {
			_1ce1478a3_applyCastKind(_180549_d, _180527_dest, _180564_token);
		};
		return;;
	};
	jule::Ptr<_1ce01ac0a_Trait> _18185_dt = _1ce151b32_Trait((*(_180527_dest)).ptr());;
	if ((_18185_dt != nullptr)) {
		jule::Ptr<_1ce01ac0a_Trait> _18209_bt = _1ce151b32_Trait((*((*(_180549_d))))._field_Kind);;
		if (((_18209_bt == nullptr) || (_18209_bt != _18185_dt))) {
			_1ce14750c_applyCastKindModel(_180549_d, _180527_dest, _180564_token);
			return;;
		};
	};
	if (((_1ce150d62_TypeEnum((*(_180527_dest)).ptr()) != nullptr) && (_1ce150d62_TypeEnum((*((*(_180549_d))))._field_Kind) == nullptr))) {
		_1ce14750c_applyCastKindModel(_180549_d, _180527_dest, _180564_token);
		return;;
	};
}



inline jule::Bool _1ce16a497_validTypeForXof(jule::Ptr<_1ce14cbc7_TypeKind>* _183325_t) {
	return ((!(_1ce14e03b_Void((*(_183325_t)).ptr()))) && (_1ce151615_Fn((*(_183325_t)).ptr()) == nullptr));;
}



inline __jule_tuple_x_1ce116894_SymbolTable__jule_tuple_s_22a93672d_Log _1ce16d5aa_buildSymbols(jule::Ptr<_1cdebead2_Ast>* _1622_ast, jule::Trait<_1ce068197_Importer>* _1638_importer, jule::Ptr<_1ce0149c3_symbolBuilder> _1662_owner) {
	__jule_tuple_x_1ce116894_SymbolTable__jule_tuple_s_22a93672d_Log __jule_func_result;
	jule::Ptr<_1ce0149c3_symbolBuilder> _179_sb = jule::new_ptr<_1ce0149c3_symbolBuilder>(_1ce0149c3_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_ast=(*(_1622_ast)), });;
	_1ce01a0c2_build(_179_sb);
	if (((*_179_sb.alloc)._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*_179_sb.alloc)._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = (*_179_sb.alloc)._field_errors;
	return __jule_func_result;;
}



inline __jule_tuple_x_1ce06ded3_Package__jule_tuple_s_22a93672d_Log _1ce16da2d_analyzePackage(jule::Slice<jule::Ptr<_1cdebead2_Ast>>* _3024_files, jule::Trait<_1ce068197_Importer>* _3044_importer, jule::I32* _3065_flags) {
	__jule_tuple_x_1ce06ded3_Package__jule_tuple_s_22a93672d_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1ce116894_SymbolTable>> _329_tables = jule::Slice<jule::Ptr<_1ce116894_SymbolTable>>::alloc(0LL, (*(_3024_files)).len());;
	{
		auto expr = _3024_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8624505:;
		if (it != expr_end) {
			jule::Ptr<_1cdebead2_Ast> _3317_f = *it;
			{
				jule::Ptr<_1ce116894_SymbolTable> _3413_table;;
				jule::Slice<_22a93672d_Log> _3424_errors;;
				({
					__jule_tuple_x_1ce116894_SymbolTable__jule_tuple_s_22a93672d_Log __jule_assign_result = _1ce16d5aa_buildSymbols(&(_3317_f), _3044_importer, nullptr);
					_3413_table = __jule_assign_result.__jule_result_arg0;
					_3424_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_3424_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _3424_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_1ce116894_SymbolTable>> &__jule_push_dest = _329_tables; __jule_push_dest.push(_3413_table); };
			}
			_iter_next_1b8624505:;
			++it;
			goto _iter_begin_1b8624505;
		}
		_iter_end_1b8624505:;
	};
	jule::Ptr<_1ce08b42e_Sema> _419_sema = jule::new_ptr<_1ce08b42e_Sema>(_1ce08b42e_Sema{._field_flags=(*(_3065_flags)), ._field_meta=jule::new_ptr<_1ce08a829_commonSemaMeta>()});;
	_1ce0b0a2a_check(_419_sema, &(_329_tables));
	if (((*_419_sema.alloc)._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = (*_419_sema.alloc)._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1ce06ded3_Package> _509_pkg = jule::new_ptr<_1ce06ded3_Package>(_1ce06ded3_Package{._field_Files=(*_419_sema.alloc)._field_files});;
	__jule_func_result.__jule_result_arg0 = _509_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1ce06ded3_Package__jule_tuple_s_22a93672d_Log _1ce16de5c_AnalyzePackage(jule::Slice<jule::Ptr<_1cdebead2_Ast>> _7423_files, jule::Trait<_1ce068197_Importer> _7442_importer, jule::I32 _7462_flags) {
	__jule_tuple_x_1ce06ded3_Package__jule_tuple_s_22a93672d_Log __jule_func_result;
	if ((_7423_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1ce06ded3_Package> _789_package;;
	jule::Slice<_22a93672d_Log> _7822_logs;;
	({
		__jule_tuple_x_1ce06ded3_Package__jule_tuple_s_22a93672d_Log __jule_assign_result = _1ce16da2d_analyzePackage(&(_7423_files), &(_7442_importer), &(_7462_flags));
		_789_package = __jule_assign_result.__jule_result_arg0;
		_7822_logs = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _789_package;
	__jule_func_result.__jule_result_arg1 = _7822_logs;
	return __jule_func_result;;
}



inline jule::Ptr<_1ce00a832_FnIns> _1ce23441d_findBuiltinFunc(jule::Str* _2621_ident) {
	{
		auto &_match_expr{ (*(_2621_ident)) };
		
		if (_match_expr == jule::Str::lit("out", 3)) {
			_case_begin_1b862ddc2:;
			{
				static jule::Ptr<_1ce00a832_FnIns> _2920_f = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>(_1ce239e7e_builtinCallerOut), });;
				return _2920_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("outln", 5)) {
			_case_begin_1b862de38:;
			{
				static jule::Ptr<_1ce00a832_FnIns> _3220_f = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>(_1ce23a3ad_builtinCallerOutln), });;
				return _3220_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("new", 3)) {
			_case_begin_1b862de9e:;
			{
				static jule::Ptr<_1ce00a832_FnIns> _3520_f = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>(_1ce23a7dc_builtinCallerNew), });;
				return _3520_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("panic", 5)) {
			_case_begin_1b862e026:;
			{
				static jule::Ptr<_1ce00a832_FnIns> _3820_f = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>(_1ce23ac1b_builtinCallerPanic), });;
				return _3820_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("make", 4)) {
			_case_begin_1b862e257:;
			{
				static jule::Ptr<_1ce00a832_FnIns> _4120_f = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>(_1ce23b37b_builtinCallerMake), });;
				return _4120_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("append", 6)) {
			_case_begin_1b862e2ce:;
			{
				static jule::Ptr<_1ce00a832_FnIns> _4420_f = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>(_1ce23b69a_builtinCallerAppend), });;
				return _4420_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("copy", 4)) {
			_case_begin_1b862e356:;
			{
				static jule::Ptr<_1ce00a832_FnIns> _4720_f = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>(_1ce23c0b3_builtinCallerCopy), });;
				return _4720_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("len", 3)) {
			_case_begin_1b862e3cd:;
			{
				static jule::Ptr<_1ce00a832_FnIns> _5020_f = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>(_1ce23d757_builtinCallerLen), });;
				return _5020_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("cap", 3)) {
			_case_begin_1b862e4ee:;
			{
				static jule::Ptr<_1ce00a832_FnIns> _5320_f = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>(_1ce23e00a_builtinCallerCap), });;
				return _5320_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("delete", 6)) {
			_case_begin_1b862e565:;
			{
				static jule::Ptr<_1ce00a832_FnIns> _5620_f = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>(_1ce23e923_builtinCallerDelete), });;
				return _5620_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("assert", 6)) {
			_case_begin_1b862e5cb:;
			{
				static jule::Ptr<_1ce00a832_FnIns> _5920_f = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>(_1ce23ed52_builtinCallerAssert), });;
				return _5920_f;;
			}
		}
		else {
			_case_begin_1b862dc07:;
			{
				return nullptr;;
			}
		}
		_match_end_1b862dd28:;
	};
}



inline jule::Ptr<_1ce14bdd5_TypeAlias> _1ce23472b_primTypeAlias(jule::Ptr<_1ce14cbc7_TypeKind>* _6623_k) {
	return jule::new_ptr<_1ce14bdd5_TypeAlias>(_1ce14bdd5_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1ce154d99_TypeSymbol>(_1ce154d99_TypeSymbol{._field_Kind=(*(_6623_k))}), });;
}



inline jule::Ptr<_1ce0b4105_Var> _1ce2380d1_findBuiltinVar(jule::Str* _9420_ident) {
	{
		auto &_match_expr{ (*(_9420_ident)) };
		
		if (_match_expr == jule::Str::lit("nil", 3)) {
			_case_begin_1b863689c:;
			{
				static jule::Ptr<_1ce0b4105_Var> _9720_v = jule::new_ptr<_1ce0b4105_Var>(_1ce0b4105_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=jule::new_ptr<_1ce154d99_TypeSymbol>(_1ce154d99_TypeSymbol{._field_Kind=_1ce234a39_primNil}), ._field_Value=jule::new_ptr<_1ce11cd84_Value>(_1ce11cd84_Value{._field_Data=jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Constant=static__22be173d3_NewNil()})}), });;
				return _9720_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("true", 4)) {
			_case_begin_1b8636913:;
			{
				static jule::Ptr<_1ce0b4105_Var> _11220_v = jule::new_ptr<_1ce0b4105_Var>(_1ce0b4105_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_1ce238422_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1ce11cd84_Value>(_1ce11cd84_Value{._field_Data=jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Constant=static__22be16b41_NewBool(true)})}), });;
				return _11220_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("false", 5)) {
			_case_begin_1b8636979:;
			{
				static jule::Ptr<_1ce0b4105_Var> _12520_v = jule::new_ptr<_1ce0b4105_Var>(_1ce0b4105_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_1ce238422_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1ce11cd84_Value>(_1ce11cd84_Value{._field_Data=jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Constant=static__22be16b41_NewBool(false)})}), });;
				return _12520_v;;
			}
		}
		else {
			_case_begin_1b862e9b6:;
			{
				return nullptr;;
			}
		}
		_match_end_1b863676a:;
	};
}



inline jule::Ptr<_1ce14bdd5_TypeAlias> _1ce238422_findBuiltinTypeAlias(jule::Str _14225_ident) {
	{
		auto &_match_expr{ _14225_ident };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1b863b709:;
			{
				static jule::Ptr<_1ce14bdd5_TypeAlias> _14520_t = _1ce23472b_primTypeAlias(&(_1ce2350de_primAny));;
				return _14520_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_1b863b792:;
			{
				static jule::Ptr<_1ce14bdd5_TypeAlias> _14820_t = _1ce23472b_primTypeAlias(&(_1ce2353db_primStr));;
				return _14820_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_1b863b808:;
			{
				static jule::Ptr<_1ce14bdd5_TypeAlias> _15120_t = _1ce23472b_primTypeAlias(&(_1ce235694_primBool));;
				return _15120_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1b863b990:;
			{
				static jule::Ptr<_1ce14bdd5_TypeAlias> _15420_t = _1ce23472b_primTypeAlias(&(_1ce23594c_primUintptr));;
				return _15420_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1b863ba06:;
			{
				static jule::Ptr<_1ce14bdd5_TypeAlias> _15720_t = _1ce23472b_primTypeAlias(&(_1ce235c05_primUint));;
				return _15720_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1b863ba6c:;
			{
				static jule::Ptr<_1ce14bdd5_TypeAlias> _16020_t = _1ce23472b_primTypeAlias(&(_1ce2360bd_primInt));;
				return _16020_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1b863bae4:;
			{
				static jule::Ptr<_1ce14bdd5_TypeAlias> _16320_t = _1ce23472b_primTypeAlias(&(_1ce236310_primI8));;
				return _16320_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1b863bb6b:;
			{
				static jule::Ptr<_1ce14bdd5_TypeAlias> _16620_t = _1ce23472b_primTypeAlias(&(_1ce2365a7_primI16));;
				return _16620_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1b863bc48:;
			{
				static jule::Ptr<_1ce14bdd5_TypeAlias> _16920_t = _1ce23472b_primTypeAlias(&(_1ce236b18_primI64));;
				return _16920_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1b863bcc0:;
			{
				static jule::Ptr<_1ce14bdd5_TypeAlias> _17220_t = _1ce23472b_primTypeAlias(&(_1ce237179_primU16));;
				return _17220_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1b863bd47:;
			{
				static jule::Ptr<_1ce14bdd5_TypeAlias> _17520_t = _1ce23472b_primTypeAlias(&(_1ce237432_primU32));;
				return _17520_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1b863bdbe:;
			{
				static jule::Ptr<_1ce14bdd5_TypeAlias> _17820_t = _1ce23472b_primTypeAlias(&(_1ce23791b_primU64));;
				return _17820_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1b863be46:;
			{
				static jule::Ptr<_1ce14bdd5_TypeAlias> _18120_t = _1ce23472b_primTypeAlias(&(_1ce237b5d_primF32));;
				return _18120_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1b863bebd:;
			{
				static jule::Ptr<_1ce14bdd5_TypeAlias> _18420_t = _1ce23472b_primTypeAlias(&(_1ce237d6c_primF64));;
				return _18420_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("byte", 4) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1b863c045:;
			{
				static jule::Ptr<_1ce14bdd5_TypeAlias> _18720_t = _1ce23472b_primTypeAlias(&(_1ce236dc1_primU8));;
				return _18720_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("rune", 4) || _match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1b863c0bc:;
			{
				static jule::Ptr<_1ce14bdd5_TypeAlias> _19020_t = _1ce23472b_primTypeAlias(&(_1ce236860_primI32));;
				return _19020_t;;
			}
		}
		else {
			_case_begin_1b8636e85:;
			{
				return nullptr;;
			}
		}
		_match_end_1b86370a6:;
	};
}



inline jule::Any _1ce2386a8_findBuiltinDef(jule::Str* _19720_ident) {
	jule::Ptr<_1ce0b4105_Var> _1989_v = _1ce2380d1_findBuiltinVar(_19720_ident);;
	if ((_1989_v != nullptr)) {
		return jule::Any(_1989_v, &__jule_any_type8);;
	};
	jule::Ptr<_1ce00a832_FnIns> _2029_f = _1ce23441d_findBuiltinFunc(_19720_ident);;
	if ((_2029_f != nullptr)) {
		return jule::Any(_2029_f, &__jule_any_type7);;
	};
	jule::Ptr<_1ce14bdd5_TypeAlias> _2069_ta = _1ce238422_findBuiltinTypeAlias((*(_19720_ident)));;
	if ((_2069_ta != nullptr)) {
		return jule::Any(_2069_ta, &__jule_any_type66);;
	};
	return nullptr;;
}



inline jule::Any _1ce238972_findBuiltinDefStdDebug(jule::Str* _21328_ident) {
	{
		auto &_match_expr{ (*(_21328_ident)) };
		
		if (_match_expr == jule::Str::lit("Out", 3)) {
			_case_begin_1b8a6d762:;
			{
				static jule::Ptr<_1ce00a832_FnIns> _21620_f = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>(_1ce2435e7_builtinCallerStdDebugOut), });;
				return jule::Any(_21620_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Outln", 5)) {
			_case_begin_1b8a6d7ea:;
			{
				static jule::Ptr<_1ce00a832_FnIns> _21920_f = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>(_1ce243a26_builtinCallerStdDebugOutln), });;
				return jule::Any(_21920_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1b8a6c222:;
			{
				return nullptr;;
			}
		}
		_match_end_1b8a6c596:;
	};
}



inline jule::Any _1ce238c3b_findBuiltinDefStdMem(jule::Str* _22626_ident) {
	{
		auto &_match_expr{ (*(_22626_ident)) };
		
		if (_match_expr == jule::Str::lit("SizeOf", 6)) {
			_case_begin_1b8a7017b:;
			{
				static jule::Ptr<_1ce00a832_FnIns> _22920_f = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>(_1ce241eec_builtinCallerStdMemSizeOf), });;
				return jule::Any(_22920_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("AlignOf", 7)) {
			_case_begin_1b8a704bc:;
			{
				static jule::Ptr<_1ce00a832_FnIns> _23220_f = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>(_1ce24242b_builtinCallerStdMemAlignOf), });;
				return jule::Any(_23220_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Free", 4)) {
			_case_begin_1b8a701e2:;
			{
				static jule::Ptr<_1ce00a832_FnIns> _23520_f = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>(_1ce24285a_builtinCallerStdMemFree), });;
				return jule::Any(_23520_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1b8a6d883:;
			{
				return nullptr;;
			}
		}
		_match_end_1b8a6dc29:;
	};
}



inline jule::Any _1ce239115_findBuiltinDefStdComptime(jule::Str* _24231_ident) {
	{
		auto &_match_expr{ (*(_24231_ident)) };
		
		if (_match_expr == jule::Str::lit("TypeOf", 6)) {
			_case_begin_1b8a72634:;
			{
				static jule::Ptr<_1ce00a832_FnIns> _24520_f = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>(_1ce240281_builtinCallerStdComptimeTypeOf), });;
				return jule::Any(_24520_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("ValueOf", 7)) {
			_case_begin_1b8a72942:;
			{
				static jule::Ptr<_1ce00a832_FnIns> _24820_f = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>(_1ce240902_builtinCallerStdComptimeValueOf), });;
				return jule::Any(_24820_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Line", 4)) {
			_case_begin_1b8a729a8:;
			{
				static jule::Ptr<_1ce00a832_FnIns> _25120_f = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>(_1ce240d31_builtinCallerStdComptimeLine), });;
				return jule::Any(_25120_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("File", 4)) {
			_case_begin_1b8a7269a:;
			{
				static jule::Ptr<_1ce00a832_FnIns> _25420_f = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>(_1ce241260_builtinCallerStdComptimeFile), });;
				return jule::Any(_25420_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Files", 5)) {
			_case_begin_1b8a72722:;
			{
				static jule::Ptr<_1ce00a832_FnIns> _25720_f = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>(_1ce24168e_builtinCallerStdComptimeFiles), });;
				return jule::Any(_25720_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("TypeAlias", 9)) {
			_case_begin_1b8a72a63:;
			{
				static jule::Ptr<_1ce00a832_FnIns> _26020_f = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>(_1ce241abd_builtinCallerStdComptimeTypeAlias), });;
				return jule::Any(_26020_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1b8a709b7:;
			{
				return nullptr;;
			}
		}
		_match_end_1b8a70951:;
	};
}



inline jule::Any _1ce239357_findBuiltinDefStdJuleIntegrated(jule::Str* _26737_ident) {
	{
		auto &_match_expr{ (*(_26737_ident)) };
		
		if (_match_expr == jule::Str::lit("ToStr", 5)) {
			_case_begin_1b8a769ce:;
			{
				static jule::Ptr<_1ce00a832_FnIns> _27020_f = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>(_1ce242c89_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_27020_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Emit", 4)) {
			_case_begin_1b8a76d31:;
			{
				static jule::Ptr<_1ce00a832_FnIns> _27320_f = jule::new_ptr<_1ce00a832_FnIns>(_1ce00a832_FnIns{._field_Decl=jule::new_ptr<_1ce00792d_Fn>(_1ce00792d_Fn{._field_Generics=jule::Slice<jule::Ptr<_1cdecdc9a_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_1ce11bc0c_Data>(jule::Ptr<_1ce11d934_Eval>*,jule::Ptr<_1cdec9aed_FnCallExpr>*,jule::Ptr<_1ce11bc0c_Data>*)>(_1ce2431b8_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_27320_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1b8a72aeb:;
			{
				return nullptr;;
			}
		}
		_match_end_1b8a743e4:;
	};
}



inline jule::Any _1ce2396cb_findPackageBuiltinDef(jule::Str* _28527_linkPath, jule::Str* _28543_ident) {
	{
		auto &_match_expr{ (*(_28527_linkPath)) };
		
		if (_match_expr == jule::Str::lit("std::comptime", 13)) {
			_case_begin_1b8a78e21:;
			{
				return _1ce239115_findBuiltinDefStdComptime(_28543_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::debug", 10)) {
			_case_begin_1b8a78b8a:;
			{
				return _1ce238972_findBuiltinDefStdDebug(_28543_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::mem", 8)) {
			_case_begin_1b8a78c01:;
			{
				return _1ce238c3b_findBuiltinDefStdMem(_28543_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::jule::integrated", 21)) {
			_case_begin_1b8a78e98:;
			{
				return _1ce239357_findBuiltinDefStdJuleIntegrated(_28543_ident);;
			}
		}
		else {
			_case_begin_1b8a77a46:;
			{
				return nullptr;;
			}
		}
		_match_end_1b8a78abe:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce239a50_builtinCallerError(jule::Ptr<_1ce11d934_Eval>* _30028_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _30043_fc) {
	if (((*((*(_30043_fc))))._field_Args.len() < 1LL)) {
		_1ce11de84_pushErr((*(_30028_e)).ptr(), (*((*(_30043_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("err", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_30043_fc))))._field_Args.len() > 1LL)) {
		_1ce11de84_pushErr((*(_30028_e)).ptr(), (*((*((*(_30043_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("error", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1ce11bc0c_Data> _3089_expr = _1ce13bb94_evalExpr((*(_30028_e)), (*((*(_30043_fc))))._field_Args[0LL]);;
	if ((_3089_expr == nullptr)) {
		return nullptr;;
	};
	if (_1ce11c0e7_IsNil(_3089_expr.ptr())) {
		_1ce11de84_pushErr((*(_30028_e)).ptr(), (*((*((*(_30043_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("you cannot call error function with nil", 39), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ce11bc0c_Data> _3179_d = _1ce147ab2_buildVoidData();;
	(*(_3179_d))._field_Model=jule::Any(jule::new_ptr<_1ce0033b8_BuiltinErrorCallExprModel>(_1ce0033b8_BuiltinErrorCallExprModel{._field_Err=_3089_expr}), &__jule_any_type23);
	return _3179_d;;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce239e7e_builtinCallerOut(jule::Ptr<_1ce11d934_Eval>* _32226_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _32241_fc, jule::Ptr<_1ce11bc0c_Data>* ) {
	if (((*((*(_32241_fc))))._field_Args.len() < 1LL)) {
		_1ce11de84_pushErr((*(_32226_e)).ptr(), (*((*(_32241_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("v", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_32241_fc))))._field_Args.len() > 1LL)) {
		_1ce11de84_pushErr((*(_32226_e)).ptr(), (*((*((*(_32241_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("out", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1ce11bc0c_Data> _3319_expr = _1ce13bb94_evalExpr((*(_32226_e)), (*((*(_32241_fc))))._field_Args[0LL]);;
	if ((_3319_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ce169452_isBuiltinStrConvertable(&((*(_3319_expr))._field_Kind))))) {
		_1ce11de84_pushErr((*(_32226_e)).ptr(), (*((*((*(_32241_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ce11bc0c_Data> _3419_d = _1ce147ab2_buildVoidData();;
	(*(_3419_d))._field_Model=jule::Any(jule::new_ptr<_1ce00067e_BuiltinOutCallExprModel>(_1ce00067e_BuiltinOutCallExprModel{._field_Expr=(*(_3319_expr))._field_Model, }), &__jule_any_type27);
	return _3419_d;;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce23a3ad_builtinCallerOutln(jule::Ptr<_1ce11d934_Eval>* _34628_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _34643_fc, jule::Ptr<_1ce11bc0c_Data>* _34665_d) {
	(*(_34665_d))=_1ce239e7e_builtinCallerOut(_34628_e, _34643_fc, _34665_d);
	if (((*(_34665_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*(_34665_d))))._field_Model=jule::Any(jule::new_ptr<_1ce000a58_BuiltinOutlnCallExprModel>(_1ce000a58_BuiltinOutlnCallExprModel{._field_Expr=(*((*((*(_34665_d))))._field_Model.cast_ptr<_1ce00067e_BuiltinOutCallExprModel>(&__jule_any_type27)))._field_Expr, }), &__jule_any_type28);
	return (*(_34665_d));;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce23a7dc_builtinCallerNew(jule::Ptr<_1ce11d934_Eval>* _35826_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _35841_fc, jule::Ptr<_1ce11bc0c_Data>* _35863_d) {
	if (((*((*(_35841_fc))))._field_Args.len() < 1LL)) {
		_1ce11de84_pushErr((*(_35826_e)).ptr(), (*((*(_35841_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_35841_fc))))._field_Args.len() > 2LL)) {
		_1ce11de84_pushErr((*(_35826_e)).ptr(), (*((*((*(_35841_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("new", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1ce11bc0c_Data> _3679_t = _1ce13ad80_evalExprKind((*(_35826_e)), (*((*((*(_35841_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_3679_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_3679_t))._field_Decl))) {
		_1ce11de84_pushErr((*(_35826_e)).ptr(), (*((*((*(_35841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1ce168e02_isValidForSptrType(&((*(_3679_t))._field_Kind))))) {
		jule::Ptr<_1cdee571d_StructIns> _37813_s = _1ce15189b_Struct((*(_3679_t))._field_Kind.ptr());;
		if ((((_37813_s != nullptr) && ((*_37813_s.alloc)._field_Decl != nullptr)) && (*(*_37813_s.alloc)._field_Decl.alloc)._field_Binded)) {
			_1ce11de84_pushErr((*(_35826_e)).ptr(), (*((*((*(_35841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*((*(_35863_d))))._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(jule::new_ptr<_1ce1592cc_Sptr>(_1ce1592cc_Sptr{._field_Elem=(*(_3679_t))._field_Kind}), 21)});
	if (((*((*(_35841_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1ce14cbc7_TypeKind> _39213_old = (*((*(_35826_e))))._field_prefix;;
		(*((*(_35826_e))))._field_prefix=(*(_3679_t))._field_Kind;
		jule::Ptr<_1ce11bc0c_Data> _39513_init = _1ce13bb94_evalExpr((*(_35826_e)), (*((*(_35841_fc))))._field_Args[1LL]);;
		(*((*(_35826_e))))._field_prefix=_39213_old;
		if ((_39513_init != nullptr)) {
			jule::Ptr<_1cdeab4b4_Token> _40017_token = (*((*((*(_35841_fc))))._field_Args[1LL]))._field_Token;;
			;
			_1ce0a0c6d_checkValidityForInitExpr((*((*(_35826_e))))._field_s, (!((*((*(_35826_e))))._field_immutable)), false, &((*(_3679_t))._field_Kind), &(_39513_init), &(_40017_token));
			_1ce09b8d4_checkAssignType((*((*(_35826_e))))._field_s, false, &((*(_3679_t))._field_Kind), &(_39513_init), _40017_token);
			(*((*(_35863_d))))._field_Model=jule::Any(jule::new_ptr<_1ce000e32_BuiltinNewCallExprModel>(_1ce000e32_BuiltinNewCallExprModel{._field_Kind=(*(_3679_t))._field_Kind, ._field_Init=(*_39513_init.alloc)._field_Model}), &__jule_any_type113);
		};
	} else {
		(*((*(_35863_d))))._field_Model=jule::Any(jule::new_ptr<_1ce000e32_BuiltinNewCallExprModel>(_1ce000e32_BuiltinNewCallExprModel{._field_Kind=(*(_3679_t))._field_Kind, }), &__jule_any_type113);
	};
	return (*(_35863_d));;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce23ac1b_builtinCallerPanic(jule::Ptr<_1ce11d934_Eval>* _42028_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _42043_fc, jule::Ptr<_1ce11bc0c_Data>* ) {
	if (((*((*(_42043_fc))))._field_Args.len() < 1LL)) {
		_1ce11de84_pushErr((*(_42028_e)).ptr(), (*((*(_42043_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("message", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_42043_fc))))._field_Args.len() > 1LL)) {
		_1ce11de84_pushErr((*(_42028_e)).ptr(), (*((*((*(_42043_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("panic", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1ce11bc0c_Data> _4299_expr = _1ce13bb94_evalExpr((*(_42028_e)), (*((*(_42043_fc))))._field_Args[0LL]);;
	if ((_4299_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1ce150328_Prim((*(_4299_expr))._field_Kind.ptr()) == nullptr) || (!(_1ce158c38_IsStr(_1ce150328_Prim((*(_4299_expr))._field_Kind).ptr()))))) {
		_1ce11de84_pushErr((*(_42028_e)).ptr(), (*((*(_42043_fc))))._field_Token, jule::Str::lit("panic function only accepts strings", 35), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ce11bc0c_Data> _4389_d = _1ce147ab2_buildVoidData();;
	(*(_4389_d))._field_Model=jule::Any(jule::new_ptr<_1ce00130b_BuiltinPanicCallExprModel>(_1ce00130b_BuiltinPanicCallExprModel{._field_Token=(*((*(_42043_fc))))._field_Token, ._field_Expr=(*(_4299_expr))._field_Model}), &__jule_any_type29);
	return _4389_d;;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce23b37b_builtinCallerMake(jule::Ptr<_1ce11d934_Eval>* _44627_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _44642_fc, jule::Ptr<_1ce11bc0c_Data>* _44664_d) {
	if (((*((*(_44642_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_44642_fc))))._field_Args.len() == 1LL)) {
			_1ce11de84_pushErr((*(_44627_e)).ptr(), (*((*(_44642_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("size", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		_1ce11de84_pushErr((*(_44627_e)).ptr(), (*((*(_44642_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type, size", 10), &__jule_any_type4)}));
		return nullptr;;
	} else if (((*((*(_44642_fc))))._field_Args.len() > 3LL)) {
		_1ce11de84_pushErr((*(_44627_e)).ptr(), (*((*((*(_44642_fc))))._field_Args[3LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ce11bc0c_Data> _4599_t = _1ce13ad80_evalExprKind((*(_44627_e)), (*((*((*(_44642_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4599_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4599_t))._field_Decl))) {
		_1ce11de84_pushErr((*(_44627_e)).ptr(), (*((*((*(_44642_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_1ce15137e_Slc((*(_4599_t))._field_Kind.ptr()) == nullptr)) {
		_1ce11de84_pushErr((*(_44627_e)).ptr(), (*((*((*(_44642_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*(_4599_t))._field_Kind), &__jule_any_type4),jule::Any(jule::Str::lit("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_44664_d))))._field_Kind=(*(_4599_t))._field_Kind;
	jule::Ptr<_1ce11bc0c_Data> _4749_lenExpr = _1ce13bb94_evalExpr(_1ce09b032_evalp((*((*(_44627_e))))._field_s, (*((*(_44627_e))))._field_lookup, (*(_4599_t))._field_Kind), (*((*(_44642_fc))))._field_Args[1LL]);;
	if ((_4749_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1ce127b6e_checkIntegerIndexingByData((*(_44627_e)).ptr(), &(_4749_lenExpr), (*((*((*(_44642_fc))))._field_Args[1LL]))._field_Token);
	jule::Ptr<_1ce001c68_BuiltinMakeCallExprModel> _4819_model = jule::new_ptr<_1ce001c68_BuiltinMakeCallExprModel>(_1ce001c68_BuiltinMakeCallExprModel{._field_Kind=(*(_4599_t))._field_Kind, ._field_Len=(*(_4749_lenExpr))._field_Model, });;
	(*((*(_44664_d))))._field_Model=jule::Any(_4819_model, &__jule_any_type114);
	if (((*((*(_44642_fc))))._field_Args.len() == 3LL)) {
		jule::Ptr<_1ce11bc0c_Data> _48713_capExpr = _1ce13bb94_evalExpr(_1ce09b032_evalp((*((*(_44627_e))))._field_s, (*((*(_44627_e))))._field_lookup, (*(_4599_t))._field_Kind), (*((*(_44642_fc))))._field_Args[2LL]);;
		if ((_48713_capExpr == nullptr)) {
			return (*(_44664_d));;
		};
		_1ce127b6e_checkIntegerIndexingByData((*(_44627_e)).ptr(), &(_48713_capExpr), (*((*((*(_44642_fc))))._field_Args[2LL]))._field_Token);
		(*(_4819_model))._field_Cap=(*(_48713_capExpr))._field_Model;
	};
	return (*(_44664_d));;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce23b69a_builtinCallerAppend(jule::Ptr<_1ce11d934_Eval>* _49729_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _49744_fc, jule::Ptr<_1ce11bc0c_Data>* _49766_d) {
	if (((*((*(_49744_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_49744_fc))))._field_Args.len() == 1LL)) {
			_1ce11de84_pushErr((*(_49729_e)).ptr(), (*((*(_49744_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("values", 6), &__jule_any_type4)}));
			return nullptr;;
		};
		_1ce11de84_pushErr((*(_49729_e)).ptr(), (*((*(_49744_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ce11bc0c_Data> _5079_t = _1ce13bb94_evalExpr((*(_49729_e)), (*((*(_49744_fc))))._field_Args[0LL]);;
	if ((_5079_t == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ce159ca0_Slc> _5129_s = _1ce15137e_Slc((*(_5079_t))._field_Kind.ptr());;
	if ((_5129_s == nullptr)) {
		_1ce11de84_pushErr((*(_49729_e)).ptr(), (*((*((*(_49744_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ce14cbc7_TypeKind> _5189_prefix = (*((*(_49729_e))))._field_prefix;;
	(*((*(_49729_e))))._field_prefix=(*(_5079_t))._field_Kind;
	__JULE_DEFER({
		(*((*(_49729_e))))._field_prefix=_5189_prefix;
	});;
	;
	;
	(*(_49766_d))=jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=(*(_5079_t))._field_Kind, ._field_Mutable=true, });
	{
		auto &_match_expr{ (*((*((*(_49744_fc))))._field_Args[1LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1b8ab1e6a:;
			{
				if (((*((*(_49744_fc))))._field_Args.len() > 2LL)) {
					_1ce11de84_pushErr((*(_49729_e)).ptr(), (*((*((*(_49744_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1ce11bc0c_Data> _53513_e1 = _1ce13bb94_evalExpr((*(_49729_e)), (*((*((*((*(_49744_fc))))._field_Args[1LL]))._field_Kind.unsafe_cast_ptr<_1cdec835a_VariadicExpr>()))._field_Expr);;
				if ((_53513_e1 == nullptr)) {
					return nullptr;;
				};
				if (((_1ce150328_Prim((*(_5129_s))._field_Elem.ptr()) != nullptr) && _1ce157198_IsU8(_1ce150328_Prim((*(_5129_s))._field_Elem).ptr()))) {
					if (((_1ce150328_Prim((*(_53513_e1))._field_Kind) != nullptr) && _1ce158c38_IsStr(_1ce150328_Prim((*(_53513_e1))._field_Kind).ptr()))) {
						_1ce14a279_makeVariadic(&(_53513_e1), _1ce236dc1_primU8);
						(*((*(_49766_d))))._field_Model=jule::Any(jule::new_ptr<_1ce002142_BuiltinAppendCallExprModel>(_1ce002142_BuiltinAppendCallExprModel{._field_Dest=(*(_5079_t))._field_Model, ._field_Elements=(*(_53513_e1))._field_Model}), &__jule_any_type26);
						return (*(_49766_d));;
					};
				};
				if ((!(_1ce150092_Variadicable((*(_53513_e1))._field_Kind)))) {
					_1ce11de84_pushErr((*(_49729_e)).ptr(), (*((*((*(_49744_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*(_53513_e1))._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				_1ce14a279_makeVariadic(&(_53513_e1), (*(_5129_s))._field_Elem);
				if (_1ce0a0c6d_checkValidityForInitExpr((*((*(_49729_e))))._field_s, true, false, &((*(_5129_s))._field_Elem), &(_53513_e1), &((*((*((*(_49744_fc))))._field_Args[1LL]))._field_Token))) {
					_1ce09b8d4_checkAssignType((*((*(_49729_e))))._field_s, false, &((*(_5129_s))._field_Elem), &(_53513_e1), (*((*((*(_49744_fc))))._field_Args[1LL]))._field_Token);
				};
				(*((*(_49766_d))))._field_Model=jule::Any(jule::new_ptr<_1ce002142_BuiltinAppendCallExprModel>(_1ce002142_BuiltinAppendCallExprModel{._field_Dest=(*(_5079_t))._field_Model, ._field_Elements=(*(_53513_e1))._field_Model}), &__jule_any_type26);
				return (*(_49766_d));;
			}
		}
		_match_end_1b8ab1dc1:;
	};
	jule::Ptr<_1ce11bc0c_Data> _5699_e1 = _1ce13bb94_evalExpr((*(_49729_e)), (*((*(_49744_fc))))._field_Args[1LL]);;
	if ((_5699_e1 == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1cdeec071_SliceExprModel> _5749_slice = jule::new_ptr<_1cdeec071_SliceExprModel>(_1cdeec071_SliceExprModel{._field_ElemKind=(*(_5129_s))._field_Elem, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, ((*((*(_49744_fc))))._field_Args.len() - 1LL), jule::Any(nullptr))});;
	{
		auto expr = (*((*(_49744_fc))))._field_Args.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b8abe21e:;
		if (it != expr_end) {
			jule::Ptr<_1cdec5dc4_Expr> _57817_arg = *it;
			{
				_5699_e1=_1ce13bb94_evalExpr((*(_49729_e)), _57817_arg);
				if ((_5699_e1 == nullptr)) {
					return nullptr;;
				};
				if ((*(*(_5699_e1))._field_Kind.alloc)._field_Variadic) {
					_1ce11de84_pushErr((*(_49729_e)).ptr(), (*(_57817_arg))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
				};
				if (_1ce0a0c6d_checkValidityForInitExpr((*((*(_49729_e))))._field_s, true, false, &((*(_5129_s))._field_Elem), &(_5699_e1), &((*_57817_arg.alloc)._field_Token))) {
					_1ce09b8d4_checkAssignType((*((*(_49729_e))))._field_s, false, &((*(_5129_s))._field_Elem), &(_5699_e1), (*_57817_arg.alloc)._field_Token);
				};
				(*(_5749_slice))._field_Elems=jule::append((*_5749_slice.alloc)._field_Elems,jule::Slice<jule::Any>::make({(*(_5699_e1))._field_Model}));
			}
			_iter_next_1b8abe21e:;
			++it;
			goto _iter_begin_1b8abe21e;
		}
		_iter_end_1b8abe21e:;
	};
	(*((*(_49766_d))))._field_Model=jule::Any(jule::new_ptr<_1ce002142_BuiltinAppendCallExprModel>(_1ce002142_BuiltinAppendCallExprModel{._field_Dest=(*(_5079_t))._field_Model, ._field_Elements=jule::Any(_5749_slice, &__jule_any_type76)}), &__jule_any_type26);
	return (*(_49766_d));;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce23bb84_callerCopySlice(jule::Ptr<_1ce11bc0c_Data>* _60025_dest, jule::Ptr<_1ce11d934_Eval>* _60043_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _60058_fc, jule::Ptr<_1ce11bc0c_Data>* _60080_d) {
	if ((!((*((*(_60025_dest))))._field_Mutable))) {
		_1ce11de84_pushErr((*(_60043_e)).ptr(), (*((*((*(_60058_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ce11bc0c_Data> _6059_src = _1ce13bb94_evalExpr((*(_60043_e)), (*((*(_60058_fc))))._field_Args[1LL]);;
	if ((_6059_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ce159ca0_Slc> _6099_slc = _1ce15137e_Slc((*(_6059_src))._field_Kind.ptr());;
	if ((_6099_slc != nullptr)) {
		if (((!((*(_6059_src))._field_Mutable)) && _1ce14e558_Mutable((*_6099_slc.alloc)._field_Elem.ptr()))) {
			_1ce11de84_pushErr((*(_60043_e)).ptr(), (*((*((*(_60058_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		};
		if ((!(_1ce14d3d1_Equal((*((*(_60025_dest))))._field_Kind, (*(_6059_src))._field_Kind)))) {
			_1ce11de84_pushErr((*(_60043_e)).ptr(), (*((*((*(_60058_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*((*(_60025_dest))))._field_Kind), &__jule_any_type4),jule::Any(_1ce14d090_Str((*(_6059_src))._field_Kind), &__jule_any_type4)}));
		};
	} else {
		jule::Ptr<_1ce1557a1_Prim> _6199_destPrim = _1ce150328_Prim((*(_1ce15137e_Slc((*((*(_60025_dest))))._field_Kind)))._field_Elem.ptr());;
		jule::Ptr<_1ce1557a1_Prim> _6209_prim = _1ce150328_Prim((*(_6059_src))._field_Kind);;
		if (((((_6199_destPrim == nullptr) || (_6209_prim == nullptr)) || (!(_1ce158c38_IsStr(_6209_prim.ptr())))) || (!(_1ce157198_IsU8(_6199_destPrim.ptr()))))) {
			_1ce11de84_pushErr((*(_60043_e)).ptr(), (*((*((*(_60058_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*((*(_60025_dest))))._field_Kind), &__jule_any_type4),jule::Any(_1ce14d090_Str((*(_6059_src))._field_Kind), &__jule_any_type4)}));
		};
	};
	(*((*(_60080_d))))._field_Kind=_1ce115640_lenKind();
	(*((*(_60080_d))))._field_Model=jule::Any(jule::new_ptr<_1ce002ede_BuiltinCopyCallExprModel>(_1ce002ede_BuiltinCopyCallExprModel{._field_Dest=(*(_60025_dest)), ._field_Src=_6059_src}), &__jule_any_type31);
	return (*(_60080_d));;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce23c0b3_builtinCallerCopy(jule::Ptr<_1ce11d934_Eval>* _63427_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _63442_fc, jule::Ptr<_1ce11bc0c_Data>* _63464_d) {
	if (((*((*(_63442_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_63442_fc))))._field_Args.len() == 1LL)) {
			_1ce11de84_pushErr((*(_63427_e)).ptr(), (*((*(_63442_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src", 3), &__jule_any_type4)}));
			return nullptr;;
		};
		_1ce11de84_pushErr((*(_63427_e)).ptr(), (*((*(_63442_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_63442_fc))))._field_Args.len() > 2LL)) {
		_1ce11de84_pushErr((*(_63427_e)).ptr(), (*((*((*(_63442_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("copy", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1ce11bc0c_Data> _6479_dest = _1ce13bb94_evalExpr((*(_63427_e)), (*((*(_63442_fc))))._field_Args[0LL]);;
	{
		
		if ((_6479_dest == nullptr)) {
			_case_begin_1b8ad3d7c:;
			{
				return nullptr;;
			}
		}
		else if ((_1ce15137e_Slc((*(_6479_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8ad4a1a:;
			{
				return _1ce23bb84_callerCopySlice(&(_6479_dest), _63427_e, _63442_fc, _63464_d);;
			}
		}
		else {
			_case_begin_1b8ad39d6:;
			{
				_1ce11de84_pushErr((*(_63427_e)).ptr(), (*((*((*(_63442_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b8ad1e68:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce23c437_callerLenSlice(jule::Ptr<_1ce11bc0c_Data>* _65924_expr, jule::Ptr<_1ce11bc0c_Data>* _65942_d) {
	(*((*(_65942_d))))._field_Kind=_1ce115640_lenKind();
	(*((*(_65942_d))))._field_Model=jule::Any(jule::new_ptr<_1ce00243e_BuiltinLenCallExprModel>(_1ce00243e_BuiltinLenCallExprModel{._field_Expr=(*(_65924_expr))}), &__jule_any_type115);
	return (*(_65942_d));;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce23c7ab_callerLenMap(jule::Ptr<_1ce11bc0c_Data>* _66722_expr, jule::Ptr<_1ce11bc0c_Data>* _66740_d) {
	(*((*(_66740_d))))._field_Kind=_1ce115640_lenKind();
	(*((*(_66740_d))))._field_Model=jule::Any(jule::new_ptr<_1ce00243e_BuiltinLenCallExprModel>(_1ce00243e_BuiltinLenCallExprModel{._field_Expr=(*(_66722_expr))}), &__jule_any_type115);
	return (*(_66740_d));;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce23cb30_callerLenArr(jule::Ptr<_1ce11bc0c_Data>* _67522_expr, jule::Ptr<_1ce11bc0c_Data>* _67540_d) {
	(*((*(_67540_d))))._field_Kind=_1ce115640_lenKind();
	(*((*(_67540_d))))._field_Constant=static__22be165ad_NewI64(static_cast<jule::I64>((*(_1ce1510e8_Arr((*((*(_67522_expr))))._field_Kind.ptr())))._field_N));
	(*((*(_67540_d))))._field_Model=jule::Any((*((*(_67540_d))))._field_Constant, &__jule_any_type19);
	return (*(_67540_d));;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce23cea4_callerLenStr(jule::Ptr<_1ce11bc0c_Data>* _68222_expr, jule::Ptr<_1ce11bc0c_Data>* _68240_d) {
	(*((*(_68240_d))))._field_Kind=_1ce115640_lenKind();
	if (_1ce11c614_IsConst((*(_68222_expr)).ptr())) {
		(*((*(_68240_d))))._field_Constant=static__22be165ad_NewI64(static_cast<jule::I64>(_22be182e6_ReadStr((*((*(_68222_expr))))._field_Constant.ptr()).len()));
		(*((*(_68240_d))))._field_Model=jule::Any((*((*(_68240_d))))._field_Constant, &__jule_any_type19);
	} else {
		(*((*(_68240_d))))._field_Model=jule::Any(jule::new_ptr<_1ce00243e_BuiltinLenCallExprModel>(_1ce00243e_BuiltinLenCallExprModel{._field_Expr=(*(_68222_expr))}), &__jule_any_type115);
	};
	return (*(_68240_d));;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce23d328_callerLenComptime(jule::Ptr<_1ce11bc0c_Data>* _69527_d, jule::I32 _69537_n) {
	(*((*(_69527_d))))._field_Kind=_1ce115640_lenKind();
	(*((*(_69527_d))))._field_Constant=static__22be165ad_NewI64(static_cast<jule::I64>(_69537_n));
	(*((*(_69527_d))))._field_Model=jule::Any((*((*(_69527_d))))._field_Constant, &__jule_any_type19);
	return (*(_69527_d));;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce23d757_builtinCallerLen(jule::Ptr<_1ce11d934_Eval>* _70226_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _70241_fc, jule::Ptr<_1ce11bc0c_Data>* _70263_d) {
	if (((*((*(_70241_fc))))._field_Args.len() < 1LL)) {
		_1ce11de84_pushErr((*(_70226_e)).ptr(), (*((*(_70241_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_70241_fc))))._field_Args.len() > 1LL)) {
		_1ce11de84_pushErr((*(_70226_e)).ptr(), (*((*((*(_70241_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("len", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1ce11bc0c_Data> _7109_dest = _1ce13b853_evalExpr1((*(_70226_e)), (*((*(_70241_fc))))._field_Args[0LL]);;
	{
		
		if ((_7109_dest == nullptr)) {
			_case_begin_1b8ae11ec:;
			{
				return nullptr;;
			}
		}
		else if ((_1ce15137e_Slc((*(_7109_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8ae1d8a:;
			{
				return _1ce23c437_callerLenSlice(&(_7109_dest), _70263_d);;
			}
		}
		else if ((_1ce1510e8_Arr((*(_7109_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8ae1e01:;
			{
				return _1ce23cb30_callerLenArr(&(_7109_dest), _70263_d);;
			}
		}
		else if ((_1ce151db8_Map((*(_7109_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8ae1e67:;
			{
				return _1ce23c7ab_callerLenMap(&(_7109_dest), _70263_d);;
			}
		}
		else if (((_1ce150328_Prim((*(_7109_dest))._field_Kind.ptr()) != nullptr) && _1ce158c38_IsStr(_1ce150328_Prim((*_7109_dest.alloc)._field_Kind).ptr()))) {
			_case_begin_1b8ae0dbc:;
			{
				return _1ce23cea4_callerLenStr(&(_7109_dest), _70263_d);;
			}
		}
		else if ((_1ce15266b_comptimeStructFields((*(_7109_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8ae0e33:;
			{
				return _1ce23d328_callerLenComptime(_70263_d, (*(_1ce15266b_comptimeStructFields((*_7109_dest.alloc)._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1ce152b88_comptimeEnumFields((*(_7109_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8ae0e99:;
			{
				return _1ce23d328_callerLenComptime(_70263_d, (*(_1ce152b88_comptimeEnumFields((*_7109_dest.alloc)._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1ce153958_comptimeTypeInfos((*(_7109_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8ae1010:;
			{
				return _1ce23d328_callerLenComptime(_70263_d, (*(_1ce153958_comptimeTypeInfos((*_7109_dest.alloc)._field_Kind)))._field_types.len());;
			}
		}
		else if ((_1ce1531a5_comptimeParams((*(_7109_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8ae2033:;
			{
				return _1ce23d328_callerLenComptime(_70263_d, (*(_1ce1531a5_comptimeParams((*_7109_dest.alloc)._field_Kind)))._field_params.len());;
			}
		}
		else if ((_1ce153e75_comptimeStatics((*(_7109_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8ae2099:;
			{
				return _1ce23d328_callerLenComptime(_70263_d, (*(_1ce153e75_comptimeStatics((*_7109_dest.alloc)._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1ce1549ae_comptimeFiles((*(_7109_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8ae2110:;
			{
				return _1ce23d328_callerLenComptime(_70263_d, (*(_1ce1549ae_comptimeFiles((*_7109_dest.alloc)._field_Kind)))._field_files.len());;
			}
		}
		else {
			_case_begin_1b8ae0d56:;
			{
				_1ce11de84_pushErr((*(_70226_e)).ptr(), (*((*((*(_70241_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b8ade2d8:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce23dacb_callerCapSlice(jule::Ptr<_1ce11bc0c_Data>* _74024_expr, jule::Ptr<_1ce11bc0c_Data>* _74042_d) {
	(*((*(_74042_d))))._field_Kind=_1ce115640_lenKind();
	(*((*(_74042_d))))._field_Model=jule::Any(jule::new_ptr<_1ce00273b_BuiltinCapCallExprModel>(_1ce00273b_BuiltinCapCallExprModel{._field_Expr=(*(_74024_expr))}), &__jule_any_type116);
	return (*(_74042_d));;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce23e00a_builtinCallerCap(jule::Ptr<_1ce11d934_Eval>* _74826_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _74841_fc, jule::Ptr<_1ce11bc0c_Data>* _74863_d) {
	if (((*((*(_74841_fc))))._field_Args.len() < 1LL)) {
		_1ce11de84_pushErr((*(_74826_e)).ptr(), (*((*(_74841_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_74841_fc))))._field_Args.len() > 1LL)) {
		_1ce11de84_pushErr((*(_74826_e)).ptr(), (*((*((*(_74841_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("cap", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1ce11bc0c_Data> _7569_dest = _1ce13bb94_evalExpr((*(_74826_e)), (*((*(_74841_fc))))._field_Args[0LL]);;
	{
		
		if ((_7569_dest == nullptr)) {
			_case_begin_1b8b00d88:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7569_dest))._field_Decl) {
			_case_begin_1b8b01a26:;
			{
				_1ce11de84_pushErr((*(_74826_e)).ptr(), (*((*((*(_74841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1ce15137e_Slc((*(_7569_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8b01a8c:;
			{
				return _1ce23dacb_callerCapSlice(&(_7569_dest), _74863_d);;
			}
		}
		else {
			_case_begin_1b8b009e2:;
			{
				_1ce11de84_pushErr((*(_74826_e)).ptr(), (*((*((*(_74841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b8aede74:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce23e4e4_callerDeleteMap(jule::Ptr<_1ce11d934_Eval>* _77125_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _77140_fc, jule::Ptr<_1ce11bc0c_Data>* _77162_expr, jule::Ptr<_1ce11bc0c_Data>* _77180_d) {
	if ((!((*((*(_77162_expr))))._field_Mutable))) {
		_1ce11de84_pushErr((*(_77125_e)).ptr(), (*((*((*(_77140_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	(*(_77180_d))=_1ce147ab2_buildVoidData();
	jule::Ptr<_1ce002b15_BuiltinDeleteCallExprModel> _7769_model = jule::new_ptr<_1ce002b15_BuiltinDeleteCallExprModel>(_1ce002b15_BuiltinDeleteCallExprModel{._field_Dest=(*(_77162_expr)), });;
	if (((*((*(_77140_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1ce11bc0c_Data> _78013_key = _1ce13bb94_evalExpr((*(_77125_e)), (*((*(_77140_fc))))._field_Args[1LL]);;
		{
			
			if ((_78013_key == nullptr)) {
				_case_begin_1b8b07851:;
				{
					return nullptr;;
				}
			}
			else if ((*(_78013_key))._field_Decl) {
				_case_begin_1b8b078b7:;
				{
					_1ce11de84_pushErr((*(_77125_e)).ptr(), (*((*((*(_77140_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1b8b06432:;
				{
					;
					jule::Ptr<_1ce14cbc7_TypeKind> _78917_keyType = (*(_1ce151db8_Map((*((*(_77162_expr))))._field_Kind.ptr())))._field_Key;;
					if ((!(_1ce09b8d4_checkAssignType((*((*(_77125_e))))._field_s, false, &(_78917_keyType), &(_78013_key), (*((*((*(_77140_fc))))._field_Args[1LL]))._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_1b8b063bb:;
		};
		(*(_7769_model))._field_Key=_78013_key;
	};
	(*((*(_77180_d))))._field_Model=jule::Any(_7769_model, &__jule_any_type32);
	return (*(_77180_d));;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce23e923_builtinCallerDelete(jule::Ptr<_1ce11d934_Eval>* _80029_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _80044_fc, jule::Ptr<_1ce11bc0c_Data>* _80066_d) {
	if (((*((*(_80044_fc))))._field_Args.len() < 1LL)) {
		_1ce11de84_pushErr((*(_80029_e)).ptr(), (*((*(_80044_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("map", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_80044_fc))))._field_Args.len() > 2LL)) {
		_1ce11de84_pushErr((*(_80029_e)).ptr(), (*((*((*(_80044_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("delete", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1ce11bc0c_Data> _8089_dest = _1ce13bb94_evalExpr((*(_80029_e)), (*((*(_80044_fc))))._field_Args[0LL]);;
	{
		
		if ((_8089_dest == nullptr)) {
			_case_begin_1b8b0d923:;
			{
				return nullptr;;
			}
		}
		else if ((*(_8089_dest))._field_Decl) {
			_case_begin_1b8b0e5b1:;
			{
				_1ce11de84_pushErr((*(_80029_e)).ptr(), (*((*((*(_80044_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1ce151db8_Map((*(_8089_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8b0e627:;
			{
				return _1ce23e4e4_callerDeleteMap(_80029_e, _80044_fc, &(_8089_dest), _80066_d);;
			}
		}
		else {
			_case_begin_1b8b0d57c:;
			{
				_1ce11de84_pushErr((*(_80029_e)).ptr(), (*((*((*(_80044_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b8b0ba0e:;
	};
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce23ed52_builtinCallerAssert(jule::Ptr<_1ce11d934_Eval>* _82329_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _82344_fc, jule::Ptr<_1ce11bc0c_Data>* ) {
	if (((*((*(_82344_fc))))._field_Args.len() < 1LL)) {
		_1ce11de84_pushErr((*(_82329_e)).ptr(), (*((*(_82344_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_82344_fc))))._field_Args.len() > 2LL)) {
		_1ce11de84_pushErr((*(_82329_e)).ptr(), (*((*((*(_82344_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("assert", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1ce11bc0c_Data> _8329_expr = _1ce13bb94_evalExpr((*(_82329_e)), (*((*(_82344_fc))))._field_Args[0LL]);;
	if ((_8329_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1ce150328_Prim((*(_8329_expr))._field_Kind.ptr()) == nullptr) || (!(_1ce1589a2_IsBool(_1ce150328_Prim((*(_8329_expr))._field_Kind).ptr()))))) {
		_1ce11de84_pushErr((*(_82329_e)).ptr(), (*((*(_82344_fc))))._field_Token, jule::Str::lit("assertion requires boolean expression", 37), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ce0017b2_BuiltinAssertCallExprModel> _8419_model = jule::new_ptr<_1ce0017b2_BuiltinAssertCallExprModel>(_1ce0017b2_BuiltinAssertCallExprModel{._field_Token=(*((*(_82344_fc))))._field_Token, ._field_Expr=(*(_8329_expr))._field_Model, ._field_Log=jule::Str::lit("assertion failed", 16)});;
	if (((*((*(_82344_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1ce11bc0c_Data> _84913_log = _1ce13bb94_evalExpr((*(_82329_e)), (*((*(_82344_fc))))._field_Args[1LL]);;
		if ((_84913_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_1ce11c614_IsConst(_84913_log.ptr()))) || (_1ce150328_Prim((*(_84913_log))._field_Kind) == nullptr)) || (!(_1ce158c38_IsStr(_1ce150328_Prim((*(_84913_log))._field_Kind).ptr()))))) {
			_1ce11de84_pushErr((*(_82329_e)).ptr(), (*((*((*(_82344_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("const str", 9), &__jule_any_type4),jule::Any(_1ce14d090_Str((*(_84913_log))._field_Kind), &__jule_any_type4)}));
			return nullptr;;
		};
		(*(_8419_model))._field_Log=_22be182e6_ReadStr((*(_84913_log))._field_Constant.ptr());
	};
	jule::Ptr<_1ce11bc0c_Data> _8629_d = _1ce147ab2_buildVoidData();;
	(*(_8629_d))._field_Model=jule::Any(_8419_model, &__jule_any_type30);
	return _8629_d;;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce240281_builtinCallerStdComptimeTypeOf(jule::Ptr<_1ce11d934_Eval>* _86740_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _86755_fc, jule::Ptr<_1ce11bc0c_Data>* ) {
	if (((*((*(_86755_fc))))._field_Args.len() < 1LL)) {
		_1ce11de84_pushErr((*(_86740_e)).ptr(), (*((*(_86755_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_86755_fc))))._field_Args.len() > 1LL)) {
		_1ce11de84_pushErr((*(_86740_e)).ptr(), (*((*((*(_86755_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1ce11bc0c_Data> _8769_d = _1ce13ad80_evalExprKind((*(_86740_e)), (*((*((*(_86755_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_8769_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ce00a832_FnIns> _8805_f = _1ce151615_Fn((*(_8769_d))._field_Kind.ptr());;
	if ((_8805_f != nullptr)) {
		if (_1ce00bcb7_IsBuiltin(_8805_f)) {
			_1ce11de84_pushErr((*(_86740_e)).ptr(), (*((*((*(_86755_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("<built-in fn>", 13), &__jule_any_type4)}));
			return nullptr;;
		};
		if (((*_8805_f.alloc)._field_Generics.len() != (*((*_8805_f.alloc)._field_Decl))._field_Generics.len())) {
			_1ce11de84_pushErr((*(_86740_e)).ptr(), (*((*((*(_86755_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1cdee571d_StructIns> _8915_s = _1ce15189b_Struct((*(_8769_d))._field_Kind);;
	if (((_8915_s != nullptr) && ((*_8915_s.alloc)._field_Generics.len() != (*((*_8915_s.alloc)._field_Decl))._field_Generics.len()))) {
		_1ce11de84_pushErr((*(_86740_e)).ptr(), (*((*((*(_86755_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_1ce1523d5_comptime((*(_8769_d))._field_Kind)) {
		_1ce11de84_pushErr((*(_86740_e)).ptr(), (*((*((*(_86755_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*(_8769_d))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ce03ee4e_buildComptimeTypeInfoData(&((*((*(_86740_e))))._field_s), &((*(_8769_d))._field_Kind));;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce240902_builtinCallerStdComptimeValueOf(jule::Ptr<_1ce11d934_Eval>* _90341_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _90356_fc, jule::Ptr<_1ce11bc0c_Data>* ) {
	if (((*((*(_90356_fc))))._field_Args.len() < 1LL)) {
		_1ce11de84_pushErr((*(_90341_e)).ptr(), (*((*(_90356_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_90356_fc))))._field_Args.len() > 1LL)) {
		_1ce11de84_pushErr((*(_90341_e)).ptr(), (*((*((*(_90356_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_1ce11bc0c_Data> _9119_d = _1ce13bb94_evalExpr((*(_90341_e)), (*((*(_90356_fc))))._field_Args[0LL]);;
	if ((_9119_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ce115992_isGoodValueToInfer(&(_9119_d))))) {
		_1ce11de84_pushErr((*(_90341_e)).ptr(), (*((*((*(_90356_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*(_9119_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ce040290_buildComptimeValue(&(_9119_d));;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce240d31_builtinCallerStdComptimeLine(jule::Ptr<_1ce11d934_Eval>* _92338_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _92353_fc, jule::Ptr<_1ce11bc0c_Data>* ) {
	if (((*((*(_92353_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_92338_e)).ptr(), (*((*((*(_92353_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Line", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_22be1616d_Const> _9279_constant = static__22be165ad_NewI64(static_cast<jule::I64>((*((*((*(_92353_fc))))._field_Token))._field_Row));;
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce2360bd_primInt, ._field_Model=jule::Any(_9279_constant, &__jule_any_type19), ._field_Constant=_9279_constant});;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce241260_builtinCallerStdComptimeFile(jule::Ptr<_1ce11d934_Eval>* _93538_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _93553_fc, jule::Ptr<_1ce11bc0c_Data>* ) {
	if (((*((*(_93553_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_93538_e)).ptr(), (*((*((*(_93553_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("File", 4), &__jule_any_type4)}));
	};
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(jule::new_ptr<_1ce03ca0c_comptimeFile>(_1ce03ca0c_comptimeFile{._field_file=(*((*((*(_93538_e))))._field_s))._field_file}), 18)}), });;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce24168e_builtinCallerStdComptimeFiles(jule::Ptr<_1ce11d934_Eval>* _94839_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _94854_fc, jule::Ptr<_1ce11bc0c_Data>* ) {
	if (((*((*(_94854_fc))))._field_Args.len() > 0LL)) {
		_1ce11de84_pushErr((*(_94839_e)).ptr(), (*((*((*(_94854_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Files", 5), &__jule_any_type4)}));
	};
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=jule::new_ptr<_1ce14cbc7_TypeKind>(_1ce14cbc7_TypeKind{._field_Kind=jule::Trait<_1ce14c721_Kind>(jule::new_ptr<_1ce03b412_comptimeFiles>(_1ce03b412_comptimeFiles{._field_files=(*((*((*(_94839_e))))._field_s))._field_files}), 17)}), });;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce241abd_builtinCallerStdComptimeTypeAlias(jule::Ptr<_1ce11d934_Eval>* _96143_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _96158_fc, jule::Ptr<_1ce11bc0c_Data>* ) {
	if (((*((*(_96158_fc))))._field_Args.len() > 2LL)) {
		_1ce11de84_pushErr((*(_96143_e)).ptr(), (*((*((*(_96158_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_96158_fc))))._field_Args.len() == 0LL)) {
		_1ce11de84_pushErr((*(_96143_e)).ptr(), (*((*(_96158_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ident, type", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_96158_fc))))._field_Args.len() == 1LL)) {
		_1ce11de84_pushErr((*(_96143_e)).ptr(), (*((*(_96158_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_96158_fc))))._field_Args[0LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1b8b3795d:;
			{
				goto _match_end_1b8b3819a;
			}
		}
		else {
			_case_begin_1b8b38211:;
			{
				_1ce11de84_pushErr((*(_96143_e)).ptr(), (*((*((*(_96158_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1ce11e2e7_pushSuggestion((*(_96143_e)).ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b8b3819a:;
	};
	jule::Ptr<_1cdeab4b4_Token> _9829_ident = (*((*((*((*(_96158_fc))))._field_Args[0LL]))._field_Kind.cast_ptr<_1cdec76de_IdentExpr>(&__jule_any_type79)))._field_Token;;
	{
		auto &_match_expr{ (*((*(_96143_e))))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b8b3a4ee:;
			{
				goto _match_end_1b8b3a741;
			}
		}
		else {
			_case_begin_1b8b3a796:;
			{
				_1ce11de84_pushErr((*(_96143_e)).ptr(), (*((*(_96158_fc))))._field_Token, jule::Str::lit("you can call @ function in the scopes only", 42), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b8b3a741:;
	};
	jule::Ptr<_1ce051acb_scopeChecker> _9919_sc = (*((*(_96143_e))))._field_lookup.cast_ptr<_1ce051acb_scopeChecker>(0);;
	jule::Ptr<_1ce14bdd5_TypeAlias> _9929_alias = jule::new_ptr<_1ce14bdd5_TypeAlias>(_1ce14bdd5_TypeAlias{._field_Scope=(*(_9919_sc))._field_tree, ._field_Public=_1ce0884e7_IsPub((*(_9829_ident))._field_Kind), ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=_9829_ident, ._field_Ident=(*_9829_ident.alloc)._field_Kind, ._field_Kind=jule::new_ptr<_1ce154d99_TypeSymbol>(), });;
	jule::Ptr<_1ce11bc0c_Data> _10029_t = _1ce13b1c1_eval1((*(_96143_e)), (*((*(_96158_fc))))._field_Args[1LL]);;
	if ((_10029_t == nullptr)) {
		return nullptr;;
	};
	if ((*(_10029_t))._field_Decl) {
		(*((*(_9929_alias))._field_Kind))._field_Kind=(*(_10029_t))._field_Kind;
	} else {
		jule::Ptr<_1ce0325a1_comptimeTypeInfo> _100913_cti = _1ce153bde_comptimeTypeInfo((*(_10029_t))._field_Kind.ptr());;
		if ((_100913_cti == nullptr)) {
			_1ce11de84_pushErr((*(_96143_e)).ptr(), (*((*((*(_96158_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_1ce11e2e7_pushSuggestion((*(_96143_e)).ptr(), jule::Str::lit("expected type declaration", 25), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*((*(_9929_alias))._field_Kind))._field_Kind=(*(_100913_cti))._field_base;
	};
	_1ce056383_checkTypeAlias(_9919_sc, &(_9929_alias));
	return _1ce147ab2_buildVoidData();;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce241eec_builtinCallerStdMemSizeOf(jule::Ptr<_1ce11d934_Eval>* _102135_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _102150_fc, jule::Ptr<_1ce11bc0c_Data>* ) {
	jule::Ptr<_1ce11bc0c_Data> _10229_result = jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce235c05_primUint, });;
	if (((*((*(_102150_fc))))._field_Args.len() < 1LL)) {
		_1ce11de84_pushErr((*(_102135_e)).ptr(), (*((*(_102150_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return _10229_result;;
	};
	if (((*((*(_102150_fc))))._field_Args.len() > 1LL)) {
		_1ce11de84_pushErr((*(_102135_e)).ptr(), (*((*((*(_102150_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1ce11bc0c_Data> _10349_d = _1ce13ad80_evalExprKind((*(_102135_e)), (*((*((*(_102150_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10349_d == nullptr)) {
		return _10229_result;;
	};
	if ((!(_1ce16a497_validTypeForXof(&((*(_10349_d))._field_Kind))))) {
		_1ce11de84_pushErr((*(_102135_e)).ptr(), (*((*((*(_102150_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*(_10349_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4)}));
	};
	(*(_10229_result))._field_Model=jule::Any(jule::new_ptr<_1ce003a6c_SizeofExprModel>(_1ce003a6c_SizeofExprModel{._field_Expr=(*(_10349_d))._field_Model}), &__jule_any_type117);
	return _10229_result;;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce24242b_builtinCallerStdMemAlignOf(jule::Ptr<_1ce11d934_Eval>* _104636_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _104651_fc, jule::Ptr<_1ce11bc0c_Data>* ) {
	jule::Ptr<_1ce11bc0c_Data> _10479_result = jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce235c05_primUint, });;
	if (((*((*(_104651_fc))))._field_Args.len() < 1LL)) {
		_1ce11de84_pushErr((*(_104636_e)).ptr(), (*((*(_104651_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return _10479_result;;
	};
	if (((*((*(_104651_fc))))._field_Args.len() > 1LL)) {
		_1ce11de84_pushErr((*(_104636_e)).ptr(), (*((*((*(_104651_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_1ce11bc0c_Data> _10599_d = _1ce13ad80_evalExprKind((*(_104636_e)), (*((*((*(_104651_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10599_d == nullptr)) {
		return _10479_result;;
	};
	if ((!(_1ce16a497_validTypeForXof(&((*(_10599_d))._field_Kind))))) {
		_1ce11de84_pushErr((*(_104636_e)).ptr(), (*((*((*(_104651_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1ce14d090_Str((*(_10599_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4)}));
	};
	(*(_10479_result))._field_Model=jule::Any(jule::new_ptr<_1ce003c59_AlignofExprModel>(_1ce003c59_AlignofExprModel{._field_Expr=(*(_10599_d))._field_Model}), &__jule_any_type118);
	return _10479_result;;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce24285a_builtinCallerStdMemFree(jule::Ptr<_1ce11d934_Eval>* _107133_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _107148_fc, jule::Ptr<_1ce11bc0c_Data>* ) {
	if (((*((*(_107148_fc))))._field_Args.len() < 1LL)) {
		_1ce11de84_pushErr((*(_107133_e)).ptr(), (*((*(_107148_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("h", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_107148_fc))))._field_Args.len() > 1LL)) {
		_1ce11de84_pushErr((*(_107133_e)).ptr(), (*((*((*(_107148_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Free", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1ce11bc0c_Data> _10809_d = _1ce13bb94_evalExpr((*(_107133_e)), (*((*(_107148_fc))))._field_Args[0LL]);;
	if ((_10809_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ce14ed0b_PerformsRC((*(_10809_d))._field_Kind.ptr())))) {
		_1ce11de84_pushErr((*(_107133_e)).ptr(), (*((*((*(_107148_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ce11bc0c_Data> _10899_result = _1ce147ab2_buildVoidData();;
	(*(_10899_result))._field_Model=jule::Any(jule::new_ptr<_1ce0049c4_FreeExprModel>(_1ce0049c4_FreeExprModel{._field_Expr=(*(_10809_d))._field_Model}), &__jule_any_type33);
	return _10899_result;;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce242c89_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1ce11d934_Eval>* _109445_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _109460_fc, jule::Ptr<_1ce11bc0c_Data>* ) {
	if (((*((*(_109460_fc))))._field_Args.len() < 1LL)) {
		_1ce11de84_pushErr((*(_109445_e)).ptr(), (*((*(_109460_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_109460_fc))))._field_Args.len() > 1LL)) {
		_1ce11de84_pushErr((*(_109445_e)).ptr(), (*((*((*(_109460_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ToStr", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1ce11bc0c_Data> _11039_d = _1ce13bb94_evalExpr((*(_109445_e)), (*((*(_109460_fc))))._field_Args[0LL]);;
	if ((_11039_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ce169452_isBuiltinStrConvertable(&((*(_11039_d))._field_Kind))))) {
		_1ce11de84_pushErr((*(_109445_e)).ptr(), (*((*((*(_109460_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ce11bc0c_Data>(_1ce11bc0c_Data{._field_Kind=_1ce2353db_primStr, ._field_Model=jule::Any(jule::new_ptr<_1ce0042ed_IntegratedToStrExprModel>(_1ce0042ed_IntegratedToStrExprModel{._field_Expr=(*(_11039_d))._field_Model}), &__jule_any_type119), });;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce2431b8_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1ce11d934_Eval>* _112144_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _112159_fc, jule::Ptr<_1ce11bc0c_Data>* _112181_d) {
	if ((!(_1ce11e979_isUnsafe((*(_112144_e)).ptr())))) {
		_1ce11de84_pushErr((*(_112144_e)).ptr(), (*((*(_112159_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	if (((*((*(_112159_fc))))._field_Args.len() < 1LL)) {
		_1ce11de84_pushErr((*(_112144_e)).ptr(), (*((*(_112159_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("code", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ce11bc0c_Data> _11319_argd = _1ce13bb94_evalExpr((*(_112144_e)), (*((*(_112159_fc))))._field_Args[0LL]);;
	if ((_11319_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1ce150328_Prim((*(_11319_argd))._field_Kind.ptr()) == nullptr) || (!(_1ce158c38_IsStr(_1ce150328_Prim((*(_11319_argd))._field_Kind).ptr()))))) {
		_1ce11de84_pushErr((*(_112144_e)).ptr(), (*((*((*(_112159_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1ce14d090_Str((*(_11319_argd))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!(_1ce11c614_IsConst(_11319_argd.ptr()))) || (!(_22be1a8e2_IsStr((*(_11319_argd))._field_Constant.ptr()))))) {
		_1ce11de84_pushErr((*(_112144_e)).ptr(), (*((*((*(_112159_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ce11bc0c_Data> _11469_r = _1ce147ab2_buildVoidData();;
	jule::Ptr<_1ce00a832_FnIns> _11489_f = _1ce151615_Fn((*((*(_112181_d))))._field_Kind);;
	if (((*(_11489_f))._field_Generics.len() > 0LL)) {
		(*(_11469_r))._field_Kind=(*((*_11489_f.alloc)._field_Generics[0LL]))._field_Kind;
	};
	jule::Ptr<_1ce0046c7_BackendEmitExprModel> _11539_model = jule::new_ptr<_1ce0046c7_BackendEmitExprModel>(_1ce0046c7_BackendEmitExprModel{._field_Code=_22be182e6_ReadStr((*(_11319_argd))._field_Constant), });;
	if (((*((*(_112159_fc))))._field_Args.len() > 1LL)) {
		(*(_11539_model))._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, ((*((*(_112159_fc))))._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = (*((*(_112159_fc))))._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1b8b65392:;
			if (it != expr_end) {
				jule::Ptr<_1cdec5dc4_Expr> _115921_arg = *it;
				{
					_11319_argd=_1ce13b1c1_eval1((*(_112144_e)), _115921_arg);
					if ((_11319_argd == nullptr)) {
						return nullptr;;
					};
					(*_11539_model.alloc)._field_Exprs=jule::append((*_11539_model.alloc)._field_Exprs,jule::Slice<jule::Any>::make({(*(_11319_argd))._field_Model}));
				}
				_iter_next_1b8b65392:;
				++it;
				goto _iter_begin_1b8b65392;
			}
			_iter_end_1b8b65392:;
		};
	};
	(*_11469_r.alloc)._field_Model=jule::Any(_11539_model, &__jule_any_type25);
	return _11469_r;;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce2435e7_builtinCallerStdDebugOut(jule::Ptr<_1ce11d934_Eval>* _117234_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _117249_fc, jule::Ptr<_1ce11bc0c_Data>* _117271_d) {
	(*(_117271_d))=_1ce239e7e_builtinCallerOut(_117234_e, _117249_fc, _117271_d);
	if (((*(_117271_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_117271_d))))._field_Model.cast_ptr<_1ce00067e_BuiltinOutCallExprModel>(&__jule_any_type27)))._field_Debug=true;
	return (*(_117271_d));;
}



inline jule::Ptr<_1ce11bc0c_Data> _1ce243a26_builtinCallerStdDebugOutln(jule::Ptr<_1ce11d934_Eval>* _118136_e, jule::Ptr<_1cdec9aed_FnCallExpr>* _118151_fc, jule::Ptr<_1ce11bc0c_Data>* _118173_d) {
	(*(_118173_d))=_1ce23a3ad_builtinCallerOutln(_118136_e, _118151_fc, _118173_d);
	if (((*(_118173_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_118173_d))))._field_Model.cast_ptr<_1ce000a58_BuiltinOutlnCallExprModel>(&__jule_any_type28)))._field_Debug=true;
	return (*(_118173_d));;
}



inline jule::Ptr<_1b57310c6_FileInfo> _1b5774a76_ParseFile(jule::Ptr<_1cdeb1c4a_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b57310c6_FileInfo> _279_finf = jule::new_ptr<_1b57310c6_FileInfo>();;
	({
		__jule_tuple_x_1cdebead2_Ast__jule_tuple_s_22a93672d_Log __jule_assign_result = _1b577511a_parseFileset(_2318_f);
		(*_279_finf.alloc)._field_Ast = __jule_assign_result.__jule_result_arg0;
		(*_279_finf.alloc)._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if (((*_279_finf.alloc)._field_Errors.len() > 0LL)) {
		(*_279_finf.alloc)._field_Ast=nullptr;
	};
	return _279_finf;;
}



inline __jule_tuple_x_1cdebead2_Ast__jule_tuple_s_22a93672d_Log _1b577511a_parseFileset(jule::Ptr<_1cdeb1c4a_File> _5521_f) {
	__jule_tuple_x_1cdebead2_Ast__jule_tuple_s_22a93672d_Log __jule_func_result;
	jule::Ptr<_1b5795987_parser> _569_p = jule::new_ptr<_1b5795987_parser>();;
	_1b57a6899_parse(_569_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = (*_569_p.alloc)._field_ast;
	__jule_func_result.__jule_result_arg1 = (*_569_p.alloc)._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1cded1ab1_ScopeTree> _1b5775aaa_newScope(void) {
	return jule::new_ptr<_1cded1ab1_ScopeTree>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1b5775e40_isSt(jule::Ptr<_1cdeab4b4_Token> _499_current, jule::Ptr<_1cdeab4b4_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=(((*(_499_current))._field_Id == static_cast<jule::U32>(3LLU)) || ((*(_4926_prev))._field_Row < (*_499_current.alloc)._field_Row));
	__jule_func_result.__jule_result_arg1=((*_499_current.alloc)._field_Id == static_cast<jule::U32>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _1b57762b4_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _5526_tokens, jule::I32* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*((*(_5526_tokens))[((*(_5545_i)) - 2LL)]))._field_Id == static_cast<jule::U32>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1cdeab4b4_Token> _619_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return (((*(_619_prev))._field_Id == static_cast<jule::U32>(17LLU)) || (_1cdeac00e_IsBinOp((*_619_prev.alloc)._field_Id) && ((*_619_prev.alloc)._field_Row < (*((*(_5526_tokens))[(*(_5545_i))]))._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1b577667c_nextStPos(jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _6815_tokens, jule::I32 _6833_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _699_braceN = 0LL;;
	jule::I32 _709_i = _6833_start;;
	for (; (_709_i < (*(_6815_tokens)).len()); (_709_i)++) {
		{
			jule::Bool _7213_ok = false;;
			jule::Bool _7313_terminated = false;;
			jule::Ptr<_1cdeab4b4_Token> _749_tok = (*(_6815_tokens))[_709_i];;
			{
				auto &_match_expr{ (*(_749_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1b8185495:;
					{
						if (((_699_braceN == 0LL) && (_709_i > _6833_start))) {
							if ((!(_1b57762b4_prevIsIncompleteExpr(_6815_tokens, &(_709_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b5775e40_isSt(_749_tok, (*(_6815_tokens))[(_709_i - 1LL)]);
									_7213_ok = __jule_assign_result.__jule_result_arg0;
									_7313_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_7213_ok) {
									goto _julec_label_1b818b413;
								};
							};
						};
						(_699_braceN)++;
						goto _iter_next_1b81840ba;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1b818573c:;
					{
						(_699_braceN)--;
						if (((_699_braceN == 0LL) && ((_709_i + 1LL) < (*(_6815_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b5775e40_isSt((*(_6815_tokens))[(_709_i + 1LL)], _749_tok);
								_7213_ok = __jule_assign_result.__jule_result_arg0;
								_7313_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_7213_ok) {
								(_709_i)++;
								goto _julec_label_1b818b413;
							};
						};
						goto _iter_next_1b81840ba;
					}
				}
				_match_end_1b81849c2:;
			};
			if ((_699_braceN != 0LL)) {
				goto _iter_next_1b81840ba;
			};
			if ((_709_i > _6833_start)) {
				if (_1b57762b4_prevIsIncompleteExpr(_6815_tokens, &(_709_i))) {
					goto _iter_next_1b81840ba;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b5775e40_isSt(_749_tok, (*(_6815_tokens))[(_709_i - 1LL)]);
					_7213_ok = __jule_assign_result.__jule_result_arg0;
					_7313_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b5775e40_isSt(_749_tok, _749_tok);
					_7213_ok = __jule_assign_result.__jule_result_arg0;
					_7313_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_7213_ok))) {
				goto _iter_next_1b81840ba;
			};
			_julec_label_1b818b413:;
			if (_7313_terminated) {
				(_709_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _709_i;
			__jule_func_result.__jule_result_arg1 = _7313_terminated;
			return __jule_func_result;;
		}
	_iter_next_1b81840ba:;
	}
	_iter_end_1b81840ba:;;
	__jule_func_result.__jule_result_arg0 = _709_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1cdeab4b4_Token__jule_tuple_bool _1b5776a01_skipSt(jule::I32* _13016_i, jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _13028_tokens) {
	__jule_tuple_sx_1cdeab4b4_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _1315_start = (*(_13016_i));;
	jule::Bool _1329_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b577667c_nextStPos(&(_13028_tokens), _1315_start);
		(*(_13016_i)) = __jule_assign_result.__jule_result_arg0;
		_1329_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _1349_stTokens = _13028_tokens.slice(_1315_start, (*(_13016_i)));;
	if (_1329_terminated) {
		if ((_1349_stTokens.len() == 1LL)) {
			({
				__jule_tuple_sx_1cdeab4b4_Token__jule_tuple_bool __jule_assign_result = _1b5776a01_skipSt(_13016_i, _13028_tokens);
				_1349_stTokens = __jule_assign_result.__jule_result_arg0;
				_1329_terminated = __jule_assign_result.__jule_result_arg1;
			});
			__jule_func_result.__jule_result_arg0 = _1349_stTokens;
			__jule_func_result.__jule_result_arg1 = _1329_terminated;
			return __jule_func_result;;
		};
		(_1349_stTokens).mut_slice(0LL, (_1349_stTokens.len() - 1LL));;
	};
	__jule_func_result.__jule_result_arg0 = _1349_stTokens;
	__jule_func_result.__jule_result_arg1 = _1329_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1b5776d31_stmt>> _1b57771d8_splitStmts(jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _15220_tokens) {
	jule::Slice<jule::Ptr<_1b5776d31_stmt>> _1539_stmts = jule::Slice<jule::Ptr<_1b5776d31_stmt>>::alloc(0LL, 20LL);;
	jule::I32 _1549_pos = 0LL;;
	while ((_1549_pos < (*(_15220_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _15613_stmt;;
			jule::Bool _15619_terminated;;
			({
				__jule_tuple_sx_1cdeab4b4_Token__jule_tuple_bool __jule_assign_result = _1b5776a01_skipSt(&(_1549_pos), (*(_15220_tokens)));
				_15613_stmt = __jule_assign_result.__jule_result_arg0;
				_15619_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_1b5776d31_stmt>> &__jule_push_dest = _1539_stmts; __jule_push_dest.push(jule::new_ptr<_1b5776d31_stmt>(_1b5776d31_stmt{._field_tokens=_15613_stmt, ._field_terminated=_15619_terminated})); };
		}
	_iter_next_1b81903c3:;
	}
	_iter_end_1b81903c3:;;
	return _1539_stmts;;
}



inline jule::Bool _1b579083e_isTypeOp(jule::U32* _88514_id) {
	return ((((*(_88514_id)) == static_cast<jule::U32>(65LLU)) || ((*(_88514_id)) == static_cast<jule::U32>(54LLU))) || ((*(_88514_id)) == static_cast<jule::U32>(62LLU)));;
}



inline jule::Bool _1b5790b4c_isTypeRange(jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _89221_tokens) {
	jule::Bool _8939_op = false;;
	{
		auto expr = _89221_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8c13396:;
		if (it != expr_end) {
			jule::I32 _8949_i = it - expr->begin();
			jule::Ptr<_1cdeab4b4_Token> _89412_token = *it;
			{
				if (((*(_89412_token))._field_Id == static_cast<jule::U32>(76LLU))) {
					if (_8939_op) {
						return true;;
					};
					jule::I32 _89917_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _90017_lTokens = (*(_89221_tokens)).slice(_8949_i);;
					{
						auto expr = &(_90017_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b8c14cb0:;
						if (it != expr_end) {
							jule::Ptr<_1cdeab4b4_Token> _90120_lToken = *it;
							{
								{
									auto &_match_expr{ (*(_90120_lToken))._field_Id };
									
									if (_match_expr == static_cast<jule::U32>(76LLU)) {
										_case_begin_1b8c15530:;
										{
											(_89917_rangeN)++;
											goto _iter_next_1b8c14cb0;
										}
									}
									else if (_match_expr == static_cast<jule::U32>(77LLU)) {
										_case_begin_1b8c15909:;
										{
											(_89917_rangeN)--;
											goto _iter_next_1b8c14cb0;
										}
									}
									_match_end_1b8c1582c:;
								};
								if ((_89917_rangeN == 0LL)) {
									return _1b579083e_isTypeOp(&((*(_90120_lToken))._field_Id));;
								};
							}
							_iter_next_1b8c14cb0:;
							++it;
							goto _iter_begin_1b8c14cb0;
						}
						_iter_end_1b8c14cb0:;
					};
					return true;;
				};
				if ((!(_1b579083e_isTypeOp(&((*_89412_token.alloc)._field_Id))))) {
					return false;;
				};
				_8939_op=true;
			}
			_iter_next_1b8c13396:;
			++it;
			_8949_i++;
			goto _iter_begin_1b8c13396;
		}
		_iter_end_1b8c13396:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _1b5790e16_getBlockExpr(jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _92522_tokens) {
	jule::I32 _9269_braceN = 0LL;;
	jule::I32 _9279_skipToNextBraceClose = 0LL;;
	{
		auto expr = _92522_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8c17774:;
		if (it != expr_end) {
			jule::I32 _9289_i = it - expr->begin();
			jule::Ptr<_1cdeab4b4_Token> _92812_tok = *it;
			{
				{
					auto &_match_expr{ (*(_92812_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(31LLU)) {
						_case_begin_1b8c18610:;
						{
							if (((((*(_92522_tokens)).len() - _9289_i) > 1LL) && ((*((*(_92522_tokens))[(_9289_i + 1LL)]))._field_Id == static_cast<jule::U32>(72LLU)))) {
								(_9279_skipToNextBraceClose)++;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1b8c18687:;
						{
							if (((_9269_braceN > 0LL) || (_9279_skipToNextBraceClose > 0LL))) {
								if ((_9279_skipToNextBraceClose > 0LL)) {
									(_9279_skipToNextBraceClose)--;
								};
								(_9269_braceN)++;
								goto _match_end_1b8c18566;
							};
							return (*(_92522_tokens)).slice(0LL, _9289_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1b8c186ed:;
						{
							(_9269_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1b8c18764:;
						{
							(_9269_braceN)--;
						}
					}
					_match_end_1b8c18566:;
				};
			}
			_iter_next_1b8c17774:;
			++it;
			_9289_i++;
			goto _iter_begin_1b8c17774;
		}
		_iter_end_1b8c17774:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1cdeab4b4_Token__jule_tuple_sx_1cdeab4b4_Token _1b57912ce_splitDelim(jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _95720_tokens, jule::U32 _95738_delim) {
	__jule_tuple_sx_1cdeab4b4_Token__jule_tuple_sx_1cdeab4b4_Token __jule_func_result;
	jule::I32 _9589_rangeN = 0LL;;
	{
		auto expr = _95720_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8c1b998:;
		if (it != expr_end) {
			jule::I32 _9599_i = it - expr->begin();
			jule::Ptr<_1cdeab4b4_Token> _95912_token = *it;
			{
				{
					auto &_match_expr{ (*(_95912_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1b8c1ca21:;
						{
							(_9589_rangeN)++;
							goto _iter_next_1b8c1b998;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1b8c1ca87:;
						{
							(_9589_rangeN)--;
						}
					}
					else if (_match_expr == _95738_delim) {
						_case_begin_1b8c1caed:;
						{
							if ((_9589_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _97221_l = (*(_95720_tokens)).slice(0LL, _9599_i);;
								jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _97321_r = (*(_95720_tokens)).slice((_9599_i + 1LL));;
								__jule_func_result.__jule_result_arg0 = _97221_l;
								__jule_func_result.__jule_result_arg1 = _97321_r;
								return __jule_func_result;;
							};
						}
					}
					_match_end_1b8c1c966:;
				};
			}
			_iter_next_1b8c1b998:;
			++it;
			_9599_i++;
			goto _iter_begin_1b8c1b998;
		}
		_iter_end_1b8c1b998:;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I32 _1b5791598_findLowestPrecOp(jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _98322_tokens) {
	jule::U8 _9889_prec = 255LLU;;
	jule::I32 _9899_precPos = -1LL;;
	jule::I32 _9919_braceN = 0LL;;
	jule::Bool _9929_skipToNextBraceOpen = false;;
	{
		auto expr = _98322_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8c2111d:;
		if (it != expr_end) {
			jule::I32 _9939_i = it - expr->begin();
			jule::Ptr<_1cdeab4b4_Token> *_99312_token = it;
			{
				{
					auto &_match_expr{ (*((*(_99312_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1b8c21dcc:;
						{
							_9929_skipToNextBraceOpen=false;
							goto _case_begin_1b8c21e54;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1b8c21e54:;
						{
							(_9919_braceN)++;
							goto _iter_next_1b8c2111d;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(75LLU) || _match_expr == static_cast<jule::U32>(77LLU)) {
						_case_begin_1b8c21eba:;
						{
							(_9919_braceN)--;
							goto _iter_next_1b8c2111d;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(13LLU)) {
						_case_begin_1b8c22031:;
						{
							_9929_skipToNextBraceOpen=true;
							goto _iter_next_1b8c2111d;
						}
					}
					_match_end_1b8c21d22:;
				};
				{
					
					if (_9929_skipToNextBraceOpen) {
						_case_begin_1b8c2374c:;
						{
							goto _iter_next_1b8c2111d;
						}
					}
					else if ((_9939_i == 0LL)) {
						_case_begin_1b8c237b3:;
						{
							goto _iter_next_1b8c2111d;
						}
					}
					else if ((_9919_braceN > 0LL)) {
						_case_begin_1b8c23829:;
						{
							goto _iter_next_1b8c2111d;
						}
					}
					else if ((!(_1cdeac00e_IsBinOp((*((*(_99312_token))))._field_Id)))) {
						_case_begin_1b8c23890:;
						{
							goto _iter_next_1b8c2111d;
						}
					}
					_match_end_1b8c235d7:;
				};
				jule::Ptr<_1cdeab4b4_Token> _10229_left = (*(_98322_tokens))[(_9939_i - 1LL)];;
				if ((_1cdeabc01_IsUnaryOp((*(_10229_left))._field_Id) || ((*_10229_left.alloc)._field_Id == static_cast<jule::U32>(8LLU)))) {
					goto _iter_next_1b8c2111d;
				};
				if (((_9939_i > 1LL) && ((*_10229_left.alloc)._field_Id == static_cast<jule::U32>(77LLU)))) {
					jule::Ptr<_1cdeab4b4_Token> _103013_lleft = (*(_98322_tokens))[(_9939_i - 2LL)];;
					if (((*(_103013_lleft))._field_Id == static_cast<jule::U32>(76LLU))) {
						if ((((*((*(_99312_token))))._field_Id == static_cast<jule::U32>(65LLU)) || ((*(*(_99312_token)).alloc)._field_Id == static_cast<jule::U32>(62LLU)))) {
							goto _iter_next_1b8c2111d;
						};
					};
				};
				jule::U8 _10399_p = _1cdeab838_Prec((*(_99312_token)));;
				if (((_10399_p != 0LLU) && (_10399_p <= _9889_prec))) {
					_9889_prec=_10399_p;
					_9899_precPos=_9939_i;
				};
			}
			_iter_next_1b8c2111d:;
			++it;
			_9939_i++;
			goto _iter_begin_1b8c2111d;
		}
		_iter_end_1b8c2111d:;
	};
	return _9899_precPos;;
}



inline jule::Ptr<_1cdec76de_IdentExpr> _1b5791862_buildIdentExpr(jule::Ptr<_1cdeab4b4_Token>* _104824_token) {
	return jule::new_ptr<_1cdec76de_IdentExpr>(_1cdec76de_IdentExpr{._field_Token=(*(_104824_token)), ._field_Ident=(*((*(_104824_token))))._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_1cdeab4b4_Token__jule_tuple_int _1b5791b2b_getRangeExprTokens(jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _105628_tokens) {
	__jule_tuple_sx_1cdeab4b4_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I32 _10579_rangeN = 0LL;;
	jule::I32 _10589_i = ((*(_105628_tokens)).len() - 1LL);;
	for (; (_10589_i >= 0LL); (_10589_i)--) {
		{
			jule::Ptr<_1cdeab4b4_Token> _10609_tok = (*(_105628_tokens))[_10589_i];;
			{
				auto &_match_expr{ (*(_10609_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1b8c2a721:;
					{
						(_10579_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1b8c2aa73:;
					{
						(_10579_rangeN)--;
					}
				}
				_match_end_1b8c2aa0c:;
			};
			if ((_10579_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_105628_tokens)).slice(0LL, _10589_i);
				__jule_func_result.__jule_result_arg1 = _10579_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1b8c29d2a:;
	}
	_iter_end_1b8c29d2a:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _10579_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1b5792940_checkAssignTokens(jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1cdeb0c7c_IsAssign((*((*(_1623_tokens))[0LL]))._field_Id))))) {
		return false;;
	};
	jule::I32 _209_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8cbad00:;
		if (it != expr_end) {
			jule::Ptr<_1cdeab4b4_Token> *_2112_t = it;
			{
				{
					auto &_match_expr{ (*((*(_2112_t))))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1b8cbb4e8:;
						{
							(_209_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1b8cbb88e:;
						{
							(_209_braceN)--;
						}
					}
					_match_end_1b8cbb7c3:;
				};
				{
					
					if ((_209_braceN < 0LL)) {
						_case_begin_1b8cbca38:;
						{
							return false;;
						}
					}
					else if ((_209_braceN > 0LL)) {
						_case_begin_1b8cbca9e:;
						{
							goto _iter_next_1b8cbad00;
						}
					}
					else if (_1cdeb1310_IsAssignOp((*((*(_2112_t))))._field_Id) || ((*(*(_2112_t)).alloc)._field_Id == static_cast<jule::U32>(38LLU))) {
						_case_begin_1b8cbcb15:;
						{
							return true;;
						}
					}
					_match_end_1b8cbc9d3:;
				};
			}
			_iter_next_1b8cbad00:;
			++it;
			goto _iter_begin_1b8cbad00;
		}
		_iter_end_1b8cbad00:;
	};
	return false;;
}



inline _22a93672d_Log _1b5793b0b_makeErr(jule::I32 _5112_row, jule::I32 _5122_col, jule::Ptr<_1cdeb1c4a_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args) {
	return _22a93672d_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_5112_row, ._field_Column=_5122_col, ._field_Path=(*((*(_5133_f))))._field_Path, ._field_Text=_22a936b90_Logf(_5143_fmt, _5156_args), };;
}



inline jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _1b5794139_range(jule::I32* _6915_i, jule::U32 _6923_open, jule::U32 _6938_close, jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _6959_tokens) {
	if (((*(_6915_i)) >= (*(_6959_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_1cdeab4b4_Token> _735_tok = (*(_6959_tokens))[(*(_6915_i))];;
	if (((*(_735_tok))._field_Id != _6923_open)) {
		return nullptr;;
	};
	((*(_6915_i)))++;
	jule::I32 _789_rangeN = 1LL;;
	jule::I32 _795_start = (*(_6915_i));;
	for (; ((_789_rangeN != 0LL) && ((*(_6915_i)) < (*(_6959_tokens)).len())); ((*(_6915_i)))++) {
		{
			jule::Ptr<_1cdeab4b4_Token> _819_token = (*(_6959_tokens))[(*(_6915_i))];;
			{
				auto &_match_expr{ (*(_819_token))._field_Id };
				
				if (_match_expr == _6923_open) {
					_case_begin_1b8cc2aa4:;
					{
						(_789_rangeN)++;
					}
				}
				else if (_match_expr == _6938_close) {
					_case_begin_1b8cc2de5:;
					{
						(_789_rangeN)--;
					}
				}
				_match_end_1b8cc2d90:;
			};
		}
	_iter_next_1b8cc06a6:;
	}
	_iter_end_1b8cc06a6:;;
	return (*(_6959_tokens)).slice(_795_start, ((*(_6915_i)) - 1LL));;
}



inline __jule_tuple_sx_1cdeab4b4_Token__jule_tuple_sx_1cdeab4b4_Token _1b5794403_rangeLast(jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _9919_tokens) {
	__jule_tuple_sx_1cdeab4b4_Token__jule_tuple_sx_1cdeab4b4_Token __jule_func_result;
	if (((*(_9919_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U32 _1035_first = (*((*(_9919_tokens))[((*(_9919_tokens)).len() - 1LL)]))._field_Id;;
	if ((((_1035_first != static_cast<jule::U32>(73LLU)) && (_1035_first != static_cast<jule::U32>(76LLU))) && (_1035_first != static_cast<jule::U32>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I32 _1099_braceN = 0LL;;
	jule::I32 _1109_i = ((*(_9919_tokens)).len() - 1LL);;
	for (; (_1109_i >= 0LL); (_1109_i)--) {
		{
			jule::Ptr<_1cdeab4b4_Token> _1129_token = (*(_9919_tokens))[_1109_i];;
			{
				auto &_match_expr{ (*(_1129_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1b8cc6d2d:;
					{
						(_1099_braceN)++;
						goto _iter_next_1b8cc615c;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1b8cc7180:;
					{
						(_1099_braceN)--;
					}
				}
				_match_end_1b8cc7119:;
			};
			if ((_1099_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_9919_tokens)).slice(0LL, _1109_i);
				__jule_func_result.__jule_result_arg1 = (*(_9919_tokens)).slice(_1109_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1b8cc615c:;
	}
	_iter_end_1b8cc615c:;;
	__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1cdeab4b4_Token__jule_tuple_s_22a93672d_Log _1b57948a9_parts(jule::Slice<jule::Ptr<_1cdeab4b4_Token>>* _13715_tokens, jule::U32 _13733_id, jule::Bool _13746_exprMust) {
	__jule_tuple_ssx_1cdeab4b4_Token__jule_tuple_s_22a93672d_Log __jule_func_result;
	if (((*(_13715_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I32 _1419_rangeN = 0LL;;
	jule::I32 _1429_last = 0LL;;
	{
		auto expr = _13715_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8cc91c6:;
		if (it != expr_end) {
			jule::I32 _1439_i = it - expr->begin();
			jule::Ptr<_1cdeab4b4_Token> _14312_token = *it;
			{
				{
					auto &_match_expr{ (*(_14312_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1b8ccaeec:;
						{
							(_1419_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1b8ccb063:;
						{
							(_1419_rangeN)--;
						}
					}
					else if (_match_expr == _13733_id) {
						_case_begin_1b8ccb0c9:;
						{
							if ((_1419_rangeN > 0LL)) {
								goto _iter_next_1b8cc91c6;
							};
							if ((_13746_exprMust && ((_1439_i - _1429_last) <= 0LL))) {
								_22a93672d_Log _15417_err = _1b5793b0b_makeErr((*(_14312_token))._field_Row, (*_14312_token.alloc)._field_Column, &((*_14312_token.alloc)._field_File), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());;
								{ jule::Slice<_22a93672d_Log> &__jule_push_dest = __jule_func_result.__jule_result_arg1; __jule_push_dest.push(_15417_err); };
							};
							{ jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_13715_tokens)).slice(_1429_last, _1439_i)); };
							_1429_last=(_1439_i + 1LL);
						}
					}
					_match_end_1b8ccae42:;
				};
			}
			_iter_next_1b8cc91c6:;
			++it;
			_1439_i++;
			goto _iter_begin_1b8cc91c6;
		}
		_iter_end_1b8cc91c6:;
	};
	if ((_1429_last < (*(_13715_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1cdeab4b4_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_13715_tokens)).slice(_1429_last)); };
	};
	return __jule_func_result;;
}



inline jule::U32 _1b5794b40_getCloseOfBrace(jule::U32 _16720_left) {
	{
		auto &_match_expr{ _16720_left };
		
		if (_match_expr == static_cast<jule::U32>(75LLU)) {
			_case_begin_1b8cce550:;
			{
				return static_cast<jule::U32>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_1b8cce5b6:;
			{
				return static_cast<jule::U32>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(77LLU)) {
			_case_begin_1b8cce62c:;
			{
				return static_cast<jule::U32>(76LLU);;
			}
		}
		else {
			_case_begin_1b8cca903:;
			{
				return _16720_left;;
			}
		}
		_match_end_1b8cca9e1:;
	};
}



inline _22a93672d_Log _1b579506e_compilerErr(jule::Ptr<_1cdeab4b4_Token>* _18017_token, jule::Str* _18033_fmt, jule::Slice<jule::Any> _18046_args) {
	return _22a93672d_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*((*(_18017_token))))._field_Row, ._field_Column=(*((*(_18017_token))))._field_Column, ._field_Path=(*((*((*(_18017_token))))._field_File))._field_Path, ._field_Text=_22a936b90_Logf((*(_18033_fmt)), _18046_args), ._field_Line=_1cdeb2c5c_GetRow((*((*(_18017_token))))._field_File, (*((*(_18017_token))))._field_Row), };;
}



inline void _1b5795415_pushSuggestion(_22a93672d_Log* _19130_log, jule::Str _19141_fmt, jule::Slice<jule::Any> _19154_args) {
	(*(_19130_log))._field_Suggestion=_22a936b90_Logf(_19141_fmt, _19154_args);
}



inline jule::Ptr<_1cdec1a90_TypeDecl> _1b57a73a0_buildVoidType(void) {
	return jule::new_ptr<_1cdec1a90_TypeDecl>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1ce2b04bb_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str::lit("windows", 7)) {
			_case_begin_1b906c1c2:;
			{
				__jule_func_result.__jule_result_arg0=_22a9398a7_IsWindows(_22abda680_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("darwin", 6)) {
			_case_begin_1b906c238:;
			{
				__jule_func_result.__jule_result_arg0=_22a939bb5_IsDarwin(_22abda680_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("linux", 5)) {
			_case_begin_1b906be19:;
			{
				__jule_func_result.__jule_result_arg0=_22a939e7e_IsLinux(_22abda680_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("unix", 4)) {
			_case_begin_1b906be80:;
			{
				__jule_func_result.__jule_result_arg0=_22a93aad9_IsUnix(_22abda680_Os);
			}
		}
		else {
			_case_begin_1b906b91e:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1b906ba51:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1ce341805_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str::lit("i386", 4)) {
			_case_begin_1b906e416:;
			{
				__jule_func_result.__jule_result_arg0=_22a93a2c0_IsI386(_22abda938_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("amd64", 5)) {
			_case_begin_1b906e0e7:;
			{
				__jule_func_result.__jule_result_arg0=_22a93a556_IsAmd64(_22abda938_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("arm64", 5)) {
			_case_begin_1b906e15d:;
			{
				__jule_func_result.__jule_result_arg0=_22a93a820_IsArm64(_22abda938_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x64", 3)) {
			_case_begin_1b906e1c4:;
			{
				__jule_func_result.__jule_result_arg0=_22a93b205_Is64Bit(_22abda938_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x32", 3)) {
			_case_begin_1b906e23a:;
			{
				__jule_func_result.__jule_result_arg0=_22a93aeb3_Is32Bit(_22abda938_Arch);
			}
		}
		else {
			_case_begin_1b906daec:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1b906dc2e:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ce341aad_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_22ab192c3_Base(_5029_p);
	jule::I32 _525_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_525_n - _22ab18c40_Ext(_5029_p).len()));;
	jule::Str _589_a1 = jule::Str();;
	jule::Str _619_a2 = jule::Str();;
	jule::I32 _649_i = _22aaea99c_FindLastByte(_5029_p, '_');;
	if ((_649_i == -1LL)) {
		jule::Bool _6713_ok;;
		jule::Bool _6721_exist;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ce2b04bb_checkOs(_5029_p);
			_6713_ok = __jule_assign_result.__jule_result_arg0;
			_6721_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6721_exist) {
			return _6713_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ce341805_checkArch(_5029_p);
			_6713_ok = __jule_assign_result.__jule_result_arg0;
			_6721_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6721_exist)) || _6713_ok);;
	};
	if (((_649_i + 1LL) >= _525_n)) {
		return true;;
	};
	_589_a1=_5029_p.slice((_649_i + 1LL));
	(_5029_p).mut_slice(0LL, _649_i);;
	_649_i=_22aaea99c_FindLastByte(_5029_p, '_');
	if ((_649_i != -1LL)) {
		_619_a2=_5029_p.slice((_649_i + 1LL));
	};
	if ((_619_a2).empty()) {
		jule::Bool _8813_ok;;
		jule::Bool _8821_exist;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ce2b04bb_checkOs(_589_a1);
			_8813_ok = __jule_assign_result.__jule_result_arg0;
			_8821_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8821_exist) {
			return _8813_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ce341805_checkArch(_589_a1);
			_8813_ok = __jule_assign_result.__jule_result_arg0;
			_8821_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8821_exist)) || _8813_ok);;
	};
	jule::Bool _969_ok;;
	jule::Bool _9617_exist;;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ce341805_checkArch(_589_a1);
		_969_ok = __jule_assign_result.__jule_result_arg0;
		_9617_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9617_exist) {
		if ((!(_969_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ce2b04bb_checkOs(_619_a2);
			_969_ok = __jule_assign_result.__jule_result_arg0;
			_9617_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9617_exist)) || _969_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ce2b04bb_checkOs(_589_a1);
		_969_ok = __jule_assign_result.__jule_result_arg0;
		_9617_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9617_exist)) || _969_ok);;
}



inline void _1ce3622d7_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_22abda680_Os); };
	if (_22a93aad9_IsUnix(_22abda680_Os)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str::lit("unix", 4)); };
	};
}



inline void _1ce36255c_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_22abda938_Arch); };
	if (_22a93b205_Is64Bit(_22abda938_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x64", 3)); };
	};
	if (_22a93aeb3_Is32Bit(_22abda938_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x32", 3)); };
	};
}



inline void _1ce362848_initVars(jule::Slice<jule::Str>* _5518_vars, _1ce361eb8_CompileInfo* _5532_info) {
	_1ce3622d7_setOsVars(_5518_vars);
	_1ce36255c_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1b9079cc3:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("clang", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1b907971d:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("gcc", 3)); };
			}
		}
		_match_end_1b9079696:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1b90797a6:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp14", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1b907a499:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp17", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1b907a510:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp20", 5)); };
			}
		}
		_match_end_1b907aba3:;
	};
}



inline jule::Slice<jule::U8> _1b57ab4a3_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__2439c8b92_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str::lit("error: file cannot read", 23));
			;
			_22abd94c5_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _22a93672d_Log _1b57ab7b1_flatCompilerErr(jule::Str _4120_text) {
	return _22a93672d_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Text=_4120_text, };;
}



inline void _1b57b10ce_pushPasses(jule::Ptr<_1ce06ded3_Package>* _11120_p, jule::Slice<jule::Str>* _11144_passes) {
	{
		auto expr = &((*((*(_11120_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b90ab3ed:;
		if (it != expr_end) {
			jule::Ptr<_1ce116894_SymbolTable> _11217_f = *it;
			{
				_julec_label_1b90ab145:;
				{
					auto expr = &((*(_11217_f))._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b90abe6a:;
					if (it != expr_end) {
						_1ce01001d_Pass _11416_pass = *it;
						{
							if ((_11416_pass._field_Text).empty()) {
								goto _iter_next_1b90abe6a;
							};
							{
								auto expr = _11144_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b90aca2b:;
								if (it != expr_end) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_1b90abe6a;
										};
									}
									_iter_next_1b90aca2b:;
									++it;
									goto _iter_begin_1b90aca2b;
								}
								_iter_end_1b90aca2b:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_11144_passes)); __jule_push_dest.push(_11416_pass._field_Text); };
						}
						_iter_next_1b90abe6a:;
						++it;
						goto _iter_begin_1b90abe6a;
					}
					_iter_end_1b90abe6a:;
				};
			}
			_iter_next_1b90ab3ed:;
			++it;
			goto _iter_begin_1b90ab3ed;
		}
		_iter_end_1b90ab3ed:;
	};
}



inline jule::Slice<jule::Str> _1b57b1497_getAllUniquePasses(jule::Ptr<_1ce06ded3_Package>* _12828_pkg, jule::Slice<jule::Ptr<_1ce06b0ac_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_1b57b10ce_pushPasses(_12828_pkg, &(_12913_passes));
	{
		auto expr = &(_12853_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b90ae115:;
		if (it != expr_end) {
			jule::Ptr<_1ce06b0ac_ImportInfo> _13217_u = *it;
			{
				if ((!((*(_13217_u))._field_Binded))) {
					_1b57b10ce_pushPasses(&((*_13217_u.alloc)._field_Package), &(_12913_passes));
				};
			}
			_iter_next_1b90ae115:;
			++it;
			goto _iter_begin_1b90ae115;
		}
		_iter_end_1b90ae115:;
	};
	return _12913_passes;;
}



inline _1ce361eb8_CompileInfo _1b57b16a6_buildCompileInfo(void) {
	_1ce361eb8_CompileInfo _1429_info = _1ce361eb8_CompileInfo{._field_Prod=_2434dd82d_Production, ._field_Test=_2434dce6a_Test, };;
	{
		auto &_match_expr{ _2434dc398_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1b90b0688:;
			{
				_1429_info._field_Compiler=jule::Str::lit("clang", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1b90b0523:;
			{
				_1429_info._field_Compiler=jule::Str::lit("gcc", 3);
			}
		}
		_match_end_1b90b0633:;
	};
	{
		auto &_match_expr{ _2434dc7b6_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1b90b06ee:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1b90b0a1d:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1b90b0a84:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp20", 5);
			}
		}
		_match_end_1b90b13d1:;
	};
	return _1429_info;;
}



inline void _1b592891c_EliminateDefines(jule::Ptr<_1b57ae72b_IR>* _30526_ir) {
	jule::Ptr<_1b5925a07_ObjectDeadCode> _3069_ocd = static__1b5925e9c_new(_30526_ir);;
	_1b59285dc_elimanate(_3069_ocd);
}



inline jule::Ptr<_1cdec0eac_Directive> _1b5928cd5_findDirective(jule::Slice<jule::Ptr<_1cdec0eac_Directive>>* _31123_directives, jule::Str _31154_tag) {
	{
		auto expr = _31123_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9102b81:;
		if (it != expr_end) {
			jule::Ptr<_1cdec0eac_Directive> _31217_dr = *it;
			{
				if (((*((*(_31217_dr))._field_Tag))._field_Kind == _31154_tag)) {
					return _31217_dr;;
				};
			}
			_iter_next_1b9102b81:;
			++it;
			goto _iter_begin_1b9102b81;
		}
		_iter_end_1b9102b81:;
	};
	return nullptr;;
}



inline jule::Bool _1b5929159_hasDirective(jule::Slice<jule::Ptr<_1cdec0eac_Directive>>* _32118_directives, jule::Str _32149_tag) {
	return (_1b5928cd5_findDirective(&((*(_32118_directives))), _32149_tag) != nullptr);;
}



inline jule::Bool _1b5929522_isTraitMethod(jule::Ptr<_1cdee571d_StructIns>* _32623_owner, jule::Ptr<_1ce00a832_FnIns>* _32643_f) {
	{
		auto expr = &((*((*((*(_32623_owner))))._field_Decl))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9104556:;
		if (it != expr_end) {
			jule::Ptr<_1ce01ac0a_Trait> _32717_t = *it;
			{
				if ((_1ce01b8a9_FindMethod(_32717_t.ptr(), (*((*((*(_32643_f))))._field_Decl))._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_1b9104556:;
			++it;
			goto _iter_begin_1b9104556;
		}
		_iter_end_1b9104556:;
	};
	return false;;
}



inline void _1b592d526_eliminateDeadCodeOfScope(jule::Ptr<_1ce0497c7_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_1ce04c16a_Label>> _2425_labels = jule::Slice<jule::Ptr<_1ce04c16a_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_1ce04c544_GotoSt>> _2435_gotos = jule::Slice<jule::Ptr<_1ce04c544_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_1b592a2e2_scopeDeadCode> _2449_sdc = jule::new_ptr<_1b592a2e2_scopeDeadCode>(_1b592a2e2_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&((*(_24133_s))._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1ce04c16a_Label>>>)((&(_2425_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1ce04c544_GotoSt>>>)((&(_2435_gotos)))), });;
	{
		_1b592d1e6_optimizeStmts(_2449_sdc);
	};
}



inline void _1b592d79b_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1ce00792d_Fn>>* _25433_funcs) {
	{
		auto expr = _25433_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b915e616:;
		if (it != expr_end) {
			jule::Ptr<_1ce00792d_Fn> _25517_func = *it;
			{
				{
					auto expr = &((*(_25517_func))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b9161b68:;
					if (it != expr_end) {
						jule::Ptr<_1ce00a832_FnIns> _25621_ins = *it;
						{
							_1b592d526_eliminateDeadCodeOfScope((*(_25621_ins))._field_Scope);
						}
						_iter_next_1b9161b68:;
						++it;
						goto _iter_begin_1b9161b68;
					}
					_iter_end_1b9161b68:;
				};
			}
			_iter_next_1b915e616:;
			++it;
			goto _iter_begin_1b915e616;
		}
		_iter_end_1b915e616:;
	};
}



inline void _1b592d9cc_eliminateFunctionsScopePackage(jule::Ptr<_1ce06ded3_Package>* _26240_pkg) {
	{
		auto expr = &((*((*(_26240_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b91625e7:;
		if (it != expr_end) {
			jule::Ptr<_1ce116894_SymbolTable> _26317_f = *it;
			{
				_1b592d79b_eliminateScopeFunctions(&((*(_26317_f))._field_Funcs));
			}
			_iter_next_1b91625e7:;
			++it;
			goto _iter_begin_1b91625e7;
		}
		_iter_end_1b91625e7:;
	};
}



inline void _1b592dc85_eliminateScopePackage(jule::Ptr<_1ce06ded3_Package>* _26831_pkg) {
	_1b592d9cc_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _1b592de83_EliminateScopes(jule::Ptr<_1b57ae72b_IR>* _27325_ir) {
	jule::I32 _2749_i = ((*((*(_27325_ir))))._field_Used.len() - 1LL);;
	for (; (_2749_i >= 0LL); (_2749_i)--) {
		{
			jule::Ptr<_1ce06b0ac_ImportInfo> _27613_u = (*((*(_27325_ir))))._field_Used[_2749_i];;
			if ((!((*(_27613_u))._field_Binded))) {
				_1b592dc85_eliminateScopePackage(&((*_27613_u.alloc)._field_Package));
			};
		}
	_iter_next_1b9163780:;
	}
	_iter_end_1b9163780:;;
	_1b592dc85_eliminateScopePackage(&((*((*(_27325_ir))))._field_Main));
}



inline jule::Uintptr _1ce243b9c_typeData(jule::Any* _1714_m) {
	return ((jule::Uintptr)(((*(_1714_m))).type));;
}



inline jule::Bool _1ce243ebb_equalConst(jule::Ptr<_22be1616d_Const> _2115_l, jule::Ptr<_22be1616d_Const> _2126_r) {
	{
		
		if (_22be1a13e_IsI64(_2115_l.ptr())) {
			_case_begin_1b8d93290:;
			{
				return (_22be1a13e_IsI64(_2126_r.ptr()) && (_22be17a43_ReadI64(_2115_l) == _22be17a43_ReadI64(_2126_r)));;
			}
		}
		else if (_22be1a3c5_IsU64(_2115_l.ptr())) {
			_case_begin_1b8d93306:;
			{
				return (_22be1a3c5_IsU64(_2126_r.ptr()) && (_22be17cc9_ReadU64(_2115_l) == _22be17cc9_ReadU64(_2126_r)));;
			}
		}
		else if (_22be1ab78_IsF64(_2115_l.ptr())) {
			_case_begin_1b8d9337d:;
			{
				return (_22be1ab78_IsF64(_2126_r.ptr()) && (_22be1857c_ReadF64(_2115_l) == _22be1857c_ReadF64(_2126_r)));;
			}
		}
		else if (_22be1a8e2_IsStr(_2115_l.ptr())) {
			_case_begin_1b8d93405:;
			{
				return (_22be1a8e2_IsStr(_2126_r.ptr()) && (_22be182e6_ReadStr(_2115_l) == _22be182e6_ReadStr(_2126_r)));;
			}
		}
		else if (_22be1a65b_IsBool(_2115_l.ptr())) {
			_case_begin_1b8d935e2:;
			{
				return (_22be1a65b_IsBool(_2126_r.ptr()) && (_22be18060_ReadBool(_2115_l) == _22be18060_ReadBool(_2126_r)));;
			}
		}
		else if (_22be1ae0e_IsNil(_2115_l.ptr())) {
			_case_begin_1b8d93658:;
			{
				return _22be1ae0e_IsNil(_2126_r.ptr());;
			}
		}
		else {
			_case_begin_1b8d931a2:;
			{
				return false;;
			}
		}
		_match_end_1b8d92e71:;
	};
}



inline jule::Bool _1ce244340_equalCasting(jule::Ptr<_1cdeeb2e5_CastingExprModel> _4017_l, jule::Ptr<_1cdeeb2e5_CastingExprModel> _4039_r) {
	if ((!(_1ce14d3d1_Equal((*(_4017_l))._field_Kind, (*(_4039_r))._field_Kind)))) {
		return false;;
	};
	return _1ce245275_equalModels((*((*_4017_l.alloc)._field_Expr))._field_Model, (*(*_4039_r.alloc)._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1ce244708_equalUnary(jule::Ptr<_1cdeea091_UnaryExprModel> _4715_l, jule::Ptr<_1cdeea091_UnaryExprModel> _4735_r) {
	if ((((*((*(_4715_l))._field_Op))._field_Id != (*(*(_4735_r))._field_Op.alloc)._field_Id) || ((*(*_4715_l.alloc)._field_Op.alloc)._field_Kind != (*(*_4735_r.alloc)._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return _1ce245275_equalModels((*((*_4715_l.alloc)._field_Expr))._field_Model, (*(*_4735_r.alloc)._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1ce244a7c_equalIndexing(jule::Ptr<_1cdeec527_IndexingExprModel> _5418_l, jule::Ptr<_1cdeec527_IndexingExprModel> _5441_r) {
	return (_1ce245275_equalModels((*((*(_5418_l))._field_Expr))._field_Model, (*(*(_5441_r))._field_Expr.alloc)._field_Model) && _1ce245275_equalModels((*((*_5418_l.alloc)._field_Index))._field_Model, (*(*_5441_r.alloc)._field_Index.alloc)._field_Model));;
}



inline jule::Bool _1ce244e01_equalBinary(jule::Ptr<_1cdee9bb7_BinaryExprModel> _5916_l, jule::Ptr<_1cdee9bb7_BinaryExprModel> _5937_r) {
	if ((((*((*(_5916_l))._field_Op))._field_Id != (*(*(_5937_r))._field_Op.alloc)._field_Id) || ((*(*_5916_l.alloc)._field_Op.alloc)._field_Kind != (*(*_5937_r.alloc)._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return (_1ce245275_equalModels((*((*_5916_l.alloc)._field_Left))._field_Model, (*(*_5937_r.alloc)._field_Left.alloc)._field_Model) && _1ce245275_equalModels((*((*_5916_l.alloc)._field_Right))._field_Model, (*(*_5937_r.alloc)._field_Right.alloc)._field_Model));;
}



inline jule::Bool _1ce245275_equalModels(jule::Any _7016_l, jule::Any _7030_r) {
	if ((_1ce243b9c_typeData(&(_7016_l)) != _1ce243b9c_typeData(&(_7030_r)))) {
		return false;;
	};
	{
		auto &_match_expr{ _7016_l };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b8da28ba:;
			{
				return (_7016_l.unsafe_cast_ptr<_1ce0b4105_Var>() == _7030_r.cast_ptr<_1ce0b4105_Var>(&__jule_any_type8));;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b8da2931:;
			{
				jule::Ptr<_1cdeee738_StructSubIdentExprModel> _789_li = _7016_l.unsafe_cast_ptr<_1cdeee738_StructSubIdentExprModel>();;
				jule::Ptr<_1cdeee738_StructSubIdentExprModel> _799_ri = _7030_r.cast_ptr<_1cdeee738_StructSubIdentExprModel>(&__jule_any_type98);;
				return (((*(_789_li))._field_Field == (*(_799_ri))._field_Field) && _1ce245275_equalModels((*((*_789_li.alloc)._field_Expr))._field_Model, (*(*_799_ri.alloc)._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b8da2997:;
			{
				return _1ce243ebb_equalConst(_7016_l.unsafe_cast_ptr<_22be1616d_Const>(), _7030_r.cast_ptr<_22be1616d_Const>(&__jule_any_type19));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1b8da2502:;
			{
				return _1ce244340_equalCasting(_7016_l.unsafe_cast_ptr<_1cdeeb2e5_CastingExprModel>(), _7030_r.cast_ptr<_1cdeeb2e5_CastingExprModel>(&__jule_any_type93));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1b8da2568:;
			{
				return _1ce244708_equalUnary(_7016_l.unsafe_cast_ptr<_1cdeea091_UnaryExprModel>(), _7030_r.cast_ptr<_1cdeea091_UnaryExprModel>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1b8da25ce:;
			{
				return _1ce244a7c_equalIndexing(_7016_l.unsafe_cast_ptr<_1cdeec527_IndexingExprModel>(), _7030_r.cast_ptr<_1cdeec527_IndexingExprModel>(&__jule_any_type45));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1b8da2645:;
			{
				return _1ce244e01_equalBinary(_7016_l.unsafe_cast_ptr<_1cdee9bb7_BinaryExprModel>(), _7030_r.cast_ptr<_1cdee9bb7_BinaryExprModel>(&__jule_any_type111));;
			}
		}
		else {
			_case_begin_1b8da1e80:;
			{
				return false;;
			}
		}
		_match_end_1b8da2436:;
	};
}



inline void _1ce24ad91_possibleNilRemove(jule::Ptr<_1ce249db2_nils>* _7827_n, jule::Any _7837_m) {
	if (((*(_7827_n)) != nullptr)) {
		_1ce24a665_removeVar((*(_7827_n)).ptr(), _1ce24b864_getNilVar(_7837_m));
	};
}



inline jule::Bool _1ce24b259_isGuaranteedNonNilExpr(jule::Ptr<_1ce249db2_nils>* _8432_n, jule::Any _8442_m) {
	{
		auto &_match_expr{ _8442_m };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1b8da8816:;
			{
				return true;;
			}
		}
		_match_end_1b8da87b1:;
	};
	return (((*(_8432_n)) != nullptr) && _1ce24a9a6_isSafe((*(_8432_n)).ptr(), _1ce24b864_getNilVar(_8442_m)));;
}



inline jule::Bool _1ce24b523_isNilValidType(jule::Ptr<_1ce14cbc7_TypeKind> _9223_t) {
	return (_1ce1505ae_Sptr(_9223_t.ptr()) != nullptr);;
}



inline jule::Uintptr _1ce24b864_getNilVar(jule::Any _9414_m) {
	if ((!(_1ce2677d6_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _9414_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b8da9dcd:;
			{
				jule::Ptr<_1ce0b4105_Var> _1009_v = _9414_m.unsafe_cast_ptr<_1ce0b4105_Var>();;
				if ((!((*(_1009_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_9414_m.unsafe_cast_ptr<_1ce0b4105_Var>());;
				};
				return _1ce24b864_getNilVar((*((*((*_1009_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b8da9ce0:;
			{
				return static_cast<jule::Uintptr>((*(_9414_m.unsafe_cast_ptr<_1cdeee738_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		_match_end_1b8da9d78:;
	};
	return 0LLU;;
}



inline jule::Bool _1ce25279e_isStdPackage(jule::Str* _67518_f, jule::Str _67526_p) {
	return _22aae7867_HasPrefix((*(_67518_f)), _22ab189a9_Join(jule::Slice<jule::Str>::make({_22abd9a25_PathStdlib,_67526_p})));;
}



inline jule::Bool _1ce252aac_isConstantValidConditionalCase(jule::Ptr<_1ce049be5_If>* _67936_i) {
	{
		auto &_match_expr{ (*((*(_67936_i))))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b8db32e3:;
			{
				jule::Ptr<_22be1616d_Const> _6829_c = (*((*(_67936_i))))._field_Expr.unsafe_cast_ptr<_22be1616d_Const>();;
				return (_22be1a65b_IsBool(_6829_c.ptr()) && _22be18060_ReadBool(_6829_c));;
			}
		}
		_match_end_1b8db327c:;
	};
	return false;;
}



inline jule::Bool _1ce252d76_isUnreachableExpr(jule::Any* _68823_expr) {
	{
		auto &_match_expr{ (*(_68823_expr)) };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b8db3766:;
			{
				jule::Ptr<_22be1616d_Const> _6919_c = (*(_68823_expr)).cast_ptr<_22be1616d_Const>(&__jule_any_type19);;
				return (_22be1a65b_IsBool(_6919_c.ptr()) && (!(_22be18060_ReadBool(_6919_c))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1b8db3678:;
			{
				jule::Ptr<_1cdee9bb7_BinaryExprModel> _6949_m = (*(_68823_expr)).cast_ptr<_1cdee9bb7_BinaryExprModel>(&__jule_any_type111);;
				if (((*((*(_6949_m))._field_Op))._field_Id == static_cast<jule::U32>(54LLU))) {
					return (_1ce252d76_isUnreachableExpr(&((*((*_6949_m.alloc)._field_Left))._field_Model)) || _1ce252d76_isUnreachableExpr(&((*((*_6949_m.alloc)._field_Right))._field_Model)));;
				};
			}
		}
		_match_end_1b8db3700:;
	};
	return false;;
}



inline jule::Bool _1ce2531b7_isConstantValidMatchCase(jule::Ptr<_1ce04e436_Case>* _70330_case) {
	{
		auto expr = &((*((*(_70330_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8db7a01:;
		if (it != expr_end) {
			jule::Ptr<_1ce11bc0c_Data> *_70412_expr = it;
			{
				if (((_1ce11c614_IsConst((*(_70412_expr)).ptr()) && _22be1a65b_IsBool((*(*(_70412_expr)).alloc)._field_Constant.ptr())) && _22be18060_ReadBool((*(*(_70412_expr)).alloc)._field_Constant))) {
					return true;;
				};
			}
			_iter_next_1b8db7a01:;
			++it;
			goto _iter_begin_1b8db7a01;
		}
		_iter_end_1b8db7a01:;
	};
	return false;;
}



inline jule::Bool _1ce25344d_isUnreachableConditionalCase(jule::Ptr<_1ce049be5_If>* _71234_i) {
	return _1ce252d76_isUnreachableExpr(&((*((*(_71234_i))))._field_Expr));;
}



inline jule::Bool _1ce253717_isUnreachableMatchCase(jule::Ptr<_1ce04e436_Case>* _71628_case) {
	{
		auto expr = &((*((*(_71628_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8db99ae:;
		if (it != expr_end) {
			jule::Ptr<_1ce11bc0c_Data> *_71712_expr = it;
			{
				if ((!(_1ce252d76_isUnreachableExpr(&((*((*(_71712_expr))))._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1b8db99ae:;
			++it;
			goto _iter_begin_1b8db99ae;
		}
		_iter_end_1b8db99ae:;
	};
	return true;;
}



inline jule::Bool _1ce2539d1_isForwarded(jule::Ptr<_1ce0497c7_Scope>* _72517_s) {
	jule::Any _7265_last = (*((*(_72517_s))))._field_Stmts[((*((*(_72517_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _7265_last };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b8dbb2c9:;
			{
				{
					auto &_match_expr{ (*(_7265_last.cast_ptr<_1ce11bc0c_Data>(&__jule_any_type24)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1b8dbb692:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1b8dbc176:;
						{
							return false;;
						}
					}
					_match_end_1b8dbc121:;
				};
			}
		}
		else {
			_case_begin_1b8dbb450:;
			{
				return true;;
			}
		}
		_match_end_1b8dbb3ea:;
	};
}



inline __jule_tuple_bool__jule_tuple_u64 _1ce25d359_checkForBitShiftOpt(jule::Ptr<_1cdee96bc_OperandExprModel>* _77925_l, jule::Ptr<_1cdee96bc_OperandExprModel>* _77948_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_22be15502_IsInt(_1ce14d090_Str((*((*(_77925_l))))._field_Kind.ptr())))) || (!(_22be15502_IsInt(_1ce14d090_Str((*((*(_77948_r))))._field_Kind)))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=_22be18a99_AsU64((*((*(_77948_r))))._field_Model.cast_ptr<_22be1616d_Const>(&__jule_any_type19).ptr());
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _7875_j = _22bdb7372_Log2(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1));;
	jule::U64 _7885_z = static_cast<jule::U64>(_7875_j);;
	if ((static_cast<jule::F64>(_7885_z) != _7875_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _7885_z;
	return __jule_func_result;;
}



inline jule::Bool _1ce25d722_areSameLvalueExprModel(jule::Any* _79628_l, jule::Any* _79643_r) {
	{
		auto &_match_expr{ (*(_79628_l)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b8e5c03a:;
			{
				return ((*(_79643_r)) == (*(_79628_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b8e59d07:;
			{
				{
					auto &_match_expr{ (*(_79643_r)) };
					
					if (_match_expr.type == &__jule_any_type98) {
						_case_begin_1b8e5c579:;
						{
							goto _match_end_1b8e5cba6;
						}
					}
					else {
						_case_begin_1b8e5cc0b:;
						{
							return false;;
						}
					}
					_match_end_1b8e5cba6:;
				};
				jule::Ptr<_1cdeee738_StructSubIdentExprModel> _8099_lsi = (*(_79628_l)).cast_ptr<_1cdeee738_StructSubIdentExprModel>(&__jule_any_type98);;
				jule::Ptr<_1cdeee738_StructSubIdentExprModel> _8109_rsi = (*(_79643_r)).cast_ptr<_1cdeee738_StructSubIdentExprModel>(&__jule_any_type98);;
				if (((*(_8099_lsi))._field_Field != (*(_8109_rsi))._field_Field)) {
					return false;;
				};
				return _1ce25d722_areSameLvalueExprModel(&((*((*_8099_lsi.alloc)._field_Expr))._field_Model), &((*(*_8109_rsi.alloc)._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1b8e5c0b2:;
			{
				{
					auto &_match_expr{ (*(_79643_r)) };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_1b8e601d6:;
						{
							jule::Ptr<_1cdeea091_UnaryExprModel> _82213_ul = (*(_79628_l)).cast_ptr<_1cdeea091_UnaryExprModel>(&__jule_any_type110);;
							jule::Ptr<_1cdeea091_UnaryExprModel> _82313_ur = (*(_79643_r)).cast_ptr<_1cdeea091_UnaryExprModel>(&__jule_any_type110);;
							if ((((*((*(_82213_ul))._field_Op))._field_Id != (*(*(_82313_ur))._field_Op.alloc)._field_Id) || ((*(*_82213_ul.alloc)._field_Op.alloc)._field_Kind != (*(*_82313_ur.alloc)._field_Op.alloc)._field_Kind))) {
								return false;;
							};
							return _1ce25d722_areSameLvalueExprModel(&((*((*_82213_ul.alloc)._field_Expr))._field_Model), &((*(*_82313_ur.alloc)._field_Expr.alloc)._field_Model));;
						}
					}
					_match_end_1b8e5e636:;
				};
			}
		}
		_match_end_1b8e5bed5:;
	};
	return false;;
}



inline void _1ce260735_possibleDynamicRemove(jule::Ptr<_1ce25e69b_dynamic>* _8031_d, jule::Any _8044_m) {
	if (((*(_8031_d)) != nullptr)) {
		_1ce25ee4e_removeVar((*(_8031_d)).ptr(), _1ce2612b3_getDynamicVar(_8044_m));
	};
}



inline jule::Bool _1ce260a43_isDynamicValidType(jule::Ptr<_1ce14cbc7_TypeKind> _8627_t) {
	return _1ce261549_isAny(&(_8627_t));;
}



inline jule::Ptr<_1ce14cbc7_TypeKind> _1ce260e72_isTypeGuaranteedDynamicData(jule::Ptr<_1ce25e69b_dynamic>* _8837_dy, jule::Ptr<_1ce14cbc7_TypeKind> _8855_t, jule::Any _8873_m) {
	jule::Bool _895_isAny = _1ce261549_isAny(&(_8855_t));;
	if (((!(_895_isAny)) && (_1ce151b32_Trait(_8855_t.ptr()) == nullptr))) {
		return _8855_t;;
	};
	if ((!(_895_isAny))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _8873_m };
		
		if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1b919cbe8:;
			{
				jule::Ptr<_1cdeeb2e5_CastingExprModel> _9813_cem = _8873_m.unsafe_cast_ptr<_1cdeeb2e5_CastingExprModel>();;
				return _1ce260e72_isTypeGuaranteedDynamicData(_8837_dy, (*(_9813_cem))._field_ExprKind, (*((*_9813_cem.alloc)._field_Expr))._field_Model);;
			}
		}
		_match_end_1b919cb93:;
	};
	jule::Uintptr _1015_var = _1ce2612b3_getDynamicVar(_8873_m);;
	if ((_1015_var == 0LLU)) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_8837_dy))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b919e8a9:;
		if (it != expr_end) {
			_1ce25e35a_dynamicVar _10517_v = *it;
			{
				if ((_10517_v._field_var == _1015_var)) {
					return _10517_v._field_kind;;
				};
			}
			_iter_next_1b919e8a9:;
			++it;
			goto _iter_begin_1b919e8a9;
		}
		_iter_end_1b919e8a9:;
	};
	return nullptr;;
}



inline jule::Uintptr _1ce2612b3_getDynamicVar(jule::Any _11318_m) {
	if ((!(_1ce2692bb_Dynamic))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _11318_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b91a002a:;
			{
				jule::Ptr<_1ce0b4105_Var> _1199_v = _11318_m.unsafe_cast_ptr<_1ce0b4105_Var>();;
				if ((!((*(_1199_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_11318_m.unsafe_cast_ptr<_1ce0b4105_Var>());;
				};
				return _1ce2612b3_getDynamicVar((*((*((*_1199_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b91a03c1:;
			{
				return static_cast<jule::Uintptr>((*(_11318_m.unsafe_cast_ptr<_1cdeee738_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1b91a0965:;
			{
				jule::Ptr<_1cdeea091_UnaryExprModel> _1309_uem = _11318_m.unsafe_cast_ptr<_1cdeea091_UnaryExprModel>();;
				if (((*((*(_1309_uem))._field_Op))._field_Id == static_cast<jule::U32>(62LLU))) {
					return _1ce2612b3_getDynamicVar((*((*_1309_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1b919ee81:;
	};
	return 0LLU;;
}



inline jule::Bool _1ce261549_isAny(jule::Ptr<_1ce14cbc7_TypeKind>* _13915_t) {
	if ((_1ce150d62_TypeEnum((*(_13915_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1ce1557a1_Prim> _1435_prim = _1ce150328_Prim((*(_13915_t)).ptr());;
	return ((_1435_prim != nullptr) && _1ce158ebe_IsAny(_1435_prim));;
}



inline jule::Bool _1ce265053_isValidBoundaryInfo(jule::Any _8424_m) {
	return _1ce265790_fitsSize(_8424_m, _8424_m);;
}



inline jule::I32 _1ce26541b_fitsMaxSize(jule::Slice<jule::Any> _8916_max, jule::Any _8934_expr) {
	{
		auto expr = &(_8916_max);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b91b1514:;
		if (it != expr_end) {
			jule::I32 _909_i = it - expr->begin();
			jule::Any *_9012_m = it;
			{
				if (_1ce265790_fitsSize((*(_9012_m)), _8934_expr)) {
					return _909_i;;
				};
			}
			_iter_next_1b91b1514:;
			++it;
			_909_i++;
			goto _iter_begin_1b91b1514;
		}
		_iter_end_1b91b1514:;
	};
	return -1LL;;
}



inline jule::Bool _1ce265790_fitsSize(jule::Any _9813_e1, jule::Any _9828_e2) {
	if ((_1ce243b9c_typeData(&(_9813_e1)) != _1ce243b9c_typeData(&(_9828_e2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _9813_e1 };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b91b301b:;
			{
				jule::Ptr<_22be1616d_Const> _1049_exprConst = _9828_e2.cast_ptr<_22be1616d_Const>(&__jule_any_type19);;
				return ((_22be18d30_AsF64(_1049_exprConst.ptr()) >= 0LL) && _22be1ca37_GtEq(_9813_e1.unsafe_cast_ptr<_22be1616d_Const>().ptr(), (*_1049_exprConst.alloc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b91b3082:;
			{
				return (_9828_e2 == _9813_e1);;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b91b30e8:;
			{
				jule::Ptr<_1cdeee738_StructSubIdentExprModel> _1099_ssi1 = _9813_e1.unsafe_cast_ptr<_1cdeee738_StructSubIdentExprModel>();;
				jule::Ptr<_1cdeee738_StructSubIdentExprModel> _1109_ssi2 = _9828_e2.cast_ptr<_1cdeee738_StructSubIdentExprModel>(&__jule_any_type98);;
				return (_1ce245275_equalModels((*((*(_1099_ssi1))._field_Expr))._field_Model, (*(*(_1109_ssi2))._field_Expr.alloc)._field_Model) && ((*_1099_ssi1.alloc)._field_Field == (*_1109_ssi2.alloc)._field_Field));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1b91b315e:;
			{
				jule::Ptr<_1cdeea091_UnaryExprModel> _1139_uem1 = _9813_e1.unsafe_cast_ptr<_1cdeea091_UnaryExprModel>();;
				jule::Ptr<_1cdeea091_UnaryExprModel> _1149_uem2 = _9828_e2.cast_ptr<_1cdeea091_UnaryExprModel>(&__jule_any_type110);;
				if ((((*((*(_1139_uem1))._field_Op))._field_Id != static_cast<jule::U32>(62LLU)) || ((*(*_1139_uem1.alloc)._field_Op.alloc)._field_Id != (*(*(_1149_uem2))._field_Op.alloc)._field_Id))) {
					return false;;
				};
				return _1ce265790_fitsSize((*((*_1139_uem1.alloc)._field_Expr))._field_Model, (*(*_1149_uem2.alloc)._field_Expr.alloc)._field_Model);;
			}
		}
		else {
			_case_begin_1b91b2526:;
			{
				return false;;
			}
		}
		_match_end_1b91b2702:;
	};
}



inline void _1ce265ac0_possibleBoundaryRemove(jule::Ptr<_1ce263edb_boundary>* _12432_b, jule::Any _12446_model) {
	{
		auto expr = &((*((*(_12432_b))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b91b885c:;
		if (it != expr_end) {
			_1ce263b9a_boundaryVar _12617_v = *it;
			{
				{
					auto expr = &(_12617_v._field_maxSize);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b91b9dad:;
					if (it != expr_end) {
						jule::I32 _12713_i = it - expr->begin();
						jule::Any _12716_max = *it;
						{
							if (_1ce245275_equalModels(_12716_max, _12446_model)) {
								_12617_v._field_maxSize=jule::append(_12617_v._field_maxSize.slice(0LL, _12713_i),_12617_v._field_maxSize.slice((_12713_i + 1LL)));
								goto _iter_end_1b91b9dad;
							};
						}
						_iter_next_1b91b9dad:;
						++it;
						_12713_i++;
						goto _iter_begin_1b91b9dad;
					}
					_iter_end_1b91b9dad:;
				};
			}
			_iter_next_1b91b885c:;
			++it;
			goto _iter_begin_1b91b885c;
		}
		_iter_end_1b91b885c:;
	};
}



inline jule::Bool _1ce265d89_isBoundaryRiskyType(jule::Ptr<_1ce14cbc7_TypeKind> _13628_t) {
	return (_1ce1510e8_Arr(_13628_t.ptr()) == nullptr);;
}



inline jule::Bool _1ce266153_isBoundaryValidType(jule::Ptr<_1ce14cbc7_TypeKind> _14128_t) {
	return ((_1ce15137e_Slc(_14128_t.ptr()) != nullptr) || (_1ce1510e8_Arr(_14128_t) != nullptr));;
}



inline jule::Uintptr _1ce26641c_getBoundaryVar(jule::Any _14319_m) {
	if ((!(_1ce2677d6_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _14319_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b91bc377:;
			{
				jule::Ptr<_1ce0b4105_Var> _1499_v = _14319_m.unsafe_cast_ptr<_1ce0b4105_Var>();;
				if ((!((*(_1499_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_14319_m.unsafe_cast_ptr<_1ce0b4105_Var>());;
				};
				return _1ce26641c_getBoundaryVar((*((*((*_1499_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b91bc245:;
			{
				return static_cast<jule::Uintptr>((*(_14319_m.unsafe_cast_ptr<_1cdeee738_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1b91bc4cb:;
			{
				jule::Ptr<_1cdeea091_UnaryExprModel> _1609_uem = _14319_m.unsafe_cast_ptr<_1cdeea091_UnaryExprModel>();;
				if (((*((*(_1609_uem))._field_Op))._field_Id == static_cast<jule::U32>(62LLU))) {
					return _1ce26641c_getBoundaryVar((*((*_1609_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1b91bc2cd:;
	};
	return 0LLU;;
}



inline void _1ce269497_PushOptLevel(jule::I32 _3217_level) {
	jule::Bool _335_l1 = (_3217_level >= static_cast<jule::I32>(1LL));;
	_1ce266b7b_Copy=_335_l1;
	_1ce266e78_Deadcode=_335_l1;
	_1ce267231_Append=_335_l1;
	_1ce26752d_Math=_335_l1;
	_1ce2677d6_Access=_335_l1;
	_1ce267a8e_Inline=_335_l1;
	_1ce267d47_Ptr=_335_l1;
	_1ce268210_Cond=_335_l1;
	_1ce268452_Str=_335_l1;
	_1ce2686e9_Slice=_335_l1;
	_1ce2689a2_Assign=_335_l1;
	_1ce268c5a_Exceptional=_335_l1;
	_1ce269013_Iter=_335_l1;
	_1ce2692bb_Dynamic=_335_l1;
}



inline void _1b5938421_detectEnabled(void) {
	_1b5936155_exprEnabled=(((_1ce267d47_Ptr || _1ce26752d_Math) || _1ce2677d6_Access) || _1ce268210_Cond);
	_1b593641e_scopeEnabled=((((((((_1ce268210_Cond || _1ce267231_Append) || _1ce266b7b_Copy) || _1ce268452_Str) || _1ce2686e9_Slice) || _1ce2689a2_Assign) || _1ce268c5a_Exceptional) || _1ce269013_Iter) || _1ce2692bb_Dynamic);
}



inline void _1b5961d84_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_22abd94c5_Exit(1LL);
}



inline jule::U64 _1b6286532_unix(void) {
	return static_cast<jule::U64>(time(nullptr));;
}



inline jule::Bool _1b61bb0b0_isCopyOptimizable(jule::Ptr<_1ce11bc0c_Data>* _100123_expr) {
	if ((!((*((*(_100123_expr))))._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_100123_expr))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1b9308e31:;
			{
				return false;;
			}
		}
		_match_end_1b9308dcb:;
	};
	return true;;
}



inline jule::Bool _1b61bb478_isIterCopyOptimizable(jule::Ptr<_1ce11bc0c_Data>* _101227_expr, jule::Ptr<_1ce0b4105_Var>* _101241_v) {
	if (((!((*((*(_101227_expr))))._field_Lvalue)) && (!(_1ce14e558_Mutable((*((*(_101227_expr))))._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*((*(_101241_v))))._field_Mutable)) && (!((*((*(_101227_expr))))._field_Mutable)));;
}



inline jule::Str _1b61cc08d_decomposeCommonEsq(jule::U8 _154123_b) {
	{
		auto &_match_expr{ _154123_b };
		
		if (_match_expr == '\\') {
			_case_begin_1b9597de5:;
			{
				return jule::Str::lit("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1b9597b81:;
			{
				return jule::Str::lit("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1b9597be7:;
			{
				return jule::Str::lit("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1b9597c6e:;
			{
				return jule::Str::lit("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1b9597ce6:;
			{
				return jule::Str::lit("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1b9597895:;
			{
				return jule::Str::lit("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1b959791c:;
			{
				return jule::Str::lit("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1b9597994:;
			{
				return jule::Str::lit("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1b9597e5b:;
			{
				return jule::Str::lit("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1b9597ec2:;
			{
				return jule::Str::lit("\\v", 2);;
			}
		}
		else {
			_case_begin_1b9597631:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b9594ebe:;
	};
}



inline jule::Str _1b61cc39b_sbtoa(jule::U8 _156810_b) {
	if ((_156810_b == 0LLU)) {
		return jule::Str::lit("\\x00", 4);;
	};
	if ((_156810_b < 128LLU)) {
		jule::Str _15739_seq = _1b61cc08d_decomposeCommonEsq(_156810_b);;
		if (!(_15739_seq).empty()) {
			return _15739_seq;;
		};
		if (((32LL <= _156810_b) && (_156810_b <= 126LLU))) {
			return jule::Str::from_byte(_156810_b);;
		};
	};
	jule::Str _15815_seq = _22be07923_FmtUint(static_cast<jule::U64>(_156810_b), 8LL);;
	if ((_15815_seq.len() == 2LL)) {
		return (jule::Str::lit("\\0", 2) + _15815_seq);;
	};
	return (jule::Str::lit("\\", 1) + _15815_seq);;
}



inline void _1b61cc687_cstrBytes(_22ab0b88c_StrBuilder* _158819_s, jule::Str _158834_ctx) {
	{
		auto expr = &(_158834_ctx);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b959cbdb:;
		if (it != expr_end) {
			jule::U8 *_158912_b = it;
			{
				_22ab154bc_WriteStr(_158819_s, _1b61cc39b_sbtoa((*(_158912_b))));
			}
			_iter_next_1b959cbdb:;
			++it;
			goto _iter_begin_1b959cbdb;
		}
		_iter_end_1b959cbdb:;
	};
}



inline void _1b61cc9b7_cstrLit(_22ab0b88c_StrBuilder* _159417_s, jule::Str _159432_ctx) {
	_22ab15775_WriteByte(_159417_s, '\"');
	_1b61cc687_cstrBytes(_159417_s, _159432_ctx);
	_22ab15775_WriteByte(_159417_s, '\"');
}



inline void _1b61ccd5d_ftoa(_22ab0b88c_StrBuilder* _160014_s, jule::F64 _160029_f, jule::I32 _160037_bitsize) {
	if ((_160037_bitsize != 32LL)) {
		if ((_160029_f == static_cast<jule::F64>(static_cast<jule::I64>(_160029_f)))) {
			_1b61cd149_itoa(_160014_s, static_cast<jule::I64>(_160029_f));
			return;;
		};
		if ((_160029_f == static_cast<jule::F64>(static_cast<jule::U64>(_160029_f)))) {
			_1b61cd435_utoa(_160014_s, static_cast<jule::U64>(_160029_f));
			return;;
		};
	};
	jule::Str _16115_m = _22bde129c_FmtFloat(_160029_f, 'f', -1LL, _160037_bitsize);;
	_22ab154bc_WriteStr(_160014_s, _16115_m);
	if ((!(_22aaec262_Contains(_16115_m, jule::Str::lit(".", 1))))) {
		_22ab154bc_WriteStr(_160014_s, jule::Str::lit(".0", 2));
	};
}



inline void _1b61cd149_itoa(_22ab0b88c_StrBuilder* _161814_s, jule::I64 _161829_x) {
	{
		
		if ((_161829_x == jule::MAX_I64)) {
			_case_begin_1b95a1ea9:;
			{
				_22ab154bc_WriteStr(_161814_s, jule::Str::lit("jule::MAX_I64", 13));
				return;;
			}
		}
		else if ((_161829_x == jule::MIN_I64)) {
			_case_begin_1b95a2053:;
			{
				_22ab154bc_WriteStr(_161814_s, jule::Str::lit("jule::MIN_I64", 13));
				return;;
			}
		}
		_match_end_1b95a1d99:;
	};
	_22ab154bc_WriteStr(_161814_s, _22be07cdb_FmtInt(_161829_x, 10LL));
	if (_22a93b205_Is64Bit(jule::Str::lit("i386", 4))) {
		_22ab15775_WriteByte(_161814_s, 'L');
	};
	_22ab15775_WriteByte(_161814_s, 'L');
}



inline void _1b61cd435_utoa(_22ab0b88c_StrBuilder* _163514_s, jule::U64 _163529_x) {
	{
		
		if ((_163529_x == jule::MAX_U64)) {
			_case_begin_1b95a40ee:;
			{
				_22ab154bc_WriteStr(_163514_s, jule::Str::lit("jule::MAX_U64", 13));
				return;;
			}
		}
		_match_end_1b95a3ebc:;
	};
	_22ab154bc_WriteStr(_163514_s, _22be07923_FmtUint(_163529_x, 10LL));
	if (_22a93b205_Is64Bit(jule::Str::lit("i386", 4))) {
		_22ab15775_WriteByte(_163514_s, 'L');
	};
	_22ab154bc_WriteStr(_163514_s, jule::Str::lit("LU", 2));
}



inline jule::Bool _1b61cd80e_isForwarded(jule::Ptr<_1ce0497c7_Scope>* _164917_s) {
	jule::Any _16505_last = (*((*(_164917_s))))._field_Stmts[((*((*(_164917_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _16505_last };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b95a6343:;
			{
				{
					auto &_match_expr{ (*(_16505_last.cast_ptr<_1ce11bc0c_Data>(&__jule_any_type24)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1b95a670b:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1b95a71bd:;
						{
							return false;;
						}
					}
					_match_end_1b95a7157:;
				};
			}
		}
		else {
			_case_begin_1b95a64b9:;
			{
				return true;;
			}
		}
		_match_end_1b95a63cb:;
	};
}



inline jule::Bool _1b61cda51_isExprComesFromBind(jule::Ptr<_1ce11bc0c_Data>* _166425_d) {
	{
		auto &_match_expr{ (*((*(_166425_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b95a68c6:;
			{
				return (*((*((*(_166425_d))))._field_Model.unsafe_cast_ptr<_1ce0b4105_Var>()))._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b95a7d7d:;
			{
				return (*((*((*((*((*(_166425_d))))._field_Model.unsafe_cast_ptr<_1cdeee738_StructSubIdentExprModel>()))._field_Owner))._field_Decl))._field_Binded;;
			}
		}
		else {
			_case_begin_1b95a791b:;
			{
				return false;;
			}
		}
		_match_end_1b95a78b6:;
	};
}



inline jule::Bool _1b61cdd1a_isAny(jule::Ptr<_1ce14cbc7_TypeKind>* _167615_t) {
	if ((_1ce150d62_TypeEnum((*(_167615_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1ce1557a1_Prim> _16805_prim = _1ce150328_Prim((*(_167615_t)).ptr());;
	return ((_16805_prim != nullptr) && _1ce158ebe_IsAny(_16805_prim));;
}



inline void _1b629aa63_iterFiles(jule::Ptr<_1ce06ded3_Package>* _136019_pkg, jule::Fn<void(jule::Ptr<_1ce116894_SymbolTable>*)> _136034_f) {
	{
		auto expr = &((*((*(_136019_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b97e1d0e:;
		if (it != expr_end) {
			jule::Ptr<_1ce116894_SymbolTable> _136117_file = *it;
			{
				_136034_f(&(_136117_file));
			}
			_iter_next_1b97e1d0e:;
			++it;
			goto _iter_begin_1b97e1d0e;
		}
		_iter_end_1b97e1d0e:;
	};
}



inline jule::Slice<jule::U8> _1b629ad71_concatAllParts(jule::Slice<jule::Ptr<_1cdeab4b4_Token>> _136719_parts) {
	jule::I32 _13689_n = 0LL;;
	{
		auto expr = &(_136719_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b97e2c99:;
		if (it != expr_end) {
			jule::Ptr<_1cdeab4b4_Token> *_136912_part = it;
			{
				_13689_n+=(*((*(_136912_part))))._field_Kind.len();
			}
			_iter_next_1b97e2c99:;
			++it;
			goto _iter_begin_1b97e2c99;
		}
		_iter_end_1b97e2c99:;
	};
	if ((_13689_n == 0LL)) {
		return nullptr;;
	};
	_22ab0b88c_StrBuilder _13759_s = static__22ab0bb56_New(_13689_n);;
	{
		auto expr = &(_136719_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b97e3d99:;
		if (it != expr_end) {
			jule::Ptr<_1cdeab4b4_Token> *_137612_p = it;
			{
				_22ab154bc_WriteStr(&_13759_s, (*((*(_137612_p))))._field_Kind);
			}
			_iter_next_1b97e3d99:;
			++it;
			goto _iter_begin_1b97e3d99;
		}
		_iter_end_1b97e3d99:;
	};
	return _22ab16765_Buf(&_13759_s);;
}



inline jule::Bool _1b629b1e5_containsTraitMethod(jule::Ptr<_1ce01ac0a_Trait>* _138329_t, jule::Str* _138341_ident) {
	{
		auto expr = &((*((*(_138329_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b97e4dab:;
		if (it != expr_end) {
			jule::Ptr<_1ce00792d_Fn> _138412_m = *it;
			{
				if (((*(_138412_m))._field_Ident == (*(_138341_ident)))) {
					return true;;
				};
			}
			_iter_next_1b97e4dab:;
			++it;
			goto _iter_begin_1b97e4dab;
		}
		_iter_end_1b97e4dab:;
	};
	return false;;
}



inline void _1b629b525_pushMethodsFromInherit(jule::Ptr<_1ce01ac0a_Trait>* _139532_dest, jule::Ptr<_1ce01ac0a_Trait>* _139551_src) {
	_1b629b811_pushMethodsFromInherits(_139532_dest, _139551_src);
	{
		auto expr = &((*((*(_139551_src))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b97e60aa:;
		if (it != expr_end) {
			jule::Ptr<_1ce00792d_Fn> _139717_m = *it;
			{
				if ((!(_1b629b1e5_containsTraitMethod(_139532_dest, &((*(_139717_m))._field_Ident))))) {
					{ jule::Slice<jule::Ptr<_1ce00792d_Fn>> &__jule_push_dest = (*((*(_139532_dest))))._field_Methods; __jule_push_dest.push(_139717_m); };
				};
			}
			_iter_next_1b97e60aa:;
			++it;
			goto _iter_begin_1b97e60aa;
		}
		_iter_end_1b97e60aa:;
	};
}



inline void _1b629b811_pushMethodsFromInherits(jule::Ptr<_1ce01ac0a_Trait>* _140633_dest, jule::Ptr<_1ce01ac0a_Trait>* _140652_src) {
	{
		auto expr = &((*((*(_140652_src))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b97e6918:;
		if (it != expr_end) {
			jule::Ptr<_1ce154d99_TypeSymbol> _140717_inh = *it;
			{
				jule::Ptr<_1ce01ac0a_Trait> _140813_t2 = _1ce151b32_Trait((*(_140717_inh))._field_Kind.ptr());;
				_1b629b525_pushMethodsFromInherit(_140633_dest, &(_140813_t2));
			}
			_iter_next_1b97e6918:;
			++it;
			goto _iter_begin_1b97e6918;
		}
		_iter_end_1b97e6918:;
	};
}



inline jule::Bool _1b629baca_isOpMethod(jule::Ptr<_1ce00792d_Fn>* _141416_m) {
	if ((((*((*(_141416_m))))._field_Generics.len() > 0LL) || ((*((*(_141416_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	jule::Ptr<_1ce00a832_FnIns> _14185_mi = (*((*(_141416_m))))._field_Instances[0LL];;
	;
	;
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_Eq)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_Gt)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_GtEq)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_Lt)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_LtEq)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_Shl)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_Shr)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_Add)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_Sub)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_Div)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_Mul)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_Mod)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitAnd)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitOr)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitXor)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_Neg)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_Pos)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitNot)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_AddAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_SubAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_DivAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_MulAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_ModAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_ShlAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_ShrAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitOrAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitAndAssign)) {
			return true;;
		};
	};
	{
		if ((_14185_mi == (*(*_14185_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitXorAssign)) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1b629bd94_isHeadDecl(jule::Ptr<_1ce00792d_Fn>* _143020_m) {
	if ((((*((*(_143020_m))))._field_Generics.len() > 0LL) || ((*((*(_143020_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	if (_1b629baca_isOpMethod(_143020_m)) {
		return true;;
	};
	jule::Ptr<_1ce00a832_FnIns> _14379_mi = (*((*(_143020_m))))._field_Instances[0LL];;
	;
	return static__1ce0b559b_Dispose(_1cdee6785_FindMethod((*(_14379_mi))._field_Owner.ptr(), jule::Str::lit("Dispose", 7), false));;
}



inline jule::Ptr<_1cdec0eac_Directive> _1b5e544ca_findDirective(jule::Slice<jule::Ptr<_1cdec0eac_Directive>>* _47423_directives, jule::Str _47454_tag) {
	{
		auto expr = _47423_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b997092c:;
		if (it != expr_end) {
			jule::Ptr<_1cdec0eac_Directive> _47517_dr = *it;
			{
				if (((*((*(_47517_dr))._field_Tag))._field_Kind == _47454_tag)) {
					return _47517_dr;;
				};
			}
			_iter_next_1b997092c:;
			++it;
			goto _iter_begin_1b997092c;
		}
		_iter_end_1b997092c:;
	};
	return nullptr;;
}



inline jule::Bool _1b5e54893_hasDirective(jule::Slice<jule::Ptr<_1cdec0eac_Directive>>* _48418_directives, jule::Str _48449_tag) {
	return (_1b5e544ca_findDirective(&((*(_48418_directives))), _48449_tag) != nullptr);;
}



inline jule::Bool _1b5e54b5c_shouldInitialized(jule::Ptr<_1ce14cbc7_TypeKind>* _49127_t) {
	jule::Ptr<_1ce1557a1_Prim> _4925_prim = _1ce150328_Prim((*(_49127_t)).ptr());;
	if ((_4925_prim != nullptr)) {
		return ((!(_1ce158ebe_IsAny(_4925_prim))) && (!(_1ce158c38_IsStr(_4925_prim))));;
	};
	{
		
		if ((_1ce1505ae_Sptr((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1b99736ee:;
			{
				return false;;
			}
		}
		else if ((_1ce151db8_Map((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1b997290c:;
			{
				return false;;
			}
		}
		else if ((_1ce15137e_Slc((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1b9972973:;
			{
				return false;;
			}
		}
		else if ((_1ce151b32_Trait((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1b9973765:;
			{
				return false;;
			}
		}
		else if ((_1ce151615_Fn((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1b9973886:;
			{
				return false;;
			}
		}
		else if ((_1ce1510e8_Arr((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1b99738ec:;
			{
				jule::Ptr<_1ce15c0c1_Arr> _50813_arr = _1ce1510e8_Arr((*(_49127_t)).ptr());;
				return _1b5e54b5c_shouldInitialized(&((*(_50813_arr))._field_Elem));;
			}
		}
		else if ((_1ce15189b_Struct((*(_49127_t)).ptr()) != nullptr)) {
			_case_begin_1b9973963:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1b9972896:;
			{
				return true;;
			}
		}
		_match_end_1b9972b71:;
	};
}



inline void _22abdda3a_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _22abddcb0_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_22abdda3a_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I32 _419_max = _22abdd85e_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_22abdd85e_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9a1a8a6:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_4212_k = it;
			{
				jule::I32 _439_n = (*(_4212_k))[0LL].len();;
				if ((_439_n > _419_max)) {
					_419_max=_439_n;
				};
			}
			_iter_next_1b9a1a8a6:;
			++it;
			goto _iter_begin_1b9a1a8a6;
		}
		_iter_end_1b9a1a8a6:;
	};
	_22ab0b88c_StrBuilder _499_s = static__22ab0bb56_New(32LL);;
	;
	{
		auto expr = &(_22abdd85e_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9a1c204:;
		if (it != expr_end) {
			jule::I32 _519_i = it - expr->begin();
			jule::Array<jule::Str,2> *_5112_part = it;
			{
				_22ab154bc_WriteStr(&_499_s, (*(_5112_part))[0LL]);
				_22ab154bc_WriteStr(&_499_s, _22aae7070_Repeat(jule::Str::lit(" ", 1), ((_419_max - (*(_5112_part))[0LL].len()) + 5LL)));
				_22ab154bc_WriteStr(&_499_s, (*(_5112_part))[1LL]);
				if (((_519_i + 1LL) < 5LL)) {
					_22ab15775_WriteByte(&_499_s, '\n');
				};
			}
			_iter_next_1b9a1c204:;
			++it;
			_519_i++;
			goto _iter_begin_1b9a1c204;
		}
		_iter_end_1b9a1c204:;
	};
	jule::outln(_499_s);
}



inline void _22abddee1_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_22abdda3a_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("jule0.0.16 @master", 18));
}



inline void _22abde200_toolDistos(void) {
	jule::out(jule::Str::lit("supported operating systems:\n ", 30));
	jule::out(jule::Str::lit("windows", 7));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("linux", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("darwin", 6));
	jule::outln(jule::Str());
}



inline void _22abde365_toolDistarch(void) {
	jule::out(jule::Str::lit("supported architects:\n ", 23));
	jule::out(jule::Str::lit("amd64", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("i386", 4));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("arm64", 5));
	jule::outln(jule::Str());
}



inline void _22abde563_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_22abdda3a_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1055_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1055_cmd };
		
		if (_match_expr == jule::Str::lit("distos", 6)) {
			_case_begin_1b9a2301d:;
			{
				_22abde200_toolDistos();
			}
		}
		else if (_match_expr == jule::Str::lit("distarch", 8)) {
			_case_begin_1b9a230d9:;
			{
				_22abde365_toolDistarch();
			}
		}
		else {
			_case_begin_1b9a21a11:;
			{
				_22abdda3a_printErrorMessage((jule::Str::lit("undefined command: ", 19) + _1055_cmd));
			}
		}
		_match_end_1b9a22b22:;
	};
}



inline void _22abde794_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_22abdda3a_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("julec version: jule0.0.16 @master", 33));
	jule::outln(jule::Str::lit("architecture: i386", 18));
	jule::outln(jule::Str::lit("operating system: linux", 23));
	jule::outln((jule::Str::lit("default compiler: ", 18) + _2434dc398_Compiler));
	jule::outln((jule::Str::lit("default C++ standard: ", 22) + _2434dc7b6_CppStd));
}



inline void _22abdead5_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("command is not given, try julec mod init", 40));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_22abdda3a_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str::lit("init", 4)) {
			_case_begin_1b9a2650a:;
			{
				({
					auto except = static__2439c9038_Write(jule::Str::lit("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_22abdda3a_printErrorMessage(jule::Str::lit("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1b9a251eb:;
			{
				_22abdda3a_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1b9a260dc:;
	};
}



inline jule::Bool _22abded27_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str::lit("help", 4)) {
			_case_begin_1b9a27a7d:;
			{
				_22abddcb0_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("version", 7)) {
			_case_begin_1b9a27ae4:;
			{
				_22abddee1_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("tool", 4)) {
			_case_begin_1b9a27b5a:;
			{
				_22abde563_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("julenv", 6)) {
			_case_begin_1b9a27bc1:;
			{
				_22abde794_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("mod", 3)) {
			_case_begin_1b9a27363:;
			{
				_22abdead5_mod(_15320_args);
			}
		}
		else {
			_case_begin_1b9a2661a:;
			{
				return false;;
			}
		}
		_match_end_1b9a26cbe:;
	};
	return true;;
}



inline void _22abdeec0_showInfo(void) {
	jule::outln(jule::Str::lit("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307));
}



void entry_point(void) {
	jule::Slice<jule::Str> _1899_args = _243ab4ac4_Args();;
	if ((_1899_args.len() < 2LL)) {
		_22abdeec0_showInfo();
		return;;
	};
	if (_22abded27_processCommand(&(_1899_args))) {
		return;;
	};
	_1b5ec4160_compileCommand(&(_1899_args));
}



inline void _1b5ec1080_init(void) {
	_2434dc398_Compiler=jule::Str::lit("clang", 5);
}



inline jule::Ptr<_2439c81e1_File> _1b5ec1349_openOutput(jule::Str* _4316_path) {
	jule::Str _445_dir = _22ab1969c_Dir((*(_4316_path)));;
	({
		auto except = static__2439c6e6a_Of(_445_dir);
		if (!except.ok()) {
			({
				auto except = static__22ab1bbee_Create(_445_dir);
				if (!except.ok()) {
					_1b5961d84_Throw(jule::Str::lit("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__2439c88c8_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_1b5961d84_Throw(jule::Str::lit("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1b5ec14e2_clearObjects(void) {
	({
		auto except = static__2439c5474_Remove(_1b5ec2647_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str::lit("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__22ab1be30_Remove(_1b5ec0832_OutDir);
}



inline void _1b5ec1800_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_22acaed1a_Cmd> _739_cmd = static__22acb0216_New(_7214_compiler);;
	(*(_739_cmd))._field_Args=_22aaebddd_Split(_7229_compilerCmd, jule::Str::lit(" ", 1), -1LL);
	({
		auto except = _22acb0414_Spawn(_739_cmd);
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1b9a2d875:;
					{
						static__1b595d259_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I32>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1b9a2d567:;
					{
						static__1b595d259_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1b9a2d38b:;
					{
						static__1b595d259_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1b9a2d4ac:;
			};
			_1b5961d84_Throw(jule::Str());
		}
	});
	jule::I32 _865_status = ({
		auto except = _22acb0898_Wait(_739_cmd);
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:15"));
		(except.result);
	});;
	if ((_865_status != 0LL)) {
		jule::Str _889_errorMessage = ((jule::Str::lit("\n>>> your backend compiler (", 28) + _2434dc398_Compiler) + jule::Str::lit(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1b595d259_Print(jule::Str::lit("\033[31m", 5), _889_errorMessage);
		_1b5961d84_Throw(jule::Str());
	};
	_1b5ec14e2_clearObjects();
}



inline jule::Bool _1b5ec1ab9_isCppSourceFile(jule::Str _9920_path) {
	jule::I32 _1005_offset = _22aaea99c_FindLastByte(_9920_path, '.');;
	if ((_1005_offset == -1LL)) {
		return false;;
	};
	return _22a9296aa_IsValidCppExt(_9920_path.slice(_1005_offset));;
}



inline void _1b5ec1cea_pushCompCmdClang(_22ab0b88c_StrBuilder* _10726_cmd) {
	_22ab154bc_WriteStr(_10726_cmd, jule::Str::lit("-Wno-everything ", 16));
	_22ab154bc_WriteStr(_10726_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _2434dc7b6_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1b9a324e4:;
			{
				_22ab154bc_WriteStr(_10726_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1b9a31b31:;
			{
				_22ab154bc_WriteStr(_10726_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1b9a32626:;
			{
				_22ab154bc_WriteStr(_10726_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1b9a3248e:;
	};
	_22ab15775_WriteByte(_10726_cmd, ' ');
	if (_2434dd82d_Production) {
		_22ab154bc_WriteStr(_10726_cmd, jule::Str::lit("-O3 ", 4));
		_22ab154bc_WriteStr(_10726_cmd, jule::Str::lit("-flto ", 6));
		_22ab154bc_WriteStr(_10726_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_22ab154bc_WriteStr(_10726_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_22ab154bc_WriteStr(_10726_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline void _1b5ec202b_pushCompCmdGcc(_22ab0b88c_StrBuilder* _13324_cmd) {
	_22ab154bc_WriteStr(_13324_cmd, jule::Str::lit("-w ", 3));
	_22ab154bc_WriteStr(_13324_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _2434dc7b6_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1b9a354b4:;
			{
				_22ab154bc_WriteStr(_13324_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1b9a33b11:;
			{
				_22ab154bc_WriteStr(_13324_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1b9a355e6:;
			{
				_22ab154bc_WriteStr(_13324_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1b9a3545e:;
	};
	_22ab15775_WriteByte(_13324_cmd, ' ');
	if (_2434dd82d_Production) {
		_22ab154bc_WriteStr(_13324_cmd, jule::Str::lit("-O3 ", 4));
		_22ab154bc_WriteStr(_13324_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_22ab154bc_WriteStr(_13324_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_22ab154bc_WriteStr(_13324_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline __jule_tuple_str__jule_tuple_str _1b5ec24b0_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1b57ae72b_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_1606_compiler = &(_2434dc5a7_CompilerPath);;
	_22ab0b88c_StrBuilder _1619_cmd = static__22ab0bb56_New(64LL);;
	{
		auto &_match_expr{ _2434dc398_Compiler };
		
		if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1b9a38275:;
			{
				_1b5ec202b_pushCompCmdGcc(&(_1619_cmd));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1b9a38770:;
			{
				_1b5ec1cea_pushCompCmdClang(&(_1619_cmd));
			}
		}
		_match_end_1b9a38484:;
	};
	{
		auto expr = &((*((*(_15936_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9a38a28:;
		if (it != expr_end) {
			jule::Ptr<_1ce06b0ac_ImportInfo> *_17112_u = it;
			{
				if (((*((*(_17112_u))))._field_Binded && _1b5ec1ab9_isCppSourceFile((*(*(_17112_u)).alloc)._field_Path))) {
					_22ab154bc_WriteStr(&_1619_cmd, (*(*(_17112_u)).alloc)._field_Path);
					_22ab15775_WriteByte(&_1619_cmd, ' ');
				};
			}
			_iter_next_1b9a38a28:;
			++it;
			goto _iter_begin_1b9a38a28;
		}
		_iter_end_1b9a38a28:;
	};
	if (!(_1b5ec0dc6_Out).empty()) {
		_22ab154bc_WriteStr(&_1619_cmd, jule::Str::lit("-o ", 3));
		_22ab154bc_WriteStr(&_1619_cmd, _1b5ec0dc6_Out);
		_22ab15775_WriteByte(&_1619_cmd, ' ');
	};
	_22ab154bc_WriteStr(&_1619_cmd, _15918_sourcePath);
	{
		auto expr = &((*((*(_15936_ir))))._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9a3b553:;
		if (it != expr_end) {
			jule::Str *_18612_pass = it;
			{
				_22ab15775_WriteByte(&_1619_cmd, ' ');
				_22ab154bc_WriteStr(&_1619_cmd, (*(_18612_pass)));
			}
			_iter_next_1b9a3b553:;
			++it;
			goto _iter_begin_1b9a3b553;
		}
		_iter_end_1b9a3b553:;
	};
	if (_22abda680_Os.equal("windows", 7)) {
		_22ab154bc_WriteStr(&_1619_cmd, jule::Str::lit(" -lshell32", 10));
	};
	__jule_func_result.__jule_result_arg0 = (*(_1606_compiler));
	__jule_func_result.__jule_result_arg1 = _22ab15cb4_Str(&_1619_cmd);
	return __jule_func_result;;
}



inline jule::Str _1b5ec2647_getCompilePath(void) {
	return _22ab189a9_Join(jule::Slice<jule::Str>::make({_1b5ec0832_OutDir,_1b5ec0b1d_OutName}));;
}



inline void _1b5ec2878_applyTargetIndependentOptimizations(jule::Ptr<_1b57ae72b_IR>* _20545_ir) {
	jule::Ptr<_1b593661c_Optimizer> _2069_opt = static__1b5936a90_New(_20545_ir);;
	_1b5938179_Optimize(_2069_opt.ptr());
}



inline void _1b5ec2a21_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _2434dc398_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1b9a3db71:;
			{
				_1b5961d84_Throw(jule::Str::lit("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1b9a3d841:;
			{
				if ((_2434dc5a7_CompilerPath).empty()) {
					_2434dc5a7_CompilerPath=jule::Str::lit("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1b9a3d8a7:;
			{
				if ((_2434dc5a7_CompilerPath).empty()) {
					_2434dc5a7_CompilerPath=jule::Str::lit("g++", 3);
				};
			}
		}
		else {
			_case_begin_1b9a3d423:;
			{
				_1b5961d84_Throw((jule::Str::lit("invalid option value for --compiler: ", 37) + _2434dc398_Compiler));
			}
		}
		_match_end_1b9a3d7db:;
	};
}



inline void _1b5ec2c30_checkTargetArch(jule::Str _22720_arch) {
	if ((((!_22720_arch.equal("amd64", 5)) && (!_22720_arch.equal("arm64", 5))) && (!_22720_arch.equal("i386", 4)))) {
		_1b5961d84_Throw((jule::Str::lit("--target: unsupported/undefined architecture: ", 46) + _22720_arch));
	};
}



inline void _1b5ec2e61_checkTargetOs(jule::Str _23518_os) {
	if ((((!_23518_os.equal("windows", 7)) && (!_23518_os.equal("linux", 5))) && (!_23518_os.equal("darwin", 6)))) {
		_1b5961d84_Throw((jule::Str::lit("--target: unsupported/undefined operating system: ", 50) + _23518_os));
	};
}



inline void _1b5ec3192_checkTargetFlag(jule::Str* _24321_target) {
	if (((*(_24321_target))).empty()) {
		_1b5961d84_Throw(jule::Str::lit("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2485_parts = _22aaebddd_Split((*(_24321_target)), jule::Str::lit("-", 1), -1LL);;
	if ((_2485_parts.len() != 2LL)) {
		_1b5961d84_Throw((jule::Str::lit("--target: undefined platform target format: ", 44) + (*(_24321_target))));
	};
	jule::Str _2535_os = _2485_parts[0LL];;
	jule::Str _2539_arch = _2485_parts[1LL];;
	({
		jule::Str ___jule_assign_arg = _2485_parts[0LL];
		jule::Str _1___jule_assign_arg = _2485_parts[1LL];
		_2535_os = ___jule_assign_arg;
		_2539_arch = _1___jule_assign_arg;
	});
	if ((!_2535_os.equal("native", 6))) {
		_1b5ec2e61_checkTargetOs(_2535_os);
		_22abda680_Os=_2535_os;
	};
	if ((!_2539_arch.equal("native", 6))) {
		_1b5ec2c30_checkTargetArch(_2539_arch);
		_22abda938_Arch=_2539_arch;
	};
	_22be0c472_UpdateTarget();
}



inline void _1b5ec33c3_checkOptFlag(jule::Str* _26618_opt) {
	if (((*(_26618_opt))).empty()) {
		_1b5961d84_Throw(jule::Str::lit("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26618_opt)) };
		
		if (_match_expr == jule::Str::lit("L0", 2)) {
			_case_begin_1b9a45590:;
			{
				goto _match_end_1b9a44c32;
			}
		}
		else if (_match_expr == jule::Str::lit("L1", 2)) {
			_case_begin_1b9a45606:;
			{
				_1ce269497_PushOptLevel(static_cast<jule::I32>(1LL));
			}
		}
		else {
			_case_begin_1b9a44e41:;
			{
				_1b5961d84_Throw((jule::Str::lit("--opt: invalid optimization level: ", 35) + (*(_26618_opt))));
			}
		}
		_match_end_1b9a44c32:;
	};
}



inline void _1b5ec378b_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _2434dc7b6_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5) || _match_expr == jule::Str::lit("cpp17", 5) || _match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1b9a46371:;
			{
				goto _match_end_1b9a45ea8;
			}
		}
		else {
			_case_begin_1b9a4600d:;
			{
				_1b5961d84_Throw((jule::Str::lit("--cppstd: invalid cpp standard: ", 32) + _2434dc7b6_CppStd));
			}
		}
		_match_end_1b9a45ea8:;
	};
}



inline jule::Slice<jule::Str> _1b5ec3956_checkFlags(jule::Slice<jule::Str>* _29216_args) {
	jule::Str _2939_opt = jule::Str::lit("L0", 2);;
	jule::Str _2949_target = jule::Str::lit("native-native", 13);;
	jule::Ptr<_1b5eba81b_FlagSet> _2969_fs = static__1b5ebab07_New();;
	_1b9a47cac_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2939_opt)))), jule::Str::lit("opt", 3), 0LL, jule::Str::lit("Optimization level", 18));
	_1b9a47cac_AddVar(_2969_fs, ((jule::Ptr<jule::Str>)((&(_2949_target)))), jule::Str::lit("target", 6), 0LL, jule::Str::lit("Target system", 13));
	_1b9a47cac_AddVar(_2969_fs, ((jule::Ptr<jule::Str>)((&(_1b5ec0dc6_Out)))), jule::Str::lit("out", 3), 'o', jule::Str::lit("Output identifier", 17));
	_1b9a4ec1a_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_2434dc9c5_Shadowing)))), jule::Str::lit("shadowing", 9), 0LL, jule::Str::lit("Allow shadowing", 15));
	_1b9a4ec1a_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_2434dcbd4_Transpilation)))), jule::Str::lit("transpile", 9), 't', jule::Str::lit("Transpile code", 14));
	_1b9a47cac_AddVar(_2969_fs, ((jule::Ptr<jule::Str>)((&(_2434dc398_Compiler)))), jule::Str::lit("compiler", 8), 0LL, jule::Str::lit("Backend compiler", 16));
	_1b9a47cac_AddVar(_2969_fs, ((jule::Ptr<jule::Str>)((&(_2434dc5a7_CompilerPath)))), jule::Str::lit("compiler-path", 13), 0LL, jule::Str::lit("Path of backend compiler", 24));
	_1b9a4ec1a_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_2434dd82d_Production)))), jule::Str::lit("production", 10), 'p', jule::Str::lit("Compile for production", 22));
	_1b9a4ec1a_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_2434dd223_RC)))), jule::Str::lit("disable-rc", 10), 0LL, jule::Str::lit("Disable reference counting", 26));
	_1b9a4ec1a_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_2434dd5db_Safety)))), jule::Str::lit("disable-safety", 14), 0LL, jule::Str::lit("Disable safety", 14));
	_1b9a47cac_AddVar(_2969_fs, ((jule::Ptr<jule::Str>)((&(_2434dc7b6_CppStd)))), jule::Str::lit("cppstd", 6), 0LL, jule::Str::lit("C++ standard", 12));
	_1b9a4ec1a_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1ce266b7b_Copy)))), jule::Str::lit("opt-copy", 8), 0LL, jule::Str::lit("Copy optimization", 17));
	_1b9a4ec1a_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1ce266e78_Deadcode)))), jule::Str::lit("opt-deadcode", 12), 0LL, jule::Str::lit("Deadcode optimization", 21));
	_1b9a4ec1a_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1ce267231_Append)))), jule::Str::lit("opt-append", 10), 0LL, jule::Str::lit("Append optimization", 19));
	_1b9a4ec1a_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1ce26752d_Math)))), jule::Str::lit("opt-math", 8), 0LL, jule::Str::lit("Math optimization", 17));
	_1b9a4ec1a_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1ce2677d6_Access)))), jule::Str::lit("opt-access", 10), 0LL, jule::Str::lit("Access optimization", 19));
	_1b9a4ec1a_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1ce267a8e_Inline)))), jule::Str::lit("opt-inline", 10), 0LL, jule::Str::lit("Inline optimization", 19));
	_1b9a4ec1a_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1ce267d47_Ptr)))), jule::Str::lit("opt-ptr", 7), 0LL, jule::Str::lit("Pointer optimizations", 21));
	_1b9a4ec1a_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1ce268210_Cond)))), jule::Str::lit("opt-cond", 8), 0LL, jule::Str::lit("Conditional optimizations", 25));
	_1b9a4ec1a_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1ce268452_Str)))), jule::Str::lit("opt-str", 7), 0LL, jule::Str::lit("String optimizations", 20));
	_1b9a4ec1a_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1ce2686e9_Slice)))), jule::Str::lit("opt-slice", 9), 0LL, jule::Str::lit("Slice optimizations", 19));
	_1b9a4ec1a_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1ce2689a2_Assign)))), jule::Str::lit("opt-assign", 10), 0LL, jule::Str::lit("Assignment optimizations", 24));
	_1b9a4ec1a_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1ce268c5a_Exceptional)))), jule::Str::lit("opt-exceptional", 15), 0LL, jule::Str::lit("Exceptional optimizations", 25));
	_1b9a4ec1a_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1ce269013_Iter)))), jule::Str::lit("opt-iter", 8), 0LL, jule::Str::lit("Iterations optimizations", 24));
	_1b9a4ec1a_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1ce2692bb_Dynamic)))), jule::Str::lit("opt-dynamic", 11), 0LL, jule::Str::lit("Dynamic programming optimizations", 33));
	jule::Slice<jule::Str> _3249_content = ({
		auto except = _1b5ebb9c6_Parse(_2969_fs, (*(_29216_args)));
		(except.ok()) ? (except.result) : ({
			_1b5961d84_Throw(except.error.cast<jule::Str>(&__jule_any_type4));

			nullptr;
		});
	});;
	_1b5ec2a21_checkCompilerFlag();
	_1b5ec378b_checkCppStdFlag();
	_1b5ec3192_checkTargetFlag(&(_2949_target));
	_1b5ec33c3_checkOptFlag(&(_2939_opt));
	return _3249_content;;
}



inline void _1b5ec3b65_setupSemaFlags(jule::I32* _33724_flags) {
	if (_2434dc9c5_Shadowing) {
		(*(_33724_flags))|=static_cast<jule::I32>(1LL);
	};
}



inline jule::Ptr<_1b57ae72b_IR> _1b5ec3e2e_buildIr(jule::Slice<jule::Str>* _34313_args) {
	jule::Slice<jule::Str> _3445_content = _1b5ec3956_checkFlags(_34313_args);;
	jule::I32 _3469_semaFlags = static_cast<jule::I32>(0LL);;
	_1b5ec3b65_setupSemaFlags(&(_3469_semaFlags));
	if ((_3445_content.len() == 0LL)) {
		_1b5961d84_Throw(_22a936b90_Logf(jule::Str::lit("missing compile path", 20), jule::Slice<jule::Any>()));
	} else if ((_3445_content.len() > 1LL)) {
		_1b5961d84_Throw((jule::Str::lit("undefined content: ", 19) + _3445_content[1LL]));
	};
	jule::Str _3549_path;;
	jule::Bool _35415_ok;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _22ab19009_Abs(_3445_content[0LL]);
		_3549_path = __jule_assign_result.__jule_result_arg0;
		_35415_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_35415_ok))) {
		_1b5961d84_Throw(jule::Str::lit("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_2439ca2d1_Status> _3605_inf = ({
		auto except = static__2439c6e6a_Of(_22abd9a25_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1b5961d84_Throw(_22a936b90_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_2439ca2d1_Status>(nullptr);});
	});;
	if ((!(_2439ca6aa_IsDir(_3605_inf.ptr())))) {
		_1b5961d84_Throw(_22a936b90_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1b57ae72b_IR> _3689_ir;;
	jule::Slice<_22a93672d_Log> _36813_logs;;
	({
		__jule_tuple_x_1b57ae72b_IR__jule_tuple_s_22a93672d_Log __jule_assign_result = static__1b57aebc1_Build(_3549_path, _3469_semaFlags);
		_3689_ir = __jule_assign_result.__jule_result_arg0;
		_36813_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3689_ir == nullptr) && (_36813_logs == nullptr))) {
		_1b5961d84_Throw(_22a936b90_Logf(jule::Str::lit("there is no Jule source code in package: @", 42), jule::Slice<jule::Any>::make({jule::Any(_3549_path, &__jule_any_type4)})));
	};
	if ((_36813_logs != nullptr)) {
		static__1b59613c2_PrintLogs(&(_36813_logs));
		_1b5961d84_Throw(jule::Str());
	};
	return _3689_ir;;
}



inline void _1b5ec4160_compileCommand(jule::Slice<jule::Str>* _38324_args) {
	((*(_38324_args))).mut_slice(1LL);;
	if ((*(_38324_args))[0LL].equal("test", 4)) {
		_2434dce6a_Test=true;
		((*(_38324_args))).mut_slice(1LL);;
	};
	jule::Ptr<_1b57ae72b_IR> _3899_ir = _1b5ec3e2e_buildIr(_38324_args);;
	;
	if ((!(_2434dce6a_Test))) {
		jule::Ptr<_1ce00792d_Fn> _39413_main = _1ce070567_FindFn((*(_3899_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);;
		if ((_39413_main == nullptr)) {
			_1b5961d84_Throw(_22a936b90_Logf(jule::Str::lit("missing entry point: entry point (main) function is not defined", 63), jule::Slice<jule::Any>()));
		};
	};
	_1b5ec2878_applyTargetIndependentOptimizations(&(_3899_ir));
	_1b57b0c38_Order(_3899_ir);
	jule::Str _4055_compPath = _1b5ec2647_getCompilePath();;
	jule::Str _4065_compiler;;
	jule::Str _40615_compilerCmd;;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1b5ec24b0_genCompileCmd(_4055_compPath, &(_3899_ir));
		_4065_compiler = __jule_assign_result.__jule_result_arg0;
		_40615_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1b628d825_ObjectCoder> _4089_oc = static__1b628dc21_New(&(_3899_ir), _1b628bd0c_SerializationInfo{._field_Compiler=_4065_compiler, ._field_CompilerCommand=_40615_compilerCmd});;
	if (_2434dce6a_Test) {
		jule::Ptr<_1b61ced60_TestCoder> _41313_tc = static__1b61d02d3_New(&(_4089_oc));;
		_1b61d1658_Serialize(_41313_tc);
	} else {
		_1b629a678_Serialize(_4089_oc);
	};
	jule::Ptr<_2439c81e1_File> _4199_file = _1b5ec1349_openOutput(&(_4055_compPath));;
	({
		auto except = _2439c5908_Write(_4199_file.ptr(), _22ab16765_Buf(&(*(_4089_oc))._field_Buf));
		if (!except.ok()) {
			_1b5961d84_Throw(jule::Str::lit("object code could not write", 27));
		}
	});
	({
		auto except = _2439c9775_Close(_4199_file);
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:423:5"));
	});
	if ((!(_2434dcbd4_Transpilation))) {
		_1b5ec1800_compileIr(_4065_compiler, _40615_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_22abdaa7b_init();
	_22be0c5e8_init();
	_1b5ec1080_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}