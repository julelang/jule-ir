// Auto generated by JuleC.
// JuleC version: jule0.0.15 @master
// Date: 6/8/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <sys/time.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <signal.h>
#include <sys/wait.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _1b9b685c5_comptimeRangeKind{};
struct _1b9bad2da_Importer{};
struct _1b9c8cc27_Kind{};
struct _1b9cacc14_Lookup{};
struct _1c80c2922_CommonFlag{};
struct _23ceece69_Range16;
struct _23ceed497_Range32;
struct _23ceed94d_RangeTable;
struct _23d10a8d4_acceptRange;
struct _23d16295d_StrBuilder;
struct _23d16d4d5_lazyBuff;
struct _23bc9be5b_DirEntry;
struct _23bc9c1c0_Directory;
struct _23bca7d8a_File;
struct _23bcaa684_Status;
struct _23d31ea2c_cmdAttrs;
struct _23d21115a_Log;
struct _1ec65998a_floatInfo;
struct _1ec65a4e6_decimalSlice;
struct _1ec66c75b_leftCheat;
struct _1ec66d284_decimal;
struct _1ec682ce3_Const;
struct _1b9b032eb_Token;
struct _1b9b08ab5_File;
struct _1b9b0abd8_kindPair;
struct _1b9b11cee_lex;
struct _1b9b1692a_Ast;
struct _1b9b177b6_Node;
struct _1b9b17bd4_Directive;
struct _1b9b187b7_TypeDecl;
struct _1b9b18dc2_IdentTypeDecl;
struct _1b9b191be_SubIdentTypeDecl;
struct _1b9b19565_NamespaceTypeDecl;
struct _1b9b19862_SptrTypeDecl;
struct _1b9b19be7_SlcTypeDecl;
struct _1b9b19ee4_TupleTypeDecl;
struct _1b9b1a2e1_PtrTypeDecl;
struct _1b9b1aa83_ArrTypeDecl;
struct _1b9b1b2d1_MapTypeDecl;
struct _1b9b1b6aa_RetTypeDecl;
struct _1b9b1caeb_Expr;
struct _1b9b1cde8_RangeExpr;
struct _1b9b1d4c0_UseExpr;
struct _1b9b1d7bc_TupleExpr;
struct _1b9b1db96_LitExpr;
struct _1b9b1e070_UnsafeExpr;
struct _1b9b1e526_IdentExpr;
struct _1b9b1eba8_UnaryExpr;
struct _1b9b20082_VariadicExpr;
struct _1b9b2045b_CastExpr;
struct _1b9b20835_NsSelectionExpr;
struct _1b9b20c0e_SubIdentExpr;
struct _1b9b211b5_BinopExpr;
struct _1b9b21825_FnCallExpr;
struct _1b9b2231a_FieldExprPair;
struct _1b9b22b45_StructLit;
struct _1b9b230eb_BraceLit;
struct _1b9b23926_KeyValPair;
struct _1b9b2411e_SliceExpr;
struct _1b9b24aae_IndexingExpr;
struct _1b9b2521e_SlicingExpr;
struct _1b9b2551b_Constraint;
struct _1b9b259c2_GenericDecl;
struct _1b9b25d9b_LabelSt;
struct _1b9b26275_GotoSt;
struct _1b9b26572_FallSt;
struct _1b9b26bd2_AssignLeft;
struct _1b9b27265_AssignSt;
struct _1b9b28178_Stmt;
struct _1b9b287d8_ScopeTree;
struct _1b9b29025_ParamDecl;
struct _1b9b2a477_FnDecl;
struct _1b9b2b555_VarDecl;
struct _1b9b2b92e_RetSt;
struct _1b9b2c0c2_Iter;
struct _1b9b2c8ec_WhileKind;
struct _1b9b2d304_RangeKind;
struct _1b9b2d6cd_BreakSt;
struct _1b9b2daa7_ContSt;
struct _1b9b2e05d_If;
struct _1b9b2e437_Else;
struct _1b9b2e8dd_Conditional;
struct _1b9b3012a_TypeAliasDecl;
struct _1b9b305d1_Case;
struct _1b9b30d1d_MatchCase;
struct _1b9b31637_UseDecl;
struct _1b9b31add_EnumItemDecl;
struct _1b9b3269e_EnumDecl;
struct _1b9b32ec9_TypeEnumItemDecl;
struct _1b9b33639_TypeEnumDecl;
struct _1b9b33903_FieldDecl;
struct _1b9b342e9_StructDecl;
struct _1b9b34a36_TraitDecl;
struct _1b9b35196_Impl;
struct _1b9b364b6_Field;
struct _1b9b38496_Operators;
struct _1b9b393a9_Struct;
struct _1b9b3b587_FieldIns;
struct _1b9b4102b_OperandExprModel;
struct _1b9b41526_BinopExprModel;
struct _1b9b41900_UnaryExprModel;
struct _1b9b41e2d_StructArgExprModel;
struct _1b9b422c4_StructLitExprModel;
struct _1b9b425c1_AllocStructLitExprModel;
struct _1b9b42b54_CastingExprModel;
struct _1b9b43506_FnCallExprModel;
struct _1b9b438d0_SliceExprModel;
struct _1b9b43d86_IndexingExprModel;
struct _1b9b44260_AnonFnExprModel;
struct _1b9b44639_KeyValPairExprModel;
struct _1b9b44ae0_MapExprModel;
struct _1b9b45173_SlicingExprModel;
struct _1b9b45706_TraitSubIdentExprModel;
struct _1b9b46097_StructSubIdentExprModel;
struct _1b9b4654d_StructStaticIdentExprModel;
struct _1b9b46927_ArrayExprModel;
struct _1b9b46c24_TupleExprModel;
struct _1b9b470ed_BuiltinOutCallExprModel;
struct _1b9b474c7_BuiltinOutlnCallExprModel;
struct _1b9b478a1_BuiltinNewCallExprModel;
struct _1b9b47c7a_BuiltinPanicCallExprModel;
struct _1b9b48231_BuiltinAssertCallExprModel;
struct _1b9b486d7_BuiltinMakeCallExprModel;
struct _1b9b48ab1_BuiltinAppendCallExprModel;
struct _1b9b48dad_BuiltinLenCallExprModel;
struct _1b9b491aa_BuiltinCapCallExprModel;
struct _1b9b49584_BuiltinDeleteCallExprModel;
struct _1b9b4995d_BuiltinCopyCallExprModel;
struct _1b9b49d37_BuiltinErrorCallExprModel;
struct _1b9b458e3_SizeofExprModel;
struct _1b9b4a563_AlignofExprModel;
struct _1b9b4a860_RuneExprModel;
struct _1b9b4ab5c_IntegratedToStrExprModel;
struct _1b9b4b036_BackendEmitExprModel;
struct _1b9b4b333_FreeExprModel;
struct _1b9b4c015_RetType;
struct _1b9b4c796_Param;
struct _1b9b4e26a_Fn;
struct _1b9b511c3_ParamIns;
struct _1b9b5216e_FnIns;
struct _1b9b5531a_ReferenceStack;
struct _1b9b56838_Pass;
struct _1b9b5b3ed_symbolBuilder;
struct _1b9b62514_Trait;
struct _1b9b64192_EnumItem;
struct _1b9b64c0e_Enum;
struct _1b9b65d42_TypeEnumItem;
struct _1b9b66419_TypeEnum;
struct _1b9b687b2_comptimeRange;
struct _1b9b6931d_comptimeStructField;
struct _1b9b6aebd_comptimeStructFields;
struct _1b9b6c5c9_comptimeStatic;
struct _1b9b6e28a_comptimeStatics;
struct _1b9b70885_comptimeEnumField;
struct _1b9b71b94_comptimeEnumFields;
struct _1b9b73327_comptimeParam;
struct _1b9b7558d_comptimeParams;
struct _1b9b76b88_comptimeTypeInfos;
struct _1b9b78283_comptimeTypeInfo;
struct _1b9b7e795_comptimeValue;
struct _1b9b820e4_comptimeFiles;
struct _1b9b836de_comptimeFile;
struct _1b9b87858_constraintChecker;
struct _1b9b8988d_Impl;
struct _1b9b8ecc2_Scope;
struct _1b9b901e0_If;
struct _1b9b904dc_Else;
struct _1b9b9090a_Conditional;
struct _1b9b90c07_InfIter;
struct _1b9b911ad_WhileIter;
struct _1b9b91b09_RangeIter;
struct _1b9b91e8e_ContSt;
struct _1b9b92368_BreakSt;
struct _1b9b92665_Label;
struct _1b9b92a3e_GotoSt;
struct _1b9b92e18_Postfix;
struct _1b9b933be_Assign;
struct _1b9b93798_MultiAssign;
struct _1b9b93e08_Match;
struct _1b9b94a41_Case;
struct _1b9b9513a_FallSt;
struct _1b9b954c0_RetSt;
struct _1b9b95b30_scopeLabel;
struct _1b9b961b3_scopeGoto;
struct _1b9b970c6_scopeChecker;
struct _1b9ba9c76_directiveChecker;
struct _1b9bb1200_ImportInfo;
struct _1b9bb4126_Package;
struct _1b9bd1792_commonSemaMeta;
struct _1b9bd23b9_Sema;
struct _1b9c06069_missingRetChecker;
struct _1b9c08456_IterRelation;
struct _1b9c09611_Var;
struct _1b9c0a425_FuncPattern;
struct _1b9c44d33_typeCompatibilityChecker;
struct _1b9c46ad2_assignTypeChecker;
struct _1b9c4874e_dynamicTypeAnnotation;
struct _1b9c4d5ab_fnCallArgChecker;
struct _1b9c514e3_structLitChecker;
struct _1b9c532c5_rangeChecker;
struct _1b9c55a36_retTypeChecker;
struct _1b9c57ce1_SymbolTable;
struct _1b9c5d016_Data;
struct _1b9c5e15a_Value;
struct _1b9c5ec0a_Eval;
struct _1b9c7d19b_unaryEval;
struct _1b9c80137_binaryEval;
struct _1b9c8b7e7_InsGeneric;
struct _1b9c8c3db_TypeAlias;
struct _1b9c8d1cd_TypeKind;
struct _1b9c953a0_TypeSymbol;
struct _1b9c95ca7_Prim;
struct _1b9c997d3_Sptr;
struct _1b9c9a2a6_Slc;
struct _1b9c9ad9a_Tuple;
struct _1b9c9b94a_Map;
struct _1b9c9c5c7_Arr;
struct _1b9c9d09a_Ptr;
struct _1b9c9e09b_referencer;
struct _1b9ca008b_typeChecker;
struct _1b9ca7c20_identTypeLookup;
struct _1ba79de1e_FileInfo;
struct _1ba7e760a_stmt;
struct _1ba7e7e9b_scopeParser;
struct _1ba80556e_exprBuilder;
struct _1ba817839_assignInfo;
struct _1ba81aed0_parser;
struct _1ba82cd49_typeBuilder;
struct _1ba099d47_CompileInfo;
struct _1ba09b2ee_directiveEval;
struct _1ba831e80_JuleImporter;
struct _1ba837194_OrderedDefines;
struct _1ba837408_defineOrderer;
struct _1ba963974_liveTable;
struct _1c7661269_scopeDeadCode;
struct _1c76654c1_exprDeadCode;
struct _1b9d8b40d_SwapExprModel;
struct _1b9d8b7d7_EmptyCompareExprModel;
struct _1b9d8bad4_RefExprModel;
struct _1b9d8c112_StrCompExprModel;
struct _1b9d8c695_MutSlicingExprModel;
struct _1b9d8c992_UnsafeBinopExprModel;
struct _1b9d8cc8e_UnsafeIndexingExprModel;
struct _1b9d8d1bd_PushToSliceExprModel;
struct _1b9d8d597_AppendToSliceExprModel;
struct _1b9d8d894_InlineStdInternalNosafeStobs;
struct _1b9d8ea3d_scopeOptimizer;
struct _1b9d95c20_exprOptimizer;
struct _1ba838c9a_stdCacheData;
struct _1c766c880_Optimizer;
struct _1c76958ca_AnsiEscape;
struct _1c7697008_Logger;
struct _1c8034e39_AbsTime;
struct _1c8035610_Time;
struct _1c7e58577_scopeCoder;
struct _1c7e62790_exprCoder;
struct _1c7e78036_TestCoder;
struct _1c7e7ac1a_identCoder;
struct _1c803d096_SerializationInfo;
struct _1c803d66d_traitHash;
struct _1c803da47_traitCast;
struct _1c804dc66_customType;
struct _1c804e86b_typeCoder;
struct _1c8057643_resultCoder;
struct _1cb4dbb90_Flag;
struct _1cb4e07dc_Flag;
struct _1cb4e3ed8_Flag;
struct _1cb4e7728_Flag;
struct _1cb4eae24_Flag;
struct _1c80c44c3_FlagSet;
struct _1c80c6e54_argParser;
struct _1c803eaae_ObjectCoder;
struct _1ba963d5e_ObjectDeadCode;
struct _1ba834944_IR;
struct _1b9b3c137_StructIns;
struct _23d2c02e6_Cmd;
struct _23ceece69_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	inline bool operator==(_23ceece69_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_23ceece69_Range16 _other) { return !this->operator==(_other); }


};
struct _23ceed497_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	inline bool operator==(_23ceed497_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_23ceed497_Range32 _other) { return !this->operator==(_other); }


};
struct _23ceed94d_RangeTable {
	jule::Slice<_23ceece69_Range16> _field_R16;
	jule::Slice<_23ceed497_Range32> _field_R32;
	jule::I32 _field_LatinOffset = 0;
	


};
struct _23d10a8d4_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	inline bool operator==(_23d10a8d4_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_23d10a8d4_acceptRange _other) { return !this->operator==(_other); }


};
struct _23d16295d_StrBuilder {
	jule::Slice<jule::U8> _field_buf;
	


};
struct _23d16d4d5_lazyBuff {
	jule::Slice<jule::U8> _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I32 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I32 _field_volLen = 0;
	


};
struct _23bc9be5b_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_23bcaa684_Status> _field_Stat;
	

	inline bool operator==(_23bc9be5b_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_23bc9be5b_DirEntry _other) { return !this->operator==(_other); }


};
struct _23bc9c1c0_Directory {
	

	inline bool operator==(_23bc9c1c0_Directory _other) { return true; }

	inline bool operator!=(_23bc9c1c0_Directory _other) { return !this->operator==(_other); }


};
struct _23bca7d8a_File {
	jule::Uintptr _field_handle = 0;
	

	inline bool operator==(_23bca7d8a_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_23bca7d8a_File _other) { return !this->operator==(_other); }


};
struct _23bcaa684_Status {
	jule::I32 _field_mode = 0LL;
	jule::U32 _field_size = 0;
	

	inline bool operator==(_23bcaa684_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_23bcaa684_Status _other) { return !this->operator==(_other); }


};
struct _23d31ea2c_cmdAttrs {
	jule::I32 _field_pid = -1LL;
	

	inline bool operator==(_23d31ea2c_cmdAttrs _other) {
		return 
			this->_field_pid == _other._field_pid;
	}

	inline bool operator!=(_23d31ea2c_cmdAttrs _other) { return !this->operator==(_other); }


};
struct _23d21115a_Log {
	jule::I32 _field_Kind = 0LL;
	jule::I32 _field_Row = 0;
	jule::I32 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	inline bool operator==(_23d21115a_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_23d21115a_Log _other) { return !this->operator==(_other); }


};
struct _1ec65998a_floatInfo {
	jule::U32 _field_mantbits = 0;
	jule::U32 _field_expbits = 0;
	jule::I32 _field_bias = 0;
	

	inline bool operator==(_1ec65998a_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1ec65998a_floatInfo _other) { return !this->operator==(_other); }


};
struct _1ec65a4e6_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I32 _field_nd = 0;
	jule::I32 _field_dp = 0;
	jule::Bool _field_neg = false;
	


};
struct _1ec66c75b_leftCheat {
	jule::I32 _field_delta = 0;
	jule::Str _field_cutoff;
	

	inline bool operator==(_1ec66c75b_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1ec66c75b_leftCheat _other) { return !this->operator==(_other); }


};
struct _1ec66d284_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I32 _field_nd = 0;
	jule::I32 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	inline bool operator==(_1ec66d284_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1ec66d284_decimal _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ec688898_Eq(_1ec682ce3_Const*, _1ec682ce3_Const);
inline jule::Bool _1ec688bd9_Lt(_1ec682ce3_Const*, _1ec682ce3_Const);
inline jule::Bool _1ec68902a_LtEq(_1ec682ce3_Const*, _1ec682ce3_Const);
inline jule::Bool _1ec68936b_Gt(_1ec682ce3_Const*, _1ec682ce3_Const);
inline jule::Bool _1ec6896ac_GtEq(_1ec682ce3_Const*, _1ec682ce3_Const);
struct _1ec682ce3_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	inline jule::Bool operator==(_1ec682ce3_Const _other) { return _1ec688898_Eq(this, _other); }

	inline bool operator!=(_1ec682ce3_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1ec682ce3_Const _other) { return _1ec68936b_Gt(this, _other); }

	inline jule::Bool operator>=(_1ec682ce3_Const _other) { return _1ec6896ac_GtEq(this, _other); }

	inline jule::Bool operator<(_1ec682ce3_Const _other) { return _1ec688bd9_Lt(this, _other); }

	inline jule::Bool operator<=(_1ec682ce3_Const _other) { return _1ec68902a_LtEq(this, _other); }


};
struct _1b9b032eb_Token {
	jule::Ptr<_1b9b08ab5_File> _field_File;
	jule::I32 _field_Row = 0;
	jule::I32 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U32 _field_Id = 0LLU;
	

	inline bool operator==(_1b9b032eb_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_1b9b032eb_Token _other) { return !this->operator==(_other); }


};
struct _1b9b08ab5_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _field_Tokens;
	


};
struct _1b9b0abd8_kindPair {
	jule::Str _field_kind = jule::Str::lit("::", 2);
	jule::U32 _field_id = 0LLU;
	

	inline bool operator==(_1b9b0abd8_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1b9b0abd8_kindPair _other) { return !this->operator==(_other); }


};
struct _1b9b11cee_lex {
	jule::I32 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _field_tokens;
	jule::Ptr<_1b9b08ab5_File> _field_file;
	jule::I32 _field_pos = 0;
	jule::I32 _field_column = 0;
	jule::I32 _field_row = 0;
	jule::Slice<_23d21115a_Log> _field_errors;
	


};
struct _1b9b1692a_Ast {
	jule::Ptr<_1b9b08ab5_File> _field_File;
	jule::Slice<jule::Ptr<_1b9b17bd4_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1b9b31637_UseDecl>> _field_UseDecls;
	jule::Slice<_1b9b177b6_Node> _field_Nodes;
	


};
struct _1b9b177b6_Node {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1b9b177b6_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1b9b177b6_Node _other) { return !this->operator==(_other); }


};
struct _1b9b17bd4_Directive {
	jule::Ptr<_1b9b032eb_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _field_Args;
	


};
struct _1b9b187b7_TypeDecl {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1b9b187b7_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b9b187b7_TypeDecl _other) { return !this->operator==(_other); }


};
struct _1b9b18dc2_IdentTypeDecl {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1b9b187b7_TypeDecl>> _field_Generics;
	


};
struct _1b9b191be_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1b9b18dc2_IdentTypeDecl>> _field_Idents;
	


};
struct _1b9b19565_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _field_Idents;
	jule::Ptr<_1b9b187b7_TypeDecl> _field_Kind;
	


};
struct _1b9b19862_SptrTypeDecl {
	jule::Ptr<_1b9b187b7_TypeDecl> _field_Elem;
	

	inline bool operator==(_1b9b19862_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1b9b19862_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1b9b19be7_SlcTypeDecl {
	jule::Ptr<_1b9b187b7_TypeDecl> _field_Elem;
	

	inline bool operator==(_1b9b19be7_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1b9b19be7_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1b9b19ee4_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1b9b187b7_TypeDecl>> _field_Types;
	


};
struct _1b9b1a2e1_PtrTypeDecl {
	jule::Ptr<_1b9b187b7_TypeDecl> _field_Elem;
	

	inline bool operator==(_1b9b1a2e1_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1b9b1a2e1_PtrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1b9b1aa83_ArrTypeDecl {
	jule::Ptr<_1b9b187b7_TypeDecl> _field_Elem;
	jule::Ptr<_1b9b1caeb_Expr> _field_Size;
	

	inline bool operator==(_1b9b1aa83_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1b9b1aa83_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1b9b1b2d1_MapTypeDecl {
	jule::Ptr<_1b9b187b7_TypeDecl> _field_Key;
	jule::Ptr<_1b9b187b7_TypeDecl> _field_Val;
	

	inline bool operator==(_1b9b1b2d1_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1b9b1b2d1_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1b9b1b6aa_RetTypeDecl {
	jule::Ptr<_1b9b187b7_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _field_Idents;
	


};
struct _1b9b1caeb_Expr {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Ptr<_1b9b032eb_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1b9b1caeb_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b9b1caeb_Expr _other) { return !this->operator==(_other); }


};
struct _1b9b1cde8_RangeExpr {
	jule::Ptr<_1b9b1caeb_Expr> _field_Expr;
	

	inline bool operator==(_1b9b1cde8_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b9b1cde8_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1b9b1d4c0_UseExpr {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Ptr<_1b9b1caeb_Expr> _field_Expr;
	

	inline bool operator==(_1b9b1d4c0_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b9b1d4c0_UseExpr _other) { return !this->operator==(_other); }


};
struct _1b9b1d7bc_TupleExpr {
	jule::Slice<jule::Ptr<_1b9b1caeb_Expr>> _field_Expr;
	


};
struct _1b9b1db96_LitExpr {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Str _field_Value;
	

	inline bool operator==(_1b9b1db96_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1b9b1db96_LitExpr _other) { return !this->operator==(_other); }


};
struct _1b9b1e070_UnsafeExpr {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Ptr<_1b9b1caeb_Expr> _field_Expr;
	

	inline bool operator==(_1b9b1e070_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b9b1e070_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _1b9b1e526_IdentExpr {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	

	inline bool operator==(_1b9b1e526_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Binded == _other._field_Binded;
	}

	inline bool operator!=(_1b9b1e526_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1b9b1eba8_UnaryExpr {
	jule::Ptr<_1b9b032eb_Token> _field_Op;
	jule::Ptr<_1b9b1caeb_Expr> _field_Expr;
	

	inline bool operator==(_1b9b1eba8_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b9b1eba8_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1b9b20082_VariadicExpr {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Ptr<_1b9b1caeb_Expr> _field_Expr;
	

	inline bool operator==(_1b9b20082_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b9b20082_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1b9b2045b_CastExpr {
	jule::Ptr<_1b9b187b7_TypeDecl> _field_Kind;
	jule::Ptr<_1b9b1caeb_Expr> _field_Expr;
	

	inline bool operator==(_1b9b2045b_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b9b2045b_CastExpr _other) { return !this->operator==(_other); }


};
struct _1b9b20835_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _field_Ns;
	jule::Ptr<_1b9b032eb_Token> _field_Ident;
	


};
struct _1b9b20c0e_SubIdentExpr {
	jule::Ptr<_1b9b1caeb_Expr> _field_Expr;
	jule::Ptr<_1b9b032eb_Token> _field_Ident;
	

	inline bool operator==(_1b9b20c0e_SubIdentExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1b9b20c0e_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1b9b211b5_BinopExpr {
	jule::Ptr<_1b9b1caeb_Expr> _field_Left;
	jule::Ptr<_1b9b1caeb_Expr> _field_Right;
	jule::Ptr<_1b9b032eb_Token> _field_Op;
	

	inline bool operator==(_1b9b211b5_BinopExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1b9b211b5_BinopExpr _other) { return !this->operator==(_other); }


};
struct _1b9b21825_FnCallExpr {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Ptr<_1b9b1caeb_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1b9b1caeb_Expr>> _field_Args;
	jule::Ptr<_1b9b287d8_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	


};
struct _1b9b2231a_FieldExprPair {
	jule::Ptr<_1b9b032eb_Token> _field_Field;
	jule::Ptr<_1b9b1caeb_Expr> _field_Expr;
	

	inline bool operator==(_1b9b2231a_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b9b2231a_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1b9b22b45_StructLit {
	jule::Ptr<_1b9b032eb_Token> _field_End;
	jule::Ptr<_1b9b187b7_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1b9b1caeb_Expr>> _field_Exprs;
	


};
struct _1b9b230eb_BraceLit {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Ptr<_1b9b032eb_Token> _field_End;
	jule::Slice<jule::Ptr<_1b9b1caeb_Expr>> _field_Exprs;
	


};
struct _1b9b23926_KeyValPair {
	jule::Ptr<_1b9b1caeb_Expr> _field_Key;
	jule::Ptr<_1b9b1caeb_Expr> _field_Val;
	jule::Ptr<_1b9b032eb_Token> _field_Colon;
	

	inline bool operator==(_1b9b23926_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_1b9b23926_KeyValPair _other) { return !this->operator==(_other); }


};
struct _1b9b2411e_SliceExpr {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Ptr<_1b9b032eb_Token> _field_End;
	jule::Slice<jule::Ptr<_1b9b1caeb_Expr>> _field_Exprs;
	


};
struct _1b9b24aae_IndexingExpr {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Ptr<_1b9b032eb_Token> _field_End;
	jule::Ptr<_1b9b1caeb_Expr> _field_Expr;
	jule::Ptr<_1b9b1caeb_Expr> _field_Index;
	

	inline bool operator==(_1b9b24aae_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1b9b24aae_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1b9b2521e_SlicingExpr {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Ptr<_1b9b032eb_Token> _field_End;
	jule::Ptr<_1b9b1caeb_Expr> _field_Expr;
	jule::Ptr<_1b9b1caeb_Expr> _field_Start;
	jule::Ptr<_1b9b1caeb_Expr> _field_To;
	

	inline bool operator==(_1b9b2521e_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_1b9b2521e_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1b9b2551b_Constraint {
	jule::Slice<jule::Ptr<_1b9b187b7_TypeDecl>> _field_Mask;
	


};
struct _1b9b259c2_GenericDecl {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1b9b2551b_Constraint> _field_Constraint;
	

	inline bool operator==(_1b9b259c2_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1b9b259c2_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1b9b25d9b_LabelSt {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Str _field_Ident;
	

	inline bool operator==(_1b9b25d9b_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1b9b25d9b_LabelSt _other) { return !this->operator==(_other); }


};
struct _1b9b26275_GotoSt {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Ptr<_1b9b032eb_Token> _field_Label;
	

	inline bool operator==(_1b9b26275_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1b9b26275_GotoSt _other) { return !this->operator==(_other); }


};
struct _1b9b26572_FallSt {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	

	inline bool operator==(_1b9b26572_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_1b9b26572_FallSt _other) { return !this->operator==(_other); }


};
struct _1b9b26bd2_AssignLeft {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_1b9b1caeb_Expr> _field_Expr;
	

	inline bool operator==(_1b9b26bd2_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b9b26bd2_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1b9b27265_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_1b9b032eb_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1b9b26bd2_AssignLeft>> _field_Left;
	jule::Ptr<_1b9b1caeb_Expr> _field_Right;
	


};
struct _1b9b28178_Stmt {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1b9b28178_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1b9b28178_Stmt _other) { return !this->operator==(_other); }


};
struct _1b9b287d8_ScopeTree {
	jule::Ptr<_1b9b287d8_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_1b9b28178_Stmt> _field_Stmts;
	jule::Ptr<_1b9b032eb_Token> _field_End;
	


};
struct _1b9b29025_ParamDecl {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1b9b187b7_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1b9b29025_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1b9b29025_ParamDecl _other) { return !this->operator==(_other); }


};
struct _1b9b2a477_FnDecl {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1b9b17bd4_Directive>> _field_Directives;
	jule::Ptr<_1b9b287d8_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1b9b259c2_GenericDecl>> _field_Generics;
	jule::Ptr<_1b9b1b6aa_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1b9b29025_ParamDecl>> _field_Params;
	


};
struct _1b9b2b555_VarDecl {
	jule::Ptr<_1b9b287d8_ScopeTree> _field_Scope;
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_1b9b17bd4_Directive>> _field_Directives;
	jule::Ptr<_1b9b187b7_TypeDecl> _field_Kind;
	jule::Ptr<_1b9b1caeb_Expr> _field_Expr;
	


};
struct _1b9b2b92e_RetSt {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Ptr<_1b9b1caeb_Expr> _field_Expr;
	

	inline bool operator==(_1b9b2b92e_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b9b2b92e_RetSt _other) { return !this->operator==(_other); }


};
struct _1b9b2c0c2_Iter {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_1b9b287d8_ScopeTree> _field_Scope;
	

	inline bool operator==(_1b9b2c0c2_Iter _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1b9b2c0c2_Iter _other) { return !this->operator==(_other); }


};
struct _1b9b2c8ec_WhileKind {
	jule::Ptr<_1b9b1caeb_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1b9b032eb_Token> _field_NextToken;
	

	inline bool operator==(_1b9b2c8ec_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_1b9b2c8ec_WhileKind _other) { return !this->operator==(_other); }


};
struct _1b9b2d304_RangeKind {
	jule::Ptr<_1b9b032eb_Token> _field_InToken;
	jule::Ptr<_1b9b1caeb_Expr> _field_Expr;
	jule::Ptr<_1b9b2b555_VarDecl> _field_KeyA;
	jule::Ptr<_1b9b2b555_VarDecl> _field_KeyB;
	

	inline bool operator==(_1b9b2d304_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1b9b2d304_RangeKind _other) { return !this->operator==(_other); }


};
struct _1b9b2d6cd_BreakSt {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Ptr<_1b9b032eb_Token> _field_Label;
	

	inline bool operator==(_1b9b2d6cd_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1b9b2d6cd_BreakSt _other) { return !this->operator==(_other); }


};
struct _1b9b2daa7_ContSt {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Ptr<_1b9b032eb_Token> _field_Label;
	

	inline bool operator==(_1b9b2daa7_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1b9b2daa7_ContSt _other) { return !this->operator==(_other); }


};
struct _1b9b2e05d_If {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Ptr<_1b9b1caeb_Expr> _field_Expr;
	jule::Ptr<_1b9b287d8_ScopeTree> _field_Scope;
	

	inline bool operator==(_1b9b2e05d_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1b9b2e05d_If _other) { return !this->operator==(_other); }


};
struct _1b9b2e437_Else {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Ptr<_1b9b287d8_ScopeTree> _field_Scope;
	

	inline bool operator==(_1b9b2e437_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1b9b2e437_Else _other) { return !this->operator==(_other); }


};
struct _1b9b2e8dd_Conditional {
	jule::Ptr<_1b9b2e05d_If> _field_Head;
	jule::Slice<jule::Ptr<_1b9b2e05d_If>> _field_Tail;
	jule::Ptr<_1b9b2e437_Else> _field_Default;
	


};
struct _1b9b3012a_TypeAliasDecl {
	jule::Ptr<_1b9b287d8_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1b9b187b7_TypeDecl> _field_Kind;
	

	inline bool operator==(_1b9b3012a_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_Binded == _other._field_Binded &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b9b3012a_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1b9b305d1_Case {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Ptr<_1b9b287d8_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1b9b1caeb_Expr>> _field_Exprs;
	


};
struct _1b9b30d1d_MatchCase {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Ptr<_1b9b032eb_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_1b9b1caeb_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1b9b305d1_Case>> _field_Cases;
	jule::Ptr<_1b9b2e437_Else> _field_Default;
	


};
struct _1b9b31637_UseDecl {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _field_Selected;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	


};
struct _1b9b31add_EnumItemDecl {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1b9b1caeb_Expr> _field_Expr;
	

	inline bool operator==(_1b9b31add_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b9b31add_EnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1b9b3269e_EnumDecl {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1b9b187b7_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1b9b31add_EnumItemDecl>> _field_Items;
	jule::Ptr<_1b9b032eb_Token> _field_End;
	


};
struct _1b9b32ec9_TypeEnumItemDecl {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1b9b187b7_TypeDecl> _field_Kind;
	

	inline bool operator==(_1b9b32ec9_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b9b32ec9_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1b9b33639_TypeEnumDecl {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1b9b32ec9_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1b9b032eb_Token> _field_End;
	


};
struct _1b9b33903_FieldDecl {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1b9b187b7_TypeDecl> _field_Kind;
	jule::Ptr<_1b9b1caeb_Expr> _field_Default;
	

	inline bool operator==(_1b9b33903_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1b9b33903_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1b9b342e9_StructDecl {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Ptr<_1b9b032eb_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1b9b33903_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1b9b17bd4_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1b9b259c2_GenericDecl>> _field_Generics;
	


};
struct _1b9b34a36_TraitDecl {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Ptr<_1b9b032eb_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1b9b187b7_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1b9b2a477_FnDecl>> _field_Methods;
	


};
struct _1b9b35196_Impl {
	jule::Ptr<_1b9b032eb_Token> _field_End;
	jule::Ptr<_1b9b187b7_TypeDecl> _field_Base;
	jule::Ptr<_1b9b187b7_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1b9b2a477_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1b9b2b555_VarDecl>> _field_Statics;
	


};
struct _1b9b364b6_Field {
	jule::Ptr<_1b9b393a9_Struct> _field_Owner;
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1b9c953a0_TypeSymbol> _field_Kind;
	jule::Ptr<_1b9b1caeb_Expr> _field_Default;
	

	inline bool operator==(_1b9b364b6_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1b9b364b6_Field _other) { return !this->operator==(_other); }


};
struct _1b9b38496_Operators {
	jule::Ptr<_1b9b5216e_FnIns> _field_Eq;
	jule::Ptr<_1b9b5216e_FnIns> _field_Gt;
	jule::Ptr<_1b9b5216e_FnIns> _field_GtEq;
	jule::Ptr<_1b9b5216e_FnIns> _field_Lt;
	jule::Ptr<_1b9b5216e_FnIns> _field_LtEq;
	jule::Ptr<_1b9b5216e_FnIns> _field_Shl;
	jule::Ptr<_1b9b5216e_FnIns> _field_Shr;
	jule::Ptr<_1b9b5216e_FnIns> _field_Add;
	jule::Ptr<_1b9b5216e_FnIns> _field_Sub;
	jule::Ptr<_1b9b5216e_FnIns> _field_Div;
	jule::Ptr<_1b9b5216e_FnIns> _field_Mul;
	jule::Ptr<_1b9b5216e_FnIns> _field_Mod;
	jule::Ptr<_1b9b5216e_FnIns> _field_BitAnd;
	jule::Ptr<_1b9b5216e_FnIns> _field_BitOr;
	jule::Ptr<_1b9b5216e_FnIns> _field_BitXor;
	jule::Ptr<_1b9b5216e_FnIns> _field_Neg;
	jule::Ptr<_1b9b5216e_FnIns> _field_Pos;
	jule::Ptr<_1b9b5216e_FnIns> _field_BitNot;
	jule::Ptr<_1b9b5216e_FnIns> _field_AddAssign;
	jule::Ptr<_1b9b5216e_FnIns> _field_SubAssign;
	jule::Ptr<_1b9b5216e_FnIns> _field_DivAssign;
	jule::Ptr<_1b9b5216e_FnIns> _field_MulAssign;
	jule::Ptr<_1b9b5216e_FnIns> _field_ModAssign;
	jule::Ptr<_1b9b5216e_FnIns> _field_ShlAssign;
	jule::Ptr<_1b9b5216e_FnIns> _field_ShrAssign;
	jule::Ptr<_1b9b5216e_FnIns> _field_BitOrAssign;
	jule::Ptr<_1b9b5216e_FnIns> _field_BitAndAssign;
	jule::Ptr<_1b9b5216e_FnIns> _field_BitXorAssign;
	

	inline bool operator==(_1b9b38496_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_1b9b38496_Operators _other) { return !this->operator==(_other); }


};
struct _1b9b393a9_Struct {
	jule::Ptr<_1b9bd23b9_Sema> _field_sema;
	jule::Slice<jule::Ptr<_1b9b393a9_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1b9b393a9_Struct>> _field_Uses;
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1b9b364b6_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1b9b4e26a_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1b9c09611_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1b9b17bd4_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1b9b259c2_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1b9b62514_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1b9b3c137_StructIns>> _field_Instances;
	


};
struct _1b9b3b587_FieldIns {
	jule::Ptr<_1b9b364b6_Field> _field_Decl;
	jule::Ptr<_1b9c8d1cd_TypeKind> _field_Kind;
	jule::Ptr<_1b9c5d016_Data> _field_Default;
	

	inline bool operator==(_1b9b3b587_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1b9b3b587_FieldIns _other) { return !this->operator==(_other); }


};
struct _1b9b4102b_OperandExprModel {
	jule::Ptr<_1b9c8d1cd_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	inline bool operator==(_1b9b4102b_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_1b9b4102b_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1b9b41526_BinopExprModel {
	jule::Ptr<_1b9b4102b_OperandExprModel> _field_Left;
	jule::Ptr<_1b9b4102b_OperandExprModel> _field_Right;
	jule::Ptr<_1b9b032eb_Token> _field_Op;
	

	inline bool operator==(_1b9b41526_BinopExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1b9b41526_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _1b9b41900_UnaryExprModel {
	jule::Ptr<_1b9c5d016_Data> _field_Expr;
	jule::Ptr<_1b9b032eb_Token> _field_Op;
	

	inline bool operator==(_1b9b41900_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1b9b41900_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1b9b41e2d_StructArgExprModel {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Ptr<_1b9b3b587_FieldIns> _field_Field;
	jule::Ptr<_1b9c5d016_Data> _field_Expr;
	

	inline bool operator==(_1b9b41e2d_StructArgExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b9b41e2d_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1b9b422c4_StructLitExprModel {
	jule::Ptr<_1b9b3c137_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1b9b41e2d_StructArgExprModel>> _field_Args;
	


};
struct _1b9b425c1_AllocStructLitExprModel {
	jule::Ptr<_1b9b422c4_StructLitExprModel> _field_Lit;
	

	inline bool operator==(_1b9b425c1_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_1b9b425c1_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1b9b42b54_CastingExprModel {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1b9c8d1cd_TypeKind> _field_Kind;
	jule::Ptr<_1b9c8d1cd_TypeKind> _field_ExprKind;
	

	inline bool operator==(_1b9b42b54_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_1b9b42b54_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1b9b43506_FnCallExprModel {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Ptr<_1b9b5216e_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1b9b8ecc2_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	


};
struct _1b9b438d0_SliceExprModel {
	jule::Ptr<_1b9c8d1cd_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1b9b43d86_IndexingExprModel {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Ptr<_1b9c5d016_Data> _field_Expr;
	jule::Ptr<_1b9c5d016_Data> _field_Index;
	

	inline bool operator==(_1b9b43d86_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1b9b43d86_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1b9b44260_AnonFnExprModel {
	jule::Ptr<_1b9b5216e_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	

	inline bool operator==(_1b9b44260_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_1b9b44260_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1b9b44639_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	inline bool operator==(_1b9b44639_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1b9b44639_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1b9b44ae0_MapExprModel {
	jule::Ptr<_1b9c8d1cd_TypeKind> _field_KeyKind;
	jule::Ptr<_1b9c8d1cd_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_1b9b44639_KeyValPairExprModel>> _field_Entries;
	


};
struct _1b9b45173_SlicingExprModel {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1b9b45173_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1b9b45173_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1b9b45706_TraitSubIdentExprModel {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1b9b4e26a_Fn> _field_Method;
	jule::Ptr<_1b9b62514_Trait> _field_Trt;
	

	inline bool operator==(_1b9b45706_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_1b9b45706_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1b9b46097_StructSubIdentExprModel {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Ptr<_1b9c5d016_Data> _field_Expr;
	jule::Ptr<_1b9b5216e_FnIns> _field_Method;
	jule::Ptr<_1b9b3b587_FieldIns> _field_Field;
	jule::Ptr<_1b9b3c137_StructIns> _field_Owner;
	

	inline bool operator==(_1b9b46097_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_1b9b46097_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1b9b4654d_StructStaticIdentExprModel {
	jule::Ptr<_1b9b3c137_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1b9b5216e_FnIns> _field_Method;
	

	inline bool operator==(_1b9b4654d_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_1b9b4654d_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1b9b46927_ArrayExprModel {
	jule::Ptr<_1b9c9c5c7_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1b9b46c24_TupleExprModel {
	jule::Slice<jule::Ptr<_1b9c5d016_Data>> _field_Datas;
	


};
struct _1b9b470ed_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1b9b470ed_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1b9b470ed_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b9b474c7_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1b9b474c7_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1b9b474c7_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b9b478a1_BuiltinNewCallExprModel {
	jule::Ptr<_1b9c8d1cd_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	inline bool operator==(_1b9b478a1_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_1b9b478a1_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b9b47c7a_BuiltinPanicCallExprModel {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1b9b47c7a_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b9b47c7a_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b9b48231_BuiltinAssertCallExprModel {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	inline bool operator==(_1b9b48231_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_1b9b48231_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b9b486d7_BuiltinMakeCallExprModel {
	jule::Ptr<_1b9c8d1cd_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	inline bool operator==(_1b9b486d7_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_1b9b486d7_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b9b48ab1_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	inline bool operator==(_1b9b48ab1_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_1b9b48ab1_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b9b48dad_BuiltinLenCallExprModel {
	jule::Ptr<_1b9c5d016_Data> _field_Expr;
	

	inline bool operator==(_1b9b48dad_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b9b48dad_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b9b491aa_BuiltinCapCallExprModel {
	jule::Ptr<_1b9c5d016_Data> _field_Expr;
	

	inline bool operator==(_1b9b491aa_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b9b491aa_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b9b49584_BuiltinDeleteCallExprModel {
	jule::Ptr<_1b9c5d016_Data> _field_Dest;
	jule::Ptr<_1b9c5d016_Data> _field_Key;
	

	inline bool operator==(_1b9b49584_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_1b9b49584_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b9b4995d_BuiltinCopyCallExprModel {
	jule::Ptr<_1b9c5d016_Data> _field_Dest;
	jule::Ptr<_1b9c5d016_Data> _field_Src;
	

	inline bool operator==(_1b9b4995d_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_1b9b4995d_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b9b49d37_BuiltinErrorCallExprModel {
	jule::Ptr<_1b9b5216e_FnIns> _field_Func;
	jule::Ptr<_1b9c5d016_Data> _field_Err;
	

	inline bool operator==(_1b9b49d37_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_1b9b49d37_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b9b458e3_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1b9b458e3_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b9b458e3_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1b9b4a563_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1b9b4a563_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b9b4a563_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1b9b4a860_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	inline bool operator==(_1b9b4a860_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_1b9b4a860_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1b9b4ab5c_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1b9b4ab5c_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b9b4ab5c_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1b9b4b036_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	


};
struct _1b9b4b333_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1b9b4b333_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b9b4b333_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1b9b4c015_RetType {
	jule::Ptr<_1b9c953a0_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _field_Idents;
	


};
struct _1b9b4c796_Param {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1b9c953a0_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1b9b4c796_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1b9b4c796_Param _other) { return !this->operator==(_other); }


};
struct _1b9b4e26a_Fn {
	jule::Ptr<_1b9bd23b9_Sema> _field_sema;
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1b9b17bd4_Directive>> _field_Directives;
	jule::Ptr<_1b9b287d8_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1b9b259c2_GenericDecl>> _field_Generics;
	jule::Ptr<_1b9b4c015_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1b9b4c796_Param>> _field_Params;
	jule::Ptr<_1b9b393a9_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1b9b5216e_FnIns>> _field_Instances;
	


};
struct _1b9b511c3_ParamIns {
	jule::Ptr<_1b9b4c796_Param> _field_Decl;
	jule::Ptr<_1b9c8d1cd_TypeKind> _field_Kind;
	

	inline bool operator==(_1b9b511c3_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b9b511c3_ParamIns _other) { return !this->operator==(_other); }


};
struct _1b9b5216e_FnIns {
	jule::Ptr<_1b9b3c137_StructIns> _field_Owner;
	jule::Ptr<_1b9b4e26a_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1b9c8b7e7_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1b9b511c3_ParamIns>> _field_Params;
	jule::Ptr<_1b9c8d1cd_TypeKind> _field_Result;
	jule::Ptr<_1b9b8ecc2_Scope> _field_Scope;
	jule::Ptr<_1b9b5531a_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)> _field_caller;
	jule::Bool _field_reloaded = false;
	


};
struct _1b9b5531a_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	


};
struct _1b9b56838_Pass {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Str _field_Text;
	

	inline bool operator==(_1b9b56838_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_1b9b56838_Pass _other) { return !this->operator==(_other); }


};
struct _1b9b5b3ed_symbolBuilder {
	jule::Ptr<_1b9b5b3ed_symbolBuilder> _field_owner;
	jule::Trait<_1b9bad2da_Importer> _field_importer;
	jule::Slice<_23d21115a_Log> _field_errors;
	jule::Ptr<_1b9b1692a_Ast> _field_ast;
	jule::Ptr<_1b9c57ce1_SymbolTable> _field_table;
	


};
struct _1b9b62514_Trait {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1b9c953a0_TypeSymbol>> _field_Inherits;
	jule::Slice<jule::Ptr<_1b9b4e26a_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1b9b393a9_Struct>> _field_Implemented;
	


};
struct _1b9b64192_EnumItem {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1b9c5e15a_Value> _field_Value;
	

	inline bool operator==(_1b9b64192_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1b9b64192_EnumItem _other) { return !this->operator==(_other); }


};
struct _1b9b64c0e_Enum {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1b9c953a0_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1b9b64192_EnumItem>> _field_Items;
	


};
struct _1b9b65d42_TypeEnumItem {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1b9c953a0_TypeSymbol> _field_Kind;
	

	inline bool operator==(_1b9b65d42_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b9b65d42_TypeEnumItem _other) { return !this->operator==(_other); }


};
struct _1b9b66419_TypeEnum {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1b9b65d42_TypeEnumItem>> _field_Items;
	


};
struct _1b9b687b2_comptimeRange {
	jule::Trait<_1b9b685c5_comptimeRangeKind> _field_kind;
	

	inline bool operator==(_1b9b687b2_comptimeRange _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1b9b687b2_comptimeRange _other) { return !this->operator==(_other); }


};
struct _1b9b6931d_comptimeStructField {
	jule::Ptr<_1b9b3b587_FieldIns> _field_field;
	

	inline bool operator==(_1b9b6931d_comptimeStructField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1b9b6931d_comptimeStructField _other) { return !this->operator==(_other); }


};
struct _1b9b6aebd_comptimeStructFields {
	jule::Slice<jule::Ptr<_1b9b3b587_FieldIns>> _field_fields;
	


};
struct _1b9b6c5c9_comptimeStatic {
	jule::Ptr<_1b9c09611_Var> _field_field;
	

	inline bool operator==(_1b9b6c5c9_comptimeStatic _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1b9b6c5c9_comptimeStatic _other) { return !this->operator==(_other); }


};
struct _1b9b6e28a_comptimeStatics {
	jule::Slice<jule::Ptr<_1b9c09611_Var>> _field_fields;
	


};
struct _1b9b70885_comptimeEnumField {
	jule::Ptr<_1b9b64192_EnumItem> _field_field;
	

	inline bool operator==(_1b9b70885_comptimeEnumField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1b9b70885_comptimeEnumField _other) { return !this->operator==(_other); }


};
struct _1b9b71b94_comptimeEnumFields {
	jule::Slice<jule::Ptr<_1b9b64192_EnumItem>> _field_fields;
	


};
struct _1b9b73327_comptimeParam {
	jule::Ptr<_1b9b511c3_ParamIns> _field_param;
	

	inline bool operator==(_1b9b73327_comptimeParam _other) {
		return 
			this->_field_param == _other._field_param;
	}

	inline bool operator!=(_1b9b73327_comptimeParam _other) { return !this->operator==(_other); }


};
struct _1b9b7558d_comptimeParams {
	jule::Slice<jule::Ptr<_1b9b511c3_ParamIns>> _field_params;
	


};
struct _1b9b76b88_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_1b9b78283_comptimeTypeInfo>> _field_types;
	


};
struct _1b9b78283_comptimeTypeInfo {
	jule::Ptr<_1b9c8d1cd_TypeKind> _field_base;
	

	inline bool operator==(_1b9b78283_comptimeTypeInfo _other) {
		return 
			this->_field_base == _other._field_base;
	}

	inline bool operator!=(_1b9b78283_comptimeTypeInfo _other) { return !this->operator==(_other); }


};
struct _1b9b7e795_comptimeValue {
	jule::Ptr<_1b9c5d016_Data> _field_data;
	

	inline bool operator==(_1b9b7e795_comptimeValue _other) {
		return 
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b9b7e795_comptimeValue _other) { return !this->operator==(_other); }


};
struct _1b9b820e4_comptimeFiles {
	jule::Slice<jule::Ptr<_1b9c57ce1_SymbolTable>> _field_files;
	


};
struct _1b9b836de_comptimeFile {
	jule::Ptr<_1b9c57ce1_SymbolTable> _field_file;
	

	inline bool operator==(_1b9b836de_comptimeFile _other) {
		return 
			this->_field_file == _other._field_file;
	}

	inline bool operator!=(_1b9b836de_comptimeFile _other) { return !this->operator==(_other); }


};
struct _1b9b87858_constraintChecker {
	jule::Ptr<_1b9bd23b9_Sema> _field_s;
	jule::Slice<jule::Ptr<_1b9b259c2_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1b9c8b7e7_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1b9c8c3db_TypeAlias>> _field_genericsA;
	jule::Ptr<_1b9b5216e_FnIns> _field_fi;
	jule::Ptr<_1b9b3c137_StructIns> _field_si;
	jule::Ptr<_1b9b032eb_Token> _field_et;
	jule::Bool _field_uniq = false;
	


};
struct _1b9b8988d_Impl {
	jule::Ptr<_1b9b187b7_TypeDecl> _field_Base;
	jule::Ptr<_1b9b187b7_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1b9b4e26a_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1b9c09611_Var>> _field_Statics;
	


};
struct _1b9b8ecc2_Scope {
	jule::Ptr<_1b9b8ecc2_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	


};
struct _1b9b901e0_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1b9b8ecc2_Scope> _field_Scope;
	

	inline bool operator==(_1b9b901e0_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1b9b901e0_If _other) { return !this->operator==(_other); }


};
struct _1b9b904dc_Else {
	jule::Ptr<_1b9b8ecc2_Scope> _field_Scope;
	

	inline bool operator==(_1b9b904dc_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1b9b904dc_Else _other) { return !this->operator==(_other); }


};
struct _1b9b9090a_Conditional {
	jule::Slice<jule::Ptr<_1b9b901e0_If>> _field_Elifs;
	jule::Ptr<_1b9b904dc_Else> _field_Default;
	


};
struct _1b9b90c07_InfIter {
	jule::Ptr<_1b9b8ecc2_Scope> _field_Scope;
	

	inline bool operator==(_1b9b90c07_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1b9b90c07_InfIter _other) { return !this->operator==(_other); }


};
struct _1b9b911ad_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1b9b8ecc2_Scope> _field_Scope;
	

	inline bool operator==(_1b9b911ad_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1b9b911ad_WhileIter _other) { return !this->operator==(_other); }


};
struct _1b9b91b09_RangeIter {
	jule::Ptr<_1b9c5d016_Data> _field_Expr;
	jule::Ptr<_1b9b8ecc2_Scope> _field_Scope;
	jule::Ptr<_1b9c09611_Var> _field_KeyA;
	jule::Ptr<_1b9c09611_Var> _field_KeyB;
	

	inline bool operator==(_1b9b91b09_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1b9b91b09_RangeIter _other) { return !this->operator==(_other); }


};
struct _1b9b91e8e_ContSt {
	jule::Uintptr _field_It = 0;
	

	inline bool operator==(_1b9b91e8e_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_1b9b91e8e_ContSt _other) { return !this->operator==(_other); }


};
struct _1b9b92368_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	inline bool operator==(_1b9b92368_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_1b9b92368_BreakSt _other) { return !this->operator==(_other); }


};
struct _1b9b92665_Label {
	jule::Str _field_Ident;
	

	inline bool operator==(_1b9b92665_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1b9b92665_Label _other) { return !this->operator==(_other); }


};
struct _1b9b92a3e_GotoSt {
	jule::Str _field_Ident;
	jule::Ptr<_1b9b92665_Label> _field_Label;
	

	inline bool operator==(_1b9b92a3e_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1b9b92a3e_GotoSt _other) { return !this->operator==(_other); }


};
struct _1b9b92e18_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	inline bool operator==(_1b9b92e18_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1b9b92e18_Postfix _other) { return !this->operator==(_other); }


};
struct _1b9b933be_Assign {
	jule::Ptr<_1b9b4102b_OperandExprModel> _field_L;
	jule::Ptr<_1b9b4102b_OperandExprModel> _field_R;
	jule::Ptr<_1b9b032eb_Token> _field_Op;
	

	inline bool operator==(_1b9b933be_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1b9b933be_Assign _other) { return !this->operator==(_other); }


};
struct _1b9b93798_MultiAssign {
	jule::Slice<jule::Ptr<_1b9c5d016_Data>> _field_L;
	jule::Any _field_R = jule::Any(nullptr);
	


};
struct _1b9b93e08_Match {
	jule::Ptr<_1b9c5d016_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Bool _field_Comptime = false;
	jule::Slice<jule::Ptr<_1b9b94a41_Case>> _field_Cases;
	jule::Ptr<_1b9b94a41_Case> _field_Default;
	


};
struct _1b9b94a41_Case {
	jule::Ptr<_1b9b93e08_Match> _field_Owner;
	jule::Ptr<_1b9b8ecc2_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1b9c5d016_Data>> _field_Exprs;
	jule::Ptr<_1b9b94a41_Case> _field_Next;
	


};
struct _1b9b9513a_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	inline bool operator==(_1b9b9513a_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_1b9b9513a_FallSt _other) { return !this->operator==(_other); }


};
struct _1b9b954c0_RetSt {
	jule::Ptr<_1b9b5216e_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1b9b954c0_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b9b954c0_RetSt _other) { return !this->operator==(_other); }


};
struct _1b9b95b30_scopeLabel {
	jule::Ptr<_1b9b032eb_Token> _field_token;
	jule::Ptr<_1b9b92665_Label> _field_label;
	jule::I32 _field_pos = 0;
	jule::Ptr<_1b9b970c6_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	inline bool operator==(_1b9b95b30_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1b9b95b30_scopeLabel _other) { return !this->operator==(_other); }


};
struct _1b9b961b3_scopeGoto {
	jule::Ptr<_1b9b92a3e_GotoSt> _field_st;
	jule::Ptr<_1b9b26275_GotoSt> _field_gt;
	jule::Ptr<_1b9b970c6_scopeChecker> _field_scope;
	jule::I32 _field_pos = 0;
	

	inline bool operator==(_1b9b961b3_scopeGoto _other) {
		return 
			this->_field_st == _other._field_st &&
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1b9b961b3_scopeGoto _other) { return !this->operator==(_other); }


};
struct _1b9b970c6_scopeChecker {
	jule::Ptr<_1b9b032eb_Token> _field_calledFrom;
	jule::Ptr<_1b9bd23b9_Sema> _field_s;
	jule::Ptr<_1b9b5216e_FnIns> _field_owner;
	jule::Ptr<_1b9b970c6_scopeChecker> _field_parent;
	jule::I32 _field_childIndex = 0;
	jule::Ptr<_1b9c57ce1_SymbolTable> _field_table;
	jule::Ptr<_1b9b8ecc2_Scope> _field_scope;
	jule::Ptr<_1b9b287d8_ScopeTree> _field_tree;
	jule::Ptr<_1b9b5216e_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1b9b95b30_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1b9b961b3_scopeGoto>>> _field_gotos;
	jule::I32 _field_i = 0;
	

	inline bool operator==(_1b9b970c6_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1b9b970c6_scopeChecker _other) { return !this->operator==(_other); }


};
struct _1b9ba9c76_directiveChecker {
	jule::Ptr<_1b9bd23b9_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1b9b17bd4_Directive>>> _field_d;
	jule::Any _field_o;
	

	inline bool operator==(_1b9ba9c76_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1b9ba9c76_directiveChecker _other) { return !this->operator==(_other); }


};
struct _1b9bb1200_ImportInfo {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _field_Selected;
	jule::Ptr<_1b9bb4126_Package> _field_Package;
	jule::I32 _field_ModId = 0;
	


};
struct _1b9bb4126_Package {
	jule::Slice<jule::Ptr<_1b9c57ce1_SymbolTable>> _field_Files;
	


};
struct _1b9bd1792_commonSemaMeta {
	jule::Slice<jule::Ptr<_1b9b78283_comptimeTypeInfo>> _field_comptimeTypeInfos;
	


};
struct _1b9bd23b9_Sema {
	jule::Slice<_23d21115a_Log> _field_errors;
	jule::Slice<jule::Ptr<_1b9c57ce1_SymbolTable>> _field_files;
	jule::Ptr<_1b9c57ce1_SymbolTable> _field_file;
	jule::I32 _field_flags = 0LL;
	jule::Ptr<_1b9bd1792_commonSemaMeta> _field_meta;
	


};
struct _1b9c06069_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	


};
struct _1b9c08456_IterRelation {
	jule::Ptr<_1b9c09611_Var> _field_Range;
	

	inline bool operator==(_1b9c08456_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_1b9c08456_IterRelation _other) { return !this->operator==(_other); }


};
struct _1b9c09611_Var {
	jule::Ptr<_1b9b8ecc2_Scope> _field_Scope;
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1b9c953a0_TypeSymbol> _field_Kind;
	jule::Ptr<_1b9c5e15a_Value> _field_Value;
	jule::Ptr<_1b9b5531a_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1b9b17bd4_Directive>> _field_Directives;
	jule::Ptr<_1b9c08456_IterRelation> _field_IterRelation;
	jule::I32 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_1b9c09611_Var>> _field_Depends;
	


};
struct _1b9c0a425_FuncPattern {
	


};
struct _1b9c44d33_typeCompatibilityChecker {
	jule::Ptr<_1b9bd23b9_Sema> _field_s;
	jule::Ptr<_1b9c8d1cd_TypeKind> _field_dest;
	jule::Ptr<_1b9c8d1cd_TypeKind> _field_src;
	jule::Ptr<_1b9b032eb_Token> _field_errorToken;
	

	inline bool operator==(_1b9c44d33_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1b9c44d33_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
struct _1b9c46ad2_assignTypeChecker {
	jule::Ptr<_1b9bd23b9_Sema> _field_s;
	jule::Ptr<_1b9c8d1cd_TypeKind> _field_dest;
	jule::Ptr<_1b9c5d016_Data> _field_d;
	jule::Ptr<_1b9b032eb_Token> _field_errorToken;
	

	inline bool operator==(_1b9c46ad2_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1b9c46ad2_assignTypeChecker _other) { return !this->operator==(_other); }


};
struct _1b9c4874e_dynamicTypeAnnotation {
	jule::Ptr<_1b9c5ec0a_Eval> _field_e;
	jule::Ptr<_1b9b5216e_FnIns> _field_f;
	jule::Ptr<_1b9b511c3_ParamIns> _field_p;
	jule::Ptr<_1b9c5d016_Data> _field_a;
	jule::Ptr<_1b9b032eb_Token> _field_errorToken;
	jule::Ptr<_1b9c8d1cd_TypeKind>* _field_k = nullptr;
	jule::Ptr<_1b9b187b7_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1b9c8d1cd_TypeKind>> _field_ignored;
	


};
struct _1b9c4d5ab_fnCallArgChecker {
	jule::Ptr<_1b9c5ec0a_Eval> _field_e;
	jule::Slice<jule::Ptr<_1b9b1caeb_Expr>> _field_args;
	jule::Ptr<_1b9b032eb_Token> _field_errorToken;
	jule::Ptr<_1b9b5216e_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1b9c8d1cd_TypeKind>> _field_ignored;
	


};
struct _1b9c514e3_structLitChecker {
	jule::Ptr<_1b9c5ec0a_Eval> _field_e;
	jule::Ptr<_1b9b032eb_Token> _field_errorToken;
	jule::Ptr<_1b9b3c137_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1b9b41e2d_StructArgExprModel>> _field_args;
	


};
struct _1b9c532c5_rangeChecker {
	jule::Ptr<_1b9b970c6_scopeChecker> _field_sc;
	jule::Ptr<_1b9b2d304_RangeKind> _field_rang;
	jule::Ptr<_1b9b91b09_RangeIter> _field_Kind;
	jule::Ptr<_1b9c5d016_Data> _field_d;
	

	inline bool operator==(_1b9c532c5_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1b9c532c5_rangeChecker _other) { return !this->operator==(_other); }


};
struct _1b9c55a36_retTypeChecker {
	jule::Ptr<_1b9b970c6_scopeChecker> _field_sc;
	jule::Ptr<_1b9b5216e_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1b9c8d1cd_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_1b9b1caeb_Expr>> _field_exprs;
	jule::Ptr<_1b9b032eb_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	


};
struct _1b9c57ce1_SymbolTable {
	jule::Ptr<_1b9b08ab5_File> _field_File;
	jule::Slice<_1b9b56838_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1b9bb1200_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1b9c09611_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1b9c8c3db_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1b9b393a9_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1b9b4e26a_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1b9b62514_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1b9b64c0e_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1b9b66419_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1b9b8988d_Impl>> _field_Impls;
	


};
struct _1b9c5d016_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_1b9c8d1cd_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_1ec682ce3_Const> _field_Constant;
	

	inline bool operator==(_1b9c5d016_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_1b9c5d016_Data _other) { return !this->operator==(_other); }


};
struct _1b9c5e15a_Value {
	jule::Ptr<_1b9b1caeb_Expr> _field_Expr;
	jule::Ptr<_1b9c5d016_Data> _field_Data;
	

	inline bool operator==(_1b9c5e15a_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1b9c5e15a_Value _other) { return !this->operator==(_other); }


};
struct _1b9c5ec0a_Eval {
	jule::Ptr<_1b9bd23b9_Sema> _field_s;
	jule::Trait<_1b9cacc14_Lookup> _field_lookup;
	jule::Ptr<_1b9c8d1cd_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_1b9c09611_Var> _field_owner;
	jule::Ptr<_1b9b3b587_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	inline bool operator==(_1b9c5ec0a_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1b9c5ec0a_Eval _other) { return !this->operator==(_other); }


};
struct _1b9c7d19b_unaryEval {
	jule::Ptr<_1b9c5ec0a_Eval> _field_e;
	jule::Ptr<_1b9c5d016_Data> _field_d;
	jule::Ptr<_1b9b1eba8_UnaryExpr> _field_u;
	

	inline bool operator==(_1b9c7d19b_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1b9c7d19b_unaryEval _other) { return !this->operator==(_other); }


};
struct _1b9c80137_binaryEval {
	jule::Ptr<_1b9c5ec0a_Eval> _field_e;
	jule::Ptr<_1b9c5d016_Data> _field_l;
	jule::Ptr<_1b9c5d016_Data> _field_r;
	jule::Ptr<_1b9b032eb_Token> _field_op;
	

	inline bool operator==(_1b9c80137_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1b9c80137_binaryEval _other) { return !this->operator==(_other); }


};
struct _1b9c8b7e7_InsGeneric {
	jule::Ptr<_1b9c8d1cd_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1b9c8d1cd_TypeKind>> _field_Constraint;
	


};
struct _1b9c8c3db_TypeAlias {
	jule::Ptr<_1b9b287d8_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1b9c953a0_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1b9c8c3db_TypeAlias>> _field_Generics;
	


};
struct _1b9c8d1cd_TypeKind {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait<_1b9c8cc27_Kind> _field_Kind;
	

	inline bool operator==(_1b9c8d1cd_TypeKind _other) {
		return 
			this->_field_BindIdent == _other._field_BindIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b9c8d1cd_TypeKind _other) { return !this->operator==(_other); }


};
struct _1b9c953a0_TypeSymbol {
	jule::Ptr<_1b9b187b7_TypeDecl> _field_Decl;
	jule::Ptr<_1b9c8d1cd_TypeKind> _field_Kind;
	

	inline bool operator==(_1b9c953a0_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b9c953a0_TypeSymbol _other) { return !this->operator==(_other); }


};
struct _1b9c95ca7_Prim {
	jule::Str _field_Kind;
	

	inline bool operator==(_1b9c95ca7_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b9c95ca7_Prim _other) { return !this->operator==(_other); }


};
struct _1b9c997d3_Sptr {
	jule::Ptr<_1b9c8d1cd_TypeKind> _field_Elem;
	

	inline bool operator==(_1b9c997d3_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1b9c997d3_Sptr _other) { return !this->operator==(_other); }


};
struct _1b9c9a2a6_Slc {
	jule::Ptr<_1b9c8d1cd_TypeKind> _field_Elem;
	

	inline bool operator==(_1b9c9a2a6_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1b9c9a2a6_Slc _other) { return !this->operator==(_other); }


};
struct _1b9c9ad9a_Tuple {
	jule::Slice<jule::Ptr<_1b9c8d1cd_TypeKind>> _field_Types;
	


};
struct _1b9c9b94a_Map {
	jule::Ptr<_1b9c8d1cd_TypeKind> _field_Key;
	jule::Ptr<_1b9c8d1cd_TypeKind> _field_Val;
	

	inline bool operator==(_1b9c9b94a_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1b9c9b94a_Map _other) { return !this->operator==(_other); }


};
struct _1b9c9c5c7_Arr {
	jule::Bool _field_Auto = false;
	jule::I32 _field_N = 0;
	jule::Ptr<_1b9c8d1cd_TypeKind> _field_Elem;
	

	inline bool operator==(_1b9c9c5c7_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1b9c9c5c7_Arr _other) { return !this->operator==(_other); }


};
struct _1b9c9d09a_Ptr {
	jule::Ptr<_1b9c8d1cd_TypeKind> _field_Elem;
	

	inline bool operator==(_1b9c9d09a_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1b9c9d09a_Ptr _other) { return !this->operator==(_other); }


};
struct _1b9c9e09b_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	inline bool operator==(_1b9c9e09b_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1b9c9e09b_referencer _other) { return !this->operator==(_other); }


};
struct _1b9ca008b_typeChecker {
	jule::Ptr<_1b9bd23b9_Sema> _field_s;
	jule::Trait<_1b9cacc14_Lookup> _field_rootLookup;
	jule::Trait<_1b9cacc14_Lookup> _field_lookup;
	jule::Ptr<_1b9c9e09b_referencer> _field_referencer;
	jule::Ptr<_1b9b5531a_ReferenceStack> _field_refers;
	jule::Ptr<_1b9b032eb_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1b9b259c2_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1b9c8d1cd_TypeKind>>* _field_ignoredGenerics = nullptr;
	jule::Slice<jule::Ptr<_1b9c8c3db_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk = true;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_1b9c8c3db_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1b9c8c3db_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	


};
struct _1b9ca7c20_identTypeLookup {
	

	inline bool operator==(_1b9ca7c20_identTypeLookup _other) { return true; }

	inline bool operator!=(_1b9ca7c20_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1ba79de1e_FileInfo {
	jule::Ptr<_1b9b1692a_Ast> _field_Ast;
	jule::Slice<_23d21115a_Log> _field_Errors;
	


};
struct _1ba7e760a_stmt {
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	


};
struct _1ba7e7e9b_scopeParser {
	jule::Ptr<_1ba81aed0_parser> _field_p;
	jule::Ptr<_1b9b287d8_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1ba7e760a_stmt>> _field_stmts;
	jule::I32 _field_pos = 0;
	


};
struct _1ba80556e_exprBuilder {
	jule::Ptr<_1ba81aed0_parser> _field_p;
	

	inline bool operator==(_1ba80556e_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1ba80556e_exprBuilder _other) { return !this->operator==(_other); }


};
struct _1ba817839_assignInfo {
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _field_l;
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _field_r;
	jule::Ptr<_1b9b032eb_Token> _field_setter;
	jule::Bool _field_ok = false;
	


};
struct _1ba81aed0_parser {
	jule::Ptr<_1b9b1692a_Ast> _field_ast;
	jule::Slice<jule::Ptr<_1b9b17bd4_Directive>> _field_directives;
	jule::Slice<_23d21115a_Log> _field_errors;
	jule::Ptr<_1ba80556e_exprBuilder> _field_ep;
	


};
struct _1ba82cd49_typeBuilder {
	jule::Ptr<_1ba81aed0_parser> _field_p;
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _field_tokens;
	jule::I32* _field_i = nullptr;
	jule::Bool _field_err = false;
	


};
struct _1ba099d47_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str::lit("clang", 5);
	jule::Str _field_CppStd = jule::Str::lit("cpp14", 5);
	

	inline bool operator==(_1ba099d47_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_1ba099d47_CompileInfo _other) { return !this->operator==(_other); }


};
struct _1ba09b2ee_directiveEval {
	jule::Slice<_23d21115a_Log> _field_logs;
	jule::Ptr<_1b9b17bd4_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1ba831e80_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1b9bb1200_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1ba837194_OrderedDefines {
	jule::Slice<jule::Ptr<_1b9b393a9_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1b9c09611_Var>> _field_Globals;
	


};
struct _1ba837408_defineOrderer {
	

	inline bool operator==(_1ba837408_defineOrderer _other) { return true; }

	inline bool operator!=(_1ba837408_defineOrderer _other) { return !this->operator==(_other); }


};
struct _1ba963974_liveTable {
	jule::Slice<jule::Ptr<_1b9c09611_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1b9b5216e_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1b9b3c137_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1b9b62514_Trait>> _field_traits;
	


};
struct _1c7661269_scopeDeadCode {
	jule::Ptr<_1c7661269_scopeDeadCode> _field_parent;
	jule::Ptr<_1b9b8ecc2_Scope> _field_s;
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I32 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1b9b92665_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1b9b92a3e_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	inline bool operator==(_1c7661269_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1c7661269_scopeDeadCode _other) { return !this->operator==(_other); }


};
struct _1c76654c1_exprDeadCode {
	jule::Ptr<_1c7661269_scopeDeadCode> _field_s;
	

	inline bool operator==(_1c76654c1_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1c76654c1_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _1b9d8b40d_SwapExprModel {
	jule::Ptr<_1b9c5d016_Data> _field_Left;
	jule::Ptr<_1b9c5d016_Data> _field_Right;
	

	inline bool operator==(_1b9d8b40d_SwapExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1b9d8b40d_SwapExprModel _other) { return !this->operator==(_other); }


};
struct _1b9d8b7d7_EmptyCompareExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Neg = false;
	

	inline bool operator==(_1b9d8b7d7_EmptyCompareExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Neg == _other._field_Neg;
	}

	inline bool operator!=(_1b9d8b7d7_EmptyCompareExprModel _other) { return !this->operator==(_other); }


};
struct _1b9d8bad4_RefExprModel {
	jule::Ptr<_1b9c09611_Var> _field_Var;
	

	inline bool operator==(_1b9d8bad4_RefExprModel _other) {
		return 
			this->_field_Var == _other._field_Var;
	}

	inline bool operator!=(_1b9d8bad4_RefExprModel _other) { return !this->operator==(_other); }


};
struct _1b9d8c112_StrCompExprModel {
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Ptr<_1ec682ce3_Const> _field_Right;
	jule::Bool _field_NotEq = false;
	

	inline bool operator==(_1b9d8c112_StrCompExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_NotEq == _other._field_NotEq;
	}

	inline bool operator!=(_1b9d8c112_StrCompExprModel _other) { return !this->operator==(_other); }


};
struct _1b9d8c695_MutSlicingExprModel {
	jule::Ptr<_1b9b032eb_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1b9d8c695_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1b9d8c695_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1b9d8c992_UnsafeBinopExprModel {
	jule::Ptr<_1b9b41526_BinopExprModel> _field_Node;
	

	inline bool operator==(_1b9d8c992_UnsafeBinopExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1b9d8c992_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _1b9d8cc8e_UnsafeIndexingExprModel {
	jule::Ptr<_1b9b43d86_IndexingExprModel> _field_Node;
	

	inline bool operator==(_1b9d8cc8e_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1b9d8cc8e_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1b9d8d1bd_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_1b9b438d0_SliceExprModel> _field_Elems;
	

	inline bool operator==(_1b9d8d1bd_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1b9d8d1bd_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1b9d8d597_AppendToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Slice = jule::Any(nullptr);
	

	inline bool operator==(_1b9d8d597_AppendToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Slice == _other._field_Slice;
	}

	inline bool operator!=(_1b9d8d597_AppendToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1b9d8d894_InlineStdInternalNosafeStobs {
	jule::Any _field_Str = jule::Any(nullptr);
	

	inline bool operator==(_1b9d8d894_InlineStdInternalNosafeStobs _other) {
		return 
			this->_field_Str == _other._field_Str;
	}

	inline bool operator!=(_1b9d8d894_InlineStdInternalNosafeStobs _other) { return !this->operator==(_other); }


};
struct _1b9d8ea3d_scopeOptimizer {
	jule::I32 _field_i = 0;
	jule::Ptr<_1b9b8ecc2_Scope> _field_scope;
	

	inline bool operator==(_1b9d8ea3d_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1b9d8ea3d_scopeOptimizer _other) { return !this->operator==(_other); }


};
struct _1b9d95c20_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	

	inline bool operator==(_1b9d95c20_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1b9d95c20_exprOptimizer _other) { return !this->operator==(_other); }


};
struct _1ba838c9a_stdCacheData {
	jule::Ptr<_1b9b5216e_FnIns> _field_f;
	jule::Fn<void(_1b9d95c20_exprOptimizer*,_1ba838c9a_stdCacheData*,jule::Ptr<_1b9b43506_FnCallExprModel>*)> _field_do;
	


};
struct _1c766c880_Optimizer {
	jule::Ptr<_1ba834944_IR> _field_ir;
	

	inline bool operator==(_1c766c880_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1c766c880_Optimizer _other) { return !this->operator==(_other); }


};
struct _1c76958ca_AnsiEscape {
	

	inline bool operator==(_1c76958ca_AnsiEscape _other) { return true; }

	inline bool operator!=(_1c76958ca_AnsiEscape _other) { return !this->operator==(_other); }


};
struct _1c7697008_Logger {
	

	inline bool operator==(_1c7697008_Logger _other) { return true; }

	inline bool operator!=(_1c7697008_Logger _other) { return !this->operator==(_other); }


};
struct _1c8034e39_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	inline bool operator==(_1c8034e39_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1c8034e39_AbsTime _other) { return !this->operator==(_other); }


};
struct _1c8035610_Time {
	jule::U64 _field_sec = 0;
	

	inline bool operator==(_1c8035610_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1c8035610_Time _other) { return !this->operator==(_other); }


};
struct _1c7e58577_scopeCoder {
	jule::Ptr<_1c803eaae_ObjectCoder> _field_oc;
	

	inline bool operator==(_1c7e58577_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1c7e58577_scopeCoder _other) { return !this->operator==(_other); }


};
struct _1c7e62790_exprCoder {
	jule::Ptr<_1c803eaae_ObjectCoder> _field_oc;
	

	inline bool operator==(_1c7e62790_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1c7e62790_exprCoder _other) { return !this->operator==(_other); }


};
struct _1c7e78036_TestCoder {
	jule::Ptr<_1b9b3c137_StructIns> _field_t;
	jule::Ptr<_1b9b4e26a_Fn> _field_tmReset;
	jule::Ptr<_1b9b4e26a_Fn> _field_tmFailed;
	jule::Ptr<_1b9b4e26a_Fn> _field_tmSkipped;
	jule::Ptr<_1c803eaae_ObjectCoder> _field_oc;
	

	inline bool operator==(_1c7e78036_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1c7e78036_TestCoder _other) { return !this->operator==(_other); }


};
struct _1c7e7ac1a_identCoder {
	

	inline bool operator==(_1c7e7ac1a_identCoder _other) { return true; }

	inline bool operator!=(_1c7e7ac1a_identCoder _other) { return !this->operator==(_other); }


};
struct _1c803d096_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	inline bool operator==(_1c803d096_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1c803d096_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1c803d66d_traitHash {
	jule::Ptr<_1b9b62514_Trait> _field_t;
	jule::Str _field_ti;
	jule::Ptr<_1b9b3c137_StructIns> _field_s;
	jule::I32 _field_i = 0;
	

	inline bool operator==(_1c803d66d_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_ti == _other._field_ti &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1c803d66d_traitHash _other) { return !this->operator==(_other); }


};
struct _1c803da47_traitCast {
	jule::Ptr<_1b9b62514_Trait> _field_t1;
	jule::Ptr<_1b9b62514_Trait> _field_t2;
	

	inline bool operator==(_1c803da47_traitCast _other) {
		return 
			this->_field_t1 == _other._field_t1 &&
			this->_field_t2 == _other._field_t2;
	}

	inline bool operator!=(_1c803da47_traitCast _other) { return !this->operator==(_other); }


};
struct _1c804dc66_customType {
	jule::Str _field_kind;
	

	inline bool operator==(_1c804dc66_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1c804dc66_customType _other) { return !this->operator==(_other); }


};
struct _1c804e86b_typeCoder {
	jule::Ptr<_1c803eaae_ObjectCoder> _field_oc;
	jule::Ptr<_1c8057643_resultCoder> _field_rc;
	

	inline bool operator==(_1c804e86b_typeCoder _other) {
		return 
			this->_field_oc == _other._field_oc &&
			this->_field_rc == _other._field_rc;
	}

	inline bool operator!=(_1c804e86b_typeCoder _other) { return !this->operator==(_other); }


};
struct _1c8057643_resultCoder {
	jule::Ptr<_1c804e86b_typeCoder> _field_tc;
	

	inline bool operator==(_1c8057643_resultCoder _other) {
		return 
			this->_field_tc == _other._field_tc;
	}

	inline bool operator!=(_1c8057643_resultCoder _other) { return !this->operator==(_other); }


};
struct _1cb4dbb90_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	inline bool operator==(_1cb4dbb90_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1cb4dbb90_Flag _other) { return !this->operator==(_other); }


};struct _1cb4e07dc_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	inline bool operator==(_1cb4e07dc_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1cb4e07dc_Flag _other) { return !this->operator==(_other); }


};struct _1cb4e3ed8_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	inline bool operator==(_1cb4e3ed8_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1cb4e3ed8_Flag _other) { return !this->operator==(_other); }


};struct _1cb4e7728_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	inline bool operator==(_1cb4e7728_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1cb4e7728_Flag _other) { return !this->operator==(_other); }


};struct _1cb4eae24_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	inline bool operator==(_1cb4eae24_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1cb4eae24_Flag _other) { return !this->operator==(_other); }


};
struct _1c80c44c3_FlagSet {
	jule::Slice<jule::Trait<_1c80c2922_CommonFlag>> _field_flags;
	


};
struct _1c80c6e54_argParser {
	_1c80c44c3_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I32 _field_i = 0;
	


};
struct _1c803eaae_ObjectCoder {
	_23d16295d_StrBuilder _field_Obj;
	_23d16295d_StrBuilder _field_resultDecls;
	_23d16295d_StrBuilder _field_anyObj;
	jule::Ptr<_1ba834944_IR> _field_ir;
	_1c803d096_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1c803d66d_traitHash>> _field_tmap;
	jule::Slice<jule::U8> _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_1b9c8d1cd_TypeKind>> _field_anyTypeMap;
	jule::Slice<_1c803da47_traitCast> _field_traitCastMap;
	jule::Ptr<_1c7e62790_exprCoder> _field_ec;
	jule::Ptr<_1c7e58577_scopeCoder> _field_sc;
	jule::Ptr<_1c804e86b_typeCoder> _field_tc;
	jule::I32 _field_headPos = 0;
	jule::I32 _field_declPos = 0;
	


};
struct _1ba963d5e_ObjectDeadCode {
	_1ba963974_liveTable _field_live;
	jule::Ptr<_1ba834944_IR> _field_ir;
	


};
struct _1ba834944_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1b9bb4126_Package> _field_Main;
	jule::Slice<jule::Ptr<_1b9bb1200_ImportInfo>> _field_Used;
	_1ba837194_OrderedDefines _field_Ordered;
	


};
struct _1b9b3c137_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_1b9b393a9_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1b9c8b7e7_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1b9b3b587_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1b9c09611_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1b9b4e26a_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_1b9b5531a_ReferenceStack> _field_Refers;
	_1b9b38496_Operators _field_Operators;
	


};
struct _23d2c02e6_Cmd {
	_23d31ea2c_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	


};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1b9c5d016_Data__jule_tuple_x_1b9c5d016_Data {
	jule::Ptr<_1b9c5d016_Data> __jule_result_arg0;
	jule::Ptr<_1b9c5d016_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1b9c5d016_Data__jule_tuple_bool {
	jule::Ptr<_1b9c5d016_Data> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1b9b305d1_Case__jule_tuple_bool {
	jule::Ptr<_1b9b305d1_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1b9b305d1_Case__jule_tuple_x_1b9b2e437_Else {
	jule::Slice<jule::Ptr<_1b9b305d1_Case>> __jule_result_arg0;
	jule::Ptr<_1b9b2e437_Else> __jule_result_arg1;
};
struct __jule_tuple__1b9b27e25_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1b9b27265_AssignSt__jule_tuple_bool {
	jule::Ptr<_1b9b27265_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1b9b187b7_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1b9b187b7_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1b9b1b6aa_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1b9b1b6aa_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1b9b1692a_Ast__jule_tuple_s_23d21115a_Log {
	jule::Slice<jule::Ptr<_1b9b1692a_Ast>> __jule_result_arg0;
	jule::Slice<_23d21115a_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_23d21115a_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_23d21115a_Log> __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ba834944_IR__jule_tuple_s_23d21115a_Log {
	jule::Ptr<_1ba834944_IR> __jule_result_arg0;
	jule::Slice<_23d21115a_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__1ebe8a0bd_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I32 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__1ebe8a0bd_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__1ebe8a0bd_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::I32 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__1ebe8a0bd_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::I32 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I32 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1b9c57ce1_SymbolTable__jule_tuple_s_23d21115a_Log {
	jule::Ptr<_1b9c57ce1_SymbolTable> __jule_result_arg0;
	jule::Slice<_23d21115a_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1b9bb4126_Package__jule_tuple_s_23d21115a_Log {
	jule::Ptr<_1b9bb4126_Package> __jule_result_arg0;
	jule::Slice<_23d21115a_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1b9b1692a_Ast__jule_tuple_s_23d21115a_Log {
	jule::Ptr<_1b9b1692a_Ast> __jule_result_arg0;
	jule::Slice<_23d21115a_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1b9b032eb_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1b9b032eb_Token__jule_tuple_sx_1b9b032eb_Token {
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1b9b032eb_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_ssx_1b9b032eb_Token__jule_tuple_s_23d21115a_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>> __jule_result_arg0;
	jule::Slice<_23d21115a_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline _23d16295d_StrBuilder static__23d162c7c_New(jule::I32);
inline void _23d16b34b_Write(_23d16295d_StrBuilder*, jule::Slice<jule::U8>);
inline void _23d16b604_WriteStr(_23d16295d_StrBuilder*, jule::Str);
inline void _23d16b8ac_WriteByte(_23d16295d_StrBuilder*, jule::U8);
inline jule::Str _23d16bdeb_Str(_23d16295d_StrBuilder*);
inline void _23d16c0e9_Clear(_23d16295d_StrBuilder*);
inline jule::I32 _23d16c380_Len(_23d16295d_StrBuilder*);
inline jule::Slice<jule::U8> _23d16c89c_Buf(_23d16295d_StrBuilder*);
inline void _23d16cb55_SetBuf(_23d16295d_StrBuilder*, jule::Slice<jule::U8>);
inline jule::U8 _23d16d936_index(_23d16d4d5_lazyBuff*, jule::I32);
inline void _23d16dbde_append(_23d16d4d5_lazyBuff*, jule::U8);
inline jule::Str _23d16de75_string(_23d16d4d5_lazyBuff*);
inline jule::Exceptional<jule::Slice<jule::Ptr<_23bc9be5b_DirEntry>>> static__23d172c8c_Read(jule::Str);
inline jule::VoidExceptional static__23d172ebd_Create(jule::Str);
inline jule::VoidExceptional static__23d1731ee_Remove(jule::Str);
inline jule::Exceptional<jule::Ptr<_23bca7d8a_File>> static__23bc9ad7d_Open(jule::Str, jule::I32, jule::I32);
inline jule::VoidExceptional static__23bc9b0ae_Remove(jule::Str);
inline jule::Exceptional<jule::I32> _23bc9b543_Write(_23bca7d8a_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I32> _23bc9b884_Read(_23bca7d8a_File*, jule::Slice<jule::U8>);
inline jule::Ptr<_23bca7d8a_File> static__23bca82b9_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_23bca7d8a_File>> static__23bca8583_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__23bca884c_Read(jule::Str);
inline jule::VoidExceptional static__23bca8be3_Write(jule::Str, jule::Slice<jule::U8>, jule::I32);
inline jule::VoidExceptional _23bca9b28_Close(_23bca7d8a_File*);
inline jule::Exceptional<jule::Ptr<_23bcaa684_Status>> static__23bc9c940_Of(jule::Str);
inline jule::Bool _23bcaaa5d_IsDir(_23bcaa684_Status*);
inline jule::Bool _23bcaace4_IsReg(_23bcaa684_Status*);
inline jule::U32 _23bcab07a_Size(_23bcaa684_Status*);
inline jule::Bool _1ec664b4e_set(_1ec66d284_decimal*, jule::Slice<jule::U8>);
inline __jule_tuple_u64__jule_tuple_bool _1ec664e90_floatBits(_1ec66d284_decimal*, _1ec65998a_floatInfo*);
inline void _1ec66d63b_assign(_1ec66d284_decimal*, jule::U64);
inline void _1ec66d8e4_shift(_1ec66d284_decimal*, jule::I32);
inline void _1ec66db9c_roundDown(_1ec66d284_decimal*, jule::I32);
inline void _1ec66de55_roundUp(_1ec66d284_decimal*, jule::I32);
inline void _1ec66e20d_round(_1ec66d284_decimal*, jule::I32);
inline jule::U64 _1ec66e494_roundedInteger(_1ec66d284_decimal*);
inline jule::Ptr<_1ec682ce3_Const> static__1ec683233_NewI64(jule::I64);
inline jule::Ptr<_1ec682ce3_Const> static__1ec6834ec_NewU64(jule::U64);
inline jule::Ptr<_1ec682ce3_Const> static__1ec6837b6_NewBool(jule::Bool);
inline jule::Ptr<_1ec682ce3_Const> static__1ec683a80_NewStr(jule::Str);
inline jule::Ptr<_1ec682ce3_Const> static__1ec683d49_NewF64(jule::F64);
inline jule::Ptr<_1ec682ce3_Const> static__1ec684058_NewNil(void);
inline jule::I64 _1ec6846b8_ReadI64(_1ec682ce3_Const*);
inline jule::U64 _1ec68494e_ReadU64(_1ec682ce3_Const*);
inline jule::Bool _1ec684bd5_ReadBool(_1ec682ce3_Const*);
inline jule::Str _1ec684e6b_ReadStr(_1ec682ce3_Const*);
inline jule::F64 _1ec685202_ReadF64(_1ec682ce3_Const*);
inline jule::I64 _1ec685488_AsI64(_1ec682ce3_Const*);
inline jule::U64 _1ec68571e_AsU64(_1ec682ce3_Const*);
inline jule::F64 _1ec6859a5_AsF64(_1ec682ce3_Const*);
inline void _1ec685c5d_SetI64(_1ec682ce3_Const*, jule::I64);
inline void _1ec686016_SetU64(_1ec682ce3_Const*, jule::U64);
inline void _1ec6862be_SetBool(_1ec682ce3_Const*, jule::Bool);
inline void _1ec686577_SetStr(_1ec682ce3_Const*, jule::Str);
inline void _1ec686830_SetF64(_1ec682ce3_Const*, jule::F64);
inline jule::Bool _1ec686cb4_IsI64(_1ec682ce3_Const*);
inline jule::Bool _1ec68704a_IsU64(_1ec682ce3_Const*);
inline jule::Bool _1ec6872d1_IsBool(_1ec682ce3_Const*);
inline jule::Bool _1ec687567_IsStr(_1ec682ce3_Const*);
inline jule::Bool _1ec6877ed_IsF64(_1ec682ce3_Const*);
inline jule::Bool _1ec687a84_IsNil(_1ec682ce3_Const*);
inline jule::Bool _1ec688216_And(_1ec682ce3_Const*, _1ec682ce3_Const);
inline jule::Bool _1ec688557_Or(_1ec682ce3_Const*, _1ec682ce3_Const);
inline jule::Bool _1ec6899ed_Add(_1ec682ce3_Const*, _1ec682ce3_Const);
inline jule::Bool _1ec689d3e_Sub(_1ec682ce3_Const*, _1ec682ce3_Const);
inline jule::Bool _1ec68a180_Mul(_1ec682ce3_Const*, _1ec682ce3_Const);
inline jule::Bool _1ec68a4c1_Div(_1ec682ce3_Const*, _1ec682ce3_Const);
inline jule::Bool _1ec68a812_Mod(_1ec682ce3_Const*, _1ec682ce3_Const);
inline jule::Bool _1ec68ab53_BitwiseAnd(_1ec682ce3_Const*, _1ec682ce3_Const);
inline jule::Bool _1ec68ae94_BitwiseOr(_1ec682ce3_Const*, _1ec682ce3_Const);
inline jule::Bool _1ec68b2d5_Xor(_1ec682ce3_Const*, _1ec682ce3_Const);
inline jule::Bool _1ec68b626_Lshift(_1ec682ce3_Const*, _1ec682ce3_Const);
inline jule::Bool _1ec68b967_Rshift(_1ec682ce3_Const*, _1ec682ce3_Const);
inline jule::U8 _1b9b03670_Prec(_1b9b032eb_Token*);
inline void _1b9b08ea0_Fill(_1b9b08ab5_File*, jule::Slice<jule::U8>);
inline jule::Str _1b9b09236_Dir(_1b9b08ab5_File*);
inline jule::Str _1b9b094bc_Name(_1b9b08ab5_File*);
inline jule::Str _1b9b09a94_GetRow(_1b9b08ab5_File*, jule::I32);
inline void _1b9b12382_pushErr(_1b9b11cee_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _1b9b128e3_lex(_1b9b11cee_lex*);
inline jule::Str _1b9b12c34_id(_1b9b11cee_lex*, jule::Slice<jule::U8>*);
inline jule::Slice<jule::U8> _1b9b12eba_resume(_1b9b11cee_lex*);
inline void _1b9b13273_lexLineComment(_1b9b11cee_lex*, jule::Ptr<_1b9b032eb_Token>*);
inline void _1b9b1352b_lexRangeComment(_1b9b11cee_lex*, jule::Ptr<_1b9b032eb_Token>*);
inline jule::Str _1b9b1386c_num(_1b9b11cee_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1b9b13bad_escapeSeq(_1b9b11cee_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1b9b140a9_getRune(_1b9b11cee_lex*, jule::Slice<jule::U8>*, jule::Bool);
inline jule::Str _1b9b143ea_lexRune(_1b9b11cee_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1b9b14681_lexStr(_1b9b11cee_lex*);
inline void _1b9b14b15_newLine(_1b9b11cee_lex*);
inline jule::Bool _1b9b15176_isOp(_1b9b11cee_lex*, jule::Slice<jule::U8>*, jule::Str, jule::U32, jule::Ptr<_1b9b032eb_Token>*);
inline jule::Bool _1b9b15572_lexBasicOps(_1b9b11cee_lex*, jule::Slice<jule::U8>, jule::Ptr<_1b9b032eb_Token>*);
inline jule::Bool _1b9b1596d_lexId(_1b9b11cee_lex*, jule::Slice<jule::U8>*, jule::Ptr<_1b9b032eb_Token>*);
inline jule::Bool _1b9b15d69_lexNum(_1b9b11cee_lex*, jule::Slice<jule::U8>*, jule::Ptr<_1b9b032eb_Token>*);
inline jule::Ptr<_1b9b032eb_Token> _1b9b16100_token(_1b9b11cee_lex*);
inline jule::Bool _1b9b1a654_IsUnsafe(_1b9b1a2e1_PtrTypeDecl*);
inline jule::Bool _1b9b1ade6_AutoSized(_1b9b1aa83_ArrTypeDecl*);
inline jule::Bool _1b9b21b99_Unhandled(_1b9b21825_FnCallExpr*);
inline jule::Bool _1b9b21e30_Ignored(_1b9b21825_FnCallExpr*);
inline jule::Bool _1b9b29399_IsSelf(_1b9b29025_ParamDecl*);
inline jule::Bool _1b9b2a7da_IsAnon(_1b9b2a477_FnDecl*);
inline jule::Bool _1b9b2c435_IsInf(_1b9b2c0c2_Iter*);
inline jule::Bool _1b9b2cc60_IsWhileNext(_1b9b2c8ec_WhileKind*);
inline jule::Ptr<_1b9b3b587_FieldIns> _1b9b3683a_instance(jule::Ptr<_1b9b364b6_Field>);
inline jule::Ptr<_1b9b3c137_StructIns> _1b9b3981b_instance(jule::Ptr<_1b9b393a9_Struct>);
inline jule::Ptr<_1b9b3c137_StructIns> _1b9b39b29_appendInstance(_1b9b393a9_Struct*, jule::Ptr<_1b9b3c137_StructIns>*);
inline jule::Ptr<_1b9b4e26a_Fn> _1b9b3a025_FindMethod(_1b9b393a9_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1b9c09611_Var> _1b9b3a366_FindStatic(_1b9b393a9_Struct*, jule::Str);
inline jule::Ptr<_1b9b364b6_Field> _1b9b3a6a7_FindField(_1b9b393a9_Struct*, jule::Str);
inline jule::Bool _1b9b3a9e8_IsImplements(_1b9b393a9_Struct*, jule::Ptr<_1b9b62514_Trait>);
inline jule::Bool _1b9b3ad39_IsUses(_1b9b393a9_Struct*, jule::Ptr<_1b9b393a9_Struct>);
inline jule::Ptr<_1b9b511c3_ParamIns> _1b9b4cb2b_instance(jule::Ptr<_1b9b4c796_Param>);
inline jule::Bool _1b9b4cdb2_IsSelf(_1b9b4c796_Param*);
inline jule::Bool _1b9b4d148_IsRef(_1b9b4c796_Param*);
inline jule::Bool _1b9b4e6dd_IsVoid(_1b9b4e26a_Fn*);
inline jule::Bool _1b9b4e974_IsMethod(_1b9b4e26a_Fn*);
inline jule::Bool _1b9b4ec0a_IsEntryPoint(_1b9b4e26a_Fn*);
inline jule::Bool _1b9b4ee91_IsInit(_1b9b4e26a_Fn*);
inline jule::Bool _1b9b50227_IsAnon(_1b9b4e26a_Fn*);
inline jule::Bool _1b9b504ad_AnyVar(_1b9b4e26a_Fn*);
inline jule::Ptr<_1b9b5216e_FnIns> _1b9b50744_instanceForce(jule::Ptr<_1b9b4e26a_Fn>);
inline jule::Ptr<_1b9b5216e_FnIns> _1b9b509ca_instance(jule::Ptr<_1b9b4e26a_Fn>);
inline jule::Ptr<_1b9b5216e_FnIns> _1b9b50cd8_appendInstance(_1b9b4e26a_Fn*, jule::Ptr<_1b9b5216e_FnIns>*);
inline jule::Str _1b9b51536_Str(_1b9b511c3_ParamIns*);
inline jule::Str _1b9b524b0_Str(_1b9b5216e_FnIns*);
inline jule::Bool _1b9b52801_Equal(jule::Ptr<_1b9b5216e_FnIns>, jule::Ptr<_1b9c8d1cd_TypeKind>);
inline jule::Bool _1b9b52c96_EqualFn(jule::Ptr<_1b9b5216e_FnIns>, jule::Ptr<_1b9b5216e_FnIns>*);
inline jule::Bool _1b9b530d7_equalTrait(jule::Ptr<_1b9b5216e_FnIns>, jule::Ptr<_1b9b5216e_FnIns>*);
inline jule::Slice<jule::Ptr<_1b9c8d1cd_TypeKind>> _1b9b5336d_Types(_1b9b5216e_FnIns*);
inline jule::Bool _1b9b53604_IsBuiltin(_1b9b5216e_FnIns*);
inline jule::Bool _1b9b5388a_IsAnon(_1b9b5216e_FnIns*);
inline jule::Bool _1b9b53bcb_Same(_1b9b5216e_FnIns*, jule::Ptr<_1b9b5216e_FnIns>);
inline jule::Str _1b9b5401c_GetKindStr(_1b9b5216e_FnIns*, jule::Bool);
inline jule::Ptr<_1b9b5531a_ReferenceStack> static__1b9b55617_new(void);
inline jule::I32 _1b9b55a13_Len(_1b9b5531a_ReferenceStack*);
inline jule::Any _1b9b55d54_At(_1b9b5531a_ReferenceStack*, jule::I32);
inline void _1b9b5610c_Push(_1b9b5531a_ReferenceStack*, jule::Any);
inline jule::Bool _1ca2b3825_Exist(_1b9b5531a_ReferenceStack*, jule::Ptr<_1b9b5216e_FnIns>);
inline jule::Bool _1ca2ca30e_Exist(_1b9b5531a_ReferenceStack*, jule::Ptr<_1b9c09611_Var>);
inline jule::Bool _1ca383483_Exist(_1b9b5531a_ReferenceStack*, jule::Ptr<_1b9b3c137_StructIns>);
inline jule::Bool _1ca698b3e_Exist(_1b9b5531a_ReferenceStack*, jule::Ptr<_1b9b62514_Trait>);
inline void _1b9b5bc8e_pushErr(_1b9b5b3ed_symbolBuilder*, jule::Ptr<_1b9b032eb_Token>*, jule::Str, jule::Slice<jule::Any>);
inline void _1b9b5c520_pushSuggestion(_1b9b5b3ed_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1b9b5c91b_checkCppUseDeclPath(_1b9b5b3ed_symbolBuilder*, jule::Ptr<_1b9b31637_UseDecl>*, jule::Str*);
inline jule::Ptr<_1b9bb1200_ImportInfo> _1b9b5cc29_buildCppHeaderImport(_1b9b5b3ed_symbolBuilder*, jule::Ptr<_1b9b31637_UseDecl>*);
inline jule::Ptr<_1b9bb1200_ImportInfo> _1b9b5d06a_buildStdImport(_1b9b5b3ed_symbolBuilder*, jule::Ptr<_1b9b31637_UseDecl>*);
inline jule::Ptr<_1b9bb1200_ImportInfo> _1b9b5d3ab_buildIdentImport(jule::Ptr<_1b9b5b3ed_symbolBuilder>, jule::Ptr<_1b9b31637_UseDecl>*);
inline jule::Ptr<_1b9bb1200_ImportInfo> _1b9b5d6ec_buildImport(jule::Ptr<_1b9b5b3ed_symbolBuilder>, jule::Ptr<_1b9b31637_UseDecl>*);
inline jule::Bool _1b9b5da3d_checkDuplicateUseDecl(_1b9b5b3ed_symbolBuilder*, jule::Ptr<_1b9bb1200_ImportInfo>*);
inline void _1b9b5dda1_implImportSelections(_1b9b5b3ed_symbolBuilder*, jule::Ptr<_1b9bb1200_ImportInfo>*, jule::Ptr<_1b9b31637_UseDecl>*);
inline jule::Str _1b9b5e1e2_getAsLinkPath(jule::Ptr<_1b9b5b3ed_symbolBuilder>, jule::Str);
inline void _1b9b5e610_pushCycleError(jule::Ptr<_1b9b5b3ed_symbolBuilder>, jule::Ptr<_1b9b5b3ed_symbolBuilder>*, jule::Str, _23d16295d_StrBuilder*);
inline void _1b9b5ea2d_pushCrossCycleError(jule::Ptr<_1b9b5b3ed_symbolBuilder>, jule::Ptr<_1b9b5b3ed_symbolBuilder>*, jule::Ptr<_1b9bb1200_ImportInfo>*, jule::Ptr<_1b9b032eb_Token>*);
inline jule::Bool _1b9b5ee29_checkImportCycles(jule::Ptr<_1b9b5b3ed_symbolBuilder>, jule::Ptr<_1b9bb1200_ImportInfo>, jule::Ptr<_1b9b31637_UseDecl>*);
inline void _1b9b60347_checkPackageAccessibility(_1b9b5b3ed_symbolBuilder*, jule::Ptr<_1b9b31637_UseDecl>*, jule::Str*, jule::Str*);
inline jule::Bool _1b9b60743_importPackage(jule::Ptr<_1b9b5b3ed_symbolBuilder>, jule::Ptr<_1b9bb1200_ImportInfo>*, jule::Ptr<_1b9b31637_UseDecl>*);
inline jule::Ptr<_1b9bb1200_ImportInfo> _1b9b60a84_importUseDecl(jule::Ptr<_1b9b5b3ed_symbolBuilder>, jule::Ptr<_1b9b31637_UseDecl>*);
inline void _1b9b60c82_importUseDecls(jule::Ptr<_1b9b5b3ed_symbolBuilder>);
inline void _1b9b6103a_appendNode(_1b9b5b3ed_symbolBuilder*, _1b9b177b6_Node*);
inline void _1b9b61238_appendNodes(_1b9b5b3ed_symbolBuilder*);
inline void _1b9b614e1_pushDirectivePass(_1b9b5b3ed_symbolBuilder*, jule::Ptr<_1b9b17bd4_Directive>*);
inline void _1b9b616de_appendTopDirectives(_1b9b5b3ed_symbolBuilder*);
inline void _1b9b618dc_build(jule::Ptr<_1b9b5b3ed_symbolBuilder>);
inline jule::Str _1b9b628cc_Str(_1b9b62514_Trait*);
inline jule::Bool _1b9b62c1d_Equal(jule::Ptr<_1b9b62514_Trait>, jule::Ptr<_1b9c8d1cd_TypeKind>);
inline jule::Ptr<_1b9b4e26a_Fn> _1b9b631b3_FindMethod(_1b9b62514_Trait*, jule::Str);
inline jule::Ptr<_1b9b4e26a_Fn> _1b9b63845_findMethodInherit(_1b9b62514_Trait*, jule::Str*);
inline jule::Bool _1b9b64549_AutoExpr(_1b9b64192_EnumItem*);
inline jule::Str _1b9b65083_Str(_1b9b64c0e_Enum*);
inline jule::Bool _1b9b653c4_Equal(jule::Ptr<_1b9b64c0e_Enum>, jule::Ptr<_1b9c8d1cd_TypeKind>);
inline jule::Ptr<_1b9b64192_EnumItem> _1b9b65803_FindItem(_1b9b64c0e_Enum*, jule::Str);
inline jule::Str _1b9b6675a_Str(_1b9b66419_TypeEnum*);
inline jule::Bool _1b9b66a9b_Equal(jule::Ptr<_1b9b66419_TypeEnum>, jule::Ptr<_1b9c8d1cd_TypeKind>);
inline jule::Ptr<_1b9b65d42_TypeEnumItem> _1b9b66eca_FindItem(_1b9b66419_TypeEnum*, jule::Str);
inline jule::Str _1b9b68b7a_Str(_1b9b687b2_comptimeRange*);
inline jule::Bool _1b9b68ebb_Equal(jule::Ptr<_1b9b687b2_comptimeRange>, jule::Ptr<_1b9c8d1cd_TypeKind>);
inline jule::Str _1b9b69692_Str(_1b9b6931d_comptimeStructField*);
inline jule::Bool _1b9b699d3_Equal(jule::Ptr<_1b9b6931d_comptimeStructField>, jule::Ptr<_1b9c8d1cd_TypeKind>);
inline jule::Ptr<_1b9c5d016_Data> _1b9b6a000__Name(jule::Ptr<_1b9b6931d_comptimeStructField>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b6a3eb__Type(jule::Ptr<_1b9b6931d_comptimeStructField>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b6a7e7__Public(jule::Ptr<_1b9b6931d_comptimeStructField>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b6ab38_subIdent(jule::Ptr<_1b9b6931d_comptimeStructField>, jule::Str*);
inline jule::Str _1b9b6b353_Str(_1b9b6aebd_comptimeStructFields*);
inline jule::Bool _1b9b6b694_Equal(jule::Ptr<_1b9b6aebd_comptimeStructFields>, jule::Ptr<_1b9c8d1cd_TypeKind>);
inline void _1b9b6bb17_ready(_1b9b6aebd_comptimeStructFields*, jule::Ptr<_1b9c09611_Var>*, jule::Ptr<_1b9c09611_Var>*);
inline void _1b9b6c035_step(_1b9b6aebd_comptimeStructFields*, jule::I32, jule::Ptr<_1b9c09611_Var>*, jule::Ptr<_1b9c09611_Var>*);
inline jule::I32 _1b9b6c2bb_len(_1b9b6aebd_comptimeStructFields*);
inline jule::Str _1b9b6c94d_Str(_1b9b6c5c9_comptimeStatic*);
inline jule::Bool _1b9b6cc8e_Equal(jule::Ptr<_1b9b6c5c9_comptimeStatic>, jule::Ptr<_1b9c8d1cd_TypeKind>);
inline jule::Ptr<_1b9c5d016_Data> _1b9b6d2ab__Name(jule::Ptr<_1b9b6c5c9_comptimeStatic>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b6d6a7__Type(jule::Ptr<_1b9b6c5c9_comptimeStatic>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b6daa3__Public(jule::Ptr<_1b9b6c5c9_comptimeStatic>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b6dde4_subIdent(jule::Ptr<_1b9b6c5c9_comptimeStatic>, jule::Str*);
inline jule::Str _1b9b6e60e_Str(_1b9b6e28a_comptimeStatics*);
inline jule::Bool _1b9b6e950_Equal(jule::Ptr<_1b9b6e28a_comptimeStatics>, jule::Ptr<_1b9c8d1cd_TypeKind>);
inline void _1b9b6edc3_ready(_1b9b6e28a_comptimeStatics*, jule::Ptr<_1b9c09611_Var>*, jule::Ptr<_1b9c09611_Var>*);
inline void _1b9b702e1_step(_1b9b6e28a_comptimeStatics*, jule::I32, jule::Ptr<_1b9c09611_Var>*, jule::Ptr<_1b9c09611_Var>*);
inline jule::I32 _1b9b70577_len(_1b9b6e28a_comptimeStatics*);
inline jule::Str _1b9b70c09_Str(_1b9b70885_comptimeEnumField*);
inline jule::Bool _1b9b7104a_Equal(jule::Ptr<_1b9b70885_comptimeEnumField>, jule::Ptr<_1b9c8d1cd_TypeKind>);
inline jule::Ptr<_1b9c5d016_Data> _1b9b71545__Name(jule::Ptr<_1b9b70885_comptimeEnumField>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b71886_subIdent(jule::Ptr<_1b9b70885_comptimeEnumField>, jule::Str*);
inline jule::Str _1b9b72128_Str(_1b9b71b94_comptimeEnumFields*);
inline jule::Bool _1b9b72469_Equal(jule::Ptr<_1b9b71b94_comptimeEnumFields>, jule::Ptr<_1b9c8d1cd_TypeKind>);
inline void _1b9b72865_ready(_1b9b71b94_comptimeEnumFields*, jule::Ptr<_1b9c09611_Var>*, jule::Ptr<_1b9c09611_Var>*);
inline void _1b9b72c83_step(_1b9b71b94_comptimeEnumFields*, jule::I32, jule::Ptr<_1b9c09611_Var>*, jule::Ptr<_1b9c09611_Var>*);
inline jule::I32 _1b9b73019_len(_1b9b71b94_comptimeEnumFields*);
inline jule::Str _1b9b7369b_Str(_1b9b73327_comptimeParam*);
inline jule::Bool _1b9b739dc_Equal(jule::Ptr<_1b9b73327_comptimeParam>, jule::Ptr<_1b9c8d1cd_TypeKind>);
inline jule::Ptr<_1b9c5d016_Data> _1b9b7401a__Name(jule::Ptr<_1b9b73327_comptimeParam>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b74416__Type(jule::Ptr<_1b9b73327_comptimeParam>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b74812__Variadic(jule::Ptr<_1b9b73327_comptimeParam>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b74c0d__Reference(jule::Ptr<_1b9b73327_comptimeParam>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b7504e_subIdent(jule::Ptr<_1b9b73327_comptimeParam>, jule::Str*);
inline jule::Str _1b9b75912_Str(_1b9b7558d_comptimeParams*);
inline jule::Bool _1b9b75c53_Equal(jule::Ptr<_1b9b7558d_comptimeParams>, jule::Ptr<_1b9c8d1cd_TypeKind>);
inline void _1b9b761c6_ready(_1b9b7558d_comptimeParams*, jule::Ptr<_1b9c09611_Var>*, jule::Ptr<_1b9c09611_Var>*);
inline void _1b9b765e4_step(_1b9b7558d_comptimeParams*, jule::I32, jule::Ptr<_1b9c09611_Var>*, jule::Ptr<_1b9c09611_Var>*);
inline jule::I32 _1b9b7687a_len(_1b9b7558d_comptimeParams*);
inline jule::Str _1b9b7700c_Str(_1b9b76b88_comptimeTypeInfos*);
inline jule::Bool _1b9b7734d_Equal(jule::Ptr<_1b9b76b88_comptimeTypeInfos>, jule::Ptr<_1b9c8d1cd_TypeKind>);
inline void _1b9b777c1_ready(_1b9b76b88_comptimeTypeInfos*, jule::Ptr<_1b9c09611_Var>*, jule::Ptr<_1b9c09611_Var>*);
inline void _1b9b77bde_step(_1b9b76b88_comptimeTypeInfos*, jule::I32, jule::Ptr<_1b9c09611_Var>*, jule::Ptr<_1b9c09611_Var>*);
inline jule::I32 _1b9b77e75_len(_1b9b76b88_comptimeTypeInfos*);
inline jule::Str _1b9b78607_Str(_1b9b78283_comptimeTypeInfo*);
inline jule::Bool _1b9b78948_Equal(jule::Ptr<_1b9b78283_comptimeTypeInfo>, jule::Ptr<_1b9c8d1cd_TypeKind>);
inline jule::Ptr<_1b9c5d016_Data> _1b9b79097__Str(jule::Ptr<_1b9b78283_comptimeTypeInfo>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b79493__Kind(jule::Ptr<_1b9b78283_comptimeTypeInfo>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b7988e__Bits(jule::Ptr<_1b9b78283_comptimeTypeInfo>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b79c8a__Elem(jule::Ptr<_1b9b78283_comptimeTypeInfo>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b7a186__Size(jule::Ptr<_1b9b78283_comptimeTypeInfo>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b7a582__Key(jule::Ptr<_1b9b78283_comptimeTypeInfo>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b7a97d__Value(jule::Ptr<_1b9b78283_comptimeTypeInfo>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b7ad79__Fields(jule::Ptr<_1b9b78283_comptimeTypeInfo>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b7b275__Statics(jule::Ptr<_1b9b78283_comptimeTypeInfo>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b7b671__Public(jule::Ptr<_1b9b78283_comptimeTypeInfo>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b7ba6c__Binded(jule::Ptr<_1b9b78283_comptimeTypeInfo>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b7be68__Ordered(jule::Ptr<_1b9b78283_comptimeTypeInfo>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b7c364__Comparable(jule::Ptr<_1b9b78283_comptimeTypeInfo>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b7c760__Mutable(jule::Ptr<_1b9b78283_comptimeTypeInfo>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b7cb5b__Types(jule::Ptr<_1b9b78283_comptimeTypeInfo>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b7d057__Exceptional(jule::Ptr<_1b9b78283_comptimeTypeInfo>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b7d453__CanNil(jule::Ptr<_1b9b78283_comptimeTypeInfo>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b7d84e__RC(jule::Ptr<_1b9b78283_comptimeTypeInfo>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b7dc4a__Result(jule::Ptr<_1b9b78283_comptimeTypeInfo>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b7e146__Params(jule::Ptr<_1b9b78283_comptimeTypeInfo>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b7e487_subIdent(jule::Ptr<_1b9b78283_comptimeTypeInfo>, jule::Str*);
inline jule::Str _1b9b7eb19_Str(_1b9b7e795_comptimeValue*);
inline jule::Bool _1b9b7ee5a_Equal(jule::Ptr<_1b9b7e795_comptimeValue>, jule::Ptr<_1b9c8d1cd_TypeKind>);
inline jule::Ptr<_1b9c5d016_Data> _1b9b804aa__Unwrap(jule::Ptr<_1b9b7e795_comptimeValue>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b808a6__Type(jule::Ptr<_1b9b7e795_comptimeValue>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b80ca2__Lvalue(jule::Ptr<_1b9b7e795_comptimeValue>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b8119d__Mutable(jule::Ptr<_1b9b7e795_comptimeValue>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b81599__Const(jule::Ptr<_1b9b7e795_comptimeValue>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b81995__Field(jule::Ptr<_1b9b7e795_comptimeValue>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b81cd6_subIdent(jule::Ptr<_1b9b7e795_comptimeValue>, jule::Str*);
inline jule::Str _1b9b82468_Str(_1b9b820e4_comptimeFiles*);
inline jule::Bool _1b9b827a9_Equal(jule::Ptr<_1b9b820e4_comptimeFiles>, jule::Ptr<_1b9c8d1cd_TypeKind>);
inline void _1b9b82c2c_ready(_1b9b820e4_comptimeFiles*, jule::Ptr<_1b9c09611_Var>*, jule::Ptr<_1b9c09611_Var>*);
inline void _1b9b8314a_step(_1b9b820e4_comptimeFiles*, jule::I32, jule::Ptr<_1b9c09611_Var>*, jule::Ptr<_1b9c09611_Var>*);
inline jule::I32 _1b9b833d1_len(_1b9b820e4_comptimeFiles*);
inline jule::Str _1b9b83a63_Str(_1b9b836de_comptimeFile*);
inline jule::Bool _1b9b83da4_Equal(jule::Ptr<_1b9b836de_comptimeFile>, jule::Ptr<_1b9c8d1cd_TypeKind>);
inline jule::Ptr<_1b9c5d016_Data> _1b9b843c1__Path(jule::Ptr<_1b9b836de_comptimeFile>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b847bc__Name(jule::Ptr<_1b9b836de_comptimeFile>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b84bb8__Dir(jule::Ptr<_1b9b836de_comptimeFile>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b85009_subIdent(jule::Ptr<_1b9b836de_comptimeFile>, jule::Str*);
inline jule::Fn<jule::Bool(jule::Ptr<_1b9bd23b9_Sema>*,jule::Slice<jule::Ptr<_1b9c8c3db_TypeAlias>>*)> _1b9b87c54_readyFn(jule::Ptr<_1b9b87858_constraintChecker>);
inline jule::Bool _1b9b87eda_readyFi(jule::Ptr<_1b9b87858_constraintChecker>);
inline jule::Bool _1b9b88271_readySi(jule::Ptr<_1b9b87858_constraintChecker>);
inline jule::Bool _1b9b88507_ready(jule::Ptr<_1b9b87858_constraintChecker>);
inline jule::Bool _1b9b8878d_check(jule::Ptr<_1b9b87858_constraintChecker>);
inline jule::Bool _1b9b89c56_IsTraitImpl(_1b9b8988d_Impl*);
inline jule::Bool _1b9b89edc_IsStructImpl(_1b9b8988d_Impl*);
inline jule::Ptr<_1b9bb1200_ImportInfo> _1b9b9756b_SelectPackage(_1b9b970c6_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1b9bb1200_ImportInfo>)>);
inline jule::Ptr<_1b9c09611_Var> _1b9b97967_FindVar(_1b9b970c6_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1b9c8c3db_TypeAlias> _1b9b97d63_FindTypeAlias(_1b9b970c6_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1b9b393a9_Struct> _1b9b9825e_FindStruct(_1b9b970c6_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1b9b4e26a_Fn> _1b9b9865a_FindFn(_1b9b970c6_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1b9b62514_Trait> _1b9b9899b_FindTrait(_1b9b970c6_scopeChecker*, jule::Str);
inline jule::Ptr<_1b9b64c0e_Enum> _1b9b98cdc_FindEnum(_1b9b970c6_scopeChecker*, jule::Str);
inline jule::Ptr<_1b9b66419_TypeEnum> _1b9b9912d_FindTypeEnum(_1b9b970c6_scopeChecker*, jule::Str);
inline jule::Bool _1b9b99480_isUnsafe(jule::Ptr<_1b9b970c6_scopeChecker>);
inline jule::Bool _1b9b99716_isRoot(_1b9b970c6_scopeChecker*);
inline void _1b9b99914_stop(_1b9b970c6_scopeChecker*);
inline jule::Bool _1b9b99b9a_stopped(_1b9b970c6_scopeChecker*);
inline jule::Bool _1b9b99e31_isDeferred(jule::Ptr<_1b9b970c6_scopeChecker>);
inline jule::Ptr<_1b9b970c6_scopeChecker> _1b9b9a1b7_getRoot(jule::Ptr<_1b9b970c6_scopeChecker>);
inline jule::Ptr<_1b9b970c6_scopeChecker> _1b9b9a44d_getHardRoot(jule::Ptr<_1b9b970c6_scopeChecker>);
inline jule::Ptr<_1b9b92665_Label> _1b9b9a78e_findLabel(_1b9b970c6_scopeChecker*, jule::Str*);
inline jule::Ptr<_1b9b95b30_scopeLabel> _1b9b9aad0_findLabelScope(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Str*);
inline jule::Ptr<_1b9b95b30_scopeLabel> _1b9b9ae21_findLabelAll(_1b9b970c6_scopeChecker*, jule::Str*);
inline jule::Bool _1b9b9b31c_isDuplicatedIdent(_1b9b970c6_scopeChecker*, jule::Uintptr, jule::Str*);
inline void _1b9b9b5c5_checkVarDecl(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b2b555_VarDecl>);
inline void _1b9b9b87d_checkTypeAlias(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9c8c3db_TypeAlias>*);
inline void _1b9b9bb36_checkTypeAliasDecl(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b3012a_TypeAliasDecl>);
inline jule::Ptr<_1b9b8ecc2_Scope> _1b9b9bdbc_getChild(_1b9b970c6_scopeChecker*);
inline void _1b9b9c2da_checkChildSsc(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b287d8_ScopeTree>*, jule::Ptr<_1b9b8ecc2_Scope>*, jule::Ptr<_1b9b970c6_scopeChecker>*);
inline jule::Ptr<_1b9b8ecc2_Scope> _1b9b9c6d6_checkChildSc(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b287d8_ScopeTree>*, jule::Ptr<_1b9b970c6_scopeChecker>*);
inline jule::Ptr<_1b9b8ecc2_Scope> _1b9b9ca27_checkChild(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b287d8_ScopeTree>*);
inline void _1b9b9ccd0_checkAnonScope(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b287d8_ScopeTree>);
inline void _1b9b9d143_processErrorCall(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b49d37_BuiltinErrorCallExprModel>*, jule::Ptr<_1b9b032eb_Token>);
inline void _1b9b9d3eb_checkExpr(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b1caeb_Expr>);
inline jule::Ptr<_1b9b901e0_If> _1b9b9d73c_checkIf(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b2e05d_If>);
inline jule::Ptr<_1b9b904dc_Else> _1b9b9da7d_checkElse(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b2e437_Else>);
inline void _1b9b9dd36_checkConditional(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b2e8dd_Conditional>);
inline void _1b9b9e30e_checkIterScopeSsc(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Uintptr, jule::Ptr<_1b9b287d8_ScopeTree>, jule::Ptr<_1b9b8ecc2_Scope>*, jule::Ptr<_1b9b970c6_scopeChecker>);
inline jule::Ptr<_1b9b8ecc2_Scope> _1b9b9e7b5_checkIterScopeSc(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Uintptr, jule::Ptr<_1b9b287d8_ScopeTree>, jule::Ptr<_1b9b970c6_scopeChecker>);
inline jule::Ptr<_1b9b8ecc2_Scope> _1b9b9ebb1_checkIterScope(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Uintptr, jule::Ptr<_1b9b287d8_ScopeTree>*);
inline void _1b9b9ee69_checkInfIter(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b2c0c2_Iter>*);
inline void _1b9ba0222_checkWhileIter(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b2c0c2_Iter>*);
inline void _1b9ba0640_checkComptimeRangeIter(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b2c0c2_Iter>*, jule::Ptr<_1b9b91b09_RangeIter>*, jule::Ptr<_1b9c5d016_Data>*);
inline void _1b9ba08e8_checkRangeIter(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b2c0c2_Iter>*);
inline void _1b9ba0ba1_checkIter(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b2c0c2_Iter>);
inline jule::Bool _1b9ba0ee2_checkValidContLabel(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Uintptr);
inline jule::Bool _1b9ba1333_checkValidBreakLabel(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_1b9b91e8e_ContSt> _1b9ba1674_checkContValidScope(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b2daa7_ContSt>);
inline void _1b9ba192c_checkCont(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b2daa7_ContSt>);
inline void _1b9ba1bd5_checkLabel(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b25d9b_LabelSt>);
inline void _1b9ba1e8d_pushGoto(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b26275_GotoSt>);
inline void _1b9ba2246_checkPostfix(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b27265_AssignSt>);
inline jule::Bool _1b9ba2587_isNewAssignIdent(_1b9b970c6_scopeChecker*, jule::Str);
inline void _1b9ba2840_removeInteriorMutRisk(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Bool _1b9ba2ce6_checkStructureAssignOp(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b3c137_StructIns>*, jule::Ptr<_1b9b27265_AssignSt>*, jule::Ptr<_1b9c5d016_Data>*);
inline void _1b9ba309e_checkSingleAssign(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b27265_AssignSt>*);
inline void _1b9ba3632_processEndPartOfMultiAssign(_1b9b970c6_scopeChecker*, jule::Ptr<_1b9b93798_MultiAssign>*, jule::Ptr<_1b9b27265_AssignSt>*, jule::Ptr<_1b9b26bd2_AssignLeft>*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9c5d016_Data>*);
inline void _1b9ba38da_checkMultiAssign(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b27265_AssignSt>*);
inline void _1b9ba3b93_singleDeclAssign(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b27265_AssignSt>*);
inline void _1b9ba3e4b_checkAssignSt(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b27265_AssignSt>);
inline jule::Ptr<_1b9b8ecc2_Scope> _1b9ba4347_checkCaseScope(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b94a41_Case>*, jule::Ptr<_1b9b287d8_ScopeTree>*);
inline jule::Ptr<_1b9b94a41_Case> _1b9ba48a8_checkCase(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b93e08_Match>, jule::I32, jule::Ptr<_1b9b305d1_Case>, jule::Ptr<_1b9c5d016_Data>);
inline void _1b9ba4cc6_checkCases(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b30d1d_MatchCase>*, jule::Ptr<_1b9b93e08_Match>, jule::Ptr<_1b9c5d016_Data>);
inline jule::Ptr<_1b9b94a41_Case> _1b9ba51c2_checkDefault(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b93e08_Match>, jule::Ptr<_1b9b2e437_Else>);
inline void _1b9ba5535_checkComptimePanic(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b032eb_Token>, jule::Ptr<_1b9b8ecc2_Scope>*);
inline void _1b9ba5898_processConstMatch(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b93e08_Match>*, jule::Ptr<_1b9b30d1d_MatchCase>*);
inline void _1b9ba5b51_checkTypeMatch(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b30d1d_MatchCase>*);
inline void _1b9ba5e09_checkCommonMatch(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b30d1d_MatchCase>*);
inline void _1b9ba61b2_checkMatch(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b30d1d_MatchCase>);
inline void _1b9ba646a_checkFall(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b26572_FallSt>);
inline jule::Ptr<_1b9b92368_BreakSt> _1b9ba67ab_checkBreakWithLabel(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b2d6cd_BreakSt>);
inline jule::Ptr<_1b9b92368_BreakSt> _1b9ba6aec_checkPlainBreak(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b2d6cd_BreakSt>);
inline void _1b9ba6da5_checkBreak(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b2d6cd_BreakSt>);
inline void _1b9ba715d_checkRet(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b2b92e_RetSt>);
inline void _1b9ba7416_checkUseExpr(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b1d4c0_UseExpr>);
inline void _1b9ba76be_checkNode(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Any*);
inline void _1b9ba78bc_checkResult(jule::Ptr<_1b9b970c6_scopeChecker>);
inline void _1b9ba7aba_checkTree(jule::Ptr<_1b9b970c6_scopeChecker>);
inline void _1b9ba7e2d_checkGoto(_1b9b970c6_scopeChecker*, jule::Ptr<_1b9b961b3_scopeGoto>*, jule::Ptr<_1b9b95b30_scopeLabel>*);
inline void _1b9ba812b_checkGotos(_1b9b970c6_scopeChecker*);
inline void _1b9ba8329_checkLabels(_1b9b970c6_scopeChecker*);
inline void _1b9ba8527_checkVars(_1b9b970c6_scopeChecker*);
inline void _1b9ba8725_checkAliases(_1b9b970c6_scopeChecker*);
inline void _1b9ba8a88_check(jule::Ptr<_1b9b970c6_scopeChecker>, jule::Ptr<_1b9b287d8_ScopeTree>*, jule::Ptr<_1b9b8ecc2_Scope>*);
inline jule::Ptr<_1b9b970c6_scopeChecker> _1b9ba8d1e_newChildChecker(jule::Ptr<_1b9b970c6_scopeChecker>);
inline void _1b9baa183_checkCdef(_1b9ba9c76_directiveChecker*, jule::Ptr<_1b9b17bd4_Directive>*);
inline void _1b9baa43b_checkTypedef(_1b9ba9c76_directiveChecker*, jule::Ptr<_1b9b17bd4_Directive>*);
inline void _1b9baa6e4_checkNamespace(_1b9ba9c76_directiveChecker*, jule::Ptr<_1b9b17bd4_Directive>*);
inline void _1b9baa99c_checkDeprecated(_1b9ba9c76_directiveChecker*, jule::Ptr<_1b9b17bd4_Directive>*);
inline void _1b9baac55_checkTest(_1b9ba9c76_directiveChecker*, jule::Ptr<_1b9b17bd4_Directive>*);
inline void _1b9bab00d_checkDirective(_1b9ba9c76_directiveChecker*, jule::Ptr<_1b9b17bd4_Directive>*);
inline void _1b9bab20b_check(_1b9ba9c76_directiveChecker*);
inline jule::Ptr<_1b9bb1200_ImportInfo> _1b9bb16d9_SelectPackage(_1b9bb1200_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1b9bb1200_ImportInfo>)>);
inline jule::Ptr<_1b9c09611_Var> _1b9bb1ad5_FindVar(_1b9bb1200_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1b9c8c3db_TypeAlias> _1b9bb1ed1_FindTypeAlias(_1b9bb1200_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1b9b393a9_Struct> _1b9bb23cc_FindStruct(_1b9bb1200_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1b9b4e26a_Fn> _1b9bb27c8_FindFn(_1b9bb1200_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1b9b62514_Trait> _1b9bb2b19_FindTrait(_1b9bb1200_ImportInfo*, jule::Str);
inline jule::Ptr<_1b9b64c0e_Enum> _1b9bb2e5a_FindEnum(_1b9bb1200_ImportInfo*, jule::Str);
inline jule::Ptr<_1b9b66419_TypeEnum> _1b9bb329b_FindTypeEnum(_1b9bb1200_ImportInfo*, jule::Str);
inline jule::Bool _1b9bb3741_isLookupable(_1b9bb1200_ImportInfo*, jule::Str*);
inline jule::Bool _1b9bb3a82_existIdent(_1b9bb1200_ImportInfo*, jule::Str);
inline jule::Bool _1b9bb3d18_isAccessibleViaSelection(_1b9bb1200_ImportInfo*);
inline jule::Ptr<_1b9bb1200_ImportInfo> _1b9bb45bb_SelectPackage(_1b9bb4126_Package*, jule::Fn<jule::Bool(jule::Ptr<_1b9bb1200_ImportInfo>)>);
inline jule::Ptr<_1b9c09611_Var> _1b9bb49b7_FindVar(_1b9bb4126_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1b9c8c3db_TypeAlias> _1b9bb4db3_FindTypeAlias(_1b9bb4126_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1b9b393a9_Struct> _1b9bb52ae_FindStruct(_1b9bb4126_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1b9b4e26a_Fn> _1b9bb56aa_FindFn(_1b9bb4126_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1b9b62514_Trait> _1b9bb59eb_FindTrait(_1b9bb4126_Package*, jule::Str);
inline jule::Ptr<_1b9b64c0e_Enum> _1b9bb5d3c_FindEnum(_1b9bb4126_Package*, jule::Str);
inline jule::Ptr<_1b9b66419_TypeEnum> _1b9bb617d_FindTypeEnum(_1b9bb4126_Package*, jule::Str);
inline jule::Ptr<_1b9b78283_comptimeTypeInfo> _1b9bd1c04_pushComptimeTypeInfo(_1b9bd1792_commonSemaMeta*, jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline jule::Ptr<_1b9bb1200_ImportInfo> _1b9bd285e_SelectPackage(_1b9bd23b9_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1b9bb1200_ImportInfo>)>);
inline jule::Ptr<_1b9c09611_Var> _1b9bd2c5a_FindVar(_1b9bd23b9_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1b9c8c3db_TypeAlias> _1b9bd3156_FindTypeAlias(_1b9bd23b9_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1b9b393a9_Struct> _1b9bd3552_FindStruct(_1b9bd23b9_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1b9b4e26a_Fn> _1b9bd394d_FindFn(_1b9bd23b9_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1b9b62514_Trait> _1b9bd3c8e_FindTrait(_1b9bd23b9_Sema*, jule::Str);
inline jule::Ptr<_1b9b64c0e_Enum> _1b9bd40d0_FindEnum(_1b9bd23b9_Sema*, jule::Str);
inline jule::Ptr<_1b9b66419_TypeEnum> _1b9bd4421_FindTypeEnum(_1b9bd23b9_Sema*, jule::Str);
inline jule::Bool _1b9bd482d_isFlag(_1b9bd23b9_Sema*, jule::I32);
inline void _1b9bd4ad6_setCurrentFile(_1b9bd23b9_Sema*, jule::Ptr<_1b9c57ce1_SymbolTable>);
inline void _1b9bd5004_pushErr(_1b9bd23b9_Sema*, jule::Ptr<_1b9b032eb_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1b9bd5367_pushSuggestion(_1b9bd23b9_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1b9bd5763_isAccessibleDefine(_1b9bd23b9_Sema*, jule::Bool, jule::Ptr<_1b9b032eb_Token>);
inline jule::Bool _1b9bd5c19_isDuplicatedIdent(_1b9bd23b9_Sema*, jule::Uintptr, jule::Str*, jule::Bool);
inline void _1b9bd607c_checkDirectives(jule::Ptr<_1b9bd23b9_Sema>, jule::Slice<jule::Ptr<_1b9b17bd4_Directive>>*, jule::Any);
inline jule::Bool _1b9bd6533_checkGenericQuantity(_1b9bd23b9_Sema*, jule::I32, jule::I32, jule::Ptr<_1b9b032eb_Token>);
inline jule::Bool _1b9bd692e_isDuplicatedImportSelection(_1b9bd23b9_Sema*, jule::Uintptr, jule::Str*);
inline jule::Any _1b9bd6d2a_getImportDef(_1b9bd23b9_Sema*, jule::Str*, jule::Ptr<_1b9bb1200_ImportInfo>*);
inline jule::Bool _1c9d979e2_checkImportSelection(_1b9bd23b9_Sema*, jule::Ptr<_1b9b032eb_Token>*, jule::Ptr<_1b9c09611_Var>*);
inline jule::Bool _1c9d9b9b3_checkImportSelection(_1b9bd23b9_Sema*, jule::Ptr<_1b9b032eb_Token>*, jule::Ptr<_1b9c8c3db_TypeAlias>*);
inline jule::Bool _1c9da0940_checkImportSelection(_1b9bd23b9_Sema*, jule::Ptr<_1b9b032eb_Token>*, jule::Ptr<_1b9b393a9_Struct>*);
inline jule::Bool _1c9da4a54_checkImportSelection(_1b9bd23b9_Sema*, jule::Ptr<_1b9b032eb_Token>*, jule::Ptr<_1b9b62514_Trait>*);
inline jule::Bool _1c9da89d1_checkImportSelection(_1b9bd23b9_Sema*, jule::Ptr<_1b9b032eb_Token>*, jule::Ptr<_1b9b64c0e_Enum>*);
inline jule::Bool _1c9dac95d_checkImportSelection(_1b9bd23b9_Sema*, jule::Ptr<_1b9b032eb_Token>*, jule::Ptr<_1b9b66419_TypeEnum>*);
inline jule::Bool _1c9db18da_checkImportSelection(_1b9bd23b9_Sema*, jule::Ptr<_1b9b032eb_Token>*, jule::Ptr<_1b9b4e26a_Fn>*);
inline jule::Bool _1b9bd7567_checkImportSelectedSelections(_1b9bd23b9_Sema*, jule::Ptr<_1b9bb1200_ImportInfo>*);
inline jule::Bool _1c9db60b5_checkImportsAllSelectionsFromCollection(_1b9bd23b9_Sema*, jule::Slice<jule::Ptr<_1b9c09611_Var>>*, jule::Ptr<_1b9b032eb_Token>*);
inline jule::Bool _1c9db7209_checkImportsAllSelectionsFromCollection(_1b9bd23b9_Sema*, jule::Slice<jule::Ptr<_1b9c8c3db_TypeAlias>>*, jule::Ptr<_1b9b032eb_Token>*);
inline jule::Bool _1c9db9eed_checkImportsAllSelectionsFromCollection(_1b9bd23b9_Sema*, jule::Slice<jule::Ptr<_1b9b393a9_Struct>>*, jule::Ptr<_1b9b032eb_Token>*);
inline jule::Bool _1c9dbcc48_checkImportsAllSelectionsFromCollection(_1b9bd23b9_Sema*, jule::Slice<jule::Ptr<_1b9b4e26a_Fn>>*, jule::Ptr<_1b9b032eb_Token>*);
inline jule::Bool _1c9dc0a4d_checkImportsAllSelectionsFromCollection(_1b9bd23b9_Sema*, jule::Slice<jule::Ptr<_1b9b62514_Trait>>*, jule::Ptr<_1b9b032eb_Token>*);
inline jule::Bool _1c9dc3798_checkImportsAllSelectionsFromCollection(_1b9bd23b9_Sema*, jule::Slice<jule::Ptr<_1b9b64c0e_Enum>>*, jule::Ptr<_1b9b032eb_Token>*);
inline jule::Bool _1c9dc64e3_checkImportsAllSelectionsFromCollection(_1b9bd23b9_Sema*, jule::Slice<jule::Ptr<_1b9b66419_TypeEnum>>*, jule::Ptr<_1b9b032eb_Token>*);
inline jule::Bool _1b9bd7ca4_checkImportAllSelections(_1b9bd23b9_Sema*, jule::Ptr<_1b9bb1200_ImportInfo>*);
inline jule::Bool _1b9bd80e5_checkImportSelections(_1b9bd23b9_Sema*, jule::Ptr<_1b9bb1200_ImportInfo>*);
inline jule::Bool _1b9bd8436_isUseAliasDuplication(_1b9bd23b9_Sema*, jule::Ptr<_1b9bb1200_ImportInfo>*);
inline jule::Bool _1b9bd8777_checkImport(_1b9bd23b9_Sema*, jule::Ptr<_1b9bb1200_ImportInfo>*);
inline void _1b9bd8975_checkImports(_1b9bd23b9_Sema*);
inline void _1b9bd8b73_implFileImpls(jule::Ptr<_1b9bd23b9_Sema>);
inline void _1b9bd8d71_implImpls(jule::Ptr<_1b9bd23b9_Sema>);
inline void _1b9bd906e_checkEnums(jule::Ptr<_1b9bd23b9_Sema>);
inline void _1b9bd926c_checkFileInherits(jule::Ptr<_1b9bd23b9_Sema>);
inline void _1b9bd946a_checkInherits(jule::Ptr<_1b9bd23b9_Sema>);
inline _1b9ca008b_typeChecker _1b9bd9921_typeChecker(jule::Ptr<_1b9bd23b9_Sema>, jule::Trait<_1b9cacc14_Lookup>, jule::Slice<jule::Ptr<_1b9c8c3db_TypeAlias>>, jule::Ptr<_1b9c9e09b_referencer>);
inline jule::Ptr<_1b9c8d1cd_TypeKind> _1b9bd9e82_buildTypeWithRefers(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b187b7_TypeDecl>*, jule::Trait<_1b9cacc14_Lookup>, jule::Slice<jule::Ptr<_1b9c8c3db_TypeAlias>>, jule::Ptr<_1b9c9e09b_referencer>);
inline jule::Bool _1b9bda4e3_checkTypeWithRefers(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9c953a0_TypeSymbol>*, jule::Trait<_1b9cacc14_Lookup>, jule::Slice<jule::Ptr<_1b9c8c3db_TypeAlias>>, jule::Ptr<_1b9c9e09b_referencer>);
inline jule::Ptr<_1b9b87858_constraintChecker> _1b9bda779_constraintChecker(jule::Ptr<_1b9bd23b9_Sema>);
inline jule::Bool _1b9bdab75_checkType(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9c953a0_TypeSymbol>*, jule::Trait<_1b9cacc14_Lookup>);
inline jule::Ptr<_1b9c8d1cd_TypeKind> _1b9bdb12b_buildTypeWithGenerics(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b187b7_TypeDecl>*, jule::Slice<jule::Ptr<_1b9c8c3db_TypeAlias>>, jule::Ptr<_1b9b5531a_ReferenceStack>);
inline jule::Ptr<_1b9c8d1cd_TypeKind> _1b9bdb7ad_selectType(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b187b7_TypeDecl>*);
inline jule::Ptr<_1b9c5ec0a_Eval> _1b9bdbc64_evalpd(jule::Ptr<_1b9bd23b9_Sema>, jule::Trait<_1b9cacc14_Lookup>, jule::Ptr<_1b9c8d1cd_TypeKind>, jule::Ptr<_1b9c09611_Var>);
inline jule::Ptr<_1b9c5ec0a_Eval> _1b9bdc160_evalp(jule::Ptr<_1b9bd23b9_Sema>, jule::Trait<_1b9cacc14_Lookup>, jule::Ptr<_1b9c8d1cd_TypeKind>);
inline jule::Ptr<_1b9c5ec0a_Eval> _1b9bdc4a1_eval(jule::Ptr<_1b9bd23b9_Sema>, jule::Trait<_1b9cacc14_Lookup>);
inline jule::Bool _1b9bdca12_checkAssignType(jule::Ptr<_1b9bd23b9_Sema>, jule::Bool, jule::Ptr<_1b9c8d1cd_TypeKind>*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9b032eb_Token>);
inline jule::Bool _1b9bdceb8_checkTypeCompatibility(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9c8d1cd_TypeKind>*, jule::Ptr<_1b9c8d1cd_TypeKind>*, jule::Ptr<_1b9b032eb_Token>*);
inline jule::Ptr<_1b9c8d1cd_TypeKind> _1b9bdd46e_buildNonGenericTypeKind(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b187b7_TypeDecl>*, jule::Slice<jule::Ptr<_1b9b259c2_GenericDecl>>*, jule::Slice<jule::Ptr<_1b9c8d1cd_TypeKind>>*);
inline jule::Bool _1b9bdd86a_buildFnNonGenericTypeKinds(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b5216e_FnIns>*, jule::Slice<jule::Ptr<_1b9c8d1cd_TypeKind>>*);
inline jule::Ptr<_1b9b5216e_FnIns> _1b9bddbab_getTraitCheckFnKind(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b4e26a_Fn>*);
inline jule::Bool _1b9bde162_checkConstraintsFn(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b5216e_FnIns>*, jule::Ptr<_1b9b032eb_Token>*, jule::Ptr<_1b9b5216e_FnIns>);
inline jule::Bool _1b9bde618_checkConstraintsStruct(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b3c137_StructIns>*, jule::Ptr<_1b9b032eb_Token>*, jule::Ptr<_1b9b3c137_StructIns>);
inline jule::Bool _1b9bdea14_fnEnvironment(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b5216e_FnIns>*, jule::Fn<jule::Bool(jule::Ptr<_1b9bd23b9_Sema>*,jule::Slice<jule::Ptr<_1b9c8c3db_TypeAlias>>*)>);
inline void _1b9bdecbc_checkFnParamKind(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b511c3_ParamIns>*);
inline jule::Bool _1b9be010d_reloadFnInsTypes(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b5216e_FnIns>);
inline jule::Bool _1b9be05b4_checkRefValidityForInitExpr(jule::Ptr<_1b9bd23b9_Sema>, jule::Bool, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9b032eb_Token>*);
inline jule::Bool _1b9be0905_isMutRiskyStruct(_1b9bd23b9_Sema*, jule::Ptr<_1b9b3c137_StructIns>*);
inline jule::Bool _1b9be1021_checkValidityForInitExpr(jule::Ptr<_1b9bd23b9_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1b9c8d1cd_TypeKind>*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9b032eb_Token>*);
inline jule::Bool _1b9be141c_checkTypeAliasDeclKind(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9c8c3db_TypeAlias>*, jule::Trait<_1b9cacc14_Lookup>);
inline void _1b9be1780_checkTypeAliasDecl(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9c8c3db_TypeAlias>*, jule::Trait<_1b9cacc14_Lookup>);
inline void _1b9be1a38_checkTypeAliasDeclDup(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9c8c3db_TypeAlias>*);
inline jule::Bool _1b9be1cbe_checkTypeAliasDecls(jule::Ptr<_1b9bd23b9_Sema>);
inline void _1c9e6e4ae_checkEnumItemsDup(_1b9bd23b9_Sema*, jule::Slice<jule::Ptr<_1b9b64192_EnumItem>>);
inline void _1c9e7b301_checkEnumItemsDup(_1b9bd23b9_Sema*, jule::Slice<jule::Ptr<_1b9b65d42_TypeEnumItem>>);
inline void _1b9be2330_checkEnumItemsStr(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b64c0e_Enum>*);
inline void _1c9e4e0d7_checkEnumItemInt(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b64c0e_Enum>*, jule::Ptr<_1b9c95ca7_Prim>*, jule::Ptr<_1b9b64192_EnumItem>*, jule::U64*);
inline void _1c9e5e5ae_checkEnumItemInt(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b64c0e_Enum>*, jule::Ptr<_1b9c95ca7_Prim>*, jule::Ptr<_1b9b64192_EnumItem>*, jule::I64*);
inline void _1c9e4a8a8_checkEnumItemsInt1(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9c95ca7_Prim>*, jule::Ptr<_1b9b64c0e_Enum>*);
inline void _1c9e587d9_checkEnumItemsInt1(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9c95ca7_Prim>*, jule::Ptr<_1b9b64c0e_Enum>*);
inline void _1b9be2ece_checkEnumItemsInt(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b64c0e_Enum>*);
inline void _1b9be3287_checkEnumDecl(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b64c0e_Enum>*);
inline void _1b9be3540_checkTypeEnumDecl(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b66419_TypeEnum>*);
inline jule::Bool _1b9be37c6_checkEnumDecls(jule::Ptr<_1b9bd23b9_Sema>);
inline jule::Bool _1b9be3a5c_checkTypeEnumDecls(jule::Ptr<_1b9bd23b9_Sema>);
inline jule::Bool _1b9be3d9d_checkDeclGenerics(_1b9bd23b9_Sema*, jule::Slice<jule::Ptr<_1b9b259c2_GenericDecl>>*);
inline jule::Bool _1b9be41de_checkFnDeclParamsDup(_1b9bd23b9_Sema*, jule::Ptr<_1b9b4e26a_Fn>*);
inline jule::Bool _1b9be4530_checkFnDeclResultDup(_1b9bd23b9_Sema*, jule::Ptr<_1b9b4e26a_Fn>*);
inline jule::Bool _1b9be4871_checkFnVariadicParam(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b4e26a_Fn>*);
inline void _1b9be4b29_checkFnDeclPrototype(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b4e26a_Fn>*);
inline jule::Bool _1b9be50d0_catchTraitInheritCycle(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b62514_Trait>, jule::Ptr<_1b9b62514_Trait>, _23d16295d_StrBuilder*);
inline jule::Bool _1b9be5421__checkTraitDeclInherits(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b62514_Trait>*);
inline void _1b9be56c9_checkTraitDeclInherits(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b62514_Trait>*);
inline void _1b9be5982_checkTraitDeclMethod(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b4e26a_Fn>*);
inline void _1b9be5c3a_checkTraitDeclMethods(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b62514_Trait>*);
inline void _1b9be5ee3_checkTraitDecl(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b62514_Trait>*);
inline jule::Bool _1b9be6279_checkTraitDecls(jule::Ptr<_1b9bd23b9_Sema>);
inline jule::Bool _1b9be6675_checkTraitImplMethods(_1b9bd23b9_Sema*, jule::Ptr<_1b9b62514_Trait>*, jule::Ptr<_1b9b8988d_Impl>*);
inline jule::Bool _1b9be6a71_implToStruct(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b393a9_Struct>*, jule::Ptr<_1b9b8988d_Impl>*);
inline void _1b9be6d29_implTrait(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b8988d_Impl>*);
inline void _1b9be70d2_implStruct(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b8988d_Impl>*);
inline void _1b9be738a_implImpl(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b8988d_Impl>*);
inline void _1b9be76ed_checkVarDecl(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9c09611_Var>*, jule::Trait<_1b9cacc14_Lookup>);
inline void _1b9be79a6_checkGlobalVarDecl(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9c09611_Var>*);
inline jule::Bool _1b9be7c3c_checkGlobalDecls(jule::Ptr<_1b9bd23b9_Sema>);
inline jule::Bool _1b9be8138_checkStructTraitImpl(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b393a9_Struct>*, jule::Ptr<_1b9b62514_Trait>*);
inline jule::Bool _1b9be8479_checkStructImpls(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b393a9_Struct>*);
inline jule::Bool _1b9be87ba_checkStructFields(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b393a9_Struct>*);
inline void _1b9be8a73_checkStructDecl(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b393a9_Struct>*);
inline jule::Bool _1b9be8d09_checkStructDecls(jule::Ptr<_1b9bd23b9_Sema>);
inline void _1b9be90b2_checkAnonFuncDecl(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b4e26a_Fn>*);
inline void _1b9be936a_checkFuncDecl(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b4e26a_Fn>*);
inline jule::Bool _1b9be96ab_checkFuncDeclsBy(jule::Ptr<_1b9bd23b9_Sema>, jule::Slice<jule::Ptr<_1b9b4e26a_Fn>>*);
inline jule::Bool _1b9be9942_checkFuncDecls(jule::Ptr<_1b9bd23b9_Sema>);
inline void _1b9be9d60_pushCycleError(_1b9bd23b9_Sema*, jule::Str*, jule::Str*, _23d16295d_StrBuilder*);
inline void _1b9bea514_checkPackageDecls(jule::Ptr<_1b9bd23b9_Sema>);
inline void _1b9bea877_checkDataForTypeInference(_1b9bd23b9_Sema*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9b032eb_Token>*);
inline void _1b9beab30_checkVarValue(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9c09611_Var>*);
inline void _1b9beae93_evalVarValue(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9c09611_Var>*, jule::Trait<_1b9cacc14_Lookup>);
inline void _1b9beb306_checkVar(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9c09611_Var>*, jule::Trait<_1b9cacc14_Lookup>);
inline void _1b9beb504_checkGlobals(jule::Ptr<_1b9bd23b9_Sema>);
inline jule::Ptr<_1b9b5216e_FnIns> _1b9beb900_readyToCheckFn(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b3c137_StructIns>*, jule::Ptr<_1b9b4e26a_Fn>*);
inline void _1b9bebc63_checkTypeMethod(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b3c137_StructIns>*, jule::Ptr<_1b9b4e26a_Fn>*);
inline jule::Ptr<_1b9b5216e_FnIns> _1b9bec219_checkStructInsOp(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b3c137_StructIns>*, jule::Ptr<_1b9b4e26a_Fn>*, jule::Fn<jule::Bool(jule::Ptr<_1b9b4e26a_Fn>)>);
inline jule::Bool _1b9bec615_checkStructEnv(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b3c137_StructIns>*, jule::Ptr<_1b9b032eb_Token>);
inline jule::Bool _1b9beca11_precheckStructIns(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b3c137_StructIns>*, jule::Ptr<_1b9b032eb_Token>);
inline void _1b9beccb9_checkStructIns(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b3c137_StructIns>*);
inline void _1b9bed072_checkTypeStruct(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b393a9_Struct>*);
inline void _1b9c030cc_checkStructTypes(jule::Ptr<_1b9bd23b9_Sema>);
inline void _1b9c03385_checkStructInsOperators(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b3c137_StructIns>);
inline void _1b9c0363d_precheckStructType(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b393a9_Struct>*);
inline void _1b9c0383b_precheckStructTypes(jule::Ptr<_1b9bd23b9_Sema>);
inline void _1b9c03ae4_checkRets(_1b9bd23b9_Sema*, jule::Ptr<_1b9b5216e_FnIns>*);
inline void _1b9c03e57_checkFnInsSc(_1b9bd23b9_Sema*, jule::Ptr<_1b9b5216e_FnIns>*, jule::Ptr<_1b9b970c6_scopeChecker>*);
inline void _1b9c042ba_checkFnInsCaller(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b5216e_FnIns>*, jule::Ptr<_1b9b032eb_Token>);
inline void _1b9c04573_checkFnIns(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b5216e_FnIns>*);
inline void _1b9c0482b_checkFunc(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b4e26a_Fn>*);
inline void _1b9c04ad4_checkTestFn(_1b9bd23b9_Sema*, jule::Ptr<_1b9b5216e_FnIns>*);
inline void _1b9c04d8c_precheckFunc(jule::Ptr<_1b9bd23b9_Sema>, jule::Ptr<_1b9b4e26a_Fn>*);
inline void _1b9c0508a_precheckFuncs(jule::Ptr<_1b9bd23b9_Sema>);
inline void _1b9c05288_checkFuncs(jule::Ptr<_1b9bd23b9_Sema>);
inline void _1b9c05486_checkPackageTypes(jule::Ptr<_1b9bd23b9_Sema>);
inline void _1b9c05684_setFileSemaFields(jule::Ptr<_1b9bd23b9_Sema>);
inline void _1b9c05882_setSemaFields(jule::Ptr<_1b9bd23b9_Sema>);
inline void _1b9c05b3a_check(jule::Ptr<_1b9bd23b9_Sema>, jule::Slice<jule::Ptr<_1b9c57ce1_SymbolTable>>*);
inline _1b9c06069_missingRetChecker static__1b9c06432_new(void);
inline jule::Bool _1b9c06740_checkConditional(_1b9c06069_missingRetChecker*, jule::Ptr<_1b9b9090a_Conditional>);
inline jule::Bool _1b9c06a81_checkMatch(_1b9c06069_missingRetChecker*, jule::Ptr<_1b9b93e08_Match>);
inline jule::Bool _1b9c06dc2_checkInfIter(_1b9c06069_missingRetChecker*, jule::Ptr<_1b9b90c07_InfIter>);
inline jule::Bool _1b9c07213_checkScope(_1b9c06069_missingRetChecker*, jule::Ptr<_1b9b8ecc2_Scope>);
inline jule::Bool _1b9c07554_check(_1b9c06069_missingRetChecker*, jule::Ptr<_1b9b8ecc2_Scope>);
inline jule::Bool _1b9c09996_IsInitialized(_1b9c09611_Var*);
inline jule::Bool _1b9c09c2c_IsTypeInferred(_1b9c09611_Var*);
inline jule::Bool _1b9c09eb3_untypedConstant(_1b9c09611_Var*);
inline jule::Bool static__1b9c0aa63_Dispose(jule::Ptr<_1b9b4e26a_Fn>);
inline jule::Bool static__1b9c0ad2c_Str(jule::Ptr<_1b9b4e26a_Fn>);
inline jule::Bool static__1b9c0b1a1_logical(jule::Ptr<_1b9b4e26a_Fn>*, jule::Str);
inline jule::Bool static__1b9c0b46a_Eq(jule::Ptr<_1b9b4e26a_Fn>);
inline jule::Bool static__1b9c0b734_Gt(jule::Ptr<_1b9b4e26a_Fn>);
inline jule::Bool static__1b9c0b9ed_GtEq(jule::Ptr<_1b9b4e26a_Fn>);
inline jule::Bool static__1b9c0bcb7_Lt(jule::Ptr<_1b9b4e26a_Fn>);
inline jule::Bool static__1b9c0c081_LtEq(jule::Ptr<_1b9b4e26a_Fn>);
inline jule::Bool static__1b9c0c405_result(jule::Ptr<_1b9b4e26a_Fn>*, jule::Str);
inline jule::Bool static__1b9c0c6be_Shl(jule::Ptr<_1b9b4e26a_Fn>);
inline jule::Bool static__1b9c0c988_Shr(jule::Ptr<_1b9b4e26a_Fn>);
inline jule::Bool static__1b9c0cc52_Add(jule::Ptr<_1b9b4e26a_Fn>);
inline jule::Bool static__1b9c0d01b_Sub(jule::Ptr<_1b9b4e26a_Fn>);
inline jule::Bool static__1b9c0d2d5_Div(jule::Ptr<_1b9b4e26a_Fn>);
inline jule::Bool static__1b9c0d59e_Mul(jule::Ptr<_1b9b4e26a_Fn>);
inline jule::Bool static__1b9c0d868_Mod(jule::Ptr<_1b9b4e26a_Fn>);
inline jule::Bool static__1b9c0db32_BitAnd(jule::Ptr<_1b9b4e26a_Fn>);
inline jule::Bool static__1b9c0ddeb_BitOr(jule::Ptr<_1b9b4e26a_Fn>);
inline jule::Bool static__1b9c0e1b5_BitXor(jule::Ptr<_1b9b4e26a_Fn>);
inline jule::Bool static__1b9c0e539_unary(jule::Ptr<_1b9b4e26a_Fn>*, jule::Str);
inline jule::Bool static__1b9c0e803_Neg(jule::Ptr<_1b9b4e26a_Fn>);
inline jule::Bool static__1b9c0eabc_Pos(jule::Ptr<_1b9b4e26a_Fn>);
inline jule::Bool static__1b9c0ed86_BitNot(jule::Ptr<_1b9b4e26a_Fn>);
inline jule::Bool static__1b9c1020a_assign(jule::Ptr<_1b9b4e26a_Fn>*, jule::Str);
inline jule::Bool static__1b9c104c4_AddAssign(jule::Ptr<_1b9b4e26a_Fn>);
inline jule::Bool static__1b9c1078d_SubAssign(jule::Ptr<_1b9b4e26a_Fn>);
inline jule::Bool static__1b9c10a57_DivAssign(jule::Ptr<_1b9b4e26a_Fn>);
inline jule::Bool static__1b9c10d21_MulAssign(jule::Ptr<_1b9b4e26a_Fn>);
inline jule::Bool static__1b9c110da_ModAssign(jule::Ptr<_1b9b4e26a_Fn>);
inline jule::Bool static__1b9c113a4_ShlAssign(jule::Ptr<_1b9b4e26a_Fn>);
inline jule::Bool static__1b9c1166d_ShrAssign(jule::Ptr<_1b9b4e26a_Fn>);
inline jule::Bool static__1b9c11937_BitOrAssign(jule::Ptr<_1b9b4e26a_Fn>);
inline jule::Bool static__1b9c11c01_BitAndAssign(jule::Ptr<_1b9b4e26a_Fn>);
inline jule::Bool static__1b9c11eba_BitXorAssign(jule::Ptr<_1b9b4e26a_Fn>);
inline void _1b9c4532d_pushErr(_1b9c44d33_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1b9c455b4_checkTrait(_1b9c44d33_typeCompatibilityChecker*);
inline jule::Bool _1b9c4584a_checkPtr(_1b9c44d33_typeCompatibilityChecker*);
inline jule::Bool _1b9c45ad1_checkPrim(_1b9c44d33_typeCompatibilityChecker*);
inline jule::Bool _1b9c45ecc_typeEnum(_1b9c44d33_typeCompatibilityChecker*, jule::Ptr<_1b9b66419_TypeEnum>*, jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline jule::Bool _1b9c46263_checkTypeEnum(_1b9c44d33_typeCompatibilityChecker*);
inline jule::Bool _1b9c464e9_check(_1b9c44d33_typeCompatibilityChecker*);
inline void _1b9c47077_pushErr(_1b9c46ad2_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1b9c4730d_checkValidity(_1b9c46ad2_assignTypeChecker*);
inline jule::Bool _1b9c47594_checkConst(_1b9c46ad2_assignTypeChecker*);
inline jule::Bool _1b9c4782a_isPrim(_1b9c46ad2_assignTypeChecker*);
inline jule::Bool _1b9c47ab1_checkCompatibility(_1b9c46ad2_assignTypeChecker*);
inline jule::Bool _1b9c47d47_check(_1b9c46ad2_assignTypeChecker*);
inline jule::Bool _1ca1510ec_annotateConstraintElem(_1b9c4874e_dynamicTypeAnnotation*, jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline jule::Bool _1ca150959_annotateConstraintElem(_1b9c4874e_dynamicTypeAnnotation*, jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline jule::Bool _1ca152b04_annotateConstraintElem(_1b9c4874e_dynamicTypeAnnotation*, jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline jule::Bool _1ca1591c1_annotateConstraintElem(_1b9c4874e_dynamicTypeAnnotation*, jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline jule::Bool _1b9c49145_annotateConstraintMap(_1b9c4874e_dynamicTypeAnnotation*, jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline jule::Bool _1b9c49486_annotateConstraintTup(_1b9c4874e_dynamicTypeAnnotation*, jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline jule::Bool _1b9c497c7_annotateConstraintFn(_1b9c4874e_dynamicTypeAnnotation*, jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline jule::Bool _1b9c49b18_annotateConstraintIdent(_1b9c4874e_dynamicTypeAnnotation*, jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline jule::Bool _1b9c49e59_annotateConstraint(_1b9c4874e_dynamicTypeAnnotation*, jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline void _1b9c4a2bc_pushGeneric(_1b9c4874e_dynamicTypeAnnotation*, jule::Ptr<_1b9c8d1cd_TypeKind>*, jule::I32);
inline jule::Bool _1b9c4a60d_annotatePrim(_1b9c4874e_dynamicTypeAnnotation*, jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline jule::Bool _1b9c4a94e_annotateArr(_1b9c4874e_dynamicTypeAnnotation*, jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline jule::Bool _1b9c4ac90_annotateSlc(_1b9c4874e_dynamicTypeAnnotation*, jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline jule::Bool _1b9c4b18b_checkMapKey(_1b9c4874e_dynamicTypeAnnotation*, jule::Ptr<_1b9c8d1cd_TypeKind>*, jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline jule::Bool _1b9c4b4cc_annotateMap(_1b9c4874e_dynamicTypeAnnotation*, jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline jule::Bool _1b9c4b81d_annotateFn(_1b9c4874e_dynamicTypeAnnotation*, jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline jule::Bool _1b9c4bb5e_annotatePtr(_1b9c4874e_dynamicTypeAnnotation*, jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline jule::Bool _1b9c4bea0_annotateSptr(_1b9c4874e_dynamicTypeAnnotation*, jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline jule::Bool _1b9c4c2e1_annotateStruct(_1b9c4874e_dynamicTypeAnnotation*, jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline jule::Bool _1b9c4c632_annotateAny(_1b9c4874e_dynamicTypeAnnotation*, jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline jule::Bool _1b9c4c973_annotateKind(_1b9c4874e_dynamicTypeAnnotation*, jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline jule::Bool _1b9c4cc09_annotate(_1b9c4874e_dynamicTypeAnnotation*);
inline void _1b9c4db50_pushErrToken(_1b9c4d5ab_fnCallArgChecker*, jule::Ptr<_1b9b032eb_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1b9c4deb3_pushErr(_1b9c4d5ab_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1b9b511c3_ParamIns>> _1b9c4e249_getParams(_1b9c4d5ab_fnCallArgChecker*);
inline jule::Bool _1b9c4e557_checkCounts(_1b9c4d5ab_fnCallArgChecker*, jule::Slice<jule::Ptr<_1b9b511c3_ParamIns>>*);
inline jule::Bool _1b9c4ea0d_checkArg(_1b9c4d5ab_fnCallArgChecker*, jule::Ptr<_1b9b511c3_ParamIns>*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9b032eb_Token>*);
inline jule::Bool _1b9c4ee09_push(_1b9c4d5ab_fnCallArgChecker*, jule::Ptr<_1b9b511c3_ParamIns>*, jule::Ptr<_1b9b1caeb_Expr>);
inline jule::Bool _1b9c50305_pushVariadic(_1b9c4d5ab_fnCallArgChecker*, jule::Ptr<_1b9b511c3_ParamIns>*, jule::I32);
inline jule::Bool _1b9c50646_checkArgs(_1b9c4d5ab_fnCallArgChecker*, jule::Slice<jule::Ptr<_1b9b511c3_ParamIns>>*);
inline jule::Bool _1b9c508cc_checkDynamicTypeAnnotation(_1b9c4d5ab_fnCallArgChecker*);
inline jule::Bool _1b9c50b63_check(_1b9c4d5ab_fnCallArgChecker*);
inline void _1b9c51a43_pushErr(_1b9c514e3_structLitChecker*, jule::Ptr<_1b9b032eb_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1b9c51da6_pushSuggestion(_1b9c514e3_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1b9c522c4_pushMatch(_1b9c514e3_structLitChecker*, jule::Ptr<_1b9b3b587_FieldIns>*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9b032eb_Token>*);
inline void _1b9c52637_checkPair(_1b9c514e3_structLitChecker*, jule::Ptr<_1b9b2231a_FieldExprPair>*, jule::Slice<jule::Ptr<_1b9b1caeb_Expr>>*);
inline jule::Bool _1b9c52978_readyExprs(_1b9c514e3_structLitChecker*, jule::Slice<jule::Ptr<_1b9b1caeb_Expr>>*);
inline void _1b9c52c31_check(_1b9c514e3_structLitChecker*, jule::Slice<jule::Ptr<_1b9b1caeb_Expr>>*);
inline jule::Ptr<_1b9c09611_Var> _1b9c537ae_buildVar(_1b9c532c5_rangeChecker*, jule::Ptr<_1b9b2b555_VarDecl>*);
inline void _1b9c539ac_setSizeKey(_1b9c532c5_rangeChecker*);
inline void _1b9c53dca_checkRangeExprValidity(_1b9c532c5_rangeChecker*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9c09611_Var>*, jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline void _1b9c540c8_checkSlice(_1b9c532c5_rangeChecker*);
inline void _1b9c542c6_checkArray(_1b9c532c5_rangeChecker*);
inline void _1b9c544c4_checkMapKeyA(_1b9c532c5_rangeChecker*);
inline void _1b9c546c2_checkMapKeyB(_1b9c532c5_rangeChecker*);
inline void _1b9c548c0_checkMap(_1b9c532c5_rangeChecker*);
inline void _1b9c54abd_checkStr(_1b9c532c5_rangeChecker*);
inline void _1b9c54cbb_checkComptime(_1b9c532c5_rangeChecker*);
inline jule::Bool _1b9c55052_checkComptimeRange(_1b9c532c5_rangeChecker*);
inline jule::Bool _1b9c552d8_check(_1b9c532c5_rangeChecker*);
inline void _1b9c55e54_prepareTypes(_1b9c55a36_retTypeChecker*);
inline void _1b9c5620c_prepareExprs(_1b9c55a36_retTypeChecker*, jule::Ptr<_1b9b1caeb_Expr>*);
inline void _1b9c5640a_checkExprs(_1b9c55a36_retTypeChecker*);
inline jule::Bool _1b9c5674b_check(_1b9c55a36_retTypeChecker*, jule::Ptr<_1b9b1caeb_Expr>*);
inline jule::Ptr<_1b9bb1200_ImportInfo> _1b9c582ca_SelectPackage(_1b9c57ce1_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1b9bb1200_ImportInfo>)>);
inline jule::Ptr<_1b9c09611_Var> _1b9c586c6_FindVar(_1b9c57ce1_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1b9c8c3db_TypeAlias> _1b9c58ac2_FindTypeAlias(_1b9c57ce1_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1b9b393a9_Struct> _1b9c58ebd_FindStruct(_1b9c57ce1_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1b9b4e26a_Fn> _1b9c593b9_FindFn(_1b9c57ce1_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1b9b62514_Trait> _1b9c5970a_FindTrait(_1b9c57ce1_SymbolTable*, jule::Str);
inline jule::Ptr<_1b9b64c0e_Enum> _1b9c59a4b_FindEnum(_1b9c57ce1_SymbolTable*, jule::Str);
inline jule::Ptr<_1b9b66419_TypeEnum> _1b9c59d8c_FindTypeEnum(_1b9c57ce1_SymbolTable*, jule::Str);
inline jule::Ptr<_1b9c09611_Var> _1b9c5a4a8_findVar(_1b9c57ce1_SymbolTable*, jule::Str*, jule::Bool, jule::Bool);
inline jule::Ptr<_1b9c8c3db_TypeAlias> _1b9c5a95e_findTypeAlias(_1b9c57ce1_SymbolTable*, jule::Str*, jule::Bool, jule::Bool);
inline jule::Any _1b9c5ad5a_defByIdent(_1b9c57ce1_SymbolTable*, jule::Str*, jule::Bool);
inline jule::Bool _1b9c5b311_isDuplicatedIdent(_1b9c57ce1_SymbolTable*, jule::Uintptr, jule::Str*, jule::Bool);
inline jule::Bool _1b9c5d3bd_IsNil(_1b9c5d016_Data*);
inline jule::Bool _1b9c5d654_IsVoid(_1b9c5d016_Data*);
inline jule::Bool _1b9c5d8da_IsConst(_1b9c5d016_Data*);
inline jule::Bool _1b9c5dc2b_GoodOperand(_1b9c5d016_Data*, jule::Ptr<_1b9c5d016_Data>*);
inline void _1b9c6025a_pushErr(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b032eb_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1b9c605bd_pushSuggestion(_1b9c5ec0a_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1b9c607bb_allowBuiltin(_1b9c5ec0a_Eval*);
inline void _1b9c609b9_disallowBuiltin(_1b9c5ec0a_Eval*);
inline jule::Bool _1b9c60c50_isUnsafe(_1b9c5ec0a_Eval*);
inline jule::Bool _1b9c60ed6_isGlobal(_1b9c5ec0a_Eval*);
inline jule::Bool _1b9c612e4_applyNumericPrefix(_1b9c5ec0a_Eval*, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9c61635_litStr(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b1db96_LitExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9c61976_litRune(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b1db96_LitExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9c61cb7_litFloat(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b1db96_LitExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9c62108_litInt(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b1db96_LitExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9c62449_litNum(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b1db96_LitExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9c6278a_evalLit(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b1db96_LitExpr>);
inline jule::Any _1b9c62acb_findBuiltins(_1b9c5ec0a_Eval*, jule::Str*);
inline jule::Any _1b9c62ec7_getDef(_1b9c5ec0a_Eval*, jule::Str*, jule::Bool);
inline void _1ca2b08bb_pushReference(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b5216e_FnIns>*);
inline void _1ca2c741b_pushReference(_1b9c5ec0a_Eval*, jule::Ptr<_1b9c09611_Var>*);
inline void _1ca380529_pushReference(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b3c137_StructIns>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9c635c1__evalEnum(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b64c0e_Enum>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c639bc_evalEnum(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b64c0e_Enum>, jule::Ptr<_1b9b032eb_Token>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c63d0d__evalTypeEnum(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b66419_TypeEnum>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c64209_evalTypeEnum(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b66419_TypeEnum>, jule::Ptr<_1b9b032eb_Token>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c6454a__evalStruct(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b3c137_StructIns>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c64946_evalStruct(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b3c137_StructIns>, jule::Ptr<_1b9b032eb_Token>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c64c87_evalFnIns(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b5216e_FnIns>);
inline void _1b9c650ea_checkDeprecated(_1b9c5ec0a_Eval*, jule::Slice<jule::Ptr<_1b9b17bd4_Directive>>*, jule::Ptr<_1b9b032eb_Token>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c654e6_evalFn(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b4e26a_Fn>, jule::Ptr<_1b9b032eb_Token>);
inline void _1b9c65914_pushIllegalCycleError(_1b9c5ec0a_Eval*, jule::Ptr<_1b9c09611_Var>*, jule::Ptr<_1b9c09611_Var>*, _23d16295d_StrBuilder*);
inline jule::Bool _1b9c65d10_checkCrossCycle(_1b9c5ec0a_Eval*, jule::Ptr<_1b9c09611_Var>*, _23d16295d_StrBuilder*);
inline jule::Bool _1b9c6620b_checkIllegalCycles(_1b9c5ec0a_Eval*, jule::Ptr<_1b9c09611_Var>*, jule::Ptr<_1b9b032eb_Token>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c66607_evalVar(_1b9c5ec0a_Eval*, jule::Ptr<_1b9c09611_Var>, jule::Ptr<_1b9b032eb_Token>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c66a03_evalTypeAlias(_1b9c5ec0a_Eval*, jule::Ptr<_1b9c8c3db_TypeAlias>, jule::Ptr<_1b9b032eb_Token>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c66dee_evalDef(_1b9c5ec0a_Eval*, jule::Any*, jule::Ptr<_1b9b032eb_Token>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c67240_evalIdent(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b1e526_IdentExpr>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c67581_evalUnary(jule::Ptr<_1b9c5ec0a_Eval>, jule::Ptr<_1b9b1eba8_UnaryExpr>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c678c2_evalVariadic(jule::Ptr<_1b9c5ec0a_Eval>, jule::Ptr<_1b9b20082_VariadicExpr>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c67c13_evalUnsafe(jule::Ptr<_1b9c5ec0a_Eval>, jule::Ptr<_1b9b1e070_UnsafeExpr>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c68054_evalArr(jule::Ptr<_1b9c5ec0a_Eval>, jule::Ptr<_1b9b2411e_SliceExpr>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c6850a_evalExpSlc(jule::Ptr<_1b9c5ec0a_Eval>, jule::Ptr<_1b9b2411e_SliceExpr>, jule::Ptr<_1b9c8d1cd_TypeKind>, jule::Any);
inline jule::Ptr<_1b9c5d016_Data> _1b9c6884b_evalSliceExpr(jule::Ptr<_1b9c5ec0a_Eval>, jule::Ptr<_1b9b2411e_SliceExpr>);
inline void _1b9c68bae_checkIntegerIndexingByData(_1b9c5ec0a_Eval*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9b032eb_Token>);
inline void _1b9c690cc_indexingPtr(_1b9c5ec0a_Eval*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9b24aae_IndexingExpr>*);
inline void _1b9c694ea_indexingArr(_1b9c5ec0a_Eval*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9b24aae_IndexingExpr>*);
inline void _1b9c69918_indexingSlc(_1b9c5ec0a_Eval*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9b24aae_IndexingExpr>*);
inline void _1b9c69d36_indexingMap(_1b9c5ec0a_Eval*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9b24aae_IndexingExpr>*);
inline void _1b9c6a254_indexingStr(_1b9c5ec0a_Eval*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9b24aae_IndexingExpr>*);
inline void _1b9c6a672_toIndexing(_1b9c5ec0a_Eval*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9b24aae_IndexingExpr>*);
inline jule::Bool _1b9c6ab28_pushGenericsFromExprSubIdent(jule::Ptr<_1b9c5ec0a_Eval>, jule::Ptr<_1b9b20c0e_SubIdentExpr>*, jule::Slice<jule::Ptr<_1b9b187b7_TypeDecl>>*, jule::Ptr<_1b9b1caeb_Expr>*);
inline jule::Bool _1b9c6b024_pushGenericsFromData(jule::Ptr<_1b9c5ec0a_Eval>, jule::Slice<jule::Ptr<_1b9b187b7_TypeDecl>>*, jule::Ptr<_1b9b1caeb_Expr>*);
inline void _1b9c6b387_evalIdentDeclFromIndexing(jule::Ptr<_1b9c5ec0a_Eval>, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9b24aae_IndexingExpr>*);
inline jule::Bool _1b9c6b83d_checkGenericFn(jule::Ptr<_1b9c5ec0a_Eval>, jule::Ptr<_1b9b5216e_FnIns>*, jule::Ptr<_1b9b032eb_Token>*, jule::Any*);
inline void _1b9c6bba1_evalFnGenericFromIndexing(jule::Ptr<_1b9c5ec0a_Eval>, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9b24aae_IndexingExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9c6bee2_evalIndexing(jule::Ptr<_1b9c5ec0a_Eval>, jule::Ptr<_1b9b24aae_IndexingExpr>);
inline __jule_tuple_x_1b9c5d016_Data__jule_tuple_x_1b9c5d016_Data _1b9c6c333_evalSlicingExprs(jule::Ptr<_1b9c5ec0a_Eval>, jule::Ptr<_1b9b2521e_SlicingExpr>*);
inline void _1b9c6c5db_slicingArr(_1b9c5ec0a_Eval*, jule::Ptr<_1b9c5d016_Data>*);
inline void _1b9c6ca09_slicingStr(_1b9c5ec0a_Eval*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9c5d016_Data>*);
inline void _1b9c6ced2_checkSlicing(_1b9c5ec0a_Eval*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9b2521e_SlicingExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9c6d323_evalSlicing(jule::Ptr<_1b9c5ec0a_Eval>, jule::Ptr<_1b9b2521e_SlicingExpr>);
inline void _1b9c6d741_castPtr(_1b9c5ec0a_Eval*, jule::Ptr<_1b9c8d1cd_TypeKind>, jule::Ptr<_1b9c5d016_Data>, jule::Ptr<_1b9b032eb_Token>);
inline void _1b9c6db5e_castStruct(_1b9c5ec0a_Eval*, jule::Ptr<_1b9c8d1cd_TypeKind>, jule::Ptr<_1b9c5d016_Data>, jule::Ptr<_1b9b032eb_Token>);
inline void _1b9c6e07c_castRef(_1b9c5ec0a_Eval*, jule::Ptr<_1b9c8d1cd_TypeKind>, jule::Ptr<_1b9c5d016_Data>, jule::Ptr<_1b9b032eb_Token>);
inline void _1b9c6e49a_castSlc(_1b9c5ec0a_Eval*, jule::Ptr<_1b9c8d1cd_TypeKind>, jule::Ptr<_1b9c5d016_Data>, jule::Ptr<_1b9b032eb_Token>);
inline void _1b9c6e80d_castStr(_1b9c5ec0a_Eval*, jule::Ptr<_1b9c5d016_Data>, jule::Ptr<_1b9b032eb_Token>);
inline void _1b9c6ec2b_castInt(_1b9c5ec0a_Eval*, jule::Ptr<_1b9c8d1cd_TypeKind>, jule::Ptr<_1b9c5d016_Data>, jule::Ptr<_1b9b032eb_Token>);
inline void _1b9c70149_castNum(_1b9c5ec0a_Eval*, jule::Ptr<_1b9c8d1cd_TypeKind>, jule::Ptr<_1b9c5d016_Data>, jule::Ptr<_1b9b032eb_Token>);
inline void _1b9c70567_castPrim(_1b9c5ec0a_Eval*, jule::Ptr<_1b9c8d1cd_TypeKind>, jule::Ptr<_1b9c5d016_Data>, jule::Ptr<_1b9b032eb_Token>);
inline void _1b9c708ca_castConstant(_1b9c5ec0a_Eval*, jule::Ptr<_1b9c8d1cd_TypeKind>*, jule::Ptr<_1b9c5d016_Data>*);
inline void _1b9c70ce8_castTypeEnum(_1b9c5ec0a_Eval*, jule::Ptr<_1b9c8d1cd_TypeKind>*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9b032eb_Token>*);
inline void _1b9c71216_castTypeEnumT(_1b9c5ec0a_Eval*, jule::Ptr<_1b9c8d1cd_TypeKind>*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9b032eb_Token>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9c716bc_evalCastByTypeNData(_1b9c5ec0a_Eval*, jule::Ptr<_1b9c8d1cd_TypeKind>, jule::Ptr<_1b9c5d016_Data>, jule::Ptr<_1b9b032eb_Token>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c71b73_evalCastT(jule::Ptr<_1b9c5ec0a_Eval>, jule::Ptr<_1b9c8d1cd_TypeKind>*, jule::Ptr<_1b9b1caeb_Expr>*, jule::Ptr<_1b9b032eb_Token>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9c71eb4_evalCast(jule::Ptr<_1b9c5ec0a_Eval>, jule::Ptr<_1b9b2045b_CastExpr>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c72305_evalNsSelection(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b20835_NsSelectionExpr>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c727ab_evalStructLitExplicit(jule::Ptr<_1b9c5ec0a_Eval>, jule::Ptr<_1b9b3c137_StructIns>, jule::Slice<jule::Ptr<_1b9b1caeb_Expr>>, jule::Ptr<_1b9b032eb_Token>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c72aec_evalStructLit(jule::Ptr<_1b9c5ec0a_Eval>, jule::Ptr<_1b9b22b45_StructLit>);
inline _1b9ca008b_typeChecker _1b9c72d83_typeChecker(_1b9c5ec0a_Eval*);
inline jule::Ptr<_1b9c5d016_Data> _1b9c731c4_evalType(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b187b7_TypeDecl>);
inline void _1b9c73537_callTypeFn(jule::Ptr<_1b9c5ec0a_Eval>, jule::Ptr<_1b9b21825_FnCallExpr>*, jule::Ptr<_1b9c5d016_Data>*);
inline void _1b9c7389a_callBuiltinFn(jule::Ptr<_1b9c5ec0a_Eval>, jule::Ptr<_1b9b21825_FnCallExpr>*, jule::Ptr<_1b9c5d016_Data>*);
inline void _1b9c73c0d_checkFnOfConcurrentCall(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b5216e_FnIns>*, jule::Ptr<_1b9b032eb_Token>);
inline void _1b9c7412b_processExceptionalHandler(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b5216e_FnIns>*, jule::Ptr<_1b9b21825_FnCallExpr>*, jule::Ptr<_1b9c5d016_Data>*);
inline void _1b9c7448e_callFn(jule::Ptr<_1b9c5ec0a_Eval>, jule::Ptr<_1b9b21825_FnCallExpr>*, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9c747d0_evalFnCall(jule::Ptr<_1b9c5ec0a_Eval>, jule::Ptr<_1b9b21825_FnCallExpr>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c74bcb_evalEnumStatic(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b64c0e_Enum>, jule::Ptr<_1b9b032eb_Token>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c750c7_evalTypeEnumStatic(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b66419_TypeEnum>, jule::Ptr<_1b9b032eb_Token>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c754c3_evalStructStatic(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b3c137_StructIns>, jule::Ptr<_1b9b032eb_Token>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c75979_evalTraitSubIdent(_1b9c5ec0a_Eval*, jule::Ptr<_1b9c5d016_Data>, jule::Ptr<_1b9b62514_Trait>, jule::Ptr<_1b9b032eb_Token>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c75eda_evalStructSubIdentField(_1b9c5ec0a_Eval*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9b3c137_StructIns>*, jule::Ptr<_1b9b032eb_Token>*, jule::Ptr<_1b9b3b587_FieldIns>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9c7654b_evalStructSubIdent(_1b9c5ec0a_Eval*, jule::Ptr<_1b9c5d016_Data>, jule::Ptr<_1b9b3c137_StructIns>, jule::Ptr<_1b9b20c0e_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1b9c5d016_Data> _1b9c7688c_evalIntTypeStatic(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b032eb_Token>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c76bcd_evalUintTypeStatic(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b032eb_Token>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c7701e_evalI8TypeStatic(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b032eb_Token>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c77360_evalI16TypeStatic(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b032eb_Token>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c776a1_evalI32TypeStatic(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b032eb_Token>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c779e2_evalI64TypeStatic(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b032eb_Token>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c77d33_evalU8TypeStatic(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b032eb_Token>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c78174_evalU16TypeStatic(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b032eb_Token>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c784b5_evalU32TypeStatic(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b032eb_Token>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c78806_evalU64TypeStatic(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b032eb_Token>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c78b47_evalF32TypeStatic(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b032eb_Token>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c78e88_evalF64TypeStatic(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b032eb_Token>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c79384_evalPrimStatic(_1b9c5ec0a_Eval*, jule::Str, jule::Ptr<_1b9b032eb_Token>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c79780_evalTypeStatic(_1b9c5ec0a_Eval*, jule::Ptr<_1b9c5d016_Data>, jule::Ptr<_1b9b20c0e_SubIdentExpr>);
inline jule::Ptr<_1b9c5d016_Data> _1ca49d724_comptimeObjSubIdent(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b78283_comptimeTypeInfo>*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9b20c0e_SubIdentExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1ca4a29d1_comptimeObjSubIdent(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b6931d_comptimeStructField>*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9b20c0e_SubIdentExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1ca4a6c49_comptimeObjSubIdent(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b70885_comptimeEnumField>*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9b20c0e_SubIdentExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1ca4ab006_comptimeObjSubIdent(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b73327_comptimeParam>*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9b20c0e_SubIdentExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1ca4b03b2_comptimeObjSubIdent(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b6c5c9_comptimeStatic>*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9b20c0e_SubIdentExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1ca4b462a_comptimeObjSubIdent(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b7e795_comptimeValue>*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9b20c0e_SubIdentExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1ca4b8893_comptimeObjSubIdent(_1b9c5ec0a_Eval*, jule::Ptr<_1b9b836de_comptimeFile>*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9b20c0e_SubIdentExpr>*);
inline __jule_tuple_x_1b9c5d016_Data__jule_tuple_bool _1b9c7a132_tryComptimeObjSubIdent(_1b9c5ec0a_Eval*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9b20c0e_SubIdentExpr>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c7a52d_evalObjSubIdent(_1b9c5ec0a_Eval*, jule::Ptr<_1b9c5d016_Data>, jule::Ptr<_1b9b20c0e_SubIdentExpr>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c7a86e_evalSubIdent(jule::Ptr<_1b9c5ec0a_Eval>, jule::Ptr<_1b9b20c0e_SubIdentExpr>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c7abb0_evalTuple(jule::Ptr<_1b9c5ec0a_Eval>, jule::Ptr<_1b9b1d7bc_TupleExpr>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c7b0ab_evalMap(jule::Ptr<_1b9c5ec0a_Eval>, jule::Ptr<_1b9c9b94a_Map>, jule::Ptr<_1b9b230eb_BraceLit>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c7b3ec_evalBraceLit(jule::Ptr<_1b9c5ec0a_Eval>, jule::Ptr<_1b9b230eb_BraceLit>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c7b73d_evalAnonFunc(jule::Ptr<_1b9c5ec0a_Eval>, jule::Ptr<_1b9b2a477_FnDecl>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c7ba7e_evalBinop(jule::Ptr<_1b9c5ec0a_Eval>, jule::Ptr<_1b9b211b5_BinopExpr>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c7bdc0_evalExprKind(jule::Ptr<_1b9c5ec0a_Eval>, jule::Any);
inline jule::Ptr<_1b9c5d016_Data> _1b9c7c211_eval1(jule::Ptr<_1b9c5ec0a_Eval>, jule::Ptr<_1b9b1caeb_Expr>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c7c552_eval(jule::Ptr<_1b9c5ec0a_Eval>, jule::Ptr<_1b9b1caeb_Expr>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c7c893_evalExpr1(jule::Ptr<_1b9c5ec0a_Eval>, jule::Ptr<_1b9b1caeb_Expr>);
inline jule::Ptr<_1b9c5d016_Data> _1b9c7cbd4_evalExpr(jule::Ptr<_1b9c5ec0a_Eval>, jule::Ptr<_1b9b1caeb_Expr>);
inline _1b9c7d19b_unaryEval static__1b9c7d5db_new(jule::Ptr<_1b9c5ec0a_Eval>);
inline void _1b9c7d7d9_minus(_1b9c7d19b_unaryEval*);
inline void _1b9c7d9d7_plus(_1b9c7d19b_unaryEval*);
inline void _1b9c7dbd5_caret(_1b9c7d19b_unaryEval*);
inline void _1b9c7ddd3_excl(_1b9c7d19b_unaryEval*);
inline void _1b9c7e0d1_star(_1b9c7d19b_unaryEval*);
inline void _1b9c7e2ce_amper(_1b9c7d19b_unaryEval*);
inline void _1b9c7e4cc_typeDecl(_1b9c7d19b_unaryEval*);
inline void _1b9c7e6ca_evalData(_1b9c7d19b_unaryEval*);
inline jule::Ptr<_1b9c5d016_Data> _1b9c7ea1b_eval(_1b9c7d19b_unaryEval*, jule::Ptr<_1b9b1eba8_UnaryExpr>);
inline _1b9c80137_binaryEval static__1b9c80720_newPlain(jule::Ptr<_1b9c5ec0a_Eval>);
inline _1b9c80137_binaryEval static__1b9c80a61_new(jule::Ptr<_1b9c5ec0a_Eval>, jule::Ptr<_1b9b032eb_Token>);
inline jule::Bool _1b9c80ce7_checkTypeCompatibility(_1b9c80137_binaryEval*);
inline jule::Bool _1b9c8107d_checkStructCommonOperatorCompatibility(_1b9c80137_binaryEval*);
inline jule::Ptr<_1b9c5d016_Data> _1b9c81314_evalComptimeTypeInfo(_1b9c80137_binaryEval*);
inline jule::Ptr<_1b9c5d016_Data> _1b9c8159a_evalNil(_1b9c80137_binaryEval*);
inline jule::Ptr<_1b9c5d016_Data> _1b9c81831_evalEnum(_1b9c80137_binaryEval*);
inline jule::Ptr<_1b9c5d016_Data> _1b9c81ab7_evalTypeEnum(_1b9c80137_binaryEval*);
inline jule::Ptr<_1b9c5d016_Data> _1b9c81d4d_evalSptr(_1b9c80137_binaryEval*);
inline jule::Ptr<_1b9c5d016_Data> _1b9c820d4_evalPtr(_1b9c80137_binaryEval*);
inline jule::Ptr<_1b9c5d016_Data> _1b9c8236a_evalArr(_1b9c80137_binaryEval*);
inline jule::Ptr<_1b9c5d016_Data> _1b9c82601_evalSlc(_1b9c80137_binaryEval*);
inline jule::Ptr<_1b9c5d016_Data> _1b9c82887_evalStruct(_1b9c80137_binaryEval*);
inline jule::Ptr<_1b9c5d016_Data> _1b9c82b1d_evalTrait(_1b9c80137_binaryEval*);
inline jule::Ptr<_1b9c5d016_Data> _1b9c82da4_evalAny(_1b9c80137_binaryEval*);
inline jule::Ptr<_1b9c5d016_Data> _1b9c8313a_evalBool(_1b9c80137_binaryEval*);
inline jule::Ptr<_1b9c5d016_Data> _1b9c833c1_evalStr(_1b9c80137_binaryEval*);
inline void _1b9c835be_setTypeToGreater(_1b9c80137_binaryEval*);
inline void _1b9c83877_checkModData(_1b9c80137_binaryEval*, jule::Ptr<_1b9c5d016_Data>*);
inline void _1b9c83a75_mod(_1b9c80137_binaryEval*);
inline jule::Bool _1b9c83e71_numbersAreCompatibile(_1b9c80137_binaryEval*, jule::Str*, jule::Str*);
inline jule::Ptr<_1b9c5d016_Data> _1b9c84207_evalFloat(_1b9c80137_binaryEval*);
inline jule::Ptr<_1b9c5d016_Data> _1b9c8448d_evalInt(_1b9c80137_binaryEval*);
inline jule::Ptr<_1b9c5d016_Data> _1b9c84724_evalPrim(_1b9c80137_binaryEval*);
inline void _1b9c84922_checkSpecialCases(_1b9c80137_binaryEval*);
inline jule::Ptr<_1b9c5d016_Data> _1b9c84ba8_evalOp(_1b9c80137_binaryEval*);
inline void _1b9c84e61_evalConst(_1b9c80137_binaryEval*, jule::Ptr<_1b9c5d016_Data>*);
inline void _1b9c85219_checkData(_1b9c80137_binaryEval*, jule::Ptr<_1b9c5d016_Data>*);
inline void _1b9c85417_checkDatas(_1b9c80137_binaryEval*);
inline void _1b9c856c0_setModel(_1b9c80137_binaryEval*, jule::Ptr<_1b9c5d016_Data>*);
inline void _1b9c85978_postEval(_1b9c80137_binaryEval*, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9c85d74_solveExplicit(_1b9c80137_binaryEval*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9c861b5_eval(_1b9c80137_binaryEval*, jule::Ptr<_1b9b211b5_BinopExpr>*);
inline jule::Str _1b9c8d596_Str(_1b9c8d1cd_TypeKind*);
inline jule::Bool _1b9c8d8d7_Equal(jule::Ptr<_1b9c8d1cd_TypeKind>, jule::Ptr<_1b9c8d1cd_TypeKind>);
inline jule::Bool _1b9c8e025_Binded(_1b9c8d1cd_TypeKind*);
inline jule::Bool _1b9c8e2ab_IsNil(_1b9c8d1cd_TypeKind*);
inline jule::Bool _1b9c8e542_Void(_1b9c8d1cd_TypeKind*);
inline jule::Bool _1b9c8e7c8_Comparable(_1b9c8d1cd_TypeKind*);
inline jule::Bool _1b9c8ea5e_Mutable(_1b9c8d1cd_TypeKind*);
inline jule::Bool _1b9c8ece5_Ordered(_1b9c8d1cd_TypeKind*);
inline jule::Bool _1b9c9007b_NilCompatible(_1b9c8d1cd_TypeKind*);
inline jule::Bool _1b9c90312_PerformsRC(_1b9c8d1cd_TypeKind*);
inline jule::Bool _1b9c90598_Variadicable(_1b9c8d1cd_TypeKind*);
inline jule::Ptr<_1b9c95ca7_Prim> _1b9c9082e_Prim(_1b9c8d1cd_TypeKind*);
inline jule::Ptr<_1b9c997d3_Sptr> _1b9c90ab5_Sptr(_1b9c8d1cd_TypeKind*);
inline jule::Ptr<_1b9c9d09a_Ptr> _1b9c90d4b_Ptr(_1b9c8d1cd_TypeKind*);
inline jule::Ptr<_1b9b64c0e_Enum> _1b9c910d2_Enum(_1b9c8d1cd_TypeKind*);
inline jule::Ptr<_1b9b66419_TypeEnum> _1b9c91368_TypeEnum(_1b9c8d1cd_TypeKind*);
inline jule::Ptr<_1b9c9c5c7_Arr> _1b9c915ee_Arr(_1b9c8d1cd_TypeKind*);
inline jule::Ptr<_1b9c9a2a6_Slc> _1b9c91885_Slc(_1b9c8d1cd_TypeKind*);
inline jule::Ptr<_1b9b5216e_FnIns> _1b9c91b1b_Fn(_1b9c8d1cd_TypeKind*);
inline jule::Ptr<_1b9b3c137_StructIns> _1b9c91da2_Struct(_1b9c8d1cd_TypeKind*);
inline jule::Ptr<_1b9b62514_Trait> _1b9c92138_Trait(_1b9c8d1cd_TypeKind*);
inline jule::Ptr<_1b9c9b94a_Map> _1b9c923be_Map(_1b9c8d1cd_TypeKind*);
inline jule::Ptr<_1b9c9ad9a_Tuple> _1b9c92655_Tup(_1b9c8d1cd_TypeKind*);
inline jule::Bool _1b9c928db_comptime(_1b9c8d1cd_TypeKind*);
inline jule::Ptr<_1b9b6aebd_comptimeStructFields> _1b9c92b72_comptimeStructFields(_1b9c8d1cd_TypeKind*);
inline jule::Ptr<_1b9b6931d_comptimeStructField> _1b9c92e08_comptimeStructField(_1b9c8d1cd_TypeKind*);
inline jule::Ptr<_1b9b71b94_comptimeEnumFields> _1b9c9318e_comptimeEnumFields(_1b9c8d1cd_TypeKind*);
inline jule::Ptr<_1b9b70885_comptimeEnumField> _1b9c93425_comptimeEnumField(_1b9c8d1cd_TypeKind*);
inline jule::Ptr<_1b9b7558d_comptimeParams> _1b9c936ab_comptimeParams(_1b9c8d1cd_TypeKind*);
inline jule::Ptr<_1b9b73327_comptimeParam> _1b9c93942_comptimeParam(_1b9c8d1cd_TypeKind*);
inline jule::Ptr<_1b9b687b2_comptimeRange> _1b9c93bc8_comptimeRange(_1b9c8d1cd_TypeKind*);
inline jule::Ptr<_1b9b76b88_comptimeTypeInfos> _1b9c93e5e_comptimeTypeInfos(_1b9c8d1cd_TypeKind*);
inline jule::Ptr<_1b9b78283_comptimeTypeInfo> _1b9c941e5_comptimeTypeInfo(_1b9c8d1cd_TypeKind*);
inline jule::Ptr<_1b9b6e28a_comptimeStatics> _1b9c9447b_comptimeStatics(_1b9c8d1cd_TypeKind*);
inline jule::Ptr<_1b9b6c5c9_comptimeStatic> _1b9c94712_comptimeStatic(_1b9c8d1cd_TypeKind*);
inline jule::Ptr<_1b9b7e795_comptimeValue> _1b9c94998_comptimeValue(_1b9c8d1cd_TypeKind*);
inline jule::Ptr<_1b9b836de_comptimeFile> _1b9c94c2e_comptimeFile(_1b9c8d1cd_TypeKind*);
inline jule::Ptr<_1b9b820e4_comptimeFiles> _1b9c94eb5_comptimeFiles(_1b9c8d1cd_TypeKind*);
inline jule::Bool _1b9c95724_checked(_1b9c953a0_TypeSymbol*);
inline jule::Str _1b9c960e8_Str(_1b9c95ca7_Prim*);
inline jule::Bool _1b9c96439_Equal(jule::Ptr<_1b9c95ca7_Prim>, jule::Ptr<_1b9c8d1cd_TypeKind>);
inline jule::Bool _1b9c968ce_IsConstraint(_1b9c95ca7_Prim*);
inline jule::Bool _1b9c96b65_IsI8(_1b9c95ca7_Prim*);
inline jule::Bool _1b9c96deb_IsI16(_1b9c95ca7_Prim*);
inline jule::Bool _1b9c97182_IsI32(_1b9c95ca7_Prim*);
inline jule::Bool _1b9c97418_IsI64(_1b9c95ca7_Prim*);
inline jule::Bool _1b9c9769e_IsU8(_1b9c95ca7_Prim*);
inline jule::Bool _1b9c97935_IsU16(_1b9c95ca7_Prim*);
inline jule::Bool _1b9c97bbb_IsU32(_1b9c95ca7_Prim*);
inline jule::Bool _1b9c97e52_IsU64(_1b9c95ca7_Prim*);
inline jule::Bool _1b9c981d8_IsF32(_1b9c95ca7_Prim*);
inline jule::Bool _1b9c9846e_IsF64(_1b9c95ca7_Prim*);
inline jule::Bool _1b9c98705_IsInt(_1b9c95ca7_Prim*);
inline jule::Bool _1b9c9898b_IsUint(_1b9c95ca7_Prim*);
inline jule::Bool _1b9c98c22_IsUintptr(_1b9c95ca7_Prim*);
inline jule::Bool _1b9c98ea8_IsBool(_1b9c95ca7_Prim*);
inline jule::Bool _1b9c9923e_IsStr(_1b9c95ca7_Prim*);
inline jule::Bool _1b9c994c5_IsAny(_1b9c95ca7_Prim*);
inline jule::Str _1b9c99b57_Str(_1b9c997d3_Sptr*);
inline jule::Bool _1b9c99e98_Equal(jule::Ptr<_1b9c997d3_Sptr>, jule::Ptr<_1b9c8d1cd_TypeKind>);
inline jule::Str _1b9c9a73a_Str(_1b9c9a2a6_Slc*);
inline jule::Bool _1b9c9aa7b_Equal(jule::Ptr<_1b9c9a2a6_Slc>, jule::Ptr<_1b9c8d1cd_TypeKind>);
inline jule::Str _1b9c9b21e_Str(_1b9c9ad9a_Tuple*);
inline jule::Bool _1b9c9b560_Equal(jule::Ptr<_1b9c9ad9a_Tuple>, jule::Ptr<_1b9c8d1cd_TypeKind>);
inline jule::Str _1b9c9bcbe_Str(_1b9c9b94a_Map*);
inline jule::Bool _1b9c9c110_Equal(jule::Ptr<_1b9c9b94a_Map>, jule::Ptr<_1b9c8d1cd_TypeKind>);
inline jule::Str _1b9c9c94b_Str(_1b9c9c5c7_Arr*);
inline jule::Bool _1b9c9cc8c_Equal(jule::Ptr<_1b9c9c5c7_Arr>, jule::Ptr<_1b9c8d1cd_TypeKind>);
inline jule::Str _1b9c9d41e_Str(_1b9c9d09a_Ptr*);
inline jule::Bool _1b9c9d760_Equal(jule::Ptr<_1b9c9d09a_Ptr>, jule::Ptr<_1b9c8d1cd_TypeKind>);
inline jule::Bool _1b9c9dad4_IsUnsafe(_1b9c9d09a_Ptr*);
inline void _1b9ca07c8_pushErr(_1b9ca008b_typeChecker*, jule::Ptr<_1b9b032eb_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1b9ca09c6_allowBuiltin(_1b9ca008b_typeChecker*);
inline void _1b9ca0bc4_disallowBuiltin(_1b9ca008b_typeChecker*);
inline void _1ca69409b_pushReference(_1b9ca008b_typeChecker*, jule::Ptr<_1b9b3c137_StructIns>*);
inline void _1ca696de5_pushReference(_1b9ca008b_typeChecker*, jule::Ptr<_1b9b62514_Trait>*);
inline void _1b9ca1235_pushReferenceByKind(_1b9ca008b_typeChecker*, jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline void _1b9ca1653_pushCycleError(_1b9ca008b_typeChecker*, jule::Any, jule::Any, _23d16295d_StrBuilder*);
inline jule::Bool _1b9ca1a4e_checkCrossCycle(_1b9ca008b_typeChecker*, jule::Any, _23d16295d_StrBuilder*);
inline jule::Bool _1b9ca1e4a_checkIllegalCycles(_1b9ca008b_typeChecker*, jule::Ptr<_1b9b18dc2_IdentTypeDecl>*, jule::Any);
inline jule::Trait<_1b9c8cc27_Kind> _1b9ca2346_fromTypeAlias(_1b9ca008b_typeChecker*, jule::Ptr<_1b9b18dc2_IdentTypeDecl>*, jule::Ptr<_1b9c8c3db_TypeAlias>*);
inline jule::Ptr<_1b9b64c0e_Enum> _1b9ca2742_fromEnum(_1b9ca008b_typeChecker*, jule::Ptr<_1b9b18dc2_IdentTypeDecl>*, jule::Ptr<_1b9b64c0e_Enum>*);
inline jule::Ptr<_1b9b66419_TypeEnum> _1b9ca2b3d_fromTypeEnum(_1b9ca008b_typeChecker*, jule::Ptr<_1b9b18dc2_IdentTypeDecl>*, jule::Ptr<_1b9b66419_TypeEnum>*);
inline jule::Ptr<_1b9b62514_Trait> _1b9ca3039_fromTrait(_1b9ca008b_typeChecker*, jule::Ptr<_1b9b18dc2_IdentTypeDecl>*, jule::Ptr<_1b9b62514_Trait>*);
inline jule::Bool _1b9ca3435_checkStructIns(_1b9ca008b_typeChecker*, jule::Ptr<_1b9b3c137_StructIns>*, jule::Ptr<_1b9b032eb_Token>*);
inline void _1b9ca36dd_appendUsedStructReference(_1b9ca008b_typeChecker*, jule::Ptr<_1b9b393a9_Struct>*);
inline jule::Ptr<_1b9b3c137_StructIns> _1b9ca3ad9_buildStructInstance(_1b9ca008b_typeChecker*, jule::Ptr<_1b9b18dc2_IdentTypeDecl>*, jule::Ptr<_1b9b393a9_Struct>*);
inline jule::Ptr<_1b9b3c137_StructIns> _1b9ca3ed5_fromStruct(_1b9ca008b_typeChecker*, jule::Ptr<_1b9b18dc2_IdentTypeDecl>*, jule::Ptr<_1b9b393a9_Struct>*);
inline jule::Trait<_1b9c8cc27_Kind> _1b9ca4326_getDef(_1b9ca008b_typeChecker*, jule::Ptr<_1b9b18dc2_IdentTypeDecl>*);
inline jule::Trait<_1b9c8cc27_Kind> _1b9ca4667_buildIdent(_1b9ca008b_typeChecker*, jule::Ptr<_1b9b18dc2_IdentTypeDecl>);
inline jule::Trait<_1b9c8cc27_Kind> _1b9ca49a8_buildSubIdent(_1b9ca008b_typeChecker*, jule::Ptr<_1b9b191be_SubIdentTypeDecl>);
inline jule::Ptr<_1b9c997d3_Sptr> _1b9ca4ce9_buildSptrFromType(_1b9ca008b_typeChecker*, jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline jule::Ptr<_1b9c997d3_Sptr> _1b9ca513a_buildSptr(_1b9ca008b_typeChecker*, jule::Ptr<_1b9b19862_SptrTypeDecl>);
inline jule::Ptr<_1b9c9d09a_Ptr> _1b9ca547b_buildPtrFromType(_1b9ca008b_typeChecker*, jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline jule::Ptr<_1b9c9d09a_Ptr> _1b9ca57bc_buildPtr(_1b9ca008b_typeChecker*, jule::Ptr<_1b9b1a2e1_PtrTypeDecl>);
inline jule::Ptr<_1b9c9a2a6_Slc> _1b9ca5b0d_buildSlc(_1b9ca008b_typeChecker*, jule::Ptr<_1b9b19be7_SlcTypeDecl>);
inline jule::Ptr<_1b9c9c5c7_Arr> _1b9ca5e4e_buildArr(_1b9ca008b_typeChecker*, jule::Ptr<_1b9b1aa83_ArrTypeDecl>);
inline jule::Ptr<_1b9c9b94a_Map> _1b9ca6290_buildMap(_1b9ca008b_typeChecker*, jule::Ptr<_1b9b1b2d1_MapTypeDecl>);
inline jule::Ptr<_1b9c9ad9a_Tuple> _1b9ca65d1_buildTuple(_1b9ca008b_typeChecker*, jule::Ptr<_1b9b19ee4_TupleTypeDecl>);
inline jule::Bool _1b9ca6922_checkFuncTypes(_1b9ca008b_typeChecker*, jule::Ptr<_1b9b5216e_FnIns>*);
inline jule::Ptr<_1b9b5216e_FnIns> _1b9ca6c63_buildFunc(_1b9ca008b_typeChecker*, jule::Ptr<_1b9b2a477_FnDecl>);
inline jule::Trait<_1b9c8cc27_Kind> _1b9ca70a4_buildByNamespace(_1b9ca008b_typeChecker*, jule::Ptr<_1b9b19565_NamespaceTypeDecl>);
inline jule::Ptr<_1b9c8d1cd_TypeKind> _1b9ca73e5_build(_1b9ca008b_typeChecker*, jule::Any*);
inline jule::Ptr<_1b9c8d1cd_TypeKind> _1b9ca7736_checkDecl(_1b9ca008b_typeChecker*, jule::Ptr<_1b9b187b7_TypeDecl>*);
inline jule::Bool static__1b9ca8182_prim(jule::Str*, jule::Ptr<_1b9c95ca7_Prim>);
inline jule::Bool static__1b9ca8506_exist(jule::Str*, jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline void _1ba7e860b_stop(_1ba7e7e9b_scopeParser*);
inline jule::Bool _1ba7e8892_stopped(_1ba7e7e9b_scopeParser*);
inline jule::Bool _1ba7e8b28_finished(_1ba7e7e9b_scopeParser*);
inline jule::Bool _1ba7e8dae_isLastSt(_1ba7e7e9b_scopeParser*);
inline void _1ba7e9222_pushErr(_1ba7e7e9b_scopeParser*, jule::Ptr<_1b9b032eb_Token>, jule::Str);
inline void _1ba7e9585_pushSuggestion(_1ba7e7e9b_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1ba7e983d_insertAsNext(_1ba7e7e9b_scopeParser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Ptr<_1ba7e760a_stmt> _1ba7e9ac4_next(_1ba7e7e9b_scopeParser*);
inline jule::Ptr<_1b9b287d8_ScopeTree> _1ba7e9ec0_buildScope(_1ba7e7e9b_scopeParser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*, jule::Ptr<_1b9b032eb_Token>);
inline jule::Ptr<_1b9b2b555_VarDecl> _1ba7ea311_buildVarSt(_1ba7e7e9b_scopeParser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Ptr<_1b9b2b92e_RetSt> _1ba7ea652_buildRetSt(_1ba7e7e9b_scopeParser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline jule::Ptr<_1b9b2c0c2_Iter> _1ba7ea993_buildWhileNextIter(_1ba7e7e9b_scopeParser*, jule::Ptr<_1ba7e760a_stmt>*);
inline jule::Ptr<_1b9b2c8ec_WhileKind> _1ba7eacd4_buildWhileIterKind(_1ba7e7e9b_scopeParser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>> _1ba7eb125_getRangeKindKeysTokens(_1ba7e7e9b_scopeParser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Ptr<_1b9b2b555_VarDecl> _1ba7eb466_buildRangeKindKey(_1ba7e7e9b_scopeParser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Slice<jule::Ptr<_1b9b2b555_VarDecl>> _1ba7eb7a7_buildRangeKindKeys(_1ba7e7e9b_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>>*);
inline void _1ba7ebb1a_setupRangeKindKeysPlain(_1ba7e7e9b_scopeParser*, jule::Ptr<_1b9b2d304_RangeKind>*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline void _1ba7ebe7d_setupRangeKindKeysExplicit(_1ba7e7e9b_scopeParser*, jule::Ptr<_1b9b2d304_RangeKind>*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline void _1ba7ec2e1_setupRangeKindKeys(_1ba7e7e9b_scopeParser*, jule::Ptr<_1b9b2d304_RangeKind>*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Ptr<_1b9b2d304_RangeKind> _1ba7ec797_buildRangeIterKind(_1ba7e7e9b_scopeParser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*, jule::Ptr<_1b9b032eb_Token>*);
inline jule::Any _1ba7ecb93_buildCommonIterKind(_1ba7e7e9b_scopeParser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*, jule::Ptr<_1b9b032eb_Token>*);
inline jule::Ptr<_1b9b2c0c2_Iter> _1ba7eced4_buildCommonIter(_1ba7e7e9b_scopeParser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline jule::Ptr<_1b9b2c0c2_Iter> _1ba7ed325_buildIterSt(_1ba7e7e9b_scopeParser*, jule::Ptr<_1ba7e760a_stmt>*);
inline jule::Ptr<_1b9b2d6cd_BreakSt> _1ba7ed666_buildBreakSt(_1ba7e7e9b_scopeParser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Ptr<_1b9b2daa7_ContSt> _1ba7ed9a7_buildContSt(_1ba7e7e9b_scopeParser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Ptr<_1b9b2e05d_If> _1ba7edce8_buildIf(_1ba7e7e9b_scopeParser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Ptr<_1b9b2e437_Else> _1ba7ee139_buildElse(_1ba7e7e9b_scopeParser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Ptr<_1b9b2e8dd_Conditional> _1ba7ee47a_buildIfElseChain(_1ba7e7e9b_scopeParser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline jule::Ptr<_1b9b1caeb_Expr> _1ba7ee7bb_buildCoCallSt(_1ba7e7e9b_scopeParser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline jule::Ptr<_1b9b26275_GotoSt> _1ba7eeb0c_buildGotoSt(_1ba7e7e9b_scopeParser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Ptr<_1b9b26572_FallSt> _1ba7eee4d_buildFallSt(_1ba7e7e9b_scopeParser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Ptr<_1b9b3012a_TypeAliasDecl> _1ba80028e_buildTypeAliasSt(_1ba7e7e9b_scopeParser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline void _1ba800767_pushCaseExpr(_1ba7e7e9b_scopeParser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>, jule::Ptr<_1b9b032eb_Token>, jule::Bool, jule::Slice<jule::Ptr<_1b9b1caeb_Expr>>*);
inline jule::Slice<jule::Ptr<_1b9b1caeb_Expr>> _1ba800c1d_buildCaseExprs(_1ba7e7e9b_scopeParser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*, jule::Ptr<_1b9b032eb_Token>*, jule::Bool);
inline jule::Ptr<_1b9b287d8_ScopeTree> _1ba80105e_buildCaseScope(_1ba7e7e9b_scopeParser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline __jule_tuple_x_1b9b305d1_Case__jule_tuple_bool _1ba80145a_buildCase(_1ba7e7e9b_scopeParser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*, jule::Bool);
inline __jule_tuple_sx_1b9b305d1_Case__jule_tuple_x_1b9b2e437_Else _1ba801856_buildCases(_1ba7e7e9b_scopeParser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>, jule::Bool);
inline jule::Ptr<_1b9b30d1d_MatchCase> _1ba801b97_buildMatchCase(_1ba7e7e9b_scopeParser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline jule::Ptr<_1b9b287d8_ScopeTree> _1ba801ed8_buildScopeSt(_1ba7e7e9b_scopeParser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline jule::Ptr<_1b9b25d9b_LabelSt> _1ba802329_buildLabelSt(_1ba7e7e9b_scopeParser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline __jule_tuple__1b9b27e25_StmtData__jule_tuple_bool _1ba80266a_buildIdSt(_1ba7e7e9b_scopeParser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Ptr<_1ba817839_assignInfo> _1ba8029ab_buildAssignInfo(_1ba7e7e9b_scopeParser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Ptr<_1b9b26bd2_AssignLeft> _1ba802cec_buildAssignL(_1ba7e7e9b_scopeParser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Slice<jule::Ptr<_1b9b26bd2_AssignLeft>> _1ba80313d_buildAssignLs(_1ba7e7e9b_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>>*);
inline __jule_tuple_x_1b9b27265_AssignSt__jule_tuple_bool _1ba80347e_buildPlainAssign(_1ba7e7e9b_scopeParser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Bool _1ba80387a_buildDeclAssign1(_1ba7e7e9b_scopeParser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*, jule::Ptr<_1b9b27265_AssignSt>*);
inline __jule_tuple_x_1b9b27265_AssignSt__jule_tuple_bool _1ba803bbb_buildDeclAssign(_1ba7e7e9b_scopeParser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline __jule_tuple_x_1b9b27265_AssignSt__jule_tuple_bool _1ba80400c_buildAssignSt(_1ba7e7e9b_scopeParser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Ptr<_1b9b1d4c0_UseExpr> _1ba80434d_buildUseExpr(_1ba7e7e9b_scopeParser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Any _1ba80468e_buildSt(_1ba7e7e9b_scopeParser*, jule::Ptr<_1ba7e760a_stmt>*);
inline void _1ba804a02_build(_1ba7e7e9b_scopeParser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*, jule::Ptr<_1b9b287d8_ScopeTree>*);
inline void _1ba805d33_pushErr(_1ba80556e_exprBuilder*, jule::Ptr<_1b9b032eb_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ba806196_pushSuggestion(_1ba80556e_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1b9b1d7bc_TupleExpr> _1ba8064d7_buildTuple(_1ba80556e_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>>*);
inline jule::Ptr<_1b9b1db96_LitExpr> _1ba806828_buildLit(_1ba80556e_exprBuilder*, jule::Ptr<_1b9b032eb_Token>);
inline jule::Any _1ba806eaa_buildSingle(_1ba80556e_exprBuilder*, jule::Ptr<_1b9b032eb_Token>);
inline jule::Ptr<_1b9b1e526_IdentExpr> _1ba8072eb_buildBindIdent(_1ba80556e_exprBuilder*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Ptr<_1b9b1eba8_UnaryExpr> _1ba80763c_buildUnary(_1ba80556e_exprBuilder*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline jule::Ptr<_1b9b20c0e_SubIdentExpr> _1ba80797d_buildObjSubIdent(_1ba80556e_exprBuilder*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline jule::Ptr<_1b9b20835_NsSelectionExpr> _1ba807cbe_buildNsSubIdent(_1ba80556e_exprBuilder*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Ptr<_1b9b187b7_TypeDecl> _1ba808110_buildType(_1ba80556e_exprBuilder*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Any _1ba808451_buildSubIdent(_1ba80556e_exprBuilder*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Ptr<_1b9b20082_VariadicExpr> _1ba808792_buildVariadic(_1ba80556e_exprBuilder*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline jule::Ptr<_1b9b1cde8_RangeExpr> _1ba80d940_buildBetweenParentheses(_1ba80556e_exprBuilder*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline jule::Ptr<_1b9b2045b_CastExpr> _1ba80dc81_tryBuildCast(_1ba80556e_exprBuilder*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline void _1ba80e19e_pushArg(_1ba80556e_exprBuilder*, jule::Slice<jule::Ptr<_1b9b1caeb_Expr>>*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>, jule::Ptr<_1b9b032eb_Token>);
inline jule::Slice<jule::Ptr<_1b9b1caeb_Expr>> _1ba80e4e0_buildArgs(_1ba80556e_exprBuilder*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline jule::Ptr<_1b9b21825_FnCallExpr> _1ba80ecd7_buildFnCall(_1ba80556e_exprBuilder*, jule::Ptr<_1b9b032eb_Token>*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Any _1ba810128_buildParenthesesRange(_1ba80556e_exprBuilder*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Ptr<_1b9b1e070_UnsafeExpr> _1ba810469_buildUnsafeExpr(_1ba80556e_exprBuilder*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline jule::Ptr<_1b9b2a477_FnDecl> _1ba8107aa_buildAnonFn(_1ba80556e_exprBuilder*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Any _1ba810aeb_buildUnsafe(_1ba80556e_exprBuilder*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline void _1ba811019_pushRangeLitPart(_1ba80556e_exprBuilder*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>, jule::Ptr<_1b9b032eb_Token>, jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>> _1ba81135a_getBraceRangeLitExprParts(_1ba80556e_exprBuilder*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline jule::Ptr<_1b9b2231a_FieldExprPair> _1ba81169b_buildFieldExprPair(_1ba80556e_exprBuilder*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline jule::Ptr<_1b9b1caeb_Expr> _1ba8119dc_buildStructLitExpr(_1ba80556e_exprBuilder*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Slice<jule::Ptr<_1b9b1caeb_Expr>> _1ba811d2d_buildStructLitExprs(_1ba80556e_exprBuilder*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Ptr<_1b9b22b45_StructLit> _1ba81216e_buildTypedStructLiteral(_1ba80556e_exprBuilder*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline jule::Ptr<_1b9b1caeb_Expr> _1ba8124b0_buildBraceLitPart(_1ba80556e_exprBuilder*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Ptr<_1b9b230eb_BraceLit> _1ba812801_buildBraceLit(_1ba80556e_exprBuilder*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Any _1ba812b42_buildBraceRange(_1ba80556e_exprBuilder*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>> _1ba812e83_getEnumerableParts(_1ba80556e_exprBuilder*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline jule::Ptr<_1b9b2411e_SliceExpr> _1ba8132c4_buildSlice(_1ba80556e_exprBuilder*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline jule::Ptr<_1b9b24aae_IndexingExpr> _1ba81377a_buildIndexing(_1ba80556e_exprBuilder*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>, jule::Slice<jule::Ptr<_1b9b032eb_Token>>, jule::Ptr<_1b9b032eb_Token>);
inline jule::Ptr<_1b9b2521e_SlicingExpr> _1ba813d96_buildSlicing(_1ba80556e_exprBuilder*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*, jule::Ptr<_1b9b032eb_Token>*, jule::Ptr<_1b9b032eb_Token>);
inline jule::Any _1ba8141d7_buildBracketRange(_1ba80556e_exprBuilder*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline jule::Any _1ba814528_buildExclRight(_1ba80556e_exprBuilder*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Any _1ba814869_buildData(_1ba80556e_exprBuilder*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Any _1ba814c65_buildBinop(_1ba80556e_exprBuilder*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*, jule::I32);
inline jule::Any _1ba8150a6_build(_1ba80556e_exprBuilder*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Any _1ba8153e7_buildKind(_1ba80556e_exprBuilder*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Ptr<_1b9b1caeb_Expr> _1ba815738_buildFromTokens(_1ba80556e_exprBuilder*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline void _1ba81b2cc_stop(_1ba81aed0_parser*);
inline jule::Bool _1ba81b563_stopped(_1ba81aed0_parser*);
inline void _1ba81b981_pushErr(_1ba81aed0_parser*, jule::Ptr<_1b9b032eb_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ba81bce4_pushSuggestion(_1ba81aed0_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1b9b1caeb_Expr> _1ba81c135_buildExpr(jule::Ptr<_1ba81aed0_parser>, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Ptr<_1b9b17bd4_Directive> _1ba81c476_buildDirective(_1ba81aed0_parser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline void _1ba81c72e_pushDirective(_1ba81aed0_parser*, jule::Ptr<_1b9b17bd4_Directive>);
inline jule::Ptr<_1b9b287d8_ScopeTree> _1ba81cb2a_buildScope(jule::Ptr<_1ba81aed0_parser>, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*, jule::Ptr<_1b9b032eb_Token>);
inline __jule_tuple_x_1b9b187b7_TypeDecl__jule_tuple_bool _1ba81d0d1__buildType(jule::Ptr<_1ba81aed0_parser>, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*, jule::I32*, jule::Bool);
inline __jule_tuple_x_1b9b187b7_TypeDecl__jule_tuple_bool _1ba81d587_buildType(jule::Ptr<_1ba81aed0_parser>, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*, jule::I32*, jule::Bool);
inline jule::Ptr<_1b9b3012a_TypeAliasDecl> _1ba81d8c8_buildTypeAliasDecl(jule::Ptr<_1ba81aed0_parser>, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline void _1ba81dc3b_buildVarTypeAndExpr(jule::Ptr<_1ba81aed0_parser>, jule::Ptr<_1b9b2b555_VarDecl>*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline void _1ba81e09e_buildVarCommon(jule::Ptr<_1ba81aed0_parser>, jule::Ptr<_1b9b2b555_VarDecl>*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline void _1ba81e4bc_buildVarBegin(_1ba81aed0_parser*, jule::Ptr<_1b9b2b555_VarDecl>*, jule::I32*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Ptr<_1b9b2b555_VarDecl> _1ba81e80d_buildVar(jule::Ptr<_1ba81aed0_parser>, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline jule::Ptr<_1b9b259c2_GenericDecl> _1ba81eb4e_buildGeneric(jule::Ptr<_1ba81aed0_parser>, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Slice<jule::Ptr<_1b9b259c2_GenericDecl>> _1ba82004a_buildGenerics(jule::Ptr<_1ba81aed0_parser>, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*, jule::Ptr<_1b9b032eb_Token>*);
inline jule::Ptr<_1b9b29025_ParamDecl> _1ba82038b_buildSelfParam(_1ba81aed0_parser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline void _1ba8207a9_paramTypeBegin(_1ba81aed0_parser*, jule::Ptr<_1b9b29025_ParamDecl>*, jule::I32*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline void _1ba820b1c_buildParamType(jule::Ptr<_1ba81aed0_parser>, jule::Ptr<_1b9b29025_ParamDecl>*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline void _1ba820e80_buildParamBody(jule::Ptr<_1ba81aed0_parser>, jule::Ptr<_1b9b29025_ParamDecl>*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline jule::Ptr<_1b9b29025_ParamDecl> _1ba8212c1_buildParam(jule::Ptr<_1ba81aed0_parser>, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline void _1ba821579_checkParams(_1ba81aed0_parser*, jule::Slice<jule::Ptr<_1b9b29025_ParamDecl>>*);
inline jule::Slice<jule::Ptr<_1b9b29025_ParamDecl>> _1ba821975_buildParams(jule::Ptr<_1ba81aed0_parser>, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*, jule::Bool);
inline __jule_tuple_x_1b9b1b6aa_RetTypeDecl__jule_tuple_bool _1ba821d71_buildMultiRetType(jule::Ptr<_1ba81aed0_parser>, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*, jule::I32*);
inline __jule_tuple_x_1b9b1b6aa_RetTypeDecl__jule_tuple_bool _1ba82226c_buildRetType(jule::Ptr<_1ba81aed0_parser>, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*, jule::I32*);
inline jule::Ptr<_1b9b2a477_FnDecl> _1ba822723_buildFnPrototype(jule::Ptr<_1ba81aed0_parser>, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*, jule::I32*, jule::Bool);
inline jule::Ptr<_1b9b2a477_FnDecl> _1ba822bc9_buildFn(jule::Ptr<_1ba81aed0_parser>, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_1b9b032eb_Token>> _1ba82301a_getUseDeclSelectors(_1ba81aed0_parser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline void _1ba82337d_buildBindUseDecl(_1ba81aed0_parser*, jule::Ptr<_1b9b31637_UseDecl>*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline void _1ba8236e1_buildStdUseDecl(_1ba81aed0_parser*, jule::Ptr<_1b9b31637_UseDecl>*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline void _1ba823a54_buildIdentUseDecl(_1ba81aed0_parser*, jule::Ptr<_1b9b31637_UseDecl>*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline void _1ba823db7_parseUseDecl(_1ba81aed0_parser*, jule::Ptr<_1b9b31637_UseDecl>*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline jule::Ptr<_1b9b31637_UseDecl> _1ba8242b3_buildUseDecl(_1ba81aed0_parser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>, jule::Bool);
inline jule::Ptr<_1b9b187b7_TypeDecl> _1ba8246ae_buildTypeEnumItemKind(jule::Ptr<_1ba81aed0_parser>, jule::I32*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Slice<jule::Ptr<_1b9b32ec9_TypeEnumItemDecl>> _1ba824a00_buildTypeEnumItems(jule::Ptr<_1ba81aed0_parser>, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Ptr<_1b9b33639_TypeEnumDecl> _1ba824d41_buildTypeEnumDecl(jule::Ptr<_1ba81aed0_parser>, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Ptr<_1b9b1caeb_Expr> _1ba82523c_buildEnumItemExpr(jule::Ptr<_1ba81aed0_parser>, jule::I32*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Slice<jule::Ptr<_1b9b31add_EnumItemDecl>> _1ba82557d_buildEnumItems(jule::Ptr<_1ba81aed0_parser>, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Ptr<_1b9b3269e_EnumDecl> _1ba8258be_buildEnumDecl(jule::Ptr<_1ba81aed0_parser>, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Any _1ba825c10_buildNodeEnumDecl(jule::Ptr<_1ba81aed0_parser>, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Ptr<_1b9b33903_FieldDecl> _1ba826051_buildField(jule::Ptr<_1ba81aed0_parser>, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline jule::Slice<jule::Ptr<_1b9b33903_FieldDecl>> _1ba826392_buildStructDeclFields(jule::Ptr<_1ba81aed0_parser>, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline jule::Ptr<_1b9b342e9_StructDecl> _1ba8266d3_buildStructDecl(jule::Ptr<_1ba81aed0_parser>, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline void _1ba82698b_checkMethodReceiver(_1ba81aed0_parser*, jule::Ptr<_1b9b2a477_FnDecl>*);
inline void _1ba826cee_buildTraitBody(jule::Ptr<_1ba81aed0_parser>, jule::Ptr<_1b9b34a36_TraitDecl>*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline jule::Ptr<_1b9b34a36_TraitDecl> _1ba827140_buildTraitDecl(jule::Ptr<_1ba81aed0_parser>, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Ptr<_1b9b2a477_FnDecl> _1ba827481_buildBindFn(jule::Ptr<_1ba81aed0_parser>, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline jule::Ptr<_1b9b2b555_VarDecl> _1ba8277c2_buildBindVar(jule::Ptr<_1ba81aed0_parser>, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline jule::Ptr<_1b9b342e9_StructDecl> _1ba827b13_buildBindStruct(jule::Ptr<_1ba81aed0_parser>, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline jule::Ptr<_1b9b3012a_TypeAliasDecl> _1ba827e54_buildBindTypeAlias(jule::Ptr<_1ba81aed0_parser>, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline jule::Ptr<_1b9b31637_UseDecl> _1ba828295_buildBindUse(jule::Ptr<_1ba81aed0_parser>, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline jule::Any _1ba8285d6_buildBind(jule::Ptr<_1ba81aed0_parser>, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Ptr<_1b9b2a477_FnDecl> _1ba828927_getMethod(jule::Ptr<_1ba81aed0_parser>, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline void _1ba828c8a_parseImplBody(jule::Ptr<_1ba81aed0_parser>, jule::Ptr<_1b9b35196_Impl>*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Ptr<_1b9b35196_Impl> _1ba8290cb_buildImpl(jule::Ptr<_1ba81aed0_parser>, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline jule::Any _1ba82941c_buildNodeData(jule::Ptr<_1ba81aed0_parser>, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline void _1ba8296c5_applyFnMeta(_1ba81aed0_parser*, jule::Ptr<_1b9b2a477_FnDecl>*);
inline void _1ba82997d_applyMeta(_1ba81aed0_parser*, _1b9b177b6_Node*);
inline void _1ba829c36_pushUseDecl(jule::Ptr<_1ba81aed0_parser>, jule::Ptr<_1b9b31637_UseDecl>*);
inline jule::Bool _1ba82a077_pushMetaNodes(jule::Ptr<_1ba81aed0_parser>, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline _1b9b177b6_Node _1ba82a3b8_parseNode(jule::Ptr<_1ba81aed0_parser>, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline void _1ba82a671_appendNode(jule::Ptr<_1ba81aed0_parser>, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline void _1ba82ab49_removeRange(_1ba81aed0_parser*, jule::I32, jule::U32, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*, jule::Slice<jule::I32>*);
inline void _1ba82b067_pushWrongOrderCloseErr(_1ba81aed0_parser*, jule::Ptr<_1b9b032eb_Token>*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*, jule::Slice<jule::I32>*);
inline void _1ba82b540_pushRangeClose(_1ba81aed0_parser*, jule::Ptr<_1b9b032eb_Token>, jule::U32, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*, jule::Slice<jule::I32>*);
inline void _1ba82b7e8_checkRanges(_1ba81aed0_parser*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline void _1ba82baa1_parse(jule::Ptr<_1ba81aed0_parser>, jule::Ptr<_1b9b08ab5_File>*);
inline void _1ba82d3dd_pushErr(_1ba82cd49_typeBuilder*, jule::Ptr<_1b9b032eb_Token>, jule::Str);
inline void _1ba82d751_pushSuggestion(_1ba82cd49_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1b9b187b7_TypeDecl> _1ba82d9d7_buildNamespace(_1ba82cd49_typeBuilder*);
inline jule::Slice<jule::Ptr<_1b9b187b7_TypeDecl>> _1ba82dc6d_buildGenerics(_1ba82cd49_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>> _1ba82e004_identGenerics(_1ba82cd49_typeBuilder*);
inline jule::Ptr<_1b9b187b7_TypeDecl> _1ba82e28a_buildIdent(_1ba82cd49_typeBuilder*);
inline jule::Ptr<_1b9b187b7_TypeDecl> _1ba82e521_buildCppLink(_1ba82cd49_typeBuilder*);
inline jule::Ptr<_1b9b187b7_TypeDecl> _1ba82e7a7_buildFn(_1ba82cd49_typeBuilder*);
inline jule::Ptr<_1b9b187b7_TypeDecl> _1ba82ea3d_buildPtr(_1ba82cd49_typeBuilder*);
inline jule::Ptr<_1b9b187b7_TypeDecl> _1ba82ecc4_buildSptr(_1ba82cd49_typeBuilder*);
inline jule::Ptr<_1b9b187b7_TypeDecl> _1ba83005a_buildSlc(_1ba82cd49_typeBuilder*);
inline jule::Ptr<_1b9b187b7_TypeDecl> _1ba8302e1_buildArr(_1ba82cd49_typeBuilder*);
inline jule::Ptr<_1b9b187b7_TypeDecl> _1ba830577_buildMap(_1ba82cd49_typeBuilder*);
inline jule::Ptr<_1b9b187b7_TypeDecl> _1ba83080d_buildEnumerable(_1ba82cd49_typeBuilder*);
inline jule::Ptr<_1b9b187b7_TypeDecl> _1ba830a94_step(_1ba82cd49_typeBuilder*);
inline __jule_tuple_x_1b9b187b7_TypeDecl__jule_tuple_bool _1ba830d2a_build(_1ba82cd49_typeBuilder*);
inline void _1ba09b84e_pushErr(_1ba09b2ee_directiveEval*, jule::Ptr<_1b9b032eb_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>> _1ba09bc4a_splitOperans(_1ba09b2ee_directiveEval*, jule::U32, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Bool _1ba09c08b_evalDirectiveIdent(_1ba09b2ee_directiveEval*, jule::Str);
inline jule::Bool _1ba09c3cc_evalDirectivePart(_1ba09b2ee_directiveEval*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline jule::Bool _1ba09c663_eval(_1ba09b2ee_directiveEval*);
inline jule::Ptr<_1ba831e80_JuleImporter> static__1ba83237b_New(_1ba099d47_CompileInfo);
inline jule::Slice<jule::Ptr<_1b9bb1200_ImportInfo>> _1ba832612_AllPackages(_1ba831e80_JuleImporter*);
inline void _1ba832a52_SetModPath(_1ba831e80_JuleImporter*, jule::Str);
inline jule::Str _1ba832cd8_GetModPath(_1ba831e80_JuleImporter*);
inline jule::Str _1ba833129_ModById(_1ba831e80_JuleImporter*, jule::I32);
inline jule::Ptr<_1b9bb1200_ImportInfo> _1ba83346a_GetImport(_1ba831e80_JuleImporter*, jule::Str);
inline __jule_tuple_sx_1b9b1692a_Ast__jule_tuple_s_23d21115a_Log _1ba833866_ImportPackage(_1ba831e80_JuleImporter*, jule::Str, jule::Bool);
inline void _1ba833b1e_Imported(_1ba831e80_JuleImporter*, jule::Ptr<_1b9bb1200_ImportInfo>);
inline __jule_tuple_bool__jule_tuple_s_23d21115a_Log _1ba83404d_isPassBuildDirectives(_1ba831e80_JuleImporter*, jule::Ptr<_1b9b1692a_Ast>*);
inline jule::Bool _1cac68043_isCommonOrdered(jule::Slice<jule::Ptr<_1b9b393a9_Struct>>, jule::Ptr<_1b9b393a9_Struct>);
inline jule::Bool _1cac6ca5e_isCommonOrdered(jule::Slice<jule::Ptr<_1b9c09611_Var>>, jule::Ptr<_1b9c09611_Var>);
inline void _1cac64b55_orderCommon(jule::Slice<jule::Ptr<_1b9b393a9_Struct>>*);
inline void _1cac688d4_orderCommon(jule::Slice<jule::Ptr<_1b9c09611_Var>>*);
inline void static__1ba837cee_orderStructures(jule::Slice<jule::Ptr<_1b9b393a9_Struct>>*);
inline void static__1ba838030_orderVars(jule::Slice<jule::Ptr<_1b9c09611_Var>>*);
inline void _1c7661720_optimizeChild(jule::Ptr<_1c7661269_scopeDeadCode>, jule::Ptr<_1b9b8ecc2_Scope>*);
inline void _1c76619c8_optimizeBodyChildExceptional(jule::Ptr<_1c7661269_scopeDeadCode>, jule::Ptr<_1b9b8ecc2_Scope>*);
inline void _1c7661c81_optimizeBodyChild(jule::Ptr<_1c7661269_scopeDeadCode>, jule::Ptr<_1b9b8ecc2_Scope>*);
inline void _1c7662039_optimizeExprModel(jule::Ptr<_1c7661269_scopeDeadCode>, jule::Any*);
inline void _1c7662237_eliminateFollowed(_1c7661269_scopeDeadCode*);
inline void _1c76624e0_pushGoto(jule::Ptr<_1c7661269_scopeDeadCode>, jule::Ptr<_1b9b92a3e_GotoSt>);
inline void _1c7662798_pushLabel(jule::Ptr<_1c7661269_scopeDeadCode>, jule::Ptr<_1b9b92665_Label>);
inline void _1c7662a51_optimizeRangeIter(jule::Ptr<_1c7661269_scopeDeadCode>, jule::Ptr<_1b9b91b09_RangeIter>);
inline void _1c7662d09_optimizeWhileIter(jule::Ptr<_1c7661269_scopeDeadCode>, jule::Ptr<_1b9b911ad_WhileIter>);
inline void _1c76630b2_optimizeInfIter(jule::Ptr<_1c7661269_scopeDeadCode>, jule::Ptr<_1b9b90c07_InfIter>);
inline void _1c766336a_optimizeConditional(jule::Ptr<_1c7661269_scopeDeadCode>, jule::Ptr<_1b9b9090a_Conditional>);
inline void _1c7663623_optimizeMatch(jule::Ptr<_1c7661269_scopeDeadCode>, jule::Ptr<_1b9b93e08_Match>);
inline void _1c76638cb_optimizeAssign(jule::Ptr<_1c7661269_scopeDeadCode>, jule::Ptr<_1b9b933be_Assign>);
inline void _1c7663b84_optimizeMultiAssign(jule::Ptr<_1c7661269_scopeDeadCode>, jule::Ptr<_1b9b93798_MultiAssign>);
inline void _1c7663e3c_optimizeStmt(jule::Ptr<_1c7661269_scopeDeadCode>, jule::Any);
inline void _1c766413a_optimizeStmts(jule::Ptr<_1c7661269_scopeDeadCode>);
inline _1c76654c1_exprDeadCode static__1c7665b0e_new(jule::Ptr<_1c7661269_scopeDeadCode>*);
inline void _1c7665db7_binary(_1c76654c1_exprDeadCode*, jule::Ptr<_1b9b41526_BinopExprModel>);
inline void _1c7666170_unary(_1c76654c1_exprDeadCode*, jule::Ptr<_1b9b41900_UnaryExprModel>);
inline void _1c7666428_structureLit(_1c76654c1_exprDeadCode*, jule::Ptr<_1b9b422c4_StructLitExprModel>);
inline void _1c76666d1_allocStructure(_1c76654c1_exprDeadCode*, jule::Ptr<_1b9b425c1_AllocStructLitExprModel>);
inline void _1c7666989_casting(_1c76654c1_exprDeadCode*, jule::Ptr<_1b9b42b54_CastingExprModel>);
inline void _1c7666c42_args(_1c76654c1_exprDeadCode*, jule::Slice<jule::Any>*);
inline void _1c7666eea_funcCall(_1c76654c1_exprDeadCode*, jule::Ptr<_1b9b43506_FnCallExprModel>);
inline void _1c76672a3_slice(_1c76654c1_exprDeadCode*, jule::Ptr<_1b9b438d0_SliceExprModel>);
inline void _1c766755b_array(_1c76654c1_exprDeadCode*, jule::Ptr<_1b9b46927_ArrayExprModel>);
inline void _1c7667814_indexing(_1c76654c1_exprDeadCode*, jule::Ptr<_1b9b43d86_IndexingExprModel>);
inline void _1c7667abc_anonFunc(_1c76654c1_exprDeadCode*, jule::Ptr<_1b9b44260_AnonFnExprModel>);
inline void _1c7667d75_mapExpr(_1c76654c1_exprDeadCode*, jule::Ptr<_1b9b44ae0_MapExprModel>);
inline void _1c766812d_slicing(_1c76654c1_exprDeadCode*, jule::Ptr<_1b9b45173_SlicingExprModel>);
inline void _1c76683d6_traitSub(_1c76654c1_exprDeadCode*, jule::Ptr<_1b9b45706_TraitSubIdentExprModel>);
inline void _1c766868e_structureSub(_1c76654c1_exprDeadCode*, jule::Ptr<_1b9b46097_StructSubIdentExprModel>);
inline void _1c7668947_tuple(_1c76654c1_exprDeadCode*, jule::Ptr<_1b9b46c24_TupleExprModel>);
inline void _1c7668c00_newCall(_1c76654c1_exprDeadCode*, jule::Ptr<_1b9b478a1_BuiltinNewCallExprModel>);
inline void _1c7668ea8_outCall(_1c76654c1_exprDeadCode*, jule::Ptr<_1b9b470ed_BuiltinOutCallExprModel>);
inline void _1c7669261_outlnCall(_1c76654c1_exprDeadCode*, jule::Ptr<_1b9b474c7_BuiltinOutlnCallExprModel>);
inline void _1c7669519_panicCall(_1c76654c1_exprDeadCode*, jule::Ptr<_1b9b47c7a_BuiltinPanicCallExprModel>);
inline void _1c76697c2_assertCall(_1c76654c1_exprDeadCode*, jule::Ptr<_1b9b48231_BuiltinAssertCallExprModel>);
inline void _1c7669a7a_errorCall(_1c76654c1_exprDeadCode*, jule::Ptr<_1b9b49d37_BuiltinErrorCallExprModel>);
inline void _1c7669d33_makeCall(_1c76654c1_exprDeadCode*, jule::Ptr<_1b9b486d7_BuiltinMakeCallExprModel>);
inline void _1c766a0db_appendCall(_1c76654c1_exprDeadCode*, jule::Ptr<_1b9b48ab1_BuiltinAppendCallExprModel>);
inline void _1c766a394_lenCall(_1c76654c1_exprDeadCode*, jule::Ptr<_1b9b48dad_BuiltinLenCallExprModel>);
inline void _1c766a64c_capCall(_1c76654c1_exprDeadCode*, jule::Ptr<_1b9b491aa_BuiltinCapCallExprModel>);
inline void _1c766a905_deleteCall(_1c76654c1_exprDeadCode*, jule::Ptr<_1b9b49584_BuiltinDeleteCallExprModel>);
inline void _1c766abad_sizeof(_1c76654c1_exprDeadCode*, jule::Ptr<_1b9b458e3_SizeofExprModel>);
inline void _1c766ae66_alignof(_1c76654c1_exprDeadCode*, jule::Ptr<_1b9b4a563_AlignofExprModel>);
inline void _1c766b21e_integratedToStr(_1c76654c1_exprDeadCode*, jule::Ptr<_1b9b4ab5c_IntegratedToStrExprModel>);
inline void _1c766b4c7_free(_1c76654c1_exprDeadCode*, jule::Ptr<_1b9b4b333_FreeExprModel>);
inline void _1c766b780_backendEmit(_1c76654c1_exprDeadCode*, jule::Ptr<_1b9b4b036_BackendEmitExprModel>);
inline void _1c766ba38_optimize(_1c76654c1_exprDeadCode*, jule::Any*);
inline jule::Ptr<_1b9d8ea3d_scopeOptimizer> static__1b9d9007c_new(jule::Ptr<_1b9b8ecc2_Scope>);
inline void _1b9d90335_setCurrentStmt(_1b9d8ea3d_scopeOptimizer*, jule::Any);
inline void _1b9d90533_removeCurrent(_1b9d8ea3d_scopeOptimizer*);
inline void _1b9d907db_optimizeData(_1b9d8ea3d_scopeOptimizer*, jule::Ptr<_1b9c5d016_Data>);
inline void _1b9d90a94_optimizeVar(_1b9d8ea3d_scopeOptimizer*, jule::Ptr<_1b9c09611_Var>);
inline void _1b9d90d4c_optimizeConditional(_1b9d8ea3d_scopeOptimizer*, jule::Ptr<_1b9b9090a_Conditional>);
inline void _1b9d9126a_buildDefaultConstantTrueCase(_1b9d8ea3d_scopeOptimizer*, jule::Ptr<_1b9b94a41_Case>, jule::I32*, jule::Ptr<_1b9b93e08_Match>*);
inline void _1b9d91523_optimizeMatch(_1b9d8ea3d_scopeOptimizer*, jule::Ptr<_1b9b93e08_Match>);
inline void _1b9d917cb_optimizeRangeIter(_1b9d8ea3d_scopeOptimizer*, jule::Ptr<_1b9b91b09_RangeIter>);
inline void _1b9d91a84_optimizeWhileIter(_1b9d8ea3d_scopeOptimizer*, jule::Ptr<_1b9b911ad_WhileIter>);
inline jule::Bool _1b9d91dc5_substr(_1b9d8ea3d_scopeOptimizer*, jule::Ptr<_1b9b933be_Assign>);
inline jule::Bool _1b9d92216_strAssign(_1b9d8ea3d_scopeOptimizer*, jule::Ptr<_1b9b933be_Assign>);
inline jule::Bool _1b9d92557_sliceAssign(_1b9d8ea3d_scopeOptimizer*, jule::Ptr<_1b9b933be_Assign>);
inline void _1b9d92810_optimizeAssign(_1b9d8ea3d_scopeOptimizer*, jule::Ptr<_1b9b933be_Assign>);
inline jule::Bool _1b9d92b51_tryOptimizeSwap(_1b9d8ea3d_scopeOptimizer*, jule::Ptr<_1b9b93798_MultiAssign>*);
inline void _1b9d92e09_optimizeMultiAssign(_1b9d8ea3d_scopeOptimizer*, jule::Ptr<_1b9b93798_MultiAssign>);
inline void _1b9d931b2_optimizeRet(_1b9d8ea3d_scopeOptimizer*, jule::Ptr<_1b9b954c0_RetSt>);
inline void _1b9d9346a_optimizeStmt(_1b9d8ea3d_scopeOptimizer*, jule::Any);
inline void _1b9d93723_optimizeChild(_1b9d8ea3d_scopeOptimizer*, jule::Ptr<_1b9b8ecc2_Scope>);
inline void _1b9d93921_optimize(_1b9d8ea3d_scopeOptimizer*);
inline void static__1b9d96270_optimize(jule::Any*);
inline jule::Bool _1b9d965b1_strCond(_1b9d95c20_exprOptimizer*, jule::Ptr<_1b9b41526_BinopExprModel>);
inline void _1b9d96869_binary(_1b9d95c20_exprOptimizer*, jule::Ptr<_1b9b41526_BinopExprModel>);
inline void _1b9d96b22_unary(_1b9d95c20_exprOptimizer*, jule::Ptr<_1b9b41900_UnaryExprModel>);
inline void _1b9d96dca_structureLit(_1b9d95c20_exprOptimizer*, jule::Ptr<_1b9b422c4_StructLitExprModel>);
inline void _1b9d97183_allocStructure(_1b9d95c20_exprOptimizer*, jule::Ptr<_1b9b425c1_AllocStructLitExprModel>);
inline void _1b9d9743b_casting(_1b9d95c20_exprOptimizer*, jule::Ptr<_1b9b42b54_CastingExprModel>);
inline void _1b9d976e4_args(_1b9d95c20_exprOptimizer*, jule::Slice<jule::Any>*);
inline void _1b9d9799c_scope(_1b9d95c20_exprOptimizer*, jule::Ptr<_1b9b8ecc2_Scope>*);
inline jule::Bool _1b9d97cdd_optimizeSpecialFuncCalls(_1b9d95c20_exprOptimizer*, jule::Ptr<_1b9b43506_FnCallExprModel>*);
inline void _1b9d98096_funcCall(_1b9d95c20_exprOptimizer*, jule::Ptr<_1b9b43506_FnCallExprModel>);
inline void _1b9d9834e_slice(_1b9d95c20_exprOptimizer*, jule::Ptr<_1b9b438d0_SliceExprModel>);
inline void _1b9d98607_array(_1b9d95c20_exprOptimizer*, jule::Ptr<_1b9b46927_ArrayExprModel>);
inline void _1b9d988b0_indexing(_1b9d95c20_exprOptimizer*, jule::Ptr<_1b9b43d86_IndexingExprModel>);
inline void _1b9d98b68_anonFunc(_1b9d95c20_exprOptimizer*, jule::Ptr<_1b9b44260_AnonFnExprModel>);
inline void _1b9d98e21_mapExpr(_1b9d95c20_exprOptimizer*, jule::Ptr<_1b9b44ae0_MapExprModel>);
inline void _1b9d991c9_slicing(_1b9d95c20_exprOptimizer*, jule::Ptr<_1b9b45173_SlicingExprModel>);
inline void _1b9d99482_traitSub(_1b9d95c20_exprOptimizer*, jule::Ptr<_1b9b45706_TraitSubIdentExprModel>);
inline void _1b9d9973a_structureSub(_1b9d95c20_exprOptimizer*, jule::Ptr<_1b9b46097_StructSubIdentExprModel>);
inline void _1b9d999e3_tuple(_1b9d95c20_exprOptimizer*, jule::Ptr<_1b9b46c24_TupleExprModel>);
inline void _1b9d99c9b_newCall(_1b9d95c20_exprOptimizer*, jule::Ptr<_1b9b478a1_BuiltinNewCallExprModel>);
inline void _1b9d9a054_outCall(_1b9d95c20_exprOptimizer*, jule::Ptr<_1b9b470ed_BuiltinOutCallExprModel>);
inline void _1b9d9a30c_outlnCall(_1b9d95c20_exprOptimizer*, jule::Ptr<_1b9b474c7_BuiltinOutlnCallExprModel>);
inline void _1b9d9a5b5_panicCall(_1b9d95c20_exprOptimizer*, jule::Ptr<_1b9b47c7a_BuiltinPanicCallExprModel>);
inline void _1b9d9a86d_assertCall(_1b9d95c20_exprOptimizer*, jule::Ptr<_1b9b48231_BuiltinAssertCallExprModel>);
inline void _1b9d9ab26_errorCall(_1b9d95c20_exprOptimizer*, jule::Ptr<_1b9b49d37_BuiltinErrorCallExprModel>);
inline void _1b9d9adce_makeCall(_1b9d95c20_exprOptimizer*, jule::Ptr<_1b9b486d7_BuiltinMakeCallExprModel>);
inline void _1b9d9b187_appendCall(_1b9d95c20_exprOptimizer*, jule::Ptr<_1b9b48ab1_BuiltinAppendCallExprModel>);
inline void _1b9d9b440_lenCall(_1b9d95c20_exprOptimizer*, jule::Ptr<_1b9b48dad_BuiltinLenCallExprModel>);
inline void _1b9d9b6e8_capCall(_1b9d95c20_exprOptimizer*, jule::Ptr<_1b9b491aa_BuiltinCapCallExprModel>);
inline void _1b9d9b9a1_deleteCall(_1b9d95c20_exprOptimizer*, jule::Ptr<_1b9b49584_BuiltinDeleteCallExprModel>);
inline void _1b9d9bc59_sizeof(_1b9d95c20_exprOptimizer*, jule::Ptr<_1b9b458e3_SizeofExprModel>);
inline void _1b9d9c012_alignof(_1b9d95c20_exprOptimizer*, jule::Ptr<_1b9b4a563_AlignofExprModel>);
inline void _1b9d9c2ba_integratedToStr(_1b9d95c20_exprOptimizer*, jule::Ptr<_1b9b4ab5c_IntegratedToStrExprModel>);
inline void _1b9d9c573_free(_1b9d95c20_exprOptimizer*, jule::Ptr<_1b9b4b333_FreeExprModel>);
inline void _1b9d9c82b_backendEmit(_1b9d95c20_exprOptimizer*, jule::Ptr<_1b9b4b036_BackendEmitExprModel>);
inline void _1b9d9ca29_do(_1b9d95c20_exprOptimizer*);
inline jule::Ptr<_1c766c880_Optimizer> static__1c766ccc0_New(jule::Ptr<_1ba834944_IR>*);
inline void _1c766d078_optimizeGlobal(_1c766c880_Optimizer*, jule::Ptr<_1b9c09611_Var>*);
inline void _1c766d331_optimizeFunction(_1c766c880_Optimizer*, jule::Ptr<_1b9b4e26a_Fn>*);
inline void _1c766d5d9_optimizeStruct(_1c766c880_Optimizer*, jule::Ptr<_1b9b393a9_Struct>*);
inline void _1c766d892_optimizeGlobals(_1c766c880_Optimizer*, jule::Ptr<_1b9bb4126_Package>*);
inline void _1c766db4a_optimizeFunctions(_1c766c880_Optimizer*, jule::Ptr<_1b9bb4126_Package>*);
inline void _1c766de03_optimizeStructs(_1c766c880_Optimizer*, jule::Ptr<_1b9bb4126_Package>*);
inline void _1c766e1ab_optimizePackage(_1c766c880_Optimizer*, jule::Ptr<_1b9bb4126_Package>*);
inline void _1c766e3a9_Optimize(_1c766c880_Optimizer*);
inline void static__1c766ea80_Reset(void);
inline void static__1c76947b9_Print(jule::Str, jule::Str);
inline void static__1c76972c2_LogFlat(_23d21115a_Log*);
inline void static__1c7697503_LogError(_23d21115a_Log*);
inline void static__1c7697734_Log(_23d21115a_Log*);
inline void static__1c7697965_PrintLogs(jule::Slice<_23d21115a_Log>*);
inline _1c8035610_Time static__1c80359b7_Unix(jule::U64);
inline _1c8035610_Time static__1c8035bc6_Now(void);
inline _1c8034e39_AbsTime _1c80373ae_Abs(_1c8035610_Time*);
inline jule::Ptr<_1c7e58577_scopeCoder> static__1c7e58b93_new(jule::Ptr<_1c803eaae_ObjectCoder>*);
inline void _1cb0352dd_iterHead(jule::Ptr<_1c7e58577_scopeCoder>, jule::Ptr<_1b9b91b09_RangeIter>*, jule::Bool*, jule::Str*);
inline void _1c7e59369_rangeIndexIter(jule::Ptr<_1c7e58577_scopeCoder>, jule::Ptr<_1b9b91b09_RangeIter>*);
inline void _1c7e59622_rangeHashmapIter(jule::Ptr<_1c7e58577_scopeCoder>, jule::Ptr<_1b9b91b09_RangeIter>*);
inline void _1c7e598ca_ifCase(jule::Ptr<_1c7e58577_scopeCoder>, jule::Ptr<_1b9b901e0_If>);
inline void _1c7e59b83_conditional(jule::Ptr<_1c7e58577_scopeCoder>, jule::Ptr<_1b9b9090a_Conditional>);
inline void _1c7e59e3b_infIter(jule::Ptr<_1c7e58577_scopeCoder>, jule::Ptr<_1b9b90c07_InfIter>);
inline void _1c7e5a1e4_whileIter(jule::Ptr<_1c7e58577_scopeCoder>, jule::Ptr<_1b9b911ad_WhileIter>);
inline void _1c7e5a49c_rangeIter(jule::Ptr<_1c7e58577_scopeCoder>, jule::Ptr<_1b9b91b09_RangeIter>);
inline void _1c7e5a755_cont(jule::Ptr<_1c7e58577_scopeCoder>, jule::Ptr<_1b9b91e8e_ContSt>);
inline void _1c7e5aa0d_label(jule::Ptr<_1c7e58577_scopeCoder>, jule::Ptr<_1b9b92665_Label>);
inline void _1c7e5acb6_gotoSt(jule::Ptr<_1c7e58577_scopeCoder>, jule::Ptr<_1b9b92a3e_GotoSt>);
inline void _1c7e5b06e_postfix(jule::Ptr<_1c7e58577_scopeCoder>, jule::Ptr<_1b9b92e18_Postfix>);
inline void _1c7e5b327_assign(jule::Ptr<_1c7e58577_scopeCoder>, jule::Ptr<_1b9b933be_Assign>);
inline void _1c7e5b5d0_mapLookupAssign(jule::Ptr<_1c7e58577_scopeCoder>, jule::Ptr<_1b9b93798_MultiAssign>*);
inline void _1c7e5b888_multiAssignTup(jule::Ptr<_1c7e58577_scopeCoder>, jule::Ptr<_1b9b93798_MultiAssign>*);
inline void _1c7e5bb41_multiAssignFn(jule::Ptr<_1c7e58577_scopeCoder>, jule::Ptr<_1b9b93798_MultiAssign>*);
inline void _1c7e5bde9_multiAssign(jule::Ptr<_1c7e58577_scopeCoder>, jule::Ptr<_1b9b93798_MultiAssign>);
inline jule::Fn<void(void)> _1c7e5c23a_matchExpr(jule::Ptr<_1c7e58577_scopeCoder>, jule::Ptr<_1b9b93e08_Match>);
inline void _1c7e5c59d_case(jule::Ptr<_1c7e58577_scopeCoder>, jule::Ptr<_1b9b93e08_Match>, jule::Ptr<_1b9b94a41_Case>);
inline void _1c7e5c856_matchSt(jule::Ptr<_1c7e58577_scopeCoder>, jule::Ptr<_1b9b93e08_Match>);
inline void _1c7e5cb0e_fallSt(jule::Ptr<_1c7e58577_scopeCoder>, jule::Ptr<_1b9b9513a_FallSt>);
inline void _1c7e5cdb7_breakSt(jule::Ptr<_1c7e58577_scopeCoder>, jule::Ptr<_1b9b92368_BreakSt>);
inline void _1c7e5d170_setResult(jule::Ptr<_1c7e58577_scopeCoder>, jule::Ptr<_1b9b954c0_RetSt>);
inline void _1c7e5d428_retSt(jule::Ptr<_1c7e58577_scopeCoder>, jule::Ptr<_1b9b954c0_RetSt>);
inline void _1c7e5d6d1_var(jule::Ptr<_1c7e58577_scopeCoder>, jule::Ptr<_1b9c09611_Var>);
inline void _1c7e5d989_mutSlicing(jule::Ptr<_1c7e58577_scopeCoder>, jule::Ptr<_1b9d8c695_MutSlicingExprModel>);
inline void _1c7e5dc42_swap(jule::Ptr<_1c7e58577_scopeCoder>, jule::Ptr<_1b9d8b40d_SwapExprModel>);
inline void _1c7e5deea_st(jule::Ptr<_1c7e58577_scopeCoder>, jule::Any);
inline void _1c7e5e2a3_scopeStmts(jule::Ptr<_1c7e58577_scopeCoder>, jule::Ptr<_1b9b8ecc2_Scope>*);
inline void _1c7e5e55b_scope(jule::Ptr<_1c7e58577_scopeCoder>, jule::Ptr<_1b9b8ecc2_Scope>);
inline void _1c7e5e814_funcScope(jule::Ptr<_1c7e58577_scopeCoder>, jule::Ptr<_1b9b5216e_FnIns>);
inline jule::Ptr<_1c7e62790_exprCoder> static__1c7e62b58_new(jule::Ptr<_1c803eaae_ObjectCoder>*);
inline void _1c7e62e11_string(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1ec682ce3_Const>*);
inline void _1c7e631b9_boolean(jule::Ptr<_1c7e62790_exprCoder>, jule::Bool);
inline void _1c7e633b7_nilLit(jule::Ptr<_1c7e62790_exprCoder>);
inline jule::Bool _1c7e63708_ftoaSpecialCases(jule::Ptr<_1c7e62790_exprCoder>, jule::F64*);
inline void _1c7e639b1_float32(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1ec682ce3_Const>*);
inline void _1c7e63c69_float64(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1ec682ce3_Const>*);
inline void _1c7e64022_constant(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1ec682ce3_Const>);
inline void _1c7e64440_divByZeroBinary(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b032eb_Token>*, jule::Ptr<_1b9b4102b_OperandExprModel>*, jule::Ptr<_1b9b4102b_OperandExprModel>*);
inline void _1c7e646e8_unsafeBinary(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b41526_BinopExprModel>);
inline void _1c7e649a1_binary(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b41526_BinopExprModel>);
inline void _1c7e64c59_var(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9c09611_Var>);
inline void _1c7e65012_structureIns(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b3c137_StructIns>);
inline void _1c7e652ba_unary(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b41900_UnaryExprModel>);
inline void _1c7e65573_structureLit(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b422c4_StructLitExprModel>);
inline void _1c7e6582b_allocStructure(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b425c1_AllocStructLitExprModel>);
inline void _1c7e65ad4_possibleRefExpr(jule::Ptr<_1c7e62790_exprCoder>, jule::Any);
inline void _1c7e66002_castTraitFromTrait(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b42b54_CastingExprModel>*, jule::Ptr<_1b9b62514_Trait>, jule::Ptr<_1b9b62514_Trait>);
inline void _1c7e662aa_casting(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b42b54_CastingExprModel>);
inline void _1c7e66563_models(jule::Ptr<_1c7e62790_exprCoder>, jule::Slice<jule::Any>);
inline void _1c7e6681b_args(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b43506_FnCallExprModel>*);
inline void _1c7e66ac4_modelForCall(jule::Ptr<_1c7e62790_exprCoder>, jule::Any);
inline void _1c7e66d7c_pushCallInf(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b43506_FnCallExprModel>*);
inline jule::Bool _1c7e671bd_isWrapped(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b43506_FnCallExprModel>*);
inline void _1c7e67476_pureFuncCall(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b43506_FnCallExprModel>*);
inline void _1c7e6772e_coFuncCall(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b43506_FnCallExprModel>*);
inline void _1c7e67a92_writeUseExpr(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b5216e_FnIns>*, jule::Ptr<_1b9c5d016_Data>);
inline void _1c7e67d4a_funcCall(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b43506_FnCallExprModel>);
inline void _1c7e68103_slice(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b438d0_SliceExprModel>);
inline void _1c7e683ab_indexing(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b43d86_IndexingExprModel>);
inline void _1c7e68664_unsafeIndexing(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9d8cc8e_UnsafeIndexingExprModel>);
inline void _1c7e6891c_anonFunc(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b44260_AnonFnExprModel>);
inline void _1c7e68bc5_mapExpr(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b44ae0_MapExprModel>);
inline void _1c7e68e7d_slicing(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b45173_SlicingExprModel>);
inline void _1c7e69236_traitSub(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b45706_TraitSubIdentExprModel>);
inline void _1c7e694de_structureSub(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b46097_StructSubIdentExprModel>);
inline void _1c7e69797_array(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b46927_ArrayExprModel>);
inline void _1c7e69a50_funcInsCommon(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b5216e_FnIns>);
inline void _1c7e69d08_funcIns(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b5216e_FnIns>);
inline void _1c7e6a0b1_tuple(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b46c24_TupleExprModel>);
inline void _1c7e6a369_newCall(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b478a1_BuiltinNewCallExprModel>);
inline void _1c7e6a622_outCall(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b470ed_BuiltinOutCallExprModel>);
inline void _1c7e6a8ca_outlnCall(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b474c7_BuiltinOutlnCallExprModel>);
inline void _1c7e6ab83_panicCall(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b47c7a_BuiltinPanicCallExprModel>);
inline void _1c7e6ae3b_assertCall(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b48231_BuiltinAssertCallExprModel>);
inline void _1c7e6b1e4_errorCall(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b49d37_BuiltinErrorCallExprModel>);
inline void _1c7e6b49c_copyCall(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b4995d_BuiltinCopyCallExprModel>);
inline void _1c7e6b755_lenCall(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b48dad_BuiltinLenCallExprModel>);
inline void _1c7e7189d_capCall(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b491aa_BuiltinCapCallExprModel>);
inline void _1c7e71b23_deleteCall(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b49584_BuiltinDeleteCallExprModel>);
inline void _1c7e71dcb_makeCallSlice(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b486d7_BuiltinMakeCallExprModel>*);
inline void _1c7e72184_makeCallStr(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b486d7_BuiltinMakeCallExprModel>*);
inline void _1c7e7243c_makeCall(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b486d7_BuiltinMakeCallExprModel>);
inline void _1c7e726e5_pushToSlice(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9d8d1bd_PushToSliceExprModel>);
inline void _1c7e7299d_appendToSlice(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9d8d597_AppendToSliceExprModel>);
inline void _1c7e72c56_appendCall(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b48ab1_BuiltinAppendCallExprModel>);
inline void _1c7e7300e_sizeof(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b458e3_SizeofExprModel>);
inline void _1c7e732b7_alignof(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b4a563_AlignofExprModel>);
inline void _1c7e73570_runeLit(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b4a860_RuneExprModel>);
inline void _1c7e73828_structureStatic(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b4654d_StructStaticIdentExprModel>);
inline void _1c7e73ad1_integratedToStr(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b4ab5c_IntegratedToStrExprModel>);
inline void _1c7e73d89_backendEmit(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b4b036_BackendEmitExprModel>);
inline void _1c7e74142_free(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9b4b333_FreeExprModel>);
inline void _1c7e743ea_strComp(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9d8c112_StrCompExprModel>);
inline void _1c7e746a3_inlineStdInternalNosafeStobs(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9d8d894_InlineStdInternalNosafeStobs>);
inline void _1c7e7495b_emptyCompare(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9d8b7d7_EmptyCompareExprModel>);
inline void _1c7e74c14_model(jule::Ptr<_1c7e62790_exprCoder>, jule::Any);
inline void _1c7e74ebc_initExpr(jule::Ptr<_1c7e62790_exprCoder>, jule::Ptr<_1b9c8d1cd_TypeKind>);
inline jule::Ptr<_1c7e78036_TestCoder> static__1c7e78476_New(jule::Ptr<_1c803eaae_ObjectCoder>*);
inline jule::Ptr<_1b9bb1200_ImportInfo> _1c7e7870c_findTestingPackage(jule::Ptr<_1c7e78036_TestCoder>);
inline void _1c7e789b5_appendTest(jule::Ptr<_1c7e78036_TestCoder>, jule::Ptr<_1b9b5216e_FnIns>);
inline void _1c7e78c6d_appendPackageTests(jule::Ptr<_1c7e78036_TestCoder>, jule::Ptr<_1b9bb4126_Package>*);
inline jule::Bool _1c7e79004_readyTestingPackage(jule::Ptr<_1c7e78036_TestCoder>);
inline void _1c7e79202_callTmReset(jule::Ptr<_1c7e78036_TestCoder>);
inline void _1c7e79400_callTmFailed(jule::Ptr<_1c7e78036_TestCoder>);
inline void _1c7e795ed_callTmSkipped(jule::Ptr<_1c7e78036_TestCoder>);
inline void _1c7e797eb_Serialize(jule::Ptr<_1c7e78036_TestCoder>);
inline void static__1c7e7b248_writeIdentTo(_23d16295d_StrBuilder*, jule::Str*);
inline jule::Str static__1c7e7b5bc_toOut(jule::Str*, jule::Uintptr);
inline jule::Str static__1c7e7b9eb_toLocal(jule::I32, jule::I32, jule::Str*);
inline jule::Str static__1c7e7bcb5_func(jule::Ptr<_1b9b4e26a_Fn>*);
inline jule::Str static__1c7e7c07e_funcIns(jule::Ptr<_1b9b5216e_FnIns>*);
inline jule::Str static__1c7e7c348_traitDecl(jule::Ptr<_1b9b62514_Trait>);
inline jule::Str static__1c7e7c612_param(jule::Ptr<_1b9b4c796_Param>*);
inline jule::Str static__1c7e7c8cb_structure(jule::Ptr<_1b9b393a9_Struct>*);
inline jule::Str static__1c7e7cb95_structureIns(jule::Ptr<_1b9b3c137_StructIns>*);
inline jule::Str static__1c7e7ce5e_field(jule::Ptr<_1b9b364b6_Field>*);
inline jule::Str static__1c7e7d228_var(jule::Ptr<_1b9c09611_Var>);
inline jule::Str static__1c7e7d4e2_iterBegin(jule::Uintptr);
inline jule::Str static__1c7e7d7ab_iterEnd(jule::Uintptr);
inline jule::Str static__1c7e7da75_iterNext(jule::Uintptr);
inline jule::Str static__1c7e7dd3e_label(jule::Uintptr);
inline jule::Str static__1c7e7e108_matchEnd(jule::Uintptr);
inline jule::Str static__1c7e7e3c2_caseBegin(jule::Uintptr);
inline jule::Str _1c804e0eb_Str(_1c804dc66_customType*);
inline jule::Bool _1c804e43c_Equal(jule::Ptr<_1c804dc66_customType>, jule::Ptr<_1b9c8d1cd_TypeKind>);
inline jule::Ptr<_1c804e86b_typeCoder> static__1c804edaa_new(jule::Ptr<_1c803eaae_ObjectCoder>*);
inline jule::Str _1c80501eb_toType(_1c804e86b_typeCoder*, jule::Str);
inline jule::Str _1c805053c_prim(_1c804e86b_typeCoder*, jule::Ptr<_1b9c95ca7_Prim>);
inline jule::Str _1c805087d_tuple(_1c804e86b_typeCoder*, jule::Ptr<_1b9c9ad9a_Tuple>);
inline jule::Str _1c8050bbe_asSptr(_1c804e86b_typeCoder*, jule::Str);
inline jule::Str _1c8051010_sptr(_1c804e86b_typeCoder*, jule::Ptr<_1b9c997d3_Sptr>);
inline jule::Str _1c8051351_ptr(_1c804e86b_typeCoder*, jule::Ptr<_1b9c9d09a_Ptr>);
inline jule::Str _1c8051692_enumDecl(_1c804e86b_typeCoder*, jule::Ptr<_1b9b64c0e_Enum>);
inline jule::Str _1c80519d3_typeEnumDecl(_1c804e86b_typeCoder*, jule::Ptr<_1b9b66419_TypeEnum>);
inline jule::Str _1c8051d24_asSlice(_1c804e86b_typeCoder*, jule::Ptr<_1b9c8d1cd_TypeKind>);
inline jule::Str _1c8052165_slice(_1c804e86b_typeCoder*, jule::Ptr<_1b9c9a2a6_Slc>);
inline jule::Str _1c80524a6_mapType(_1c804e86b_typeCoder*, jule::Ptr<_1b9c9b94a_Map>);
inline jule::Str _1c80527e7_traitIdent(_1c804e86b_typeCoder*, jule::Str);
inline jule::Str _1c8052b38_traitDecl(_1c804e86b_typeCoder*, jule::Ptr<_1b9b62514_Trait>);
inline jule::Str _1c8052e79_structure(_1c804e86b_typeCoder*, jule::Ptr<_1b9b393a9_Struct>);
inline jule::Str _1c80532ba_structureIns(_1c804e86b_typeCoder*, jule::Ptr<_1b9b3c137_StructIns>);
inline jule::Str _1c805360b_array(_1c804e86b_typeCoder*, jule::Ptr<_1b9c9c5c7_Arr>);
inline jule::Str _1c8053c8d_paramIns(_1c804e86b_typeCoder*, jule::Ptr<_1b9b511c3_ParamIns>*);
inline void _1c8054442_funcInsResult(_1c804e86b_typeCoder*, _23d16295d_StrBuilder*, jule::Ptr<_1b9b5216e_FnIns>*);
inline jule::Str _1c8054783_anonFunc(_1c804e86b_typeCoder*, jule::Ptr<_1b9b5216e_FnIns>);
inline jule::Str _1c8054ac4_func(_1c804e86b_typeCoder*, jule::Ptr<_1b9b5216e_FnIns>);
inline jule::Str _1c8054e15_kind(_1c804e86b_typeCoder*, jule::Ptr<_1b9c8d1cd_TypeKind>);
inline jule::Ptr<_1c8057643_resultCoder> static__1c8057b1b_new(jule::Ptr<_1c804e86b_typeCoder>*);
inline void _1c8057e7e_ptr(_1c8057643_resultCoder*, _23d16295d_StrBuilder*, jule::Ptr<_1b9c9d09a_Ptr>);
inline void _1c80582e2_sptr(_1c8057643_resultCoder*, _23d16295d_StrBuilder*, jule::Ptr<_1b9c997d3_Sptr>);
inline void _1c8058655_mapType(_1c8057643_resultCoder*, _23d16295d_StrBuilder*, jule::Ptr<_1b9c9b94a_Map>);
inline void _1c80589b8_slice(_1c8057643_resultCoder*, _23d16295d_StrBuilder*, jule::Ptr<_1b9c9a2a6_Slc>);
inline void _1c8058d2b_arr(_1c8057643_resultCoder*, _23d16295d_StrBuilder*, jule::Ptr<_1b9c9c5c7_Arr>);
inline void _1c805918e_func(_1c8057643_resultCoder*, _23d16295d_StrBuilder*, jule::Ptr<_1b9b5216e_FnIns>);
inline void _1c8059502_tup(_1c8057643_resultCoder*, _23d16295d_StrBuilder*, jule::Ptr<_1b9c9ad9a_Tuple>);
inline void _1c8059865_codeMut(_1c8057643_resultCoder*, _23d16295d_StrBuilder*, jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline void _1c8059bc8_codeMut1(_1c8057643_resultCoder*, _23d16295d_StrBuilder*, jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline jule::Str _1c8059ed6_code(_1c8057643_resultCoder*, jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline jule::Str _1cb4dc0ad_Name(_1cb4dbb90_Flag*);
inline jule::Str _1cb4dc212_What(_1cb4dbb90_Flag*);
inline void _1cb4dc366_Reset(_1cb4dbb90_Flag*);
inline jule::I32 _1cb4dc4ba_Short(_1cb4dbb90_Flag*);
inline jule::Str _1cb4e0424_Name(_1cb4e07dc_Flag*);
inline jule::Str _1cb4e0567_What(_1cb4e07dc_Flag*);
inline void _1cb4e0ac8_Reset(_1cb4e07dc_Flag*);
inline jule::I32 _1cb4e0c1b_Short(_1cb4e07dc_Flag*);
inline jule::Str _1cb4e3b20_Name(_1cb4e3ed8_Flag*);
inline jule::Str _1cb4e3c63_What(_1cb4e3ed8_Flag*);
inline void _1cb4e42c4_Reset(_1cb4e3ed8_Flag*);
inline jule::I32 _1cb4e4417_Short(_1cb4e3ed8_Flag*);
inline jule::Str _1cb4e7360_Name(_1cb4e7728_Flag*);
inline jule::Str _1cb4e74a3_What(_1cb4e7728_Flag*);
inline void _1cb4e7a14_Reset(_1cb4e7728_Flag*);
inline jule::I32 _1cb4e7b57_Short(_1cb4e7728_Flag*);
inline jule::Str _1cb4eaa5b_Name(_1cb4eae24_Flag*);
inline jule::Str _1cb4eab9e_What(_1cb4eae24_Flag*);
inline void _1cb4eb210_Reset(_1cb4eae24_Flag*);
inline jule::I32 _1cb4eb353_Short(_1cb4eae24_Flag*);
inline jule::Ptr<_1c80c44c3_FlagSet> static__1c80c47ae_New(void);
inline jule::Trait<_1c80c2922_CommonFlag> _1c80c4c32_FindFlag(_1c80c44c3_FlagSet*, jule::Str);
inline jule::Trait<_1c80c2922_CommonFlag> _1c80c5073_FindFlagShort(_1c80c44c3_FlagSet*, jule::I32);
inline jule::Exceptional<jule::Slice<jule::Str>> _1c80c564a_Parse(_1c80c44c3_FlagSet*, jule::Slice<jule::Str>);
inline jule::Ptr<_1cb4eae24_Flag> _1cb563574_addFlagCommon(_1c80c44c3_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1cb4e7728_Flag> _1cb56b88a_addFlagCommon(_1c80c44c3_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1cb5617b4_AddVar(_1c80c44c3_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1cb569b1e_AddVar(_1c80c44c3_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
inline __jule_tuple_i64__jule_tuple_bool _1cb50d7c7_parseInteger(_1c80c6e54_argParser*, jule::Str*, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I32)>);
inline __jule_tuple_u64__jule_tuple_bool _1cb51600a_parseInteger(_1c80c6e54_argParser*, jule::Str*, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I32)>);
inline jule::Str _1c80cc5ca_getData(_1c80c6e54_argParser*);
inline jule::VoidExceptional _1c80cc850_processFlag(_1c80c6e54_argParser*, jule::Trait<_1c80c2922_CommonFlag>*);
inline jule::VoidExceptional _1c80ccb08_singleDash(_1c80c6e54_argParser*, jule::Str*);
inline jule::VoidExceptional _1c80ccdb1_doubleDash(_1c80c6e54_argParser*, jule::Str*);
inline jule::VoidExceptional _1c80cd0ae_tryArg(_1c80c6e54_argParser*);
inline jule::VoidExceptional _1c80cd2ac_parse(_1c80c6e54_argParser*);
inline jule::Ptr<_1c803eaae_ObjectCoder> static__1c803eeaa_New(jule::Ptr<_1ba834944_IR>*, _1c803d096_SerializationInfo);
inline void _1c8040263_write(jule::Ptr<_1c803eaae_ObjectCoder>, jule::Str);
inline void _1c8040461_addIndent(jule::Ptr<_1c803eaae_ObjectCoder>);
inline void _1c804065e_doneIndent(jule::Ptr<_1c803eaae_ObjectCoder>);
inline void _1c804085c_indent(jule::Ptr<_1c803eaae_ObjectCoder>);
inline jule::I32 _1c8040b9d_findAnyType(jule::Ptr<_1c803eaae_ObjectCoder>, jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline jule::I32 _1c8040ede_pushAnyType(jule::Ptr<_1c803eaae_ObjectCoder>, jule::Ptr<_1b9c8d1cd_TypeKind>);
inline void _1c8041297_pushResultIns(jule::Ptr<_1c803eaae_ObjectCoder>, jule::Ptr<_1b9b5216e_FnIns>*);
inline void _1c8041550_pushResult(jule::Ptr<_1c803eaae_ObjectCoder>, jule::Ptr<_1b9b4e26a_Fn>*);
inline jule::I32 _1c804194b_findTypeOffsetS(_1c803eaae_ObjectCoder*, jule::Ptr<_1b9b62514_Trait>, jule::Ptr<_1b9b3c137_StructIns>);
inline jule::I32 _1c8041d47_findTypeOffset(_1c803eaae_ObjectCoder*, jule::Ptr<_1b9b62514_Trait>, jule::Ptr<_1b9c8d1cd_TypeKind>);
inline void _1c80421aa_pushAndWriteMaskMapper(jule::Ptr<_1c803eaae_ObjectCoder>, jule::Ptr<_1b9b62514_Trait>, jule::Ptr<_1b9b62514_Trait>);
inline void _1c8042463_locInfo(jule::Ptr<_1c803eaae_ObjectCoder>, jule::Ptr<_1b9b032eb_Token>*);
inline void _1c8042661_head(jule::Ptr<_1c803eaae_ObjectCoder>);
inline void _1c804285e_links(jule::Ptr<_1c803eaae_ObjectCoder>);
inline void _1c8042b17_prepareStructure(_1c803eaae_ObjectCoder*, jule::Ptr<_1b9b393a9_Struct>*);
inline void _1c8042d15_prepareStructures(jule::Ptr<_1c803eaae_ObjectCoder>);
inline void _1c80430bd_iterPackages(jule::Ptr<_1c803eaae_ObjectCoder>, jule::Fn<void(jule::Ptr<_1b9bb4126_Package>*)>);
inline void _1c80432bb_buildTraitMap(jule::Ptr<_1c803eaae_ObjectCoder>);
inline void _1c80434b9_traitDecls(jule::Ptr<_1c803eaae_ObjectCoder>);
inline void _1c8043772_structurePlainDecl(jule::Ptr<_1c803eaae_ObjectCoder>, jule::Ptr<_1b9b393a9_Struct>*);
inline void _1c8043970_structurePlainDecls(jule::Ptr<_1c803eaae_ObjectCoder>);
inline void _1c8043c28_fieldDecl(jule::Ptr<_1c803eaae_ObjectCoder>, jule::Ptr<_1b9b3b587_FieldIns>*);
inline void _1c8043ed1_structureDestructor(jule::Ptr<_1c803eaae_ObjectCoder>, jule::Ptr<_1b9b3c137_StructIns>*);
inline void _1c8044344_structureOperatorEq(jule::Ptr<_1c803eaae_ObjectCoder>, jule::Str*, jule::Ptr<_1b9b3c137_StructIns>*);
inline void _1c80446a7_structureOperatorNotEq(jule::Ptr<_1c803eaae_ObjectCoder>, jule::Str*, jule::Ptr<_1b9b3c137_StructIns>*);
inline void _1c8044ac5_structureOperator(jule::Ptr<_1c803eaae_ObjectCoder>, jule::Str*, jule::Ptr<_1b9b5216e_FnIns>*, jule::Str);
inline void _1c8044d7d_structureOperators(jule::Ptr<_1c803eaae_ObjectCoder>, jule::Ptr<_1b9b3c137_StructIns>*);
inline void _1c8045136_structureInsDecl(jule::Ptr<_1c803eaae_ObjectCoder>, jule::Ptr<_1b9b3c137_StructIns>*);
inline void _1c80453de_structureDecl(jule::Ptr<_1c803eaae_ObjectCoder>, jule::Ptr<_1b9b393a9_Struct>*);
inline void _1c80455dc_structureDecls(jule::Ptr<_1c803eaae_ObjectCoder>);
inline void _1c80457da_structureMethodDecls(jule::Ptr<_1c803eaae_ObjectCoder>);
inline void _1c8045a93_paramsDecls(jule::Ptr<_1c803eaae_ObjectCoder>, jule::Slice<jule::Ptr<_1b9b511c3_ParamIns>>*);
inline void _1c8045e06_funcHead(jule::Ptr<_1c803eaae_ObjectCoder>, jule::Ptr<_1b9b5216e_FnIns>*, jule::Bool);
inline void _1c8046269_funcDeclIns(jule::Ptr<_1c803eaae_ObjectCoder>, jule::Ptr<_1b9b5216e_FnIns>*, jule::Bool);
inline void _1c80465cc_funcDecl(jule::Ptr<_1c803eaae_ObjectCoder>, jule::Ptr<_1b9b4e26a_Fn>*, jule::Bool);
inline void _1c80469ea_funcDeclTrait(jule::Ptr<_1c803eaae_ObjectCoder>, jule::Ptr<_1b9b62514_Trait>*, jule::Ptr<_1b9b4e26a_Fn>*, jule::Bool);
inline void _1c8046be8_funcDecls(jule::Ptr<_1c803eaae_ObjectCoder>);
inline void _1c804705b_traitDataTypeMethods(jule::Ptr<_1c803eaae_ObjectCoder>, jule::Ptr<_1b9b62514_Trait>*, jule::Ptr<_1b9b62514_Trait>*);
inline void _1c8047259_traitDataTypes(jule::Ptr<_1c803eaae_ObjectCoder>);
inline void _1c8047512_paramIns(jule::Ptr<_1c803eaae_ObjectCoder>, jule::Ptr<_1b9b511c3_ParamIns>*);
inline void _1c80477ba_paramsIns(jule::Ptr<_1c803eaae_ObjectCoder>, jule::Slice<jule::Ptr<_1b9b511c3_ParamIns>>*);
inline void _1c8047b2d_varInitExpr(jule::Ptr<_1c803eaae_ObjectCoder>, jule::Ptr<_1b9c09611_Var>*, jule::Fn<void(void)>);
inline void _1c8047dd6_var(jule::Ptr<_1c803eaae_ObjectCoder>, jule::Ptr<_1b9c09611_Var>);
inline void _1c804818e_funcIns(jule::Ptr<_1c803eaae_ObjectCoder>, jule::Ptr<_1b9b5216e_FnIns>*);
inline void _1c8048447_func(jule::Ptr<_1c803eaae_ObjectCoder>, jule::Ptr<_1b9b4e26a_Fn>*);
inline void _1c80487aa_funcTrait(jule::Ptr<_1c803eaae_ObjectCoder>, jule::Ptr<_1c803d66d_traitHash>*, jule::Ptr<_1b9b4e26a_Fn>*);
inline void _1c8048b1d_traitWrapper(jule::Ptr<_1c803eaae_ObjectCoder>, jule::Ptr<_1b9b4e26a_Fn>*, jule::Ptr<_1c803d66d_traitHash>*);
inline void _1c8048d1b_traitWrappers(jule::Ptr<_1c803eaae_ObjectCoder>);
inline void _1c804917e_traitDataMethods(jule::Ptr<_1c803eaae_ObjectCoder>, jule::Ptr<_1b9b62514_Trait>*, jule::Ptr<_1c803d66d_traitHash>*);
inline void _1c80494e2_traitData(jule::Ptr<_1c803eaae_ObjectCoder>, jule::Ptr<_1c803d66d_traitHash>*, jule::Ptr<_1b9b62514_Trait>*);
inline void _1c80496e0_traitDatas(jule::Ptr<_1c803eaae_ObjectCoder>);
inline void _1c80498dd_globals(jule::Ptr<_1c803eaae_ObjectCoder>);
inline void _1c8049adb_decls(jule::Ptr<_1c803eaae_ObjectCoder>);
inline void _1c8049d94_structureMethods(jule::Ptr<_1c803eaae_ObjectCoder>, jule::Ptr<_1b9b3c137_StructIns>*);
inline void _1c804a14c_structureOstream(jule::Ptr<_1c803eaae_ObjectCoder>, jule::Ptr<_1b9b3c137_StructIns>*);
inline void _1c804a405_structureIns(jule::Ptr<_1c803eaae_ObjectCoder>, jule::Ptr<_1b9b3c137_StructIns>*);
inline void _1c804a6ad_structure(jule::Ptr<_1c803eaae_ObjectCoder>, jule::Ptr<_1b9b393a9_Struct>*);
inline void _1c804a8ab_structures(jule::Ptr<_1c803eaae_ObjectCoder>);
inline void _1c804aaa9_funcs(jule::Ptr<_1c803eaae_ObjectCoder>);
inline void _1c804ad62_pushInit(jule::Ptr<_1c803eaae_ObjectCoder>, jule::Ptr<_1b9bb4126_Package>*);
inline void _1c804b060_initCaller(jule::Ptr<_1c803eaae_ObjectCoder>);
inline void _1c804b25d_end(jule::Ptr<_1c803eaae_ObjectCoder>);
inline void _1c804b45b_serializeHead(jule::Ptr<_1c803eaae_ObjectCoder>);
inline void _1c804b659_Serialize(jule::Ptr<_1c803eaae_ObjectCoder>);
inline jule::Ptr<_1ba963d5e_ObjectDeadCode> static__1ba964304_new(jule::Ptr<_1ba834944_IR>*);
inline jule::Bool _1cac952c3_isLive(jule::Ptr<_1ba963d5e_ObjectDeadCode>, jule::Ptr<_1b9b62514_Trait>*);
inline jule::Bool _1cac9ad23_isLive(jule::Ptr<_1ba963d5e_ObjectDeadCode>, jule::Ptr<_1b9b5216e_FnIns>*);
inline jule::Bool _1caca2236_isLive(jule::Ptr<_1ba963d5e_ObjectDeadCode>, jule::Ptr<_1b9b3c137_StructIns>*);
inline jule::Bool _1caca9a57_isLive(jule::Ptr<_1ba963d5e_ObjectDeadCode>, jule::Ptr<_1b9c09611_Var>*);
inline void _1cac9568b_pushLive(jule::Ptr<_1ba963d5e_ObjectDeadCode>, jule::Ptr<_1b9b62514_Trait>);
inline void _1cac9b1a8_pushLive(jule::Ptr<_1ba963d5e_ObjectDeadCode>, jule::Ptr<_1b9b5216e_FnIns>);
inline void _1caca27b9_pushLive(jule::Ptr<_1ba963d5e_ObjectDeadCode>, jule::Ptr<_1b9b3c137_StructIns>);
inline void _1caca9e20_pushLive(jule::Ptr<_1ba963d5e_ObjectDeadCode>, jule::Ptr<_1b9c09611_Var>);
inline void _1c765c793_setReferencesAsLive(jule::Ptr<_1ba963d5e_ObjectDeadCode>, jule::Ptr<_1b9b5531a_ReferenceStack>*);
inline void _1c765ca4b_inits(jule::Ptr<_1ba963d5e_ObjectDeadCode>, jule::Ptr<_1b9bb4126_Package>*);
inline void _1c765cd04_collectLivePackage(jule::Ptr<_1ba963d5e_ObjectDeadCode>, jule::Ptr<_1b9bb4126_Package>*);
inline void _1c765d002_collectLive(jule::Ptr<_1ba963d5e_ObjectDeadCode>);
inline void _1c765d2aa_removeDeadGlobals(jule::Ptr<_1ba963d5e_ObjectDeadCode>, jule::Slice<jule::Ptr<_1b9c09611_Var>>*);
inline void _1c765d563_removeDeadFns(jule::Ptr<_1ba963d5e_ObjectDeadCode>, jule::Slice<jule::Ptr<_1b9b4e26a_Fn>>*);
inline void _1c765d81b_removeDeadStructs(jule::Ptr<_1ba963d5e_ObjectDeadCode>, jule::Slice<jule::Ptr<_1b9b393a9_Struct>>*);
inline void _1c765dac4_removeDeadTraits(jule::Ptr<_1ba963d5e_ObjectDeadCode>, jule::Slice<jule::Ptr<_1b9b62514_Trait>>*);
inline void _1c765dd7c_removeDeadsFile(jule::Ptr<_1ba963d5e_ObjectDeadCode>, jule::Ptr<_1b9c57ce1_SymbolTable>*);
inline void _1c765e135_removeDeadsPackage(jule::Ptr<_1ba963d5e_ObjectDeadCode>, jule::Ptr<_1b9bb4126_Package>*);
inline void _1c765e333_removeDeads(jule::Ptr<_1ba963d5e_ObjectDeadCode>);
inline void _1c765e531_elimanate(jule::Ptr<_1ba963d5e_ObjectDeadCode>);
inline __jule_tuple_x_1ba834944_IR__jule_tuple_s_23d21115a_Log static__1ba834da6_Build(jule::Str, jule::I32);
inline void _1ba835390_appendStructs(_1ba834944_IR*, jule::Ptr<_1b9bb4126_Package>*, jule::Slice<jule::Ptr<_1b9b393a9_Struct>>*);
inline jule::Slice<jule::Ptr<_1b9b393a9_Struct>> _1ba835626_GetAllStructures(_1ba834944_IR*);
inline void _1ba835989_appendGlobals(_1ba834944_IR*, jule::Ptr<_1b9bb4126_Package>*, jule::Slice<jule::Ptr<_1b9c09611_Var>>*);
inline jule::Slice<jule::Ptr<_1b9c09611_Var>> _1ba835c20_GetAllGlobals(_1ba834944_IR*);
inline void _1ba835e1d_Order(_1ba834944_IR*);
inline jule::Str _1b9b3c4ab_Str(_1b9b3c137_StructIns*);
inline jule::Bool _1b9b3c7ec_Equal(jule::Ptr<_1b9b3c137_StructIns>, jule::Ptr<_1b9c8d1cd_TypeKind>);
inline jule::Bool _1b9b3cca3_Same(_1b9b3c137_StructIns*, jule::Ptr<_1b9b3c137_StructIns>);
inline jule::Ptr<_1b9b4e26a_Fn> _1b9b3d19e_FindMethod(_1b9b3c137_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1b9b3b587_FieldIns> _1b9b3d4e0_FindField(_1b9b3c137_StructIns*, jule::Str);
inline jule::Ptr<_1b9c09611_Var> _1b9b3d831_FindStatic(_1b9b3c137_StructIns*, jule::Str);
inline jule::Ptr<_23d2c02e6_Cmd> static__23d2c0714_New(jule::Str);
inline jule::VoidExceptional _23d2c0912_Spawn(_23d2c02e6_Cmd*);
inline jule::Exceptional<jule::I32> _23d2c0d96_Wait(_23d2c02e6_Cmd*);
inline jule::VoidExceptional _23d3206dc_spawn(_23d2c02e6_Cmd*);
inline jule::Exceptional<jule::I32> _23d320b71_wait(_23d2c02e6_Cmd*);
inline void _23bc27205_Free(void*);
inline jule::Str _23bc580b0_BytePtrToStr(jule::U8*);
inline jule::I32 _22e0817e2_GetLastErrno(void);
inline jule::I32 _23bc67883_Fcntl(jule::I32, jule::I32, jule::I32);
inline jule::I32 _23bc67c07_Stat(jule::U8*, struct stat*);
inline jule::I32 _23bc68136_Open(jule::U8*, jule::I32, jule::I32);
inline jule::U8* _23bc684aa_Getcwd(jule::U8*, jule::U32);
inline DIR* _23bc689a5_Opendir(jule::U8*);
inline struct dirent* _23bc68c6e_Readdir(DIR*);
inline jule::I32 _23bc69038_Closedir(DIR*);
inline jule::I32 _23bc69940_Mkdir(jule::U8*, jule::I32);
inline jule::I32 _23bc69c09_Rmdir(jule::U8*);
inline jule::I32 _23bc69ec3_Unlink(jule::U8*);
inline jule::I32 _23bc94c67_Read(jule::I32, void*, jule::U32);
inline jule::I32 _23bc9510d_Close(jule::I32);
inline jule::I32 _23bc9553c_Write(jule::I32, void*, jule::U32);
inline void _23bc9576d_Exit(jule::I32);
inline jule::Slice<jule::U8> _23bca314e_Stobs(jule::Str*);
inline jule::I32 _23bd4e77d_getLastOsError(void);
inline jule::Slice<jule::Str> _23bd7d7e0_Args(void);
inline jule::Exceptional<jule::Str> _23bd7dc85_WorkingDir(void);
inline jule::Exceptional<jule::Str> _23bd7e6c0_getwd(void);
inline jule::Bool _23ce87145_IsLetter(jule::I32);
inline jule::Bool _23ceeec07_is16(jule::Slice<_23ceece69_Range16>, jule::U16);
inline jule::Bool _23d00007b_is32(jule::Slice<_23ceed497_Range32>, jule::U32);
inline jule::Bool _23d000884_isExcludingLatin(jule::Ptr<_23ceed94d_RangeTable>, jule::I32);
inline jule::Bool _23d000b4d_IsUpper(jule::I32);
inline __jule_tuple_i32__jule_tuple_int _23d10b4ea_DecodeRune(jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _23d10bb05_DecodeLastRune(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _23d10c95d_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _23d10ccd2_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I32 _23d10d365_RuneCountStr(jule::Str);
inline jule::Bool _23d10d62e_RuneStart(jule::U8);
inline jule::I32 _23d138cec_FindByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I32 _23d14b617_FindLastByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I32 _23d14b9be_FindByteStr(jule::Str*, jule::U8);
inline jule::I32 _23d14bd43_FindLastByteStr(jule::Str*, jule::U8);
inline jule::Str _23d14c2a5_Repeat(jule::Str, jule::I32);
inline jule::Bool _23d14c728_hasPrefix(jule::Str*, jule::Str*, jule::I32);
inline jule::Bool _23d14ca9c_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _23d14d053_hasSuffix(jule::Str*, jule::Str*, jule::I32);
inline jule::Bool _23d14d394_HasSuffix(jule::Str, jule::Str);
inline jule::I32 _23d14d7c3_FindAt(jule::Str, jule::Str, jule::I32);
inline jule::I32 _23d14e186_FindLastAt(jule::Str, jule::Str, jule::I32);
inline jule::I32 _23d14e50a_FindLast(jule::Str, jule::Str);
inline jule::I32 _23d1508d5_findRune(jule::Slice<jule::U8>*, jule::I32);
inline jule::I32 _23d151287_FindLastByte(jule::Str, jule::U8);
inline jule::I32 _23d152178_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _23d15292b_Split(jule::Str, jule::Str, jule::I32);
inline jule::Bool _23d152ca0_Contains(jule::Str, jule::Str);
inline jule::Bool _23d15381c_ContainsAny(jule::Str, jule::Str);
inline jule::I32 _23d153b91_Count(jule::Str, jule::Str);
inline jule::Str _23d15417a_Replace(jule::Str, jule::Str, jule::Str, jule::I32);
inline void _23d150e24_trimLeft(jule::Slice<jule::U8>*, jule::Slice<jule::U8>*);
inline jule::Str _23d155324_TrimLeft(jule::Str, jule::Str);
inline void _23d155610_trimRight(jule::Slice<jule::U8>*, jule::Slice<jule::U8>*);
inline jule::Str _23d155d08_Trim(jule::Str, jule::Str);
inline jule::Str _23d15617c_Join(jule::Slice<jule::Str>, jule::Str);
inline jule::Str _23d16e33d_Clean(jule::Str);
inline jule::Str _23d16e915_FromSlash(jule::Str);
inline jule::Str _23d16ec56_Join(jule::Slice<jule::Str>);
inline jule::Str _23d170020_Ext(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _23d1702d9_Abs(jule::Str);
inline jule::Str _23d1705a3_Base(jule::Str);
inline jule::Str _23d170949_Dir(jule::Str);
inline jule::Str _23d170c13_VolumeName(jule::Str);
inline jule::Bool _23d171a5a_IsPathSep(jule::U8);
inline jule::Bool _23d171d68_IsAbs(jule::Str);
inline jule::I32 _23d172132_volumeNameLen(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _23d172473_abs(jule::Str);
inline jule::Str _23d17273c_join(jule::Slice<jule::Str>);
inline jule::I32 _23bc9a4dc_getLastFsError(void);
inline __jule_tuple_int__jule_tuple_bool _23d2c1b99_AtoiBp(jule::U8*, jule::I32);
inline jule::Str _23d31b573_Itoa(jule::I32);
inline jule::Str _23d31b881_Utoa(jule::U32);
inline jule::Slice<char*> _23d31edd4_strSliceToCstrSlice(jule::Slice<jule::Str>*);
inline jule::I32 _23d320258_execvp(jule::Str*, jule::Slice<jule::Str>*);
inline jule::VoidExceptional _23d320489_setenv(jule::Slice<jule::Str>*);
inline jule::I32 _23d321413_processErrorFromCode(jule::I32);
inline jule::I32 _23d321666_getLastProcessError(void);
inline void _23d321e80_Exit(jule::I32);
inline jule::Str _23d32218e_Executable(void);
inline jule::Bool _23d203ee9_IsStdHeaderPath(jule::Str);
inline jule::Bool _23d2042a2_IsValidHeaderExt(jule::Str);
inline jule::Bool _23d20456b_IsValidCppExt(jule::Str);
inline jule::Str _23d2115bc_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _23d2118ca_argToStr(jule::Any);
inline jule::I32 _23d211b94_findNextFmt(jule::Str);
inline jule::Str _23d21205c_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _23d212dc6_IsTopDirective(jule::Str);
inline jule::Bool _23d214328_IsWindows(jule::Str);
inline jule::Bool _23d214603_IsDarwin(jule::Str);
inline jule::Bool _23d2148bc_IsLinux(jule::Str);
inline jule::Bool _23d214c0d_IsI386(jule::Str);
inline jule::Bool _23d214ec7_IsAmd64(jule::Str);
inline jule::Bool _23d215291_IsArm64(jule::Str);
inline jule::Bool _23d21555a_IsUnix(jule::Str);
inline jule::Bool _23d215901_Is32Bit(jule::Str);
inline jule::Bool _23d215bba_Is64Bit(jule::Str);
inline void _23d32346a_init(void);
inline jule::I32 _1ec613bdb_LeadingZeros64(jule::U64);
inline jule::I32 _1ec614b43_TrailingZeros(jule::U32);
inline jule::I32 _1ec6155a0_TrailingZeros32(jule::U32);
inline jule::I32 _1ec615869_TrailingZeros64(jule::U64);
inline jule::I32 _1ec61b320_Len32(jule::U32);
inline jule::I32 _1ec61b5d9_Len64(jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1ec61c376_Add64(jule::U64, jule::U64, jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1ec61db80_Mul64(jule::U64, jule::U64);
inline jule::U32 _1ec51dd8d_F32Bits(jule::F32);
inline jule::F32 _1ec51e19b_F32FromBits(jule::U32);
inline jule::U64 _1ec51e465_F64Bits(jule::F64);
inline jule::F64 _1ec51e7a6_F64FromBits(jule::U64);
inline __jule_tuple_f64__jule_tuple_int _1ec521d5d_Frexp(jule::F64);
inline jule::F64 _1ec625e73_NaN(void);
inline jule::Bool _1ec626281_IsNaN(jule::F64);
inline jule::F64 _1ec62654a_Inf(jule::I32);
inline jule::Bool _1ec62688b_IsInf(jule::F64, jule::I32);
inline __jule_tuple_f64__jule_tuple_int _1ec626b55_normalize(jule::F64);
inline jule::F64 _1ec628629_Log(jule::F64);
inline jule::F64 _1ec62900e_Abs(jule::F64);
inline __jule_tuple_f64__jule_tuple_f64 _1ec630c08_Modf(jule::F64);
inline jule::F64 _1ec631511_Log2(jule::F64);
inline jule::Str _1ec65aa79_FmtFloat(jule::F64, jule::U8, jule::I32, jule::I32);
inline jule::Slice<jule::U8> _1ec65b162_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I32, jule::I32);
inline jule::Slice<jule::U8> _1ec65b86b_bigFtoa(jule::Slice<jule::U8>, jule::I32, jule::U8, jule::Bool, jule::U64, jule::I32, _1ec65998a_floatInfo*);
inline jule::Slice<jule::U8> _1ec65c042_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _1ec65a4e6_decimalSlice, jule::I32, jule::U8);
inline void _1ec65c493_roundShortest(_1ec66d284_decimal*, jule::U64, jule::I32, _1ec65998a_floatInfo*);
inline jule::Slice<jule::U8> _1ec65ca37_fmtE(jule::Slice<jule::U8>, jule::Bool, _1ec65a4e6_decimalSlice, jule::I32, jule::U8);
inline jule::Slice<jule::U8> _1ec65d021_fmtF(jule::Slice<jule::U8>, jule::Bool, _1ec65a4e6_decimalSlice, jule::I32);
inline jule::Slice<jule::U8> _1ec65d692_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I32, _1ec65998a_floatInfo*);
inline jule::Slice<jule::U8> _1ec65dd9b_fmtX(jule::Slice<jule::U8>, jule::I32, jule::U8, jule::Bool, jule::U64, jule::I32, _1ec65998a_floatInfo*);
inline jule::I32 _1ec65e220_min(jule::I32, jule::I32);
inline jule::I32 _1ec65e594_max(jule::I32, jule::I32);
inline jule::U8 _1ec6600de_lower(jule::U8);
inline __jule_tuple_u64__jule_tuple__1ebe8a0bd_ConvError _1ec660562_parseUint(jule::Str*, jule::I32, jule::I32);
inline jule::Exceptional<jule::U64> _1ec660991_ParseUint(jule::Str, jule::I32, jule::I32);
inline jule::Exceptional<jule::I64> _1ec660e47_ParseInt(jule::Str, jule::I32, jule::I32);
inline __jule_tuple_f64__jule_tuple_bool _1ec661b3a_eiselLemire64(jule::U64, jule::I32, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1ec66207a_eiselLemire32(jule::U64, jule::I32, jule::Bool);
inline jule::I32 _1ec663dd4_commonPrefixLenIgnoreCase(jule::Slice<jule::U8>*, jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1ec6641e2_special(jule::Slice<jule::U8>);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1ec6644ab_readFloat(jule::Str*);
inline __jule_tuple_f64__jule_tuple_bool _1ec66603a_atof64exact(jule::U64, jule::I32, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1ec666469_atof32exact(jule::U64, jule::I32, jule::Bool);
inline __jule_tuple_f64__jule_tuple__1ebe8a0bd_ConvError _1ec666a0d_atofHex(_1ec65998a_floatInfo*, jule::U64, jule::I32, jule::Bool, jule::Bool);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1ebe8a0bd_ConvError _1ec666dd7_atof32(jule::Str*);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1ebe8a0bd_ConvError _1ec6671a1_atof64(jule::Str*);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1ebe8a0bd_ConvError _1ec667525_parseFloatPrefix(jule::Str*, jule::I32);
inline jule::Exceptional<jule::F64> _1ec667899_ParseFloat(jule::Str, jule::I32);
inline void _1ec6681a2_ryuFtoaFixed32(_1ec65a4e6_decimalSlice*, jule::U32, jule::I32, jule::I32);
inline void _1ec668647_ryuFtoaFixed64(_1ec65a4e6_decimalSlice*, jule::U64, jule::I32, jule::I32);
inline void _1ec668e94_formatDecimal(_1ec65a4e6_decimalSlice*, jule::U64, jule::Bool, jule::Bool, jule::I32);
inline void _1ec66946c_ryuFtoaShortest(_1ec65a4e6_decimalSlice*, jule::U64, jule::I32, _1ec65998a_floatInfo*);
inline jule::I32 _1ec669736_mulByLog2Log10(jule::I32);
inline jule::I32 _1ec669a00_mulByLog10Log2(jule::I32);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1ec669e2e_computeBounds(jule::U64, jule::I32, _1ec65998a_floatInfo*);
inline void _1ec66a54a_ryuDigits(_1ec65a4e6_decimalSlice*, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _1ec66abbb_ryuDigits32(_1ec65a4e6_decimalSlice*, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I32);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1ec66b0ea_mult64bitPow10(jule::U32, jule::I32, jule::I32);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1ec66b529_mult128bitPow10(jule::U64, jule::I32, jule::I32);
inline jule::Bool _1ec66b89d_divisibleByPow5(jule::U64, jule::I32);
inline __jule_tuple_u32__jule_tuple_u32 _1ec66bb67_divmod1e9(jule::U64);
inline void _1ec66ead2_trim(_1ec66d284_decimal*);
inline void _1ec66edbd_rightShift(_1ec66d284_decimal*, jule::U32);
inline jule::Bool _1ec670374_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I32, jule::Str*);
inline void _1ec67062c_leftShift(_1ec66d284_decimal*, jule::U32);
inline jule::Bool _1ec6709a1_shouldRoundUp(_1ec66d284_decimal*, jule::I32);
inline jule::Str _1ec672134_FmtUint(jule::U64, jule::I32);
inline jule::Str _1ec6724ec_FmtInt(jule::I64, jule::I32);
inline jule::Str _1ec6727b6_Itoa(jule::I32);
inline jule::Str _1ec672b07_small(jule::I32);
inline jule::Bool _1ec672dc1_isPowerOfTwo(jule::I32);
inline __jule_tuple_su8__jule_tuple_str _1ec673465_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I32, jule::Bool, jule::Bool);
inline jule::Str _1ec674961_RealKindOf(jule::Str);
inline jule::I32 _1ec674c2a_BitsizeOf(jule::Str);
inline jule::Str _1ec67506b_IntFromBits(jule::I32);
inline jule::Str _1ec675335_UintFromBits(jule::I32);
inline jule::Str _1ec6755ee_FloatFromBits(jule::I32);
inline jule::Bool _1ec676248_CheckBitFloat(jule::Str, jule::I32);
inline jule::I32 _1ec676512_BitsizeOfFloat(jule::F64);
inline jule::I32 _1ec6767cb_BitsizeOfInt(jule::I64);
inline jule::I32 _1ec676a95_BitsizeOfUint(jule::U64);
inline void _1ec676c1b_UpdateTarget(void);
inline void _1ec676d92_init(void);
inline jule::I64 _1ec67abed_MinI(jule::Str);
inline jule::I64 _1ec67b00b_MaxI(jule::Str);
inline jule::U64 _1ec67b2c5_MaxU(jule::Str);
inline jule::F64 _1ec67b506_Min(jule::Str);
inline jule::F64 _1ec67b7c0_Max(jule::Str);
inline jule::Bool _1ec67bc43_IsI8Compatible(jule::Str);
inline jule::Bool _1ec67c051_IsI16Compatible(jule::Str);
inline jule::Bool _1ec67c31a_IsI32Compatible(jule::Str);
inline jule::Bool _1ec67c65b_IsI64Compatible(jule::Str);
inline jule::Bool _1ec67c925_IsU8Compatible(jule::Str);
inline jule::Bool _1ec67cbde_IsU16Compatible(jule::Str);
inline jule::Bool _1ec67cea8_IsU32Compatible(jule::Str);
inline jule::Bool _1ec67d34e_IsU64Compatible(jule::Str);
inline jule::Bool _1ec67d618_IsF32Compatible(jule::Str);
inline jule::Bool _1ec67d8d2_IsF64Compatible(jule::Str);
inline jule::Bool _1ec67dc56_TypesAreCompatible(jule::Str, jule::Str);
inline jule::Bool _1ec67e020_IsI16Greater(jule::Str);
inline jule::Bool _1ec67e2d9_IsI32Greater(jule::Str);
inline jule::Bool _1ec67e5a3_IsI64Greater(jule::Str);
inline jule::Bool _1ec67e86c_IsU16Greater(jule::Str);
inline jule::Bool _1ec67ece0_IsU32Greater(jule::Str);
inline jule::Bool _1ec6800a9_IsU64Greater(jule::Str);
inline jule::Bool _1ec680373_IsF32Greater(jule::Str);
inline jule::Bool _1ec68063c_IsF64Greater(jule::Str);
inline jule::Bool _1ec6809b1_IsGreater(jule::Str, jule::Str);
inline jule::Bool _1ec681a17_IsSigInt(jule::Str);
inline jule::Bool _1ec681d25_IsUnsigInt(jule::Str);
inline jule::Bool _1ec6820de_IsInt(jule::Str);
inline jule::Bool _1ec682430_IsFloat(jule::Str);
inline jule::Bool _1ec6826e9_IsNum(jule::Str);
inline jule::Bool _1ec6829b3_IsSigNum(jule::Str);
inline void _1ec68bd0d_lshiftUnsig(_1ec682ce3_Const*, _1ec682ce3_Const*);
inline void _1ec68c13d_rshiftUnsig(_1ec682ce3_Const*, _1ec682ce3_Const*);
inline jule::Bool _1b9b03a38_IsUnaryOp(jule::U32);
inline jule::Bool _1b9b03d46_IsBinOp(jule::U32);
inline jule::Bool _1b9b04451_IsStr(jule::Str);
inline jule::Bool _1b9b0471a_IsRawStr(jule::Str);
inline jule::Bool _1b9b049d4_IsRune(jule::Str);
inline jule::Bool _1b9b0540d_IsFloat(jule::Str);
inline jule::Bool _1b9b056c7_IsNum(jule::Str);
inline jule::Bool _1b9b05c5a_IsIgnoreIdent(jule::Str);
inline jule::Bool _1b9b06024_IsAnonIdent(jule::Str);
inline jule::Bool _1b9b065a7_IsSpace(jule::I32);
inline jule::Bool _1b9b06a2a_IsLetter(jule::I32);
inline jule::Bool _1b9b070ad_IsDecimal(jule::U8);
inline jule::Bool _1b9b07377_IsBinary(jule::U8);
inline jule::Bool _1b9b07641_IsOctal(jule::U8);
inline jule::Bool _1b9b0790a_IsHex(jule::U8);
inline jule::Bool _1b9b07bc4_IsAssign(jule::U32);
inline jule::Bool _1b9b07e8d_IsPostfixOp(jule::U32);
inline jule::Bool _1b9b08257_IsAssignOp(jule::U32);
inline jule::Ptr<_1b9b08ab5_File> _1b9b09e5c_NewFileSet(jule::Str);
inline _23d21115a_Log _1b9b0b9a8_makeErr(jule::I32, jule::I32, jule::Ptr<_1b9b08ab5_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1b9b0bd71_bytesHasPrefix(jule::Slice<jule::U8>*, jule::Str);
inline jule::Str _1b9b0c1e5_floatFmtE(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1b9b0c5ad_floatFmtP(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1b9b0c932_floatFmtDotnp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1b9b0cca6_floatFmtDotfp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1b9b0d12a_floatFmtDotp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1b9b0d5ae_floatNum(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1b9b0d878_commonNum(jule::Slice<jule::U8>*);
inline jule::Str _1b9b0db42_binaryNum(jule::Slice<jule::U8>*);
inline jule::Bool _1b9b0deb6_isFloatFmtE(jule::U8, jule::I32);
inline jule::Bool _1b9b0e33a_isFloatFmtP(jule::U8, jule::I32);
inline jule::Bool _1b9b0e6ae_isFloatFmtDotnp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Bool _1b9b0ea33_isFloatFmtDotp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Bool _1b9b0eda7_isFloatFmtDotfp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1b9b1032a_octalNum(jule::Slice<jule::U8>*);
inline jule::Str _1b9b105e4_hexNum(jule::Slice<jule::U8>*);
inline jule::Str _1b9b10968_hexEscape(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1b9b10c32_bigUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _1b9b10eeb_littleUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _1b9b112b5_hexByteEscape(jule::Slice<jule::U8>*);
inline jule::Str _1b9b1157e_byteEscape(jule::Slice<jule::U8>*);
inline jule::Slice<_23d21115a_Log> _1b9b16573_Lex(jule::Ptr<_1b9b08ab5_File>, jule::I32);
inline jule::Bool _1b9bcd3d7_FindModuleFile(jule::Slice<jule::Ptr<_23bc9be5b_DirEntry>>*);
inline jule::Str _1b9bcd6b2_FindModuleFileDeep(jule::Str);
inline jule::Slice<_23d21115a_Log> _1b9bcd97b_CheckModuleFile(jule::Str*);
inline jule::Bool _1b9bce4b5_IsPub(jule::Str*);
inline jule::Bool _1b9c28a3c_IsAscii(jule::I32);
inline jule::I32 _1b9c421d7_ToRune(jule::Slice<jule::U8>);
inline jule::Str _1b9c42391_ToRawStr(jule::Slice<jule::U8>);
inline jule::Str _1b9c426d2_ToStr(jule::Slice<jule::U8>);
inline __jule_tuple_u8__jule_tuple_bool _1b9c4299b_tryBtoaCommonEsq(jule::Slice<jule::U8>);
inline jule::I32 _1b9c42cdc_runeFromEsqSeq(jule::Slice<jule::U8>, jule::I32*);
inline jule::Slice<jule::U8> _1b9c43161_strEsqSeq(jule::Slice<jule::U8>, jule::I32*);
inline jule::I32 _1b9d74b77_findFormatPrefix(jule::Slice<jule::U8>*, jule::I32*);
inline jule::Slice<jule::U8> _1b9d7500c_getFormatRange(jule::I32*, jule::Slice<jule::U8>*);
inline void _1b9d752e8_FmtByDefault(_23d16295d_StrBuilder*, jule::Any*);
inline void _1b9d75716_applyFmtByDefault(_23d16295d_StrBuilder*, jule::I32*, jule::Slice<jule::Any>);
inline void _1b9d75b67_applyFmt(jule::Slice<jule::U8>*, _23d16295d_StrBuilder*, jule::I32*, jule::Slice<jule::Any>);
inline jule::Str _1b9d75ea8_Format(jule::Str*, jule::Slice<jule::Any>);
inline jule::Str _1b9d78032_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1b9b5444b_parameterUsesGenerics(jule::Ptr<_1b9b511c3_ParamIns>*, jule::Slice<jule::Ptr<_1b9b259c2_GenericDecl>>*);
inline jule::Ptr<_1b9c953a0_TypeSymbol> _1b9b56b9b_buildType(jule::Ptr<_1b9b187b7_TypeDecl>);
inline jule::Ptr<_1b9c5e15a_Value> _1b9b56ea9_buildExpr(jule::Ptr<_1b9b1caeb_Expr>);
inline jule::Ptr<_1b9c8c3db_TypeAlias> _1b9b57273_buildTypeAlias(jule::Ptr<_1b9b3012a_TypeAliasDecl>);
inline jule::Ptr<_1b9b364b6_Field> _1b9b575b4_buildField(jule::Ptr<_1b9b33903_FieldDecl>);
inline jule::Slice<jule::Ptr<_1b9b364b6_Field>> _1b9b5787d_buildFields(jule::Slice<jule::Ptr<_1b9b33903_FieldDecl>>*);
inline jule::Ptr<_1b9b393a9_Struct> _1b9b57b47_buildStruct(jule::Ptr<_1b9b342e9_StructDecl>);
inline jule::Ptr<_1b9b4c796_Param> _1b9b57e11_buildParam(jule::Ptr<_1b9b29025_ParamDecl>);
inline jule::Slice<jule::Ptr<_1b9b4c796_Param>> _1b9b582a7_buildParams(jule::Slice<jule::Ptr<_1b9b29025_ParamDecl>>*);
inline jule::Ptr<_1b9b4c015_RetType> _1b9b58571_buildRetType(jule::Ptr<_1b9b1b6aa_RetTypeDecl>);
inline jule::Ptr<_1b9b4e26a_Fn> _1b9b5883a_buildFunc(jule::Ptr<_1b9b2a477_FnDecl>);
inline jule::Slice<jule::Ptr<_1b9b4e26a_Fn>> _1b9b58b04_buildMethods(jule::Slice<jule::Ptr<_1b9b2a477_FnDecl>>*);
inline jule::Slice<jule::Ptr<_1b9c953a0_TypeSymbol>> _1b9b58dbd_buildTraitInherits(jule::Slice<jule::Ptr<_1b9b187b7_TypeDecl>>*);
inline jule::Ptr<_1b9b62514_Trait> _1b9b59187_buildTrait(jule::Ptr<_1b9b34a36_TraitDecl>);
inline jule::Ptr<_1b9b64192_EnumItem> _1b9b59451_buildEnumItem(jule::Ptr<_1b9b31add_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1b9b64192_EnumItem>> _1b9b5971a_buildEnumItems(jule::Slice<jule::Ptr<_1b9b31add_EnumItemDecl>>*);
inline jule::Ptr<_1b9b64c0e_Enum> _1b9b59b8d_buildEnum(jule::Ptr<_1b9b3269e_EnumDecl>);
inline jule::Ptr<_1b9b65d42_TypeEnumItem> _1b9b59e57_buildTypeEnumItem(jule::Ptr<_1b9b32ec9_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_1b9b65d42_TypeEnumItem>> _1b9b5a221_buildTypeEnumItems(jule::Slice<jule::Ptr<_1b9b32ec9_TypeEnumItemDecl>>*);
inline jule::Ptr<_1b9b66419_TypeEnum> _1b9b5a4da_buildTypeEnum(jule::Ptr<_1b9b33639_TypeEnumDecl>);
inline jule::Ptr<_1b9c09611_Var> _1b9b5a7a4_buildVar(jule::Ptr<_1b9b2b555_VarDecl>);
inline jule::Slice<jule::Ptr<_1b9c09611_Var>> _1b9b5aa6d_buildVars(jule::Slice<jule::Ptr<_1b9b2b555_VarDecl>>);
inline jule::Ptr<_1b9b8988d_Impl> _1b9b5ad37_buildImpl(jule::Ptr<_1b9b35196_Impl>);
inline jule::Ptr<_1b9c5d016_Data> _1b9b8537d_buildAsComptimeMethodData(jule::Ptr<_1b9b5216e_FnIns>*);
inline jule::Ptr<_1b9bb1200_ImportInfo> _1b9b8568b_findComptimePackage(jule::Ptr<_1b9bd23b9_Sema>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b85a10_buildComptimeTypeInfoData(jule::Ptr<_1b9bd23b9_Sema>*, jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9b85c41_buildComptimeValue(jule::Ptr<_1b9c5d016_Data>*);
inline jule::Bool _1b9b88c11_matchConstraint(jule::Str*, jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline jule::Bool _1b9b8901e_isBuiltinConstraint(jule::Str*);
inline jule::Ptr<_1b9b970c6_scopeChecker> _1b9b8ba9e_newScopeCheckerBase(jule::Ptr<_1b9bd23b9_Sema>*, jule::Ptr<_1b9b5216e_FnIns>);
inline jule::Ptr<_1b9b970c6_scopeChecker> _1b9b8be67_newScopeChecker(jule::Ptr<_1b9bd23b9_Sema>*, jule::Ptr<_1b9b5216e_FnIns>);
inline jule::Ptr<_1b9b95b30_scopeLabel> _1b9b8c2db_findLabelParent(jule::Str*, jule::Ptr<_1b9b970c6_scopeChecker>);
inline jule::Bool _1b9b8c6a4_modelIsGotoScope(jule::Any, jule::Ptr<_1b9b8ecc2_Scope>*);
inline jule::Bool _1b9b8ca28_stmtIsGotoScope(jule::Any*, jule::Ptr<_1b9b8ecc2_Scope>*);
inline jule::I32 _1b9b8cd9c_countMatchType(jule::Ptr<_1b9b93e08_Match>*, jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline jule::Slice<jule::Ptr<_1b9c5d016_Data>> _1b9b8d166_getDatasFromTupleData(jule::Ptr<_1b9c5d016_Data>*);
inline jule::Bool _1b9b8da29_checkMut(jule::Ptr<_1b9bd23b9_Sema>*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9c5d016_Data>, jule::Ptr<_1b9b032eb_Token>);
inline jule::Bool _1b9b8e013_checkAssign(jule::Ptr<_1b9bd23b9_Sema>*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9c5d016_Data>, jule::Ptr<_1b9b032eb_Token>);
inline jule::Bool _1b9b8e2cc_isValidAstStForNextSt(jule::Any*);
inline jule::Bool _1b9b8e596_isValidStForNextSt(jule::Any*);
inline jule::Bool _1b9b8e860_stmtIsDef(jule::Any*);
inline jule::U32 _1b9ba9193_removeEqFromOp(jule::U32);
inline jule::Ptr<_1b9c09611_Var> _1b9bad6d6_findVarInPackage(jule::Slice<jule::Ptr<_1b9c57ce1_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1b9c8c3db_TypeAlias> _1b9badb59_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1b9c57ce1_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1b9b393a9_Struct> _1b9bae088_findStructInPackage(jule::Slice<jule::Ptr<_1b9c57ce1_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1b9b4e26a_Fn> _1b9bae53e_findFnInPackage(jule::Slice<jule::Ptr<_1b9c57ce1_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1b9b62514_Trait> _1b9bae880_findTraitInPackage(jule::Slice<jule::Ptr<_1b9c57ce1_SymbolTable>>*, jule::Str*);
inline jule::Ptr<_1b9b64c0e_Enum> _1b9baec04_findEnumInPackage(jule::Slice<jule::Ptr<_1b9c57ce1_SymbolTable>>*, jule::Str*);
inline jule::Ptr<_1b9b66419_TypeEnum> _1b9bb0078_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1b9c57ce1_SymbolTable>>*, jule::Str*);
inline jule::Any _1b9bb05b7_defByIdentPackage(jule::Slice<jule::Ptr<_1b9c57ce1_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Bool _1b9bb6601_isStdPackage(jule::Str*, jule::Str);
inline jule::Bool _1b9bcea59_isValidModelForRef(jule::Any*);
inline _23d21115a_Log _1b9bd0087_compilerErr(jule::Ptr<_1b9b032eb_Token>*, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1b9bd040b_impIsLookupable(jule::Ptr<_1b9bb1200_ImportInfo>*, jule::Str*);
inline void _1b9bd06b4_appendRetVars(jule::Slice<jule::Ptr<_1b9c09611_Var>>*, jule::Ptr<_1b9b5216e_FnIns>*);
inline void _1b9bd09a0_appendParamVars(jule::Slice<jule::Ptr<_1b9c09611_Var>>*, jule::Ptr<_1b9b5216e_FnIns>*);
inline void _1b9bd0c8b_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1b9c8c3db_TypeAlias>>*, jule::Ptr<_1b9b5216e_FnIns>*);
inline jule::Ptr<_1b9c57ce1_SymbolTable> _1b9bd1110_findFile(jule::Slice<jule::Ptr<_1b9c57ce1_SymbolTable>>*, jule::Ptr<_1b9b08ab5_File>*);
inline void _1b9bd15b6_pushSuggestion(_23d21115a_Log*, jule::Str, jule::Slice<jule::Any>);
inline void _1b9c078ea_pushImplemented(jule::Ptr<_1b9b62514_Trait>, jule::Ptr<_1b9b393a9_Struct>*);
inline void _1b9c07bd6_pushImplements(jule::Ptr<_1b9b393a9_Struct>*, jule::Ptr<_1b9b62514_Trait>);
inline jule::Bool _1b9c43903_traitHasReferenceReceiver(jule::Ptr<_1b9b62514_Trait>*);
inline jule::Bool _1b9c43c88_floatAssignable(jule::Str*, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Bool _1b9c4410c_sigAssignable(jule::Str, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Bool _1b9c444c5_unsigAssignable(jule::Str, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Bool _1b9c44849_intAssignable(jule::Str, jule::Ptr<_1b9c5d016_Data>*);
inline void _1b9c51009_checkMutRiskOfStructLit(jule::Ptr<_1b9bd23b9_Sema>*, jule::Ptr<_1b9b422c4_StructLitExprModel>*);
inline jule::Ptr<_1b9c8d1cd_TypeKind> _1b9c56a9d_lenKind(void);
inline jule::Bool _1b9c56e00_isGoodValueToInfer(jule::Ptr<_1b9c5d016_Data>*);
inline jule::Ptr<_1b9b17bd4_Directive> _1b9c865e4_findDirective(jule::Slice<jule::Ptr<_1b9b17bd4_Directive>>*, jule::Str);
inline jule::Any _1b9c869ac_findBuiltinsImport(jule::Str*, jule::Ptr<_1b9bb1200_ImportInfo>);
inline void _1b9c86bdd_fitBitsize(jule::Ptr<_1b9c5d016_Data>*);
inline void _1b9c8701d_makeStructLitAlloc(jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9b422c4_StructLitExprModel>*);
inline jule::Ptr<_1b9c09611_Var> _1b9c87392_buildErrorVar(jule::Ptr<_1b9b8ecc2_Scope>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Any _1b9c87716_findBuiltinsSema(jule::Str*, jule::Ptr<_1b9bd23b9_Sema>);
inline jule::Bool _1b9c879d0_isOkForShifting(jule::Ptr<_1b9c5d016_Data>*);
inline jule::Bool _1b9c87da9_isInstancedStruct(jule::Ptr<_1b9b3c137_StructIns>);
inline jule::Bool _1b9c8822d_isPtrArithmeticCompatible(jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9c5d016_Data>*);
inline void _1b9c88519_applyCastKindModel(jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline void _1b9c88805_applyCastKind(jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9c88a14_buildVoidData(void);
inline jule::Str _1b9c88ccd_checkDataForIntegerIndexing(jule::Ptr<_1b9c5d016_Data>*);
inline void _1b9c890b9_applyCastModelByEnum(jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9b64c0e_Enum>);
inline void _1b9c893a5_castConstByType(jule::Str*, jule::Ptr<_1b9c5d016_Data>*);
inline void _1b9c8984a_updateModelToGenericIns(jule::Any*, jule::Ptr<_1b9b5216e_FnIns>*);
inline jule::Bool _1b9c89bbe_pushSubIdentFromExpr(jule::Any, jule::Ptr<_1b9b191be_SubIdentTypeDecl>*);
inline jule::Str _1b9c89e88_constoa(jule::Ptr<_1ec682ce3_Const>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9c8a30c_evalEnumStatic(jule::Ptr<_1b9b64c0e_Enum>*, jule::Ptr<_1b9b64192_EnumItem>*);
inline jule::Ptr<_1b9b422c4_StructLitExprModel> _1b9c8a5c6_isLitBased(jule::Any*);
inline void _1b9c8a8b2_makeImplicitDeref(jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9b032eb_Token>);
inline jule::Bool _1b9ca8935_kindUsesGenerics(jule::Ptr<_1b9c8d1cd_TypeKind>*, jule::Slice<jule::Ptr<_1b9b259c2_GenericDecl>>*);
inline jule::Bool _1b9ca8ced_hasDirective(jule::Slice<jule::Ptr<_1b9b17bd4_Directive>>*, jule::Str);
inline jule::Bool _1b9ca90b7_canGetPtr(jule::Ptr<_1b9c5d016_Data>*);
inline jule::Bool _1b9ca9408_isValidForSptrType(jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline jule::Bool _1b9ca96c2_isValidForRef(jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline jule::Bool _1b9ca998b_isBuiltinStrConvertable(jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline jule::Str _1b9ca9c55_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Ptr<_1b9c95ca7_Prim> _1b9caa0eb_buildPrimType(jule::Str);
inline void _1b9caa6a1_applyImplicitCast(jule::Ptr<_1b9c8d1cd_TypeKind>*, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Bool _1b9caa96a_validTypeForXof(jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline __jule_tuple_x_1b9c57ce1_SymbolTable__jule_tuple_s_23d21115a_Log _1b9cada06_buildSymbols(jule::Ptr<_1b9b1692a_Ast>*, jule::Trait<_1b9bad2da_Importer>*, jule::Ptr<_1b9b5b3ed_symbolBuilder>);
inline __jule_tuple_x_1b9bb4126_Package__jule_tuple_s_23d21115a_Log _1b9cade79_analyzePackage(jule::Slice<jule::Ptr<_1b9b1692a_Ast>>*, jule::Trait<_1b9bad2da_Importer>*, jule::I32*);
inline __jule_tuple_x_1b9bb4126_Package__jule_tuple_s_23d21115a_Log _1b9cae3a8_AnalyzePackage(jule::Slice<jule::Ptr<_1b9b1692a_Ast>>, jule::Trait<_1b9bad2da_Importer>, jule::I32);
inline jule::Ptr<_1b9b5216e_FnIns> _1b9d789b1_findBuiltinFunc(jule::Str*);
inline jule::Ptr<_1b9c8c3db_TypeAlias> _1b9d78cbe_primTypeAlias(jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline jule::Ptr<_1b9c09611_Var> _1b9d7c8c7_findBuiltinVar(jule::Str*);
inline jule::Ptr<_1b9c8c3db_TypeAlias> _1b9d7cb08_findBuiltinTypeAlias(jule::Str);
inline jule::Any _1b9d7cdc2_findBuiltinDef(jule::Str*);
inline jule::Any _1b9d7d18b_findBuiltinDefStdDebug(jule::Str*);
inline jule::Any _1b9d7d455_findBuiltinDefStdMem(jule::Str*);
inline jule::Any _1b9d7d7eb_findBuiltinDefStdComptime(jule::Str*);
inline jule::Any _1b9d7dab5_findBuiltinDefStdJuleIntegrated(jule::Str*);
inline jule::Any _1b9d7de39_findPackageBuiltinDef(jule::Str*, jule::Str*);
inline jule::Ptr<_1b9c5d016_Data> _1b9d7e368_builtinCallerCommonPlain(jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9d7e6dc_builtinCallerError(jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9d7eb1b_builtinCallerOut(jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9d8004a_builtinCallerOutln(jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9d80479_builtinCallerNew(jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9d80a62_builtinCallerPanic(jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9d80e91_builtinCallerMake(jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9d813c0_builtinCallerAppend(jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9d818a9_callerCopySlice(jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9d81cd8_builtinCallerCopy(jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9d8215c_callerLenSlice(jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9d824d1_callerLenMap(jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9d82855_callerLenArr(jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9d82bc9_callerLenStr(jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9d8304d_callerLenComptime(jule::Ptr<_1b9c5d016_Data>*, jule::I32);
inline jule::Ptr<_1b9c5d016_Data> _1b9d8347c_builtinCallerLen(jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9d83801_callerCapSlice(jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9d83c30_builtinCallerCap(jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9d84219_callerDeleteMap(jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*, jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9d84648_builtinCallerDelete(jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9d84a77_builtinCallerAssert(jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9d8514e_builtinCallerStdComptimeTypeOf(jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9d85517_builtinCallerStdComptimeValueOf(jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9d857d1_rangeData(jule::Trait<_1b9b685c5_comptimeRangeKind>);
inline jule::Ptr<_1b9c5d016_Data> _1b9d85c10_builtinCallerStdComptimeRange(jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9d8613e_builtinCallerStdComptimeLine(jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9d8656d_builtinCallerStdComptimeFile(jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9d8699c_builtinCallerStdComptimeFiles(jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9d86dcb_builtinCallerStdComptimeTypeAlias(jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9d8730a_builtinCallerStdMemSizeOf(jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9d87739_builtinCallerStdMemAlignOf(jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9d87b68_builtinCallerStdMemFree(jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9d88097_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9d884c6_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9d88905_builtinCallerStdDebugOut(jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Ptr<_1b9c5d016_Data> _1b9d88d34_builtinCallerStdDebugOutln(jule::Ptr<_1b9c5ec0a_Eval>*, jule::Ptr<_1b9b21825_FnCallExpr>*, jule::Ptr<_1b9c5d016_Data>*);
inline jule::Ptr<_1ba79de1e_FileInfo> _1ba7e533e_ParseFile(jule::Ptr<_1b9b08ab5_File>);
inline __jule_tuple_x_1b9b1692a_Ast__jule_tuple_s_23d21115a_Log _1ba7e5916_parseFileset(jule::Ptr<_1b9b08ab5_File>);
inline jule::Ptr<_1b9b287d8_ScopeTree> _1ba7e6395_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1ba7e6719_isSt(jule::Ptr<_1b9b032eb_Token>, jule::Ptr<_1b9b032eb_Token>);
inline jule::Bool _1ba7e6a8d_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1b9b032eb_Token>>*, jule::I32*);
inline __jule_tuple_int__jule_tuple_bool _1ba7e6e56_nextStPos(jule::Slice<jule::Ptr<_1b9b032eb_Token>>*, jule::I32);
inline __jule_tuple_sx_1b9b032eb_Token__jule_tuple_bool _1ba7e72ca_skipSt(jule::I32*, jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline jule::Slice<jule::Ptr<_1ba7e760a_stmt>> _1ba7e79b2_splitStmts(jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Bool _1ba815b01_isTypeOp(jule::U32*);
inline jule::Bool _1ba815e0e_isTypeRange(jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Slice<jule::Ptr<_1b9b032eb_Token>> _1ba8161c8_getBlockExpr(jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline __jule_tuple_sx_1b9b032eb_Token__jule_tuple_sx_1b9b032eb_Token _1ba816591_splitDelim(jule::Slice<jule::Ptr<_1b9b032eb_Token>>*, jule::U32);
inline jule::I32 _1ba81685a_findLowestPrecOp(jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Ptr<_1b9b1e526_IdentExpr> _1ba816b24_buildIdentExpr(jule::Ptr<_1b9b032eb_Token>*);
inline __jule_tuple_sx_1b9b032eb_Token__jule_tuple_int _1ba816ddd_getRangeExprTokens(jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Bool _1ba817be1_checkAssignTokens(jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline _23d21115a_Log _1ba818dbd_makeErr(jule::I32, jule::I32, jule::Ptr<_1b9b08ab5_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1b9b032eb_Token>> _1ba8193b8_range(jule::I32*, jule::U32, jule::U32, jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline __jule_tuple_sx_1b9b032eb_Token__jule_tuple_sx_1b9b032eb_Token _1ba819682_rangeLast(jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline __jule_tuple_ssx_1b9b032eb_Token__jule_tuple_s_23d21115a_Log _1ba819b38_parts(jule::Slice<jule::Ptr<_1b9b032eb_Token>>*, jule::U32, jule::Bool);
inline jule::U32 _1ba819e02_getCloseOfBrace(jule::U32);
inline _23d21115a_Log _1ba81a331_compilerErr(jule::Ptr<_1b9b032eb_Token>*, jule::Str*, jule::Slice<jule::Any>);
inline void _1ba81a6c7_pushSuggestion(_23d21115a_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1ba81aa6d_tokstoa(jule::Slice<jule::Ptr<_1b9b032eb_Token>>*);
inline jule::Ptr<_1b9b187b7_TypeDecl> _1ba82c596_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _1ba07d8ec_checkOs(jule::Str);
inline __jule_tuple_bool__jule_tuple_bool _1ba07da40_checkArch(jule::Str);
inline jule::Bool _1ba098ede_isPassFileAnnotation(jule::Str);
inline void _1ba09a166_setOsVars(jule::Slice<jule::Str>*);
inline void _1ba09a3db_setArchVars(jule::Slice<jule::Str>*);
inline void _1ba09a6c7_initVars(jule::Slice<jule::Str>*, _1ba099d47_CompileInfo*);
inline jule::Slice<jule::U8> _1ba8316bb_readBuff(jule::Str);
inline _23d21115a_Log _1ba831996_flatCompilerErr(jule::Str);
inline void _1ba8362b4_pushPasses(jule::Ptr<_1b9bb4126_Package>*, jule::Slice<jule::Str>*);
inline jule::Slice<jule::Str> _1ba83667c_getAllUniquePasses(jule::Ptr<_1b9bb4126_Package>*, jule::Slice<jule::Ptr<_1b9bb1200_ImportInfo>>);
inline _1ba099d47_CompileInfo _1ba83688b_buildCompileInfo(void);
inline void _1c765e861_EliminateDefines(jule::Ptr<_1ba834944_IR>*);
inline jule::Ptr<_1b9b17bd4_Directive> _1c765ec29_findDirective(jule::Slice<jule::Ptr<_1b9b17bd4_Directive>>*, jule::Str);
inline jule::Bool _1c766009d_hasDirective(jule::Slice<jule::Ptr<_1b9b17bd4_Directive>>*, jule::Str);
inline jule::Bool _1c7660466_isTraitMethod(jule::Ptr<_1b9b3c137_StructIns>*, jule::Ptr<_1b9b5216e_FnIns>*);
inline void _1c766446a_eliminateDeadCodeOfScope(jule::Ptr<_1b9b8ecc2_Scope>);
inline void _1c76646e0_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1b9b4e26a_Fn>>*);
inline void _1c7664921_eliminateFunctionsScopePackage(jule::Ptr<_1b9bb4126_Package>*);
inline void _1c7664bc9_eliminateScopePackage(jule::Ptr<_1b9bb4126_Package>*);
inline void _1c7664e0a_EliminateScopes(jule::Ptr<_1ba834944_IR>*);
inline jule::Uintptr _1b9d89175_typeData(jule::Any*);
inline jule::Bool _1b9d8953d_equalConst(jule::Ptr<_1ec682ce3_Const>, jule::Ptr<_1ec682ce3_Const>);
inline jule::Bool _1b9d898b2_equalCasting(jule::Ptr<_1b9b42b54_CastingExprModel>, jule::Ptr<_1b9b42b54_CastingExprModel>);
inline jule::Bool _1b9d89be2_equalUnary(jule::Ptr<_1b9b41900_UnaryExprModel>, jule::Ptr<_1b9b41900_UnaryExprModel>);
inline jule::Bool _1b9d8a066_equalIndexing(jule::Ptr<_1b9b43d86_IndexingExprModel>, jule::Ptr<_1b9b43d86_IndexingExprModel>);
inline jule::Bool _1b9d8a3da_equalBinary(jule::Ptr<_1b9b41526_BinopExprModel>, jule::Ptr<_1b9b41526_BinopExprModel>);
inline jule::Bool _1b9d8a75e_equalModels(jule::Any, jule::Any);
inline jule::Bool _1b9d93d94_isStdPackage(jule::Str*, jule::Str);
inline jule::Bool _1b9d941a2_isConstantValidConditionalCase(jule::Ptr<_1b9b901e0_If>*);
inline jule::Bool _1b9d9446b_isUnreachableExpr(jule::Any*);
inline jule::Bool _1b9d947ac_isConstantValidMatchCase(jule::Ptr<_1b9b94a41_Case>*);
inline jule::Bool _1b9d94a76_isUnreachableConditionalCase(jule::Ptr<_1b9b901e0_If>*);
inline jule::Bool _1b9d94d40_isUnreachableMatchCase(jule::Ptr<_1b9b94a41_Case>*);
inline __jule_tuple_bool__jule_tuple_u64 _1b9d9ce9c_checkForBitShiftOpt(jule::Ptr<_1b9b4102b_OperandExprModel>*, jule::Ptr<_1b9b4102b_OperandExprModel>*);
inline jule::Bool _1b9d9d365_areSameLvalueExprModel(jule::Any*, jule::Any*);
inline void _1b9d9daa2_doInternalNosafeStobs(_1b9d95c20_exprOptimizer*, _1ba838c9a_stdCacheData*, jule::Ptr<_1b9b43506_FnCallExprModel>*);
inline void _1ba83943d_buildCache(jule::Ptr<_1ba834944_IR>*);
inline void _1ba839680_buildStdInternalNosafeCache(jule::Ptr<_1ba834944_IR>*);
inline void _1ba839a26_pushCache(jule::Ptr<_1b9bb4126_Package>*, jule::Str, jule::Fn<void(_1b9d95c20_exprOptimizer*,_1ba838c9a_stdCacheData*,jule::Ptr<_1b9b43506_FnCallExprModel>*)>);
inline jule::Ptr<_1b9b5216e_FnIns> _1ba839dde_getFunc(jule::Ptr<_1b9bb4126_Package>*, jule::Str*);
inline jule::Ptr<_1b9bb4126_Package> _1ba83a263_getPackage(jule::Ptr<_1ba834944_IR>*, jule::Str*);
inline void _1ba83cdae_PushOptLevel(jule::I32);
inline void _1c766e62e_detectEnabled(void);
inline void _1c7698438_Throw(jule::Str);
inline jule::U64 _1c8037700_unix(void);
inline jule::Bool _1c7e5ebcc_isCopyOptimizable(jule::Ptr<_1b9c5d016_Data>*);
inline jule::Bool _1c7e60095_isIterCopyOptimizable(jule::Ptr<_1b9c5d016_Data>*, jule::Ptr<_1b9c09611_Var>*);
inline jule::Str _1c7e75385_decomposeCommonEsq(jule::U8);
inline jule::Str _1c7e75693_sbtoa(jule::U8);
inline void _1c7e7597e_cstrBytes(_23d16295d_StrBuilder*, jule::Str);
inline void _1c7e75cae_cstrLit(_23d16295d_StrBuilder*, jule::Str);
inline void _1c7e76155_ftoa(_23d16295d_StrBuilder*, jule::F64, jule::I32);
inline void _1c7e76441_itoa(_23d16295d_StrBuilder*, jule::I64);
inline void _1c7e7672c_utoa(_23d16295d_StrBuilder*, jule::U64);
inline jule::Bool _1c7e76b06_isForwarded(jule::Ptr<_1b9b8ecc2_Scope>*);
inline jule::Bool _1c7e76dc0_isExprComesFromBind(jule::Ptr<_1b9c5d016_Data>*);
inline jule::Bool _1c7e77189_isAny(jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline void _1c804ba44_iterFiles(jule::Ptr<_1b9bb4126_Package>*, jule::Fn<void(jule::Ptr<_1b9c57ce1_SymbolTable>*)>);
inline jule::Str _1c804bd52_concatAllParts(jule::Slice<jule::Ptr<_1b9b032eb_Token>>);
inline jule::Bool _1c804c1c6_containsTraitMethod(jule::Ptr<_1b9b62514_Trait>*, jule::Str*);
inline void _1c804c506_pushMethodsFromInherit(jule::Ptr<_1b9b62514_Trait>*, jule::Ptr<_1b9b62514_Trait>*);
inline void _1c804c7e2_pushMethodsFromInherits(jule::Ptr<_1b9b62514_Trait>*, jule::Ptr<_1b9b62514_Trait>*);
inline jule::Bool _1c804caab_isOpMethod(jule::Ptr<_1b9b4e26a_Fn>*);
inline jule::Bool _1c804cd75_isHeadDecl(jule::Ptr<_1b9b4e26a_Fn>*);
inline jule::Ptr<_1b9b17bd4_Directive> _1c805b944_findDirective(jule::Slice<jule::Ptr<_1b9b17bd4_Directive>>*, jule::Str);
inline jule::Bool _1c805bd0c_hasDirective(jule::Slice<jule::Ptr<_1b9b17bd4_Directive>>*, jule::Str);
inline jule::Bool _1c805c0c6_shouldInitialized(jule::Ptr<_1b9c8d1cd_TypeKind>*);
inline void _23d32647e_printErrorMessage(jule::Str);
inline void _23d326704_help(jule::Slice<jule::Str>*);
inline void _23d326935_version(jule::Slice<jule::Str>*);
inline void _23d326b33_toolDistos(void);
inline void _23d326ca9_toolDistarch(void);
inline void _23d326eda_tool(jule::Slice<jule::Str>*);
inline void _23d32721b_julenv(jule::Slice<jule::Str>*);
inline void _23d327529_mod(jule::Slice<jule::Str>*);
inline jule::Bool _23d3277e3_processCommand(jule::Slice<jule::Str>*);
inline void _23d327969_showInfo(void);
void entry_point(void);
inline void _1c80cea83_init(void);
inline jule::Ptr<_23bca7d8a_File> _1c80ced5d_openOutput(jule::Str*);
inline void _1c80ceed4_clearObjects(void);
inline void _1c80d0314_compileIr(jule::Str, jule::Str);
inline jule::Bool _1c80d05cd_isCppSourceFile(jule::Str);
inline void _1c80d080e_pushCompCmdClang(_23d16295d_StrBuilder*);
inline void _1c80d0a40_pushCompCmdGcc(_23d16295d_StrBuilder*);
inline __jule_tuple_str__jule_tuple_str _1c80d0ec4_genCompileCmd(jule::Str, jule::Ptr<_1ba834944_IR>*);
inline jule::Str _1c80d11d3_getCompilePath(void);
inline void _1c80d1414_applyTargetIndependentOptimizations(jule::Ptr<_1ba834944_IR>*);
inline void _1c80d158a_checkCompilerFlag(void);
inline void _1c80d17bb_checkTargetArch(jule::Str);
inline void _1c80d19ec_checkTargetOs(jule::Str);
inline void _1c80d1c2d_checkTargetFlag(jule::Str*);
inline void _1c80d1e5e_checkOptFlag(jule::Str*);
inline void _1c80d22e4_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1c80d2558_checkFlags(jule::Slice<jule::Str>*);
inline void _1c80d2789_setupSemaFlags(jule::I32*);
inline jule::Ptr<_1ba834944_IR> _1c80d2a53_buildIr(jule::Slice<jule::Str>*);
inline void _1c80d2c84_compileCommand(jule::Slice<jule::Str>*);


struct _1b9b685c5_comptimeRangeKindMptrData {
	void(*_1b9b67cbc_ready)(jule::Trait<_1b9b685c5_comptimeRangeKind>, jule::Ptr<_1b9c09611_Var>*, jule::Ptr<_1b9c09611_Var>*);
	void(*_1b9b681da_step)(jule::Trait<_1b9b685c5_comptimeRangeKind>, jule::I32, jule::Ptr<_1b9c09611_Var>*, jule::Ptr<_1b9c09611_Var>*);
	jule::I32(*_1b9b68471_len)(jule::Trait<_1b9b685c5_comptimeRangeKind>);
};

struct _1b9bad2da_ImporterMptrData {
	void(*_1b9bac0b9_SetModPath)(jule::Trait<_1b9bad2da_Importer>, jule::Str);
	jule::Str(*_1b9bac350_GetModPath)(jule::Trait<_1b9bad2da_Importer>);
	jule::Str(*_1b9bac691_ModById)(jule::Trait<_1b9bad2da_Importer>, jule::I32);
	jule::Ptr<_1b9bb1200_ImportInfo>(*_1b9bac9d2_GetImport)(jule::Trait<_1b9bad2da_Importer>, jule::Str);
	__jule_tuple_sx_1b9b1692a_Ast__jule_tuple_s_23d21115a_Log(*_1b9bacdcd_ImportPackage)(jule::Trait<_1b9bad2da_Importer>, jule::Str, jule::Bool);
	void(*_1b9bad186_Imported)(jule::Trait<_1b9bad2da_Importer>, jule::Ptr<_1b9bb1200_ImportInfo>);
};

struct _1b9c8cc27_KindMptrData {
	jule::Str(*_1b9c8c782_Str)(jule::Trait<_1b9c8cc27_Kind>);
	jule::Bool(*_1b9c8cac3_Equal)(jule::Trait<_1b9c8cc27_Kind>, jule::Ptr<_1b9c8d1cd_TypeKind>);
};

struct _1b9cacc14_LookupMptrData {
	jule::Ptr<_1b9bb1200_ImportInfo>(*_1b9caaeed_SelectPackage)(jule::Trait<_1b9cacc14_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1b9bb1200_ImportInfo>)>);
	jule::Ptr<_1b9c09611_Var>(*_1b9cab3e9_FindVar)(jule::Trait<_1b9cacc14_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1b9c8c3db_TypeAlias>(*_1b9cab7e5_FindTypeAlias)(jule::Trait<_1b9cacc14_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1b9b393a9_Struct>(*_1b9cabbe1_FindStruct)(jule::Trait<_1b9cacc14_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1b9b4e26a_Fn>(*_1b9cac0dc_FindFn)(jule::Trait<_1b9cacc14_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1b9b62514_Trait>(*_1b9cac42d_FindTrait)(jule::Trait<_1b9cacc14_Lookup>, jule::Str);
	jule::Ptr<_1b9b64c0e_Enum>(*_1b9cac76e_FindEnum)(jule::Trait<_1b9cacc14_Lookup>, jule::Str);
	jule::Ptr<_1b9b66419_TypeEnum>(*_1b9cacab0_FindTypeEnum)(jule::Trait<_1b9cacc14_Lookup>, jule::Str);
};

struct _1c80c2922_CommonFlagMptrData {
	jule::Str(*_1c80907e1_Name)(jule::Trait<_1c80c2922_CommonFlag>);
	jule::I32(*_1c8090989_Short)(jule::Trait<_1c80c2922_CommonFlag>);
	jule::Str(*_1c80c268b_What)(jule::Trait<_1c80c2922_CommonFlag>);
	void(*_1c80c27ce_Reset)(jule::Trait<_1c80c2922_CommonFlag>);
};



inline void _1b9b67cbc_ready_comptimeRangeKind_0(jule::Trait<_1b9b685c5_comptimeRangeKind> _self_, jule::Ptr<_1b9c09611_Var>* _1329_keyA, jule::Ptr<_1b9c09611_Var>* _1346_keyB) {
	_1b9b6bb17_ready(_self_.safe_ptr<_1b9b6aebd_comptimeStructFields>(), _1329_keyA, _1346_keyB);
}
inline void _1b9b681da_step_comptimeRangeKind_0(jule::Trait<_1b9b685c5_comptimeRangeKind> _self_, jule::I32 _1423_i, jule::Ptr<_1b9c09611_Var>* _1436_keyA, jule::Ptr<_1b9c09611_Var>* _1453_keyB) {
	_1b9b6c035_step(_self_.safe_ptr<_1b9b6aebd_comptimeStructFields>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I32 _1b9b68471_len_comptimeRangeKind_0(jule::Trait<_1b9b685c5_comptimeRangeKind> _self_) {
	return _1b9b6c2bb_len(_self_.safe_ptr<_1b9b6aebd_comptimeStructFields>());
}
inline void _1b9b67cbc_ready_comptimeRangeKind_1(jule::Trait<_1b9b685c5_comptimeRangeKind> _self_, jule::Ptr<_1b9c09611_Var>* _1329_keyA, jule::Ptr<_1b9c09611_Var>* _1346_keyB) {
	_1b9b6edc3_ready(_self_.safe_ptr<_1b9b6e28a_comptimeStatics>(), _1329_keyA, _1346_keyB);
}
inline void _1b9b681da_step_comptimeRangeKind_1(jule::Trait<_1b9b685c5_comptimeRangeKind> _self_, jule::I32 _1423_i, jule::Ptr<_1b9c09611_Var>* _1436_keyA, jule::Ptr<_1b9c09611_Var>* _1453_keyB) {
	_1b9b702e1_step(_self_.safe_ptr<_1b9b6e28a_comptimeStatics>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I32 _1b9b68471_len_comptimeRangeKind_1(jule::Trait<_1b9b685c5_comptimeRangeKind> _self_) {
	return _1b9b70577_len(_self_.safe_ptr<_1b9b6e28a_comptimeStatics>());
}
inline void _1b9b67cbc_ready_comptimeRangeKind_2(jule::Trait<_1b9b685c5_comptimeRangeKind> _self_, jule::Ptr<_1b9c09611_Var>* _1329_keyA, jule::Ptr<_1b9c09611_Var>* _1346_keyB) {
	_1b9b72865_ready(_self_.safe_ptr<_1b9b71b94_comptimeEnumFields>(), _1329_keyA, _1346_keyB);
}
inline void _1b9b681da_step_comptimeRangeKind_2(jule::Trait<_1b9b685c5_comptimeRangeKind> _self_, jule::I32 _1423_i, jule::Ptr<_1b9c09611_Var>* _1436_keyA, jule::Ptr<_1b9c09611_Var>* _1453_keyB) {
	_1b9b72c83_step(_self_.safe_ptr<_1b9b71b94_comptimeEnumFields>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I32 _1b9b68471_len_comptimeRangeKind_2(jule::Trait<_1b9b685c5_comptimeRangeKind> _self_) {
	return _1b9b73019_len(_self_.safe_ptr<_1b9b71b94_comptimeEnumFields>());
}
inline void _1b9b67cbc_ready_comptimeRangeKind_3(jule::Trait<_1b9b685c5_comptimeRangeKind> _self_, jule::Ptr<_1b9c09611_Var>* _1329_keyA, jule::Ptr<_1b9c09611_Var>* _1346_keyB) {
	_1b9b761c6_ready(_self_.safe_ptr<_1b9b7558d_comptimeParams>(), _1329_keyA, _1346_keyB);
}
inline void _1b9b681da_step_comptimeRangeKind_3(jule::Trait<_1b9b685c5_comptimeRangeKind> _self_, jule::I32 _1423_i, jule::Ptr<_1b9c09611_Var>* _1436_keyA, jule::Ptr<_1b9c09611_Var>* _1453_keyB) {
	_1b9b765e4_step(_self_.safe_ptr<_1b9b7558d_comptimeParams>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I32 _1b9b68471_len_comptimeRangeKind_3(jule::Trait<_1b9b685c5_comptimeRangeKind> _self_) {
	return _1b9b7687a_len(_self_.safe_ptr<_1b9b7558d_comptimeParams>());
}
inline void _1b9b67cbc_ready_comptimeRangeKind_4(jule::Trait<_1b9b685c5_comptimeRangeKind> _self_, jule::Ptr<_1b9c09611_Var>* _1329_keyA, jule::Ptr<_1b9c09611_Var>* _1346_keyB) {
	_1b9b777c1_ready(_self_.safe_ptr<_1b9b76b88_comptimeTypeInfos>(), _1329_keyA, _1346_keyB);
}
inline void _1b9b681da_step_comptimeRangeKind_4(jule::Trait<_1b9b685c5_comptimeRangeKind> _self_, jule::I32 _1423_i, jule::Ptr<_1b9c09611_Var>* _1436_keyA, jule::Ptr<_1b9c09611_Var>* _1453_keyB) {
	_1b9b77bde_step(_self_.safe_ptr<_1b9b76b88_comptimeTypeInfos>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I32 _1b9b68471_len_comptimeRangeKind_4(jule::Trait<_1b9b685c5_comptimeRangeKind> _self_) {
	return _1b9b77e75_len(_self_.safe_ptr<_1b9b76b88_comptimeTypeInfos>());
}
inline void _1b9b67cbc_ready_comptimeRangeKind_5(jule::Trait<_1b9b685c5_comptimeRangeKind> _self_, jule::Ptr<_1b9c09611_Var>* _1329_keyA, jule::Ptr<_1b9c09611_Var>* _1346_keyB) {
	_1b9b82c2c_ready(_self_.safe_ptr<_1b9b820e4_comptimeFiles>(), _1329_keyA, _1346_keyB);
}
inline void _1b9b681da_step_comptimeRangeKind_5(jule::Trait<_1b9b685c5_comptimeRangeKind> _self_, jule::I32 _1423_i, jule::Ptr<_1b9c09611_Var>* _1436_keyA, jule::Ptr<_1b9c09611_Var>* _1453_keyB) {
	_1b9b8314a_step(_self_.safe_ptr<_1b9b820e4_comptimeFiles>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I32 _1b9b68471_len_comptimeRangeKind_5(jule::Trait<_1b9b685c5_comptimeRangeKind> _self_) {
	return _1b9b833d1_len(_self_.safe_ptr<_1b9b820e4_comptimeFiles>());
}
inline void _1b9bac0b9_SetModPath_Importer_0(jule::Trait<_1b9bad2da_Importer> _self_, jule::Str _1729_path) {
	_1ba832a52_SetModPath(_self_.safe_ptr<_1ba831e80_JuleImporter>(), _1729_path);
}
inline jule::Str _1b9bac350_GetModPath_Importer_0(jule::Trait<_1b9bad2da_Importer> _self_) {
	return _1ba832cd8_GetModPath(_self_.safe_ptr<_1ba831e80_JuleImporter>());
}
inline jule::Str _1b9bac691_ModById_Importer_0(jule::Trait<_1b9bad2da_Importer> _self_, jule::I32 _2522_id) {
	return _1ba833129_ModById(_self_.safe_ptr<_1ba831e80_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_1b9bb1200_ImportInfo> _1b9bac9d2_GetImport_Importer_0(jule::Trait<_1b9bad2da_Importer> _self_, jule::Str _3128_path) {
	return _1ba83346a_GetImport(_self_.safe_ptr<_1ba831e80_JuleImporter>(), _3128_path);
}
inline __jule_tuple_sx_1b9b1692a_Ast__jule_tuple_s_23d21115a_Log _1b9bacdcd_ImportPackage_Importer_0(jule::Trait<_1b9bad2da_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _1ba833866_ImportPackage(_self_.safe_ptr<_1ba831e80_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _1b9bad186_Imported_Importer_0(jule::Trait<_1b9bad2da_Importer> _self_, jule::Ptr<_1b9bb1200_ImportInfo> _4131__0) {
	_1ba833b1e_Imported(_self_.safe_ptr<_1ba831e80_JuleImporter>(), _4131__0);
}
inline jule::Str _1b9c8c782_Str_Kind_0(jule::Trait<_1b9c8cc27_Kind> _self_) {
	return _1b9b3c4ab_Str(_self_.safe_ptr<_1b9b3c137_StructIns>());
}
inline jule::Bool _1b9c8cac3_Equal_Kind_0(jule::Trait<_1b9c8cc27_Kind> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _5621_other) {
	return _1b9b3c7ec_Equal(_self_.data.as<_1b9b3c137_StructIns>(), _5621_other);
}
inline jule::Str _1b9c8c782_Str_Kind_1(jule::Trait<_1b9c8cc27_Kind> _self_) {
	return _1b9b524b0_Str(_self_.safe_ptr<_1b9b5216e_FnIns>());
}
inline jule::Bool _1b9c8cac3_Equal_Kind_1(jule::Trait<_1b9c8cc27_Kind> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _5621_other) {
	return _1b9b52801_Equal(_self_.data.as<_1b9b5216e_FnIns>(), _5621_other);
}
inline jule::Str _1b9c8c782_Str_Kind_2(jule::Trait<_1b9c8cc27_Kind> _self_) {
	return _1b9b628cc_Str(_self_.safe_ptr<_1b9b62514_Trait>());
}
inline jule::Bool _1b9c8cac3_Equal_Kind_2(jule::Trait<_1b9c8cc27_Kind> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _5621_other) {
	return _1b9b62c1d_Equal(_self_.data.as<_1b9b62514_Trait>(), _5621_other);
}
inline jule::Str _1b9c8c782_Str_Kind_3(jule::Trait<_1b9c8cc27_Kind> _self_) {
	return _1b9b65083_Str(_self_.safe_ptr<_1b9b64c0e_Enum>());
}
inline jule::Bool _1b9c8cac3_Equal_Kind_3(jule::Trait<_1b9c8cc27_Kind> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _5621_other) {
	return _1b9b653c4_Equal(_self_.data.as<_1b9b64c0e_Enum>(), _5621_other);
}
inline jule::Str _1b9c8c782_Str_Kind_4(jule::Trait<_1b9c8cc27_Kind> _self_) {
	return _1b9b6675a_Str(_self_.safe_ptr<_1b9b66419_TypeEnum>());
}
inline jule::Bool _1b9c8cac3_Equal_Kind_4(jule::Trait<_1b9c8cc27_Kind> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _5621_other) {
	return _1b9b66a9b_Equal(_self_.data.as<_1b9b66419_TypeEnum>(), _5621_other);
}
inline jule::Str _1b9c8c782_Str_Kind_5(jule::Trait<_1b9c8cc27_Kind> _self_) {
	return _1b9b68b7a_Str(_self_.safe_ptr<_1b9b687b2_comptimeRange>());
}
inline jule::Bool _1b9c8cac3_Equal_Kind_5(jule::Trait<_1b9c8cc27_Kind> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _5621_other) {
	return _1b9b68ebb_Equal(_self_.data.as<_1b9b687b2_comptimeRange>(), _5621_other);
}
inline jule::Str _1b9c8c782_Str_Kind_6(jule::Trait<_1b9c8cc27_Kind> _self_) {
	return _1b9b69692_Str(_self_.safe_ptr<_1b9b6931d_comptimeStructField>());
}
inline jule::Bool _1b9c8cac3_Equal_Kind_6(jule::Trait<_1b9c8cc27_Kind> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _5621_other) {
	return _1b9b699d3_Equal(_self_.data.as<_1b9b6931d_comptimeStructField>(), _5621_other);
}
inline jule::Str _1b9c8c782_Str_Kind_7(jule::Trait<_1b9c8cc27_Kind> _self_) {
	return _1b9b6b353_Str(_self_.safe_ptr<_1b9b6aebd_comptimeStructFields>());
}
inline jule::Bool _1b9c8cac3_Equal_Kind_7(jule::Trait<_1b9c8cc27_Kind> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _5621_other) {
	return _1b9b6b694_Equal(_self_.data.as<_1b9b6aebd_comptimeStructFields>(), _5621_other);
}
inline jule::Str _1b9c8c782_Str_Kind_8(jule::Trait<_1b9c8cc27_Kind> _self_) {
	return _1b9b6c94d_Str(_self_.safe_ptr<_1b9b6c5c9_comptimeStatic>());
}
inline jule::Bool _1b9c8cac3_Equal_Kind_8(jule::Trait<_1b9c8cc27_Kind> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _5621_other) {
	return _1b9b6cc8e_Equal(_self_.data.as<_1b9b6c5c9_comptimeStatic>(), _5621_other);
}
inline jule::Str _1b9c8c782_Str_Kind_9(jule::Trait<_1b9c8cc27_Kind> _self_) {
	return _1b9b6e60e_Str(_self_.safe_ptr<_1b9b6e28a_comptimeStatics>());
}
inline jule::Bool _1b9c8cac3_Equal_Kind_9(jule::Trait<_1b9c8cc27_Kind> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _5621_other) {
	return _1b9b6e950_Equal(_self_.data.as<_1b9b6e28a_comptimeStatics>(), _5621_other);
}
inline jule::Str _1b9c8c782_Str_Kind_10(jule::Trait<_1b9c8cc27_Kind> _self_) {
	return _1b9b70c09_Str(_self_.safe_ptr<_1b9b70885_comptimeEnumField>());
}
inline jule::Bool _1b9c8cac3_Equal_Kind_10(jule::Trait<_1b9c8cc27_Kind> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _5621_other) {
	return _1b9b7104a_Equal(_self_.data.as<_1b9b70885_comptimeEnumField>(), _5621_other);
}
inline jule::Str _1b9c8c782_Str_Kind_11(jule::Trait<_1b9c8cc27_Kind> _self_) {
	return _1b9b72128_Str(_self_.safe_ptr<_1b9b71b94_comptimeEnumFields>());
}
inline jule::Bool _1b9c8cac3_Equal_Kind_11(jule::Trait<_1b9c8cc27_Kind> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _5621_other) {
	return _1b9b72469_Equal(_self_.data.as<_1b9b71b94_comptimeEnumFields>(), _5621_other);
}
inline jule::Str _1b9c8c782_Str_Kind_12(jule::Trait<_1b9c8cc27_Kind> _self_) {
	return _1b9b7369b_Str(_self_.safe_ptr<_1b9b73327_comptimeParam>());
}
inline jule::Bool _1b9c8cac3_Equal_Kind_12(jule::Trait<_1b9c8cc27_Kind> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _5621_other) {
	return _1b9b739dc_Equal(_self_.data.as<_1b9b73327_comptimeParam>(), _5621_other);
}
inline jule::Str _1b9c8c782_Str_Kind_13(jule::Trait<_1b9c8cc27_Kind> _self_) {
	return _1b9b75912_Str(_self_.safe_ptr<_1b9b7558d_comptimeParams>());
}
inline jule::Bool _1b9c8cac3_Equal_Kind_13(jule::Trait<_1b9c8cc27_Kind> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _5621_other) {
	return _1b9b75c53_Equal(_self_.data.as<_1b9b7558d_comptimeParams>(), _5621_other);
}
inline jule::Str _1b9c8c782_Str_Kind_14(jule::Trait<_1b9c8cc27_Kind> _self_) {
	return _1b9b7700c_Str(_self_.safe_ptr<_1b9b76b88_comptimeTypeInfos>());
}
inline jule::Bool _1b9c8cac3_Equal_Kind_14(jule::Trait<_1b9c8cc27_Kind> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _5621_other) {
	return _1b9b7734d_Equal(_self_.data.as<_1b9b76b88_comptimeTypeInfos>(), _5621_other);
}
inline jule::Str _1b9c8c782_Str_Kind_15(jule::Trait<_1b9c8cc27_Kind> _self_) {
	return _1b9b78607_Str(_self_.safe_ptr<_1b9b78283_comptimeTypeInfo>());
}
inline jule::Bool _1b9c8cac3_Equal_Kind_15(jule::Trait<_1b9c8cc27_Kind> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _5621_other) {
	return _1b9b78948_Equal(_self_.data.as<_1b9b78283_comptimeTypeInfo>(), _5621_other);
}
inline jule::Str _1b9c8c782_Str_Kind_16(jule::Trait<_1b9c8cc27_Kind> _self_) {
	return _1b9b7eb19_Str(_self_.safe_ptr<_1b9b7e795_comptimeValue>());
}
inline jule::Bool _1b9c8cac3_Equal_Kind_16(jule::Trait<_1b9c8cc27_Kind> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _5621_other) {
	return _1b9b7ee5a_Equal(_self_.data.as<_1b9b7e795_comptimeValue>(), _5621_other);
}
inline jule::Str _1b9c8c782_Str_Kind_17(jule::Trait<_1b9c8cc27_Kind> _self_) {
	return _1b9b82468_Str(_self_.safe_ptr<_1b9b820e4_comptimeFiles>());
}
inline jule::Bool _1b9c8cac3_Equal_Kind_17(jule::Trait<_1b9c8cc27_Kind> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _5621_other) {
	return _1b9b827a9_Equal(_self_.data.as<_1b9b820e4_comptimeFiles>(), _5621_other);
}
inline jule::Str _1b9c8c782_Str_Kind_18(jule::Trait<_1b9c8cc27_Kind> _self_) {
	return _1b9b83a63_Str(_self_.safe_ptr<_1b9b836de_comptimeFile>());
}
inline jule::Bool _1b9c8cac3_Equal_Kind_18(jule::Trait<_1b9c8cc27_Kind> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _5621_other) {
	return _1b9b83da4_Equal(_self_.data.as<_1b9b836de_comptimeFile>(), _5621_other);
}
inline jule::Str _1b9c8c782_Str_Kind_19(jule::Trait<_1b9c8cc27_Kind> _self_) {
	return _1b9c8d596_Str(_self_.safe_ptr<_1b9c8d1cd_TypeKind>());
}
inline jule::Bool _1b9c8cac3_Equal_Kind_19(jule::Trait<_1b9c8cc27_Kind> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _5621_other) {
	return _1b9c8d8d7_Equal(_self_.data.as<_1b9c8d1cd_TypeKind>(), _5621_other);
}
inline jule::Str _1b9c8c782_Str_Kind_20(jule::Trait<_1b9c8cc27_Kind> _self_) {
	return _1b9c960e8_Str(_self_.safe_ptr<_1b9c95ca7_Prim>());
}
inline jule::Bool _1b9c8cac3_Equal_Kind_20(jule::Trait<_1b9c8cc27_Kind> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _5621_other) {
	return _1b9c96439_Equal(_self_.data.as<_1b9c95ca7_Prim>(), _5621_other);
}
inline jule::Str _1b9c8c782_Str_Kind_21(jule::Trait<_1b9c8cc27_Kind> _self_) {
	return _1b9c99b57_Str(_self_.safe_ptr<_1b9c997d3_Sptr>());
}
inline jule::Bool _1b9c8cac3_Equal_Kind_21(jule::Trait<_1b9c8cc27_Kind> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _5621_other) {
	return _1b9c99e98_Equal(_self_.data.as<_1b9c997d3_Sptr>(), _5621_other);
}
inline jule::Str _1b9c8c782_Str_Kind_22(jule::Trait<_1b9c8cc27_Kind> _self_) {
	return _1b9c9a73a_Str(_self_.safe_ptr<_1b9c9a2a6_Slc>());
}
inline jule::Bool _1b9c8cac3_Equal_Kind_22(jule::Trait<_1b9c8cc27_Kind> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _5621_other) {
	return _1b9c9aa7b_Equal(_self_.data.as<_1b9c9a2a6_Slc>(), _5621_other);
}
inline jule::Str _1b9c8c782_Str_Kind_23(jule::Trait<_1b9c8cc27_Kind> _self_) {
	return _1b9c9b21e_Str(_self_.safe_ptr<_1b9c9ad9a_Tuple>());
}
inline jule::Bool _1b9c8cac3_Equal_Kind_23(jule::Trait<_1b9c8cc27_Kind> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _5621_other) {
	return _1b9c9b560_Equal(_self_.data.as<_1b9c9ad9a_Tuple>(), _5621_other);
}
inline jule::Str _1b9c8c782_Str_Kind_24(jule::Trait<_1b9c8cc27_Kind> _self_) {
	return _1b9c9bcbe_Str(_self_.safe_ptr<_1b9c9b94a_Map>());
}
inline jule::Bool _1b9c8cac3_Equal_Kind_24(jule::Trait<_1b9c8cc27_Kind> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _5621_other) {
	return _1b9c9c110_Equal(_self_.data.as<_1b9c9b94a_Map>(), _5621_other);
}
inline jule::Str _1b9c8c782_Str_Kind_25(jule::Trait<_1b9c8cc27_Kind> _self_) {
	return _1b9c9c94b_Str(_self_.safe_ptr<_1b9c9c5c7_Arr>());
}
inline jule::Bool _1b9c8cac3_Equal_Kind_25(jule::Trait<_1b9c8cc27_Kind> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _5621_other) {
	return _1b9c9cc8c_Equal(_self_.data.as<_1b9c9c5c7_Arr>(), _5621_other);
}
inline jule::Str _1b9c8c782_Str_Kind_26(jule::Trait<_1b9c8cc27_Kind> _self_) {
	return _1b9c9d41e_Str(_self_.safe_ptr<_1b9c9d09a_Ptr>());
}
inline jule::Bool _1b9c8cac3_Equal_Kind_26(jule::Trait<_1b9c8cc27_Kind> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _5621_other) {
	return _1b9c9d760_Equal(_self_.data.as<_1b9c9d09a_Ptr>(), _5621_other);
}
inline jule::Str _1b9c8c782_Str_Kind_27(jule::Trait<_1b9c8cc27_Kind> _self_) {
	return _1c804e0eb_Str(_self_.safe_ptr<_1c804dc66_customType>());
}
inline jule::Bool _1b9c8cac3_Equal_Kind_27(jule::Trait<_1b9c8cc27_Kind> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _5621_other) {
	return _1c804e43c_Equal(_self_.data.as<_1c804dc66_customType>(), _5621_other);
}
inline jule::Ptr<_1b9bb1200_ImportInfo> _1b9caaeed_SelectPackage_Lookup_0(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1b9bb1200_ImportInfo>)> _932_selector) {
	return _1b9b9756b_SelectPackage(_self_.safe_ptr<_1b9b970c6_scopeChecker>(), _932_selector);
}
inline jule::Ptr<_1b9c09611_Var> _1b9cab3e9_FindVar_Lookup_0(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1b9b97967_FindVar(_self_.safe_ptr<_1b9b970c6_scopeChecker>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1b9c8c3db_TypeAlias> _1b9cab7e5_FindTypeAlias_Lookup_0(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1b9b97d63_FindTypeAlias(_self_.safe_ptr<_1b9b970c6_scopeChecker>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1b9b393a9_Struct> _1b9cabbe1_FindStruct_Lookup_0(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1b9b9825e_FindStruct(_self_.safe_ptr<_1b9b970c6_scopeChecker>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1b9b4e26a_Fn> _1b9cac0dc_FindFn_Lookup_0(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1b9b9865a_FindFn(_self_.safe_ptr<_1b9b970c6_scopeChecker>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1b9b62514_Trait> _1b9cac42d_FindTrait_Lookup_0(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Str _2928_ident) {
	return _1b9b9899b_FindTrait(_self_.safe_ptr<_1b9b970c6_scopeChecker>(), _2928_ident);
}
inline jule::Ptr<_1b9b64c0e_Enum> _1b9cac76e_FindEnum_Lookup_0(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Str _3327_ident) {
	return _1b9b98cdc_FindEnum(_self_.safe_ptr<_1b9b970c6_scopeChecker>(), _3327_ident);
}
inline jule::Ptr<_1b9b66419_TypeEnum> _1b9cacab0_FindTypeEnum_Lookup_0(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Str _3731_ident) {
	return _1b9b9912d_FindTypeEnum(_self_.safe_ptr<_1b9b970c6_scopeChecker>(), _3731_ident);
}
inline jule::Ptr<_1b9bb1200_ImportInfo> _1b9caaeed_SelectPackage_Lookup_1(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1b9bb1200_ImportInfo>)> _932_selector) {
	return _1b9bb16d9_SelectPackage(_self_.safe_ptr<_1b9bb1200_ImportInfo>(), _932_selector);
}
inline jule::Ptr<_1b9c09611_Var> _1b9cab3e9_FindVar_Lookup_1(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1b9bb1ad5_FindVar(_self_.safe_ptr<_1b9bb1200_ImportInfo>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1b9c8c3db_TypeAlias> _1b9cab7e5_FindTypeAlias_Lookup_1(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1b9bb1ed1_FindTypeAlias(_self_.safe_ptr<_1b9bb1200_ImportInfo>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1b9b393a9_Struct> _1b9cabbe1_FindStruct_Lookup_1(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1b9bb23cc_FindStruct(_self_.safe_ptr<_1b9bb1200_ImportInfo>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1b9b4e26a_Fn> _1b9cac0dc_FindFn_Lookup_1(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1b9bb27c8_FindFn(_self_.safe_ptr<_1b9bb1200_ImportInfo>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1b9b62514_Trait> _1b9cac42d_FindTrait_Lookup_1(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Str _2928_ident) {
	return _1b9bb2b19_FindTrait(_self_.safe_ptr<_1b9bb1200_ImportInfo>(), _2928_ident);
}
inline jule::Ptr<_1b9b64c0e_Enum> _1b9cac76e_FindEnum_Lookup_1(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Str _3327_ident) {
	return _1b9bb2e5a_FindEnum(_self_.safe_ptr<_1b9bb1200_ImportInfo>(), _3327_ident);
}
inline jule::Ptr<_1b9b66419_TypeEnum> _1b9cacab0_FindTypeEnum_Lookup_1(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Str _3731_ident) {
	return _1b9bb329b_FindTypeEnum(_self_.safe_ptr<_1b9bb1200_ImportInfo>(), _3731_ident);
}
inline jule::Ptr<_1b9bb1200_ImportInfo> _1b9caaeed_SelectPackage_Lookup_2(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1b9bb1200_ImportInfo>)> _932_selector) {
	return _1b9bb45bb_SelectPackage(_self_.safe_ptr<_1b9bb4126_Package>(), _932_selector);
}
inline jule::Ptr<_1b9c09611_Var> _1b9cab3e9_FindVar_Lookup_2(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1b9bb49b7_FindVar(_self_.safe_ptr<_1b9bb4126_Package>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1b9c8c3db_TypeAlias> _1b9cab7e5_FindTypeAlias_Lookup_2(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1b9bb4db3_FindTypeAlias(_self_.safe_ptr<_1b9bb4126_Package>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1b9b393a9_Struct> _1b9cabbe1_FindStruct_Lookup_2(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1b9bb52ae_FindStruct(_self_.safe_ptr<_1b9bb4126_Package>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1b9b4e26a_Fn> _1b9cac0dc_FindFn_Lookup_2(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1b9bb56aa_FindFn(_self_.safe_ptr<_1b9bb4126_Package>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1b9b62514_Trait> _1b9cac42d_FindTrait_Lookup_2(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Str _2928_ident) {
	return _1b9bb59eb_FindTrait(_self_.safe_ptr<_1b9bb4126_Package>(), _2928_ident);
}
inline jule::Ptr<_1b9b64c0e_Enum> _1b9cac76e_FindEnum_Lookup_2(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Str _3327_ident) {
	return _1b9bb5d3c_FindEnum(_self_.safe_ptr<_1b9bb4126_Package>(), _3327_ident);
}
inline jule::Ptr<_1b9b66419_TypeEnum> _1b9cacab0_FindTypeEnum_Lookup_2(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Str _3731_ident) {
	return _1b9bb617d_FindTypeEnum(_self_.safe_ptr<_1b9bb4126_Package>(), _3731_ident);
}
inline jule::Ptr<_1b9bb1200_ImportInfo> _1b9caaeed_SelectPackage_Lookup_3(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1b9bb1200_ImportInfo>)> _932_selector) {
	return _1b9bd285e_SelectPackage(_self_.safe_ptr<_1b9bd23b9_Sema>(), _932_selector);
}
inline jule::Ptr<_1b9c09611_Var> _1b9cab3e9_FindVar_Lookup_3(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1b9bd2c5a_FindVar(_self_.safe_ptr<_1b9bd23b9_Sema>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1b9c8c3db_TypeAlias> _1b9cab7e5_FindTypeAlias_Lookup_3(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1b9bd3156_FindTypeAlias(_self_.safe_ptr<_1b9bd23b9_Sema>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1b9b393a9_Struct> _1b9cabbe1_FindStruct_Lookup_3(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1b9bd3552_FindStruct(_self_.safe_ptr<_1b9bd23b9_Sema>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1b9b4e26a_Fn> _1b9cac0dc_FindFn_Lookup_3(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1b9bd394d_FindFn(_self_.safe_ptr<_1b9bd23b9_Sema>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1b9b62514_Trait> _1b9cac42d_FindTrait_Lookup_3(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Str _2928_ident) {
	return _1b9bd3c8e_FindTrait(_self_.safe_ptr<_1b9bd23b9_Sema>(), _2928_ident);
}
inline jule::Ptr<_1b9b64c0e_Enum> _1b9cac76e_FindEnum_Lookup_3(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Str _3327_ident) {
	return _1b9bd40d0_FindEnum(_self_.safe_ptr<_1b9bd23b9_Sema>(), _3327_ident);
}
inline jule::Ptr<_1b9b66419_TypeEnum> _1b9cacab0_FindTypeEnum_Lookup_3(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Str _3731_ident) {
	return _1b9bd4421_FindTypeEnum(_self_.safe_ptr<_1b9bd23b9_Sema>(), _3731_ident);
}
inline jule::Ptr<_1b9bb1200_ImportInfo> _1b9caaeed_SelectPackage_Lookup_4(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1b9bb1200_ImportInfo>)> _932_selector) {
	return _1b9c582ca_SelectPackage(_self_.safe_ptr<_1b9c57ce1_SymbolTable>(), _932_selector);
}
inline jule::Ptr<_1b9c09611_Var> _1b9cab3e9_FindVar_Lookup_4(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1b9c586c6_FindVar(_self_.safe_ptr<_1b9c57ce1_SymbolTable>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1b9c8c3db_TypeAlias> _1b9cab7e5_FindTypeAlias_Lookup_4(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1b9c58ac2_FindTypeAlias(_self_.safe_ptr<_1b9c57ce1_SymbolTable>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1b9b393a9_Struct> _1b9cabbe1_FindStruct_Lookup_4(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1b9c58ebd_FindStruct(_self_.safe_ptr<_1b9c57ce1_SymbolTable>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1b9b4e26a_Fn> _1b9cac0dc_FindFn_Lookup_4(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1b9c593b9_FindFn(_self_.safe_ptr<_1b9c57ce1_SymbolTable>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1b9b62514_Trait> _1b9cac42d_FindTrait_Lookup_4(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Str _2928_ident) {
	return _1b9c5970a_FindTrait(_self_.safe_ptr<_1b9c57ce1_SymbolTable>(), _2928_ident);
}
inline jule::Ptr<_1b9b64c0e_Enum> _1b9cac76e_FindEnum_Lookup_4(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Str _3327_ident) {
	return _1b9c59a4b_FindEnum(_self_.safe_ptr<_1b9c57ce1_SymbolTable>(), _3327_ident);
}
inline jule::Ptr<_1b9b66419_TypeEnum> _1b9cacab0_FindTypeEnum_Lookup_4(jule::Trait<_1b9cacc14_Lookup> _self_, jule::Str _3731_ident) {
	return _1b9c59d8c_FindTypeEnum(_self_.safe_ptr<_1b9c57ce1_SymbolTable>(), _3731_ident);
}
inline jule::Str _1c80907e1_Name_CommonFlag_0(jule::Trait<_1c80c2922_CommonFlag> _self_) {
	return _1cb4dc0ad_Name(_self_.safe_ptr<_1cb4dbb90_Flag>());
}
inline jule::I32 _1c8090989_Short_CommonFlag_0(jule::Trait<_1c80c2922_CommonFlag> _self_) {
	return _1cb4dc4ba_Short(_self_.safe_ptr<_1cb4dbb90_Flag>());
}
inline jule::Str _1c80c268b_What_CommonFlag_0(jule::Trait<_1c80c2922_CommonFlag> _self_) {
	return _1cb4dc212_What(_self_.safe_ptr<_1cb4dbb90_Flag>());
}
inline void _1c80c27ce_Reset_CommonFlag_0(jule::Trait<_1c80c2922_CommonFlag> _self_) {
	_1cb4dc366_Reset(_self_.safe_ptr<_1cb4dbb90_Flag>());
}
inline jule::Str _1c80907e1_Name_CommonFlag_1(jule::Trait<_1c80c2922_CommonFlag> _self_) {
	return _1cb4e0424_Name(_self_.safe_ptr<_1cb4e07dc_Flag>());
}
inline jule::I32 _1c8090989_Short_CommonFlag_1(jule::Trait<_1c80c2922_CommonFlag> _self_) {
	return _1cb4e0c1b_Short(_self_.safe_ptr<_1cb4e07dc_Flag>());
}
inline jule::Str _1c80c268b_What_CommonFlag_1(jule::Trait<_1c80c2922_CommonFlag> _self_) {
	return _1cb4e0567_What(_self_.safe_ptr<_1cb4e07dc_Flag>());
}
inline void _1c80c27ce_Reset_CommonFlag_1(jule::Trait<_1c80c2922_CommonFlag> _self_) {
	_1cb4e0ac8_Reset(_self_.safe_ptr<_1cb4e07dc_Flag>());
}
inline jule::Str _1c80907e1_Name_CommonFlag_2(jule::Trait<_1c80c2922_CommonFlag> _self_) {
	return _1cb4e3b20_Name(_self_.safe_ptr<_1cb4e3ed8_Flag>());
}
inline jule::I32 _1c8090989_Short_CommonFlag_2(jule::Trait<_1c80c2922_CommonFlag> _self_) {
	return _1cb4e4417_Short(_self_.safe_ptr<_1cb4e3ed8_Flag>());
}
inline jule::Str _1c80c268b_What_CommonFlag_2(jule::Trait<_1c80c2922_CommonFlag> _self_) {
	return _1cb4e3c63_What(_self_.safe_ptr<_1cb4e3ed8_Flag>());
}
inline void _1c80c27ce_Reset_CommonFlag_2(jule::Trait<_1c80c2922_CommonFlag> _self_) {
	_1cb4e42c4_Reset(_self_.safe_ptr<_1cb4e3ed8_Flag>());
}
inline jule::Str _1c80907e1_Name_CommonFlag_3(jule::Trait<_1c80c2922_CommonFlag> _self_) {
	return _1cb4e7360_Name(_self_.safe_ptr<_1cb4e7728_Flag>());
}
inline jule::I32 _1c8090989_Short_CommonFlag_3(jule::Trait<_1c80c2922_CommonFlag> _self_) {
	return _1cb4e7b57_Short(_self_.safe_ptr<_1cb4e7728_Flag>());
}
inline jule::Str _1c80c268b_What_CommonFlag_3(jule::Trait<_1c80c2922_CommonFlag> _self_) {
	return _1cb4e74a3_What(_self_.safe_ptr<_1cb4e7728_Flag>());
}
inline void _1c80c27ce_Reset_CommonFlag_3(jule::Trait<_1c80c2922_CommonFlag> _self_) {
	_1cb4e7a14_Reset(_self_.safe_ptr<_1cb4e7728_Flag>());
}
inline jule::Str _1c80907e1_Name_CommonFlag_4(jule::Trait<_1c80c2922_CommonFlag> _self_) {
	return _1cb4eaa5b_Name(_self_.safe_ptr<_1cb4eae24_Flag>());
}
inline jule::I32 _1c8090989_Short_CommonFlag_4(jule::Trait<_1c80c2922_CommonFlag> _self_) {
	return _1cb4eb353_Short(_self_.safe_ptr<_1cb4eae24_Flag>());
}
inline jule::Str _1c80c268b_What_CommonFlag_4(jule::Trait<_1c80c2922_CommonFlag> _self_) {
	return _1cb4eab9e_What(_self_.safe_ptr<_1cb4eae24_Flag>());
}
inline void _1c80c27ce_Reset_CommonFlag_4(jule::Trait<_1c80c2922_CommonFlag> _self_) {
	_1cb4eb210_Reset(_self_.safe_ptr<_1cb4eae24_Flag>());
}


static _1b9b685c5_comptimeRangeKindMptrData _1b9b685c5_comptimeRangeKind_mptr_data[] = {
	{
		._1b9b67cbc_ready=_1b9b67cbc_ready_comptimeRangeKind_0,
		._1b9b681da_step=_1b9b681da_step_comptimeRangeKind_0,
		._1b9b68471_len=_1b9b68471_len_comptimeRangeKind_0,
	},
	{
		._1b9b67cbc_ready=_1b9b67cbc_ready_comptimeRangeKind_1,
		._1b9b681da_step=_1b9b681da_step_comptimeRangeKind_1,
		._1b9b68471_len=_1b9b68471_len_comptimeRangeKind_1,
	},
	{
		._1b9b67cbc_ready=_1b9b67cbc_ready_comptimeRangeKind_2,
		._1b9b681da_step=_1b9b681da_step_comptimeRangeKind_2,
		._1b9b68471_len=_1b9b68471_len_comptimeRangeKind_2,
	},
	{
		._1b9b67cbc_ready=_1b9b67cbc_ready_comptimeRangeKind_3,
		._1b9b681da_step=_1b9b681da_step_comptimeRangeKind_3,
		._1b9b68471_len=_1b9b68471_len_comptimeRangeKind_3,
	},
	{
		._1b9b67cbc_ready=_1b9b67cbc_ready_comptimeRangeKind_4,
		._1b9b681da_step=_1b9b681da_step_comptimeRangeKind_4,
		._1b9b68471_len=_1b9b68471_len_comptimeRangeKind_4,
	},
	{
		._1b9b67cbc_ready=_1b9b67cbc_ready_comptimeRangeKind_5,
		._1b9b681da_step=_1b9b681da_step_comptimeRangeKind_5,
		._1b9b68471_len=_1b9b68471_len_comptimeRangeKind_5,
	},
};
static _1b9bad2da_ImporterMptrData _1b9bad2da_Importer_mptr_data[] = {
	{
		._1b9bac0b9_SetModPath=_1b9bac0b9_SetModPath_Importer_0,
		._1b9bac350_GetModPath=_1b9bac350_GetModPath_Importer_0,
		._1b9bac691_ModById=_1b9bac691_ModById_Importer_0,
		._1b9bac9d2_GetImport=_1b9bac9d2_GetImport_Importer_0,
		._1b9bacdcd_ImportPackage=_1b9bacdcd_ImportPackage_Importer_0,
		._1b9bad186_Imported=_1b9bad186_Imported_Importer_0,
	},
};
static _1b9c8cc27_KindMptrData _1b9c8cc27_Kind_mptr_data[] = {
	{
		._1b9c8c782_Str=_1b9c8c782_Str_Kind_0,
		._1b9c8cac3_Equal=_1b9c8cac3_Equal_Kind_0,
	},
	{
		._1b9c8c782_Str=_1b9c8c782_Str_Kind_1,
		._1b9c8cac3_Equal=_1b9c8cac3_Equal_Kind_1,
	},
	{
		._1b9c8c782_Str=_1b9c8c782_Str_Kind_2,
		._1b9c8cac3_Equal=_1b9c8cac3_Equal_Kind_2,
	},
	{
		._1b9c8c782_Str=_1b9c8c782_Str_Kind_3,
		._1b9c8cac3_Equal=_1b9c8cac3_Equal_Kind_3,
	},
	{
		._1b9c8c782_Str=_1b9c8c782_Str_Kind_4,
		._1b9c8cac3_Equal=_1b9c8cac3_Equal_Kind_4,
	},
	{
		._1b9c8c782_Str=_1b9c8c782_Str_Kind_5,
		._1b9c8cac3_Equal=_1b9c8cac3_Equal_Kind_5,
	},
	{
		._1b9c8c782_Str=_1b9c8c782_Str_Kind_6,
		._1b9c8cac3_Equal=_1b9c8cac3_Equal_Kind_6,
	},
	{
		._1b9c8c782_Str=_1b9c8c782_Str_Kind_7,
		._1b9c8cac3_Equal=_1b9c8cac3_Equal_Kind_7,
	},
	{
		._1b9c8c782_Str=_1b9c8c782_Str_Kind_8,
		._1b9c8cac3_Equal=_1b9c8cac3_Equal_Kind_8,
	},
	{
		._1b9c8c782_Str=_1b9c8c782_Str_Kind_9,
		._1b9c8cac3_Equal=_1b9c8cac3_Equal_Kind_9,
	},
	{
		._1b9c8c782_Str=_1b9c8c782_Str_Kind_10,
		._1b9c8cac3_Equal=_1b9c8cac3_Equal_Kind_10,
	},
	{
		._1b9c8c782_Str=_1b9c8c782_Str_Kind_11,
		._1b9c8cac3_Equal=_1b9c8cac3_Equal_Kind_11,
	},
	{
		._1b9c8c782_Str=_1b9c8c782_Str_Kind_12,
		._1b9c8cac3_Equal=_1b9c8cac3_Equal_Kind_12,
	},
	{
		._1b9c8c782_Str=_1b9c8c782_Str_Kind_13,
		._1b9c8cac3_Equal=_1b9c8cac3_Equal_Kind_13,
	},
	{
		._1b9c8c782_Str=_1b9c8c782_Str_Kind_14,
		._1b9c8cac3_Equal=_1b9c8cac3_Equal_Kind_14,
	},
	{
		._1b9c8c782_Str=_1b9c8c782_Str_Kind_15,
		._1b9c8cac3_Equal=_1b9c8cac3_Equal_Kind_15,
	},
	{
		._1b9c8c782_Str=_1b9c8c782_Str_Kind_16,
		._1b9c8cac3_Equal=_1b9c8cac3_Equal_Kind_16,
	},
	{
		._1b9c8c782_Str=_1b9c8c782_Str_Kind_17,
		._1b9c8cac3_Equal=_1b9c8cac3_Equal_Kind_17,
	},
	{
		._1b9c8c782_Str=_1b9c8c782_Str_Kind_18,
		._1b9c8cac3_Equal=_1b9c8cac3_Equal_Kind_18,
	},
	{
		._1b9c8c782_Str=_1b9c8c782_Str_Kind_19,
		._1b9c8cac3_Equal=_1b9c8cac3_Equal_Kind_19,
	},
	{
		._1b9c8c782_Str=_1b9c8c782_Str_Kind_20,
		._1b9c8cac3_Equal=_1b9c8cac3_Equal_Kind_20,
	},
	{
		._1b9c8c782_Str=_1b9c8c782_Str_Kind_21,
		._1b9c8cac3_Equal=_1b9c8cac3_Equal_Kind_21,
	},
	{
		._1b9c8c782_Str=_1b9c8c782_Str_Kind_22,
		._1b9c8cac3_Equal=_1b9c8cac3_Equal_Kind_22,
	},
	{
		._1b9c8c782_Str=_1b9c8c782_Str_Kind_23,
		._1b9c8cac3_Equal=_1b9c8cac3_Equal_Kind_23,
	},
	{
		._1b9c8c782_Str=_1b9c8c782_Str_Kind_24,
		._1b9c8cac3_Equal=_1b9c8cac3_Equal_Kind_24,
	},
	{
		._1b9c8c782_Str=_1b9c8c782_Str_Kind_25,
		._1b9c8cac3_Equal=_1b9c8cac3_Equal_Kind_25,
	},
	{
		._1b9c8c782_Str=_1b9c8c782_Str_Kind_26,
		._1b9c8cac3_Equal=_1b9c8cac3_Equal_Kind_26,
	},
	{
		._1b9c8c782_Str=_1b9c8c782_Str_Kind_27,
		._1b9c8cac3_Equal=_1b9c8cac3_Equal_Kind_27,
	},
};
static _1b9cacc14_LookupMptrData _1b9cacc14_Lookup_mptr_data[] = {
	{
		._1b9caaeed_SelectPackage=_1b9caaeed_SelectPackage_Lookup_0,
		._1b9cab3e9_FindVar=_1b9cab3e9_FindVar_Lookup_0,
		._1b9cab7e5_FindTypeAlias=_1b9cab7e5_FindTypeAlias_Lookup_0,
		._1b9cabbe1_FindStruct=_1b9cabbe1_FindStruct_Lookup_0,
		._1b9cac0dc_FindFn=_1b9cac0dc_FindFn_Lookup_0,
		._1b9cac42d_FindTrait=_1b9cac42d_FindTrait_Lookup_0,
		._1b9cac76e_FindEnum=_1b9cac76e_FindEnum_Lookup_0,
		._1b9cacab0_FindTypeEnum=_1b9cacab0_FindTypeEnum_Lookup_0,
	},
	{
		._1b9caaeed_SelectPackage=_1b9caaeed_SelectPackage_Lookup_1,
		._1b9cab3e9_FindVar=_1b9cab3e9_FindVar_Lookup_1,
		._1b9cab7e5_FindTypeAlias=_1b9cab7e5_FindTypeAlias_Lookup_1,
		._1b9cabbe1_FindStruct=_1b9cabbe1_FindStruct_Lookup_1,
		._1b9cac0dc_FindFn=_1b9cac0dc_FindFn_Lookup_1,
		._1b9cac42d_FindTrait=_1b9cac42d_FindTrait_Lookup_1,
		._1b9cac76e_FindEnum=_1b9cac76e_FindEnum_Lookup_1,
		._1b9cacab0_FindTypeEnum=_1b9cacab0_FindTypeEnum_Lookup_1,
	},
	{
		._1b9caaeed_SelectPackage=_1b9caaeed_SelectPackage_Lookup_2,
		._1b9cab3e9_FindVar=_1b9cab3e9_FindVar_Lookup_2,
		._1b9cab7e5_FindTypeAlias=_1b9cab7e5_FindTypeAlias_Lookup_2,
		._1b9cabbe1_FindStruct=_1b9cabbe1_FindStruct_Lookup_2,
		._1b9cac0dc_FindFn=_1b9cac0dc_FindFn_Lookup_2,
		._1b9cac42d_FindTrait=_1b9cac42d_FindTrait_Lookup_2,
		._1b9cac76e_FindEnum=_1b9cac76e_FindEnum_Lookup_2,
		._1b9cacab0_FindTypeEnum=_1b9cacab0_FindTypeEnum_Lookup_2,
	},
	{
		._1b9caaeed_SelectPackage=_1b9caaeed_SelectPackage_Lookup_3,
		._1b9cab3e9_FindVar=_1b9cab3e9_FindVar_Lookup_3,
		._1b9cab7e5_FindTypeAlias=_1b9cab7e5_FindTypeAlias_Lookup_3,
		._1b9cabbe1_FindStruct=_1b9cabbe1_FindStruct_Lookup_3,
		._1b9cac0dc_FindFn=_1b9cac0dc_FindFn_Lookup_3,
		._1b9cac42d_FindTrait=_1b9cac42d_FindTrait_Lookup_3,
		._1b9cac76e_FindEnum=_1b9cac76e_FindEnum_Lookup_3,
		._1b9cacab0_FindTypeEnum=_1b9cacab0_FindTypeEnum_Lookup_3,
	},
	{
		._1b9caaeed_SelectPackage=_1b9caaeed_SelectPackage_Lookup_4,
		._1b9cab3e9_FindVar=_1b9cab3e9_FindVar_Lookup_4,
		._1b9cab7e5_FindTypeAlias=_1b9cab7e5_FindTypeAlias_Lookup_4,
		._1b9cabbe1_FindStruct=_1b9cabbe1_FindStruct_Lookup_4,
		._1b9cac0dc_FindFn=_1b9cac0dc_FindFn_Lookup_4,
		._1b9cac42d_FindTrait=_1b9cac42d_FindTrait_Lookup_4,
		._1b9cac76e_FindEnum=_1b9cac76e_FindEnum_Lookup_4,
		._1b9cacab0_FindTypeEnum=_1b9cacab0_FindTypeEnum_Lookup_4,
	},
};
static _1c80c2922_CommonFlagMptrData _1c80c2922_CommonFlag_mptr_data[] = {
	{
		._1c80907e1_Name=_1c80907e1_Name_CommonFlag_0,
		._1c8090989_Short=_1c8090989_Short_CommonFlag_0,
		._1c80c268b_What=_1c80c268b_What_CommonFlag_0,
		._1c80c27ce_Reset=_1c80c27ce_Reset_CommonFlag_0,
	},
	{
		._1c80907e1_Name=_1c80907e1_Name_CommonFlag_1,
		._1c8090989_Short=_1c8090989_Short_CommonFlag_1,
		._1c80c268b_What=_1c80c268b_What_CommonFlag_1,
		._1c80c27ce_Reset=_1c80c27ce_Reset_CommonFlag_1,
	},
	{
		._1c80907e1_Name=_1c80907e1_Name_CommonFlag_2,
		._1c8090989_Short=_1c8090989_Short_CommonFlag_2,
		._1c80c268b_What=_1c80c268b_What_CommonFlag_2,
		._1c80c27ce_Reset=_1c80c27ce_Reset_CommonFlag_2,
	},
	{
		._1c80907e1_Name=_1c80907e1_Name_CommonFlag_3,
		._1c8090989_Short=_1c8090989_Short_CommonFlag_3,
		._1c80c268b_What=_1c80c268b_What_CommonFlag_3,
		._1c80c27ce_Reset=_1c80c27ce_Reset_CommonFlag_3,
	},
	{
		._1c80907e1_Name=_1c80907e1_Name_CommonFlag_4,
		._1c8090989_Short=_1c8090989_Short_CommonFlag_4,
		._1c80c268b_What=_1c80c268b_What_CommonFlag_4,
		._1c80c27ce_Reset=_1c80c27ce_Reset_CommonFlag_4,
	},
};


void __jule_any_type0_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_any_type0_dealloc, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
void __jule_any_type1_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_any_type1_dealloc, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
void __jule_any_type2_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_any_type2_dealloc, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
void __jule_any_type3_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_any_type3_dealloc, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
void __jule_any_type4_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_any_type4_dealloc, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
void __jule_any_type5_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_any_type5_dealloc, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
void __jule_any_type6_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_any_type6_dealloc, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
void __jule_any_type7_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b5216e_FnIns>().dealloc(); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_any_type7_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1b9b5216e_FnIns> &other) { return any.type == &__jule_any_type7 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type8_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9c09611_Var>().dealloc(); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_any_type8_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1b9c09611_Var> &other) { return any.type == &__jule_any_type8 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type9_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b3c137_StructIns>().dealloc(); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_any_type9_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1b9b3c137_StructIns> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type10_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b62514_Trait>().dealloc(); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_any_type10_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1b9b62514_Trait> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type11_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b35196_Impl>().dealloc(); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_any_type11_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1b9b35196_Impl> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type12_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b3012a_TypeAliasDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_any_type12_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1b9b3012a_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type13_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b342e9_StructDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_any_type13_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1b9b342e9_StructDecl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type14_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b2a477_FnDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_any_type14_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1b9b2a477_FnDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type15_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b34a36_TraitDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_any_type15_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1b9b34a36_TraitDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type16_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b2b555_VarDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_any_type16_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1b9b2b555_VarDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type17_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b3269e_EnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_any_type17_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1b9b3269e_EnumDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type18_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b33639_TypeEnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_any_type18_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1b9b33639_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type19_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ec682ce3_Const>().dealloc(); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_any_type19_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1ec682ce3_Const> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type20_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b18dc2_IdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_any_type20_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1b9b18dc2_IdentTypeDecl> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type21_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b92665_Label>().dealloc(); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_any_type21_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1b9b92665_Label> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type22_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b8ecc2_Scope>().dealloc(); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_any_type22_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1b9b8ecc2_Scope> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type23_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b49d37_BuiltinErrorCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_any_type23_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1b9b49d37_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type24_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9c5d016_Data>().dealloc(); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_any_type24_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1b9c5d016_Data> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type25_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b4b036_BackendEmitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_any_type25_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1b9b4b036_BackendEmitExprModel> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type26_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b48ab1_BuiltinAppendCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_any_type26_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1b9b48ab1_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type27_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b470ed_BuiltinOutCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_any_type27_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1b9b470ed_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type28_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b474c7_BuiltinOutlnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_any_type28_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1b9b474c7_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type29_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b47c7a_BuiltinPanicCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_any_type29_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1b9b47c7a_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type30_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b48231_BuiltinAssertCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_any_type30_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1b9b48231_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type31_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b4995d_BuiltinCopyCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_any_type31_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1b9b4995d_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type32_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b49584_BuiltinDeleteCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_any_type32_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1b9b49584_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type33_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b4b333_FreeExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_any_type33_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1b9b4b333_FreeExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type34_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b43506_FnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_any_type34_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1b9b43506_FnCallExprModel> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type35_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b9090a_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_any_type35_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1b9b9090a_Conditional> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type36_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b90c07_InfIter>().dealloc(); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_any_type36_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1b9b90c07_InfIter> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type37_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b2c8ec_WhileKind>().dealloc(); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_any_type37_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1b9b2c8ec_WhileKind> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type38_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b911ad_WhileIter>().dealloc(); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_any_type38_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1b9b911ad_WhileIter> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type39_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b2d304_RangeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_any_type39_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1b9b2d304_RangeKind> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type40_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b91b09_RangeIter>().dealloc(); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_any_type40_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1b9b91b09_RangeIter> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type41_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b91e8e_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_any_type41_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1b9b91e8e_ContSt> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type42_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b92a3e_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_any_type42_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1b9b92a3e_GotoSt> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type43_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b92e18_Postfix>().dealloc(); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_any_type43_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1b9b92e18_Postfix> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type44_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b933be_Assign>().dealloc(); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_any_type44_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1b9b933be_Assign> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type45_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b43d86_IndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_any_type45_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1b9b43d86_IndexingExprModel> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type46_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b93798_MultiAssign>().dealloc(); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_any_type46_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1b9b93798_MultiAssign> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type47_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b93e08_Match>().dealloc(); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_any_type47_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1b9b93e08_Match> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type48_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b9513a_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_any_type48_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1b9b9513a_FallSt> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type49_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b92368_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_any_type49_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1b9b92368_BreakSt> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type50_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b954c0_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_any_type50_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1b9b954c0_RetSt> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type51_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b287d8_ScopeTree>().dealloc(); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_any_type51_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1b9b287d8_ScopeTree> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type52_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b1caeb_Expr>().dealloc(); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_any_type52_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1b9b1caeb_Expr> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type53_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b2e8dd_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_any_type53_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1b9b2e8dd_Conditional> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type54_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b2c0c2_Iter>().dealloc(); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_any_type54_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1b9b2c0c2_Iter> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type55_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b2daa7_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_any_type55_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1b9b2daa7_ContSt> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type56_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b25d9b_LabelSt>().dealloc(); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_any_type56_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1b9b25d9b_LabelSt> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type57_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b26275_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_any_type57_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1b9b26275_GotoSt> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type58_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b27265_AssignSt>().dealloc(); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_any_type58_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1b9b27265_AssignSt> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type59_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b30d1d_MatchCase>().dealloc(); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_any_type59_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1b9b30d1d_MatchCase> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type60_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b26572_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_any_type60_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1b9b26572_FallSt> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type61_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b2d6cd_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_any_type61_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1b9b2d6cd_BreakSt> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type62_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b2b92e_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_any_type62_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1b9b2b92e_RetSt> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type63_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b1d4c0_UseExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_any_type63_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1b9b1d4c0_UseExpr> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type64_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b4e26a_Fn>().dealloc(); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_any_type64_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1b9b4e26a_Fn> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type65_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b393a9_Struct>().dealloc(); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_any_type65_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1b9b393a9_Struct> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type66_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9c8c3db_TypeAlias>().dealloc(); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_any_type66_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1b9c8c3db_TypeAlias> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type67_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b64c0e_Enum>().dealloc(); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_any_type67_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1b9b64c0e_Enum> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type68_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b66419_TypeEnum>().dealloc(); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_any_type68_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1b9b66419_TypeEnum> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type69_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b1aa83_ArrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_any_type69_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1b9b1aa83_ArrTypeDecl> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type70_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b19be7_SlcTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_any_type70_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1b9b19be7_SlcTypeDecl> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type71_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b1a2e1_PtrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_any_type71_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1b9b1a2e1_PtrTypeDecl> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type72_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b19862_SptrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_any_type72_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1b9b19862_SptrTypeDecl> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type73_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b1b2d1_MapTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_any_type73_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1b9b1b2d1_MapTypeDecl> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type74_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b19ee4_TupleTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_any_type74_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1b9b19ee4_TupleTypeDecl> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type75_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b20082_VariadicExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_any_type75_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1b9b20082_VariadicExpr> &other) { return any.type == &__jule_any_type75 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type76_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b438d0_SliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_any_type76_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1b9b438d0_SliceExprModel> &other) { return any.type == &__jule_any_type76 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type77_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b2231a_FieldExprPair>().dealloc(); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_any_type77_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1b9b2231a_FieldExprPair> &other) { return any.type == &__jule_any_type77 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type78_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b23926_KeyValPair>().dealloc(); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_any_type78_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1b9b23926_KeyValPair> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type79_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b1e526_IdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_any_type79_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1b9b1e526_IdentExpr> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type80_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b1d7bc_TupleExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_any_type80_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1b9b1d7bc_TupleExpr> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type81_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b46c24_TupleExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_any_type81_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1b9b46c24_TupleExprModel> &other) { return any.type == &__jule_any_type81 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type82_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b4a860_RuneExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_any_type82_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1b9b4a860_RuneExprModel> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type83_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9c8d1cd_TypeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_any_type83_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1b9c8d1cd_TypeKind> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type84_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b46927_ArrayExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_any_type84_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1b9b46927_ArrayExprModel> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type85_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b20c0e_SubIdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_any_type85_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1b9b20c0e_SubIdentExpr> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type86_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b191be_SubIdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_any_type86_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1b9b191be_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type87_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b1eba8_UnaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_any_type87_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1b9b1eba8_UnaryExpr> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type88_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b187b7_TypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_any_type88_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1b9b187b7_TypeDecl> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type89_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b20835_NsSelectionExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_any_type89_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1b9b20835_NsSelectionExpr> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type90_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b19565_NamespaceTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_any_type90_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1b9b19565_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type91_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b45173_SlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_any_type91_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1b9b45173_SlicingExprModel> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type92_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b42b54_CastingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_any_type92_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1b9b42b54_CastingExprModel> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type93_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b2411e_SliceExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_any_type93_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1b9b2411e_SliceExpr> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type94_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b422c4_StructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_any_type94_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1b9b422c4_StructLitExprModel> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type95_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b4654d_StructStaticIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_any_type95_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1b9b4654d_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type96_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b45706_TraitSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_any_type96_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1b9b45706_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type97_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b46097_StructSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_any_type97_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1b9b46097_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type98_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b44ae0_MapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_any_type98_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1b9b44ae0_MapExprModel> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type99_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b44260_AnonFnExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_any_type99_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1b9b44260_AnonFnExprModel> &other) { return any.type == &__jule_any_type99 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type100_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b1cde8_RangeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_any_type100_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1b9b1cde8_RangeExpr> &other) { return any.type == &__jule_any_type100 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type101_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b1db96_LitExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_any_type101_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1b9b1db96_LitExpr> &other) { return any.type == &__jule_any_type101 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type102_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b1e070_UnsafeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_any_type102_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1b9b1e070_UnsafeExpr> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type103_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b24aae_IndexingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_any_type103_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1b9b24aae_IndexingExpr> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type104_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b2521e_SlicingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_any_type104_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1b9b2521e_SlicingExpr> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type105_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b2045b_CastExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_any_type105_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1b9b2045b_CastExpr> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type106_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b22b45_StructLit>().dealloc(); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_any_type106_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1b9b22b45_StructLit> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type107_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b21825_FnCallExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_any_type107_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1b9b21825_FnCallExpr> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type108_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b230eb_BraceLit>().dealloc(); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_any_type108_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1b9b230eb_BraceLit> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type109_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b211b5_BinopExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_any_type109_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1b9b211b5_BinopExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type110_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b41900_UnaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_any_type110_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1b9b41900_UnaryExprModel> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type111_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b41526_BinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_any_type111_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1b9b41526_BinopExprModel> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type112_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b425c1_AllocStructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_any_type112_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1b9b425c1_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type113_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b478a1_BuiltinNewCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_any_type113_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1b9b478a1_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type114_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b486d7_BuiltinMakeCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_any_type114_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1b9b486d7_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type115_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b48dad_BuiltinLenCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_any_type115_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1b9b48dad_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type116_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b491aa_BuiltinCapCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_any_type116_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1b9b491aa_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type116 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type117_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b458e3_SizeofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_any_type117_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1b9b458e3_SizeofExprModel> &other) { return any.type == &__jule_any_type117 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type118_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b4a563_AlignofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_any_type118_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1b9b4a563_AlignofExprModel> &other) { return any.type == &__jule_any_type118 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type119_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9b4ab5c_IntegratedToStrExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_any_type119_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1b9b4ab5c_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type120_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9d8c695_MutSlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_any_type120_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1b9d8c695_MutSlicingExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type121_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9d8d1bd_PushToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_any_type121_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1b9d8d1bd_PushToSliceExprModel> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type122_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9d8d597_AppendToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_any_type122_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1b9d8d597_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type123_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9d8b40d_SwapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_any_type123_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1b9d8b40d_SwapExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type124_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9d8b7d7_EmptyCompareExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_any_type124_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1b9d8b7d7_EmptyCompareExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type125_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9d8c112_StrCompExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_any_type125_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1b9d8c112_StrCompExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type126_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9d8c992_UnsafeBinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_any_type126_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1b9d8c992_UnsafeBinopExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type127_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9d8bad4_RefExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_any_type127_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1b9d8bad4_RefExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type128_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9d8cc8e_UnsafeIndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_any_type128_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1b9d8cc8e_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type129_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9d8d894_InlineStdInternalNosafeStobs>().dealloc(); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_any_type129_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_1b9d8d894_InlineStdInternalNosafeStobs> &other) { return any.type == &__jule_any_type129 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type130_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
jule::Bool __jule_any_type130_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other); }
jule::Str __jule_any_type130_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_any_type130_dealloc, .eq=__jule_any_type130_eq, .to_str=__jule_any_type130_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type130 && __jule_any_type130_eq(any.data.alloc, (void*)&other); }
void __jule_any_type131_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
jule::Bool __jule_any_type131_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other); }
jule::Str __jule_any_type131_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_any_type131_dealloc, .eq=__jule_any_type131_eq, .to_str=__jule_any_type131_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type131 && __jule_any_type131_eq(any.data.alloc, (void*)&other); }
void __jule_any_type132_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
jule::Bool __jule_any_type132_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other); }
jule::Str __jule_any_type132_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_any_type132_dealloc, .eq=__jule_any_type132_eq, .to_str=__jule_any_type132_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type132 && __jule_any_type132_eq(any.data.alloc, (void*)&other); }
void __jule_any_type133_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
jule::Bool __jule_any_type133_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other); }
jule::Str __jule_any_type133_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_any_type133_dealloc, .eq=__jule_any_type133_eq, .to_str=__jule_any_type133_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type133 && __jule_any_type133_eq(any.data.alloc, (void*)&other); }
void __jule_any_type134_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
jule::Bool __jule_any_type134_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other); }
jule::Str __jule_any_type134_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_any_type134_dealloc, .eq=__jule_any_type134_eq, .to_str=__jule_any_type134_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type134 && __jule_any_type134_eq(any.data.alloc, (void*)&other); }
void __jule_any_type135_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
jule::Bool __jule_any_type135_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other); }
jule::Str __jule_any_type135_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_any_type135_dealloc, .eq=__jule_any_type135_eq, .to_str=__jule_any_type135_to_str};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type135 && __jule_any_type135_eq(any.data.alloc, (void*)&other); }
jule::Array<jule::Array<jule::Str,2>,5> _23d326292_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str::lit("help", 4),jule::Str::lit("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str::lit("version", 7),jule::Str::lit("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str::lit("tool", 4),jule::Str::lit("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str::lit("julenv", 6),jule::Str::lit("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str::lit("mod", 3),jule::Str::lit("Module management", 17)})});
jule::Str _1c80ce335_OutDir = jule::Str::lit("dist", 4);
jule::Str _1c80ce610_OutName = jule::Str::lit("ir.cpp", 6);
jule::Str _1c80ce8c9_Out = jule::Str();
jule::Str _22e07ed40_Compiler = jule::Str();
jule::Str _22e080060_CompilerPath = jule::Str();
jule::Str _22e080280_CppStd = jule::Str::lit("cpp17", 5);
jule::Bool _22e0804a0_Shadowing = false;
jule::Bool _22e080714_Transpilation = false;
jule::Bool _22e0809cd_Test = false;
jule::Bool _22e080c97_RC = true;
jule::Bool _22e081171_Safety = true;
jule::Bool _22e08143a_Production = false;
jule::Ptr<_23ceed94d_RangeTable> _23ce89213__L = jule::new_ptr<_23ceed94d_RangeTable>(_23ceed94d_RangeTable{._field_R16=jule::Slice<_23ceece69_Range16>::make({_23ceece69_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_23ceece69_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_23ceece69_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_23ceece69_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_23ceece69_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_23ceece69_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_23ceece69_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_23ceece69_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_23ceece69_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_23ceece69_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_23ceece69_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_23ceece69_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_23ceece69_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_23ceece69_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_23ceece69_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_23ceece69_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_23ceece69_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_23ceece69_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_23ceece69_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_23ceece69_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_23ceece69_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_23ceece69_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_23ceece69_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_23ceece69_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_23ceece69_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_23ceece69_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_23ceece69_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_23ceece69_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_23ceece69_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_23ceece69_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_23ceece69_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_23ceece69_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_23ceece69_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_23ceece69_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_23ceece69_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_23ceece69_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_23ceece69_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_23ceece69_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_23ceece69_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_23ceece69_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_23ceece69_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_23ceece69_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_23ceece69_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_23ceece69_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_23ceece69_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_23ceece69_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_23ceece69_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_23ceece69_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_23ceece69_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_23ceece69_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_23ceece69_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_23ceece69_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_23ceece69_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_23ceece69_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_23ceece69_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_23ceece69_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_23ceece69_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_23ceece69_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_23ceece69_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_23ceece69_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_23ceed497_Range32>::make({_23ceed497_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_23ceed497_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_23ceed497_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_23ceed497_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_23ceed497_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_23ceed497_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_23ceed497_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_23ceed497_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_23ceed497_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_23ceed497_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_23ceed497_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_23ceed497_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_23ceed497_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_23ceed497_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_23ceed497_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_23ceed497_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_23ceed497_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_23ceed497_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_23ceed497_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_23ceed497_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_23ceed497_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_23ceed497_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_23ceed497_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_23ceed497_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_23ceed497_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_23ceed497_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_23ceed497_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_23ceed497_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_23ceed497_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_23ceed497_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_23ceed497_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_23ceed497_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_23ceed497_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_23ceed497_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_23ceed497_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_23ceed497_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_23ceed497_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_23ceed497_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_23ceed497_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_23ceed497_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_23ceed497_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_23ceed497_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_23ceed497_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_23ceed94d_RangeTable> _23ce8a203__LU = jule::new_ptr<_23ceed94d_RangeTable>(_23ceed94d_RangeTable{._field_R16=jule::Slice<_23ceece69_Range16>::make({_23ceece69_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_23ceece69_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_23ceece69_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_23ceece69_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_23ceece69_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_23ceece69_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_23ceece69_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_23ceece69_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_23ceece69_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_23ceece69_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_23ceece69_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_23ceece69_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_23ceece69_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_23ceece69_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_23ceece69_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_23ceece69_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_23ceece69_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_23ceed497_Range32>::make({_23ceed497_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_23ceed497_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_23ceed497_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_23ceed497_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_23ceed497_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_23ceed497_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_23ceed497_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::U8,256> _23cee7282__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::U8,256> _23d10a351_first = jule::Array<jule::U8,256>({240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,19LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,35LLU,3LLU,3LLU,52LLU,4LLU,4LLU,4LLU,68LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU});
jule::Array<_23d10a8d4_acceptRange,16> _23d10abe2_acceptRanges = jule::Array<_23d10a8d4_acceptRange,16>({_23d10a8d4_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_23d10a8d4_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_23d10a8d4_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_23d10a8d4_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_23d10a8d4_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Str,4> _23d202b30_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str::lit(".h", 2),jule::Str::lit(".hpp", 4),jule::Str::lit(".hxx", 4),jule::Str::lit(".hh", 3)});
jule::Array<jule::Str,3> _23d20225b_CppExts = jule::Array<jule::Str,3>({jule::Str::lit(".cpp", 4),jule::Str::lit(".cc", 3),jule::Str::lit(".cxx", 4)});
jule::Array<jule::Str,1> _23d203dea_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str::lit(".mm", 3)});
jule::Str _23d32248b_PathStdlib = jule::Str();
jule::Str _23d3226de_PathExec = jule::Str();
jule::Str _23d322997_PathWd = jule::Str();
jule::Str _23d322ca5_PathApi = jule::Str();
jule::Str _23d32306e_Os = jule::Str::lit("linux", 5);
jule::Str _23d323338_Arch = jule::Str::lit("i386", 4);
jule::Array<jule::U8,32> _1ec614307__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1ec6148bd__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_1ec65998a_floatInfo _1ec659c98_f32info = _1ec65998a_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_1ec65998a_floatInfo _1ec65a051_f64info = _1ec65998a_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1ec662993_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I32> _1ec66480d_powtab = jule::Slice<jule::I32>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1ec6653d0_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1ec665721_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _1ec668988_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1ec66c75b_leftCheat> _1ec66cb8a_leftCheats = jule::Slice<_1ec66c75b_leftCheat>::make({_1ec66c75b_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1ec66c75b_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("5", 1)},_1ec66c75b_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("25", 2)},_1ec66c75b_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("125", 3)},_1ec66c75b_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("625", 3)},_1ec66c75b_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("3125", 4)},_1ec66c75b_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("15625", 5)},_1ec66c75b_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("78125", 5)},_1ec66c75b_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("390625", 6)},_1ec66c75b_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("1953125", 7)},_1ec66c75b_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("9765625", 7)},_1ec66c75b_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("48828125", 8)},_1ec66c75b_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("244140625", 9)},_1ec66c75b_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("1220703125", 10)},_1ec66c75b_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("6103515625", 10)},_1ec66c75b_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("30517578125", 11)},_1ec66c75b_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("152587890625", 12)},_1ec66c75b_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("762939453125", 12)},_1ec66c75b_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("3814697265625", 13)},_1ec66c75b_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("19073486328125", 14)},_1ec66c75b_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("95367431640625", 14)},_1ec66c75b_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("476837158203125", 15)},_1ec66c75b_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("2384185791015625", 16)},_1ec66c75b_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("11920928955078125", 17)},_1ec66c75b_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("59604644775390625", 17)},_1ec66c75b_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("298023223876953125", 18)},_1ec66c75b_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("1490116119384765625", 19)},_1ec66c75b_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("7450580596923828125", 19)},_1ec66c75b_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("37252902984619140625", 20)},_1ec66c75b_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("186264514923095703125", 21)},_1ec66c75b_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("931322574615478515625", 21)},_1ec66c75b_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("4656612873077392578125", 22)},_1ec66c75b_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("23283064365386962890625", 23)},_1ec66c75b_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("116415321826934814453125", 24)},_1ec66c75b_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("582076609134674072265625", 24)},_1ec66c75b_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("2910383045673370361328125", 25)},_1ec66c75b_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("14551915228366851806640625", 26)},_1ec66c75b_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("72759576141834259033203125", 26)},_1ec66c75b_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("363797880709171295166015625", 27)},_1ec66c75b_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("1818989403545856475830078125", 28)},_1ec66c75b_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("9094947017729282379150390625", 28)},_1ec66c75b_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("45474735088646411895751953125", 29)},_1ec66c75b_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("227373675443232059478759765625", 30)},_1ec66c75b_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("1136868377216160297393798828125", 31)},_1ec66c75b_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("5684341886080801486968994140625", 31)},_1ec66c75b_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("28421709430404007434844970703125", 32)},_1ec66c75b_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("142108547152020037174224853515625", 33)},_1ec66c75b_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("710542735760100185871124267578125", 33)},_1ec66c75b_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("3552713678800500929355621337890625", 34)},_1ec66c75b_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("17763568394002504646778106689453125", 35)},_1ec66c75b_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("88817841970012523233890533447265625", 35)},_1ec66c75b_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("444089209850062616169452667236328125", 36)},_1ec66c75b_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("2220446049250313080847263336181640625", 37)},_1ec66c75b_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("11102230246251565404236316680908203125", 38)},_1ec66c75b_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("55511151231257827021181583404541015625", 38)},_1ec66c75b_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("277555756156289135105907917022705078125", 39)},_1ec66c75b_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("1387778780781445675529539585113525390625", 40)},_1ec66c75b_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("6938893903907228377647697925567626953125", 40)},_1ec66c75b_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("34694469519536141888238489627838134765625", 41)},_1ec66c75b_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("173472347597680709441192448139190673828125", 42)},_1ec66c75b_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str::lit("867361737988403547205962240695953369140625", 42)}});
jule::I32 _1ec673b4c_BitSize = 0LL;
jule::Str _1ec673e5a_SysInt = jule::Str();
jule::Str _1ec674224_SysUint = jule::Str();
jule::Array<jule::I32,5> _1e293a13d_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::U32,6> _1e293a35d_UnaryOps = jule::Array<jule::U32,6>({static_cast<jule::U32>(61LLU),static_cast<jule::U32>(60LLU),static_cast<jule::U32>(67LLU),static_cast<jule::U32>(68LLU),static_cast<jule::U32>(62LLU),static_cast<jule::U32>(65LLU)});
jule::Array<jule::U32,18> _1e293a605_BinOps = jule::Array<jule::U32,18>({static_cast<jule::U32>(60LLU),static_cast<jule::U32>(61LLU),static_cast<jule::U32>(62LLU),static_cast<jule::U32>(63LLU),static_cast<jule::U32>(64LLU),static_cast<jule::U32>(65LLU),static_cast<jule::U32>(66LLU),static_cast<jule::U32>(67LLU),static_cast<jule::U32>(56LLU),static_cast<jule::U32>(57LLU),static_cast<jule::U32>(69LLU),static_cast<jule::U32>(70LLU),static_cast<jule::U32>(53LLU),static_cast<jule::U32>(52LLU),static_cast<jule::U32>(54LLU),static_cast<jule::U32>(55LLU),static_cast<jule::U32>(50LLU),static_cast<jule::U32>(51LLU)});
jule::Array<jule::U32,2> _1b9aec7ac_PostfixOps = jule::Array<jule::U32,2>({static_cast<jule::U32>(58LLU),static_cast<jule::U32>(59LLU)});
jule::Array<jule::U32,11> _1b9aecaa9_AssignOps = jule::Array<jule::U32,11>({static_cast<jule::U32>(71LLU),static_cast<jule::U32>(40LLU),static_cast<jule::U32>(41LLU),static_cast<jule::U32>(43LLU),static_cast<jule::U32>(42LLU),static_cast<jule::U32>(44LLU),static_cast<jule::U32>(46LLU),static_cast<jule::U32>(45LLU),static_cast<jule::U32>(49LLU),static_cast<jule::U32>(48LLU),static_cast<jule::U32>(47LLU)});
jule::Array<_1b9b0abd8_kindPair,28> _1b9b0b117_keywords = jule::Array<_1b9b0abd8_kindPair,28>({_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("const", 5), ._field_id=static_cast<jule::U32>(6LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("ret", 3), ._field_id=static_cast<jule::U32>(2LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("type", 4), ._field_id=static_cast<jule::U32>(7LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("for", 3), ._field_id=static_cast<jule::U32>(9LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("break", 5), ._field_id=static_cast<jule::U32>(10LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("continue", 8), ._field_id=static_cast<jule::U32>(11LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("in", 2), ._field_id=static_cast<jule::U32>(12LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("if", 2), ._field_id=static_cast<jule::U32>(13LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("else", 4), ._field_id=static_cast<jule::U32>(14LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("use", 3), ._field_id=static_cast<jule::U32>(16LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("goto", 4), ._field_id=static_cast<jule::U32>(18LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("enum", 4), ._field_id=static_cast<jule::U32>(20LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("struct", 6), ._field_id=static_cast<jule::U32>(21LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("co", 2), ._field_id=static_cast<jule::U32>(22LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("match", 5), ._field_id=static_cast<jule::U32>(23LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("self", 4), ._field_id=static_cast<jule::U32>(24LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("trait", 5), ._field_id=static_cast<jule::U32>(25LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("impl", 4), ._field_id=static_cast<jule::U32>(26LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("cpp", 3), ._field_id=static_cast<jule::U32>(27LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("fall", 4), ._field_id=static_cast<jule::U32>(28LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("fn", 2), ._field_id=static_cast<jule::U32>(29LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("let", 3), ._field_id=static_cast<jule::U32>(30LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("unsafe", 6), ._field_id=static_cast<jule::U32>(31LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("mut", 3), ._field_id=static_cast<jule::U32>(32LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("defer", 5), ._field_id=static_cast<jule::U32>(33LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("static", 6), ._field_id=static_cast<jule::U32>(34LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("error", 5), ._field_id=static_cast<jule::U32>(36LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("map", 3), ._field_id=static_cast<jule::U32>(37LLU)}});
jule::Array<_1b9b0abd8_kindPair,46> _1b9b0b458_basicOps = jule::Array<_1b9b0abd8_kindPair,46>({_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("::", 2), ._field_id=static_cast<jule::U32>(19LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit(":=", 2), ._field_id=static_cast<jule::U32>(38LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit(":", 1), ._field_id=static_cast<jule::U32>(8LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit(";", 1), ._field_id=static_cast<jule::U32>(3LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit(",", 1), ._field_id=static_cast<jule::U32>(5LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("...", 3), ._field_id=static_cast<jule::U32>(39LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit(".", 1), ._field_id=static_cast<jule::U32>(17LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("+=", 2), ._field_id=static_cast<jule::U32>(40LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("-=", 2), ._field_id=static_cast<jule::U32>(41LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("*=", 2), ._field_id=static_cast<jule::U32>(42LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("/=", 2), ._field_id=static_cast<jule::U32>(43LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("%=", 2), ._field_id=static_cast<jule::U32>(44LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("<<=", 3), ._field_id=static_cast<jule::U32>(45LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit(">>=", 3), ._field_id=static_cast<jule::U32>(46LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("^=", 2), ._field_id=static_cast<jule::U32>(47LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("&=", 2), ._field_id=static_cast<jule::U32>(48LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("|=", 2), ._field_id=static_cast<jule::U32>(49LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("==", 2), ._field_id=static_cast<jule::U32>(50LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("!=", 2), ._field_id=static_cast<jule::U32>(51LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit(">=", 2), ._field_id=static_cast<jule::U32>(52LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("<=", 2), ._field_id=static_cast<jule::U32>(53LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("&&", 2), ._field_id=static_cast<jule::U32>(54LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("||", 2), ._field_id=static_cast<jule::U32>(55LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("<<", 2), ._field_id=static_cast<jule::U32>(56LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit(">>", 2), ._field_id=static_cast<jule::U32>(57LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("++", 2), ._field_id=static_cast<jule::U32>(58LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("--", 2), ._field_id=static_cast<jule::U32>(59LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("+", 1), ._field_id=static_cast<jule::U32>(60LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("-", 1), ._field_id=static_cast<jule::U32>(61LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("*", 1), ._field_id=static_cast<jule::U32>(62LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("/", 1), ._field_id=static_cast<jule::U32>(63LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("%", 1), ._field_id=static_cast<jule::U32>(64LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("&", 1), ._field_id=static_cast<jule::U32>(65LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("|", 1), ._field_id=static_cast<jule::U32>(66LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("^", 1), ._field_id=static_cast<jule::U32>(67LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("!", 1), ._field_id=static_cast<jule::U32>(68LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("<", 1), ._field_id=static_cast<jule::U32>(69LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit(">", 1), ._field_id=static_cast<jule::U32>(70LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("=", 1), ._field_id=static_cast<jule::U32>(71LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("#", 1), ._field_id=static_cast<jule::U32>(35LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("{", 1), ._field_id=static_cast<jule::U32>(72LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("}", 1), ._field_id=static_cast<jule::U32>(73LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("[", 1), ._field_id=static_cast<jule::U32>(76LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("]", 1), ._field_id=static_cast<jule::U32>(77LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit("(", 1), ._field_id=static_cast<jule::U32>(74LLU)},_1b9b0abd8_kindPair{._field_kind=jule::Str::lit(")", 1), ._field_id=static_cast<jule::U32>(75LLU)}});
jule::Slice<jule::Str> _1b9b8700b_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str::lit("signed", 6),jule::Str::lit("unsigned", 8),jule::Str::lit("float", 5),jule::Str::lit("numeric", 7),jule::Str::lit("mutable", 7),jule::Str::lit("immutable", 9),jule::Str::lit("ordered", 7),jule::Str::lit("comparable", 10)});
jule::Ptr<_1b9c8d1cd_TypeKind> _1b9d790cc_primNil = jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=nullptr});
jule::Ptr<_1b9c8d1cd_TypeKind> _1b9d793da_primVoid = jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(_1b9caa0eb_buildPrimType(jule::Str::lit("void", 4)), 20)});
jule::Ptr<_1b9c8d1cd_TypeKind> _1b9d796a4_primAny = jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(_1b9caa0eb_buildPrimType(jule::Str::lit("any", 3)), 20)});
jule::Ptr<_1b9c8d1cd_TypeKind> _1b9d799b2_primStr = jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(_1b9caa0eb_buildPrimType(jule::Str::lit("str", 3)), 20)});
jule::Ptr<_1b9c8d1cd_TypeKind> _1b9d79c7b_primBool = jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(_1b9caa0eb_buildPrimType(jule::Str::lit("bool", 4)), 20)});
jule::Ptr<_1b9c8d1cd_TypeKind> _1b9d7a045_primUintptr = jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(_1b9caa0eb_buildPrimType(jule::Str::lit("uintptr", 7)), 20)});
jule::Ptr<_1b9c8d1cd_TypeKind> _1b9d7a30e_primUint = jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(_1b9caa0eb_buildPrimType(jule::Str::lit("uint", 4)), 20)});
jule::Ptr<_1b9c8d1cd_TypeKind> _1b9d7a6d8_primInt = jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(_1b9caa0eb_buildPrimType(jule::Str::lit("int", 3)), 20)});
jule::Ptr<_1b9c8d1cd_TypeKind> _1b9d7a9a2_primI8 = jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(_1b9caa0eb_buildPrimType(jule::Str::lit("i8", 2)), 20)});
jule::Ptr<_1b9c8d1cd_TypeKind> _1b9d7ac6b_primI16 = jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(_1b9caa0eb_buildPrimType(jule::Str::lit("i16", 3)), 20)});
jule::Ptr<_1b9c8d1cd_TypeKind> _1b9d7b035_primI32 = jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(_1b9caa0eb_buildPrimType(jule::Str::lit("i32", 3)), 20)});
jule::Ptr<_1b9c8d1cd_TypeKind> _1b9d7b2ee_primI64 = jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(_1b9caa0eb_buildPrimType(jule::Str::lit("i64", 3)), 20)});
jule::Ptr<_1b9c8d1cd_TypeKind> _1b9d7b5b8_primU8 = jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(_1b9caa0eb_buildPrimType(jule::Str::lit("u8", 2)), 20)});
jule::Ptr<_1b9c8d1cd_TypeKind> _1b9d7b882_primU16 = jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(_1b9caa0eb_buildPrimType(jule::Str::lit("u16", 3)), 20)});
jule::Ptr<_1b9c8d1cd_TypeKind> _1b9d7bb4b_primU32 = jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(_1b9caa0eb_buildPrimType(jule::Str::lit("u32", 3)), 20)});
jule::Ptr<_1b9c8d1cd_TypeKind> _1b9d7c0be_primU64 = jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(_1b9caa0eb_buildPrimType(jule::Str::lit("u64", 3)), 20)});
jule::Ptr<_1b9c8d1cd_TypeKind> _1b9d7c388_primF32 = jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(_1b9caa0eb_buildPrimType(jule::Str::lit("f32", 3)), 20)});
jule::Ptr<_1b9c8d1cd_TypeKind> _1b9d7c652_primF64 = jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(_1b9caa0eb_buildPrimType(jule::Str::lit("f64", 3)), 20)});
jule::Str _1ba83885a_stdPackageInternalNosafe = jule::Str::lit("std::internal::nosafe", 21);
jule::Map<jule::Uintptr,_1ba838c9a_stdCacheData> _1ba8391c9_stdCache = nullptr;
jule::Bool _1ba83a9a0_Copy = false;
jule::Bool _1ba83acad_Deadcode = false;
jule::Bool _1ba83b077_Append = false;
jule::Bool _1ba83b385_Math = false;
jule::Bool _1ba83b64e_Access = false;
jule::Bool _1ba83b918_Inline = false;
jule::Bool _1ba83bbd2_Ptr = false;
jule::Bool _1ba83c0ab_Cond = false;
jule::Bool _1ba83c375_Str = false;
jule::Bool _1ba83c63e_Slice = false;
jule::Bool _1ba83c908_Assign = false;
jule::Bool _1ba83cbc2_StdInternalNosafe = false;
jule::Bool _1c766c0aa_exprEnabled = false;
jule::Bool _1c766c330_scopeEnabled = false;
jule::Bool _1c766c5e9_stdEnabled = false;
jule::Array<jule::U64,12> _1c8034411_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _1c7e57e4a_assignArgName = jule::Str::lit("__jule_assign_arg", 17);
jule::Ptr<_23ceed94d_RangeTable> _23ce97908_Upper = _23ce8a203__LU;
jule::Ptr<_23ceed94d_RangeTable> _23ce913a2_Letter = _23ce89213__L;



std::ostream &operator<<(std::ostream &_Stream, _23ceece69_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _23ceed497_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _23ceed94d_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _23d10a8d4_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline _23d16295d_StrBuilder static__23d162c7c_New(jule::I32 _1519_cap) {
	if ((_1519_cap < 0LL)) {
		jule::panic(jule::Str::lit("std::strings: StrBuilder.New: cap < 0", 37) + jule::Str("\nlocation: std/internal/strings/builder.jule:17:13"));;
	};
	return _23d16295d_StrBuilder{._field_buf=jule::Slice<jule::U8>::alloc(0LL, _1519_cap, 0)};;
}



inline void _23d16b34b_Write(_23d16295d_StrBuilder* _self_, jule::Slice<jule::U8> _2524_b) {
	((*(_self_))._field_buf).append(_2524_b);;
}



inline void _23d16b604_WriteStr(_23d16295d_StrBuilder* _self_, jule::Str _3027_s) {
	((*(_self_))._field_buf).append(_23bca314e_Stobs(&(_3027_s)));;
}



inline void _23d16b8ac_WriteByte(_23d16295d_StrBuilder* _self_, jule::U8 _3528_b) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(_3528_b); };
}



inline jule::Str _23d16bdeb_Str(_23d16295d_StrBuilder* _self_) {
	return static_cast<jule::Str>((*(_self_))._field_buf);;
}



inline void _23d16c0e9_Clear(_23d16295d_StrBuilder* _self_) {
	(*(_self_))._field_buf=(*(_self_))._field_buf.slice(0LL, 0LL);
}



inline jule::I32 _23d16c380_Len(_23d16295d_StrBuilder* _self_) {
	return static_cast<jule::I32>((*(_self_))._field_buf.len());;
}



inline jule::Slice<jule::U8> _23d16c89c_Buf(_23d16295d_StrBuilder* _self_) {
	return (*(_self_))._field_buf;;
}



inline void _23d16cb55_SetBuf(_23d16295d_StrBuilder* _self_, jule::Slice<jule::U8> _7536_buf) {
	(*(_self_))._field_buf=_7536_buf;
}





std::ostream &operator<<(std::ostream &_Stream, _23d16295d_StrBuilder _Src) {
	_Stream << _23d16bdeb_Str(&_Src);
	return _Stream;
}



inline jule::U8 _23d16d936_index(_23d16d4d5_lazyBuff* _self_, jule::I32 _5524_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5524_i];;
	};
	return (*(_self_))._field_path[_5524_i];;
}



inline void _23d16dbde_append(_23d16d4d5_lazyBuff* _self_, jule::U8 _6225_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6225_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len(), 0);
		jule::copy(((*(_self_))._field_buff), ((*(_self_))._field_path.slice(0LL, (*(_self_))._field_w)));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6225_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _23d16de75_string(_23d16d4d5_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + static_cast<jule::Str>((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}





std::ostream &operator<<(std::ostream &_Stream, _23d16d4d5_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _23bc9be5b_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_23bc9be5b_DirEntry>>> static__23d172c8c_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_23bc9be5b_DirEntry>> __jule_func_result;
	DIR* _1613_dir = _23bc689a5_Opendir((&(_1520_path[0LL])));;
	if ((_1613_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_23bc9be5b_DirEntry>>>(jule::Any(_23bc9a4dc_getLastFsError(), &__jule_any_type0));
	};
	for (;;) {
		{
			struct dirent* _2113_dirent = _23bc68c6e_Readdir(_1613_dir);;
			if ((_2113_dirent == nullptr)) {
				goto _iter_end_1c7845272;
			};
			jule::Str _2513_name = _23bc580b0_BytePtrToStr(((jule::U8*)((*(_2113_dirent)).d_name)));;
			jule::Ptr<_23bcaa684_Status> _2617_stat = ({
				auto except = static__23bc9c940_Of(_23d16ec56_Join(jule::Slice<jule::Str>::make({_1520_path,_2513_name})));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_23bc9be5b_DirEntry>>>(except.error);
				} jule::Ptr<_23bcaa684_Status>(nullptr);});
			});;
			{ jule::Slice<jule::Ptr<_23bc9be5b_DirEntry>> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(jule::new_ptr<_23bc9be5b_DirEntry>(_23bc9be5b_DirEntry{._field_Name=_2513_name, ._field_Stat=_2617_stat})); };
		}
	_iter_next_1c7845272:;
	}
	_iter_end_1c7845272:;;
	_23bc69038_Closedir(_1613_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_23bc9be5b_DirEntry>>>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional static__23d172ebd_Create(jule::Str _3922_path) {
	if ((_23bc69940_Mkdir((&(_3922_path[0LL])), 448LL) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_23bc9a4dc_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional static__23d1731ee_Remove(jule::Str _5122_path) {
	if ((_23bc69c09_Rmdir((&(_5122_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_23bc9a4dc_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}





std::ostream &operator<<(std::ostream &_Stream, _23bc9c1c0_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_23bca7d8a_File>> static__23bc9ad7d_Open(jule::Str _1820_path, jule::I32 _1831_flag, jule::I32 _1844_mode) {
	jule::I32 _199_handle = _23bc68136_Open((&(_1820_path[0LL])), static_cast<jule::I32>(_1831_flag), _1844_mode);;
	if ((_199_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_23bca7d8a_File>>(jule::Any(_23bc9a4dc_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::Ptr<_23bca7d8a_File>>(jule::Any(), static__23bca82b9_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_199_handle))));;
}



inline jule::VoidExceptional static__23bc9b0ae_Remove(jule::Str _3022_path) {
	if ((_23bc69ec3_Unlink((&(_3022_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_23bc9a4dc_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I32> _23bc9b543_Write(_23bca7d8a_File* _self_, jule::Slice<jule::U8> _4424_buff) {
	jule::I32 __jule_func_result = 0;
	if ((_4424_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I32>(_23bc9553c_Write(static_cast<jule::I32>(static_cast<jule::I32>((*(_self_))._field_handle)), (&(_4424_buff[0LL])), static_cast<jule::U32>(static_cast<jule::U32>(_4424_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I32>(jule::Any(_23bc9a4dc_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
}



inline jule::Exceptional<jule::I32> _23bc9b884_Read(_23bca7d8a_File* _self_, jule::Slice<jule::U8> _6427_buff) {
	jule::I32 __jule_func_result = 0;
	if ((_6427_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I32>(_23bc94c67_Read(static_cast<jule::I32>(static_cast<jule::I32>((*(_self_))._field_handle)), (&(_6427_buff[0LL])), static_cast<jule::U32>(static_cast<jule::U32>(_6427_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I32>(jule::Any(_23bc9a4dc_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
}



inline jule::Ptr<_23bca7d8a_File> static__23bca82b9_New(jule::Uintptr _4619_handle) {
	return jule::new_ptr<_23bca7d8a_File>(_23bca7d8a_File{._field_handle=_4619_handle});;
}



inline jule::Exceptional<jule::Ptr<_23bca7d8a_File>> static__23bca8583_Create(jule::Str _5622_path) {
	return jule::Exceptional<jule::Ptr<_23bca7d8a_File>>(jule::Any(), ({
		auto except = static__23bc9ad7d_Open(_5622_path, static_cast<jule::I32>(578LL), 438LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Ptr<_23bca7d8a_File>>(except.error);
		} jule::Ptr<_23bca7d8a_File>(nullptr);});
	}));;
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__23bca884c_Read(jule::Str _6820_path) {
	jule::Ptr<_23bcaa684_Status> _699_s = ({
		auto except = static__23bc9c940_Of(_6820_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_23bcaa684_Status>(nullptr);});
	});;
	if ((!(_23bcaace4_IsReg(_699_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(static_cast<jule::I32>(14LL), &__jule_any_type0));
	};
	if ((_23bcab07a_Size(_699_s.ptr()) == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), jule::Slice<jule::U8>::alloc(0LL, 0LL, 0));;
	};
	jule::Ptr<_23bca7d8a_File> _7913_f = ({
		auto except = static__23bc9ad7d_Open(_6820_path, static_cast<jule::I32>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_23bca7d8a_File>(nullptr);});
	});;
	__JULE_DEFER({
		({
			auto except = _23bca9b28_Close(_7913_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:80:17"));
		});
	});;
	jule::Slice<jule::U8> _8213_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I32>(_23bcab07a_Size(_699_s.ptr())), static_cast<jule::I32>(_23bcab07a_Size(_699_s.ptr())), 0);;
	jule::I32 _839_n = ({
		auto except = _23bc9b884_Read(_7913_f.ptr(), _8213_buff);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} 0;});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), _8213_buff.slice(0LL, _839_n));;
}



inline jule::VoidExceptional static__23bca8be3_Write(jule::Str _9221_path, jule::Slice<jule::U8> _9232_data, jule::I32 _9246_perm) {
	jule::Ptr<_23bca7d8a_File> _9313_f = ({
		auto except = static__23bc9ad7d_Open(_9221_path, static_cast<jule::I32>(577LL), _9246_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional(except.error);
		} jule::Ptr<_23bca7d8a_File>(nullptr);});
	});;
	({
		auto except = _23bc9b543_Write(_9313_f.ptr(), _9232_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _23bca9b28_Close(_9313_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _23bca9b28_Close(_23bca7d8a_File* _self_) {
	if ((_23bc9510d_Close(static_cast<jule::I32>(static_cast<jule::I32>((*(_self_))._field_handle))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(_23bc9a4dc_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}





std::ostream &operator<<(std::ostream &_Stream, _23bca7d8a_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_23bcaa684_Status>> static__23bc9c940_Of(jule::Str _1118_path) {
	if ((_1118_path).empty()) {
		return jule::Exceptional<jule::Ptr<_23bcaa684_Status>>(jule::Any(static_cast<jule::I32>(4LL), &__jule_any_type0));
	};
	struct stat _1513_handle = (struct stat){};;
	jule::I32 _169_code = _23bc67c07_Stat((&(_1118_path[0LL])), (&(_1513_handle)));;
	if ((_169_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_23bcaa684_Status>>(jule::Any(_23bc9a4dc_getLastFsError(), &__jule_any_type0));
	};
	jule::Ptr<_23bcaa684_Status> _2013_stat = jule::new_ptr<_23bcaa684_Status>();;
	(*(_2013_stat))._field_size=_1513_handle.st_size;
	if (((_1513_handle.st_mode & 16384LLU) == 16384LLU)) {
		(*(_2013_stat))._field_mode|=static_cast<jule::I32>(1LL);
	} else if (((_1513_handle.st_mode & 32768LLU) == 32768LLU)) {
		(*(_2013_stat))._field_mode|=static_cast<jule::I32>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_23bcaa684_Status>>(jule::Any(), _2013_stat);;
}



inline jule::Bool _23bcaaa5d_IsDir(_23bcaa684_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL));;
}



inline jule::Bool _23bcaace4_IsReg(_23bcaa684_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I32>(2LL)) == static_cast<jule::I32>(2LL));;
}



inline jule::U32 _23bcab07a_Size(_23bcaa684_Status* _self_) {
	return (*(_self_))._field_size;;
}





std::ostream &operator<<(std::ostream &_Stream, _23bcaa684_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _23d31ea2c_cmdAttrs _Src) {
	_Stream << "cmdAttrs{";
	_Stream << "pid:" << _Src._field_pid;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _23d21115a_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ec65998a_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ec65a4e6_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ec66c75b_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ec664b4e_set(_1ec66d284_decimal* _self_, jule::Slice<jule::U8> _23822_s) {
	jule::Bool __jule_func_result = false;
	jule::I32 _23913_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_23913_i >= _23822_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23822_s[_23913_i] == '+')) {
			_case_begin_1c943cd35:;
			{
				(_23913_i)++;
			}
		}
		else if ((_23822_s[_23913_i] == '-')) {
			_case_begin_1c943d033:;
			{
				(*(_self_))._field_neg=true;
				(_23913_i)++;
			}
		}
		_match_end_1c943ce45:;
	};
	jule::Bool _25613_sawdot = false;;
	jule::Bool _25713_sawdigits = false;;
	for (; (_23913_i < _23822_s.len()); (_23913_i)++) {
		{
			{
				
				if ((_23822_s[_23913_i] == '_')) {
					_case_begin_1c943e6d8:;
					{
						goto _iter_next_1c943e045;
					}
				}
				else if ((_23822_s[_23913_i] == '.')) {
					_case_begin_1c943e760:;
					{
						if (_25613_sawdot) {
							return __jule_func_result;;
						};
						_25613_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1c943e045;
					}
				}
				else if ((('0' <= _23822_s[_23913_i]) && (_23822_s[_23913_i] <= '9'))) {
					_case_begin_1c943e7d7:;
					{
						_25713_sawdigits=true;
						if (((_23822_s[_23913_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1c943e045;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23822_s[_23913_i];
							((*(_self_))._field_nd)++;
						} else if ((_23822_s[_23913_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1c943e045;
					}
				}
				_match_end_1c943e5b7:;
			};
			goto _iter_end_1c943e045;
		}
	_iter_next_1c943e045:;
	}
	_iter_end_1c943e045:;;
	if ((!(_25713_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_25613_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_23913_i < _23822_s.len()) && (_1ec6600de_lower(_23822_s[_23913_i]) == 'e'))) {
		(_23913_i)++;
		if ((_23913_i >= _23822_s.len())) {
			return __jule_func_result;;
		};
		jule::I32 _30217_esign = 1LL;;
		if ((_23822_s[_23913_i] == '+')) {
			(_23913_i)++;
		} else if ((_23822_s[_23913_i] == '-')) {
			(_23913_i)++;
			_30217_esign=-1LL;
		};
		if ((((_23913_i >= _23822_s.len()) || (_23822_s[_23913_i] < '0')) || (_23822_s[_23913_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I32 _31217_e = 0LL;;
		for (; ((_23913_i < _23822_s.len()) && ((('0' <= _23822_s[_23913_i]) && (_23822_s[_23913_i] <= '9')) || (_23822_s[_23913_i] == '_'))); (_23913_i)++) {
			{
				if ((_23822_s[_23913_i] == '_')) {
					goto _iter_next_1c94451a0;
				};
				if ((_31217_e < 10000LL)) {
					_31217_e=static_cast<jule::I32>((((_31217_e * 10LL) + static_cast<jule::I32>(_23822_s[_23913_i])) - '0'));
				};
			}
		_iter_next_1c94451a0:;
		}
		_iter_end_1c94451a0:;;
		(*(_self_))._field_dp+=(_31217_e * _30217_esign);
	};
	if ((_23913_i != _23822_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1ec664e90_floatBits(_1ec66d284_decimal* _self_, _1ec65998a_floatInfo* _33229_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _33313_exp = 0LL;;
	jule::U64 _33413_mant = static_cast<jule::U64>(0LLU);;
	if (((*(_self_))._field_nd == 0LL)) {
		_33413_mant=0LLU;
		_33313_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_1c945405a;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_1c944acbb;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_33413_mant=0LLU;
		_33313_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_1c945405a;
	};
	_33313_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I32 _35917_n = 0LL;;
			if (((*(_self_))._field_dp >= _1ec66480d_powtab.len())) {
				_35917_n=27LL;
			} else {
				_35917_n=_1ec66480d_powtab[(*(_self_))._field_dp];
			};
			_1ec66d8e4_shift(_self_, static_cast<jule::I32>((-(_35917_n))));
			_33313_exp+=_35917_n;
		}
	_iter_next_1c944a804:;
	}
	_iter_end_1c944a804:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I32 _36917_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _1ec66480d_powtab.len())) {
				_36917_n=27LL;
			} else {
				_36917_n=_1ec66480d_powtab[(-((*(_self_))._field_dp))];
			};
			_1ec66d8e4_shift(_self_, _36917_n);
			_33313_exp-=_36917_n;
		}
	_iter_next_1c944bd33:;
	}
	_iter_end_1c944bd33:;;
	(_33313_exp)--;
	if ((_33313_exp < ((*(_33229_flt))._field_bias + 1LL))) {
		jule::I32 _38613_n = (((*(_33229_flt))._field_bias + 1LL) - _33313_exp);;
		_1ec66d8e4_shift(_self_, static_cast<jule::I32>((-(_38613_n))));
		_33313_exp+=_38613_n;
	};
	if (((_33313_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I32>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
		goto _julec_label_1c944acbb;
	};
	_1ec66d8e4_shift(_self_, static_cast<jule::I32>(static_cast<jule::I32>((1LL + (*(_33229_flt))._field_mantbits))));
	_33413_mant=static_cast<jule::U64>(_1ec66e494_roundedInteger(_self_));
	if ((_33413_mant == (2LLU << (*(_33229_flt))._field_mantbits))) {
		_33413_mant>>=1LLU;
		(_33313_exp)++;
		if (((_33313_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I32>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
			goto _julec_label_1c944acbb;
		};
	};
	if (((_33413_mant & (1LLU << (*(_33229_flt))._field_mantbits)) == 0LLU)) {
		_33313_exp=(*(_33229_flt))._field_bias;
	};
	goto _julec_label_1c945405a;
	_julec_label_1c944acbb:;
	_33413_mant=0LLU;
	_33313_exp=static_cast<jule::I32>(static_cast<jule::I32>((((static_cast<jule::U32>(1LLU) << (*(_33229_flt))._field_expbits) - 1LLU) + static_cast<jule::U32>((*(_33229_flt))._field_bias))));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_1c945405a:;
	jule::U64 _42213_bits = (_33413_mant & ((1LLU << (*(_33229_flt))._field_mantbits) - 1LLU));;
	_42213_bits|=(static_cast<jule::U64>(((_33313_exp - (*(_33229_flt))._field_bias) & static_cast<jule::I32>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) << (*(_33229_flt))._field_mantbits);
	if ((*(_self_))._field_neg) {
		_42213_bits|=((1LLU << (*(_33229_flt))._field_mantbits) << (*(_33229_flt))._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _42213_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1ec66d63b_assign(_1ec66d284_decimal* _self_, jule::U64 _15129_v) {
	jule::Array<jule::U8,24> _15217_buf = jule::Array<jule::U8,24>(0);;
	jule::I32 _15513_n = 0LL;;
	while ((_15129_v > 0LLU)) {
		{
			jule::U64 _15713_v1 = (_15129_v / 10LLU);;
			_15129_v-=(10LLU * _15713_v1);
			_15217_buf[_15513_n]=static_cast<jule::U8>(static_cast<jule::U8>((_15129_v + '0')));
			(_15513_n)++;
			_15129_v=_15713_v1;
		}
	_iter_next_1c94576e0:;
	}
	_iter_end_1c94576e0:;;
	(*(_self_))._field_nd=0LL;
	(_15513_n)--;
	for (; (_15513_n >= 0LL); (_15513_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15217_buf[_15513_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1c9457e82:;
	}
	_iter_end_1c9457e82:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_1ec66ead2_trim(_self_);
}



inline void _1ec66d8e4_shift(_1ec66d284_decimal* _self_, jule::I32 _17628_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1c9459e84:;
		}
		else if ((_17628_k > 0LL)) {
			_case_begin_1c945a00b:;
			{
				while ((_17628_k > 60LL)) {
					{
						_1ec67062c_leftShift(_self_, 60LLU);
						_17628_k-=60LL;
					}
				_iter_next_1c945ab55:;
				}
				_iter_end_1c945ab55:;;
				_1ec67062c_leftShift(_self_, static_cast<jule::U32>(static_cast<jule::U32>(_17628_k)));
			}
		}
		else if ((_17628_k < 0LL)) {
			_case_begin_1c945a083:;
			{
				while ((_17628_k < -60LL)) {
					{
						_1ec66edbd_rightShift(_self_, 60LLU);
						_17628_k+=60LL;
					}
				_iter_next_1c945aacd:;
				}
				_iter_end_1c945aacd:;;
				_1ec66edbd_rightShift(_self_, static_cast<jule::U32>(static_cast<jule::U32>((-(_17628_k)))));
			}
		}
		_match_end_1c9459d63:;
	};
}



inline void _1ec66db9c_roundDown(_1ec66d284_decimal* _self_, jule::I32 _19628_nd) {
	if (((_19628_nd < 0LL) || (_19628_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19628_nd;
	_1ec66ead2_trim(_self_);
}



inline void _1ec66de55_roundUp(_1ec66d284_decimal* _self_, jule::I32 _20526_nd) {
	if (((_20526_nd < 0LL) || (_20526_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I32 _21113_i = (_20526_nd - 1LL);;
	for (; (_21113_i >= 0LL); (_21113_i)--) {
		{
			jule::U8 _21313_c = (*(_self_))._field_d[_21113_i];;
			if ((_21313_c < '9')) {
				((*(_self_))._field_d[_21113_i])++;
				(*(_self_))._field_nd=static_cast<jule::I32>((_21113_i + 1LL));
				return;;
			};
		}
	_iter_next_1c945de66:;
	}
	_iter_end_1c945de66:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _1ec66e20d_round(_1ec66d284_decimal* _self_, jule::I32 _23224_nd) {
	if (((_23224_nd < 0LL) || (_23224_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_1ec6709a1_shouldRoundUp(_self_, _23224_nd)) {
		_1ec66de55_roundUp(_self_, _23224_nd);
	} else {
		_1ec66db9c_roundDown(_self_, _23224_nd);
	};
}



inline jule::U64 _1ec66e494_roundedInteger(_1ec66d284_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I32 _24913_i = 0LL;;
	jule::U64 _25013_n = static_cast<jule::U64>(0LLU);;
	for (; ((_24913_i < (*(_self_))._field_dp) && (_24913_i < (*(_self_))._field_nd)); (_24913_i)++) {
		{
			_25013_n=static_cast<jule::U64>(((_25013_n * 10LLU) + static_cast<jule::U64>(((*(_self_))._field_d[_24913_i] - '0'))));
		}
	_iter_next_1c9461c5a:;
	}
	_iter_end_1c9461c5a:;;
	for (; (_24913_i < (*(_self_))._field_dp); (_24913_i)++) {
		{
			_25013_n*=10LLU;
		}
	_iter_next_1c9462d16:;
	}
	_iter_end_1c9462d16:;;
	if (_1ec6709a1_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_25013_n)++;
	};
	return _25013_n;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ec66d284_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ec682ce3_Const> static__1ec683233_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_1ec682ce3_Const>(_1ec682ce3_Const{._field_data=jule::Any(_1622_x, &__jule_any_type1)});;
}



inline jule::Ptr<_1ec682ce3_Const> static__1ec6834ec_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_1ec682ce3_Const>(_1ec682ce3_Const{._field_data=jule::Any(_1922_x, &__jule_any_type2)});;
}



inline jule::Ptr<_1ec682ce3_Const> static__1ec6837b6_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_1ec682ce3_Const>(_1ec682ce3_Const{._field_data=jule::Any(_2223_x, &__jule_any_type3)});;
}



inline jule::Ptr<_1ec682ce3_Const> static__1ec683a80_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_1ec682ce3_Const>(_1ec682ce3_Const{._field_data=jule::Any(_2522_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1ec682ce3_Const> static__1ec683d49_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_1ec682ce3_Const>(_1ec682ce3_Const{._field_data=jule::Any(_2822_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1ec682ce3_Const> static__1ec684058_NewNil(void) {
	return jule::new_ptr<_1ec682ce3_Const>(_1ec682ce3_Const{._field_data=nullptr});;
}



inline jule::I64 _1ec6846b8_ReadI64(_1ec682ce3_Const* _self_) {
	if ((!(_1ec686cb4_IsI64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1));;
}



inline jule::U64 _1ec68494e_ReadU64(_1ec682ce3_Const* _self_) {
	if ((!(_1ec68704a_IsU64(_self_)))) {
		return 0LLU;;
	};
	return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2));;
}



inline jule::Bool _1ec684bd5_ReadBool(_1ec682ce3_Const* _self_) {
	if ((!(_1ec6872d1_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type3);;
}



inline jule::Str _1ec684e6b_ReadStr(_1ec682ce3_Const* _self_) {
	if ((!(_1ec687567_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type4);;
}



inline jule::F64 _1ec685202_ReadF64(_1ec682ce3_Const* _self_) {
	if ((!(_1ec6877ed_IsF64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5));;
}



inline jule::I64 _1ec685488_AsI64(_1ec682ce3_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1c94d3639:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1c94d42e9:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1c94d4360:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5)));;
			}
		}
		else {
			_case_begin_1c94d4283:;
			{
				return 0LL;;
			}
		}
		_match_end_1c94d422d:;
	};
}



inline jule::U64 _1ec68571e_AsU64(_1ec682ce3_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1c94d4c01:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2));;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1c94d5b14:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1c94d5b7a:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5)));;
			}
		}
		else {
			_case_begin_1c94d4a14:;
			{
				return 0LLU;;
			}
		}
		_match_end_1c94d49ae:;
	};
}



inline jule::F64 _1ec6859a5_AsF64(_1ec682ce3_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1c94d78d5:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5));;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1c94d6483:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1c94d7396:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2)));;
			}
		}
		else {
			_case_begin_1c94d6296:;
			{
				return 0LL;;
			}
		}
		_match_end_1c94d6241:;
	};
}



inline void _1ec685c5d_SetI64(_1ec682ce3_Const* _self_, jule::I64 _13825_x) {
	(*(_self_))._field_data=jule::Any(_13825_x, &__jule_any_type1);
}



inline void _1ec686016_SetU64(_1ec682ce3_Const* _self_, jule::U64 _14125_x) {
	(*(_self_))._field_data=jule::Any(_14125_x, &__jule_any_type2);
}



inline void _1ec6862be_SetBool(_1ec682ce3_Const* _self_, jule::Bool _14426_x) {
	(*(_self_))._field_data=jule::Any(_14426_x, &__jule_any_type3);
}



inline void _1ec686577_SetStr(_1ec682ce3_Const* _self_, jule::Str _14725_x) {
	(*(_self_))._field_data=jule::Any(_14725_x, &__jule_any_type4);
}



inline void _1ec686830_SetF64(_1ec682ce3_Const* _self_, jule::F64 _15025_x) {
	(*(_self_))._field_data=jule::Any(_15025_x, &__jule_any_type5);
}



inline jule::Bool _1ec686cb4_IsI64(_1ec682ce3_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1c94db125:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c94db3ab:;
			{
				return false;;
			}
		}
		_match_end_1c94db356:;
	};
}



inline jule::Bool _1ec68704a_IsU64(_1ec682ce3_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1c94dba1b:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c94dbc6e:;
			{
				return false;;
			}
		}
		_match_end_1c94dbc19:;
	};
}



inline jule::Bool _1ec6872d1_IsBool(_1ec682ce3_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1c94dc478:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c94dc6cb:;
			{
				return false;;
			}
		}
		_match_end_1c94dc676:;
	};
}



inline jule::Bool _1ec687567_IsStr(_1ec682ce3_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1c94dcdd5:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c94dd138:;
			{
				return false;;
			}
		}
		_match_end_1c94dd0d3:;
	};
}



inline jule::Bool _1ec6877ed_IsF64(_1ec682ce3_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1c94dd842:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c94dda95:;
			{
				return false;;
			}
		}
		_match_end_1c94dda40:;
	};
}



inline jule::Bool _1ec687a84_IsNil(_1ec682ce3_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _1ec688216_And(_1ec682ce3_Const* _self_, _1ec682ce3_Const _23818_x) {
	{
		
		if ((_1ec6872d1_IsBool(_self_) && _1ec6872d1_IsBool(&_23818_x))) {
			_case_begin_1c94e2d96:;
			{
				return (_1ec684bd5_ReadBool(_self_) && _1ec684bd5_ReadBool(&_23818_x));;
			}
		}
		else {
			_case_begin_1c94e2cdb:;
			{
				return false;;
			}
		}
		_match_end_1c94e2901:;
	};
}



inline jule::Bool _1ec688557_Or(_1ec682ce3_Const* _self_, _1ec682ce3_Const _24917_x) {
	{
		
		if ((_1ec6872d1_IsBool(_self_) && _1ec6872d1_IsBool(&_24917_x))) {
			_case_begin_1c94e41a5:;
			{
				return (_1ec684bd5_ReadBool(_self_) || _1ec684bd5_ReadBool(&_24917_x));;
			}
		}
		else {
			_case_begin_1c94e3847:;
			{
				return false;;
			}
		}
		_match_end_1c94e379d:;
	};
}



inline jule::Bool _1ec688898_Eq(_1ec682ce3_Const* _self_, _1ec682ce3_Const _26017_x) {
	{
		
		if (_1ec687a84_IsNil(_self_)) {
			_case_begin_1c94e54d6:;
			{
				return _1ec687a84_IsNil(&_26017_x);;
			}
		}
		else if (_1ec6872d1_IsBool(_self_)) {
			_case_begin_1c94e555d:;
			{
				return (_1ec6872d1_IsBool(&_26017_x) && (_1ec684bd5_ReadBool(_self_) == _1ec684bd5_ReadBool(&_26017_x)));;
			}
		}
		else if (_1ec687567_IsStr(_self_)) {
			_case_begin_1c94e57d3:;
			{
				return (_1ec687567_IsStr(&_26017_x) && (_1ec684e6b_ReadStr(_self_) == _1ec684e6b_ReadStr(&_26017_x)));;
			}
		}
		else if (_1ec686cb4_IsI64(_self_)) {
			_case_begin_1c94e5849:;
			{
				return (_1ec6846b8_ReadI64(_self_) == _1ec685488_AsI64(&_26017_x));;
			}
		}
		else if (_1ec68704a_IsU64(_self_)) {
			_case_begin_1c94e58b0:;
			{
				return (_1ec68494e_ReadU64(_self_) == _1ec68571e_AsU64(&_26017_x));;
			}
		}
		else if (_1ec6877ed_IsF64(_self_)) {
			_case_begin_1c94e5926:;
			{
				return (_1ec685202_ReadF64(_self_) == _1ec6859a5_AsF64(&_26017_x));;
			}
		}
		else {
			_case_begin_1c94e4b23:;
			{
				return false;;
			}
		}
		_match_end_1c94e4a79:;
	};
}



inline jule::Bool _1ec688bd9_Lt(_1ec682ce3_Const* _self_, _1ec682ce3_Const _28717_x) {
	{
		
		if (_1ec687567_IsStr(_self_)) {
			_case_begin_1c94e9199:;
			{
				return (_1ec687567_IsStr(&_28717_x) && (_1ec684e6b_ReadStr(_self_) < _1ec684e6b_ReadStr(&_28717_x)));;
			}
		}
		else if (_1ec686cb4_IsI64(_self_)) {
			_case_begin_1c94e9210:;
			{
				return (_1ec6846b8_ReadI64(_self_) < _1ec685488_AsI64(&_28717_x));;
			}
		}
		else if (_1ec68704a_IsU64(_self_)) {
			_case_begin_1c94e9287:;
			{
				return (_1ec68494e_ReadU64(_self_) < _1ec68571e_AsU64(&_28717_x));;
			}
		}
		else if (_1ec6877ed_IsF64(_self_)) {
			_case_begin_1c94e94b8:;
			{
				return (_1ec685202_ReadF64(_self_) < _1ec6859a5_AsF64(&_28717_x));;
			}
		}
		else {
			_case_begin_1c94e5dbb:;
			{
				return false;;
			}
		}
		_match_end_1c94e5d00:;
	};
}



inline jule::Bool _1ec68902a_LtEq(_1ec682ce3_Const* _self_, _1ec682ce3_Const _31019_x) {
	{
		
		if (_1ec687567_IsStr(_self_)) {
			_case_begin_1c94ebd5b:;
			{
				return (_1ec687567_IsStr(&_31019_x) && (_1ec684e6b_ReadStr(_self_) <= _1ec684e6b_ReadStr(&_31019_x)));;
			}
		}
		else if (_1ec686cb4_IsI64(_self_)) {
			_case_begin_1c94ebdc2:;
			{
				return (_1ec6846b8_ReadI64(_self_) <= _1ec685488_AsI64(&_31019_x));;
			}
		}
		else if (_1ec68704a_IsU64(_self_)) {
			_case_begin_1c94ebe49:;
			{
				return (_1ec68494e_ReadU64(_self_) <= _1ec68571e_AsU64(&_31019_x));;
			}
		}
		else if (_1ec6877ed_IsF64(_self_)) {
			_case_begin_1c94ec17a:;
			{
				return (_1ec685202_ReadF64(_self_) <= _1ec6859a5_AsF64(&_31019_x));;
			}
		}
		else {
			_case_begin_1c94e9a07:;
			{
				return false;;
			}
		}
		_match_end_1c94e993b:;
	};
}



inline jule::Bool _1ec68936b_Gt(_1ec682ce3_Const* _self_, _1ec682ce3_Const _33317_x) {
	{
		
		if (_1ec687567_IsStr(_self_)) {
			_case_begin_1c94eea1d:;
			{
				return (_1ec687567_IsStr(&_33317_x) && (_1ec684e6b_ReadStr(_self_) > _1ec684e6b_ReadStr(&_33317_x)));;
			}
		}
		else if (_1ec686cb4_IsI64(_self_)) {
			_case_begin_1c94eea84:;
			{
				return (_1ec6846b8_ReadI64(_self_) > _1ec685488_AsI64(&_33317_x));;
			}
		}
		else if (_1ec68704a_IsU64(_self_)) {
			_case_begin_1c94eeb0b:;
			{
				return (_1ec68494e_ReadU64(_self_) > _1ec68571e_AsU64(&_33317_x));;
			}
		}
		else if (_1ec6877ed_IsF64(_self_)) {
			_case_begin_1c94eed3c:;
			{
				return (_1ec685202_ReadF64(_self_) > _1ec6859a5_AsF64(&_33317_x));;
			}
		}
		else {
			_case_begin_1c94ec6b9:;
			{
				return false;;
			}
		}
		_match_end_1c94ec5ed:;
	};
}



inline jule::Bool _1ec6896ac_GtEq(_1ec682ce3_Const* _self_, _1ec682ce3_Const _35619_x) {
	{
		
		if (_1ec687567_IsStr(_self_)) {
			_case_begin_1c95026d0:;
			{
				return (_1ec687567_IsStr(&_35619_x) && (_1ec684e6b_ReadStr(_self_) >= _1ec684e6b_ReadStr(&_35619_x)));;
			}
		}
		else if (_1ec686cb4_IsI64(_self_)) {
			_case_begin_1c9502746:;
			{
				return (_1ec6846b8_ReadI64(_self_) >= _1ec685488_AsI64(&_35619_x));;
			}
		}
		else if (_1ec68704a_IsU64(_self_)) {
			_case_begin_1c95027bd:;
			{
				return (_1ec68494e_ReadU64(_self_) >= _1ec68571e_AsU64(&_35619_x));;
			}
		}
		else if (_1ec6877ed_IsF64(_self_)) {
			_case_begin_1c95029ee:;
			{
				return (_1ec685202_ReadF64(_self_) >= _1ec6859a5_AsF64(&_35619_x));;
			}
		}
		else {
			_case_begin_1c950037b:;
			{
				return false;;
			}
		}
		_match_end_1c95002b0:;
	};
}



inline jule::Bool _1ec6899ed_Add(_1ec682ce3_Const* _self_, _1ec682ce3_Const _37722_x) {
	{
		
		if (_1ec687567_IsStr(_self_)) {
			_case_begin_1c9505392:;
			{
				if ((!(_1ec687567_IsStr(&_37722_x)))) {
					return false;;
				};
				_1ec686577_SetStr(_self_, (_1ec684e6b_ReadStr(_self_) + _1ec684e6b_ReadStr(&_37722_x)));
			}
		}
		else if (_1ec6877ed_IsF64(_self_)) {
			_case_begin_1c9505408:;
			{
				_1ec686830_SetF64(_self_, static_cast<jule::F64>((_1ec685202_ReadF64(_self_) + _1ec6859a5_AsF64(&_37722_x))));
			}
		}
		else if (_1ec686cb4_IsI64(_self_)) {
			_case_begin_1c9505480:;
			{
				if (_1ec6877ed_IsF64(&_37722_x)) {
					_1ec686830_SetF64(_self_, static_cast<jule::F64>((_1ec6859a5_AsF64(_self_) + _1ec685202_ReadF64(&_37722_x))));
				} else {
					_1ec685c5d_SetI64(_self_, static_cast<jule::I64>((_1ec6846b8_ReadI64(_self_) + _1ec685488_AsI64(&_37722_x))));
				};
			}
		}
		else if (_1ec68704a_IsU64(_self_)) {
			_case_begin_1c95056b1:;
			{
				if (_1ec6877ed_IsF64(&_37722_x)) {
					_1ec686830_SetF64(_self_, static_cast<jule::F64>((_1ec6859a5_AsF64(_self_) + _1ec685202_ReadF64(&_37722_x))));
				} else {
					_1ec686016_SetU64(_self_, static_cast<jule::U64>((_1ec68494e_ReadU64(_self_) + _1ec68571e_AsU64(&_37722_x))));
				};
			}
		}
		else {
			_case_begin_1c950303d:;
			{
				return false;;
			}
		}
		_match_end_1c9502e72:;
	};
	return true;;
}



inline jule::Bool _1ec689d3e_Sub(_1ec682ce3_Const* _self_, _1ec682ce3_Const _40622_x) {
	{
		
		if (_1ec6877ed_IsF64(_self_)) {
			_case_begin_1c950a2ba:;
			{
				_1ec686830_SetF64(_self_, static_cast<jule::F64>((_1ec685202_ReadF64(_self_) - _1ec6859a5_AsF64(&_40622_x))));
			}
		}
		else if (_1ec686cb4_IsI64(_self_)) {
			_case_begin_1c950a342:;
			{
				if (_1ec6877ed_IsF64(&_40622_x)) {
					_1ec686830_SetF64(_self_, static_cast<jule::F64>((_1ec6859a5_AsF64(_self_) - _1ec685202_ReadF64(&_40622_x))));
				} else {
					_1ec685c5d_SetI64(_self_, static_cast<jule::I64>((_1ec6846b8_ReadI64(_self_) - _1ec685488_AsI64(&_40622_x))));
				};
			}
		}
		else if (_1ec68704a_IsU64(_self_)) {
			_case_begin_1c950a3b9:;
			{
				if (_1ec6877ed_IsF64(&_40622_x)) {
					_1ec686830_SetF64(_self_, static_cast<jule::F64>((_1ec6859a5_AsF64(_self_) - _1ec685202_ReadF64(&_40622_x))));
				} else {
					_1ec686016_SetU64(_self_, static_cast<jule::U64>((_1ec68494e_ReadU64(_self_) - _1ec68571e_AsU64(&_40622_x))));
				};
			}
		}
		else {
			_case_begin_1c9509a8e:;
			{
				return false;;
			}
		}
		_match_end_1c95099c3:;
	};
	return true;;
}



inline jule::Bool _1ec68a180_Mul(_1ec682ce3_Const* _self_, _1ec682ce3_Const _43022_x) {
	{
		
		if (_1ec6877ed_IsF64(_self_)) {
			_case_begin_1c950e368:;
			{
				_1ec686830_SetF64(_self_, static_cast<jule::F64>((_1ec685202_ReadF64(_self_) * _1ec6859a5_AsF64(&_43022_x))));
			}
		}
		else if (_1ec686cb4_IsI64(_self_)) {
			_case_begin_1c950e3e0:;
			{
				if (_1ec6877ed_IsF64(&_43022_x)) {
					_1ec686830_SetF64(_self_, static_cast<jule::F64>((_1ec6859a5_AsF64(_self_) * _1ec685202_ReadF64(&_43022_x))));
				} else {
					_1ec685c5d_SetI64(_self_, static_cast<jule::I64>((_1ec6846b8_ReadI64(_self_) * _1ec685488_AsI64(&_43022_x))));
				};
			}
		}
		else if (_1ec68704a_IsU64(_self_)) {
			_case_begin_1c950e467:;
			{
				if (_1ec6877ed_IsF64(&_43022_x)) {
					_1ec686830_SetF64(_self_, static_cast<jule::F64>((_1ec6859a5_AsF64(_self_) * _1ec685202_ReadF64(&_43022_x))));
				} else {
					_1ec686016_SetU64(_self_, static_cast<jule::U64>((_1ec68494e_ReadU64(_self_) * _1ec68571e_AsU64(&_43022_x))));
				};
			}
		}
		else {
			_case_begin_1c950d9e9:;
			{
				return false;;
			}
		}
		_match_end_1c950d92d:;
	};
	return true;;
}



inline jule::Bool _1ec68a4c1_Div(_1ec682ce3_Const* _self_, _1ec682ce3_Const _45822_x) {
	{
		
		if (_1ec6877ed_IsF64(_self_)) {
			_case_begin_1c9513416:;
			{
				jule::F64 _46113_l = _1ec6859a5_AsF64(&_45822_x);;
				if ((_46113_l == 0LL)) {
					return false;;
				};
				_1ec686830_SetF64(_self_, static_cast<jule::F64>(jule::div(_1ec685202_ReadF64(_self_),_46113_l)));
			}
		}
		else if (_1ec686cb4_IsI64(_self_)) {
			_case_begin_1c951348d:;
			{
				jule::F64 _46713_l = _1ec6859a5_AsF64(&_45822_x);;
				if ((_46713_l == 0LL)) {
					return false;;
				};
				_1ec686830_SetF64(_self_, static_cast<jule::F64>(jule::div(_1ec6859a5_AsF64(_self_),_46713_l)));
			}
		}
		else if (_1ec68704a_IsU64(_self_)) {
			_case_begin_1c9513515:;
			{
				jule::F64 _47313_l = _1ec6859a5_AsF64(&_45822_x);;
				if ((_47313_l == 0LL)) {
					return false;;
				};
				_1ec686830_SetF64(_self_, static_cast<jule::F64>(jule::div(_1ec6859a5_AsF64(_self_),_47313_l)));
			}
		}
		else {
			_case_begin_1c9512a97:;
			{
				return false;;
			}
		}
		_match_end_1c95129cb:;
	};
	return true;;
}



inline jule::Bool _1ec68a812_Mod(_1ec682ce3_Const* _self_, _1ec682ce3_Const _48722_x) {
	{
		
		if (_1ec686cb4_IsI64(_self_)) {
			_case_begin_1c9517173:;
			{
				jule::I64 _49013_l = _1ec685488_AsI64(&_48722_x);;
				if ((_49013_l == 0LL)) {
					return false;;
				};
				_1ec685c5d_SetI64(_self_, static_cast<jule::I64>(jule::mod(_1ec6846b8_ReadI64(_self_),_49013_l)));
			}
		}
		else if (_1ec68704a_IsU64(_self_)) {
			_case_begin_1c95171ea:;
			{
				jule::U64 _49613_l = _1ec68571e_AsU64(&_48722_x);;
				if ((_49613_l == 0LLU)) {
					return false;;
				};
				_1ec686016_SetU64(_self_, static_cast<jule::U64>(jule::mod(_1ec68494e_ReadU64(_self_),_49613_l)));
			}
		}
		else {
			_case_begin_1c95170b8:;
			{
				return false;;
			}
		}
		_match_end_1c951701e:;
	};
	return true;;
}



inline jule::Bool _1ec68ab53_BitwiseAnd(_1ec682ce3_Const* _self_, _1ec682ce3_Const _50929_x) {
	{
		
		if (_1ec686cb4_IsI64(_self_)) {
			_case_begin_1c9519c9c:;
			{
				_1ec685c5d_SetI64(_self_, static_cast<jule::I64>((_1ec6846b8_ReadI64(_self_) & _1ec685488_AsI64(&_50929_x))));
			}
		}
		else if (_1ec68704a_IsU64(_self_)) {
			_case_begin_1c9519d24:;
			{
				_1ec686016_SetU64(_self_, static_cast<jule::U64>((_1ec68494e_ReadU64(_self_) & _1ec68571e_AsU64(&_50929_x))));
			}
		}
		else {
			_case_begin_1c9519be2:;
			{
				return false;;
			}
		}
		_match_end_1c9519b48:;
	};
	return true;;
}



inline jule::Bool _1ec68ae94_BitwiseOr(_1ec682ce3_Const* _self_, _1ec682ce3_Const _52328_x) {
	{
		
		if (_1ec686cb4_IsI64(_self_)) {
			_case_begin_1c951bb28:;
			{
				_1ec685c5d_SetI64(_self_, static_cast<jule::I64>((_1ec6846b8_ReadI64(_self_) | _1ec685488_AsI64(&_52328_x))));
			}
		}
		else if (_1ec68704a_IsU64(_self_)) {
			_case_begin_1c951bba0:;
			{
				_1ec686016_SetU64(_self_, static_cast<jule::U64>((_1ec68494e_ReadU64(_self_) | _1ec68571e_AsU64(&_52328_x))));
			}
		}
		else {
			_case_begin_1c951ba5c:;
			{
				return false;;
			}
		}
		_match_end_1c951b991:;
	};
	return true;;
}



inline jule::Bool _1ec68b2d5_Xor(_1ec682ce3_Const* _self_, _1ec682ce3_Const _53722_x) {
	{
		
		if (_1ec686cb4_IsI64(_self_)) {
			_case_begin_1c951d9a4:;
			{
				_1ec685c5d_SetI64(_self_, static_cast<jule::I64>((_1ec6846b8_ReadI64(_self_) ^ _1ec685488_AsI64(&_53722_x))));
			}
		}
		else if (_1ec68704a_IsU64(_self_)) {
			_case_begin_1c951da2b:;
			{
				_1ec686016_SetU64(_self_, static_cast<jule::U64>((_1ec68494e_ReadU64(_self_) ^ _1ec68571e_AsU64(&_53722_x))));
			}
		}
		else {
			_case_begin_1c951d8d8:;
			{
				return false;;
			}
		}
		_match_end_1c951d81c:;
	};
	return true;;
}



inline jule::Bool _1ec68b626_Lshift(_1ec682ce3_Const* _self_, _1ec682ce3_Const _55125_x) {
	{
		
		if (_1ec686cb4_IsI64(_self_)) {
			_case_begin_1c9520830:;
			{
				jule::I64 _55413_l = _1ec685488_AsI64(_self_);;
				if ((_55413_l < 0LL)) {
					jule::U64 _55617_r = _1ec68571e_AsU64(&_55125_x);;
					_1ec685c5d_SetI64(_self_, static_cast<jule::I64>((_55413_l << _55617_r)));
				} else {
					_1ec68bd0d_lshiftUnsig(_self_, &(_55125_x));
				};
			}
		}
		else if (_1ec68704a_IsU64(_self_)) {
			_case_begin_1c95208a7:;
			{
				_1ec68bd0d_lshiftUnsig(_self_, &(_55125_x));
			}
		}
		else {
			_case_begin_1c9520764:;
			{
				return false;;
			}
		}
		_match_end_1c9520698:;
	};
	return true;;
}



inline jule::Bool _1ec68b967_Rshift(_1ec682ce3_Const* _self_, _1ec682ce3_Const _57125_x) {
	{
		
		if (_1ec686cb4_IsI64(_self_)) {
			_case_begin_1c9522b0c:;
			{
				jule::I64 _57413_l = _1ec685488_AsI64(_self_);;
				if ((_57413_l < 0LL)) {
					jule::U64 _57617_r = _1ec68571e_AsU64(&_57125_x);;
					_1ec685c5d_SetI64(_self_, static_cast<jule::I64>((_57413_l >> _57617_r)));
				} else {
					_1ec68c13d_rshiftUnsig(_self_, &(_57125_x));
				};
			}
		}
		else if (_1ec68704a_IsU64(_self_)) {
			_case_begin_1c9522b84:;
			{
				_1ec68c13d_rshiftUnsig(_self_, &(_57125_x));
			}
		}
		else {
			_case_begin_1c9522a41:;
			{
				return false;;
			}
		}
		_match_end_1c9522997:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ec682ce3_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1b9b03670_Prec(_1b9b032eb_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(64LLU) || _match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(57LLU) || _match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1c9581b5a:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(66LLU) || _match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1c9581ce2:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(71LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(53LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1c9581d58:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1c9581dd0:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1c9581e57:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1c95814d9:;
			{
				return 0LLU;;
			}
		}
		_match_end_1c9581440:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b032eb_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline void _1b9b08ea0_Fill(_1b9b08ab5_File* _self_, jule::Slice<jule::U8> _1727_data) {
	(*(_self_))._field_Data=_1727_data;
}



inline jule::Str _1b9b09236_Dir(_1b9b08ab5_File* _self_) {
	return _23d170949_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1b9b094bc_Name(_1b9b08ab5_File* _self_) {
	return _23d1705a3_Base((*(_self_))._field_Path);;
}



inline jule::Str _1b9b09a94_GetRow(_1b9b08ab5_File* _self_, jule::I32 _3821_row) {
	jule::I32 _3913_n = 0LL;;
	jule::I32 _4013_lineStart = 0LL;;
	jule::I32 _4113_i = 0LL;;
	for (; (_4113_i < (*(_self_))._field_Data.len()); (_4113_i)++) {
		{
			if (((*(_self_))._field_Data[_4113_i] != '\n')) {
				goto _iter_next_1c9586e5c;
			};
			(_3913_n)++;
			if ((_3913_n == _3821_row)) {
				return static_cast<jule::Str>((*(_self_))._field_Data.slice(_4013_lineStart, _4113_i));;
			};
			_4013_lineStart=static_cast<jule::I32>((_4113_i + 1LL));
		}
	_iter_next_1c9586e5c:;
	}
	_iter_end_1c9586e5c:;;
	return jule::Str();;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b08ab5_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b0abd8_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1b9b12382_pushErr(_1b9b11cee_lex* _self_, jule::Str _44726_fmt, jule::Slice<jule::Any> _44739_args) {
	{ jule::Slice<_23d21115a_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1b9b0b9a8_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44726_fmt, _44739_args)); };
}



inline void _1b9b128e3_lex(_1b9b11cee_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1b9b14b15_newLine(_self_);
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::Ptr<_1b9b032eb_Token> _46217_token = _1b9b16100_token(_self_);;
			if (((*(_46217_token))._field_Id != static_cast<jule::U32>(0LLU))) {
				{ jule::Slice<jule::Ptr<_1b9b032eb_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_46217_token); };
			};
		}
	_iter_next_1c95b40ee:;
	}
	_iter_end_1c95b40ee:;;
}



inline jule::Str _1b9b12c34_id(_1b9b11cee_lex* _self_, jule::Slice<jule::U8>* _47122_ln) {
	if (((*(_47122_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _4759_r = 0;;
	jule::I32 _47516_i = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _23d10b4ea_DecodeRune((*(_47122_ln)));
		_4759_r = __jule_assign_result.__jule_result_arg0;
		_47516_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_4759_r != '_') && (!(_1b9b06a2a_IsLetter(_4759_r))))) {
		return jule::Str();;
	};
	while ((_47516_i < (*(_47122_ln)).len())) {
		{
			jule::I32 _48113_pr = 0;;
			jule::I32 _48117_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _23d10b4ea_DecodeRune((*(_47122_ln)).slice(_47516_i));
				_48113_pr = __jule_assign_result.__jule_result_arg0;
				_48117_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_48113_pr != '_') && (!(_1b9b070ad_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_48113_pr)))))) && (!(_1b9b06a2a_IsLetter(_48113_pr))))) {
				(*(_self_))._field_pos+=_47516_i;
				return static_cast<jule::Str>((*(_47122_ln)).slice(0LL, _47516_i));;
			};
			_47516_i+=_48117_n;
		}
	_iter_next_1c95b77a6:;
	}
	_iter_end_1c95b77a6:;;
	(*(_self_))._field_pos+=(*(_47122_ln)).len();
	return static_cast<jule::Str>((*(_47122_ln)));;
}



inline jule::Slice<jule::U8> _1b9b12eba_resume(_1b9b11cee_lex* _self_) {
	jule::I32 _49613_i = (*(_self_))._field_pos;;
	for (; (_49613_i < (*((*(_self_))._field_file))._field_Data.len()); (_49613_i)++) {
		{
			jule::I32 _49813_r = static_cast<jule::I32>((*((*(_self_))._field_file))._field_Data[_49613_i]);;
			if (_1b9b065a7_IsSpace(_49813_r)) {
				;
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _49813_r };
					
					if (_match_expr == '\n') {
						_case_begin_1c95bb601:;
						{
							_1b9b14b15_newLine(_self_);
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1c95bb667:;
						{
							(*(_self_))._field_column+=8LL;
						}
					}
					else {
						_case_begin_1c95baec4:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1c95bb05c:;
				};
				goto _iter_next_1c95b8631;
			};
			jule::I32 _51317_j = _49613_i;;
			for (; (_51317_j < (*((*(_self_))._field_file))._field_Data.len()); (_51317_j)++) {
				{
					if (((*((*(_self_))._field_file))._field_Data[_51317_j] == '\n')) {
						goto _iter_end_1c95ba666;
					};
				}
			_iter_next_1c95ba666:;
			}
			_iter_end_1c95ba666:;;
			return (*((*(_self_))._field_file))._field_Data.slice(_49613_i, _51317_j);;
		}
	_iter_next_1c95b8631:;
	}
	_iter_end_1c95b8631:;;
	return nullptr;;
}



inline void _1b9b13273_lexLineComment(_1b9b11cee_lex* _self_, jule::Ptr<_1b9b032eb_Token>* _52438_token) {
	jule::I32 _5259_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _52813_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if (((_52813_r == '\n') || (_52813_r == '\r'))) {
				goto _iter_end_1c95bdd84;
			};
		}
	_iter_next_1c95bdd84:;
	}
	_iter_end_1c95bdd84:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL))) {
		(*((*(_52438_token))))._field_Id=static_cast<jule::U32>(15LLU);
		(*((*(_52438_token))))._field_Kind=static_cast<jule::Str>((*((*(_self_))._field_file))._field_Data.slice(_5259_start, (*(_self_))._field_pos));
	};
}



inline void _1b9b1352b_lexRangeComment(_1b9b11cee_lex* _self_, jule::Ptr<_1b9b032eb_Token>* _53939_token) {
	jule::I32 _5409_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _54313_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_54313_r == '\r')) {
				goto _iter_next_1c95c20c9;
			};
			if ((_54313_r == '\n')) {
				_1b9b14b15_newLine(_self_);
				goto _iter_next_1c95c20c9;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*((*(_self_))._field_file))._field_Data.len()) && (_54313_r == '*')) && ((*((*(_self_))._field_file))._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL))) {
					(*((*(_53939_token))))._field_Id=static_cast<jule::U32>(15LLU);
					(*((*(_53939_token))))._field_Kind=static_cast<jule::Str>((*((*(_self_))._field_file))._field_Data.slice(_5409_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1c95c20c9:;
	}
	_iter_end_1c95c20c9:;;
	_1b9b12382_pushErr(_self_, jule::Str::lit("missing block comment close", 27), jule::Slice<jule::Any>());
}



inline jule::Str _1b9b1386c_num(_1b9b11cee_lex* _self_, jule::Slice<jule::U8>* _56723_txt) {
	jule::Str __jule_func_result;
	if (((*(_56723_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1b9b105e4_hexNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1c95c971e;
	};
	__jule_func_result=_1b9b1032a_octalNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1c95c971e;
	};
	__jule_func_result=_1b9b0db42_binaryNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1c95c971e;
	};
	__jule_func_result=_1b9b0d878_commonNum(_56723_txt);
	_julec_label_1c95c971e:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1b9b13bad_escapeSeq(_1b9b11cee_lex* _self_, jule::Slice<jule::U8>* _58929_txt) {
	jule::Str _59013_seq = jule::Str();;
	if (((*(_58929_txt)).len() < 2LL)) {
		goto _julec_label_1c95cc623;
	};
	{
		auto &_match_expr{ (*(_58929_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1c95cb578:;
			{
				(*(_self_))._field_pos+=2LL;
				return static_cast<jule::Str>((*(_58929_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1c95cb5de:;
			{
				_59013_seq=_1b9b10c32_bigUnicodePointEscape(_58929_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1c95cb666:;
			{
				_59013_seq=_1b9b10eeb_littleUnicodePointEscape(_58929_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1c95cb2c0:;
			{
				_59013_seq=_1b9b112b5_hexByteEscape(_58929_txt);
			}
		}
		else {
			_case_begin_1c95cab4e:;
			{
				_59013_seq=_1b9b1157e_byteEscape(_58929_txt);
			}
		}
		_match_end_1c95cb1b0:;
	};
	_julec_label_1c95cc623:;
	if ((_59013_seq).empty()) {
		((*(_self_))._field_pos)++;
		_1b9b12382_pushErr(_self_, jule::Str::lit("invalid escape sequence", 23), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_59013_seq.len();
	return _59013_seq;;
}



inline jule::Str _1b9b140a9_getRune(_1b9b11cee_lex* _self_, jule::Slice<jule::U8>* _61927_txt, jule::Bool _61940_raw) {
	if (((!(_61940_raw)) && ((*(_61927_txt))[0LL] == '\\'))) {
		return _1b9b13bad_escapeSeq(_self_, _61927_txt);;
	};
	jule::I32 _6239_r = 0;;
	jule::I32 _62312_n = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _23d10b4ea_DecodeRune((*(_61927_txt)));
		_6239_r = __jule_assign_result.__jule_result_arg0;
		_62312_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_62312_n;
	return jule::Str::from_rune(_6239_r);;
}



inline jule::Str _1b9b143ea_lexRune(_1b9b11cee_lex* _self_, jule::Slice<jule::U8>* _62827_txt) {
	_23d16295d_StrBuilder _62913_run = static__23d162c7c_New(8LL);;
	_23d16b8ac_WriteByte(&_62913_run, '\'');
	((*(_self_))._field_column)++;
	jule::I32 _63213_n = 0LL;;
	jule::I32 _63313_i = 1LL;;
	for (; (_63313_i < (*(_62827_txt)).len()); (_63313_i)++) {
		{
			if (((*(_62827_txt))[_63313_i] == '\r')) {
				goto _iter_next_1c813a56c;
			};
			if (((*(_62827_txt))[_63313_i] == '\n')) {
				_1b9b12382_pushErr(_self_, jule::Str::lit("rune is not finished", 20), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1b9b14b15_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _64513_part = (*(_62827_txt)).slice(_63313_i);;
			jule::Str _64613_r = _1b9b140a9_getRune(_self_, &(_64513_part), false);;
			_23d16b604_WriteStr(&_62913_run, _64613_r);
			(*(_self_))._field_column+=_23d10d365_RuneCountStr(_64613_r);
			if (_64613_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1c813a56c;
			};
			if ((_64613_r.len() > 1LL)) {
				_63313_i+=(_64613_r.len() - 1LL);
			};
			(_63213_n)++;
		}
	_iter_next_1c813a56c:;
	}
	_iter_end_1c813a56c:;;
	if ((_63213_n == 0LL)) {
		_1b9b12382_pushErr(_self_, jule::Str::lit("rune is cannot empty", 20), jule::Slice<jule::Any>());
	} else if ((_63213_n > 1LL)) {
		_1b9b12382_pushErr(_self_, jule::Str::lit("rune is should be single", 24), jule::Slice<jule::Any>());
	};
	return _23d16bdeb_Str(&_62913_run);;
}



inline jule::Str _1b9b14681_lexStr(_1b9b11cee_lex* _self_) {
	_23d16295d_StrBuilder _66913_s = static__23d162c7c_New(16LL);;
	jule::U8 _6709_mark = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _6729_raw = (_6709_mark == '`');;
	_23d16b8ac_WriteByte(&_66913_s, _6709_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::U8 _67713_ch = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_67713_ch == '\r')) {
				goto _iter_next_1c81400dd;
			};
			if ((_67713_ch == '\n')) {
				_1b9b14b15_newLine(_self_);
				if ((!(_6729_raw))) {
					_1b9b12382_pushErr(_self_, jule::Str::lit("string is not finished", 22), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _68917_part = (*((*(_self_))._field_file))._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _69013_r = _1b9b140a9_getRune(_self_, &(_68917_part), _6729_raw);;
			_23d16b604_WriteStr(&_66913_s, _69013_r);
			(*(_self_))._field_column+=_23d10d365_RuneCountStr(_69013_r);
			if ((_67713_ch == _6709_mark)) {
				goto _iter_end_1c81400dd;
			};
		}
	_iter_next_1c81400dd:;
	}
	_iter_end_1c81400dd:;;
	return _23d16bdeb_Str(&_66913_s);;
}



inline void _1b9b14b15_newLine(_1b9b11cee_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1b9b15176_isOp(_1b9b11cee_lex* _self_, jule::Slice<jule::U8>* _71024_txt, jule::Str _71037_kind, jule::U32 _71048_id, jule::Ptr<_1b9b032eb_Token>* _71066_t) {
	if ((!(_1b9b0bd71_bytesHasPrefix(_71024_txt, _71037_kind)))) {
		return false;;
	};
	(*((*(_71066_t))))._field_Kind=_71037_kind;
	(*((*(_71066_t))))._field_Id=_71048_id;
	(*(_self_))._field_pos+=_71037_kind.len();
	return true;;
}



inline jule::Bool _1b9b15572_lexBasicOps(_1b9b11cee_lex* _self_, jule::Slice<jule::U8> _72030_txt, jule::Ptr<_1b9b032eb_Token>* _72048_tok) {
	{
		auto expr = &(_1b9b0b458_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c81469da:;
		if (it != expr_end) {
			_1b9b0abd8_kindPair *_72116_pair = it;
			{
				if (_1b9b15176_isOp(_self_, &(_72030_txt), (*(_72116_pair))._field_kind, (*(_72116_pair))._field_id, _72048_tok)) {
					return true;;
				};
			}
			_iter_next_1c81469da:;
			++it;
			goto _iter_begin_1c81469da;
		}
		_iter_end_1c81469da:;
	};
	return false;;
}



inline jule::Bool _1b9b1596d_lexId(_1b9b11cee_lex* _self_, jule::Slice<jule::U8>* _72925_txt, jule::Ptr<_1b9b032eb_Token>* _72943_t) {
	jule::Str _7309_lex = _1b9b12c34_id(_self_, _72925_txt);;
	if ((_7309_lex).empty()) {
		return false;;
	};
	(*((*(_72943_t))))._field_Kind=_7309_lex;
	(*((*(_72943_t))))._field_Id=static_cast<jule::U32>(1LLU);
	return true;;
}



inline jule::Bool _1b9b15d69_lexNum(_1b9b11cee_lex* _self_, jule::Slice<jule::U8>* _73926_txt, jule::Ptr<_1b9b032eb_Token>* _73944_t) {
	jule::Str _7409_lex = _1b9b1386c_num(_self_, _73926_txt);;
	if ((_7409_lex).empty()) {
		return false;;
	};
	(*((*(_73944_t))))._field_Kind=_7409_lex;
	(*((*(_73944_t))))._field_Id=static_cast<jule::U32>(4LLU);
	return true;;
}



inline jule::Ptr<_1b9b032eb_Token> _1b9b16100_token(_1b9b11cee_lex* _self_) {
	jule::Ptr<_1b9b032eb_Token> _75113_t = jule::new_ptr<_1b9b032eb_Token>(_1b9b032eb_Token{._field_File=(*(_self_))._field_file, ._field_Id=static_cast<jule::U32>(0LLU)});;
	jule::Slice<jule::U8> _7569_txt = _1b9b12eba_resume(_self_);;
	if ((_7569_txt == nullptr)) {
		return _75113_t;;
	};
	(*(_75113_t))._field_Column=(*(_self_))._field_column;
	(*(_75113_t))._field_Row=(*(_self_))._field_row;
	{
		
		if (_1b9b15d69_lexNum(_self_, &(_7569_txt), &(_75113_t))) {
			_case_begin_1c814d492:;
			{
				goto _match_end_1c814b391;
			}
		}
		else if ((_7569_txt[0LL] == '\'')) {
			_case_begin_1c814ca46:;
			{
				(*(_75113_t))._field_Kind=_1b9b143ea_lexRune(_self_, &(_7569_txt));
				(*(_75113_t))._field_Id=static_cast<jule::U32>(4LLU);
				return _75113_t;;
			}
		}
		else if (((_7569_txt[0LL] == '\"') || (_7569_txt[0LL] == '`'))) {
			_case_begin_1c814caac:;
			{
				(*(_75113_t))._field_Kind=_1b9b14681_lexStr(_self_);
				(*(_75113_t))._field_Id=static_cast<jule::U32>(4LLU);
				return _75113_t;;
			}
		}
		else if (_1b9b0bd71_bytesHasPrefix(&(_7569_txt), jule::Str::lit("//", 2))) {
			_case_begin_1c814cb23:;
			{
				_1b9b13273_lexLineComment(_self_, &(_75113_t));
				return _75113_t;;
			}
		}
		else if (_1b9b0bd71_bytesHasPrefix(&(_7569_txt), jule::Str::lit("/*", 2))) {
			_case_begin_1c814beb8:;
			{
				_1b9b1352b_lexRangeComment(_self_, &(_75113_t));
				return _75113_t;;
			}
		}
		else if (_1b9b15572_lexBasicOps(_self_, _7569_txt, &(_75113_t))) {
			_case_begin_1c814c02e:;
			{
				goto _match_end_1c814b391;
			}
		}
		else if (_1b9b1596d_lexId(_self_, &(_7569_txt), &(_75113_t))) {
			_case_begin_1c814c095:;
			{
				{
					auto expr = &(_1b9b0b117_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c815197e:;
					if (it != expr_end) {
						_1b9b0abd8_kindPair *_78820_pair = it;
						{
							if (((*(_78820_pair))._field_kind == (*(_75113_t))._field_Kind)) {
								(*(_75113_t))._field_Id=(*(_78820_pair))._field_id;
								goto _iter_end_1c815197e;
							};
						}
						_iter_next_1c815197e:;
						++it;
						goto _iter_begin_1c815197e;
					}
					_iter_end_1c815197e:;
				};
			}
		}
		else {
			_case_begin_1c814be52:;
			{
				jule::I32 _79513_r = 0;;
				jule::I32 _79516_sz = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _23d10b4ea_DecodeRune(_7569_txt);
					_79513_r = __jule_assign_result.__jule_result_arg0;
					_79516_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1b9b12382_pushErr(_self_, jule::Str::lit("undefined token: @", 18), jule::Slice<jule::Any>::make({jule::Any(_79513_r, &__jule_any_type6)}));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_79516_sz;
				return _75113_t;;
			}
		}
		_match_end_1c814b391:;
	};
	(*(_self_))._field_column+=_23d10d365_RuneCountStr((*(_75113_t))._field_Kind);
	return _75113_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b11cee_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b1692a_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b177b6_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b17bd4_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b187b7_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b18dc2_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b191be_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b19565_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b19862_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b19be7_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b19ee4_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b9b1a654_IsUnsafe(_1b9b1a2e1_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b1a2e1_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b9b1ade6_AutoSized(_1b9b1aa83_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b1aa83_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b1b2d1_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b1b6aa_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b1caeb_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b1cde8_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b1d4c0_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b1d7bc_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b1db96_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b1e070_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b1e526_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b1eba8_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b20082_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b2045b_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b20835_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b20c0e_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b211b5_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b9b21b99_Unhandled(_1b9b21825_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1b9b21e30_Ignored(_1b9b21825_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*((*(_self_))._field_Exception))._field_Deferred);;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b21825_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b2231a_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b22b45_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b230eb_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b23926_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b2411e_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b24aae_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b2521e_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b2551b_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b259c2_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b25d9b_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b26275_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b26572_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b26bd2_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b27265_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b28178_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b287d8_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b9b29399_IsSelf(_1b9b29025_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b29025_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b9b2a7da_IsAnon(_1b9b2a477_FnDecl* _self_) {
	return (*(_self_))._field_Ident.equal("<anonymous>", 11);;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b2a477_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b2b555_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b2b92e_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b9b2c435_IsInf(_1b9b2c0c2_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b2c0c2_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b9b2cc60_IsWhileNext(_1b9b2c8ec_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b2c8ec_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b2d304_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b2d6cd_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b2daa7_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b2e05d_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b2e437_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b2e8dd_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b3012a_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b305d1_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b30d1d_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b31637_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b31add_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b3269e_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b32ec9_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b33639_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b33903_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b342e9_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b34a36_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Inherits:" << _Src._field_Inherits << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b35196_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b9b3b587_FieldIns> _1b9b3683a_instance(jule::Ptr<_1b9b364b6_Field> _self_) {
	return jule::new_ptr<_1b9b3b587_FieldIns>(_1b9b3b587_FieldIns{._field_Decl=_self_, });;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b364b6_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b38496_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b9b3c137_StructIns> _1b9b3981b_instance(jule::Ptr<_1b9b393a9_Struct> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	jule::Ptr<_1b9b3c137_StructIns> _10013_ins = jule::new_ptr<_1b9b3c137_StructIns>(_1b9b3c137_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_1b9b3b587_FieldIns>>::alloc(0LL, (*(_self_))._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_1b9c09611_Var>>::alloc(0LL, (*(_self_))._field_Statics.len()), ._field_Refers=static__1b9b55617_new(), });;
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c98979dc:;
		if (it != expr_end) {
			jule::Ptr<_1b9c09611_Var> _10721_s = *it;
			{
				{ jule::Slice<jule::Ptr<_1b9c09611_Var>> &__jule_push_dest = (*(_10013_ins))._field_Statics; __jule_push_dest.push(jule::new_ptr<_1b9c09611_Var>((*(_10721_s)))); };
			}
			_iter_next_1c98979dc:;
			++it;
			goto _iter_begin_1c98979dc;
		}
		_iter_end_1c98979dc:;
	};
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9899082:;
		if (it != expr_end) {
			jule::Ptr<_1b9b364b6_Field> _11121_f = *it;
			{
				{ jule::Slice<jule::Ptr<_1b9b3b587_FieldIns>> &__jule_push_dest = (*(_10013_ins))._field_Fields; __jule_push_dest.push(_1b9b3683a_instance(_11121_f)); };
				if ((((!((*(_11121_f))._field_Mutable)) && ((*((*(_11121_f))._field_Kind))._field_Kind != nullptr)) && _1b9c8ea5e_Mutable((*((*(_11121_f))._field_Kind))._field_Kind.ptr()))) {
					(*(_10013_ins))._field_Mutable=true;
				};
			}
			_iter_next_1c9899082:;
			++it;
			goto _iter_begin_1c9899082;
		}
		_iter_end_1c9899082:;
	};
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		(*(_10013_ins))._field_Methods=(*(_self_))._field_Methods;
	} else {
		(*(_10013_ins))._field_Methods=jule::Slice<jule::Ptr<_1b9b4e26a_Fn>>::alloc(0LL, (*(_self_))._field_Methods.len());
		{
			auto expr = &((*(_self_))._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c989c2e9:;
			if (it != expr_end) {
				jule::Ptr<_1b9b4e26a_Fn> _12225_f = *it;
				{
					jule::Ptr<_1b9b4e26a_Fn> _12321_fins = jule::new_ptr<_1b9b4e26a_Fn>((*(_12225_f)));;
					(*(_12321_fins))._field_Instances=nullptr;
					{ jule::Slice<jule::Ptr<_1b9b4e26a_Fn>> &__jule_push_dest = (*(_10013_ins))._field_Methods; __jule_push_dest.push(_12321_fins); };
				}
				_iter_next_1c989c2e9:;
				++it;
				goto _iter_begin_1c989c2e9;
			}
			_iter_end_1c989c2e9:;
		};
	};
	return _10013_ins;;
}



inline jule::Ptr<_1b9b3c137_StructIns> _1b9b39b29_appendInstance(_1b9b393a9_Struct* _self_, jule::Ptr<_1b9b3c137_StructIns>* _13438_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c989cbac:;
		if (it != expr_end) {
			jule::Ptr<_1b9b3c137_StructIns> _14021_ains = *it;
			{
				if (_1b9b3cca3_Same(_14021_ains.ptr(), (*(_13438_ins)))) {
					return _14021_ains;;
				};
			}
			_iter_next_1c989cbac:;
			++it;
			goto _iter_begin_1c989cbac;
		}
		_iter_end_1c989cbac:;
	};
	{ jule::Slice<jule::Ptr<_1b9b3c137_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13438_ins))); };
	return nullptr;;
}



inline jule::Ptr<_1b9b4e26a_Fn> _1b9b3a025_FindMethod(_1b9b393a9_Struct* _self_, jule::Str _15229_ident, jule::Bool _15241_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c98a0e57:;
		if (it != expr_end) {
			jule::Ptr<_1b9b4e26a_Fn> _15321_f = *it;
			{
				if ((((*(_15321_f))._field_Statically == _15241_statically) && ((*(_15321_f))._field_Ident == _15229_ident))) {
					return _15321_f;;
				};
			}
			_iter_next_1c98a0e57:;
			++it;
			goto _iter_begin_1c98a0e57;
		}
		_iter_end_1c98a0e57:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b9c09611_Var> _1b9b3a366_FindStatic(_1b9b393a9_Struct* _self_, jule::Str _16329_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c98a2277:;
		if (it != expr_end) {
			jule::Ptr<_1b9c09611_Var> _16421_v = *it;
			{
				if (((*(_16421_v))._field_Ident == _16329_ident)) {
					return _16421_v;;
				};
			}
			_iter_next_1c98a2277:;
			++it;
			goto _iter_begin_1c98a2277;
		}
		_iter_end_1c98a2277:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b9b364b6_Field> _1b9b3a6a7_FindField(_1b9b393a9_Struct* _self_, jule::Str _17428_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c98a294d:;
		if (it != expr_end) {
			jule::Ptr<_1b9b364b6_Field> _17521_f = *it;
			{
				if (((*(_17521_f))._field_Ident == _17428_ident)) {
					return _17521_f;;
				};
			}
			_iter_next_1c98a294d:;
			++it;
			goto _iter_begin_1c98a294d;
		}
		_iter_end_1c98a294d:;
	};
	return nullptr;;
}



inline jule::Bool _1b9b3a9e8_IsImplements(_1b9b393a9_Struct* _self_, jule::Ptr<_1b9b62514_Trait> _18427_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c98a394e:;
		if (it != expr_end) {
			jule::Ptr<_1b9b62514_Trait> *_18516_it = it;
			{
				if ((_18427_t == (*(_18516_it)))) {
					return true;;
				};
			}
			_iter_next_1c98a394e:;
			++it;
			goto _iter_begin_1c98a394e;
		}
		_iter_end_1c98a394e:;
	};
	return false;;
}



inline jule::Bool _1b9b3ad39_IsUses(_1b9b393a9_Struct* _self_, jule::Ptr<_1b9b393a9_Struct> _19421_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c98a509e:;
		if (it != expr_end) {
			jule::Ptr<_1b9b393a9_Struct> *_19516_u = it;
			{
				while ((_19421_s == (*(_19516_u)))) {
					{
						return true;;
					}
				_iter_next_1c98a5896:;
				}
				_iter_end_1c98a5896:;;
			}
			_iter_next_1c98a509e:;
			++it;
			goto _iter_begin_1c98a509e;
		}
		_iter_end_1c98a509e:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b393a9_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b3b587_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b4102b_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b41526_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b41900_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b41e2d_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b422c4_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b425c1_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b42b54_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b43506_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b438d0_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b43d86_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b44260_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b44639_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b44ae0_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b45173_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b45706_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b46097_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b4654d_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b46927_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b46c24_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b470ed_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b474c7_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b478a1_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b47c7a_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b48231_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b486d7_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b48ab1_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b48dad_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b491aa_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b49584_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b4995d_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b49d37_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b458e3_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b4a563_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b4a860_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b4ab5c_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b4b036_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b4b333_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b4c015_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b9b511c3_ParamIns> _1b9b4cb2b_instance(jule::Ptr<_1b9b4c796_Param> _self_) {
	return jule::new_ptr<_1b9b511c3_ParamIns>(_1b9b511c3_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _1b9b4cdb2_IsSelf(_1b9b4c796_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1b9b4d148_IsRef(_1b9b4c796_Param* _self_) {
	return (!((*(_self_))._field_Ident).empty() && ((*(_self_))._field_Ident[0LL] == '&'));;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b4c796_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b9b4e6dd_IsVoid(_1b9b4e26a_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1b9b4e974_IsMethod(_1b9b4e26a_Fn* _self_) {
	return ((*(_self_))._field_Owner != nullptr);;
}



inline jule::Bool _1b9b4ec0a_IsEntryPoint(_1b9b4e26a_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1b9b4ee91_IsInit(_1b9b4e26a_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1b9b50227_IsAnon(_1b9b4e26a_Fn* _self_) {
	return _1b9b06024_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1b9b504ad_AnyVar(_1b9b4e26a_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*((*(_self_))._field_Result))._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1b9b5216e_FnIns> _1b9b50744_instanceForce(jule::Ptr<_1b9b4e26a_Fn> _self_) {
	jule::Ptr<_1b9b5216e_FnIns> _10113_ins = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_1b9b8ecc2_Scope>(), ._field_Refers=static__1b9b55617_new(), });;
	(*(_10113_ins))._field_Params=jule::Slice<jule::Ptr<_1b9b511c3_ParamIns>>::alloc(0LL, (*(_self_))._field_Params.len());
	{
		auto expr = &((*(_self_))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c98bb9ab:;
		if (it != expr_end) {
			jule::Ptr<_1b9b4c796_Param> _10821_p = *it;
			{
				{ jule::Slice<jule::Ptr<_1b9b511c3_ParamIns>> &__jule_push_dest = (*(_10113_ins))._field_Params; __jule_push_dest.push(_1b9b4cb2b_instance(_10821_p)); };
			}
			_iter_next_1c98bb9ab:;
			++it;
			goto _iter_begin_1c98bb9ab;
		}
		_iter_end_1c98bb9ab:;
	};
	if (((*((*(_10113_ins))._field_Decl))._field_Result != nullptr)) {
		(*(_10113_ins))._field_Result=(*((*((*((*(_10113_ins))._field_Decl))._field_Result))._field_Kind))._field_Kind;
	};
	return _10113_ins;;
}



inline jule::Ptr<_1b9b5216e_FnIns> _1b9b509ca_instance(jule::Ptr<_1b9b4e26a_Fn> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	return _1b9b50744_instanceForce(_self_);;
}



inline jule::Ptr<_1b9b5216e_FnIns> _1b9b50cd8_appendInstance(_1b9b4e26a_Fn* _self_, jule::Ptr<_1b9b5216e_FnIns>* _12938_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_1b9b5216e_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_1b9b5216e_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c98c1bae:;
		if (it != expr_end) {
			jule::Ptr<_1b9b5216e_FnIns> _14521_ains = *it;
			{
				if (_1b9b53bcb_Same(_14521_ains.ptr(), (*(_12938_ins)))) {
					return _14521_ains;;
				};
			}
			_iter_next_1c98c1bae:;
			++it;
			goto _iter_begin_1c98c1bae;
		}
		_iter_end_1c98c1bae:;
	};
	{ jule::Slice<jule::Ptr<_1b9b5216e_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b4e26a_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b9b51536_Str(_1b9b511c3_ParamIns* _self_) {
	_23d16295d_StrBuilder _16713_s = static__23d162c7c_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Mutable) {
		_23d16b604_WriteStr(&_16713_s, jule::Str::lit("mut ", 4));
	};
	if ((*((*(_self_))._field_Decl))._field_Reference) {
		_23d16b604_WriteStr(&_16713_s, jule::Str::lit("&_:", 3));
	};
	if (_1b9b4cdb2_IsSelf((*(_self_))._field_Decl.ptr())) {
		if (_1b9b4d148_IsRef((*(_self_))._field_Decl.ptr())) {
			_23d16b8ac_WriteByte(&_16713_s, '&');
		};
		_23d16b604_WriteStr(&_16713_s, jule::Str::lit("self", 4));
		return _23d16bdeb_Str(&_16713_s);;
	};
	if ((*((*(_self_))._field_Decl))._field_Variadic) {
		_23d16b604_WriteStr(&_16713_s, jule::Str::lit("...", 3));
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_23d16b604_WriteStr(&_16713_s, _1b9c8d596_Str((*(_self_))._field_Kind.ptr()));
	};
	return _23d16bdeb_Str(&_16713_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b511c3_ParamIns _Src) {
	_Stream << _1b9b51536_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b9b524b0_Str(_1b9b5216e_FnIns* _self_) {
	;
	return _1b9b5401c_GetKindStr(_self_, false);;
}



inline jule::Bool _1b9b52801_Equal(jule::Ptr<_1b9b5216e_FnIns> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _21821_other) {
	jule::Ptr<_1b9b5216e_FnIns> _2199_f = _1b9c91b1b_Fn(_21821_other.ptr());;
	if ((_2199_f == nullptr)) {
		return false;;
	};
	return _1b9b52c96_EqualFn(_self_, &(_2199_f));;
}



inline jule::Bool _1b9b52c96_EqualFn(jule::Ptr<_1b9b5216e_FnIns> _self_, jule::Ptr<_1b9b5216e_FnIns>* _22924_f) {
	if (((*((*(_self_))._field_Decl))._field_Exceptional != (*((*((*(_22924_f))))._field_Decl))._field_Exceptional)) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Unsafety != (*((*((*(_22924_f))))._field_Decl))._field_Unsafety)) {
		return false;;
	};
	if ((_1b9b4e6dd_IsVoid((*(_self_))._field_Decl.ptr()) != _1b9b4e6dd_IsVoid((*((*(_22924_f))))._field_Decl.ptr()))) {
		return false;;
	};
	jule::Fn<jule::Bool(jule::Ptr<_1b9b511c3_ParamIns>,jule::Ptr<_1b9b511c3_ParamIns>)> _2399_checkParams = jule::Fn<jule::Bool(jule::Ptr<_1b9b511c3_ParamIns>,jule::Ptr<_1b9b511c3_ParamIns>)>([=](jule::Ptr<_1b9b511c3_ParamIns> _23927_p1, jule::Ptr<_1b9b511c3_ParamIns> _23942_p2) mutable -> jule::Bool {
		if (((*((*(_23927_p1))._field_Decl))._field_Mutable != (*((*(_23942_p2))._field_Decl))._field_Mutable)) {
			return false;;
		};
		if (_1b9b4cdb2_IsSelf((*(_23927_p1))._field_Decl.ptr())) {
			if ((!(_1b9b4cdb2_IsSelf((*(_23942_p2))._field_Decl.ptr())))) {
				return false;;
			};
			if ((_1b9b4d148_IsRef((*(_23927_p1))._field_Decl.ptr()) != _1b9b4d148_IsRef((*(_23942_p2))._field_Decl.ptr()))) {
				return false;;
			};
			return true;;
		};
		if (((*((*(_23927_p1))._field_Decl))._field_Reference != (*((*(_23942_p2))._field_Decl))._field_Reference)) {
			return false;;
		};
		if (((*((*(_23927_p1))._field_Decl))._field_Variadic != (*((*(_23942_p2))._field_Decl))._field_Variadic)) {
			return false;;
		};
		return _1b9c8d8d7_Equal((*(_23927_p1))._field_Kind, (*(_23942_p2))._field_Kind);;
	});;
	if (((*((*(_22924_f))))._field_Params.len() != (*(_self_))._field_Params.len())) {
		return false;;
	};
	jule::I32 _27113_i = 0LL;;
	for (; (_27113_i < (*(_self_))._field_Params.len()); (_27113_i)++) {
		{
			if ((!(_2399_checkParams((*(_self_))._field_Params[_27113_i], (*((*(_22924_f))))._field_Params[_27113_i])))) {
				return false;;
			};
		}
	_iter_next_1c98d2cbe:;
	}
	_iter_end_1c98d2cbe:;;
	if ((!(_1b9b4e6dd_IsVoid((*(_self_))._field_Decl.ptr())))) {
		if ((!(_1b9c8d8d7_Equal((*(_self_))._field_Result, (*((*(_22924_f))))._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1b9b530d7_equalTrait(jule::Ptr<_1b9b5216e_FnIns> _self_, jule::Ptr<_1b9b5216e_FnIns>* _28827_other) {
	if (((*((*(_self_))._field_Decl))._field_Public != (*((*((*(_28827_other))))._field_Decl))._field_Public)) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Ident != (*((*((*(_28827_other))))._field_Decl))._field_Ident)) {
		return false;;
	};
	if ((!(_1b9b52c96_EqualFn(_self_, _28827_other)))) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Generics.len() != (*((*((*(_28827_other))))._field_Decl))._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1b9c8d1cd_TypeKind>> _1b9b5336d_Types(_1b9b5216e_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1c98d8489:;
			{
				return nullptr;;
			}
		}
		else if ((_1b9c92655_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1c98d8500:;
			{
				return jule::Slice<jule::Ptr<_1b9c8d1cd_TypeKind>>::make({(*(_self_))._field_Result});;
			}
		}
		else {
			_case_begin_1c98d8423:;
			{
				return (*(_1b9c92655_Tup((*(_self_))._field_Result.ptr())))._field_Types;;
			}
		}
		_match_end_1c98d8357:;
	};
}



inline jule::Bool _1b9b53604_IsBuiltin(_1b9b5216e_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1b9b5388a_IsAnon(_1b9b5216e_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1b9b50227_IsAnon((*(_self_))._field_Decl.ptr())));;
}



inline jule::Bool _1b9b53bcb_Same(_1b9b5216e_FnIns* _self_, jule::Ptr<_1b9b5216e_FnIns> _33119_f) {
	if ((((*(_self_))._field_Decl != (*(_33119_f))._field_Decl) || ((*(_33119_f))._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c98db26c:;
		if (it != expr_end) {
			jule::I32 _33613_i = it - expr->begin();
			jule::Ptr<_1b9c8b7e7_InsGeneric> *_33616_g = it;
			{
				jule::Ptr<_1b9c8b7e7_InsGeneric> _33713_g2 = (*(_33119_f))._field_Generics[_33613_i];;
				if ((((*((*((*(_33616_g))))._field_Kind))._field_BindIdent != (*((*(_33713_g2))._field_Kind))._field_BindIdent) || (!(_1b9c8d8d7_Equal((*((*(_33616_g))))._field_Kind, (*(_33713_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1c98db26c:;
			++it;
			_33613_i++;
			goto _iter_begin_1c98db26c;
		}
		_iter_end_1c98db26c:;
	};
	return true;;
}



inline jule::Str _1b9b5401c_GetKindStr(_1b9b5216e_FnIns* _self_, jule::Bool _34825_ident) {
	_23d16295d_StrBuilder _34913_s = static__23d162c7c_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Unsafety) {
		_23d16b604_WriteStr(&_34913_s, jule::Str::lit("unsafe ", 7));
	};
	_23d16b604_WriteStr(&_34913_s, jule::Str::lit("fn", 2));
	if ((_34825_ident && ((*(_self_))._field_Decl != nullptr))) {
		_23d16b8ac_WriteByte(&_34913_s, ' ');
		_23d16b604_WriteStr(&_34913_s, (*((*(_self_))._field_Decl))._field_Ident);
	};
	_23d16b8ac_WriteByte(&_34913_s, '(');
	jule::I32 _3639_n = (*(_self_))._field_Params.len();;
	if ((_3639_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c98e1c12:;
			if (it != expr_end) {
				jule::I32 _36517_i = it - expr->begin();
				jule::Ptr<_1b9b511c3_ParamIns> *_36520_p = it;
				{
					_23d16b604_WriteStr(&_34913_s, _1b9b51536_Str((*(_36520_p)).ptr()));
					if ((_36517_i < ((*(_self_))._field_Params.len() - 1LL))) {
						_23d16b8ac_WriteByte(&_34913_s, ',');
					};
				}
				_iter_next_1c98e1c12:;
				++it;
				_36517_i++;
				goto _iter_begin_1c98e1c12;
			}
			_iter_end_1c98e1c12:;
		};
	};
	_23d16b8ac_WriteByte(&_34913_s, ')');
	if ((*((*(_self_))._field_Decl))._field_Exceptional) {
		_23d16b8ac_WriteByte(&_34913_s, '!');
	};
	if ((!(_1b9b4e6dd_IsVoid((*(_self_))._field_Decl.ptr())))) {
		_23d16b8ac_WriteByte(&_34913_s, ':');
		_23d16b604_WriteStr(&_34913_s, _1b9c8d596_Str((*(_self_))._field_Result.ptr()));
	};
	return _23d16bdeb_Str(&_34913_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b5216e_FnIns _Src) {
	_Stream << _1b9b524b0_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1b9b5531a_ReferenceStack> static__1b9b55617_new(void) {
	return jule::new_ptr<_1b9b5531a_ReferenceStack>(_1b9b5531a_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I32 _1b9b55a13_Len(_1b9b5531a_ReferenceStack* _self_) {
	return static_cast<jule::I32>((*(_self_))._field_buffer.len());;
}



inline jule::Any _1b9b55d54_At(_1b9b5531a_ReferenceStack* _self_, jule::I32 _6821_i) {
	return (*(_self_))._field_buffer[_6821_i];;
}



inline void _1b9b5610c_Push(_1b9b5531a_ReferenceStack* _self_, jule::Any _7327_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_7327_ref); };
}



inline jule::Bool _1ca2b3825_Exist(_1b9b5531a_ReferenceStack* _self_, jule::Ptr<_1b9b5216e_FnIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca2b4a24:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type7_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1ca2b4a24:;
			++it;
			goto _iter_begin_1ca2b4a24;
		}
		_iter_end_1ca2b4a24:;
	};
	return false;;
}

inline jule::Bool _1ca2ca30e_Exist(_1b9b5531a_ReferenceStack* _self_, jule::Ptr<_1b9c09611_Var> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca2cb4b9:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type8_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1ca2cb4b9:;
			++it;
			goto _iter_begin_1ca2cb4b9;
		}
		_iter_end_1ca2cb4b9:;
	};
	return false;;
}

inline jule::Bool _1ca383483_Exist(_1b9b5531a_ReferenceStack* _self_, jule::Ptr<_1b9b3c137_StructIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca384682:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type9_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1ca384682:;
			++it;
			goto _iter_begin_1ca384682;
		}
		_iter_end_1ca384682:;
	};
	return false;;
}

inline jule::Bool _1ca698b3e_Exist(_1b9b5531a_ReferenceStack* _self_, jule::Ptr<_1b9b62514_Trait> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca699cb6:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type10_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1ca699cb6:;
			++it;
			goto _iter_begin_1ca699cb6;
		}
		_iter_end_1ca699cb6:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b5531a_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b56838_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline void _1b9b5bc8e_pushErr(_1b9b5b3ed_symbolBuilder* _self_, jule::Ptr<_1b9b032eb_Token>* _33227_token, jule::Str _33242_fmt, jule::Slice<jule::Any> _33255_args) {
	{ jule::Slice<_23d21115a_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1b9bd0087_compilerErr(_33227_token, true, _33242_fmt, _33255_args)); };
}



inline void _1b9b5c520_pushSuggestion(_1b9b5b3ed_symbolBuilder* _self_, jule::Str _34133_fmt, jule::Slice<jule::Any> _34146_args) {
	{
		_1b9bd15b6_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _34133_fmt, _34146_args);
	};
}



inline jule::Bool _1b9b5c91b_checkCppUseDeclPath(_1b9b5b3ed_symbolBuilder* _self_, jule::Ptr<_1b9b31637_UseDecl>* _34539_decl, jule::Str* _34556_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _3469_ext = _23d170020_Ext((*(_34556_path)));;
	if (((!(_23d2042a2_IsValidHeaderExt(_3469_ext))) && (!(_23d20456b_IsValidCppExt(_3469_ext))))) {
		_1b9b5bc8e_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("invalid C++ extension: @", 24), jule::Slice<jule::Any>::make({jule::Any(_3469_ext, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_23bcaa684_Status> _3539_info = ({
		auto except = static__23bc9c940_Of((*(_34556_path)));
		(except.ok()) ? (except.result) : ({{
			_1b9b5bc8e_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34539_decl))))._field_LinkPath, &__jule_any_type4)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_23bcaa684_Status>(nullptr);});
	});;
	if (_23bcaaa5d_IsDir(_3539_info.ptr())) {
		_1b9b5bc8e_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34539_decl))))._field_LinkPath, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1b9bb1200_ImportInfo> _1b9b5cc29_buildCppHeaderImport(_1b9b5b3ed_symbolBuilder* _self_, jule::Ptr<_1b9b31637_UseDecl>* _36544_decl) {
	jule::Str _36613_path = (*((*(_36544_decl))))._field_LinkPath;;
	if ((!(_23d203ee9_IsStdHeaderPath((*((*(_36544_decl))))._field_LinkPath)))) {
		_36613_path=_23d16ec56_Join(jule::Slice<jule::Str>::make({_1b9b09236_Dir((*((*((*(_36544_decl))))._field_Token))._field_File.ptr()),(*((*(_36544_decl))))._field_LinkPath}));
		jule::Bool _37017_ok = _1b9b5c91b_checkCppUseDeclPath(_self_, _36544_decl, &(_36613_path));;
		if ((!(_37017_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _23d1702d9_Abs(_36613_path);
			_36613_path = __jule_assign_result.__jule_result_arg0;
			_37017_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_37017_ok))) {
			_1b9b5bc8e_pushErr(_self_, &((*((*(_36544_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_36544_decl))))._field_LinkPath, &__jule_any_type4)}));
		};
	};
	return jule::new_ptr<_1b9bb1200_ImportInfo>(_1b9bb1200_ImportInfo{._field_Token=(*((*(_36544_decl))))._field_Token, ._field_Path=_36613_path, ._field_LinkPath=(*((*(_36544_decl))))._field_LinkPath, ._field_Ident=jule::Str(), ._field_Binded=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_1b9bb1200_ImportInfo> _1b9b5d06a_buildStdImport(_1b9b5b3ed_symbolBuilder* _self_, jule::Ptr<_1b9b31637_UseDecl>* _39338_decl) {
	jule::Str _39413_path = (*((*(_39338_decl))))._field_LinkPath.slice(5LL);;
	_39413_path=_23d15417a_Replace(_39413_path, jule::Str::lit("::", 2), jule::Str::lit("/", 1), -1LL);
	_39413_path=_23d16ec56_Join(jule::Slice<jule::Str>::make({_23d32248b_PathStdlib,_39413_path}));
	jule::Bool _39715_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _23d1702d9_Abs(_39413_path);
		_39413_path = __jule_assign_result.__jule_result_arg0;
		_39715_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_39715_ok))) {
		_1b9b5bc8e_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_23bcaa684_Status> _4049_info = ({
		auto except = static__23bc9c940_Of(_39413_path);
		(except.ok()) ? (except.result) : ({{
			_1b9b5bc8e_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_23bcaa684_Status>(nullptr);});
	});;
	if ((!(_23bcaaa5d_IsDir(_4049_info.ptr())))) {
		_1b9b5bc8e_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I32 _4149_i = (_23d14e50a_FindLast((*((*(_39338_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4159_ident = (*((*(_39338_decl))))._field_LinkPath.slice(_4149_i);;
	return jule::new_ptr<_1b9bb1200_ImportInfo>(_1b9bb1200_ImportInfo{._field_Token=(*((*(_39338_decl))))._field_Token, ._field_Path=_39413_path, ._field_LinkPath=(*((*(_39338_decl))))._field_LinkPath, ._field_Ident=_4159_ident, ._field_Alias=(*((*(_39338_decl))))._field_Alias, ._field_Binded=false, ._field_Std=true, ._field_ImportAll=(*((*(_39338_decl))))._field_Full, ._field_Package=jule::new_ptr<_1b9bb4126_Package>(_1b9bb4126_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1b9bb1200_ImportInfo> _1b9b5d3ab_buildIdentImport(jule::Ptr<_1b9b5b3ed_symbolBuilder> _self_, jule::Ptr<_1b9b31637_UseDecl>* _43241_decl) {
	jule::Str _4339_modPath = _1b9bad2da_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1b9bac350_GetModPath((*(_self_))._field_importer);;
	if ((_4339_modPath.len() == 0LL)) {
		_1b9b5bc8e_pushErr(_self_.ptr(), &((*((*(_43241_decl))))._field_Token), jule::Str::lit("no module file found in current directory or any parent directory", 65), jule::Slice<jule::Any>());
		_1b9b5c520_pushSuggestion(_self_.ptr(), jule::Str::lit("use \"julec mod init\" command to initialize module", 49), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _44013_path = (*((*(_43241_decl))))._field_LinkPath;;
	_44013_path=_23d15417a_Replace(_44013_path, jule::Str::lit("::", 2), jule::Str::lit("/", 1), -1LL);
	_44013_path=_23d16ec56_Join(jule::Slice<jule::Str>::make({_4339_modPath,_44013_path}));
	jule::Bool _44415_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _23d1702d9_Abs(_44013_path);
		_44013_path = __jule_assign_result.__jule_result_arg0;
		_44415_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_44415_ok))) {
		_1b9b5bc8e_pushErr(_self_.ptr(), &((*((*(_43241_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43241_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_23bcaa684_Status> _4519_info = ({
		auto except = static__23bc9c940_Of(_44013_path);
		(except.ok()) ? (except.result) : ({{
			_1b9b5bc8e_pushErr(_self_.ptr(), &((*((*(_43241_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43241_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_23bcaa684_Status>(nullptr);});
	});;
	if ((!(_23bcaaa5d_IsDir(_4519_info.ptr())))) {
		_1b9b5bc8e_pushErr(_self_.ptr(), &((*((*(_43241_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43241_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I32 _4619_i = (_23d14e50a_FindLast((*((*(_43241_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4629_ident = (*((*(_43241_decl))))._field_LinkPath.slice(_4619_i);;
	return jule::new_ptr<_1b9bb1200_ImportInfo>(_1b9bb1200_ImportInfo{._field_Token=(*((*(_43241_decl))))._field_Token, ._field_Path=_44013_path, ._field_LinkPath=(*((*(_43241_decl))))._field_LinkPath, ._field_Ident=_4629_ident, ._field_Alias=(*((*(_43241_decl))))._field_Alias, ._field_Binded=false, ._field_Std=false, ._field_ImportAll=(*((*(_43241_decl))))._field_Full, ._field_Package=jule::new_ptr<_1b9bb4126_Package>(_1b9bb4126_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1b9bb1200_ImportInfo> _1b9b5d6ec_buildImport(jule::Ptr<_1b9b5b3ed_symbolBuilder> _self_, jule::Ptr<_1b9b31637_UseDecl>* _47936_decl) {
	{
		
		if ((*((*(_47936_decl))))._field_Binded) {
			_case_begin_1c992d028:;
			{
				return _1b9b5cc29_buildCppHeaderImport(_self_.ptr(), _47936_decl);;
			}
		}
		else if ((*((*(_47936_decl))))._field_Std) {
			_case_begin_1c992c8da:;
			{
				return _1b9b5d06a_buildStdImport(_self_.ptr(), _47936_decl);;
			}
		}
		else {
			_case_begin_1c992c874:;
			{
				return _1b9b5d3ab_buildIdentImport(_self_, _47936_decl);;
			}
		}
		_match_end_1c992c7a8:;
	};
}



inline jule::Bool _1b9b5da3d_checkDuplicateUseDecl(_1b9b5b3ed_symbolBuilder* _self_, jule::Ptr<_1b9bb1200_ImportInfo>* _49041_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b9bb1200_ImportInfo> _4929_lpkg = _1b9c582ca_SelectPackage((*(_self_))._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1b9bb1200_ImportInfo>)>([=](jule::Ptr<_1b9bb1200_ImportInfo> _49245_spkg) mutable -> jule::Bool {
		return ((*((*(_49041_pkg))))._field_Path == (*(_49245_spkg))._field_Path);;
	}));;
	if ((_4929_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1b9b5bc8e_pushErr(_self_, &((*((*(_49041_pkg))))._field_Token), jule::Str::lit("use declaration duplication: @ is already used above", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_49041_pkg))))._field_LinkPath, &__jule_any_type4)}));
	_1b9b5c520_pushSuggestion(_self_, jule::Str::lit("remove this use declaration, already used, it is safe", 53), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _1b9b5dda1_implImportSelections(_1b9b5b3ed_symbolBuilder* _self_, jule::Ptr<_1b9bb1200_ImportInfo>* _50444_imp, jule::Ptr<_1b9b31637_UseDecl>* _50467_decl) {
	(*((*(_50444_imp))))._field_Selected=(*((*(_50467_decl))))._field_Selected;
	{
		auto expr = &((*((*(_50444_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9932291:;
		if (it != expr_end) {
			jule::Ptr<_1b9b032eb_Token> _50616_item = *it;
			{
				{
					auto expr = &((*((*(_50444_imp))))._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c9932e0c:;
					if (it != expr_end) {
						jule::Ptr<_1b9b032eb_Token> _50720_citem = *it;
						{
							if ((_50616_item == _50720_citem)) {
								goto _iter_end_1c9932e0c;
							} else if (((*(_50616_item))._field_Kind == (*(_50720_citem))._field_Kind)) {
								_1b9b5bc8e_pushErr(_self_, &(_50616_item), jule::Str::lit("duplicated selection: @ is already selected", 43), jule::Slice<jule::Any>::make({jule::Any((*(_50616_item))._field_Kind, &__jule_any_type4)}));
								_1b9b5c520_pushSuggestion(_self_, jule::Str::lit("remove this use selection, already selected, it is safe", 55), jule::Slice<jule::Any>());
								goto _iter_end_1c9932e0c;
							};
						}
						_iter_next_1c9932e0c:;
						++it;
						goto _iter_begin_1c9932e0c;
					}
					_iter_end_1c9932e0c:;
				};
			}
			_iter_next_1c9932291:;
			++it;
			goto _iter_begin_1c9932291;
		}
		_iter_end_1c9932291:;
	};
}



inline jule::Str _1b9b5e1e2_getAsLinkPath(jule::Ptr<_1b9b5b3ed_symbolBuilder> _self_, jule::Str _51937_path) {
	if (_23d14ca9c_HasPrefix(_51937_path, _23d32248b_PathStdlib)) {
		(_51937_path).mut_slice(_23d32248b_PathStdlib.len());;
		return (jule::Str::lit("std", 3) + _23d15417a_Replace(_51937_path, jule::Str::lit("/", 1), jule::Str::lit("::", 2), -1LL));;
	};
	jule::Str _5259_root;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _23d1702d9_Abs(_1b9bad2da_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1b9bac350_GetModPath((*(_self_))._field_importer));
		_5259_root = __jule_assign_result.__jule_result_arg0;
	});
	(_51937_path).mut_slice(_5259_root.len());;
	if ((_51937_path[0LL] == 47LLU)) {
		(_51937_path).mut_slice(1LL);;
	};
	return _23d15417a_Replace(_51937_path, jule::Str::lit("/", 1), jule::Str::lit("::", 2), -1LL);;
}



inline void _1b9b5e610_pushCycleError(jule::Ptr<_1b9b5b3ed_symbolBuilder> _self_, jule::Ptr<_1b9b5b3ed_symbolBuilder>* _53335_sb, jule::Str _53355_path, _23d16295d_StrBuilder* _53371_message) {
	;
	jule::Str _5359_refersTo = _23d2115bc_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_1b9b5e1e2_getAsLinkPath(_self_, _1b9b09236_Dir((*((*((*(_53335_sb))))._field_table))._field_File.ptr())), &__jule_any_type4),jule::Any(_1b9b5e1e2_getAsLinkPath(_self_, _53355_path), &__jule_any_type4)}));;
	jule::Slice<jule::U8> _5399_buf = _23d16c89c_Buf(_53371_message);;
	_23d16b604_WriteStr(_53371_message, _23d14c2a5_Repeat(jule::Str::lit(" ", 1), 7LL));
	_23d16b604_WriteStr(_53371_message, _5359_refersTo);
	_23d16b8ac_WriteByte(_53371_message, '\n');
	_23d16b34b_Write(_53371_message, _5399_buf);
}



inline void _1b9b5ea2d_pushCrossCycleError(jule::Ptr<_1b9b5b3ed_symbolBuilder> _self_, jule::Ptr<_1b9b5b3ed_symbolBuilder>* _54640_target, jule::Ptr<_1b9bb1200_ImportInfo>* _54665_imp, jule::Ptr<_1b9b032eb_Token>* _54684_errorToken) {
	_23d16295d_StrBuilder _54713_message = static__23d162c7c_New(32LL);;
	_1b9b5e610_pushCycleError(_self_, &(_self_), (*((*(_54665_imp))))._field_Path, &(_54713_message));
	jule::Ptr<_1b9b5b3ed_symbolBuilder> _55113_owner = (*(_self_))._field_owner;;
	jule::Ptr<_1b9b5b3ed_symbolBuilder> _55213_old = _self_;;
	while (((*(_55113_owner))._field_owner != nullptr)) {
		{
			_1b9b5e610_pushCycleError(_self_, &((*(_55213_old))._field_owner), _1b9b09236_Dir((*((*(_55213_old))._field_table))._field_File.ptr()), &(_54713_message));
			if (((*(_55113_owner))._field_owner == (*(_54640_target)))) {
				_1b9b5e610_pushCycleError(_self_, _54640_target, _1b9b09236_Dir((*((*(_55113_owner))._field_table))._field_File.ptr()), &(_54713_message));
				goto _iter_end_1c993b498;
			};
			_55213_old=_55113_owner;
			_55113_owner=(*(_55113_owner))._field_owner;
		}
	_iter_next_1c993b498:;
	}
	_iter_end_1c993b498:;;
	_1b9b5bc8e_pushErr(_self_.ptr(), _54684_errorToken, jule::Str::lit("illegal cross cycle in use declarations;\n@", 42), jule::Slice<jule::Any>::make({jule::Any(_23d16bdeb_Str(&_54713_message), &__jule_any_type4)}));
}



inline jule::Bool _1b9b5ee29_checkImportCycles(jule::Ptr<_1b9b5b3ed_symbolBuilder> _self_, jule::Ptr<_1b9bb1200_ImportInfo> _56937_imp, jule::Ptr<_1b9b31637_UseDecl>* _56956_decl) {
	if (((*(_56937_imp))._field_Path == _1b9b09236_Dir((*((*(_self_))._field_table))._field_File.ptr()))) {
		_1b9b5bc8e_pushErr(_self_.ptr(), &((*((*(_56956_decl))))._field_Token), jule::Str::lit("illegal cycle in use declaration, package @ refers to itself", 60), jule::Slice<jule::Any>::make({jule::Any(_1b9b5e1e2_getAsLinkPath(_self_, (*(_56937_imp))._field_Path), &__jule_any_type4)}));
		return false;;
	};
	if (((*(_self_))._field_owner == nullptr)) {
		return true;;
	};
	if ((_1b9b09236_Dir((*((*((*(_self_))._field_owner))._field_table))._field_File.ptr()) == (*(_56937_imp))._field_Path)) {
		_1b9b5ea2d_pushCrossCycleError(_self_, &((*(_self_))._field_owner), &(_56937_imp), &((*((*(_56956_decl))))._field_Token));
		return false;;
	};
	jule::Ptr<_1b9b5b3ed_symbolBuilder> _58413_owner = (*(_self_))._field_owner;;
	_julec_label_1c9942b86:;
	if ((_1b9b09236_Dir((*((*(_58413_owner))._field_table))._field_File.ptr()) == (*(_56937_imp))._field_Path)) {
		_1b9b5ea2d_pushCrossCycleError(_self_, &(_58413_owner), &(_56937_imp), &((*((*(_56956_decl))))._field_Token));
		return false;;
	};
	if (((*(_58413_owner))._field_owner != nullptr)) {
		_58413_owner=(*(_58413_owner))._field_owner;
		goto _julec_label_1c9942b86;
	};
	return true;;
}



inline void _1b9b60347_checkPackageAccessibility(_1b9b5b3ed_symbolBuilder* _self_, jule::Ptr<_1b9b31637_UseDecl>* _60545_decl, jule::Str* _60562_mod, jule::Str* _60573_path) {
	if (((_1b9bad2da_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1b9bac350_GetModPath((*(_self_))._field_importer) != (*(_60562_mod))) && _23d152ca0_Contains((*(_60573_path)), jule::Str::lit("internal", 8)))) {
		_1b9b5bc8e_pushErr(_self_, &((*((*(_60545_decl))))._field_Token), jule::Str::lit("you cannot access to internal packages", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1b9b60743_importPackage(jule::Ptr<_1b9b5b3ed_symbolBuilder> _self_, jule::Ptr<_1b9bb1200_ImportInfo>* _61138_imp, jule::Ptr<_1b9b31637_UseDecl>* _61161_decl) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_61138_imp))))._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1b9bb1200_ImportInfo> _61613_port = _1b9bad2da_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1b9bac9d2_GetImport((*(_self_))._field_importer, (*((*(_61138_imp))))._field_Path);;
	if ((_61613_port != nullptr)) {
		(*((*(_61138_imp))))._field_Package=(*(_61613_port))._field_Package;
		(*((*(_61138_imp))))._field_Duplicate=true;
		jule::Str _62113_oldMod = _1b9bad2da_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1b9bac350_GetModPath((*(_self_))._field_importer);;
		_1b9bad2da_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1b9bac0b9_SetModPath((*(_self_))._field_importer, _1b9bad2da_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1b9bac691_ModById((*(_self_))._field_importer, (*((*(_61138_imp))))._field_ModId));
		_1b9b60347_checkPackageAccessibility(_self_.ptr(), _61161_decl, &(_62113_oldMod), &((*(_61613_port))._field_Path));
		_1b9bad2da_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1b9bac0b9_SetModPath((*(_self_))._field_importer, _62113_oldMod);
	} else {
		if ((!(_1b9b5ee29_checkImportCycles(_self_, (*(_61138_imp)), _61161_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _63013_oldMod = _1b9bad2da_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1b9bac350_GetModPath((*(_self_))._field_importer);;
		__JULE_DEFER({
			_1b9bad2da_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1b9bac0b9_SetModPath((*(_self_))._field_importer, _63013_oldMod);
		});;
		if ((*((*(_61138_imp))))._field_Std) {
			_1b9bad2da_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1b9bac0b9_SetModPath((*(_self_))._field_importer, _23d32248b_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1b9b1692a_Ast>> _63517_asts;;
		jule::Slice<_23d21115a_Log> _63527_errors;;
		({
			__jule_tuple_sx_1b9b1692a_Ast__jule_tuple_s_23d21115a_Log __jule_assign_result = _1b9bad2da_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1b9bacdcd_ImportPackage((*(_self_))._field_importer, (*((*(_61138_imp))))._field_Path, (!((*((*(_61138_imp))))._field_Std)));
			_63517_asts = __jule_assign_result.__jule_result_arg0;
			_63527_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_63527_errors.len() > 0LL)) {
			((*(_self_))._field_errors).append(_63527_errors);;
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1b9b60347_checkPackageAccessibility(_self_.ptr(), _61161_decl, &(_63013_oldMod), &((*((*(_61138_imp))))._field_Path));
		{
			auto expr = &(_63517_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b9bc78ed:;
			if (it != expr_end) {
				jule::Ptr<_1b9b1692a_Ast> _64325_ast = *it;
				{
					jule::Ptr<_1b9c57ce1_SymbolTable> _64425_table = nullptr;;
					({
						__jule_tuple_x_1b9c57ce1_SymbolTable__jule_tuple_s_23d21115a_Log __jule_assign_result = _1b9cada06_buildSymbols(&(_64325_ast), &((*(_self_))._field_importer), _self_);
						_64425_table = __jule_assign_result.__jule_result_arg0;
						_63527_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_63527_errors.len() > 0LL)) {
						((*(_self_))._field_errors).append(_63527_errors);;
						__jule_func_result = false;
						return __jule_func_result;;
					};
					{ jule::Slice<jule::Ptr<_1b9c57ce1_SymbolTable>> &__jule_push_dest = (*((*((*(_61138_imp))))._field_Package))._field_Files; __jule_push_dest.push(_64425_table); };
				}
				_iter_next_1b9bc78ed:;
				++it;
				goto _iter_begin_1b9bc78ed;
			}
			_iter_end_1b9bc78ed:;
		};
	};
	_1b9b5dda1_implImportSelections(_self_.ptr(), _61138_imp, _61161_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1b9bb1200_ImportInfo> _1b9b60a84_importUseDecl(jule::Ptr<_1b9b5b3ed_symbolBuilder> _self_, jule::Ptr<_1b9b31637_UseDecl>* _65838_decl) {
	jule::Ptr<_1b9bb1200_ImportInfo> _65913_imp = _1b9b5d6ec_buildImport(_self_, _65838_decl);;
	if ((_65913_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _66513_ok = _1b9b5da3d_checkDuplicateUseDecl(_self_.ptr(), &(_65913_imp));;
	if ((!(_66513_ok))) {
		return nullptr;;
	};
	_66513_ok=_1b9b60743_importPackage(_self_, &(_65913_imp), _65838_decl);
	{ jule::Slice<jule::Ptr<_1b9bb1200_ImportInfo>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Imports; __jule_push_dest.push(_65913_imp); };
	if (_66513_ok) {
		_1b9bad2da_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1b9bad186_Imported((*(_self_))._field_importer, _65913_imp);
		return _65913_imp;;
	};
	return nullptr;;
}



inline void _1b9b60c82_importUseDecls(jule::Ptr<_1b9b5b3ed_symbolBuilder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c774e104:;
		if (it != expr_end) {
			jule::Ptr<_1b9b31637_UseDecl> _68021_decl = *it;
			{
				_1b9b60a84_importUseDecl(_self_, &(_68021_decl));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					goto _iter_end_1c774e104;
				};
			}
			_iter_next_1c774e104:;
			++it;
			goto _iter_begin_1c774e104;
		}
		_iter_end_1c774e104:;
	};
}



inline void _1b9b6103a_appendNode(_1b9b5b3ed_symbolBuilder* _self_, _1b9b177b6_Node* _68934_node) {
	{
		auto &_match_expr{ (*(_68934_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1c7751414:;
			{
				{ jule::Slice<jule::Ptr<_1b9b8988d_Impl>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Impls; __jule_push_dest.push(_1b9b5ad37_buildImpl((*(_68934_node))._field_Data.cast_ptr<_1b9b35196_Impl>(&__jule_any_type11))); };
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1c7751667:;
			{
				jule::Ptr<_1b9c8c3db_TypeAlias> _69417_ta = _1b9b57273_buildTypeAlias((*(_68934_node))._field_Data.cast_ptr<_1b9b3012a_TypeAliasDecl>(&__jule_any_type12));;
				{ jule::Slice<jule::Ptr<_1b9c8c3db_TypeAlias>> &__jule_push_dest = (*((*(_self_))._field_table))._field_TypeAliases; __jule_push_dest.push(_69417_ta); };
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1c77516cd:;
			{
				jule::Ptr<_1b9b393a9_Struct> _69717_srct = _1b9b57b47_buildStruct((*(_68934_node))._field_Data.cast_ptr<_1b9b342e9_StructDecl>(&__jule_any_type13));;
				{ jule::Slice<jule::Ptr<_1b9b393a9_Struct>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Structs; __jule_push_dest.push(_69717_srct); };
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1c7751744:;
			{
				jule::Ptr<_1b9b4e26a_Fn> _70017_f = _1b9b5883a_buildFunc((*(_68934_node))._field_Data.cast_ptr<_1b9b2a477_FnDecl>(&__jule_any_type14));;
				{ jule::Slice<jule::Ptr<_1b9b4e26a_Fn>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Funcs; __jule_push_dest.push(_70017_f); };
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c77517aa:;
			{
				jule::Ptr<_1b9b62514_Trait> _70317_t = _1b9b59187_buildTrait((*(_68934_node))._field_Data.cast_ptr<_1b9b34a36_TraitDecl>(&__jule_any_type15));;
				{ jule::Slice<jule::Ptr<_1b9b62514_Trait>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Traits; __jule_push_dest.push(_70317_t); };
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1c775202a:;
			{
				jule::Ptr<_1b9c09611_Var> _70617_v = _1b9b5a7a4_buildVar((*(_68934_node))._field_Data.cast_ptr<_1b9b2b555_VarDecl>(&__jule_any_type16));;
				{ jule::Slice<jule::Ptr<_1b9c09611_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_70617_v); };
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1c7752091:;
			{
				jule::Ptr<_1b9b64c0e_Enum> _70917_e = _1b9b59b8d_buildEnum((*(_68934_node))._field_Data.cast_ptr<_1b9b3269e_EnumDecl>(&__jule_any_type17));;
				{ jule::Slice<jule::Ptr<_1b9b64c0e_Enum>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Enums; __jule_push_dest.push(_70917_e); };
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1c7752107:;
			{
				jule::Ptr<_1b9b66419_TypeEnum> _71217_e = _1b9b5a4da_buildTypeEnum((*(_68934_node))._field_Data.cast_ptr<_1b9b33639_TypeEnumDecl>(&__jule_any_type18));;
				{ jule::Slice<jule::Ptr<_1b9b66419_TypeEnum>> &__jule_push_dest = (*((*(_self_))._field_table))._field_TypeEnums; __jule_push_dest.push(_71217_e); };
			}
		}
		else {
			_case_begin_1c7751601:;
			{
				_1b9b5bc8e_pushErr(_self_, &((*(_68934_node))._field_Token), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c7750743:;
	};
}



inline void _1b9b61238_appendNodes(_1b9b5b3ed_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c775932e:;
		if (it != expr_end) {
			_1b9b177b6_Node _72021_node = *it;
			{
				_1b9b6103a_appendNode(_self_, &(_72021_node));
			}
			_iter_next_1c775932e:;
			++it;
			goto _iter_begin_1c775932e;
		}
		_iter_end_1c775932e:;
	};
}



inline void _1b9b614e1_pushDirectivePass(_1b9b5b3ed_symbolBuilder* _self_, jule::Ptr<_1b9b17bd4_Directive>* _72541_d) {
	if (((*((*(_72541_d))))._field_Args.len() == 0LL)) {
		_1b9b5bc8e_pushErr(_self_, &((*((*(_72541_d))))._field_Tag), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_72541_d))))._field_Args.len() > 1LL)) {
		jule::Ptr<_1b9b032eb_Token> _73013_arg = (*((*(_72541_d))))._field_Args[1LL];;
		_1b9b5bc8e_pushErr(_self_, &(_73013_arg), jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_72541_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1b9b032eb_Token> _7349_arg = (*((*(_72541_d))))._field_Args[0LL];;
	if (((*(_7349_arg))._field_Id != static_cast<jule::U32>(4LLU))) {
		_1b9b5bc8e_pushErr(_self_, &(_7349_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_7349_arg))._field_Kind[0LL] != '\"')) {
		_1b9b5bc8e_pushErr(_self_, &(_7349_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<_1b9b56838_Pass> &__jule_push_dest = (*((*(_self_))._field_table))._field_Passes; __jule_push_dest.push(_1b9b56838_Pass{._field_Token=(*((*(_72541_d))))._field_Tag, ._field_Text=(*(_7349_arg))._field_Kind.slice(1LL, ((*(_7349_arg))._field_Kind.len() - 1LL))}); };
}



inline void _1b9b616de_appendTopDirectives(_1b9b5b3ed_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c776049a:;
		if (it != expr_end) {
			jule::Ptr<_1b9b17bd4_Directive> _75221_d = *it;
			{
				{
					auto &_match_expr{ (*((*(_75221_d))._field_Tag))._field_Kind };
					
					if (_match_expr == jule::Str::lit("pass", 4)) {
						_case_begin_1c7762601:;
						{
							_1b9b614e1_pushDirectivePass(_self_, &(_75221_d));
						}
					}
					_match_end_1c7762546:;
				};
			}
			_iter_next_1c776049a:;
			++it;
			goto _iter_begin_1c776049a;
		}
		_iter_end_1c776049a:;
	};
}



inline void _1b9b618dc_build(jule::Ptr<_1b9b5b3ed_symbolBuilder> _self_) {
	(*(_self_))._field_table=jule::new_ptr<_1b9c57ce1_SymbolTable>(_1b9c57ce1_SymbolTable{._field_File=(*((*(_self_))._field_ast))._field_File, });
	_1b9b616de_appendTopDirectives(_self_.ptr());
	_1b9b60c82_importUseDecls(_self_);
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
	_1b9b61238_appendNodes(_self_.ptr());
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b5b3ed_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b9b628cc_Str(_1b9b62514_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1b9b62c1d_Equal(jule::Ptr<_1b9b62514_Trait> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _2521_other) {
	jule::Ptr<_1b9b62514_Trait> _269_trt = _1b9c92138_Trait(_2521_other.ptr());;
	return (_self_ == _269_trt);;
}



inline jule::Ptr<_1b9b4e26a_Fn> _1b9b631b3_FindMethod(_1b9b62514_Trait* _self_, jule::Str _3429_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7766292:;
		if (it != expr_end) {
			jule::Ptr<_1b9b4e26a_Fn> _3521_f = *it;
			{
				if (((*(_3521_f))._field_Ident == _3429_ident)) {
					return _3521_f;;
				};
			}
			_iter_next_1c7766292:;
			++it;
			goto _iter_begin_1c7766292;
		}
		_iter_end_1c7766292:;
	};
	return _1b9b63845_findMethodInherit(_self_, &(_3429_ident));;
}



inline jule::Ptr<_1b9b4e26a_Fn> _1b9b63845_findMethodInherit(_1b9b62514_Trait* _self_, jule::Str* _5537_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7768e21:;
		if (it != expr_end) {
			jule::Ptr<_1b9c953a0_TypeSymbol> _5621_i = *it;
			{
				if (((*(_5621_i))._field_Kind == nullptr)) {
					goto _iter_next_1c7768e21;
				};
				jule::Ptr<_1b9b62514_Trait> _6017_t = _1b9c92138_Trait((*(_5621_i))._field_Kind.ptr());;
				if ((_6017_t != nullptr)) {
					jule::Ptr<_1b9b4e26a_Fn> _6221_f2 = _1b9b631b3_FindMethod(_6017_t.ptr(), (*(_5537_ident)));;
					if ((_6221_f2 != nullptr)) {
						return _6221_f2;;
					};
				};
			}
			_iter_next_1c7768e21:;
			++it;
			goto _iter_begin_1c7768e21;
		}
		_iter_end_1c7768e21:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b62514_Trait _Src) {
	_Stream << _1b9b628cc_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1b9b64549_AutoExpr(_1b9b64192_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b64192_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b9b65083_Str(_1b9b64c0e_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1b9b653c4_Equal(jule::Ptr<_1b9b64c0e_Enum> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _3821_other) {
	jule::Ptr<_1b9b64c0e_Enum> _399_enm = _1b9c910d2_Enum(_3821_other.ptr());;
	return (_self_ == _399_enm);;
}



inline jule::Ptr<_1b9b64192_EnumItem> _1b9b65803_FindItem(_1b9b64c0e_Enum* _self_, jule::Str _4727_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c776c870:;
		if (it != expr_end) {
			jule::Ptr<_1b9b64192_EnumItem> _4821_item = *it;
			{
				if (((*(_4821_item))._field_Ident == _4727_ident)) {
					return _4821_item;;
				};
			}
			_iter_next_1c776c870:;
			++it;
			goto _iter_begin_1c776c870;
		}
		_iter_end_1c776c870:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b64c0e_Enum _Src) {
	_Stream << _1b9b65083_Str(&_Src);
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b65d42_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b9b6675a_Str(_1b9b66419_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1b9b66a9b_Equal(jule::Ptr<_1b9b66419_TypeEnum> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _8021_other) {
	jule::Ptr<_1b9b66419_TypeEnum> _819_tenm = _1b9c91368_TypeEnum(_8021_other.ptr());;
	return (_self_ == _819_tenm);;
}



inline jule::Ptr<_1b9b65d42_TypeEnumItem> _1b9b66eca_FindItem(_1b9b66419_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c776e9e8:;
		if (it != expr_end) {
			jule::Ptr<_1b9b65d42_TypeEnumItem> _9021_item = *it;
			{
				if (((*(_9021_item))._field_Ident == _8927_ident)) {
					return _9021_item;;
				};
			}
			_iter_next_1c776e9e8:;
			++it;
			goto _iter_begin_1c776e9e8;
		}
		_iter_end_1c776e9e8:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b66419_TypeEnum _Src) {
	_Stream << _1b9b6675a_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b9b68b7a_Str(_1b9b687b2_comptimeRange* _self_) {
	return jule::Str::lit("comptimeRange", 13);;
}



inline jule::Bool _1b9b68ebb_Equal(jule::Ptr<_1b9b687b2_comptimeRange> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _2521_other) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b687b2_comptimeRange _Src) {
	_Stream << _1b9b68b7a_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b9b69692_Str(_1b9b6931d_comptimeStructField* _self_) {
	return jule::Str::lit("comptimeStructField", 19);;
}



inline jule::Bool _1b9b699d3_Equal(jule::Ptr<_1b9b6931d_comptimeStructField> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _3521_other) {
	return false;;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b6a000__Name(jule::Ptr<_1b9b6931d_comptimeStructField> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _3926_e, jule::Ptr<_1b9b21825_FnCallExpr>* _3941_fc) {
	if (((*((*(_3941_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_3926_e)).ptr(), (*((*((*(_3941_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ec682ce3_Const> _4413_constant = static__1ec683a80_NewStr((*((*((*(_self_))._field_field))._field_Decl))._field_Ident);;
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d799b2_primStr, ._field_Model=jule::Any(_4413_constant, &__jule_any_type19), ._field_Constant=_4413_constant});;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b6a3eb__Type(jule::Ptr<_1b9b6931d_comptimeStructField> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _5230_e, jule::Ptr<_1b9b21825_FnCallExpr>* _5245_fc) {
	if (((*((*(_5245_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_5230_e)).ptr(), (*((*((*(_5245_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1b9b85a10_buildComptimeTypeInfoData(&((*((*(_5230_e))))._field_s), &((*((*(_self_))._field_field))._field_Kind));;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b6a7e7__Public(jule::Ptr<_1b9b6931d_comptimeStructField> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _6032_e, jule::Ptr<_1b9b21825_FnCallExpr>* _6047_fc) {
	if (((*((*(_6047_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_6032_e)).ptr(), (*((*((*(_6047_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ec682ce3_Const> _6513_constant = static__1ec6837b6_NewBool((*((*((*(_self_))._field_field))._field_Decl))._field_Public);;
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d79c7b_primBool, ._field_Model=jule::Any(_6513_constant, &__jule_any_type19), ._field_Constant=_6513_constant});;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b6ab38_subIdent(jule::Ptr<_1b9b6931d_comptimeStructField> _self_, jule::Str* _7329_ident) {
	{
		auto &_match_expr{ (*(_7329_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1c777bab0:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _7617_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _7733_e, jule::Ptr<_1b9b21825_FnCallExpr>* _7748_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b6a000__Name(_self_, _7733_e, _7748_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_7617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1c777bb26:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _8317_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _8433_e, jule::Ptr<_1b9b21825_FnCallExpr>* _8448_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b6a7e7__Public(_self_, _8433_e, _8448_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_8317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1c777bb8c:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _9017_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _9133_e, jule::Ptr<_1b9b21825_FnCallExpr>* _9148_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b6a3eb__Type(_self_, _9133_e, _9148_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_9017_method));;
			}
		}
		else {
			_case_begin_1c777ba49:;
			{
				return nullptr;;
			}
		}
		_match_end_1c777b9c2:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b6931d_comptimeStructField _Src) {
	_Stream << _1b9b69692_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b9b6b353_Str(_1b9b6aebd_comptimeStructFields* _self_) {
	return jule::Str::lit("comptimeStructFields", 20);;
}



inline jule::Bool _1b9b6b694_Equal(jule::Ptr<_1b9b6aebd_comptimeStructFields> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _10921_other) {
	return false;;
}



inline void _1b9b6bb17_ready(_1b9b6aebd_comptimeStructFields* _self_, jule::Ptr<_1b9c09611_Var>* _11329_keyA, jule::Ptr<_1b9c09611_Var>* _11346_keyB) {
	if (((*(_11329_keyA)) != nullptr)) {
		(*((*(_11329_keyA))))._field_Constant=true;
		(*((*(_11329_keyA))))._field_Value=jule::new_ptr<_1b9c5e15a_Value>(_1b9c5e15a_Value{._field_Data=jule::new_ptr<_1b9c5d016_Data>()});
		(*((*((*((*(_11329_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_11329_keyA))))._field_Kind=(*(_1b9d7cb08_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_11346_keyB)) != nullptr)) {
		(*((*(_11346_keyB))))._field_Constant=true;
		(*((*(_11346_keyB))))._field_Value=jule::new_ptr<_1b9c5e15a_Value>(_1b9c5e15a_Value{._field_Data=jule::new_ptr<_1b9c5d016_Data>()});
		(*((*(_11346_keyB))))._field_Kind=jule::new_ptr<_1b9c953a0_TypeSymbol>(_1b9c953a0_TypeSymbol{._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(jule::new_ptr<_1b9b6931d_comptimeStructField>(), 6)})});
	};
}



inline void _1b9b6c035_step(_1b9b6aebd_comptimeStructFields* _self_, jule::I32 _13523_i, jule::Ptr<_1b9c09611_Var>* _13536_keyA, jule::Ptr<_1b9c09611_Var>* _13553_keyB) {
	if (((*(_13536_keyA)) != nullptr)) {
		(*((*((*((*(_13536_keyA))))._field_Value))._field_Data))._field_Constant=static__1ec683233_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_13523_i)));
		(*((*((*((*(_13536_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_13536_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_13553_keyB)) != nullptr)) {
		(*(_1b9c92e08_comptimeStructField((*((*((*(_13553_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_13523_i];
	};
}



inline jule::I32 _1b9b6c2bb_len(_1b9b6aebd_comptimeStructFields* _self_) {
	return static_cast<jule::I32>((*(_self_))._field_fields.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b6aebd_comptimeStructFields _Src) {
	_Stream << _1b9b6b353_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b9b6c94d_Str(_1b9b6c5c9_comptimeStatic* _self_) {
	return jule::Str::lit("comptimeStatic", 14);;
}



inline jule::Bool _1b9b6cc8e_Equal(jule::Ptr<_1b9b6c5c9_comptimeStatic> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _15921_other) {
	return false;;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b6d2ab__Name(jule::Ptr<_1b9b6c5c9_comptimeStatic> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _16326_e, jule::Ptr<_1b9b21825_FnCallExpr>* _16341_fc) {
	if (((*((*(_16341_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_16326_e)).ptr(), (*((*((*(_16341_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ec682ce3_Const> _16813_constant = static__1ec683a80_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d799b2_primStr, ._field_Model=jule::Any(_16813_constant, &__jule_any_type19), ._field_Constant=_16813_constant});;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b6d6a7__Type(jule::Ptr<_1b9b6c5c9_comptimeStatic> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _17630_e, jule::Ptr<_1b9b21825_FnCallExpr>* _17645_fc) {
	if (((*((*(_17645_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_17630_e)).ptr(), (*((*((*(_17645_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1b9b85a10_buildComptimeTypeInfoData(&((*((*(_17630_e))))._field_s), &((*((*((*(_self_))._field_field))._field_Kind))._field_Kind));;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b6daa3__Public(jule::Ptr<_1b9b6c5c9_comptimeStatic> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _18432_e, jule::Ptr<_1b9b21825_FnCallExpr>* _18447_fc) {
	if (((*((*(_18447_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_18432_e)).ptr(), (*((*((*(_18447_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ec682ce3_Const> _18913_constant = static__1ec6837b6_NewBool((*((*(_self_))._field_field))._field_Public);;
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d79c7b_primBool, ._field_Model=jule::Any(_18913_constant, &__jule_any_type19), ._field_Constant=_18913_constant});;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b6dde4_subIdent(jule::Ptr<_1b9b6c5c9_comptimeStatic> _self_, jule::Str* _19729_ident) {
	{
		auto &_match_expr{ (*(_19729_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1c9ab8c74:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _20017_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _20133_e, jule::Ptr<_1b9b21825_FnCallExpr>* _20148_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b6d2ab__Name(_self_, _20133_e, _20148_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_20017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1c9ab8cda:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _20717_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _20833_e, jule::Ptr<_1b9b21825_FnCallExpr>* _20848_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b6daa3__Public(_self_, _20833_e, _20848_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_20717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1c9ab8d51:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _21417_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _21533_e, jule::Ptr<_1b9b21825_FnCallExpr>* _21548_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b6d6a7__Type(_self_, _21533_e, _21548_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_21417_method));;
			}
		}
		else {
			_case_begin_1c9ab8c0d:;
			{
				return nullptr;;
			}
		}
		_match_end_1c9ab8b86:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b6c5c9_comptimeStatic _Src) {
	_Stream << _1b9b6c94d_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b9b6e60e_Str(_1b9b6e28a_comptimeStatics* _self_) {
	return jule::Str::lit("comptimeStatics", 15);;
}



inline jule::Bool _1b9b6e950_Equal(jule::Ptr<_1b9b6e28a_comptimeStatics> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _23321_other) {
	return false;;
}



inline void _1b9b6edc3_ready(_1b9b6e28a_comptimeStatics* _self_, jule::Ptr<_1b9c09611_Var>* _23729_keyA, jule::Ptr<_1b9c09611_Var>* _23746_keyB) {
	if (((*(_23729_keyA)) != nullptr)) {
		(*((*(_23729_keyA))))._field_Constant=true;
		(*((*(_23729_keyA))))._field_Value=jule::new_ptr<_1b9c5e15a_Value>(_1b9c5e15a_Value{._field_Data=jule::new_ptr<_1b9c5d016_Data>()});
		(*((*((*((*(_23729_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_23729_keyA))))._field_Kind=(*(_1b9d7cb08_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_23746_keyB)) != nullptr)) {
		(*((*(_23746_keyB))))._field_Constant=true;
		(*((*(_23746_keyB))))._field_Value=jule::new_ptr<_1b9c5e15a_Value>(_1b9c5e15a_Value{._field_Data=jule::new_ptr<_1b9c5d016_Data>()});
		(*((*(_23746_keyB))))._field_Kind=jule::new_ptr<_1b9c953a0_TypeSymbol>(_1b9c953a0_TypeSymbol{._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(jule::new_ptr<_1b9b6c5c9_comptimeStatic>(), 8)})});
	};
}



inline void _1b9b702e1_step(_1b9b6e28a_comptimeStatics* _self_, jule::I32 _25923_i, jule::Ptr<_1b9c09611_Var>* _25936_keyA, jule::Ptr<_1b9c09611_Var>* _25953_keyB) {
	if (((*(_25936_keyA)) != nullptr)) {
		(*((*((*((*(_25936_keyA))))._field_Value))._field_Data))._field_Constant=static__1ec683233_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_25923_i)));
		(*((*((*((*(_25936_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_25936_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_25953_keyB)) != nullptr)) {
		(*(_1b9c94712_comptimeStatic((*((*((*(_25953_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_25923_i];
	};
}



inline jule::I32 _1b9b70577_len(_1b9b6e28a_comptimeStatics* _self_) {
	return static_cast<jule::I32>((*(_self_))._field_fields.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b6e28a_comptimeStatics _Src) {
	_Stream << _1b9b6e60e_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b9b70c09_Str(_1b9b70885_comptimeEnumField* _self_) {
	return jule::Str::lit("comptimeEnumField", 17);;
}



inline jule::Bool _1b9b7104a_Equal(jule::Ptr<_1b9b70885_comptimeEnumField> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _28321_other) {
	return false;;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b71545__Name(jule::Ptr<_1b9b70885_comptimeEnumField> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _28726_e, jule::Ptr<_1b9b21825_FnCallExpr>* _28741_fc) {
	if (((*((*(_28741_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_28726_e)).ptr(), (*((*((*(_28741_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ec682ce3_Const> _29213_constant = static__1ec683a80_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d799b2_primStr, ._field_Model=jule::Any(_29213_constant, &__jule_any_type19), ._field_Constant=_29213_constant});;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b71886_subIdent(jule::Ptr<_1b9b70885_comptimeEnumField> _self_, jule::Str* _30029_ident) {
	{
		auto &_match_expr{ (*(_30029_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1c9ac9b86:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _30317_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _30433_e, jule::Ptr<_1b9b21825_FnCallExpr>* _30448_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b71545__Name(_self_, _30433_e, _30448_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_30317_method));;
			}
		}
		else {
			_case_begin_1c9ac9b20:;
			{
				return nullptr;;
			}
		}
		_match_end_1c9ac9a98:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b70885_comptimeEnumField _Src) {
	_Stream << _1b9b70c09_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b9b72128_Str(_1b9b71b94_comptimeEnumFields* _self_) {
	return jule::Str::lit("comptimeEnumFields", 18);;
}



inline jule::Bool _1b9b72469_Equal(jule::Ptr<_1b9b71b94_comptimeEnumFields> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _32221_other) {
	return false;;
}



inline void _1b9b72865_ready(_1b9b71b94_comptimeEnumFields* _self_, jule::Ptr<_1b9c09611_Var>* _32629_keyA, jule::Ptr<_1b9c09611_Var>* _32646_keyB) {
	if (((*(_32629_keyA)) != nullptr)) {
		(*((*(_32629_keyA))))._field_Constant=true;
		(*((*(_32629_keyA))))._field_Value=jule::new_ptr<_1b9c5e15a_Value>(_1b9c5e15a_Value{._field_Data=jule::new_ptr<_1b9c5d016_Data>()});
		(*((*((*((*(_32629_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_32629_keyA))))._field_Kind=(*(_1b9d7cb08_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_32646_keyB)) != nullptr)) {
		(*((*(_32646_keyB))))._field_Constant=true;
		(*((*(_32646_keyB))))._field_Value=jule::new_ptr<_1b9c5e15a_Value>(_1b9c5e15a_Value{._field_Data=jule::new_ptr<_1b9c5d016_Data>()});
		(*((*(_32646_keyB))))._field_Kind=jule::new_ptr<_1b9c953a0_TypeSymbol>(_1b9c953a0_TypeSymbol{._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(jule::new_ptr<_1b9b70885_comptimeEnumField>(), 10)})});
	};
}



inline void _1b9b72c83_step(_1b9b71b94_comptimeEnumFields* _self_, jule::I32 _34823_i, jule::Ptr<_1b9c09611_Var>* _34836_keyA, jule::Ptr<_1b9c09611_Var>* _34853_keyB) {
	if (((*(_34836_keyA)) != nullptr)) {
		(*((*((*((*(_34836_keyA))))._field_Value))._field_Data))._field_Constant=static__1ec683233_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_34823_i)));
		(*((*((*((*(_34836_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_34836_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_34853_keyB)) != nullptr)) {
		(*(_1b9c93425_comptimeEnumField((*((*((*(_34853_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_34823_i];
	};
}



inline jule::I32 _1b9b73019_len(_1b9b71b94_comptimeEnumFields* _self_) {
	return static_cast<jule::I32>((*(_self_))._field_fields.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b71b94_comptimeEnumFields _Src) {
	_Stream << _1b9b72128_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b9b7369b_Str(_1b9b73327_comptimeParam* _self_) {
	return jule::Str::lit("comptimeParam", 13);;
}



inline jule::Bool _1b9b739dc_Equal(jule::Ptr<_1b9b73327_comptimeParam> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _37221_other) {
	return false;;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b7401a__Name(jule::Ptr<_1b9b73327_comptimeParam> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _37626_e, jule::Ptr<_1b9b21825_FnCallExpr>* _37641_fc) {
	if (((*((*(_37641_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_37626_e)).ptr(), (*((*((*(_37641_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ec682ce3_Const> _38113_constant = static__1ec683a80_NewStr((*((*((*(_self_))._field_param))._field_Decl))._field_Ident);;
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d799b2_primStr, ._field_Model=jule::Any(_38113_constant, &__jule_any_type19), ._field_Constant=_38113_constant});;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b74416__Type(jule::Ptr<_1b9b73327_comptimeParam> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _38930_e, jule::Ptr<_1b9b21825_FnCallExpr>* _38945_fc) {
	if (((*((*(_38945_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_38930_e)).ptr(), (*((*((*(_38945_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1b9b85a10_buildComptimeTypeInfoData(&((*((*(_38930_e))))._field_s), &((*((*(_self_))._field_param))._field_Kind));;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b74812__Variadic(jule::Ptr<_1b9b73327_comptimeParam> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _39734_e, jule::Ptr<_1b9b21825_FnCallExpr>* _39749_fc) {
	if (((*((*(_39749_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_39734_e)).ptr(), (*((*((*(_39749_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ec682ce3_Const> _40213_constant = static__1ec6837b6_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Variadic);;
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d79c7b_primBool, ._field_Model=jule::Any(_40213_constant, &__jule_any_type19), ._field_Constant=_40213_constant});;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b74c0d__Reference(jule::Ptr<_1b9b73327_comptimeParam> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _41035_e, jule::Ptr<_1b9b21825_FnCallExpr>* _41050_fc) {
	if (((*((*(_41050_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_41035_e)).ptr(), (*((*((*(_41050_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ec682ce3_Const> _41513_constant = static__1ec6837b6_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Reference);;
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d79c7b_primBool, ._field_Model=jule::Any(_41513_constant, &__jule_any_type19), ._field_Constant=_41513_constant});;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b7504e_subIdent(jule::Ptr<_1b9b73327_comptimeParam> _self_, jule::Str* _42329_ident) {
	{
		auto &_match_expr{ (*(_42329_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1c9ade481:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _42617_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _42733_e, jule::Ptr<_1b9b21825_FnCallExpr>* _42748_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b7401a__Name(_self_, _42733_e, _42748_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_42617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Variadic", 8)) {
			_case_begin_1c9ade4e7:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _43317_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _43433_e, jule::Ptr<_1b9b21825_FnCallExpr>* _43448_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b74812__Variadic(_self_, _43433_e, _43448_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_43317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Reference", 9)) {
			_case_begin_1c9ade56e:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _44017_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _44133_e, jule::Ptr<_1b9b21825_FnCallExpr>* _44148_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b74c0d__Reference(_self_, _44133_e, _44148_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_44017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1c9ade5e6:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _44717_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _44833_e, jule::Ptr<_1b9b21825_FnCallExpr>* _44848_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b74416__Type(_self_, _44833_e, _44848_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_44717_method));;
			}
		}
		else {
			_case_begin_1c9ade41a:;
			{
				return nullptr;;
			}
		}
		_match_end_1c9ade393:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b73327_comptimeParam _Src) {
	_Stream << _1b9b7369b_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b9b75912_Str(_1b9b7558d_comptimeParams* _self_) {
	return jule::Str::lit("comptimeParams", 14);;
}



inline jule::Bool _1b9b75c53_Equal(jule::Ptr<_1b9b7558d_comptimeParams> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _46621_other) {
	return false;;
}



inline void _1b9b761c6_ready(_1b9b7558d_comptimeParams* _self_, jule::Ptr<_1b9c09611_Var>* _47029_keyA, jule::Ptr<_1b9c09611_Var>* _47046_keyB) {
	if (((*(_47029_keyA)) != nullptr)) {
		(*((*(_47029_keyA))))._field_Constant=true;
		(*((*(_47029_keyA))))._field_Value=jule::new_ptr<_1b9c5e15a_Value>(_1b9c5e15a_Value{._field_Data=jule::new_ptr<_1b9c5d016_Data>()});
		(*((*((*((*(_47029_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_47029_keyA))))._field_Kind=(*(_1b9d7cb08_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_47046_keyB)) != nullptr)) {
		(*((*(_47046_keyB))))._field_Constant=true;
		(*((*(_47046_keyB))))._field_Value=jule::new_ptr<_1b9c5e15a_Value>(_1b9c5e15a_Value{._field_Data=jule::new_ptr<_1b9c5d016_Data>()});
		(*((*(_47046_keyB))))._field_Kind=jule::new_ptr<_1b9c953a0_TypeSymbol>(_1b9c953a0_TypeSymbol{._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(jule::new_ptr<_1b9b73327_comptimeParam>(), 12)})});
	};
}



inline void _1b9b765e4_step(_1b9b7558d_comptimeParams* _self_, jule::I32 _49223_i, jule::Ptr<_1b9c09611_Var>* _49236_keyA, jule::Ptr<_1b9c09611_Var>* _49253_keyB) {
	if (((*(_49236_keyA)) != nullptr)) {
		(*((*((*((*(_49236_keyA))))._field_Value))._field_Data))._field_Constant=static__1ec683233_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_49223_i)));
		(*((*((*((*(_49236_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_49236_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_49253_keyB)) != nullptr)) {
		(*(_1b9c93942_comptimeParam((*((*((*(_49253_keyB))))._field_Kind))._field_Kind.ptr())))._field_param=(*(_self_))._field_params[_49223_i];
	};
}



inline jule::I32 _1b9b7687a_len(_1b9b7558d_comptimeParams* _self_) {
	return static_cast<jule::I32>((*(_self_))._field_params.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b7558d_comptimeParams _Src) {
	_Stream << _1b9b75912_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b9b7700c_Str(_1b9b76b88_comptimeTypeInfos* _self_) {
	return jule::Str::lit("comptimeTypeInfos", 17);;
}



inline jule::Bool _1b9b7734d_Equal(jule::Ptr<_1b9b76b88_comptimeTypeInfos> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _51621_other) {
	return false;;
}



inline void _1b9b777c1_ready(_1b9b76b88_comptimeTypeInfos* _self_, jule::Ptr<_1b9c09611_Var>* _52029_keyA, jule::Ptr<_1b9c09611_Var>* _52046_keyB) {
	if (((*(_52029_keyA)) != nullptr)) {
		(*((*(_52029_keyA))))._field_Constant=true;
		(*((*(_52029_keyA))))._field_Value=jule::new_ptr<_1b9c5e15a_Value>(_1b9c5e15a_Value{._field_Data=jule::new_ptr<_1b9c5d016_Data>()});
		(*((*((*((*(_52029_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_52029_keyA))))._field_Kind=(*(_1b9d7cb08_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_52046_keyB)) != nullptr)) {
		(*((*(_52046_keyB))))._field_Constant=true;
		(*((*(_52046_keyB))))._field_Value=jule::new_ptr<_1b9c5e15a_Value>(_1b9c5e15a_Value{._field_Data=jule::new_ptr<_1b9c5d016_Data>()});
		(*((*(_52046_keyB))))._field_Kind=jule::new_ptr<_1b9c953a0_TypeSymbol>(_1b9c953a0_TypeSymbol{._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(jule::new_ptr<_1b9b78283_comptimeTypeInfo>(), 15)})});
	};
}



inline void _1b9b77bde_step(_1b9b76b88_comptimeTypeInfos* _self_, jule::I32 _54223_i, jule::Ptr<_1b9c09611_Var>* _54236_keyA, jule::Ptr<_1b9c09611_Var>* _54253_keyB) {
	if (((*(_54236_keyA)) != nullptr)) {
		(*((*((*((*(_54236_keyA))))._field_Value))._field_Data))._field_Constant=static__1ec683233_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_54223_i)));
		(*((*((*((*(_54236_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_54236_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_54253_keyB)) != nullptr)) {
		(*((*((*((*(_54253_keyB))))._field_Kind))._field_Kind))._field_Kind=jule::Trait<_1b9c8cc27_Kind>((*(_self_))._field_types[_54223_i], 15);
	};
}



inline jule::I32 _1b9b77e75_len(_1b9b76b88_comptimeTypeInfos* _self_) {
	return static_cast<jule::I32>((*(_self_))._field_types.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b76b88_comptimeTypeInfos _Src) {
	_Stream << _1b9b7700c_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b9b78607_Str(_1b9b78283_comptimeTypeInfo* _self_) {
	return ((jule::Str::lit("comptimeTypeInfo[", 17) + _1b9c8d596_Str((*(_self_))._field_base.ptr())) + jule::Str::lit("]", 1));;
}



inline jule::Bool _1b9b78948_Equal(jule::Ptr<_1b9b78283_comptimeTypeInfo> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _56621_other) {
	return false;;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b79097__Str(jule::Ptr<_1b9b78283_comptimeTypeInfo> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _57025_e, jule::Ptr<_1b9b21825_FnCallExpr>* _57040_fc) {
	if (((*((*(_57040_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_57025_e)).ptr(), (*((*((*(_57040_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Str", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ec682ce3_Const> _57513_constant = static__1ec683a80_NewStr(_1b9c8d596_Str((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d799b2_primStr, ._field_Model=jule::Any(_57513_constant, &__jule_any_type19), ._field_Constant=_57513_constant});;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b79493__Kind(jule::Ptr<_1b9b78283_comptimeTypeInfo> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _58330_e, jule::Ptr<_1b9b21825_FnCallExpr>* _58345_fc) {
	if (((*((*(_58345_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_58330_e)).ptr(), (*((*((*(_58345_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Kind", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9b64c0e_Enum> _58813_enm = _1b9bb2e5a_FindEnum(_1b9b8568b_findComptimePackage(&((*((*(_58330_e))))._field_s)).ptr(), jule::Str::lit("Kind", 4));;
	jule::Ptr<_1b9b64192_EnumItem> _58917_item = nullptr;;
	{
		
		if (_1b9c8e542_Void((*(_self_))._field_base.ptr())) {
			_case_begin_1c9b0c3a0:;
			{
				_58917_item=_1b9b65803_FindItem(_58813_enm.ptr(), jule::Str::lit("Void", 4));
			}
		}
		else if ((_1b9c91da2_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c9b0c559:;
			{
				_58917_item=_1b9b65803_FindItem(_58813_enm.ptr(), jule::Str::lit("Struct", 6));
			}
		}
		else if ((_1b9c92138_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c9b0c2c3:;
			{
				_58917_item=_1b9b65803_FindItem(_58813_enm.ptr(), jule::Str::lit("Trait", 5));
			}
		}
		else if ((_1b9c90d4b_Ptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c9b0c0b4:;
			{
				if (_1b9c9dad4_IsUnsafe(_1b9c90d4b_Ptr((*(_self_))._field_base.ptr()).ptr())) {
					_58917_item=_1b9b65803_FindItem(_58813_enm.ptr(), jule::Str::lit("UnsafePtr", 9));
				} else {
					_58917_item=_1b9b65803_FindItem(_58813_enm.ptr(), jule::Str::lit("Ptr", 3));
				};
			}
		}
		else if ((_1b9c90ab5_Sptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c9b0c12a:;
			{
				_58917_item=_1b9b65803_FindItem(_58813_enm.ptr(), jule::Str::lit("Ref", 3));
			}
		}
		else if ((_1b9c910d2_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c9b0cb97:;
			{
				_58917_item=_1b9b65803_FindItem(_58813_enm.ptr(), jule::Str::lit("Enum", 4));
			}
		}
		else if ((_1b9c923be_Map((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c9b0cc0d:;
			{
				_58917_item=_1b9b65803_FindItem(_58813_enm.ptr(), jule::Str::lit("Map", 3));
			}
		}
		else if ((_1b9c91885_Slc((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c9b0cc74:;
			{
				_58917_item=_1b9b65803_FindItem(_58813_enm.ptr(), jule::Str::lit("Slice", 5));
			}
		}
		else if ((_1b9c915ee_Arr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c9b0cceb:;
			{
				_58917_item=_1b9b65803_FindItem(_58813_enm.ptr(), jule::Str::lit("Array", 5));
			}
		}
		else if ((_1b9c91b1b_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c9b0cd73:;
			{
				_58917_item=_1b9b65803_FindItem(_58813_enm.ptr(), jule::Str::lit("Func", 4));
			}
		}
		else if ((_1b9c92655_Tup((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c9b0cdea:;
			{
				_58917_item=_1b9b65803_FindItem(_58813_enm.ptr(), jule::Str::lit("Tuple", 5));
			}
		}
		else if ((_1b9c9082e_Prim((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c9b0ce72:;
			{
				jule::Ptr<_1b9c95ca7_Prim> _61813_prim = _1b9c9082e_Prim((*(_self_))._field_base.ptr());;
				{
					
					if (_1b9c994c5_IsAny(_61813_prim.ptr())) {
						_case_begin_1c9b18e28:;
						{
							_58917_item=_1b9b65803_FindItem(_58813_enm.ptr(), jule::Str::lit("Any", 3));
						}
					}
					else if (_1b9c98ea8_IsBool(_61813_prim.ptr())) {
						_case_begin_1c9b18d3a:;
						{
							_58917_item=_1b9b65803_FindItem(_58813_enm.ptr(), jule::Str::lit("Bool", 4));
						}
					}
					else if (_1b9c9923e_IsStr(_61813_prim.ptr())) {
						_case_begin_1c9b18b3c:;
						{
							_58917_item=_1b9b65803_FindItem(_58813_enm.ptr(), jule::Str::lit("Str", 3));
						}
					}
					else if (_1b9c981d8_IsF32(_61813_prim.ptr())) {
						_case_begin_1c9b19731:;
						{
							_58917_item=_1b9b65803_FindItem(_58813_enm.ptr(), jule::Str::lit("F32", 3));
						}
					}
					else if (_1b9c9846e_IsF64(_61813_prim.ptr())) {
						_case_begin_1c9b19797:;
						{
							_58917_item=_1b9b65803_FindItem(_58813_enm.ptr(), jule::Str::lit("F64", 3));
						}
					}
					else if (_1b9c96b65_IsI8(_61813_prim.ptr())) {
						_case_begin_1c9b1980d:;
						{
							_58917_item=_1b9b65803_FindItem(_58813_enm.ptr(), jule::Str::lit("I8", 2));
						}
					}
					else if (_1b9c96deb_IsI16(_61813_prim.ptr())) {
						_case_begin_1c9b19874:;
						{
							_58917_item=_1b9b65803_FindItem(_58813_enm.ptr(), jule::Str::lit("I16", 3));
						}
					}
					else if (_1b9c97182_IsI32(_61813_prim.ptr())) {
						_case_begin_1c9b198da:;
						{
							_58917_item=_1b9b65803_FindItem(_58813_enm.ptr(), jule::Str::lit("I32", 3));
						}
					}
					else if (_1b9c97418_IsI64(_61813_prim.ptr())) {
						_case_begin_1c9b19951:;
						{
							_58917_item=_1b9b65803_FindItem(_58813_enm.ptr(), jule::Str::lit("I64", 3));
						}
					}
					else if (_1b9c9769e_IsU8(_61813_prim.ptr())) {
						_case_begin_1c9b199b7:;
						{
							_58917_item=_1b9b65803_FindItem(_58813_enm.ptr(), jule::Str::lit("U8", 2));
						}
					}
					else if (_1b9c97935_IsU16(_61813_prim.ptr())) {
						_case_begin_1c9b19a2d:;
						{
							_58917_item=_1b9b65803_FindItem(_58813_enm.ptr(), jule::Str::lit("U16", 3));
						}
					}
					else if (_1b9c97bbb_IsU32(_61813_prim.ptr())) {
						_case_begin_1c9b19a94:;
						{
							_58917_item=_1b9b65803_FindItem(_58813_enm.ptr(), jule::Str::lit("U32", 3));
						}
					}
					else if (_1b9c97e52_IsU64(_61813_prim.ptr())) {
						_case_begin_1c9b19b0a:;
						{
							_58917_item=_1b9b65803_FindItem(_58813_enm.ptr(), jule::Str::lit("U64", 3));
						}
					}
					else if (_1b9c98705_IsInt(_61813_prim.ptr())) {
						_case_begin_1c9b19b71:;
						{
							_58917_item=_1b9b65803_FindItem(_58813_enm.ptr(), jule::Str::lit("Int", 3));
						}
					}
					else if (_1b9c9898b_IsUint(_61813_prim.ptr())) {
						_case_begin_1c9b19bd7:;
						{
							_58917_item=_1b9b65803_FindItem(_58813_enm.ptr(), jule::Str::lit("Uint", 4));
						}
					}
					else if (_1b9c98c22_IsUintptr(_61813_prim.ptr())) {
						_case_begin_1c9b19c4d:;
						{
							_58917_item=_1b9b65803_FindItem(_58813_enm.ptr(), jule::Str::lit("Uintptr", 7));
						}
					}
					else {
						_case_begin_1c9b18994:;
						{
							jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1b9c8d596_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:653:17"));;
						}
					}
					_match_end_1c9b1893e:;
				};
			}
		}
		else {
			_case_begin_1c9b0be60:;
			{
				jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1b9c8d596_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:656:13"));;
			}
		}
		_match_end_1c9b0baca:;
	};
	return _1b9c8a30c_evalEnumStatic(&(_58813_enm), &(_58917_item));;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b7988e__Bits(jule::Ptr<_1b9b78283_comptimeTypeInfo> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _66130_e, jule::Ptr<_1b9b21825_FnCallExpr>* _66145_fc) {
	if (((*((*(_66145_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_66130_e)).ptr(), (*((*((*(_66145_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9c95ca7_Prim> _6669_prim = _1b9c9082e_Prim((*(_self_))._field_base.ptr());;
	if ((_6669_prim == nullptr)) {
		_1b9c6025a_pushErr((*(_66130_e)).ptr(), (*((*(_66145_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I32 _6719_n = _1ec674c2a_BitsizeOf((*(_6669_prim))._field_Kind);;
	if ((_6719_n == -1LL)) {
		_1b9c6025a_pushErr((*(_66130_e)).ptr(), (*((*(_66145_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ec682ce3_Const> _67613_constant = static__1ec683233_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_6719_n)));;
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d799b2_primStr, ._field_Model=jule::Any(_67613_constant, &__jule_any_type19), ._field_Constant=_67613_constant});;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b79c8a__Elem(jule::Ptr<_1b9b78283_comptimeTypeInfo> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _68430_e, jule::Ptr<_1b9b21825_FnCallExpr>* _68445_fc) {
	if (((*((*(_68445_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_68430_e)).ptr(), (*((*((*(_68445_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9c9d09a_Ptr> _68913_ptr = _1b9c90d4b_Ptr((*(_self_))._field_base.ptr());;
	if ((_68913_ptr != nullptr)) {
		if (_1b9c9dad4_IsUnsafe(_68913_ptr.ptr())) {
			_1b9c6025a_pushErr((*(_68430_e)).ptr(), (*((*(_68445_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		return _1b9b85a10_buildComptimeTypeInfoData(&((*((*(_68430_e))))._field_s), &((*(_68913_ptr))._field_Elem));;
	};
	jule::Ptr<_1b9c997d3_Sptr> _69713_sptr = _1b9c90ab5_Sptr((*(_self_))._field_base.ptr());;
	if ((_69713_sptr != nullptr)) {
		return _1b9b85a10_buildComptimeTypeInfoData(&((*((*(_68430_e))))._field_s), &((*(_69713_sptr))._field_Elem));;
	};
	jule::Ptr<_1b9c9a2a6_Slc> _70113_slice = _1b9c91885_Slc((*(_self_))._field_base.ptr());;
	if ((_70113_slice != nullptr)) {
		return _1b9b85a10_buildComptimeTypeInfoData(&((*((*(_68430_e))))._field_s), &((*(_70113_slice))._field_Elem));;
	};
	jule::Ptr<_1b9c9c5c7_Arr> _70513_array = _1b9c915ee_Arr((*(_self_))._field_base.ptr());;
	if ((_70513_array != nullptr)) {
		return _1b9b85a10_buildComptimeTypeInfoData(&((*((*(_68430_e))))._field_s), &((*(_70513_array))._field_Elem));;
	};
	jule::Ptr<_1b9b64c0e_Enum> _70913_enm = _1b9c910d2_Enum((*(_self_))._field_base.ptr());;
	if ((_70913_enm != nullptr)) {
		return _1b9b85a10_buildComptimeTypeInfoData(&((*((*(_68430_e))))._field_s), &((*((*(_70913_enm))._field_Kind))._field_Kind));;
	};
	_1b9c6025a_pushErr((*(_68430_e)).ptr(), (*((*(_68445_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b7a186__Size(jule::Ptr<_1b9b78283_comptimeTypeInfo> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _71730_e, jule::Ptr<_1b9b21825_FnCallExpr>* _71745_fc) {
	if (((*((*(_71745_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_71730_e)).ptr(), (*((*((*(_71745_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9c9c5c7_Arr> _72213_arr = _1b9c915ee_Arr((*(_self_))._field_base.ptr());;
	if ((_72213_arr == nullptr)) {
		_1b9c6025a_pushErr((*(_71730_e)).ptr(), (*((*(_71745_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ec682ce3_Const> _72713_constant = static__1ec683233_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_72213_arr))._field_N)));;
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d7a6d8_primInt, ._field_Model=jule::Any(_72713_constant, &__jule_any_type19), ._field_Constant=_72713_constant});;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b7a582__Key(jule::Ptr<_1b9b78283_comptimeTypeInfo> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _73529_e, jule::Ptr<_1b9b21825_FnCallExpr>* _73544_fc) {
	if (((*((*(_73544_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_73529_e)).ptr(), (*((*((*(_73544_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9c9b94a_Map> _74013_m = _1b9c923be_Map((*(_self_))._field_base.ptr());;
	if ((_74013_m == nullptr)) {
		_1b9c6025a_pushErr((*(_73529_e)).ptr(), (*((*(_73544_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1b9b85a10_buildComptimeTypeInfoData(&((*((*(_73529_e))))._field_s), &((*(_74013_m))._field_Key));;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b7a97d__Value(jule::Ptr<_1b9b78283_comptimeTypeInfo> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _74831_e, jule::Ptr<_1b9b21825_FnCallExpr>* _74846_fc) {
	if (((*((*(_74846_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_74831_e)).ptr(), (*((*((*(_74846_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9c9b94a_Map> _75313_m = _1b9c923be_Map((*(_self_))._field_base.ptr());;
	if ((_75313_m == nullptr)) {
		_1b9c6025a_pushErr((*(_74831_e)).ptr(), (*((*(_74846_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1b9b85a10_buildComptimeTypeInfoData(&((*((*(_74831_e))))._field_s), &((*(_75313_m))._field_Val));;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b7ad79__Fields(jule::Ptr<_1b9b78283_comptimeTypeInfo> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _76132_e, jule::Ptr<_1b9b21825_FnCallExpr>* _76147_fc) {
	if (((*((*(_76147_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_76132_e)).ptr(), (*((*((*(_76147_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9b3c137_StructIns> _76613_s = _1b9c91da2_Struct((*(_self_))._field_base.ptr());;
	if ((_76613_s != nullptr)) {
		return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(jule::new_ptr<_1b9b6aebd_comptimeStructFields>(_1b9b6aebd_comptimeStructFields{._field_fields=(*(_76613_s))._field_Fields}), 7)}), });;
	};
	jule::Ptr<_1b9b64c0e_Enum> _77613_enm = _1b9c910d2_Enum((*(_self_))._field_base.ptr());;
	if ((_77613_enm != nullptr)) {
		return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(jule::new_ptr<_1b9b71b94_comptimeEnumFields>(_1b9b71b94_comptimeEnumFields{._field_fields=(*(_77613_enm))._field_Items}), 11)}), });;
	};
	_1b9c6025a_pushErr((*(_76132_e)).ptr(), (*((*(_76147_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b7b275__Statics(jule::Ptr<_1b9b78283_comptimeTypeInfo> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _79033_e, jule::Ptr<_1b9b21825_FnCallExpr>* _79048_fc) {
	if (((*((*(_79048_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_79033_e)).ptr(), (*((*((*(_79048_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9b3c137_StructIns> _79513_s = _1b9c91da2_Struct((*(_self_))._field_base.ptr());;
	if ((_79513_s == nullptr)) {
		_1b9c6025a_pushErr((*(_79033_e)).ptr(), (*((*(_79048_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(jule::new_ptr<_1b9b6e28a_comptimeStatics>(_1b9b6e28a_comptimeStatics{._field_fields=(*(_79513_s))._field_Statics}), 9)}), });;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b7b671__Public(jule::Ptr<_1b9b78283_comptimeTypeInfo> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _80932_e, jule::Ptr<_1b9b21825_FnCallExpr>* _80947_fc) {
	if (((*((*(_80947_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_80932_e)).ptr(), (*((*((*(_80947_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Bool _81413_public = false;;
	{
		
		if ((_1b9c91da2_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c9b4aa2b:;
			{
				_81413_public=(*((*(_1b9c91da2_Struct((*(_self_))._field_base.ptr())))._field_Decl))._field_Public;
			}
		}
		else if ((_1b9c92138_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c9b49a08:;
			{
				_81413_public=(*(_1b9c92138_Trait((*(_self_))._field_base.ptr())))._field_Public;
			}
		}
		else if ((_1b9c910d2_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c9b49a6e:;
			{
				_81413_public=(*(_1b9c910d2_Enum((*(_self_))._field_base.ptr())))._field_Public;
			}
		}
		else if ((_1b9c91368_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c9b49ad5:;
			{
				_81413_public=(*(_1b9c91368_TypeEnum((*(_self_))._field_base.ptr())))._field_Public;
			}
		}
		else {
			_case_begin_1c9b49695:;
			{
				_1b9c6025a_pushErr((*(_80932_e)).ptr(), (*((*(_80947_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c9b49574:;
	};
	jule::Ptr<_1ec682ce3_Const> _82813_constant = static__1ec6837b6_NewBool(_81413_public);;
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d79c7b_primBool, ._field_Model=jule::Any(_82813_constant, &__jule_any_type19), ._field_Constant=_82813_constant});;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b7ba6c__Binded(jule::Ptr<_1b9b78283_comptimeTypeInfo> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _83632_e, jule::Ptr<_1b9b21825_FnCallExpr>* _83647_fc) {
	if (((*((*(_83647_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_83632_e)).ptr(), (*((*((*(_83647_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ec682ce3_Const> _84113_constant = static__1ec6837b6_NewBool(_1b9c8e025_Binded((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d79c7b_primBool, ._field_Model=jule::Any(_84113_constant, &__jule_any_type19), ._field_Constant=_84113_constant});;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b7be68__Ordered(jule::Ptr<_1b9b78283_comptimeTypeInfo> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _84929_e, jule::Ptr<_1b9b21825_FnCallExpr>* _84944_fc) {
	if (((*((*(_84944_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_84929_e)).ptr(), (*((*((*(_84944_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Ordered", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ec682ce3_Const> _85413_constant = static__1ec6837b6_NewBool(_1b9c8ece5_Ordered((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d799b2_primStr, ._field_Model=jule::Any(_85413_constant, &__jule_any_type19), ._field_Constant=_85413_constant});;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b7c364__Comparable(jule::Ptr<_1b9b78283_comptimeTypeInfo> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _86232_e, jule::Ptr<_1b9b21825_FnCallExpr>* _86247_fc) {
	if (((*((*(_86247_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_86232_e)).ptr(), (*((*((*(_86247_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Comparable", 10), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ec682ce3_Const> _86713_constant = static__1ec6837b6_NewBool(_1b9c8e7c8_Comparable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d799b2_primStr, ._field_Model=jule::Any(_86713_constant, &__jule_any_type19), ._field_Constant=_86713_constant});;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b7c760__Mutable(jule::Ptr<_1b9b78283_comptimeTypeInfo> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _87529_e, jule::Ptr<_1b9b21825_FnCallExpr>* _87544_fc) {
	if (((*((*(_87544_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_87529_e)).ptr(), (*((*((*(_87544_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ec682ce3_Const> _88013_constant = static__1ec6837b6_NewBool(_1b9c8ea5e_Mutable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d79c7b_primBool, ._field_Model=jule::Any(_88013_constant, &__jule_any_type19), ._field_Constant=_88013_constant});;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b7cb5b__Types(jule::Ptr<_1b9b78283_comptimeTypeInfo> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _88831_e, jule::Ptr<_1b9b21825_FnCallExpr>* _88846_fc) {
	if (((*((*(_88846_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_88831_e)).ptr(), (*((*((*(_88846_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9c9ad9a_Tuple> _89313_tup = _1b9c92655_Tup((*(_self_))._field_base.ptr());;
	if ((_89313_tup == nullptr)) {
		_1b9c6025a_pushErr((*(_88831_e)).ptr(), (*((*(_88846_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9b76b88_comptimeTypeInfos> _89813_infos = jule::new_ptr<_1b9b76b88_comptimeTypeInfos>(_1b9b76b88_comptimeTypeInfos{._field_types=jule::Slice<jule::Ptr<_1b9b78283_comptimeTypeInfo>>::alloc(0LL, (*(_89313_tup))._field_Types.len())});;
	{
		auto expr = &((*(_89313_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9b5de07:;
		if (it != expr_end) {
			jule::Ptr<_1b9c8d1cd_TypeKind> _90121_t = *it;
			{
				{ jule::Slice<jule::Ptr<_1b9b78283_comptimeTypeInfo>> &__jule_push_dest = (*(_89813_infos))._field_types; __jule_push_dest.push(_1b9bd1c04_pushComptimeTypeInfo((*((*((*(_88831_e))))._field_s))._field_meta.ptr(), &(_90121_t))); };
			}
			_iter_next_1c9b5de07:;
			++it;
			goto _iter_begin_1c9b5de07;
		}
		_iter_end_1c9b5de07:;
	};
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(_89813_infos, 14)}), });;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b7d057__Exceptional(jule::Ptr<_1b9b78283_comptimeTypeInfo> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _91137_e, jule::Ptr<_1b9b21825_FnCallExpr>* _91152_fc) {
	if (((*((*(_91152_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_91137_e)).ptr(), (*((*((*(_91152_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9b5216e_FnIns> _91613_f = _1b9c91b1b_Fn((*(_self_))._field_base.ptr());;
	if ((_91613_f == nullptr)) {
		_1b9c6025a_pushErr((*(_91137_e)).ptr(), (*((*(_91152_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ec682ce3_Const> _92113_constant = static__1ec6837b6_NewBool((((*(_91613_f))._field_Decl != nullptr) && (*((*(_91613_f))._field_Decl))._field_Exceptional));;
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d79c7b_primBool, ._field_Model=jule::Any(_92113_constant, &__jule_any_type19), ._field_Constant=_92113_constant});;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b7d453__CanNil(jule::Ptr<_1b9b78283_comptimeTypeInfo> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _92932_e, jule::Ptr<_1b9b21825_FnCallExpr>* _92947_fc) {
	if (((*((*(_92947_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_92932_e)).ptr(), (*((*((*(_92947_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("CanNil", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ec682ce3_Const> _93413_constant = static__1ec6837b6_NewBool(_1b9c9007b_NilCompatible((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d79c7b_primBool, ._field_Model=jule::Any(_93413_constant, &__jule_any_type19), ._field_Constant=_93413_constant});;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b7d84e__RC(jule::Ptr<_1b9b78283_comptimeTypeInfo> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _94228_e, jule::Ptr<_1b9b21825_FnCallExpr>* _94243_fc) {
	if (((*((*(_94243_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_94228_e)).ptr(), (*((*((*(_94243_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("RC", 2), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ec682ce3_Const> _94713_constant = static__1ec6837b6_NewBool(_1b9c90312_PerformsRC((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d79c7b_primBool, ._field_Model=jule::Any(_94713_constant, &__jule_any_type19), ._field_Constant=_94713_constant});;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b7dc4a__Result(jule::Ptr<_1b9b78283_comptimeTypeInfo> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _95532_e, jule::Ptr<_1b9b21825_FnCallExpr>* _95547_fc) {
	if (((*((*(_95547_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_95532_e)).ptr(), (*((*((*(_95547_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9b5216e_FnIns> _96013_f = _1b9c91b1b_Fn((*(_self_))._field_base.ptr());;
	if ((_96013_f == nullptr)) {
		_1b9c6025a_pushErr((*(_95532_e)).ptr(), (*((*(_95547_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*(_96013_f))._field_Result == nullptr)) {
		return _1b9b85a10_buildComptimeTypeInfoData(&((*((*(_95532_e))))._field_s), &(_1b9d793da_primVoid));;
	};
	return _1b9b85a10_buildComptimeTypeInfoData(&((*((*(_95532_e))))._field_s), &((*(_96013_f))._field_Result));;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b7e146__Params(jule::Ptr<_1b9b78283_comptimeTypeInfo> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _97132_e, jule::Ptr<_1b9b21825_FnCallExpr>* _97147_fc) {
	if (((*((*(_97147_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_97132_e)).ptr(), (*((*((*(_97147_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9b5216e_FnIns> _97613_f = _1b9c91b1b_Fn((*(_self_))._field_base.ptr());;
	if ((_97613_f == nullptr)) {
		_1b9c6025a_pushErr((*(_97132_e)).ptr(), (*((*(_97147_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(jule::new_ptr<_1b9b7558d_comptimeParams>(_1b9b7558d_comptimeParams{._field_params=(*(_97613_f))._field_Params}), 13)}), });;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b7e487_subIdent(jule::Ptr<_1b9b78283_comptimeTypeInfo> _self_, jule::Str* _98829_ident) {
	{
		auto &_match_expr{ (*(_98829_ident)) };
		
		if (_match_expr == jule::Str::lit("Str", 3)) {
			_case_begin_1c9b72c62:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _99117_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _99233_e, jule::Ptr<_1b9b21825_FnCallExpr>* _99248_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b79097__Str(_self_, _99233_e, _99248_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_99117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Bits", 4)) {
			_case_begin_1c9b732e5:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _99817_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _99933_e, jule::Ptr<_1b9b21825_FnCallExpr>* _99948_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b7988e__Bits(_self_, _99933_e, _99948_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_99817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Elem", 4)) {
			_case_begin_1c9b7335b:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _100517_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _100633_e, jule::Ptr<_1b9b21825_FnCallExpr>* _100648_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b79c8a__Elem(_self_, _100633_e, _100648_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_100517_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Size", 4)) {
			_case_begin_1c9b733c2:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _101217_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _101333_e, jule::Ptr<_1b9b21825_FnCallExpr>* _101348_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b7a186__Size(_self_, _101333_e, _101348_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_101217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Key", 3)) {
			_case_begin_1c9b73438:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _101917_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _102033_e, jule::Ptr<_1b9b21825_FnCallExpr>* _102048_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b7a582__Key(_self_, _102033_e, _102048_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_101917_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Value", 5)) {
			_case_begin_1c9b73548:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _102617_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _102733_e, jule::Ptr<_1b9b21825_FnCallExpr>* _102748_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b7a97d__Value(_self_, _102733_e, _102748_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_102617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1c9b735ae:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _103317_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _103433_e, jule::Ptr<_1b9b21825_FnCallExpr>* _103448_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b7ad79__Fields(_self_, _103433_e, _103448_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_103317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1c9b73625:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _104017_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _104133_e, jule::Ptr<_1b9b21825_FnCallExpr>* _104148_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b7b275__Statics(_self_, _104133_e, _104148_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_104017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1c9b7368b:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _104717_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _104833_e, jule::Ptr<_1b9b21825_FnCallExpr>* _104848_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b7e146__Params(_self_, _104833_e, _104848_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_104717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Types", 5)) {
			_case_begin_1c9b73702:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _105417_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _105533_e, jule::Ptr<_1b9b21825_FnCallExpr>* _105548_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b7cb5b__Types(_self_, _105533_e, _105548_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_105417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1c9b73768:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _106117_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _106233_e, jule::Ptr<_1b9b21825_FnCallExpr>* _106248_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b7b671__Public(_self_, _106233_e, _106248_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_106117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1c9b737ce:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _106817_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _106933_e, jule::Ptr<_1b9b21825_FnCallExpr>* _106948_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b7ba6c__Binded(_self_, _106933_e, _106948_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_106817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Ordered", 7)) {
			_case_begin_1c9b73856:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _107517_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _107633_e, jule::Ptr<_1b9b21825_FnCallExpr>* _107648_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b7be68__Ordered(_self_, _107633_e, _107648_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_107517_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Comparable", 10)) {
			_case_begin_1c9b738cd:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _108217_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _108333_e, jule::Ptr<_1b9b21825_FnCallExpr>* _108348_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b7c364__Comparable(_self_, _108333_e, _108348_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_108217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1c9b73955:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _108917_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _109033_e, jule::Ptr<_1b9b21825_FnCallExpr>* _109048_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b7c760__Mutable(_self_, _109033_e, _109048_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_108917_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Exceptional", 11)) {
			_case_begin_1c9b739cc:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _109617_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _109733_e, jule::Ptr<_1b9b21825_FnCallExpr>* _109748_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b7d057__Exceptional(_self_, _109733_e, _109748_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_109617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("CanNil", 6)) {
			_case_begin_1c9b73a54:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _110317_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _110433_e, jule::Ptr<_1b9b21825_FnCallExpr>* _110448_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b7d453__CanNil(_self_, _110433_e, _110448_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_110317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("RC", 2)) {
			_case_begin_1c9b73acb:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _111017_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _111133_e, jule::Ptr<_1b9b21825_FnCallExpr>* _111148_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b7d84e__RC(_self_, _111133_e, _111148_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_111017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Result", 6)) {
			_case_begin_1c9b73b53:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _111717_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _111833_e, jule::Ptr<_1b9b21825_FnCallExpr>* _111848_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b7dc4a__Result(_self_, _111833_e, _111848_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_111717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Kind", 4)) {
			_case_begin_1c9b73bca:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _112417_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _112533_e, jule::Ptr<_1b9b21825_FnCallExpr>* _112548_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b79493__Kind(_self_, _112533_e, _112548_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_112417_method));;
			}
		}
		else {
			_case_begin_1c9b72dc7:;
			{
				return nullptr;;
			}
		}
		_match_end_1c9b72aa8:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b78283_comptimeTypeInfo _Src) {
	_Stream << _1b9b78607_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b9b7eb19_Str(_1b9b7e795_comptimeValue* _self_) {
	return jule::Str::lit("comptimeValue", 13);;
}



inline jule::Bool _1b9b7ee5a_Equal(jule::Ptr<_1b9b7e795_comptimeValue> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _114321_other) {
	return false;;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b804aa__Unwrap(jule::Ptr<_1b9b7e795_comptimeValue> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _114732_e, jule::Ptr<_1b9b21825_FnCallExpr>* _114747_fc) {
	if (((*((*(_114747_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_114732_e)).ptr(), (*((*((*(_114747_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Unwrap", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_self_))._field_data;;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b808a6__Type(jule::Ptr<_1b9b7e795_comptimeValue> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _115530_e, jule::Ptr<_1b9b21825_FnCallExpr>* _115545_fc) {
	if (((*((*(_115545_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_115530_e)).ptr(), (*((*((*(_115545_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1b9b85a10_buildComptimeTypeInfoData(&((*((*(_115530_e))))._field_s), &((*((*(_self_))._field_data))._field_Kind));;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b80ca2__Lvalue(jule::Ptr<_1b9b7e795_comptimeValue> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _116332_e, jule::Ptr<_1b9b21825_FnCallExpr>* _116347_fc) {
	if (((*((*(_116347_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_116332_e)).ptr(), (*((*((*(_116347_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Lvalue", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ec682ce3_Const> _116813_constant = static__1ec6837b6_NewBool((*((*(_self_))._field_data))._field_Lvalue);;
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d79c7b_primBool, ._field_Model=jule::Any(_116813_constant, &__jule_any_type19), ._field_Constant=_116813_constant});;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b8119d__Mutable(jule::Ptr<_1b9b7e795_comptimeValue> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _117633_e, jule::Ptr<_1b9b21825_FnCallExpr>* _117648_fc) {
	if (((*((*(_117648_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_117633_e)).ptr(), (*((*((*(_117648_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ec682ce3_Const> _118113_constant = static__1ec6837b6_NewBool((*((*(_self_))._field_data))._field_Mutable);;
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d79c7b_primBool, ._field_Model=jule::Any(_118113_constant, &__jule_any_type19), ._field_Constant=_118113_constant});;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b81599__Const(jule::Ptr<_1b9b7e795_comptimeValue> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _118931_e, jule::Ptr<_1b9b21825_FnCallExpr>* _118946_fc) {
	if (((*((*(_118946_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_118931_e)).ptr(), (*((*((*(_118946_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Const", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ec682ce3_Const> _119413_constant = static__1ec6837b6_NewBool(_1b9c5d8da_IsConst((*(_self_))._field_data.ptr()));;
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d79c7b_primBool, ._field_Model=jule::Any(_119413_constant, &__jule_any_type19), ._field_Constant=_119413_constant});;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b81995__Field(jule::Ptr<_1b9b7e795_comptimeValue> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _120231_e, jule::Ptr<_1b9b21825_FnCallExpr>* _120246_fc) {
	if (((*((*(_120246_fc))))._field_Args.len() > 1LL)) {
		_1b9c6025a_pushErr((*(_120231_e)).ptr(), (*((*((*(_120246_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9b3c137_StructIns> _120713_s = _1b9c91da2_Struct((*((*(_self_))._field_data))._field_Kind.ptr());;
	if ((_120713_s == nullptr)) {
		_1b9c6025a_pushErr((*(_120231_e)).ptr(), (*((*(_120246_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*((*(_self_))._field_data))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9b1caeb_Expr> _121213_arg = (*((*(_120246_fc))))._field_Args[0LL];;
	jule::Ptr<_1b9c5d016_Data> _121313_d = _1b9c7cbd4_evalExpr((*(_120231_e)), _121213_arg);;
	if ((_121313_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1b9c5d8da_IsConst(_121313_d.ptr())))) {
		_1b9c6025a_pushErr((*(_120231_e)).ptr(), (*(_121213_arg))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b9c95ca7_Prim> _12219_prim = _1b9c9082e_Prim((*(_121313_d))._field_Kind.ptr());;
	if (((_12219_prim == nullptr) || (!(_1b9c9923e_IsStr(_12219_prim.ptr()))))) {
		_1b9c6025a_pushErr((*(_120231_e)).ptr(), (*(_121213_arg))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1b9c8d596_Str((*(_121313_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Str _12269_ident = _1ec684e6b_ReadStr((*(_121313_d))._field_Constant.ptr());;
	jule::Ptr<_1b9b3b587_FieldIns> _122713_f = _1b9b3d4e0_FindField(_120713_s.ptr(), _12269_ident);;
	if ((_122713_f == nullptr)) {
		_1b9c6025a_pushErr((*(_120231_e)).ptr(), (*(_121213_arg))._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_120713_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any(_12269_ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_121313_d=jule::new_ptr<_1b9c5d016_Data>((*((*(_self_))._field_data)));
	_121313_d=_1b9c75eda_evalStructSubIdentField((*(_120231_e)).ptr(), &(_121313_d), &(_120713_s), &((*(_121213_arg))._field_Token), &(_122713_f));
	return _1b9b85c41_buildComptimeValue(&(_121313_d));;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b81cd6_subIdent(jule::Ptr<_1b9b7e795_comptimeValue> _self_, jule::Str* _123729_ident) {
	{
		auto &_match_expr{ (*(_123729_ident)) };
		
		if (_match_expr == jule::Str::lit("Unwrap", 6)) {
			_case_begin_1c9bb2a4e:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _124017_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _124133_e, jule::Ptr<_1b9b21825_FnCallExpr>* _124148_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b804aa__Unwrap(_self_, _124133_e, _124148_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_124017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1c9bb2ac6:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _124717_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _124833_e, jule::Ptr<_1b9b21825_FnCallExpr>* _124848_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b808a6__Type(_self_, _124833_e, _124848_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_124717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Lvalue", 6)) {
			_case_begin_1c9bb2b4d:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _125417_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _125533_e, jule::Ptr<_1b9b21825_FnCallExpr>* _125548_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b80ca2__Lvalue(_self_, _125533_e, _125548_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_125417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1c9bb2bc5:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _126117_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _126233_e, jule::Ptr<_1b9b21825_FnCallExpr>* _126248_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b8119d__Mutable(_self_, _126233_e, _126248_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_126117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Const", 5)) {
			_case_begin_1c9bb2e28:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _126817_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _126933_e, jule::Ptr<_1b9b21825_FnCallExpr>* _126948_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b81599__Const(_self_, _126933_e, _126948_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_126817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Field", 5)) {
			_case_begin_1c9bb2ea0:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _127517_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _127633_e, jule::Ptr<_1b9b21825_FnCallExpr>* _127648_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b81995__Field(_self_, _127633_e, _127648_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_127517_method));;
			}
		}
		else {
			_case_begin_1c9bb29c7:;
			{
				return nullptr;;
			}
		}
		_match_end_1c9bb2950:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b7e795_comptimeValue _Src) {
	_Stream << _1b9b7eb19_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b9b82468_Str(_1b9b820e4_comptimeFiles* _self_) {
	return jule::Str::lit("comptimeFiles", 13);;
}



inline jule::Bool _1b9b827a9_Equal(jule::Ptr<_1b9b820e4_comptimeFiles> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _129421_other) {
	return false;;
}



inline void _1b9b82c2c_ready(_1b9b820e4_comptimeFiles* _self_, jule::Ptr<_1b9c09611_Var>* _129829_keyA, jule::Ptr<_1b9c09611_Var>* _129846_keyB) {
	if (((*(_129829_keyA)) != nullptr)) {
		(*((*(_129829_keyA))))._field_Constant=true;
		(*((*(_129829_keyA))))._field_Value=jule::new_ptr<_1b9c5e15a_Value>(_1b9c5e15a_Value{._field_Data=jule::new_ptr<_1b9c5d016_Data>()});
		(*((*((*((*(_129829_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_129829_keyA))))._field_Kind=(*(_1b9d7cb08_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_129846_keyB)) != nullptr)) {
		(*((*(_129846_keyB))))._field_Constant=true;
		(*((*(_129846_keyB))))._field_Value=jule::new_ptr<_1b9c5e15a_Value>(_1b9c5e15a_Value{._field_Data=jule::new_ptr<_1b9c5d016_Data>()});
		(*((*(_129846_keyB))))._field_Kind=jule::new_ptr<_1b9c953a0_TypeSymbol>(_1b9c953a0_TypeSymbol{._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(jule::new_ptr<_1b9b836de_comptimeFile>(), 18)})});
	};
}



inline void _1b9b8314a_step(_1b9b820e4_comptimeFiles* _self_, jule::I32 _132023_i, jule::Ptr<_1b9c09611_Var>* _132036_keyA, jule::Ptr<_1b9c09611_Var>* _132053_keyB) {
	if (((*(_132036_keyA)) != nullptr)) {
		(*((*((*((*(_132036_keyA))))._field_Value))._field_Data))._field_Constant=static__1ec683233_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_132023_i)));
		(*((*((*((*(_132036_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_132036_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_132053_keyB)) != nullptr)) {
		(*((*((*((*((*(_132053_keyB))))._field_Kind))._field_Kind))._field_Kind.cast_ptr<_1b9b836de_comptimeFile>(18)))._field_file=(*(_self_))._field_files[_132023_i];
	};
}



inline jule::I32 _1b9b833d1_len(_1b9b820e4_comptimeFiles* _self_) {
	return static_cast<jule::I32>((*(_self_))._field_files.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b820e4_comptimeFiles _Src) {
	_Stream << _1b9b82468_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b9b83a63_Str(_1b9b836de_comptimeFile* _self_) {
	return jule::Str::lit("comptimeFile", 12);;
}



inline jule::Bool _1b9b83da4_Equal(jule::Ptr<_1b9b836de_comptimeFile> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _134421_other) {
	return false;;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b843c1__Path(jule::Ptr<_1b9b836de_comptimeFile> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _134830_e, jule::Ptr<_1b9b21825_FnCallExpr>* _134845_fc) {
	if (((*((*(_134845_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_134830_e)).ptr(), (*((*((*(_134845_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Path", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ec682ce3_Const> _135313_constant = static__1ec683a80_NewStr((*((*((*(_self_))._field_file))._field_File))._field_Path);;
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d799b2_primStr, ._field_Model=jule::Any(_135313_constant, &__jule_any_type19), ._field_Constant=_135313_constant});;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b847bc__Name(jule::Ptr<_1b9b836de_comptimeFile> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _136130_e, jule::Ptr<_1b9b21825_FnCallExpr>* _136145_fc) {
	if (((*((*(_136145_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_136130_e)).ptr(), (*((*((*(_136145_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ec682ce3_Const> _136613_constant = static__1ec683a80_NewStr(_1b9b094bc_Name((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d799b2_primStr, ._field_Model=jule::Any(_136613_constant, &__jule_any_type19), ._field_Constant=_136613_constant});;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b84bb8__Dir(jule::Ptr<_1b9b836de_comptimeFile> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _137429_e, jule::Ptr<_1b9b21825_FnCallExpr>* _137444_fc) {
	if (((*((*(_137444_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_137429_e)).ptr(), (*((*((*(_137444_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Dir", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1ec682ce3_Const> _137913_constant = static__1ec683a80_NewStr(_1b9b09236_Dir((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d799b2_primStr, ._field_Model=jule::Any(_137913_constant, &__jule_any_type19), ._field_Constant=_137913_constant});;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b85009_subIdent(jule::Ptr<_1b9b836de_comptimeFile> _self_, jule::Str* _138729_ident) {
	{
		auto &_match_expr{ (*(_138729_ident)) };
		
		if (_match_expr == jule::Str::lit("Path", 4)) {
			_case_begin_1c9bcea7c:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _139017_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _139133_e, jule::Ptr<_1b9b21825_FnCallExpr>* _139148_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b843c1__Path(_self_, _139133_e, _139148_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_139017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1c9bceae3:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _139717_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _139833_e, jule::Ptr<_1b9b21825_FnCallExpr>* _139848_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b847bc__Name(_self_, _139833_e, _139848_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_139717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Dir", 3)) {
			_case_begin_1c9bceb59:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _140417_method = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>([=](jule::Ptr<_1b9c5ec0a_Eval>* _140533_e, jule::Ptr<_1b9b21825_FnCallExpr>* _140548_fc, jule::Ptr<_1b9c5d016_Data>* ) mutable -> jule::Ptr<_1b9c5d016_Data> {
					return _1b9b84bb8__Dir(_self_, _140533_e, _140548_fc);;
				}), });;
				return _1b9b8537d_buildAsComptimeMethodData(&(_140417_method));;
			}
		}
		else {
			_case_begin_1c9bcea16:;
			{
				return nullptr;;
			}
		}
		_match_end_1c9bce98e:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b836de_comptimeFile _Src) {
	_Stream << _1b9b83a63_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_1b9bd23b9_Sema>*,jule::Slice<jule::Ptr<_1b9c8c3db_TypeAlias>>*)> _1b9b87c54_readyFn(jule::Ptr<_1b9b87858_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_1b9bd23b9_Sema>*,jule::Slice<jule::Ptr<_1b9c8c3db_TypeAlias>>*)>([=](jule::Ptr<_1b9bd23b9_Sema>* _6321_sema, jule::Slice<jule::Ptr<_1b9c8c3db_TypeAlias>>* _6339_generics) mutable -> jule::Bool {
		{
			auto expr = &((*(_self_))._field_genericsD);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c9bdd805:;
			if (it != expr_end) {
				jule::I32 _6418_i = it - expr->begin();
				jule::Ptr<_1b9b259c2_GenericDecl> _6425_g = *it;
				{
					jule::Ptr<_1b9c8b7e7_InsGeneric> _6521_generic = (*(_self_))._field_generics[_6418_i];;
					if ((((*(_6425_g))._field_Constraint == nullptr) || ((*((*(_6425_g))._field_Constraint))._field_Mask.len() == 0LL))) {
						goto _iter_next_1c9bdd805;
					};
					(*(_6521_generic))._field_Constraint=jule::Slice<jule::Ptr<_1b9c8d1cd_TypeKind>>::alloc(0LL, (*((*(_6425_g))._field_Constraint))._field_Mask.len());
					{
						auto expr = &((*((*(_6425_g))._field_Constraint))._field_Mask);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c9bde9d2:;
						if (it != expr_end) {
							jule::Ptr<_1b9b187b7_TypeDecl> _7029_mask = *it;
							{
								jule::I32 _7121_n = (*((*(_6321_sema))))._field_errors.len();;
								jule::Ptr<_1b9c8d1cd_TypeKind> _7225_kind = _1b9bd9e82_buildTypeWithRefers((*(_6321_sema)), &(_7029_mask), jule::Trait<_1b9cacc14_Lookup>((*(_6321_sema)), 3), (*(_6339_generics)), nullptr);;
								if ((_7225_kind == nullptr)) {
									{
										auto &_match_expr{ (*(_7029_mask))._field_Kind };
										
										if (_match_expr.type == &__jule_any_type20) {
											_case_begin_1c9be3189:;
											{
												jule::Ptr<_1b9b18dc2_IdentTypeDecl> _7633_itd = (*(_7029_mask))._field_Kind.cast_ptr<_1b9b18dc2_IdentTypeDecl>(&__jule_any_type20);;
												if ((((*(_7633_itd))._field_Generics.len() == 0LL) && _1b9b8901e_isBuiltinConstraint(&((*(_7633_itd))._field_Ident)))) {
													_7225_kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(_1b9caa0eb_buildPrimType((*(_7633_itd))._field_Ident), 20)});
													(*((*(_6321_sema))))._field_errors=(*((*(_6321_sema))))._field_errors.slice(0LL, _7121_n);
													goto _julec_label_1c9be41e0;
												};
											}
										}
										_match_end_1c9be3134:;
									};
									return false;;
								};
								_julec_label_1c9be41e0:;
								{ jule::Slice<jule::Ptr<_1b9c8d1cd_TypeKind>> &__jule_push_dest = (*(_6521_generic))._field_Constraint; __jule_push_dest.push(_7225_kind); };
							}
							_iter_next_1c9bde9d2:;
							++it;
							goto _iter_begin_1c9bde9d2;
						}
						_iter_end_1c9bde9d2:;
					};
				}
				_iter_next_1c9bdd805:;
				++it;
				_6418_i++;
				goto _iter_begin_1c9bdd805;
			}
			_iter_end_1c9bdd805:;
		};
		return true;;
	});;
}



inline jule::Bool _1b9b87eda_readyFi(jule::Ptr<_1b9b87858_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*(_self_))._field_fi))._field_Decl))._field_Generics;
	(*(_self_))._field_generics=(*((*(_self_))._field_fi))._field_Generics;
	return ((!((*(_self_))._field_uniq)) || _1b9bdea14_fnEnvironment((*(_self_))._field_s, &((*(_self_))._field_fi), _1b9b87c54_readyFn(_self_)));;
}



inline jule::Bool _1b9b88271_readySi(jule::Ptr<_1b9b87858_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*(_self_))._field_si))._field_Decl))._field_Generics;
	(*(_self_))._field_generics=(*((*(_self_))._field_si))._field_Generics;
	return ((!((*(_self_))._field_uniq)) || _1b9b87c54_readyFn(_self_)(&((*(_self_))._field_s), &((*(_self_))._field_genericsA)));;
}



inline jule::Bool _1b9b88507_ready(jule::Ptr<_1b9b87858_constraintChecker> _self_) {
	if (((*(_self_))._field_fi != nullptr)) {
		return _1b9b87eda_readyFi(_self_);;
	};
	return _1b9b88271_readySi(_self_);;
}



inline jule::Bool _1b9b8878d_check(jule::Ptr<_1b9b87858_constraintChecker> _self_) {
	if ((!(_1b9b88507_ready(_self_)))) {
		return false;;
	};
	_julec_label_1c9beb989:;
	{
		auto expr = &((*(_self_))._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9bec13d:;
		if (it != expr_end) {
			jule::I32 _11914_i = it - expr->begin();
			jule::Ptr<_1b9c8b7e7_InsGeneric> _11921_g = *it;
			{
				if (((*(_11921_g))._field_Constraint == nullptr)) {
					goto _iter_next_1c9bec13d;
				};
				{
					auto expr = &((*(_11921_g))._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c9bed22c:;
					if (it != expr_end) {
						jule::Ptr<_1b9c8d1cd_TypeKind> _12325_c2 = *it;
						{
							jule::Ptr<_1b9c95ca7_Prim> _12421_prim = _1b9c9082e_Prim(_12325_c2.ptr());;
							if (((_12421_prim != nullptr) && _1b9c968ce_IsConstraint(_12421_prim.ptr()))) {
								if (_1b9b88c11_matchConstraint(&((*(_12421_prim))._field_Kind), &((*(_11921_g))._field_Kind))) {
									goto _iter_next_1c9bec13d;
								};
								goto _iter_next_1c9bed22c;
							};
							if (_1b9c8d8d7_Equal(_12325_c2, (*(_11921_g))._field_Kind)) {
								goto _iter_next_1c9bec13d;
							};
						}
						_iter_next_1c9bed22c:;
						++it;
						goto _iter_begin_1c9bed22c;
					}
					_iter_end_1c9bed22c:;
				};
				_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_et, jule::Str::lit("type @ is not matched with @'s constraint", 41), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_11921_g))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*(_self_))._field_genericsD[_11914_i]))._field_Ident, &__jule_any_type4)}));
				return false;;
			}
			_iter_next_1c9bec13d:;
			++it;
			_11914_i++;
			goto _iter_begin_1c9bec13d;
		}
		_iter_end_1c9bec13d:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b87858_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b9b89c56_IsTraitImpl(_1b9b8988d_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1b9b89edc_IsStructImpl(_1b9b8988d_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b8988d_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b8ecc2_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b901e0_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b904dc_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b9090a_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b90c07_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b911ad_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b91b09_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b91e8e_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b92368_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b92665_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b92a3e_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b92e18_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b933be_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b93798_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b93e08_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b94a41_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b9513a_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b954c0_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b95b30_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b961b3_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "st:" << _Src._field_st << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b9bb1200_ImportInfo> _1b9b9756b_SelectPackage(_1b9b970c6_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1b9bb1200_ImportInfo>)> _45832_selector) {
	return _1b9bd285e_SelectPackage((*(_self_))._field_s.ptr(), _45832_selector);;
}



inline jule::Ptr<_1b9c09611_Var> _1b9b97967_FindVar(_1b9b970c6_scopeChecker* _self_, jule::Str _46926_ident, jule::Bool _46938_binded) {
	;
	jule::Ptr<_1b9c09611_Var> _47213_v = _1b9c5a4a8_findVar((*(_self_))._field_table.ptr(), &(_46926_ident), _46938_binded, true);;
	if ((_47213_v != nullptr)) {
		return _47213_v;;
	};
	jule::Ptr<_1b9b970c6_scopeChecker> _47713_parent = (*(_self_))._field_parent;;
	while ((_47713_parent != nullptr)) {
		{
			_47213_v=_1b9c5a4a8_findVar((*(_47713_parent))._field_table.ptr(), &(_46926_ident), _46938_binded, true);
			if ((_47213_v != nullptr)) {
				return _47213_v;;
			};
			_47713_parent=(*(_47713_parent))._field_parent;
		}
	_iter_next_1c9c33097:;
	}
	_iter_end_1c9c33097:;;
	return _1b9bd2c5a_FindVar((*(_self_))._field_s.ptr(), _46926_ident, _46938_binded);;
}



inline jule::Ptr<_1b9c8c3db_TypeAlias> _1b9b97d63_FindTypeAlias(_1b9b970c6_scopeChecker* _self_, jule::Str _49632_ident, jule::Bool _49644_binded) {
	;
	jule::Ptr<_1b9c8c3db_TypeAlias> _49913_ta = _1b9c5a95e_findTypeAlias((*(_self_))._field_table.ptr(), &(_49632_ident), _49644_binded, true);;
	if ((_49913_ta != nullptr)) {
		return _49913_ta;;
	};
	jule::Ptr<_1b9b970c6_scopeChecker> _50413_parent = (*(_self_))._field_parent;;
	while ((_50413_parent != nullptr)) {
		{
			_49913_ta=_1b9c5a95e_findTypeAlias((*(_50413_parent))._field_table.ptr(), &(_49632_ident), _49644_binded, true);
			if ((_49913_ta != nullptr)) {
				return _49913_ta;;
			};
			_50413_parent=(*(_50413_parent))._field_parent;
		}
	_iter_next_1c9c35cae:;
	}
	_iter_end_1c9c35cae:;;
	return _1b9bd3156_FindTypeAlias((*(_self_))._field_s.ptr(), _49632_ident, _49644_binded);;
}



inline jule::Ptr<_1b9b393a9_Struct> _1b9b9825e_FindStruct(_1b9b970c6_scopeChecker* _self_, jule::Str _52129_ident, jule::Bool _52141_binded) {
	return _1b9bd3552_FindStruct((*(_self_))._field_s.ptr(), _52129_ident, _52141_binded);;
}



inline jule::Ptr<_1b9b4e26a_Fn> _1b9b9865a_FindFn(_1b9b970c6_scopeChecker* _self_, jule::Str _53025_ident, jule::Bool _53037_binded) {
	return _1b9bd394d_FindFn((*(_self_))._field_s.ptr(), _53025_ident, _53037_binded);;
}



inline jule::Ptr<_1b9b62514_Trait> _1b9b9899b_FindTrait(_1b9b970c6_scopeChecker* _self_, jule::Str _53928_ident) {
	return _1b9bd3c8e_FindTrait((*(_self_))._field_s.ptr(), _53928_ident);;
}



inline jule::Ptr<_1b9b64c0e_Enum> _1b9b98cdc_FindEnum(_1b9b970c6_scopeChecker* _self_, jule::Str _54827_ident) {
	return _1b9bd40d0_FindEnum((*(_self_))._field_s.ptr(), _54827_ident);;
}



inline jule::Ptr<_1b9b66419_TypeEnum> _1b9b9912d_FindTypeEnum(_1b9b970c6_scopeChecker* _self_, jule::Str _55731_ident) {
	return _1b9bd4421_FindTypeEnum((*(_self_))._field_s.ptr(), _55731_ident);;
}



inline jule::Bool _1b9b99480_isUnsafe(jule::Ptr<_1b9b970c6_scopeChecker> _self_) {
	jule::Ptr<_1b9b970c6_scopeChecker> _56513_scope = _self_;;
	_julec_label_1c9c3a0c1:;
	if ((*((*(_56513_scope))._field_scope))._field_Unsafety) {
		return true;;
	};
	if (((*(_56513_scope))._field_parent != nullptr)) {
		_56513_scope=(*(_56513_scope))._field_parent;
		goto _julec_label_1c9c3a0c1;
	};
	return false;;
}



inline jule::Bool _1b9b99716_isRoot(_1b9b970c6_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1b9b99914_stop(_1b9b970c6_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1b9b99b9a_stopped(_1b9b970c6_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1b9b99e31_isDeferred(jule::Ptr<_1b9b970c6_scopeChecker> _self_) {
	jule::Ptr<_1b9b970c6_scopeChecker> _59813_scope = _self_;;
	_julec_label_1c9c3d877:;
	if ((*((*(_59813_scope))._field_scope))._field_Deferred) {
		return true;;
	};
	if (((*(_59813_scope))._field_parent != nullptr)) {
		_59813_scope=(*(_59813_scope))._field_parent;
		goto _julec_label_1c9c3d877;
	};
	return false;;
}



inline jule::Ptr<_1b9b970c6_scopeChecker> _1b9b9a1b7_getRoot(jule::Ptr<_1b9b970c6_scopeChecker> _self_) {
	jule::Ptr<_1b9b970c6_scopeChecker> _61613_root = _self_;;
	while ((((*(_61613_root))._field_parent != nullptr) && ((*(_61613_root))._field_owner == nullptr))) {
		{
			_61613_root=(*(_61613_root))._field_parent;
		}
	_iter_next_1c9c40626:;
	}
	_iter_end_1c9c40626:;;
	return _61613_root;;
}



inline jule::Ptr<_1b9b970c6_scopeChecker> _1b9b9a44d_getHardRoot(jule::Ptr<_1b9b970c6_scopeChecker> _self_) {
	jule::Ptr<_1b9b970c6_scopeChecker> _62613_root = _self_;;
	while (((*(_62613_root))._field_parent != nullptr)) {
		{
			_62613_root=(*(_62613_root))._field_parent;
		}
	_iter_next_1c9c41836:;
	}
	_iter_end_1c9c41836:;;
	return _62613_root;;
}



inline jule::Ptr<_1b9b92665_Label> _1b9b9a78e_findLabel(_1b9b970c6_scopeChecker* _self_, jule::Str* _63629_ident) {
	{
		auto expr = &((*((*(_self_))._field_scope))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9c427c1:;
		if (it != expr_end) {
			jule::Any _63721_st = *it;
			{
				{
					auto &_match_expr{ _63721_st };
					
					if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1c9c43409:;
						{
							jule::Ptr<_1b9b92665_Label> _64021_label = _63721_st.cast_ptr<_1b9b92665_Label>(&__jule_any_type21);;
							if (((*(_64021_label))._field_Ident == (*(_63629_ident)))) {
								return _64021_label;;
							};
						}
					}
					_match_end_1c9c433a4:;
				};
			}
			_iter_next_1c9c427c1:;
			++it;
			goto _iter_begin_1c9c427c1;
		}
		_iter_end_1c9c427c1:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b9b95b30_scopeLabel> _1b9b9aad0_findLabelScope(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Str* _65235_ident) {
	jule::Ptr<_1b9b95b30_scopeLabel> _65313_label = _1b9b9ae21_findLabelAll(_self_.ptr(), _65235_ident);;
	if (((_65313_label != nullptr) && ((*(_65313_label))._field_scope == _self_))) {
		return _65313_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1b9b95b30_scopeLabel> _1b9b9ae21_findLabelAll(_1b9b970c6_scopeChecker* _self_, jule::Str* _66432_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9c454d8:;
		if (it != expr_end) {
			jule::Ptr<_1b9b95b30_scopeLabel> _66521_lbl = *it;
			{
				if (((*((*(_66521_lbl))._field_label))._field_Ident == (*(_66432_ident)))) {
					return _66521_lbl;;
				};
			}
			_iter_next_1c9c454d8:;
			++it;
			goto _iter_begin_1c9c454d8;
		}
		_iter_end_1c9c454d8:;
	};
	return nullptr;;
}



inline jule::Bool _1b9b9b31c_isDuplicatedIdent(_1b9b970c6_scopeChecker* _self_, jule::Uintptr _67636_itself, jule::Str* _67654_ident) {
	jule::Ptr<_1b9c09611_Var> _6779_v = _1b9b97967_FindVar(_self_, (*(_67654_ident)), false);;
	if (((_6779_v != nullptr) && (static_cast<jule::Uintptr>(_6779_v) != _67636_itself))) {
		if (((*(_6779_v))._field_Scope == nullptr)) {
			return false;;
		};
		return (((*(_6779_v))._field_Scope == (*(_self_))._field_scope) || (!(_1b9bd482d_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))));;
	};
	jule::Ptr<_1b9c8c3db_TypeAlias> _6859_ta = _1b9b97d63_FindTypeAlias(_self_, (*(_67654_ident)), false);;
	if (((_6859_ta != nullptr) && (static_cast<jule::Uintptr>(_6859_ta) != _67636_itself))) {
		if (((*(_6859_ta))._field_Scope == nullptr)) {
			return false;;
		};
		return (((*(_6859_ta))._field_Scope == (*(_self_))._field_tree) || (!(_1b9bd482d_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))));;
	};
	return false;;
}



inline void _1b9b9b5c5_checkVarDecl(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b2b555_VarDecl> _69636_decl) {
	jule::Ptr<_1b9c09611_Var> _69713_v = _1b9b5a7a4_buildVar(_69636_decl);;
	(*(_69713_v))._field_Scope=(*(_self_))._field_scope;
	__JULE_DEFER({
		{ jule::Slice<jule::Ptr<_1b9c09611_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_69713_v); };
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_69713_v, &__jule_any_type8)); };
	});;
	if (_1b9b9b31c_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_69713_v)), &((*(_69713_v))._field_Ident))) {
		_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_69713_v))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_69713_v))._field_Ident, &__jule_any_type4)}));
		_1b9bd5367_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1b9b99914_stop(_self_.ptr());
		return;;
	};
	_1b9be76ed_checkVarDecl((*(_self_))._field_s, &(_69713_v), jule::Trait<_1b9cacc14_Lookup>(_self_, 0));
	if (((!(_1b9c09c2c_IsTypeInferred(_69713_v.ptr()))) && (((*(_69713_v))._field_Kind == nullptr) || ((*((*(_69713_v))._field_Kind))._field_Kind == nullptr)))) {
		return;;
	};
	_1b9beae93_evalVarValue((*(_self_))._field_s, &(_69713_v), jule::Trait<_1b9cacc14_Lookup>(_self_, 0));
	if (((!(_1b9c09996_IsInitialized(_69713_v.ptr()))) || ((*((*(_69713_v))._field_Value))._field_Data == nullptr))) {
		return;;
	};
	_1b9ba2840_removeInteriorMutRisk(_self_, &((*((*(_69713_v))._field_Value))._field_Data));
	_1b9beab30_checkVarValue((*(_self_))._field_s, &(_69713_v));
}



inline void _1b9b9b87d_checkTypeAlias(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9c8c3db_TypeAlias>* _72739_ta) {
	if (_1b9b9b31c_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_72739_ta)))), &((*((*(_72739_ta))))._field_Ident))) {
		_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*(_72739_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_72739_ta))))._field_Ident, &__jule_any_type4)}));
		_1b9bd5367_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1b9b99914_stop(_self_.ptr());
		return;;
	};
	_1b9be1780_checkTypeAliasDecl((*(_self_))._field_s, _72739_ta, jule::Trait<_1b9cacc14_Lookup>(_self_, 0));
	{ jule::Slice<jule::Ptr<_1b9c8c3db_TypeAlias>> &__jule_push_dest = (*((*(_self_))._field_table))._field_TypeAliases; __jule_push_dest.push((*(_72739_ta))); };
	if (((*((*((*(_72739_ta))))._field_Kind))._field_Kind == nullptr)) {
		_1b9b99914_stop(_self_.ptr());
	};
}



inline void _1b9b9bb36_checkTypeAliasDecl(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b3012a_TypeAliasDecl> _74342_decl) {
	jule::Ptr<_1b9c8c3db_TypeAlias> _74413_ta = _1b9b57273_buildTypeAlias(_74342_decl);;
	_1b9b9b87d_checkTypeAlias(_self_, &(_74413_ta));
}



inline jule::Ptr<_1b9b8ecc2_Scope> _1b9b9bdbc_getChild(_1b9b970c6_scopeChecker* _self_) {
	return jule::new_ptr<_1b9b8ecc2_Scope>(_1b9b8ecc2_Scope{._field_Parent=(*(_self_))._field_scope, });;
}



inline void _1b9b9c2da_checkChildSsc(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b287d8_ScopeTree>* _75438_tree, jule::Ptr<_1b9b8ecc2_Scope>* _75461_s, jule::Ptr<_1b9b970c6_scopeChecker>* _75477_ssc) {
	(*((*(_75477_ssc))))._field_parent=_self_;
	_1b9ba8a88_check((*(_75477_ssc)), _75438_tree, _75461_s);
}



inline jule::Ptr<_1b9b8ecc2_Scope> _1b9b9c6d6_checkChildSc(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b287d8_ScopeTree>* _75937_tree, jule::Ptr<_1b9b970c6_scopeChecker>* _75960_ssc) {
	jule::Ptr<_1b9b8ecc2_Scope> _76013_s = _1b9b9bdbc_getChild(_self_.ptr());;
	_1b9b9c2da_checkChildSsc(_self_, _75937_tree, &(_76013_s), _75960_ssc);
	return _76013_s;;
}



inline jule::Ptr<_1b9b8ecc2_Scope> _1b9b9ca27_checkChild(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b287d8_ScopeTree>* _76535_tree) {
	jule::Ptr<_1b9b970c6_scopeChecker> _76613_ssc = _1b9ba8d1e_newChildChecker(_self_);;
	return _1b9b9c6d6_checkChildSc(_self_, _76535_tree, &(_76613_ssc));;
}



inline void _1b9b9ccd0_checkAnonScope(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b287d8_ScopeTree> _77038_tree) {
	jule::Ptr<_1b9b8ecc2_Scope> _77113_s = _1b9b9ca27_checkChild(_self_, &(_77038_tree));;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_77113_s, &__jule_any_type22)); };
}



inline void _1b9b9d143_processErrorCall(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b49d37_BuiltinErrorCallExprModel>* _77541_m, jule::Ptr<_1b9b032eb_Token> _77572_err) {
	if (_1b9b99e31_isDeferred(_self_)) {
		_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), _77572_err, jule::Str::lit("deferred scopes are not supports error calls", 44), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b9b970c6_scopeChecker> _78013_root = _1b9b9a1b7_getRoot(_self_);;
	if ((!((*((*((*(_78013_root))._field_owner))._field_Decl))._field_Exceptional))) {
		_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), _77572_err, jule::Str::lit("error call can only useable for exceptional functions", 53), jule::Slice<jule::Any>());
		_1b9bd5367_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("you can declare an exceptional function with \"!\" operator", 57), jule::Slice<jule::Any>());
	};
	(*((*(_77541_m))))._field_Func=(*(_78013_root))._field_owner;
}



inline void _1b9b9d3eb_checkExpr(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b1caeb_Expr> _78833_expr) {
	jule::Ptr<_1b9c5ec0a_Eval> _78913_eval = _1b9bdc4a1_eval((*(_self_))._field_s, jule::Trait<_1b9cacc14_Lookup>(_self_, 0));;
	(*(_78913_eval))._field_ignored=true;
	jule::Ptr<_1b9c5d016_Data> _79113_d = _1b9c7cbd4_evalExpr(_78913_eval, _78833_expr);;
	if (((_79113_d == nullptr) || ((*(_79113_d))._field_Model == nullptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_79113_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1c9c61d0c:;
			{
				jule::Ptr<_1b9b49d37_BuiltinErrorCallExprModel> _80017_m = (*(_79113_d))._field_Model.cast_ptr<_1b9b49d37_BuiltinErrorCallExprModel>(&__jule_any_type23);;
				_1b9b9d143_processErrorCall(_self_, &(_80017_m), (*(_78833_expr))._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_79113_d, &__jule_any_type24)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33 || _match_expr.type == &__jule_any_type34) {
			_case_begin_1c9c627be:;
			{
				{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_79113_d, &__jule_any_type24)); };
			}
		}
		else {
			_case_begin_1c9c6245b:;
			{
				_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_78833_expr))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c9c62406:;
	};
}



inline jule::Ptr<_1b9b901e0_If> _1b9b9d73c_checkIf(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b2e05d_If> _81931_i) {
	jule::Ptr<_1b9b8ecc2_Scope> _82013_s = _1b9b9ca27_checkChild(_self_, &((*(_81931_i))._field_Scope));;
	jule::Ptr<_1b9c5d016_Data> _82213_d = _1b9c7cbd4_evalExpr(_1b9bdc4a1_eval((*(_self_))._field_s, jule::Trait<_1b9cacc14_Lookup>(_self_, 0)), (*(_81931_i))._field_Expr);;
	if ((_82213_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b9c95ca7_Prim> _82713_prim = _1b9c9082e_Prim((*(_82213_d))._field_Kind.ptr());;
	if (((_82713_prim == nullptr) || (!(_1b9c98ea8_IsBool(_82713_prim.ptr()))))) {
		_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*(_81931_i))._field_Expr))._field_Token, jule::Str::lit("if conditions must be have boolean expression", 45), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1b9b901e0_If>(_1b9b901e0_If{._field_Expr=(*(_82213_d))._field_Model, ._field_Scope=_82013_s});;
}



inline jule::Ptr<_1b9b904dc_Else> _1b9b9da7d_checkElse(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b2e437_Else> _83933_e) {
	return jule::new_ptr<_1b9b904dc_Else>(_1b9b904dc_Else{._field_Scope=_1b9b9ca27_checkChild(_self_, &((*(_83933_e))._field_Scope))});;
}



inline void _1b9b9dd36_checkConditional(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b2e8dd_Conditional> _84540_conditional) {
	jule::Ptr<_1b9b9090a_Conditional> _84613_c = jule::new_ptr<_1b9b9090a_Conditional>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_84613_c, &__jule_any_type35)); };
	(*(_84613_c))._field_Elifs=jule::Slice<jule::Ptr<_1b9b901e0_If>>::alloc(0LL, ((*(_84540_conditional))._field_Tail.len() + 1LL));
	{ jule::Slice<jule::Ptr<_1b9b901e0_If>> &__jule_push_dest = (*(_84613_c))._field_Elifs; __jule_push_dest.push(_1b9b9d73c_checkIf(_self_, (*(_84540_conditional))._field_Head)); };
	{
		auto expr = &((*(_84540_conditional))._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9c6dad8:;
		if (it != expr_end) {
			jule::Ptr<_1b9b2e05d_If> _85221_elif = *it;
			{
				{ jule::Slice<jule::Ptr<_1b9b901e0_If>> &__jule_push_dest = (*(_84613_c))._field_Elifs; __jule_push_dest.push(_1b9b9d73c_checkIf(_self_, _85221_elif)); };
			}
			_iter_next_1c9c6dad8:;
			++it;
			goto _iter_begin_1c9c6dad8;
		}
		_iter_end_1c9c6dad8:;
	};
	if (((*(_84540_conditional))._field_Default != nullptr)) {
		(*(_84613_c))._field_Default=_1b9b9da7d_checkElse(_self_, (*(_84540_conditional))._field_Default);
	};
}



inline void _1b9b9e30e_checkIterScopeSsc(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Uintptr _86137_it, jule::Ptr<_1b9b287d8_ScopeTree> _86154_tree, jule::Ptr<_1b9b8ecc2_Scope>* _86177_s, jule::Ptr<_1b9b970c6_scopeChecker> _86192_ssc) {
	(*(_86192_ssc))._field_it=_86137_it;
	_1b9b9c2da_checkChildSsc(_self_, &(_86154_tree), _86177_s, &(_86192_ssc));
}



inline jule::Ptr<_1b9b8ecc2_Scope> _1b9b9e7b5_checkIterScopeSc(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Uintptr _86636_it, jule::Ptr<_1b9b287d8_ScopeTree> _86653_tree, jule::Ptr<_1b9b970c6_scopeChecker> _86675_ssc) {
	jule::Ptr<_1b9b8ecc2_Scope> _86713_scope = _1b9b9bdbc_getChild(_self_.ptr());;
	_1b9b9e30e_checkIterScopeSsc(_self_, _86636_it, _86653_tree, &(_86713_scope), _86675_ssc);
	return _86713_scope;;
}



inline jule::Ptr<_1b9b8ecc2_Scope> _1b9b9ebb1_checkIterScope(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Uintptr _87234_it, jule::Ptr<_1b9b287d8_ScopeTree>* _87252_tree) {
	jule::Ptr<_1b9b970c6_scopeChecker> _87313_ssc = _1b9ba8d1e_newChildChecker(_self_);;
	return _1b9b9e7b5_checkIterScopeSc(_self_, _87234_it, (*(_87252_tree)), _87313_ssc);;
}



inline void _1b9b9ee69_checkInfIter(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b2c0c2_Iter>* _87737_it) {
	jule::Ptr<_1b9b90c07_InfIter> _87813_kind = jule::new_ptr<_1b9b90c07_InfIter>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_87813_kind, &__jule_any_type36)); };
	(*(_87813_kind))._field_Scope=_1b9b9ebb1_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_87813_kind)), &((*((*(_87737_it))))._field_Scope));
}



inline void _1b9ba0222_checkWhileIter(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b2c0c2_Iter>* _88339_it) {
	jule::Ptr<_1b9b2c8ec_WhileKind> _88413_wh = (*((*(_88339_it))))._field_Kind.cast_ptr<_1b9b2c8ec_WhileKind>(&__jule_any_type37);;
	if ((((*(_88413_wh))._field_Expr == nullptr) && ((*(_88413_wh))._field_Next == nullptr))) {
		_1b9b9ee69_checkInfIter(_self_, _88339_it);
		return;;
	};
	jule::Ptr<_1b9b911ad_WhileIter> _89013_kind = jule::new_ptr<_1b9b911ad_WhileIter>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_89013_kind, &__jule_any_type38)); };
	(*(_89013_kind))._field_Scope=_1b9b9ebb1_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_89013_kind)), &((*((*(_88339_it))))._field_Scope));
	if (((*(_88413_wh))._field_Expr != nullptr)) {
		jule::Ptr<_1b9c5d016_Data> _89517_d = _1b9c7cbd4_evalExpr(_1b9bdc4a1_eval((*(_self_))._field_s, jule::Trait<_1b9cacc14_Lookup>(_self_, 0)), (*(_88413_wh))._field_Expr);;
		if ((_89517_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1b9c95ca7_Prim> _90013_prim = _1b9c9082e_Prim((*(_89517_d))._field_Kind.ptr());;
		if ((_90013_prim == nullptr)) {
			_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*(_88339_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1b9c98ea8_IsBool(_90013_prim.ptr())))) {
			_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*(_88339_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		(*(_89013_kind))._field_Expr=(*(_89517_d))._field_Model;
	};
	if (_1b9b2cc60_IsWhileNext(_88413_wh.ptr())) {
		if ((!(_1b9b8e2cc_isValidAstStForNextSt(&((*(_88413_wh))._field_Next))))) {
			_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_88413_wh))._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			return;;
		};
		jule::I32 _92013_n = (*((*(_self_))._field_scope))._field_Stmts.len();;
		_1b9ba76be_checkNode(_self_, &((*(_88413_wh))._field_Next));
		if ((_92013_n < (*((*(_self_))._field_scope))._field_Stmts.len())) {
			jule::Any _92321_st = (*((*(_self_))._field_scope))._field_Stmts[_92013_n];;
			(*((*(_self_))._field_scope))._field_Stmts=(*((*(_self_))._field_scope))._field_Stmts.slice(0LL, _92013_n);
			if ((!(_1b9b8e596_isValidStForNextSt(&(_92321_st))))) {
				_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_88413_wh))._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			};
			(*(_89013_kind))._field_Next=_92321_st;
		};
	};
}



inline void _1b9ba0640_checkComptimeRangeIter(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b2c0c2_Iter>* _93347_it, jule::Ptr<_1b9b91b09_RangeIter>* _93363_kind, jule::Ptr<_1b9c5d016_Data>* _93386_d) {
	if (((*((*(_93363_kind))))._field_KeyA != nullptr)) {
		if (((!(_1b9bd482d_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _1b9b9b31c_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*((*(_93363_kind))))._field_KeyA))._field_Ident)))) {
			_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_93363_kind))))._field_KeyA))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_93363_kind))))._field_KeyA))._field_Ident, &__jule_any_type4)}));
			_1b9bd5367_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	if (((*((*(_93363_kind))))._field_KeyB != nullptr)) {
		if (((!(_1b9bd482d_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _1b9b9b31c_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*((*(_93363_kind))))._field_KeyB))._field_Ident)))) {
			_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_93363_kind))))._field_KeyB))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_93363_kind))))._field_KeyB))._field_Ident, &__jule_any_type4)}));
			_1b9bd5367_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1b9b687b2_comptimeRange> _94713_comptime = _1b9c93bc8_comptimeRange((*((*(_93386_d))))._field_Kind.ptr());;
	_1b9b685c5_comptimeRangeKind_mptr_data[((*(_94713_comptime))._field_kind).type_offset]._1b9b67cbc_ready((*(_94713_comptime))._field_kind, &((*((*(_93363_kind))))._field_KeyA), &((*((*(_93363_kind))))._field_KeyB));
	jule::I32 _94913_i = 0LL;;
	jule::I32 _9509_errors = (*((*(_self_))._field_s))._field_errors.len();;
	for (; (_94913_i < _1b9b685c5_comptimeRangeKind_mptr_data[((*(_94713_comptime))._field_kind).type_offset]._1b9b68471_len((*(_94713_comptime))._field_kind)); (_94913_i)++) {
		{
			jule::Ptr<_1b9b970c6_scopeChecker> _95217_ssc = _1b9ba8d1e_newChildChecker(_self_);;
			jule::Ptr<_1b9b8ecc2_Scope> _95317_scope = _1b9b9bdbc_getChild(_self_.ptr());;
			if (((*((*(_93363_kind))))._field_KeyA != nullptr)) {
				(*((*((*(_93363_kind))))._field_KeyA))._field_Scope=_95317_scope;
				{ jule::Slice<jule::Ptr<_1b9c09611_Var>> &__jule_push_dest = (*((*(_95217_ssc))._field_table))._field_Vars; __jule_push_dest.push((*((*(_93363_kind))))._field_KeyA); };
			};
			if (((*((*(_93363_kind))))._field_KeyB != nullptr)) {
				(*((*((*(_93363_kind))))._field_KeyB))._field_Scope=_95317_scope;
				{ jule::Slice<jule::Ptr<_1b9c09611_Var>> &__jule_push_dest = (*((*(_95217_ssc))._field_table))._field_Vars; __jule_push_dest.push((*((*(_93363_kind))))._field_KeyB); };
			};
			_1b9b685c5_comptimeRangeKind_mptr_data[((*(_94713_comptime))._field_kind).type_offset]._1b9b681da_step((*(_94713_comptime))._field_kind, _94913_i, &((*((*(_93363_kind))))._field_KeyA), &((*((*(_93363_kind))))._field_KeyB));
			_1b9b9c2da_checkChildSsc(_self_, &((*((*(_93347_it))))._field_Scope), &(_95317_scope), &(_95217_ssc));
			if ((_9509_errors != (*((*(_self_))._field_s))._field_errors.len())) {
				goto _iter_end_1c9c89807;
			};
			{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_95317_scope, &__jule_any_type22)); };
		}
	_iter_next_1c9c89807:;
	}
	_iter_end_1c9c89807:;;
}



inline void _1b9ba08e8_checkRangeIter(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b2c0c2_Iter>* _97239_it) {
	jule::Ptr<_1b9b2d304_RangeKind> _97313_rang = (*((*(_97239_it))))._field_Kind.cast_ptr<_1b9b2d304_RangeKind>(&__jule_any_type39);;
	jule::Ptr<_1b9c5d016_Data> _97513_d = _1b9c7c893_evalExpr1(_1b9bdc4a1_eval((*(_self_))._field_s, jule::Trait<_1b9cacc14_Lookup>(_self_, 0)), (*(_97313_rang))._field_Expr);;
	if ((_97513_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1b9b91b09_RangeIter> _98013_kind = jule::new_ptr<_1b9b91b09_RangeIter>(_1b9b91b09_RangeIter{._field_Expr=_97513_d, });;
	_1b9c532c5_rangeChecker _98413_rc = _1b9c532c5_rangeChecker{._field_sc=_self_, ._field_rang=_97313_rang, ._field_Kind=_98013_kind, ._field_d=_97513_d};;
	jule::Bool _9909_ok = _1b9c552d8_check(&_98413_rc);;
	if ((!(_9909_ok))) {
		return;;
	};
	jule::Ptr<_1b9b687b2_comptimeRange> _99513_comptimeRange = _1b9c93bc8_comptimeRange((*(_97513_d))._field_Kind.ptr());;
	if ((_99513_comptimeRange != nullptr)) {
		_1b9ba0640_checkComptimeRangeIter(_self_, _97239_it, &(_98013_kind), &(_97513_d));
		return;;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_98013_kind, &__jule_any_type40)); };
	jule::Ptr<_1b9b970c6_scopeChecker> _100313_ssc = _1b9ba8d1e_newChildChecker(_self_);;
	jule::Ptr<_1b9b8ecc2_Scope> _100413_scope = _1b9b9bdbc_getChild(_self_.ptr());;
	if (((*(_98013_kind))._field_KeyA != nullptr)) {
		if (((!(_1b9bd482d_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _1b9b9b31c_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*(_98013_kind))._field_KeyA))._field_Ident)))) {
			_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*(_98013_kind))._field_KeyA))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_98013_kind))._field_KeyA))._field_Ident, &__jule_any_type4)}));
			_1b9bd5367_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*((*(_98013_kind))._field_KeyA))._field_Scope=_100413_scope;
		{ jule::Slice<jule::Ptr<_1b9c09611_Var>> &__jule_push_dest = (*((*(_100313_ssc))._field_table))._field_Vars; __jule_push_dest.push((*(_98013_kind))._field_KeyA); };
	};
	if (((*(_98013_kind))._field_KeyB != nullptr)) {
		if (((!(_1b9bd482d_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _1b9b9b31c_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*(_98013_kind))._field_KeyB))._field_Ident)))) {
			_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*(_98013_kind))._field_KeyB))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_98013_kind))._field_KeyB))._field_Ident, &__jule_any_type4)}));
			_1b9bd5367_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*((*(_98013_kind))._field_KeyB))._field_Scope=_100413_scope;
		{ jule::Slice<jule::Ptr<_1b9c09611_Var>> &__jule_push_dest = (*((*(_100313_ssc))._field_table))._field_Vars; __jule_push_dest.push((*(_98013_kind))._field_KeyB); };
	};
	_1b9b9e30e_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_98013_kind)), (*((*(_97239_it))))._field_Scope, &(_100413_scope), _100313_ssc);
	(*(_98013_kind))._field_Scope=_100413_scope;
}



inline void _1b9ba0ba1_checkIter(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b2c0c2_Iter> _102833_it) {
	if (_1b9b2c435_IsInf(_102833_it.ptr())) {
		_1b9b9ee69_checkInfIter(_self_, &(_102833_it));
		return;;
	};
	{
		auto &_match_expr{ (*(_102833_it))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1c9ca04bb:;
			{
				_1b9ba0222_checkWhileIter(_self_, &(_102833_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1c9ca11d1:;
			{
				_1b9ba08e8_checkRangeIter(_self_, &(_102833_it));
			}
		}
		else {
			_case_begin_1c9ca0c4c:;
			{
				jule::outln(jule::Str::lit("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1c9ca0be7:;
	};
}



inline jule::Bool _1b9ba0ee2_checkValidContLabel(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Uintptr _104439_it) {
	jule::Ptr<_1b9b970c6_scopeChecker> _104513_scope = _self_;;
	_julec_label_1c9ca2446:;
	if (((*(_104513_scope))._field_it == _104439_it)) {
		return true;;
	};
	if (((*(_104513_scope))._field_parent != nullptr)) {
		_104513_scope=(*(_104513_scope))._field_parent;
		goto _julec_label_1c9ca2446;
	};
	return false;;
}



inline jule::Bool _1b9ba1333_checkValidBreakLabel(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Uintptr _106040_ptr) {
	jule::Ptr<_1b9b970c6_scopeChecker> _106113_scope = _self_;;
	_julec_label_1c9ca437c:;
	if (((*(_106113_scope))._field_it == _106040_ptr)) {
		return true;;
	};
	if (((*(_106113_scope))._field_cse != 0LLU)) {
		jule::Uintptr _106913_mtch = static_cast<jule::Uintptr>((*(((_1b9b94a41_Case*)((*(_106113_scope))._field_cse))))._field_Owner);;
		if ((_106913_mtch == _106040_ptr)) {
			return true;;
		};
	};
	if (((*(_106113_scope))._field_parent != nullptr)) {
		_106113_scope=(*(_106113_scope))._field_parent;
		goto _julec_label_1c9ca437c;
	};
	return false;;
}



inline jule::Ptr<_1b9b91e8e_ContSt> _1b9ba1674_checkContValidScope(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b2daa7_ContSt> _108339_c) {
	if (_1b9b99e31_isDeferred(_self_)) {
		_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_108339_c))._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_108339_c))._field_Label != nullptr)) {
		return jule::new_ptr<_1b9b91e8e_ContSt>();;
	};
	jule::Ptr<_1b9b970c6_scopeChecker> _109313_scope = _self_;;
	_julec_label_1c9ca8480:;
	{
		
		if (((((*(_109313_scope))._field_it == 0LLU) && ((*(_109313_scope))._field_parent != nullptr)) && ((*(_109313_scope))._field_owner == nullptr))) {
			_case_begin_1c9ca8c00:;
			{
				_109313_scope=(*(_109313_scope))._field_parent;
				goto _julec_label_1c9ca8480;
			}
		}
		else if (((*(_109313_scope))._field_it != 0LLU)) {
			_case_begin_1c9ca8c77:;
			{
				return jule::new_ptr<_1b9b91e8e_ContSt>(_1b9b91e8e_ContSt{._field_It=(*(_109313_scope))._field_it});;
			}
		}
		_match_end_1c9ca8b45:;
	};
	_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_108339_c))._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1b9ba192c_checkCont(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b2daa7_ContSt> _110729_c) {
	jule::Ptr<_1b9b91e8e_ContSt> _110813_cont = _1b9ba1674_checkContValidScope(_self_, _110729_c);;
	if ((_110813_cont == nullptr)) {
		return;;
	};
	if (((*(_110729_c))._field_Label != nullptr)) {
		jule::Ptr<_1b9b95b30_scopeLabel> _111417_label = _1b9b8c2db_findLabelParent(&((*((*(_110729_c))._field_Label))._field_Kind), (*(_self_))._field_parent);;
		if ((_111417_label == nullptr)) {
			_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_110729_c))._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*((*(_110729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
			return;;
		};
		(*(_111417_label))._field_used=true;
		if ((((*(_111417_label))._field_pos + 1LL) >= (*((*((*(_111417_label))._field_scope))._field_scope))._field_Stmts.len())) {
			_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_110729_c))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_110729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
			return;;
		};
		jule::I32 _112713_i = ((*(_111417_label))._field_pos + 1LL);;
		if ((_112713_i >= (*((*((*(_111417_label))._field_scope))._field_scope))._field_Stmts.len())) {
			_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_110729_c))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>());
		} else {
			jule::Any _113121_st = (*((*((*(_111417_label))._field_scope))._field_scope))._field_Stmts[_112713_i];;
			{
				auto &_match_expr{ _113121_st };
				
				if (_match_expr.type == &__jule_any_type36) {
					_case_begin_1c9cb427c:;
					{
						(*(_110813_cont))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_113121_st.cast_ptr<_1b9b90c07_InfIter>(&__jule_any_type36)));
					}
				}
				else if (_match_expr.type == &__jule_any_type40) {
					_case_begin_1c9cb3ec4:;
					{
						(*(_110813_cont))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_113121_st.cast_ptr<_1b9b91b09_RangeIter>(&__jule_any_type40)));
					}
				}
				else if (_match_expr.type == &__jule_any_type38) {
					_case_begin_1c9cb403a:;
					{
						(*(_110813_cont))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_113121_st.cast_ptr<_1b9b911ad_WhileIter>(&__jule_any_type38)));
					}
				}
				else {
					_case_begin_1c9cb3e5d:;
					{
						_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_110729_c))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_110729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
					}
				}
				_match_end_1c9cb3e08:;
			};
		};
	};
	if (((*(_110813_cont))._field_It != 0LLU)) {
		if ((!(_1b9ba0ee2_checkValidContLabel(_self_, (*(_110813_cont))._field_It)))) {
			_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_110729_c))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_110729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
		};
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_110813_cont, &__jule_any_type41)); };
}



inline void _1b9ba1bd5_checkLabel(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b25d9b_LabelSt> _115434_l) {
	if ((_1b9b9a78e_findLabel(_self_.ptr(), &((*(_115434_l))._field_Ident)) != nullptr)) {
		_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_115434_l))._field_Token, jule::Str::lit("label is already exist in this identifier: @", 44), jule::Slice<jule::Any>::make({jule::Any((*(_115434_l))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1b9b92665_Label> _116013_label = jule::new_ptr<_1b9b92665_Label>(_1b9b92665_Label{._field_Ident=(*(_115434_l))._field_Ident});;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_116013_label, &__jule_any_type21)); };
	{ jule::Slice<jule::Ptr<_1b9b95b30_scopeLabel>> &__jule_push_dest = (*((*(_self_))._field_labels)); __jule_push_dest.push(jule::new_ptr<_1b9b95b30_scopeLabel>(_1b9b95b30_scopeLabel{._field_token=(*(_115434_l))._field_Token, ._field_label=_116013_label, ._field_pos=static_cast<jule::I32>(((*((*(_self_))._field_scope))._field_Stmts.len() - 1LL)), ._field_scope=_self_, })); };
}



inline void _1b9ba1e8d_pushGoto(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b26275_GotoSt> _117332_gt) {
	jule::Ptr<_1b9b92a3e_GotoSt> _117413_st = jule::new_ptr<_1b9b92a3e_GotoSt>(_1b9b92a3e_GotoSt{._field_Ident=(*((*(_117332_gt))._field_Label))._field_Kind, });;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_117413_st, &__jule_any_type42)); };
	{ jule::Slice<jule::Ptr<_1b9b961b3_scopeGoto>> &__jule_push_dest = (*((*(_self_))._field_gotos)); __jule_push_dest.push(jule::new_ptr<_1b9b961b3_scopeGoto>(_1b9b961b3_scopeGoto{._field_st=_117413_st, ._field_gt=_117332_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I32>(((*((*(_self_))._field_scope))._field_Stmts.len() - 1LL))})); };
}



inline void _1b9ba2246_checkPostfix(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b27265_AssignSt> _118736_a) {
	if (((*(_118736_a))._field_Left.len() > 1LL)) {
		_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_118736_a))._field_Setter, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b9b1caeb_Expr> _119313_expr = (*((*(_118736_a))._field_Left[0LL]))._field_Expr;;
	jule::Ptr<_1b9c5d016_Data> _119413_d = _1b9c7cbd4_evalExpr(_1b9bdc4a1_eval((*(_self_))._field_s, jule::Trait<_1b9cacc14_Lookup>(_self_, 0)), _119313_expr);;
	if ((_119413_d == nullptr)) {
		return;;
	};
	_1b9b8e013_checkAssign(&((*(_self_))._field_s), &(_119413_d), nullptr, (*(_118736_a))._field_Setter);
	if ((_1b9c90d4b_Ptr((*(_119413_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1b9c9d09a_Ptr> _120217_ptr = _1b9c90d4b_Ptr((*(_119413_d))._field_Kind.ptr());;
		if (_1b9c9dad4_IsUnsafe(_120217_ptr.ptr())) {
			_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_118736_a))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_118736_a))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1b9c8d596_Str((*(_119413_d))._field_Kind.ptr()), &__jule_any_type4)}));
			return;;
		};
	} else {
		if (((_1b9c9082e_Prim((*(_119413_d))._field_Kind.ptr()) == nullptr) || (!(_1ec6826e9_IsNum((*(_1b9c9082e_Prim((*(_119413_d))._field_Kind.ptr())))._field_Kind))))) {
			_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_118736_a))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_118736_a))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1b9c8d596_Str((*(_119413_d))._field_Kind.ptr()), &__jule_any_type4)}));
			return;;
		};
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1b9b92e18_Postfix>(_1b9b92e18_Postfix{._field_Expr=(*(_119413_d))._field_Model, ._field_Op=(*((*(_118736_a))._field_Setter))._field_Kind}), &__jule_any_type43)); };
}



inline jule::Bool _1b9ba2587_isNewAssignIdent(_1b9b970c6_scopeChecker* _self_, jule::Str _122035_ident) {
	if ((_1b9b05c5a_IsIgnoreIdent(_122035_ident) || (_122035_ident).empty())) {
		return false;;
	};
	return (_1b9c5ad5a_defByIdent((*(_self_))._field_table.ptr(), &(_122035_ident), false) == nullptr);;
}



inline void _1b9ba2840_removeInteriorMutRisk(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9c5d016_Data>* _123346_d) {
	jule::Ptr<_1b9b3c137_StructIns> _12349_s = _1b9c91da2_Struct((*((*(_123346_d))))._field_Kind.ptr());;
	if ((_12349_s == nullptr)) {
		return;;
	};
	jule::Ptr<_1b9b970c6_scopeChecker> _12389_root = _1b9b9a44d_getHardRoot(_self_);;
	if (((*((*(_12389_root))._field_owner))._field_Owner != _12349_s)) {
		return;;
	};
	(*((*(_123346_d))))._field_Mutable=true;
}



inline jule::Bool _1b9ba2ce6_checkStructureAssignOp(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b3c137_StructIns>* _124747_s, jule::Ptr<_1b9b27265_AssignSt>* _124767_a, jule::Ptr<_1b9c5d016_Data>* _124786_r) {
	jule::Ptr<_1b9b5216e_FnIns> _125017_overload = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_124767_a))))._field_Setter))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(40LLU)) {
			_case_begin_1c99548ac:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(41LLU)) {
			_case_begin_1c995653a:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_1c99565a1:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(42LLU)) {
			_case_begin_1c9954ea6:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1c995501c:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(45LLU)) {
			_case_begin_1c9955083:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(46LLU)) {
			_case_begin_1c99550e9:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(49LLU)) {
			_case_begin_1c995668e:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(48LLU)) {
			_case_begin_1c9956705:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(47LLU)) {
			_case_begin_1c995676b:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1c9954e40:;
			{
				_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*(_124767_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_124767_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1b9b3c4ab_Str((*(_124747_s)).ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_1c9954dda:;
	};
	if ((_125017_overload == nullptr)) {
		_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*(_124767_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_124767_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1b9b3c4ab_Str((*(_124747_s)).ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_1b9b511c3_ParamIns> _128213_p = (*(_125017_overload))._field_Params[1LL];;
	return _1b9bdca12_checkAssignType((*(_self_))._field_s, (*((*(_128213_p))._field_Decl))._field_Reference, &((*(_128213_p))._field_Kind), _124786_r, (*((*(_124767_a))))._field_Setter);;
}



inline void _1b9ba309e_checkSingleAssign(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b27265_AssignSt>* _128642_a) {
	jule::Ptr<_1b9c5d016_Data> _128717_l = nullptr;;
	if ((!(_1b9b05c5a_IsIgnoreIdent((*((*((*(_128642_a))))._field_Left[0LL]))._field_Ident)))) {
		jule::Ptr<_1b9b1caeb_Expr> _129017_expr = (*((*((*(_128642_a))))._field_Left[0LL]))._field_Expr;;
		_128717_l=_1b9c7cbd4_evalExpr(_1b9bdc4a1_eval((*(_self_))._field_s, jule::Trait<_1b9cacc14_Lookup>(_self_, 0)), _129017_expr);
		if ((_128717_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1b9c5ec0a_Eval> _129717_eval = nullptr;;
	if ((_128717_l != nullptr)) {
		_129717_eval=_1b9bdc160_evalp((*(_self_))._field_s, jule::Trait<_1b9cacc14_Lookup>(_self_, 0), (*(_128717_l))._field_Kind);
	} else {
		_129717_eval=_1b9bdc4a1_eval((*(_self_))._field_s, jule::Trait<_1b9cacc14_Lookup>(_self_, 0));
	};
	(*(_129717_eval))._field_unsafety=_1b9b99480_isUnsafe(_self_);
	jule::Ptr<_1b9c5d016_Data> _130413_r = _1b9c7cbd4_evalExpr(_129717_eval, (*((*(_128642_a))))._field_Right);;
	if ((_130413_r == nullptr)) {
		return;;
	};
	_1b9ba2840_removeInteriorMutRisk(_self_, &(_130413_r));
	if ((_128717_l == nullptr)) {
		if (_1b9c8e542_Void((*(_130413_r))._field_Kind.ptr())) {
			_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_128642_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_130413_r, &__jule_any_type24)); };
		return;;
	};
	if ((!(_1b9b8e013_checkAssign(&((*(_self_))._field_s), &(_128717_l), _130413_r, (*((*(_128642_a))))._field_Setter)))) {
		return;;
	};
	if ((_1b9c92655_Tup((*(_130413_r))._field_Kind.ptr()) != nullptr)) {
		_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*(_128642_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b9b4102b_OperandExprModel> _132813_lm = jule::new_ptr<_1b9b4102b_OperandExprModel>(_1b9b4102b_OperandExprModel{._field_Kind=(*(_128717_l))._field_Kind, ._field_Model=(*(_128717_l))._field_Model});;
	jule::Ptr<_1b9b4102b_OperandExprModel> _133213_rm = jule::new_ptr<_1b9b4102b_OperandExprModel>(_1b9b4102b_OperandExprModel{._field_Kind=(*(_130413_r))._field_Kind, ._field_Model=(*(_130413_r))._field_Model});;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1b9b933be_Assign>(_1b9b933be_Assign{._field_L=_132813_lm, ._field_R=_133213_rm, ._field_Op=(*((*(_128642_a))))._field_Setter}), &__jule_any_type44)); };
	if (((*((*((*(_128642_a))))._field_Setter))._field_Id != static_cast<jule::U32>(71LLU))) {
		jule::Ptr<_1b9b3c137_StructIns> _133917_strct = _1b9c91da2_Struct((*(_128717_l))._field_Kind.ptr());;
		if ((_133917_strct != nullptr)) {
			_1b9ba2ce6_checkStructureAssignOp(_self_, &(_133917_strct), _128642_a, &(_130413_r));
			return;;
		};
		jule::U32 _134413_id = (*((*((*(_128642_a))))._field_Setter))._field_Id;;
		(*((*((*(_128642_a))))._field_Setter))._field_Id=_1b9ba9193_removeEqFromOp((*((*((*(_128642_a))))._field_Setter))._field_Id);
		_1b9c80137_binaryEval _134617_solver = static__1b9c80a61_new(_129717_eval, (*((*(_128642_a))))._field_Setter);;
		_130413_r=_1b9c85d74_solveExplicit(&_134617_solver, &(_128717_l), &(_130413_r));
		(*((*((*(_128642_a))))._field_Setter))._field_Id=_134413_id;
		if ((_130413_r == nullptr)) {
			return;;
		};
		return;;
	};
	_1b9c46ad2_assignTypeChecker _135513_checker = _1b9c46ad2_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_128717_l))._field_Kind, ._field_d=_130413_r, ._field_errorToken=(*((*(_128642_a))))._field_Setter};;
	if (_1b9c47d47_check(&_135513_checker)) {
		(*(_133213_rm))._field_Model=(*(_130413_r))._field_Model;
		(*(_132813_lm))._field_Model=(*(_128717_l))._field_Model;
	};
}



inline void _1b9ba3632_processEndPartOfMultiAssign(_1b9b970c6_scopeChecker* _self_, jule::Ptr<_1b9b93798_MultiAssign>* _136751_st, jule::Ptr<_1b9b27265_AssignSt>* _136814_a, jule::Ptr<_1b9b26bd2_AssignLeft>* _136833_lexpr, jule::Ptr<_1b9c5d016_Data>* _136858_l, jule::Ptr<_1b9c5d016_Data>* _136873_r) {
	if (((!((*((*(_136833_lexpr))))._field_Reference)) && _1b9b05c5a_IsIgnoreIdent((*((*(_136833_lexpr))))._field_Ident))) {
		if (_1b9c8e542_Void((*((*(_136873_r))))._field_Kind.ptr())) {
			_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_136814_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_1b9c5d016_Data>> &__jule_push_dest = (*((*(_136751_st))))._field_L; __jule_push_dest.push(nullptr); };
		return;;
	};
	if (((*((*(_136814_a))))._field_Declarative && ((*((*(_136833_lexpr))))._field_Reference || _1b9ba2587_isNewAssignIdent(_self_, (*((*(_136833_lexpr))))._field_Ident)))) {
		if (_1b9b9b31c_isDuplicatedIdent(_self_, 0LLU, &((*((*(_136833_lexpr))))._field_Ident))) {
			_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*(_136833_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_136833_lexpr))))._field_Ident, &__jule_any_type4)}));
			_1b9bd5367_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
			_1b9b99914_stop(_self_);
			return;;
		};
		if (_1b9b05c5a_IsIgnoreIdent((*((*(_136833_lexpr))))._field_Ident)) {
			_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*(_136833_lexpr))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1b9c09611_Var> _138917_v = jule::new_ptr<_1b9c09611_Var>(_1b9c09611_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*((*(_136833_lexpr))))._field_Token, ._field_Ident=(*((*(_136833_lexpr))))._field_Ident, ._field_Mutable=(*((*(_136833_lexpr))))._field_Mutable, ._field_Reference=(*((*(_136833_lexpr))))._field_Reference, ._field_Value=jule::new_ptr<_1b9c5e15a_Value>(_1b9c5e15a_Value{._field_Expr=(*((*(_136814_a))))._field_Right, ._field_Data=(*(_136873_r))}), });;
		_1b9beab30_checkVarValue((*(_self_))._field_s, &(_138917_v));
		(*(_138917_v))._field_Value=nullptr;
		{ jule::Slice<jule::Ptr<_1b9c5d016_Data>> &__jule_push_dest = (*((*(_136751_st))))._field_L; __jule_push_dest.push(jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=(*((*(_138917_v))._field_Kind))._field_Kind, ._field_Mutable=(*(_138917_v))._field_Mutable, ._field_Reference=(*(_138917_v))._field_Reference, ._field_Lvalue=(!((*(_138917_v))._field_Constant)), ._field_Model=jule::Any(_138917_v, &__jule_any_type8), })); };
		{ jule::Slice<jule::Ptr<_1b9c09611_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_138917_v); };
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_138917_v, &__jule_any_type8)); };
		return;;
	};
	if (((*((*(_136833_lexpr))))._field_Mutable || (*((*(_136833_lexpr))))._field_Reference)) {
		_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*(_136833_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_136833_lexpr))))._field_Ident, &__jule_any_type4)}));
		_1b9bd5367_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if ((!(_1b9b8e013_checkAssign(&((*(_self_))._field_s), _136858_l, (*(_136873_r)), (*((*(_136833_lexpr))))._field_Token)))) {
		return;;
	};
	;
	_1b9be1021_checkValidityForInitExpr((*(_self_))._field_s, (*((*(_136858_l))))._field_Mutable, false, &((*((*(_136858_l))))._field_Kind), _136873_r, &((*((*(_136814_a))))._field_Setter));
	_1b9c46ad2_assignTypeChecker _143213_checker = _1b9c46ad2_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*((*(_136858_l))))._field_Kind, ._field_d=(*(_136873_r)), ._field_errorToken=(*((*(_136814_a))))._field_Setter};;
	_1b9c47d47_check(&_143213_checker);
	{ jule::Slice<jule::Ptr<_1b9c5d016_Data>> &__jule_push_dest = (*((*(_136751_st))))._field_L; __jule_push_dest.push((*(_136858_l))); };
}



inline void _1b9ba38da_checkMultiAssign(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b27265_AssignSt>* _144241_a) {
	jule::Ptr<_1b9c5d016_Data> _144313_rd = _1b9c7cbd4_evalExpr(_1b9bdc4a1_eval((*(_self_))._field_s, jule::Trait<_1b9cacc14_Lookup>(_self_, 0)), (*((*(_144241_a))))._field_Right);;
	if ((_144313_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1b9c5d016_Data>> _144713_right = _1b9b8d166_getDatasFromTupleData(&(_144313_rd));;
	if ((_144713_right.len() == 1LL)) {
		{
			auto &_match_expr{ (*(_144713_right[0LL]))._field_Model };
			
			if (_match_expr.type == &__jule_any_type45) {
				_case_begin_1c99817da:;
				{
					jule::Ptr<_1b9b43d86_IndexingExprModel> _145121_iem = (*(_144713_right[0LL]))._field_Model.cast_ptr<_1b9b43d86_IndexingExprModel>(&__jule_any_type45);;
					if ((_1b9c923be_Map((*((*(_145121_iem))._field_Expr))._field_Kind.ptr()) != nullptr)) {
						_144713_right=jule::Slice<jule::Ptr<_1b9c5d016_Data>>::make({jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=(*(_1b9c923be_Map((*((*(_145121_iem))._field_Expr))._field_Kind.ptr())))._field_Val, }),jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d79c7b_primBool, })});
					};
				}
			}
			_match_end_1c9981741:;
		};
	};
	{
		
		if (((*((*(_144241_a))))._field_Left.len() > _144713_right.len())) {
			_case_begin_1c9981059:;
			{
				_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*(_144241_a))))._field_Setter, jule::Str::lit("overflow multi assignment identifers", 36), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*((*(_144241_a))))._field_Left.len() < _144713_right.len())) {
			_case_begin_1c99810c0:;
			{
				_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*(_144241_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1c9981c19:;
	};
	jule::Ptr<_1b9b93798_MultiAssign> _147013_st = jule::new_ptr<_1b9b93798_MultiAssign>(_1b9b93798_MultiAssign{._field_R=(*(_144313_rd))._field_Model});;
	{
		auto expr = &((*((*(_144241_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c998624b:;
		if (it != expr_end) {
			jule::I32 _147313_i = it - expr->begin();
			{
				jule::Ptr<_1b9b26bd2_AssignLeft> _147417_lexpr = (*((*(_144241_a))))._field_Left[_147313_i];;
				jule::Ptr<_1b9c5d016_Data> _147521_l = nullptr;;
				if (((!(_1b9b05c5a_IsIgnoreIdent((*(_147417_lexpr))._field_Ident))) && ((!((*((*(_144241_a))))._field_Declarative)) || (!(_1b9ba2587_isNewAssignIdent(_self_.ptr(), (*(_147417_lexpr))._field_Ident)))))) {
					_147521_l=_1b9c7cbd4_evalExpr(_1b9bdc4a1_eval((*(_self_))._field_s, jule::Trait<_1b9cacc14_Lookup>(_self_, 0)), (*(_147417_lexpr))._field_Expr);
					if ((_147521_l == nullptr)) {
						goto _iter_next_1c998624b;
					};
				};
				jule::Ptr<_1b9c5d016_Data> _148317_r = _144713_right[_147313_i];;
				_1b9ba2840_removeInteriorMutRisk(_self_, &(_148317_r));
				_1b9ba3632_processEndPartOfMultiAssign(_self_.ptr(), &(_147013_st), _144241_a, &(_147417_lexpr), &(_147521_l), &(_148317_r));
			}
			_iter_next_1c998624b:;
			++it;
			_147313_i++;
			goto _iter_begin_1c998624b;
		}
		_iter_end_1c998624b:;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_147013_st, &__jule_any_type46)); };
}



inline void _1b9ba3b93_singleDeclAssign(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b27265_AssignSt>* _149041_a) {
	jule::Ptr<_1b9b26bd2_AssignLeft> _149113_lexpr = (*((*(_149041_a))))._field_Left[0LL];;
	if (_1b9b9b31c_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*(_149113_lexpr))._field_Ident))) {
		_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_149113_lexpr))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_149113_lexpr))._field_Ident, &__jule_any_type4)}));
		_1b9bd5367_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1b9b99914_stop(_self_.ptr());
		return;;
	};
	if (_1b9b05c5a_IsIgnoreIdent((*(_149113_lexpr))._field_Ident)) {
		_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_149113_lexpr))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b9c5d016_Data> _150213_r = _1b9c7cbd4_evalExpr(_1b9bdc4a1_eval((*(_self_))._field_s, jule::Trait<_1b9cacc14_Lookup>(_self_, 0)), (*((*(_149041_a))))._field_Right);;
	if ((_150213_r == nullptr)) {
		return;;
	};
	_1b9ba2840_removeInteriorMutRisk(_self_, &(_150213_r));
	jule::Ptr<_1b9c09611_Var> _151013_v = jule::new_ptr<_1b9c09611_Var>(_1b9c09611_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*(_149113_lexpr))._field_Token, ._field_Ident=(*(_149113_lexpr))._field_Ident, ._field_Mutable=(*(_149113_lexpr))._field_Mutable, ._field_Reference=(*(_149113_lexpr))._field_Reference, ._field_Value=jule::new_ptr<_1b9c5e15a_Value>(_1b9c5e15a_Value{._field_Expr=(*((*(_149041_a))))._field_Right, ._field_Data=_150213_r}), });;
	_1b9beab30_checkVarValue((*(_self_))._field_s, &(_151013_v));
	{ jule::Slice<jule::Ptr<_1b9c09611_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_151013_v); };
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_151013_v, &__jule_any_type8)); };
}



inline void _1b9ba3e4b_checkAssignSt(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b27265_AssignSt> _152637_a) {
	{
		
		if (_1b9b07e8d_IsPostfixOp((*((*(_152637_a))._field_Setter))._field_Id)) {
			_case_begin_1c999438b:;
			{
				_1b9ba2246_checkPostfix(_self_, _152637_a);
			}
		}
		else if (((*(_152637_a))._field_Left.len() == 1LL)) {
			_case_begin_1c9993005:;
			{
				if ((*(_152637_a))._field_Declarative) {
					_1b9ba3b93_singleDeclAssign(_self_, &(_152637_a));
				} else {
					_1b9ba309e_checkSingleAssign(_self_, &(_152637_a));
				};
			}
		}
		else {
			_case_begin_1c9992e8e:;
			{
				_1b9ba38da_checkMultiAssign(_self_, &(_152637_a));
			}
		}
		_match_end_1c9992dc3:;
	};
}



inline jule::Ptr<_1b9b8ecc2_Scope> _1b9ba4347_checkCaseScope(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b94a41_Case>* _154135_c, jule::Ptr<_1b9b287d8_ScopeTree>* _154150_tree) {
	jule::Ptr<_1b9b970c6_scopeChecker> _154213_ssc = _1b9ba8d1e_newChildChecker(_self_);;
	(*(_154213_ssc))._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_154135_c))));
	return _1b9b9c6d6_checkChildSc(_self_, _154150_tree, &(_154213_ssc));;
}



inline jule::Ptr<_1b9b94a41_Case> _1b9ba48a8_checkCase(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b93e08_Match> _154733_m, jule::I32 _154744_i, jule::Ptr<_1b9b305d1_Case> _154756_c, jule::Ptr<_1b9c5d016_Data> _154775_expr) {
	jule::Ptr<_1b9b94a41_Case> _154813_case = (*(_154733_m))._field_Cases[_154744_i];;
	(*(_154813_case))._field_Exprs=jule::Slice<jule::Ptr<_1b9c5d016_Data>>::alloc(0LL, (*(_154756_c))._field_Exprs.len());
	jule::Bool _155013_constMatched = false;;
	jule::Ptr<_1b9c5ec0a_Eval> _155113_eval = _1b9bdc4a1_eval((*(_self_))._field_s, jule::Trait<_1b9cacc14_Lookup>(_self_, 0));;
	{
		auto expr = &((*(_154756_c))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9999b00:;
		if (it != expr_end) {
			jule::Ptr<_1b9b1caeb_Expr> _155221_e = *it;
			{
				jule::Ptr<_1b9c5d016_Data> _155317_d = _1b9c7bdc0_evalExprKind(_155113_eval, (*(_155221_e))._field_Kind);;
				if ((_155317_d == nullptr)) {
					goto _iter_next_1c9999b00;
				};
				if ((*(_154733_m))._field_TypeMatch) {
					{ jule::Slice<jule::Ptr<_1b9c5d016_Data>> &__jule_push_dest = (*(_154813_case))._field_Exprs; __jule_push_dest.push(_155317_d); };
					if ((_1b9b8cd9c_countMatchType(&(_154733_m), &((*(_155317_d))._field_Kind)) > 1LL)) {
						_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_155221_e))._field_Token, jule::Str::lit("duplicated pattern: type @ is already matched", 45), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_155317_d))._field_Kind.ptr()), &__jule_any_type4)}));
					};
					if ((*((*(_154775_expr))._field_Kind))._field_Generic) {
						_155013_constMatched=(_155013_constMatched || _1b9c8d8d7_Equal((*(_154775_expr))._field_Kind, (*(_155317_d))._field_Kind));
					} else {
						if ((_1b9c91368_TypeEnum((*(_154775_expr))._field_Kind.ptr()) != nullptr)) {
							_1b9bdceb8_checkTypeCompatibility((*(_self_))._field_s, &((*(_154775_expr))._field_Kind), &((*(_155317_d))._field_Kind), &((*(_155221_e))._field_Token));
						} else {
							jule::Ptr<_1b9b62514_Trait> _156825_trt = _1b9c92138_Trait((*(_154775_expr))._field_Kind.ptr());;
							if ((_156825_trt != nullptr)) {
								_1b9bdceb8_checkTypeCompatibility((*(_self_))._field_s, &((*(_154775_expr))._field_Kind), &((*(_155317_d))._field_Kind), &((*(_155221_e))._field_Token));
							};
						};
					};
					goto _iter_next_1c9999b00;
				} else if ((*(_154733_m))._field_Comptime) {
					if ((!(_1b9c5d8da_IsConst(_155317_d.ptr())))) {
						_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_155221_e))._field_Token, jule::Str::lit("const-matching requires constant expression", 43), jule::Slice<jule::Any>());
					} else {
						_155013_constMatched=(_155013_constMatched || _1ec684bd5_ReadBool((*(_155317_d))._field_Constant.ptr()));
					};
				};
				if ((*(_155317_d))._field_Decl) {
					_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_155221_e))._field_Token, jule::Str::lit("expecting expression, found type declaration", 44), jule::Slice<jule::Any>());
					_1b9bd5367_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("you can use type-match if you want to match types", 49), jule::Slice<jule::Any>());
					goto _iter_next_1c9999b00;
				};
				{ jule::Slice<jule::Ptr<_1b9c5d016_Data>> &__jule_push_dest = (*(_154813_case))._field_Exprs; __jule_push_dest.push(_155317_d); };
				_1b9c46ad2_assignTypeChecker _159117_checker = _1b9c46ad2_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_154775_expr))._field_Kind, ._field_d=_155317_d, ._field_errorToken=(*(_155221_e))._field_Token};;
				_1b9c47d47_check(&_159117_checker);
			}
			_iter_next_1c9999b00:;
			++it;
			goto _iter_begin_1c9999b00;
		}
		_iter_end_1c9999b00:;
	};
	if (((!((*(_154733_m))._field_Comptime)) || _155013_constMatched)) {
		(*(_154813_case))._field_Scope=_1b9ba4347_checkCaseScope(_self_, &(_154813_case), &((*(_154756_c))._field_Scope));
	};
	return _154813_case;;
}



inline void _1b9ba4cc6_checkCases(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b30d1d_MatchCase>* _160535_m, jule::Ptr<_1b9b93e08_Match> _160554_rm, jule::Ptr<_1b9c5d016_Data> _160570_expr) {
	(*(_160554_rm))._field_Cases=jule::Slice<jule::Ptr<_1b9b94a41_Case>>::alloc(0LL, (*((*(_160535_m))))._field_Cases.len());
	{
		auto expr = &((*((*(_160535_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c99a77ab:;
		if (it != expr_end) {
			jule::I32 _160713_i = it - expr->begin();
			{
				jule::Ptr<_1b9b94a41_Case> _160817_case = jule::new_ptr<_1b9b94a41_Case>(_1b9b94a41_Case{._field_Owner=_160554_rm, });;
				if ((_160713_i > 0LL)) {
					(*((*(_160554_rm))._field_Cases[(_160713_i - 1LL)]))._field_Next=_160817_case;
				};
				{ jule::Slice<jule::Ptr<_1b9b94a41_Case>> &__jule_push_dest = (*(_160554_rm))._field_Cases; __jule_push_dest.push(_160817_case); };
			}
			_iter_next_1c99a77ab:;
			++it;
			_160713_i++;
			goto _iter_begin_1c99a77ab;
		}
		_iter_end_1c99a77ab:;
	};
	if ((((*(_160554_rm))._field_Default != nullptr) && ((*((*(_160535_m))))._field_Cases.len() > 0LL))) {
		(*((*(_160554_rm))._field_Cases[((*(_160554_rm))._field_Cases.len() - 1LL)]))._field_Next=(*(_160554_rm))._field_Default;
	};
	{
		auto expr = &((*((*(_160535_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c99a81b3:;
		if (it != expr_end) {
			jule::I32 _162114_i = it - expr->begin();
			jule::Ptr<_1b9b305d1_Case> _162121_c = *it;
			{
				_1b9ba48a8_checkCase(_self_, _160554_rm, _162114_i, _162121_c, _160570_expr);
			}
			_iter_next_1c99a81b3:;
			++it;
			_162114_i++;
			goto _iter_begin_1c99a81b3;
		}
		_iter_end_1c99a81b3:;
	};
}



inline jule::Ptr<_1b9b94a41_Case> _1b9ba51c2_checkDefault(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b93e08_Match> _162636_m, jule::Ptr<_1b9b2e437_Else> _162651_d) {
	jule::Ptr<_1b9b94a41_Case> _162713_def = jule::new_ptr<_1b9b94a41_Case>(_1b9b94a41_Case{._field_Owner=_162636_m, });;
	(*(_162713_def))._field_Scope=_1b9ba4347_checkCaseScope(_self_, &(_162713_def), &((*(_162651_d))._field_Scope));
	return _162713_def;;
}



inline void _1b9ba5535_checkComptimePanic(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b032eb_Token> _163438_callToken, jule::Ptr<_1b9b8ecc2_Scope>* _163458_s) {
	if (((*((*(_163458_s))))._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _16389_stmt = (*((*(_163458_s))))._field_Stmts[0LL];;
	{
		auto &_match_expr{ _16389_stmt };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1c99ae6a3:;
			{
				jule::Ptr<_1b9c5d016_Data> _164113_d = _16389_stmt.cast_ptr<_1b9c5d016_Data>(&__jule_any_type24);;
				{
					auto &_match_expr{ (*(_164113_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type29) {
						_case_begin_1c99b0495:;
						{
							jule::Ptr<_1b9b47c7a_BuiltinPanicCallExprModel> _164417_m = (*(_164113_d))._field_Model.cast_ptr<_1b9b47c7a_BuiltinPanicCallExprModel>(&__jule_any_type29);;
							{
								auto &_match_expr{ (*(_164417_m))._field_Expr };
								
								if (_match_expr.type == &__jule_any_type19) {
									_case_begin_1c99b1496:;
									{
										jule::Ptr<_1ec682ce3_Const> _164721_c = (*(_164417_m))._field_Expr.cast_ptr<_1ec682ce3_Const>(&__jule_any_type19);;
										if (_1ec687567_IsStr(_164721_c.ptr())) {
											if ((_163438_callToken == nullptr)) {
												jule::Ptr<_1b9b970c6_scopeChecker> _165033_root = _1b9b9a44d_getHardRoot(_self_);;
												_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_165033_root))._field_calledFrom, jule::Str::lit("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_1ec684e6b_ReadStr(_164721_c.ptr()), &__jule_any_type4)}));
											} else {
												_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), _163438_callToken, jule::Str::lit("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_1ec684e6b_ReadStr(_164721_c.ptr()), &__jule_any_type4)}));
											};
											_1b9b99914_stop(_self_.ptr());
										};
									}
								}
								_match_end_1c99b1441:;
							};
						}
					}
					_match_end_1c99b0440:;
				};
			}
		}
		_match_end_1c99ae64d:;
	};
}



inline void _1b9ba5898_processConstMatch(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b93e08_Match>* _166242_tm, jule::Ptr<_1b9b30d1d_MatchCase>* _166259_m) {
	{
		auto expr = &((*((*(_166242_tm))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c99b0198:;
		if (it != expr_end) {
			jule::I32 _166314_i = it - expr->begin();
			jule::Ptr<_1b9b94a41_Case> _166321_c = *it;
			{
				if (((*(_166321_c))._field_Scope != nullptr)) {
					jule::Ptr<_1b9b032eb_Token> _166525_token = nullptr;;
					if (((!((*((*(_166242_tm))))._field_TypeMatch)) && ((*((*(_166321_c))._field_Scope))._field_Stmts.len() > 0LL))) {
						_166525_token=(*((*((*((*(_166259_m))))._field_Cases[_166314_i]))._field_Scope))._field_Stmts[0LL]._field_Token;
					};
					_1b9ba5535_checkComptimePanic(_self_, _166525_token, &((*(_166321_c))._field_Scope));
					(*((*(_166242_tm))))._field_Default=_166321_c;
					(*((*(_166242_tm))))._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1c99b0198:;
			++it;
			_166314_i++;
			goto _iter_begin_1c99b0198;
		}
		_iter_end_1c99b0198:;
	};
	if (((*((*(_166259_m))))._field_Default != nullptr)) {
		(*((*(_166242_tm))))._field_Cases=nullptr;
		(*((*(_166242_tm))))._field_Default=_1b9ba51c2_checkDefault(_self_, (*(_166242_tm)), (*((*(_166259_m))))._field_Default);
		if (((*((*(_166242_tm))))._field_Default != nullptr)) {
			jule::Ptr<_1b9b032eb_Token> _167925_token = nullptr;;
			if ((!((*((*(_166242_tm))))._field_TypeMatch))) {
				_167925_token=(*((*((*((*(_166259_m))))._field_Default))._field_Scope))._field_Stmts[0LL]._field_Token;
			};
			_1b9ba5535_checkComptimePanic(_self_, _167925_token, &((*((*((*(_166242_tm))))._field_Default))._field_Scope));
		};
	} else {
		(*((*(_166242_tm))))._field_Cases=nullptr;
	};
}



inline void _1b9ba5b51_checkTypeMatch(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b30d1d_MatchCase>* _169139_m) {
	jule::Ptr<_1b9c5d016_Data> _169213_d = _1b9c7c552_eval(_1b9bdc4a1_eval((*(_self_))._field_s, jule::Trait<_1b9cacc14_Lookup>(_self_, 0)), (*((*(_169139_m))))._field_Expr);;
	if ((_169213_d == nullptr)) {
		return;;
	};
	if (((!((*((*(_169213_d))._field_Kind))._field_Generic)) && (!(((((_1b9c9082e_Prim((*(_169213_d))._field_Kind.ptr()) != nullptr) && _1b9c994c5_IsAny(_1b9c9082e_Prim((*(_169213_d))._field_Kind.ptr()).ptr())) || (_1b9c92138_Trait((*(_169213_d))._field_Kind.ptr()) != nullptr)) || (_1b9c91368_TypeEnum((*(_169213_d))._field_Kind.ptr()) != nullptr)))))) {
		_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_169139_m))))._field_Expr))._field_Token, jule::Str::lit("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b9b93e08_Match> _170313_tm = jule::new_ptr<_1b9b93e08_Match>(_1b9b93e08_Match{._field_Expr=_169213_d, ._field_TypeMatch=true, });;
	(*(_170313_tm))._field_Comptime=(*((*((*(_170313_tm))._field_Expr))._field_Kind))._field_Generic;
	if (((!((*(_170313_tm))._field_Comptime)) && ((*((*(_169139_m))))._field_Default != nullptr))) {
		(*(_170313_tm))._field_Default=_1b9ba51c2_checkDefault(_self_, _170313_tm, (*((*(_169139_m))))._field_Default);
	};
	_1b9ba4cc6_checkCases(_self_, _169139_m, _170313_tm, _169213_d);
	if ((*(_170313_tm))._field_Comptime) {
		_1b9ba5898_processConstMatch(_self_, &(_170313_tm), _169139_m);
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_170313_tm, &__jule_any_type47)); };
}



inline void _1b9ba5e09_checkCommonMatch(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b30d1d_MatchCase>* _172441_m) {
	jule::Ptr<_1b9c5d016_Data> _172517_d = nullptr;;
	if (((*((*(_172441_m))))._field_Expr == nullptr)) {
		_172517_d=jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d79c7b_primBool, ._field_Constant=static__1ec6837b6_NewBool(true)});
		(*(_172517_d))._field_Model=jule::Any((*(_172517_d))._field_Constant, &__jule_any_type19);
	} else {
		_172517_d=_1b9c7cbd4_evalExpr(_1b9bdc4a1_eval((*(_self_))._field_s, jule::Trait<_1b9cacc14_Lookup>(_self_, 0)), (*((*(_172441_m))))._field_Expr);
		if ((_172517_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1b9b93e08_Match> _173913_mc = jule::new_ptr<_1b9b93e08_Match>(_1b9b93e08_Match{._field_Expr=_172517_d, ._field_Comptime=(((((*((*(_172441_m))))._field_Expr != nullptr) && _1b9c5d8da_IsConst(_172517_d.ptr())) && _1ec6872d1_IsBool((*(_172517_d))._field_Constant.ptr())) && _1ec684bd5_ReadBool((*(_172517_d))._field_Constant.ptr())), });;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_173913_mc, &__jule_any_type47)); };
	if (((!((*(_173913_mc))._field_Comptime)) && ((*((*(_172441_m))))._field_Default != nullptr))) {
		(*(_173913_mc))._field_Default=_1b9ba51c2_checkDefault(_self_, _173913_mc, (*((*(_172441_m))))._field_Default);
	};
	_1b9ba4cc6_checkCases(_self_, _172441_m, _173913_mc, _172517_d);
	if ((*(_173913_mc))._field_Comptime) {
		_1b9ba5898_processConstMatch(_self_, &(_173913_mc), _172441_m);
	};
}



inline void _1b9ba61b2_checkMatch(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b30d1d_MatchCase> _176234_m) {
	if ((*(_176234_m))._field_TypeMatch) {
		_1b9ba5b51_checkTypeMatch(_self_, &(_176234_m));
		return;;
	};
	_1b9ba5e09_checkCommonMatch(_self_, &(_176234_m));
}



inline void _1b9ba646a_checkFall(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b26572_FallSt> _177029_f) {
	if (((((*(_self_))._field_cse == 0LLU) || (((*((*(_self_))._field_scope))._field_Stmts.len() + 1LL) < (*((*(_self_))._field_scope))._field_Stmts.len())) || _1b9b99e31_isDeferred(_self_))) {
		_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_177029_f))._field_Token, jule::Str::lit("fall keyword can only useable at end of the case scopes", 55), jule::Slice<jule::Any>());
		return;;
	};
	_1b9b94a41_Case* _177813_case = ((_1b9b94a41_Case*)((*(_self_))._field_cse));;
	if ((*((*(_177813_case))._field_Owner))._field_Comptime) {
		_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_177029_f))._field_Token, jule::Str::lit("the fall statement is not allowed for comptime-matching", 55), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_177813_case))._field_Next == nullptr)) {
		_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_177029_f))._field_Token, jule::Str::lit("fall cannot useable at final case", 33), jule::Slice<jule::Any>());
		_1b9bd5367_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("remove \"fall\" keyword", 21), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1b9b9513a_FallSt>(_1b9b9513a_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_177813_case))._field_Next))}), &__jule_any_type48)); };
}



inline jule::Ptr<_1b9b92368_BreakSt> _1b9ba67ab_checkBreakWithLabel(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b2d6cd_BreakSt> _179339_b) {
	jule::Ptr<_1b9b92368_BreakSt> _179413_brk = _1b9ba6aec_checkPlainBreak(_self_, _179339_b);;
	if ((_179413_brk == nullptr)) {
		return nullptr;;
	};
	(*(_179413_brk))._field_It=0LLU;
	(*(_179413_brk))._field_Mtch=0LLU;
	jule::Ptr<_1b9b95b30_scopeLabel> _180413_label = _1b9b8c2db_findLabelParent(&((*((*(_179339_b))._field_Label))._field_Kind), (*(_self_))._field_parent);;
	if ((_180413_label == nullptr)) {
		_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_179339_b))._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*((*(_179339_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	(*(_180413_label))._field_used=true;
	if ((((*(_180413_label))._field_pos + 1LL) >= (*((*((*(_180413_label))._field_scope))._field_scope))._field_Stmts.len())) {
		_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_179339_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_179339_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I32 _18179_i = ((*(_180413_label))._field_pos + 1LL);;
	if ((_18179_i >= (*((*((*(_180413_label))._field_scope))._field_scope))._field_Stmts.len())) {
		_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_179339_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_179339_b))._field_Label))._field_Kind, &__jule_any_type4)}));
	} else {
		jule::Any _182117_st = (*((*((*(_180413_label))._field_scope))._field_scope))._field_Stmts[_18179_i];;
		{
			auto &_match_expr{ _182117_st };
			
			if (_match_expr.type == &__jule_any_type36) {
				_case_begin_1c99dab41:;
				{
					(*(_179413_brk))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_182117_st.cast_ptr<_1b9b90c07_InfIter>(&__jule_any_type36)));
				}
			}
			else if (_match_expr.type == &__jule_any_type40) {
				_case_begin_1c99da888:;
				{
					(*(_179413_brk))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_182117_st.cast_ptr<_1b9b91b09_RangeIter>(&__jule_any_type40)));
				}
			}
			else if (_match_expr.type == &__jule_any_type38) {
				_case_begin_1c99da8ee:;
				{
					(*(_179413_brk))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_182117_st.cast_ptr<_1b9b911ad_WhileIter>(&__jule_any_type38)));
				}
			}
			else if (_match_expr.type == &__jule_any_type47) {
				_case_begin_1c99da965:;
				{
					(*(_179413_brk))._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_182117_st.cast_ptr<_1b9b93e08_Match>(&__jule_any_type47)));
				}
			}
			else {
				_case_begin_1c99da822:;
				{
					_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_179339_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_179339_b))._field_Label))._field_Kind, &__jule_any_type4)}));
				}
			}
			_match_end_1c99da7bc:;
		};
	};
	if (((*(_179413_brk))._field_It != 0LLU)) {
		if ((!(_1b9ba1333_checkValidBreakLabel(_self_, (*(_179413_brk))._field_It)))) {
			_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_179339_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_179339_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		};
	};
	if (((*(_179413_brk))._field_Mtch != 0LLU)) {
		if ((!(_1b9ba1333_checkValidBreakLabel(_self_, (*(_179413_brk))._field_Mtch)))) {
			_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_179339_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_179339_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		};
	};
	return _179413_brk;;
}



inline jule::Ptr<_1b9b92368_BreakSt> _1b9ba6aec_checkPlainBreak(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b2d6cd_BreakSt> _185135_b) {
	if (_1b9b99e31_isDeferred(_self_)) {
		_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_185135_b))._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b9b970c6_scopeChecker> _185713_scope = _self_;;
	_julec_label_1c99e3385:;
	{
		
		if ((((((*(_185713_scope))._field_it == 0LLU) && ((*(_185713_scope))._field_cse == 0LLU)) && ((*(_185713_scope))._field_parent != nullptr)) && ((*(_185713_scope))._field_owner == nullptr))) {
			_case_begin_1c99e363d:;
			{
				_185713_scope=(*(_185713_scope))._field_parent;
				goto _julec_label_1c99e3385;
			}
		}
		else if (((*(_185713_scope))._field_it != 0LLU)) {
			_case_begin_1c99e36b5:;
			{
				return jule::new_ptr<_1b9b92368_BreakSt>(_1b9b92368_BreakSt{._field_It=(*(_185713_scope))._field_it, });;
			}
		}
		else if (((*(_185713_scope))._field_cse != 0LLU)) {
			_case_begin_1c99e373c:;
			{
				return jule::new_ptr<_1b9b92368_BreakSt>(_1b9b92368_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(((_1b9b94a41_Case*)((*(_185713_scope))._field_cse))))._field_Owner))});;
			}
		}
		_match_end_1c99e3572:;
	};
	_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_185135_b))._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1b9ba6da5_checkBreak(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b2d6cd_BreakSt> _187330_b) {
	if (((*(_187330_b))._field_Label != nullptr)) {
		jule::Ptr<_1b9b92368_BreakSt> _187517_brk = _1b9ba67ab_checkBreakWithLabel(_self_, _187330_b);;
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_187517_brk, &__jule_any_type49)); };
		return;;
	};
	jule::Ptr<_1b9b92368_BreakSt> _188013_brk = _1b9ba6aec_checkPlainBreak(_self_, _187330_b);;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_188013_brk, &__jule_any_type49)); };
}



inline void _1b9ba715d_checkRet(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b2b92e_RetSt> _188432_r) {
	if (_1b9b99e31_isDeferred(_self_)) {
		_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_188432_r))._field_Token, jule::Str::lit("deferred scopes are not supports return statements", 50), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b9b954c0_RetSt> _188913_rt = jule::new_ptr<_1b9b954c0_RetSt>(_1b9b954c0_RetSt{._field_Func=(*(_1b9b9a1b7_getRoot(_self_)))._field_owner, });;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_188913_rt, &__jule_any_type50)); };
	jule::Ptr<_1b9c55a36_retTypeChecker> _189413_rtc = jule::new_ptr<_1b9c55a36_retTypeChecker>(_1b9c55a36_retTypeChecker{._field_sc=_self_, ._field_f=(*(_188913_rt))._field_Func, ._field_errorToken=(*(_188432_r))._field_Token, });;
	jule::Bool _18999_ok = _1b9c5674b_check(_189413_rtc.ptr(), &((*(_188432_r))._field_Expr));;
	if ((!(_18999_ok))) {
		return;;
	};
	if (((*(_188432_r))._field_Expr != nullptr)) {
		(*(_188913_rt))._field_Expr=(*(_189413_rtc))._field_model;
	};
}



inline void _1b9ba7416_checkUseExpr(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b1d4c0_UseExpr> _190932_ue) {
	if (((*(_self_))._field_result == nullptr)) {
		_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_190932_ue))._field_Token, jule::Str::lit("use expressions cannot useable out of exceptional handler scopes", 64), jule::Slice<jule::Any>());
		return;;
	};
	if (_1b9b99e31_isDeferred(_self_)) {
		_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_190932_ue))._field_Token, jule::Str::lit("use expressions cannot useable in deferred scopes", 49), jule::Slice<jule::Any>());
	};
	if ((((*(_self_))._field_i + 1LL) < (*((*(_self_))._field_tree))._field_Stmts.len())) {
		_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_190932_ue))._field_Token, jule::Str::lit("use expressions must be last statement of scope", 47), jule::Slice<jule::Any>());
	};
}



inline void _1b9ba76be_checkNode(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Any* _192534_node) {
	{
		auto &_match_expr{ (*(_192534_node)) };
		
		if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1c9a033b7:;
			{
				_1b9b9ccd0_checkAnonScope(_self_, (*(_192534_node)).cast_ptr<_1b9b287d8_ScopeTree>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1c9a03928:;
			{
				_1b9b9b5c5_checkVarDecl(_self_, (*(_192534_node)).cast_ptr<_1b9b2b555_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1c9a036e7:;
			{
				_1b9b9bb36_checkTypeAliasDecl(_self_, (*(_192534_node)).cast_ptr<_1b9b3012a_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1c9a03b9d:;
			{
				_1b9b9d3eb_checkExpr(_self_, (*(_192534_node)).cast_ptr<_1b9b1caeb_Expr>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1c9a03c14:;
			{
				_1b9b9dd36_checkConditional(_self_, (*(_192534_node)).cast_ptr<_1b9b2e8dd_Conditional>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1c9a03c7a:;
			{
				_1b9ba0ba1_checkIter(_self_, (*(_192534_node)).cast_ptr<_1b9b2c0c2_Iter>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1c9a03ce1:;
			{
				_1b9ba192c_checkCont(_self_, (*(_192534_node)).cast_ptr<_1b9b2daa7_ContSt>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1c9a03d57:;
			{
				_1b9ba1bd5_checkLabel(_self_, (*(_192534_node)).cast_ptr<_1b9b25d9b_LabelSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1c9a03dbd:;
			{
				_1b9ba1e8d_pushGoto(_self_, (*(_192534_node)).cast_ptr<_1b9b26275_GotoSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1c9a03e34:;
			{
				_1b9ba3e4b_checkAssignSt(_self_, (*(_192534_node)).cast_ptr<_1b9b27265_AssignSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1c9a03e9a:;
			{
				_1b9ba61b2_checkMatch(_self_, (*(_192534_node)).cast_ptr<_1b9b30d1d_MatchCase>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1c9a04011:;
			{
				_1b9ba646a_checkFall(_self_, (*(_192534_node)).cast_ptr<_1b9b26572_FallSt>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1c9a04077:;
			{
				_1b9ba6da5_checkBreak(_self_, (*(_192534_node)).cast_ptr<_1b9b2d6cd_BreakSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1c9a040dd:;
			{
				_1b9ba715d_checkRet(_self_, (*(_192534_node)).cast_ptr<_1b9b2b92e_RetSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1c9a04154:;
			{
				_1b9ba7416_checkUseExpr(_self_, (*(_192534_node)).cast_ptr<_1b9b1d4c0_UseExpr>(&__jule_any_type63));
			}
		}
		else {
			_case_begin_1c9a03560:;
			{
				jule::outln(jule::Str::lit("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1c9a0350a:;
	};
}



inline void _1b9ba78bc_checkResult(jule::Ptr<_1b9b970c6_scopeChecker> _self_) {
	_1b9b28178_Stmt _196313_stmt = (*((*(_self_))._field_tree))._field_Stmts[((*((*(_self_))._field_tree))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _196313_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1c9a0ced7:;
			{
				jule::Ptr<_1b9b1d4c0_UseExpr> _196617_ue = _196313_stmt._field_Data.cast_ptr<_1b9b1d4c0_UseExpr>(&__jule_any_type63);;
				jule::Ptr<_1b9c5d016_Data> _196717_d = _1b9c7cbd4_evalExpr(_1b9bdc4a1_eval((*(_self_))._field_s, jule::Trait<_1b9cacc14_Lookup>(_self_, 0)), (*(_196617_ue))._field_Expr);;
				if ((_196717_d == nullptr)) {
					return;;
				};
				{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_196717_d, &__jule_any_type24)); };
				jule::Ptr<_1b9c55a36_retTypeChecker> _197217_rtc = jule::new_ptr<_1b9c55a36_retTypeChecker>(_1b9c55a36_retTypeChecker{._field_sc=_self_, ._field_types=_1b9b5336d_Types((*(_self_))._field_result.ptr()), ._field_errorToken=(*((*(_196617_ue))._field_Expr))._field_Token, });;
				_1b9c5674b_check(_197217_rtc.ptr(), &((*(_196617_ue))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1c9a0c68a:;
			{
				jule::Ptr<_1b9b1caeb_Expr> _197917_expr = _196313_stmt._field_Data.cast_ptr<_1b9b1caeb_Expr>(&__jule_any_type52);;
				jule::Ptr<_1b9c5d016_Data> _198017_d = _1b9c7cbd4_evalExpr(_1b9bdc4a1_eval((*(_self_))._field_s, jule::Trait<_1b9cacc14_Lookup>(_self_, 0)), _197917_expr);;
				if ((_198017_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ (*(_198017_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1c9a1300e:;
						{
							jule::Ptr<_1b9b49d37_BuiltinErrorCallExprModel> _198621_m = (*(_198017_d))._field_Model.cast_ptr<_1b9b49d37_BuiltinErrorCallExprModel>(&__jule_any_type23);;
							_1b9b9d143_processErrorCall(_self_, &(_198621_m), (*(_197917_expr))._field_Token);
							{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_198017_d, &__jule_any_type24)); };
						}
					}
					else {
						_case_begin_1c9a1322e:;
						{
							return;;
						}
					}
					_match_end_1c9a131c9:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type57 || _match_expr.type == &__jule_any_type61 || _match_expr.type == &__jule_any_type55 || _match_expr.type == &__jule_any_type62) {
			_case_begin_1c9a0c701:;
			{
				_1b9ba76be_checkNode(_self_, &(_196313_stmt._field_Data));
			}
		}
		else {
			_case_begin_1c9a0c624:;
			{
				_1b9ba76be_checkNode(_self_, &(_196313_stmt._field_Data));
				return;;
			}
		}
		_match_end_1c9a0b0d4:;
	};
	(*(_self_))._field_result=nullptr;
}



inline void _1b9ba7aba_checkTree(jule::Ptr<_1b9b970c6_scopeChecker> _self_) {
	(*(_self_))._field_i=0LL;
	jule::I32 _200813_n = (*((*(_self_))._field_tree))._field_Stmts.len();;
	if (((*(_self_))._field_result != nullptr)) {
		(_200813_n)--;
	};
	for (; ((*(_self_))._field_i < _200813_n); ((*(_self_))._field_i)++) {
		{
			_1b9b28178_Stmt _201617_stmt = (*((*(_self_))._field_tree))._field_Stmts[(*(_self_))._field_i];;
			_1b9ba76be_checkNode(_self_, &(_201617_stmt._field_Data));
			if (_1b9b99b9a_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1c9a16b28:;
	}
	_iter_end_1c9a16b28:;;
	if ((((*(_self_))._field_result != nullptr) && ((*((*(_self_))._field_tree))._field_Stmts.len() != 0LL))) {
		_1b9ba78bc_checkResult(_self_);
	};
}



inline void _1b9ba7e2d_checkGoto(_1b9b970c6_scopeChecker* _self_, jule::Ptr<_1b9b961b3_scopeGoto>* _202733_gt, jule::Ptr<_1b9b95b30_scopeLabel>* _202754_label) {
	jule::Ptr<_1b9b970c6_scopeChecker> _202813_gtsc = (*((*(_202733_gt))))._field_scope;;
	while ((((*(_202813_gtsc))._field_childIndex - 1LL) > (*((*((*(_202754_label))))._field_scope))._field_childIndex)) {
		{
			_202813_gtsc=(*(_202813_gtsc))._field_parent;
		}
	_iter_next_1c9a19d3a:;
	}
	_iter_end_1c9a19d3a:;;
	jule::I32 _203313_n = 0LL;;
	if (((*(_202813_gtsc))._field_scope == (*((*((*(_202754_label))))._field_scope))._field_scope)) {
		if (((*((*(_202733_gt))))._field_pos > (*((*(_202754_label))))._field_pos)) {
			return;;
		};
		_203313_n=(*((*(_202733_gt))))._field_pos;
	};
	jule::I32 _204613_i = ((*((*(_202754_label))))._field_pos - 1LL);;
	if ((_203313_n == 0LL)) {
		{
			auto expr = &((*((*((*((*(_202754_label))))._field_scope))._field_scope))._field_Stmts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c9a1cec5:;
			if (it != expr_end) {
				jule::I32 _204917_j = it - expr->begin();
				jule::Any _204920_stmt = *it;
				{
					if (_1b9b8ca28_stmtIsGotoScope(&(_204920_stmt), &((*(_202813_gtsc))._field_scope))) {
						_203313_n=_204917_j;
						goto _iter_end_1c9a1cec5;
					};
				}
				_iter_next_1c9a1cec5:;
				++it;
				_204917_j++;
				goto _iter_begin_1c9a1cec5;
			}
			_iter_end_1c9a1cec5:;
		};
	};
	for (; (_204613_i >= _203313_n); (_204613_i)--) {
		{
			jule::Any _205917_stmt = (*((*((*((*(_202754_label))))._field_scope))._field_scope))._field_Stmts[_204613_i];;
			if (_1b9b8e860_stmtIsDef(&(_205917_stmt))) {
				_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_202733_gt))))._field_gt))._field_Token, jule::Str::lit("goto @ jumps over declaration(s)", 32), jule::Slice<jule::Any>::make({jule::Any((*((*((*((*(_202733_gt))))._field_gt))._field_Label))._field_Kind, &__jule_any_type4)}));
				return;;
			};
		}
	_iter_next_1c9a1e0b4:;
	}
	_iter_end_1c9a1e0b4:;;
}



inline void _1b9ba812b_checkGotos(_1b9b970c6_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9a2023b:;
		if (it != expr_end) {
			jule::Ptr<_1b9b961b3_scopeGoto> _206821_gt = *it;
			{
				jule::Ptr<_1b9b95b30_scopeLabel> _206917_label = _1b9b9ae21_findLabelAll(_self_, &((*((*((*(_206821_gt))._field_gt))._field_Label))._field_Kind));;
				if ((_206917_label == nullptr)) {
					_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*(_206821_gt))._field_gt))._field_Token, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_206821_gt))._field_gt))._field_Label))._field_Kind, &__jule_any_type4)}));
					goto _iter_next_1c9a2023b;
				};
				(*((*(_206821_gt))._field_st))._field_Label=(*(_206917_label))._field_label;
				(*(_206917_label))._field_used=true;
				_1b9ba7e2d_checkGoto(_self_, &(_206821_gt), &(_206917_label));
			}
			_iter_next_1c9a2023b:;
			++it;
			goto _iter_begin_1c9a2023b;
		}
		_iter_end_1c9a2023b:;
	};
}



inline void _1b9ba8329_checkLabels(_1b9b970c6_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9a22c99:;
		if (it != expr_end) {
			jule::Ptr<_1b9b95b30_scopeLabel> _208116_l = *it;
			{
				if ((!((*(_208116_l))._field_used))) {
					_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_208116_l))._field_token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_208116_l))._field_label))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1c9a22c99:;
			++it;
			goto _iter_begin_1c9a22c99;
		}
		_iter_end_1c9a22c99:;
	};
}



inline void _1b9ba8527_checkVars(_1b9b970c6_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9a250dc:;
		if (it != expr_end) {
			jule::Ptr<_1b9c09611_Var> _208916_v = *it;
			{
				if (((((!((*(_208916_v))._field_Used)) && (!((*(_208916_v))._field_Constant))) && (!(_1b9b05c5a_IsIgnoreIdent((*(_208916_v))._field_Ident)))) && (!(_1b9b06024_IsAnonIdent((*(_208916_v))._field_Ident))))) {
					_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_208916_v))._field_Token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*(_208916_v))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1c9a250dc:;
			++it;
			goto _iter_begin_1c9a250dc;
		}
		_iter_end_1c9a250dc:;
	};
}



inline void _1b9ba8725_checkAliases(_1b9b970c6_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9a26b9e:;
		if (it != expr_end) {
			jule::Ptr<_1b9c8c3db_TypeAlias> _209716_a = *it;
			{
				if ((((!((*(_209716_a))._field_Used)) && (!(_1b9b05c5a_IsIgnoreIdent((*(_209716_a))._field_Ident)))) && (!(_1b9b06024_IsAnonIdent((*(_209716_a))._field_Ident))))) {
					_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_209716_a))._field_Token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*(_209716_a))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1c9a26b9e:;
			++it;
			goto _iter_begin_1c9a26b9e;
		}
		_iter_end_1c9a26b9e:;
	};
}



inline void _1b9ba8a88_check(jule::Ptr<_1b9b970c6_scopeChecker> _self_, jule::Ptr<_1b9b287d8_ScopeTree>* _210530_tree, jule::Ptr<_1b9b8ecc2_Scope>* _210553_s) {
	(*((*(_210553_s))))._field_Deferred=(*((*(_210530_tree))))._field_Deferred;
	(*((*(_210553_s))))._field_Unsafety=(*((*(_210530_tree))))._field_Unsafety;
	jule::I32 _21099_errors = (*((*(_self_))._field_s))._field_errors.len();;
	(*(_self_))._field_tree=(*(_210530_tree));
	(*(_self_))._field_scope=(*(_210553_s));
	_1b9ba7aba_checkTree(_self_);
	if ((_21099_errors == (*((*(_self_))._field_s))._field_errors.len())) {
		_1b9ba8527_checkVars(_self_.ptr());
		_1b9ba8725_checkAliases(_self_.ptr());
		if (_1b9b99716_isRoot(_self_.ptr())) {
			_1b9ba812b_checkGotos(_self_.ptr());
			_1b9ba8329_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_1b9b970c6_scopeChecker> _1b9ba8d1e_newChildChecker(jule::Ptr<_1b9b970c6_scopeChecker> _self_) {
	jule::Ptr<_1b9b970c6_scopeChecker> _212913_base = _1b9b8ba9e_newScopeCheckerBase(&((*(_self_))._field_s), nullptr);;
	(*(_212913_base))._field_parent=_self_;
	(*(_212913_base))._field_labels=(*(_self_))._field_labels;
	(*(_212913_base))._field_gotos=(*(_self_))._field_gotos;
	(*(_212913_base))._field_childIndex=static_cast<jule::I32>(((*(_self_))._field_childIndex + 1LL));
	return _212913_base;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b970c6_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1b9baa183_checkCdef(_1b9ba9c76_directiveChecker* _self_, jule::Ptr<_1b9b17bd4_Directive>* _1629_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1c9a317d0:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_1b9b4e26a_Fn>(&__jule_any_type64)))._field_Binded) {
					goto _match_end_1c9a31a22;
				};
				goto _case_begin_1c9a31a77;
			}
		}
		else {
			_case_begin_1c9a31a77:;
			{
				_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*(_1629_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_1629_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1c9a31a22:;
	};
	if (((*((*(_1629_d))))._field_Args.len() > 0LL)) {
		_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*(_1629_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1b9baa43b_checkTypedef(_1b9ba9c76_directiveChecker* _self_, jule::Ptr<_1b9b17bd4_Directive>* _3232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1c9a34618:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_1b9b393a9_Struct>(&__jule_any_type65)))._field_Binded) {
					goto _match_end_1c9a3485a;
				};
				goto _case_begin_1c9a348b0;
			}
		}
		else {
			_case_begin_1c9a348b0:;
			{
				_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*(_3232_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_3232_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1c9a3485a:;
	};
	if (((*((*(_3232_d))))._field_Args.len() > 0LL)) {
		_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*(_3232_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1b9baa6e4_checkNamespace(_1b9ba9c76_directiveChecker* _self_, jule::Ptr<_1b9b17bd4_Directive>* _4838_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1c9a37a17:;
			{
				if ((!((*((*(_self_))._field_o.cast_ptr<_1b9b393a9_Struct>(&__jule_any_type65)))._field_Binded))) {
					_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1c9a3775e:;
			{
				if ((!((*((*(_self_))._field_o.cast_ptr<_1b9b4e26a_Fn>(&__jule_any_type64)))._field_Binded))) {
					_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c9a377c5:;
			{
				if ((!((*((*(_self_))._field_o.cast_ptr<_1b9c09611_Var>(&__jule_any_type8)))._field_Binded))) {
					_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_1c9a376e8:;
			{
				_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1c9a37693:;
	};
	if (((*((*(_4838_d))))._field_Args.len() == 0LL)) {
		_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_4838_d))))._field_Args.len() > 1LL)) {
		_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1b9b032eb_Token> _739_arg = (*((*(_4838_d))))._field_Args[0LL];;
	if (((*(_739_arg))._field_Id != static_cast<jule::U32>(4LLU))) {
		_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), _739_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_739_arg))._field_Kind[0LL] != '\"')) {
		_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), _739_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_4838_d))))._field_Args[0LL]))._field_Kind=(*(_739_arg))._field_Kind.slice(1LL, ((*(_739_arg))._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1c9a42a99:;
			{
				if ((_1b9c865e4_findDirective(&((*((*(_self_))._field_d))), jule::Str::lit("typedef", 7)) == nullptr)) {
					jule::Ptr<_1b9b17bd4_Directive> _9021_typedef = jule::new_ptr<_1b9b17bd4_Directive>(_1b9b17bd4_Directive{._field_Tag=(*((*(_4838_d))))._field_Tag, });;
					(*((*(_9021_typedef))._field_Tag))._field_Kind=jule::Str::lit("typedef", 7);
					{ jule::Slice<jule::Ptr<_1b9b17bd4_Directive>> &__jule_push_dest = (*((*(_self_))._field_d)); __jule_push_dest.push(_9021_typedef); };
				};
			}
		}
		_match_end_1c9a42a44:;
	};
}



inline void _1b9baa99c_checkDeprecated(_1b9ba9c76_directiveChecker* _self_, jule::Ptr<_1b9b17bd4_Directive>* _9939_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1c9a43bcc:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_1b9b393a9_Struct>(&__jule_any_type65)))._field_Binded) {
					_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1c9a44e0e:;
			{
				jule::Ptr<_1b9b4e26a_Fn> _10617_f = (*(_self_))._field_o.cast_ptr<_1b9b4e26a_Fn>(&__jule_any_type64);;
				if ((((*(_10617_f))._field_Binded || _1b9b4ec0a_IsEntryPoint(_10617_f.ptr())) || _1b9b4ee91_IsInit(_10617_f.ptr()))) {
					_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c9a44e75:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_1b9c09611_Var>(&__jule_any_type8)))._field_Binded) {
					_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_1c9a4499c:;
			{
				_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1c9a44947:;
	};
	if (((*((*(_9939_d))))._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*((*(_9939_d))))._field_Args.len() > 1LL)) {
		_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1b9b032eb_Token> _1259_arg = (*((*(_9939_d))))._field_Args[0LL];;
	if (((*(_1259_arg))._field_Id != static_cast<jule::U32>(4LLU))) {
		_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), _1259_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_1259_arg))._field_Kind[0LL] != '\"')) {
		_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), _1259_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_9939_d))))._field_Args[0LL]))._field_Kind=(*(_1259_arg))._field_Kind.slice(1LL, ((*(_1259_arg))._field_Kind.len() - 1LL));
}



inline void _1b9baac55_checkTest(_1b9ba9c76_directiveChecker* _self_, jule::Ptr<_1b9b17bd4_Directive>* _13929_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1c9a4adc1:;
			{
				jule::Ptr<_1b9b4e26a_Fn> _14213_f = (*(_self_))._field_o.cast_ptr<_1b9b4e26a_Fn>(&__jule_any_type64);;
				if ((((!((*(_14213_f))._field_Binded)) && (!(_1b9b4ee91_IsInit(_14213_f.ptr())))) && (!(_1b9b4ec0a_IsEntryPoint(_14213_f.ptr()))))) {
					goto _match_end_1c9a50623;
				};
				if (_1b9b4e974_IsMethod(_14213_f.ptr())) {
					_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_14213_f))._field_Token, jule::Str::lit("you cannot declare test methods", 31), jule::Slice<jule::Any>());
					goto _match_end_1c9a50623;
				};
				goto _case_begin_1c9a50678;
			}
		}
		else {
			_case_begin_1c9a50678:;
			{
				_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*(_13929_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_13929_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1c9a50623:;
	};
	if (((*((*(_13929_d))))._field_Args.len() > 0LL)) {
		_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*(_13929_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1b9bab00d_checkDirective(_1b9ba9c76_directiveChecker* _self_, jule::Ptr<_1b9b17bd4_Directive>* _16038_d) {
	{
		auto &_match_expr{ (*((*((*(_16038_d))))._field_Tag))._field_Kind };
		
		if (_match_expr == jule::Str::lit("cdef", 4)) {
			_case_begin_1c9a553d6:;
			{
				_1b9baa183_checkCdef(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("typedef", 7)) {
			_case_begin_1c9a55095:;
			{
				_1b9baa43b_checkTypedef(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("namespace", 9)) {
			_case_begin_1c9a5510b:;
			{
				_1b9baa6e4_checkNamespace(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("deprecated", 10)) {
			_case_begin_1c9a55172:;
			{
				_1b9baa99c_checkDeprecated(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("test", 4)) {
			_case_begin_1c9a551d8:;
			{
				_1b9baac55_checkTest(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("build", 5) || _match_expr == jule::Str::lit("pass", 4)) {
			_case_begin_1c9a561c8:;
			{
				_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*(_16038_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_16038_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_1c9a5502e:;
			{
				_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*(_16038_d))))._field_Tag, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_16038_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1c9a54ea7:;
	};
}



inline void _1b9bab20b_check(_1b9ba9c76_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9a57e11:;
		if (it != expr_end) {
			jule::Ptr<_1b9b17bd4_Directive> _18121_d = *it;
			{
				_1b9bab00d_checkDirective(_self_, &(_18121_d));
			}
			_iter_next_1c9a57e11:;
			++it;
			goto _iter_begin_1c9a57e11;
		}
		_iter_end_1c9a57e11:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1b9ba9c76_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b9bb1200_ImportInfo> _1b9bb16d9_SelectPackage(_1b9bb1200_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1b9bb1200_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1b9c09611_Var> _1b9bb1ad5_FindVar(_1b9bb1200_ImportInfo* _self_, jule::Str _18926_ident, jule::Bool ) {
	if ((!(_1b9bb3741_isLookupable(_self_, &(_18926_ident))))) {
		return nullptr;;
	};
	return _1b9bad6d6_findVarInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_18926_ident), false);;
}



inline jule::Ptr<_1b9c8c3db_TypeAlias> _1b9bb1ed1_FindTypeAlias(_1b9bb1200_ImportInfo* _self_, jule::Str _20132_ident, jule::Bool ) {
	if ((!(_1b9bb3741_isLookupable(_self_, &(_20132_ident))))) {
		return nullptr;;
	};
	return _1b9badb59_findTypeAliasInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_20132_ident), false);;
}



inline jule::Ptr<_1b9b393a9_Struct> _1b9bb23cc_FindStruct(_1b9bb1200_ImportInfo* _self_, jule::Str _21329_ident, jule::Bool ) {
	if ((!(_1b9bb3741_isLookupable(_self_, &(_21329_ident))))) {
		return nullptr;;
	};
	return _1b9bae088_findStructInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_21329_ident), false);;
}



inline jule::Ptr<_1b9b4e26a_Fn> _1b9bb27c8_FindFn(_1b9bb1200_ImportInfo* _self_, jule::Str _22525_ident, jule::Bool ) {
	if ((!(_1b9bb3741_isLookupable(_self_, &(_22525_ident))))) {
		return nullptr;;
	};
	return _1b9bae53e_findFnInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_22525_ident), false);;
}



inline jule::Ptr<_1b9b62514_Trait> _1b9bb2b19_FindTrait(_1b9bb1200_ImportInfo* _self_, jule::Str _23628_ident) {
	if ((!(_1b9bb3741_isLookupable(_self_, &(_23628_ident))))) {
		return nullptr;;
	};
	return _1b9bae880_findTraitInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_23628_ident));;
}



inline jule::Ptr<_1b9b64c0e_Enum> _1b9bb2e5a_FindEnum(_1b9bb1200_ImportInfo* _self_, jule::Str _24727_ident) {
	if ((!(_1b9bb3741_isLookupable(_self_, &(_24727_ident))))) {
		return nullptr;;
	};
	return _1b9baec04_findEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_24727_ident));;
}



inline jule::Ptr<_1b9b66419_TypeEnum> _1b9bb329b_FindTypeEnum(_1b9bb1200_ImportInfo* _self_, jule::Str _25831_ident) {
	if ((!(_1b9bb3741_isLookupable(_self_, &(_25831_ident))))) {
		return nullptr;;
	};
	return _1b9bb0078_findTypeEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_25831_ident));;
}



inline jule::Bool _1b9bb3741_isLookupable(_1b9bb1200_ImportInfo* _self_, jule::Str* _26728_ident) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _1b9bb3a82_existIdent(_self_, jule::Str::lit("self", 4)))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_1b9bb3a82_existIdent(_self_, (*(_26728_ident)))))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _1b9bb3a82_existIdent(_1b9bb1200_ImportInfo* _self_, jule::Str _28725_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9a6d454:;
		if (it != expr_end) {
			jule::Ptr<_1b9b032eb_Token> *_28816_sident = it;
			{
				if (((*((*(_28816_sident))))._field_Kind == _28725_ident)) {
					return true;;
				};
			}
			_iter_next_1c9a6d454:;
			++it;
			goto _iter_begin_1c9a6d454;
		}
		_iter_end_1c9a6d454:;
	};
	return false;;
}



inline jule::Bool _1b9bb3d18_isAccessibleViaSelection(_1b9bb1200_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _1b9bb3a82_existIdent(_self_, jule::Str::lit("self", 4)));;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9bb1200_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b9bb1200_ImportInfo> _1b9bb45bb_SelectPackage(_1b9bb4126_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1b9bb1200_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1b9c09611_Var> _1b9bb49b7_FindVar(_1b9bb4126_Package* _self_, jule::Str _31426_ident, jule::Bool _31438_binded) {
	return _1b9bad6d6_findVarInPackage(&((*(_self_))._field_Files), &(_31426_ident), _31438_binded);;
}



inline jule::Ptr<_1b9c8c3db_TypeAlias> _1b9bb4db3_FindTypeAlias(_1b9bb4126_Package* _self_, jule::Str _32032_ident, jule::Bool _32044_binded) {
	return _1b9badb59_findTypeAliasInPackage(&((*(_self_))._field_Files), &(_32032_ident), _32044_binded);;
}



inline jule::Ptr<_1b9b393a9_Struct> _1b9bb52ae_FindStruct(_1b9bb4126_Package* _self_, jule::Str _32629_ident, jule::Bool _32641_binded) {
	return _1b9bae088_findStructInPackage(&((*(_self_))._field_Files), &(_32629_ident), _32641_binded);;
}



inline jule::Ptr<_1b9b4e26a_Fn> _1b9bb56aa_FindFn(_1b9bb4126_Package* _self_, jule::Str _33225_ident, jule::Bool _33237_binded) {
	return _1b9bae53e_findFnInPackage(&((*(_self_))._field_Files), &(_33225_ident), _33237_binded);;
}



inline jule::Ptr<_1b9b62514_Trait> _1b9bb59eb_FindTrait(_1b9bb4126_Package* _self_, jule::Str _33828_ident) {
	return _1b9bae880_findTraitInPackage(&((*(_self_))._field_Files), &(_33828_ident));;
}



inline jule::Ptr<_1b9b64c0e_Enum> _1b9bb5d3c_FindEnum(_1b9bb4126_Package* _self_, jule::Str _34427_ident) {
	return _1b9baec04_findEnumInPackage(&((*(_self_))._field_Files), &(_34427_ident));;
}



inline jule::Ptr<_1b9b66419_TypeEnum> _1b9bb617d_FindTypeEnum(_1b9bb4126_Package* _self_, jule::Str _35031_ident) {
	return _1b9bb0078_findTypeEnumInPackage(&((*(_self_))._field_Files), &(_35031_ident));;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9bb4126_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b9b78283_comptimeTypeInfo> _1b9bd1c04_pushComptimeTypeInfo(_1b9bd1792_commonSemaMeta* _self_, jule::Ptr<_1b9c8d1cd_TypeKind>* _21744_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9a9e5d9:;
		if (it != expr_end) {
			jule::Ptr<_1b9b78283_comptimeTypeInfo> _21821_t2 = *it;
			{
				if ((((*((*(_21821_t2))._field_base))._field_BindIdent == (*((*(_21744_t))))._field_BindIdent) && _1b9c8d8d7_Equal((*(_21821_t2))._field_base, (*(_21744_t))))) {
					return _21821_t2;;
				};
			}
			_iter_next_1c9a9e5d9:;
			++it;
			goto _iter_begin_1c9a9e5d9;
		}
		_iter_end_1c9a9e5d9:;
	};
	jule::Ptr<_1b9b78283_comptimeTypeInfo> _22313_t1 = jule::new_ptr<_1b9b78283_comptimeTypeInfo>(_1b9b78283_comptimeTypeInfo{._field_base=(*(_21744_t))});;
	{ jule::Slice<jule::Ptr<_1b9b78283_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_22313_t1); };
	return _22313_t1;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9bd1792_commonSemaMeta _Src) {
	_Stream << "commonSemaMeta{";
	_Stream << "comptimeTypeInfos:" << _Src._field_comptimeTypeInfos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b9bb1200_ImportInfo> _1b9bd285e_SelectPackage(_1b9bd23b9_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1b9bb1200_ImportInfo>)> _24632_selector) {
	return _1b9c582ca_SelectPackage((*(_self_))._field_file.ptr(), _24632_selector);;
}



inline jule::Ptr<_1b9c09611_Var> _1b9bd2c5a_FindVar(_1b9bd23b9_Sema* _self_, jule::Str _25626_ident, jule::Bool _25638_binded) {
	jule::Ptr<_1b9c09611_Var> _25813_v = _1b9bad6d6_findVarInPackage(&((*(_self_))._field_files), &(_25626_ident), _25638_binded);;
	if ((_25813_v != nullptr)) {
		return _25813_v;;
	};
	if ((!(_1b9bce4b5_IsPub(&(_25626_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9aa3159:;
		if (it != expr_end) {
			jule::Ptr<_1b9bb1200_ImportInfo> _26921_imp = *it;
			{
				if ((!(_1b9bd040b_impIsLookupable(&(_26921_imp), &(_25626_ident))))) {
					goto _iter_next_1c9aa3159;
				};
				_25813_v=_1b9bb1ad5_FindVar(_26921_imp.ptr(), _25626_ident, _25638_binded);
				if (((_25813_v != nullptr) && _1b9bd5763_isAccessibleDefine(_self_, (*(_25813_v))._field_Public, (*(_25813_v))._field_Token))) {
					return _25813_v;;
				};
			}
			_iter_next_1c9aa3159:;
			++it;
			goto _iter_begin_1c9aa3159;
		}
		_iter_end_1c9aa3159:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b9c8c3db_TypeAlias> _1b9bd3156_FindTypeAlias(_1b9bd23b9_Sema* _self_, jule::Str _28832_ident, jule::Bool _28844_binded) {
	jule::Ptr<_1b9c8c3db_TypeAlias> _29013_ta = _1b9badb59_findTypeAliasInPackage(&((*(_self_))._field_files), &(_28832_ident), _28844_binded);;
	if ((_29013_ta != nullptr)) {
		return _29013_ta;;
	};
	if ((!(_1b9bce4b5_IsPub(&(_28832_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9d7234b:;
		if (it != expr_end) {
			jule::Ptr<_1b9bb1200_ImportInfo> _30121_imp = *it;
			{
				if ((!(_1b9bd040b_impIsLookupable(&(_30121_imp), &(_28832_ident))))) {
					goto _iter_next_1c9d7234b;
				};
				_29013_ta=_1b9bb1ed1_FindTypeAlias(_30121_imp.ptr(), _28832_ident, _28844_binded);
				if (((_29013_ta != nullptr) && _1b9bd5763_isAccessibleDefine(_self_, (*(_29013_ta))._field_Public, (*(_29013_ta))._field_Token))) {
					return _29013_ta;;
				};
			}
			_iter_next_1c9d7234b:;
			++it;
			goto _iter_begin_1c9d7234b;
		}
		_iter_end_1c9d7234b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b9b393a9_Struct> _1b9bd3552_FindStruct(_1b9bd23b9_Sema* _self_, jule::Str _32029_ident, jule::Bool _32041_binded) {
	jule::Ptr<_1b9b393a9_Struct> _32213_s = _1b9bae088_findStructInPackage(&((*(_self_))._field_files), &(_32029_ident), _32041_binded);;
	if ((_32213_s != nullptr)) {
		return _32213_s;;
	};
	if ((!(_1b9bce4b5_IsPub(&(_32029_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9d7512e:;
		if (it != expr_end) {
			jule::Ptr<_1b9bb1200_ImportInfo> _33321_imp = *it;
			{
				if ((!(_1b9bd040b_impIsLookupable(&(_33321_imp), &(_32029_ident))))) {
					goto _iter_next_1c9d7512e;
				};
				_32213_s=_1b9bb23cc_FindStruct(_33321_imp.ptr(), _32029_ident, _32041_binded);
				if (((_32213_s != nullptr) && _1b9bd5763_isAccessibleDefine(_self_, (*(_32213_s))._field_Public, (*(_32213_s))._field_Token))) {
					return _32213_s;;
				};
			}
			_iter_next_1c9d7512e:;
			++it;
			goto _iter_begin_1c9d7512e;
		}
		_iter_end_1c9d7512e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b9b4e26a_Fn> _1b9bd394d_FindFn(_1b9bd23b9_Sema* _self_, jule::Str _35125_ident, jule::Bool _35137_binded) {
	jule::Ptr<_1b9b4e26a_Fn> _35313_f = _1b9bae53e_findFnInPackage(&((*(_self_))._field_files), &(_35125_ident), _35137_binded);;
	if ((_35313_f != nullptr)) {
		return _35313_f;;
	};
	if ((!(_1b9bce4b5_IsPub(&(_35125_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9d77e12:;
		if (it != expr_end) {
			jule::Ptr<_1b9bb1200_ImportInfo> _36421_imp = *it;
			{
				if ((!(_1b9bd040b_impIsLookupable(&(_36421_imp), &(_35125_ident))))) {
					goto _iter_next_1c9d77e12;
				};
				_35313_f=_1b9bb27c8_FindFn(_36421_imp.ptr(), _35125_ident, _35137_binded);
				if (((_35313_f != nullptr) && _1b9bd5763_isAccessibleDefine(_self_, (*(_35313_f))._field_Public, (*(_35313_f))._field_Token))) {
					return _35313_f;;
				};
			}
			_iter_next_1c9d77e12:;
			++it;
			goto _iter_begin_1c9d77e12;
		}
		_iter_end_1c9d77e12:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b9b62514_Trait> _1b9bd3c8e_FindTrait(_1b9bd23b9_Sema* _self_, jule::Str _38328_ident) {
	jule::Ptr<_1b9b62514_Trait> _38513_t = _1b9bae880_findTraitInPackage(&((*(_self_))._field_files), &(_38328_ident));;
	if ((_38513_t != nullptr)) {
		return _38513_t;;
	};
	if ((!(_1b9bce4b5_IsPub(&(_38328_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9d7a9b4:;
		if (it != expr_end) {
			jule::Ptr<_1b9bb1200_ImportInfo> _39621_imp = *it;
			{
				if ((!(_1b9bd040b_impIsLookupable(&(_39621_imp), &(_38328_ident))))) {
					goto _iter_next_1c9d7a9b4;
				};
				_38513_t=_1b9bb2b19_FindTrait(_39621_imp.ptr(), _38328_ident);
				if (((_38513_t != nullptr) && _1b9bd5763_isAccessibleDefine(_self_, (*(_38513_t))._field_Public, (*(_38513_t))._field_Token))) {
					return _38513_t;;
				};
			}
			_iter_next_1c9d7a9b4:;
			++it;
			goto _iter_begin_1c9d7a9b4;
		}
		_iter_end_1c9d7a9b4:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b9b64c0e_Enum> _1b9bd40d0_FindEnum(_1b9bd23b9_Sema* _self_, jule::Str _41527_ident) {
	jule::Ptr<_1b9b64c0e_Enum> _41713_e = _1b9baec04_findEnumInPackage(&((*(_self_))._field_files), &(_41527_ident));;
	if ((_41713_e != nullptr)) {
		return _41713_e;;
	};
	if ((!(_1b9bce4b5_IsPub(&(_41527_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9d7d544:;
		if (it != expr_end) {
			jule::Ptr<_1b9bb1200_ImportInfo> _42821_imp = *it;
			{
				if ((!(_1b9bd040b_impIsLookupable(&(_42821_imp), &(_41527_ident))))) {
					goto _iter_next_1c9d7d544;
				};
				_41713_e=_1b9bb2e5a_FindEnum(_42821_imp.ptr(), _41527_ident);
				if (((_41713_e != nullptr) && _1b9bd5763_isAccessibleDefine(_self_, (*(_41713_e))._field_Public, (*(_41713_e))._field_Token))) {
					return _41713_e;;
				};
			}
			_iter_next_1c9d7d544:;
			++it;
			goto _iter_begin_1c9d7d544;
		}
		_iter_end_1c9d7d544:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b9b66419_TypeEnum> _1b9bd4421_FindTypeEnum(_1b9bd23b9_Sema* _self_, jule::Str _44731_ident) {
	jule::Ptr<_1b9b66419_TypeEnum> _44913_e = _1b9bb0078_findTypeEnumInPackage(&((*(_self_))._field_files), &(_44731_ident));;
	if ((_44913_e != nullptr)) {
		return _44913_e;;
	};
	if ((!(_1b9bce4b5_IsPub(&(_44731_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9d810c4:;
		if (it != expr_end) {
			jule::Ptr<_1b9bb1200_ImportInfo> _46021_imp = *it;
			{
				if ((!(_1b9bd040b_impIsLookupable(&(_46021_imp), &(_44731_ident))))) {
					goto _iter_next_1c9d810c4;
				};
				_44913_e=_1b9bb329b_FindTypeEnum(_46021_imp.ptr(), _44731_ident);
				if (((_44913_e != nullptr) && _1b9bd5763_isAccessibleDefine(_self_, (*(_44913_e))._field_Public, (*(_44913_e))._field_Token))) {
					return _44913_e;;
				};
			}
			_iter_next_1c9d810c4:;
			++it;
			goto _iter_begin_1c9d810c4;
		}
		_iter_end_1c9d810c4:;
	};
	return nullptr;;
}



inline jule::Bool _1b9bd482d_isFlag(_1b9bd23b9_Sema* _self_, jule::I32 _47621_flags) {
	return (((*(_self_))._field_flags & _47621_flags) == _47621_flags);;
}



inline void _1b9bd4ad6_setCurrentFile(_1b9bd23b9_Sema* _self_, jule::Ptr<_1b9c57ce1_SymbolTable> _47837_f) {
	(*(_self_))._field_file=_47837_f;
}



inline void _1b9bd5004_pushErr(_1b9bd23b9_Sema* _self_, jule::Ptr<_1b9b032eb_Token> _48026_token, jule::Str _48041_fmt, jule::Slice<jule::Any> _48054_args) {
	{ jule::Slice<_23d21115a_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1b9bd0087_compilerErr(&(_48026_token), true, _48041_fmt, _48054_args)); };
}



inline void _1b9bd5367_pushSuggestion(_1b9bd23b9_Sema* _self_, jule::Str _48533_fmt, jule::Slice<jule::Any> _48546_args) {
	{
		_1b9bd15b6_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _48533_fmt, _48546_args);
	};
}



inline jule::Bool _1b9bd5763_isAccessibleDefine(_1b9bd23b9_Sema* _self_, jule::Bool _49033_public, jule::Ptr<_1b9b032eb_Token> _49047_token) {
	return ((_49033_public || ((*(_49047_token))._field_File == nullptr)) || (_1b9b09236_Dir((*((*(_self_))._field_file))._field_File.ptr()) == _1b9b09236_Dir((*(_49047_token))._field_File.ptr())));;
}



inline jule::Bool _1b9bd5c19_isDuplicatedIdent(_1b9bd23b9_Sema* _self_, jule::Uintptr _49732_itself, jule::Str* _49750_ident, jule::Bool _49762_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9d87b36:;
		if (it != expr_end) {
			jule::Ptr<_1b9c57ce1_SymbolTable> *_49816_f = it;
			{
				if (_1b9c5b311_isDuplicatedIdent((*(_49816_f)).ptr(), _49732_itself, _49750_ident, _49762_binded)) {
					return true;;
				};
				{
					auto expr = &((*((*(_49816_f))))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c9d8852c:;
					if (it != expr_end) {
						jule::Ptr<_1b9bb1200_ImportInfo> *_50320_imp = it;
						{
							{
								auto expr = &((*((*(_50320_imp))))._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c9d8942e:;
								if (it != expr_end) {
									jule::Ptr<_1b9b032eb_Token> *_50424_selected = it;
									{
										if (((*((*(_50424_selected))))._field_Kind == (*(_49750_ident)))) {
											return true;;
										};
									}
									_iter_next_1c9d8942e:;
									++it;
									goto _iter_begin_1c9d8942e;
								}
								_iter_end_1c9d8942e:;
							};
						}
						_iter_next_1c9d8852c:;
						++it;
						goto _iter_begin_1c9d8852c;
					}
					_iter_end_1c9d8852c:;
				};
			}
			_iter_next_1c9d87b36:;
			++it;
			goto _iter_begin_1c9d87b36;
		}
		_iter_end_1c9d87b36:;
	};
	return false;;
}



inline void _1b9bd607c_checkDirectives(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Slice<jule::Ptr<_1b9b17bd4_Directive>>* _51440_d, jule::Any _51466_o) {
	_1b9ba9c76_directiveChecker _51513_dc = _1b9ba9c76_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1b9b17bd4_Directive>>>)(_51440_d)), ._field_o=_51466_o};;
	_1b9bab20b_check(&_51513_dc);
}



inline jule::Bool _1b9bd6533_checkGenericQuantity(_1b9bd23b9_Sema* _self_, jule::I32 _52339_required, jule::I32 _52354_given, jule::Ptr<_1b9b032eb_Token> _52366_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_52339_required == 0LL) && (_52354_given > 0LL))) {
			_case_begin_1c9d8baa2:;
			{
				_1b9bd5004_pushErr(_self_, _52366_token, jule::Str::lit("type have not generics but instantiate like generics", 52), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_52339_required > 0LL) && (_52354_given == 0LL))) {
			_case_begin_1c9d8bb29:;
			{
				_1b9bd5004_pushErr(_self_, _52366_token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52339_required < _52354_given)) {
			_case_begin_1c9d8bba1:;
			{
				_1b9bd5004_pushErr(_self_, _52366_token, jule::Str::lit("overflow generics", 17), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52339_required > _52354_given)) {
			_case_begin_1c9d8bdc1:;
			{
				_1b9bd5004_pushErr(_self_, _52366_token, jule::Str::lit("missing generics", 16), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c9d8b9b4:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1c9d8b8e8:;
	};
}



inline jule::Bool _1b9bd692e_isDuplicatedImportSelection(_1b9bd23b9_Sema* _self_, jule::Uintptr _54242_itself, jule::Str* _54260_ident) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9d8e148:;
		if (it != expr_end) {
			jule::Ptr<_1b9bb1200_ImportInfo> *_54316_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_54316_imp))) == _54242_itself)) {
					goto _iter_end_1c9d8e148;
				};
				if (_1b9bb3a82_existIdent((*(_54316_imp)).ptr(), (*(_54260_ident)))) {
					return true;;
				};
			}
			_iter_next_1c9d8e148:;
			++it;
			goto _iter_begin_1c9d8e148;
		}
		_iter_end_1c9d8e148:;
	};
	return false;;
}



inline jule::Any _1b9bd6d2a_getImportDef(_1b9bd23b9_Sema* _self_, jule::Str* _55528_ident, jule::Ptr<_1b9bb1200_ImportInfo>* _55545_imp) {
	if ((_1b9d7de39_findPackageBuiltinDef(&((*((*(_55545_imp))))._field_LinkPath), _55528_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type3);;
	};
	{
		auto expr = &((*((*((*(_55545_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9d9103a:;
		if (it != expr_end) {
			jule::Ptr<_1b9c57ce1_SymbolTable> _55921_f = *it;
			{
				;
				jule::Any _56217_def = _1b9c5ad5a_defByIdent(_55921_f.ptr(), _55528_ident, false);;
				if ((_56217_def != nullptr)) {
					return _56217_def;;
				};
			}
			_iter_next_1c9d9103a:;
			++it;
			goto _iter_begin_1c9d9103a;
		}
		_iter_end_1c9d9103a:;
	};
	return nullptr;;
}



inline jule::Bool _1c9d979e2_checkImportSelection(_1b9bd23b9_Sema* _self_, jule::Ptr<_1b9b032eb_Token>* _57043_ident, jule::Ptr<_1b9c09611_Var>* _57059_s) {
	if ((!(_1b9bd5763_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1b9bd5004_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1b9bd5367_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1b9bb05b7_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1b9bd5004_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1c9d9b9b3_checkImportSelection(_1b9bd23b9_Sema* _self_, jule::Ptr<_1b9b032eb_Token>* _57043_ident, jule::Ptr<_1b9c8c3db_TypeAlias>* _57059_s) {
	if ((!(_1b9bd5763_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1b9bd5004_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1b9bd5367_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1b9bb05b7_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1b9bd5004_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1c9da0940_checkImportSelection(_1b9bd23b9_Sema* _self_, jule::Ptr<_1b9b032eb_Token>* _57043_ident, jule::Ptr<_1b9b393a9_Struct>* _57059_s) {
	if ((!(_1b9bd5763_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1b9bd5004_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1b9bd5367_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1b9bb05b7_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1b9bd5004_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1c9da4a54_checkImportSelection(_1b9bd23b9_Sema* _self_, jule::Ptr<_1b9b032eb_Token>* _57043_ident, jule::Ptr<_1b9b62514_Trait>* _57059_s) {
	if ((!(_1b9bd5763_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1b9bd5004_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1b9bd5367_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1b9bb05b7_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1b9bd5004_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1c9da89d1_checkImportSelection(_1b9bd23b9_Sema* _self_, jule::Ptr<_1b9b032eb_Token>* _57043_ident, jule::Ptr<_1b9b64c0e_Enum>* _57059_s) {
	if ((!(_1b9bd5763_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1b9bd5004_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1b9bd5367_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1b9bb05b7_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1b9bd5004_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1c9dac95d_checkImportSelection(_1b9bd23b9_Sema* _self_, jule::Ptr<_1b9b032eb_Token>* _57043_ident, jule::Ptr<_1b9b66419_TypeEnum>* _57059_s) {
	if ((!(_1b9bd5763_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1b9bd5004_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1b9bd5367_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1b9bb05b7_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1b9bd5004_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1c9db18da_checkImportSelection(_1b9bd23b9_Sema* _self_, jule::Ptr<_1b9b032eb_Token>* _57043_ident, jule::Ptr<_1b9b4e26a_Fn>* _57059_s) {
	if ((!(_1b9bd5763_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1b9bd5004_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1b9bd5367_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1b9bb05b7_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1b9bd5004_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _1b9bd7567_checkImportSelectedSelections(_1b9bd23b9_Sema* _self_, jule::Ptr<_1b9bb1200_ImportInfo>* _58453_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_58453_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9d93207:;
		if (it != expr_end) {
			jule::Ptr<_1b9b032eb_Token> _58616_ident = *it;
			{
				if ((*(_58616_ident))._field_Kind.equal("self", 4)) {
					goto _iter_next_1c9d93207;
				};
				if (_1b9bd692e_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_58453_imp)))), &((*(_58616_ident))._field_Kind))) {
					_1b9bd5004_pushErr(_self_, _58616_ident, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_58616_ident))._field_Kind, &__jule_any_type4)}));
					_1b9bd5367_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1c9d93207;
				};
				jule::Any _59817_def = _1b9bd6d2a_getImportDef(_self_, &((*(_58616_ident))._field_Kind), _58453_imp);;
				{
					auto &_match_expr{ _59817_def };
					
					if (_match_expr.type == &__jule_any_type3) {
						_case_begin_1c9d945d2:;
						{
							goto _iter_next_1c9d93207;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1c9d95d53:;
						{
							jule::Ptr<_1b9c09611_Var> _60421_v = _59817_def.cast_ptr<_1b9c09611_Var>(&__jule_any_type8);;
							__jule_func_result=(_1c9d979e2_checkImportSelection(_self_, &(_58616_ident), &(_60421_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1c9d95db9:;
						{
							jule::Ptr<_1b9c8c3db_TypeAlias> _60721_ta = _59817_def.cast_ptr<_1b9c8c3db_TypeAlias>(&__jule_any_type66);;
							__jule_func_result=(_1c9d9b9b3_checkImportSelection(_self_, &(_58616_ident), &(_60721_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1c9d9699c:;
						{
							jule::Ptr<_1b9b393a9_Struct> _61021_s = _59817_def.cast_ptr<_1b9b393a9_Struct>(&__jule_any_type65);;
							__jule_func_result=(_1c9da0940_checkImportSelection(_self_, &(_58616_ident), &(_61021_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1c9d96a13:;
						{
							jule::Ptr<_1b9b62514_Trait> _61321_t = _59817_def.cast_ptr<_1b9b62514_Trait>(&__jule_any_type10);;
							__jule_func_result=(_1c9da4a54_checkImportSelection(_self_, &(_58616_ident), &(_61321_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_1c9d96a79:;
						{
							jule::Ptr<_1b9b64c0e_Enum> _61621_e = _59817_def.cast_ptr<_1b9b64c0e_Enum>(&__jule_any_type67);;
							__jule_func_result=(_1c9da89d1_checkImportSelection(_self_, &(_58616_ident), &(_61621_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type68) {
						_case_begin_1c9d96ae0:;
						{
							jule::Ptr<_1b9b66419_TypeEnum> _61921_e = _59817_def.cast_ptr<_1b9b66419_TypeEnum>(&__jule_any_type68);;
							__jule_func_result=(_1c9dac95d_checkImportSelection(_self_, &(_58616_ident), &(_61921_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type64) {
						_case_begin_1c9d96b56:;
						{
							jule::Ptr<_1b9b4e26a_Fn> _62221_f = _59817_def.cast_ptr<_1b9b4e26a_Fn>(&__jule_any_type64);;
							__jule_func_result=(_1c9db18da_checkImportSelection(_self_, &(_58616_ident), &(_62221_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_1c9d95c43:;
						{
							_1b9bd5004_pushErr(_self_, _58616_ident, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_58616_ident))._field_Kind, &__jule_any_type4)}));
							__jule_func_result=false;
							goto _iter_next_1c9d93207;
						}
					}
					_match_end_1c9d95bdd:;
				};
			}
			_iter_next_1c9d93207:;
			++it;
			goto _iter_begin_1c9d93207;
		}
		_iter_end_1c9d93207:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c9db60b5_checkImportsAllSelectionsFromCollection(_1b9bd23b9_Sema* _self_, jule::Slice<jule::Ptr<_1b9c09611_Var>>* _63362_s, jule::Ptr<_1b9b032eb_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9db78e1:;
		if (it != expr_end) {
			jule::Ptr<_1b9c09611_Var> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1c9d979e2_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1c9db78e1:;
			++it;
			goto _iter_begin_1c9db78e1;
		}
		_iter_end_1c9db78e1:;
	};
	return _63413_ok;;
}

inline jule::Bool _1c9db7209_checkImportsAllSelectionsFromCollection(_1b9bd23b9_Sema* _self_, jule::Slice<jule::Ptr<_1b9c8c3db_TypeAlias>>* _63362_s, jule::Ptr<_1b9b032eb_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9dba691:;
		if (it != expr_end) {
			jule::Ptr<_1b9c8c3db_TypeAlias> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1c9d9b9b3_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1c9dba691:;
			++it;
			goto _iter_begin_1c9dba691;
		}
		_iter_end_1c9dba691:;
	};
	return _63413_ok;;
}

inline jule::Bool _1c9db9eed_checkImportsAllSelectionsFromCollection(_1b9bd23b9_Sema* _self_, jule::Slice<jule::Ptr<_1b9b393a9_Struct>>* _63362_s, jule::Ptr<_1b9b032eb_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9dbd430:;
		if (it != expr_end) {
			jule::Ptr<_1b9b393a9_Struct> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1c9da0940_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1c9dbd430:;
			++it;
			goto _iter_begin_1c9dbd430;
		}
		_iter_end_1c9dbd430:;
	};
	return _63413_ok;;
}

inline jule::Bool _1c9dbcc48_checkImportsAllSelectionsFromCollection(_1b9bd23b9_Sema* _self_, jule::Slice<jule::Ptr<_1b9b4e26a_Fn>>* _63362_s, jule::Ptr<_1b9b032eb_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9dc11e1:;
		if (it != expr_end) {
			jule::Ptr<_1b9b4e26a_Fn> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1c9db18da_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1c9dc11e1:;
			++it;
			goto _iter_begin_1c9dc11e1;
		}
		_iter_end_1c9dc11e1:;
	};
	return _63413_ok;;
}

inline jule::Bool _1c9dc0a4d_checkImportsAllSelectionsFromCollection(_1b9bd23b9_Sema* _self_, jule::Slice<jule::Ptr<_1b9b62514_Trait>>* _63362_s, jule::Ptr<_1b9b032eb_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9dc3e3b:;
		if (it != expr_end) {
			jule::Ptr<_1b9b62514_Trait> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1c9da4a54_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1c9dc3e3b:;
			++it;
			goto _iter_begin_1c9dc3e3b;
		}
		_iter_end_1c9dc3e3b:;
	};
	return _63413_ok;;
}

inline jule::Bool _1c9dc3798_checkImportsAllSelectionsFromCollection(_1b9bd23b9_Sema* _self_, jule::Slice<jule::Ptr<_1b9b64c0e_Enum>>* _63362_s, jule::Ptr<_1b9b032eb_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9dc6b86:;
		if (it != expr_end) {
			jule::Ptr<_1b9b64c0e_Enum> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1c9da89d1_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1c9dc6b86:;
			++it;
			goto _iter_begin_1c9dc6b86;
		}
		_iter_end_1c9dc6b86:;
	};
	return _63413_ok;;
}

inline jule::Bool _1c9dc64e3_checkImportsAllSelectionsFromCollection(_1b9bd23b9_Sema* _self_, jule::Slice<jule::Ptr<_1b9b66419_TypeEnum>>* _63362_s, jule::Ptr<_1b9b032eb_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9dc9969:;
		if (it != expr_end) {
			jule::Ptr<_1b9b66419_TypeEnum> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1c9dac95d_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1c9dc9969:;
			++it;
			goto _iter_begin_1c9dc9969;
		}
		_iter_end_1c9dc9969:;
	};
	return _63413_ok;;
}



inline jule::Bool _1b9bd7ca4_checkImportAllSelections(_1b9bd23b9_Sema* _self_, jule::Ptr<_1b9bb1200_ImportInfo>* _64344_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*((*(_64344_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9d97063:;
		if (it != expr_end) {
			jule::Ptr<_1b9c57ce1_SymbolTable> *_64516_file = it;
			{
				__jule_func_result=(_1c9db60b5_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Vars), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1c9db7209_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_TypeAliases), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1c9db9eed_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Structs), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1c9dbcc48_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Funcs), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1c9dc0a4d_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Traits), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1c9dc3798_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Enums), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1c9dc64e3_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_TypeEnums), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
			}
			_iter_next_1c9d97063:;
			++it;
			goto _iter_begin_1c9d97063;
		}
		_iter_end_1c9d97063:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b9bd80e5_checkImportSelections(_1b9bd23b9_Sema* _self_, jule::Ptr<_1b9bb1200_ImportInfo>* _65745_imp) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_65745_imp))))._field_Selected.len() > 0LL)) {
		__jule_func_result = _1b9bd7567_checkImportSelectedSelections(_self_, _65745_imp);
		return __jule_func_result;;
	} else if ((*((*(_65745_imp))))._field_ImportAll) {
		__jule_func_result = _1b9bd7ca4_checkImportAllSelections(_self_, _65745_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b9bd8436_isUseAliasDuplication(_1b9bd23b9_Sema* _self_, jule::Ptr<_1b9bb1200_ImportInfo>* _66641_imp) {
	if (((*((*(_66641_imp))))._field_Alias.len() == 0LL)) {
		return false;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9dcc2b8:;
		if (it != expr_end) {
			jule::Ptr<_1b9bb1200_ImportInfo> _67121_imp2 = *it;
			{
				if ((_67121_imp2 == (*(_66641_imp)))) {
					goto _iter_end_1c9dcc2b8;
				};
				if (((*(_67121_imp2))._field_Alias == (*((*(_66641_imp))))._field_Alias)) {
					return true;;
				};
				if ((((*(_67121_imp2))._field_Ident == (*(_67121_imp2))._field_LinkPath) && ((*(_67121_imp2))._field_Ident == (*((*(_66641_imp))))._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1c9dcc2b8:;
			++it;
			goto _iter_begin_1c9dcc2b8;
		}
		_iter_end_1c9dcc2b8:;
	};
	return false;;
}



inline jule::Bool _1b9bd8777_checkImport(_1b9bd23b9_Sema* _self_, jule::Ptr<_1b9bb1200_ImportInfo>* _68635_imp) {
	if (((*((*(_68635_imp))))._field_Binded || ((*((*((*(_68635_imp))))._field_Package))._field_Files.len() == 0LL))) {
		return true;;
	};
	if (_1b9bd8436_isUseAliasDuplication(_self_, _68635_imp)) {
		_1b9bd5004_pushErr(_self_, (*((*(_68635_imp))))._field_Token, jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75), jule::Slice<jule::Any>::make({jule::Any((*((*(_68635_imp))))._field_Alias, &__jule_any_type4)}));
		_1b9bd5367_pushSuggestion(_self_, jule::Str::lit("rename alias for this use declaration to avoid duplication", 58), jule::Slice<jule::Any>());
	};
	if ((!((*((*(_68635_imp))))._field_Duplicate))) {
		jule::Ptr<_1b9bd23b9_Sema> _69717_sema = jule::new_ptr<_1b9bd23b9_Sema>(_1b9bd23b9_Sema{._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_1b9c05b3a_check(_69717_sema, &((*((*((*(_68635_imp))))._field_Package))._field_Files));
		if (((*(_69717_sema))._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append((*(_69717_sema))._field_errors);;
			(*(_69717_sema))._field_errors=nullptr;
			return false;;
		};
	};
	return _1b9bd80e5_checkImportSelections(_self_, _68635_imp);;
}



inline void _1b9bd8975_checkImports(_1b9bd23b9_Sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9dd1c90:;
		if (it != expr_end) {
			jule::Ptr<_1b9c57ce1_SymbolTable> _71221_file = *it;
			{
				_1b9bd4ad6_setCurrentFile(_self_, _71221_file);
				{
					auto expr = &((*(_71221_file))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c9dd4aea:;
					if (it != expr_end) {
						jule::Ptr<_1b9bb1200_ImportInfo> _71425_imp = *it;
						{
							jule::Bool _71517_ok = _1b9bd8777_checkImport(_self_, &(_71425_imp));;
							if ((!(_71517_ok))) {
								return;;
							};
						}
						_iter_next_1c9dd4aea:;
						++it;
						goto _iter_begin_1c9dd4aea;
					}
					_iter_end_1c9dd4aea:;
				};
			}
			_iter_next_1c9dd1c90:;
			++it;
			goto _iter_begin_1c9dd1c90;
		}
		_iter_end_1c9dd1c90:;
	};
}



inline void _1b9bd8b73_implFileImpls(jule::Ptr<_1b9bd23b9_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9dd4a40:;
		if (it != expr_end) {
			jule::Ptr<_1b9b8988d_Impl> _72521_imp = *it;
			{
				_1b9be738a_implImpl(_self_, &(_72521_imp));
			}
			_iter_next_1c9dd4a40:;
			++it;
			goto _iter_begin_1c9dd4a40;
		}
		_iter_end_1c9dd4a40:;
	};
}



inline void _1b9bd8d71_implImpls(jule::Ptr<_1b9bd23b9_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9dd65d0:;
		if (it != expr_end) {
			jule::Ptr<_1b9c57ce1_SymbolTable> _73121_file = *it;
			{
				_1b9bd4ad6_setCurrentFile(_self_.ptr(), _73121_file);
				_1b9bd8b73_implFileImpls(_self_);
			}
			_iter_next_1c9dd65d0:;
			++it;
			goto _iter_begin_1c9dd65d0;
		}
		_iter_end_1c9dd65d0:;
	};
}



inline void _1b9bd906e_checkEnums(jule::Ptr<_1b9bd23b9_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9dd7328:;
		if (it != expr_end) {
			jule::Ptr<_1b9c57ce1_SymbolTable> _73821_file = *it;
			{
				_1b9bd4ad6_setCurrentFile(_self_.ptr(), _73821_file);
				{
					
					if ((!(_1b9be37c6_checkEnumDecls(_self_)))) {
						_case_begin_1c9dd8aaa:;
					}
					else if ((!(_1b9be3a5c_checkTypeEnumDecls(_self_)))) {
						_case_begin_1c9dd8b32:;
					}
					_match_end_1c9dd8a22:;
				};
			}
			_iter_next_1c9dd7328:;
			++it;
			goto _iter_begin_1c9dd7328;
		}
		_iter_end_1c9dd7328:;
	};
}



inline void _1b9bd926c_checkFileInherits(jule::Ptr<_1b9bd23b9_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9dd81c5:;
		if (it != expr_end) {
			jule::Ptr<_1b9b62514_Trait> _74821_t = *it;
			{
				jule::Bool _74913_ok = _1b9be5421__checkTraitDeclInherits(_self_, &(_74821_t));;
				if ((!(_74913_ok))) {
					return;;
				};
			}
			_iter_next_1c9dd81c5:;
			++it;
			goto _iter_begin_1c9dd81c5;
		}
		_iter_end_1c9dd81c5:;
	};
}



inline void _1b9bd946a_checkInherits(jule::Ptr<_1b9bd23b9_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9dd9d31:;
		if (it != expr_end) {
			jule::Ptr<_1b9c57ce1_SymbolTable> _75721_file = *it;
			{
				_1b9bd4ad6_setCurrentFile(_self_.ptr(), _75721_file);
				_1b9bd926c_checkFileInherits(_self_);
			}
			_iter_next_1c9dd9d31:;
			++it;
			goto _iter_begin_1c9dd9d31;
		}
		_iter_end_1c9dd9d31:;
	};
}



inline _1b9ca008b_typeChecker _1b9bd9921_typeChecker(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Trait<_1b9cacc14_Lookup> _76335_l, jule::Slice<jule::Ptr<_1b9c8c3db_TypeAlias>> _76350_generics, jule::Ptr<_1b9c9e09b_referencer> _76413_referencer) {
	_1b9ca008b_typeChecker _76513_tc = _1b9ca008b_typeChecker{._field_s=_self_, ._field_rootLookup=_76335_l, ._field_lookup=_76335_l, ._field_referencer=_76413_referencer, ._field_useGenerics=_76350_generics, };;
	{
		auto &_match_expr{ _76335_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1c9ddc8a0:;
			{
				jule::Ptr<_1b9b970c6_scopeChecker> _77417_hard = _1b9b9a44d_getHardRoot(_76335_l.cast_ptr<_1b9b970c6_scopeChecker>(0));;
				_76513_tc._field_refers=(*((*(_77417_hard))._field_owner))._field_Refers;
			}
		}
		_match_end_1c9ddc84a:;
	};
	if (((_76413_referencer != nullptr) && ((*(_76413_referencer))._field_refs != nullptr))) {
		{
			auto &_match_expr{ (*(_76413_referencer))._field_owner };
			
			if (_match_expr.type == &__jule_any_type66) {
				_case_begin_1c9dde088:;
				{
					_76513_tc._field_ownerAlias=(*(_76413_referencer))._field_owner.cast_ptr<_1b9c8c3db_TypeAlias>(&__jule_any_type66);
				}
			}
			_match_end_1c9dde033:;
		};
	};
	return _76513_tc;;
}



inline jule::Ptr<_1b9c8d1cd_TypeKind> _1b9bd9e82_buildTypeWithRefers(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b187b7_TypeDecl>* _79044_t, jule::Trait<_1b9cacc14_Lookup> _79067_l, jule::Slice<jule::Ptr<_1b9c8c3db_TypeAlias>> _79113_generics, jule::Ptr<_1b9c9e09b_referencer> _79141_referencer) {
	return ({ auto _wrap_copy = _1b9bd9921_typeChecker(_self_, _79067_l, _79113_generics, _79141_referencer); _1b9ca7736_checkDecl(&_wrap_copy, _79044_t); });;
}



inline jule::Bool _1b9bda4e3_checkTypeWithRefers(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9c953a0_TypeSymbol>* _79744_t, jule::Trait<_1b9cacc14_Lookup> _79764_l, jule::Slice<jule::Ptr<_1b9c8c3db_TypeAlias>> _79813_generics, jule::Ptr<_1b9c9e09b_referencer> _79841_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1b9c95724_checked((*(_79744_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_79744_t))))._field_Kind=_1b9bd9e82_buildTypeWithRefers(_self_, &((*((*(_79744_t))))._field_Decl), _79764_l, _79813_generics, _79841_referencer);
	__jule_func_result = _1b9c95724_checked((*(_79744_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1b9b87858_constraintChecker> _1b9bda779_constraintChecker(jule::Ptr<_1b9bd23b9_Sema> _self_) {
	return jule::new_ptr<_1b9b87858_constraintChecker>(_1b9b87858_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _1b9bdab75_checkType(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9c953a0_TypeSymbol>* _81234_t, jule::Trait<_1b9cacc14_Lookup> _81254_l) {
	return _1b9bda4e3_checkTypeWithRefers(_self_, _81234_t, _81254_l, nullptr, nullptr);;
}



inline jule::Ptr<_1b9c8d1cd_TypeKind> _1b9bdb12b_buildTypeWithGenerics(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b187b7_TypeDecl>* _81846_t, jule::Slice<jule::Ptr<_1b9c8c3db_TypeAlias>> _81913_generics, jule::Ptr<_1b9b5531a_ReferenceStack> _81941_refers) {
	jule::Ptr<_1b9ca008b_typeChecker> _82013_tc = jule::new_ptr<_1b9ca008b_typeChecker>(_1b9ca008b_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1b9cacc14_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1b9cacc14_Lookup>(_self_, 3), ._field_refers=_81941_refers, ._field_useGenerics=_81913_generics, });;
	return _1b9ca7736_checkDecl(_82013_tc.ptr(), _81846_t);;
}



inline jule::Ptr<_1b9c8d1cd_TypeKind> _1b9bdb7ad_selectType(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b187b7_TypeDecl>* _83635_t) {
	jule::Ptr<_1b9ca008b_typeChecker> _83713_tc = jule::new_ptr<_1b9ca008b_typeChecker>(_1b9ca008b_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1b9cacc14_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1b9cacc14_Lookup>(_self_, 3), ._field_selection=true, });;
	return _1b9ca7736_checkDecl(_83713_tc.ptr(), _83635_t);;
}



inline jule::Ptr<_1b9c5ec0a_Eval> _1b9bdbc64_evalpd(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Trait<_1b9cacc14_Lookup> _84830_l, jule::Ptr<_1b9c8d1cd_TypeKind> _84845_p, jule::Ptr<_1b9c09611_Var> _84863_owner) {
	jule::Ptr<_1b9c5ec0a_Eval> _84913_e = jule::new_ptr<_1b9c5ec0a_Eval>(_1b9c5ec0a_Eval{._field_s=_self_, ._field_lookup=_84830_l, ._field_owner=_84863_owner, });;
	{
		auto &_match_expr{ _84830_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1c9de7e2c:;
			{
				(*(_84913_e))._field_unsafety=_1b9b99480_isUnsafe(_84830_l.cast_ptr<_1b9b970c6_scopeChecker>(0));
			}
		}
		_match_end_1c9de7dc7:;
	};
	(*(_84913_e))._field_prefix=_84845_p;
	return _84913_e;;
}



inline jule::Ptr<_1b9c5ec0a_Eval> _1b9bdc160_evalp(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Trait<_1b9cacc14_Lookup> _86329_l, jule::Ptr<_1b9c8d1cd_TypeKind> _86344_p) {
	return _1b9bdbc64_evalpd(_self_, _86329_l, _86344_p, nullptr);;
}



inline jule::Ptr<_1b9c5ec0a_Eval> _1b9bdc4a1_eval(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Trait<_1b9cacc14_Lookup> _86828_l) {
	return _1b9bdc160_evalp(_self_, _86828_l, nullptr);;
}



inline jule::Bool _1b9bdca12_checkAssignType(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Bool _87235_destIsRef, jule::Ptr<_1b9c8d1cd_TypeKind>* _87257_dest, jule::Ptr<_1b9c5d016_Data>* _87314_d, jule::Ptr<_1b9b032eb_Token> _87328_errorToken) {
	if ((*((*(_87314_d))))._field_Decl) {
		_1b9bd5004_pushErr(_self_.ptr(), _87328_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return false;;
	};
	if (_87235_destIsRef) {
		if ((!(_1b9c8d8d7_Equal((*(_87257_dest)), (*((*(_87314_d))))._field_Kind)))) {
			_1b9bd5004_pushErr(_self_.ptr(), _87328_errorToken, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_87257_dest)).ptr()), &__jule_any_type4),jule::Any(_1b9c8d596_Str((*((*(_87314_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
	} else {
		jule::Ptr<_1b9c46ad2_assignTypeChecker> _88417_atc = jule::new_ptr<_1b9c46ad2_assignTypeChecker>(_1b9c46ad2_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_87257_dest)), ._field_d=(*(_87314_d)), ._field_errorToken=_87328_errorToken});;
		jule::Bool _89013_ok = _1b9c47d47_check(_88417_atc.ptr());;
		if ((!(_89013_ok))) {
			return false;;
		};
	};
	if (((!(_1b9c5d8da_IsConst((*(_87314_d)).ptr()))) || (_1b9c9082e_Prim((*(_87257_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _90013_kind = (*(_1b9c9082e_Prim((*(_87257_dest)).ptr())))._field_Kind;;
	{
		
		if (_1ec681a17_IsSigInt(_90013_kind)) {
			_case_begin_1c9e0020e:;
			{
				_1ec685c5d_SetI64((*((*(_87314_d))))._field_Constant.ptr(), static_cast<jule::I64>(_1ec685488_AsI64((*((*(_87314_d))))._field_Constant.ptr())));
			}
		}
		else if (_1ec681d25_IsUnsigInt(_90013_kind)) {
			_case_begin_1c9e00286:;
			{
				_1ec686016_SetU64((*((*(_87314_d))))._field_Constant.ptr(), static_cast<jule::U64>(_1ec68571e_AsU64((*((*(_87314_d))))._field_Constant.ptr())));
			}
		}
		else if (_1ec682430_IsFloat(_90013_kind)) {
			_case_begin_1c9e0030d:;
			{
				_1ec686830_SetF64((*((*(_87314_d))))._field_Constant.ptr(), static_cast<jule::F64>(_1ec6859a5_AsF64((*((*(_87314_d))))._field_Constant.ptr())));
			}
		}
		_match_end_1c9e00143:;
	};
	return true;;
}



inline jule::Bool _1b9bdceb8_checkTypeCompatibility(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9c8d1cd_TypeKind>* _91447_dest, jule::Ptr<_1b9c8d1cd_TypeKind>* _91514_src, jule::Ptr<_1b9b032eb_Token>* _91535_errorToken) {
	if (((*(_91514_src)) == nullptr)) {
		_1b9bd5004_pushErr(_self_.ptr(), (*(_91535_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_91447_dest)).ptr()), &__jule_any_type4),jule::Any(_1b9c8d596_Str((*(_91514_src)).ptr()), &__jule_any_type4)}));
		return false;;
	};
	if ((_1b9c92655_Tup((*(_91514_src)).ptr()) != nullptr)) {
		_1b9bd5004_pushErr(_self_.ptr(), (*(_91535_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_91447_dest)).ptr()), &__jule_any_type4),jule::Any(_1b9c8d596_Str((*(_91514_src)).ptr()), &__jule_any_type4)}));
		return false;;
	};
	_1b9c44d33_typeCompatibilityChecker _92913_tcc = _1b9c44d33_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_91447_dest)), ._field_src=(*(_91514_src)), ._field_errorToken=(*(_91535_errorToken))};;
	if (_1b9c464e9_check(&_92913_tcc)) {
		return true;;
	};
	_1b9bd5004_pushErr(_self_.ptr(), (*(_91535_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_91447_dest)).ptr()), &__jule_any_type4),jule::Any(_1b9c8d596_Str((*(_91514_src)).ptr()), &__jule_any_type4)}));
	return false;;
}



inline jule::Ptr<_1b9c8d1cd_TypeKind> _1b9bdd46e_buildNonGenericTypeKind(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b187b7_TypeDecl>* _95048_ast, jule::Slice<jule::Ptr<_1b9b259c2_GenericDecl>>* _95114_generics, jule::Slice<jule::Ptr<_1b9c8d1cd_TypeKind>>* _95150_ignored) {
	jule::Ptr<_1b9ca008b_typeChecker> _95213_tc = jule::new_ptr<_1b9ca008b_typeChecker>(_1b9ca008b_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1b9cacc14_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1b9cacc14_Lookup>(_self_, 3), ._field_ignoreGenerics=(*(_95114_generics)), ._field_ignoredGenerics=_95150_ignored, });;
	return _1b9ca7736_checkDecl(_95213_tc.ptr(), _95048_ast);;
}



inline jule::Bool _1b9bdd86a_buildFnNonGenericTypeKinds(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b5216e_FnIns>* _96251_f, jule::Slice<jule::Ptr<_1b9c8d1cd_TypeKind>>* _96267_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_1b9b259c2_GenericDecl>> _96417_generics = nullptr;;
	if (_1b9b4e974_IsMethod((*((*(_96251_f))))._field_Decl.ptr())) {
		_96417_generics=jule::append((*((*((*(_96251_f))))._field_Decl))._field_Generics,(*((*((*((*(_96251_f))))._field_Decl))._field_Owner))._field_Generics);
	} else {
		_96417_generics=(*((*((*(_96251_f))))._field_Decl))._field_Generics;
	};
	{
		auto expr = &((*((*(_96251_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9e0a219:;
		if (it != expr_end) {
			jule::Ptr<_1b9b511c3_ParamIns> _97121_p = *it;
			{
				if ((!(_1b9b4cdb2_IsSelf((*(_97121_p))._field_Decl.ptr())))) {
					(*(_97121_p))._field_Kind=_1b9bdd46e_buildNonGenericTypeKind(_self_, &((*((*((*(_97121_p))._field_Decl))._field_Kind))._field_Decl), &(_96417_generics), _96267_ignored);
					__jule_func_result=(__jule_func_result && ((*(_97121_p))._field_Kind != nullptr));
				};
			}
			_iter_next_1c9e0a219:;
			++it;
			goto _iter_begin_1c9e0a219;
		}
		_iter_end_1c9e0a219:;
	};
	if ((!(_1b9b4e6dd_IsVoid((*((*(_96251_f))))._field_Decl.ptr())))) {
		(*((*(_96251_f))))._field_Result=_1b9bdd46e_buildNonGenericTypeKind(_self_, &((*((*((*((*((*(_96251_f))))._field_Decl))._field_Result))._field_Kind))._field_Decl), &(_96417_generics), _96267_ignored);
		__jule_func_result=(__jule_func_result && ((*((*(_96251_f))))._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1b9b5216e_FnIns> _1b9bddbab_getTraitCheckFnKind(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b4e26a_Fn>* _98444_f) {
	if (((*((*(_98444_f))))._field_Instances.len() == 1LL)) {
		return (*((*(_98444_f))))._field_Instances[0LL];;
	};
	jule::Ptr<_1b9b5216e_FnIns> _98813_ins = _1b9b50744_instanceForce((*(_98444_f)));;
	jule::Ptr<_1b9ca008b_typeChecker> _99013_tc = jule::new_ptr<_1b9ca008b_typeChecker>(_1b9ca008b_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1b9cacc14_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1b9cacc14_Lookup>(_self_, 3), });;
	{
		auto expr = &((*(_98813_ins))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9e10021:;
		if (it != expr_end) {
			jule::Ptr<_1b9b511c3_ParamIns> _99521_p = *it;
			{
				if ((!(_1b9b4cdb2_IsSelf((*(_99521_p))._field_Decl.ptr())))) {
					(*(_99521_p))._field_Kind=_1b9ca7736_checkDecl(_99013_tc.ptr(), &((*((*((*(_99521_p))._field_Decl))._field_Kind))._field_Decl));
				};
			}
			_iter_next_1c9e10021:;
			++it;
			goto _iter_begin_1c9e10021;
		}
		_iter_end_1c9e10021:;
	};
	if ((!(_1b9b4e6dd_IsVoid((*(_98444_f)).ptr())))) {
		(*(_98813_ins))._field_Result=_1b9ca7736_checkDecl(_99013_tc.ptr(), &((*((*((*((*(_98444_f))))._field_Result))._field_Kind))._field_Decl));
	};
	return _98813_ins;;
}



inline jule::Bool _1b9bde162_checkConstraintsFn(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b5216e_FnIns>* _100743_f, jule::Ptr<_1b9b032eb_Token>* _100759_et, jule::Ptr<_1b9b5216e_FnIns> _100775_exist) {
	jule::Ptr<_1b9b87858_constraintChecker> _100813_cc = _1b9bda779_constraintChecker(_self_);;
	(*(_100813_cc))._field_et=(*(_100759_et));
	(*(_100813_cc))._field_fi=(*(_100743_f));
	if ((_100775_exist != nullptr)) {
		{
			auto expr = &((*(_100775_exist))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c9e15c08:;
			if (it != expr_end) {
				jule::I32 _101218_i = it - expr->begin();
				jule::Ptr<_1b9c8b7e7_InsGeneric> _101225_g = *it;
				{
					(*((*((*(_100743_f))))._field_Generics[_101218_i]))._field_Constraint=(*(_101225_g))._field_Constraint;
				}
				_iter_next_1c9e15c08:;
				++it;
				_101218_i++;
				goto _iter_begin_1c9e15c08;
			}
			_iter_end_1c9e15c08:;
		};
	} else {
		(*(_100813_cc))._field_uniq=true;
	};
	return _1b9b8878d_check(_100813_cc);;
}



inline jule::Bool _1b9bde618_checkConstraintsStruct(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b3c137_StructIns>* _102147_s, jule::Ptr<_1b9b032eb_Token>* _102167_et, jule::Ptr<_1b9b3c137_StructIns> _102183_exist) {
	jule::Ptr<_1b9b87858_constraintChecker> _102213_cc = _1b9bda779_constraintChecker(_self_);;
	(*(_102213_cc))._field_et=(*(_102167_et));
	(*(_102213_cc))._field_si=(*(_102147_s));
	if ((_102183_exist != nullptr)) {
		{
			auto expr = &((*(_102183_exist))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c9e18c94:;
			if (it != expr_end) {
				jule::I32 _102618_i = it - expr->begin();
				jule::Ptr<_1b9c8b7e7_InsGeneric> _102625_g = *it;
				{
					(*((*((*(_102147_s))))._field_Generics[_102618_i]))._field_Constraint=(*(_102625_g))._field_Constraint;
				}
				_iter_next_1c9e18c94:;
				++it;
				_102618_i++;
				goto _iter_begin_1c9e18c94;
			}
			_iter_end_1c9e18c94:;
		};
	} else {
		(*(_102213_cc))._field_uniq=true;
	};
	return _1b9b8878d_check(_102213_cc);;
}



inline jule::Bool _1b9bdea14_fnEnvironment(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b5216e_FnIns>* _103838_f, jule::Fn<jule::Bool(jule::Ptr<_1b9bd23b9_Sema>*,jule::Slice<jule::Ptr<_1b9c8c3db_TypeAlias>>*)> _103849_algo) {
	jule::Ptr<_1b9bd23b9_Sema> _103913_sema = (*((*((*(_103838_f))))._field_Decl))._field_sema;;
	jule::Ptr<_1b9c57ce1_SymbolTable> _104013_old = (*((*((*((*(_103838_f))))._field_Decl))._field_sema))._field_file;;
	__JULE_DEFER({
		_1b9bd4ad6_setCurrentFile((*((*((*(_103838_f))))._field_Decl))._field_sema.ptr(), _104013_old);
	});;
	jule::Ptr<_1b9c57ce1_SymbolTable> _104213_file = _1b9bd1110_findFile(&((*((*((*((*(_103838_f))))._field_Decl))._field_sema))._field_files), &((*((*((*((*(_103838_f))))._field_Decl))._field_Token))._field_File));;
	if ((_104213_file != nullptr)) {
		_1b9bd4ad6_setCurrentFile((*((*((*(_103838_f))))._field_Decl))._field_sema.ptr(), _104213_file);
	};
	jule::I32 _104713_size = (*((*(_103838_f))))._field_Generics.len();;
	if ((((*((*(_103838_f))))._field_Decl != nullptr) && ((*((*((*(_103838_f))))._field_Decl))._field_Owner != nullptr))) {
		_104713_size+=(*((*((*((*(_103838_f))))._field_Decl))._field_Owner))._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1b9c8c3db_TypeAlias>> _105213_generics = jule::Slice<jule::Ptr<_1b9c8c3db_TypeAlias>>::alloc(0LL, _104713_size);;
	_1b9bd0c8b_appendGenericTypeAliases(&(_105213_generics), _103838_f);
	jule::Bool _10559_ok = _103849_algo(&(_103913_sema), &(_105213_generics));;
	if ((_103913_sema != _self_)) {
		((*(_self_))._field_errors).append((*(_103913_sema))._field_errors);;
		(*(_103913_sema))._field_errors=nullptr;
	};
	return _10559_ok;;
}



inline void _1b9bdecbc_checkFnParamKind(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b511c3_ParamIns>* _106541_p) {
	(*((*((*(_106541_p))))._field_Kind))._field_Variadic=(*((*((*(_106541_p))))._field_Decl))._field_Variadic;
	if (((*((*((*(_106541_p))))._field_Decl))._field_Reference && (!(_1b9ca96c2_isValidForRef(&((*((*(_106541_p))))._field_Kind)))))) {
		_1b9bd5004_pushErr(_self_.ptr(), (*((*((*(_106541_p))))._field_Decl))._field_Token, jule::Str::lit("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*((*(_106541_p))))._field_Kind.ptr()), &__jule_any_type4)}));
	};
}



inline jule::Bool _1b9be010d_reloadFnInsTypes(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b5216e_FnIns> _107240_f) {
	if ((_1b9b53604_IsBuiltin(_107240_f.ptr()) || _1b9b5388a_IsAnon(_107240_f.ptr()))) {
		return true;;
	};
	return _1b9bdea14_fnEnvironment(_self_, &(_107240_f), jule::Fn<jule::Bool(jule::Ptr<_1b9bd23b9_Sema>*,jule::Slice<jule::Ptr<_1b9c8c3db_TypeAlias>>*)>([=](jule::Ptr<_1b9bd23b9_Sema>* _107643_sema, jule::Slice<jule::Ptr<_1b9c8c3db_TypeAlias>>* _107661_generics) mutable -> jule::Bool {
		jule::Bool _107717_ok = true;;
		{
			auto expr = &((*(_107240_f))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c9e26e06:;
			if (it != expr_end) {
				jule::Ptr<_1b9b511c3_ParamIns> _107825_p = *it;
				{
					if (_1b9b4cdb2_IsSelf((*(_107825_p))._field_Decl.ptr())) {
						if (_1b9b4d148_IsRef((*(_107825_p))._field_Decl.ptr())) {
							(*(_107825_p))._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(jule::new_ptr<_1b9c997d3_Sptr>(_1b9c997d3_Sptr{._field_Elem=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>((*(_107240_f))._field_Owner, 0)})}), 21)});
						} else {
							(*(_107825_p))._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>((*(_107240_f))._field_Owner, 0)});
						};
					} else {
						(*(_107825_p))._field_Kind=_1b9bdb12b_buildTypeWithGenerics((*(_107643_sema)), &((*((*((*(_107825_p))._field_Decl))._field_Kind))._field_Decl), (*(_107661_generics)), (*(_107240_f))._field_Refers);
						if (((*(_107825_p))._field_Kind != nullptr)) {
							_1b9bdecbc_checkFnParamKind(_self_, &(_107825_p));
						} else {
							_107717_ok=false;
						};
					};
				}
				_iter_next_1c9e26e06:;
				++it;
				goto _iter_begin_1c9e26e06;
			}
			_iter_end_1c9e26e06:;
		};
		if ((!(_1b9b4e6dd_IsVoid((*(_107240_f))._field_Decl.ptr())))) {
			(*(_107240_f))._field_Result=_1b9bdb12b_buildTypeWithGenerics((*(_107643_sema)), &((*((*((*((*(_107240_f))._field_Decl))._field_Result))._field_Kind))._field_Decl), (*(_107661_generics)), (*(_107240_f))._field_Refers);
			_107717_ok=(((*(_107240_f))._field_Result != nullptr) && _107717_ok);
		};
		return _107717_ok;;
	}));;
}



inline jule::Bool _1b9be05b4_checkRefValidityForInitExpr(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Bool _110847_leftMut, jule::Ptr<_1b9c5d016_Data>* _110867_d, jule::Ptr<_1b9b032eb_Token>* _110882_errorToken) {
	if ((!(_1b9bcea59_isValidModelForRef(&((*((*(_110867_d))))._field_Model))))) {
		_1b9bd5004_pushErr(_self_.ptr(), (*(_110882_errorToken)), jule::Str::lit("references requires variable based expression for assignment", 60), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_110847_leftMut && (!((*((*(_110867_d))))._field_Mutable)))) {
		_1b9bd5004_pushErr(_self_.ptr(), (*(_110882_errorToken)), jule::Str::lit("mutable reference cannot point to immutable data", 48), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1b9be0905_isMutRiskyStruct(_1b9bd23b9_Sema* _self_, jule::Ptr<_1b9b3c137_StructIns>* _112532_s) {
	{
		auto expr = &((*((*(_112532_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9e3011d:;
		if (it != expr_end) {
			jule::Ptr<_1b9b3b587_FieldIns> *_112616_f = it;
			{
				if ((((*((*((*(_112616_f))))._field_Decl))._field_Mutable && _1b9c8ea5e_Mutable((*((*(_112616_f))))._field_Kind.ptr())) && _1b9bd5763_isAccessibleDefine(_self_, (*((*((*(_112616_f))))._field_Decl))._field_Public, (*((*((*(_112616_f))))._field_Decl))._field_Token))) {
					return true;;
				};
			}
			_iter_next_1c9e3011d:;
			++it;
			goto _iter_begin_1c9e3011d;
		}
		_iter_end_1c9e3011d:;
	};
	return false;;
}



inline jule::Bool _1b9be1021_checkValidityForInitExpr(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Bool _115244_leftMut, jule::Bool _115259_leftRef, jule::Ptr<_1b9c8d1cd_TypeKind>* _115310_leftKind, jule::Ptr<_1b9c5d016_Data>* _115336_d, jule::Ptr<_1b9b032eb_Token>* _115351_errorToken) {
	if ((_115244_leftMut && (!((*((*(_115336_d))))._field_Mutable)))) {
		if (_1b9c8ea5e_Mutable((*((*(_115336_d))))._field_Kind.ptr())) {
			_1b9bd5004_pushErr(_self_.ptr(), (*(_115351_errorToken)), jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*((*(_115336_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
		jule::Ptr<_1b9b3c137_StructIns> _116113_s = _1b9c91da2_Struct((*((*(_115336_d))))._field_Kind.ptr());;
		if (((_116113_s != nullptr) && _1b9be0905_isMutRiskyStruct(_self_.ptr(), &(_116113_s)))) {
			_1b9bd5004_pushErr(_self_.ptr(), (*(_115351_errorToken)), jule::Str::lit("struct @ cannot copied due to field which is stores mutable data", 64), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*((*(_115336_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
	};
	if (_115259_leftRef) {
		if ((!(_1b9be05b4_checkRefValidityForInitExpr(_self_, _115244_leftMut, _115336_d, _115351_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1b9c46ad2_assignTypeChecker> _117213_atc = jule::new_ptr<_1b9c46ad2_assignTypeChecker>(_1b9c46ad2_assignTypeChecker{._field_s=_self_, ._field_d=(*(_115336_d)), ._field_errorToken=(*(_115351_errorToken))});;
	return _1b9c4730d_checkValidity(_117213_atc.ptr());;
}



inline jule::Bool _1b9be141c_checkTypeAliasDeclKind(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9c8c3db_TypeAlias>* _118047_ta, jule::Trait<_1b9cacc14_Lookup> _118067_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b9c57ce1_SymbolTable> _118113_old = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1b9bd4ad6_setCurrentFile(_self_.ptr(), _118113_old);
	});;
	if (((*((*(_118047_ta))))._field_Token != nullptr)) {
		jule::Ptr<_1b9c57ce1_SymbolTable> _118617_file = _1b9bd1110_findFile(&((*(_self_))._field_files), &((*((*((*(_118047_ta))))._field_Token))._field_File));;
		if ((_118617_file != nullptr)) {
			_1b9bd4ad6_setCurrentFile(_self_.ptr(), _118617_file);
		};
	};
	__jule_func_result=_1b9bda4e3_checkTypeWithRefers(_self_, &((*((*(_118047_ta))))._field_Kind), _118067_l, nullptr, jule::new_ptr<_1b9c9e09b_referencer>(_1b9c9e09b_referencer{._field_ident=(*((*(_118047_ta))))._field_Ident, ._field_owner=jule::Any((*(_118047_ta)), &__jule_any_type66), ._field_refs=(&((*((*(_118047_ta))))._field_Refers))}));
	if (((__jule_func_result && (_1b9c915ee_Arr((*((*((*(_118047_ta))))._field_Kind))._field_Kind.ptr()) != nullptr)) && (*(_1b9c915ee_Arr((*((*((*(_118047_ta))))._field_Kind))._field_Kind.ptr())))._field_Auto)) {
		_1b9bd5004_pushErr(_self_.ptr(), (*((*((*((*(_118047_ta))))._field_Kind))._field_Decl))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1b9be1780_checkTypeAliasDecl(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9c8c3db_TypeAlias>* _120343_ta, jule::Trait<_1b9cacc14_Lookup> _120363_l) {
	if (_1b9b05c5a_IsIgnoreIdent((*((*(_120343_ta))))._field_Ident)) {
		_1b9bd5004_pushErr(_self_.ptr(), (*((*(_120343_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_1b9be141c_checkTypeAliasDeclKind(_self_, _120343_ta, _120363_l);
}



inline void _1b9be1a38_checkTypeAliasDeclDup(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9c8c3db_TypeAlias>* _121146_ta) {
	if (_1b9b05c5a_IsIgnoreIdent((*((*(_121146_ta))))._field_Ident)) {
		_1b9bd5004_pushErr(_self_.ptr(), (*((*(_121146_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1b9bd5c19_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_121146_ta)))), &((*((*(_121146_ta))))._field_Ident), (*((*(_121146_ta))))._field_Binded)) {
		_1b9bd5004_pushErr(_self_.ptr(), (*((*(_121146_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_121146_ta))))._field_Ident, &__jule_any_type4)}));
		_1b9bd5367_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1b9be141c_checkTypeAliasDeclKind(_self_, _121146_ta, jule::Trait<_1b9cacc14_Lookup>(_self_, 3));
}



inline jule::Bool _1b9be1cbe_checkTypeAliasDecls(jule::Ptr<_1b9bd23b9_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9e4221d:;
		if (it != expr_end) {
			jule::Ptr<_1b9c8c3db_TypeAlias> _122421_ta = *it;
			{
				_1b9be1a38_checkTypeAliasDeclDup(_self_, &(_122421_ta));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c9e4221d:;
			++it;
			goto _iter_begin_1c9e4221d;
		}
		_iter_end_1c9e4221d:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1c9e6e4ae_checkEnumItemsDup(_1b9bd23b9_Sema* _self_, jule::Slice<jule::Ptr<_1b9b64192_EnumItem>> _123539_items) {
	{
		auto expr = &(_123539_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9e7078a:;
		if (it != expr_end) {
			jule::Ptr<_1b9b64192_EnumItem> *_123616_item = it;
			{
				if (((*((*(_123616_item))))._field_Ident).empty()) {
					goto _iter_next_1c9e7078a;
				} else if (_1b9b05c5a_IsIgnoreIdent((*((*(_123616_item))))._field_Ident)) {
					_1b9bd5004_pushErr(_self_, (*((*(_123616_item))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_123539_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c9e71a88:;
						if (it != expr_end) {
							jule::Ptr<_1b9b64192_EnumItem> *_124224_citem = it;
							{
								if (((*(_123616_item)) == (*(_124224_citem)))) {
									goto _iter_end_1c9e71a88;
								} else if (((*((*(_123616_item))))._field_Ident == (*((*(_124224_citem))))._field_Ident)) {
									_1b9bd5004_pushErr(_self_, (*((*(_123616_item))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_123616_item))))._field_Ident, &__jule_any_type4)}));
									_1b9bd5367_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1c9e71a88;
								};
							}
							_iter_next_1c9e71a88:;
							++it;
							goto _iter_begin_1c9e71a88;
						}
						_iter_end_1c9e71a88:;
					};
				};
			}
			_iter_next_1c9e7078a:;
			++it;
			goto _iter_begin_1c9e7078a;
		}
		_iter_end_1c9e7078a:;
	};
}

inline void _1c9e7b301_checkEnumItemsDup(_1b9bd23b9_Sema* _self_, jule::Slice<jule::Ptr<_1b9b65d42_TypeEnumItem>> _123539_items) {
	{
		auto expr = &(_123539_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9e7c588:;
		if (it != expr_end) {
			jule::Ptr<_1b9b65d42_TypeEnumItem> *_123616_item = it;
			{
				if (((*((*(_123616_item))))._field_Ident).empty()) {
					goto _iter_next_1c9e7c588;
				} else if (_1b9b05c5a_IsIgnoreIdent((*((*(_123616_item))))._field_Ident)) {
					_1b9bd5004_pushErr(_self_, (*((*(_123616_item))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_123539_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c9e7d886:;
						if (it != expr_end) {
							jule::Ptr<_1b9b65d42_TypeEnumItem> *_124224_citem = it;
							{
								if (((*(_123616_item)) == (*(_124224_citem)))) {
									goto _iter_end_1c9e7d886;
								} else if (((*((*(_123616_item))))._field_Ident == (*((*(_124224_citem))))._field_Ident)) {
									_1b9bd5004_pushErr(_self_, (*((*(_123616_item))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_123616_item))))._field_Ident, &__jule_any_type4)}));
									_1b9bd5367_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1c9e7d886;
								};
							}
							_iter_next_1c9e7d886:;
							++it;
							goto _iter_begin_1c9e7d886;
						}
						_iter_end_1c9e7d886:;
					};
				};
			}
			_iter_next_1c9e7c588:;
			++it;
			goto _iter_begin_1c9e7c588;
		}
		_iter_end_1c9e7c588:;
	};
}



inline void _1b9be2330_checkEnumItemsStr(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b64c0e_Enum>* _125542_e) {
	jule::Ptr<_1b9c5ec0a_Eval> _125613_eval = _1b9bdc4a1_eval(_self_, jule::Trait<_1b9cacc14_Lookup>(_self_, 3));;
	{
		auto expr = &((*((*(_125542_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9e44011:;
		if (it != expr_end) {
			jule::Ptr<_1b9b64192_EnumItem> _125721_item = *it;
			{
				if (_1b9b64549_AutoExpr(_125721_item.ptr())) {
					(*(_125721_item))._field_Value=jule::new_ptr<_1b9c5e15a_Value>(_1b9c5e15a_Value{._field_Data=jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Constant=static__1ec683a80_NewStr((*(_125721_item))._field_Ident)})});
					(*((*((*(_125721_item))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*(_125721_item))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
				} else {
					jule::Ptr<_1b9c5d016_Data> _126621_d = _1b9c7cbd4_evalExpr(_125613_eval, (*((*(_125721_item))._field_Value))._field_Expr);;
					if ((_126621_d == nullptr)) {
						goto _iter_next_1c9e44011;
					};
					if ((!(_1b9c5d8da_IsConst(_126621_d.ptr())))) {
						_1b9bd5004_pushErr(_self_.ptr(), (*((*((*(_125721_item))._field_Value))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
					};
					_1b9bdca12_checkAssignType(_self_, false, &((*((*((*(_125542_e))))._field_Kind))._field_Kind), &(_126621_d), (*(_125721_item))._field_Token);
					(*((*(_125721_item))._field_Value))._field_Data=_126621_d;
				};
			}
			_iter_next_1c9e44011:;
			++it;
			goto _iter_begin_1c9e44011;
		}
		_iter_end_1c9e44011:;
	};
}



inline void _1c9e4e0d7_checkEnumItemInt(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _128146_eval, jule::Ptr<_1b9b64c0e_Enum>* _128164_e, jule::Ptr<_1b9c95ca7_Prim>* _128175_prim, jule::Ptr<_1b9b64192_EnumItem>* _128193_item, jule::U64* _1281115_n) {
	if (_1b9b64549_AutoExpr((*(_128193_item)).ptr())) {
		(*((*(_128193_item))))._field_Value=jule::new_ptr<_1b9c5e15a_Value>(_1b9c5e15a_Value{._field_Data=jule::new_ptr<_1b9c5d016_Data>()});
		{
			
{
				_case_begin_1c9e51e31:;
				{
					(*((*((*((*(_128193_item))))._field_Value))._field_Data))._field_Constant=static__1ec6834ec_NewU64((*(_1281115_n)));
				}
			}
			_match_end_1c9e51d54:;
		};
		(*((*((*((*(_128193_item))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_128193_item))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1b9c5d016_Data> _129617_d = _1b9c7cbd4_evalExpr((*(_128146_eval)), (*((*((*(_128193_item))))._field_Value))._field_Expr);;
		if ((_129617_d == nullptr)) {
			return;;
		};
		if ((!(_1b9c5d8da_IsConst(_129617_d.ptr())))) {
			_1b9bd5004_pushErr(_self_.ptr(), (*((*((*((*(_128193_item))))._field_Value))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1b9bdca12_checkAssignType(_self_, false, &((*((*((*(_128164_e))))._field_Kind))._field_Kind), &(_129617_d), (*((*(_128193_item))))._field_Token);
		(*((*((*(_128193_item))))._field_Value))._field_Data=_129617_d;
		{
			
{
				_case_begin_1c9e56ac3:;
				{
					(*(_1281115_n))=static_cast<jule::U64>(_1ec68494e_ReadU64((*((*((*((*(_128193_item))))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_1c9e569d5:;
		};
	};
}

inline void _1c9e5e5ae_checkEnumItemInt(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9c5ec0a_Eval>* _128146_eval, jule::Ptr<_1b9b64c0e_Enum>* _128164_e, jule::Ptr<_1b9c95ca7_Prim>* _128175_prim, jule::Ptr<_1b9b64192_EnumItem>* _128193_item, jule::I64* _1281115_n) {
	if (_1b9b64549_AutoExpr((*(_128193_item)).ptr())) {
		(*((*(_128193_item))))._field_Value=jule::new_ptr<_1b9c5e15a_Value>(_1b9c5e15a_Value{._field_Data=jule::new_ptr<_1b9c5d016_Data>()});
		{
			
{
				_case_begin_1c9e6231a:;
				{
					(*((*((*((*(_128193_item))))._field_Value))._field_Data))._field_Constant=static__1ec683233_NewI64((*(_1281115_n)));
				}
			}
			_match_end_1c9e622b5:;
		};
		(*((*((*((*(_128193_item))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_128193_item))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1b9c5d016_Data> _129617_d = _1b9c7cbd4_evalExpr((*(_128146_eval)), (*((*((*(_128193_item))))._field_Value))._field_Expr);;
		if ((_129617_d == nullptr)) {
			return;;
		};
		if ((!(_1b9c5d8da_IsConst(_129617_d.ptr())))) {
			_1b9bd5004_pushErr(_self_.ptr(), (*((*((*((*(_128193_item))))._field_Value))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1b9bdca12_checkAssignType(_self_, false, &((*((*((*(_128164_e))))._field_Kind))._field_Kind), &(_129617_d), (*((*(_128193_item))))._field_Token);
		(*((*((*(_128193_item))))._field_Value))._field_Data=_129617_d;
		{
			
{
				_case_begin_1c9e67144:;
				{
					(*(_1281115_n))=static_cast<jule::I64>(_1ec6846b8_ReadI64((*((*((*((*(_128193_item))))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_1c9e670cd:;
		};
	};
}



inline void _1c9e4a8a8_checkEnumItemsInt1(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9c95ca7_Prim>* _131644_prim, jule::Ptr<_1b9b64c0e_Enum>* _131662_e) {
	jule::U64 _131713_max = static_cast<jule::U64>(0LLU);;
	{
		
{
			_case_begin_1c9e4c5d0:;
			{
				_131713_max=static_cast<jule::U64>(_1ec67b2c5_MaxU(_1b9c960e8_Str((*(_131644_prim)).ptr())));
			}
		}
		_match_end_1c9e4be92:;
	};
	jule::Ptr<_1b9c5ec0a_Eval> _132713_eval = _1b9bdc4a1_eval(_self_, jule::Trait<_1b9cacc14_Lookup>(_self_, 3));;
	jule::U64 _132813_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1b9b64192_EnumItem> _132913_first = (*((*(_131662_e))))._field_Items[0LL];;
	_1c9e4e0d7_checkEnumItemInt(_self_, &(_132713_eval), _131662_e, _131644_prim, &(_132913_first), &(_132813_n));
	if (((*((*(_132913_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1c9e4d35b:;
				{
					_132813_n=static_cast<jule::U64>(_1ec68571e_AsU64((*((*((*(_132913_first))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_1c9e4c536:;
		};
	};
	{
		auto expr = (*((*(_131662_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c9e53a48:;
		if (it != expr_end) {
			jule::Ptr<_1b9b64192_EnumItem> _134121_item = *it;
			{
				if (((_1b9b64549_AutoExpr(_134121_item.ptr()) && (_132813_n > 0LLU)) && ((_131713_max - _132813_n) <= 0LLU))) {
					_1b9bd5004_pushErr(_self_.ptr(), (*(_134121_item))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1c9e53a48;
				};
				(_132813_n)++;
				_1c9e4e0d7_checkEnumItemInt(_self_, &(_132713_eval), _131662_e, _131644_prim, &(_134121_item), &(_132813_n));
			}
			_iter_next_1c9e53a48:;
			++it;
			goto _iter_begin_1c9e53a48;
		}
		_iter_end_1c9e53a48:;
	};
}

inline void _1c9e587d9_checkEnumItemsInt1(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9c95ca7_Prim>* _131644_prim, jule::Ptr<_1b9b64c0e_Enum>* _131662_e) {
	jule::I64 _131713_max = static_cast<jule::I64>(0LL);;
	{
		
{
			_case_begin_1c9e5c898:;
			{
				_131713_max=static_cast<jule::I64>(_1ec67b00b_MaxI(_1b9c960e8_Str((*(_131644_prim)).ptr())));
			}
		}
		_match_end_1c9e5c2d2:;
	};
	jule::Ptr<_1b9c5ec0a_Eval> _132713_eval = _1b9bdc4a1_eval(_self_, jule::Trait<_1b9cacc14_Lookup>(_self_, 3));;
	jule::I64 _132813_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1b9b64192_EnumItem> _132913_first = (*((*(_131662_e))))._field_Items[0LL];;
	_1c9e5e5ae_checkEnumItemInt(_self_, &(_132713_eval), _131662_e, _131644_prim, &(_132913_first), &(_132813_n));
	if (((*((*(_132913_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1c9e5d7bc:;
				{
					_132813_n=static_cast<jule::I64>(_1ec685488_AsI64((*((*((*(_132913_first))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_1c9e5c700:;
		};
	};
	{
		auto expr = (*((*(_131662_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c9e68ce4:;
		if (it != expr_end) {
			jule::Ptr<_1b9b64192_EnumItem> _134121_item = *it;
			{
				if (((_1b9b64549_AutoExpr(_134121_item.ptr()) && (_132813_n > 0LL)) && ((_131713_max - _132813_n) <= 0LL))) {
					_1b9bd5004_pushErr(_self_.ptr(), (*(_134121_item))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1c9e68ce4;
				};
				(_132813_n)++;
				_1c9e5e5ae_checkEnumItemInt(_self_, &(_132713_eval), _131662_e, _131644_prim, &(_134121_item), &(_132813_n));
			}
			_iter_next_1c9e68ce4:;
			++it;
			goto _iter_begin_1c9e68ce4;
		}
		_iter_end_1c9e68ce4:;
	};
}



inline void _1b9be2ece_checkEnumItemsInt(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b64c0e_Enum>* _135142_e) {
	jule::Ptr<_1b9c95ca7_Prim> _13529_prim = _1b9c9082e_Prim((*((*((*(_135142_e))))._field_Kind))._field_Kind.ptr());;
	{
		
		if (_1ec681a17_IsSigInt((*(_13529_prim))._field_Kind)) {
			_case_begin_1c9e5a5aa:;
			{
				_1c9e587d9_checkEnumItemsInt1(_self_, &(_13529_prim), _135142_e);
			}
		}
		else {
			_case_begin_1c9e4a0e4:;
			{
				_1c9e4a8a8_checkEnumItemsInt1(_self_, &(_13529_prim), _135142_e);
			}
		}
		_match_end_1c9e4a07d:;
	};
}



inline void _1b9be3287_checkEnumDecl(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b64c0e_Enum>* _136138_e) {
	if (_1b9b05c5a_IsIgnoreIdent((*((*(_136138_e))))._field_Ident)) {
		_1b9bd5004_pushErr(_self_.ptr(), (*((*(_136138_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1b9bd5c19_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_136138_e)))), &((*((*(_136138_e))))._field_Ident), false)) {
		_1b9bd5004_pushErr(_self_.ptr(), (*((*(_136138_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_136138_e))))._field_Ident, &__jule_any_type4)}));
		_1b9bd5367_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_136138_e))))._field_Items.len() == 0LL)) {
		_1b9bd5004_pushErr(_self_.ptr(), (*((*(_136138_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_136138_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_1c9e6e4ae_checkEnumItemsDup(_self_.ptr(), (*((*(_136138_e))))._field_Items);
	if (((*((*(_136138_e))))._field_Kind != nullptr)) {
		if ((!(_1b9bdab75_checkType(_self_, &((*((*(_136138_e))))._field_Kind), jule::Trait<_1b9cacc14_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		(*((*(_136138_e))))._field_Kind=(*(_1b9d7cb08_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	jule::Ptr<_1b9c95ca7_Prim> _138513_t = _1b9c9082e_Prim((*((*((*(_136138_e))))._field_Kind))._field_Kind.ptr());;
	if ((_138513_t == nullptr)) {
		_1b9bd5004_pushErr(_self_.ptr(), (*((*(_136138_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1b9c9923e_IsStr(_138513_t.ptr())) {
			_case_begin_1c9e76065:;
			{
				_1b9be2330_checkEnumItemsStr(_self_, _136138_e);
			}
		}
		else if (_1ec6820de_IsInt(_1b9c960e8_Str(_138513_t.ptr()))) {
			_case_begin_1c9e75c68:;
			{
				_1b9be2ece_checkEnumItemsInt(_self_, _136138_e);
			}
		}
		else {
			_case_begin_1c9e75c02:;
			{
				_1b9bd5004_pushErr(_self_.ptr(), (*((*(_136138_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c9e7533e:;
	};
}



inline void _1b9be3540_checkTypeEnumDecl(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b66419_TypeEnum>* _140242_e) {
	if (_1b9b05c5a_IsIgnoreIdent((*((*(_140242_e))))._field_Ident)) {
		_1b9bd5004_pushErr(_self_.ptr(), (*((*(_140242_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1b9bd5c19_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_140242_e)))), &((*((*(_140242_e))))._field_Ident), false)) {
		_1b9bd5004_pushErr(_self_.ptr(), (*((*(_140242_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_140242_e))))._field_Ident, &__jule_any_type4)}));
		_1b9bd5367_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_140242_e))))._field_Items.len() == 0LL)) {
		_1b9bd5004_pushErr(_self_.ptr(), (*((*(_140242_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_140242_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_1c9e7b301_checkEnumItemsDup(_self_.ptr(), (*((*(_140242_e))))._field_Items);
	{
		auto expr = &((*((*(_140242_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9e77b9e:;
		if (it != expr_end) {
			jule::Ptr<_1b9b65d42_TypeEnumItem> _141621_item = *it;
			{
				if (((*(_141621_item))._field_Kind == nullptr)) {
					_1b9bd5004_pushErr(_self_.ptr(), (*(_141621_item))._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					goto _iter_next_1c9e77b9e;
				};
				jule::Bool _142113_ok = _1b9bdab75_checkType(_self_, &((*(_141621_item))._field_Kind), jule::Trait<_1b9cacc14_Lookup>(_self_, 3));;
				if ((!(_142113_ok))) {
					goto _iter_next_1c9e77b9e;
				};
				jule::Ptr<_1b9c95ca7_Prim> _142513_p = _1b9c9082e_Prim((*((*(_141621_item))._field_Kind))._field_Kind.ptr());;
				if (((_142513_p != nullptr) && _1b9c994c5_IsAny(_142513_p.ptr()))) {
					_1b9bd5004_pushErr(_self_.ptr(), (*(_141621_item))._field_Token, jule::Str::lit("the <any> type is not allowed for type-enum declarations", 56), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1c9e77b9e:;
			++it;
			goto _iter_begin_1c9e77b9e;
		}
		_iter_end_1c9e77b9e:;
	};
	if (((*((*(_140242_e))))._field_Items.len() == 1LL)) {
		jule::Ptr<_1b9b65d42_TypeEnumItem> _143117_item = (*((*(_140242_e))))._field_Items[0LL];;
		_1b9c8d1cd_TypeKind _143213_tk = _1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>((*(_140242_e)), 4)};;
		if ((((*((*(_143117_item))._field_Kind))._field_Kind != nullptr) && _1b9c8d8d7_Equal((*((*(_143117_item))._field_Kind))._field_Kind, ((jule::Ptr<_1b9c8d1cd_TypeKind>)((&(_143213_tk))))))) {
			_1b9bd5004_pushErr(_self_.ptr(), (*(_143117_item))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_1b9b6675a_Str((*(_140242_e)).ptr()), &__jule_any_type4)}));
		};
	};
}



inline jule::Bool _1b9be37c6_checkEnumDecls(jule::Ptr<_1b9bd23b9_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9e866b3:;
		if (it != expr_end) {
			jule::Ptr<_1b9b64c0e_Enum> _144321_e = *it;
			{
				_1b9be3287_checkEnumDecl(_self_, &(_144321_e));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c9e866b3:;
			++it;
			goto _iter_begin_1c9e866b3;
		}
		_iter_end_1c9e866b3:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b9be3a5c_checkTypeEnumDecls(jule::Ptr<_1b9bd23b9_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9e871a8:;
		if (it != expr_end) {
			jule::Ptr<_1b9b66419_TypeEnum> _145521_e = *it;
			{
				_1b9be3540_checkTypeEnumDecl(_self_, &(_145521_e));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c9e871a8:;
			++it;
			goto _iter_begin_1c9e871a8;
		}
		_iter_end_1c9e871a8:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b9be3d9d_checkDeclGenerics(_1b9bd23b9_Sema* _self_, jule::Slice<jule::Ptr<_1b9b259c2_GenericDecl>>* _146537_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _146537_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9e897d7:;
		if (it != expr_end) {
			jule::I32 _146713_i = it - expr->begin();
			jule::Ptr<_1b9b259c2_GenericDecl> *_146716_g = it;
			{
				if (_1b9b05c5a_IsIgnoreIdent((*((*(_146716_g))))._field_Ident)) {
					_1b9bd5004_pushErr(_self_, (*((*(_146716_g))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1c9e897d7;
				};
				_julec_label_1c9e8ae7b:;
				{
					auto expr = _146537_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c9e8b179:;
					if (it != expr_end) {
						jule::I32 _147617_j = it - expr->begin();
						jule::Ptr<_1b9b259c2_GenericDecl> *_147620_ct = it;
						{
							{
								
								if ((_147617_j >= _146713_i)) {
									_case_begin_1c9e8bcb2:;
									{
										goto _iter_end_1c9e8b179;
									}
								}
								else if (((*((*(_146716_g))))._field_Ident == (*((*(_147620_ct))))._field_Ident)) {
									_case_begin_1c9e8bd39:;
									{
										_1b9bd5004_pushErr(_self_, (*((*(_146716_g))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_146716_g))))._field_Ident, &__jule_any_type4)}));
										_1b9bd5367_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1c9e8b179;
									}
								}
								_match_end_1c9e8bbb3:;
							};
						}
						_iter_next_1c9e8b179:;
						++it;
						_147617_j++;
						goto _iter_begin_1c9e8b179;
					}
					_iter_end_1c9e8b179:;
				};
			}
			_iter_next_1c9e897d7:;
			++it;
			_146713_i++;
			goto _iter_begin_1c9e897d7;
		}
		_iter_end_1c9e897d7:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b9be41de_checkFnDeclParamsDup(_1b9bd23b9_Sema* _self_, jule::Ptr<_1b9b4e26a_Fn>* _149240_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_1c9e8ca0a:;
	{
		auto expr = &((*((*(_149240_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9e8e138:;
		if (it != expr_end) {
			jule::I32 _149513_i = it - expr->begin();
			jule::Ptr<_1b9b4c796_Param> *_149516_p = it;
			{
				{
					auto expr = &((*((*(_149240_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c9e8e0d3:;
					if (it != expr_end) {
						jule::Ptr<_1b9b259c2_GenericDecl> *_149720_g = it;
						{
							if (((*((*(_149516_p))))._field_Ident == (*((*(_149720_g))))._field_Ident)) {
								__jule_func_result=false;
								_1b9bd5004_pushErr(_self_, (*((*(_149516_p))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_149516_p))))._field_Ident, &__jule_any_type4)}));
								_1b9bd5367_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								goto _iter_next_1c9e8e138;
							};
						}
						_iter_next_1c9e8e0d3:;
						++it;
						goto _iter_begin_1c9e8e0d3;
					}
					_iter_end_1c9e8e0d3:;
				};
				_julec_label_1c9e8ec60:;
				{
					auto expr = &((*((*(_149240_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c9e908dc:;
					if (it != expr_end) {
						jule::I32 _150717_j = it - expr->begin();
						jule::Ptr<_1b9b4c796_Param> *_150720_jp = it;
						{
							{
								
								if ((_150717_j >= _149513_i)) {
									_case_begin_1c9e92735:;
									{
										goto _iter_end_1c9e908dc;
									}
								}
								else if (_1b9b05c5a_IsIgnoreIdent((*((*(_149516_p))))._field_Ident) || _1b9b05c5a_IsIgnoreIdent((*((*(_150720_jp))))._field_Ident) || _1b9b06024_IsAnonIdent((*((*(_149516_p))))._field_Ident) || _1b9b06024_IsAnonIdent((*((*(_150720_jp))))._field_Ident)) {
									_case_begin_1c9e927ac:;
									{
										goto _iter_end_1c9e908dc;
									}
								}
								else if (((*((*(_149516_p))))._field_Ident == (*((*(_150720_jp))))._field_Ident)) {
									_case_begin_1c9e92834:;
									{
										__jule_func_result=false;
										_1b9bd5004_pushErr(_self_, (*((*(_149516_p))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_149516_p))))._field_Ident, &__jule_any_type4)}));
										_1b9bd5367_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_next_1c9e8e138;
									}
								}
								_match_end_1c9e92625:;
							};
						}
						_iter_next_1c9e908dc:;
						++it;
						_150717_j++;
						goto _iter_begin_1c9e908dc;
					}
					_iter_end_1c9e908dc:;
				};
			}
			_iter_next_1c9e8e138:;
			++it;
			_149513_i++;
			goto _iter_begin_1c9e8e138;
		}
		_iter_end_1c9e8e138:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b9be4530_checkFnDeclResultDup(_1b9bd23b9_Sema* _self_, jule::Ptr<_1b9b4e26a_Fn>* _152940_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1b9b4e6dd_IsVoid((*(_152940_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*((*((*(_152940_f))))._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9e95bab:;
		if (it != expr_end) {
			jule::I32 _153613_i = it - expr->begin();
			jule::Ptr<_1b9b032eb_Token> *_153616_v = it;
			{
				if ((_1b9b05c5a_IsIgnoreIdent((*((*(_153616_v))))._field_Kind) || _1b9b06024_IsAnonIdent((*((*(_153616_v))))._field_Kind))) {
					goto _iter_next_1c9e95bab;
				};
				{
					auto expr = &((*((*(_152940_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c9e96d44:;
					if (it != expr_end) {
						jule::Ptr<_1b9b259c2_GenericDecl> *_154120_g = it;
						{
							if (((*((*(_153616_v))))._field_Kind == (*((*(_154120_g))))._field_Ident)) {
								goto _julec_label_1c9e98494;
							};
						}
						_iter_next_1c9e96d44:;
						++it;
						goto _iter_begin_1c9e96d44;
					}
					_iter_end_1c9e96d44:;
				};
				{
					auto expr = &((*((*(_152940_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c9e98807:;
					if (it != expr_end) {
						jule::Ptr<_1b9b4c796_Param> *_154720_p = it;
						{
							if (((*((*(_153616_v))))._field_Kind == (*((*(_154720_p))))._field_Ident)) {
								goto _julec_label_1c9e98494;
							};
						}
						_iter_next_1c9e98807:;
						++it;
						goto _iter_begin_1c9e98807;
					}
					_iter_end_1c9e98807:;
				};
				_julec_label_1c9e99a5b:;
				{
					auto expr = &((*((*((*(_152940_f))))._field_Result))._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c9e9997e:;
					if (it != expr_end) {
						jule::I32 _155517_j = it - expr->begin();
						jule::Ptr<_1b9b032eb_Token> *_155520_jv = it;
						{
							{
								
								if ((_155517_j >= _153613_i)) {
									_case_begin_1c9e9b08a:;
									{
										goto _iter_end_1c9e9997e;
									}
								}
								else if (((*((*(_155520_jv))))._field_Kind == (*((*(_153616_v))))._field_Kind)) {
									_case_begin_1c9e9b112:;
									{
										goto _julec_label_1c9e98494;
									}
								}
								_match_end_1c9e9ae7a:;
							};
						}
						_iter_next_1c9e9997e:;
						++it;
						_155517_j++;
						goto _iter_begin_1c9e9997e;
					}
					_iter_end_1c9e9997e:;
				};
				goto _iter_next_1c9e95bab;
				_julec_label_1c9e98494:;
				_1b9bd5004_pushErr(_self_, (*(_153616_v)), jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_153616_v))))._field_Kind, &__jule_any_type4)}));
				_1b9bd5367_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1c9e95bab:;
			++it;
			_153613_i++;
			goto _iter_begin_1c9e95bab;
		}
		_iter_end_1c9e95bab:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b9be4871_checkFnVariadicParam(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b4e26a_Fn>* _157445_f) {
	if (((*((*(_157445_f))))._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_1b9b4c796_Param> _157813_param = (*((*(_157445_f))))._field_Params[((*((*(_157445_f))))._field_Params.len() - 1LL)];;
	if (((*(_157813_param))._field_Variadic && (*(_157813_param))._field_Reference)) {
		_1b9bd5004_pushErr(_self_.ptr(), (*(_157813_param))._field_Token, jule::Str::lit("variadic storage cannot be reference", 36), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _1b9be4b29_checkFnDeclPrototype(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b4e26a_Fn>* _158745_f) {
	if (((*((*(_158745_f))))._field_Exceptional && (*((*(_158745_f))))._field_Binded)) {
		_1b9bd5004_pushErr(_self_.ptr(), (*((*(_158745_f))))._field_Token, jule::Str::lit("binded defines cannot be exceptional", 36), jule::Slice<jule::Any>());
		return;;
	};
	if ((*((*(_158745_f))))._field_Exceptional) {
		if (_1b9b4ec0a_IsEntryPoint((*(_158745_f)).ptr())) {
			_1b9bd5004_pushErr(_self_.ptr(), (*((*(_158745_f))))._field_Token, jule::Str::lit("entry point cannot be exceptional", 33), jule::Slice<jule::Any>());
		} else if (_1b9b4ee91_IsInit((*(_158745_f)).ptr())) {
			_1b9bd5004_pushErr(_self_.ptr(), (*((*(_158745_f))))._field_Token, jule::Str::lit("initializer function cannot be exceptional", 42), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1b9be3d9d_checkDeclGenerics(_self_.ptr(), &((*((*(_158745_f))))._field_Generics))))) {
			_case_begin_1c9ea33d3:;
		}
		else if ((!(_1b9be41de_checkFnDeclParamsDup(_self_.ptr(), _158745_f)))) {
			_case_begin_1c9ea345a:;
		}
		else if ((!(_1b9be4530_checkFnDeclResultDup(_self_.ptr(), _158745_f)))) {
			_case_begin_1c9ea34d2:;
		}
		else if ((!(_1b9be4871_checkFnVariadicParam(_self_, _158745_f)))) {
			_case_begin_1c9ea3559:;
		}
		_match_end_1c9ea1a52:;
	};
}



inline jule::Bool _1b9be50d0_catchTraitInheritCycle(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b62514_Trait> _160942_t1, jule::Ptr<_1b9b62514_Trait> _160958_t2, _23d16295d_StrBuilder* _160975_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_160958_t2))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9ea5803:;
		if (it != expr_end) {
			jule::Ptr<_1b9c953a0_TypeSymbol> _161121_i = *it;
			{
				if (((*(_161121_i))._field_Kind == nullptr)) {
					goto _iter_next_1c9ea5803;
				};
				jule::Ptr<_1b9b62514_Trait> _161517_t3 = _1b9c92138_Trait((*(_161121_i))._field_Kind.ptr());;
				if ((_160942_t1 == _161517_t3)) {
					_1b9be9d60_pushCycleError(_self_.ptr(), &((*(_160958_t2))._field_Ident), &((*(_161517_t3))._field_Ident), _160975_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1b9be50d0_catchTraitInheritCycle(_self_, _160942_t1, _161517_t3, _160975_message)))) {
					_1b9be9d60_pushCycleError(_self_.ptr(), &((*(_160958_t2))._field_Ident), &((*(_161517_t3))._field_Ident), _160975_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c9ea5803:;
			++it;
			goto _iter_begin_1c9ea5803;
		}
		_iter_end_1c9ea5803:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b9be5421__checkTraitDeclInherits(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b62514_Trait>* _162848_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_162848_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9ea8e55:;
		if (it != expr_end) {
			jule::I32 _163014_i = it - expr->begin();
			jule::Ptr<_1b9c953a0_TypeSymbol> _163021_it = *it;
			{
				if ((!(_1b9bdab75_checkType(_self_, &(_163021_it), jule::Trait<_1b9cacc14_Lookup>(_self_, 3))))) {
					__jule_func_result=false;
					goto _iter_next_1c9ea8e55;
				};
				jule::Ptr<_1b9b62514_Trait> _163517_t2 = _1b9c92138_Trait((*(_163021_it))._field_Kind.ptr());;
				if ((_163517_t2 == nullptr)) {
					_1b9bd5004_pushErr(_self_.ptr(), (*((*(_163021_it))._field_Decl))._field_Token, jule::Str::lit("trait @ cannot implement @, type should be trait", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_162848_t))))._field_Ident, &__jule_any_type4),jule::Any(_1b9c8d596_Str((*(_163021_it))._field_Kind.ptr()), &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1c9ea8e55;
				};
				{
					auto expr = &((*((*(_162848_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c9eaad47:;
					if (it != expr_end) {
						jule::I32 _164117_j = it - expr->begin();
						jule::Ptr<_1b9c953a0_TypeSymbol> _164120_it2 = *it;
						{
							if ((_164117_j >= _163014_i)) {
								goto _iter_end_1c9eaad47;
							};
							if ((((*(_164120_it2))._field_Kind != nullptr) && _1b9c8d8d7_Equal((*(_163021_it))._field_Kind, (*(_164120_it2))._field_Kind))) {
								_1b9bd5004_pushErr(_self_.ptr(), (*((*(_163021_it))._field_Decl))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_163517_t2))._field_Ident, &__jule_any_type4)}));
								__jule_func_result=false;
								goto _iter_end_1c9eaad47;
							};
						}
						_iter_next_1c9eaad47:;
						++it;
						_164117_j++;
						goto _iter_begin_1c9eaad47;
					}
					_iter_end_1c9eaad47:;
				};
				if (((*(_162848_t)) == _163517_t2)) {
					_1b9bd5004_pushErr(_self_.ptr(), (*((*(_163021_it))._field_Decl))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_162848_t))))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				} else {
					_23d16295d_StrBuilder _165521_message = static__23d162c7c_New(64LL);;
					__jule_func_result=(__jule_func_result && _1b9be50d0_catchTraitInheritCycle(_self_, (*(_162848_t)), _163517_t2, &(_165521_message)));
					if ((_23d16c380_Len(&_165521_message) > 0LL)) {
						jule::Str _165825_errMsg = _23d16bdeb_Str(&_165521_message);;
						_23d16c0e9_Clear(&_165521_message);
						_1b9be9d60_pushCycleError(_self_.ptr(), &((*((*(_162848_t))))._field_Ident), &((*(_163517_t2))._field_Ident), &(_165521_message));
						_165825_errMsg+=_23d16bdeb_Str(&_165521_message);
						_1b9bd5004_pushErr(_self_.ptr(), (*((*(_163021_it))._field_Decl))._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_165825_errMsg, &__jule_any_type4)}));
					};
				};
			}
			_iter_next_1c9ea8e55:;
			++it;
			_163014_i++;
			goto _iter_begin_1c9ea8e55;
		}
		_iter_end_1c9ea8e55:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1b9be56c9_checkTraitDeclInherits(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b62514_Trait>* _166947_t) {
	{
		auto expr = &((*((*(_166947_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9eb0b93:;
		if (it != expr_end) {
			jule::I32 _167014_i = it - expr->begin();
			jule::Ptr<_1b9c953a0_TypeSymbol> _167021_it = *it;
			{
				jule::Ptr<_1b9b62514_Trait> _167117_t1 = _1b9c92138_Trait((*(_167021_it))._field_Kind.ptr());;
				{
					auto expr = &((*((*(_166947_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c9eb4999:;
					if (it != expr_end) {
						jule::I32 _167218_j = it - expr->begin();
						jule::Ptr<_1b9c953a0_TypeSymbol> _167225_it2 = *it;
						{
							if ((_167218_j == _167014_i)) {
								goto _iter_next_1c9eb4999;
							};
							jule::Ptr<_1b9b62514_Trait> _167621_t2 = _1b9c92138_Trait((*(_167225_it2))._field_Kind.ptr());;
							{
								auto expr = &((*(_167117_t1))._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c9eb603e:;
								if (it != expr_end) {
									jule::Ptr<_1b9b4e26a_Fn> _167729_t1m = *it;
									{
										jule::Ptr<_1b9b4e26a_Fn> _167825_t2m = _1b9b631b3_FindMethod(_167621_t2.ptr(), (*(_167729_t1m))._field_Ident);;
										if ((_167825_t2m == nullptr)) {
											goto _iter_next_1c9eb603e;
										};
										jule::Ptr<_1b9b5216e_FnIns> _168221_t1f = _1b9bddbab_getTraitCheckFnKind(_self_, &(_167729_t1m));;
										jule::Ptr<_1b9b5216e_FnIns> _168321_t2f = _1b9bddbab_getTraitCheckFnKind(_self_, &(_167825_t2m));;
										if ((!(_1b9b530d7_equalTrait(_168221_t1f, &(_168321_t2f))))) {
											_1b9bd5004_pushErr(_self_.ptr(), (*((*(_167021_it))._field_Decl))._field_Token, jule::Str::lit("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87), jule::Slice<jule::Any>::make({jule::Any((*((*(_166947_t))))._field_Ident, &__jule_any_type4),jule::Any((*(_167621_t2))._field_Ident, &__jule_any_type4),jule::Any(_1b9b5401c_GetKindStr(_168221_t1f.ptr(), true), &__jule_any_type4),jule::Any(_1b9b5401c_GetKindStr(_168321_t2f.ptr(), true), &__jule_any_type4)}));
											return;;
										};
									}
									_iter_next_1c9eb603e:;
									++it;
									goto _iter_begin_1c9eb603e;
								}
								_iter_end_1c9eb603e:;
							};
						}
						_iter_next_1c9eb4999:;
						++it;
						_167218_j++;
						goto _iter_begin_1c9eb4999;
					}
					_iter_end_1c9eb4999:;
				};
			}
			_iter_next_1c9eb0b93:;
			++it;
			_167014_i++;
			goto _iter_begin_1c9eb0b93;
		}
		_iter_end_1c9eb0b93:;
	};
}



inline void _1b9be5982_checkTraitDeclMethod(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b4e26a_Fn>* _169445_f) {
	if (_1b9b05c5a_IsIgnoreIdent((*((*(_169445_f))))._field_Ident)) {
		_1b9bd5004_pushErr(_self_.ptr(), (*((*(_169445_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1b9b06024_IsAnonIdent((*((*(_169445_f))))._field_Ident)) {
		_1b9bd5004_pushErr(_self_.ptr(), (*((*(_169445_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	(*((*(_169445_f))))._field_sema=_self_;
	_1b9be4b29_checkFnDeclPrototype(_self_, _169445_f);
	jule::Ptr<_1b9b5216e_FnIns> _170213_ins = _1b9b509ca_instance((*(_169445_f)));;
	_1b9be010d_reloadFnInsTypes(_self_, _170213_ins);
	(*(_170213_ins))._field_reloaded=true;
	_1b9b50cd8_appendInstance((*(_169445_f)).ptr(), &(_170213_ins));
}



inline void _1b9be5c3a_checkTraitDeclMethods(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b62514_Trait>* _170846_t) {
	{
		auto expr = &((*((*(_170846_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9ebc980:;
		if (it != expr_end) {
			jule::I32 _170914_i = it - expr->begin();
			jule::Ptr<_1b9b4e26a_Fn> _170921_f = *it;
			{
				_1b9be5982_checkTraitDeclMethod(_self_, &(_170921_f));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1b9b63845_findMethodInherit((*(_170846_t)).ptr(), &((*(_170921_f))._field_Ident)) != nullptr)) {
					_1b9bd5004_pushErr(_self_.ptr(), (*(_170921_f))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_170921_f))._field_Ident, &__jule_any_type4)}));
					_1b9bd5367_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					goto _iter_next_1c9ebc980;
				};
				_julec_label_1c9ec0301:;
				{
					auto expr = &((*((*(_170846_t))))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c9ebded1:;
					if (it != expr_end) {
						jule::I32 _172517_j = it - expr->begin();
						jule::Ptr<_1b9b4e26a_Fn> _172520_jf = *it;
						{
							{
								
								if ((_172517_j >= _170914_i)) {
									_case_begin_1c9ec16ba:;
									{
										goto _iter_end_1c9ebded1;
									}
								}
								else if (((*(_170921_f))._field_Ident == (*(_172520_jf))._field_Ident)) {
									_case_begin_1c9ec1742:;
									{
										_1b9bd5004_pushErr(_self_.ptr(), (*(_170921_f))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_170921_f))._field_Ident, &__jule_any_type4)}));
										_1b9bd5367_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_end_1c9ebded1;
									}
								}
								_match_end_1c9ec15aa:;
							};
						}
						_iter_next_1c9ebded1:;
						++it;
						_172517_j++;
						goto _iter_begin_1c9ebded1;
					}
					_iter_end_1c9ebded1:;
				};
			}
			_iter_next_1c9ebc980:;
			++it;
			_170914_i++;
			goto _iter_begin_1c9ebc980;
		}
		_iter_end_1c9ebc980:;
	};
}



inline void _1b9be5ee3_checkTraitDecl(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b62514_Trait>* _174439_t) {
	if (_1b9b05c5a_IsIgnoreIdent((*((*(_174439_t))))._field_Ident)) {
		_1b9bd5004_pushErr(_self_.ptr(), (*((*(_174439_t))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1b9bd5c19_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_174439_t)))), &((*((*(_174439_t))))._field_Ident), false)) {
		_1b9bd5004_pushErr(_self_.ptr(), (*((*(_174439_t))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_174439_t))))._field_Ident, &__jule_any_type4)}));
		_1b9bd5367_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1b9be56c9_checkTraitDeclInherits(_self_, _174439_t);
	_1b9be5c3a_checkTraitDeclMethods(_self_, _174439_t);
}



inline jule::Bool _1b9be6279_checkTraitDecls(jule::Ptr<_1b9bd23b9_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9ec6527:;
		if (it != expr_end) {
			jule::Ptr<_1b9b62514_Trait> _175821_t = *it;
			{
				_1b9be5ee3_checkTraitDecl(_self_, &(_175821_t));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c9ec6527:;
			++it;
			goto _iter_begin_1c9ec6527;
		}
		_iter_end_1c9ec6527:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b9be6675_checkTraitImplMethods(_1b9bd23b9_Sema* _self_, jule::Ptr<_1b9b62514_Trait>* _176845_base, jule::Ptr<_1b9b8988d_Impl>* _176860_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_176860_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9eccebd:;
		if (it != expr_end) {
			jule::Ptr<_1b9b4e26a_Fn> *_177016_f = it;
			{
				if ((_1b9b631b3_FindMethod((*(_176845_base)).ptr(), (*((*(_177016_f))))._field_Ident) == nullptr)) {
					_1b9bd5004_pushErr(_self_, (*((*(_177016_f))))._field_Token, jule::Str::lit("undefined identifier: trait @ has no define @", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_176845_base))))._field_Ident, &__jule_any_type4),jule::Any((*((*(_177016_f))))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1c9eccebd:;
			++it;
			goto _iter_begin_1c9eccebd;
		}
		_iter_end_1c9eccebd:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b9be6a71_implToStruct(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b393a9_Struct>* _177937_dest, jule::Ptr<_1b9b8988d_Impl>* _177957_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_177957_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9ed061e:;
		if (it != expr_end) {
			jule::Ptr<_1b9b4e26a_Fn> _178321_f = *it;
			{
				if (((_1b9b3a025_FindMethod((*(_177937_dest)).ptr(), (*(_178321_f))._field_Ident, (*(_178321_f))._field_Statically) != nullptr) || (_1b9b3a6a7_FindField((*(_177937_dest)).ptr(), (*(_178321_f))._field_Ident) != nullptr))) {
					_1b9bd5004_pushErr(_self_.ptr(), (*(_178321_f))._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_177937_dest))))._field_Ident, &__jule_any_type4),jule::Any((*(_178321_f))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1c9ed061e;
				};
				if ((((*((*(_177937_dest))))._field_Generics.len() > 0LL) && ((*(_178321_f))._field_Generics.len() > 0LL))) {
					{
						auto expr = &((*(_178321_f))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c9ed3512:;
						if (it != expr_end) {
							jule::Ptr<_1b9b259c2_GenericDecl> _179124_fg = *it;
							{
								{
									auto expr = &((*((*(_177937_dest))))._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1c9ed3dd6:;
									if (it != expr_end) {
										jule::Ptr<_1b9b259c2_GenericDecl> _179228_dg = *it;
										{
											if (((*(_179124_fg))._field_Ident == (*(_179228_dg))._field_Ident)) {
												_1b9bd5004_pushErr(_self_.ptr(), (*(_179124_fg))._field_Token, jule::Str::lit("methods cannot have same generic identifier with owner same time", 64), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1c9ed3dd6:;
										++it;
										goto _iter_begin_1c9ed3dd6;
									}
									_iter_end_1c9ed3dd6:;
								};
							}
							_iter_next_1c9ed3512:;
							++it;
							goto _iter_begin_1c9ed3512;
						}
						_iter_end_1c9ed3512:;
					};
				};
				_1b9bd607c_checkDirectives(_self_, &((*(_178321_f))._field_Directives), jule::Any(_178321_f, &__jule_any_type64));
				(*(_178321_f))._field_sema=_self_;
				(*(_178321_f))._field_Owner=(*(_177937_dest));
				{ jule::Slice<jule::Ptr<_1b9b4e26a_Fn>> &__jule_push_dest = (*((*(_177937_dest))))._field_Methods; __jule_push_dest.push(_178321_f); };
			}
			_iter_next_1c9ed061e:;
			++it;
			goto _iter_begin_1c9ed061e;
		}
		_iter_end_1c9ed061e:;
	};
	{
		auto expr = &((*((*(_177957_ipl))))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9ed04ed:;
		if (it != expr_end) {
			jule::Ptr<_1b9c09611_Var> _180821_v = *it;
			{
				;
				if (((_1b9b3a025_FindMethod((*(_177937_dest)).ptr(), (*(_180821_v))._field_Ident, true) != nullptr) || (_1b9b3a366_FindStatic((*(_177937_dest)).ptr(), (*(_180821_v))._field_Ident) != nullptr))) {
					_1b9bd5004_pushErr(_self_.ptr(), (*(_180821_v))._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_177937_dest))))._field_Ident, &__jule_any_type4),jule::Any((*(_180821_v))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1c9ed04ed;
				};
				{ jule::Slice<jule::Ptr<_1b9c09611_Var>> &__jule_push_dest = (*((*(_177937_dest))))._field_Statics; __jule_push_dest.push(_180821_v); };
			}
			_iter_next_1c9ed04ed:;
			++it;
			goto _iter_begin_1c9ed04ed;
		}
		_iter_end_1c9ed04ed:;
	};
	return __jule_func_result;;
}



inline void _1b9be6d29_implTrait(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b8988d_Impl>* _182134_decl) {
	jule::Ptr<_1b9c8d1cd_TypeKind> _182213_base_t = _1b9bdb7ad_selectType(_self_, &((*((*(_182134_decl))))._field_Base));;
	if ((_182213_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1b9b62514_Trait> _182613_base = _1b9c92138_Trait(_182213_base_t.ptr());;
	if ((_182613_base == nullptr)) {
		_1b9bd5004_pushErr(_self_.ptr(), (*((*((*(_182134_decl))))._field_Base))._field_Token, jule::Str::lit("invalid base type for impl: @", 29), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str(_182213_base_t.ptr()), &__jule_any_type4)}));
		_1b9bd5367_pushSuggestion(_self_.ptr(), jule::Str::lit("expected trait, use a trait", 27), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b9c8d1cd_TypeKind> _183313_destT = _1b9bdb7ad_selectType(_self_, &((*((*(_182134_decl))))._field_Dest));;
	if ((_183313_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1b9b3c137_StructIns> _183713_destS = _1b9c91da2_Struct(_183313_destT.ptr());;
	if ((_183713_destS == nullptr)) {
		_1b9bd5004_pushErr(_self_.ptr(), (*((*((*(_182134_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str(_183313_destT.ptr()), &__jule_any_type4)}));
		_1b9bd5367_pushSuggestion(_self_.ptr(), jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b9b393a9_Struct> _184413_dest = (*(_183713_destS))._field_Decl;;
	if ((_1b9b09236_Dir((*((*(_184413_dest))._field_Token))._field_File.ptr()) != _1b9b09236_Dir((*((*(_self_))._field_file))._field_File.ptr()))) {
		_1b9bd5004_pushErr(_self_.ptr(), (*((*((*(_182134_decl))))._field_Dest))._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	_1b9c078ea_pushImplemented(_182613_base, &(_184413_dest));
	_1b9c07bd6_pushImplements(&(_184413_dest), _182613_base);
	if (((*((*(_182134_decl))))._field_Statics.len() > 0LL)) {
		_1b9bd5004_pushErr(_self_.ptr(), (*((*((*(_182134_decl))))._field_Statics[0LL]))._field_Token, jule::Str::lit("trait implementations cannot implement static field", 51), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1b9be6675_checkTraitImplMethods(_self_.ptr(), &(_182613_base), _182134_decl)))) {
			_case_begin_1c9ee2873:;
		}
		else if ((!(_1b9be6a71_implToStruct(_self_, &(_184413_dest), _182134_decl)))) {
			_case_begin_1c9ee28ea:;
		}
		_match_end_1c9ededae:;
	};
}



inline void _1b9be70d2_implStruct(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b8988d_Impl>* _186435_decl) {
	jule::Ptr<_1b9c8d1cd_TypeKind> _186513_destT = _1b9bdb7ad_selectType(_self_, &((*((*(_186435_decl))))._field_Dest));;
	if ((_186513_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1b9b3c137_StructIns> _186913_destS = _1b9c91da2_Struct(_186513_destT.ptr());;
	if ((_186913_destS == nullptr)) {
		_1b9bd5004_pushErr(_self_.ptr(), (*((*((*(_186435_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str(_186513_destT.ptr()), &__jule_any_type4)}));
		_1b9bd5367_pushSuggestion(_self_.ptr(), jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b9b393a9_Struct> _187613_dest = (*(_186913_destS))._field_Decl;;
	if ((_1b9b09236_Dir((*((*(_187613_dest))._field_Token))._field_File.ptr()) != _1b9b09236_Dir((*((*(_self_))._field_file))._field_File.ptr()))) {
		_1b9bd5004_pushErr(_self_.ptr(), (*((*((*(_186435_decl))))._field_Dest))._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1b9be6a71_implToStruct(_self_, &(_187613_dest), _186435_decl)))) {
			_case_begin_1c9ee7e2d:;
		}
		_match_end_1c9ee6613:;
	};
}



inline void _1b9be738a_implImpl(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b8988d_Impl>* _188833_decl) {
	{
		
		if (_1b9b89c56_IsTraitImpl((*(_188833_decl)).ptr())) {
			_case_begin_1c9ee8a11:;
			{
				_1b9be6d29_implTrait(_self_, _188833_decl);
			}
		}
		else if (_1b9b89edc_IsStructImpl((*(_188833_decl)).ptr())) {
			_case_begin_1c9ee8a88:;
			{
				_1b9be70d2_implStruct(_self_, _188833_decl);
			}
		}
		_match_end_1c9ee8901:;
	};
}



inline void _1b9be76ed_checkVarDecl(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9c09611_Var>* _189937_decl, jule::Trait<_1b9cacc14_Lookup> _189953_l) {
	if (_1b9b05c5a_IsIgnoreIdent((*((*(_189937_decl))))._field_Ident)) {
		_1b9bd5004_pushErr(_self_.ptr(), (*((*(_189937_decl))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1b9c09c2c_IsTypeInferred((*(_189937_decl)).ptr())) {
		if ((!(_1b9c09996_IsInitialized((*(_189937_decl)).ptr())))) {
			_1b9bd5004_pushErr(_self_.ptr(), (*((*(_189937_decl))))._field_Token, jule::Str::lit("type inferred declarations should have a initializer expression", 63), jule::Slice<jule::Any>());
		};
	} else {
		_1b9bdab75_checkType(_self_, &((*((*(_189937_decl))))._field_Kind), _189953_l);
	};
	if ((*((*(_189937_decl))))._field_Reference) {
		if ((*((*(_189937_decl))))._field_Constant) {
			_1b9bd5004_pushErr(_self_.ptr(), (*((*(_189937_decl))))._field_Token, jule::Str::lit("references cannot be constant", 29), jule::Slice<jule::Any>());
		};
		if ((*((*(_189937_decl))))._field_Statically) {
			_1b9bd5004_pushErr(_self_.ptr(), (*((*(_189937_decl))))._field_Token, jule::Str::lit("static variables cannot be reference", 36), jule::Slice<jule::Any>());
		};
	};
	if ((!(_1b9c09996_IsInitialized((*(_189937_decl)).ptr())))) {
		if ((*((*(_189937_decl))))._field_Constant) {
			_1b9bd5004_pushErr(_self_.ptr(), (*((*(_189937_decl))))._field_Token, jule::Str::lit("missing expression for constant variable initialization", 55), jule::Slice<jule::Any>());
		};
		if ((*((*(_189937_decl))))._field_Statically) {
			_1b9bd5004_pushErr(_self_.ptr(), (*((*(_189937_decl))))._field_Token, jule::Str::lit("static variables must be have initialize expression", 51), jule::Slice<jule::Any>());
		};
		if ((*((*(_189937_decl))))._field_Reference) {
			_1b9bd5004_pushErr(_self_.ptr(), (*((*(_189937_decl))))._field_Token, jule::Str::lit("reference variables must be have lvalue initialize expression", 61), jule::Slice<jule::Any>());
		};
	};
}



inline void _1b9be79a6_checkGlobalVarDecl(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9c09611_Var>* _193643_decl) {
	if (_1b9bd5c19_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_193643_decl)))), &((*((*(_193643_decl))))._field_Ident), (*((*(_193643_decl))))._field_Binded)) {
		_1b9bd5004_pushErr(_self_.ptr(), (*((*(_193643_decl))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_193643_decl))))._field_Ident, &__jule_any_type4)}));
		_1b9bd5367_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_193643_decl))))._field_Binded && (*((*(_193643_decl))))._field_Constant)) {
		_1b9bd5004_pushErr(_self_.ptr(), (*((*(_193643_decl))))._field_Token, jule::Str::lit("binded variables cannot be constant", 35), jule::Slice<jule::Any>());
	};
	if ((((!((*((*(_193643_decl))))._field_Binded)) && (!((*((*(_193643_decl))))._field_Constant))) && (!((*((*(_193643_decl))))._field_Statically)))) {
		_1b9bd5004_pushErr(_self_.ptr(), (*((*(_193643_decl))))._field_Token, jule::Str::lit("global variables must be static", 31), jule::Slice<jule::Any>());
		_1b9bd5367_pushSuggestion(_self_.ptr(), jule::Str::lit("use \"static\" keyword to define", 30), jule::Slice<jule::Any>());
	};
	_1b9bd607c_checkDirectives(_self_, &((*((*(_193643_decl))))._field_Directives), jule::Any((*(_193643_decl)), &__jule_any_type8));
	_1b9be76ed_checkVarDecl(_self_, _193643_decl, jule::Trait<_1b9cacc14_Lookup>(_self_, 3));
}



inline jule::Bool _1b9be7c3c_checkGlobalDecls(jule::Ptr<_1b9bd23b9_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca006634:;
		if (it != expr_end) {
			jule::Ptr<_1b9c09611_Var> _195421_decl = *it;
			{
				_1b9be79a6_checkGlobalVarDecl(_self_, &(_195421_decl));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ca006634:;
			++it;
			goto _iter_begin_1ca006634;
		}
		_iter_end_1ca006634:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b9be8138_checkStructTraitImpl(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b393a9_Struct>* _196445_strct, jule::Ptr<_1b9b62514_Trait>* _196466_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_196466_trt))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca00825c:;
		if (it != expr_end) {
			jule::Ptr<_1b9b4e26a_Fn> _196521_tf = *it;
			{
				jule::Bool _196617_exist = false;;
				jule::Ptr<_1b9b4e26a_Fn> _196717_sf = _1b9b3a025_FindMethod((*(_196445_strct)).ptr(), (*(_196521_tf))._field_Ident, (*(_196521_tf))._field_Statically);;
				jule::Ptr<_1b9b5216e_FnIns> _196813_tfK = _1b9bddbab_getTraitCheckFnKind(_self_, &(_196521_tf));;
				if ((_196717_sf != nullptr)) {
					jule::Ptr<_1b9b5216e_FnIns> _197021_sfK = _1b9bddbab_getTraitCheckFnKind(_self_, &(_196717_sf));;
					_196617_exist=_1b9b530d7_equalTrait(_196813_tfK, &(_197021_sfK));
				};
				if (_196617_exist) {
					jule::Ptr<_1b9b17bd4_Directive> _197417_d = _1b9c865e4_findDirective(&((*(_196717_sf))._field_Directives), jule::Str::lit("deprecated", 10));;
					if ((_197417_d != nullptr)) {
						_1b9bd5004_pushErr(_self_.ptr(), (*(_197417_d))._field_Tag, jule::Str::lit("trait implementations cannot have deprecated code", 49), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1b9bd5004_pushErr(_self_.ptr(), (*((*(_196445_strct))))._field_Token, jule::Str::lit("trait @ derived but not implemented define @", 44), jule::Slice<jule::Any>::make({jule::Any((*((*(_196466_trt))))._field_Ident, &__jule_any_type4),jule::Any(_1b9b5401c_GetKindStr(_196813_tfK.ptr(), true), &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1ca00825c:;
			++it;
			goto _iter_begin_1ca00825c;
		}
		_iter_end_1ca00825c:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b9be8479_checkStructImpls(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b393a9_Struct>* _198841_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_198841_s))))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca00d62a:;
		if (it != expr_end) {
			jule::Ptr<_1b9b62514_Trait> _199021_trt = *it;
			{
				__jule_func_result=(_1b9be8138_checkStructTraitImpl(_self_, _198841_s, &(_199021_trt)) && __jule_func_result);
			}
			_iter_next_1ca00d62a:;
			++it;
			goto _iter_begin_1ca00d62a;
		}
		_iter_end_1ca00d62a:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1b9be87ba_checkStructFields(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b393a9_Struct>* _199642_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_199642_st))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca00ea9e:;
		if (it != expr_end) {
			jule::Ptr<_1b9b364b6_Field> _199821_f = *it;
			{
				(*(_199821_f))._field_Owner=(*(_199642_st));
				{
					auto expr = &((*((*(_199642_st))))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ca0107e7:;
					if (it != expr_end) {
						jule::Ptr<_1b9b364b6_Field> _200020_cf = *it;
						{
							if ((_199821_f == _200020_cf)) {
								goto _iter_end_1ca0107e7;
							} else if (((*(_199821_f))._field_Ident == (*(_200020_cf))._field_Ident)) {
								_1b9bd5004_pushErr(_self_.ptr(), (*(_199821_f))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_199821_f))._field_Ident, &__jule_any_type4)}));
								_1b9bd5367_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1ca0107e7:;
						++it;
						goto _iter_begin_1ca0107e7;
					}
					_iter_end_1ca0107e7:;
				};
			}
			_iter_next_1ca00ea9e:;
			++it;
			goto _iter_begin_1ca00ea9e;
		}
		_iter_end_1ca00ea9e:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1b9be8a73_checkStructDecl(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b393a9_Struct>* _201340_s) {
	if (_1b9b05c5a_IsIgnoreIdent((*((*(_201340_s))))._field_Ident)) {
		_1b9bd5004_pushErr(_self_.ptr(), (*((*(_201340_s))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1b9bd5c19_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_201340_s)))), &((*((*(_201340_s))))._field_Ident), (*((*(_201340_s))))._field_Binded)) {
		_1b9bd5004_pushErr(_self_.ptr(), (*((*(_201340_s))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_201340_s))))._field_Ident, &__jule_any_type4)}));
		_1b9bd5367_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1b9bd607c_checkDirectives(_self_, &((*((*(_201340_s))))._field_Directives), jule::Any((*(_201340_s)), &__jule_any_type65));
	{
		
		if ((!(_1b9be3d9d_checkDeclGenerics(_self_.ptr(), &((*((*(_201340_s))))._field_Generics))))) {
			_case_begin_1ca015687:;
		}
		else if ((!(_1b9be87ba_checkStructFields(_self_, _201340_s)))) {
			_case_begin_1ca0156ed:;
		}
		else if ((!(_1b9be8479_checkStructImpls(_self_, _201340_s)))) {
			_case_begin_1ca015764:;
		}
		else if ((!(_1b9be96ab_checkFuncDeclsBy(_self_, &((*((*(_201340_s))))._field_Methods))))) {
			_case_begin_1ca0157db:;
		}
		_match_end_1ca0151ae:;
	};
}



inline jule::Bool _1b9be8d09_checkStructDecls(jule::Ptr<_1b9bd23b9_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca01758a:;
		if (it != expr_end) {
			jule::Ptr<_1b9b393a9_Struct> _203321_s = *it;
			{
				_1b9be8a73_checkStructDecl(_self_, &(_203321_s));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ca01758a:;
			++it;
			goto _iter_begin_1ca01758a;
		}
		_iter_end_1ca01758a:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1b9be90b2_checkAnonFuncDecl(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b4e26a_Fn>* _204342_f) {
	(*((*(_204342_f))))._field_sema=_self_;
	_1b9be4b29_checkFnDeclPrototype(_self_, _204342_f);
}



inline void _1b9be936a_checkFuncDecl(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b4e26a_Fn>* _204838_f) {
	if (_1b9b05c5a_IsIgnoreIdent((*((*(_204838_f))))._field_Ident)) {
		_1b9bd5004_pushErr(_self_.ptr(), (*((*(_204838_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1b9b50227_IsAnon((*(_204838_f)).ptr())) {
		_1b9bd5004_pushErr(_self_.ptr(), (*((*(_204838_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	_1b9bd607c_checkDirectives(_self_, &((*((*(_204838_f))))._field_Directives), jule::Any((*(_204838_f)), &__jule_any_type64));
	_1b9be90b2_checkAnonFuncDecl(_self_, _204838_f);
	if ((((*((*(_204838_f))))._field_Owner == nullptr) && _1b9bd5c19_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_204838_f)))), &((*((*(_204838_f))))._field_Ident), (*((*(_204838_f))))._field_Binded))) {
		if ((*((*(_204838_f))))._field_Ident.equal("init", 4)) {
			jule::Ptr<_1b9b4e26a_Fn> _206017_init = _1b9bd394d_FindFn(_self_.ptr(), jule::Str::lit("init", 4), false);;
			if ((_206017_init != nullptr)) {
				return;;
			};
		};
		_1b9bd5004_pushErr(_self_.ptr(), (*((*(_204838_f))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_204838_f))))._field_Ident, &__jule_any_type4)}));
		_1b9bd5367_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1b9be96ab_checkFuncDeclsBy(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Slice<jule::Ptr<_1b9b4e26a_Fn>>* _207041_funcs) {
	{
		auto expr = _207041_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca01ea26:;
		if (it != expr_end) {
			jule::Ptr<_1b9b4e26a_Fn> _207121_f = *it;
			{
				_1b9be936a_checkFuncDecl(_self_, &(_207121_f));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1ca01ea26:;
			++it;
			goto _iter_begin_1ca01ea26;
		}
		_iter_end_1ca01ea26:;
	};
	return true;;
}



inline jule::Bool _1b9be9942_checkFuncDecls(jule::Ptr<_1b9bd23b9_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1b9be96ab_checkFuncDeclsBy(_self_, &((*((*(_self_))._field_file))._field_Funcs));
	return __jule_func_result;;
}



inline void _1b9be9d60_pushCycleError(_1b9bd23b9_Sema* _self_, jule::Str* _208630_st1, jule::Str* _208641_st2, _23d16295d_StrBuilder* _208656_message) {
	;
	jule::Str _20889_refersTo = _23d2115bc_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_208630_st1)), &__jule_any_type4),jule::Any((*(_208641_st2)), &__jule_any_type4)}));;
	jule::Slice<jule::U8> _208913_buf = _23d16c89c_Buf(_208656_message);;
	_23d16b604_WriteStr(_208656_message, _23d14c2a5_Repeat(jule::Str::lit(" ", 1), 7LL));
	_23d16b604_WriteStr(_208656_message, _20889_refersTo);
	_23d16b8ac_WriteByte(_208656_message, '\n');
	_23d16b34b_Write(_208656_message, _208913_buf);
}



inline void _1b9bea514_checkPackageDecls(jule::Ptr<_1b9bd23b9_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca024b4c:;
		if (it != expr_end) {
			jule::Ptr<_1b9c57ce1_SymbolTable> _211321_f = *it;
			{
				_1b9bd4ad6_setCurrentFile(_self_.ptr(), _211321_f);
				if ((!(_1b9be1cbe_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1ca024b4c:;
			++it;
			goto _iter_begin_1ca024b4c;
		}
		_iter_end_1ca024b4c:;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca027226:;
		if (it != expr_end) {
			jule::Ptr<_1b9c57ce1_SymbolTable> _212021_f = *it;
			{
				_1b9bd4ad6_setCurrentFile(_self_.ptr(), _212021_f);
				if ((!(_1b9be6279_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1ca027226:;
			++it;
			goto _iter_begin_1ca027226;
		}
		_iter_end_1ca027226:;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca0269d9:;
		if (it != expr_end) {
			jule::Ptr<_1b9c57ce1_SymbolTable> _212721_f = *it;
			{
				_1b9bd4ad6_setCurrentFile(_self_.ptr(), _212721_f);
				if ((!(_1b9be7c3c_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1ca0269d9:;
			++it;
			goto _iter_begin_1ca0269d9;
		}
		_iter_end_1ca0269d9:;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca0291b2:;
		if (it != expr_end) {
			jule::Ptr<_1b9c57ce1_SymbolTable> _213421_f = *it;
			{
				_1b9bd4ad6_setCurrentFile(_self_.ptr(), _213421_f);
				{
					
					if ((!(_1b9be9942_checkFuncDecls(_self_)))) {
						_case_begin_1ca02a009:;
					}
					else if ((!(_1b9be8d09_checkStructDecls(_self_)))) {
						_case_begin_1ca02a070:;
					}
					else {
						_case_begin_1ca029e93:;
						{
							goto _iter_next_1ca0291b2;
						}
					}
					_match_end_1ca029e3d:;
				};
				return;;
			}
			_iter_next_1ca0291b2:;
			++it;
			goto _iter_begin_1ca0291b2;
		}
		_iter_end_1ca0291b2:;
	};
}



inline void _1b9bea877_checkDataForTypeInference(_1b9bd23b9_Sema* _self_, jule::Ptr<_1b9c5d016_Data>* _214645_d, jule::Ptr<_1b9b032eb_Token>* _214656_err_token) {
	{
		
		if (_1b9c5d3bd_IsNil((*(_214645_d)).ptr())) {
			_case_begin_1ca02b14d:;
			{
				_1b9bd5004_pushErr(_self_, (*(_214656_err_token)), jule::Str::lit("nil is cannot use with type inferred definitions", 48), jule::Slice<jule::Any>());
			}
		}
		else if (_1b9c5d654_IsVoid((*(_214645_d)).ptr())) {
			_case_begin_1ca02b1c5:;
			{
				_1b9bd5004_pushErr(_self_, (*(_214656_err_token)), jule::Str::lit("void data is cannot use for type inferred definitions", 53), jule::Slice<jule::Any>());
			}
		}
		else if ((*((*((*(_214645_d))))._field_Kind))._field_Variadic) {
			_case_begin_1ca02b24c:;
			{
				_1b9bd5004_pushErr(_self_, (*(_214656_err_token)), jule::Str::lit("invalid expression for type inference", 37), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ca02b02c:;
	};
}



inline void _1b9beab30_checkVarValue(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9c09611_Var>* _215838_v) {
	if (_1b9c09c2c_IsTypeInferred((*(_215838_v)).ptr())) {
		(*((*(_215838_v))))._field_Kind=jule::new_ptr<_1b9c953a0_TypeSymbol>(_1b9c953a0_TypeSymbol{._field_Kind=(*((*((*((*(_215838_v))))._field_Value))._field_Data))._field_Kind});
		_1b9bea877_checkDataForTypeInference(_self_.ptr(), &((*((*((*(_215838_v))))._field_Value))._field_Data), &((*((*((*((*(_215838_v))))._field_Value))._field_Expr))._field_Token));
		_1b9be1021_checkValidityForInitExpr(_self_, (*((*(_215838_v))))._field_Mutable, (*((*(_215838_v))))._field_Reference, &((*((*((*(_215838_v))))._field_Kind))._field_Kind), &((*((*((*(_215838_v))))._field_Value))._field_Data), &((*((*((*((*(_215838_v))))._field_Value))._field_Expr))._field_Token));
	} else {
		jule::Ptr<_1b9c9c5c7_Arr> _217117_arr = _1b9c915ee_Arr((*((*((*(_215838_v))))._field_Kind))._field_Kind.ptr());;
		if ((_217117_arr != nullptr)) {
			if ((*(_217117_arr))._field_Auto) {
				jule::Ptr<_1b9c9c5c7_Arr> _217421_dataArr = _1b9c915ee_Arr((*((*((*((*(_215838_v))))._field_Value))._field_Data))._field_Kind.ptr());;
				if ((_217421_dataArr != nullptr)) {
					(*(_217117_arr))._field_N=(*(_217421_dataArr))._field_N;
				};
			};
		};
		if (_1b9bdca12_checkAssignType(_self_, (*((*(_215838_v))))._field_Reference, &((*((*((*(_215838_v))))._field_Kind))._field_Kind), &((*((*((*(_215838_v))))._field_Value))._field_Data), (*((*((*((*(_215838_v))))._field_Value))._field_Expr))._field_Token)) {
			_1b9be1021_checkValidityForInitExpr(_self_, (*((*(_215838_v))))._field_Mutable, (*((*(_215838_v))))._field_Reference, &((*((*((*(_215838_v))))._field_Kind))._field_Kind), &((*((*((*(_215838_v))))._field_Value))._field_Data), &((*((*((*((*(_215838_v))))._field_Value))._field_Expr))._field_Token));
		};
	};
	if (((*((*(_215838_v))))._field_Reference && (!(_1b9ca96c2_isValidForRef(&((*((*((*(_215838_v))))._field_Kind))._field_Kind)))))) {
		_1b9bd5004_pushErr(_self_.ptr(), (*((*(_215838_v))))._field_Token, jule::Str::lit("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*((*((*(_215838_v))))._field_Kind))._field_Kind.ptr()), &__jule_any_type4)}));
	};
	if ((*((*(_215838_v))))._field_Constant) {
		jule::Bool _219613_comptime = _1b9c928db_comptime((*((*((*((*(_215838_v))))._field_Value))._field_Data))._field_Kind.ptr());;
		if (((!(_1b9c5d8da_IsConst((*((*((*(_215838_v))))._field_Value))._field_Data.ptr()))) && (!(_219613_comptime)))) {
			_1b9bd5004_pushErr(_self_.ptr(), (*((*((*((*(_215838_v))))._field_Value))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		if ((_219613_comptime && (_1b9c93bc8_comptimeRange((*((*((*((*(_215838_v))))._field_Value))._field_Data))._field_Kind.ptr()) != nullptr))) {
			_1b9bd5004_pushErr(_self_.ptr(), (*((*((*((*(_215838_v))))._field_Value))._field_Expr))._field_Token, jule::Str::lit("@ is invalid data-type for constant", 35), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*((*((*((*(_215838_v))))._field_Value))._field_Data))._field_Kind.ptr()), &__jule_any_type4)}));
		};
	} else {
		(*((*((*((*(_215838_v))))._field_Value))._field_Data))._field_Constant=nullptr;
	};
	if ((_1b9c92655_Tup((*((*((*(_215838_v))))._field_Kind))._field_Kind.ptr()) != nullptr)) {
		(*((*((*(_215838_v))))._field_Kind))._field_Kind=nullptr;
	};
}



inline void _1b9beae93_evalVarValue(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9c09611_Var>* _221437_decl, jule::Trait<_1b9cacc14_Lookup> _221453_l) {
	if ((!(_1b9c09996_IsInitialized((*(_221437_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_1b9c5ec0a_Eval> _221917_eval = nullptr;;
	if (((*((*(_221437_decl))))._field_Kind != nullptr)) {
		_221917_eval=_1b9bdbc64_evalpd(_self_, _221453_l, (*((*((*(_221437_decl))))._field_Kind))._field_Kind, (*(_221437_decl)));
	} else {
		_221917_eval=_1b9bdbc64_evalpd(_self_, _221453_l, nullptr, (*(_221437_decl)));
	};
	(*(_221917_eval))._field_immutable=(!((*((*(_221437_decl))))._field_Mutable));
	(*((*((*(_221437_decl))))._field_Value))._field_Data=_1b9c7cbd4_evalExpr(_221917_eval, (*((*((*(_221437_decl))))._field_Value))._field_Expr);
}



inline void _1b9beb306_checkVar(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9c09611_Var>* _223133_decl, jule::Trait<_1b9cacc14_Lookup> _223149_l) {
	_1b9beae93_evalVarValue(_self_, _223133_decl, _223149_l);
	if (((*((*((*(_223133_decl))))._field_Value))._field_Data == nullptr)) {
		return;;
	};
	_1b9beab30_checkVarValue(_self_, _223133_decl);
}



inline void _1b9beb504_checkGlobals(jule::Ptr<_1b9bd23b9_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca044001:;
		if (it != expr_end) {
			jule::Ptr<_1b9c09611_Var> _224121_decl = *it;
			{
				if ((*(_224121_decl))._field_Binded) {
					goto _iter_next_1ca044001;
				};
				if (((_1b9c09996_IsInitialized(_224121_decl.ptr()) && ((*((*(_224121_decl))._field_Value))._field_Data == nullptr)) || (_1b9c09c2c_IsTypeInferred(_224121_decl.ptr()) && ((*((*(_224121_decl))._field_Kind))._field_Kind == nullptr)))) {
					_1b9beb306_checkVar(_self_, &(_224121_decl), jule::Trait<_1b9cacc14_Lookup>(_self_, 3));
				};
			}
			_iter_next_1ca044001:;
			++it;
			goto _iter_begin_1ca044001;
		}
		_iter_end_1ca044001:;
	};
}



inline jule::Ptr<_1b9b5216e_FnIns> _1b9beb900_readyToCheckFn(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b3c137_StructIns>* _225539_s, jule::Ptr<_1b9b4e26a_Fn>* _225559_f) {
	jule::Ptr<_1b9b5216e_FnIns> _225613_ins = _1b9b509ca_instance((*(_225559_f)));;
	if (((*((*(_225559_f))))._field_Instances.len() != 0LL)) {
		return _225613_ins;;
	};
	(*(_225613_ins))._field_Owner=(*(_225539_s));
	_1b9b50cd8_appendInstance((*(_225559_f)).ptr(), &(_225613_ins));
	(*(_225613_ins))._field_reloaded=true;
	if (_1b9be010d_reloadFnInsTypes(_self_, _225613_ins)) {
		return _225613_ins;;
	};
	return nullptr;;
}



inline void _1b9bebc63_checkTypeMethod(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b3c137_StructIns>* _226940_s, jule::Ptr<_1b9b4e26a_Fn>* _226960_f) {
	if (((*((*(_226960_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1b9b5216e_FnIns> _227413_ins = (*((*(_226960_f))))._field_Instances[0LL];;
	if (((*((*(_227413_ins))._field_Scope))._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1b9c04573_checkFnIns(_self_, &(_227413_ins));
}



inline jule::Ptr<_1b9b5216e_FnIns> _1b9bec219_checkStructInsOp(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b3c137_StructIns>* _228241_s, jule::Ptr<_1b9b4e26a_Fn>* _228261_f, jule::Fn<jule::Bool(jule::Ptr<_1b9b4e26a_Fn>)> _228269_p) {
	if (((((*(_228261_f)) == nullptr) || ((*((*(_228261_f))))._field_Generics.len() > 0LL)) || (!(_228269_p((*(_228261_f))))))) {
		return nullptr;;
	};
	return (*((*(_228261_f))))._field_Instances[0LL];;
}



inline jule::Bool _1b9bec615_checkStructEnv(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b3c137_StructIns>* _229239_s, jule::Ptr<_1b9b032eb_Token> _229258_errorToken) {
	jule::Bool __jule_func_result = false;
	_1b9ca008b_typeChecker _229313_tc = _1b9ca008b_typeChecker{._field_s=(*((*((*(_229239_s))))._field_Decl))._field_sema, ._field_rootLookup=jule::Trait<_1b9cacc14_Lookup>((*((*((*(_229239_s))))._field_Decl))._field_sema, 3), ._field_lookup=jule::Trait<_1b9cacc14_Lookup>((*((*((*(_229239_s))))._field_Decl))._field_sema, 3), ._field_referencer=jule::new_ptr<_1b9c9e09b_referencer>(_1b9c9e09b_referencer{._field_ident=(*((*((*(_229239_s))))._field_Decl))._field_Ident, ._field_owner=jule::Any((*((*(_229239_s))))._field_Decl, &__jule_any_type65), }), ._field_refers=(*((*(_229239_s))))._field_Refers, };;
	if (((*((*(_229239_s))))._field_Generics.len() > 0LL)) {
		_229313_tc._field_useGenerics=jule::Slice<jule::Ptr<_1b9c8c3db_TypeAlias>>::alloc(0LL, (*((*(_229239_s))))._field_Generics.len());
		{
			auto expr = &((*((*(_229239_s))))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ca05002e:;
			if (it != expr_end) {
				jule::I32 _230618_i = it - expr->begin();
				jule::Ptr<_1b9c8b7e7_InsGeneric> _230625_g = *it;
				{
					jule::Ptr<_1b9b259c2_GenericDecl> _230721_decl = (*((*((*(_229239_s))))._field_Decl))._field_Generics[_230618_i];;
					{ jule::Slice<jule::Ptr<_1b9c8c3db_TypeAlias>> &__jule_push_dest = _229313_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_1b9c8c3db_TypeAlias>(_1b9c8c3db_TypeAlias{._field_Token=(*(_230721_decl))._field_Token, ._field_Ident=(*(_230721_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1b9c953a0_TypeSymbol>(_1b9c953a0_TypeSymbol{._field_Kind=(*(_230625_g))._field_Kind}), })); };
				}
				_iter_next_1ca05002e:;
				++it;
				_230618_i++;
				goto _iter_begin_1ca05002e;
			}
			_iter_end_1ca05002e:;
		};
	};
	jule::Ptr<_1b9c57ce1_SymbolTable> _231613_oldFile = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1b9bd4ad6_setCurrentFile(_self_.ptr(), _231613_oldFile);
	});;
	if (((*((*(_self_))._field_file))._field_File != (*((*((*((*(_229239_s))))._field_Decl))._field_Token))._field_File)) {
		jule::Ptr<_1b9c57ce1_SymbolTable> _232017_file = _1b9bd1110_findFile(&((*(_self_))._field_files), &((*((*((*((*(_229239_s))))._field_Decl))._field_Token))._field_File));;
		if ((_232017_file != nullptr)) {
			_1b9bd4ad6_setCurrentFile(_self_.ptr(), _232017_file);
		};
	};
	if (((*((*(_229239_s))))._field_Generics.len() > 0LL)) {
		jule::Ptr<_1b9b87858_constraintChecker> _232717_cc = _1b9bda779_constraintChecker(_self_);;
		(*(_232717_cc))._field_et=_229258_errorToken;
		(*(_232717_cc))._field_si=(*(_229239_s));
		(*(_232717_cc))._field_genericsA=_229313_tc._field_useGenerics;
		(*(_232717_cc))._field_uniq=true;
		if ((!(_1b9b8878d_check(_232717_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*((*(_229239_s))))._field_Statics.len() > 0LL)) {
		jule::I32 _234017_n = (*(_self_))._field_errors.len();;
		(*((*(_self_))._field_files[0LL]))._field_TypeAliases=jule::append(_229313_tc._field_useGenerics,(*((*(_self_))._field_files[0LL]))._field_TypeAliases);
		{
			auto expr = &((*((*(_229239_s))))._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ca057b91:;
			if (it != expr_end) {
				jule::Ptr<_1b9c09611_Var> _234225_v = *it;
				{
					_1b9be76ed_checkVarDecl(_self_, &(_234225_v), jule::Trait<_1b9cacc14_Lookup>(_self_, 3));
					_1b9beb306_checkVar(_self_, &(_234225_v), jule::Trait<_1b9cacc14_Lookup>(_self_, 3));
					__jule_func_result=((((*(_self_))._field_errors.len() - _234017_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1ca057b91:;
				++it;
				goto _iter_begin_1ca057b91;
			}
			_iter_end_1ca057b91:;
		};
		(*((*(_self_))._field_files[0LL]))._field_TypeAliases=(*((*(_self_))._field_files[0LL]))._field_TypeAliases.slice(_229313_tc._field_useGenerics.len());
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1b9c5ec0a_Eval> _235313_eval = _1b9bdc4a1_eval(_self_, jule::Trait<_1b9cacc14_Lookup>(_self_, 3));;
	(*((*(_229239_s))))._field_Comparable=(!((*((*((*(_229239_s))))._field_Decl))._field_Binded));
	{
		auto expr = &((*((*(_229239_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca05b28d:;
		if (it != expr_end) {
			jule::Ptr<_1b9b3b587_FieldIns> _235521_f = *it;
			{
				jule::Ptr<_1b9c8d1cd_TypeKind> _235617_kind = _1b9ca7736_checkDecl(&_229313_tc, &((*((*((*(_235521_f))._field_Decl))._field_Kind))._field_Decl));;
				__jule_func_result=((_235617_kind != nullptr) && __jule_func_result);
				if ((_235617_kind == nullptr)) {
					if (((_self_ != (*((*((*(_229239_s))))._field_Decl))._field_sema) && ((*((*((*((*(_229239_s))))._field_Decl))._field_sema))._field_errors.len() > 0LL))) {
						((*(_self_))._field_errors).append((*((*((*((*(_229239_s))))._field_Decl))._field_sema))._field_errors);;
						(*((*((*((*(_229239_s))))._field_Decl))._field_sema))._field_errors=nullptr;
					};
					goto _iter_next_1ca05b28d;
				};
				(*(_235521_f))._field_Kind=_235617_kind;
				(*((*(_229239_s))))._field_Mutable=((*((*(_229239_s))))._field_Mutable || ((!((*((*(_235521_f))._field_Decl))._field_Mutable)) && _1b9c8ea5e_Mutable((*(_235521_f))._field_Kind.ptr())));
				(*((*(_229239_s))))._field_Comparable=((*((*(_229239_s))))._field_Comparable && _1b9c8e7c8_Comparable((*(_235521_f))._field_Kind.ptr()));
				if (((*((*(_235521_f))._field_Decl))._field_Default == nullptr)) {
					goto _iter_next_1ca05b28d;
				};
				(*(_235313_eval))._field_prefix=(*(_235521_f))._field_Kind;
				(*(_235313_eval))._field_field=_235521_f;
				(*(_235521_f))._field_Default=_1b9c7cbd4_evalExpr(_235313_eval, (*((*(_235521_f))._field_Decl))._field_Default);
				if (((*(_235521_f))._field_Default == nullptr)) {
					goto _iter_next_1ca05b28d;
				};
				;
				_1b9bdca12_checkAssignType(_self_, false, &((*(_235521_f))._field_Kind), &((*(_235521_f))._field_Default), (*((*((*(_235521_f))._field_Decl))._field_Default))._field_Token);
			}
			_iter_next_1ca05b28d:;
			++it;
			goto _iter_begin_1ca05b28d;
		}
		_iter_end_1ca05b28d:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b9beca11_precheckStructIns(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b3c137_StructIns>* _238942_s, jule::Ptr<_1b9b032eb_Token> _238961_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1b9bec615_checkStructEnv(_self_, _238942_s, _238961_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*((*(_238942_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca066782:;
		if (it != expr_end) {
			jule::Ptr<_1b9b4e26a_Fn> _239421_f = *it;
			{
				if (((*(_239421_f))._field_Generics.len() == 0LL)) {
					if ((_1b9beb900_readyToCheckFn(_self_, _238942_s, &(_239421_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1ca066782:;
			++it;
			goto _iter_begin_1ca066782;
		}
		_iter_end_1ca066782:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1b9beccb9_checkStructIns(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b3c137_StructIns>* _240439_s) {
	{
		auto expr = &((*((*(_240439_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca067167:;
		if (it != expr_end) {
			jule::Ptr<_1b9b4e26a_Fn> _240521_f = *it;
			{
				_1b9bebc63_checkTypeMethod(_self_, _240439_s, &(_240521_f));
			}
			_iter_next_1ca067167:;
			++it;
			goto _iter_begin_1ca067167;
		}
		_iter_end_1ca067167:;
	};
}



inline void _1b9bed072_checkTypeStruct(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b393a9_Struct>* _241040_s) {
	if ((*((*(_241040_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_241040_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_241040_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca069202:;
		if (it != expr_end) {
			jule::Ptr<_1b9b3c137_StructIns> _242321_ins = *it;
			{
				_1b9beccb9_checkStructIns(_self_, &(_242321_ins));
			}
			_iter_next_1ca069202:;
			++it;
			goto _iter_begin_1ca069202;
		}
		_iter_end_1ca069202:;
	};
}



inline void _1b9c030cc_checkStructTypes(jule::Ptr<_1b9bd23b9_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca06a5cc:;
		if (it != expr_end) {
			jule::Ptr<_1b9b393a9_Struct> _242921_s = *it;
			{
				_1b9bed072_checkTypeStruct(_self_, &(_242921_s));
			}
			_iter_next_1ca06a5cc:;
			++it;
			goto _iter_begin_1ca06a5cc;
		}
		_iter_end_1ca06a5cc:;
	};
}



inline void _1b9c03385_checkStructInsOperators(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b3c137_StructIns> _243447_s) {
	{
		auto expr = &((*(_243447_s))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca06bb2d:;
		if (it != expr_end) {
			jule::Ptr<_1b9b4e26a_Fn> _243521_m = *it;
			{
				{
					auto &_match_expr{ (*(_243521_m))._field_Ident };
					
					if (_match_expr == jule::Str::lit("Eq", 2)) {
						_case_begin_1ca06cab8:;
						{
							(*(_243447_s))._field_Operators._field_Eq=_1b9bec219_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1b9c0b46a_Eq);
							(*(_243447_s))._field_Comparable=((*(_243447_s))._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str::lit("Gt", 2)) {
						_case_begin_1ca06cb40:;
						{
							(*(_243447_s))._field_Operators._field_Gt=_1b9bec219_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1b9c0b734_Gt);
						}
					}
					else if (_match_expr == jule::Str::lit("GtEq", 4)) {
						_case_begin_1ca06cbb7:;
						{
							(*(_243447_s))._field_Operators._field_GtEq=_1b9bec219_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1b9c0b9ed_GtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Lt", 2)) {
						_case_begin_1ca06cc3e:;
						{
							(*(_243447_s))._field_Operators._field_Lt=_1b9bec219_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1b9c0bcb7_Lt);
						}
					}
					else if (_match_expr == jule::Str::lit("LtEq", 4)) {
						_case_begin_1ca06ccb6:;
						{
							(*(_243447_s))._field_Operators._field_LtEq=_1b9bec219_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1b9c0c081_LtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Shl", 3)) {
						_case_begin_1ca06cd3d:;
						{
							(*(_243447_s))._field_Operators._field_Shl=_1b9bec219_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1b9c0c6be_Shl);
						}
					}
					else if (_match_expr == jule::Str::lit("Shr", 3)) {
						_case_begin_1ca06cdb5:;
						{
							(*(_243447_s))._field_Operators._field_Shr=_1b9bec219_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1b9c0c988_Shr);
						}
					}
					else if (_match_expr == jule::Str::lit("Add", 3)) {
						_case_begin_1ca06ce3c:;
						{
							(*(_243447_s))._field_Operators._field_Add=_1b9bec219_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1b9c0cc52_Add);
						}
					}
					else if (_match_expr == jule::Str::lit("Sub", 3)) {
						_case_begin_1ca06ceb4:;
						{
							(*(_243447_s))._field_Operators._field_Sub=_1b9bec219_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1b9c0d01b_Sub);
						}
					}
					else if (_match_expr == jule::Str::lit("Div", 3)) {
						_case_begin_1ca06d03b:;
						{
							(*(_243447_s))._field_Operators._field_Div=_1b9bec219_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1b9c0d2d5_Div);
						}
					}
					else if (_match_expr == jule::Str::lit("Mul", 3)) {
						_case_begin_1ca06d0b3:;
						{
							(*(_243447_s))._field_Operators._field_Mul=_1b9bec219_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1b9c0d59e_Mul);
						}
					}
					else if (_match_expr == jule::Str::lit("Mod", 3)) {
						_case_begin_1ca06d13a:;
						{
							(*(_243447_s))._field_Operators._field_Mod=_1b9bec219_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1b9c0d868_Mod);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAnd", 6)) {
						_case_begin_1ca06d1b2:;
						{
							(*(_243447_s))._field_Operators._field_BitAnd=_1b9bec219_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1b9c0db32_BitAnd);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOr", 5)) {
						_case_begin_1ca06d239:;
						{
							(*(_243447_s))._field_Operators._field_BitOr=_1b9bec219_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1b9c0ddeb_BitOr);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXor", 6)) {
						_case_begin_1ca06d2b1:;
						{
							(*(_243447_s))._field_Operators._field_BitXor=_1b9bec219_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1b9c0e1b5_BitXor);
						}
					}
					else if (_match_expr == jule::Str::lit("Neg", 3)) {
						_case_begin_1ca06d338:;
						{
							(*(_243447_s))._field_Operators._field_Neg=_1b9bec219_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1b9c0e803_Neg);
						}
					}
					else if (_match_expr == jule::Str::lit("Pos", 3)) {
						_case_begin_1ca06d3b0:;
						{
							(*(_243447_s))._field_Operators._field_Pos=_1b9bec219_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1b9c0eabc_Pos);
						}
					}
					else if (_match_expr == jule::Str::lit("BitNot", 6)) {
						_case_begin_1ca06d437:;
						{
							(*(_243447_s))._field_Operators._field_BitNot=_1b9bec219_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1b9c0ed86_BitNot);
						}
					}
					else if (_match_expr == jule::Str::lit("AddAssign", 9)) {
						_case_begin_1ca06d4ae:;
						{
							(*(_243447_s))._field_Operators._field_AddAssign=_1b9bec219_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1b9c104c4_AddAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("SubAssign", 9)) {
						_case_begin_1ca06d536:;
						{
							(*(_243447_s))._field_Operators._field_SubAssign=_1b9bec219_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1b9c1078d_SubAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("DivAssign", 9)) {
						_case_begin_1ca06d5ad:;
						{
							(*(_243447_s))._field_Operators._field_DivAssign=_1b9bec219_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1b9c10a57_DivAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("MulAssign", 9)) {
						_case_begin_1ca06d635:;
						{
							(*(_243447_s))._field_Operators._field_MulAssign=_1b9bec219_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1b9c10d21_MulAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ModAssign", 9)) {
						_case_begin_1ca06d6ac:;
						{
							(*(_243447_s))._field_Operators._field_ModAssign=_1b9bec219_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1b9c110da_ModAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShlAssign", 9)) {
						_case_begin_1ca06d734:;
						{
							(*(_243447_s))._field_Operators._field_ShlAssign=_1b9bec219_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1b9c113a4_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShrAssign", 9)) {
						_case_begin_1ca06d7ab:;
						{
							(*(_243447_s))._field_Operators._field_ShrAssign=_1b9bec219_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1b9c1166d_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOrAssign", 11)) {
						_case_begin_1ca06d833:;
						{
							(*(_243447_s))._field_Operators._field_BitOrAssign=_1b9bec219_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1b9c11937_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAndAssign", 12)) {
						_case_begin_1ca06d8aa:;
						{
							(*(_243447_s))._field_Operators._field_BitAndAssign=_1b9bec219_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1b9c11c01_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXorAssign", 12)) {
						_case_begin_1ca06d932:;
						{
							(*(_243447_s))._field_Operators._field_BitXorAssign=_1b9bec219_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1b9c11eba_BitXorAssign);
						}
					}
					_match_end_1ca06c821:;
				};
			}
			_iter_next_1ca06bb2d:;
			++it;
			goto _iter_begin_1ca06bb2d;
		}
		_iter_end_1ca06bb2d:;
	};
}



inline void _1b9c0363d_precheckStructType(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b393a9_Struct>* _249843_s) {
	if ((*((*(_249843_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_249843_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_249843_s))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1b9b3c137_StructIns> _250917_ins = _1b9b3981b_instance((*(_249843_s)));;
		(*(_250917_ins))._field_Checked=true;
		_1b9b39b29_appendInstance((*(_249843_s)).ptr(), &(_250917_ins));
		_1b9beca11_precheckStructIns(_self_, &(_250917_ins), nullptr);
	};
	_1b9c03385_checkStructInsOperators(_self_, (*((*(_249843_s))))._field_Instances[0LL]);
}



inline void _1b9c0383b_precheckStructTypes(jule::Ptr<_1b9bd23b9_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca08463a:;
		if (it != expr_end) {
			jule::Ptr<_1b9b393a9_Struct> _251921_s = *it;
			{
				_1b9c0363d_precheckStructType(_self_, &(_251921_s));
			}
			_iter_next_1ca08463a:;
			++it;
			goto _iter_begin_1ca08463a;
		}
		_iter_end_1ca08463a:;
	};
}



inline void _1b9c03ae4_checkRets(_1b9bd23b9_Sema* _self_, jule::Ptr<_1b9b5216e_FnIns>* _252433_f) {
	if (_1b9b4e6dd_IsVoid((*((*(_252433_f))))._field_Decl.ptr())) {
		return;;
	};
	_1b9c06069_missingRetChecker _25289_mrc = static__1b9c06432_new();;
	jule::Bool _25299_ok = _1b9c07554_check(&_25289_mrc, (*((*(_252433_f))))._field_Scope);;
	if ((!(_25299_ok))) {
		_1b9bd5004_pushErr(_self_, (*((*((*(_252433_f))))._field_Decl))._field_Token, jule::Str::lit("missing return at end of function", 33), jule::Slice<jule::Any>());
	};
}



inline void _1b9c03e57_checkFnInsSc(_1b9bd23b9_Sema* _self_, jule::Ptr<_1b9b5216e_FnIns>* _253536_f, jule::Ptr<_1b9b970c6_scopeChecker>* _253552_sc) {
	_1b9bd06b4_appendRetVars(&((*((*((*(_253552_sc))))._field_table))._field_Vars), _253536_f);
	_1b9bd09a0_appendParamVars(&((*((*((*(_253552_sc))))._field_table))._field_Vars), _253536_f);
	_1b9bd0c8b_appendGenericTypeAliases(&((*((*((*(_253552_sc))))._field_table))._field_TypeAliases), _253536_f);
	_1b9ba8a88_check((*(_253552_sc)), &((*((*((*(_253536_f))))._field_Decl))._field_Scope), &((*((*(_253536_f))))._field_Scope));
	if ((!(_1b9b99b9a_stopped((*(_253552_sc)).ptr())))) {
		_1b9c03ae4_checkRets(_self_, _253536_f);
	};
}



inline void _1b9c042ba_checkFnInsCaller(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b5216e_FnIns>* _254841_f, jule::Ptr<_1b9b032eb_Token> _254856_caller) {
	if ((*((*((*(_254841_f))))._field_Decl))._field_Binded) {
		return;;
	};
	jule::Ptr<_1b9c57ce1_SymbolTable> _255313_old = (*((*((*((*(_254841_f))))._field_Decl))._field_sema))._field_file;;
	__JULE_DEFER({
		_1b9bd4ad6_setCurrentFile((*((*((*(_254841_f))))._field_Decl))._field_sema.ptr(), _255313_old);
	});;
	jule::Ptr<_1b9c57ce1_SymbolTable> _255513_file = _1b9bd1110_findFile(&((*((*((*((*(_254841_f))))._field_Decl))._field_sema))._field_files), &((*((*((*((*(_254841_f))))._field_Decl))._field_Token))._field_File));;
	if ((_255513_file != nullptr)) {
		_1b9bd4ad6_setCurrentFile((*((*((*(_254841_f))))._field_Decl))._field_sema.ptr(), _255513_file);
	};
	jule::Ptr<_1b9b970c6_scopeChecker> _256013_sc = _1b9b8be67_newScopeChecker(&((*((*((*(_254841_f))))._field_Decl))._field_sema), (*(_254841_f)));;
	(*(_256013_sc))._field_calledFrom=_254856_caller;
	_1b9c03e57_checkFnInsSc(_self_.ptr(), _254841_f, &(_256013_sc));
	if (((*((*((*(_254841_f))))._field_Decl))._field_sema != _self_)) {
		((*(_self_))._field_errors).append((*((*((*((*(_254841_f))))._field_Decl))._field_sema))._field_errors);;
		(*((*((*((*(_254841_f))))._field_Decl))._field_sema))._field_errors=nullptr;
	};
}



inline void _1b9c04573_checkFnIns(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b5216e_FnIns>* _257035_f) {
	_1b9c042ba_checkFnInsCaller(_self_, _257035_f, nullptr);
}



inline void _1b9c0482b_checkFunc(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b4e26a_Fn>* _257434_f) {
	if ((*((*(_257434_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_257434_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_257434_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca091b86:;
		if (it != expr_end) {
			jule::Ptr<_1b9b5216e_FnIns> _258421_ins = *it;
			{
				_1b9c04573_checkFnIns(_self_, &(_258421_ins));
			}
			_iter_next_1ca091b86:;
			++it;
			goto _iter_begin_1ca091b86;
		}
		_iter_end_1ca091b86:;
	};
}



inline void _1b9c04ad4_checkTestFn(_1b9bd23b9_Sema* _self_, jule::Ptr<_1b9b5216e_FnIns>* _258935_f) {
	if ((*((*((*(_258935_f))))._field_Decl))._field_Public) {
		_1b9bd5004_pushErr(_self_, (*((*((*(_258935_f))))._field_Decl))._field_Token, jule::Str::lit("test function cannot be public", 30), jule::Slice<jule::Any>());
		_1b9bd5367_pushSuggestion(_self_, jule::Str::lit("dont use identifier which is starts with capital letter to avoid define as public", 81), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*((*((*(_258935_f))))._field_Decl))._field_Unsafety || (!(_1b9b4e6dd_IsVoid((*((*(_258935_f))))._field_Decl.ptr())))) || ((*((*((*(_258935_f))))._field_Decl))._field_Generics.len() != 0LL)) || ((*((*(_258935_f))))._field_Params.len() != 1LL)) || (*((*((*((*(_258935_f))))._field_Decl))._field_Params[0LL]))._field_Mutable) || (*((*((*((*(_258935_f))))._field_Decl))._field_Params[0LL]))._field_Reference)) {
		_1b9bd5004_pushErr(_self_, (*((*((*(_258935_f))))._field_Decl))._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1b9bd5367_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b9c997d3_Sptr> _260713_sptr = _1b9c90ab5_Sptr((*((*((*(_258935_f))))._field_Params[0LL]))._field_Kind.ptr());;
	if ((_260713_sptr == nullptr)) {
		_1b9bd5004_pushErr(_self_, (*((*((*(_258935_f))))._field_Decl))._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1b9bd5367_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b9b3c137_StructIns> _26149_s = _1b9c91da2_Struct((*(_260713_sptr))._field_Elem.ptr());;
	if (((_26149_s == nullptr) || (!(_1b9bb6601_isStdPackage(&((*((*((*((*(_26149_s))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("testing", 7)))))) {
		_1b9bd5004_pushErr(_self_, (*((*((*(_258935_f))))._field_Decl))._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1b9bd5367_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1b9c04d8c_precheckFunc(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Ptr<_1b9b4e26a_Fn>* _262237_f) {
	if ((*((*(_262237_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_262237_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_262237_f))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1b9b5216e_FnIns> _263317_ins = _1b9b50744_instanceForce((*(_262237_f)));;
		{ jule::Slice<jule::Ptr<_1b9b5216e_FnIns>> &__jule_push_dest = (*((*(_262237_f))))._field_Instances; __jule_push_dest.push(_263317_ins); };
		jule::Bool _263513_ok = _1b9be010d_reloadFnInsTypes(_self_, _263317_ins);;
		(*(_263317_ins))._field_reloaded=true;
		if ((_263513_ok && _1b9ca8ced_hasDirective(&((*((*(_262237_f))))._field_Directives), jule::Str::lit("test", 4)))) {
			_1b9c04ad4_checkTestFn(_self_.ptr(), &(_263317_ins));
		};
	};
}



inline void _1b9c0508a_precheckFuncs(jule::Ptr<_1b9bd23b9_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca0a0018:;
		if (it != expr_end) {
			jule::Ptr<_1b9b62514_Trait> _264621_decl = *it;
			{
				{
					auto expr = &((*(_264621_decl))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ca0a0b51:;
					if (it != expr_end) {
						jule::Ptr<_1b9b4e26a_Fn> _264725_m = *it;
						{
							_1b9c04d8c_precheckFunc(_self_, &(_264725_m));
						}
						_iter_next_1ca0a0b51:;
						++it;
						goto _iter_begin_1ca0a0b51;
					}
					_iter_end_1ca0a0b51:;
				};
			}
			_iter_next_1ca0a0018:;
			++it;
			goto _iter_begin_1ca0a0018;
		}
		_iter_end_1ca0a0018:;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca0a15e1:;
		if (it != expr_end) {
			jule::Ptr<_1b9b4e26a_Fn> _265121_decl = *it;
			{
				_1b9c04d8c_precheckFunc(_self_, &(_265121_decl));
			}
			_iter_next_1ca0a15e1:;
			++it;
			goto _iter_begin_1ca0a15e1;
		}
		_iter_end_1ca0a15e1:;
	};
}



inline void _1b9c05288_checkFuncs(jule::Ptr<_1b9bd23b9_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca0a1db6:;
		if (it != expr_end) {
			jule::Ptr<_1b9b4e26a_Fn> _265821_decl = *it;
			{
				_1b9c0482b_checkFunc(_self_, &(_265821_decl));
			}
			_iter_next_1ca0a1db6:;
			++it;
			goto _iter_begin_1ca0a1db6;
		}
		_iter_end_1ca0a1db6:;
	};
}



inline void _1b9c05486_checkPackageTypes(jule::Ptr<_1b9bd23b9_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca0a2cb8:;
		if (it != expr_end) {
			jule::Ptr<_1b9c57ce1_SymbolTable> _266621_f = *it;
			{
				_1b9bd4ad6_setCurrentFile(_self_.ptr(), _266621_f);
				_1b9beb504_checkGlobals(_self_);
				_1b9c0508a_precheckFuncs(_self_);
				_1b9c0383b_precheckStructTypes(_self_);
			}
			_iter_next_1ca0a2cb8:;
			++it;
			goto _iter_begin_1ca0a2cb8;
		}
		_iter_end_1ca0a2cb8:;
	};
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca0a4abc:;
		if (it != expr_end) {
			jule::Ptr<_1b9c57ce1_SymbolTable> _267721_f = *it;
			{
				_1b9bd4ad6_setCurrentFile(_self_.ptr(), _267721_f);
				_1b9c05288_checkFuncs(_self_);
				_1b9c030cc_checkStructTypes(_self_);
			}
			_iter_next_1ca0a4abc:;
			++it;
			goto _iter_begin_1ca0a4abc;
		}
		_iter_end_1ca0a4abc:;
	};
}



inline void _1b9c05684_setFileSemaFields(jule::Ptr<_1b9bd23b9_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca0a5590:;
		if (it != expr_end) {
			jule::Ptr<_1b9b4e26a_Fn> _268521_f = *it;
			{
				(*(_268521_f))._field_sema=_self_;
			}
			_iter_next_1ca0a5590:;
			++it;
			goto _iter_begin_1ca0a5590;
		}
		_iter_end_1ca0a5590:;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca0a6cbc:;
		if (it != expr_end) {
			jule::Ptr<_1b9b393a9_Struct> _268821_st = *it;
			{
				(*(_268821_st))._field_sema=_self_;
			}
			_iter_next_1ca0a6cbc:;
			++it;
			goto _iter_begin_1ca0a6cbc;
		}
		_iter_end_1ca0a6cbc:;
	};
}



inline void _1b9c05882_setSemaFields(jule::Ptr<_1b9bd23b9_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca0a77e5:;
		if (it != expr_end) {
			jule::Ptr<_1b9c57ce1_SymbolTable> _269421_file = *it;
			{
				_1b9bd4ad6_setCurrentFile(_self_.ptr(), _269421_file);
				_1b9c05684_setFileSemaFields(_self_);
			}
			_iter_next_1ca0a77e5:;
			++it;
			goto _iter_begin_1ca0a77e5;
		}
		_iter_end_1ca0a77e5:;
	};
}



inline void _1b9c05b3a_check(jule::Ptr<_1b9bd23b9_Sema> _self_, jule::Slice<jule::Ptr<_1b9c57ce1_SymbolTable>>* _270030_files) {
	(*(_self_))._field_files=(*(_270030_files));
	_1b9bd8975_checkImports(_self_.ptr());
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1b9c05882_setSemaFields(_self_);
	_1b9bd946a_checkInherits(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1b9bd8d71_implImpls(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1b9bd906e_checkEnums(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1b9bea514_checkPackageDecls(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1b9c05486_checkPackageTypes(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1b9bd23b9_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags << ", ";
	_Stream << "meta:" << _Src._field_meta;
	_Stream << "}";
	return _Stream;
}



inline _1b9c06069_missingRetChecker static__1b9c06432_new(void) {
	return _1b9c06069_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _1b9c06740_checkConditional(_1b9c06069_missingRetChecker* _self_, jule::Ptr<_1b9b9090a_Conditional> _274835_c) {
	{
		auto expr = &((*(_274835_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca0acc3a:;
		if (it != expr_end) {
			jule::Ptr<_1b9b901e0_If> _274921_elif = *it;
			{
				if ((_274921_elif == nullptr)) {
					return false;;
				};
				if ((!(_1b9c07213_checkScope(_self_, (*(_274921_elif))._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1ca0acc3a:;
			++it;
			goto _iter_begin_1ca0acc3a;
		}
		_iter_end_1ca0acc3a:;
	};
	return (((*(_274835_c))._field_Default != nullptr) && _1b9c07213_checkScope(_self_, (*((*(_274835_c))._field_Default))._field_Scope));;
}



inline jule::Bool _1b9c06a81_checkMatch(_1b9c06069_missingRetChecker* _self_, jule::Ptr<_1b9b93e08_Match> _276029_m) {
	{
		auto expr = &((*(_276029_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca0ae2d0:;
		if (it != expr_end) {
			jule::Ptr<_1b9b94a41_Case> _276121_c = *it;
			{
				if ((_276121_c == nullptr)) {
					return false;;
				};
				jule::I32 _276513_n = (*(_self_))._field_breaked.len();;
				jule::Bool _276613_ok = _1b9c07213_checkScope(_self_, (*(_276121_c))._field_Scope);;
				{
					
					if ((_276513_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1ca0b1d4e:;
						{
							return false;;
						}
					}
					else if ((!(_276613_ok))) {
						_case_begin_1ca0b1dc6:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1ca0b1e4d;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1ca0b1e4d:;
						{
							(*(_self_))._field_falled=false;
							if (((*(_276121_c))._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1ca0ae2d0;
						}
					}
					_match_end_1ca0b1c83:;
				};
			}
			_iter_next_1ca0ae2d0:;
			++it;
			goto _iter_begin_1ca0ae2d0;
		}
		_iter_end_1ca0ae2d0:;
	};
	return (((*(_276029_m))._field_Default != nullptr) && _1b9c07213_checkScope(_self_, (*((*(_276029_m))._field_Default))._field_Scope));;
}



inline jule::Bool _1b9c06dc2_checkInfIter(_1b9c06069_missingRetChecker* _self_, jule::Ptr<_1b9b90c07_InfIter> _278631_it) {
	jule::I32 _27879_n = (*(_self_))._field_breaked.len();;
	if (_1b9c07213_checkScope(_self_, (*(_278631_it))._field_Scope)) {
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _27879_n);
		return true;;
	};
	if ((_27879_n != (*(_self_))._field_breaked.len())) {
		jule::Uintptr _279313_itaddr = static_cast<jule::Uintptr>(_278631_it);;
		{
			auto expr = (*(_self_))._field_breaked.slice(_27879_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1ca0b58be:;
			if (it != expr_end) {
				jule::Uintptr _279420_addr = *it;
				{
					if ((_279313_itaddr == _279420_addr)) {
						(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _27879_n);
						return false;;
					};
				}
				_iter_next_1ca0b58be:;
				++it;
				goto _iter_begin_1ca0b58be;
			}
			_iter_end_1ca0b58be:;
		};
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _27879_n);
	};
	return true;;
}



inline jule::Bool _1b9c07213_checkScope(_1b9c06069_missingRetChecker* _self_, jule::Ptr<_1b9b8ecc2_Scope> _280529_s) {
	if ((_280529_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &((*(_280529_s))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca0b6e42:;
		if (it != expr_end) {
			jule::Any _280921_st = *it;
			{
				{
					auto &_match_expr{ _280921_st };
					
					if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1ca0b7c56:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type49) {
						_case_begin_1ca0b7cbc:;
						{
							jule::Uintptr _281517_addr = (*(_280921_st.cast_ptr<_1b9b92368_BreakSt>(&__jule_any_type49)))._field_It;;
							if ((_281517_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_281517_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type41) {
						_case_begin_1ca0b7d33:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type36) {
						_case_begin_1ca0b7daa:;
						{
							if (_1b9c06dc2_checkInfIter(_self_, _280921_st.cast_ptr<_1b9b90c07_InfIter>(&__jule_any_type36))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type50) {
						_case_begin_1ca0b7e32:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1ca0b7ea9:;
						{
							if (_1b9c07213_checkScope(_self_, _280921_st.cast_ptr<_1b9b8ecc2_Scope>(&__jule_any_type22))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type24) {
						_case_begin_1ca0b8031:;
						{
							{
								auto &_match_expr{ (*(_280921_st.cast_ptr<_1b9c5d016_Data>(&__jule_any_type24)))._field_Model };
								
								if (_match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type23) {
									_case_begin_1ca0bb919:;
									{
										return true;;
									}
								}
								_match_end_1ca0bb881:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type35) {
						_case_begin_1ca0b80a8:;
						{
							if (_1b9c06740_checkConditional(_self_, _280921_st.cast_ptr<_1b9b9090a_Conditional>(&__jule_any_type35))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type47) {
						_case_begin_1ca0b8130:;
						{
							if (_1b9c06a81_checkMatch(_self_, _280921_st.cast_ptr<_1b9b93e08_Match>(&__jule_any_type47))) {
								return true;;
							};
						}
					}
					_match_end_1ca0b7b46:;
				};
			}
			_iter_next_1ca0b6e42:;
			++it;
			goto _iter_begin_1ca0b6e42;
		}
		_iter_end_1ca0b6e42:;
	};
	return false;;
}



inline jule::Bool _1b9c07554_check(_1b9c06069_missingRetChecker* _self_, jule::Ptr<_1b9b8ecc2_Scope> _285124_s) {
	return _1b9c07213_checkScope(_self_, _285124_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9c06069_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9c08456_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b9c09996_IsInitialized(_1b9c09611_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1b9c09c2c_IsTypeInferred(_1b9c09611_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*((*(_self_))._field_Kind))._field_Decl == nullptr));;
}



inline jule::Bool _1b9c09eb3_untypedConstant(_1b9c09611_Var* _self_) {
	return (_1b9c09c2c_IsTypeInferred(_self_) && (*((*((*(_self_))._field_Value))._field_Data))._field_untyped);;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9c09611_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1b9c0aa63_Dispose(jule::Ptr<_1b9b4e26a_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && ((*(_1023_f))._field_Owner != nullptr)) && (*(_1023_f))._field_Ident.equal("Dispose", 7)) && (!((*(_1023_f))._field_Statically))) && (!((*(_1023_f))._field_Unsafety))) && _1b9b4e6dd_IsVoid(_1023_f.ptr())) && ((*(_1023_f))._field_Generics.len() == 0LL)) && ((*(_1023_f))._field_Params.len() == 1LL)) && (*((*(_1023_f))._field_Params[0LL]))._field_Mutable) && (!(_1b9b4d148_IsRef((*(_1023_f))._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1b9c0ad2c_Str(jule::Ptr<_1b9b4e26a_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || ((*(_2419_f))._field_Owner == nullptr)) || (!(*(_2419_f))._field_Ident.equal("Str", 3))) || (*(_2419_f))._field_Statically) || (*(_2419_f))._field_Unsafety) || _1b9b4e6dd_IsVoid(_2419_f.ptr())) || ((*(_2419_f))._field_Generics.len() != 0LL)) || ((*(_2419_f))._field_Params.len() != 1LL)) || (*((*(_2419_f))._field_Params[0LL]))._field_Mutable) || _1b9b4d148_IsRef((*(_2419_f))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1b9b5216e_FnIns> _3813_ins = (*(_2419_f))._field_Instances[0LL];;
	jule::Ptr<_1b9c95ca7_Prim> _399_prim = _1b9c9082e_Prim((*(_3813_ins))._field_Result.ptr());;
	if ((_399_prim == nullptr)) {
		return false;;
	};
	return _1b9c9923e_IsStr(_399_prim.ptr());;
}



inline jule::Bool static__1b9c0b1a1_logical(jule::Ptr<_1b9b4e26a_Fn>* _4624_f, jule::Str _4632_ident) {
	if (((((((((((((((*(_4624_f)) == nullptr) || ((*((*(_4624_f))))._field_Ident != _4632_ident)) || ((*((*(_4624_f))))._field_Owner == nullptr)) || ((*((*(_4624_f))))._field_Instances.len() == 0LL)) || (*((*(_4624_f))))._field_Statically) || (*((*(_4624_f))))._field_Unsafety) || _1b9b4e6dd_IsVoid((*(_4624_f)).ptr())) || ((*((*(_4624_f))))._field_Generics.len() != 0LL)) || ((*((*(_4624_f))))._field_Params.len() != 2LL)) || (*((*((*(_4624_f))))._field_Params[0LL]))._field_Mutable) || _1b9b4d148_IsRef((*((*(_4624_f))))._field_Params[0LL].ptr())) || (*((*((*(_4624_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_4624_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1b9b5216e_FnIns> _6313_ins = (*((*(_4624_f))))._field_Instances[0LL];;
	jule::Ptr<_1b9c95ca7_Prim> _649_prim = _1b9c9082e_Prim((*(_6313_ins))._field_Result.ptr());;
	if (((_649_prim == nullptr) || (!(_1b9c98ea8_IsBool(_649_prim.ptr()))))) {
		return false;;
	};
	return ((*(_6313_ins))._field_Owner == _1b9c91da2_Struct((*((*(_6313_ins))._field_Params[1LL]))._field_Kind.ptr()));;
}



inline jule::Bool static__1b9c0b46a_Eq(jule::Ptr<_1b9b4e26a_Fn> _7218_f) {
	return static__1b9c0b1a1_logical(&(_7218_f), jule::Str::lit("Eq", 2));;
}



inline jule::Bool static__1b9c0b734_Gt(jule::Ptr<_1b9b4e26a_Fn> _7718_f) {
	return static__1b9c0b1a1_logical(&(_7718_f), jule::Str::lit("Gt", 2));;
}



inline jule::Bool static__1b9c0b9ed_GtEq(jule::Ptr<_1b9b4e26a_Fn> _8220_f) {
	return static__1b9c0b1a1_logical(&(_8220_f), jule::Str::lit("GtEq", 4));;
}



inline jule::Bool static__1b9c0bcb7_Lt(jule::Ptr<_1b9b4e26a_Fn> _8718_f) {
	return static__1b9c0b1a1_logical(&(_8718_f), jule::Str::lit("Lt", 2));;
}



inline jule::Bool static__1b9c0c081_LtEq(jule::Ptr<_1b9b4e26a_Fn> _9220_f) {
	return static__1b9c0b1a1_logical(&(_9220_f), jule::Str::lit("LtEq", 4));;
}



inline jule::Bool static__1b9c0c405_result(jule::Ptr<_1b9b4e26a_Fn>* _9623_f, jule::Str _9631_ident) {
	if (((((((((((((((*(_9623_f)) == nullptr) || ((*((*(_9623_f))))._field_Ident != _9631_ident)) || ((*((*(_9623_f))))._field_Owner == nullptr)) || ((*((*(_9623_f))))._field_Instances.len() == 0LL)) || (*((*(_9623_f))))._field_Statically) || (*((*(_9623_f))))._field_Unsafety) || _1b9b4e6dd_IsVoid((*(_9623_f)).ptr())) || ((*((*(_9623_f))))._field_Generics.len() != 0LL)) || ((*((*(_9623_f))))._field_Params.len() != 2LL)) || (*((*((*(_9623_f))))._field_Params[0LL]))._field_Mutable) || _1b9b4d148_IsRef((*((*(_9623_f))))._field_Params[0LL].ptr())) || (*((*((*(_9623_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_9623_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1b9b5216e_FnIns> _11313_ins = (*((*(_9623_f))))._field_Instances[0LL];;
	return (_1b9c91da2_Struct((*(_11313_ins))._field_Result.ptr()) == (*(_11313_ins))._field_Owner);;
}



inline jule::Bool static__1b9c0c6be_Shl(jule::Ptr<_1b9b4e26a_Fn> _11819_f) {
	return static__1b9c0c405_result(&(_11819_f), jule::Str::lit("Shl", 3));;
}



inline jule::Bool static__1b9c0c988_Shr(jule::Ptr<_1b9b4e26a_Fn> _12319_f) {
	return static__1b9c0c405_result(&(_12319_f), jule::Str::lit("Shr", 3));;
}



inline jule::Bool static__1b9c0cc52_Add(jule::Ptr<_1b9b4e26a_Fn> _12819_f) {
	return static__1b9c0c405_result(&(_12819_f), jule::Str::lit("Add", 3));;
}



inline jule::Bool static__1b9c0d01b_Sub(jule::Ptr<_1b9b4e26a_Fn> _13319_f) {
	return static__1b9c0c405_result(&(_13319_f), jule::Str::lit("Sub", 3));;
}



inline jule::Bool static__1b9c0d2d5_Div(jule::Ptr<_1b9b4e26a_Fn> _13819_f) {
	return static__1b9c0c405_result(&(_13819_f), jule::Str::lit("Div", 3));;
}



inline jule::Bool static__1b9c0d59e_Mul(jule::Ptr<_1b9b4e26a_Fn> _14319_f) {
	return static__1b9c0c405_result(&(_14319_f), jule::Str::lit("Mul", 3));;
}



inline jule::Bool static__1b9c0d868_Mod(jule::Ptr<_1b9b4e26a_Fn> _14819_f) {
	return static__1b9c0c405_result(&(_14819_f), jule::Str::lit("Mod", 3));;
}



inline jule::Bool static__1b9c0db32_BitAnd(jule::Ptr<_1b9b4e26a_Fn> _15322_f) {
	return static__1b9c0c405_result(&(_15322_f), jule::Str::lit("BitAnd", 6));;
}



inline jule::Bool static__1b9c0ddeb_BitOr(jule::Ptr<_1b9b4e26a_Fn> _15821_f) {
	return static__1b9c0c405_result(&(_15821_f), jule::Str::lit("BitOr", 5));;
}



inline jule::Bool static__1b9c0e1b5_BitXor(jule::Ptr<_1b9b4e26a_Fn> _16322_f) {
	return static__1b9c0c405_result(&(_16322_f), jule::Str::lit("BitXor", 6));;
}



inline jule::Bool static__1b9c0e539_unary(jule::Ptr<_1b9b4e26a_Fn>* _16722_f, jule::Str _16730_ident) {
	if (((((((((((((*(_16722_f)) == nullptr) || ((*((*(_16722_f))))._field_Ident != _16730_ident)) || ((*((*(_16722_f))))._field_Owner == nullptr)) || ((*((*(_16722_f))))._field_Instances.len() == 0LL)) || (*((*(_16722_f))))._field_Statically) || (*((*(_16722_f))))._field_Unsafety) || _1b9b4e6dd_IsVoid((*(_16722_f)).ptr())) || ((*((*(_16722_f))))._field_Generics.len() != 0LL)) || ((*((*(_16722_f))))._field_Params.len() != 1LL)) || (*((*((*(_16722_f))))._field_Params[0LL]))._field_Mutable) || _1b9b4d148_IsRef((*((*(_16722_f))))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1b9b5216e_FnIns> _18213_ins = (*((*(_16722_f))))._field_Instances[0LL];;
	return (_1b9c91da2_Struct((*(_18213_ins))._field_Result.ptr()) == (*(_18213_ins))._field_Owner);;
}



inline jule::Bool static__1b9c0e803_Neg(jule::Ptr<_1b9b4e26a_Fn> _18719_f) {
	return static__1b9c0e539_unary(&(_18719_f), jule::Str::lit("Neg", 3));;
}



inline jule::Bool static__1b9c0eabc_Pos(jule::Ptr<_1b9b4e26a_Fn> _19219_f) {
	return static__1b9c0e539_unary(&(_19219_f), jule::Str::lit("Pos", 3));;
}



inline jule::Bool static__1b9c0ed86_BitNot(jule::Ptr<_1b9b4e26a_Fn> _19722_f) {
	return static__1b9c0e539_unary(&(_19722_f), jule::Str::lit("BitNot", 6));;
}



inline jule::Bool static__1b9c1020a_assign(jule::Ptr<_1b9b4e26a_Fn>* _20123_f, jule::Str _20131_ident) {
	if (((((((((((((((*(_20123_f)) == nullptr) || ((*((*(_20123_f))))._field_Ident != _20131_ident)) || ((*((*(_20123_f))))._field_Owner == nullptr)) || ((*((*(_20123_f))))._field_Instances.len() == 0LL)) || (*((*(_20123_f))))._field_Statically) || (*((*(_20123_f))))._field_Unsafety) || (!(_1b9b4e6dd_IsVoid((*(_20123_f)).ptr())))) || ((*((*(_20123_f))))._field_Generics.len() != 0LL)) || ((*((*(_20123_f))))._field_Params.len() != 2LL)) || (!((*((*((*(_20123_f))))._field_Params[0LL]))._field_Mutable))) || _1b9b4d148_IsRef((*((*(_20123_f))))._field_Params[0LL].ptr())) || (*((*((*(_20123_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_20123_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1b9c104c4_AddAssign(jule::Ptr<_1b9b4e26a_Fn> _22125_f) {
	return static__1b9c1020a_assign(&(_22125_f), jule::Str::lit("AddAssign", 9));;
}



inline jule::Bool static__1b9c1078d_SubAssign(jule::Ptr<_1b9b4e26a_Fn> _22625_f) {
	return static__1b9c1020a_assign(&(_22625_f), jule::Str::lit("SubAssign", 9));;
}



inline jule::Bool static__1b9c10a57_DivAssign(jule::Ptr<_1b9b4e26a_Fn> _23125_f) {
	return static__1b9c1020a_assign(&(_23125_f), jule::Str::lit("DivAssign", 9));;
}



inline jule::Bool static__1b9c10d21_MulAssign(jule::Ptr<_1b9b4e26a_Fn> _23625_f) {
	return static__1b9c1020a_assign(&(_23625_f), jule::Str::lit("MulAssign", 9));;
}



inline jule::Bool static__1b9c110da_ModAssign(jule::Ptr<_1b9b4e26a_Fn> _24125_f) {
	return static__1b9c1020a_assign(&(_24125_f), jule::Str::lit("ModAssign", 9));;
}



inline jule::Bool static__1b9c113a4_ShlAssign(jule::Ptr<_1b9b4e26a_Fn> _24625_f) {
	return static__1b9c1020a_assign(&(_24625_f), jule::Str::lit("ShlAssign", 9));;
}



inline jule::Bool static__1b9c1166d_ShrAssign(jule::Ptr<_1b9b4e26a_Fn> _25125_f) {
	return static__1b9c1020a_assign(&(_25125_f), jule::Str::lit("ShrAssign", 9));;
}



inline jule::Bool static__1b9c11937_BitOrAssign(jule::Ptr<_1b9b4e26a_Fn> _25627_f) {
	return static__1b9c1020a_assign(&(_25627_f), jule::Str::lit("BitOrAssign", 11));;
}



inline jule::Bool static__1b9c11c01_BitAndAssign(jule::Ptr<_1b9b4e26a_Fn> _26128_f) {
	return static__1b9c1020a_assign(&(_26128_f), jule::Str::lit("BitAndAssign", 12));;
}



inline jule::Bool static__1b9c11eba_BitXorAssign(jule::Ptr<_1b9b4e26a_Fn> _26628_f) {
	return static__1b9c1020a_assign(&(_26628_f), jule::Str::lit("BitXorAssign", 12));;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9c0a425_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1b9c4532d_pushErr(_1b9c44d33_typeCompatibilityChecker* _self_, jule::Str _11826_fmt, jule::Slice<jule::Any> _11839_args) {
	_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11826_fmt, _11839_args);
}



inline jule::Bool _1b9c455b4_checkTrait(_1b9c44d33_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1b9c8e2ab_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1b9b62514_Trait> _12613_trt = _1b9c92138_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _12713_ref = false;;
	{
		
		if ((_1b9c90ab5_Sptr((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1ca10bad0:;
			{
				_12713_ref=true;
				(*(_self_))._field_src=(*(_1b9c90ab5_Sptr((*(_self_))._field_src.ptr())))._field_Elem;
				if ((_1b9c91da2_Struct((*(_self_))._field_src.ptr()) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1ca10bb57;
			}
		}
		else if ((_1b9c91da2_Struct((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1ca10bb57:;
			{
				jule::Ptr<_1b9b3c137_StructIns> _13713_s = _1b9c91da2_Struct((*(_self_))._field_src.ptr());;
				if ((!(_1b9b3a9e8_IsImplements((*(_13713_s))._field_Decl.ptr(), _12613_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_12713_ref)) && _1b9c43903_traitHasReferenceReceiver(&(_12613_trt)))) {
					_1b9c4532d_pushErr(_self_, jule::Str::lit("trait has reference receiver parameter used method, cannot assign non-reference instance", 88), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1b9c92138_Trait((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1ca10bbce:;
			{
				jule::Ptr<_1b9b62514_Trait> _14717_base = _1b9c92138_Trait((*(_self_))._field_src.ptr());;
				if ((_12613_trt == _14717_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_1ca1113ba:;
				{
					auto expr = &((*(_14717_base))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ca1117a5:;
					if (it != expr_end) {
						jule::Ptr<_1b9b393a9_Struct> _15220_s1 = *it;
						{
							{
								auto expr = &((*(_12613_trt))._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ca112212:;
								if (it != expr_end) {
									jule::Ptr<_1b9b393a9_Struct> _15324_s2 = *it;
									{
										if ((_15220_s1 == _15324_s2)) {
											goto _iter_next_1ca1117a5;
										};
									}
									_iter_next_1ca112212:;
									++it;
									goto _iter_begin_1ca112212;
								}
								_iter_end_1ca112212:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1ca1117a5:;
						++it;
						goto _iter_begin_1ca1117a5;
					}
					_iter_end_1ca1117a5:;
				};
				{
					auto expr = &((*(_12613_trt))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ca111563:;
					if (it != expr_end) {
						jule::Ptr<_1b9b4e26a_Fn> _16025_m1 = *it;
						{
							jule::Ptr<_1b9b4e26a_Fn> _16121_m2 = _1b9b631b3_FindMethod(_14717_base.ptr(), (*(_16025_m1))._field_Ident);;
							if ((_16121_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1b9b5216e_FnIns> _16517_m1k = _1b9bddbab_getTraitCheckFnKind((*(_self_))._field_s, &(_16025_m1));;
							jule::Ptr<_1b9b5216e_FnIns> _16617_m2k = _1b9bddbab_getTraitCheckFnKind((*(_self_))._field_s, &(_16121_m2));;
							if ((!(_1b9b530d7_equalTrait(_16517_m1k, &(_16617_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1ca111563:;
						++it;
						goto _iter_begin_1ca111563;
					}
					_iter_end_1ca111563:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ca10ba25:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1ca10b9c0:;
	};
}



inline jule::Bool _1b9c4584a_checkPtr(_1b9c44d33_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1b9c8e2ab_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1b9c9d09a_Ptr> _18113_dest = _1b9c90d4b_Ptr((*(_self_))._field_dest.ptr());;
	if (_1b9c9dad4_IsUnsafe(_18113_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1b9c8d8d7_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1b9c45ad1_checkPrim(_1b9c44d33_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*((*(_self_))._field_dest))._field_Variadic))) {
		jule::Ptr<_1b9c95ca7_Prim> _19013_prim = _1b9c9082e_Prim((*(_self_))._field_dest.ptr());;
		if (((_19013_prim != nullptr) && _1b9c994c5_IsAny(_19013_prim.ptr()))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1b9c8d8d7_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1b9c45ecc_typeEnum(_1b9c44d33_typeCompatibilityChecker* _self_, jule::Ptr<_1b9b66419_TypeEnum>* _19828_e, jule::Ptr<_1b9c8d1cd_TypeKind>* _19847_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_19828_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca118d51:;
		if (it != expr_end) {
			jule::Ptr<_1b9b65d42_TypeEnumItem> _19921_item = *it;
			{
				if (_1b9c8d8d7_Equal((*((*(_19921_item))._field_Kind))._field_Kind, (*(_19847_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1b9b66419_TypeEnum> _20317_ke = _1b9c91368_TypeEnum((*((*(_19921_item))._field_Kind))._field_Kind.ptr());;
				if ((_20317_ke == nullptr)) {
					goto _iter_next_1ca118d51;
				};
				if (_1b9c45ecc_typeEnum(_self_, &(_20317_ke), _19847_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1ca118d51:;
			++it;
			goto _iter_begin_1ca118d51;
		}
		_iter_end_1ca118d51:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1b9c46263_checkTypeEnum(_1b9c44d33_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1b9c8d8d7_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1b9b66419_TypeEnum> _21813_e = _1b9c91368_TypeEnum((*(_self_))._field_dest.ptr());;
	__jule_func_result = _1b9c45ecc_typeEnum(_self_, &(_21813_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1b9c464e9_check(_1b9c44d33_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1b9c90d4b_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1b9c4584a_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1b9c9007b_NilCompatible((*(_self_))._field_dest.ptr())) {
		if (_1b9c8e2ab_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1b9c9082e_Prim((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1ca11e560:;
			{
				__jule_func_result = _1b9c45ad1_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1b9c91368_TypeEnum((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1ca11db25:;
			{
				__jule_func_result = _1b9c46263_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1b9c92138_Trait((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1ca11db8b:;
			{
				__jule_func_result = _1b9c455b4_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ca11daae:;
			{
				__jule_func_result = _1b9c8d8d7_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1ca11d32d:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1b9c44d33_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _1b9c47077_pushErr(_1b9c46ad2_assignTypeChecker* _self_, jule::Str _25426_fmt, jule::Slice<jule::Any> _25439_args) {
	_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25426_fmt, _25439_args);
}



inline jule::Bool _1b9c4730d_checkValidity(_1b9c46ad2_assignTypeChecker* _self_) {
	jule::Bool _25913_valid = true;;
	{
		
		if ((_1b9c91b1b_Fn((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca12209b:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _26213_f = _1b9c91b1b_Fn((*((*(_self_))._field_d))._field_Kind.ptr());;
				{
					
					if (_1b9b53604_IsBuiltin(_26213_f.ptr())) {
						_case_begin_1ca123751:;
						{
							_1b9c47077_pushErr(_self_, jule::Str::lit("builtin define cannot use as anonymous function", 47), jule::Slice<jule::Any>());
							_25913_valid=false;
						}
					}
					else if ((*((*(_26213_f))._field_Decl))._field_Binded) {
						_case_begin_1ca1237c8:;
						{
							_1b9c47077_pushErr(_self_, jule::Str::lit("binded functions cannot use as anonymous function", 49), jule::Slice<jule::Any>());
							_25913_valid=false;
						}
					}
					else if (((!((*((*(_26213_f))._field_Decl))._field_Statically)) && _1b9b4e974_IsMethod((*(_26213_f))._field_Decl.ptr()))) {
						_case_begin_1ca123850:;
						{
							_1b9c47077_pushErr(_self_, jule::Str::lit("non-static methods cannot use as anonymous function", 51), jule::Slice<jule::Any>());
							_25913_valid=false;
						}
					}
					else if ((((*((*(_26213_f))._field_Decl))._field_Generics.len() > 0LL) && ((*(_26213_f))._field_Generics.len() == 0LL))) {
						_case_begin_1ca1238c7:;
						{
							_1b9c47077_pushErr(_self_, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
							_1b9bd5367_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("instantiate generic function to use as anonymous function", 57), jule::Slice<jule::Any>());
							_25913_valid=false;
						}
					}
					_match_end_1ca123685:;
				};
			}
		}
		else if ((_1b9c92655_Tup((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca122123:;
			{
				_1b9c47077_pushErr(_self_, jule::Str::lit("tuples cannot assign to single define in same time", 50), jule::Slice<jule::Any>());
				_25913_valid=false;
			}
		}
		_match_end_1ca121ee1:;
	};
	return _25913_valid;;
}



inline jule::Bool _1b9c47594_checkConst(_1b9c46ad2_assignTypeChecker* _self_) {
	if (((((!(_1b9c5d8da_IsConst((*(_self_))._field_d.ptr()))) || (_1b9c9082e_Prim((*(_self_))._field_dest.ptr()) == nullptr)) || (_1b9c9082e_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) == nullptr)) || (!(_1ec6826e9_IsNum((*(_1b9c9082e_Prim((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Kind))))) {
		return false;;
	};
	if ((!__jule_any_type19_compare((*((*(_self_))._field_d))._field_Model, (*((*(_self_))._field_d))._field_Constant))) {
		return false;;
	};
	jule::Str _2999_kind = (*(_1b9c9082e_Prim((*(_self_))._field_dest.ptr())))._field_Kind;;
	{
		
		if (_1ec682430_IsFloat(_2999_kind)) {
			_case_begin_1ca12b35d:;
			{
				if ((!(_1b9c43c88_floatAssignable(&(_2999_kind), &((*(_self_))._field_d))))) {
					_1b9c47077_pushErr(_self_, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*((*((*(_self_))._field_d))._field_Constant))._field_Kind=_2999_kind;
			}
		}
		else if (_1ec6820de_IsInt(_2999_kind)) {
			_case_begin_1ca12b3d5:;
			{
				if ((!(_1b9c44849_intAssignable(_2999_kind, &((*(_self_))._field_d))))) {
					_1b9c47077_pushErr(_self_, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*((*((*(_self_))._field_d))._field_Constant))._field_Kind=_2999_kind;
			}
		}
		else {
			_case_begin_1ca12b2b4:;
			{
				return false;;
			}
		}
		_match_end_1ca12b25e:;
	};
	return true;;
}



inline jule::Bool _1b9c4782a_isPrim(_1b9c46ad2_assignTypeChecker* _self_) {
	if (((*((*(_self_))._field_dest))._field_Variadic || (*((*((*(_self_))._field_d))._field_Kind))._field_Variadic)) {
		return false;;
	};
	if ((_1b9c8e025_Binded((*(_self_))._field_dest.ptr()) || _1b9c8e025_Binded((*((*(_self_))._field_d))._field_Kind.ptr()))) {
		return false;;
	};
	return ((_1b9c9082e_Prim((*(_self_))._field_dest.ptr()) != nullptr) && (_1b9c9082e_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr));;
}



inline jule::Bool _1b9c47ab1_checkCompatibility(_1b9c46ad2_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1ca1314c8:;
			{
				return false;;
			}
		}
		else if ((!(_1b9c4730d_checkValidity(_self_)))) {
			_case_begin_1ca131550:;
			{
				return false;;
			}
		}
		else if (_1b9c47594_checkConst(_self_)) {
			_case_begin_1ca1315c7:;
			{
				return true;;
			}
		}
		else if ((_1b9c910d2_Enum((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca13164e:;
			{
				jule::Ptr<_1b9c8d1cd_TypeKind> _34317_dkind = (*(_self_))._field_dest;;
				if ((_1b9c910d2_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_34317_dkind=(*((*(_1b9c910d2_Enum((*(_self_))._field_dest.ptr())))._field_Kind))._field_Kind;
				} else if ((_1b9c9082e_Prim((*(_self_))._field_dest.ptr()) == nullptr)) {
					goto _match_end_1ca131396;
				};
				if (_1ec67dc56_TypesAreCompatible((*(_1b9c9082e_Prim((*((*(_1b9c910d2_Enum((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Kind))._field_Kind.ptr())))._field_Kind, (*(_1b9c9082e_Prim(_34317_dkind.ptr())))._field_Kind)) {
					return true;;
				};
			}
		}
		else if (_1b9c4782a_isPrim(_self_)) {
			_case_begin_1ca1316c6:;
			{
				jule::Ptr<_1b9c95ca7_Prim> _35313_dest = _1b9c9082e_Prim((*(_self_))._field_dest.ptr());;
				if (_1b9c994c5_IsAny(_35313_dest.ptr())) {
					return true;;
				};
				jule::Ptr<_1b9c95ca7_Prim> _35717_src = _1b9c9082e_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (_1ec67dc56_TypesAreCompatible((*(_35313_dest))._field_Kind, (*(_35717_src))._field_Kind)) {
					return true;;
				};
			}
		}
		_match_end_1ca131396:;
	};
	return _1b9bdceb8_checkTypeCompatibility((*(_self_))._field_s, &((*(_self_))._field_dest), &((*((*(_self_))._field_d))._field_Kind), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1b9c47d47_check(_1b9c46ad2_assignTypeChecker* _self_) {
	jule::Bool _3669_ok = _1b9c47ab1_checkCompatibility(_self_);;
	if ((_3669_ok && (!((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic)))) {
		_1b9caa6a1_applyImplicitCast(&((*(_self_))._field_dest), &((*(_self_))._field_d));
	};
	return _3669_ok;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9c46ad2_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ca1510ec_annotateConstraintElem(_1b9c4874e_dynamicTypeAnnotation* _self_, jule::Ptr<_1b9c8d1cd_TypeKind>* _38649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1ca1527b3:;
			{
				jule::Ptr<_1b9c8d1cd_TypeKind> _38921_elem = nullptr;;
				{
					
{
						_case_begin_1ca15363d:;
						{
							_38921_elem=(*(_1b9c915ee_Arr((*(_38649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1ca153583:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_1b9b1aa83_ArrTypeDecl>(&__jule_any_type69)))._field_Elem;
				return _1b9c49e59_annotateConstraint(_self_, &(_38921_elem));;
			}
		}
		_match_end_1ca15275d:;
	};
	return false;;
}

inline jule::Bool _1ca150959_annotateConstraintElem(_1b9c4874e_dynamicTypeAnnotation* _self_, jule::Ptr<_1b9c8d1cd_TypeKind>* _38649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1ca156223:;
			{
				jule::Ptr<_1b9c8d1cd_TypeKind> _38921_elem = nullptr;;
				{
					
{
						_case_begin_1ca157114:;
						{
							_38921_elem=(*(_1b9c91885_Slc((*(_38649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1ca156ee3:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_1b9b19be7_SlcTypeDecl>(&__jule_any_type70)))._field_Elem;
				return _1b9c49e59_annotateConstraint(_self_, &(_38921_elem));;
			}
		}
		_match_end_1ca1561bd:;
	};
	return false;;
}

inline jule::Bool _1ca152b04_annotateConstraintElem(_1b9c4874e_dynamicTypeAnnotation* _self_, jule::Ptr<_1b9c8d1cd_TypeKind>* _38649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1ca159b83:;
			{
				jule::Ptr<_1b9c8d1cd_TypeKind> _38921_elem = nullptr;;
				{
					
{
						_case_begin_1ca15aada:;
						{
							_38921_elem=(*(_1b9c90d4b_Ptr((*(_38649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1ca15a953:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_1b9b1a2e1_PtrTypeDecl>(&__jule_any_type71)))._field_Elem;
				return _1b9c49e59_annotateConstraint(_self_, &(_38921_elem));;
			}
		}
		_match_end_1ca159b2d:;
	};
	return false;;
}

inline jule::Bool _1ca1591c1_annotateConstraintElem(_1b9c4874e_dynamicTypeAnnotation* _self_, jule::Ptr<_1b9c8d1cd_TypeKind>* _38649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1ca15d2c4:;
			{
				jule::Ptr<_1b9c8d1cd_TypeKind> _38921_elem = nullptr;;
				{
					
{
						_case_begin_1ca15e292:;
						{
							_38921_elem=(*(_1b9c90ab5_Sptr((*(_38649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1ca15e094:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_1b9b19862_SptrTypeDecl>(&__jule_any_type72)))._field_Elem;
				return _1b9c49e59_annotateConstraint(_self_, &(_38921_elem));;
			}
		}
		_match_end_1ca15d26e:;
	};
	return false;;
}



inline jule::Bool _1b9c49145_annotateConstraintMap(_1b9c4874e_dynamicTypeAnnotation* _self_, jule::Ptr<_1b9c8d1cd_TypeKind>* _40645_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1ca140020:;
			{
				jule::Ptr<_1b9c9b94a_Map> _40917_m = _1b9c923be_Map((*(_40645_k)).ptr());;
				jule::Ptr<_1b9b1b2d1_MapTypeDecl> _41017_m2 = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1b9b1b2d1_MapTypeDecl>(&__jule_any_type73);;
				(*(_self_))._field_c=(*(_41017_m2))._field_Key;
				if ((!(_1b9c49e59_annotateConstraint(_self_, &((*(_40917_m))._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=(*(_41017_m2))._field_Val;
				__jule_func_result = _1b9c49e59_annotateConstraint(_self_, &((*(_40917_m))._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1ca13eeba:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1b9c49486_annotateConstraintTup(_1b9c4874e_dynamicTypeAnnotation* _self_, jule::Ptr<_1b9c8d1cd_TypeKind>* _42145_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1ca142b05:;
			{
				jule::Ptr<_1b9b19ee4_TupleTypeDecl> _42417_tup = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1b9b19ee4_TupleTypeDecl>(&__jule_any_type74);;
				jule::Ptr<_1b9c9ad9a_Tuple> _42517_tup2 = _1b9c92655_Tup((*(_42145_k)).ptr());;
				{
					auto expr = &((*(_42517_tup2))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ca143d59:;
					if (it != expr_end) {
						jule::Ptr<_1b9c8d1cd_TypeKind> _42625_t2 = *it;
						{
							{
								auto expr = &((*(_42417_tup))._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ca143892:;
								if (it != expr_end) {
									jule::Ptr<_1b9b187b7_TypeDecl> _42729_t = *it;
									{
										(*(_self_))._field_c=_42729_t;
										if (_1b9c49e59_annotateConstraint(_self_, &(_42625_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1ca143892:;
									++it;
									goto _iter_begin_1ca143892;
								}
								_iter_end_1ca143892:;
							};
						}
						_iter_next_1ca143d59:;
						++it;
						goto _iter_begin_1ca143d59;
					}
					_iter_end_1ca143d59:;
				};
			}
		}
		_match_end_1ca142aa0:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1b9c497c7_annotateConstraintFn(_1b9c4874e_dynamicTypeAnnotation* _self_, jule::Ptr<_1b9c8d1cd_TypeKind>* _43844_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ca1450ad:;
			{
				jule::Ptr<_1b9b2a477_FnDecl> _44117_pf = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1b9b2a477_FnDecl>(&__jule_any_type14);;
				jule::Ptr<_1b9b5216e_FnIns> _44217_f = _1b9c91b1b_Fn((*(_43844_k)).ptr());;
				{
					auto expr = &((*(_44217_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ca146994:;
					if (it != expr_end) {
						jule::I32 _44318_i = it - expr->begin();
						jule::Ptr<_1b9b511c3_ParamIns> _44325_fp = *it;
						{
							(*(_self_))._field_c=(*((*(_44117_pf))._field_Params[_44318_i]))._field_Kind;
							if (_1b9c49e59_annotateConstraint(_self_, &((*(_44325_fp))._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1ca146994:;
						++it;
						_44318_i++;
						goto _iter_begin_1ca146994;
					}
					_iter_end_1ca146994:;
				};
				if (((*(_44117_pf))._field_Result != nullptr)) {
					(*(_self_))._field_c=(*((*(_44117_pf))._field_Result))._field_Kind;
					if (_1b9c49e59_annotateConstraint(_self_, &((*(_44217_f))._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1ca145058:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1b9c49b18_annotateConstraintIdent(_1b9c4874e_dynamicTypeAnnotation* _self_, jule::Ptr<_1b9c8d1cd_TypeKind>* _45947_k) {
	jule::Ptr<_1b9b18dc2_IdentTypeDecl> _46013_ident = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1b9b18dc2_IdentTypeDecl>(&__jule_any_type20);;
	jule::Ptr<_1b9b3c137_StructIns> _46113_s = _1b9c91da2_Struct((*(_45947_k)).ptr());;
	{
		auto expr = &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca149d4e:;
		if (it != expr_end) {
			jule::I32 _46213_i = it - expr->begin();
			jule::Ptr<_1b9b259c2_GenericDecl> _46216_g = *it;
			{
				if (((*(_46216_g))._field_Ident == (*(_46013_ident))._field_Ident)) {
					jule::Ptr<_1b9c8b7e7_InsGeneric> _46421_fg = (*((*(_self_))._field_f))._field_Generics[_46213_i];;
					if ((_46421_fg != nullptr)) {
						return false;;
					};
					_1b9c4a2bc_pushGeneric(_self_, _45947_k, _46213_i);
					return true;;
				};
				if ((_46113_s == nullptr)) {
					goto _iter_next_1ca149d4e;
				};
				jule::Ptr<_1b9b187b7_TypeDecl> _47417_c = (*(_self_))._field_c;;
				{
					auto expr = &((*(_46013_ident))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ca14aca6:;
					if (it != expr_end) {
						jule::Ptr<_1b9b187b7_TypeDecl> _47525_ig = *it;
						{
							(*(_self_))._field_c=_47525_ig;
							{
								auto expr = &((*(_46113_s))._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ca14d44b:;
								if (it != expr_end) {
									jule::Ptr<_1b9c8b7e7_InsGeneric> _47729_sg = *it;
									{
										if (_1b9c49e59_annotateConstraint(_self_, &((*(_47729_sg))._field_Kind))) {
											return true;;
										};
									}
									_iter_next_1ca14d44b:;
									++it;
									goto _iter_begin_1ca14d44b;
								}
								_iter_end_1ca14d44b:;
							};
						}
						_iter_next_1ca14aca6:;
						++it;
						goto _iter_begin_1ca14aca6;
					}
					_iter_end_1ca14aca6:;
				};
				(*(_self_))._field_c=_47417_c;
			}
			_iter_next_1ca149d4e:;
			++it;
			_46213_i++;
			goto _iter_begin_1ca149d4e;
		}
		_iter_end_1ca149d4e:;
	};
	return false;;
}



inline jule::Bool _1b9c49e59_annotateConstraint(_1b9c4874e_dynamicTypeAnnotation* _self_, jule::Ptr<_1b9c8d1cd_TypeKind>* _48842_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1ca14d13d:;
			{
				return _1b9c49b18_annotateConstraintIdent(_self_, _48842_k);;
			}
		}
		_match_end_1ca14d0d8:;
	};
	{
		
		if ((_1b9c915ee_Arr((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1ca14e837:;
			{
				return _1ca1510ec_annotateConstraintElem(_self_, _48842_k);;
			}
		}
		else if ((_1b9c91885_Slc((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1ca14e8ae:;
			{
				return _1ca150959_annotateConstraintElem(_self_, _48842_k);;
			}
		}
		else if ((_1b9c90d4b_Ptr((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1ca14e936:;
			{
				return _1ca152b04_annotateConstraintElem(_self_, _48842_k);;
			}
		}
		else if ((_1b9c90ab5_Sptr((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1ca150140:;
			{
				return _1ca1591c1_annotateConstraintElem(_self_, _48842_k);;
			}
		}
		else if ((_1b9c923be_Map((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1ca1501a6:;
			{
				return _1b9c49145_annotateConstraintMap(_self_, _48842_k);;
			}
		}
		else if ((_1b9c91b1b_Fn((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1ca15021c:;
			{
				return _1b9c497c7_annotateConstraintFn(_self_, _48842_k);;
			}
		}
		else if ((_1b9c92655_Tup((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1ca150283:;
			{
				return _1b9c49486_annotateConstraintTup(_self_, _48842_k);;
			}
		}
		else {
			_case_begin_1ca14ec22:;
			{
				return false;;
			}
		}
		_match_end_1ca14ebbc:;
	};
}



inline void _1b9c4a2bc_pushGeneric(_1b9c4874e_dynamicTypeAnnotation* _self_, jule::Ptr<_1b9c8d1cd_TypeKind>* _51335_k, jule::I32 _51349_i) {
	(*((*(_self_))._field_f))._field_Generics[_51349_i]=jule::new_ptr<_1b9c8b7e7_InsGeneric>(_1b9c8b7e7_InsGeneric{._field_Kind=(*(_51335_k)), });
	jule::Ptr<_1b9b259c2_GenericDecl> _51513_gd = (*((*((*(_self_))._field_f))._field_Decl))._field_Generics[_51349_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca162185:;
		if (it != expr_end) {
			jule::Ptr<_1b9c8d1cd_TypeKind> _51621_ignored = *it;
			{
				if (((*(_51513_gd))._field_Ident == _1b9c8d596_Str(_51621_ignored.ptr()))) {
					(*(_51621_ignored))._field_Kind=(*((*(_51335_k))))._field_Kind;
				};
			}
			_iter_next_1ca162185:;
			++it;
			goto _iter_begin_1ca162185;
		}
		_iter_end_1ca162185:;
	};
	if ((((*(_51513_gd))._field_Constraint == nullptr) || ((*((*(_51513_gd))._field_Constraint))._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=(*((*(_51513_gd))._field_Constraint))._field_Mask[0LL];
	_1b9c49e59_annotateConstraint(_self_, _51335_k);
}



inline jule::Bool _1b9c4a60d_annotatePrim(_1b9c4874e_dynamicTypeAnnotation* _self_, jule::Ptr<_1b9c8d1cd_TypeKind>* _52843_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1b9c4c632_annotateAny(_self_, _52843_k);
	return __jule_func_result;;
}



inline jule::Bool _1b9c4a94e_annotateArr(_1b9c4874e_dynamicTypeAnnotation* _self_, jule::Ptr<_1b9c8d1cd_TypeKind>* _53242_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b9c9c5c7_Arr> _53313_parr = _1b9c915ee_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_53313_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b9c9c5c7_Arr> _53713_arr = _1b9c915ee_Arr((*(_53242_k)).ptr());;
	(*(_self_))._field_k=(&((*(_53313_parr))._field_Elem));
	__jule_func_result = _1b9c4c973_annotateKind(_self_, &((*(_53713_arr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1b9c4ac90_annotateSlc(_1b9c4874e_dynamicTypeAnnotation* _self_, jule::Ptr<_1b9c8d1cd_TypeKind>* _54242_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b9c9a2a6_Slc> _54313_pslc = _1b9c91885_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_54313_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b9c9a2a6_Slc> _54713_slc = _1b9c91885_Slc((*(_54242_k)).ptr());;
	(*(_self_))._field_k=(&((*(_54313_pslc))._field_Elem));
	__jule_func_result = _1b9c4c973_annotateKind(_self_, &((*(_54713_slc))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1b9c4b18b_checkMapKey(_1b9c4874e_dynamicTypeAnnotation* _self_, jule::Ptr<_1b9c8d1cd_TypeKind>* _55241_k, jule::Ptr<_1b9c8d1cd_TypeKind>* _55261_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b9c8d1cd_TypeKind>* _55313_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_55241_k;
	__jule_func_result=_1b9c4c973_annotateKind(_self_, _55261_ck);
	(*(_self_))._field_k=_55313_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1b9c4b4cc_annotateMap(_1b9c4874e_dynamicTypeAnnotation* _self_, jule::Ptr<_1b9c8d1cd_TypeKind>* _56042_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b9c9b94a_Map> _56113_pmap = _1b9c923be_Map((*((*(_self_))._field_k)).ptr());;
	if ((_56113_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b9c9b94a_Map> _56513_m = _1b9c923be_Map((*(_56042_k)).ptr());;
	__jule_func_result = (_1b9c4b18b_checkMapKey(_self_, (&((*(_56113_pmap))._field_Key)), &((*(_56513_m))._field_Key)) && _1b9c4b18b_checkMapKey(_self_, (&((*(_56113_pmap))._field_Val)), &((*(_56513_m))._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1b9c4b81d_annotateFn(_1b9c4874e_dynamicTypeAnnotation* _self_, jule::Ptr<_1b9c8d1cd_TypeKind>* _57041_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b9b5216e_FnIns> _57113_pf = _1b9c91b1b_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_57113_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b9b5216e_FnIns> _57513_f = _1b9c91b1b_Fn((*(_57041_k)).ptr());;
	{
		
		if (((*(_57113_pf))._field_Params.len() != (*(_57513_f))._field_Params.len())) {
			_case_begin_1ca16db64:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1b9b4e6dd_IsVoid((*(_57113_pf))._field_Decl.ptr()) != _1b9b4e6dd_IsVoid((*(_57513_f))._field_Decl.ptr()))) {
			_case_begin_1ca16dbdb:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1ca16daed:;
	};
	__jule_func_result=true;
	jule::Ptr<_1b9c8d1cd_TypeKind>* _58413_old = (*(_self_))._field_k;;
	{
		auto expr = &((*(_57513_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca17035d:;
		if (it != expr_end) {
			jule::I32 _58514_i = it - expr->begin();
			jule::Ptr<_1b9b511c3_ParamIns> _58521_fp = *it;
			{
				(*(_self_))._field_k=(&((*((*(_57113_pf))._field_Params[_58514_i]))._field_Kind));
				__jule_func_result=(_1b9c4c973_annotateKind(_self_, &((*(_58521_fp))._field_Kind)) && __jule_func_result);
			}
			_iter_next_1ca17035d:;
			++it;
			_58514_i++;
			goto _iter_begin_1ca17035d;
		}
		_iter_end_1ca17035d:;
	};
	if ((!(_1b9b4e6dd_IsVoid((*(_57113_pf))._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&((*(_57113_pf))._field_Result));
		__jule_func_result=(_1b9c4c973_annotateKind(_self_, &((*(_57513_f))._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_58413_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1b9c4bb5e_annotatePtr(_1b9c4874e_dynamicTypeAnnotation* _self_, jule::Ptr<_1b9c8d1cd_TypeKind>* _59942_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b9c9d09a_Ptr> _60013_pptr = _1b9c90d4b_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_60013_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b9c9d09a_Ptr> _60413_ptr = _1b9c90d4b_Ptr((*(_59942_k)).ptr());;
	(*(_self_))._field_k=(&((*(_60013_pptr))._field_Elem));
	__jule_func_result = _1b9c4c973_annotateKind(_self_, &((*(_60413_ptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1b9c4bea0_annotateSptr(_1b9c4874e_dynamicTypeAnnotation* _self_, jule::Ptr<_1b9c8d1cd_TypeKind>* _60943_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b9c997d3_Sptr> _61013_ssptr = _1b9c90ab5_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_61013_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b9c997d3_Sptr> _61413_sptr = _1b9c90ab5_Sptr((*(_60943_k)).ptr());;
	(*(_self_))._field_k=(&((*(_61013_ssptr))._field_Elem));
	__jule_func_result = _1b9c4c973_annotateKind(_self_, &((*(_61413_sptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1b9c4c2e1_annotateStruct(_1b9c4874e_dynamicTypeAnnotation* _self_, jule::Ptr<_1b9c8d1cd_TypeKind>* _61945_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b9b3c137_StructIns> _62013_s = _1b9c91da2_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_62013_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b9b3c137_StructIns> _62413_s2 = _1b9c91da2_Struct((*(_61945_k)).ptr());;
	if (((*(_62013_s))._field_Generics.len() != (*(_62413_s2))._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_62013_s))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca178a09:;
		if (it != expr_end) {
			jule::I32 _62814_i = it - expr->begin();
			jule::Ptr<_1b9c8b7e7_InsGeneric> _62821_g = *it;
			{
				jule::Ptr<_1b9c8b7e7_InsGeneric> _62917_g2 = (*(_62413_s2))._field_Generics[_62814_i];;
				if (_1b9c8d8d7_Equal((*(_62821_g))._field_Kind, (*(_62917_g2))._field_Kind)) {
					goto _iter_next_1ca178a09;
				};
				(*(_self_))._field_k=(&((*(_62821_g))._field_Kind));
				if ((!(_1b9c4c973_annotateKind(_self_, &((*(_62917_g2))._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ca178a09:;
			++it;
			_62814_i++;
			goto _iter_begin_1ca178a09;
		}
		_iter_end_1ca178a09:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b9c4c632_annotateAny(_1b9c4874e_dynamicTypeAnnotation* _self_, jule::Ptr<_1b9c8d1cd_TypeKind>* _64142_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _6429_kind = _1b9c8d596_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca17bd5e:;
		if (it != expr_end) {
			jule::I32 _64313_i = it - expr->begin();
			jule::Ptr<_1b9b259c2_GenericDecl> _64316_g = *it;
			{
				if ((_6429_kind != (*(_64316_g))._field_Ident)) {
					goto _iter_next_1ca17bd5e;
				};
				jule::Ptr<_1b9c8b7e7_InsGeneric> _64713_t = (*((*(_self_))._field_f))._field_Generics[_64313_i];;
				{
					
					if ((_64713_t == nullptr) || ((*(_64713_t))._field_Kind == nullptr)) {
						_case_begin_1ca17da53:;
						{
							_1b9c4a2bc_pushGeneric(_self_, _64142_k, _64313_i);
						}
					}
					else if ((!(_1b9c8d8d7_Equal((*(_64713_t))._field_Kind, (*(_64142_k)))))) {
						_case_begin_1ca17daca:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1ca17d932:;
				};
				(*((*((*(_self_))._field_k))))._field_Kind=(*((*(_64142_k))))._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1ca17bd5e:;
			++it;
			_64313_i++;
			goto _iter_begin_1ca17bd5e;
		}
		_iter_end_1ca17bd5e:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1b9c4c973_annotateKind(_1b9c4874e_dynamicTypeAnnotation* _self_, jule::Ptr<_1b9c8d1cd_TypeKind>* _66243_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1b9c4c632_annotateAny(_self_, _66243_k)) {
			_case_begin_1ca18113d:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1b9c9082e_Prim((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1ca1811b5:;
			{
				__jule_func_result = _1b9c4a60d_annotatePrim(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1b9c915ee_Arr((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1ca181429:;
			{
				__jule_func_result = _1b9c4a94e_annotateArr(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1b9c91885_Slc((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1ca181490:;
			{
				__jule_func_result = _1b9c4ac90_annotateSlc(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1b9c923be_Map((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1ca181506:;
			{
				__jule_func_result = _1b9c4b4cc_annotateMap(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1b9c91b1b_Fn((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1ca18157d:;
			{
				__jule_func_result = _1b9c4b81d_annotateFn(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1b9c90d4b_Ptr((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1ca181605:;
			{
				__jule_func_result = _1b9c4bb5e_annotatePtr(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1b9c90ab5_Sptr((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1ca181715:;
			{
				__jule_func_result = _1b9c4bea0_annotateSptr(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1b9c91da2_Struct((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1ca18177b:;
			{
				__jule_func_result = _1b9c4c2e1_annotateStruct(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ca18101c:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1ca180a77:;
	};
}



inline jule::Bool _1b9c4cc09_annotate(_1b9c4874e_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*((*(_self_))._field_p))._field_Kind));
	__jule_func_result = _1b9c4c973_annotateKind(_self_, &((*((*(_self_))._field_a))._field_Kind));
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9c4874e_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1b9c4db50_pushErrToken(_1b9c4d5ab_fnCallArgChecker* _self_, jule::Ptr<_1b9b032eb_Token> _70731_token, jule::Str _70746_fmt, jule::Slice<jule::Any> _70759_args) {
	_1b9bd5004_pushErr((*((*(_self_))._field_e))._field_s.ptr(), _70731_token, _70746_fmt, _70759_args);
}



inline void _1b9c4deb3_pushErr(_1b9c4d5ab_fnCallArgChecker* _self_, jule::Str _71126_fmt, jule::Slice<jule::Any> _71139_args) {
	_1b9c4db50_pushErrToken(_self_, (*(_self_))._field_errorToken, _71126_fmt, _71139_args);
}



inline jule::Slice<jule::Ptr<_1b9b511c3_ParamIns>> _1b9c4e249_getParams(_1b9c4d5ab_fnCallArgChecker* _self_) {
	if (((((*((*(_self_))._field_f))._field_Params.len() > 0LL) && ((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl != nullptr)) && _1b9b4cdb2_IsSelf((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl.ptr()))) {
		return (*((*(_self_))._field_f))._field_Params.slice(1LL);;
	};
	return (*((*(_self_))._field_f))._field_Params;;
}



inline jule::Bool _1b9c4e557_checkCounts(_1b9c4d5ab_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1b9b511c3_ParamIns>>* _72431_params) {
	jule::Bool __jule_func_result = false;
	jule::I32 _72513_n = (*(_72431_params)).len();;
	if (((_72513_n > 0LL) && _1b9b4cdb2_IsSelf((*((*(_72431_params))[0LL]))._field_Decl.ptr()))) {
		(_72513_n)--;
	};
	jule::I32 _73013_diff = (_72513_n - (*(_self_))._field_args.len());;
	jule::Str _73113_log = jule::Str();;
	{
		
		if ((_73013_diff == 0LL)) {
			_case_begin_1ca18cb1c:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_72513_n > 0LL) && (*((*((*(_72431_params))[(_72513_n - 1LL)]))._field_Decl))._field_Variadic)) {
			_case_begin_1ca18ca40:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_73013_diff < 0LL) || (_73013_diff > (*(_72431_params)).len()))) {
			_case_begin_1ca18c710:;
			{
				_73113_log=jule::Str::lit("argument overflow: passed more argument than expected to call @", 63);
			}
		}
		else {
			_case_begin_1ca18c699:;
			{
				_73113_log=jule::Str::lit("missing arguments to call @", 27);
			}
		}
		_match_end_1ca18c633:;
	};
	_23d16295d_StrBuilder _74213_err = static__23d162c7c_New(32LL);;
	_23d16b604_WriteStr(&_74213_err, (*((*((*(_self_))._field_f))._field_Decl))._field_Ident);
	_23d16b604_WriteStr(&_74213_err, jule::Str::lit("\n       wanted (", 16));
	{
		auto expr = _72431_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca18ea31:;
		if (it != expr_end) {
			jule::I32 _74513_i = it - expr->begin();
			jule::Ptr<_1b9b511c3_ParamIns> *_74516_p = it;
			{
				_23d16b604_WriteStr(&_74213_err, _1b9c8d596_Str((*((*(_74516_p))))._field_Kind.ptr()));
				if ((((*(_72431_params)).len() - _74513_i) > 1LL)) {
					_23d16b604_WriteStr(&_74213_err, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1ca18ea31:;
			++it;
			_74513_i++;
			goto _iter_begin_1ca18ea31;
		}
		_iter_end_1ca18ea31:;
	};
	_23d16b8ac_WriteByte(&_74213_err, ')');
	_1b9c4deb3_pushErr(_self_, _73113_log, jule::Slice<jule::Any>::make({jule::Any(_23d16bdeb_Str(&_74213_err), &__jule_any_type4)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1b9c4ea0d_checkArg(_1b9c4d5ab_fnCallArgChecker* _self_, jule::Ptr<_1b9b511c3_ParamIns>* _75632_p, jule::Ptr<_1b9c5d016_Data>* _75651_arg, jule::Ptr<_1b9b032eb_Token>* _75668_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1b9b5444b_parameterUsesGenerics(_75632_p, &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics)))) {
		__jule_func_result=((!((*((*((*(_75632_p))))._field_Decl))._field_Variadic)) && _1b9c56e00_isGoodValueToInfer(_75651_arg));
		if (__jule_func_result) {
			_1b9c4874e_dynamicTypeAnnotation _76121_dta = _1b9c4874e_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_75632_p)), ._field_a=(*(_75651_arg)), ._field_errorToken=(*(_75668_errorToken)), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1b9c4cc09_annotate(&_76121_dta);
		};
		if ((!(__jule_func_result))) {
			_1b9c4db50_pushErrToken(_self_, (*(_75668_errorToken)), jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1b9be1021_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, (*((*((*(_75632_p))))._field_Decl))._field_Mutable, (*((*((*(_75632_p))))._field_Decl))._field_Reference, &((*((*(_75632_p))))._field_Kind), _75651_arg, _75668_errorToken)) {
		_1b9bdca12_checkAssignType((*((*(_self_))._field_e))._field_s, (*((*((*(_75632_p))))._field_Decl))._field_Reference, &((*((*(_75632_p))))._field_Kind), _75651_arg, (*(_75668_errorToken)));
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b9c4ee09_push(_1b9c4d5ab_fnCallArgChecker* _self_, jule::Ptr<_1b9b511c3_ParamIns>* _78528_p, jule::Ptr<_1b9b1caeb_Expr> _78546_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b9c8d1cd_TypeKind> _78613_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _7879_oldImmut = (*((*(_self_))._field_e))._field_immutable;;
	(*((*(_self_))._field_e))._field_immutable=(!((*((*((*(_78528_p))))._field_Decl))._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*((*((*(_78528_p))))._field_Decl))._field_Variadic)))) {
		(*((*(_self_))._field_e))._field_prefix=(*((*(_78528_p))))._field_Kind;
	} else {
		(*((*(_self_))._field_e))._field_prefix=nullptr;
	};
	jule::Ptr<_1b9c5d016_Data> _79513_d = _1b9c7cbd4_evalExpr((*(_self_))._field_e, _78546_arg);;
	(*((*(_self_))._field_e))._field_prefix=_78613_old;
	(*((*(_self_))._field_e))._field_immutable=_7879_oldImmut;
	if ((_79513_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1b9c4ea0d_checkArg(_self_, _78528_p, &(_79513_d), &((*(_78546_arg))._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_79513_d))._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _1b9c50305_pushVariadic(_1b9c4d5ab_fnCallArgChecker* _self_, jule::Ptr<_1b9b511c3_ParamIns>* _80936_p, jule::I32 _80954_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _81113_variadiced = false;;
	jule::Bool _8129_more = ((_80954_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1b9b438d0_SliceExprModel> _81313_model = jule::new_ptr<_1b9b438d0_SliceExprModel>(_1b9b438d0_SliceExprModel{._field_ElemKind=(*((*(_80936_p))))._field_Kind, });;
	jule::Ptr<_1b9c8d1cd_TypeKind> _81713_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _8229_variadic = (*((*((*(_80936_p))))._field_Kind))._field_Variadic;;
	(*((*((*(_80936_p))))._field_Kind))._field_Variadic=false;
	__JULE_DEFER({
		(*((*((*(_80936_p))))._field_Kind))._field_Variadic=_8229_variadic;
	});;
	for (; (_80954_i < (*(_self_))._field_args.len()); (_80954_i)++) {
		{
			jule::Ptr<_1b9b1caeb_Expr> _82917_arg = (*(_self_))._field_args[_80954_i];;
			{
				auto &_match_expr{ (*(_82917_arg))._field_Kind };
				
				if (_match_expr.type == &__jule_any_type75) {
					_case_begin_1ca1a1438:;
					{
						(*((*(_self_))._field_e))._field_prefix=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(jule::new_ptr<_1b9c9a2a6_Slc>(_1b9c9a2a6_Slc{._field_Elem=(*((*(_80936_p))))._field_Kind}), 22)});
					}
				}
				else {
					_case_begin_1ca1a1081:;
					{
						(*((*(_self_))._field_e))._field_prefix=(*((*(_80936_p))))._field_Kind;
					}
				}
				_match_end_1ca1a102b:;
			};
			jule::Ptr<_1b9c5d016_Data> _84217_d = _1b9c7c552_eval((*(_self_))._field_e, _82917_arg);;
			if ((_84217_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1ca19e865;
			};
			if ((*((*(_84217_d))._field_Kind))._field_Variadic) {
				_81113_variadiced=true;
				(*((*((*(_80936_p))))._field_Kind))._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1b9c4ea0d_checkArg(_self_, _80936_p, &(_84217_d), &((*(_82917_arg))._field_Token)));
				{
					auto &_match_expr{ (*(_84217_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type76) {
						_case_begin_1ca1a49be:;
						{
							_81313_model=(*(_84217_d))._field_Model.cast_ptr<_1b9b438d0_SliceExprModel>(&__jule_any_type76);
							(*(_81313_model))._field_ElemKind=(*((*(_80936_p))))._field_Kind;
						}
					}
					else {
						_case_begin_1ca1a4606:;
						{
							_81313_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_84217_d))._field_Model); };
						}
					}
					_match_end_1ca1a45a1:;
				};
				(_80954_i)++;
				goto _iter_end_1ca19e865;
			};
			__jule_func_result=(__jule_func_result && _1b9c4ea0d_checkArg(_self_, _80936_p, &(_84217_d), &((*(_82917_arg))._field_Token)));
			{ jule::Slice<jule::Any> &__jule_push_dest = (*(_81313_model))._field_Elems; __jule_push_dest.push((*(_84217_d))._field_Model); };
		}
	_iter_next_1ca19e865:;
	}
	_iter_end_1ca19e865:;;
	(*((*(_self_))._field_e))._field_prefix=_81713_old;
	if ((_81113_variadiced && _8129_more)) {
		_1b9c4db50_pushErrToken(_self_, (*((*(_self_))._field_args[_80954_i]))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
	};
	if ((_81313_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_81313_model, &__jule_any_type76)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1b9c50646_checkArgs(_1b9c4d5ab_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1b9b511c3_ParamIns>>* _88533_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _8869_arg = (*((*(_self_))._field_e))._field_arg;;
	(*((*(_self_))._field_e))._field_arg=true;
	__jule_func_result=true;
	jule::I32 _89013_i = 0LL;;
	if ((((*(_88533_params)).len() > 0LL) && _1b9b4cdb2_IsSelf((*((*(_88533_params))[0LL]))._field_Decl.ptr()))) {
		(_89013_i)++;
	};
	_julec_label_1ca1a95d9:;
	while ((_89013_i < (*(_88533_params)).len())) {
		{
			jule::Ptr<_1b9b511c3_ParamIns> _89717_p = (*(_88533_params))[_89013_i];;
			{
				
				if ((*((*(_89717_p))._field_Decl))._field_Variadic) {
					_case_begin_1ca1ab003:;
					{
						__jule_func_result=(_1b9c50305_pushVariadic(_self_, &(_89717_p), _89013_i) && __jule_func_result);
						goto _iter_end_1ca1a98e7;
					}
				}
				else if (((*(_self_))._field_args.len() <= _89013_i)) {
					_case_begin_1ca1ab0e1:;
					{
						__jule_func_result=false;
						goto _iter_end_1ca1a98e7;
					}
				}
				else {
					_case_begin_1ca1aab5c:;
					{
						__jule_func_result=(_1b9c4ee09_push(_self_, &(_89717_p), (*(_self_))._field_args[_89013_i]) && __jule_func_result);
					}
				}
				_match_end_1ca1aaae6:;
			};
			(_89013_i)++;
		}
	_iter_next_1ca1a98e7:;
	}
	_iter_end_1ca1a98e7:;;
	(*((*(_self_))._field_e))._field_arg=_8869_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1b9c508cc_checkDynamicTypeAnnotation(_1b9c4d5ab_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_f))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca1acec2:;
		if (it != expr_end) {
			jule::Ptr<_1b9c8b7e7_InsGeneric> _91716_g = *it;
			{
				if ((_91716_g == nullptr)) {
					_1b9c4deb3_pushErr(_self_, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ca1acec2:;
			++it;
			goto _iter_begin_1ca1acec2;
		}
		_iter_end_1ca1acec2:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b9c50b63_check(_1b9c4d5ab_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1b9b511c3_ParamIns>> _92713_params = _1b9c4e249_getParams(_self_);;
	__jule_func_result=_1b9c4e557_checkCounts(_self_, &(_92713_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1b9c50646_checkArgs(_self_, &(_92713_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1b9c508cc_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9c4d5ab_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1b9c51a43_pushErr(_1b9c514e3_structLitChecker* _self_, jule::Ptr<_1b9b032eb_Token> _96526_token, jule::Str _96541_fmt, jule::Slice<jule::Any> _96554_args) {
	_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), _96526_token, _96541_fmt, _96554_args);
}



inline void _1b9c51da6_pushSuggestion(_1b9c514e3_structLitChecker* _self_, jule::Str _97033_fmt, jule::Slice<jule::Any> _97046_args) {
	_1b9c605bd_pushSuggestion((*(_self_))._field_e.ptr(), _97033_fmt, _97046_args);
}



inline void _1b9c522c4_pushMatch(_1b9c514e3_structLitChecker* _self_, jule::Ptr<_1b9b3b587_FieldIns>* _97433_f, jule::Ptr<_1b9c5d016_Data>* _97452_d, jule::Ptr<_1b9b032eb_Token>* _97467_errorToken) {
	;
	jule::Bool _9809_mutable = ((!((*((*(_self_))._field_e))._field_immutable)) || ((*((*((*(_97433_f))))._field_Decl))._field_Mutable && ((*((*(_self_))._field_s))._field_Methods.len() > 0LL)));;
	if (_1b9be1021_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, _9809_mutable, false, &((*((*(_97433_f))))._field_Kind), _97452_d, _97467_errorToken)) {
		_1b9bdca12_checkAssignType((*((*(_self_))._field_e))._field_s, false, &((*((*(_97433_f))))._field_Kind), _97452_d, (*(_97467_errorToken)));
	};
	{ jule::Slice<jule::Ptr<_1b9b41e2d_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_1b9b41e2d_StructArgExprModel>(_1b9b41e2d_StructArgExprModel{._field_Token=(*(_97467_errorToken)), ._field_Field=(*(_97433_f)), ._field_Expr=(*(_97452_d))})); };
}



inline void _1b9c52637_checkPair(_1b9c514e3_structLitChecker* _self_, jule::Ptr<_1b9b2231a_FieldExprPair>* _99333_pair, jule::Slice<jule::Ptr<_1b9b1caeb_Expr>>* _99360_exprs) {
	jule::Ptr<_1b9b3b587_FieldIns> _99513_f = _1b9b3d4e0_FindField((*(_self_))._field_s.ptr(), (*((*((*(_99333_pair))))._field_Field))._field_Kind);;
	if ((_99513_f == nullptr)) {
		_1b9c51a43_pushErr(_self_, (*((*(_99333_pair))))._field_Field, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_99333_pair))))._field_Field))._field_Kind, &__jule_any_type4)}));
		return;;
	};
	if ((!(_1b9bd5763_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_99513_f))._field_Decl))._field_Public, (*((*(_99513_f))._field_Decl))._field_Token)))) {
		_1b9c51a43_pushErr(_self_, (*((*(_99333_pair))))._field_Field, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_99333_pair))))._field_Field))._field_Kind, &__jule_any_type4)}));
		_1b9c51da6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	_julec_label_1ca1b6e76:;
	{
		auto expr = _99360_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca1b996d:;
		if (it != expr_end) {
			jule::Ptr<_1b9b1caeb_Expr> _100721_expr = *it;
			{
				{
					auto &_match_expr{ (*(_100721_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type77) {
						_case_begin_1ca1ba41e:;
						{
							jule::Ptr<_1b9b2231a_FieldExprPair> _101021_dpair = (*(_100721_expr))._field_Kind.cast_ptr<_1b9b2231a_FieldExprPair>(&__jule_any_type77);;
							{
								
								if (((*(_99333_pair)) == _101021_dpair)) {
									_case_begin_1ca1bb211:;
									{
										goto _iter_end_1ca1b996d;
									}
								}
								else if (((*((*((*(_99333_pair))))._field_Field))._field_Kind == (*((*(_101021_dpair))._field_Field))._field_Kind)) {
									_case_begin_1ca1bb288:;
									{
										_1b9c51a43_pushErr(_self_, (*((*(_99333_pair))))._field_Field, jule::Str::lit("@ already has expression", 24), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_99333_pair))))._field_Field))._field_Kind, &__jule_any_type4)}));
										goto _iter_end_1ca1b996d;
									}
								}
								_match_end_1ca1bb156:;
							};
						}
					}
					_match_end_1ca1ba3b9:;
				};
			}
			_iter_next_1ca1b996d:;
			++it;
			goto _iter_begin_1ca1b996d;
		}
		_iter_end_1ca1b996d:;
	};
	jule::Ptr<_1b9c8d1cd_TypeKind> _102113_prefix = (*((*(_self_))._field_e))._field_prefix;;
	__JULE_DEFER({
		(*((*(_self_))._field_e))._field_prefix=_102113_prefix;
	});;
	(*((*(_self_))._field_e))._field_prefix=(*(_99513_f))._field_Kind;
	jule::Ptr<_1b9c5d016_Data> _102513_d = _1b9c7cbd4_evalExpr((*(_self_))._field_e, (*((*(_99333_pair))))._field_Expr);;
	if ((_102513_d == nullptr)) {
		return;;
	};
	_1b9c522c4_pushMatch(_self_, &(_99513_f), &(_102513_d), &((*((*(_99333_pair))))._field_Field));
}



inline jule::Bool _1b9c52978_readyExprs(_1b9c514e3_structLitChecker* _self_, jule::Slice<jule::Ptr<_1b9b1caeb_Expr>>* _103234_exprs) {
	jule::Bool _103313_ok = true;;
	{
		auto expr = _103234_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca1c0138:;
		if (it != expr_end) {
			jule::I32 _103414_i = it - expr->begin();
			jule::Ptr<_1b9b1caeb_Expr> _103421_expr = *it;
			{
				{
					auto &_match_expr{ (*(_103421_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_1ca1c0db4:;
						{
							jule::Ptr<_1b9b23926_KeyValPair> _103721_pair = (*(_103421_expr))._field_Kind.cast_ptr<_1b9b23926_KeyValPair>(&__jule_any_type78);;
							{
								auto &_match_expr{ (*((*(_103721_pair))._field_Key))._field_Kind };
								
								if (_match_expr.type == &__jule_any_type79) {
									_case_begin_1ca1c1a41:;
									{
										goto _match_end_1ca1c202a;
									}
								}
								else {
									_case_begin_1ca1c2080:;
									{
										_1b9c51a43_pushErr(_self_, (*(_103721_pair))._field_Colon, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
										_103313_ok=false;
										goto _iter_next_1ca1c0138;
									}
								}
								_match_end_1ca1c202a:;
							};
							(*((*(_103234_exprs))[_103414_i]))._field_Kind=jule::Any(jule::new_ptr<_1b9b2231a_FieldExprPair>(_1b9b2231a_FieldExprPair{._field_Field=(*((*(_103721_pair))._field_Key))._field_Token, ._field_Expr=(*(_103721_pair))._field_Val}), &__jule_any_type77);
						}
					}
					_match_end_1ca1c0d5e:;
				};
			}
			_iter_next_1ca1c0138:;
			++it;
			_103414_i++;
			goto _iter_begin_1ca1c0138;
		}
		_iter_end_1ca1c0138:;
	};
	return _103313_ok;;
}



inline void _1b9c52c31_check(_1b9c514e3_structLitChecker* _self_, jule::Slice<jule::Ptr<_1b9b1caeb_Expr>>* _105629_exprs) {
	if (((*(_105629_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1b9c52978_readyExprs(_self_, _105629_exprs)))) {
		return;;
	};
	jule::Bool _106313_paired = false;;
	{
		auto expr = _105629_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca1c0a84:;
		if (it != expr_end) {
			jule::I32 _106414_i = it - expr->begin();
			jule::Ptr<_1b9b1caeb_Expr> _106421_expr = *it;
			{
				{
					auto &_match_expr{ (*(_106421_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type77) {
						_case_begin_1ca1ca385:;
						{
							jule::Ptr<_1b9b2231a_FieldExprPair> _106721_pair = (*(_106421_expr))._field_Kind.cast_ptr<_1b9b2231a_FieldExprPair>(&__jule_any_type77);;
							if (((_106414_i > 0LL) && (!(_106313_paired)))) {
								_1b9c51a43_pushErr(_self_, (*(_106721_pair))._field_Field, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							_106313_paired=true;
							_1b9c52637_checkPair(_self_, &(_106721_pair), _105629_exprs);
						}
					}
					else {
						_case_begin_1ca1c534c:;
						{
							if (_106313_paired) {
								_1b9c51a43_pushErr(_self_, (*(_106421_expr))._field_Token, jule::Str::lit("argument must target to field", 29), jule::Slice<jule::Any>());
							};
							if ((_106414_i >= (*((*(_self_))._field_s))._field_Fields.len())) {
								_1b9c51a43_pushErr(_self_, (*(_106421_expr))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>());
								goto _iter_next_1ca1c0a84;
							};
							jule::Ptr<_1b9b3b587_FieldIns> _108221_field = (*((*(_self_))._field_s))._field_Fields[_106414_i];;
							if ((!(_1b9bd5763_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_108221_field))._field_Decl))._field_Public, (*((*(_108221_field))._field_Decl))._field_Token)))) {
								_1b9c51a43_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("structure cannot instantiating because it has non-public fields", 63), jule::Slice<jule::Any>());
								_1b9c51da6_pushSuggestion(_self_, jule::Str::lit("use field:expression pairs to instantiate", 41), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1b9c8d1cd_TypeKind> _109021_prefix = (*((*(_self_))._field_e))._field_prefix;;
							__JULE_DEFER({
								(*((*(_self_))._field_e))._field_prefix=_109021_prefix;
							});;
							(*((*(_self_))._field_e))._field_prefix=(*(_108221_field))._field_Kind;
							jule::Ptr<_1b9c5d016_Data> _109421_d = _1b9c7cbd4_evalExpr((*(_self_))._field_e, _106421_expr);;
							if ((_109421_d == nullptr)) {
								goto _iter_next_1ca1c0a84;
							};
							_1b9c522c4_pushMatch(_self_, &(_108221_field), &(_109421_d), &((*(_106421_expr))._field_Token));
						}
					}
					_match_end_1ca1c52e7:;
				};
			}
			_iter_next_1ca1c0a84:;
			++it;
			_106414_i++;
			goto _iter_begin_1ca1c0a84;
		}
		_iter_end_1ca1c0a84:;
	};
	if ((!(_106313_paired))) {
		jule::I32 _110513_n = (*((*(_self_))._field_s))._field_Fields.len();;
		jule::I32 _110617_diff = (_110513_n - (*(_105629_exprs)).len());;
		{
			
			if ((_110617_diff <= 0LL)) {
				_case_begin_1ca1cca3b:;
				{
					return;;
				}
			}
			_match_end_1ca1cc8d7:;
		};
		_23d16295d_StrBuilder _111217_idents = static__23d162c7c_New(32LL);;
		for (; (_110617_diff > 0LL); (_110617_diff)--) {
			{
				_23d16b604_WriteStr(&_111217_idents, jule::Str::lit(", ", 2));
				_23d16b604_WriteStr(&_111217_idents, (*((*((*((*(_self_))._field_s))._field_Fields[(_110513_n - _110617_diff)]))._field_Decl))._field_Ident);
			}
		_iter_next_1ca1cd29a:;
		}
		_iter_end_1ca1cd29a:;;
		_1b9c51a43_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(static_cast<jule::Str>(_23d16c89c_Buf(&_111217_idents).slice(2LL)), &__jule_any_type4)}));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1b9c514e3_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b9c09611_Var> _1b9c537ae_buildVar(_1b9c532c5_rangeChecker* _self_, jule::Ptr<_1b9b2b555_VarDecl>* _113228_decl) {
	jule::Ptr<_1b9c09611_Var> _113313_v = _1b9b5a7a4_buildVar((*(_113228_decl)));;
	return _113313_v;;
}



inline void _1b9c539ac_setSizeKey(_1b9c532c5_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1b9b05c5a_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyA=_1b9c537ae_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyA));
	(*((*((*(_self_))._field_Kind))._field_KeyA))._field_Kind=(*(_1b9d7cb08_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ca1d2953:;
			{
				(*((*((*(_self_))._field_Kind))._field_KeyA))._field_IterRelation=jule::new_ptr<_1b9c08456_IterRelation>(_1b9c08456_IterRelation{._field_Range=(*((*(_self_))._field_d))._field_Model.cast_ptr<_1b9c09611_Var>(&__jule_any_type8)});
			}
		}
		_match_end_1ca1d28ed:;
	};
}



inline void _1b9c53dca_checkRangeExprValidity(_1b9c532c5_rangeChecker* _self_, jule::Ptr<_1b9c5d016_Data>* _115946_d, jule::Ptr<_1b9c09611_Var>* _115957_key, jule::Ptr<_1b9c8d1cd_TypeKind>* _115973_k) {
	jule::Bool _116013__mut = (*((*(_115957_key))))._field_Mutable;;
	if ((_116013__mut && (!(_1b9c8ea5e_Mutable((*(_115973_k)).ptr()))))) {
		_116013__mut=false;
	};
	_1b9be1021_checkValidityForInitExpr((*((*(_self_))._field_sc))._field_s, _116013__mut, (*((*(_115957_key))))._field_Reference, &((*((*((*(_115957_key))))._field_Kind))._field_Kind), _115946_d, &((*((*(_self_))._field_rang))._field_InToken));
}



inline void _1b9c540c8_checkSlice(_1b9c532c5_rangeChecker* _self_) {
	_1b9c539ac_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1b9b05c5a_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1b9c9a2a6_Slc> _117813_slc = _1b9c91885_Slc((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1b9c537ae_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=jule::new_ptr<_1b9c953a0_TypeSymbol>(_1b9c953a0_TypeSymbol{._field_Kind=(*(_117813_slc))._field_Elem});
	_1b9c53dca_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*((*(_self_))._field_Kind))._field_KeyB), &((*(_117813_slc))._field_Elem));
}



inline void _1b9c542c6_checkArray(_1b9c532c5_rangeChecker* _self_) {
	_1b9c539ac_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1b9b05c5a_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1b9c9c5c7_Arr> _119113_arr = _1b9c915ee_Arr((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1b9c537ae_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=jule::new_ptr<_1b9c953a0_TypeSymbol>(_1b9c953a0_TypeSymbol{._field_Kind=(*(_119113_arr))._field_Elem});
	_1b9c53dca_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*((*(_self_))._field_Kind))._field_KeyB), &((*(_119113_arr))._field_Elem));
}



inline void _1b9c544c4_checkMapKeyA(_1b9c532c5_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1b9b05c5a_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1b9c9b94a_Map> _120313_m = _1b9c923be_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyA=_1b9c537ae_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyA));
	(*((*((*(_self_))._field_Kind))._field_KeyA))._field_Kind=jule::new_ptr<_1b9c953a0_TypeSymbol>(_1b9c953a0_TypeSymbol{._field_Kind=(*(_120313_m))._field_Key});
	jule::Ptr<_1b9c5d016_Data> _120713_d = jule::new_ptr<_1b9c5d016_Data>((*((*(_self_))._field_d)));;
	(*(_120713_d))._field_Kind=(*(_120313_m))._field_Key;
	_1b9c53dca_checkRangeExprValidity(_self_, &(_120713_d), &((*((*(_self_))._field_Kind))._field_KeyA), &((*(_120313_m))._field_Key));
}



inline void _1b9c546c2_checkMapKeyB(_1b9c532c5_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1b9b05c5a_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1b9c9b94a_Map> _121813_m = _1b9c923be_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1b9c537ae_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=jule::new_ptr<_1b9c953a0_TypeSymbol>(_1b9c953a0_TypeSymbol{._field_Kind=(*(_121813_m))._field_Val});
	jule::Ptr<_1b9c5d016_Data> _122213_d = jule::new_ptr<_1b9c5d016_Data>((*((*(_self_))._field_d)));;
	(*(_122213_d))._field_Kind=(*(_121813_m))._field_Val;
	_1b9c53dca_checkRangeExprValidity(_self_, &(_122213_d), &((*((*(_self_))._field_Kind))._field_KeyB), &((*(_121813_m))._field_Val));
}



inline void _1b9c548c0_checkMap(_1b9c532c5_rangeChecker* _self_) {
	_1b9c544c4_checkMapKeyA(_self_);
	_1b9c546c2_checkMapKeyB(_self_);
}



inline void _1b9c54abd_checkStr(_1b9c532c5_rangeChecker* _self_) {
	_1b9c539ac_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1b9b05c5a_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1b9c537ae_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=(*(_1b9d7cb08_findBuiltinTypeAlias(jule::Str::lit("u8", 2))))._field_Kind;
}



inline void _1b9c54cbb_checkComptime(_1b9c532c5_rangeChecker* _self_) {
	_1b9c539ac_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyA != nullptr) && (*((*((*(_self_))._field_rang))._field_KeyA))._field_Mutable)) {
		_1b9bd5004_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*((*(_self_))._field_rang))._field_KeyA))._field_Token, jule::Str::lit("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident, &__jule_any_type4)}));
	};
	if ((((*((*(_self_))._field_rang))._field_KeyB != nullptr) && (*((*((*(_self_))._field_rang))._field_KeyB))._field_Mutable)) {
		_1b9bd5004_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*((*(_self_))._field_rang))._field_KeyB))._field_Token, jule::Str::lit("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident, &__jule_any_type4)}));
	};
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1b9b05c5a_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1b9c537ae_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
}



inline jule::Bool _1b9c55052_checkComptimeRange(_1b9c532c5_rangeChecker* _self_) {
	jule::Ptr<_1b9b687b2_comptimeRange> _125713_range = _1b9c93bc8_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_125713_range))._field_kind };
		
		if (_match_expr.type_is(true, 0) || _match_expr.type_is(true, 2) || _match_expr.type_is(true, 3) || _match_expr.type_is(true, 4) || _match_expr.type_is(true, 1) || _match_expr.type_is(true, 5)) {
			_case_begin_1ca1eedc1:;
			{
				_1b9c54cbb_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1ca1eea6e:;
			{
				_1b9bd5004_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1ca1eea19:;
	};
}



inline jule::Bool _1b9c552d8_check(_1b9c532c5_rangeChecker* _self_) {
	{
		
		if ((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic) {
			_case_begin_1ca202973:;
		}
		else if ((_1b9c91885_Slc((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca201b09:;
			{
				_1b9c540c8_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1b9c915ee_Arr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca201b70:;
			{
				_1b9c542c6_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1b9c923be_Map((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca201bd6:;
			{
				_1b9c548c0_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1b9c93bc8_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca201c4c:;
			{
				return _1b9c55052_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1ca2014bb:;
			{
				jule::Ptr<_1b9c95ca7_Prim> _128913_prim = _1b9c9082e_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (((_128913_prim != nullptr) && _1b9c9923e_IsStr(_128913_prim.ptr()))) {
					_1b9c54abd_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1ca201411:;
	};
	_1b9bd5004_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9c532c5_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1b9c55e54_prepareTypes(_1b9c55a36_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1b9b5336d_Types((*(_self_))._field_f.ptr());
	};
}



inline void _1b9c5620c_prepareExprs(_1b9c55a36_retTypeChecker* _self_, jule::Ptr<_1b9b1caeb_Expr>* _131736_e) {
	if (((*(_131736_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_131736_e))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1ca2089ce:;
			{
				(*(_self_))._field_exprs=(*((*((*(_131736_e))))._field_Kind.cast_ptr<_1b9b1d7bc_TupleExpr>(&__jule_any_type80)))._field_Expr;
			}
		}
		else {
			_case_begin_1ca208616:;
			{
				{ jule::Slice<jule::Ptr<_1b9b1caeb_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_131736_e))); };
			}
		}
		_match_end_1ca2085b1:;
	};
}



inline void _1b9c5640a_checkExprs(_1b9c55a36_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1b9c5d016_Data>> _133313_datas = jule::Slice<jule::Ptr<_1b9c5d016_Data>>::alloc(0LL, (*(_self_))._field_exprs.len());;
	jule::Ptr<_1b9c5ec0a_Eval> _133413_eval = _1b9bdc4a1_eval((*((*(_self_))._field_sc))._field_s, jule::Trait<_1b9cacc14_Lookup>((*(_self_))._field_sc, 0));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca208e85:;
		if (it != expr_end) {
			jule::I32 _133514_i = it - expr->begin();
			jule::Ptr<_1b9b1caeb_Expr> _133521_expr = *it;
			{
				if ((_133514_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1ca208e85;
				};
				jule::Ptr<_1b9c8d1cd_TypeKind> _134017_t = (*(_self_))._field_types[_133514_i];;
				(*(_133413_eval))._field_prefix=_134017_t;
				jule::Ptr<_1b9c5d016_Data> _134317_d = _1b9c7cbd4_evalExpr(_133413_eval, _133521_expr);;
				if ((_134317_d == nullptr)) {
					goto _iter_next_1ca208e85;
				};
				{ jule::Slice<jule::Ptr<_1b9c5d016_Data>> &__jule_push_dest = _133313_datas; __jule_push_dest.push(_134317_d); };
				if (((!((*(_134317_d))._field_Mutable)) && _1b9c8ea5e_Mutable((*(_134317_d))._field_Kind.ptr()))) {
					_1b9bd5004_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("mutable typed return expressions should be mutable", 50), jule::Slice<jule::Any>());
					return;;
				};
				_1b9c46ad2_assignTypeChecker _135517_ac = _1b9c46ad2_assignTypeChecker{._field_s=(*((*(_self_))._field_sc))._field_s, ._field_dest=_134017_t, ._field_d=_134317_d, ._field_errorToken=(*(_self_))._field_errorToken};;
				_1b9c47d47_check(&_135517_ac);
			}
			_iter_next_1ca208e85:;
			++it;
			_133514_i++;
			goto _iter_begin_1ca208e85;
		}
		_iter_end_1ca208e85:;
	};
	if ((_133313_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1b9b46c24_TupleExprModel>(_1b9b46c24_TupleExprModel{._field_Datas=_133313_datas}), &__jule_any_type81);
	} else if ((_133313_datas.len() == 1LL)) {
		(*(_self_))._field_model=(*(_133313_datas[0LL]))._field_Model;
	};
}



inline jule::Bool _1b9c5674b_check(_1b9c55a36_retTypeChecker* _self_, jule::Ptr<_1b9b1caeb_Expr>* _137429_e) {
	_1b9c55e54_prepareTypes(_self_);
	_1b9c5620c_prepareExprs(_self_, _137429_e);
	jule::I32 _13789_n = (*(_self_))._field_exprs.len();;
	if (((_13789_n == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
		if ((!(_1b9b504ad_AnyVar((*((*(_self_))._field_f))._field_Decl.ptr())))) {
			_1b9bd5004_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("return statements of non-void functions should have return expression", 69), jule::Slice<jule::Any>());
			return false;;
		};
		return true;;
	};
	if ((((_13789_n > 0LL) && ((*(_self_))._field_f != nullptr)) && _1b9b4e6dd_IsVoid((*((*(_self_))._field_f))._field_Decl.ptr()))) {
		_1b9bd5004_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("void functions is cannot returns any value", 42), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_13789_n > (*(_self_))._field_types.len())) {
		_1b9bd5004_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("overflow return expressions", 27), jule::Slice<jule::Any>());
	} else if ((_13789_n < (*(_self_))._field_types.len())) {
		_1b9bd5004_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
	};
	_1b9c5640a_checkExprs(_self_);
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9c55a36_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b9bb1200_ImportInfo> _1b9c582ca_SelectPackage(_1b9c57ce1_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1b9bb1200_ImportInfo>)> _2732_selector) {
	if ((_2732_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca21704d:;
		if (it != expr_end) {
			jule::Ptr<_1b9bb1200_ImportInfo> _3121_pkg = *it;
			{
				if (_2732_selector(_3121_pkg)) {
					return _3121_pkg;;
				};
			}
			_iter_next_1ca21704d:;
			++it;
			goto _iter_begin_1ca21704d;
		}
		_iter_end_1ca21704d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b9c09611_Var> _1b9c586c6_FindVar(_1b9c57ce1_SymbolTable* _self_, jule::Str _4126_ident, jule::Bool _4138_binded) {
	return _1b9c5a4a8_findVar(_self_, &(_4126_ident), _4138_binded, false);;
}



inline jule::Ptr<_1b9c8c3db_TypeAlias> _1b9c58ac2_FindTypeAlias(_1b9c57ce1_SymbolTable* _self_, jule::Str _4732_ident, jule::Bool _4744_binded) {
	return _1b9c5a95e_findTypeAlias(_self_, &(_4732_ident), _4744_binded, false);;
}



inline jule::Ptr<_1b9b393a9_Struct> _1b9c58ebd_FindStruct(_1b9c57ce1_SymbolTable* _self_, jule::Str _5329_ident, jule::Bool _5341_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca21978c:;
		if (it != expr_end) {
			jule::Ptr<_1b9b393a9_Struct> _5421_s = *it;
			{
				if ((((*(_5421_s))._field_Ident == _5329_ident) && ((*(_5421_s))._field_Binded == _5341_binded))) {
					return _5421_s;;
				};
			}
			_iter_next_1ca21978c:;
			++it;
			goto _iter_begin_1ca21978c;
		}
		_iter_end_1ca21978c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b9b4e26a_Fn> _1b9c593b9_FindFn(_1b9c57ce1_SymbolTable* _self_, jule::Str _6425_ident, jule::Bool _6437_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca21ad21:;
		if (it != expr_end) {
			jule::Ptr<_1b9b4e26a_Fn> _6521_f = *it;
			{
				if ((((*(_6521_f))._field_Ident == _6425_ident) && ((*(_6521_f))._field_Binded == _6437_binded))) {
					return _6521_f;;
				};
			}
			_iter_next_1ca21ad21:;
			++it;
			goto _iter_begin_1ca21ad21;
		}
		_iter_end_1ca21ad21:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b9b62514_Trait> _1b9c5970a_FindTrait(_1b9c57ce1_SymbolTable* _self_, jule::Str _7528_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca21c141:;
		if (it != expr_end) {
			jule::Ptr<_1b9b62514_Trait> _7621_t = *it;
			{
				if (((*(_7621_t))._field_Ident == _7528_ident)) {
					return _7621_t;;
				};
			}
			_iter_next_1ca21c141:;
			++it;
			goto _iter_begin_1ca21c141;
		}
		_iter_end_1ca21c141:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b9b64c0e_Enum> _1b9c59a4b_FindEnum(_1b9c57ce1_SymbolTable* _self_, jule::Str _8627_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca21c817:;
		if (it != expr_end) {
			jule::Ptr<_1b9b64c0e_Enum> _8721_e = *it;
			{
				if (((*(_8721_e))._field_Ident == _8627_ident)) {
					return _8721_e;;
				};
			}
			_iter_next_1ca21c817:;
			++it;
			goto _iter_begin_1ca21c817;
		}
		_iter_end_1ca21c817:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b9b66419_TypeEnum> _1b9c59d8c_FindTypeEnum(_1b9c57ce1_SymbolTable* _self_, jule::Str _9731_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca21d818:;
		if (it != expr_end) {
			jule::Ptr<_1b9b66419_TypeEnum> _9821_e = *it;
			{
				if (((*(_9821_e))._field_Ident == _9731_ident)) {
					return _9821_e;;
				};
			}
			_iter_next_1ca21d818:;
			++it;
			goto _iter_begin_1ca21d818;
		}
		_iter_end_1ca21d818:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b9c09611_Var> _1b9c5a4a8_findVar(_1b9c57ce1_SymbolTable* _self_, jule::Str* _10827_ident, jule::Bool _10839_binded, jule::Bool _10853_reverse) {
	if (_10853_reverse) {
		jule::I32 _11017_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_11017_i >= 0LL); (_11017_i)--) {
			{
				jule::Ptr<_1b9c09611_Var> _11221_v = (*(_self_))._field_Vars[_11017_i];;
				if ((((*(_11221_v))._field_Ident == (*(_10827_ident))) && ((*(_11221_v))._field_Binded == _10839_binded))) {
					return _11221_v;;
				};
			}
		_iter_next_1ca220ee1:;
		}
		_iter_end_1ca220ee1:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ca221035:;
			if (it != expr_end) {
				jule::Ptr<_1b9c09611_Var> _11825_v = *it;
				{
					if ((((*(_11825_v))._field_Ident == (*(_10827_ident))) && ((*(_11825_v))._field_Binded == _10839_binded))) {
						return _11825_v;;
					};
				}
				_iter_next_1ca221035:;
				++it;
				goto _iter_begin_1ca221035;
			}
			_iter_end_1ca221035:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1b9c8c3db_TypeAlias> _1b9c5a95e_findTypeAlias(_1b9c57ce1_SymbolTable* _self_, jule::Str* _12733_ident, jule::Bool _12745_binded, jule::Bool _12759_reverse) {
	if (_12759_reverse) {
		jule::I32 _12917_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_12917_i >= 0LL); (_12917_i)--) {
			{
				jule::Ptr<_1b9c8c3db_TypeAlias> _13121_ta = (*(_self_))._field_TypeAliases[_12917_i];;
				if ((((*(_13121_ta))._field_Ident == (*(_12733_ident))) && ((*(_13121_ta))._field_Binded == _12745_binded))) {
					return _13121_ta;;
				};
			}
		_iter_next_1ca2240b0:;
		}
		_iter_end_1ca2240b0:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ca224104:;
			if (it != expr_end) {
				jule::Ptr<_1b9c8c3db_TypeAlias> _13725_ta = *it;
				{
					if ((((*(_13725_ta))._field_Ident == (*(_12733_ident))) && ((*(_13725_ta))._field_Binded == _12745_binded))) {
						return _13725_ta;;
					};
				}
				_iter_next_1ca224104:;
				++it;
				goto _iter_begin_1ca224104;
			}
			_iter_end_1ca224104:;
		};
	};
	return nullptr;;
}



inline jule::Any _1b9c5ad5a_defByIdent(_1b9c57ce1_SymbolTable* _self_, jule::Str* _14830_ident, jule::Bool _14842_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca225985:;
		if (it != expr_end) {
			jule::Ptr<_1b9c09611_Var> _14921_v = *it;
			{
				if ((((*(_14921_v))._field_Ident == (*(_14830_ident))) && ((*(_14921_v))._field_Binded == _14842_binded))) {
					return jule::Any(_14921_v, &__jule_any_type8);;
				};
			}
			_iter_next_1ca225985:;
			++it;
			goto _iter_begin_1ca225985;
		}
		_iter_end_1ca225985:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca227349:;
		if (it != expr_end) {
			jule::Ptr<_1b9c8c3db_TypeAlias> _15521_ta = *it;
			{
				if ((((*(_15521_ta))._field_Ident == (*(_14830_ident))) && ((*(_15521_ta))._field_Binded == _14842_binded))) {
					return jule::Any(_15521_ta, &__jule_any_type66);;
				};
			}
			_iter_next_1ca227349:;
			++it;
			goto _iter_begin_1ca227349;
		}
		_iter_end_1ca227349:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca228218:;
		if (it != expr_end) {
			jule::Ptr<_1b9b393a9_Struct> _16121_s = *it;
			{
				if ((((*(_16121_s))._field_Ident == (*(_14830_ident))) && ((*(_16121_s))._field_Binded == _14842_binded))) {
					return jule::Any(_16121_s, &__jule_any_type65);;
				};
			}
			_iter_next_1ca228218:;
			++it;
			goto _iter_begin_1ca228218;
		}
		_iter_end_1ca228218:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca227c84:;
		if (it != expr_end) {
			jule::Ptr<_1b9b4e26a_Fn> _16721_f = *it;
			{
				if ((((*(_16721_f))._field_Ident == (*(_14830_ident))) && ((*(_16721_f))._field_Binded == _14842_binded))) {
					return jule::Any(_16721_f, &__jule_any_type64);;
				};
			}
			_iter_next_1ca227c84:;
			++it;
			goto _iter_begin_1ca227c84;
		}
		_iter_end_1ca227c84:;
	};
	if (_14842_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca229835:;
		if (it != expr_end) {
			jule::Ptr<_1b9b62514_Trait> _17721_t = *it;
			{
				if (((*(_17721_t))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_17721_t, &__jule_any_type10);;
				};
			}
			_iter_next_1ca229835:;
			++it;
			goto _iter_begin_1ca229835;
		}
		_iter_end_1ca229835:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca229758:;
		if (it != expr_end) {
			jule::Ptr<_1b9b64c0e_Enum> _18321_e = *it;
			{
				if (((*(_18321_e))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_18321_e, &__jule_any_type67);;
				};
			}
			_iter_next_1ca229758:;
			++it;
			goto _iter_begin_1ca229758;
		}
		_iter_end_1ca229758:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca22b903:;
		if (it != expr_end) {
			jule::Ptr<_1b9b66419_TypeEnum> _18921_te = *it;
			{
				if (((*(_18921_te))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_18921_te, &__jule_any_type68);;
				};
			}
			_iter_next_1ca22b903:;
			++it;
			goto _iter_begin_1ca22b903;
		}
		_iter_end_1ca22b903:;
	};
	return nullptr;;
}



inline jule::Bool _1b9c5b311_isDuplicatedIdent(_1b9c57ce1_SymbolTable* _self_, jule::Uintptr _20132_itself, jule::Str* _20150_ident, jule::Bool _20162_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca22cd88:;
		if (it != expr_end) {
			jule::Ptr<_1b9c09611_Var> *_20216_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20216_v))) != _20132_itself) && ((*((*(_20216_v))))._field_Ident == (*(_20150_ident)))) && ((*((*(_20216_v))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1ca22cd88:;
			++it;
			goto _iter_begin_1ca22cd88;
		}
		_iter_end_1ca22cd88:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca22daae:;
		if (it != expr_end) {
			jule::Ptr<_1b9c8c3db_TypeAlias> *_20816_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20816_ta))) != _20132_itself) && ((*((*(_20816_ta))))._field_Ident == (*(_20150_ident)))) && ((*((*(_20816_ta))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1ca22daae:;
			++it;
			goto _iter_begin_1ca22daae;
		}
		_iter_end_1ca22daae:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca22ec03:;
		if (it != expr_end) {
			jule::Ptr<_1b9b393a9_Struct> *_21416_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21416_s))) != _20132_itself) && ((*((*(_21416_s))))._field_Ident == (*(_20150_ident)))) && ((*((*(_21416_s))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1ca22ec03:;
			++it;
			goto _iter_begin_1ca22ec03;
		}
		_iter_end_1ca22ec03:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca22e85c:;
		if (it != expr_end) {
			jule::Ptr<_1b9b4e26a_Fn> *_22016_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22016_f))) != _20132_itself) && ((*((*(_22016_f))))._field_Ident == (*(_20150_ident)))) && ((*((*(_22016_f))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1ca22e85c:;
			++it;
			goto _iter_begin_1ca22e85c;
		}
		_iter_end_1ca22e85c:;
	};
	if (_20162_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca2318e7:;
		if (it != expr_end) {
			jule::Ptr<_1b9b62514_Trait> *_23016_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23016_t))) != _20132_itself) && ((*((*(_23016_t))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1ca2318e7:;
			++it;
			goto _iter_begin_1ca2318e7;
		}
		_iter_end_1ca2318e7:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca23181a:;
		if (it != expr_end) {
			jule::Ptr<_1b9b64c0e_Enum> *_23616_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23616_e))) != _20132_itself) && ((*((*(_23616_e))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1ca23181a:;
			++it;
			goto _iter_begin_1ca23181a;
		}
		_iter_end_1ca23181a:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca233e38:;
		if (it != expr_end) {
			jule::Ptr<_1b9b66419_TypeEnum> *_24216_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24216_te))) != _20132_itself) && ((*((*(_24216_te))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1ca233e38:;
			++it;
			goto _iter_begin_1ca233e38;
		}
		_iter_end_1ca233e38:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9c57ce1_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b9c5d3bd_IsNil(_1b9c5d016_Data* _self_) {
	return _1b9c8e2ab_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1b9c5d654_IsVoid(_1b9c5d016_Data* _self_) {
	return _1b9c8e542_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1b9c5d8da_IsConst(_1b9c5d016_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1b9c5dc2b_GoodOperand(_1b9c5d016_Data* _self_, jule::Ptr<_1b9c5d016_Data>* _10231_other) {
	if ((_1b9c91368_TypeEnum((*((*(_10231_other))))._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1b9c9082e_Prim((*((*(_10231_other))))._field_Kind.ptr()) == nullptr) || (!(_1b9c994c5_IsAny(_1b9c9082e_Prim((*((*(_10231_other))))._field_Kind.ptr()).ptr())))) && (_1b9c92138_Trait((*((*(_10231_other))))._field_Kind.ptr()) == nullptr)) && (!(_1b9c8e2ab_IsNil((*(_self_))._field_Kind.ptr()))));;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9c5d016_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9c5e15a_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _1b9c6025a_pushErr(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b032eb_Token> _13326_token, jule::Str _13341_fmt, jule::Slice<jule::Any> _13354_args) {
	_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), _13326_token, _13341_fmt, _13354_args);
}



inline void _1b9c605bd_pushSuggestion(_1b9c5ec0a_Eval* _self_, jule::Str _13833_fmt, jule::Slice<jule::Any> _13846_args) {
	_1b9bd5367_pushSuggestion((*(_self_))._field_s.ptr(), _13833_fmt, _13846_args);
}



inline void _1b9c607bb_allowBuiltin(_1b9c5ec0a_Eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1b9c609b9_disallowBuiltin(_1b9c5ec0a_Eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1b9c60c50_isUnsafe(_1b9c5ec0a_Eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1b9c60ed6_isGlobal(_1b9c5ec0a_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1ca2761de:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ca2765a7:;
			{
				return false;;
			}
		}
		_match_end_1ca276552:;
	};
}



inline jule::Bool _1b9c612e4_applyNumericPrefix(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9c5d016_Data>* _16542_d) {
	if ((((((*(_16542_d)) == nullptr) || (!(_1b9c5d8da_IsConst((*(_16542_d)).ptr())))) || (_1b9c9082e_Prim((*((*(_16542_d))))._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1b9c95ca7_Prim> _1729_prim = _1b9c9082e_Prim((*(_self_))._field_prefix.ptr());;
	if ((_1729_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1ec682430_IsFloat(_1b9c960e8_Str(_1729_prim.ptr()))) {
			_case_begin_1ca278d07:;
			{
				(*((*(_16542_d))))._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>((*((*(_self_))._field_prefix)));
				_1ec686830_SetF64((*((*(_16542_d))))._field_Constant.ptr(), static_cast<jule::F64>(_1ec6859a5_AsF64((*((*(_16542_d))))._field_Constant.ptr())));
				(*((*((*(_16542_d))))._field_Constant))._field_Kind=(*(_1729_prim))._field_Kind;
			}
		}
		else if (_1ec681a17_IsSigInt(_1b9c960e8_Str(_1729_prim.ptr()))) {
			_case_begin_1ca278d6d:;
			{
				if ((!(_1b9c4410c_sigAssignable(_1b9c960e8_Str(_1729_prim.ptr()), _16542_d)))) {
					return false;;
				};
				(*((*(_16542_d))))._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>((*((*(_self_))._field_prefix)));
				_1ec685c5d_SetI64((*((*(_16542_d))))._field_Constant.ptr(), static_cast<jule::I64>(_1ec685488_AsI64((*((*(_16542_d))))._field_Constant.ptr())));
				(*((*((*(_16542_d))))._field_Constant))._field_Kind=(*(_1729_prim))._field_Kind;
			}
		}
		else if (_1ec681d25_IsUnsigInt(_1b9c960e8_Str(_1729_prim.ptr()))) {
			_case_begin_1ca278dd4:;
			{
				if ((!(_1b9c444c5_unsigAssignable(_1b9c960e8_Str(_1729_prim.ptr()), _16542_d)))) {
					return false;;
				};
				(*((*(_16542_d))))._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>((*((*(_self_))._field_prefix)));
				_1ec686016_SetU64((*((*(_16542_d))))._field_Constant.ptr(), static_cast<jule::U64>(_1ec68571e_AsU64((*((*(_16542_d))))._field_Constant.ptr())));
				(*((*((*(_16542_d))))._field_Constant))._field_Kind=(*(_1729_prim))._field_Kind;
			}
		}
		_match_end_1ca278a2c:;
	};
	return true;;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c61635_litStr(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b1db96_LitExpr>* _20022_l) {
	jule::Str _20113_s = (*((*(_20022_l))))._field_Value.slice(1LL, ((*((*(_20022_l))))._field_Value.len() - 1LL));;
	if (_1b9b0471a_IsRawStr((*((*(_20022_l))))._field_Value)) {
		_20113_s=_1b9c42391_ToRawStr(static_cast<jule::Slice<jule::U8>>(_20113_s));
	} else {
		_20113_s=_1b9c426d2_ToStr(static_cast<jule::Slice<jule::U8>>(_20113_s));
	};
	jule::Ptr<_1ec682ce3_Const> _20713_constant = static__1ec683a80_NewStr(_20113_s);;
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d799b2_primStr, ._field_Mutable=true, ._field_Model=jule::Any(_20713_constant, &__jule_any_type19), ._field_Constant=_20713_constant});;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c61976_litRune(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b1db96_LitExpr>* _21723_l) {
	jule::Str _2199_lt = (*((*(_21723_l))))._field_Value.slice(1LL, ((*((*(_21723_l))))._field_Value.len() - 1LL));;
	jule::I32 _2209_r = _1b9c421d7_ToRune(static_cast<jule::Slice<jule::U8>>(_2199_lt));;
	jule::Ptr<_1b9c5d016_Data> _22113_data = jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Constant=static__1ec683233_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_2209_r)))});;
	jule::Bool _2259_isAscii = _1b9c28a3c_IsAscii(_2209_r);;
	if (_2259_isAscii) {
		(*(_22113_data))._field_Kind=_1b9d7b5b8_primU8;
	} else {
		(*(_22113_data))._field_Kind=_1b9d7b035_primI32;
	};
	(*(_22113_data))._field_Mutable=true;
	(*(_22113_data))._field_Model=jule::Any(jule::new_ptr<_1b9b4a860_RuneExprModel>(_1b9b4a860_RuneExprModel{._field_Code=_2209_r}), &__jule_any_type82);
	(*(_22113_data))._field_IsRune=true;
	(*(_22113_data))._field_untyped=true;
	return _22113_data;;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c61cb7_litFloat(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b1db96_LitExpr>* _23924_l) {
	jule::F64 _2409_f = ({
		auto except = _1ec667899_ParseFloat((*((*(_23924_l))))._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1ec682ce3_Const> _24113_constant = static__1ec683d49_NewF64(_2409_f);;
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_untyped=true, ._field_Kind=_1b9d7c652_primF64, ._field_Mutable=true, ._field_Model=jule::Any(_24113_constant, &__jule_any_type19), ._field_Constant=_24113_constant});;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c62108_litInt(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b1db96_LitExpr>* _25126_l) {
	;
	jule::Str _25413_lit = (*((*(_25126_l))))._field_Value;;
	jule::I32 _25513_base = 0LL;;
	{
		
		if (_23d14ca9c_HasPrefix(_25413_lit, jule::Str::lit("0x", 2))) {
			_case_begin_1ca2888c7:;
			{
				(_25413_lit).mut_slice(2LL);;
				_25513_base=16LLU;
			}
		}
		else if (_23d14ca9c_HasPrefix(_25413_lit, jule::Str::lit("0b", 2))) {
			_case_begin_1ca2889b5:;
			{
				(_25413_lit).mut_slice(2LL);;
				_25513_base=2LLU;
			}
		}
		else if (_23d14ca9c_HasPrefix(_25413_lit, jule::Str::lit("0o", 2))) {
			_case_begin_1ca2885b9:;
			{
				(_25413_lit).mut_slice(2LL);;
				_25513_base=8LLU;
			}
		}
		else if (((_25413_lit[0LL] == '0') && (_25413_lit.len() > 1LL))) {
			_case_begin_1ca288630:;
			{
				(_25413_lit).mut_slice(1LL);;
				_25513_base=8LLU;
			}
		}
		else {
			_case_begin_1ca288553:;
			{
				_25513_base=10LLU;
			}
		}
		_match_end_1ca2884ed:;
	};
	jule::Ptr<_1b9c5d016_Data> _27513_d = jule::new_ptr<_1b9c5d016_Data>();;
	jule::Bool _27713_ok = true;;
	jule::I64 _2789_sig = ({
		auto except = _1ec660e47_ParseInt(_25413_lit, _25513_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_27713_ok=false;

			0LL;
		});
	});;
	if (_27713_ok) {
		(*(_27513_d))._field_Constant=static__1ec683233_NewI64(_2789_sig);
		(*(_27513_d))._field_Kind=_1b9d7a6d8_primInt;
	} else {
		jule::U64 _28613_unsig = ({
			auto except = _1ec660991_ParseUint(_25413_lit, _25513_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1b9c6025a_pushErr(_self_, (*((*(_25126_l))))._field_Token, jule::Str::lit("arithmetic value overflow: this value too big", 45), jule::Slice<jule::Any>());
				_1b9c605bd_pushSuggestion(_self_, jule::Str::lit("floating-point literals may solve your problem", 46), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		(*(_27513_d))._field_Constant=static__1ec6834ec_NewU64(_28613_unsig);
		(*(_27513_d))._field_Kind=_1b9d7a30e_primUint;
	};
	(*(_27513_d))._field_Model=jule::Any((*(_27513_d))._field_Constant, &__jule_any_type19);
	if ((!(_1b9c612e4_applyNumericPrefix(_self_, &(_27513_d))))) {
		_1b9c86bdd_fitBitsize(&(_27513_d));
	};
	(*(_27513_d))._field_Mutable=true;
	(*(_27513_d))._field_untyped=true;
	return _27513_d;;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c62449_litNum(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b1db96_LitExpr>* _30726_l) {
	{
		
		if (_1b9b0540d_IsFloat((*((*(_30726_l))))._field_Value)) {
			_case_begin_1ca29597d:;
			{
				return _1b9c61cb7_litFloat(_self_, _30726_l);;
			}
		}
		else {
			_case_begin_1ca2952c9:;
			{
				return _1b9c62108_litInt(_self_, _30726_l);;
			}
		}
		_match_end_1ca295230:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c6278a_evalLit(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b1db96_LitExpr> _31626_lit) {
	{
		
		if (_1b9b04451_IsStr((*(_31626_lit))._field_Value)) {
			_case_begin_1ca29651c:;
			{
				return _1b9c61635_litStr(_self_, &(_31626_lit));;
			}
		}
		else if (_1b9b049d4_IsRune((*(_31626_lit))._field_Value)) {
			_case_begin_1ca296594:;
			{
				return _1b9c61976_litRune(_self_, &(_31626_lit));;
			}
		}
		else if (_1b9b056c7_IsNum((*(_31626_lit))._field_Value)) {
			_case_begin_1ca29661b:;
			{
				return _1b9c62449_litNum(_self_, &(_31626_lit));;
			}
		}
		else {
			_case_begin_1ca295e34:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca295d68:;
	};
}



inline jule::Any _1b9c62acb_findBuiltins(_1b9c5ec0a_Eval* _self_, jule::Str* _32932_ident) {
	if (_1b9bce4b5_IsPub(_32932_ident)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 1)) {
				_case_begin_1ca29884e:;
				{
					jule::Any _33321_def = _1b9c869ac_findBuiltinsImport(_32932_ident, (*(_self_))._field_lookup.cast_ptr<_1b9bb1200_ImportInfo>(1));;
					if ((_33321_def != nullptr)) {
						return _33321_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, 3)) {
				_case_begin_1ca2988b5:;
				{
					jule::Any _33821_def = _1b9c87716_findBuiltinsSema(_32932_ident, (*(_self_))._field_lookup.cast_ptr<_1b9bd23b9_Sema>(3));;
					if ((_33821_def != nullptr)) {
						return _33821_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, 0)) {
				_case_begin_1ca29892b:;
				{
					jule::Any _34321_def = _1b9c87716_findBuiltinsSema(_32932_ident, (*((*(_self_))._field_lookup.cast_ptr<_1b9b970c6_scopeChecker>(0)))._field_s);;
					if ((_34321_def != nullptr)) {
						return _34321_def;;
					};
				}
			}
			_match_end_1ca2987e9:;
		};
		return nullptr;;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1b9d7cdc2_findBuiltinDef(_32932_ident);;
}



inline jule::Any _1b9c62ec7_getDef(_1b9c5ec0a_Eval* _self_, jule::Str* _35626_ident, jule::Bool _35638_binded) {
	jule::Ptr<_1b9c09611_Var> _36113_v = _1b9cacc14_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1b9cab3e9_FindVar((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_36113_v != nullptr)) {
		return jule::Any(_36113_v, &__jule_any_type8);;
	};
	jule::Ptr<_1b9c8c3db_TypeAlias> _36613_ta = _1b9cacc14_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1b9cab7e5_FindTypeAlias((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_36613_ta != nullptr)) {
		return jule::Any(_36613_ta, &__jule_any_type66);;
	};
	if ((!(_35638_binded))) {
		jule::Ptr<_1b9b64c0e_Enum> _37217_enm = _1b9cacc14_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1b9cac76e_FindEnum((*(_self_))._field_lookup, (*(_35626_ident)));;
		if ((_37217_enm != nullptr)) {
			return jule::Any(_37217_enm, &__jule_any_type67);;
		};
		jule::Ptr<_1b9b66419_TypeEnum> _37717_tenm = _1b9cacc14_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1b9cacab0_FindTypeEnum((*(_self_))._field_lookup, (*(_35626_ident)));;
		if ((_37717_tenm != nullptr)) {
			return jule::Any(_37717_tenm, &__jule_any_type68);;
		};
	};
	jule::Ptr<_1b9b4e26a_Fn> _38313_f = _1b9cacc14_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1b9cac0dc_FindFn((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_38313_f != nullptr)) {
		return jule::Any(_38313_f, &__jule_any_type64);;
	};
	jule::Ptr<_1b9b393a9_Struct> _38813_s = _1b9cacc14_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1b9cabbe1_FindStruct((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_38813_s != nullptr)) {
		return jule::Any(_38813_s, &__jule_any_type65);;
	};
	return _1b9c62acb_findBuiltins(_self_, _35626_ident);;
}



inline void _1ca2b08bb_pushReference(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b5216e_FnIns>* _39640_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1ca2b23b2:;
			{
				jule::Ptr<_1b9b970c6_scopeChecker> _39917_sc = _1b9b9a44d_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1b9b970c6_scopeChecker>(0));;
				if ((!(_1ca2b3825_Exist((*((*(_39917_sc))._field_owner))._field_Refers.ptr(), (*(_39640_ref)))))) {
					_1b9b5610c_Push((*((*(_39917_sc))._field_owner))._field_Refers.ptr(), jule::Any((*(_39640_ref)), &__jule_any_type7));
				};
			}
		}
		else {
			_case_begin_1ca2b1d40:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*((*(_self_))._field_owner))._field_Scope == nullptr)) && (!(_1ca2b3825_Exist((*((*(_self_))._field_owner))._field_Refers.ptr(), (*(_39640_ref))))))) {
					_1b9b5610c_Push((*((*(_self_))._field_owner))._field_Refers.ptr(), jule::Any((*(_39640_ref)), &__jule_any_type7));
				};
			}
		}
		_match_end_1ca2b1cda:;
	};
}

inline void _1ca2c741b_pushReference(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9c09611_Var>* _39640_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1ca2c8d9b:;
			{
				jule::Ptr<_1b9b970c6_scopeChecker> _39917_sc = _1b9b9a44d_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1b9b970c6_scopeChecker>(0));;
				if ((!(_1ca2ca30e_Exist((*((*(_39917_sc))._field_owner))._field_Refers.ptr(), (*(_39640_ref)))))) {
					_1b9b5610c_Push((*((*(_39917_sc))._field_owner))._field_Refers.ptr(), jule::Any((*(_39640_ref)), &__jule_any_type8));
				};
			}
		}
		else {
			_case_begin_1ca2c8829:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*((*(_self_))._field_owner))._field_Scope == nullptr)) && (!(_1ca2ca30e_Exist((*((*(_self_))._field_owner))._field_Refers.ptr(), (*(_39640_ref))))))) {
					_1b9b5610c_Push((*((*(_self_))._field_owner))._field_Refers.ptr(), jule::Any((*(_39640_ref)), &__jule_any_type8));
				};
			}
		}
		_match_end_1ca2c87c4:;
	};
}

inline void _1ca380529_pushReference(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b3c137_StructIns>* _39640_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1ca382020:;
			{
				jule::Ptr<_1b9b970c6_scopeChecker> _39917_sc = _1b9b9a44d_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1b9b970c6_scopeChecker>(0));;
				if ((!(_1ca383483_Exist((*((*(_39917_sc))._field_owner))._field_Refers.ptr(), (*(_39640_ref)))))) {
					_1b9b5610c_Push((*((*(_39917_sc))._field_owner))._field_Refers.ptr(), jule::Any((*(_39640_ref)), &__jule_any_type9));
				};
			}
		}
		else {
			_case_begin_1ca38199d:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*((*(_self_))._field_owner))._field_Scope == nullptr)) && (!(_1ca383483_Exist((*((*(_self_))._field_owner))._field_Refers.ptr(), (*(_39640_ref))))))) {
					_1b9b5610c_Push((*((*(_self_))._field_owner))._field_Refers.ptr(), jule::Any((*(_39640_ref)), &__jule_any_type9));
				};
			}
		}
		_match_end_1ca381948:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c635c1__evalEnum(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b64c0e_Enum> _41328_enm) {
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(_41328_enm, 3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c639bc_evalEnum(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b64c0e_Enum> _42231_enm, jule::Ptr<_1b9b032eb_Token> _42243_errorToken) {
	if ((!(_1b9bd5763_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_42231_enm))._field_Public, (*(_42231_enm))._field_Token)))) {
		_1b9c6025a_pushErr(_self_, _42243_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_42231_enm))._field_Ident, &__jule_any_type4)}));
		_1b9c605bd_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1b9c635c1__evalEnum(_self_, _42231_enm);;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c63d0d__evalTypeEnum(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b66419_TypeEnum> _43132_enm) {
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(_43132_enm, 4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c64209_evalTypeEnum(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b66419_TypeEnum> _44035_enm, jule::Ptr<_1b9b032eb_Token> _44051_errorToken) {
	if ((!(_1b9bd5763_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_44035_enm))._field_Public, (*(_44035_enm))._field_Token)))) {
		_1b9c6025a_pushErr(_self_, _44051_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_44035_enm))._field_Ident, &__jule_any_type4)}));
		_1b9c605bd_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1b9c63d0d__evalTypeEnum(_self_, _44035_enm);;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c6454a__evalStruct(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b3c137_StructIns> _44930_s) {
	jule::Ptr<_1b9c5d016_Data> _45013_d = jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(_44930_s, 0)}), ._field_Model=jule::Any(_44930_s, &__jule_any_type9), ._field_Decl=true, });;
	if ((((*(_44930_s))._field_Decl != nullptr) && (*((*(_44930_s))._field_Decl))._field_Binded)) {
		(*((*(_45013_d))._field_Kind))._field_BindIdent=(*((*(_44930_s))._field_Decl))._field_Ident;
	};
	return _45013_d;;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c64946_evalStruct(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b3c137_StructIns> _46333_s, jule::Ptr<_1b9b032eb_Token> _46348_errorToken) {
	if ((!(_1b9bd5763_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_46333_s))._field_Decl))._field_Public, (*((*(_46333_s))._field_Decl))._field_Token)))) {
		_1b9c6025a_pushErr(_self_, _46348_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_46333_s))._field_Decl))._field_Ident, &__jule_any_type4)}));
		_1b9c605bd_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1b9c650ea_checkDeprecated(_self_, &((*((*(_46333_s))._field_Decl))._field_Directives), _46348_errorToken);
	return _1b9c6454a__evalStruct(_self_, _46333_s);;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c64c87_evalFnIns(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b5216e_FnIns> _47328_f) {
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(_47328_f, 1)}), ._field_Model=jule::Any(_47328_f, &__jule_any_type7), });;
}



inline void _1b9c650ea_checkDeprecated(_1b9c5ec0a_Eval* _self_, jule::Slice<jule::Ptr<_1b9b17bd4_Directive>>* _48239_directives, jule::Ptr<_1b9b032eb_Token> _48270_tok) {
	if (_1b9c60c50_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1b9b17bd4_Directive> _4879_d = _1b9c865e4_findDirective(_48239_directives, jule::Str::lit("deprecated", 10));;
	if ((_4879_d != nullptr)) {
		if (((*(_4879_d))._field_Args.len() == 0LL)) {
			_1b9c6025a_pushErr(_self_, _48270_tok, jule::Str::lit("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("this code is deprecated", 23), &__jule_any_type4)}));
		} else {
			_1b9c6025a_pushErr(_self_, _48270_tok, jule::Str::lit("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any((*((*(_4879_d))._field_Args[0LL]))._field_Kind, &__jule_any_type4)}));
		};
		_1b9c605bd_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule for deprecated codes or replace to successor", 60), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c654e6_evalFn(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b4e26a_Fn> _49829_f, jule::Ptr<_1b9b032eb_Token> _49837_errorToken) {
	if ((!(_1b9bd5763_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_49829_f))._field_Public, (*(_49829_f))._field_Token)))) {
		_1b9c6025a_pushErr(_self_, _49837_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_49829_f))._field_Ident, &__jule_any_type4)}));
		_1b9c605bd_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1b9c650ea_checkDeprecated(_self_, &((*(_49829_f))._field_Directives), _49837_errorToken);
	jule::Ptr<_1b9b5216e_FnIns> _50713_ins = _1b9b509ca_instance(_49829_f);;
	_1ca2b08bb_pushReference(_self_, &(_50713_ins));
	return _1b9c64c87_evalFnIns(_self_, _50713_ins);;
}



inline void _1b9c65914_pushIllegalCycleError(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9c09611_Var>* _51241_v1, jule::Ptr<_1b9c09611_Var>* _51252_v2, _23d16295d_StrBuilder* _51267_message) {
	;
	jule::Str _5149_refers_to = _23d2115bc_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*((*(_51241_v1))))._field_Ident, &__jule_any_type4),jule::Any((*((*(_51252_v2))))._field_Ident, &__jule_any_type4)}));;
	jule::Slice<jule::U8> _5159_buf = _23d16c89c_Buf(_51267_message);;
	_23d16b604_WriteStr(_51267_message, _23d14c2a5_Repeat(jule::Str::lit(" ", 1), 7LL));
	_23d16b604_WriteStr(_51267_message, _5149_refers_to);
	_23d16b8ac_WriteByte(_51267_message, '\n');
	_23d16b34b_Write(_51267_message, _5159_buf);
}



inline jule::Bool _1b9c65d10_checkCrossCycle(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9c09611_Var>* _52235_v, _23d16295d_StrBuilder* _52249_message) {
	{
		auto expr = &((*((*(_52235_v))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca2b85e9:;
		if (it != expr_end) {
			jule::Ptr<_1b9c09611_Var> *_52316_d = it;
			{
				if (((*(_52316_d)) == (*(_self_))._field_owner)) {
					_1b9c65914_pushIllegalCycleError(_self_, _52235_v, _52316_d, _52249_message);
					return false;;
				};
				if ((!(_1b9c65d10_checkCrossCycle(_self_, _52316_d, _52249_message)))) {
					_1b9c65914_pushIllegalCycleError(_self_, _52235_v, _52316_d, _52249_message);
					return false;;
				};
			}
			_iter_next_1ca2b85e9:;
			++it;
			goto _iter_begin_1ca2b85e9;
		}
		_iter_end_1ca2b85e9:;
	};
	return true;;
}



inline jule::Bool _1b9c6620b_checkIllegalCycles(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9c09611_Var>* _53942_v, jule::Ptr<_1b9b032eb_Token> _53951_declToken) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*((*(_self_))._field_owner))._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_53942_v)))) {
		_1b9c6025a_pushErr(_self_, (*((*(_self_))._field_owner))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_owner))._field_Ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_23d16295d_StrBuilder _55213_message = static__23d162c7c_New(32LL);;
	if ((!(_1b9c65d10_checkCrossCycle(_self_, _53942_v, &(_55213_message))))) {
		jule::Str _55517_errMsg = _23d16bdeb_Str(&_55213_message);;
		_23d16c0e9_Clear(&_55213_message);
		_1b9c65914_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _53942_v, &(_55213_message));
		_55517_errMsg+=_23d16bdeb_Str(&_55213_message);
		_1b9c6025a_pushErr(_self_, _53951_declToken, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_55517_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{ jule::Slice<jule::Ptr<_1b9c09611_Var>> &__jule_push_dest = (*((*(_self_))._field_owner))._field_Depends; __jule_push_dest.push((*(_53942_v))); };
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c66607_evalVar(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9c09611_Var> _56730_v, jule::Ptr<_1b9b032eb_Token> _56739_errorToken) {
	if ((!(_1b9bd5763_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_56730_v))._field_Public, (*(_56730_v))._field_Token)))) {
		_1b9c6025a_pushErr(_self_, _56739_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_56730_v))._field_Ident, &__jule_any_type4)}));
		_1b9c605bd_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1b9c650ea_checkDeprecated(_self_, &((*(_56730_v))._field_Directives), _56739_errorToken);
	if (((*(_56730_v))._field_Token == nullptr)) {
		goto _julec_label_1ca2d22a0;
	};
	(*(_56730_v))._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1ca2c2e0b:;
			{
				jule::Bool _58613_ok = _1b9c6620b_checkIllegalCycles(_self_, &(_56730_v), _56739_errorToken);;
				if ((!(_58613_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1ca2c2e72:;
			{
				if (((!((*(_56730_v))._field_Reference)) || _1b9c60c50_isUnsafe(_self_))) {
					goto _match_end_1ca2c2da6;
				};
				jule::Ptr<_1b9b970c6_scopeChecker> _59417_s = (*(_self_))._field_lookup.cast_ptr<_1b9b970c6_scopeChecker>(0);;
				while ((((*(_59417_s))._field_owner == nullptr) && ((*(_59417_s))._field_parent != nullptr))) {
					{
						_59417_s=(*(_59417_s))._field_parent;
					}
				_iter_next_1ca2c4a01:;
				}
				_iter_end_1ca2c4a01:;;
				if (((((*(_59417_s))._field_owner != nullptr) && (*((*(_59417_s))._field_owner))._field_Anon) && ((*(_56730_v))._field_Scope != (*((*(_59417_s))._field_owner))._field_Scope))) {
					_1b9c6025a_pushErr(_self_, _56739_errorToken, jule::Str::lit("anonymous functions cannot access to reference definition @ of parent scope", 75), jule::Slice<jule::Any>::make({jule::Any((*(_56730_v))._field_Ident, &__jule_any_type4)}));
				};
			}
		}
		_match_end_1ca2c2da6:;
	};
	if (((*(_56730_v))._field_Scope == nullptr)) {
		_1ca2c741b_pushReference(_self_, &(_56730_v));
	};
	if (((!((*(_56730_v))._field_Binded)) && (((*(_56730_v))._field_Value == nullptr) || ((*((*(_56730_v))._field_Value))._field_Data == nullptr)))) {
		if ((*(_56730_v))._field_Constant) {
			_1b9beb306_checkVar((*(_self_))._field_s, &(_56730_v), jule::Trait<_1b9cacc14_Lookup>((*(_self_))._field_s, 3));
			if ((((*(_56730_v))._field_Value == nullptr) || ((*((*(_56730_v))._field_Value))._field_Data == nullptr))) {
				return nullptr;;
			};
		};
	};
	if ((((*(_56730_v))._field_Kind == nullptr) || ((*((*(_56730_v))._field_Kind))._field_Kind == nullptr))) {
		if (((*(_56730_v))._field_Scope != nullptr)) {
			return nullptr;;
		};
		_1b9beb306_checkVar((*(_self_))._field_s, &(_56730_v), (*(_self_))._field_lookup);
		if ((((*(_56730_v))._field_Kind == nullptr) || ((*((*(_56730_v))._field_Kind))._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	_julec_label_1ca2d22a0:;
	jule::Ptr<_1b9c5d016_Data> _63813_d = jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=(*((*(_56730_v))._field_Kind))._field_Kind, ._field_Mutable=(*(_56730_v))._field_Mutable, ._field_Reference=(*(_56730_v))._field_Reference, ._field_Lvalue=(!((*(_56730_v))._field_Constant)), ._field_Model=jule::Any(_56730_v, &__jule_any_type8), });;
	if ((((!((*(_56730_v))._field_Binded)) && _1b9c09996_IsInitialized(_56730_v.ptr())) && ((*((*(_56730_v))._field_Value))._field_Data != nullptr))) {
		(*(_63813_d))._field_IsRune=(*((*((*(_56730_v))._field_Value))._field_Data))._field_IsRune;
	};
	if (((*(_56730_v))._field_Constant && ((*((*((*(_56730_v))._field_Value))._field_Data))._field_Constant != nullptr))) {
		(*(_63813_d))._field_Constant=jule::new_ptr<_1ec682ce3_Const>((*((*((*((*(_56730_v))._field_Value))._field_Data))._field_Constant)));
		(*(_63813_d))._field_Model=jule::Any((*(_63813_d))._field_Constant, &__jule_any_type19);
		if (_1b9c09eb3_untypedConstant(_56730_v.ptr())) {
			_1b9c612e4_applyNumericPrefix(_self_, &(_63813_d));
			(*(_63813_d))._field_untyped=true;
		};
	};
	return _63813_d;;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c66a03_evalTypeAlias(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9c8c3db_TypeAlias> _66236_ta, jule::Ptr<_1b9b032eb_Token> _66252_errorToken) {
	if ((!(_1b9bd5763_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_66236_ta))._field_Public, (*(_66236_ta))._field_Token)))) {
		_1b9c6025a_pushErr(_self_, _66252_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_66236_ta))._field_Ident, &__jule_any_type4)}));
		_1b9c605bd_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_66236_ta))._field_Used=true;
	jule::Trait<_1b9c8cc27_Kind> _67113_kind = (*((*((*(_66236_ta))._field_Kind))._field_Kind))._field_Kind;;
	jule::Ptr<_1b9c5d016_Data> _67217_d = nullptr;;
	{
		auto &_match_expr{ _67113_kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1ca2dd047:;
			{
				_67217_d=_1b9c6454a__evalStruct(_self_, _67113_kind.cast_ptr<_1b9b3c137_StructIns>(0));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1ca2dcd6b:;
			{
				_67217_d=_1b9c635c1__evalEnum(_self_, _67113_kind.cast_ptr<_1b9b64c0e_Enum>(3));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1ca2db133:;
			{
				_67217_d=_1b9c63d0d__evalTypeEnum(_self_, _67113_kind.cast_ptr<_1b9b66419_TypeEnum>(4));
			}
		}
		else {
			_case_begin_1ca2db0bc:;
			{
				_67217_d=jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=(*((*((*(_66236_ta))._field_Kind))._field_Kind))._field_Kind}), ._field_Decl=true, });
				if ((*(_66236_ta))._field_Binded) {
					(*((*(_67217_d))._field_Kind))._field_BindIdent=(*(_66236_ta))._field_Ident;
				} else {
					(*((*(_67217_d))._field_Kind))._field_BindIdent=(*((*((*(_66236_ta))._field_Kind))._field_Kind))._field_BindIdent;
				};
				(*(_67217_d))._field_Model=jule::Any((*(_67217_d))._field_Kind, &__jule_any_type83);
			}
		}
		_match_end_1ca2db067:;
	};
	(*((*(_67217_d))._field_Kind))._field_Generic=(*(_66236_ta))._field_Generic;
	return _67217_d;;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c66dee_evalDef(_1b9c5ec0a_Eval* _self_, jule::Any* _69831_def, jule::Ptr<_1b9b032eb_Token> _69841_ident) {
	{
		auto &_match_expr{ (*(_69831_def)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ca2e139c:;
			{
				return _1b9c66607_evalVar(_self_, (*(_69831_def)).cast_ptr<_1b9c09611_Var>(&__jule_any_type8), _69841_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1ca2e1413:;
			{
				return _1b9c639bc_evalEnum(_self_, (*(_69831_def)).cast_ptr<_1b9b64c0e_Enum>(&__jule_any_type67), _69841_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1ca2e1479:;
			{
				return _1b9c64209_evalTypeEnum(_self_, (*(_69831_def)).cast_ptr<_1b9b66419_TypeEnum>(&__jule_any_type68), _69841_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ca2e14e0:;
			{
				return _1b9c64946_evalStruct(_self_, _1b9b3981b_instance((*(_69831_def)).cast_ptr<_1b9b393a9_Struct>(&__jule_any_type65)), _69841_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ca2e1556:;
			{
				jule::Ptr<_1b9b4e26a_Fn> _70917_f = (*(_69831_def)).cast_ptr<_1b9b4e26a_Fn>(&__jule_any_type64);;
				if ((!(*(_70917_f))._field_Ident.equal("init", 4))) {
					return _1b9c654e6_evalFn(_self_, _70917_f, _69841_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ca2e15cd:;
			{
				return _1b9c64c87_evalFnIns(_self_, (*(_69831_def)).cast_ptr<_1b9b5216e_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ca2e1655:;
			{
				return _1b9c66a03_evalTypeAlias(_self_, (*(_69831_def)).cast_ptr<_1b9c8c3db_TypeAlias>(&__jule_any_type66), _69841_ident);;
			}
		}
		_match_end_1ca2e1347:;
	};
	_1b9c6025a_pushErr(_self_, _69841_ident, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_69841_ident))._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c67240_evalIdent(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b1e526_IdentExpr> _72228_ident) {
	jule::Any _72313_def = _1b9c62ec7_getDef(_self_, &((*(_72228_ident))._field_Ident), (*(_72228_ident))._field_Binded);;
	return _1b9c66dee_evalDef(_self_, &(_72313_def), (*(_72228_ident))._field_Token);;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c67581_evalUnary(jule::Ptr<_1b9c5ec0a_Eval> _self_, jule::Ptr<_1b9b1eba8_UnaryExpr> _72733_u) {
	_1b9c7d19b_unaryEval _72813_unary = static__1b9c7d5db_new(_self_);;
	return _1b9c7ea1b_eval(&_72813_unary, _72733_u);;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c678c2_evalVariadic(jule::Ptr<_1b9c5ec0a_Eval> _self_, jule::Ptr<_1b9b20082_VariadicExpr> _73236_v) {
	if (((*(_73236_v))._field_Expr == nullptr)) {
		_1b9c6025a_pushErr(_self_.ptr(), (*(_73236_v))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b9c8d1cd_TypeKind> _73813_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_73813_prefix;
	});;
	jule::Ptr<_1b9c5d016_Data> _74213_d = _1b9c7cbd4_evalExpr(_self_, (*(_73236_v))._field_Expr);;
	if ((_74213_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1b9c90598_Variadicable((*(_74213_d))._field_Kind.ptr())))) {
		_1b9c6025a_pushErr(_self_.ptr(), (*(_73236_v))._field_Token, jule::Str::lit("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_74213_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9c9a2a6_Slc> _75213_slc = _1b9c91885_Slc((*(_74213_d))._field_Kind.ptr());;
	(*(_74213_d))._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_BindIdent=(*((*(_75213_slc))._field_Elem))._field_BindIdent, ._field_Generic=(*((*(_75213_slc))._field_Elem))._field_Generic, ._field_Variadic=true, ._field_Kind=(*((*(_75213_slc))._field_Elem))._field_Kind});
	return _74213_d;;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c67c13_evalUnsafe(jule::Ptr<_1b9c5ec0a_Eval> _self_, jule::Ptr<_1b9b1e070_UnsafeExpr> _76234_u) {
	jule::Bool _7639_unsafety = (*(_self_))._field_unsafety;;
	(*(_self_))._field_unsafety=true;
	jule::Ptr<_1b9c5d016_Data> _76513_d = _1b9c7cbd4_evalExpr(_self_, (*(_76234_u))._field_Expr);;
	(*(_self_))._field_unsafety=_7639_unsafety;
	return _76513_d;;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c68054_evalArr(jule::Ptr<_1b9c5ec0a_Eval> _self_, jule::Ptr<_1b9b2411e_SliceExpr> _77031_s) {
	jule::Ptr<_1b9c9c5c7_Arr> _77213_pt = _1b9c915ee_Arr((*(_self_))._field_prefix.ptr());;
	jule::Ptr<_1b9c9c5c7_Arr> _77413_arr = jule::new_ptr<_1b9c9c5c7_Arr>(_1b9c9c5c7_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=(*(_77213_pt))._field_Elem});;
	jule::Bool _78013_filled = false;;
	if (((*(_77031_s))._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ (*((*(_77031_s))._field_Exprs[1LL]))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type75) {
				_case_begin_1ca3018eb:;
				{
					if (((*((*((*(_77031_s))._field_Exprs[1LL]))._field_Kind.cast_ptr<_1b9b20082_VariadicExpr>(&__jule_any_type75)))._field_Expr != nullptr)) {
						goto _match_end_1ca301852;
					};
					if ((*(_77213_pt))._field_Auto) {
						_1b9c6025a_pushErr(_self_.ptr(), (*(_77031_s))._field_Token, jule::Str::lit("auto-sized arrays cannot filled", 31), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_78013_filled=true;
					(*(_77031_s))._field_Exprs=(*(_77031_s))._field_Exprs.slice(0LL, 1LL);
				}
			}
			_match_end_1ca301852:;
		};
	};
	(*(_77413_arr))._field_N=static_cast<jule::I32>((*(_77031_s))._field_Exprs.len());
	if ((!((*(_77213_pt))._field_Auto))) {
		if (((*(_77413_arr))._field_N > (*(_77213_pt))._field_N)) {
			_1b9c6025a_pushErr(_self_.ptr(), (*(_77031_s))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else if (((*(_77413_arr))._field_N < (*(_77213_pt))._field_N)) {
			(*(_77413_arr))._field_N=(*(_77213_pt))._field_N;
		};
	};
	jule::Ptr<_1b9b46927_ArrayExprModel> _80913_model = jule::new_ptr<_1b9b46927_ArrayExprModel>(_1b9b46927_ArrayExprModel{._field_Kind=_77413_arr, });;
	if (_78013_filled) {
		(*(_80913_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		(*(_80913_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*(_77031_s))._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_1b9c8d1cd_TypeKind> _81813_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=(*(_77413_arr))._field_Elem;
	{
		auto expr = &((*(_77031_s))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca3069de:;
		if (it != expr_end) {
			jule::Ptr<_1b9b1caeb_Expr> _82021_elem = *it;
			{
				jule::Ptr<_1b9c5d016_Data> _82117_d = _1b9c7cbd4_evalExpr(_self_, _82021_elem);;
				if ((_82117_d == nullptr)) {
					goto _iter_next_1ca3069de;
				};
				_1b9bdca12_checkAssignType((*(_self_))._field_s, false, &((*(_77413_arr))._field_Elem), &(_82117_d), (*(_77031_s))._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = (*(_80913_model))._field_Elems; __jule_push_dest.push((*(_82117_d))._field_Model); };
			}
			_iter_next_1ca3069de:;
			++it;
			goto _iter_begin_1ca3069de;
		}
		_iter_end_1ca3069de:;
	};
	(*(_self_))._field_prefix=_81813_prefix;
	if (_78013_filled) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_80913_model))._field_Elems; __jule_push_dest.push(nullptr); };
	};
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(_77413_arr, 25)}), ._field_Mutable=true, ._field_Model=jule::Any(_80913_model, &__jule_any_type84), });;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c6850a_evalExpSlc(jule::Ptr<_1b9c5ec0a_Eval> _self_, jule::Ptr<_1b9b2411e_SliceExpr> _84434_s, jule::Ptr<_1b9c8d1cd_TypeKind> _84453_t, jule::Any _84471_first) {
	jule::Ptr<_1b9c9a2a6_Slc> _84513_slc = jule::new_ptr<_1b9c9a2a6_Slc>(_1b9c9a2a6_Slc{._field_Elem=_84453_t});;
	jule::I32 _84913_i = 0LL;;
	jule::Ptr<_1b9b438d0_SliceExprModel> _85013_model = jule::new_ptr<_1b9b438d0_SliceExprModel>(_1b9b438d0_SliceExprModel{._field_ElemKind=_84453_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*(_84434_s))._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_84471_first != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_85013_model))._field_Elems; __jule_push_dest.push(_84471_first); };
		_84913_i=1LL;
	};
	jule::Ptr<_1b9c8d1cd_TypeKind> _85913_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=(*(_84513_slc))._field_Elem;
	{
		auto expr = (*(_84434_s))._field_Exprs.slice(_84913_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ca30e310:;
		if (it != expr_end) {
			jule::Ptr<_1b9b1caeb_Expr> _86121_elem = *it;
			{
				jule::Ptr<_1b9c5d016_Data> _86217_d = _1b9c7cbd4_evalExpr(_self_, _86121_elem);;
				if ((_86217_d == nullptr)) {
					goto _iter_next_1ca30e310;
				};
				_1b9bdca12_checkAssignType((*(_self_))._field_s, false, &((*(_84513_slc))._field_Elem), &(_86217_d), (*(_84434_s))._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = (*(_85013_model))._field_Elems; __jule_push_dest.push((*(_86217_d))._field_Model); };
			}
			_iter_next_1ca30e310:;
			++it;
			goto _iter_begin_1ca30e310;
		}
		_iter_end_1ca30e310:;
	};
	(*(_self_))._field_prefix=_85913_prefix;
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(_84513_slc, 22)}), ._field_Mutable=true, ._field_Model=jule::Any(_85013_model, &__jule_any_type76), });;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c6884b_evalSliceExpr(jule::Ptr<_1b9c5ec0a_Eval> _self_, jule::Ptr<_1b9b2411e_SliceExpr> _88037_s) {
	if (((*(_self_))._field_prefix != nullptr)) {
		{
			
			if ((_1b9c915ee_Arr((*(_self_))._field_prefix.ptr()) != nullptr)) {
				_case_begin_1ca312c81:;
				{
					return _1b9c68054_evalArr(_self_, _88037_s);;
				}
			}
			else if ((_1b9c91885_Slc((*(_self_))._field_prefix.ptr()) != nullptr)) {
				_case_begin_1ca312d08:;
				{
					jule::Ptr<_1b9c9a2a6_Slc> _88621_pt = _1b9c91885_Slc((*(_self_))._field_prefix.ptr());;
					return _1b9c6850a_evalExpSlc(_self_, _88037_s, (*(_88621_pt))._field_Elem, nullptr);;
				}
			}
			_match_end_1ca312b71:;
		};
	};
	jule::Ptr<_1b9c8d1cd_TypeKind> _89113_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	if (((*(_88037_s))._field_Exprs.len() == 0LL)) {
		_1b9c6025a_pushErr(_self_.ptr(), (*(_88037_s))._field_Token, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b9c5d016_Data> _89913_firstElem = _1b9c7cbd4_evalExpr(_self_, (*(_88037_s))._field_Exprs[0LL]);;
	if ((_89913_firstElem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b9c5d016_Data> _90413_d = _1b9c6850a_evalExpSlc(_self_, _88037_s, (*(_89913_firstElem))._field_Kind, (*(_89913_firstElem))._field_Model);;
	(*(_self_))._field_prefix=_89113_prefix;
	return _90413_d;;
}



inline void _1b9c68bae_checkIntegerIndexingByData(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9c5d016_Data>* _91050_d, jule::Ptr<_1b9b032eb_Token> _91060_token) {
	jule::Str _9119_err_key = _1b9c88ccd_checkDataForIntegerIndexing(_91050_d);;
	{
		auto &_match_expr{ _9119_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1ca31856c:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str::lit("type @ is invalid for indexing", 30)) {
			_case_begin_1ca318d97:;
			{
				_1b9c6025a_pushErr(_self_, _91060_token, _9119_err_key, jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*((*(_91050_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_1ca318a78:;
			{
				_1b9c6025a_pushErr(_self_, _91060_token, _9119_err_key, jule::Slice<jule::Any>());
			}
		}
		_match_end_1ca318a23:;
	};
}



inline void _1b9c690cc_indexingPtr(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9c5d016_Data>* _92235_d, jule::Ptr<_1b9c5d016_Data>* _92250_index, jule::Ptr<_1b9b24aae_IndexingExpr>* _92265_i) {
	_1b9c68bae_checkIntegerIndexingByData(_self_, _92250_index, (*((*(_92265_i))))._field_Token);
	(*((*(_92235_d))))._field_Lvalue=true;
	jule::Ptr<_1b9c9d09a_Ptr> _92613_ptr = _1b9c90d4b_Ptr((*((*(_92235_d))))._field_Kind.ptr());;
	{
		
		if (_1b9c9dad4_IsUnsafe(_92613_ptr.ptr())) {
			_case_begin_1ca31b707:;
			{
				_1b9c6025a_pushErr(_self_, (*((*(_92265_i))))._field_Token, jule::Str::lit("unsafe pointers are not supports indexing", 41), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1b9c60c50_isUnsafe(_self_)))) {
			_case_begin_1ca31b77e:;
			{
				_1b9c6025a_pushErr(_self_, (*((*(_92265_i))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ca31b6a2:;
	};
	(*((*(_92235_d))))._field_Kind=(*(_92613_ptr))._field_Elem;
}



inline void _1b9c694ea_indexingArr(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9c5d016_Data>* _93835_d, jule::Ptr<_1b9c5d016_Data>* _93850_index, jule::Ptr<_1b9b24aae_IndexingExpr>* _93865_i) {
	jule::Ptr<_1b9c9c5c7_Arr> _93913_arr = _1b9c915ee_Arr((*((*(_93835_d))))._field_Kind.ptr());;
	(*((*(_93835_d))))._field_Kind=(*(_93913_arr))._field_Elem;
	_1b9c68bae_checkIntegerIndexingByData(_self_, _93850_index, (*((*(_93865_i))))._field_Token);
	(*((*(_93835_d))))._field_Lvalue=true;
	if ((_1b9c5d8da_IsConst((*(_93850_index)).ptr()) && (_1ec6859a5_AsF64((*((*(_93850_index))))._field_Constant.ptr()) >= static_cast<jule::F64>((*(_93913_arr))._field_N)))) {
		_1b9c6025a_pushErr(_self_, (*((*(_93865_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
	};
}



inline void _1b9c69918_indexingSlc(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9c5d016_Data>* _94835_d, jule::Ptr<_1b9c5d016_Data>* _94850_index, jule::Ptr<_1b9b24aae_IndexingExpr>* _94865_i) {
	jule::Ptr<_1b9c9a2a6_Slc> _94913_slc = _1b9c91885_Slc((*((*(_94835_d))))._field_Kind.ptr());;
	(*((*(_94835_d))))._field_Kind=(*(_94913_slc))._field_Elem;
	_1b9c68bae_checkIntegerIndexingByData(_self_, _94850_index, (*((*(_94865_i))))._field_Token);
	(*((*(_94835_d))))._field_Lvalue=true;
	if ((!(_1b9c5d8da_IsConst((*(_94850_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_94835_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1ca3237a8:;
			{
				jule::Ptr<_1b9b438d0_SliceExprModel> _96017_m = (*((*(_94835_d))))._field_Model.cast_ptr<_1b9b438d0_SliceExprModel>(&__jule_any_type76);;
				jule::F64 _96113_indx = _1ec6859a5_AsF64((*((*(_94850_index))))._field_Constant.ptr());;
				if ((_96113_indx >= static_cast<jule::F64>((*(_96017_m))._field_Elems.len()))) {
					_1b9c6025a_pushErr(_self_, (*((*(_94865_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
				} else {
					(*((*(_94835_d))))._field_Model=(*(_96017_m))._field_Elems[static_cast<jule::I32>(static_cast<jule::U64>(_96113_indx))];
					(*((*(_94835_d))))._field_Decl=true;
				};
			}
		}
		_match_end_1ca323753:;
	};
}



inline void _1b9c69d36_indexingMap(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9c5d016_Data>* _97135_d, jule::Ptr<_1b9c5d016_Data>* _97150_index, jule::Ptr<_1b9b24aae_IndexingExpr>* _97169_i) {
	(*((*(_97135_d))))._field_Lvalue=true;
	if (((*(_97150_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1b9c9b94a_Map> _97613_m = _1b9c923be_Map((*((*(_97135_d))))._field_Kind.ptr());;
	_1b9c46ad2_assignTypeChecker _97713_atc = _1b9c46ad2_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_97613_m))._field_Key, ._field_d=(*(_97150_index)), ._field_errorToken=(*((*(_97169_i))))._field_Token};;
	_1b9c47d47_check(&_97713_atc);
	(*((*(_97135_d))))._field_Kind=(*(_97613_m))._field_Val;
}



inline void _1b9c6a254_indexingStr(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9c5d016_Data>* _98735_d, jule::Ptr<_1b9c5d016_Data>* _98750_index, jule::Ptr<_1b9b24aae_IndexingExpr>* _98765_i) {
	(*((*(_98735_d))))._field_Kind=_1b9d7b5b8_primU8;
	(*((*(_98735_d))))._field_Mutable=false;
	(*((*(_98735_d))))._field_Lvalue=true;
	if (((*(_98750_index)) == nullptr)) {
		return;;
	};
	_1b9c68bae_checkIntegerIndexingByData(_self_, _98750_index, (*((*(_98765_i))))._field_Token);
	if ((!(_1b9c5d8da_IsConst((*(_98750_index)).ptr())))) {
		(*((*(_98735_d))))._field_Constant=nullptr;
		return;;
	};
	if (_1b9c5d8da_IsConst((*(_98735_d)).ptr())) {
		jule::Ptr<_1b9b032eb_Token> _100413_errorToken = (*((*(_98765_i))))._field_Token;;
		jule::I64 _100513_j = _1ec685488_AsI64((*((*(_98750_index))))._field_Constant.ptr());;
		jule::Str _100613_s = _1ec684e6b_ReadStr((*((*(_98735_d))))._field_Constant.ptr());;
		if ((static_cast<jule::I32>(_100513_j) >= _100613_s.len())) {
			_1b9c6025a_pushErr(_self_, _100413_errorToken, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else {
			_1ec686016_SetU64((*((*(_98735_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_100613_s[static_cast<jule::I32>(_100513_j)])));
		};
	};
}



inline void _1b9c6a672_toIndexing(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9c5d016_Data>* _101534_d, jule::Ptr<_1b9c5d016_Data>* _101549_index, jule::Ptr<_1b9b24aae_IndexingExpr>* _101568_i) {
	{
		
		if ((_1b9c90d4b_Ptr((*((*(_101534_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca32e044:;
			{
				_1b9c690cc_indexingPtr(_self_, _101534_d, _101549_index, _101568_i);
				return;;
			}
		}
		else if ((_1b9c915ee_Arr((*((*(_101534_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca32e0bb:;
			{
				_1b9c694ea_indexingArr(_self_, _101534_d, _101549_index, _101568_i);
				return;;
			}
		}
		else if ((_1b9c91885_Slc((*((*(_101534_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca32e143:;
			{
				_1b9c69918_indexingSlc(_self_, _101534_d, _101549_index, _101568_i);
				return;;
			}
		}
		else if ((_1b9c923be_Map((*((*(_101534_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca32e1ba:;
			{
				_1b9c69d36_indexingMap(_self_, _101534_d, _101549_index, _101568_i);
				return;;
			}
		}
		else if ((_1b9c9082e_Prim((*((*(_101534_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca32e242:;
			{
				jule::Ptr<_1b9c95ca7_Prim> _103013_prim = _1b9c9082e_Prim((*((*(_101534_d))))._field_Kind.ptr());;
				{
					
					if (_1b9c9923e_IsStr(_103013_prim.ptr())) {
						_case_begin_1ca3332ac:;
						{
							_1b9c6a254_indexingStr(_self_, _101534_d, _101549_index, _101568_i);
							return;;
						}
					}
					_match_end_1ca333224:;
				};
			}
		}
		_match_end_1ca32de01:;
	};
	_1b9c6025a_pushErr(_self_, (*((*(_101568_i))))._field_Token, jule::Str::lit("type @ is not support indexing", 30), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*((*(_101534_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Bool _1b9c6ab28_pushGenericsFromExprSubIdent(jule::Ptr<_1b9c5ec0a_Eval> _self_, jule::Ptr<_1b9b20c0e_SubIdentExpr>* _104053_sexpr, jule::Slice<jule::Ptr<_1b9b187b7_TypeDecl>>* _104114_generics, jule::Ptr<_1b9b1caeb_Expr>* _104142_expr) {
	jule::Ptr<_1b9b191be_SubIdentTypeDecl> _104213_t = jule::new_ptr<_1b9b191be_SubIdentTypeDecl>();;
	if ((!(_1b9c89bbe_pushSubIdentFromExpr(jule::Any((*(_104053_sexpr)), &__jule_any_type85), &(_104213_t))))) {
		_1b9c6025a_pushErr(_self_.ptr(), (*((*(_104142_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_1b9b187b7_TypeDecl>> &__jule_push_dest = (*(_104114_generics)); __jule_push_dest.push(jule::new_ptr<_1b9b187b7_TypeDecl>(_1b9b187b7_TypeDecl{._field_Kind=jule::Any(_104213_t, &__jule_any_type86)})); };
	return true;;
}



inline jule::Bool _1b9c6b024_pushGenericsFromData(jule::Ptr<_1b9c5ec0a_Eval> _self_, jule::Slice<jule::Ptr<_1b9b187b7_TypeDecl>>* _105145_generics, jule::Ptr<_1b9b1caeb_Expr>* _105173_expr) {
	{
		auto &_match_expr{ (*((*(_105173_expr))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1ca33669a:;
			{
				jule::Ptr<_1b9b1eba8_UnaryExpr> _105417_u = (*((*(_105173_expr))))._field_Kind.cast_ptr<_1b9b1eba8_UnaryExpr>(&__jule_any_type87);;
				{
					auto &_match_expr{ (*((*(_105417_u))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(62LLU)) {
						_case_begin_1ca338290:;
						{
							jule::Ptr<_1b9b1a2e1_PtrTypeDecl> _105721_kind = jule::new_ptr<_1b9b1a2e1_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_1b9b187b7_TypeDecl>> _105821__generics = jule::Slice<jule::Ptr<_1b9b187b7_TypeDecl>>::alloc(0LL, 1LL);;
							_1b9c6b024_pushGenericsFromData(_self_, &(_105821__generics), &((*(_105417_u))._field_Expr));
							(*(_105721_kind))._field_Elem=_105821__generics[0LL];
							{ jule::Slice<jule::Ptr<_1b9b187b7_TypeDecl>> &__jule_push_dest = (*(_105145_generics)); __jule_push_dest.push(jule::new_ptr<_1b9b187b7_TypeDecl>(_1b9b187b7_TypeDecl{._field_Token=(*((*(_105173_expr))))._field_Token, ._field_Kind=jule::Any(_105721_kind, &__jule_any_type71)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U32>(65LLU)) {
						_case_begin_1ca339406:;
						{
							jule::Ptr<_1b9b19862_SptrTypeDecl> _106621_kind = jule::new_ptr<_1b9b19862_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_1b9b187b7_TypeDecl>> _106721__generics = jule::Slice<jule::Ptr<_1b9b187b7_TypeDecl>>::alloc(0LL, 1LL);;
							_1b9c6b024_pushGenericsFromData(_self_, &(_106721__generics), &((*(_105417_u))._field_Expr));
							(*(_106621_kind))._field_Elem=_106721__generics[0LL];
							{ jule::Slice<jule::Ptr<_1b9b187b7_TypeDecl>> &__jule_push_dest = (*(_105145_generics)); __jule_push_dest.push(jule::new_ptr<_1b9b187b7_TypeDecl>(_1b9b187b7_TypeDecl{._field_Token=(*((*(_105173_expr))))._field_Token, ._field_Kind=jule::Any(_106621_kind, &__jule_any_type72)})); };
						}
					}
					else {
						_case_begin_1ca3387ce:;
						{
							_1b9c6025a_pushErr(_self_.ptr(), (*(_105417_u))._field_Op, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1ca338779:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1ca337624:;
			{
				{ jule::Slice<jule::Ptr<_1b9b187b7_TypeDecl>> &__jule_push_dest = (*(_105145_generics)); __jule_push_dest.push((*((*(_105173_expr))))._field_Kind.cast_ptr<_1b9b187b7_TypeDecl>(&__jule_any_type88)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1ca33768a:;
			{
				jule::Ptr<_1b9b20c0e_SubIdentExpr> _108117_sexpr = (*((*(_105173_expr))))._field_Kind.cast_ptr<_1b9b20c0e_SubIdentExpr>(&__jule_any_type85);;
				return _1b9c6ab28_pushGenericsFromExprSubIdent(_self_, &(_108117_sexpr), _105145_generics, _105173_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ca337701:;
			{
				jule::Ptr<_1b9b1e526_IdentExpr> _108417_ident = (*((*(_105173_expr))))._field_Kind.cast_ptr<_1b9b1e526_IdentExpr>(&__jule_any_type79);;
				{ jule::Slice<jule::Ptr<_1b9b187b7_TypeDecl>> &__jule_push_dest = (*(_105145_generics)); __jule_push_dest.push(jule::new_ptr<_1b9b187b7_TypeDecl>(_1b9b187b7_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1b9b18dc2_IdentTypeDecl>(_1b9b18dc2_IdentTypeDecl{._field_Token=(*(_108417_ident))._field_Token, ._field_Ident=(*(_108417_ident))._field_Ident, ._field_Binded=(*(_108417_ident))._field_Binded, }), &__jule_any_type20)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1ca336a63:;
			{
				{
					auto expr = &((*((*((*(_105173_expr))))._field_Kind.cast_ptr<_1b9b1d7bc_TupleExpr>(&__jule_any_type80)))._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ca340e13:;
					if (it != expr_end) {
						jule::Ptr<_1b9b1caeb_Expr> _109325_texpr = *it;
						{
							if ((!(_1b9c6b024_pushGenericsFromData(_self_, _105145_generics, &(_109325_texpr))))) {
								return false;;
							};
						}
						_iter_next_1ca340e13:;
						++it;
						goto _iter_begin_1ca340e13;
					}
					_iter_end_1ca340e13:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1ca336ac9:;
			{
				jule::Ptr<_1b9b20835_NsSelectionExpr> _109917_ns = (*((*(_105173_expr))))._field_Kind.cast_ptr<_1b9b20835_NsSelectionExpr>(&__jule_any_type89);;
				jule::Ptr<_1b9b18dc2_IdentTypeDecl> _110017_decl = jule::new_ptr<_1b9b18dc2_IdentTypeDecl>(_1b9b18dc2_IdentTypeDecl{._field_Token=(*(_109917_ns))._field_Ident, ._field_Ident=(*((*(_109917_ns))._field_Ident))._field_Kind, });;
				{ jule::Slice<jule::Ptr<_1b9b187b7_TypeDecl>> &__jule_push_dest = (*(_105145_generics)); __jule_push_dest.push(jule::new_ptr<_1b9b187b7_TypeDecl>(_1b9b187b7_TypeDecl{._field_Token=(*(_110017_decl))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1b9b19565_NamespaceTypeDecl>(_1b9b19565_NamespaceTypeDecl{._field_Idents=(*(_109917_ns))._field_Ns, ._field_Kind=jule::new_ptr<_1b9b187b7_TypeDecl>(_1b9b187b7_TypeDecl{._field_Token=(*(_110017_decl))._field_Token, ._field_Kind=jule::Any(_110017_decl, &__jule_any_type20)})}), &__jule_any_type90)})); };
			}
		}
		else {
			_case_begin_1ca3369ec:;
			{
				_1b9c6025a_pushErr(_self_.ptr(), (*((*(_105173_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1ca336997:;
	};
	return true;;
}



inline void _1b9c6b387_evalIdentDeclFromIndexing(jule::Ptr<_1b9c5ec0a_Eval> _self_, jule::Ptr<_1b9c5d016_Data>* _112150_d, jule::Ptr<_1b9b24aae_IndexingExpr>* _112165_i) {
	jule::Ptr<_1b9b3c137_StructIns> _112213_s = _1b9c91da2_Struct((*((*(_112150_d))))._field_Kind.ptr());;
	if ((_112213_s == nullptr)) {
		_1b9c6025a_pushErr(_self_.ptr(), (*((*((*(_112165_i))))._field_Expr))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*((*(_112150_d))))._field_Kind.ptr()), &__jule_any_type4)}));
		(*(_112150_d))=nullptr;
		return;;
	};
	jule::Ptr<_1b9b18dc2_IdentTypeDecl> _112917_decl = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_112165_i))))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ca346600:;
			{
				jule::Ptr<_1b9b1e526_IdentExpr> _113217_expr = (*((*((*(_112165_i))))._field_Expr))._field_Kind.cast_ptr<_1b9b1e526_IdentExpr>(&__jule_any_type79);;
				_112917_decl=jule::new_ptr<_1b9b18dc2_IdentTypeDecl>(_1b9b18dc2_IdentTypeDecl{._field_Token=(*(_113217_expr))._field_Token, ._field_Ident=(*(_113217_expr))._field_Ident, ._field_Binded=(*(_113217_expr))._field_Binded, });
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1ca347876:;
			{
				jule::Ptr<_1b9b20835_NsSelectionExpr> _113917_expr = (*((*((*(_112165_i))))._field_Expr))._field_Kind.cast_ptr<_1b9b20835_NsSelectionExpr>(&__jule_any_type89);;
				_112917_decl=jule::new_ptr<_1b9b18dc2_IdentTypeDecl>(_1b9b18dc2_IdentTypeDecl{._field_Token=(*(_113917_expr))._field_Ident, ._field_Ident=(*((*(_113917_expr))._field_Ident))._field_Kind, });
			}
		}
		else {
			_case_begin_1ca346a73:;
			{
				_1b9c6025a_pushErr(_self_.ptr(), (*((*(_112165_i))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				(*(_112150_d))=nullptr;
				return;;
			}
		}
		_match_end_1ca346a1d:;
	};
	if ((!(_1b9c6b024_pushGenericsFromData(_self_, &((*(_112917_decl))._field_Generics), &((*((*(_112165_i))))._field_Index))))) {
		(*(_112150_d))=nullptr;
		return;;
	};
	_112213_s=({ auto _wrap_copy = _1b9c72d83_typeChecker(_self_.ptr()); _1b9ca3ed5_fromStruct(&_wrap_copy, &(_112917_decl), &((*(_112213_s))._field_Decl)); });
	if ((_112213_s == nullptr)) {
		(*(_112150_d))=nullptr;
		return;;
	};
	(*((*((*(_112150_d))))._field_Kind))._field_Kind=jule::Trait<_1b9c8cc27_Kind>(_112213_s, 0);
}



inline jule::Bool _1b9c6b83d_checkGenericFn(jule::Ptr<_1b9c5ec0a_Eval> _self_, jule::Ptr<_1b9b5216e_FnIns>* _116439_f, jule::Ptr<_1b9b032eb_Token>* _116455_et, jule::Any* _116472_model) {
	jule::Bool _11659_ok = _1b9be010d_reloadFnInsTypes((*(_self_))._field_s, (*(_116439_f)));;
	(*((*(_116439_f))))._field_reloaded=true;
	if ((!(_11659_ok))) {
		return false;;
	};
	jule::Ptr<_1b9b5216e_FnIns> _117013_existInstance = _1b9b50cd8_appendInstance((*((*(_116439_f))))._field_Decl.ptr(), _116439_f);;
	if ((!(_1b9bde162_checkConstraintsFn((*(_self_))._field_s, _116439_f, _116455_et, _117013_existInstance)))) {
		return false;;
	};
	if ((_117013_existInstance != nullptr)) {
		(*(_116439_f))=_117013_existInstance;
		_1b9c8984a_updateModelToGenericIns(_116472_model, &(_117013_existInstance));
	} else {
		_1b9c042ba_checkFnInsCaller((*(_self_))._field_s, _116439_f, (*(_116455_et)));
	};
	return true;;
}



inline void _1b9c6bba1_evalFnGenericFromIndexing(jule::Ptr<_1b9c5ec0a_Eval> _self_, jule::Ptr<_1b9c5d016_Data>* _118950_d, jule::Ptr<_1b9b24aae_IndexingExpr>* _118965_i) {
	jule::Slice<jule::Ptr<_1b9b187b7_TypeDecl>> _119013_generics = jule::Slice<jule::Ptr<_1b9b187b7_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_1b9c6b024_pushGenericsFromData(_self_, &(_119013_generics), &((*((*(_118965_i))))._field_Index))))) {
		(*(_118950_d))=nullptr;
		return;;
	};
	jule::Ptr<_1b9b5216e_FnIns> _119613_f = _1b9c91b1b_Fn((*((*(_118950_d))))._field_Kind.ptr());;
	jule::I32 _119713_genericsLen = 0LL;;
	if (((*(_119613_f))._field_Decl != nullptr)) {
		_119713_genericsLen=static_cast<jule::I32>((*((*(_119613_f))._field_Decl))._field_Generics.len());
	};
	if ((!(_1b9bd6533_checkGenericQuantity((*(_self_))._field_s.ptr(), _119713_genericsLen, static_cast<jule::I32>(_119013_generics.len()), (*((*((*(_118965_i))))._field_Expr))._field_Token)))) {
		(*(_118950_d))=nullptr;
		return;;
	};
	(*(_119613_f))._field_Generics=jule::Slice<jule::Ptr<_1b9c8b7e7_InsGeneric>>::alloc(0LL, (*((*(_119613_f))._field_Decl))._field_Generics.len());
	{
		auto expr = &(_119013_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca354465:;
		if (it != expr_end) {
			jule::Ptr<_1b9b187b7_TypeDecl> _120821_g = *it;
			{
				jule::Ptr<_1b9c5d016_Data> _120917_k = _1b9c731c4_evalType(_self_.ptr(), _120821_g);;
				if ((_120917_k == nullptr)) {
					(*(_118950_d))=nullptr;
					return;;
				};
				{ jule::Slice<jule::Ptr<_1b9c8b7e7_InsGeneric>> &__jule_push_dest = (*(_119613_f))._field_Generics; __jule_push_dest.push(jule::new_ptr<_1b9c8b7e7_InsGeneric>(_1b9c8b7e7_InsGeneric{._field_Kind=(*(_120917_k))._field_Kind, })); };
			}
			_iter_next_1ca354465:;
			++it;
			goto _iter_begin_1ca354465;
		}
		_iter_end_1ca354465:;
	};
	if (_1b9b53604_IsBuiltin(_119613_f.ptr())) {
		return;;
	};
	if (_1b9c6b83d_checkGenericFn(_self_, &(_119613_f), &((*((*((*(_118965_i))))._field_Expr))._field_Token), &((*((*(_118950_d))))._field_Model))) {
		(*((*((*(_118950_d))))._field_Kind))._field_Kind=jule::Trait<_1b9c8cc27_Kind>(_119613_f, 1);
	} else {
		(*(_118950_d))=nullptr;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c6bee2_evalIndexing(jule::Ptr<_1b9c5ec0a_Eval> _self_, jule::Ptr<_1b9b24aae_IndexingExpr> _122836_i) {
	jule::Ptr<_1b9c8d1cd_TypeKind> _122913_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_122913_prefix;
	});;
	jule::Ptr<_1b9c5d016_Data> _123313_d = _1b9c7bdc0_evalExprKind(_self_, (*((*(_122836_i))._field_Expr))._field_Kind);;
	if ((_123313_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_123313_d))._field_Decl) {
		_1b9c6b387_evalIdentDeclFromIndexing(_self_, &(_123313_d), &(_122836_i));
		return _123313_d;;
	};
	if ((_1b9c91b1b_Fn((*(_123313_d))._field_Kind.ptr()) != nullptr)) {
		_1b9c6bba1_evalFnGenericFromIndexing(_self_, &(_123313_d), &(_122836_i));
		return _123313_d;;
	};
	_1b9c5d016_Data _124913_oldData = (*(_123313_d));;
	jule::Ptr<_1b9c5d016_Data> _125113_index = _1b9c7cbd4_evalExpr(_self_, (*(_122836_i))._field_Index);;
	if ((_125113_index == nullptr)) {
		return nullptr;;
	};
	(*(_123313_d))._field_Decl=false;
	_1b9c6a672_toIndexing(_self_.ptr(), &(_123313_d), &(_125113_index), &(_122836_i));
	if (_1b9c5d8da_IsConst(_123313_d.ptr())) {
		(*(_123313_d))._field_Decl=false;
		(*(_123313_d))._field_Model=jule::Any((*(_123313_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_123313_d))._field_Decl) {
		(*(_123313_d))._field_Decl=false;
	} else {
		(*(_123313_d))._field_Model=jule::Any(jule::new_ptr<_1b9b43d86_IndexingExprModel>(_1b9b43d86_IndexingExprModel{._field_Token=(*(_122836_i))._field_Token, ._field_Expr=jule::new_ptr<_1b9c5d016_Data>(_124913_oldData), ._field_Index=_125113_index}), &__jule_any_type45);
	};
	return _123313_d;;
}



inline __jule_tuple_x_1b9c5d016_Data__jule_tuple_x_1b9c5d016_Data _1b9c6c333_evalSlicingExprs(jule::Ptr<_1b9c5ec0a_Eval> _self_, jule::Ptr<_1b9b2521e_SlicingExpr>* _128241_s) {
	__jule_tuple_x_1b9c5d016_Data__jule_tuple_x_1b9c5d016_Data __jule_func_result;
	jule::Ptr<_1b9c8d1cd_TypeKind> _128313_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_128313_prefix;
	});;
	jule::Ptr<_1b9c5d016_Data> _128717_l = nullptr;;
	jule::Ptr<_1b9c5d016_Data> _128817_r = nullptr;;
	if (((*((*(_128241_s))))._field_Start != nullptr)) {
		_128717_l=_1b9c7cbd4_evalExpr(_self_, (*((*(_128241_s))))._field_Start);
		if ((_128717_l != nullptr)) {
			_1b9c68bae_checkIntegerIndexingByData(_self_.ptr(), &(_128717_l), (*((*(_128241_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_128717_l=jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d7a6d8_primInt, ._field_Constant=static__1ec683233_NewI64(0LL)});
		(*((*(_128717_l))._field_Constant))._field_Kind=jule::Str::lit("int", 3);
		(*(_128717_l))._field_Model=jule::Any((*(_128717_l))._field_Constant, &__jule_any_type19);
	};
	if (((*((*(_128241_s))))._field_To != nullptr)) {
		_128817_r=_1b9c7cbd4_evalExpr(_self_, (*((*(_128241_s))))._field_To);
		if ((_128817_r != nullptr)) {
			_1b9c68bae_checkIntegerIndexingByData(_self_.ptr(), &(_128817_r), (*((*(_128241_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _128717_l;
	__jule_func_result.__jule_result_arg1 = _128817_r;
	return __jule_func_result;;
}



inline void _1b9c6c5db_slicingArr(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9c5d016_Data>* _131830_d) {
	jule::Ptr<_1b9c8d1cd_TypeKind> _131913_elemType = (*(_1b9c915ee_Arr((*((*(_131830_d))))._field_Kind.ptr())))._field_Elem;;
	(*((*(_131830_d))))._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(jule::new_ptr<_1b9c9a2a6_Slc>(_1b9c9a2a6_Slc{._field_Elem=_131913_elemType}), 22)});
	(*((*(_131830_d))))._field_Lvalue=false;
	(*((*(_131830_d))))._field_Mutable=((*((*(_131830_d))))._field_Mutable || (!(_1b9c8ea5e_Mutable(_131913_elemType.ptr()))));
}



inline void _1b9c6ca09_slicingStr(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9c5d016_Data>* _133330_d, jule::Ptr<_1b9c5d016_Data>* _133341_l, jule::Ptr<_1b9c5d016_Data>* _133352_r) {
	(*((*(_133330_d))))._field_Lvalue=false;
	(*((*(_133330_d))))._field_Mutable=true;
	if ((!(_1b9c5d8da_IsConst((*(_133330_d)).ptr())))) {
		return;;
	};
	if ((((*(_133341_l)) == nullptr) || ((*(_133352_r)) == nullptr))) {
		(*((*(_133330_d))))._field_Constant=nullptr;
		return;;
	};
	if ((_1b9c5d8da_IsConst((*(_133341_l)).ptr()) && _1b9c5d8da_IsConst((*(_133352_r)).ptr()))) {
		jule::I64 _134613_left = _1ec685488_AsI64((*((*(_133341_l))))._field_Constant.ptr());;
		if ((_134613_left < 0LL)) {
			return;;
		};
		jule::Str _135113_s = _1ec684e6b_ReadStr((*((*(_133330_d))))._field_Constant.ptr());;
		jule::I64 _135217_right = static_cast<jule::I64>(0LL);;
		if (((*(_133352_r)) == nullptr)) {
			_135217_right=static_cast<jule::I64>(static_cast<jule::I64>(_135113_s.len()));
		} else {
			_135217_right=static_cast<jule::I64>(_1ec685488_AsI64((*((*(_133352_r))))._field_Constant.ptr()));
		};
		if ((_134613_left > _135217_right)) {
			return;;
		};
		_1ec686577_SetStr((*((*(_133330_d))))._field_Constant.ptr(), _135113_s.slice(static_cast<jule::I32>(_134613_left), static_cast<jule::I32>(_135217_right)));
		(*((*(_133330_d))))._field_Decl=true;
	} else {
		(*((*(_133330_d))))._field_Constant=nullptr;
	};
}



inline void _1b9c6ced2_checkSlicing(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9c5d016_Data>* _136936_d, jule::Ptr<_1b9c5d016_Data>* _136947_l, jule::Ptr<_1b9c5d016_Data>* _136958_r, jule::Ptr<_1b9b2521e_SlicingExpr>* _136969_s) {
	{
		
		if ((_1b9c915ee_Arr((*((*(_136936_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca36d638:;
			{
				_1b9c6c5db_slicingArr(_self_, _136936_d);
				return;;
			}
		}
		else if ((_1b9c91885_Slc((*((*(_136936_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca36d6b0:;
			{
				return;;
			}
		}
		else if ((_1b9c9082e_Prim((*((*(_136936_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca36d737:;
			{
				jule::Ptr<_1b9c95ca7_Prim> _137713_prim = _1b9c9082e_Prim((*((*(_136936_d))))._field_Kind.ptr());;
				{
					
					if (_1b9c9923e_IsStr(_137713_prim.ptr())) {
						_case_begin_1ca370d33:;
						{
							_1b9c6ca09_slicingStr(_self_, _136936_d, _136947_l, _136958_r);
							return;;
						}
					}
					_match_end_1ca370c9a:;
				};
			}
		}
		_match_end_1ca36d517:;
	};
	_1b9c6025a_pushErr(_self_, (*((*(_136969_s))))._field_Token, jule::Str::lit("type @ is not support slicing", 29), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*((*(_136936_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c6d323_evalSlicing(jule::Ptr<_1b9c5ec0a_Eval> _self_, jule::Ptr<_1b9b2521e_SlicingExpr> _138835_s) {
	jule::Ptr<_1b9c5d016_Data> _138913_d = _1b9c7cbd4_evalExpr(_self_, (*(_138835_s))._field_Expr);;
	if ((_138913_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b9c5d016_Data> _139413_l;;
	jule::Ptr<_1b9c5d016_Data> _139420_r;;
	({
		__jule_tuple_x_1b9c5d016_Data__jule_tuple_x_1b9c5d016_Data __jule_assign_result = _1b9c6c333_evalSlicingExprs(_self_, &(_138835_s));
		_139413_l = __jule_assign_result.__jule_result_arg0;
		_139420_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_139413_l == nullptr)) {
		return _138913_d;;
	};
	(*(_138913_d))._field_Decl=false;
	_1b9c6ced2_checkSlicing(_self_.ptr(), &(_138913_d), &(_139413_l), &(_139420_r), &(_138835_s));
	if (_1b9c5d8da_IsConst(_138913_d.ptr())) {
		(*(_138913_d))._field_Decl=false;
		(*(_138913_d))._field_Model=jule::Any((*(_138913_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_138913_d))._field_Decl) {
		(*(_138913_d))._field_Decl=false;
	} else {
		jule::Ptr<_1b9b45173_SlicingExprModel> _141217_model = jule::new_ptr<_1b9b45173_SlicingExprModel>(_1b9b45173_SlicingExprModel{._field_Token=(*(_138835_s))._field_Token, ._field_Expr=(*(_138913_d))._field_Model, ._field_Left=(*(_139413_l))._field_Model, });;
		if ((_139420_r != nullptr)) {
			(*(_141217_model))._field_Right=(*(_139420_r))._field_Model;
		};
		(*(_138913_d))._field_Model=jule::Any(_141217_model, &__jule_any_type91);
	};
	return _138913_d;;
}



inline void _1b9c6d741_castPtr(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _142530_t, jule::Ptr<_1b9c5d016_Data> _142548_d, jule::Ptr<_1b9b032eb_Token> _142558_errorToken) {
	(*(_142548_d))._field_Constant=nullptr;
	jule::Ptr<_1b9c997d3_Sptr> _14279_sptr = _1b9c90ab5_Sptr((*(_142548_d))._field_Kind.ptr());;
	if ((_14279_sptr != nullptr)) {
		if ((!(_1b9c8d8d7_Equal((*(_1b9c90d4b_Ptr(_142530_t.ptr())))._field_Elem, (*(_14279_sptr))._field_Elem)))) {
			_1b9c6025a_pushErr(_self_, _142558_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_142548_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1b9c8d596_Str(_142530_t.ptr()), &__jule_any_type4)}));
		};
		return;;
	};
	if ((!(_1b9c60c50_isUnsafe(_self_)))) {
		_1b9c6025a_pushErr(_self_, _142558_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b9c95ca7_Prim> _14409_prim = _1b9c9082e_Prim((*(_142548_d))._field_Kind.ptr());;
	if (((_1b9c90d4b_Ptr((*(_142548_d))._field_Kind.ptr()) == nullptr) && ((_14409_prim == nullptr) || (!(_1ec6820de_IsInt(_1b9c960e8_Str(_14409_prim.ptr()))))))) {
		_1b9c6025a_pushErr(_self_, _142558_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_142548_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1b9c8d596_Str(_142530_t.ptr()), &__jule_any_type4)}));
	};
}



inline void _1b9c6db5e_castStruct(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _144633_t, jule::Ptr<_1b9c5d016_Data> _144651_d, jule::Ptr<_1b9b032eb_Token> _144661_errorToken) {
	(*(_144651_d))._field_Constant=nullptr;
	jule::Ptr<_1b9b62514_Trait> _144813_tr = _1b9c92138_Trait((*(_144651_d))._field_Kind.ptr());;
	if ((_144813_tr == nullptr)) {
		_1b9c6025a_pushErr(_self_, _144661_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_144651_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1b9c8d596_Str(_144633_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1b9b3c137_StructIns> _145413_s = _1b9c91da2_Struct(_144633_t.ptr());;
	_1ca380529_pushReference(_self_, &(_145413_s));
	if ((!(_1b9b3a9e8_IsImplements((*(_145413_s))._field_Decl.ptr(), _144813_tr)))) {
		_1b9c6025a_pushErr(_self_, _144661_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_144651_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1b9c8d596_Str(_144633_t.ptr()), &__jule_any_type4)}));
	};
}



inline void _1b9c6e07c_castRef(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _146230_t, jule::Ptr<_1b9c5d016_Data> _146248_d, jule::Ptr<_1b9b032eb_Token> _146258_errorToken) {
	(*(_146248_d))._field_Constant=nullptr;
	jule::Ptr<_1b9c997d3_Sptr> _146413_sptr = _1b9c90ab5_Sptr(_146230_t.ptr());;
	jule::Ptr<_1b9c9d09a_Ptr> _146613_ptr = _1b9c90d4b_Ptr((*(_146248_d))._field_Kind.ptr());;
	if (((_146613_ptr != nullptr) && _1b9c8d8d7_Equal((*(_146413_sptr))._field_Elem, (*(_146613_ptr))._field_Elem))) {
		if ((!(_1b9c60c50_isUnsafe(_self_)))) {
			_1b9c6025a_pushErr(_self_, _146258_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1b9c91da2_Struct((*(_146413_sptr))._field_Elem.ptr()) != nullptr)) {
		_1b9c6db5e_castStruct(_self_, (*(_146413_sptr))._field_Elem, _146248_d, _146258_errorToken);
		return;;
	};
	_1b9c6025a_pushErr(_self_, _146258_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_146248_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1b9c8d596_Str(_146230_t.ptr()), &__jule_any_type4)}));
}



inline void _1b9c6e49a_castSlc(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _148430_t, jule::Ptr<_1b9c5d016_Data> _148448_d, jule::Ptr<_1b9b032eb_Token> _148458_errorToken) {
	jule::Ptr<_1ec682ce3_Const> _14859_c = (*(_148448_d))._field_Constant;;
	(*(_148448_d))._field_Constant=nullptr;
	if ((_1b9c910d2_Enum((*(_148448_d))._field_Kind.ptr()) != nullptr)) {
		if (((_1b9c9082e_Prim((*((*(_1b9c910d2_Enum((*(_148448_d))._field_Kind.ptr())))._field_Kind))._field_Kind.ptr()) == nullptr) || (!(_1b9c9923e_IsStr(_1b9c9082e_Prim((*((*(_1b9c910d2_Enum((*(_148448_d))._field_Kind.ptr())))._field_Kind))._field_Kind.ptr()).ptr()))))) {
			_1b9c6025a_pushErr(_self_, _148458_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_148448_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1b9c8d596_Str(_148430_t.ptr()), &__jule_any_type4)}));
			return;;
		};
	} else if (((_1b9c9082e_Prim((*(_148448_d))._field_Kind.ptr()) == nullptr) || (!(_1b9c9923e_IsStr(_1b9c9082e_Prim((*(_148448_d))._field_Kind.ptr()).ptr()))))) {
		_1b9c6025a_pushErr(_self_, _148458_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_148448_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1b9c8d596_Str(_148430_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	_148430_t=(*(_1b9c91885_Slc(_148430_t.ptr())))._field_Elem;
	jule::Ptr<_1b9c95ca7_Prim> _14999_prim = _1b9c9082e_Prim(_148430_t.ptr());;
	if (((_14999_prim == nullptr) || ((!(_1b9c9769e_IsU8(_14999_prim.ptr()))) && (!(_1b9c97182_IsI32(_14999_prim.ptr())))))) {
		_1b9c6025a_pushErr(_self_, _148458_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_148448_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1b9c8d596_Str(_148430_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	if ((_14859_c != nullptr)) {
		{
			
			if (_1b9c9769e_IsU8(_14999_prim.ptr())) {
				_case_begin_1ca3958c4:;
				{
					jule::Str _150917_s = _1ec684e6b_ReadStr(_14859_c.ptr());;
					jule::Ptr<_1b9b438d0_SliceExprModel> _151021_model = jule::new_ptr<_1b9b438d0_SliceExprModel>(_1b9b438d0_SliceExprModel{._field_ElemKind=_148430_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _150917_s.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_150917_s);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ca396b28:;
						if (it != expr_end) {
							jule::U8 *_151424_b = it;
							{
								jule::Ptr<_1ec682ce3_Const> _151525_bc = static__1ec6834ec_NewU64(static_cast<jule::U64>(static_cast<jule::U64>((*(_151424_b)))));;
								(*(_151525_bc))._field_Kind=(*(_14999_prim))._field_Kind;
								{ jule::Slice<jule::Any> &__jule_push_dest = (*(_151021_model))._field_Elems; __jule_push_dest.push(jule::Any(_151525_bc, &__jule_any_type19)); };
							}
							_iter_next_1ca396b28:;
							++it;
							goto _iter_begin_1ca396b28;
						}
						_iter_end_1ca396b28:;
					};
					(*(_148448_d))._field_Model=jule::Any(_151021_model, &__jule_any_type76);
					(*(_148448_d))._field_Decl=true;
				}
			}
			else if (_1b9c97182_IsI32(_14999_prim.ptr())) {
				_case_begin_1ca39594b:;
				{
					jule::Slice<jule::I32> _152217_runes = static_cast<jule::Slice<jule::I32>>(_1ec684e6b_ReadStr(_14859_c.ptr()));;
					jule::Ptr<_1b9b438d0_SliceExprModel> _152321_model = jule::new_ptr<_1b9b438d0_SliceExprModel>(_1b9b438d0_SliceExprModel{._field_ElemKind=_148430_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _152217_runes.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_152217_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ca399a1b:;
						if (it != expr_end) {
							jule::I32 *_152724_r = it;
							{
								jule::Ptr<_1ec682ce3_Const> _152825_rc = static__1ec683233_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_152724_r)))));;
								(*(_152825_rc))._field_Kind=(*(_14999_prim))._field_Kind;
								{ jule::Slice<jule::Any> &__jule_push_dest = (*(_152321_model))._field_Elems; __jule_push_dest.push(jule::Any(_152825_rc, &__jule_any_type19)); };
							}
							_iter_next_1ca399a1b:;
							++it;
							goto _iter_begin_1ca399a1b;
						}
						_iter_end_1ca399a1b:;
					};
					(*(_148448_d))._field_Model=jule::Any(_152321_model, &__jule_any_type76);
					(*(_148448_d))._field_Decl=true;
				}
			}
			_match_end_1ca3957b4:;
		};
	};
}



inline void _1b9c6e80d_castStr(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9c5d016_Data> _153830_d, jule::Ptr<_1b9b032eb_Token> _153840_errorToken) {
	if ((_1b9c910d2_Enum((*(_153830_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1b9b64c0e_Enum> _154017_e = _1b9c910d2_Enum((*(_153830_d))._field_Kind.ptr());;
		if (((_1b9c9082e_Prim((*((*(_154017_e))._field_Kind))._field_Kind.ptr()) != nullptr) && _1b9c9923e_IsStr(_1b9c9082e_Prim((*((*(_154017_e))._field_Kind))._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1ec682ce3_Const> _15469_c = (*(_153830_d))._field_Constant;;
	(*(_153830_d))._field_Constant=nullptr;
	if ((_1b9c9082e_Prim((*(_153830_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1b9c95ca7_Prim> _154913_prim = _1b9c9082e_Prim((*(_153830_d))._field_Kind.ptr());;
		if (((!(_1b9c9769e_IsU8(_154913_prim.ptr()))) && (!(_1b9c97182_IsI32(_154913_prim.ptr()))))) {
			_1b9c6025a_pushErr(_self_, _153840_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1b9c8d596_Str((*(_153830_d))._field_Kind.ptr()), &__jule_any_type4)}));
			return;;
		};
		if ((_15469_c != nullptr)) {
			{
				
				if (_1b9c9769e_IsU8(_154913_prim.ptr())) {
					_case_begin_1ca3a1c43:;
					{
						(*(_153830_d))._field_Constant=static__1ec683a80_NewStr(jule::Str::from_byte(static_cast<jule::U8>(_1ec68571e_AsU64(_15469_c.ptr()))));
						(*(_153830_d))._field_Model=jule::Any((*(_153830_d))._field_Constant, &__jule_any_type19);
						(*(_153830_d))._field_Decl=true;
					}
				}
				else if (_1b9c97182_IsI32(_154913_prim.ptr())) {
					_case_begin_1ca3a1cba:;
					{
						(*(_153830_d))._field_Constant=static__1ec683a80_NewStr(jule::Str::from_rune(static_cast<jule::I32>(_1ec685488_AsI64(_15469_c.ptr()))));
						(*(_153830_d))._field_Model=jule::Any((*(_153830_d))._field_Constant, &__jule_any_type19);
						(*(_153830_d))._field_Decl=true;
					}
				}
				_match_end_1ca3a1b44:;
			};
		};
		return;;
	};
	jule::Ptr<_1b9c9a2a6_Slc> _157013_s = _1b9c91885_Slc((*(_153830_d))._field_Kind.ptr());;
	if ((_157013_s == nullptr)) {
		_1b9c6025a_pushErr(_self_, _153840_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1b9c8d596_Str((*(_153830_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1b9c8d1cd_TypeKind> _157613_t = (*(_157013_s))._field_Elem;;
	jule::Ptr<_1b9c95ca7_Prim> _15779_prim = _1b9c9082e_Prim(_157613_t.ptr());;
	if (((_15779_prim == nullptr) || ((!(_1b9c9769e_IsU8(_15779_prim.ptr()))) && (!(_1b9c97182_IsI32(_15779_prim.ptr())))))) {
		_1b9c6025a_pushErr(_self_, _153840_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1b9c8d596_Str((*(_153830_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return;;
	};
}



inline void _1b9c6ec2b_castInt(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _158430_t, jule::Ptr<_1b9c5d016_Data> _158448_d, jule::Ptr<_1b9b032eb_Token> _158458_errorToken) {
	if (_1b9c5d8da_IsConst(_158448_d.ptr())) {
		jule::Ptr<_1b9c95ca7_Prim> _158613_prim = _1b9c9082e_Prim(_158430_t.ptr());;
		{
			
			if (_1ec681a17_IsSigInt((*(_158613_prim))._field_Kind)) {
				_case_begin_1ca3a96c9:;
				{
					_1ec685c5d_SetI64((*(_158448_d))._field_Constant.ptr(), static_cast<jule::I64>(_1ec685488_AsI64((*(_158448_d))._field_Constant.ptr())));
				}
			}
			else if (_1ec681d25_IsUnsigInt((*(_158613_prim))._field_Kind)) {
				_case_begin_1ca3a9751:;
				{
					_1ec686016_SetU64((*(_158448_d))._field_Constant.ptr(), static_cast<jule::U64>(_1ec68571e_AsU64((*(_158448_d))._field_Constant.ptr())));
				}
			}
			_match_end_1ca3a9630:;
		};
	} else {
		(*(_158448_d))._field_Constant=nullptr;
	};
	if ((_1b9c910d2_Enum((*(_158448_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1b9b64c0e_Enum> _159813_e = _1b9c910d2_Enum((*(_158448_d))._field_Kind.ptr());;
		if (_1ec6826e9_IsNum(_1b9c8d596_Str((*((*(_159813_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1b9c90ab5_Sptr((*(_158448_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1b9c95ca7_Prim> _160513_prim = _1b9c9082e_Prim(_158430_t.ptr());;
		if ((!(_1b9c98c22_IsUintptr(_160513_prim.ptr())))) {
			_1b9c6025a_pushErr(_self_, _158458_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_158448_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1b9c8d596_Str(_158430_t.ptr()), &__jule_any_type4)}));
		};
		return;;
	};
	if ((_1b9c90d4b_Ptr((*(_158448_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1b9c95ca7_Prim> _161213_prim = _1b9c9082e_Prim(_158430_t.ptr());;
		if (_1b9c98c22_IsUintptr(_161213_prim.ptr())) {
		} else if ((!(_1b9c60c50_isUnsafe(_self_)))) {
			_1b9c6025a_pushErr(_self_, _158458_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1b9c95ca7_Prim> _16219_prim = _1b9c9082e_Prim((*(_158448_d))._field_Kind.ptr());;
	if (((_16219_prim != nullptr) && _1ec6826e9_IsNum(_1b9c960e8_Str(_16219_prim.ptr())))) {
		return;;
	};
	_1b9c6025a_pushErr(_self_, _158458_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_158448_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1b9c8d596_Str(_158430_t.ptr()), &__jule_any_type4)}));
}



inline void _1b9c70149_castNum(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _162930_t, jule::Ptr<_1b9c5d016_Data> _162948_d, jule::Ptr<_1b9b032eb_Token> _162958_errorToken) {
	if (_1b9c5d8da_IsConst(_162948_d.ptr())) {
		jule::Ptr<_1b9c95ca7_Prim> _163113_prim = _1b9c9082e_Prim(_162930_t.ptr());;
		{
			
			if (_1ec682430_IsFloat((*(_163113_prim))._field_Kind)) {
				_case_begin_1ca3b4c23:;
				{
					_1ec686830_SetF64((*(_162948_d))._field_Constant.ptr(), static_cast<jule::F64>(_1ec6859a5_AsF64((*(_162948_d))._field_Constant.ptr())));
				}
			}
			else if (_1ec681a17_IsSigInt((*(_163113_prim))._field_Kind)) {
				_case_begin_1ca3b4c9a:;
				{
					_1ec685c5d_SetI64((*(_162948_d))._field_Constant.ptr(), static_cast<jule::I64>(_1ec685488_AsI64((*(_162948_d))._field_Constant.ptr())));
				}
			}
			else if (_1ec681d25_IsUnsigInt((*(_163113_prim))._field_Kind)) {
				_case_begin_1ca3b4d22:;
				{
					_1ec686016_SetU64((*(_162948_d))._field_Constant.ptr(), static_cast<jule::U64>(_1ec68571e_AsU64((*(_162948_d))._field_Constant.ptr())));
				}
			}
			_match_end_1ca3b4b68:;
		};
	} else {
		(*(_162948_d))._field_Constant=nullptr;
	};
	if ((_1b9c910d2_Enum((*(_162948_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1b9b64c0e_Enum> _164513_e = _1b9c910d2_Enum((*(_162948_d))._field_Kind.ptr());;
		if (_1ec6826e9_IsNum(_1b9c8d596_Str((*((*(_164513_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1b9c95ca7_Prim> _16519_prim = _1b9c9082e_Prim((*(_162948_d))._field_Kind.ptr());;
	if (((_16519_prim != nullptr) && _1ec6826e9_IsNum(_1b9c960e8_Str(_16519_prim.ptr())))) {
		return;;
	};
	_1b9c6025a_pushErr(_self_, _162958_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_162948_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1b9c8d596_Str(_162930_t.ptr()), &__jule_any_type4)}));
}



inline void _1b9c70567_castPrim(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _165931_t, jule::Ptr<_1b9c5d016_Data> _165949_d, jule::Ptr<_1b9b032eb_Token> _165959_errorToken) {
	jule::Ptr<_1b9c95ca7_Prim> _16609_prim = _1b9c9082e_Prim(_165931_t.ptr());;
	{
		
		if (_1b9c994c5_IsAny(_16609_prim.ptr())) {
			_case_begin_1ca3bc90c:;
			{
				(*(_165949_d))._field_Constant=nullptr;
			}
		}
		else if (_1b9c9923e_IsStr(_16609_prim.ptr())) {
			_case_begin_1ca3bc984:;
			{
				_1b9c6e80d_castStr(_self_, _165949_d, _165959_errorToken);
			}
		}
		else if (_1ec6820de_IsInt(_1b9c960e8_Str(_16609_prim.ptr()))) {
			_case_begin_1ca3bc577:;
			{
				_1b9c6ec2b_castInt(_self_, _165931_t, _165949_d, _165959_errorToken);
			}
		}
		else if (_1ec6826e9_IsNum(_1b9c960e8_Str(_16609_prim.ptr()))) {
			_case_begin_1ca3bc5ee:;
			{
				_1b9c70149_castNum(_self_, _165931_t, _165949_d, _165959_errorToken);
			}
		}
		else {
			_case_begin_1ca3bc511:;
			{
				_1b9c6025a_pushErr(_self_, _165959_errorToken, jule::Str::lit("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str(_165931_t.ptr()), &__jule_any_type4)}));
			}
		}
		_match_end_1ca3bc4ab:;
	};
}



inline void _1b9c708ca_castConstant(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9c8d1cd_TypeKind>* _167636_t, jule::Ptr<_1b9c5d016_Data>* _167655_d) {
	if ((((*(_167655_d)) == nullptr) || (!(_1b9c5d8da_IsConst((*(_167655_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1b9c95ca7_Prim> _16809_prim = _1b9c9082e_Prim((*(_167636_t)).ptr());;
	_1b9c893a5_castConstByType(&((*(_16809_prim))._field_Kind), _167655_d);
	(*((*(_167655_d))))._field_Model=jule::Any((*((*(_167655_d))))._field_Constant, &__jule_any_type19);
}



inline void _1b9c70ce8_castTypeEnum(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9c8d1cd_TypeKind>* _168536_t, jule::Ptr<_1b9c5d016_Data>* _168555_d, jule::Ptr<_1b9b032eb_Token>* _168570_errorToken) {
	jule::I32 _16869_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1b9bdceb8_checkTypeCompatibility((*(_self_))._field_s, &((*((*(_168555_d))))._field_Kind), _168536_t, _168570_errorToken)))) {
		(*((*(_self_))._field_s))._field_errors=(*((*(_self_))._field_s))._field_errors.slice(0LL, _16869_n);
		_1b9c6025a_pushErr(_self_, (*(_168570_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*((*(_168555_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1b9c8d596_Str((*(_168536_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_168555_d))))._field_Constant=nullptr;
}



inline void _1b9c71216_castTypeEnumT(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9c8d1cd_TypeKind>* _169437_t, jule::Ptr<_1b9c5d016_Data>* _169456_d, jule::Ptr<_1b9b032eb_Token>* _169471_errorToken) {
	jule::I32 _16959_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1b9bdceb8_checkTypeCompatibility((*(_self_))._field_s, _169437_t, &((*((*(_169456_d))))._field_Kind), _169471_errorToken)))) {
		(*((*(_self_))._field_s))._field_errors=(*((*(_self_))._field_s))._field_errors.slice(0LL, _16959_n);
		_1b9c6025a_pushErr(_self_, (*(_169471_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*((*(_169456_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1b9c8d596_Str((*(_169437_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_169456_d))))._field_Constant=nullptr;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c716bc_evalCastByTypeNData(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _170342_t, jule::Ptr<_1b9c5d016_Data> _170360_d, jule::Ptr<_1b9b032eb_Token> _170374_errorToken) {
	if (((_170360_d != nullptr) && (*(_170360_d))._field_Decl)) {
		_1b9c6025a_pushErr(_self_, _170374_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1b9c5d3bd_IsNil(_170360_d.ptr())) {
			_case_begin_1ca3c9320:;
			{
				if ((!(_1b9c9007b_NilCompatible(_170342_t.ptr())))) {
					_1b9c6025a_pushErr(_self_, _170374_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("<nil>", 5), &__jule_any_type4),jule::Any(_1b9c8d596_Str(_170342_t.ptr()), &__jule_any_type4)}));
				};
				(*(_170360_d))._field_Constant=nullptr;
			}
		}
		else if (((_1b9c9082e_Prim((*(_170360_d))._field_Kind.ptr()) != nullptr) && _1b9c994c5_IsAny(_1b9c9082e_Prim((*(_170360_d))._field_Kind.ptr()).ptr()))) {
			_case_begin_1ca3c9232:;
			{
				if ((_1b9c910d2_Enum(_170342_t.ptr()) != nullptr)) {
					_1b9c6025a_pushErr(_self_, _170374_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
					_1b9c605bd_pushSuggestion(_self_, jule::Str::lit("try cast to type of enum fields instead of enum", 47), jule::Slice<jule::Any>());
				} else if ((_1b9c91368_TypeEnum(_170342_t.ptr()) != nullptr)) {
					_1b9c6025a_pushErr(_self_, _170374_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
				};
				(*(_170360_d))._field_Constant=nullptr;
			}
		}
		else if ((_1b9c91368_TypeEnum((*(_170360_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca3c8ece:;
			{
				_1b9c70ce8_castTypeEnum(_self_, &(_170342_t), &(_170360_d), &(_170374_errorToken));
			}
		}
		else if ((_1b9c91368_TypeEnum(_170342_t.ptr()) != nullptr)) {
			_case_begin_1ca3c9045:;
			{
				_1b9c71216_castTypeEnumT(_self_, &(_170342_t), &(_170360_d), &(_170374_errorToken));
			}
		}
		else if ((_1b9c90d4b_Ptr(_170342_t.ptr()) != nullptr)) {
			_case_begin_1ca3c9c05:;
			{
				_1b9c6d741_castPtr(_self_, _170342_t, _170360_d, _170374_errorToken);
			}
		}
		else if ((_1b9c90ab5_Sptr(_170342_t.ptr()) != nullptr)) {
			_case_begin_1ca3c9c6b:;
			{
				_1b9c6e07c_castRef(_self_, _170342_t, _170360_d, _170374_errorToken);
			}
		}
		else if ((_1b9c91885_Slc(_170342_t.ptr()) != nullptr)) {
			_case_begin_1ca3c9cd2:;
			{
				_1b9c6e49a_castSlc(_self_, _170342_t, _170360_d, _170374_errorToken);
			}
		}
		else if ((_1b9c91da2_Struct(_170342_t.ptr()) != nullptr)) {
			_case_begin_1ca3c9d48:;
			{
				_1b9c6db5e_castStruct(_self_, _170342_t, _170360_d, _170374_errorToken);
			}
		}
		else if ((_1b9c9082e_Prim(_170342_t.ptr()) != nullptr)) {
			_case_begin_1ca3c9dae:;
			{
				_1b9c70567_castPrim(_self_, _170342_t, _170360_d, _170374_errorToken);
				_1b9c708ca_castConstant(_self_, &(_170342_t), &(_170360_d));
			}
		}
		else {
			_case_begin_1ca3c8dad:;
			{
				_1b9c6025a_pushErr(_self_, _170374_errorToken, jule::Str::lit("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str(_170342_t.ptr()), &__jule_any_type4)}));
				_170360_d=nullptr;
			}
		}
		_match_end_1ca3c8693:;
	};
	if ((_170360_d == nullptr)) {
		return nullptr;;
	};
	(*(_170360_d))._field_Mutable=((*(_170360_d))._field_Mutable || (!(_1b9c8ea5e_Mutable((*(_170360_d))._field_Kind.ptr()))));
	if (((!((*(_170360_d))._field_Decl)) && ((_1b9c910d2_Enum((*(_170360_d))._field_Kind.ptr()) == nullptr) || (!(_1b9c8d8d7_Equal((*((*(_1b9c910d2_Enum((*(_170360_d))._field_Kind.ptr())))._field_Kind))._field_Kind, _170342_t)))))) {
		_1b9c88805_applyCastKind(&(_170360_d), &(_170342_t));
		(*((*(_170360_d))._field_Model.cast_ptr<_1b9b42b54_CastingExprModel>(&__jule_any_type92)))._field_Token=_170374_errorToken;
	} else {
		(*(_170360_d))._field_Kind=_170342_t;
	};
	(*(_170360_d))._field_Decl=false;
	(*(_170360_d))._field_Lvalue=false;
	(*(_170360_d))._field_untyped=false;
	if (_1b9c5d8da_IsConst(_170360_d.ptr())) {
		(*((*(_170360_d))._field_Constant))._field_Kind=(*(_1b9c9082e_Prim(_170342_t.ptr())))._field_Kind;
	};
	return _170360_d;;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c71b73_evalCastT(jule::Ptr<_1b9c5ec0a_Eval> _self_, jule::Ptr<_1b9c8d1cd_TypeKind>* _177434_t, jule::Ptr<_1b9b1caeb_Expr>* _177453_e, jule::Ptr<_1b9b032eb_Token>* _177468_et) {
	jule::Ptr<_1b9c8d1cd_TypeKind> _177513_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_177513_prefix;
	});;
	if ((_1b9c91885_Slc((*(_177434_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_177453_e))))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type93) {
				_case_begin_1ca3d93a7:;
				{
					(*(_self_))._field_prefix=(*(_177434_t));
				}
			}
			_match_end_1ca3d9352:;
		};
	};
	jule::Ptr<_1b9c5d016_Data> _178413_d = _1b9c7cbd4_evalExpr(_self_, (*(_177453_e)));;
	if (((_178413_d == nullptr) || ((*(_self_))._field_prefix != nullptr))) {
		return _178413_d;;
	};
	return _1b9c716bc_evalCastByTypeNData(_self_.ptr(), (*(_177434_t)), _178413_d, (*(_177468_et)));;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c71eb4_evalCast(jule::Ptr<_1b9c5ec0a_Eval> _self_, jule::Ptr<_1b9b2045b_CastExpr> _179132_c) {
	jule::Ptr<_1b9c953a0_TypeSymbol> _179213_t = _1b9b56b9b_buildType((*(_179132_c))._field_Kind);;
	jule::Bool _17939_ok = _1b9bdab75_checkType((*(_self_))._field_s, &(_179213_t), (*(_self_))._field_lookup);;
	if ((!(_17939_ok))) {
		return nullptr;;
	};
	return _1b9c71b73_evalCastT(_self_, &((*(_179213_t))._field_Kind), &((*(_179132_c))._field_Expr), &((*((*(_179132_c))._field_Kind))._field_Token));;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c72305_evalNsSelection(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b20835_NsSelectionExpr> _180034_s) {
	jule::Str _18019_path = _1b9ca9c55_buildLinkPathByTokens(&((*(_180034_s))._field_Ns));;
	jule::Ptr<_1b9bb1200_ImportInfo> _180213_imp = _1b9cacc14_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1b9caaeed_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1b9bb1200_ImportInfo>)>([=](jule::Ptr<_1b9bb1200_ImportInfo> _180249_imp) mutable -> jule::Bool {
		if ((((*(_180034_s))._field_Ns.len() == 1LL) && ((*(_180249_imp))._field_Alias == _18019_path))) {
			return true;;
		};
		return (((*(_180249_imp))._field_LinkPath == _18019_path) && _1b9bb3d18_isAccessibleViaSelection(_180249_imp.ptr()));;
	}));;
	if ((_180213_imp == nullptr)) {
		_1b9c6025a_pushErr(_self_, (*(_180034_s))._field_Ns[0LL], jule::Str::lit("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_18019_path, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Trait<_1b9cacc14_Lookup> _181413_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1b9cacc14_Lookup>(_180213_imp, 1);
	;
	_1b9c609b9_disallowBuiltin(_self_);
	jule::Any _181913_def = _1b9c62ec7_getDef(_self_, &((*((*(_180034_s))._field_Ident))._field_Kind), false);;
	_1b9c607bb_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_181413_lookup;
	jule::Ptr<_1b9c5d016_Data> _182213_d = _1b9c66dee_evalDef(_self_, &(_181913_def), (*(_180034_s))._field_Ident);;
	return _182213_d;;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c727ab_evalStructLitExplicit(jule::Ptr<_1b9c5ec0a_Eval> _self_, jule::Ptr<_1b9b3c137_StructIns> _182645_s, jule::Slice<jule::Ptr<_1b9b1caeb_Expr>> _182713_exprs, jule::Ptr<_1b9b032eb_Token> _182733_errorToken) {
	jule::Bool _18289_ok = _1b9bd6533_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I32>((*((*(_182645_s))._field_Decl))._field_Generics.len()), static_cast<jule::I32>((*(_182645_s))._field_Generics.len()), _182733_errorToken);;
	if ((!(_18289_ok))) {
		return nullptr;;
	};
	if ((((*(_self_))._field_field != nullptr) && ((*((*((*(_self_))._field_field))._field_Decl))._field_Owner == (*(_182645_s))._field_Decl))) {
		_1b9c6025a_pushErr(_self_.ptr(), _182733_errorToken, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_182645_s))._field_Decl))._field_Ident, &__jule_any_type4)}));
	};
	_1ca380529_pushReference(_self_.ptr(), &(_182645_s));
	_1b9c650ea_checkDeprecated(_self_.ptr(), &((*((*(_182645_s))._field_Decl))._field_Directives), _182733_errorToken);
	_1b9c514e3_structLitChecker _184113_slc = _1b9c514e3_structLitChecker{._field_e=_self_, ._field_errorToken=_182733_errorToken, ._field_s=_182645_s, };;
	_1b9c52c31_check(&_184113_slc, &(_182713_exprs));
	jule::Ptr<_1b9c5d016_Data> _184813_d = jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(_182645_s, 0)}), ._field_Mutable=(!((*(_self_))._field_immutable)), ._field_Model=jule::Any(jule::new_ptr<_1b9b422c4_StructLitExprModel>(_1b9b422c4_StructLitExprModel{._field_Strct=_182645_s, ._field_Args=_184113_slc._field_args}), &__jule_any_type94), });;
	if ((*((*(_182645_s))._field_Decl))._field_Binded) {
		(*((*(_184813_d))._field_Kind))._field_BindIdent=(*((*(_182645_s))._field_Decl))._field_Ident;
	};
	return _184813_d;;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c72aec_evalStructLit(jule::Ptr<_1b9c5ec0a_Eval> _self_, jule::Ptr<_1b9b22b45_StructLit> _186437_lit) {
	jule::Ptr<_1b9c953a0_TypeSymbol> _186513_t = _1b9b56b9b_buildType((*(_186437_lit))._field_Kind);;
	jule::Bool _18669_ok = _1b9bdab75_checkType((*(_self_))._field_s, &(_186513_t), (*(_self_))._field_lookup);;
	if ((!(_18669_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1b9b3c137_StructIns> _187113_s = _1b9c91da2_Struct((*(_186513_t))._field_Kind.ptr());;
	if ((_187113_s == nullptr)) {
		if ((_1b9c90ab5_Sptr((*(_186513_t))._field_Kind.ptr()) != nullptr)) {
			_187113_s=_1b9c91da2_Struct((*(_1b9c90ab5_Sptr((*(_186513_t))._field_Kind.ptr())))._field_Elem.ptr());
			if ((_187113_s != nullptr)) {
				goto _julec_label_1ca404911;
			};
		};
		_1b9c6025a_pushErr(_self_.ptr(), (*((*(_186437_lit))._field_Kind))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1ca404911:;
	jule::Ptr<_1b9c5d016_Data> _188413_d = _1b9c727ab_evalStructLitExplicit(_self_, _187113_s, (*(_186437_lit))._field_Exprs, (*((*(_186437_lit))._field_Kind))._field_Token);;
	if ((_1b9c90ab5_Sptr((*(_186513_t))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1b9b422c4_StructLitExprModel> _188617_model = (*(_188413_d))._field_Model.cast_ptr<_1b9b422c4_StructLitExprModel>(&__jule_any_type94);;
		_1b9c8701d_makeStructLitAlloc(&(_188413_d), &(_188617_model));
	};
	return _188413_d;;
}



inline _1b9ca008b_typeChecker _1b9c72d83_typeChecker(_1b9c5ec0a_Eval* _self_) {
	return _1b9bd9921_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c731c4_evalType(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b187b7_TypeDecl> _189631_t) {
	jule::Ptr<_1b9c953a0_TypeSymbol> _189713_tk = _1b9b56b9b_buildType(_189631_t);;
	jule::Bool _18989_ok = _1b9bdab75_checkType((*(_self_))._field_s, &(_189713_tk), (*(_self_))._field_lookup);;
	if ((!(_18989_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=(*(_189713_tk))._field_Kind, ._field_Model=jule::Any((*(_189713_tk))._field_Kind, &__jule_any_type83), ._field_Decl=true, });;
}



inline void _1b9c73537_callTypeFn(jule::Ptr<_1b9c5ec0a_Eval> _self_, jule::Ptr<_1b9b21825_FnCallExpr>* _190935_fc, jule::Ptr<_1b9c5d016_Data>* _190957_d) {
	if (((*((*(_190935_fc))))._field_Args.len() < 1LL)) {
		_1b9c6025a_pushErr(_self_.ptr(), (*((*(_190935_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("v", 1), &__jule_any_type4)}));
	} else if (((*((*(_190935_fc))))._field_Args.len() > 1LL)) {
		_1b9c6025a_pushErr(_self_.ptr(), (*((*((*(_190935_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*((*(_190957_d))))._field_Kind.ptr()), &__jule_any_type4)}));
	} else if ((*((*(_190935_fc))))._field_IsCo) {
		_1b9c6025a_pushErr(_self_.ptr(), (*((*(_190935_fc))))._field_Token, jule::Str::lit("concurrent calls are not allowed for type-cast calls", 52), jule::Slice<jule::Any>());
		(*(_190957_d))=nullptr;
		return;;
	} else if (((*((*(_190935_fc))))._field_Exception != nullptr)) {
		_1b9c6025a_pushErr(_self_.ptr(), (*((*(_190935_fc))))._field_Token, jule::Str::lit("exceptionals are not supported for type-cast call", 49), jule::Slice<jule::Any>());
		(*(_190957_d))=nullptr;
		return;;
	};
	if (((*((*(_190935_fc))))._field_Args.len() > 0LL)) {
		jule::Ptr<_1b9b1caeb_Expr> _192517_arg = (*((*(_190935_fc))))._field_Args[0LL];;
		(*(_190957_d))=_1b9c71b73_evalCastT(_self_, &((*((*(_190957_d))))._field_Kind), &(_192517_arg), &((*(_192517_arg))._field_Token));
		return;;
	};
	if (((*(_190957_d)) != nullptr)) {
		(*((*(_190957_d))))._field_Decl=false;
	};
}



inline void _1b9c7389a_callBuiltinFn(jule::Ptr<_1b9c5ec0a_Eval> _self_, jule::Ptr<_1b9b21825_FnCallExpr>* _193538_fc, jule::Ptr<_1b9c5d016_Data>* _193560_d) {
	if ((!(_1b9b21b99_Unhandled((*(_193538_fc)).ptr())))) {
		_1b9c6025a_pushErr(_self_.ptr(), (*((*(_193538_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	(*(_193560_d))=(*(_1b9c91b1b_Fn((*((*(_193560_d))))._field_Kind.ptr())))._field_caller(&(_self_), _193538_fc, _193560_d);
	if (((*(_193560_d)) == nullptr)) {
		return;;
	};
	(*((*(_193560_d))))._field_Mutable=true;
}



inline void _1b9c73c0d_checkFnOfConcurrentCall(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b5216e_FnIns>* _194743_f, jule::Ptr<_1b9b032eb_Token> _194754_errorToken) {
	if (_1b9c60c50_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*((*(_194743_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca41358a:;
		if (it != expr_end) {
			jule::Ptr<_1b9b511c3_ParamIns> *_195116_p = it;
			{
				if (_1b9b4cdb2_IsSelf((*((*(_195116_p))))._field_Decl.ptr())) {
					if ((!(_1b9b4d148_IsRef((*((*(_195116_p))))._field_Decl.ptr())))) {
						_1b9c6025a_pushErr(_self_, _194754_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97), jule::Slice<jule::Any>());
						_1b9c605bd_pushSuggestion(_self_, jule::Str::lit("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99), jule::Slice<jule::Any>());
					};
				};
				if ((*((*((*(_195116_p))))._field_Decl))._field_Reference) {
					_1b9c6025a_pushErr(_self_, _194754_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96), jule::Slice<jule::Any>());
					_1b9c605bd_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule with unsafe {} scope to make concurrent call", 60), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1ca41358a:;
			++it;
			goto _iter_begin_1ca41358a;
		}
		_iter_end_1ca41358a:;
	};
}



inline void _1b9c7412b_processExceptionalHandler(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b5216e_FnIns>* _196649_f, jule::Ptr<_1b9b21825_FnCallExpr>* _196665_fc, jule::Ptr<_1b9c5d016_Data>* _196687_d) {
	jule::Bool _19679_resultNeeded = ((!(_1b9b4e6dd_IsVoid((*((*(_196649_f))))._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_1b9b970c6_scopeChecker> _196817_csc = nullptr;;
	jule::Ptr<_1b9b8ecc2_Scope> _196917_ch = nullptr;;
	jule::Ptr<_1b9b43506_FnCallExprModel> _197113_model = (*((*(_196687_d))))._field_Model.cast_ptr<_1b9b43506_FnCallExprModel>(&__jule_any_type34);;
	jule::Ptr<_1b9b970c6_scopeChecker> _197513_sc = (*(_self_))._field_lookup.cast_ptr<_1b9b970c6_scopeChecker>(0);;
	_196817_csc=_1b9ba8d1e_newChildChecker(_197513_sc);
	if (_19679_resultNeeded) {
		(*(_196817_csc))._field_result=(*(_196649_f));
	};
	_196917_ch=_1b9b9bdbc_getChild(_197513_sc.ptr());
	(*((*((*(_196665_fc))))._field_Exception))._field_Parent=(*(_197513_sc))._field_tree;
	{ jule::Slice<jule::Ptr<_1b9c09611_Var>> &__jule_push_dest = (*((*(_196817_csc))._field_table))._field_Vars; __jule_push_dest.push(_1b9c87392_buildErrorVar(&(_196917_ch), _196665_fc)); };
	_1b9b9c2da_checkChildSsc(_197513_sc, &((*((*(_196665_fc))))._field_Exception), &(_196917_ch), &(_196817_csc));
	(*(_197113_model))._field_Assigned=_19679_resultNeeded;
	(*(_197113_model))._field_Except=_196917_ch;
	if ((_19679_resultNeeded && ((*(_196817_csc))._field_result != nullptr))) {
		_1b9c6025a_pushErr(_self_, (*((*(_196665_fc))))._field_Token, jule::Str::lit("exceptional returns an expression, therefore else block should return expression", 80), jule::Slice<jule::Any>());
	};
}



inline void _1b9c7448e_callFn(jule::Ptr<_1b9c5ec0a_Eval> _self_, jule::Ptr<_1b9b21825_FnCallExpr>* _199331_fc, jule::Ptr<_1b9c5d016_Data>* _199353_d) {
	jule::Ptr<_1b9b5216e_FnIns> _199413_f = _1b9c91b1b_Fn((*((*(_199353_d))))._field_Kind.ptr());;
	if (_1b9b53604_IsBuiltin(_199413_f.ptr())) {
		_1b9c7389a_callBuiltinFn(_self_, _199331_fc, _199353_d);
		return;;
	};
	if ((_1b9c60ed6_isGlobal(_self_.ptr()) && (*((*(_199413_f))._field_Decl))._field_Exceptional)) {
		_1b9c6025a_pushErr(_self_.ptr(), (*((*(_199331_fc))))._field_Token, jule::Str::lit("exceptionals are not allowed in global scope", 44), jule::Slice<jule::Any>());
		_1b9c605bd_pushSuggestion(_self_.ptr(), jule::Str::lit("wrap exceptional with a non-exceptional function", 48), jule::Slice<jule::Any>());
		(*(_199353_d))=nullptr;
		return;;
	};
	if (((!(_1b9b4e974_IsMethod((*(_199413_f))._field_Decl.ptr()))) && _1b9ca8ced_hasDirective(&((*((*(_199413_f))._field_Decl))._field_Directives), jule::Str::lit("test", 4)))) {
		_1b9c6025a_pushErr(_self_.ptr(), (*((*(_199331_fc))))._field_Token, jule::Str::lit("you cannot call test functions", 30), jule::Slice<jule::Any>());
		(*(_199353_d))=nullptr;
		return;;
	};
	if (((((!((*((*(_199353_d))))._field_Mutable)) && _1b9b4e974_IsMethod((*(_199413_f))._field_Decl.ptr())) && (!((*((*(_199413_f))._field_Decl))._field_Statically))) && (*((*((*(_199413_f))._field_Decl))._field_Params[0LL]))._field_Mutable)) {
		if ((!((*(_self_))._field_immutable))) {
			_1b9c6025a_pushErr(_self_.ptr(), (*((*(_199331_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_1b9b422c4_StructLitExprModel> _202017_lit = _1b9c8a5c6_isLitBased(&((*((*(_199353_d))))._field_Model));;
			if ((_202017_lit == nullptr)) {
				_1b9c6025a_pushErr(_self_.ptr(), (*((*(_199331_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
			} else {
				_1b9c51009_checkMutRiskOfStructLit(&((*(_self_))._field_s), &(_202017_lit));
			};
		};
	} else if (((!(_1b9c60c50_isUnsafe(_self_.ptr()))) && (*((*(_199413_f))._field_Decl))._field_Unsafety)) {
		_1b9c6025a_pushErr(_self_.ptr(), (*((*(_199331_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	jule::Bool _203213_dynamicAnnotation = ((((*((*(_199413_f))._field_Decl))._field_Generics.len() > 0LL) && ((*(_199413_f))._field_Generics.len() == 0LL)) && ((*(_199413_f))._field_Params.len() > 0LL));;
	if (_203213_dynamicAnnotation) {
		(*(_199413_f))._field_Generics=jule::Slice<jule::Ptr<_1b9c8b7e7_InsGeneric>>::alloc((*((*(_199413_f))._field_Decl))._field_Generics.len(), (*((*(_199413_f))._field_Decl))._field_Generics.len());
	} else if (((*(_199413_f))._field_Generics.len() != (*((*(_199413_f))._field_Decl))._field_Generics.len())) {
		_1b9bd6533_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I32>((*((*(_199413_f))._field_Decl))._field_Generics.len()), static_cast<jule::I32>((*(_199413_f))._field_Generics.len()), (*((*(_199331_fc))))._field_Token);
		(*(_199353_d))=nullptr;
		return;;
	};
	jule::Ptr<_1b9bd23b9_Sema> _204113_old = (*(_self_))._field_s;;
	if (((*((*(_199413_f))._field_Decl))._field_Owner != nullptr)) {
		(*(_self_))._field_s=(*((*((*(_199413_f))._field_Decl))._field_Owner))._field_sema;
	};
	__JULE_DEFER({
		if ((_204113_old != (*(_self_))._field_s)) {
			((*(_204113_old))._field_errors).append((*((*(_self_))._field_s))._field_errors);;
			(*((*(_self_))._field_s))._field_errors=nullptr;
		};
		(*(_self_))._field_s=_204113_old;
	});;
	_1b9c4d5ab_fnCallArgChecker _205413_fcac = _1b9c4d5ab_fnCallArgChecker{._field_e=_self_, ._field_args=(*((*(_199331_fc))))._field_Args, ._field_errorToken=(*((*(_199331_fc))))._field_Token, ._field_dynamicAnnotation=_203213_dynamicAnnotation, };;
	if ((!(_203213_dynamicAnnotation))) {
		if ((!((*(_199413_f))._field_reloaded))) {
			jule::Bool _206317_ok = _1b9be010d_reloadFnInsTypes((*(_self_))._field_s, _199413_f);;
			(*(_199413_f))._field_reloaded=true;
			if ((!(_206317_ok))) {
				(*(_199353_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1b9b5216e_FnIns> _207017_existInstance = _1b9b50cd8_appendInstance((*(_199413_f))._field_Decl.ptr(), &(_199413_f));;
		if ((_207017_existInstance != nullptr)) {
			_199413_f=_207017_existInstance;
		};
	} else if ((!(_1b9bdd86a_buildFnNonGenericTypeKinds((*(_self_))._field_s, &(_199413_f), &(_205413_fcac._field_ignored))))) {
		(*(_199353_d))=nullptr;
		return;;
	};
	_205413_fcac._field_f=_199413_f;
	jule::Bool _208113_ok = false;;
	if (((*((*(_199413_f))._field_Decl))._field_Owner != nullptr)) {
		std::swap(_204113_old, (*(_self_))._field_s);
		_208113_ok=_1b9c50b63_check(&_205413_fcac);
		std::swap(_204113_old, (*(_self_))._field_s);
	} else {
		_208113_ok=_1b9c50b63_check(&_205413_fcac);
	};
	if (_203213_dynamicAnnotation) {
		if ((!(_208113_ok))) {
			(*(_199353_d))=nullptr;
			return;;
		};
		if ((!(_1b9c6b83d_checkGenericFn(_self_, &(_199413_f), &((*((*(_199331_fc))))._field_Token), &((*((*(_199353_d))))._field_Model))))) {
			(*(_199353_d))=nullptr;
			return;;
		};
	};
	jule::Any _210113_callModel = (*((*(_199353_d))))._field_Model;;
	if (_1b9b4e6dd_IsVoid((*(_199413_f))._field_Decl.ptr())) {
		(*(_199353_d))=_1b9c88a14_buildVoidData();
	} else {
		(*((*(_199353_d))))._field_Kind=(*(_199413_f))._field_Result;
		(*((*(_199353_d))))._field_Lvalue=false;
	};
	jule::Ptr<_1b9b43506_FnCallExprModel> _211013_model = jule::new_ptr<_1b9b43506_FnCallExprModel>(_1b9b43506_FnCallExprModel{._field_Token=(*((*(_199331_fc))))._field_Token, ._field_Func=_199413_f, ._field_IsCo=(*((*(_199331_fc))))._field_IsCo, ._field_Expr=_210113_callModel, ._field_Args=_205413_fcac._field_argModels, });;
	(*((*(_199353_d))))._field_Model=jule::Any(_211013_model, &__jule_any_type34);
	(*((*(_199353_d))))._field_Mutable=true;
	if ((*((*(_199413_f))._field_Decl))._field_Exceptional) {
		if ((*((*(_199331_fc))))._field_IsCo) {
			_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*((*(_199331_fc))))._field_Token, jule::Str::lit("concurrent calls not supports exceptionals", 42), jule::Slice<jule::Any>());
			_1b9bd5367_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("handle exceptional in a separate function or anonymous function", 63), jule::Slice<jule::Any>());
		};
		{
			
			if (_1b9b21b99_Unhandled((*(_199331_fc)).ptr())) {
				_case_begin_1ca4382c4:;
				{
					_1b9c6025a_pushErr(_self_.ptr(), (*((*(_199331_fc))))._field_Token, jule::Str::lit("exceptionals must be handled", 28), jule::Slice<jule::Any>());
					_1b9c605bd_pushSuggestion(_self_.ptr(), jule::Str::lit("use \"!\" operator after exceptional to handle it", 47), jule::Slice<jule::Any>());
				}
			}
			else if (_1b9b21e30_Ignored((*(_199331_fc)).ptr())) {
				_case_begin_1ca43833a:;
				{
					goto _match_end_1ca436cb7;
				}
			}
			else {
				_case_begin_1ca436d1c:;
				{
					_1b9c7412b_processExceptionalHandler(_self_.ptr(), &(_199413_f), _199331_fc, _199353_d);
				}
			}
			_match_end_1ca436cb7:;
		};
	} else if ((!(_1b9b21b99_Unhandled((*(_199331_fc)).ptr())))) {
		_1b9c6025a_pushErr(_self_.ptr(), (*((*(_199331_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	if ((*((*(_199331_fc))))._field_IsCo) {
		_1b9c73c0d_checkFnOfConcurrentCall(_self_.ptr(), &((*(_211013_model))._field_Func), (*((*(_199331_fc))))._field_Token);
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c747d0_evalFnCall(jule::Ptr<_1b9c5ec0a_Eval> _self_, jule::Ptr<_1b9b21825_FnCallExpr> _214534_fc) {
	jule::Ptr<_1b9c8d1cd_TypeKind> _214613_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_214613_prefix;
	});;
	{
		auto &_match_expr{ (*((*(_214534_fc))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ca43c75c:;
			{
				if ((*((*((*(_214534_fc))._field_Expr))._field_Token))._field_Kind.equal("error", 5)) {
					return _1b9d7e6dc_builtinCallerError(&(_self_), &(_214534_fc));;
				};
			}
		}
		_match_end_1ca43c707:;
	};
	jule::Ptr<_1b9c5d016_Data> _215913_d = _1b9c7bdc0_evalExprKind(_self_, (*((*(_214534_fc))._field_Expr))._field_Kind);;
	if ((_215913_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_215913_d))._field_Decl) {
		_1b9c73537_callTypeFn(_self_, &(_214534_fc), &(_215913_d));
		return _215913_d;;
	};
	if ((_1b9c91b1b_Fn((*(_215913_d))._field_Kind.ptr()) == nullptr)) {
		_1b9c6025a_pushErr(_self_.ptr(), (*(_214534_fc))._field_Token, jule::Str::lit("attempting to call a non-function", 33), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1b9c7448e_callFn(_self_, &(_214534_fc), &(_215913_d));
	return _215913_d;;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c74bcb_evalEnumStatic(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b64c0e_Enum> _217837_enm, jule::Ptr<_1b9b032eb_Token> _217849_ident) {
	jule::Ptr<_1b9b64192_EnumItem> _217913_item = _1b9b65803_FindItem(_217837_enm.ptr(), (*(_217849_ident))._field_Kind);;
	if ((_217913_item == nullptr)) {
		_1b9c6025a_pushErr(_self_, _217849_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_217837_enm))._field_Ident, &__jule_any_type4),jule::Any((*(_217849_ident))._field_Kind, &__jule_any_type4)}));
	};
	return _1b9c8a30c_evalEnumStatic(&(_217837_enm), &(_217913_item));;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c750c7_evalTypeEnumStatic(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b66419_TypeEnum> _218641_enm, jule::Ptr<_1b9b032eb_Token> _218657_ident) {
	jule::Ptr<_1b9b65d42_TypeEnumItem> _218713_item = _1b9b66eca_FindItem(_218641_enm.ptr(), (*(_218657_ident))._field_Kind);;
	if ((_218713_item == nullptr)) {
		_1b9c6025a_pushErr(_self_, _218657_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_218641_enm))._field_Ident, &__jule_any_type4),jule::Any((*(_218657_ident))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if ((_1b9c910d2_Enum((*((*(_218713_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca4454ac:;
			{
				return _1b9c635c1__evalEnum(_self_, _1b9c910d2_Enum((*((*(_218713_item))._field_Kind))._field_Kind.ptr()));;
			}
		}
		else if ((_1b9c91368_TypeEnum((*((*(_218713_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca445523:;
			{
				return _1b9c63d0d__evalTypeEnum(_self_, _1b9c91368_TypeEnum((*((*(_218713_item))._field_Kind))._field_Kind.ptr()));;
			}
		}
		else if ((_1b9c91da2_Struct((*((*(_218713_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca445589:;
			{
				return _1b9c6454a__evalStruct(_self_, _1b9c91da2_Struct((*((*(_218713_item))._field_Kind))._field_Kind.ptr()));;
			}
		}
		else {
			_case_begin_1ca44392d:;
			{
				jule::Ptr<_1b9c5d016_Data> _220017_d = jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=(*((*(_218713_item))._field_Kind))._field_Kind, ._field_Decl=true, });;
				(*(_220017_d))._field_Model=jule::Any((*(_220017_d))._field_Kind, &__jule_any_type83);
				return _220017_d;;
			}
		}
		_match_end_1ca444698:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c754c3_evalStructStatic(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b3c137_StructIns> _220939_s, jule::Ptr<_1b9b032eb_Token> _220954_ident) {
	jule::Ptr<_1b9c5d016_Data> _221013_d = jule::new_ptr<_1b9c5d016_Data>();;
	;
	jule::Ptr<_1b9b4e26a_Fn> _221413_method = _1b9b3d19e_FindMethod(_220939_s.ptr(), (*(_220954_ident))._field_Kind, true);;
	if ((_221413_method != nullptr)) {
		if ((!(_1b9bd5763_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_221413_method))._field_Public, (*(_221413_method))._field_Token)))) {
			_1b9c6025a_pushErr(_self_, _220954_ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_220954_ident))._field_Kind, &__jule_any_type4)}));
			_1b9c605bd_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1b9b5216e_FnIns> _222117_ins = _1b9b509ca_instance(_221413_method);;
		(*(_222117_ins))._field_Owner=_220939_s;
		_1ca2b08bb_pushReference(_self_, &(_222117_ins));
		(*(_221013_d))._field_Model=jule::Any(jule::new_ptr<_1b9b4654d_StructStaticIdentExprModel>(_1b9b4654d_StructStaticIdentExprModel{._field_Structure=_220939_s, ._field_Expr=(*(_221013_d))._field_Model, ._field_Method=_222117_ins}), &__jule_any_type95);
		(*(_221013_d))._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(_222117_ins, 1)});
		return _221013_d;;
	};
	jule::Ptr<_1b9c09611_Var> _223513_sttc = _1b9b3d831_FindStatic(_220939_s.ptr(), (*(_220954_ident))._field_Kind);;
	if ((_223513_sttc != nullptr)) {
		return _1b9c66607_evalVar(_self_, _223513_sttc, _220954_ident);;
	};
	_1b9c6025a_pushErr(_self_, _220954_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_220939_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*(_220954_ident))._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c75979_evalTraitSubIdent(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9c5d016_Data> _224440_d, jule::Ptr<_1b9b62514_Trait> _224454_trt, jule::Ptr<_1b9b032eb_Token> _224471_ident) {
	jule::Ptr<_1b9b4e26a_Fn> _224513_f = _1b9b631b3_FindMethod(_224454_trt.ptr(), (*(_224471_ident))._field_Kind);;
	if ((_224513_f == nullptr)) {
		_1b9c6025a_pushErr(_self_, _224471_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_224454_trt))._field_Ident, &__jule_any_type4),jule::Any((*(_224471_ident))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(_1b9b509ca_instance(_224513_f), 1)}), ._field_Model=jule::Any(jule::new_ptr<_1b9b45706_TraitSubIdentExprModel>(_1b9b45706_TraitSubIdentExprModel{._field_Token=_224471_ident, ._field_Expr=(*(_224440_d))._field_Model, ._field_Method=_224513_f, ._field_Trt=_224454_trt}), &__jule_any_type96), });;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c75eda_evalStructSubIdentField(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9c5d016_Data>* _226447_d, jule::Ptr<_1b9b3c137_StructIns>* _226462_s, jule::Ptr<_1b9b032eb_Token>* _226482_tok, jule::Ptr<_1b9b3b587_FieldIns>* _2264100_f) {
	jule::Ptr<_1b9b46097_StructSubIdentExprModel> _226513_model = jule::new_ptr<_1b9b46097_StructSubIdentExprModel>(_1b9b46097_StructSubIdentExprModel{._field_Token=(*(_226482_tok)), ._field_Expr=jule::new_ptr<_1b9c5d016_Data>((*((*(_226447_d))))), ._field_Field=(*(_2264100_f)), ._field_Owner=(*(_226462_s))});;
	(*((*(_226447_d))))._field_Model=jule::Any(_226513_model, &__jule_any_type97);
	(*((*(_226447_d))))._field_Kind=(*((*(_2264100_f))))._field_Kind;
	(*((*(_226447_d))))._field_Lvalue=true;
	if (((*((*((*(_2264100_f))))._field_Decl))._field_Mutable && (!((*((*(_226447_d))))._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1ca45628c:;
				{
					jule::Ptr<_1b9b970c6_scopeChecker> _227917_scope = _1b9b9a1b7_getRoot((*(_self_))._field_lookup.cast_ptr<_1b9b970c6_scopeChecker>(0));;
					(*((*(_226447_d))))._field_Mutable=(((*(_227917_scope))._field_owner != nullptr) && ((*((*(_227917_scope))._field_owner))._field_Owner == (*(_226462_s))));
				}
			}
			_match_end_1ca456237:;
		};
	};
	return (*(_226447_d));;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c7654b_evalStructSubIdent(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9c5d016_Data> _228741_d, jule::Ptr<_1b9b3c137_StructIns> _228755_s, jule::Ptr<_1b9b20c0e_SubIdentExpr> _228774_si, jule::Bool _228793_ref) {
	jule::Ptr<_1b9b3b587_FieldIns> _228813_f = _1b9b3d4e0_FindField(_228755_s.ptr(), (*((*(_228774_si))._field_Ident))._field_Kind);;
	if ((_228813_f != nullptr)) {
		if ((!(_1b9bd5763_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_228813_f))._field_Decl))._field_Public, (*((*(_228813_f))._field_Decl))._field_Token)))) {
			_1b9c6025a_pushErr(_self_, (*(_228774_si))._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_228813_f))._field_Decl))._field_Ident, &__jule_any_type4)}));
			_1b9c605bd_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		return _1b9c75eda_evalStructSubIdentField(_self_, &(_228741_d), &(_228755_s), &((*(_228774_si))._field_Ident), &(_228813_f));;
	};
	;
	jule::Ptr<_1b9b4e26a_Fn> _229813_m = _1b9b3d19e_FindMethod(_228755_s.ptr(), (*((*(_228774_si))._field_Ident))._field_Kind, false);;
	if ((_229813_m == nullptr)) {
		_1b9c6025a_pushErr(_self_, (*(_228774_si))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_228755_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*((*(_228774_si))._field_Ident))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((!(_1b9bd5763_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_229813_m))._field_Public, (*(_229813_m))._field_Token)))) {
		_1b9c6025a_pushErr(_self_, (*(_228774_si))._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_229813_m))._field_Ident, &__jule_any_type4)}));
		_1b9c605bd_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	if ((_1b9b4d148_IsRef((*(_229813_m))._field_Params[0LL].ptr()) && (!(_228793_ref)))) {
		_1b9c6025a_pushErr(_self_, (*(_228774_si))._field_Ident, jule::Str::lit("reference method cannot use with non-reference instance", 55), jule::Slice<jule::Any>());
	};
	_1b9c650ea_checkDeprecated(_self_, &((*(_229813_m))._field_Directives), (*(_228774_si))._field_Ident);
	jule::Ptr<_1b9b5216e_FnIns> _231413_ins = _1b9b509ca_instance(_229813_m);;
	(*(_231413_ins))._field_Owner=_228755_s;
	_1ca2b08bb_pushReference(_self_, &(_231413_ins));
	jule::Ptr<_1b9c5d016_Data> _231713_model = jule::new_ptr<_1b9c5d016_Data>((*(_228741_d)));;
	(*(_228741_d))._field_Model=jule::Any(jule::new_ptr<_1b9b46097_StructSubIdentExprModel>(_1b9b46097_StructSubIdentExprModel{._field_Token=(*(_228774_si))._field_Ident, ._field_Expr=_231713_model, ._field_Method=_231413_ins, ._field_Owner=_228755_s}), &__jule_any_type97);
	(*(_228741_d))._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(_231413_ins, 1)});
	return _228741_d;;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c7688c_evalIntTypeStatic(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b032eb_Token> _232836_ident) {
	;
	{
		auto &_match_expr{ (*(_232836_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ca464dc2:;
			{
				jule::Ptr<_1ec682ce3_Const> _233217_c = static__1ec683233_NewI64(static_cast<jule::I64>(_1ec67b00b_MaxI(jule::Str::lit("int", 3))));;
				(*(_233217_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d7a6d8_primInt, ._field_Model=jule::Any(_233217_c, &__jule_any_type19), ._field_Constant=_233217_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ca465730:;
			{
				jule::Ptr<_1ec682ce3_Const> _234017_c = static__1ec683233_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1ec67b506_Min(jule::Str::lit("int", 3)))));;
				(*(_234017_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d7a6d8_primInt, ._field_Model=jule::Any(_234017_c, &__jule_any_type19), ._field_Constant=_234017_c});;
			}
		}
		else {
			_case_begin_1ca464a5e:;
			{
				_1b9c6025a_pushErr(_self_, _232836_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("int", 3), &__jule_any_type4),jule::Any((*(_232836_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ca464a09:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c76bcd_evalUintTypeStatic(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b032eb_Token> _235337_ident) {
	;
	{
		auto &_match_expr{ (*(_235337_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ca464c6d:;
			{
				jule::Ptr<_1ec682ce3_Const> _235717_c = static__1ec6834ec_NewU64(static_cast<jule::U64>(_1ec67b2c5_MaxU(jule::Str::lit("uint", 4))));;
				(*(_235717_c))._field_Kind=jule::Str::lit("uint", 4);
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d7a30e_primUint, ._field_Model=jule::Any(_235717_c, &__jule_any_type19), ._field_Constant=_235717_c});;
			}
		}
		else {
			_case_begin_1ca46828d:;
			{
				_1b9c6025a_pushErr(_self_, _235337_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("uint", 4), &__jule_any_type4),jule::Any((*(_235337_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ca468238:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c7701e_evalI8TypeStatic(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b032eb_Token> _237035_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_237035_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ca46b4d3:;
			{
				jule::Ptr<_1ec682ce3_Const> _237617_c = static__1ec683233_NewI64(127LL);;
				(*(_237617_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d7a9a2_primI8, ._field_Model=jule::Any(_237617_c, &__jule_any_type19), ._field_Constant=_237617_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ca46bd41:;
			{
				jule::Ptr<_1ec682ce3_Const> _238417_c = static__1ec683233_NewI64(-128LL);;
				(*(_238417_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d7a9a2_primI8, ._field_Model=jule::Any(_238417_c, &__jule_any_type19), ._field_Constant=_238417_c});;
			}
		}
		else {
			_case_begin_1ca46b170:;
			{
				_1b9c6025a_pushErr(_self_, _237035_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i8", 2), &__jule_any_type4),jule::Any((*(_237035_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ca46b11a:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c77360_evalI16TypeStatic(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b032eb_Token> _239736_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_239736_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ca470174:;
			{
				jule::Ptr<_1ec682ce3_Const> _240317_c = static__1ec683233_NewI64(32767LL);;
				(*(_240317_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d7ac6b_primI16, ._field_Model=jule::Any(_240317_c, &__jule_any_type19), ._field_Constant=_240317_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ca4709d2:;
			{
				jule::Ptr<_1ec682ce3_Const> _241117_c = static__1ec683233_NewI64(-32768LL);;
				(*(_241117_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d7ac6b_primI16, ._field_Model=jule::Any(_241117_c, &__jule_any_type19), ._field_Constant=_241117_c});;
			}
		}
		else {
			_case_begin_1ca46ed11:;
			{
				_1b9c6025a_pushErr(_self_, _239736_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i16", 3), &__jule_any_type4),jule::Any((*(_239736_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ca46ecab:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c776a1_evalI32TypeStatic(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b032eb_Token> _242436_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_242436_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ca473d15:;
			{
				jule::Ptr<_1ec682ce3_Const> _243017_c = static__1ec683233_NewI64(2147483647LL);;
				(*(_243017_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d7b035_primI32, ._field_Model=jule::Any(_243017_c, &__jule_any_type19), ._field_Constant=_243017_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ca474673:;
			{
				jule::Ptr<_1ec682ce3_Const> _243817_c = static__1ec683233_NewI64(-2147483648LL);;
				(*(_243817_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d7b035_primI32, ._field_Model=jule::Any(_243817_c, &__jule_any_type19), ._field_Constant=_243817_c});;
			}
		}
		else {
			_case_begin_1ca4739a2:;
			{
				_1b9c6025a_pushErr(_self_, _242436_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i32", 3), &__jule_any_type4),jule::Any((*(_242436_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ca47394c:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c779e2_evalI64TypeStatic(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b032eb_Token> _245136_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_245136_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ca4779a6:;
			{
				jule::Ptr<_1ec682ce3_Const> _245717_c = static__1ec683233_NewI64(jule::MAX_I64);;
				(*(_245717_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d7b2ee_primI64, ._field_Model=jule::Any(_245717_c, &__jule_any_type19), ._field_Constant=_245717_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ca478314:;
			{
				jule::Ptr<_1ec682ce3_Const> _246517_c = static__1ec683233_NewI64(jule::MIN_I64);;
				(*(_246517_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d7b2ee_primI64, ._field_Model=jule::Any(_246517_c, &__jule_any_type19), ._field_Constant=_246517_c});;
			}
		}
		else {
			_case_begin_1ca477643:;
			{
				_1b9c6025a_pushErr(_self_, _245136_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i64", 3), &__jule_any_type4),jule::Any((*(_245136_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ca4775dd:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c77d33_evalU8TypeStatic(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b032eb_Token> _247835_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_247835_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ca47b218:;
			{
				jule::Ptr<_1ec682ce3_Const> _248317_c = static__1ec6834ec_NewU64(255LLU);;
				(*(_248317_c))._field_Kind=jule::Str::lit("u8", 2);
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d7b5b8_primU8, ._field_Model=jule::Any(_248317_c, &__jule_any_type19), ._field_Constant=_248317_c});;
			}
		}
		else {
			_case_begin_1ca47a987:;
			{
				_1b9c6025a_pushErr(_self_, _247835_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u8", 2), &__jule_any_type4),jule::Any((*(_247835_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ca47ad50:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c78174_evalU16TypeStatic(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b032eb_Token> _249636_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_249636_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ca47db11:;
			{
				jule::Ptr<_1ec682ce3_Const> _250117_c = static__1ec6834ec_NewU64(65535LLU);;
				(*(_250117_c))._field_Kind=jule::Str::lit("u16", 3);
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d7b882_primU16, ._field_Model=jule::Any(_250117_c, &__jule_any_type19), ._field_Constant=_250117_c});;
			}
		}
		else {
			_case_begin_1ca47d33b:;
			{
				_1b9c6025a_pushErr(_self_, _249636_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u16", 3), &__jule_any_type4),jule::Any((*(_249636_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ca47d748:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c784b5_evalU32TypeStatic(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b032eb_Token> _251436_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_251436_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ca481509:;
			{
				jule::Ptr<_1ec682ce3_Const> _251917_c = static__1ec6834ec_NewU64(4294967295LLU);;
				(*(_251917_c))._field_Kind=jule::Str::lit("u32", 3);
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d7bb4b_primU32, ._field_Model=jule::Any(_251917_c, &__jule_any_type19), ._field_Constant=_251917_c});;
			}
		}
		else {
			_case_begin_1ca480c34:;
			{
				_1b9c6025a_pushErr(_self_, _251436_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u32", 3), &__jule_any_type4),jule::Any((*(_251436_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ca481141:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c78806_evalU64TypeStatic(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b032eb_Token> _253236_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_253236_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ca483e02:;
			{
				jule::Ptr<_1ec682ce3_Const> _253717_c = static__1ec6834ec_NewU64(jule::MAX_U64);;
				(*(_253717_c))._field_Kind=jule::Str::lit("u64", 3);
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d7c0be_primU64, ._field_Model=jule::Any(_253717_c, &__jule_any_type19), ._field_Constant=_253717_c});;
			}
		}
		else {
			_case_begin_1ca48362c:;
			{
				_1b9c6025a_pushErr(_self_, _253236_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u64", 3), &__jule_any_type4),jule::Any((*(_253236_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ca483a39:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c78b47_evalF32TypeStatic(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b032eb_Token> _255036_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_255036_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ca48707b:;
			{
				jule::Ptr<_1ec682ce3_Const> _255717_c = static__1ec683d49_NewF64(340282346638528860000000000000000000000.0);;
				(*(_255717_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d7c388_primF32, ._field_Model=jule::Any(_255717_c, &__jule_any_type19), ._field_Constant=_255717_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ca4878d9:;
			{
				jule::Ptr<_1ec682ce3_Const> _256517_c = static__1ec683d49_NewF64(-340282346638528860000000000000000000000.0);;
				(*(_256517_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d7c388_primF32, ._field_Model=jule::Any(_256517_c, &__jule_any_type19), ._field_Constant=_256517_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1ca487950:;
			{
				jule::Ptr<_1ec682ce3_Const> _257317_c = static__1ec683d49_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				(*(_257317_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d7c388_primF32, ._field_Model=jule::Any(_257317_c, &__jule_any_type19), ._field_Constant=_257317_c});;
			}
		}
		else {
			_case_begin_1ca486c18:;
			{
				_1b9c6025a_pushErr(_self_, _255036_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("f32", 3), &__jule_any_type4),jule::Any((*(_255036_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ca486bb3:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c78e88_evalF64TypeStatic(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b032eb_Token> _258636_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_258636_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ca48be4e:;
			{
				jule::Ptr<_1ec682ce3_Const> _259317_c = static__1ec683d49_NewF64(jule::MAX_F64);;
				(*(_259317_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d7c652_primF64, ._field_Model=jule::Any(_259317_c, &__jule_any_type19), ._field_Constant=_259317_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ca48c7ac:;
			{
				jule::Ptr<_1ec682ce3_Const> _260117_c = static__1ec683d49_NewF64(jule::MIN_F64);;
				(*(_260117_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d7c652_primF64, ._field_Model=jule::Any(_260117_c, &__jule_any_type19), ._field_Constant=_260117_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1ca48c823:;
			{
				jule::Ptr<_1ec682ce3_Const> _260917_c = static__1ec683d49_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				(*(_260917_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d7c652_primF64, ._field_Model=jule::Any(_260917_c, &__jule_any_type19), ._field_Constant=_260917_c});;
			}
		}
		else {
			_case_begin_1ca48badb:;
			{
				_1b9c6025a_pushErr(_self_, _258636_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("f64", 3), &__jule_any_type4),jule::Any((*(_258636_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ca48ba86:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c79384_evalPrimStatic(_1b9c5ec0a_Eval* _self_, jule::Str _262233_kind, jule::Ptr<_1b9b032eb_Token> _262244_ident) {
	{
		auto &_match_expr{ _262233_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1ca490dcb:;
			{
				return _1b9c7688c_evalIntTypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1ca4907c1:;
			{
				return _1b9c76bcd_evalUintTypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1ca49097a:;
			{
				return _1b9c7701e_evalI8TypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1ca4909e1:;
			{
				return _1b9c77360_evalI16TypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1ca490a57:;
			{
				return _1b9c776a1_evalI32TypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1ca490abd:;
			{
				return _1b9c779e2_evalI64TypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1ca4916b2:;
			{
				return _1b9c77d33_evalU8TypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1ca491728:;
			{
				return _1b9c78174_evalU16TypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1ca49178e:;
			{
				return _1b9c784b5_evalU32TypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1ca491805:;
			{
				return _1b9c78806_evalU64TypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1ca49186b:;
			{
				return _1b9c78b47_evalF32TypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1ca4918d2:;
			{
				return _1b9c78e88_evalF64TypeStatic(_self_, _262244_ident);;
			}
		}
		else {
			_case_begin_1ca48bcd9:;
			{
				_1b9c6025a_pushErr(_self_, _262244_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_262233_kind, &__jule_any_type4),jule::Any((*(_262244_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ca48bc84:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c79780_evalTypeStatic(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9c5d016_Data> _265437_d, jule::Ptr<_1b9b20c0e_SubIdentExpr> _265451_si) {
	{
		
		if ((_1b9c9082e_Prim((*(_265437_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca495c9e:;
			{
				return _1b9c79384_evalPrimStatic(_self_, _1b9c960e8_Str(_1b9c9082e_Prim((*(_265437_d))._field_Kind.ptr()).ptr()), (*(_265451_si))._field_Ident);;
			}
		}
		else if ((_1b9c910d2_Enum((*(_265437_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca4969c5:;
			{
				return _1b9c74bcb_evalEnumStatic(_self_, _1b9c910d2_Enum((*(_265437_d))._field_Kind.ptr()), (*(_265451_si))._field_Ident);;
			}
		}
		else if ((_1b9c91368_TypeEnum((*(_265437_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca496a3b:;
			{
				return _1b9c750c7_evalTypeEnumStatic(_self_, _1b9c91368_TypeEnum((*(_265437_d))._field_Kind.ptr()), (*(_265451_si))._field_Ident);;
			}
		}
		else if ((_1b9c91da2_Struct((*(_265437_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca496aa2:;
			{
				return _1b9c754c3_evalStructStatic(_self_, _1b9c91da2_Struct((*(_265437_d))._field_Kind.ptr()), (*(_265451_si))._field_Ident);;
			}
		}
		else {
			_case_begin_1ca4958e7:;
			{
				_1b9c6025a_pushErr(_self_, (*(_265451_si))._field_Ident, jule::Str::lit("type @ is not supports sub-defines", 34), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_265437_d))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ca49584d:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1ca49d724_comptimeObjSubIdent(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b78283_comptimeTypeInfo>* _267057_ct, jule::Ptr<_1b9c5d016_Data>* _267077_d, jule::Ptr<_1b9b20c0e_SubIdentExpr>* _267088_si) {
	jule::Ptr<_1b9c5d016_Data> _267113_cd = _1b9b7e487_subIdent((*(_267057_ct)), &((*((*((*(_267088_si))))._field_Ident))._field_Kind));;
	if ((_267113_cd == nullptr)) {
		_1b9c6025a_pushErr(_self_, (*((*(_267088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*((*(_267077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267088_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267113_cd;;
}

inline jule::Ptr<_1b9c5d016_Data> _1ca4a29d1_comptimeObjSubIdent(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b6931d_comptimeStructField>* _267057_ct, jule::Ptr<_1b9c5d016_Data>* _267077_d, jule::Ptr<_1b9b20c0e_SubIdentExpr>* _267088_si) {
	jule::Ptr<_1b9c5d016_Data> _267113_cd = _1b9b6ab38_subIdent((*(_267057_ct)), &((*((*((*(_267088_si))))._field_Ident))._field_Kind));;
	if ((_267113_cd == nullptr)) {
		_1b9c6025a_pushErr(_self_, (*((*(_267088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*((*(_267077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267088_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267113_cd;;
}

inline jule::Ptr<_1b9c5d016_Data> _1ca4a6c49_comptimeObjSubIdent(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b70885_comptimeEnumField>* _267057_ct, jule::Ptr<_1b9c5d016_Data>* _267077_d, jule::Ptr<_1b9b20c0e_SubIdentExpr>* _267088_si) {
	jule::Ptr<_1b9c5d016_Data> _267113_cd = _1b9b71886_subIdent((*(_267057_ct)), &((*((*((*(_267088_si))))._field_Ident))._field_Kind));;
	if ((_267113_cd == nullptr)) {
		_1b9c6025a_pushErr(_self_, (*((*(_267088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*((*(_267077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267088_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267113_cd;;
}

inline jule::Ptr<_1b9c5d016_Data> _1ca4ab006_comptimeObjSubIdent(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b73327_comptimeParam>* _267057_ct, jule::Ptr<_1b9c5d016_Data>* _267077_d, jule::Ptr<_1b9b20c0e_SubIdentExpr>* _267088_si) {
	jule::Ptr<_1b9c5d016_Data> _267113_cd = _1b9b7504e_subIdent((*(_267057_ct)), &((*((*((*(_267088_si))))._field_Ident))._field_Kind));;
	if ((_267113_cd == nullptr)) {
		_1b9c6025a_pushErr(_self_, (*((*(_267088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*((*(_267077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267088_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267113_cd;;
}

inline jule::Ptr<_1b9c5d016_Data> _1ca4b03b2_comptimeObjSubIdent(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b6c5c9_comptimeStatic>* _267057_ct, jule::Ptr<_1b9c5d016_Data>* _267077_d, jule::Ptr<_1b9b20c0e_SubIdentExpr>* _267088_si) {
	jule::Ptr<_1b9c5d016_Data> _267113_cd = _1b9b6dde4_subIdent((*(_267057_ct)), &((*((*((*(_267088_si))))._field_Ident))._field_Kind));;
	if ((_267113_cd == nullptr)) {
		_1b9c6025a_pushErr(_self_, (*((*(_267088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*((*(_267077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267088_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267113_cd;;
}

inline jule::Ptr<_1b9c5d016_Data> _1ca4b462a_comptimeObjSubIdent(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b7e795_comptimeValue>* _267057_ct, jule::Ptr<_1b9c5d016_Data>* _267077_d, jule::Ptr<_1b9b20c0e_SubIdentExpr>* _267088_si) {
	jule::Ptr<_1b9c5d016_Data> _267113_cd = _1b9b81cd6_subIdent((*(_267057_ct)), &((*((*((*(_267088_si))))._field_Ident))._field_Kind));;
	if ((_267113_cd == nullptr)) {
		_1b9c6025a_pushErr(_self_, (*((*(_267088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*((*(_267077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267088_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267113_cd;;
}

inline jule::Ptr<_1b9c5d016_Data> _1ca4b8893_comptimeObjSubIdent(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9b836de_comptimeFile>* _267057_ct, jule::Ptr<_1b9c5d016_Data>* _267077_d, jule::Ptr<_1b9b20c0e_SubIdentExpr>* _267088_si) {
	jule::Ptr<_1b9c5d016_Data> _267113_cd = _1b9b85009_subIdent((*(_267057_ct)), &((*((*((*(_267088_si))))._field_Ident))._field_Kind));;
	if ((_267113_cd == nullptr)) {
		_1b9c6025a_pushErr(_self_, (*((*(_267088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*((*(_267077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267088_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267113_cd;;
}



inline __jule_tuple_x_1b9c5d016_Data__jule_tuple_bool _1b9c7a132_tryComptimeObjSubIdent(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9c5d016_Data>* _267846_d, jule::Ptr<_1b9b20c0e_SubIdentExpr> _267860_si) {
	__jule_tuple_x_1b9c5d016_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((_1b9c941e5_comptimeTypeInfo((*((*(_267846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca49bbea:;
			{
				jule::Ptr<_1b9b78283_comptimeTypeInfo> _268117_ct = _1b9c941e5_comptimeTypeInfo((*((*(_267846_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1ca49d724_comptimeObjSubIdent(_self_, &(_268117_ct), _267846_d, &(_267860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1b9c92e08_comptimeStructField((*((*(_267846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca49b843:;
			{
				jule::Ptr<_1b9b6931d_comptimeStructField> _268417_ct = _1b9c92e08_comptimeStructField((*((*(_267846_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1ca4a29d1_comptimeObjSubIdent(_self_, &(_268417_ct), _267846_d, &(_267860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1b9c93425_comptimeEnumField((*((*(_267846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca49b8a9:;
			{
				jule::Ptr<_1b9b70885_comptimeEnumField> _268717_ct = _1b9c93425_comptimeEnumField((*((*(_267846_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1ca4a6c49_comptimeObjSubIdent(_self_, &(_268717_ct), _267846_d, &(_267860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1b9c93942_comptimeParam((*((*(_267846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca49b920:;
			{
				jule::Ptr<_1b9b73327_comptimeParam> _269017_ct = _1b9c93942_comptimeParam((*((*(_267846_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1ca4ab006_comptimeObjSubIdent(_self_, &(_269017_ct), _267846_d, &(_267860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1b9c94712_comptimeStatic((*((*(_267846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca49b986:;
			{
				jule::Ptr<_1b9b6c5c9_comptimeStatic> _269317_ct = _1b9c94712_comptimeStatic((*((*(_267846_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1ca4b03b2_comptimeObjSubIdent(_self_, &(_269317_ct), _267846_d, &(_267860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1b9c94998_comptimeValue((*((*(_267846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca49c06e:;
			{
				jule::Ptr<_1b9b7e795_comptimeValue> _269617_ct = _1b9c94998_comptimeValue((*((*(_267846_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1ca4b462a_comptimeObjSubIdent(_self_, &(_269617_ct), _267846_d, &(_267860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1b9c94c2e_comptimeFile((*((*(_267846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca49c0d5:;
			{
				jule::Ptr<_1b9b836de_comptimeFile> _269917_ct = _1b9c94c2e_comptimeFile((*((*(_267846_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1ca4b8893_comptimeObjSubIdent(_self_, &(_269917_ct), _267846_d, &(_267860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ca49b7cc:;
			{
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		_match_end_1ca49b733:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c7a52d_evalObjSubIdent(_1b9c5ec0a_Eval* _self_, jule::Ptr<_1b9c5d016_Data> _270638_d, jule::Ptr<_1b9b20c0e_SubIdentExpr> _270652_si) {
	if (_1b9b05c5a_IsIgnoreIdent((*((*(_270652_si))._field_Ident))._field_Kind)) {
		_1b9c6025a_pushErr(_self_, (*(_270652_si))._field_Ident, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		jule::Ptr<_1b9c5d016_Data> _271317_compData;;
		jule::Bool _271327_ok = false;;
		({
			__jule_tuple_x_1b9c5d016_Data__jule_tuple_bool __jule_assign_result = _1b9c7a132_tryComptimeObjSubIdent(_self_, &(_270638_d), _270652_si);
			_271317_compData = __jule_assign_result.__jule_result_arg0;
			_271327_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_271327_ok) {
			return _271317_compData;;
		};
	};
	jule::Ptr<_1b9c8d1cd_TypeKind> _271913_kind = (*(_270638_d))._field_Kind;;
	{
		
		if ((_1b9c90d4b_Ptr((*(_270638_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca4bd887:;
			{
				jule::Ptr<_1b9c9d09a_Ptr> _272213_ptr = _1b9c90d4b_Ptr((*(_270638_d))._field_Kind.ptr());;
				if (_1b9c9dad4_IsUnsafe(_272213_ptr.ptr())) {
					goto _match_end_1ca4bd810;
				};
				if ((!(_1b9c60c50_isUnsafe(_self_)))) {
					_1b9c6025a_pushErr(_self_, (*(_270652_si))._field_Ident, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				_271913_kind=(*(_1b9c90d4b_Ptr((*(_270638_d))._field_Kind.ptr())))._field_Elem;
				_1b9c8a8b2_makeImplicitDeref(&(_270638_d), (*(_270652_si))._field_Ident);
			}
		}
		else if ((_1b9c90ab5_Sptr((*(_270638_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca4bd90e:;
			{
				_271913_kind=(*(_1b9c90ab5_Sptr((*(_270638_d))._field_Kind.ptr())))._field_Elem;
				_1b9c8a8b2_makeImplicitDeref(&(_270638_d), (*(_270652_si))._field_Ident);
			}
		}
		_match_end_1ca4bd810:;
	};
	{
		
		if ((_1b9c92138_Trait((*(_270638_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca4c1a66:;
			{
				return _1b9c75979_evalTraitSubIdent(_self_, _270638_d, _1b9c92138_Trait((*(_270638_d))._field_Kind.ptr()), (*(_270652_si))._field_Ident);;
			}
		}
		else if ((_1b9c91da2_Struct(_271913_kind.ptr()) != nullptr)) {
			_case_begin_1ca4c1add:;
			{
				jule::Ptr<_1b9b3c137_StructIns> _274013_s = _1b9c91da2_Struct(_271913_kind.ptr());;
				if (_1b9c87da9_isInstancedStruct(_274013_s)) {
					jule::Bool _274221_usedReferenceElem = (_1b9c90ab5_Sptr((*(_270638_d))._field_Kind.ptr()) != nullptr);;
					return _1b9c7654b_evalStructSubIdent(_self_, _270638_d, _1b9c91da2_Struct(_271913_kind.ptr()), _270652_si, _274221_usedReferenceElem);;
				};
			}
		}
		_match_end_1ca4c1a11:;
	};
	_1b9c6025a_pushErr(_self_, (*(_270652_si))._field_Ident, jule::Str::lit("object @ is not supports sub-defines", 36), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_270638_d))._field_Kind.ptr()), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c7a86e_evalSubIdent(jule::Ptr<_1b9c5ec0a_Eval> _self_, jule::Ptr<_1b9b20c0e_SubIdentExpr> _275036_si) {
	jule::Ptr<_1b9c8d1cd_TypeKind> _275113_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_275113_prefix;
	});;
	jule::Ptr<_1b9c5d016_Data> _275413_d = _1b9c7bdc0_evalExprKind(_self_, (*((*(_275036_si))._field_Expr))._field_Kind);;
	if ((_275413_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_275413_d))._field_Decl) {
		return _1b9c79780_evalTypeStatic(_self_.ptr(), _275413_d, _275036_si);;
	};
	return _1b9c7a52d_evalObjSubIdent(_self_.ptr(), _275413_d, _275036_si);;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c7abb0_evalTuple(jule::Ptr<_1b9c5ec0a_Eval> _self_, jule::Ptr<_1b9b1d7bc_TupleExpr> _276433_tup) {
	jule::Ptr<_1b9c9ad9a_Tuple> _276513_tupT = jule::new_ptr<_1b9c9ad9a_Tuple>();;
	(*(_276513_tupT))._field_Types=jule::Slice<jule::Ptr<_1b9c8d1cd_TypeKind>>::alloc(0LL, (*(_276433_tup))._field_Expr.len());
	jule::Ptr<_1b9b46c24_TupleExprModel> _276813_model = jule::new_ptr<_1b9b46c24_TupleExprModel>(_1b9b46c24_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_1b9c5d016_Data>>::alloc(0LL, (*(_276433_tup))._field_Expr.len())});;
	jule::Bool _277213_ok = true;;
	{
		auto expr = &((*(_276433_tup))._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca4ca960:;
		if (it != expr_end) {
			jule::Ptr<_1b9b1caeb_Expr> _277321_expr = *it;
			{
				jule::Ptr<_1b9c5d016_Data> _277417_d = _1b9c7cbd4_evalExpr(_self_, _277321_expr);;
				if ((_277417_d == nullptr)) {
					_277213_ok=false;
					goto _iter_next_1ca4ca960;
				};
				{ jule::Slice<jule::Ptr<_1b9c8d1cd_TypeKind>> &__jule_push_dest = (*(_276513_tupT))._field_Types; __jule_push_dest.push((*(_277417_d))._field_Kind); };
				{ jule::Slice<jule::Ptr<_1b9c5d016_Data>> &__jule_push_dest = (*(_276813_model))._field_Datas; __jule_push_dest.push(_277417_d); };
			}
			_iter_next_1ca4ca960:;
			++it;
			goto _iter_begin_1ca4ca960;
		}
		_iter_end_1ca4ca960:;
	};
	if ((!(_277213_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(_276513_tupT, 23)}), ._field_Model=jule::Any(_276813_model, &__jule_any_type81), });;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c7b0ab_evalMap(jule::Ptr<_1b9c5ec0a_Eval> _self_, jule::Ptr<_1b9c9b94a_Map> _279331_m, jule::Ptr<_1b9b230eb_BraceLit> _279344_lit) {
	jule::Ptr<_1b9b44ae0_MapExprModel> _279413_model = jule::new_ptr<_1b9b44ae0_MapExprModel>(_1b9b44ae0_MapExprModel{._field_KeyKind=(*(_279331_m))._field_Key, ._field_ValKind=(*(_279331_m))._field_Val, });;
	{
		auto expr = &((*(_279344_lit))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca4ce3d1:;
		if (it != expr_end) {
			jule::Ptr<_1b9b1caeb_Expr> _279921_expr = *it;
			{
				{
					auto &_match_expr{ (*(_279921_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_1ca4d046a:;
						{
							goto _match_end_1ca4d006e;
						}
					}
					else {
						_case_begin_1ca4d00c4:;
						{
							_1b9c6025a_pushErr(_self_.ptr(), (*(_279344_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1ca4d006e:;
				};
				jule::Ptr<_1b9b23926_KeyValPair> _280917_pair = (*(_279921_expr))._field_Kind.cast_ptr<_1b9b23926_KeyValPair>(&__jule_any_type78);;
				jule::Ptr<_1b9c5d016_Data> _281117_key = _1b9c7cbd4_evalExpr(_self_, (*(_280917_pair))._field_Key);;
				if ((_281117_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1b9c5d016_Data> _281617_val = _1b9c7cbd4_evalExpr(_self_, (*(_280917_pair))._field_Val);;
				if ((_281617_val == nullptr)) {
					return nullptr;;
				};
				_1b9bdca12_checkAssignType((*(_self_))._field_s, false, &((*(_279331_m))._field_Key), &(_281117_key), (*(_280917_pair))._field_Colon);
				_1b9bdca12_checkAssignType((*(_self_))._field_s, false, &((*(_279331_m))._field_Val), &(_281617_val), (*(_280917_pair))._field_Colon);
				{ jule::Slice<jule::Ptr<_1b9b44639_KeyValPairExprModel>> &__jule_push_dest = (*(_279413_model))._field_Entries; __jule_push_dest.push(jule::new_ptr<_1b9b44639_KeyValPairExprModel>(_1b9b44639_KeyValPairExprModel{._field_Key=(*(_281117_key))._field_Model, ._field_Val=(*(_281617_val))._field_Model})); };
			}
			_iter_next_1ca4ce3d1:;
			++it;
			goto _iter_begin_1ca4ce3d1;
		}
		_iter_end_1ca4ce3d1:;
	};
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(_279331_m, 24)}), ._field_Mutable=true, ._field_Model=jule::Any(_279413_model, &__jule_any_type98), });;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c7b3ec_evalBraceLit(jule::Ptr<_1b9c5ec0a_Eval> _self_, jule::Ptr<_1b9b230eb_BraceLit> _283736_lit) {
	{
		
		if (((*(_self_))._field_prefix == nullptr)) {
			_case_begin_1ca4d633e:;
			{
				_1b9c6025a_pushErr(_self_.ptr(), (*(_283736_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1b9c923be_Map((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1ca4d63b6:;
			{
				return _1b9c7b0ab_evalMap(_self_, _1b9c923be_Map((*(_self_))._field_prefix.ptr()), _283736_lit);;
			}
		}
		else if ((_1b9c91da2_Struct((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1ca4d59ae:;
			{
				return _1b9c727ab_evalStructLitExplicit(_self_, _1b9c91da2_Struct((*(_self_))._field_prefix.ptr()), (*(_283736_lit))._field_Exprs, (*(_283736_lit))._field_Token);;
			}
		}
		else {
			_case_begin_1ca4d5607:;
			{
				_1b9c6025a_pushErr(_self_.ptr(), (*(_283736_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ca4cea63:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c7b73d_evalAnonFunc(jule::Ptr<_1b9c5ec0a_Eval> _self_, jule::Ptr<_1b9b2a477_FnDecl> _285236_decl) {
	_1b9ca008b_typeChecker _285313_tc = _1b9ca008b_typeChecker{._field_s=(*(_self_))._field_s, ._field_rootLookup=(*(_self_))._field_lookup, ._field_lookup=(*(_self_))._field_lookup, };;
	jule::Ptr<_1b9b5216e_FnIns> _285813_ins = _1b9ca6c63_buildFunc(&_285313_tc, _285236_decl);;
	if ((_285813_ins == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1ca4db2cd:;
			{
				jule::Ptr<_1b9b970c6_scopeChecker> _286417_sc = (*(_self_))._field_lookup.cast_ptr<_1b9b970c6_scopeChecker>(0);;
				jule::Ptr<_1b9b970c6_scopeChecker> _286517_scc = _1b9ba8d1e_newChildChecker(_286417_sc);;
				(*(_286517_scc))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1b9b95b30_scopeLabel>>>(nullptr);
				(*(_286517_scc))._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1b9b961b3_scopeGoto>>>(nullptr);
				(*(_286517_scc))._field_owner=nullptr;
				(*(_286517_scc))._field_childIndex=0LL;
				(*(_286517_scc))._field_it=0LLU;
				(*(_286517_scc))._field_cse=0LLU;
				(*(_286517_scc))._field_owner=_285813_ins;
				_1b9c03e57_checkFnInsSc((*(_self_))._field_s.ptr(), &(_285813_ins), &(_286517_scc));
			}
		}
		else {
			_case_begin_1ca4dae59:;
			{
				_1b9c04573_checkFnIns((*(_self_))._field_s, &(_285813_ins));
			}
		}
		_match_end_1ca4dad5a:;
	};
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(_285813_ins, 1)}), ._field_Model=jule::Any(jule::new_ptr<_1b9b44260_AnonFnExprModel>(_1b9b44260_AnonFnExprModel{._field_Func=_285813_ins, ._field_Global=_1b9c60ed6_isGlobal(_self_.ptr())}), &__jule_any_type99), });;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c7ba7e_evalBinop(jule::Ptr<_1b9c5ec0a_Eval> _self_, jule::Ptr<_1b9b211b5_BinopExpr> _288733_op) {
	_1b9c80137_binaryEval _288813_bs = static__1b9c80720_newPlain(_self_);;
	if (((*(_self_))._field_prefix != nullptr)) {
		jule::Ptr<_1b9c95ca7_Prim> _289113_prim = _1b9c9082e_Prim((*(_self_))._field_prefix.ptr());;
		if (((_289113_prim == nullptr) || (!(_1ec6826e9_IsNum(_1b9c960e8_Str(_289113_prim.ptr())))))) {
			jule::Ptr<_1b9c8d1cd_TypeKind> _289321_prefix = (*(_self_))._field_prefix;;
			(*(_self_))._field_prefix=nullptr;
			__JULE_DEFER({
				(*(_self_))._field_prefix=_289321_prefix;
			});;
			return _1b9c861b5_eval(&_288813_bs, &(_288733_op));;
		};
	};
	return _1b9c861b5_eval(&_288813_bs, &(_288733_op));;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c7bdc0_evalExprKind(jule::Ptr<_1b9c5ec0a_Eval> _self_, jule::Any _290236_kind) {
	{
		auto &_match_expr{ _290236_kind };
		
		if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1ca4e3b54:;
			{
				jule::Ptr<_1b9b1cde8_RangeExpr> _290517_e = _290236_kind.cast_ptr<_1b9b1cde8_RangeExpr>(&__jule_any_type100);;
				return _1b9c7bdc0_evalExprKind(_self_, (*((*(_290517_e))._field_Expr))._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1ca4e37e1:;
			{
				return _1b9c6278a_evalLit(_self_.ptr(), _290236_kind.cast_ptr<_1b9b1db96_LitExpr>(&__jule_any_type101));;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ca4e3d85:;
			{
				return _1b9c67240_evalIdent(_self_.ptr(), _290236_kind.cast_ptr<_1b9b1e526_IdentExpr>(&__jule_any_type79));;
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1ca4e3e0c:;
			{
				return _1b9c67581_evalUnary(_self_, _290236_kind.cast_ptr<_1b9b1eba8_UnaryExpr>(&__jule_any_type87));;
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1ca4e3e84:;
			{
				return _1b9c678c2_evalVariadic(_self_, _290236_kind.cast_ptr<_1b9b20082_VariadicExpr>(&__jule_any_type75));;
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1ca4e400b:;
			{
				return _1b9c67c13_evalUnsafe(_self_, _290236_kind.cast_ptr<_1b9b1e070_UnsafeExpr>(&__jule_any_type102));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1ca4e40d8:;
			{
				return _1b9c6884b_evalSliceExpr(_self_, _290236_kind.cast_ptr<_1b9b2411e_SliceExpr>(&__jule_any_type93));;
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1ca4e4160:;
			{
				return _1b9c6bee2_evalIndexing(_self_, _290236_kind.cast_ptr<_1b9b24aae_IndexingExpr>(&__jule_any_type103));;
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1ca4e41d7:;
			{
				return _1b9c6d323_evalSlicing(_self_, _290236_kind.cast_ptr<_1b9b2521e_SlicingExpr>(&__jule_any_type104));;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1ca4e425e:;
			{
				return _1b9c71eb4_evalCast(_self_, _290236_kind.cast_ptr<_1b9b2045b_CastExpr>(&__jule_any_type105));;
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1ca4e42d6:;
			{
				return _1b9c72305_evalNsSelection(_self_.ptr(), _290236_kind.cast_ptr<_1b9b20835_NsSelectionExpr>(&__jule_any_type89));;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1ca4e435d:;
			{
				return _1b9c72aec_evalStructLit(_self_, _290236_kind.cast_ptr<_1b9b22b45_StructLit>(&__jule_any_type106));;
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1ca4e43d5:;
			{
				return _1b9c731c4_evalType(_self_.ptr(), _290236_kind.cast_ptr<_1b9b187b7_TypeDecl>(&__jule_any_type88));;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1ca4e445c:;
			{
				return _1b9c747d0_evalFnCall(_self_, _290236_kind.cast_ptr<_1b9b21825_FnCallExpr>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1ca4e44d4:;
			{
				return _1b9c7a86e_evalSubIdent(_self_, _290236_kind.cast_ptr<_1b9b20c0e_SubIdentExpr>(&__jule_any_type85));;
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1ca4e455b:;
			{
				return _1b9c7abb0_evalTuple(_self_, _290236_kind.cast_ptr<_1b9b1d7bc_TupleExpr>(&__jule_any_type80));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1ca4e45d3:;
			{
				return _1b9c7b3ec_evalBraceLit(_self_, _290236_kind.cast_ptr<_1b9b230eb_BraceLit>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ca4e465a:;
			{
				return _1b9c7b73d_evalAnonFunc(_self_, _290236_kind.cast_ptr<_1b9b2a477_FnDecl>(&__jule_any_type14));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1ca4e46d2:;
			{
				return _1b9c7ba7e_evalBinop(_self_, _290236_kind.cast_ptr<_1b9b211b5_BinopExpr>(&__jule_any_type109));;
			}
		}
		else {
			_case_begin_1ca4e3978:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca4e3923:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c7c211_eval1(jule::Ptr<_1b9c5ec0a_Eval> _self_, jule::Ptr<_1b9b1caeb_Expr> _295029_expr) {
	jule::Ptr<_1b9c5d016_Data> _295113_d = _1b9c7bdc0_evalExprKind(_self_, (*(_295029_expr))._field_Kind);;
	if (((_295113_d == nullptr) || ((*(_295113_d))._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1b9c91b1b_Fn((*(_295113_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca5000e4:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _295817_f = _1b9c91b1b_Fn((*(_295113_d))._field_Kind.ptr());;
				if (_1b9b53604_IsBuiltin(_295817_f.ptr())) {
					_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_295029_expr))._field_Token, jule::Str::lit("built-in functions should be invoked", 36), jule::Slice<jule::Any>());
					goto _match_end_1ca4ee70e;
				};
				if (((*(_295817_f))._field_Generics.len() != (*((*(_295817_f))._field_Decl))._field_Generics.len())) {
					_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_295029_expr))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				};
				if (((!((*((*(_295817_f))._field_Decl))._field_Statically)) && _1b9b4e974_IsMethod((*(_295817_f))._field_Decl.ptr()))) {
					_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_295029_expr))._field_Token, jule::Str::lit("methods should be invoked", 25), jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1ca4ee70e:;
	};
	return _295113_d;;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c7c552_eval(jule::Ptr<_1b9c5ec0a_Eval> _self_, jule::Ptr<_1b9b1caeb_Expr> _297728_expr) {
	jule::Ptr<_1b9c5d016_Data> _297813_d = _1b9c7c211_eval1(_self_, _297728_expr);;
	if ((_297813_d == nullptr)) {
		return nullptr;;
	};
	if (((((*(_self_))._field_owner == nullptr) || (!((*((*(_self_))._field_owner))._field_Constant))) && _1b9c928db_comptime((*(_297813_d))._field_Kind.ptr()))) {
		_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), (*(_297728_expr))._field_Token, jule::Str::lit("compile-time evaluations cannot used as expression", 50), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _297813_d;;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c7c893_evalExpr1(jule::Ptr<_1b9c5ec0a_Eval> _self_, jule::Ptr<_1b9b1caeb_Expr> _299233_expr) {
	jule::Ptr<_1b9c5d016_Data> _299313_d = _1b9c7c211_eval1(_self_, _299233_expr);;
	{
		
		if ((_299313_d == nullptr)) {
			_case_begin_1ca507b13:;
			{
				return nullptr;;
			}
		}
		else if ((*(_299313_d))._field_Decl) {
			_case_begin_1ca507b8a:;
			{
				_1b9c6025a_pushErr(_self_.ptr(), (*(_299233_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1ca507a47:;
			{
				return _299313_d;;
			}
		}
		_match_end_1ca5079d1:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c7cbd4_evalExpr(jule::Ptr<_1b9c5ec0a_Eval> _self_, jule::Ptr<_1b9b1caeb_Expr> _300832_expr) {
	jule::Ptr<_1b9c5d016_Data> _300913_d = _1b9c7c552_eval(_self_, _300832_expr);;
	{
		
		if ((_300913_d == nullptr)) {
			_case_begin_1ca5098b2:;
			{
				return nullptr;;
			}
		}
		else if ((*(_300913_d))._field_Decl) {
			_case_begin_1ca509939:;
			{
				_1b9c6025a_pushErr(_self_.ptr(), (*(_300832_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1ca5097e6:;
			{
				return _300913_d;;
			}
		}
		_match_end_1ca509780:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1b9c5ec0a_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1b9c7d19b_unaryEval static__1b9c7d5db_new(jule::Ptr<_1b9c5ec0a_Eval> _302923_e) {
	return _1b9c7d19b_unaryEval{._field_e=_302923_e, };;
}



inline void _1b9c7d7d9_minus(_1b9c7d19b_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1ca50b551:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1b9c9082e_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca50b221:;
			{
				if ((!(_1ec6826e9_IsNum(_1b9c8d596_Str((*((*(_self_))._field_d))._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1b9c91da2_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca50b287:;
			{
				if (((*(_1b9c91da2_Struct((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ca50b1aa:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ca50a275:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_1b9c5d8da_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1ec6877ed_IsF64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1ca510c2b:;
				{
					_1ec686830_SetF64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::F64>((-(_1ec685202_ReadF64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_1ec686cb4_IsI64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1ca510e29:;
				{
					_1ec685c5d_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((-(_1ec6846b8_ReadI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_1ec68704a_IsU64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1ca510e90:;
				{
					_1ec685c5d_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((-(_1ec685488_AsI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1ca510885:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.minus, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3067:17"));;
				}
			}
			_match_end_1ca5107ca:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1b9b41900_UnaryExprModel>(_1b9b41900_UnaryExprModel{._field_Expr=jule::new_ptr<_1b9c5d016_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1b9c7d9d7_plus(_1b9c7d19b_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1ca5163d5:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1b9c9082e_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca5160a5:;
			{
				if ((!(_1ec6826e9_IsNum(_1b9c8d596_Str((*((*(_self_))._field_d))._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1b9c91da2_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca51611b:;
			{
				if (((*(_1b9c91da2_Struct((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ca51603e:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ca515e73:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_1b9c5d8da_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1ec6877ed_IsF64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1ca51aab0:;
				{
					_1ec686830_SetF64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::F64>((+(_1ec685202_ReadF64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_1ec686cb4_IsI64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1ca51acad:;
				{
					_1ec685c5d_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((+(_1ec6846b8_ReadI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_1ec68704a_IsU64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1ca51ad24:;
				{
					_1ec685c5d_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((+(_1ec685488_AsI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1ca51a719:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.plus, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3112:17"));;
				}
			}
			_match_end_1ca51a65e:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1b9b41900_UnaryExprModel>(_1b9b41900_UnaryExprModel{._field_Expr=jule::new_ptr<_1b9c5d016_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1b9c7dbd5_caret(_1b9c7d19b_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1ca521269:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1b9c9082e_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca520e39:;
			{
				if ((!(_1ec6820de_IsInt(_1b9c8d596_Str((*((*(_self_))._field_d))._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1b9c91da2_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca520ea0:;
			{
				if (((*(_1b9c91da2_Struct((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ca520dc3:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ca520d07:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_1b9c5d8da_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1ec686cb4_IsI64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1ca525944:;
				{
					_1ec685c5d_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((~(_1ec6846b8_ReadI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_1ec68704a_IsU64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1ca525b42:;
				{
					_1ec686016_SetU64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::U64>((~(_1ec68494e_ReadU64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1ca52559d:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.caret, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3155:17"));;
				}
			}
			_match_end_1ca5254e3:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1b9b41900_UnaryExprModel>(_1b9b41900_UnaryExprModel{._field_Expr=jule::new_ptr<_1b9c5d016_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1b9c7ddd3_excl(_1b9c7d19b_unaryEval* _self_) {
	jule::Ptr<_1b9c95ca7_Prim> _31699_t = _1b9c9082e_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
	if (((_31699_t == nullptr) || (!(_1b9c98ea8_IsBool(_31699_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_1b9c5d8da_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1ec6872d1_IsBool((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1ca52ba27:;
				{
					_1ec6862be_SetBool((*((*(_self_))._field_d))._field_Constant.ptr(), (!(_1ec684bd5_ReadBool((*((*(_self_))._field_d))._field_Constant.ptr()))));
				}
			}
			else {
				_case_begin_1ca52b681:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.excl, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3183:17"));;
				}
			}
			_match_end_1ca52b5b5:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1b9b41900_UnaryExprModel>(_1b9b41900_UnaryExprModel{._field_Expr=jule::new_ptr<_1b9c5d016_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1b9c7e0d1_star(_1b9c7d19b_unaryEval* _self_) {
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1b9b41900_UnaryExprModel>(_1b9b41900_UnaryExprModel{._field_Expr=jule::new_ptr<_1b9c5d016_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
	{
		
		if ((_1b9c90d4b_Ptr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca530366:;
			{
				if ((!(_1b9c60c50_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1b9c9d09a_Ptr> _320817_t = _1b9c90d4b_Ptr((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (_1b9c9dad4_IsUnsafe(_320817_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*((*(_self_))._field_d))._field_Kind=(*(_320817_t))._field_Elem;
				(*((*(_self_))._field_d))._field_Mutable=true;
			}
		}
		else if ((_1b9c90ab5_Sptr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca530047:;
			{
				(*((*(_self_))._field_d))._field_Kind=(*(_1b9c90ab5_Sptr((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Elem;
			}
		}
		else {
			_case_begin_1ca52eed1:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ca52e068:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*((*(_self_))._field_d))._field_Lvalue=true;
}



inline void _1b9c7e2ce_amper(_1b9c7d19b_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1ca5383a2:;
			{
				jule::Ptr<_1b9b422c4_StructLitExprModel> _322917_lit = (*((*(_self_))._field_d))._field_Model.cast_ptr<_1b9b422c4_StructLitExprModel>(&__jule_any_type94);;
				_1b9c8701d_makeStructLitAlloc(&((*(_self_))._field_d), &(_322917_lit));
			}
		}
		else {
			_case_begin_1ca5358cc:;
			{
				{
					
					if (_1b9ca90b7_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1ca53547b:;
						{
							(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(jule::new_ptr<_1b9c9d09a_Ptr>(_1b9c9d09a_Ptr{._field_Elem=(*((*(_self_))._field_d))._field_Kind}), 26)});
							(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1b9b41900_UnaryExprModel>(_1b9b41900_UnaryExprModel{._field_Expr=jule::new_ptr<_1b9c5d016_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
						}
					}
					else {
						_case_begin_1ca535e0a:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_1ca535d3e:;
				};
			}
		}
		_match_end_1ca535877:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
}



inline void _1b9c7e4cc_typeDecl(_1b9c7d19b_unaryEval* _self_) {
	_1b9ca008b_typeChecker _325313_tc = _1b9ca008b_typeChecker{._field_s=(*((*(_self_))._field_e))._field_s, ._field_rootLookup=(*((*(_self_))._field_e))._field_lookup, ._field_lookup=(*((*(_self_))._field_e))._field_lookup, ._field_errorToken=(*((*(_self_))._field_u))._field_Op, };;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1ca539947:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(_1b9ca547b_buildPtrFromType(&_325313_tc, &((*((*(_self_))._field_d))._field_Kind)), 26)});
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1ca53cede:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(_1b9ca4ce9_buildSptrFromType(&_325313_tc, &((*((*(_self_))._field_d))._field_Kind)), 21)});
			}
		}
		else {
			_case_begin_1ca53b31c:;
			{
				_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_u))._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_1b9c8d596_Str((*((*(_self_))._field_d))._field_Kind.ptr()), &__jule_any_type4)}));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ca53b2b7:;
	};
	(*((*(_self_))._field_d))._field_Decl=true;
}



inline void _1b9c7e6ca_evalData(_1b9c7d19b_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1ca540b7e:;
			{
				jule::Ptr<_1b9c8d1cd_TypeKind> _327617_prefix = (*((*(_self_))._field_e))._field_prefix;;
				(*((*(_self_))._field_e))._field_prefix=nullptr;
				(*(_self_))._field_d=_1b9c7c552_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
				(*((*(_self_))._field_e))._field_prefix=_327617_prefix;
			}
		}
		else {
			_case_begin_1ca540794:;
			{
				(*(_self_))._field_d=_1b9c7c552_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
			}
		}
		_match_end_1ca54071c:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c7ea1b_eval(_1b9c7d19b_unaryEval* _self_, jule::Ptr<_1b9b1eba8_UnaryExpr> _328527_u) {
	(*(_self_))._field_u=_328527_u;
	_1b9c7e6ca_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*((*(_self_))._field_d))._field_Decl) {
		_1b9c7e4cc_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1b9c8d1cd_TypeKind> _32969_kind = (*((*(_self_))._field_d))._field_Kind;;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1ca54527c:;
			{
				_1b9c7d7d9_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1ca544e80:;
			{
				_1b9c7d9d7_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1ca544ee6:;
			{
				_1b9c7dbd5_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(68LLU)) {
			_case_begin_1ca54505c:;
			{
				_1b9c7ddd3_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1ca5450c3:;
			{
				_1b9c7e0d1_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1ca5455ce:;
			{
				_1b9c7e2ce_amper(_self_);
			}
		}
		else {
			_case_begin_1ca544e19:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1ca544db4:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1ca545645:;
			{
				_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_u))._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_1b9c8d596_Str(_32969_kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if (_1b9c5d8da_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1ca546da5:;
			{
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Constant, &__jule_any_type19);
			}
		}
		_match_end_1ca546d50:;
	};
	return (*(_self_))._field_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9c7d19b_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1b9c80137_binaryEval static__1b9c80720_newPlain(jule::Ptr<_1b9c5ec0a_Eval> _333328_e) {
	return _1b9c80137_binaryEval{._field_e=_333328_e, };;
}



inline _1b9c80137_binaryEval static__1b9c80a61_new(jule::Ptr<_1b9c5ec0a_Eval> _333923_e, jule::Ptr<_1b9b032eb_Token> _333937_op) {
	return _1b9c80137_binaryEval{._field_e=_333923_e, ._field_op=_333937_op};;
}



inline jule::Bool _1b9c80ce7_checkTypeCompatibility(_1b9c80137_binaryEval* _self_) {
	return _1b9bdceb8_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*((*(_self_))._field_l))._field_Kind), &((*((*(_self_))._field_r))._field_Kind), &((*(_self_))._field_op));;
}



inline jule::Bool _1b9c8107d_checkStructCommonOperatorCompatibility(_1b9c80137_binaryEval* _self_) {
	jule::Ptr<_1b9b5216e_FnIns> _335317_overload = nullptr;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1ca54bcde:;
			{
				_335317_overload=(*(_1b9c91da2_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1ca54d83a:;
			{
				_335317_overload=(*(_1b9c91da2_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1ca54d8a1:;
			{
				_335317_overload=(*(_1b9c91da2_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Add;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1ca54c31c:;
			{
				_335317_overload=(*(_1b9c91da2_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1ca54c383:;
			{
				_335317_overload=(*(_1b9c91da2_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Div;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1ca54c3e9:;
			{
				_335317_overload=(*(_1b9c91da2_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1ca54c460:;
			{
				_335317_overload=(*(_1b9c91da2_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1ca54d98e:;
			{
				_335317_overload=(*(_1b9c91da2_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU)) {
			_case_begin_1ca54da05:;
			{
				_335317_overload=(*(_1b9c91da2_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1ca54da6b:;
			{
				_335317_overload=(*(_1b9c91da2_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1ca54c2a6:;
			{
				_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1b9c8d596_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_1ca54c251:;
	};
	if ((_335317_overload == nullptr)) {
		_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1b9c8d596_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_1b9b511c3_ParamIns> _338513_p = (*(_335317_overload))._field_Params[1LL];;
	return _1b9bdca12_checkAssignType((*((*(_self_))._field_e))._field_s, (*((*(_338513_p))._field_Decl))._field_Reference, &((*(_338513_p))._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op);;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c81314_evalComptimeTypeInfo(_1b9c80137_binaryEval* _self_) {
	jule::Ptr<_1b9b78283_comptimeTypeInfo> _339013_r = _1b9c941e5_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((_339013_r == nullptr)) {
		_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("comptimeTypeInfo", 16), &__jule_any_type4),jule::Any(_1b9c8d596_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9b78283_comptimeTypeInfo> _339513_l = _1b9c941e5_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1ca561a07:;
			{
				jule::Ptr<_1ec682ce3_Const> _339817_constant = static__1ec6837b6_NewBool(_1b9c8d8d7_Equal((*(_339513_l))._field_base, (*(_339013_r))._field_base));;
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d79c7b_primBool, ._field_Model=jule::Any(_339817_constant, &__jule_any_type19), ._field_Constant=_339817_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1ca562c28:;
			{
				jule::Ptr<_1ec682ce3_Const> _340517_constant = static__1ec6837b6_NewBool((!(_1b9c8d8d7_Equal((*(_339513_l))._field_base, (*(_339013_r))._field_base))));;
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d79c7b_primBool, ._field_Model=jule::Any(_340517_constant, &__jule_any_type19), ._field_Constant=_340517_constant});;
			}
		}
		else {
			_case_begin_1ca561694:;
			{
				_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1b9c8d596_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ca56163e:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c8159a_evalNil(_1b9c80137_binaryEval* _self_) {
	if ((!(_1b9c9007b_NilCompatible((*((*(_self_))._field_r))._field_Kind.ptr())))) {
		_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4),jule::Any(_1b9c8d596_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1ca565577:;
			{
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d79c7b_primBool, });;
			}
		}
		else {
			_case_begin_1ca566b83:;
			{
				_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ca566b2d:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c81831_evalEnum(_1b9c80137_binaryEval* _self_) {
	jule::Ptr<_1b9b64c0e_Enum> _343613_enm = _1b9c910d2_Enum((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1ca568e93:;
			{
				jule::Ptr<_1b9c8d1cd_TypeKind> _344017_rkind = (*((*(_self_))._field_r))._field_Kind;;
				if ((_1b9c910d2_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
					_344017_rkind=(*((*(_1b9c910d2_Enum((*((*(_self_))._field_r))._field_Kind.ptr())))._field_Kind))._field_Kind;
				};
				if ((!(_1b9bdceb8_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*((*(_343613_enm))._field_Kind))._field_Kind), &(_344017_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d79c7b_primBool, });;
			}
		}
		_match_end_1ca568e3d:;
	};
	if (((_1b9c910d2_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) == nullptr) || (_343613_enm != _1b9c910d2_Enum((*((*(_self_))._field_r))._field_Kind.ptr())))) {
		_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any((*(_343613_enm))._field_Ident, &__jule_any_type4),jule::Any(_1b9c8d596_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1ca56e62a:;
			{
				if ((!(_1ec6826e9_IsNum(_1b9c8d596_Str((*((*(_343613_enm))._field_Kind))._field_Kind.ptr()))))) {
					_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*(_343613_enm))._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d79c7b_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1ca5704b6:;
			{
				jule::Ptr<_1b9b64192_EnumItem> _347013_first = (*(_343613_enm))._field_Items[0LL];;
				{
					
					if (_1ec686cb4_IsI64((*((*((*(_347013_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1ca573695:;
						{
							if ((_1ec6846b8_ReadI64((*((*((*(_347013_first))._field_Value))._field_Data))._field_Constant.ptr()) == 0LL)) {
								goto _julec_label_1ca577787;
							};
							goto _julec_label_1ca575eb1;
						}
					}
					else if (_1ec68704a_IsU64((*((*((*(_347013_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1ca57371c:;
						{
							if ((_1ec68494e_ReadU64((*((*((*(_347013_first))._field_Value))._field_Data))._field_Constant.ptr()) == 0LLU)) {
								goto _julec_label_1ca577787;
							};
							goto _julec_label_1ca575eb1;
						}
					}
					else {
						_case_begin_1ca5732aa:;
						{
							jule::panic(jule::Str::lit("unimplemented enum type, this panic call should be unreachable", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:3483:17"));;
						}
					}
					_match_end_1ca573244:;
				};
				_julec_label_1ca575eb1:;
				_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("the @ enum type is not supports @ operator", 42), jule::Slice<jule::Any>::make({jule::Any((*(_343613_enm))._field_Ident, &__jule_any_type4),jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				_1b9c605bd_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str::lit("define default enum field (the first one is default) with zero value to use & operator", 86), jule::Slice<jule::Any>());
				_julec_label_1ca577787:;
				goto _case_begin_1ca57052c;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU) || _match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1ca57052c:;
			{
				if (((_1b9c9082e_Prim((*((*(_343613_enm))._field_Kind))._field_Kind.ptr()) == nullptr) || (!(_1ec6820de_IsInt(_1b9c960e8_Str(_1b9c9082e_Prim((*((*(_343613_enm))._field_Kind))._field_Kind.ptr()).ptr())))))) {
					_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*(_343613_enm))._field_Ident, &__jule_any_type4)}));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1ca56e2b7:;
			{
				_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*(_343613_enm))._field_Ident, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ca56e262:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c81ab7_evalTypeEnum(_1b9c80137_binaryEval* _self_) {
	jule::Ptr<_1b9b66419_TypeEnum> _350313_enm = _1b9c91368_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr());;
	if ((!(_1b9c80ce7_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1ca57cd64:;
			{
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d79c7b_primBool, });;
			}
		}
		else {
			_case_begin_1ca57c1d7:;
			{
				_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1b9b6675a_Str(_350313_enm.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ca57c99b:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c81d4d_evalSptr(_1b9c80137_binaryEval* _self_) {
	if ((!(_1b9c80ce7_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1ca57dedb:;
			{
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d79c7b_primBool, });;
			}
		}
		else {
			_case_begin_1ca57ec67:;
			{
				_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1b9c8d596_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ca57ec12:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c820d4_evalPtr(_1b9c80137_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(53LLU) || _match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1ca582143:;
			{
				if ((!(_1b9c80ce7_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d79c7b_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1ca583364:;
			{
				if ((_1b9c90d4b_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) == nullptr)) {
					std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				};
				if (_1b9c9dad4_IsUnsafe(_1b9c90d4b_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()).ptr())) {
					_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1b9c8d596_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				};
				if ((!(_1b9c8822d_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is incompatible to use for pointer arithmetic", 52), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1ca5816b4:;
			{
				_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1b9c8d596_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ca58163c:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c8236a_evalArr(_1b9c80137_binaryEval* _self_) {
	if ((!(_1b9c80ce7_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1ca57b626:;
			{
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d79c7b_primBool, });;
			}
		}
		else {
			_case_begin_1ca58926b:;
			{
				_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1b9c8d596_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ca589216:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c82601_evalSlc(_1b9c80137_binaryEval* _self_) {
	if ((!(_1b9c80ce7_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1ca58a9a9:;
			{
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d79c7b_primBool, });;
			}
		}
		else {
			_case_begin_1ca58b735:;
			{
				_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1b9c8d596_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ca58b6d0:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c82887_evalStruct(_1b9c80137_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(70LLU)) {
			_case_begin_1ca58d814:;
			{
				if (((*(_1b9c91da2_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Gt == nullptr)) {
					_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1b9c8d596_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d79c7b_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1ca58d87a:;
			{
				if (((*(_1b9c91da2_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_GtEq == nullptr)) {
					_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1b9c8d596_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d79c7b_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(69LLU)) {
			_case_begin_1ca58d8e1:;
			{
				if (((*(_1b9c91da2_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Lt == nullptr)) {
					_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1b9c8d596_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d79c7b_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1ca58d968:;
			{
				if (((*(_1b9c91da2_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_LtEq == nullptr)) {
					_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1b9c8d596_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d79c7b_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1ca58d9e0:;
			{
				if ((!(_1b9c80ce7_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d79c7b_primBool, });;
			}
		}
		_match_end_1ca58d10a:;
	};
	if ((!(_1b9c8107d_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c82b1d_evalTrait(_1b9c80137_binaryEval* _self_) {
	if ((!(_1b9c80ce7_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1ca5984cd:;
			{
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d79c7b_primBool, });;
			}
		}
		else {
			_case_begin_1ca598d08:;
			{
				_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1b9c8d596_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ca598ca3:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c82da4_evalAny(_1b9c80137_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1ca59a898:;
			{
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d79c7b_primBool, });;
			}
		}
		else {
			_case_begin_1ca59a755:;
			{
				_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("any", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ca59a6cd:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c8313a_evalBool(_1b9c80137_binaryEval* _self_) {
	if ((!(_1b9c80ce7_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(54LLU) || _match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1ca59c12a:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1ca59cda6:;
			{
				_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1b9c8d596_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ca59cd51:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c833c1_evalStr(_1b9c80137_binaryEval* _self_) {
	jule::Str _370213_rk = _1b9c8d596_Str((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((!_370213_rk.equal("str", 3))) {
		_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_370213_rk, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1ca5a199d:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1ca5a277e:;
			{
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d79c7b_primBool, });;
			}
		}
		else {
			_case_begin_1ca5a13d7:;
			{
				_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("str", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ca5a15d5:;
	};
}



inline void _1b9c835be_setTypeToGreater(_1b9c80137_binaryEval* _self_) {
	jule::Ptr<_1b9c95ca7_Prim> _37279_lp = _1b9c9082e_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	jule::Ptr<_1b9c95ca7_Prim> _37289_rp = _1b9c9082e_Prim((*((*(_self_))._field_r))._field_Kind.ptr());;
	if (_1b9c5d8da_IsConst((*(_self_))._field_l.ptr())) {
		if ((!(_1b9c5d8da_IsConst((*(_self_))._field_r.ptr())))) {
			(*((*(_self_))._field_l))._field_Kind=(*((*(_self_))._field_r))._field_Kind;
			(*((*((*(_self_))._field_l))._field_Constant))._field_Kind=(*(_37289_rp))._field_Kind;
			return;;
		};
		goto _julec_label_1ca5a6bc3;
	};
	if (_1b9c5d8da_IsConst((*(_self_))._field_r.ptr())) {
		(*((*((*(_self_))._field_r))._field_Constant))._field_Kind=(*(_37279_lp))._field_Kind;
		return;;
	};
	_julec_label_1ca5a6bc3:;
	if (((*((*(_self_))._field_l))._field_untyped && (!((*((*(_self_))._field_r))._field_untyped)))) {
		(*((*(_self_))._field_l))._field_Kind=(*((*(_self_))._field_r))._field_Kind;
		if (_1b9c5d8da_IsConst((*(_self_))._field_l.ptr())) {
			(*((*((*(_self_))._field_l))._field_Constant))._field_Kind=(*(_37289_rp))._field_Kind;
		};
		(*((*(_self_))._field_l))._field_untyped=false;
		return;;
	} else if (((!((*((*(_self_))._field_l))._field_untyped)) && (*((*(_self_))._field_r))._field_untyped)) {
		return;;
	};
	if (_1ec6809b1_IsGreater((*(_37289_rp))._field_Kind, (*(_37279_lp))._field_Kind)) {
		(*((*(_self_))._field_l))._field_Kind=(*((*(_self_))._field_r))._field_Kind;
		if (_1b9c5d8da_IsConst((*(_self_))._field_l.ptr())) {
			(*((*((*(_self_))._field_l))._field_Constant))._field_Kind=(*(_37289_rp))._field_Kind;
		};
	};
}



inline void _1b9c83877_checkModData(_1b9c80137_binaryEval* _self_, jule::Ptr<_1b9c5d016_Data>* _376036_d) {
	if ((!(_1b9c5d8da_IsConst((*(_376036_d)).ptr())))) {
		if (((_1b9c9082e_Prim((*((*(_376036_d))))._field_Kind.ptr()) == nullptr) || (!(_1ec6820de_IsInt((*(_1b9c9082e_Prim((*((*(_376036_d))))._field_Kind.ptr())))._field_Kind))))) {
			_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1b9c4410c_sigAssignable(jule::Str::lit("i64", 3), _376036_d)) {
			_case_begin_1ca5ae934:;
			{
				_1ec685c5d_SetI64((*((*(_376036_d))))._field_Constant.ptr(), static_cast<jule::I64>(_1ec685488_AsI64((*((*(_376036_d))))._field_Constant.ptr())));
			}
		}
		else if (_1b9c444c5_unsigAssignable(jule::Str::lit("u64", 3), _376036_d)) {
			_case_begin_1ca5ae9ab:;
			{
				_1ec686016_SetU64((*((*(_376036_d))))._field_Constant.ptr(), static_cast<jule::U64>(_1ec68571e_AsU64((*((*(_376036_d))))._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_1ca5ae5b0:;
			{
				_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ca5ae55a:;
	};
}



inline void _1b9c83a75_mod(_1b9c80137_binaryEval* _self_) {
	_1b9c83877_checkModData(_self_, &((*(_self_))._field_l));
	_1b9c83877_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1b9c83e71_numbersAreCompatibile(_1b9c80137_binaryEval* _self_, jule::Str* _378237_lk, jule::Str* _378247_rk) {
	if ((!(_1ec6826e9_IsNum((*(_378247_rk)))))) {
		return false;;
	};
	if ((_1b9c5d8da_IsConst((*(_self_))._field_l.ptr()) && (*((*(_self_))._field_l))._field_untyped)) {
		return true;;
	};
	if ((*(_378237_lk)).equal("f32", 3)) {
		if ((_1b9c5d8da_IsConst((*(_self_))._field_r.ptr()) && (*((*(_self_))._field_r))._field_untyped)) {
			return true;;
		};
		return (*(_378247_rk)).equal("f32", 3);;
	};
	if ((*(_378237_lk)).equal("f64", 3)) {
		if ((_1b9c5d8da_IsConst((*(_self_))._field_r.ptr()) && (*((*(_self_))._field_r))._field_untyped)) {
			return true;;
		};
		return (*(_378247_rk)).equal("f64", 3);;
	};
	if ((_1b9c5d8da_IsConst((*(_self_))._field_r.ptr()) && (*((*(_self_))._field_r))._field_untyped)) {
		return true;;
	};
	return ((*(_378237_lk)) == (*(_378247_rk)));;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c84207_evalFloat(_1b9c80137_binaryEval* _self_) {
	jule::Str _38089_lk = (*(_1b9c9082e_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _38099_rk = (*(_1b9c9082e_Prim((*((*(_self_))._field_r))._field_Kind.ptr())))._field_Kind;;
	if ((!(_1b9c83e71_numbersAreCompatibile(_self_, &(_38089_lk), &(_38099_rk))))) {
		_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38089_lk, &__jule_any_type4),jule::Any(_38099_rk, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1ca5b8ca1:;
			{
				if (((!(_1b9c5d8da_IsConst((*(_self_))._field_l.ptr()))) || (!(_1b9c44849_intAssignable(jule::Str::lit("i64", 3), &((*(_self_))._field_l)))))) {
					_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38089_lk, &__jule_any_type4),jule::Any(_38099_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((!(_1b9c5d8da_IsConst((*(_self_))._field_r.ptr()))) || (!(_1b9c44849_intAssignable(jule::Str::lit("u64", 3), &((*(_self_))._field_r)))))) {
					_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38089_lk, &__jule_any_type4),jule::Any(_38099_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_1ec685c5d_SetI64((*((*(_self_))._field_l))._field_Constant.ptr(), static_cast<jule::I64>(_1ec685488_AsI64((*((*(_self_))._field_l))._field_Constant.ptr())));
				_1ec686016_SetU64((*((*(_self_))._field_r))._field_Constant.ptr(), static_cast<jule::U64>(_1ec68571e_AsU64((*((*(_self_))._field_r))._field_Constant.ptr())));
				if ((!(_1b9c879d0_isOkForShifting(&((*(_self_))._field_r))))) {
					_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1ca5b8c4b:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1ca5b9345:;
			{
				_1b9c835be_setTypeToGreater(_self_);
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d79c7b_primBool, });;
			}
		}
		_match_end_1ca5babc6:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1ca5b7ee2:;
			{
				_1b9c835be_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1ca5c16d2:;
			{
				if ((!(_1ec6820de_IsInt(_38099_rk)))) {
					_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38089_lk, &__jule_any_type4),jule::Any(_38099_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_1b9c83a75_mod(_self_);
				_1b9c835be_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1ca5c002c:;
			{
				_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for floating-point type(s)", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ca5c0a22:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c8448d_evalInt(_1b9c80137_binaryEval* _self_) {
	jule::Str _38729_lk = (*(_1b9c9082e_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _38739_rk = (*(_1b9c9082e_Prim((*((*(_self_))._field_r))._field_Kind.ptr())))._field_Kind;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1ca5c4b36:;
			{
				if (((!(_1ec6820de_IsInt(_38729_lk))) || (!(_1ec6820de_IsInt(_38739_rk))))) {
					_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38729_lk, &__jule_any_type4),jule::Any(_38739_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if ((!(_1b9c879d0_isOkForShifting(&((*(_self_))._field_r))))) {
					_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1ca5c4eaa:;
	};
	if ((!(_1b9c83e71_numbersAreCompatibile(_self_, &(_38729_lk), &(_38739_rk))))) {
		_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38729_lk, &__jule_any_type4),jule::Any(_38739_rk, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1ca5c8255:;
			{
				return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d79c7b_primBool, });;
			}
		}
		_match_end_1ca5c8200:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(65LLU) || _match_expr == static_cast<jule::U32>(66LLU) || _match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1ca5c50ed:;
			{
				_1b9c835be_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1ca5ca3cd:;
			{
				_1b9c83a75_mod(_self_);
				_1b9c835be_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1ca5c9454:;
			{
				_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for integer type(s)", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ca5c93ee:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c84724_evalPrim(_1b9c80137_binaryEval* _self_) {
	jule::Ptr<_1b9c95ca7_Prim> _39299_prim = _1b9c9082e_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		
		if (_1b9c98ea8_IsBool(_39299_prim.ptr())) {
			_case_begin_1ca5cc6bb:;
			{
				return _1b9c8313a_evalBool(_self_);;
			}
		}
		else if (_1b9c9923e_IsStr(_39299_prim.ptr())) {
			_case_begin_1ca5cc743:;
			{
				return _1b9c833c1_evalStr(_self_);;
			}
		}
		_match_end_1ca5cc622:;
	};
	if ((_1b9c9082e_Prim((*((*(_self_))._field_r))._field_Kind.ptr()) == nullptr)) {
		_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1b9c960e8_Str(_39299_prim.ptr()), &__jule_any_type4),jule::Any(_1b9c8d596_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if (_1ec682430_IsFloat((*(_39299_prim))._field_Kind)) {
			_case_begin_1ca5d00c5:;
			{
				return _1b9c84207_evalFloat(_self_);;
			}
		}
		else if (_1ec6820de_IsInt((*(_39299_prim))._field_Kind)) {
			_case_begin_1ca5d014c:;
			{
				return _1b9c8448d_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1ca5d002b:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca5cc7ed:;
	};
}



inline void _1b9c84922_checkSpecialCases(_1b9c80137_binaryEval* _self_) {
	if (((!(_1b9c8e7c8_Comparable((*((*(_self_))._field_l))._field_Kind.ptr()))) && (!(_1b9c8e2ab_IsNil((*((*(_self_))._field_r))._field_Kind.ptr()))))) {
		_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
	} else if (((!(_1b9c8e7c8_Comparable((*((*(_self_))._field_r))._field_Kind.ptr()))) && (!(_1b9c8e2ab_IsNil((*((*(_self_))._field_l))._field_Kind.ptr()))))) {
		_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c84ba8_evalOp(_1b9c80137_binaryEval* _self_) {
	_1b9c84922_checkSpecialCases(_self_);
	{
		
		if (_1b9c8e542_Void((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_1ca5d5581:;
			{
				_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("void", 4), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if ((_1b9c941e5_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca5d4e54:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ca5d5729;
			}
		}
		else if ((_1b9c941e5_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca5d5729:;
			{
				return _1b9c81314_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_1b9c9082e_Prim((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr) && _1b9c994c5_IsAny(_1b9c9082e_Prim((*((*(_self_))._field_r))._field_Kind.ptr()).ptr()))) {
			_case_begin_1ca5d694a:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ca5d69b1;
			}
		}
		else if (_1b9c8e2ab_IsNil((*((*(_self_))._field_r))._field_Kind.ptr())) {
			_case_begin_1ca5d69b1:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ca5d6a9e;
			}
		}
		else if (_1b9c8e2ab_IsNil((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_1ca5d6a9e:;
			{
				return _1b9c8159a_evalNil(_self_);;
			}
		}
		else if (((_1b9c9082e_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr) && _1b9c994c5_IsAny(_1b9c9082e_Prim((*((*(_self_))._field_l))._field_Kind.ptr()).ptr()))) {
			_case_begin_1ca5d6b15:;
			{
				return _1b9c82da4_evalAny(_self_);;
			}
		}
		else if ((_1b9c91368_TypeEnum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca5d6b7b:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ca5d6be2;
			}
		}
		else if ((_1b9c91368_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca5d6be2:;
			{
				return _1b9c81ab7_evalTypeEnum(_self_);;
			}
		}
		else if ((_1b9c910d2_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca5d6c58:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ca5d6cbe;
			}
		}
		else if ((_1b9c910d2_Enum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca5d6cbe:;
			{
				return _1b9c81831_evalEnum(_self_);;
			}
		}
		else if ((_1b9c90ab5_Sptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca5d6d46:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ca5d6dbd;
			}
		}
		else if ((_1b9c90ab5_Sptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca5d6dbd:;
			{
				return _1b9c81d4d_evalSptr(_self_);;
			}
		}
		else if ((_1b9c90d4b_Ptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca5d6e45:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ca5d6ebc;
			}
		}
		else if ((_1b9c90d4b_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca5d6ebc:;
			{
				return _1b9c820d4_evalPtr(_self_);;
			}
		}
		else if ((_1b9c915ee_Arr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca5d7044:;
			{
				return _1b9c8236a_evalArr(_self_);;
			}
		}
		else if ((_1b9c91885_Slc((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca5d70bb:;
			{
				return _1b9c82601_evalSlc(_self_);;
			}
		}
		else if ((_1b9c92138_Trait((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca5d7143:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ca5d71ba;
			}
		}
		else if ((_1b9c92138_Trait((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca5d71ba:;
			{
				return _1b9c82b1d_evalTrait(_self_);;
			}
		}
		else if ((_1b9c91da2_Struct((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca5d7242:;
			{
				return _1b9c82887_evalStruct(_self_);;
			}
		}
		else if ((_1b9c9082e_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca5d72b9:;
			{
				return _1b9c84724_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1ca5d5383:;
			{
				_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1b9c8d596_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ca5d531c:;
	};
}



inline void _1b9c84e61_evalConst(_1b9c80137_binaryEval* _self_, jule::Ptr<_1b9c5d016_Data>* _402033_d) {
	{
		
		if (((*(_402033_d)) == nullptr) || ((*((*(_self_))._field_l))._field_Model == nullptr) || ((*((*(_self_))._field_r))._field_Model == nullptr)) {
			_case_begin_1ca5ea002:;
			{
				return;;
			}
		}
		else if ((!(_1b9c5d8da_IsConst((*(_self_))._field_l.ptr()))) || (!(_1b9c5d8da_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1ca5ea255:;
			{
				(*((*(_402033_d))))._field_Constant=nullptr;
				return;;
			}
		}
		_match_end_1ca5e9e25:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1ca5ec3de:;
			{
				(*((*(_402033_d))))._field_Constant=static__1ec6837b6_NewBool(_1ec688898_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1ca5ec455:;
			{
				(*((*(_402033_d))))._field_Constant=static__1ec6837b6_NewBool((!(_1ec688898_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1ca5ec4bb:;
			{
				(*((*(_402033_d))))._field_Constant=static__1ec6837b6_NewBool(_1ec688557_Or((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1ca5ec532:;
			{
				(*((*(_402033_d))))._field_Constant=static__1ec6837b6_NewBool(_1ec688216_And((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(70LLU)) {
			_case_begin_1ca5ec598:;
			{
				(*((*(_402033_d))))._field_Constant=static__1ec6837b6_NewBool(_1ec68936b_Gt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(69LLU)) {
			_case_begin_1ca5ec60e:;
			{
				(*((*(_402033_d))))._field_Constant=static__1ec6837b6_NewBool(_1ec688bd9_Lt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1ca5ec686:;
			{
				(*((*(_402033_d))))._field_Constant=static__1ec6837b6_NewBool(_1ec6896ac_GtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1ca5ec70d:;
			{
				(*((*(_402033_d))))._field_Constant=static__1ec6837b6_NewBool(_1ec68902a_LtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1ca5ec785:;
			{
				_1ec6899ed_Add((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1ca5ec80c:;
			{
				_1ec689d3e_Sub((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1ca5ec884:;
			{
				_1ec68a180_Mul((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1ca5ec90b:;
			{
				jule::Bool _405913_ok = _1ec68a4c1_Div((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_405913_ok)) && (_1ec6859a5_AsF64((*((*(_self_))._field_r))._field_Constant.ptr()) == 0LL))) {
					_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
				jule::Ptr<_1b9c95ca7_Prim> _406417_prim = _1b9c9082e_Prim((*((*(_402033_d))))._field_Kind.ptr());;
				{
					
					if (_1ec681a17_IsSigInt((*(_406417_prim))._field_Kind)) {
						_case_begin_1ca60d0c0:;
						{
							_1ec685c5d_SetI64((*((*(_402033_d))))._field_Constant.ptr(), static_cast<jule::I64>(_1ec685488_AsI64((*((*(_402033_d))))._field_Constant.ptr())));
						}
					}
					else if (_1ec681d25_IsUnsigInt((*(_406417_prim))._field_Kind)) {
						_case_begin_1ca60d147:;
						{
							_1ec686016_SetU64((*((*(_402033_d))))._field_Constant.ptr(), static_cast<jule::U64>(_1ec68571e_AsU64((*((*(_402033_d))))._field_Constant.ptr())));
						}
					}
					_match_end_1ca60d026:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1ca5ec983:;
			{
				jule::Bool _407213_ok = _1ec68a812_Mod((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_407213_ok)) && (_1ec6859a5_AsF64((*((*(_self_))._field_r))._field_Constant.ptr()) == 0LL))) {
					_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU)) {
			_case_begin_1ca5eca0a:;
			{
				_1ec68ae94_BitwiseOr((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1ca5eca82:;
			{
				_1ec68ab53_BitwiseAnd((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1ca5ecb09:;
			{
				_1ec68b2d5_Xor((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1ca5ecb81:;
			{
				_1ec68b626_Lshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1ca5ecc08:;
			{
				_1ec68b967_Rshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		_match_end_1ca5ebba2:;
	};
	(*((*(_402033_d))))._field_Model=jule::Any((*((*(_402033_d))))._field_Constant, &__jule_any_type19);
	_1b9c890b9_applyCastModelByEnum(_402033_d, _1b9c910d2_Enum((*((*(_402033_d))))._field_Kind.ptr()));
}



inline void _1b9c85219_checkData(_1b9c80137_binaryEval* _self_, jule::Ptr<_1b9c5d016_Data>* _409733_d) {
	jule::Ptr<_1b9b5216e_FnIns> _40989_f = _1b9c91b1b_Fn((*((*(_409733_d))))._field_Kind.ptr());;
	if ((((_40989_f != nullptr) && ((*(_40989_f))._field_Decl != nullptr)) && _1b9b4e974_IsMethod((*(_40989_f))._field_Decl.ptr()))) {
		_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("invalid expression used for binary operation", 44), jule::Slice<jule::Any>());
	};
}



inline void _1b9c85417_checkDatas(_1b9c80137_binaryEval* _self_) {
	_1b9c85219_checkData(_self_, &((*(_self_))._field_l));
	_1b9c85219_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1b9c856c0_setModel(_1b9c80137_binaryEval* _self_, jule::Ptr<_1b9c5d016_Data>* _410932_d) {
	if (_1b9c5d8da_IsConst((*(_410932_d)).ptr())) {
		if (((_1b9c5d8da_IsConst((*(_self_))._field_l.ptr()) && _1b9c5d8da_IsConst((*(_self_))._field_r.ptr())) || (((*((*(_self_))._field_l))._field_Model == nullptr) && ((*((*(_self_))._field_r))._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_1b9c5d016_Data> _411813_l;;
	jule::Ptr<_1b9c5d016_Data> _411820_r;;
	({
		jule::Ptr<_1b9c5d016_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1b9c5d016_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_411813_l = ___jule_assign_arg;
		_411820_r = _1___jule_assign_arg;
	});
	if ((!(_1b9c5dc2b_GoodOperand(_411813_l.ptr(), &(_411820_r))))) {
		std::swap(_411813_l, _411820_r);
	};
	(*((*(_410932_d))))._field_Model=jule::Any(jule::new_ptr<_1b9b41526_BinopExprModel>(_1b9b41526_BinopExprModel{._field_Left=jule::new_ptr<_1b9b4102b_OperandExprModel>(_1b9b4102b_OperandExprModel{._field_Kind=(*(_411813_l))._field_Kind, ._field_Model=(*(_411813_l))._field_Model}), ._field_Right=jule::new_ptr<_1b9b4102b_OperandExprModel>(_1b9b4102b_OperandExprModel{._field_Kind=(*(_411820_r))._field_Kind, ._field_Model=(*(_411820_r))._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type111);
}



inline void _1b9c85978_postEval(_1b9c80137_binaryEval* _self_, jule::Ptr<_1b9c5d016_Data>* _413632_d) {
	(*((*(_413632_d))))._field_Lvalue=false;
	_1b9c856c0_setModel(_self_, _413632_d);
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c85d74_solveExplicit(_1b9c80137_binaryEval* _self_, jule::Ptr<_1b9c5d016_Data>* _414137_l, jule::Ptr<_1b9c5d016_Data>* _414152_r) {
	({
		jule::Ptr<_1b9c5d016_Data> ___jule_assign_arg = (*(_414137_l));
		jule::Ptr<_1b9c5d016_Data> _1___jule_assign_arg = (*(_414152_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1b9c85417_checkDatas(_self_);
	jule::Ptr<_1b9c5d016_Data> _414613_d = _1b9c84ba8_evalOp(_self_);;
	({
		jule::Ptr<_1b9c5d016_Data> ___jule_assign_arg = (*(_414137_l));
		jule::Ptr<_1b9c5d016_Data> _1___jule_assign_arg = (*(_414152_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1b9c84e61_evalConst(_self_, &(_414613_d));
	if ((_414613_d != nullptr)) {
		(*(_414613_d))._field_Mutable=true;
		_1b9c85978_postEval(_self_, &(_414613_d));
	};
	return _414613_d;;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c861b5_eval(_1b9c80137_binaryEval* _self_, jule::Ptr<_1b9b211b5_BinopExpr>* _416128_op) {
	if (((*((*((*(_416128_op))))._field_Op))._field_Id == static_cast<jule::U32>(71LLU))) {
		_1b9c6025a_pushErr((*(_self_))._field_e.ptr(), (*((*(_416128_op))))._field_Op, jule::Str::lit("assignments not available for expressions", 41), jule::Slice<jule::Any>());
		_1b9c605bd_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str::lit("use clear imperative approach, comes relevant assignment statement before the expression", 88), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b9c5d016_Data> _416813_l = _1b9c7c893_evalExpr1((*(_self_))._field_e, (*((*(_416128_op))))._field_Left);;
	if (((_416813_l == nullptr) || ((*(_416813_l))._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1b9c8d1cd_TypeKind> _417313_prefix = (*((*(_self_))._field_e))._field_prefix;;
	(*((*(_self_))._field_e))._field_prefix=(*(_416813_l))._field_Kind;
	__JULE_DEFER({
		(*((*(_self_))._field_e))._field_prefix=_417313_prefix;
	});;
	jule::Ptr<_1b9c5d016_Data> _417613_r = _1b9c7c893_evalExpr1((*(_self_))._field_e, (*((*(_416128_op))))._field_Right);;
	if (((_417613_r == nullptr) || ((*(_417613_r))._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*((*(_416128_op))))._field_Op;
	jule::Ptr<_1b9c5d016_Data> _418313_d = _1b9c85d74_solveExplicit(_self_, &(_416813_l), &(_417613_r));;
	if ((((_418313_d != nullptr) && (*(_416813_l))._field_IsRune) && (*(_417613_r))._field_IsRune)) {
		(*(_418313_d))._field_IsRune=true;
	};
	return _418313_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9c80137_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9c8b7e7_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9c8c3db_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b9c8d596_Str(_1b9c8d1cd_TypeKind* _self_) {
	if (_1b9c8e2ab_IsNil(_self_)) {
		return jule::Str::lit("nil", 3);;
	};
	_23d16295d_StrBuilder _7413_kind = static__23d162c7c_New(16LL);;
	if ((*(_self_))._field_Variadic) {
		_23d16b604_WriteStr(&_7413_kind, jule::Str::lit("...", 3));
	};
	if (_1b9c8e025_Binded(_self_)) {
		_23d16b604_WriteStr(&_7413_kind, jule::Str::lit("cpp.", 4));
		_23d16b604_WriteStr(&_7413_kind, (*(_self_))._field_BindIdent);
	} else {
		_23d16b604_WriteStr(&_7413_kind, _1b9c8cc27_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._1b9c8c782_Str((*(_self_))._field_Kind));
	};
	return _23d16bdeb_Str(&_7413_kind);;
}



inline jule::Bool _1b9c8d8d7_Equal(jule::Ptr<_1b9c8d1cd_TypeKind> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _9021_other) {
	if (_1b9c8e2ab_IsNil(_self_.ptr())) {
		return _1b9c8e2ab_IsNil(_9021_other.ptr());;
	};
	if (_1b9c8e025_Binded(_self_.ptr())) {
		return (_1b9c8e025_Binded(_9021_other.ptr()) && ((*(_self_))._field_BindIdent == (*(_9021_other))._field_BindIdent));;
	};
	return _1b9c8cc27_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._1b9c8cac3_Equal((*(_self_))._field_Kind, _9021_other);;
}



inline jule::Bool _1b9c8e025_Binded(_1b9c8d1cd_TypeKind* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _1b9c8e2ab_IsNil(_1b9c8d1cd_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1b9c8e542_Void(_1b9c8d1cd_TypeKind* _self_) {
	jule::Ptr<_1b9c95ca7_Prim> _1109_prim = _1b9c9082e_Prim(&(*(_self_)));;
	return ((_1109_prim != nullptr) && (*(_1109_prim))._field_Kind.equal("void", 4));;
}



inline jule::Bool _1b9c8e7c8_Comparable(_1b9c8d1cd_TypeKind* _self_) {
	{
		_1b9c8d1cd_TypeKind* _11717__self = _self_;;
		if ((_1b9c91da2_Struct(_11717__self) != nullptr)) {
			return (*(_1b9c91da2_Struct(_11717__self)))._field_Comparable;;
		};
		return (((_1b9c923be_Map(_11717__self) == nullptr) && (_1b9c91885_Slc(_11717__self) == nullptr)) && (_1b9c91b1b_Fn(_11717__self) == nullptr));;
	};
}



inline jule::Bool _1b9c8ea5e_Mutable(_1b9c8d1cd_TypeKind* _self_) {
	{
		_1b9c8d1cd_TypeKind* _12817__self = _self_;;
		if ((_1b9c91da2_Struct(_12817__self) != nullptr)) {
			return (*(_1b9c91da2_Struct(_12817__self)))._field_Mutable;;
		};
		if ((_1b9c92138_Trait(_12817__self) != nullptr)) {
			return true;;
		};
		if ((_1b9c9082e_Prim(_12817__self) != nullptr)) {
			jule::Ptr<_1b9c95ca7_Prim> _13617_p = _1b9c9082e_Prim(_12817__self);;
			return _1b9c994c5_IsAny(_13617_p.ptr());;
		};
		if ((_1b9c915ee_Arr(_12817__self) != nullptr)) {
			return _1b9c8ea5e_Mutable((*(_1b9c915ee_Arr(_12817__self)))._field_Elem.ptr());;
		};
		return (((_1b9c91885_Slc(_12817__self) != nullptr) || (_1b9c90d4b_Ptr(_12817__self) != nullptr)) || (_1b9c90ab5_Sptr(_12817__self) != nullptr));;
	};
}



inline jule::Bool _1b9c8ece5_Ordered(_1b9c8d1cd_TypeKind* _self_) {
	{
		_1b9c8d1cd_TypeKind* _15117__self = _self_;;
		jule::Ptr<_1b9c95ca7_Prim> _15213_prim = _1b9c9082e_Prim(_15117__self);;
		if ((_15213_prim != nullptr)) {
			return (_1ec6826e9_IsNum((*(_15213_prim))._field_Kind) || _1b9c9923e_IsStr(_15213_prim.ptr()));;
		};
		if ((_1b9c90d4b_Ptr(_15117__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_1b9b3c137_StructIns> _15913_s = _1b9c91da2_Struct(_15117__self);;
		if ((_15913_s != nullptr)) {
			return (((((*(_15913_s))._field_Operators._field_Gt != nullptr) && ((*(_15913_s))._field_Operators._field_GtEq != nullptr)) && ((*(_15913_s))._field_Operators._field_Lt != nullptr)) && ((*(_15913_s))._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_1b9b64c0e_Enum> _16613_enm = _1b9c910d2_Enum(_15117__self);;
		if ((_16613_enm != nullptr)) {
			return _1ec6826e9_IsNum(_1b9c8d596_Str((*((*(_16613_enm))._field_Kind))._field_Kind.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _1b9c9007b_NilCompatible(_1b9c8d1cd_TypeKind* _self_) {
	{
		_1b9c8d1cd_TypeKind* _17717__self = _self_;;
		jule::Ptr<_1b9c95ca7_Prim> _17913_prim = _1b9c9082e_Prim(_17717__self);;
		if (((_17913_prim != nullptr) && _1b9c994c5_IsAny(_17913_prim.ptr()))) {
			return true;;
		};
		return (((((((_1b9c8e2ab_IsNil(_17717__self) || (_1b9c91b1b_Fn(_17717__self) != nullptr)) || (_1b9c90ab5_Sptr(_17717__self) != nullptr)) || (_1b9c90d4b_Ptr(_17717__self) != nullptr)) || (_1b9c92138_Trait(_17717__self) != nullptr)) || (_1b9c91885_Slc(_17717__self) != nullptr)) || (_1b9c923be_Map(_17717__self) != nullptr)) || (_1b9c91368_TypeEnum(_17717__self) != nullptr));;
	};
}



inline jule::Bool _1b9c90312_PerformsRC(_1b9c8d1cd_TypeKind* _self_) {
	{
		_1b9c8d1cd_TypeKind* _19817__self = _self_;;
		jule::Ptr<_1b9c95ca7_Prim> _19913_prim = _1b9c9082e_Prim(_19817__self);;
		if ((_19913_prim != nullptr)) {
			return (_1b9c994c5_IsAny(_19913_prim.ptr()) || _1b9c9923e_IsStr(_19913_prim.ptr()));;
		};
		return (((_1b9c90ab5_Sptr(_19817__self) != nullptr) || (_1b9c91885_Slc(_19817__self) != nullptr)) || (_1b9c92138_Trait(_19817__self) != nullptr));;
	};
}



inline jule::Bool _1b9c90598_Variadicable(_1b9c8d1cd_TypeKind* _self_) {
	{
		_1b9c8d1cd_TypeKind* _21017__self = _self_;;
		return (_1b9c91885_Slc(_21017__self) != nullptr);;
	};
}



inline jule::Ptr<_1b9c95ca7_Prim> _1b9c9082e_Prim(_1b9c8d1cd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 20)) {
			_case_begin_1ca658769:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b9c95ca7_Prim>(20);;
			}
		}
		else {
			_case_begin_1ca658aaa:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca658a55:;
	};
}



inline jule::Ptr<_1b9c997d3_Sptr> _1b9c90ab5_Sptr(_1b9c8d1cd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 21)) {
			_case_begin_1ca6591e8:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b9c997d3_Sptr>(21);;
			}
		}
		else {
			_case_begin_1ca659968:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca659913:;
	};
}



inline jule::Ptr<_1b9c9d09a_Ptr> _1b9c90d4b_Ptr(_1b9c8d1cd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_1ca65a24e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b9c9d09a_Ptr>(26);;
			}
		}
		else {
			_case_begin_1ca65a64a:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca65a5e5:;
	};
}



inline jule::Ptr<_1b9b64c0e_Enum> _1b9c910d2_Enum(_1b9c8d1cd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1ca65ae31:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b9b64c0e_Enum>(3);;
			}
		}
		else {
			_case_begin_1ca65b32c:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca65b2c7:;
	};
}



inline jule::Ptr<_1b9b66419_TypeEnum> _1b9c91368_TypeEnum(_1b9c8d1cd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1ca65bb13:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b9b66419_TypeEnum>(4);;
			}
		}
		else {
			_case_begin_1ca65c00e:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca65bea9:;
	};
}



inline jule::Ptr<_1b9c9c5c7_Arr> _1b9c915ee_Arr(_1b9c8d1cd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 25)) {
			_case_begin_1ca65c7e5:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b9c9c5c7_Arr>(25);;
			}
		}
		else {
			_case_begin_1ca65cbe1:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca65cb8b:;
	};
}



inline jule::Ptr<_1b9c9a2a6_Slc> _1b9c91885_Slc(_1b9c8d1cd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 22)) {
			_case_begin_1ca65d4c7:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b9c9a2a6_Slc>(22);;
			}
		}
		else {
			_case_begin_1ca65d8c3:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca65d86d:;
	};
}



inline jule::Ptr<_1b9b5216e_FnIns> _1b9c91b1b_Fn(_1b9c8d1cd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_1ca65e1a9:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b9b5216e_FnIns>(1);;
			}
		}
		else {
			_case_begin_1ca65e5a5:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca65e550:;
	};
}



inline jule::Ptr<_1b9b3c137_StructIns> _1b9c91da2_Struct(_1b9c8d1cd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1ca65ed8b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b9b3c137_StructIns>(0);;
			}
		}
		else {
			_case_begin_1ca660287:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca660232:;
	};
}



inline jule::Ptr<_1b9b62514_Trait> _1b9c92138_Trait(_1b9c8d1cd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 2)) {
			_case_begin_1ca660a6d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b9b62514_Trait>(2);;
			}
		}
		else {
			_case_begin_1ca660e69:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca660e14:;
	};
}



inline jule::Ptr<_1b9c9b94a_Map> _1b9c923be_Map(_1b9c8d1cd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 24)) {
			_case_begin_1ca661750:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b9c9b94a_Map>(24);;
			}
		}
		else {
			_case_begin_1ca661b4b:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca661ae6:;
	};
}



inline jule::Ptr<_1b9c9ad9a_Tuple> _1b9c92655_Tup(_1b9c8d1cd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 23)) {
			_case_begin_1ca662432:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b9c9ad9a_Tuple>(23);;
			}
		}
		else {
			_case_begin_1ca66282d:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca6627c8:;
	};
}



inline jule::Bool _1b9c928db_comptime(_1b9c8d1cd_TypeKind* _self_) {
	return ((((((((((((((_1b9c93e5e_comptimeTypeInfos(_self_) != nullptr) || (_1b9c941e5_comptimeTypeInfo(_self_) != nullptr)) || (_1b9c92b72_comptimeStructFields(_self_) != nullptr)) || (_1b9c92e08_comptimeStructField(_self_) != nullptr)) || (_1b9c9318e_comptimeEnumFields(_self_) != nullptr)) || (_1b9c93425_comptimeEnumField(_self_) != nullptr)) || (_1b9c9447b_comptimeStatics(_self_) != nullptr)) || (_1b9c94712_comptimeStatic(_self_) != nullptr)) || (_1b9c936ab_comptimeParams(_self_) != nullptr)) || (_1b9c93942_comptimeParam(_self_) != nullptr)) || (_1b9c93bc8_comptimeRange(_self_) != nullptr)) || (_1b9c94998_comptimeValue(_self_) != nullptr)) || (_1b9c94eb5_comptimeFiles(_self_) != nullptr)) || (_1b9c94c2e_comptimeFile(_self_) != nullptr));;
}



inline jule::Ptr<_1b9b6aebd_comptimeStructFields> _1b9c92b72_comptimeStructFields(_1b9c8d1cd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 7)) {
			_case_begin_1ca66717e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b9b6aebd_comptimeStructFields>(7);;
			}
		}
		else {
			_case_begin_1ca667118:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca666986:;
	};
}



inline jule::Ptr<_1b9b6931d_comptimeStructField> _1b9c92e08_comptimeStructField(_1b9c8d1cd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 6)) {
			_case_begin_1ca667338:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b9b6931d_comptimeStructField>(6);;
			}
		}
		else {
			_case_begin_1ca667a20:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca6679ba:;
	};
}



inline jule::Ptr<_1b9b71b94_comptimeEnumFields> _1b9c9318e_comptimeEnumFields(_1b9c8d1cd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 11)) {
			_case_begin_1ca667aa8:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b9b71b94_comptimeEnumFields>(11);;
			}
		}
		else {
			_case_begin_1ca668702:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca66869c:;
	};
}



inline jule::Ptr<_1b9b70885_comptimeEnumField> _1b9c93425_comptimeEnumField(_1b9c8d1cd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 10)) {
			_case_begin_1ca66878a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b9b70885_comptimeEnumField>(10);;
			}
		}
		else {
			_case_begin_1ca6693d4:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca66937e:;
	};
}



inline jule::Ptr<_1b9b7558d_comptimeParams> _1b9c936ab_comptimeParams(_1b9c8d1cd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 13)) {
			_case_begin_1ca66946c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b9b7558d_comptimeParams>(13);;
			}
		}
		else {
			_case_begin_1ca66a0b6:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca66a061:;
	};
}



inline jule::Ptr<_1b9b73327_comptimeParam> _1b9c93942_comptimeParam(_1b9c8d1cd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 12)) {
			_case_begin_1ca66a89c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b9b73327_comptimeParam>(12);;
			}
		}
		else {
			_case_begin_1ca66ac98:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca66ac43:;
	};
}



inline jule::Ptr<_1b9b687b2_comptimeRange> _1b9c93bc8_comptimeRange(_1b9c8d1cd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 5)) {
			_case_begin_1ca66b57e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b9b687b2_comptimeRange>(5);;
			}
		}
		else {
			_case_begin_1ca66b97a:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca66b925:;
	};
}



inline jule::Ptr<_1b9b76b88_comptimeTypeInfos> _1b9c93e5e_comptimeTypeInfos(_1b9c8d1cd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 14)) {
			_case_begin_1ca66c261:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b9b76b88_comptimeTypeInfos>(14);;
			}
		}
		else {
			_case_begin_1ca66c65c:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca66c607:;
	};
}



inline jule::Ptr<_1b9b78283_comptimeTypeInfo> _1b9c941e5_comptimeTypeInfo(_1b9c8d1cd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 15)) {
			_case_begin_1ca66c6e5:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b9b78283_comptimeTypeInfo>(15);;
			}
		}
		else {
			_case_begin_1ca66d33e:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca66d2d9:;
	};
}



inline jule::Ptr<_1b9b6e28a_comptimeStatics> _1b9c9447b_comptimeStatics(_1b9c8d1cd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 9)) {
			_case_begin_1ca66d3c7:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b9b6e28a_comptimeStatics>(9);;
			}
		}
		else {
			_case_begin_1ca66e021:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca66debb:;
	};
}



inline jule::Ptr<_1b9b6c5c9_comptimeStatic> _1b9c94712_comptimeStatic(_1b9c8d1cd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 8)) {
			_case_begin_1ca66e0a9:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b9b6c5c9_comptimeStatic>(8);;
			}
		}
		else {
			_case_begin_1ca66ec03:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca66eb9d:;
	};
}



inline jule::Ptr<_1b9b7e795_comptimeValue> _1b9c94998_comptimeValue(_1b9c8d1cd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 16)) {
			_case_begin_1ca6704d9:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b9b7e795_comptimeValue>(16);;
			}
		}
		else {
			_case_begin_1ca6708d5:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca670880:;
	};
}



inline jule::Ptr<_1b9b836de_comptimeFile> _1b9c94c2e_comptimeFile(_1b9c8d1cd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 18)) {
			_case_begin_1ca6711cc:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b9b836de_comptimeFile>(18);;
			}
		}
		else {
			_case_begin_1ca6715d9:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca671584:;
	};
}



inline jule::Ptr<_1b9b820e4_comptimeFiles> _1b9c94eb5_comptimeFiles(_1b9c8d1cd_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 17)) {
			_case_begin_1ca671dd1:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b9b820e4_comptimeFiles>(17);;
			}
		}
		else {
			_case_begin_1ca6722dd:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca672288:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1b9c8d1cd_TypeKind _Src) {
	_Stream << _1b9c8d596_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1b9c95724_checked(_1b9c953a0_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9c953a0_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b9c960e8_Str(_1b9c95ca7_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1b9c96439_Equal(jule::Ptr<_1b9c95ca7_Prim> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _50721_other) {
	jule::Ptr<_1b9c95ca7_Prim> _5089_prim = _1b9c9082e_Prim(_50721_other.ptr());;
	if ((_5089_prim == nullptr)) {
		return false;;
	};
	return ((*(_self_))._field_Kind == (*(_5089_prim))._field_Kind);;
}



inline jule::Bool _1b9c968ce_IsConstraint(_1b9c95ca7_Prim* _self_) {
	return ((((!(_1b9c9923e_IsStr(_self_))) && (!(_1b9c994c5_IsAny(_self_)))) && (!(_1b9c98ea8_IsBool(_self_)))) && (!(_1ec6826e9_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1b9c96b65_IsI8(_1b9c95ca7_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i8", 2);;
}



inline jule::Bool _1b9c96deb_IsI16(_1b9c95ca7_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i16", 3);;
}



inline jule::Bool _1b9c97182_IsI32(_1b9c95ca7_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i32", 3);;
}



inline jule::Bool _1b9c97418_IsI64(_1b9c95ca7_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i64", 3);;
}



inline jule::Bool _1b9c9769e_IsU8(_1b9c95ca7_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u8", 2);;
}



inline jule::Bool _1b9c97935_IsU16(_1b9c95ca7_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u16", 3);;
}



inline jule::Bool _1b9c97bbb_IsU32(_1b9c95ca7_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u32", 3);;
}



inline jule::Bool _1b9c97e52_IsU64(_1b9c95ca7_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u64", 3);;
}



inline jule::Bool _1b9c981d8_IsF32(_1b9c95ca7_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f32", 3);;
}



inline jule::Bool _1b9c9846e_IsF64(_1b9c95ca7_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f64", 3);;
}



inline jule::Bool _1b9c98705_IsInt(_1b9c95ca7_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("int", 3);;
}



inline jule::Bool _1b9c9898b_IsUint(_1b9c95ca7_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uint", 4);;
}



inline jule::Bool _1b9c98c22_IsUintptr(_1b9c95ca7_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uintptr", 7);;
}



inline jule::Bool _1b9c98ea8_IsBool(_1b9c95ca7_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("bool", 4);;
}



inline jule::Bool _1b9c9923e_IsStr(_1b9c95ca7_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("str", 3);;
}



inline jule::Bool _1b9c994c5_IsAny(_1b9c95ca7_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("any", 3);;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9c95ca7_Prim _Src) {
	_Stream << _1b9c960e8_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b9c99b57_Str(_1b9c997d3_Sptr* _self_) {
	return (jule::Str::lit("&", 1) + _1b9c8d596_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1b9c99e98_Equal(jule::Ptr<_1b9c997d3_Sptr> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _58421_other) {
	jule::Ptr<_1b9c997d3_Sptr> _5859_sptr = _1b9c90ab5_Sptr(_58421_other.ptr());;
	if ((_5859_sptr == nullptr)) {
		return false;;
	};
	return _1b9c8d8d7_Equal((*(_self_))._field_Elem, (*(_5859_sptr))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9c997d3_Sptr _Src) {
	_Stream << _1b9c99b57_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b9c9a73a_Str(_1b9c9a2a6_Slc* _self_) {
	return (jule::Str::lit("[]", 2) + _1b9c8d596_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1b9c9aa7b_Equal(jule::Ptr<_1b9c9a2a6_Slc> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _60321_other) {
	jule::Ptr<_1b9c9a2a6_Slc> _6049_slc = _1b9c91885_Slc(_60321_other.ptr());;
	if ((_6049_slc == nullptr)) {
		return false;;
	};
	return _1b9c8d8d7_Equal((*(_self_))._field_Elem, (*(_6049_slc))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9c9a2a6_Slc _Src) {
	_Stream << _1b9c9a73a_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b9c9b21e_Str(_1b9c9ad9a_Tuple* _self_) {
	_23d16295d_StrBuilder _62013_s = static__23d162c7c_New(16LL);;
	_23d16b8ac_WriteByte(&_62013_s, '(');
	_23d16b604_WriteStr(&_62013_s, _1b9c8d596_Str((*(_self_))._field_Types[0LL].ptr()));
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ca6823a8:;
		if (it != expr_end) {
			jule::Ptr<_1b9c8d1cd_TypeKind> *_62316_t = it;
			{
				_23d16b8ac_WriteByte(&_62013_s, ',');
				_23d16b604_WriteStr(&_62013_s, _1b9c8d596_Str((*(_62316_t)).ptr()));
			}
			_iter_next_1ca6823a8:;
			++it;
			goto _iter_begin_1ca6823a8;
		}
		_iter_end_1ca6823a8:;
	};
	_23d16b8ac_WriteByte(&_62013_s, ')');
	return _23d16bdeb_Str(&_62013_s);;
}



inline jule::Bool _1b9c9b560_Equal(jule::Ptr<_1b9c9ad9a_Tuple> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _63221_other) {
	jule::Ptr<_1b9c9ad9a_Tuple> _6339_tup = _1b9c92655_Tup(_63221_other.ptr());;
	if ((_6339_tup == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Types.len() != (*(_6339_tup))._field_Types.len())) {
		return false;;
	};
	jule::I32 _64013_i = 0LL;;
	for (; (_64013_i < (*(_self_))._field_Types.len()); (_64013_i)++) {
		{
			if ((!(_1b9c8d8d7_Equal((*(_self_))._field_Types[_64013_i], (*(_6339_tup))._field_Types[_64013_i])))) {
				return false;;
			};
		}
	_iter_next_1ca68508c:;
	}
	_iter_end_1ca68508c:;;
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9c9ad9a_Tuple _Src) {
	_Stream << _1b9c9b21e_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b9c9bcbe_Str(_1b9c9b94a_Map* _self_) {
	_23d16295d_StrBuilder _66013_s = static__23d162c7c_New(16LL);;
	_23d16b604_WriteStr(&_66013_s, jule::Str::lit("map[", 4));
	_23d16b604_WriteStr(&_66013_s, _1b9c8d596_Str((*(_self_))._field_Key.ptr()));
	_23d16b8ac_WriteByte(&_66013_s, ']');
	_23d16b604_WriteStr(&_66013_s, _1b9c8d596_Str((*(_self_))._field_Val.ptr()));
	return _23d16bdeb_Str(&_66013_s);;
}



inline jule::Bool _1b9c9c110_Equal(jule::Ptr<_1b9c9b94a_Map> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _66921_other) {
	jule::Ptr<_1b9c9b94a_Map> _6709_m = _1b9c923be_Map(_66921_other.ptr());;
	if ((_6709_m == nullptr)) {
		return false;;
	};
	return (_1b9c8d8d7_Equal((*(_self_))._field_Key, (*(_6709_m))._field_Key) && _1b9c8d8d7_Equal((*(_self_))._field_Val, (*(_6709_m))._field_Val));;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9c9b94a_Map _Src) {
	_Stream << _1b9c9bcbe_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b9c9c94b_Str(_1b9c9c5c7_Arr* _self_) {
	_23d16295d_StrBuilder _68813_s = static__23d162c7c_New(16LL);;
	_23d16b8ac_WriteByte(&_68813_s, '[');
	_23d16b604_WriteStr(&_68813_s, _1ec6727b6_Itoa((*(_self_))._field_N));
	_23d16b8ac_WriteByte(&_68813_s, ']');
	_23d16b604_WriteStr(&_68813_s, _1b9c8d596_Str((*(_self_))._field_Elem.ptr()));
	return _23d16bdeb_Str(&_68813_s);;
}



inline jule::Bool _1b9c9cc8c_Equal(jule::Ptr<_1b9c9c5c7_Arr> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _69721_other) {
	jule::Ptr<_1b9c9c5c7_Arr> _6989_arr = _1b9c915ee_Arr(_69721_other.ptr());;
	if ((_6989_arr == nullptr)) {
		return false;;
	};
	return (((*(_self_))._field_N == (*(_6989_arr))._field_N) && _1b9c8d8d7_Equal((*(_self_))._field_Elem, (*(_6989_arr))._field_Elem));;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9c9c5c7_Arr _Src) {
	_Stream << _1b9c9c94b_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b9c9d41e_Str(_1b9c9d09a_Ptr* _self_) {
	if (_1b9c9dad4_IsUnsafe(_self_)) {
		return jule::Str::lit("*unsafe", 7);;
	};
	return (jule::Str::lit("*", 1) + _1b9c8d596_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1b9c9d760_Equal(jule::Ptr<_1b9c9d09a_Ptr> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _72121_other) {
	jule::Ptr<_1b9c9d09a_Ptr> _7229_ptr = _1b9c90d4b_Ptr(_72121_other.ptr());;
	if ((_7229_ptr == nullptr)) {
		return false;;
	};
	return _1b9c8d8d7_Equal((*(_self_))._field_Elem, (*(_7229_ptr))._field_Elem);;
}



inline jule::Bool _1b9c9dad4_IsUnsafe(_1b9c9d09a_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9c9d09a_Ptr _Src) {
	_Stream << _1b9c9d41e_Str(&_Src);
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9c9e09b_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1b9ca07c8_pushErr(_1b9ca008b_typeChecker* _self_, jule::Ptr<_1b9b032eb_Token> _80726_token, jule::Str _80741_fmt, jule::Slice<jule::Any> _80754_args) {
	_1b9bd5004_pushErr((*(_self_))._field_s.ptr(), _80726_token, _80741_fmt, _80754_args);
}



inline void _1b9ca09c6_allowBuiltin(_1b9ca008b_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1b9ca0bc4_disallowBuiltin(_1b9ca008b_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1ca69409b_pushReference(_1b9ca008b_typeChecker* _self_, jule::Ptr<_1b9b3c137_StructIns>* _81940_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1ca383483_Exist((*(_self_))._field_refers.ptr(), (*(_81940_t)))) {
		return;;
	};
	_1b9b5610c_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_81940_t)), &__jule_any_type9));
}

inline void _1ca696de5_pushReference(_1b9ca008b_typeChecker* _self_, jule::Ptr<_1b9b62514_Trait>* _81940_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1ca698b3e_Exist((*(_self_))._field_refers.ptr(), (*(_81940_t)))) {
		return;;
	};
	_1b9b5610c_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_81940_t)), &__jule_any_type10));
}



inline void _1b9ca1235_pushReferenceByKind(_1b9ca008b_typeChecker* _self_, jule::Ptr<_1b9c8d1cd_TypeKind>* _82943_k) {
	{
		
		if ((_1b9c91da2_Struct((*(_82943_k)).ptr()) != nullptr)) {
			_case_begin_1ca692d14:;
			{
				jule::Ptr<_1b9b3c137_StructIns> _83217_t = _1b9c91da2_Struct((*(_82943_k)).ptr());;
				_1ca69409b_pushReference(_self_, &(_83217_t));
			}
		}
		else if ((_1b9c92138_Trait((*(_82943_k)).ptr()) != nullptr)) {
			_case_begin_1ca692d8b:;
			{
				jule::Ptr<_1b9b62514_Trait> _83517_t = _1b9c92138_Trait((*(_82943_k)).ptr());;
				_1ca696de5_pushReference(_self_, &(_83517_t));
			}
		}
		_match_end_1ca692c04:;
	};
}



inline void _1b9ca1653_pushCycleError(_1b9ca008b_typeChecker* _self_, jule::Any _84029_def1, jule::Any _84040_def2, _23d16295d_StrBuilder* _84056_message) {
	;
	jule::Fn<jule::Str(jule::Any*)> _8429_getIdent = jule::Fn<jule::Str(jule::Any*)>([=](jule::Any* _84225_def) mutable -> jule::Str {
		{
			auto &_match_expr{ (*(_84225_def)) };
			
			if (_match_expr.type == &__jule_any_type66) {
				_case_begin_1ca69b4b0:;
				{
					return (*((*(_84225_def)).cast_ptr<_1b9c8c3db_TypeAlias>(&__jule_any_type66)))._field_Ident;;
				}
			}
			else if (_match_expr.type == &__jule_any_type65) {
				_case_begin_1ca69ba65:;
				{
					return (*((*(_84225_def)).cast_ptr<_1b9b393a9_Struct>(&__jule_any_type65)))._field_Ident;;
				}
			}
			else {
				_case_begin_1ca69b658:;
				{
					return jule::Str();;
				}
			}
			_match_end_1ca69b603:;
		};
	});;
	jule::Slice<jule::U8> _8529_buf = _23d16c89c_Buf(_84056_message);;
	jule::Str _8539_def1Ident = _8429_getIdent(&(_84029_def1));;
	jule::Str _8549_def2Ident = _8429_getIdent(&(_84040_def2));;
	jule::Str _8559_refersTo = _23d2115bc_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_8539_def1Ident, &__jule_any_type4),jule::Any(_8549_def2Ident, &__jule_any_type4)}));;
	_23d16b604_WriteStr(_84056_message, _23d14c2a5_Repeat(jule::Str::lit(" ", 1), 7LL));
	_23d16b604_WriteStr(_84056_message, _8559_refersTo);
	_23d16b8ac_WriteByte(_84056_message, '\n');
	_23d16b34b_Write(_84056_message, _8529_buf);
}



inline jule::Bool _1b9ca1a4e_checkCrossCycle(_1b9ca008b_typeChecker* _self_, jule::Any _86230_decl, _23d16295d_StrBuilder* _86246_message) {
	{
		auto &_match_expr{ _86230_decl };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ca69e727:;
			{
				jule::Ptr<_1b9c8c3db_TypeAlias> _86513_ta = _86230_decl.cast_ptr<_1b9c8c3db_TypeAlias>(&__jule_any_type66);;
				{
					auto expr = &((*(_86513_ta))._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ca69eda9:;
					if (it != expr_end) {
						jule::Any *_86620_d = it;
						{
							{
								
								if (((*(_86620_d)) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1ca6a0cde:;
									{
										_1b9ca1653_pushCycleError(_self_, jule::Any(_86513_ta, &__jule_any_type66), (*(_86620_d)), _86246_message);
										return false;;
									}
								}
								else if ((!(_1b9ca1a4e_checkCrossCycle(_self_, (*(_86620_d)), _86246_message)))) {
									_case_begin_1ca6a0d66:;
									{
										_1b9ca1653_pushCycleError(_self_, jule::Any(_86513_ta, &__jule_any_type66), (*(_86620_d)), _86246_message);
										return false;;
									}
								}
								_match_end_1ca6a0bce:;
							};
						}
						_iter_next_1ca69eda9:;
						++it;
						goto _iter_begin_1ca69eda9;
					}
					_iter_end_1ca69eda9:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ca69e78d:;
			{
				jule::Ptr<_1b9b393a9_Struct> _87713_s = _86230_decl.cast_ptr<_1b9b393a9_Struct>(&__jule_any_type65);;
				{
					auto expr = &((*(_87713_s))._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ca6a2494:;
					if (it != expr_end) {
						jule::Ptr<_1b9b393a9_Struct> *_87820_d = it;
						{
							{
								
								if ((__jule_any_type65_compare((*((*(_self_))._field_referencer))._field_owner, (*(_87820_d))))) {
									_case_begin_1ca6a2dbd:;
									{
										_1b9ca1653_pushCycleError(_self_, jule::Any(_87713_s, &__jule_any_type65), jule::Any((*(_87820_d)), &__jule_any_type65), _86246_message);
										return false;;
									}
								}
								else if ((!(_1b9ca1a4e_checkCrossCycle(_self_, jule::Any((*(_87820_d)), &__jule_any_type65), _86246_message)))) {
									_case_begin_1ca6a2e45:;
									{
										_1b9ca1653_pushCycleError(_self_, jule::Any(_87713_s, &__jule_any_type65), jule::Any((*(_87820_d)), &__jule_any_type65), _86246_message);
										return false;;
									}
								}
								_match_end_1ca6a2cad:;
							};
						}
						_iter_next_1ca6a2494:;
						++it;
						goto _iter_begin_1ca6a2494;
					}
					_iter_end_1ca6a2494:;
				};
			}
		}
		_match_end_1ca69e6c2:;
	};
	return true;;
}



inline jule::Bool _1b9ca1e4a_checkIllegalCycles(_1b9ca008b_typeChecker* _self_, jule::Ptr<_1b9b18dc2_IdentTypeDecl>* _89638_ident, jule::Any _89665_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _89665_decl };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ca6a4d9d:;
			{
				if ((*(_89665_decl.cast_ptr<_1b9b393a9_Struct>(&__jule_any_type65)))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ca6a4e14:;
			{
				if ((*(_89665_decl.cast_ptr<_1b9c8c3db_TypeAlias>(&__jule_any_type66)))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1ca6a4d48:;
	};
	if ((_89665_decl == (*((*(_self_))._field_referencer))._field_owner)) {
		_1b9ca07c8_pushErr(_self_, (*((*(_89638_ident))))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_referencer))._field_ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_23d16295d_StrBuilder _91913_message = static__23d162c7c_New(32LL);;
	if ((!(_1b9ca1a4e_checkCrossCycle(_self_, _89665_decl, &(_91913_message))))) {
		jule::Str _92217_errMsg = _23d16bdeb_Str(&_91913_message);;
		_23d16c0e9_Clear(&_91913_message);
		_1b9ca1653_pushCycleError(_self_, (*((*(_self_))._field_referencer))._field_owner, _89665_decl, &(_91913_message));
		_92217_errMsg+=_23d16bdeb_Str(&_91913_message);
		_1b9ca07c8_pushErr(_self_, (*((*(_89638_ident))))._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_92217_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ca6a927b:;
			{
				{
					{ jule::Slice<jule::Any> *__jule_push_dest = (*((*(_self_))._field_referencer))._field_refs; __jule_push_dest->push(_89665_decl); };
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ca6a92e2:;
			{
				{
					auto &_match_expr{ _89665_decl };
					
					if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1ca6aa205:;
						{
							jule::Ptr<_1b9b393a9_Struct> _93821_s = (*((*(_self_))._field_referencer))._field_owner.cast_ptr<_1b9b393a9_Struct>(&__jule_any_type65);;
							{ jule::Slice<jule::Ptr<_1b9b393a9_Struct>> &__jule_push_dest = (*(_93821_s))._field_Depends; __jule_push_dest.push(_89665_decl.cast_ptr<_1b9b393a9_Struct>(&__jule_any_type65)); };
						}
					}
					_match_end_1ca6a9666:;
				};
			}
		}
		_match_end_1ca6a9226:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait<_1b9c8cc27_Kind> _1b9ca2346_fromTypeAlias(_1b9ca008b_typeChecker* _self_, jule::Ptr<_1b9b18dc2_IdentTypeDecl>* _94633_decl, jule::Ptr<_1b9c8c3db_TypeAlias>* _94660_ta) {
	if ((!(_1b9bd5763_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_94660_ta))))._field_Public, (*((*(_94660_ta))))._field_Token)))) {
		_1b9ca07c8_pushErr(_self_, (*((*(_94633_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_94633_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_94660_ta))))._field_Used=true;
	if (((*((*(_94633_decl))))._field_Generics.len() > 0LL)) {
		_1b9ca07c8_pushErr(_self_, (*((*(_94633_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_94633_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ca6ae7c0:;
			if (it != expr_end) {
				jule::Ptr<_1b9c8c3db_TypeAlias> _96320_bg = *it;
				{
					if (((_96320_bg == (*(_94660_ta))) || (((*((*((*(_94660_ta))))._field_Kind))._field_Kind != nullptr) && _1b9c8d8d7_Equal((*((*((*(_94660_ta))))._field_Kind))._field_Kind, (*((*(_96320_bg))._field_Kind))._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1ca6ae7c0;
					};
				}
				_iter_next_1ca6ae7c0:;
				++it;
				goto _iter_begin_1ca6ae7c0;
			}
			_iter_end_1ca6ae7c0:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ca6b5320:;
			if (it != expr_end) {
				jule::Ptr<_1b9c8c3db_TypeAlias> _97420_bg = *it;
				{
					if ((_97420_bg == (*(_94660_ta)))) {
						_1b9ca07c8_pushErr(_self_, (*((*(_94633_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_94633_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					{
						auto expr = &((*((*(_94660_ta))))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ca6b80e2:;
						if (it != expr_end) {
							jule::Ptr<_1b9c8c3db_TypeAlias> _97924_dg = *it;
							{
								if ((_97420_bg == _97924_dg)) {
									_1b9ca07c8_pushErr(_self_, (*((*(_94633_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_94633_decl))))._field_Ident, &__jule_any_type4)}));
									return nullptr;;
								};
							}
							_iter_next_1ca6b80e2:;
							++it;
							goto _iter_begin_1ca6b80e2;
						}
						_iter_end_1ca6b80e2:;
					};
				}
				_iter_next_1ca6b5320:;
				++it;
				goto _iter_begin_1ca6b5320;
			}
			_iter_end_1ca6b5320:;
		};
	};
	jule::Bool _98813_ok = _1b9ca1e4a_checkIllegalCycles(_self_, _94633_decl, jule::Any((*(_94660_ta)), &__jule_any_type66));;
	if ((!(_98813_ok))) {
		return nullptr;;
	};
	if (((*((*((*(_94660_ta))))._field_Kind))._field_Kind == nullptr)) {
		_98813_ok=_1b9be141c_checkTypeAliasDeclKind((*(_self_))._field_s, _94660_ta, (*(_self_))._field_lookup);
		if ((!(_98813_ok))) {
			return nullptr;;
		};
	};
	if (((*((*(_94660_ta))))._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		{ jule::Slice<jule::Ptr<_1b9c8c3db_TypeAlias>> &__jule_push_dest = (*((*(_self_))._field_ownerAlias))._field_Generics; __jule_push_dest.push((*(_94660_ta))); };
	};
	jule::Ptr<_1b9c8d1cd_TypeKind> _100713_tk = jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Generic=(*((*(_94660_ta))))._field_Generic, ._field_Kind=(*((*((*((*(_94660_ta))))._field_Kind))._field_Kind))._field_Kind});;
	_1b9ca1235_pushReferenceByKind(_self_, &(_100713_tk));
	if ((*((*(_94660_ta))))._field_Binded) {
		(*(_100713_tk))._field_BindIdent=(*((*(_94660_ta))))._field_Ident;
	} else {
		(*(_100713_tk))._field_BindIdent=(*((*((*((*(_94660_ta))))._field_Kind))._field_Kind))._field_BindIdent;
	};
	return jule::Trait<_1b9c8cc27_Kind>(_100713_tk, 19);;
}



inline jule::Ptr<_1b9b64c0e_Enum> _1b9ca2742_fromEnum(_1b9ca008b_typeChecker* _self_, jule::Ptr<_1b9b18dc2_IdentTypeDecl>* _102028_decl, jule::Ptr<_1b9b64c0e_Enum>* _102055_e) {
	if ((!(_1b9bd5763_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_102055_e))))._field_Public, (*((*(_102055_e))))._field_Token)))) {
		_1b9ca07c8_pushErr(_self_, (*((*(_102028_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_102028_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_102028_decl))))._field_Generics.len() > 0LL)) {
		_1b9ca07c8_pushErr(_self_, (*((*(_102028_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_102028_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_102055_e));;
}



inline jule::Ptr<_1b9b66419_TypeEnum> _1b9ca2b3d_fromTypeEnum(_1b9ca008b_typeChecker* _self_, jule::Ptr<_1b9b18dc2_IdentTypeDecl>* _103232_decl, jule::Ptr<_1b9b66419_TypeEnum>* _103259_e) {
	if ((!(_1b9bd5763_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_103259_e))))._field_Public, (*((*(_103259_e))))._field_Token)))) {
		_1b9ca07c8_pushErr(_self_, (*((*(_103232_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_103232_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_103232_decl))))._field_Generics.len() > 0LL)) {
		_1b9ca07c8_pushErr(_self_, (*((*(_103232_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_103232_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_103259_e));;
}



inline jule::Ptr<_1b9b62514_Trait> _1b9ca3039_fromTrait(_1b9ca008b_typeChecker* _self_, jule::Ptr<_1b9b18dc2_IdentTypeDecl>* _104429_decl, jule::Ptr<_1b9b62514_Trait>* _104456_t) {
	if ((!(_1b9bd5763_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_104456_t))))._field_Public, (*((*(_104456_t))))._field_Token)))) {
		_1b9ca07c8_pushErr(_self_, (*((*(_104429_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_104429_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_104429_decl))))._field_Generics.len() > 0LL)) {
		_1b9ca07c8_pushErr(_self_, (*((*(_104429_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_104429_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_1ca696de5_pushReference(_self_, _104456_t);
	return (*(_104456_t));;
}



inline jule::Bool _1b9ca3435_checkStructIns(_1b9ca008b_typeChecker* _self_, jule::Ptr<_1b9b3c137_StructIns>* _105738_ins, jule::Ptr<_1b9b032eb_Token>* _105760_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_105738_ins))))._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_105738_ins))))._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (__jule_any_type65_compare((*((*(_self_))._field_referencer))._field_owner, (*((*(_105738_ins))))._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1b9beca11_precheckStructIns((*(_self_))._field_s, _105738_ins, (*(_105760_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*((*(_105738_ins))))._field_Generics.len() > 0LL)) {
		_1b9c03385_checkStructInsOperators((*(_self_))._field_s, (*(_105738_ins)));
		_1b9beccb9_checkStructIns((*(_self_))._field_s, _105738_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1b9ca36dd_appendUsedStructReference(_1b9ca008b_typeChecker* _self_, jule::Ptr<_1b9b393a9_Struct>* _107849_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ca6cae5c:;
			{
				jule::Ptr<_1b9b393a9_Struct> _108417_refS = (*((*(_self_))._field_referencer))._field_owner.cast_ptr<_1b9b393a9_Struct>(&__jule_any_type65);;
				if ((!(_1b9b3ad39_IsUses(_108417_refS.ptr(), (*(_107849_s)))))) {
					{ jule::Slice<jule::Ptr<_1b9b393a9_Struct>> &__jule_push_dest = (*(_108417_refS))._field_Uses; __jule_push_dest.push((*(_107849_s))); };
				};
			}
		}
		_match_end_1ca6cae07:;
	};
}



inline jule::Ptr<_1b9b3c137_StructIns> _1b9ca3ad9_buildStructInstance(_1b9ca008b_typeChecker* _self_, jule::Ptr<_1b9b18dc2_IdentTypeDecl>* _109143_decl, jule::Ptr<_1b9b393a9_Struct>* _109170_s) {
	jule::Ptr<_1b9c9e09b_referencer> _109313_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1b9c8c3db_TypeAlias>> _109513_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1ca6cd9a9:;
				{
					jule::Ptr<_1b9b970c6_scopeChecker> _110221_sc = (*(_self_))._field_lookup.cast_ptr<_1b9b970c6_scopeChecker>(0);;
					jule::Ptr<_1b9b970c6_scopeChecker> _110321_hard = _1b9b9a44d_getHardRoot(_110221_sc);;
					if ((((*((*(_110321_hard))._field_owner))._field_Owner == nullptr) || ((*((*((*(_110321_hard))._field_owner))._field_Owner))._field_Decl != (*(_109170_s))))) {
						goto _match_end_1ca6cd954;
					};
					jule::I32 _110717_n = ((*((*(_110321_hard))._field_owner))._field_Generics.len() + (*((*((*(_110321_hard))._field_owner))._field_Owner))._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=(*((*(_110321_hard))._field_table))._field_TypeAliases.slice(0LL, _110717_n);
				}
			}
			_match_end_1ca6cd954:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait<_1b9cacc14_Lookup> _111713_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1b9b3c137_StructIns> _112113_ins = _1b9b3981b_instance((*(_109170_s)));;
	(*(_112113_ins))._field_Generics=jule::Slice<jule::Ptr<_1b9c8b7e7_InsGeneric>>::alloc(0LL, (*((*(_109143_decl))))._field_Generics.len());
	{
		auto expr = &((*((*(_109143_decl))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca6d3085:;
		if (it != expr_end) {
			jule::Ptr<_1b9b187b7_TypeDecl> _112321_g = *it;
			{
				jule::Ptr<_1b9c8d1cd_TypeKind> _112417_kind = _1b9ca73e5_build(_self_, &((*(_112321_g))._field_Kind));;
				if ((_112417_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1b9c8b7e7_InsGeneric>> &__jule_push_dest = (*(_112113_ins))._field_Generics; __jule_push_dest.push(jule::new_ptr<_1b9c8b7e7_InsGeneric>(_1b9c8b7e7_InsGeneric{._field_Kind=_112417_kind, })); };
			}
			_iter_next_1ca6d3085:;
			++it;
			goto _iter_begin_1ca6d3085;
		}
		_iter_end_1ca6d3085:;
	};
	(*(_self_))._field_lookup=_111713_lookup;
	(*(_self_))._field_bannedGenerics=_109513_bannedGenerics;
	(*(_self_))._field_referencer=_109313_referencer;
	return _112113_ins;;
}



inline jule::Ptr<_1b9b3c137_StructIns> _1b9ca3ed5_fromStruct(_1b9ca008b_typeChecker* _self_, jule::Ptr<_1b9b18dc2_IdentTypeDecl>* _113934_decl, jule::Ptr<_1b9b393a9_Struct>* _113961_s) {
	if ((!(_1b9bd5763_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_113961_s))))._field_Public, (*((*(_113961_s))))._field_Token)))) {
		_1b9ca07c8_pushErr(_self_, (*((*(_113934_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_113934_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*((*(_113934_decl))))._field_Generics.len() > 0LL)) {
			_1b9ca07c8_pushErr(_self_, (*((*(_113934_decl))))._field_Token, jule::Str::lit("generics are not allowed in this scope", 38), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1b9b3c137_StructIns>(_1b9b3c137_StructIns{._field_Decl=(*(_113961_s)), });;
	};
	jule::Bool _115713_ok = _1b9ca1e4a_checkIllegalCycles(_self_, _113934_decl, jule::Any((*(_113961_s)), &__jule_any_type65));;
	if ((!(_115713_ok))) {
		return nullptr;;
	};
	_1b9ca36dd_appendUsedStructReference(_self_, _113961_s);
	jule::Ptr<_1b9b3c137_StructIns> _116313_ins = _1b9ca3ad9_buildStructInstance(_self_, _113934_decl, _113961_s);;
	if ((_116313_ins == nullptr)) {
		return nullptr;;
	};
	_115713_ok=_1b9bd6533_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I32>((*((*(_116313_ins))._field_Decl))._field_Generics.len()), static_cast<jule::I32>((*(_116313_ins))._field_Generics.len()), (*((*(_113934_decl))))._field_Token);
	if ((!(_115713_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1b9b3c137_StructIns> _117313_existInstance = _1b9b39b29_appendInstance((*(_113961_s)).ptr(), &(_116313_ins));;
	if ((_117313_existInstance != nullptr)) {
		if ((!(_1b9bde618_checkConstraintsStruct((*(_self_))._field_s, &(_116313_ins), &((*((*(_113934_decl))))._field_Token), _117313_existInstance)))) {
			return nullptr;;
		};
		_1ca69409b_pushReference(_self_, &(_117313_existInstance));
		return _117313_existInstance;;
	};
	if ((!(_1b9ca3435_checkStructIns(_self_, &(_116313_ins), &((*((*(_113934_decl))))._field_Token))))) {
		return nullptr;;
	};
	_1ca69409b_pushReference(_self_, &(_116313_ins));
	return _116313_ins;;
}



inline jule::Trait<_1b9c8cc27_Kind> _1b9ca4326_getDef(_1b9ca008b_typeChecker* _self_, jule::Ptr<_1b9b18dc2_IdentTypeDecl>* _119730_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca6dd205:;
		if (it != expr_end) {
			jule::Ptr<_1b9b259c2_GenericDecl> _119816_g = *it;
			{
				if (((*(_119816_g))._field_Ident == (*((*(_119730_decl))))._field_Ident)) {
					return jule::Trait<_1b9c8cc27_Kind>(_1b9caa0eb_buildPrimType((*(_119816_g))._field_Ident), 20);;
				};
			}
			_iter_next_1ca6dd205:;
			++it;
			goto _iter_begin_1ca6dd205;
		}
		_iter_end_1ca6dd205:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca6de646:;
		if (it != expr_end) {
			jule::Ptr<_1b9c8c3db_TypeAlias> _120421_g = *it;
			{
				if (((*(_120421_g))._field_Ident == (*((*(_119730_decl))))._field_Ident)) {
					if (((*((*(_119730_decl))))._field_Generics.len() > 0LL)) {
						_1b9ca07c8_pushErr(_self_, (*((*(_119730_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_119730_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					jule::Ptr<_1b9b3c137_StructIns> _121021_st = _1b9c91da2_Struct((*((*(_120421_g))._field_Kind))._field_Kind.ptr());;
					if ((_121021_st != nullptr)) {
						jule::Bool _121221_ok = _1b9ca1e4a_checkIllegalCycles(_self_, _119730_decl, jule::Any((*(_121021_st))._field_Decl, &__jule_any_type65));;
						if ((!(_121221_ok))) {
							return nullptr;;
						};
					};
					return (*((*((*(_120421_g))._field_Kind))._field_Kind))._field_Kind;;
				};
			}
			_iter_next_1ca6de646:;
			++it;
			goto _iter_begin_1ca6de646;
		}
		_iter_end_1ca6de646:;
	};
	if ((!((*((*(_119730_decl))))._field_Binded))) {
		jule::Ptr<_1b9b64c0e_Enum> _122217_e = _1b9cacc14_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1b9cac76e_FindEnum((*(_self_))._field_lookup, (*((*(_119730_decl))))._field_Ident);;
		if ((_122217_e != nullptr)) {
			return jule::Trait<_1b9c8cc27_Kind>(_1b9ca2742_fromEnum(_self_, _119730_decl, &(_122217_e)), 3);;
		};
		jule::Ptr<_1b9b66419_TypeEnum> _122717_te = _1b9cacc14_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1b9cacab0_FindTypeEnum((*(_self_))._field_lookup, (*((*(_119730_decl))))._field_Ident);;
		if ((_122717_te != nullptr)) {
			return jule::Trait<_1b9c8cc27_Kind>(_1b9ca2b3d_fromTypeEnum(_self_, _119730_decl, &(_122717_te)), 4);;
		};
		jule::Ptr<_1b9b62514_Trait> _123217_t = _1b9cacc14_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1b9cac42d_FindTrait((*(_self_))._field_lookup, (*((*(_119730_decl))))._field_Ident);;
		if ((_123217_t != nullptr)) {
			return jule::Trait<_1b9c8cc27_Kind>(_1b9ca3039_fromTrait(_self_, _119730_decl, &(_123217_t)), 2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1b9ca07c8_pushErr(_self_, (*((*(_119730_decl))))._field_Token, jule::Str::lit("binded definitions are not allowed in this scope", 48), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b9b393a9_Struct> _124113_s = _1b9cacc14_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1b9cabbe1_FindStruct((*(_self_))._field_lookup, (*((*(_119730_decl))))._field_Ident, (*((*(_119730_decl))))._field_Binded);;
	if ((_124113_s != nullptr)) {
		return jule::Trait<_1b9c8cc27_Kind>(_1b9ca3ed5_fromStruct(_self_, _119730_decl, &(_124113_s)), 0);;
	};
	jule::Ptr<_1b9c8c3db_TypeAlias> _124613_ta = _1b9cacc14_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1b9cab7e5_FindTypeAlias((*(_self_))._field_lookup, (*((*(_119730_decl))))._field_Ident, (*((*(_119730_decl))))._field_Binded);;
	if (((_124613_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_124613_ta=_1b9d7cb08_findBuiltinTypeAlias((*((*(_119730_decl))))._field_Ident);
	};
	if ((_124613_ta != nullptr)) {
		return _1b9ca2346_fromTypeAlias(_self_, _119730_decl, &(_124613_ta));;
	};
	_1b9ca07c8_pushErr(_self_, (*((*(_119730_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_119730_decl))))._field_Ident, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Trait<_1b9c8cc27_Kind> _1b9ca4667_buildIdent(_1b9ca008b_typeChecker* _self_, jule::Ptr<_1b9b18dc2_IdentTypeDecl> _125833_decl) {
	return _1b9ca4326_getDef(_self_, &(_125833_decl));;
}



inline jule::Trait<_1b9c8cc27_Kind> _1b9ca49a8_buildSubIdent(_1b9ca008b_typeChecker* _self_, jule::Ptr<_1b9b191be_SubIdentTypeDecl> _126236_decl) {
	jule::Trait<_1b9c8cc27_Kind> _126313_ident = _1b9ca4667_buildIdent(_self_, (*(_126236_decl))._field_Idents[0LL]);;
	if ((_126313_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _126313_ident };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1ca6eac18:;
			{
				goto _match_end_1ca6ea685;
			}
		}
		else {
			_case_begin_1ca6ea6da:;
			{
				_1b9ca07c8_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ca6ea685:;
	};
	jule::Ptr<_1b9b66419_TypeEnum> _127413_t = _126313_ident.cast_ptr<_1b9b66419_TypeEnum>(4);;
	jule::Slice<jule::Ptr<_1b9b18dc2_IdentTypeDecl>> _127513_idents = (*(_126236_decl))._field_Idents.slice(1LL);;
	{
		auto expr = &(_127513_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca6eb9a5:;
		if (it != expr_end) {
			jule::I32 _127613_i = it - expr->begin();
			jule::Ptr<_1b9b18dc2_IdentTypeDecl> _127616_id = *it;
			{
				jule::Ptr<_1b9b65d42_TypeEnumItem> _127717_item = _1b9b66eca_FindItem(_127413_t.ptr(), (*(_127616_id))._field_Ident);;
				if ((_127717_item == nullptr)) {
					_1b9ca07c8_pushErr(_self_, (*(_127616_id))._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_127413_t))._field_Ident, &__jule_any_type4),jule::Any((*(_127616_id))._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((_127513_idents.len() - _127613_i) == 1LL)) {
					_1b9ca1235_pushReferenceByKind(_self_, &((*((*(_127717_item))._field_Kind))._field_Kind));
					return jule::Trait<_1b9c8cc27_Kind>((*((*(_127717_item))._field_Kind))._field_Kind, 19);;
				};
				_127413_t=_1b9c91368_TypeEnum((*((*(_127717_item))._field_Kind))._field_Kind.ptr());
				if ((_127413_t == nullptr)) {
					_1b9ca07c8_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1ca6eb9a5:;
			++it;
			_127613_i++;
			goto _iter_begin_1ca6eb9a5;
		}
		_iter_end_1ca6eb9a5:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b9c997d3_Sptr> _1b9ca4ce9_buildSptrFromType(_1b9ca008b_typeChecker* _self_, jule::Ptr<_1b9c8d1cd_TypeKind>* _129641_elem) {
	{
		
		if (((*(_129641_elem)) == nullptr)) {
			_case_begin_1ca700ee8:;
			{
				return nullptr;;
			}
		}
		else if ((_1b9c91da2_Struct((*(_129641_elem)).ptr()) != nullptr)) {
			_case_begin_1ca701070:;
			{
				jule::Ptr<_1b9b3c137_StructIns> _130213_s = _1b9c91da2_Struct((*(_129641_elem)).ptr());;
				if ((((*(_130213_s))._field_Decl != nullptr) && (*((*(_130213_s))._field_Decl))._field_Binded)) {
					_1b9ca07c8_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1b9c915ee_Arr((*(_129641_elem)).ptr()) != nullptr) && (*(_1b9c915ee_Arr((*(_129641_elem)).ptr())))._field_Auto)) {
			_case_begin_1ca7010e7:;
			{
				_1b9ca07c8_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ca6ec2d0:;
	};
	return jule::new_ptr<_1b9c997d3_Sptr>(_1b9c997d3_Sptr{._field_Elem=(*(_129641_elem))});;
}



inline jule::Ptr<_1b9c997d3_Sptr> _1b9ca513a_buildSptr(_1b9ca008b_typeChecker* _self_, jule::Ptr<_1b9b19862_SptrTypeDecl> _131632_decl) {
	jule::Bool _13179_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13179_cycleRisk;
	});;
	jule::Ptr<_1b9c8d1cd_TypeKind> _132113_elem = _1b9ca7736_checkDecl(_self_, &((*(_131632_decl))._field_Elem));;
	return _1b9ca4ce9_buildSptrFromType(_self_, &(_132113_elem));;
}



inline jule::Ptr<_1b9c9d09a_Ptr> _1b9ca547b_buildPtrFromType(_1b9ca008b_typeChecker* _self_, jule::Ptr<_1b9c8d1cd_TypeKind>* _132540_elem) {
	{
		
		if (((*(_132540_elem)) == nullptr)) {
			_case_begin_1ca705c12:;
			{
				return nullptr;;
			}
		}
		else if (((_1b9c915ee_Arr((*(_132540_elem)).ptr()) != nullptr) && (*(_1b9c915ee_Arr((*(_132540_elem)).ptr())))._field_Auto)) {
			_case_begin_1ca705c89:;
			{
				_1b9ca07c8_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return jule::new_ptr<_1b9c9d09a_Ptr>();;
			}
		}
		_match_end_1ca705b02:;
	};
	return jule::new_ptr<_1b9c9d09a_Ptr>(_1b9c9d09a_Ptr{._field_Elem=(*(_132540_elem))});;
}



inline jule::Ptr<_1b9c9d09a_Ptr> _1b9ca57bc_buildPtr(_1b9ca008b_typeChecker* _self_, jule::Ptr<_1b9b1a2e1_PtrTypeDecl> _134031_decl) {
	jule::Bool _13419_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13419_cycleRisk;
	});;
	jule::Ptr<_1b9c8d1cd_TypeKind> _134517_elem = nullptr;;
	if ((!(_1b9b1a654_IsUnsafe(_134031_decl.ptr())))) {
		_134517_elem=_1b9ca7736_checkDecl(_self_, &((*(_134031_decl))._field_Elem));
		return _1b9ca547b_buildPtrFromType(_self_, &(_134517_elem));;
	};
	return jule::new_ptr<_1b9c9d09a_Ptr>(_1b9c9d09a_Ptr{._field_Elem=_134517_elem});;
}



inline jule::Ptr<_1b9c9a2a6_Slc> _1b9ca5b0d_buildSlc(_1b9ca008b_typeChecker* _self_, jule::Ptr<_1b9b19be7_SlcTypeDecl> _135731_decl) {
	jule::Bool _13589_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13589_cycleRisk;
	});;
	jule::Ptr<_1b9c8d1cd_TypeKind> _136213_elem = _1b9ca7736_checkDecl(_self_, &((*(_135731_decl))._field_Elem));;
	{
		
		if ((_136213_elem == nullptr)) {
			_case_begin_1ca70a909:;
			{
				return nullptr;;
			}
		}
		else if (((_1b9c915ee_Arr(_136213_elem.ptr()) != nullptr) && (*(_1b9c915ee_Arr(_136213_elem.ptr())))._field_Auto)) {
			_case_begin_1ca70a981:;
			{
				_1b9ca07c8_pushErr(_self_, (*((*(_135731_decl))._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ca70a84e:;
	};
	return jule::new_ptr<_1b9c9a2a6_Slc>(_1b9c9a2a6_Slc{._field_Elem=_136213_elem});;
}



inline jule::Ptr<_1b9c9c5c7_Arr> _1b9ca5e4e_buildArr(_1b9ca008b_typeChecker* _self_, jule::Ptr<_1b9b1aa83_ArrTypeDecl> _137831_decl) {
	jule::I32 _137913_n = 0LL;;
	if ((!(_1b9b1ade6_AutoSized(_137831_decl.ptr())))) {
		jule::Ptr<_1b9c5d016_Data> _138217_size = _1b9c7cbd4_evalExpr(_1b9bdc4a1_eval((*(_self_))._field_s, (*(_self_))._field_lookup), (*(_137831_decl))._field_Size);;
		if ((_138217_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1b9c5d8da_IsConst(_138217_size.ptr())))) {
			_1b9ca07c8_pushErr(_self_, (*((*(_137831_decl))._field_Size))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1b9c9082e_Prim((*(_138217_size))._field_Kind.ptr()) == nullptr) || (!(_1ec6820de_IsInt((*(_1b9c9082e_Prim((*(_138217_size))._field_Kind.ptr())))._field_Kind))))) {
			_1b9ca07c8_pushErr(_self_, (*((*(_137831_decl))._field_Size))._field_Token, jule::Str::lit("array size must be integer", 26), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_137913_n=static_cast<jule::I32>(static_cast<jule::I32>(_1ec685488_AsI64((*(_138217_size))._field_Constant.ptr())));
		if ((_137913_n < 0LL)) {
			_1b9ca07c8_pushErr(_self_, (*((*(_137831_decl))._field_Elem))._field_Token, jule::Str::lit("array size must be positive integer", 35), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _140017_max = _1ec67b00b_MaxI(jule::Str::lit("int", 3));;
			if (((_1ec673b4c_BitSize != 64LL) && (static_cast<jule::I64>(_137913_n) > _140017_max))) {
				_1b9ca07c8_pushErr(_self_, (*((*(_137831_decl))._field_Size))._field_Token, jule::Str::lit("array with size @ overflows limit (@) of the system", 51), jule::Slice<jule::Any>::make({jule::Any(_1b9c89e88_constoa(&((*(_138217_size))._field_Constant)), &__jule_any_type4),jule::Any(_1ec6724ec_FmtInt(_140017_max, 10LL), &__jule_any_type4)}));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1b9c8d1cd_TypeKind> _140913_elem = _1b9ca7736_checkDecl(_self_, &((*(_137831_decl))._field_Elem));;
	{
		
		if ((_140913_elem == nullptr)) {
			_case_begin_1ca714bee:;
			{
				return nullptr;;
			}
		}
		else if (((_1b9c915ee_Arr(_140913_elem.ptr()) != nullptr) && (*(_1b9c915ee_Arr(_140913_elem.ptr())))._field_Auto)) {
			_case_begin_1ca714c76:;
			{
				_1b9ca07c8_pushErr(_self_, (*((*(_137831_decl))._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ca714b77:;
	};
	return jule::new_ptr<_1b9c9c5c7_Arr>(_1b9c9c5c7_Arr{._field_Auto=_1b9b1ade6_AutoSized(_137831_decl.ptr()), ._field_N=_137913_n, ._field_Elem=_140913_elem});;
}



inline jule::Ptr<_1b9c9b94a_Map> _1b9ca6290_buildMap(_1b9ca008b_typeChecker* _self_, jule::Ptr<_1b9b1b2d1_MapTypeDecl> _142731_decl) {
	jule::Bool _14289_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14289_cycleRisk;
	});;
	jule::Ptr<_1b9c8d1cd_TypeKind> _143213_key = _1b9ca7736_checkDecl(_self_, &((*(_142731_decl))._field_Key));;
	if ((_143213_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b9c8d1cd_TypeKind> _143713_val = _1b9ca7736_checkDecl(_self_, &((*(_142731_decl))._field_Val));;
	if ((_143713_val == nullptr)) {
		return nullptr;;
	};
	if ((_1b9c910d2_Enum(_143713_val.ptr()) != nullptr)) {
		_1b9ca07c8_pushErr(_self_, (*((*(_142731_decl))._field_Val))._field_Token, jule::Str::lit("maps do not support enums as map key type", 41), jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1b9c9b94a_Map>(_1b9c9b94a_Map{._field_Key=_143213_key, ._field_Val=_143713_val});;
}



inline jule::Ptr<_1b9c9ad9a_Tuple> _1b9ca65d1_buildTuple(_1b9ca008b_typeChecker* _self_, jule::Ptr<_1b9b19ee4_TupleTypeDecl> _145133_decl) {
	jule::Slice<jule::Ptr<_1b9c8d1cd_TypeKind>> _145213_types = jule::Slice<jule::Ptr<_1b9c8d1cd_TypeKind>>::alloc(0LL, (*(_145133_decl))._field_Types.len());;
	{
		auto expr = &((*(_145133_decl))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca71a60b:;
		if (it != expr_end) {
			jule::Ptr<_1b9b187b7_TypeDecl> _145321_t = *it;
			{
				jule::Ptr<_1b9c8d1cd_TypeKind> _145417_kind = _1b9ca7736_checkDecl(_self_, &(_145321_t));;
				if ((_145417_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1b9c8d1cd_TypeKind>> &__jule_push_dest = _145213_types; __jule_push_dest.push(_145417_kind); };
			}
			_iter_next_1ca71a60b:;
			++it;
			goto _iter_begin_1ca71a60b;
		}
		_iter_end_1ca71a60b:;
	};
	return jule::new_ptr<_1b9c9ad9a_Tuple>(_1b9c9ad9a_Tuple{._field_Types=_145213_types});;
}



inline jule::Bool _1b9ca6922_checkFuncTypes(_1b9ca008b_typeChecker* _self_, jule::Ptr<_1b9b5216e_FnIns>* _146438_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_146438_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca71c047:;
		if (it != expr_end) {
			jule::Ptr<_1b9b511c3_ParamIns> _146521_p = *it;
			{
				(*(_146521_p))._field_Kind=_1b9ca73e5_build(_self_, &((*((*((*((*(_146521_p))._field_Decl))._field_Kind))._field_Decl))._field_Kind));
				__jule_func_result=((*(_146521_p))._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1b9bdecbc_checkFnParamKind((*(_self_))._field_s, &(_146521_p));
			}
			_iter_next_1ca71c047:;
			++it;
			goto _iter_begin_1ca71c047;
		}
		_iter_end_1ca71c047:;
	};
	if ((!(_1b9b4e6dd_IsVoid((*((*(_146438_f))))._field_Decl.ptr())))) {
		(*((*(_146438_f))))._field_Result=_1b9ca73e5_build(_self_, &((*((*((*((*((*((*(_146438_f))))._field_Decl))._field_Result))._field_Kind))._field_Decl))._field_Kind));
		__jule_func_result = ((*((*(_146438_f))))._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1b9b5216e_FnIns> _1b9ca6c63_buildFunc(_1b9ca008b_typeChecker* _self_, jule::Ptr<_1b9b2a477_FnDecl> _148232_decl) {
	jule::Bool _14839_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14839_cycleRisk;
	});;
	if (((*(_148232_decl))._field_Generics.len() > 0LL)) {
		_1b9ca07c8_pushErr(_self_, (*(_148232_decl))._field_Token, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b9b4e26a_Fn> _149213_f = _1b9b5883a_buildFunc(_148232_decl);;
	jule::I32 _14949_n = (*((*(_self_))._field_s))._field_errors.len();;
	_1b9be90b2_checkAnonFuncDecl((*(_self_))._field_s, &(_149213_f));
	if ((_14949_n != (*((*(_self_))._field_s))._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1b9b5216e_FnIns> _150013_ins = _1b9b50744_instanceForce(_149213_f);;
	(*(_150013_ins))._field_Anon=true;
	jule::Bool _15039_ok = _1b9ca6922_checkFuncTypes(_self_, &(_150013_ins));;
	if ((!(_15039_ok))) {
		return nullptr;;
	};
	return _150013_ins;;
}



inline jule::Trait<_1b9c8cc27_Kind> _1b9ca70a4_buildByNamespace(_1b9ca008b_typeChecker* _self_, jule::Ptr<_1b9b19565_NamespaceTypeDecl> _151139_decl) {
	jule::Str _15129_path = _1b9ca9c55_buildLinkPathByTokens(&((*(_151139_decl))._field_Idents));;
	jule::Ptr<_1b9bb1200_ImportInfo> _151313_imp = _1b9cacc14_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1b9caaeed_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1b9bb1200_ImportInfo>)>([=](jule::Ptr<_1b9bb1200_ImportInfo> _151349_imp) mutable -> jule::Bool {
		if ((((*(_151139_decl))._field_Idents.len() == 1LL) && ((*(_151349_imp))._field_Alias == _15129_path))) {
			return true;;
		};
		return (((*(_151349_imp))._field_LinkPath == _15129_path) && _1b9bb3d18_isAccessibleViaSelection(_151349_imp.ptr()));;
	}));;
	jule::Str _15209_selfIdent = jule::Str::lit("self", 4);;
	if (((_151313_imp == nullptr) || (!(_1b9bb3741_isLookupable(_151313_imp.ptr(), &(_15209_selfIdent)))))) {
		_1b9ca07c8_pushErr(_self_, (*(_151139_decl))._field_Idents[0LL], jule::Str::lit("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_15129_path, &__jule_any_type4)}));
		return nullptr;;
	};
	_1b9ca0bc4_disallowBuiltin(_self_);
	jule::Trait<_1b9cacc14_Lookup> _152713_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1b9cacc14_Lookup>(_151313_imp, 1);
	jule::Ptr<_1b9c8d1cd_TypeKind> _152913_kind = _1b9ca7736_checkDecl(_self_, &((*(_151139_decl))._field_Kind));;
	(*(_self_))._field_lookup=_152713_lookup;
	_1b9ca09c6_allowBuiltin(_self_);
	return jule::Trait<_1b9c8cc27_Kind>(_152913_kind, 19);;
}



inline jule::Ptr<_1b9c8d1cd_TypeKind> _1b9ca73e5_build(_1b9ca008b_typeChecker* _self_, jule::Any* _153529_declKind) {
	jule::Trait<_1b9c8cc27_Kind> _153617_kind = nullptr;;
	{
		auto &_match_expr{ (*(_153529_declKind)) };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1ca72b353:;
			{
				jule::Trait<_1b9c8cc27_Kind> _153917_t = _1b9ca4667_buildIdent(_self_, (*(_153529_declKind)).cast_ptr<_1b9b18dc2_IdentTypeDecl>(&__jule_any_type20));;
				if ((_153917_t != nullptr)) {
					_153617_kind=_153917_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1ca72a71a:;
			{
				jule::Trait<_1b9c8cc27_Kind> _154417_t = _1b9ca49a8_buildSubIdent(_self_, (*(_153529_declKind)).cast_ptr<_1b9b191be_SubIdentTypeDecl>(&__jule_any_type86));;
				if ((_154417_t != nullptr)) {
					_153617_kind=_154417_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1ca72a918:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1b9c997d3_Sptr> _155017_t = _1b9ca513a_buildSptr(_self_, (*(_153529_declKind)).cast_ptr<_1b9b19862_SptrTypeDecl>(&__jule_any_type72));;
				if ((_155017_t != nullptr)) {
					_153617_kind=jule::Trait<_1b9c8cc27_Kind>(_155017_t, 21);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1ca72a97e:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1b9c9d09a_Ptr> _155617_t = _1b9ca57bc_buildPtr(_self_, (*(_153529_declKind)).cast_ptr<_1b9b1a2e1_PtrTypeDecl>(&__jule_any_type71));;
				if ((_155617_t != nullptr)) {
					_153617_kind=jule::Trait<_1b9c8cc27_Kind>(_155617_t, 26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1ca72a9e5:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1b9c9a2a6_Slc> _156217_t = _1b9ca5b0d_buildSlc(_self_, (*(_153529_declKind)).cast_ptr<_1b9b19be7_SlcTypeDecl>(&__jule_any_type70));;
				if ((_156217_t != nullptr)) {
					_153617_kind=jule::Trait<_1b9c8cc27_Kind>(_156217_t, 22);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1ca72aa5b:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1b9c9c5c7_Arr> _156817_t = _1b9ca5e4e_buildArr(_self_, (*(_153529_declKind)).cast_ptr<_1b9b1aa83_ArrTypeDecl>(&__jule_any_type69));;
				if ((_156817_t != nullptr)) {
					_153617_kind=jule::Trait<_1b9c8cc27_Kind>(_156817_t, 25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1ca72b430:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1b9c9b94a_Map> _157417_t = _1b9ca6290_buildMap(_self_, (*(_153529_declKind)).cast_ptr<_1b9b1b2d1_MapTypeDecl>(&__jule_any_type73));;
				if ((_157417_t != nullptr)) {
					_153617_kind=jule::Trait<_1b9c8cc27_Kind>(_157417_t, 24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1ca72b496:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1b9c9ad9a_Tuple> _158017_t = _1b9ca65d1_buildTuple(_self_, (*(_153529_declKind)).cast_ptr<_1b9b19ee4_TupleTypeDecl>(&__jule_any_type74));;
				if ((_158017_t != nullptr)) {
					_153617_kind=jule::Trait<_1b9c8cc27_Kind>(_158017_t, 23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ca72b50c:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1b9b5216e_FnIns> _158617_t = _1b9ca6c63_buildFunc(_self_, (*(_153529_declKind)).cast_ptr<_1b9b2a477_FnDecl>(&__jule_any_type14));;
				if ((_158617_t != nullptr)) {
					_153617_kind=jule::Trait<_1b9c8cc27_Kind>(_158617_t, 1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1ca72b573:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait<_1b9c8cc27_Kind> _159217_t = _1b9ca70a4_buildByNamespace(_self_, (*(_153529_declKind)).cast_ptr<_1b9b19565_NamespaceTypeDecl>(&__jule_any_type90));;
				if ((_159217_t != nullptr)) {
					_153617_kind=_159217_t;
				};
			}
		}
		else {
			_case_begin_1ca72a8a2:;
			{
				_1b9ca07c8_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ca72a84c:;
	};
	if ((_153617_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _153617_kind };
		
		if (_match_expr.type_is(true, 19)) {
			_case_begin_1ca737969:;
			{
				return _153617_kind.cast_ptr<_1b9c8d1cd_TypeKind>(19);;
			}
		}
		else {
			_case_begin_1ca735659:;
			{
				jule::Ptr<_1b9c8d1cd_TypeKind> _160717_tk = jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=_153617_kind});;
				{
					auto &_match_expr{ _153617_kind };
					
					if (_match_expr.type_is(true, 20)) {
						_case_begin_1ca73633b:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_1b9c8d1cd_TypeKind>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_160717_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, 0)) {
						_case_begin_1ca7363b3:;
						{
							jule::Ptr<_1b9b3c137_StructIns> _161417_s = _153617_kind.cast_ptr<_1b9b3c137_StructIns>(0);;
							if ((((*(_161417_s))._field_Decl != nullptr) && (*((*(_161417_s))._field_Decl))._field_Binded)) {
								(*(_160717_tk))._field_BindIdent=(*((*(_161417_s))._field_Decl))._field_Ident;
							};
						}
					}
					_match_end_1ca7362c5:;
				};
				return _160717_tk;;
			}
		}
		_match_end_1ca72b5d9:;
	};
}



inline jule::Ptr<_1b9c8d1cd_TypeKind> _1b9ca7736_checkDecl(_1b9ca008b_typeChecker* _self_, jule::Ptr<_1b9b187b7_TypeDecl>* _162333_decl) {
	jule::Ptr<_1b9b032eb_Token> _162513_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*((*(_162333_decl))))._field_Token;
	jule::Ptr<_1b9c8d1cd_TypeKind> _162813_kind = _1b9ca73e5_build(_self_, &((*((*(_162333_decl))))._field_Kind));;
	(*(_self_))._field_errorToken=_162513_errorToken;
	return _162813_kind;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9ca008b_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "cycleRisk:" << _Src._field_cycleRisk << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1b9ca8182_prim(jule::Str* _165021_ident, jule::Ptr<_1b9c95ca7_Prim> _165033_t) {
	return ((*(_165033_t))._field_Kind == (*(_165021_ident)));;
}



inline jule::Bool static__1b9ca8506_exist(jule::Str* _165422_ident, jule::Ptr<_1b9c8d1cd_TypeKind>* _165439_k) {
	{
		
		if ((_1b9c9082e_Prim((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1ca73c6a5:;
			{
				return static__1b9ca8182_prim(_165422_ident, _1b9c9082e_Prim((*(_165439_k)).ptr()));;
			}
		}
		else if ((_1b9c90ab5_Sptr((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1ca73c72c:;
			{
				jule::Ptr<_1b9c997d3_Sptr> _165917_sptr = _1b9c90ab5_Sptr((*(_165439_k)).ptr());;
				return static__1b9ca8506_exist(_165422_ident, &((*(_165917_sptr))._field_Elem));;
			}
		}
		else if ((_1b9c90d4b_Ptr((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1ca73c9a2:;
			{
				jule::Ptr<_1b9c9d09a_Ptr> _166217_ptr = _1b9c90d4b_Ptr((*(_165439_k)).ptr());;
				return static__1b9ca8506_exist(_165422_ident, &((*(_166217_ptr))._field_Elem));;
			}
		}
		else if ((_1b9c91885_Slc((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1ca73ca18:;
			{
				jule::Ptr<_1b9c9a2a6_Slc> _166517_slc = _1b9c91885_Slc((*(_165439_k)).ptr());;
				return static__1b9ca8506_exist(_165422_ident, &((*(_166517_slc))._field_Elem));;
			}
		}
		else if ((_1b9c915ee_Arr((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1ca73ca7e:;
			{
				jule::Ptr<_1b9c9c5c7_Arr> _166817_arr = _1b9c915ee_Arr((*(_165439_k)).ptr());;
				return static__1b9ca8506_exist(_165422_ident, &((*(_166817_arr))._field_Elem));;
			}
		}
		else if ((_1b9c923be_Map((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1ca73cb06:;
			{
				jule::Ptr<_1b9c9b94a_Map> _167117_m = _1b9c923be_Map((*(_165439_k)).ptr());;
				return (static__1b9ca8506_exist(_165422_ident, &((*(_167117_m))._field_Key)) || static__1b9ca8506_exist(_165422_ident, &((*(_167117_m))._field_Val)));;
			}
		}
		else if ((_1b9c91da2_Struct((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1ca73cb7d:;
			{
				jule::Ptr<_1b9b3c137_StructIns> _167517_s = _1b9c91da2_Struct((*(_165439_k)).ptr());;
				{
					auto expr = &((*(_167517_s))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ca743aeb:;
					if (it != expr_end) {
						jule::Ptr<_1b9c8b7e7_InsGeneric> _167625_g = *it;
						{
							if (static__1b9ca8506_exist(_165422_ident, &((*(_167625_g))._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1ca743aeb:;
						++it;
						goto _iter_begin_1ca743aeb;
					}
					_iter_end_1ca743aeb:;
				};
				return false;;
			}
		}
		else if ((_1b9c91b1b_Fn((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1ca73cc8d:;
			{
				jule::Ptr<_1b9b5216e_FnIns> _168317_f = _1b9c91b1b_Fn((*(_165439_k)).ptr());;
				{
					auto expr = &((*(_168317_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ca745449:;
					if (it != expr_end) {
						jule::Ptr<_1b9b511c3_ParamIns> _168425_p = *it;
						{
							if (_1b9b4cdb2_IsSelf((*(_168425_p))._field_Decl.ptr())) {
								goto _iter_next_1ca745449;
							};
							if (static__1b9ca8506_exist(_165422_ident, &((*(_168425_p))._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1ca745449:;
						++it;
						goto _iter_begin_1ca745449;
					}
					_iter_end_1ca745449:;
				};
				if (((*(_168317_f))._field_Result != nullptr)) {
					return static__1b9ca8506_exist(_165422_ident, &((*(_168317_f))._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1b9c92655_Tup((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1ca73cd04:;
			{
				jule::Ptr<_1b9c9ad9a_Tuple> _169717_tup = _1b9c92655_Tup((*(_165439_k)).ptr());;
				{
					auto expr = &((*(_169717_tup))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ca744899:;
					if (it != expr_end) {
						jule::Ptr<_1b9c8d1cd_TypeKind> _169825_t = *it;
						{
							if (static__1b9ca8506_exist(_165422_ident, &(_169825_t))) {
								return true;;
							};
						}
						_iter_next_1ca744899:;
						++it;
						goto _iter_begin_1ca744899;
					}
					_iter_end_1ca744899:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1ca73c562:;
			{
				return false;;
			}
		}
		_match_end_1ca73c4a7:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1b9ca7c20_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ba79de1e_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ba7e760a_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1ba7e860b_stop(_1ba7e7e9b_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1ba7e8892_stopped(_1ba7e7e9b_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1ba7e8b28_finished(_1ba7e7e9b_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1ba7e8dae_isLastSt(_1ba7e7e9b_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1ba7e9222_pushErr(_1ba7e7e9b_scopeParser* _self_, jule::Ptr<_1b9b032eb_Token> _18926_token, jule::Str _18941_fmt) {
	_1ba81b981_pushErr((*(_self_))._field_p.ptr(), _18926_token, _18941_fmt, jule::Slice<jule::Any>());
}



inline void _1ba7e9585_pushSuggestion(_1ba7e7e9b_scopeParser* _self_, jule::Str _19433_fmt, jule::Slice<jule::Any> _19446_args) {
	_1ba81bce4_pushSuggestion((*(_self_))._field_p.ptr(), _19433_fmt, _19446_args);
}



inline void _1ba7e983d_insertAsNext(_1ba7e7e9b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _19836_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1ba7e760a_stmt>(_1ba7e760a_stmt{._field_tokens=(*(_19836_tokens)), });
}



inline jule::Ptr<_1ba7e760a_stmt> _1ba7e9ac4_next(_1ba7e7e9b_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1b9b287d8_ScopeTree> _1ba7e9ec0_buildScope(_1ba7e7e9b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _20834_tokens, jule::Ptr<_1b9b032eb_Token> _20856_end) {
	jule::Ptr<_1b9b287d8_ScopeTree> _20913_s = _1ba7e6395_newScope();;
	(*(_20913_s))._field_Parent=(*(_self_))._field_s;
	(*(_20913_s))._field_End=_20856_end;
	_1ba7e7e9b_scopeParser _21213_ssp = _1ba7e7e9b_scopeParser{._field_p=(*(_self_))._field_p, };;
	_1ba804a02_build(&_21213_ssp, _20834_tokens, &(_20913_s));
	return _20913_s;;
}



inline jule::Ptr<_1b9b2b555_VarDecl> _1ba7ea311_buildVarSt(_1ba7e7e9b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _21934_tokens) {
	jule::Ptr<_1b9b2b555_VarDecl> _22013_v = _1ba81e80d_buildVar((*(_self_))._field_p, (*(_21934_tokens)));;
	(*(_22013_v))._field_Scope=(*(_self_))._field_s;
	return _22013_v;;
}



inline jule::Ptr<_1b9b2b92e_RetSt> _1ba7ea652_buildRetSt(_1ba7e7e9b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _22533_tokens) {
	jule::Ptr<_1b9b2b92e_RetSt> _22613_st = jule::new_ptr<_1b9b2b92e_RetSt>(_1b9b2b92e_RetSt{._field_Token=_22533_tokens[0LL], });;
	if ((_22533_tokens.len() > 1LL)) {
		(_22533_tokens).mut_slice(1LL);;
		(*(_22613_st))._field_Expr=_1ba81c135_buildExpr((*(_self_))._field_p, &(_22533_tokens));
	};
	return _22613_st;;
}



inline jule::Ptr<_1b9b2c0c2_Iter> _1ba7ea993_buildWhileNextIter(_1ba7e7e9b_scopeParser* _self_, jule::Ptr<_1ba7e760a_stmt>* _23642_s) {
	jule::Ptr<_1b9b2c0c2_Iter> _23713_it = jule::new_ptr<_1b9b2c0c2_Iter>(_1b9b2c0c2_Iter{._field_Token=(*((*(_23642_s))))._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _24013_tokens = (*((*(_23642_s))))._field_tokens.slice(1LL);;
	jule::Ptr<_1b9b2c8ec_WhileKind> _24113_kind = jule::new_ptr<_1b9b2c8ec_WhileKind>();;
	if ((_24013_tokens.len() > 0LL)) {
		(*(_24113_kind))._field_Expr=_1ba81c135_buildExpr((*(_self_))._field_p, &(_24013_tokens));
	};
	if (_1ba7e8dae_isLastSt(_self_)) {
		_1ba7e9222_pushErr(_self_, (*(_23713_it))._field_Token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	_24013_tokens=(*(_1ba7e9ac4_next(_self_)))._field_tokens;
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _25313_stTokens = _1ba8161c8_getBlockExpr(&(_24013_tokens));;
	if ((_25313_stTokens.len() > 0LL)) {
		jule::Ptr<_1ba7e760a_stmt> _25517_stmt = jule::new_ptr<_1ba7e760a_stmt>(_1ba7e760a_stmt{._field_tokens=_25313_stTokens, ._field_terminated=(*((*(_23642_s))))._field_terminated});;
		(*(_24113_kind))._field_NextToken=_25313_stTokens[0LL];
		(*(_24113_kind))._field_Next=_1ba80468e_buildSt(_self_, &(_25517_stmt));
	};
	jule::I32 _26313_i = _25313_stTokens.len();;
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _26413_blockTokens = _1ba8193b8_range(&(_26313_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_24013_tokens));;
	if ((_26413_blockTokens == nullptr)) {
		_1ba7e860b_stop(_self_);
		_1ba7e9222_pushErr(_self_, (*(_23713_it))._field_Token, jule::Str::lit("body is not exist", 17));
		_1ba7e9585_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_26313_i < _24013_tokens.len())) {
		_1ba7e9222_pushErr(_self_, _24013_tokens[_26313_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_23713_it))._field_Scope=_1ba7e9ec0_buildScope(_self_, &(_26413_blockTokens), _24013_tokens[(_26313_i - 1LL)]);
	(*(_23713_it))._field_Kind=jule::Any(_24113_kind, &__jule_any_type37);
	return _23713_it;;
}



inline jule::Ptr<_1b9b2c8ec_WhileKind> _1ba7eacd4_buildWhileIterKind(_1ba7e7e9b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _28142_tokens) {
	return jule::new_ptr<_1b9b2c8ec_WhileKind>(_1b9b2c8ec_WhileKind{._field_Expr=_1ba81c135_buildExpr((*(_self_))._field_p, _28142_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>> _1ba7eb125_getRangeKindKeysTokens(_1ba7e7e9b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _28746_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>> _28813_vars;;
	jule::Slice<_23d21115a_Log> _28819_errs;;
	({
		__jule_tuple_ssx_1b9b032eb_Token__jule_tuple_s_23d21115a_Log __jule_assign_result = _1ba819b38_parts(_28746_toks, static_cast<jule::U32>(5LLU), true);
		_28813_vars = __jule_assign_result.__jule_result_arg0;
		_28819_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*((*(_self_))._field_p))._field_errors).append(_28819_errs);;
	return _28813_vars;;
}



inline jule::Ptr<_1b9b2b555_VarDecl> _1ba7eb466_buildRangeKindKey(_1ba7e7e9b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _29341_tokens) {
	if (((*(_29341_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1b9b2b555_VarDecl> _29713_key = jule::new_ptr<_1b9b2b555_VarDecl>(_1b9b2b555_VarDecl{._field_Token=(*(_29341_tokens))[0LL], });;
	if (((*((*(_29713_key))._field_Token))._field_Id == static_cast<jule::U32>(32LLU))) {
		(*(_29713_key))._field_Mutable=true;
		if (((*(_29341_tokens)).len() == 1LL)) {
			_1ba7e9222_pushErr(_self_, (*(_29713_key))._field_Token, jule::Str::lit("invalid syntax", 14));
		};
		(*(_29713_key))._field_Token=(*(_29341_tokens))[1LL];
	} else if (((*(_29341_tokens)).len() > 1LL)) {
		_1ba7e9222_pushErr(_self_, (*(_29341_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	if (((*((*(_29713_key))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ba7e9222_pushErr(_self_, (*(_29713_key))._field_Token, jule::Str::lit("invalid syntax", 14));
		_1ba7e9585_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_29713_key))._field_Ident=(*((*(_29713_key))._field_Token))._field_Kind;
	return _29713_key;;
}



inline jule::Slice<jule::Ptr<_1b9b2b555_VarDecl>> _1ba7eb7a7_buildRangeKindKeys(_1ba7e7e9b_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>>* _31842_parts) {
	jule::Slice<jule::Ptr<_1b9b2b555_VarDecl>> _31917_keys = nullptr;;
	{
		auto expr = _31842_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca911d41:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1b9b032eb_Token>> _32021_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_1b9b2b555_VarDecl>> &__jule_push_dest = _31917_keys; __jule_push_dest.push(_1ba7eb466_buildRangeKindKey(_self_, &(_32021_tokens))); };
			}
			_iter_next_1ca911d41:;
			++it;
			goto _iter_begin_1ca911d41;
		}
		_iter_end_1ca911d41:;
	};
	return _31917_keys;;
}



inline void _1ba7ebb1a_setupRangeKindKeysPlain(_1ba7e7e9b_scopeParser* _self_, jule::Ptr<_1b9b2d304_RangeKind>* _32647_rng, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _32669_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>> _32713_keyTokens = _1ba7eb125_getRangeKindKeysTokens(_self_, _32669_tokens);;
	if ((_32713_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_32713_keyTokens.len() > 2LL)) {
		_1ba7e9222_pushErr(_self_, (*((*(_32647_rng))))._field_InToken, jule::Str::lit("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1b9b2b555_VarDecl>> _33413_keys = _1ba7eb7a7_buildRangeKindKeys(_self_, &(_32713_keyTokens));;
	(*((*(_32647_rng))))._field_KeyA=_33413_keys[0LL];
	if ((_33413_keys.len() > 1LL)) {
		(*((*(_32647_rng))))._field_KeyB=_33413_keys[1LL];
	};
}



inline void _1ba7ebe7d_setupRangeKindKeysExplicit(_1ba7e7e9b_scopeParser* _self_, jule::Ptr<_1b9b2d304_RangeKind>* _34150_rng, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _34172_tokens) {
	jule::I32 _34213_i = 0LL;;
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _34313_rang = _1ba8193b8_range(&(_34213_i), static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), _34172_tokens);;
	if ((_34213_i < (*(_34172_tokens)).len())) {
		_1ba7e9222_pushErr(_self_, (*((*(_34150_rng))))._field_InToken, jule::Str::lit("invalid syntax", 14));
	};
	_1ba7ebb1a_setupRangeKindKeysPlain(_self_, _34150_rng, &(_34313_rang));
}



inline void _1ba7ec2e1_setupRangeKindKeys(_1ba7e7e9b_scopeParser* _self_, jule::Ptr<_1b9b2d304_RangeKind>* _35042_rng, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _35064_tokens) {
	if (((*((*(_35064_tokens))[0LL]))._field_Id == static_cast<jule::U32>(74LLU))) {
		_1ba7ebe7d_setupRangeKindKeysExplicit(_self_, _35042_rng, _35064_tokens);
		return;;
	};
	_1ba7ebb1a_setupRangeKindKeysPlain(_self_, _35042_rng, _35064_tokens);
}



inline jule::Ptr<_1b9b2d304_RangeKind> _1ba7ec797_buildRangeIterKind(_1ba7e7e9b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _35842_var_tokens, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _35914_exprTokens, jule::Ptr<_1b9b032eb_Token>* _35941_inToken) {
	jule::Ptr<_1b9b2d304_RangeKind> _36013_rng = jule::new_ptr<_1b9b2d304_RangeKind>(_1b9b2d304_RangeKind{._field_InToken=(*(_35941_inToken)), });;
	if (((*(_35914_exprTokens)).len() == 0LL)) {
		_1ba7e9222_pushErr(_self_, (*(_36013_rng))._field_InToken, jule::Str::lit("expression missing", 18));
		return _36013_rng;;
	};
	(*(_36013_rng))._field_Expr=_1ba81c135_buildExpr((*(_self_))._field_p, _35914_exprTokens);
	if (((*(_35842_var_tokens)).len() > 0LL)) {
		_1ba7ec2e1_setupRangeKindKeys(_self_, &(_36013_rng), _35842_var_tokens);
	};
	return _36013_rng;;
}



inline jule::Any _1ba7ecb93_buildCommonIterKind(_1ba7e7e9b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _37443_tokens, jule::Ptr<_1b9b032eb_Token>* _37462_err_tok) {
	jule::I32 _37513_braceN = 0LL;;
	{
		auto expr = _37443_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca91ab08:;
		if (it != expr_end) {
			jule::I32 _37614_i = it - expr->begin();
			jule::Ptr<_1b9b032eb_Token> _37621_tok = *it;
			{
				{
					auto &_match_expr{ (*(_37621_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1ca91bc4c:;
						{
							(_37513_braceN)++;
							goto _iter_next_1ca91ab08;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1ca91bcc4:;
						{
							(_37513_braceN)--;
						}
					}
					_match_end_1ca91bb81:;
				};
				if ((_37513_braceN != 0LL)) {
					goto _iter_next_1ca91ab08;
				};
				{
					auto &_match_expr{ (*(_37621_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(12LLU)) {
						_case_begin_1ca91b862:;
						{
							jule::Slice<jule::Ptr<_1b9b032eb_Token>> _39321_declTokens = (*(_37443_tokens)).slice(0LL, _37614_i);;
							jule::Slice<jule::Ptr<_1b9b032eb_Token>> _39421_exprTokens = (*(_37443_tokens)).slice((_37614_i + 1LL));;
							return jule::Any(_1ba7ec797_buildRangeIterKind(_self_, &(_39321_declTokens), &(_39421_exprTokens), &(_37621_tok)), &__jule_any_type39);;
						}
					}
					_match_end_1ca91d237:;
				};
			}
			_iter_next_1ca91ab08:;
			++it;
			_37614_i++;
			goto _iter_begin_1ca91ab08;
		}
		_iter_end_1ca91ab08:;
	};
	return jule::Any(_1ba7eacd4_buildWhileIterKind(_self_, _37443_tokens), &__jule_any_type37);;
}



inline jule::Ptr<_1b9b2c0c2_Iter> _1ba7eced4_buildCommonIter(_1ba7e7e9b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _40138_tokens) {
	jule::Ptr<_1b9b2c0c2_Iter> _40213_it = jule::new_ptr<_1b9b2c0c2_Iter>(_1b9b2c0c2_Iter{._field_Token=_40138_tokens[0LL], });;
	(_40138_tokens).mut_slice(1LL);;
	if ((_40138_tokens.len() == 0LL)) {
		_1ba7e860b_stop(_self_);
		_1ba7e9222_pushErr(_self_, (*(_40213_it))._field_Token, jule::Str::lit("body is not exist", 17));
		_1ba7e9585_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _41213_exprTokens = _1ba8161c8_getBlockExpr(&(_40138_tokens));;
	if ((_41213_exprTokens.len() > 0LL)) {
		(*(_40213_it))._field_Kind=_1ba7ecb93_buildCommonIterKind(_self_, &(_41213_exprTokens), &((*(_40213_it))._field_Token));
	};
	jule::I32 _41613_i = _41213_exprTokens.len();;
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _41713_scopeTokens = _1ba8193b8_range(&(_41613_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_40138_tokens));;
	if ((_41713_scopeTokens == nullptr)) {
		_1ba7e860b_stop(_self_);
		_1ba7e9222_pushErr(_self_, (*(_40213_it))._field_Token, jule::Str::lit("body is not exist", 17));
		_1ba7e9585_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_41613_i < _40138_tokens.len())) {
		_1ba7e9222_pushErr(_self_, _40138_tokens[_41613_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_40213_it))._field_Scope=_1ba7e9ec0_buildScope(_self_, &(_41713_scopeTokens), _40138_tokens[(_41613_i - 1LL)]);
	return _40213_it;;
}



inline jule::Ptr<_1b9b2c0c2_Iter> _1ba7ed325_buildIterSt(_1ba7e7e9b_scopeParser* _self_, jule::Ptr<_1ba7e760a_stmt>* _43135_st) {
	if ((*((*(_43135_st))))._field_terminated) {
		return _1ba7ea993_buildWhileNextIter(_self_, _43135_st);;
	};
	return _1ba7eced4_buildCommonIter(_self_, (*((*(_43135_st))))._field_tokens);;
}



inline jule::Ptr<_1b9b2d6cd_BreakSt> _1ba7ed666_buildBreakSt(_1ba7e7e9b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _43836_tokens) {
	jule::Ptr<_1b9b2d6cd_BreakSt> _43913_brk = jule::new_ptr<_1b9b2d6cd_BreakSt>(_1b9b2d6cd_BreakSt{._field_Token=(*(_43836_tokens))[0LL], });;
	if (((*(_43836_tokens)).len() > 1LL)) {
		if (((*((*(_43836_tokens))[1LL]))._field_Id != static_cast<jule::U32>(1LLU))) {
			_1ba7e9222_pushErr(_self_, (*(_43836_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_1ba7e9585_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_43913_brk))._field_Label=(*(_43836_tokens))[1LL];
			if (((*(_43836_tokens)).len() > 2LL)) {
				_1ba7e9222_pushErr(_self_, (*(_43836_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _43913_brk;;
}



inline jule::Ptr<_1b9b2daa7_ContSt> _1ba7ed9a7_buildContSt(_1ba7e7e9b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _45635_tokens) {
	jule::Ptr<_1b9b2daa7_ContSt> _45713_cont = jule::new_ptr<_1b9b2daa7_ContSt>(_1b9b2daa7_ContSt{._field_Token=(*(_45635_tokens))[0LL], });;
	if (((*(_45635_tokens)).len() > 1LL)) {
		if (((*((*(_45635_tokens))[1LL]))._field_Id != static_cast<jule::U32>(1LLU))) {
			_1ba7e9222_pushErr(_self_, (*(_45635_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_1ba7e9585_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_45713_cont))._field_Label=(*(_45635_tokens))[1LL];
			if (((*(_45635_tokens)).len() > 2LL)) {
				_1ba7e9222_pushErr(_self_, (*(_45635_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _45713_cont;;
}



inline jule::Ptr<_1b9b2e05d_If> _1ba7edce8_buildIf(_1ba7e7e9b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _47431_tokens) {
	jule::Ptr<_1b9b2e05d_If> _47513_model = jule::new_ptr<_1b9b2e05d_If>(_1b9b2e05d_If{._field_Token=(*(_47431_tokens))[0LL], });;
	((*(_47431_tokens))).mut_slice(1LL);;
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _47913_exprTokens = _1ba8161c8_getBlockExpr(_47431_tokens);;
	jule::I32 _48013_i = 0LL;;
	if ((_47913_exprTokens.len() == 0LL)) {
		_1ba7e9222_pushErr(_self_, (*(_47513_model))._field_Token, jule::Str::lit("expression missing", 18));
	} else {
		_48013_i=static_cast<jule::I32>(_47913_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _48613_scopeTokens = _1ba8193b8_range(&(_48013_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _47431_tokens);;
	if ((_48613_scopeTokens == nullptr)) {
		_1ba7e860b_stop(_self_);
		_1ba7e9222_pushErr(_self_, (*(_47513_model))._field_Token, jule::Str::lit("body is not exist", 17));
		_1ba7e9585_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b9b032eb_Token> _49313_end = (*(_47431_tokens))[(_48013_i - 1LL)];;
	if ((_48013_i < (*(_47431_tokens)).len())) {
		if (((*((*(_47431_tokens))[_48013_i]))._field_Id == static_cast<jule::U32>(14LLU))) {
			((*(_47431_tokens))).mut_slice(_48013_i);;
		} else {
			_1ba7e9222_pushErr(_self_, (*(_47431_tokens))[_48013_i], jule::Str::lit("invalid syntax", 14));
			(*(_47431_tokens))=nullptr;
		};
	};
	(*(_47513_model))._field_Expr=_1ba81c135_buildExpr((*(_self_))._field_p, &(_47913_exprTokens));
	(*(_47513_model))._field_Scope=_1ba7e9ec0_buildScope(_self_, &(_48613_scopeTokens), _49313_end);
	return _47513_model;;
}



inline jule::Ptr<_1b9b2e437_Else> _1ba7ee139_buildElse(_1ba7e7e9b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _50733_tokens) {
	jule::Ptr<_1b9b2e437_Else> _50813_els = jule::new_ptr<_1b9b2e437_Else>(_1b9b2e437_Else{._field_Token=(*(_50733_tokens))[0LL], });;
	((*(_50733_tokens))).mut_slice(1LL);;
	jule::I32 _51213_i = 0LL;;
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _51313_scopeTokens = _1ba8193b8_range(&(_51213_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _50733_tokens);;
	if ((_51313_scopeTokens == nullptr)) {
		if ((_51213_i < (*(_50733_tokens)).len())) {
			_1ba7e9222_pushErr(_self_, (*(_50813_els))._field_Token, jule::Str::lit("else's cannot have any expression", 33));
		} else {
			_1ba7e860b_stop(_self_);
			_1ba7e9222_pushErr(_self_, (*(_50813_els))._field_Token, jule::Str::lit("body is not exist", 17));
			_1ba7e9585_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_51213_i < (*(_50733_tokens)).len())) {
		_1ba7e9222_pushErr(_self_, (*(_50733_tokens))[_51213_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_50813_els))._field_Scope=_1ba7e9ec0_buildScope(_self_, &(_51313_scopeTokens), (*(_50733_tokens))[(_51213_i - 1LL)]);
	return _50813_els;;
}



inline jule::Ptr<_1b9b2e8dd_Conditional> _1ba7ee47a_buildIfElseChain(_1ba7e7e9b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _53139_tokens) {
	jule::Ptr<_1b9b2e8dd_Conditional> _53213_chain = jule::new_ptr<_1b9b2e8dd_Conditional>(_1b9b2e8dd_Conditional{._field_Head=_1ba7edce8_buildIf(_self_, &(_53139_tokens)), });;
	if (((*(_53213_chain))._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53139_tokens.len() != 0LL)) {
		{
			if (((*(_53139_tokens[0LL]))._field_Id != static_cast<jule::U32>(14LLU))) {
				goto _iter_end_1ca936085;
			};
			if (((_53139_tokens.len() > 1LL) && ((*(_53139_tokens[1LL]))._field_Id == static_cast<jule::U32>(13LLU)))) {
				(_53139_tokens).mut_slice(1LL);;
				jule::Ptr<_1b9b2e05d_If> _54421_elif = _1ba7edce8_buildIf(_self_, &(_53139_tokens));;
				{ jule::Slice<jule::Ptr<_1b9b2e05d_If>> &__jule_push_dest = (*(_53213_chain))._field_Tail; __jule_push_dest.push(_54421_elif); };
				goto _iter_next_1ca936085;
			};
			(*(_53213_chain))._field_Default=_1ba7ee139_buildElse(_self_, &(_53139_tokens));
			goto _iter_end_1ca936085;
		}
	_iter_next_1ca936085:;
	}
	_iter_end_1ca936085:;;
	return _53213_chain;;
}



inline jule::Ptr<_1b9b1caeb_Expr> _1ba7ee7bb_buildCoCallSt(_1ba7e7e9b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _55436_tokens) {
	jule::Ptr<_1b9b032eb_Token> _5559_token = _55436_tokens[0LL];;
	(_55436_tokens).mut_slice(1LL);;
	jule::Ptr<_1b9b1caeb_Expr> _55713_e = _1ba81c135_buildExpr((*(_self_))._field_p, &(_55436_tokens));;
	if ((_55713_e == nullptr)) {
		return _55713_e;;
	};
	{
		auto &_match_expr{ (*(_55713_e))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1ca93a067:;
			{
				(*((*(_55713_e))._field_Kind.cast_ptr<_1b9b21825_FnCallExpr>(&__jule_any_type107)))._field_IsCo=true;
			}
		}
		else {
			_case_begin_1ca93a5d9:;
			{
				_1ba7e9222_pushErr(_self_, _5559_token, jule::Str::lit("statement must have function call expression", 44));
			}
		}
		_match_end_1ca93a584:;
	};
	return _55713_e;;
}



inline jule::Ptr<_1b9b26275_GotoSt> _1ba7eeb0c_buildGotoSt(_1ba7e7e9b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _57035_tokens) {
	jule::Ptr<_1b9b26275_GotoSt> _57113_gt = jule::new_ptr<_1b9b26275_GotoSt>(_1b9b26275_GotoSt{._field_Token=(*(_57035_tokens))[0LL], });;
	if (((*(_57035_tokens)).len() == 1LL)) {
		_1ba7e9222_pushErr(_self_, (*(_57113_gt))._field_Token, jule::Str::lit("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if (((*(_57035_tokens)).len() > 2LL)) {
		_1ba7e9222_pushErr(_self_, (*(_57035_tokens))[2LL], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_1b9b032eb_Token> _58013_identToken = (*(_57035_tokens))[1LL];;
	if (((*(_58013_identToken))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ba7e9222_pushErr(_self_, _58013_identToken, jule::Str::lit("invalid syntax", 14));
		_1ba7e9585_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return _57113_gt;;
	};
	(*(_57113_gt))._field_Label=_58013_identToken;
	return _57113_gt;;
}



inline jule::Ptr<_1b9b26572_FallSt> _1ba7eee4d_buildFallSt(_1ba7e7e9b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _59035_tokens) {
	jule::Ptr<_1b9b26572_FallSt> _59113_fll = jule::new_ptr<_1b9b26572_FallSt>(_1b9b26572_FallSt{._field_Token=(*(_59035_tokens))[0LL]});;
	if (((*(_59035_tokens)).len() > 1LL)) {
		_1ba7e9222_pushErr(_self_, (*(_59035_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	return _59113_fll;;
}



inline jule::Ptr<_1b9b3012a_TypeAliasDecl> _1ba80028e_buildTypeAliasSt(_1ba7e7e9b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _60040_tokens) {
	jule::Ptr<_1b9b3012a_TypeAliasDecl> _60113_tad = _1ba81d8c8_buildTypeAliasDecl((*(_self_))._field_p, _60040_tokens);;
	(*(_60113_tad))._field_Scope=(*(_self_))._field_s;
	return _60113_tad;;
}



inline void _1ba800767_pushCaseExpr(_1ba7e7e9b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _60635_tokens, jule::Ptr<_1b9b032eb_Token> _60657_token, jule::Bool _6079_typeMatch, jule::Slice<jule::Ptr<_1b9b1caeb_Expr>>* _60731_exprs) {
	if ((_60635_tokens.len() == 0LL)) {
		return;;
	};
	if (_6079_typeMatch) {
		jule::I32 _61317_i = 0LL;;
		jule::Ptr<_1b9b187b7_TypeDecl> _61417_t;;
		jule::Bool _61420_ok = false;;
		({
			__jule_tuple_x_1b9b187b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ba81d587_buildType((*(_self_))._field_p, &(_60635_tokens), (&(_61317_i)), true);
			_61417_t = __jule_assign_result.__jule_result_arg0;
			_61420_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_61420_ok) {
			{ jule::Slice<jule::Ptr<_1b9b1caeb_Expr>> &__jule_push_dest = (*(_60731_exprs)); __jule_push_dest.push(jule::new_ptr<_1b9b1caeb_Expr>(_1b9b1caeb_Expr{._field_Token=_60635_tokens[0LL], ._field_End=_60635_tokens[(_60635_tokens.len() - 1LL)], ._field_Kind=jule::Any(_61417_t, &__jule_any_type88)})); };
			if ((_61317_i < _60635_tokens.len())) {
				_1ba7e9222_pushErr(_self_, _60635_tokens[_61317_i], jule::Str::lit("invalid syntax", 14));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_1b9b1caeb_Expr>> &__jule_push_dest = (*(_60731_exprs)); __jule_push_dest.push(_1ba81c135_buildExpr((*(_self_))._field_p, &(_60635_tokens))); };
}



inline jule::Slice<jule::Ptr<_1b9b1caeb_Expr>> _1ba800c1d_buildCaseExprs(_1ba7e7e9b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _63038_tokens, jule::Ptr<_1b9b032eb_Token>* _63061_colon, jule::Bool _63076_typeMatch) {
	jule::Slice<jule::Ptr<_1b9b1caeb_Expr>> _63113_exprs = jule::Slice<jule::Ptr<_1b9b1caeb_Expr>>::alloc(0LL, 1LL);;
	jule::I32 _63313_braceN = 0LL;;
	jule::I32 _63413_j = 0LL;;
	{
		auto expr = _63038_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca945e96:;
		if (it != expr_end) {
			jule::I32 _63514_i = it - expr->begin();
			jule::Ptr<_1b9b032eb_Token> _63521_tok = *it;
			{
				{
					auto &_match_expr{ (*(_63521_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1ca94744d:;
						{
							(_63313_braceN)++;
							goto _iter_next_1ca945e96;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(75LLU) || _match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU)) {
						_case_begin_1ca9474c5:;
						{
							(_63313_braceN)--;
							goto _iter_next_1ca945e96;
						}
					}
					_match_end_1ca947382:;
				};
				if ((_63313_braceN != 0LL)) {
					goto _iter_next_1ca945e96;
				};
				{
					
					if (((*(_63521_tok))._field_Id == static_cast<jule::U32>(66LLU))) {
						_case_begin_1ca94887d:;
						{
							jule::Slice<jule::Ptr<_1b9b032eb_Token>> _65417_exprTokens = (*(_63038_tokens)).slice(_63413_j, _63514_i);;
							if ((_65417_exprTokens.len() == 0LL)) {
								_1ba7e9222_pushErr(_self_, _63521_tok, jule::Str::lit("expression missing", 18));
							} else {
								_1ba800767_pushCaseExpr(_self_, (*(_63038_tokens)).slice(_63413_j, _63514_i), _63521_tok, _63076_typeMatch, &(_63113_exprs));
							};
							_63413_j=static_cast<jule::I32>((_63514_i + 1LL));
						}
					}
					else if (((*(_63521_tok))._field_Id == static_cast<jule::U32>(8LLU))) {
						_case_begin_1ca948905:;
						{
							(*(_63061_colon))=_63521_tok;
							_1ba800767_pushCaseExpr(_self_, (*(_63038_tokens)).slice(_63413_j, _63514_i), _63521_tok, _63076_typeMatch, &(_63113_exprs));
							((*(_63038_tokens))).mut_slice((_63514_i + 1LL));;
							return _63113_exprs;;
						}
					}
					_match_end_1ca948361:;
				};
			}
			_iter_next_1ca945e96:;
			++it;
			_63514_i++;
			goto _iter_begin_1ca945e96;
		}
		_iter_end_1ca945e96:;
	};
	_1ba7e9222_pushErr(_self_, (*(_63038_tokens))[0LL], jule::Str::lit("invalid syntax", 14));
	(*(_63038_tokens))=nullptr;
	return nullptr;;
}



inline jule::Ptr<_1b9b287d8_ScopeTree> _1ba80105e_buildCaseScope(_1ba7e7e9b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _67338_tokens) {
	jule::I32 _67413_n = 0LL;;
	for (;;) {
		{
			jule::I32 _67617_i = 0LL;;
			jule::Slice<jule::Ptr<_1b9b032eb_Token>> _67717_next;;
			({
				__jule_tuple_sx_1b9b032eb_Token__jule_tuple_bool __jule_assign_result = _1ba7e72ca_skipSt(&(_67617_i), (*(_67338_tokens)).slice(_67413_n));
				_67717_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_67717_next.len() == 0LL)) {
				goto _iter_end_1ca94b9c4;
			};
			jule::Ptr<_1b9b032eb_Token> _68113_tok = _67717_next[0LL];;
			if (((*(_68113_tok))._field_Id != static_cast<jule::U32>(66LLU))) {
				_67413_n+=_67617_i;
				goto _iter_next_1ca94b9c4;
			};
			jule::Slice<jule::Ptr<_1b9b032eb_Token>> _68617_scopeTokens = (*(_67338_tokens)).slice(0LL, _67413_n);;
			jule::Ptr<_1b9b287d8_ScopeTree> _68717_scope = _1ba7e9ec0_buildScope(_self_, &(_68617_scopeTokens), (*(_67338_tokens))[_67413_n]);;
			((*(_67338_tokens))).mut_slice(_67413_n);;
			return _68717_scope;;
		}
	_iter_next_1ca94b9c4:;
	}
	_iter_end_1ca94b9c4:;;
	jule::Ptr<_1b9b032eb_Token> _69117_end;;
	if (((*(_67338_tokens)).len() > 0LL)) {
		_69117_end=(*(_67338_tokens))[((*(_67338_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1b9b287d8_ScopeTree> _69513_scope = _1ba7e9ec0_buildScope(_self_, _67338_tokens, _69117_end);;
	(*(_67338_tokens))=nullptr;
	return _69513_scope;;
}



inline __jule_tuple_x_1b9b305d1_Case__jule_tuple_bool _1ba80145a_buildCase(_1ba7e7e9b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _70033_tokens, jule::Bool _70051_typeMatch) {
	__jule_tuple_x_1b9b305d1_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1b9b305d1_Case> _70113_c = jule::new_ptr<_1b9b305d1_Case>(_1b9b305d1_Case{._field_Token=(*(_70033_tokens))[0LL], });;
	((*(_70033_tokens))).mut_slice(1LL);;
	jule::Ptr<_1b9b032eb_Token> _70517_colon = nullptr;;
	(*(_70113_c))._field_Exprs=_1ba800c1d_buildCaseExprs(_self_, _70033_tokens, &(_70517_colon), _70051_typeMatch);
	(*(_70113_c))._field_Scope=_1ba80105e_buildCaseScope(_self_, _70033_tokens);
	if (((*((*(_70113_c))._field_Scope))._field_End == nullptr)) {
		(*((*(_70113_c))._field_Scope))._field_End=_70517_colon;
	};
	jule::Bool _7119_isDefault = ((*(_70113_c))._field_Exprs.len() == 0LL);;
	__jule_func_result.__jule_result_arg0 = _70113_c;
	__jule_func_result.__jule_result_arg1 = _7119_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1b9b305d1_Case__jule_tuple_x_1b9b2e437_Else _1ba801856_buildCases(_1ba7e7e9b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _71533_tokens, jule::Bool _71551_typeMatch) {
	__jule_tuple_sx_1b9b305d1_Case__jule_tuple_x_1b9b2e437_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1b9b305d1_Case>> _71617_cases = nullptr;;
	jule::Ptr<_1b9b2e437_Else> _71717_def = nullptr;;
	jule::Bool _71813_defNotLast = false;;
	while ((_71533_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1b9b032eb_Token> _72017_tok = _71533_tokens[0LL];;
			if (((*(_72017_tok))._field_Id != static_cast<jule::U32>(66LLU))) {
				_1ba7e9222_pushErr(_self_, _72017_tok, jule::Str::lit("invalid syntax", 14));
				goto _iter_end_1ca953db6;
			};
			jule::Ptr<_1b9b305d1_Case> _72517_c;;
			jule::Bool _72520_isDefault = false;;
			({
				__jule_tuple_x_1b9b305d1_Case__jule_tuple_bool __jule_assign_result = _1ba80145a_buildCase(_self_, &(_71533_tokens), _71551_typeMatch);
				_72517_c = __jule_assign_result.__jule_result_arg0;
				_72520_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72520_isDefault) {
				(*(_72517_c))._field_Token=_72017_tok;
				if ((_71717_def == nullptr)) {
					_71717_def=jule::new_ptr<_1b9b2e437_Else>(_1b9b2e437_Else{._field_Token=(*(_72517_c))._field_Token, ._field_Scope=(*(_72517_c))._field_Scope});
				} else {
					_1ba7e9222_pushErr(_self_, _72017_tok, jule::Str::lit("invalid syntax", 14));
				};
			} else {
				_71813_defNotLast=(_71813_defNotLast || (_71717_def != nullptr));
				{ jule::Slice<jule::Ptr<_1b9b305d1_Case>> &__jule_push_dest = _71617_cases; __jule_push_dest.push(_72517_c); };
			};
		}
	_iter_next_1ca953db6:;
	}
	_iter_end_1ca953db6:;;
	if (_71813_defNotLast) {
		_1ba7e9222_pushErr(_self_, (*(_71717_def))._field_Token, jule::Str::lit("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71617_cases;
	__jule_func_result.__jule_result_arg1 = _71717_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1b9b30d1d_MatchCase> _1ba801b97_buildMatchCase(_1ba7e7e9b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _74937_tokens) {
	jule::Ptr<_1b9b30d1d_MatchCase> _75013_m = jule::new_ptr<_1b9b30d1d_MatchCase>(_1b9b30d1d_MatchCase{._field_Token=_74937_tokens[0LL], });;
	(_74937_tokens).mut_slice(1LL);;
	if (((_74937_tokens.len() > 0LL) && ((*(_74937_tokens[0LL]))._field_Id == static_cast<jule::U32>(7LLU)))) {
		(*(_75013_m))._field_TypeMatch=true;
		(_74937_tokens).mut_slice(1LL);;
	};
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _76013_exprTokens = _1ba8161c8_getBlockExpr(&(_74937_tokens));;
	if ((_76013_exprTokens.len() > 0LL)) {
		(*(_75013_m))._field_Expr=_1ba81c135_buildExpr((*(_self_))._field_p, &(_76013_exprTokens));
	} else if ((*(_75013_m))._field_TypeMatch) {
		_1ba7e9222_pushErr(_self_, (*(_75013_m))._field_Token, jule::Str::lit("expression missing", 18));
	};
	jule::I32 _76713_i = _76013_exprTokens.len();;
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _76813_blockToks = _1ba8193b8_range(&(_76713_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_74937_tokens));;
	if ((_76813_blockToks == nullptr)) {
		_1ba7e860b_stop(_self_);
		_1ba7e9222_pushErr(_self_, (*(_75013_m))._field_Token, jule::Str::lit("body is not exist", 17));
		_1ba7e9585_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_76713_i < _74937_tokens.len())) {
		_1ba7e9222_pushErr(_self_, _74937_tokens[_76713_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_75013_m))._field_End=_74937_tokens[(_76713_i - 1LL)];
	({
		__jule_tuple_sx_1b9b305d1_Case__jule_tuple_x_1b9b2e437_Else __jule_assign_result = _1ba801856_buildCases(_self_, _76813_blockToks, (*(_75013_m))._field_TypeMatch);
		(*(_75013_m))._field_Cases = __jule_assign_result.__jule_result_arg0;
		(*(_75013_m))._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _75013_m;;
}



inline jule::Ptr<_1b9b287d8_ScopeTree> _1ba801ed8_buildScopeSt(_1ba7e7e9b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _78235_tokens) {
	jule::Bool _78313_isUnsafe = false;;
	jule::Bool _78413_isDeferred = false;;
	jule::Ptr<_1b9b032eb_Token> _78513_token = _78235_tokens[0LL];;
	if (((*(_78513_token))._field_Id == static_cast<jule::U32>(31LLU))) {
		_78313_isUnsafe=true;
		(_78235_tokens).mut_slice(1LL);;
		if ((_78235_tokens.len() == 0LL)) {
			_1ba7e9222_pushErr(_self_, _78513_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
		_78513_token=_78235_tokens[0LL];
		if (((*(_78513_token))._field_Id == static_cast<jule::U32>(33LLU))) {
			_78413_isDeferred=true;
			(_78235_tokens).mut_slice(1LL);;
			if ((_78235_tokens.len() == 0LL)) {
				_1ba7e9222_pushErr(_self_, _78513_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if (((*(_78513_token))._field_Id == static_cast<jule::U32>(33LLU))) {
		_78413_isDeferred=true;
		(_78235_tokens).mut_slice(1LL);;
		if ((_78235_tokens.len() == 0LL)) {
			_1ba7e9222_pushErr(_self_, _78513_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I32 _81113_i = 0LL;;
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _81213_scopeTokens = _1ba8193b8_range(&(_81113_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_78235_tokens));;
	if ((_81213_scopeTokens == nullptr)) {
		_1ba7e9222_pushErr(_self_, _78513_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	} else if ((_81113_i < _78235_tokens.len())) {
		_1ba7e9222_pushErr(_self_, _78235_tokens[_81113_i], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_1b9b287d8_ScopeTree> _81913_scope = _1ba7e9ec0_buildScope(_self_, &(_81213_scopeTokens), _78235_tokens[(_81113_i - 1LL)]);;
	(*(_81913_scope))._field_Unsafety=_78313_isUnsafe;
	(*(_81913_scope))._field_Deferred=_78413_isDeferred;
	return _81913_scope;;
}



inline jule::Ptr<_1b9b25d9b_LabelSt> _1ba802329_buildLabelSt(_1ba7e7e9b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _82536_tokens) {
	jule::Ptr<_1b9b25d9b_LabelSt> _82613_lbl = jule::new_ptr<_1b9b25d9b_LabelSt>(_1b9b25d9b_LabelSt{._field_Token=(*(_82536_tokens))[0LL], ._field_Ident=(*((*(_82536_tokens))[0LL]))._field_Kind});;
	if (((*(_82536_tokens)).len() > 2LL)) {
		((*(_82536_tokens))).mut_slice(2LL);;
		_1ba7e983d_insertAsNext(_self_, _82536_tokens);
	};
	return _82613_lbl;;
}



inline __jule_tuple__1b9b27e25_StmtData__jule_tuple_bool _1ba80266a_buildIdSt(_1ba7e7e9b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _84033_tokens) {
	__jule_tuple__1b9b27e25_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_84033_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1b9b032eb_Token> _84513_token = (*(_84033_tokens))[1LL];;
	{
		auto &_match_expr{ (*(_84513_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(8LLU)) {
			_case_begin_1ca968293:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1ba802329_buildLabelSt(_self_, _84033_tokens), &__jule_any_type56);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ca968925:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1ba817839_assignInfo> _1ba8029ab_buildAssignInfo(_1ba7e7e9b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _85439_tokens) {
	jule::Ptr<_1ba817839_assignInfo> _85513_info = jule::new_ptr<_1ba817839_assignInfo>(_1ba817839_assignInfo{._field_ok=true});;
	jule::I32 _85813_braceN = 0LL;;
	{
		auto expr = _85439_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca969c78:;
		if (it != expr_end) {
			jule::I32 _85914_i = it - expr->begin();
			jule::Ptr<_1b9b032eb_Token> _85921_token = *it;
			{
				{
					auto &_match_expr{ (*(_85921_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1ca96ab14:;
						{
							(_85813_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1ca96ab8b:;
						{
							(_85813_braceN)--;
						}
					}
					_match_end_1ca96aa48:;
				};
				{
					
					if ((_85813_braceN > 0LL)) {
						_case_begin_1ca96ba05:;
						{
							goto _iter_next_1ca969c78;
						}
					}
					else if (((!(_1b9b08257_IsAssignOp((*(_85921_token))._field_Id))) && ((*(_85921_token))._field_Id != static_cast<jule::U32>(38LLU)))) {
						_case_begin_1ca96ba7c:;
						{
							goto _iter_next_1ca969c78;
						}
					}
					_match_end_1ca96b97d:;
				};
				(*(_85513_info))._field_l=(*(_85439_tokens)).slice(0LL, _85914_i);
				if (((*(_85513_info))._field_l.len() == 0LL)) {
					(*(_85513_info))._field_ok=false;
				};
				(*(_85513_info))._field_setter=_85921_token;
				if (((_85914_i + 1LL) >= (*(_85439_tokens)).len())) {
					(*(_85513_info))._field_r=nullptr;
					(*(_85513_info))._field_ok=_1b9b07e8d_IsPostfixOp((*((*(_85513_info))._field_setter))._field_Id);
					goto _iter_end_1ca969c78;
				};
				(*(_85513_info))._field_r=(*(_85439_tokens)).slice((_85914_i + 1LL));
				if (_1b9b07e8d_IsPostfixOp((*((*(_85513_info))._field_setter))._field_Id)) {
					if (((*(_85513_info))._field_r.len() > 0LL)) {
						_1ba7e9222_pushErr(_self_, (*(_85513_info))._field_r[0LL], jule::Str::lit("invalid syntax", 14));
						(*(_85513_info))._field_r=nullptr;
					};
				};
				goto _iter_end_1ca969c78;
			}
			_iter_next_1ca969c78:;
			++it;
			_85914_i++;
			goto _iter_begin_1ca969c78;
		}
		_iter_end_1ca969c78:;
	};
	return _85513_info;;
}



inline jule::Ptr<_1b9b26bd2_AssignLeft> _1ba802cec_buildAssignL(_1ba7e7e9b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _89936_tokens) {
	jule::Ptr<_1b9b26bd2_AssignLeft> _90013_l = jule::new_ptr<_1b9b26bd2_AssignLeft>(_1b9b26bd2_AssignLeft{._field_Token=(*(_89936_tokens))[0LL], });;
	if (((*((*(_89936_tokens))[0LL]))._field_Id == static_cast<jule::U32>(1LLU))) {
		(*(_90013_l))._field_Ident=(*((*(_90013_l))._field_Token))._field_Kind;
	};
	(*(_90013_l))._field_Expr=_1ba81c135_buildExpr((*(_self_))._field_p, _89936_tokens);
	return _90013_l;;
}



inline jule::Slice<jule::Ptr<_1b9b26bd2_AssignLeft>> _1ba80313d_buildAssignLs(_1ba7e7e9b_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>>* _91037_parts) {
	jule::Slice<jule::Ptr<_1b9b26bd2_AssignLeft>> _91117_lefts = nullptr;;
	{
		auto expr = _91037_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca974425:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1b9b032eb_Token>> _91221_part = *it;
			{
				jule::Ptr<_1b9b26bd2_AssignLeft> _91317_l = _1ba802cec_buildAssignL(_self_, &(_91221_part));;
				{ jule::Slice<jule::Ptr<_1b9b26bd2_AssignLeft>> &__jule_push_dest = _91117_lefts; __jule_push_dest.push(_91317_l); };
			}
			_iter_next_1ca974425:;
			++it;
			goto _iter_begin_1ca974425;
		}
		_iter_end_1ca974425:;
	};
	return _91117_lefts;;
}



inline __jule_tuple_x_1b9b27265_AssignSt__jule_tuple_bool _1ba80347e_buildPlainAssign(_1ba7e7e9b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _91940_tokens) {
	__jule_tuple_x_1b9b27265_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ba817839_assignInfo> _92013_info = _1ba8029ab_buildAssignInfo(_self_, _91940_tokens);;
	if ((!((*(_92013_info))._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b9b27265_AssignSt> _92513_assign = jule::new_ptr<_1b9b27265_AssignSt>(_1b9b27265_AssignSt{._field_Setter=(*(_92013_info))._field_setter, });;
	if (((*((*(_92013_info))._field_setter))._field_Id == static_cast<jule::U32>(38LLU))) {
		(*(_92513_assign))._field_Declarative=true;
		(*(_92513_assign))._field_Right=_1ba81c135_buildExpr((*(_self_))._field_p, &((*(_92013_info))._field_r));
		jule::Bool _93313_ok = _1ba80387a_buildDeclAssign1(_self_, &((*(_92013_info))._field_l), &(_92513_assign));;
		__jule_func_result.__jule_result_arg0 = _92513_assign;
		__jule_func_result.__jule_result_arg1 = _93313_ok;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>> _93713_parts;;
	jule::Slice<_23d21115a_Log> _93720_errs;;
	({
		__jule_tuple_ssx_1b9b032eb_Token__jule_tuple_s_23d21115a_Log __jule_assign_result = _1ba819b38_parts(&((*(_92013_info))._field_l), static_cast<jule::U32>(5LLU), true);
		_93713_parts = __jule_assign_result.__jule_result_arg0;
		_93720_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_93720_errs.len() > 0LL)) {
		((*((*(_self_))._field_p))._field_errors).append(_93720_errs);;
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(*(_92513_assign))._field_Left=_1ba80313d_buildAssignLs(_self_, &(_93713_parts));
	if (((*(_92013_info))._field_r != nullptr)) {
		(*(_92513_assign))._field_Right=_1ba81c135_buildExpr((*(_self_))._field_p, &((*(_92013_info))._field_r));
	};
	__jule_func_result.__jule_result_arg0 = _92513_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _1ba80387a_buildDeclAssign1(_1ba7e7e9b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _95140_lefts, jule::Ptr<_1b9b27265_AssignSt>* _95162_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>> _95313_parts;;
	jule::Slice<_23d21115a_Log> _95320_errs;;
	({
		__jule_tuple_ssx_1b9b032eb_Token__jule_tuple_s_23d21115a_Log __jule_assign_result = _1ba819b38_parts(_95140_lefts, static_cast<jule::U32>(5LLU), true);
		_95313_parts = __jule_assign_result.__jule_result_arg0;
		_95320_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_95320_errs.len() > 0LL)) {
		((*((*(_self_))._field_p))._field_errors).append(_95320_errs);;
		return false;;
	};
	{
		auto expr = &(_95313_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca982c80:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1b9b032eb_Token>> _95921_part = *it;
			{
				jule::Bool _96017_isMut = false;;
				jule::Bool _96117_isRef = false;;
				jule::Ptr<_1b9b032eb_Token> _96313_token = _95921_part[0LL];;
				if (((*(_96313_token))._field_Id == static_cast<jule::U32>(32LLU))) {
					_96017_isMut=true;
					(_95921_part).mut_slice(1LL);;
					if ((_95921_part.len() == 0LL)) {
						_1ba7e9222_pushErr(_self_, _96313_token, jule::Str::lit("invalid syntax", 14));
						goto _iter_next_1ca982c80;
					};
				};
				if (((*(_95921_part[0LL]))._field_Id == static_cast<jule::U32>(65LLU))) {
					_96117_isRef=true;
					(_95921_part).mut_slice(1LL);;
					if ((_95921_part.len() == 0LL)) {
						_1ba7e9222_pushErr(_self_, _96313_token, jule::Str::lit("invalid syntax", 14));
						goto _iter_next_1ca982c80;
					};
				};
				if ((((*(_95921_part[0LL]))._field_Id != static_cast<jule::U32>(1LLU)) && ((*(_95921_part[0LL]))._field_Id != static_cast<jule::U32>(74LLU)))) {
					_1ba7e9222_pushErr(_self_, _96313_token, jule::Str::lit("invalid syntax", 14));
					goto _iter_next_1ca982c80;
				};
				jule::Ptr<_1b9b26bd2_AssignLeft> _98717_l = _1ba802cec_buildAssignL(_self_, &(_95921_part));;
				(*(_98717_l))._field_Mutable=_96017_isMut;
				(*(_98717_l))._field_Reference=_96117_isRef;
				{ jule::Slice<jule::Ptr<_1b9b26bd2_AssignLeft>> &__jule_push_dest = (*((*(_95162_assign))))._field_Left; __jule_push_dest.push(_98717_l); };
			}
			_iter_next_1ca982c80:;
			++it;
			goto _iter_begin_1ca982c80;
		}
		_iter_end_1ca982c80:;
	};
	return true;;
}



inline __jule_tuple_x_1b9b27265_AssignSt__jule_tuple_bool _1ba803bbb_buildDeclAssign(_1ba7e7e9b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _99638_tokens) {
	__jule_tuple_x_1b9b27265_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_99638_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(_99638_tokens).mut_slice(1LL);;
	jule::Ptr<_1b9b032eb_Token> _100213_token = _99638_tokens[0LL];;
	if (((*(_100213_token))._field_Id != static_cast<jule::U32>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b9b27265_AssignSt> _100713_assign = jule::new_ptr<_1b9b27265_AssignSt>(_1b9b27265_AssignSt{._field_Declarative=true, });;
	jule::I32 _101113_i = 0LL;;
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _101213_rang = _1ba8193b8_range(&(_101113_i), static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), &(_99638_tokens));;
	if ((_101213_rang == nullptr)) {
		_1ba7e9222_pushErr(_self_, _100213_token, jule::Str::lit("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_101113_i + 1LL) < _99638_tokens.len())) {
		(*(_100713_assign))._field_Setter=_99638_tokens[_101113_i];
		if (((*((*(_100713_assign))._field_Setter))._field_Id != static_cast<jule::U32>(71LLU))) {
			_1ba7e9222_pushErr(_self_, (*(_100713_assign))._field_Setter, jule::Str::lit("invalid syntax", 14));
		};
		(_101113_i)++;
		jule::Slice<jule::Ptr<_1b9b032eb_Token>> _102217_exprTokens = _99638_tokens.slice(_101113_i);;
		(*(_100713_assign))._field_Right=_1ba81c135_buildExpr((*(_self_))._field_p, &(_102217_exprTokens));
	};
	jule::Bool _10269_ok = _1ba80387a_buildDeclAssign1(_self_, &(_101213_rang), &(_100713_assign));;
	__jule_func_result.__jule_result_arg0 = _100713_assign;
	__jule_func_result.__jule_result_arg1 = _10269_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_1b9b27265_AssignSt__jule_tuple_bool _1ba80400c_buildAssignSt(_1ba7e7e9b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _103037_tokens) {
	__jule_tuple_x_1b9b27265_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1ba817be1_checkAssignTokens(_103037_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_103037_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1ca98ec6a:;
			{
				({
					__jule_tuple_x_1b9b27265_AssignSt__jule_tuple_bool __jule_assign_result = _1ba803bbb_buildDeclAssign(_self_, (*(_103037_tokens)));
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1ca98e86e:;
			{
				({
					__jule_tuple_x_1b9b27265_AssignSt__jule_tuple_bool __jule_assign_result = _1ba80347e_buildPlainAssign(_self_, _103037_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1ca98e808:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1b9b1d4c0_UseExpr> _1ba80434d_buildUseExpr(_1ba7e7e9b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _104536_tokens) {
	if (((*(_104536_tokens)).len() == 1LL)) {
		_1ba7e9222_pushErr(_self_, (*(_104536_tokens))[0LL], jule::Str::lit("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_1b9b1d4c0_UseExpr> _105013_ue = jule::new_ptr<_1b9b1d4c0_UseExpr>(_1b9b1d4c0_UseExpr{._field_Token=(*(_104536_tokens))[0LL], });;
	((*(_104536_tokens))).mut_slice(1LL);;
	(*(_105013_ue))._field_Expr=_1ba81c135_buildExpr((*(_self_))._field_p, _104536_tokens);
	return _105013_ue;;
}



inline jule::Any _1ba80468e_buildSt(_1ba7e7e9b_scopeParser* _self_, jule::Ptr<_1ba7e760a_stmt>* _105831_st) {
	jule::Ptr<_1b9b032eb_Token> _105913_token = (*((*(_105831_st))))._field_tokens[0LL];;
	if (((*(_105913_token))._field_Id == static_cast<jule::U32>(1LLU))) {
		jule::Any _106117_s = jule::Any(nullptr);;
		jule::Bool _106120_ok = false;;
		({
			__jule_tuple__1b9b27e25_StmtData__jule_tuple_bool __jule_assign_result = _1ba80266a_buildIdSt(_self_, &((*((*(_105831_st))))._field_tokens));
			_106117_s = __jule_assign_result.__jule_result_arg0;
			_106120_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_106120_ok) {
			return _106117_s;;
		};
	};
	jule::Ptr<_1b9b27265_AssignSt> _106713_s;;
	jule::Bool _106716_ok = false;;
	({
		__jule_tuple_x_1b9b27265_AssignSt__jule_tuple_bool __jule_assign_result = _1ba80400c_buildAssignSt(_self_, &((*((*(_105831_st))))._field_tokens));
		_106713_s = __jule_assign_result.__jule_result_arg0;
		_106716_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_106716_ok) {
		return jule::Any(_106713_s, &__jule_any_type58);;
	};
	{
		auto &_match_expr{ (*(_105913_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(16LLU)) {
			_case_begin_1ca994e4b:;
			{
				return jule::Any(_1ba80434d_buildUseExpr(_self_, &((*((*(_105831_st))))._field_tokens)), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(34LLU) || _match_expr == static_cast<jule::U32>(6LLU) || _match_expr == static_cast<jule::U32>(30LLU) || _match_expr == static_cast<jule::U32>(32LLU)) {
			_case_begin_1ca9948eb:;
			{
				return jule::Any(_1ba7ea311_buildVarSt(_self_, &((*((*(_105831_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(2LLU)) {
			_case_begin_1ca995149:;
			{
				return jule::Any(_1ba7ea652_buildRetSt(_self_, (*((*(_105831_st))))._field_tokens), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(9LLU)) {
			_case_begin_1ca9951b0:;
			{
				return jule::Any(_1ba7ed325_buildIterSt(_self_, _105831_st), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(10LLU)) {
			_case_begin_1ca995226:;
			{
				return jule::Any(_1ba7ed666_buildBreakSt(_self_, &((*((*(_105831_st))))._field_tokens)), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(11LLU)) {
			_case_begin_1ca99528c:;
			{
				return jule::Any(_1ba7ed9a7_buildContSt(_self_, &((*((*(_105831_st))))._field_tokens)), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(13LLU)) {
			_case_begin_1ca995314:;
			{
				return jule::Any(_1ba7ee47a_buildIfElseChain(_self_, (*((*(_105831_st))))._field_tokens), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(22LLU)) {
			_case_begin_1ca99538b:;
			{
				return jule::Any(_1ba7ee7bb_buildCoCallSt(_self_, (*((*(_105831_st))))._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(18LLU)) {
			_case_begin_1ca995413:;
			{
				return jule::Any(_1ba7eeb0c_buildGotoSt(_self_, &((*((*(_105831_st))))._field_tokens)), &__jule_any_type57);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(28LLU)) {
			_case_begin_1ca99548a:;
			{
				return jule::Any(_1ba7eee4d_buildFallSt(_self_, &((*((*(_105831_st))))._field_tokens)), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1ca995512:;
			{
				return jule::Any(_1ba80028e_buildTypeAliasSt(_self_, &((*((*(_105831_st))))._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(23LLU)) {
			_case_begin_1ca995589:;
			{
				return jule::Any(_1ba801b97_buildMatchCase(_self_, (*((*(_105831_st))))._field_tokens), &__jule_any_type59);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(31LLU) || _match_expr == static_cast<jule::U32>(33LLU)) {
			_case_begin_1ca995611:;
			{
				return jule::Any(_1ba801ed8_buildScopeSt(_self_, (*((*(_105831_st))))._field_tokens), &__jule_any_type51);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(72LLU)) {
			_case_begin_1ca995688:;
			{
				return jule::Any(_1ba801ed8_buildScopeSt(_self_, (*((*(_105831_st))))._field_tokens), &__jule_any_type51);;
			}
		}
		_match_end_1ca994c5e:;
	};
	jule::Ptr<_1b9b1caeb_Expr> _110613_expr = _1ba81c135_buildExpr((*(_self_))._field_p, &((*((*(_105831_st))))._field_tokens));;
	if ((_110613_expr != nullptr)) {
		return jule::Any(_110613_expr, &__jule_any_type52);;
	};
	_1ba7e9222_pushErr(_self_, _105913_token, jule::Str::lit("invalid syntax", 14));
	return nullptr;;
}



inline void _1ba804a02_build(_1ba7e7e9b_scopeParser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _111429_tokens, jule::Ptr<_1b9b287d8_ScopeTree>* _111452_s) {
	if (((*(_111452_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1ba7e79b2_splitStmts(_111429_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_111452_s));
	while (((!(_1ba7e8dae_isLastSt(_self_))) && (!(_1ba7e8b28_finished(_self_))))) {
		{
			jule::Ptr<_1ba7e760a_stmt> _112217_st = _1ba7e9ac4_next(_self_);;
			jule::Any _112317_data = _1ba80468e_buildSt(_self_, &(_112217_st));;
			if ((_112317_data != nullptr)) {
				{ jule::Slice<_1b9b28178_Stmt> &__jule_push_dest = (*((*(_self_))._field_s))._field_Stmts; __jule_push_dest.push(_1b9b28178_Stmt{._field_Token=(*(_112217_st))._field_tokens[0LL], ._field_Data=_112317_data}); };
			};
			if (_1ba7e8892_stopped(_self_)) {
				goto _iter_end_1ca99e52c;
			};
		}
	_iter_next_1ca99e52c:;
	}
	_iter_end_1ca99e52c:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ba7e7e9b_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1ba805d33_pushErr(_1ba80556e_exprBuilder* _self_, jule::Ptr<_1b9b032eb_Token> _4526_token, jule::Str _4541_fmt, jule::Slice<jule::Any> _4554_args) {
	_1ba81b981_pushErr((*(_self_))._field_p.ptr(), _4526_token, _4541_fmt, _4554_args);
}



inline void _1ba806196_pushSuggestion(_1ba80556e_exprBuilder* _self_, jule::Str _5033_fmt, jule::Slice<jule::Any> _5046_args) {
	_1ba81bce4_pushSuggestion((*(_self_))._field_p.ptr(), _5033_fmt, _5046_args);
}



inline jule::Ptr<_1b9b1d7bc_TupleExpr> _1ba8064d7_buildTuple(_1ba80556e_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>>* _5434_parts) {
	jule::Ptr<_1b9b1d7bc_TupleExpr> _5513_tuple = jule::new_ptr<_1b9b1d7bc_TupleExpr>(_1b9b1d7bc_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_1b9b1caeb_Expr>>::alloc(0LL, (*(_5434_parts)).len())});;
	{
		auto expr = _5434_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca9bb46c:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1b9b032eb_Token>> _5821_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1b9b1caeb_Expr>> &__jule_push_dest = (*(_5513_tuple))._field_Expr; __jule_push_dest.push(_1ba815738_buildFromTokens(_self_, _5821_part)); };
			}
			_iter_next_1ca9bb46c:;
			++it;
			goto _iter_begin_1ca9bb46c;
		}
		_iter_end_1ca9bb46c:;
	};
	return _5513_tuple;;
}



inline jule::Ptr<_1b9b1db96_LitExpr> _1ba806828_buildLit(_1ba80556e_exprBuilder* _self_, jule::Ptr<_1b9b032eb_Token> _6427_token) {
	return jule::new_ptr<_1b9b1db96_LitExpr>(_1b9b1db96_LitExpr{._field_Token=_6427_token, ._field_Value=(*(_6427_token))._field_Kind});;
}



inline jule::Any _1ba806eaa_buildSingle(_1ba80556e_exprBuilder* _self_, jule::Ptr<_1b9b032eb_Token> _7534_token) {
	{
		auto &_match_expr{ (*(_7534_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(4LLU)) {
			_case_begin_1ca9bd43b:;
			{
				return jule::Any(_1ba806828_buildLit(_self_, _7534_token), &__jule_any_type101);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(39LLU)) {
			_case_begin_1ca9bd4b3:;
			{
				return jule::Any(jule::new_ptr<_1b9b20082_VariadicExpr>(_1b9b20082_VariadicExpr{._field_Token=_7534_token, }), &__jule_any_type75);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(1LLU) || _match_expr == static_cast<jule::U32>(24LLU) || _match_expr == static_cast<jule::U32>(36LLU)) {
			_case_begin_1ca9bd53a:;
			{
				return jule::Any(_1ba816b24_buildIdentExpr(&(_7534_token)), &__jule_any_type79);;
			}
		}
		_match_end_1ca9bd35e:;
	};
	_1ba805d33_pushErr(_self_, _7534_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1b9b1e526_IdentExpr> _1ba8072eb_buildBindIdent(_1ba80556e_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _9238_tokens) {
	if (((*((*(_9238_tokens))[0LL]))._field_Id != static_cast<jule::U32>(27LLU))) {
		return nullptr;;
	} else if (((*((*(_9238_tokens))[1LL]))._field_Id != static_cast<jule::U32>(17LLU))) {
		_1ba805d33_pushErr(_self_, (*(_9238_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ba806196_pushSuggestion(_self_, jule::Str::lit("use dot (.) to access binded defines", 36), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b9b032eb_Token> _10013_token = (*(_9238_tokens))[2LL];;
	if (((*(_10013_token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ba805d33_pushErr(_self_, (*(_9238_tokens))[2LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ba806196_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b9b1e526_IdentExpr> _10613_expr = _1ba816b24_buildIdentExpr(&(_10013_token));;
	(*(_10613_expr))._field_Binded=true;
	return _10613_expr;;
}



inline jule::Ptr<_1b9b1eba8_UnaryExpr> _1ba80763c_buildUnary(_1ba80556e_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _11133_tokens) {
	jule::Ptr<_1b9b032eb_Token> _11213_op = _11133_tokens[0LL];;
	if ((_11133_tokens.len() == 1LL)) {
		_1ba805d33_pushErr(_self_, _11213_op, jule::Str::lit("missing expression for unary operator", 37), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1b9b03a38_IsUnaryOp((*(_11213_op))._field_Id)))) {
		_1ba805d33_pushErr(_self_, _11213_op, jule::Str::lit("invalid unary operator: @", 25), jule::Slice<jule::Any>::make({jule::Any((*(_11213_op))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	(_11133_tokens).mut_slice(1LL);;
	return jule::new_ptr<_1b9b1eba8_UnaryExpr>(_1b9b1eba8_UnaryExpr{._field_Op=_11213_op, ._field_Expr=_1ba815738_buildFromTokens(_self_, _11133_tokens)});;
}



inline jule::Ptr<_1b9b20c0e_SubIdentExpr> _1ba80797d_buildObjSubIdent(_1ba80556e_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _13239_tokens) {
	jule::I32 _13313_i = (_13239_tokens.len() - 1LL);;
	jule::Ptr<_1b9b032eb_Token> _13413_identToken = _13239_tokens[_13313_i];;
	(_13313_i)--;
	(_13239_tokens).mut_slice(0LL, _13313_i);;
	if ((_13239_tokens.len() == 0LL)) {
		_1ba805d33_pushErr(_self_, _13413_identToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1b9b20c0e_SubIdentExpr>(_1b9b20c0e_SubIdentExpr{._field_Expr=_1ba815738_buildFromTokens(_self_, _13239_tokens), ._field_Ident=_13413_identToken});;
}



inline jule::Ptr<_1b9b20835_NsSelectionExpr> _1ba807cbe_buildNsSubIdent(_1ba80556e_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _14739_tokens) {
	jule::Ptr<_1b9b20835_NsSelectionExpr> _14813_ns = jule::new_ptr<_1b9b20835_NsSelectionExpr>();;
	{
		auto expr = _14739_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca9c8149:;
		if (it != expr_end) {
			jule::I32 _14914_i = it - expr->begin();
			jule::Ptr<_1b9b032eb_Token> _14921_token = *it;
			{
				if (((_14914_i & 1LL) == 0LL)) {
					if (((*(_14921_token))._field_Id != static_cast<jule::U32>(1LLU))) {
						_1ba805d33_pushErr(_self_, _14921_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_1ba806196_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					};
					{ jule::Slice<jule::Ptr<_1b9b032eb_Token>> &__jule_push_dest = (*(_14813_ns))._field_Ns; __jule_push_dest.push(_14921_token); };
				} else if (((*(_14921_token))._field_Id != static_cast<jule::U32>(19LLU))) {
					_1ba805d33_pushErr(_self_, _14921_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					_1ba806196_pushSuggestion(_self_, jule::Str::lit("expected double colon \"::\"", 26), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1ca9c8149:;
			++it;
			_14914_i++;
			goto _iter_begin_1ca9c8149;
		}
		_iter_end_1ca9c8149:;
	};
	(*(_14813_ns))._field_Ident=(*(_14813_ns))._field_Ns[((*(_14813_ns))._field_Ns.len() - 1LL)];
	(*(_14813_ns))._field_Ns=(*(_14813_ns))._field_Ns.slice(0LL, ((*(_14813_ns))._field_Ns.len() - 1LL));
	return _14813_ns;;
}



inline jule::Ptr<_1b9b187b7_TypeDecl> _1ba808110_buildType(_1ba80556e_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _16633_tokens) {
	jule::I32 _16713_i = 0LL;;
	jule::Ptr<_1b9b187b7_TypeDecl> _16813_t;;
	jule::Bool _16816_ok = false;;
	({
		__jule_tuple_x_1b9b187b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ba81d587_buildType((*(_self_))._field_p, _16633_tokens, (&(_16713_i)), false);
		_16813_t = __jule_assign_result.__jule_result_arg0;
		_16816_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_16816_ok))) {
		_1ba805d33_pushErr(_self_, (*(_16633_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_16713_i < (*(_16633_tokens)).len())) {
		_1ba805d33_pushErr(_self_, (*(_16633_tokens))[_16713_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _16813_t;;
}



inline jule::Any _1ba808451_buildSubIdent(_1ba80556e_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _18037_tokens) {
	jule::I32 _1819_i = ((*(_18037_tokens)).len() - 2LL);;
	jule::Ptr<_1b9b032eb_Token> _1829_token = (*(_18037_tokens))[_1819_i];;
	{
		auto &_match_expr{ (*(_1829_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(17LLU)) {
			_case_begin_1ca9d0052:;
			{
				return jule::Any(_1ba80797d_buildObjSubIdent(_self_, (*(_18037_tokens))), &__jule_any_type85);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_1ca9d077d:;
			{
				return jule::Any(_1ba807cbe_buildNsSubIdent(_self_, _18037_tokens), &__jule_any_type89);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(77LLU)) {
			_case_begin_1ca9d07e4:;
			{
				return jule::Any(_1ba808110_buildType(_self_, _18037_tokens), &__jule_any_type88);;
			}
		}
		_match_end_1ca9d066d:;
	};
	_1ba805d33_pushErr(_self_, _1829_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1b9b20082_VariadicExpr> _1ba808792_buildVariadic(_1ba80556e_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _19636_tokens) {
	jule::Ptr<_1b9b032eb_Token> _19713_token = _19636_tokens[(_19636_tokens.len() - 1LL)];;
	(_19636_tokens).mut_slice(0LL, (_19636_tokens.len() - 1LL));;
	return jule::new_ptr<_1b9b20082_VariadicExpr>(_1b9b20082_VariadicExpr{._field_Token=_19713_token, ._field_Expr=_1ba815738_buildFromTokens(_self_, _19636_tokens)});;
}



inline jule::Ptr<_1b9b1cde8_RangeExpr> _1ba80d940_buildBetweenParentheses(_1ba80556e_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _20546_tokens) {
	if ((_20546_tokens.len() == 2LL)) {
		_1ba805d33_pushErr(_self_, _20546_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		_1ba806196_pushSuggestion(_self_, jule::Str::lit("empty parentheses are not valid expression, must include an expression in range", 79), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_20546_tokens).mut_slice(1LL, (_20546_tokens.len() - 1LL));;
	return jule::new_ptr<_1b9b1cde8_RangeExpr>(_1b9b1cde8_RangeExpr{._field_Expr=_1ba815738_buildFromTokens(_self_, _20546_tokens)});;
}



inline jule::Ptr<_1b9b2045b_CastExpr> _1ba80dc81_tryBuildCast(_1ba80556e_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _21736_tokens) {
	jule::I32 _21813_rangeN = 0LL;;
	{
		auto expr = _21736_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca9d5563:;
		if (it != expr_end) {
			jule::I32 _21913_i = it - expr->begin();
			jule::Ptr<_1b9b032eb_Token> _21916_token = *it;
			{
				{
					auto &_match_expr{ (*(_21916_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1ca9d6355:;
						{
							(_21813_rangeN)++;
							goto _iter_next_1ca9d5563;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1ca9d63cc:;
						{
							(_21813_rangeN)--;
						}
					}
					_match_end_1ca9d6289:;
				};
				if ((_21813_rangeN > 0LL)) {
					goto _iter_next_1ca9d5563;
				} else if (((_21913_i + 1LL) == (*(_21736_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1b9b032eb_Token>> _23817_typeTokens = (*(_21736_tokens)).slice(0LL, (_21913_i + 1LL));;
				jule::Slice<jule::Ptr<_1b9b032eb_Token>> _23917_exprTokens = (*(_21736_tokens)).slice((_21913_i + 1LL));;
				if ((_23917_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1b9b032eb_Token> _24613_tok = _23917_exprTokens[0LL];;
				if (((*(_24613_tok))._field_Id != static_cast<jule::U32>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_1b9b2045b_CastExpr> _25117_cast = jule::new_ptr<_1b9b2045b_CastExpr>(_1b9b2045b_CastExpr{});;
				if ((_23917_exprTokens.len() == 2LL)) {
					_1ba805d33_pushErr(_self_, _23917_exprTokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
					_1ba806196_pushSuggestion(_self_, jule::Str::lit("give an expression for casting", 30), jule::Slice<jule::Any>());
				};
				if ((_23817_typeTokens.len() == 2LL)) {
					_1ba805d33_pushErr(_self_, _23817_typeTokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					_1ba806196_pushSuggestion(_self_, jule::Str::lit("type declaration expected for casting", 37), jule::Slice<jule::Any>());
				} else {
					(_23817_typeTokens).mut_slice(1LL, (_23817_typeTokens.len() - 1LL));;
					jule::I32 _26521_typeIndex = 0LL;;
					jule::Ptr<_1b9b187b7_TypeDecl> _26621_t;;
					jule::Bool _26624_ok = false;;
					({
						__jule_tuple_x_1b9b187b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ba81d587_buildType((*(_self_))._field_p, &(_23817_typeTokens), (&(_26521_typeIndex)), true);
						_26621_t = __jule_assign_result.__jule_result_arg0;
						_26624_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_26624_ok && (_26521_typeIndex < _23817_typeTokens.len()))) {
						_1ba805d33_pushErr(_self_, _23817_typeTokens[_26521_typeIndex], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					} else if ((!(_26624_ok))) {
						return _25117_cast;;
					};
					(*(_25117_cast))._field_Kind=_26621_t;
					if ((_23917_exprTokens.len() > 2LL)) {
						jule::I32 _27625_j = 0LL;;
						_1ba8193b8_range(&(_27625_j), static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), &(_23917_exprTokens));
						if ((_27625_j < _23917_exprTokens.len())) {
							return nullptr;;
						};
						(_23917_exprTokens).mut_slice(0LL, _27625_j);;
						(*(_25117_cast))._field_Expr=_1ba815738_buildFromTokens(_self_, _23917_exprTokens);
					};
				};
				return _25117_cast;;
			}
			_iter_next_1ca9d5563:;
			++it;
			_21913_i++;
			goto _iter_begin_1ca9d5563;
		}
		_iter_end_1ca9d5563:;
	};
	return nullptr;;
}



inline void _1ba80e19e_pushArg(_1ba80556e_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b9b1caeb_Expr>>* _29131_args, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _29150_tokens, jule::Ptr<_1b9b032eb_Token> _29168_err_token) {
	if ((_29150_tokens.len() == 0LL)) {
		_1ba805d33_pushErr(_self_, _29168_err_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ba806196_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_1b9b1caeb_Expr>> &__jule_push_dest = (*(_29131_args)); __jule_push_dest.push(_1ba815738_buildFromTokens(_self_, _29150_tokens)); };
}



inline jule::Slice<jule::Ptr<_1b9b1caeb_Expr>> _1ba80e4e0_buildArgs(_1ba80556e_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _30032_tokens) {
	if ((_30032_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b9b1caeb_Expr>> _30617_args = nullptr;;
	jule::I32 _30713_last = 0LL;;
	jule::I32 _30813_rangeN = 0LL;;
	(_30032_tokens).mut_slice(1LL, (_30032_tokens.len() - 1LL));;
	{
		auto expr = &(_30032_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca9e27c3:;
		if (it != expr_end) {
			jule::I32 _31013_i = it - expr->begin();
			jule::Ptr<_1b9b032eb_Token> _31016_token = *it;
			{
				{
					auto &_match_expr{ (*(_31016_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1ca9e38a1:;
						{
							(_30813_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1ca9e3928:;
						{
							(_30813_rangeN)--;
						}
					}
					_match_end_1ca9e37d5:;
				};
				if (((_30813_rangeN > 0LL) || ((*(_31016_token))._field_Id != static_cast<jule::U32>(5LLU)))) {
					goto _iter_next_1ca9e27c3;
				};
				_1ba80e19e_pushArg(_self_, &(_30617_args), _30032_tokens.slice(_30713_last, _31013_i), _31016_token);
				_30713_last=static_cast<jule::I32>((_31013_i + 1LL));
			}
			_iter_next_1ca9e27c3:;
			++it;
			_31013_i++;
			goto _iter_begin_1ca9e27c3;
		}
		_iter_end_1ca9e27c3:;
	};
	if ((_30713_last < _30032_tokens.len())) {
		if ((_30713_last == 0LL)) {
			if ((_30032_tokens.len() > 0LL)) {
				_1ba80e19e_pushArg(_self_, &(_30617_args), _30032_tokens.slice(_30713_last), _30032_tokens[_30713_last]);
			};
		} else {
			_1ba80e19e_pushArg(_self_, &(_30617_args), _30032_tokens.slice(_30713_last), _30032_tokens[(_30713_last - 1LL)]);
		};
	};
	return _30617_args;;
}



inline jule::Ptr<_1b9b21825_FnCallExpr> _1ba80ecd7_buildFnCall(_1ba80556e_exprBuilder* _self_, jule::Ptr<_1b9b032eb_Token>* _36635_token, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _36655_expr, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _36676_args) {
	return jule::new_ptr<_1b9b21825_FnCallExpr>(_1b9b21825_FnCallExpr{._field_Token=(*(_36635_token)), ._field_Expr=_1ba815738_buildFromTokens(_self_, (*(_36655_expr))), ._field_Args=_1ba80e4e0_buildArgs(_self_, (*(_36676_args))), });;
}



inline jule::Any _1ba810128_buildParenthesesRange(_1ba80556e_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _37445_tokens) {
	jule::Ptr<_1b9b032eb_Token> _37513_token = (*(_37445_tokens))[0LL];;
	if (((*(_37513_token))._field_Id == static_cast<jule::U32>(74LLU))) {
		jule::Ptr<_1b9b2045b_CastExpr> _37717_expr = _1ba80dc81_tryBuildCast(_self_, _37445_tokens);;
		if ((_37717_expr != nullptr)) {
			return jule::Any(_37717_expr, &__jule_any_type105);;
		};
	};
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _38213_exprTokens;;
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _38229_args_tokens;;
	({
		__jule_tuple_sx_1b9b032eb_Token__jule_tuple_sx_1b9b032eb_Token __jule_assign_result = _1ba819682_rangeLast(_37445_tokens);
		_38213_exprTokens = __jule_assign_result.__jule_result_arg0;
		_38229_args_tokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_38213_exprTokens.len() == 0LL)) {
		return jule::Any(_1ba80d940_buildBetweenParentheses(_self_, _38229_args_tokens), &__jule_any_type100);;
	};
	return jule::Any(_1ba80ecd7_buildFnCall(_self_, &(_37513_token), &(_38213_exprTokens), &(_38229_args_tokens)), &__jule_any_type107);;
}



inline jule::Ptr<_1b9b1e070_UnsafeExpr> _1ba810469_buildUnsafeExpr(_1ba80556e_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _39138_tokens) {
	jule::Ptr<_1b9b032eb_Token> _39213_token = _39138_tokens[0LL];;
	(_39138_tokens).mut_slice(1LL);;
	jule::I32 _39413_i = 0LL;;
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _39513_rangeTokens = _1ba8193b8_range(&(_39413_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_39138_tokens));;
	if ((_39513_rangeTokens.len() == 0LL)) {
		_1ba805d33_pushErr(_self_, _39138_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1b9b1e070_UnsafeExpr>(_1b9b1e070_UnsafeExpr{._field_Token=_39213_token, ._field_Expr=_1ba815738_buildFromTokens(_self_, _39513_rangeTokens)});;
}



inline jule::Ptr<_1b9b2a477_FnDecl> _1ba8107aa_buildAnonFn(_1ba80556e_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _40635_tokens) {
	jule::Ptr<_1b9b2a477_FnDecl> _40713_f = _1ba822bc9_buildFn((*(_self_))._field_p, _40635_tokens, false, false);;
	if ((!(_1b9b2a7da_IsAnon(_40713_f.ptr())))) {
		_1ba805d33_pushErr(_self_, (*(_40713_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ba806196_pushSuggestion(_self_, jule::Str::lit("anonymous function expected, remove identifier of function", 58), jule::Slice<jule::Any>());
	};
	return _40713_f;;
}



inline jule::Any _1ba810aeb_buildUnsafe(_1ba80556e_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _41535_tokens) {
	{
		auto &_match_expr{ (*((*(_41535_tokens))[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1caa037d4:;
			{
				return jule::Any(_1ba8107aa_buildAnonFn(_self_, _41535_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_1caa03d12:;
			{
				return jule::Any(_1ba810469_buildUnsafeExpr(_self_, (*(_41535_tokens))), &__jule_any_type102);;
			}
		}
		_match_end_1caa03c46:;
	};
}



inline void _1ba811019_pushRangeLitPart(_1ba80556e_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _42539_part, jule::Ptr<_1b9b032eb_Token> _4269_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>>* _42634_parts) {
	if ((_42539_part.len() == 0LL)) {
		_1ba805d33_pushErr(_self_, _4269_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ba806196_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>> &__jule_push_dest = (*(_42634_parts)); __jule_push_dest.push(_42539_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>> _1ba81135a_getBraceRangeLitExprParts(_1ba80556e_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _43648_tokens) {
	if ((_43648_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>> _44217_parts = nullptr;;
	jule::I32 _44413_last = 0LL;;
	jule::I32 _44513_rangeN = 0LL;;
	(_43648_tokens).mut_slice(1LL, (_43648_tokens.len() - 1LL));;
	{
		auto expr = &(_43648_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1caa0761d:;
		if (it != expr_end) {
			jule::I32 _44713_i = it - expr->begin();
			jule::Ptr<_1b9b032eb_Token> _44716_token = *it;
			{
				{
					auto &_match_expr{ (*(_44716_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1caa086eb:;
						{
							(_44513_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1caa08773:;
						{
							(_44513_rangeN)--;
						}
					}
					_match_end_1caa08630:;
				};
				if (((_44513_rangeN > 0LL) || ((*(_44716_token))._field_Id != static_cast<jule::U32>(5LLU)))) {
					goto _iter_next_1caa0761d;
				};
				_1ba811019_pushRangeLitPart(_self_, _43648_tokens.slice(_44413_last, _44713_i), _44716_token, &(_44217_parts));
				_44413_last=static_cast<jule::I32>((_44713_i + 1LL));
			}
			_iter_next_1caa0761d:;
			++it;
			_44713_i++;
			goto _iter_begin_1caa0761d;
		}
		_iter_end_1caa0761d:;
	};
	if ((_44413_last < _43648_tokens.len())) {
		if ((_44413_last == 0LL)) {
			if ((_43648_tokens.len() > 0LL)) {
				_1ba811019_pushRangeLitPart(_self_, _43648_tokens.slice(_44413_last), _43648_tokens[_44413_last], &(_44217_parts));
			};
		} else {
			_1ba811019_pushRangeLitPart(_self_, _43648_tokens.slice(_44413_last), _43648_tokens[(_44413_last - 1LL)], &(_44217_parts));
		};
	};
	return _44217_parts;;
}



inline jule::Ptr<_1b9b2231a_FieldExprPair> _1ba81169b_buildFieldExprPair(_1ba80556e_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _47841_tokens) {
	if (((_47841_tokens.len() - 2LL) == 0LL)) {
		_1ba805d33_pushErr(_self_, _47841_tokens[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b9b2231a_FieldExprPair> _48313_pair = jule::new_ptr<_1b9b2231a_FieldExprPair>(_1b9b2231a_FieldExprPair{._field_Field=_47841_tokens[0LL], });;
	(_47841_tokens).mut_slice(2LL);;
	(*(_48313_pair))._field_Expr=_1ba815738_buildFromTokens(_self_, _47841_tokens);
	return _48313_pair;;
}



inline jule::Ptr<_1b9b1caeb_Expr> _1ba8119dc_buildStructLitExpr(_1ba80556e_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _49142_tokens) {
	jule::Ptr<_1b9b032eb_Token> _49213_token = (*(_49142_tokens))[0LL];;
	if ((((*(_49213_token))._field_Id == static_cast<jule::U32>(1LLU)) && ((*(_49142_tokens)).len() > 1LL))) {
		_49213_token=(*(_49142_tokens))[1LL];
		if (((*(_49213_token))._field_Id == static_cast<jule::U32>(8LLU))) {
			return jule::new_ptr<_1b9b1caeb_Expr>(_1b9b1caeb_Expr{._field_Token=_49213_token, ._field_End=(*(_49142_tokens))[((*(_49142_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1ba81169b_buildFieldExprPair(_self_, (*(_49142_tokens))), &__jule_any_type77)});;
		};
	};
	return _1ba815738_buildFromTokens(_self_, (*(_49142_tokens)));;
}



inline jule::Slice<jule::Ptr<_1b9b1caeb_Expr>> _1ba811d2d_buildStructLitExprs(_1ba80556e_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _50643_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>> _50713_parts = _1ba81135a_getBraceRangeLitExprParts(_self_, (*(_50643_tokens)));;
	if ((_50713_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b9b1caeb_Expr>> _51213_pairs = jule::Slice<jule::Ptr<_1b9b1caeb_Expr>>::alloc(0LL, _50713_parts.len());;
	{
		auto expr = &(_50713_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1caa118e1:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1b9b032eb_Token>> _51321_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1b9b1caeb_Expr>> &__jule_push_dest = _51213_pairs; __jule_push_dest.push(_1ba8119dc_buildStructLitExpr(_self_, &(_51321_part))); };
			}
			_iter_next_1caa118e1:;
			++it;
			goto _iter_begin_1caa118e1;
		}
		_iter_end_1caa118e1:;
	};
	return _51213_pairs;;
}



inline jule::Ptr<_1b9b22b45_StructLit> _1ba81216e_buildTypedStructLiteral(_1ba80556e_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _51946_tokens) {
	jule::I32 _52013_i = 0LL;;
	jule::Ptr<_1b9b187b7_TypeDecl> _52113_t;;
	jule::Bool _52116_ok = false;;
	({
		__jule_tuple_x_1b9b187b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ba81d587_buildType((*(_self_))._field_p, &(_51946_tokens), (&(_52013_i)), true);
		_52113_t = __jule_assign_result.__jule_result_arg0;
		_52116_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_52116_ok))) {
		return nullptr;;
	} else if ((_52013_i >= _51946_tokens.len())) {
		_1ba805d33_pushErr(_self_, _51946_tokens[_52013_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_51946_tokens).mut_slice(_52013_i);;
	jule::Ptr<_1b9b032eb_Token> _5309_token = _51946_tokens[0LL];;
	if (((*(_5309_token))._field_Id != static_cast<jule::U32>(72LLU))) {
		_1ba805d33_pushErr(_self_, _5309_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1b9b22b45_StructLit>(_1b9b22b45_StructLit{._field_End=_51946_tokens[(_51946_tokens.len() - 1LL)], ._field_Kind=_52113_t, ._field_Exprs=_1ba811d2d_buildStructLitExprs(_self_, &(_51946_tokens))});;
}



inline jule::Ptr<_1b9b1caeb_Expr> _1ba8124b0_buildBraceLitPart(_1ba80556e_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _54341_tokens) {
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _54413_l;;
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _54420_r;;
	({
		__jule_tuple_sx_1b9b032eb_Token__jule_tuple_sx_1b9b032eb_Token __jule_assign_result = _1ba816591_splitDelim(_54341_tokens, static_cast<jule::U32>(8LLU));
		_54413_l = __jule_assign_result.__jule_result_arg0;
		_54420_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_54413_l != nullptr)) {
		return jule::new_ptr<_1b9b1caeb_Expr>(_1b9b1caeb_Expr{._field_Token=(*(_54341_tokens))[0LL], ._field_End=(*(_54341_tokens))[((*(_54341_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1b9b23926_KeyValPair>(_1b9b23926_KeyValPair{._field_Key=_1ba815738_buildFromTokens(_self_, _54413_l), ._field_Val=_1ba815738_buildFromTokens(_self_, _54420_r), ._field_Colon=(*(_54341_tokens))[_54413_l.len()]}), &__jule_any_type78)});;
	};
	return _1ba815738_buildFromTokens(_self_, (*(_54341_tokens)));;
}



inline jule::Ptr<_1b9b230eb_BraceLit> _1ba812801_buildBraceLit(_1ba80556e_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _56037_tokens) {
	jule::Ptr<_1b9b230eb_BraceLit> _56113_lit = jule::new_ptr<_1b9b230eb_BraceLit>(_1b9b230eb_BraceLit{._field_Token=(*(_56037_tokens))[0LL], ._field_End=(*(_56037_tokens))[((*(_56037_tokens)).len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>> _56613_parts = _1ba81135a_getBraceRangeLitExprParts(_self_, (*(_56037_tokens)));;
	if ((_56613_parts == nullptr)) {
		return _56113_lit;;
	};
	(*(_56113_lit))._field_Exprs=jule::Slice<jule::Ptr<_1b9b1caeb_Expr>>::alloc(0LL, _56613_parts.len());
	{
		auto expr = &(_56613_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1caa1a785:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1b9b032eb_Token>> _57221_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1b9b1caeb_Expr>> &__jule_push_dest = (*(_56113_lit))._field_Exprs; __jule_push_dest.push(_1ba8124b0_buildBraceLitPart(_self_, &(_57221_part))); };
			}
			_iter_next_1caa1a785:;
			++it;
			goto _iter_begin_1caa1a785;
		}
		_iter_end_1caa1a785:;
	};
	return _56113_lit;;
}



inline jule::Any _1ba812b42_buildBraceRange(_1ba80556e_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _57939_tokens) {
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _58013_exprTokens;;
	jule::I32 _58025_rangeN = 0;;
	({
		__jule_tuple_sx_1b9b032eb_Token__jule_tuple_int __jule_assign_result = _1ba816ddd_getRangeExprTokens(_57939_tokens);
		_58013_exprTokens = __jule_assign_result.__jule_result_arg0;
		_58025_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_58013_exprTokens.len() == 0LL)) {
			_case_begin_1caa1b423:;
			{
				return jule::Any(_1ba812801_buildBraceLit(_self_, _57939_tokens), &__jule_any_type108);;
			}
		}
		else if ((_58025_rangeN > 0LL)) {
			_case_begin_1caa1c127:;
			{
				_1ba805d33_pushErr(_self_, (*(_57939_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1caa1b533:;
	};
	jule::Ptr<_1b9b032eb_Token> _5919_elseToken = _58013_exprTokens[(_58013_exprTokens.len() - 1LL)];;
	if (((*(_58013_exprTokens[(_58013_exprTokens.len() - 1LL)]))._field_Id == static_cast<jule::U32>(14LLU))) {
		(_58013_exprTokens).mut_slice(0LL, (_58013_exprTokens.len() - 1LL));;
		jule::Any _59417_d = _1ba8150a6_build(_self_, &(_58013_exprTokens));;
		if ((_59417_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _59417_d };
			
			if (_match_expr.type == &__jule_any_type107) {
				_case_begin_1caa2001a:;
				{
					((*(_57939_tokens))).mut_slice((_58013_exprTokens.len() + 1LL));;
					jule::I32 _60121_i = 0LL;;
					jule::Slice<jule::Ptr<_1b9b032eb_Token>> _60221_rangeTokens = _1ba8193b8_range(&(_60121_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _57939_tokens);;
					jule::Ptr<_1b9b21825_FnCallExpr> _60321_model = _59417_d.cast_ptr<_1b9b21825_FnCallExpr>(&__jule_any_type107);;
					if (_1b9b21e30_Ignored(_60321_model.ptr())) {
						_1ba805d33_pushErr(_self_, _5919_elseToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_1ba806196_pushSuggestion(_self_, jule::Str::lit("just ignore exceptional or handle it but you cannot do both at same time", 72), jule::Slice<jule::Any>());
					};
					(*(_60321_model))._field_Exception=_1ba81cb2a_buildScope((*(_self_))._field_p, &(_60221_rangeTokens), (*(_57939_tokens))[(_60121_i - 1LL)]);
					return _59417_d;;
				}
			}
			else {
				_case_begin_1caa1e9dc:;
				{
					_1ba805d33_pushErr(_self_, _58013_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1caa1e987:;
		};
	};
	{
		auto &_match_expr{ (*(_58013_exprTokens[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1caa23a35:;
			{
				return _1ba810aeb_buildUnsafe(_self_, _57939_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1caa24162:;
			{
				return jule::Any(_1ba8107aa_buildAnonFn(_self_, _57939_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(1LLU) || _match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1caa241c8:;
			{
				return jule::Any(_1ba81216e_buildTypedStructLiteral(_self_, (*(_57939_tokens))), &__jule_any_type106);;
			}
		}
		else {
			_case_begin_1caa204c1:;
			{
				_1ba805d33_pushErr(_self_, _58013_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1caa23518:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>> _1ba812e83_getEnumerableParts(_1ba80556e_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _63141_tokens) {
	(_63141_tokens).mut_slice(1LL, (_63141_tokens.len() - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>> _63313_parts;;
	jule::Slice<_23d21115a_Log> _63320_errors;;
	({
		__jule_tuple_ssx_1b9b032eb_Token__jule_tuple_s_23d21115a_Log __jule_assign_result = _1ba819b38_parts(&(_63141_tokens), static_cast<jule::U32>(5LLU), true);
		_63313_parts = __jule_assign_result.__jule_result_arg0;
		_63320_errors = __jule_assign_result.__jule_result_arg1;
	});
	((*((*(_self_))._field_p))._field_errors).append(_63320_errors);;
	return _63313_parts;;
}



inline jule::Ptr<_1b9b2411e_SliceExpr> _1ba8132c4_buildSlice(_1ba80556e_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _63833_tokens) {
	jule::Ptr<_1b9b2411e_SliceExpr> _63913_slc = jule::new_ptr<_1b9b2411e_SliceExpr>(_1b9b2411e_SliceExpr{._field_Token=_63833_tokens[0LL], ._field_End=_63833_tokens[(_63833_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>> _64413_parts = _1ba812e83_getEnumerableParts(_self_, _63833_tokens);;
	if ((_64413_parts.len() == 0LL)) {
		return _63913_slc;;
	};
	(*(_63913_slc))._field_Exprs=jule::Slice<jule::Ptr<_1b9b1caeb_Expr>>::alloc(0LL, _64413_parts.len());
	{
		auto expr = &(_64413_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1caa28a6d:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1b9b032eb_Token>> _65021_p = *it;
			{
				if ((_65021_p.len() == 0LL)) {
					goto _iter_next_1caa28a6d;
				};
				{ jule::Slice<jule::Ptr<_1b9b1caeb_Expr>> &__jule_push_dest = (*(_63913_slc))._field_Exprs; __jule_push_dest.push(_1ba815738_buildFromTokens(_self_, _65021_p)); };
			}
			_iter_next_1caa28a6d:;
			++it;
			goto _iter_begin_1caa28a6d;
		}
		_iter_end_1caa28a6d:;
	};
	return _63913_slc;;
}



inline jule::Ptr<_1b9b24aae_IndexingExpr> _1ba81377a_buildIndexing(_1ba80556e_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _66036_exprTokens, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _66113_tokens, jule::Ptr<_1b9b032eb_Token> _66135_errorToken) {
	jule::Ptr<_1b9b032eb_Token> _66213_end = _66113_tokens[(_66113_tokens.len() - 1LL)];;
	(_66113_tokens).mut_slice(1LL, (_66113_tokens.len() - 1LL));;
	if ((_66113_tokens.len() == 0LL)) {
		_1ba805d33_pushErr(_self_, _66135_errorToken, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b9b1caeb_Expr> _66813_expr = _1ba815738_buildFromTokens(_self_, _66036_exprTokens);;
	if ((_66813_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b9b1caeb_Expr> _67213_index = _1ba815738_buildFromTokens(_self_, _66113_tokens);;
	if ((_67213_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1b9b24aae_IndexingExpr>(_1b9b24aae_IndexingExpr{._field_Token=_66135_errorToken, ._field_End=_66213_end, ._field_Expr=_66813_expr, ._field_Index=_67213_index});;
}



inline jule::Ptr<_1b9b2521e_SlicingExpr> _1ba813d96_buildSlicing(_1ba80556e_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _68436_exprTokens, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _68463_start, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _68514_to, jule::Ptr<_1b9b032eb_Token>* _68533_errorToken, jule::Ptr<_1b9b032eb_Token> _68557_end) {
	jule::Ptr<_1b9b2521e_SlicingExpr> _68613_slc = jule::new_ptr<_1b9b2521e_SlicingExpr>(_1b9b2521e_SlicingExpr{._field_Token=(*(_68533_errorToken)), ._field_End=_68557_end, ._field_Expr=_1ba815738_buildFromTokens(_self_, (*(_68436_exprTokens))), });;
	if (((*(_68463_start)).len() > 0LL)) {
		(*(_68613_slc))._field_Start=_1ba815738_buildFromTokens(_self_, (*(_68463_start)));
	};
	if (((*(_68514_to)).len() > 0LL)) {
		(*(_68613_slc))._field_To=_1ba815738_buildFromTokens(_self_, (*(_68514_to)));
	};
	return _68613_slc;;
}



inline jule::Any _1ba8141d7_buildBracketRange(_1ba80556e_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _70040_tokens) {
	jule::Ptr<_1b9b032eb_Token> _70113_errorToken = _70040_tokens[0LL];;
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _70213_exprTokens;;
	jule::I32 _70225_rangeN = 0;;
	({
		__jule_tuple_sx_1b9b032eb_Token__jule_tuple_int __jule_assign_result = _1ba816ddd_getRangeExprTokens(&(_70040_tokens));
		_70213_exprTokens = __jule_assign_result.__jule_result_arg0;
		_70225_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_70213_exprTokens.len() == 0LL)) {
		return jule::Any(_1ba8132c4_buildSlice(_self_, _70040_tokens), &__jule_any_type93);;
	} else if ((_70225_rangeN > 0LL)) {
		_1ba805d33_pushErr(_self_, _70113_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_70040_tokens).mut_slice(_70213_exprTokens.len());;
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _71713_splitTokens = _70040_tokens.slice(1LL, (_70040_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _71813_start;;
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _71824_to;;
	({
		__jule_tuple_sx_1b9b032eb_Token__jule_tuple_sx_1b9b032eb_Token __jule_assign_result = _1ba816591_splitDelim(&(_71713_splitTokens), static_cast<jule::U32>(8LLU));
		_71813_start = __jule_assign_result.__jule_result_arg0;
		_71824_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_71813_start != nullptr) || (_71824_to != nullptr))) {
		return jule::Any(_1ba813d96_buildSlicing(_self_, &(_70213_exprTokens), &(_71813_start), &(_71824_to), &(_70113_errorToken), _70040_tokens[(_70040_tokens.len() - 1LL)]), &__jule_any_type104);;
	};
	return jule::Any(_1ba81377a_buildIndexing(_self_, _70213_exprTokens, _70040_tokens, _70113_errorToken), &__jule_any_type103);;
}



inline jule::Any _1ba814528_buildExclRight(_1ba80556e_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _72538_tokens) {
	jule::Ptr<_1b9b032eb_Token> _7269_token = (*(_72538_tokens))[((*(_72538_tokens)).len() - 1LL)];;
	((*(_72538_tokens))).mut_slice(0LL, ((*(_72538_tokens)).len() - 1LL));;
	jule::Any _72813_d = _1ba8150a6_build(_self_, _72538_tokens);;
	if ((_72813_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _72813_d };
		
		if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1caa3587c:;
			{
				(*(_72813_d.cast_ptr<_1b9b21825_FnCallExpr>(&__jule_any_type107)))._field_Exception=jule::new_ptr<_1b9b287d8_ScopeTree>(_1b9b287d8_ScopeTree{._field_Deferred=true, });
				return _72813_d;;
			}
		}
		_match_end_1caa35607:;
	};
	_1ba805d33_pushErr(_self_, _7269_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1ba814869_buildData(_1ba80556e_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _74333_tokens) {
	{
		auto _match_expr{ (*(_74333_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1caa37021:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1caa37087:;
			{
				return _1ba806eaa_buildSingle(_self_, (*(_74333_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1caa3710e:;
			{
				if (((*((*(_74333_tokens))[0LL]))._field_Id == static_cast<jule::U32>(27LLU))) {
					return jule::Any(_1ba8072eb_buildBindIdent(_self_, _74333_tokens), &__jule_any_type79);;
				};
			}
		}
		_match_end_1caa36d34:;
	};
	jule::Ptr<_1b9b032eb_Token> _75513_token = (*(_74333_tokens))[((*(_74333_tokens)).len() - 1LL)];;
	if (((*(_75513_token))._field_Id == static_cast<jule::U32>(39LLU))) {
		return jule::Any(_1ba808792_buildVariadic(_self_, (*(_74333_tokens))), &__jule_any_type75);;
	};
	_75513_token=(*(_74333_tokens))[0LL];
	if (_1b9b03a38_IsUnaryOp((*(_75513_token))._field_Id)) {
		if (((*(_74333_tokens)).len() > 1LL)) {
			_75513_token=(*(_74333_tokens))[1LL];
			if (((*(_75513_token))._field_Id == static_cast<jule::U32>(31LLU))) {
				return jule::Any(_1ba808110_buildType(_self_, _74333_tokens), &__jule_any_type88);;
			};
		};
		return jule::Any(_1ba80763c_buildUnary(_self_, (*(_74333_tokens))), &__jule_any_type87);;
	};
	if (((*(_74333_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ (*(_75513_token))._field_Id };
			
			if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
				_case_begin_1caa3b696:;
				{
					if (((*(_74333_tokens)).len() > 3LL)) {
						jule::Ptr<_1b9b032eb_Token> _78121_t = (*(_74333_tokens))[((*(_74333_tokens)).len() - 1LL)];;
						if (((*(_78121_t))._field_Id == static_cast<jule::U32>(75LLU))) {
							goto _match_end_1caa3b5db;
						};
					};
					jule::Ptr<_1b9b032eb_Token> _78717_next = (*(_74333_tokens))[1LL];;
					if (((*(_78717_next))._field_Id != static_cast<jule::U32>(77LLU))) {
						goto _match_end_1caa3b5db;
					};
					return jule::Any(_1ba808110_buildType(_self_, _74333_tokens), &__jule_any_type88);;
				}
			}
			_match_end_1caa3b5db:;
		};
	};
	_75513_token=(*(_74333_tokens))[((*(_74333_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ (*(_75513_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_1caa3e3be:;
			{
				return _1ba808451_buildSubIdent(_self_, _74333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(68LLU)) {
			_case_begin_1caa3e435:;
			{
				return _1ba814528_buildExclRight(_self_, _74333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(75LLU)) {
			_case_begin_1caa3e49b:;
			{
				return _1ba810128_buildParenthesesRange(_self_, _74333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_1caa3e512:;
			{
				return _1ba812b42_buildBraceRange(_self_, _74333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(77LLU)) {
			_case_begin_1caa3e589:;
			{
				return _1ba8141d7_buildBracketRange(_self_, (*(_74333_tokens)));;
			}
		}
		_match_end_1caa3e303:;
	};
	if (((*(_75513_token))._field_Id == static_cast<jule::U32>(29LLU))) {
		return jule::Any(_1ba808110_buildType(_self_, _74333_tokens), &__jule_any_type88);;
	};
	_1ba805d33_pushErr(_self_, _75513_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1ba814c65_buildBinop(_1ba80556e_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _81834_tokens, jule::I32 _81852_i) {
	jule::Ptr<_1b9b032eb_Token> _81913_op = (*(_81834_tokens))[_81852_i];;
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _82013_leftTokens = (*(_81834_tokens)).slice(0LL, _81852_i);;
	if ((_1ba815b01_isTypeOp(&((*(_81913_op))._field_Id)) && _1ba815e0e_isTypeRange(&(_82013_leftTokens)))) {
		return jule::Any(_1ba808110_buildType(_self_, _81834_tokens), &__jule_any_type88);;
	};
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _82513_rightTokens = (*(_81834_tokens)).slice((_81852_i + 1LL));;
	if ((_82013_leftTokens.len() == 0LL)) {
		_1ba805d33_pushErr(_self_, (*(_81834_tokens))[_81852_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ba806196_pushSuggestion(_self_, jule::Str::lit("left operand expected for binary operator", 41), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_82513_rightTokens.len() == 0LL)) {
		_1ba805d33_pushErr(_self_, (*(_81834_tokens))[_81852_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ba806196_pushSuggestion(_self_, jule::Str::lit("right operand expected for binary operator", 42), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1b9b211b5_BinopExpr>(_1b9b211b5_BinopExpr{._field_Left=_1ba815738_buildFromTokens(_self_, _82013_leftTokens), ._field_Right=_1ba815738_buildFromTokens(_self_, _82513_rightTokens), ._field_Op=_81913_op}), &__jule_any_type109);;
}



inline jule::Any _1ba8150a6_build(_1ba80556e_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _84329_tokens) {
	if (((*((*(_84329_tokens))[0LL]))._field_Id == static_cast<jule::U32>(37LLU))) {
		return jule::Any(_1ba808110_buildType(_self_, _84329_tokens), &__jule_any_type88);;
	};
	jule::I32 _8479_i = _1ba81685a_findLowestPrecOp(_84329_tokens);;
	if ((_8479_i == -1LL)) {
		return _1ba814869_buildData(_self_, _84329_tokens);;
	};
	return _1ba814c65_buildBinop(_self_, _84329_tokens, _8479_i);;
}



inline jule::Any _1ba8153e7_buildKind(_1ba80556e_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _85433_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>> _85513_parts;;
	jule::Slice<_23d21115a_Log> _85520_errors;;
	({
		__jule_tuple_ssx_1b9b032eb_Token__jule_tuple_s_23d21115a_Log __jule_assign_result = _1ba819b38_parts(_85433_tokens, static_cast<jule::U32>(5LLU), true);
		_85513_parts = __jule_assign_result.__jule_result_arg0;
		_85520_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_85520_errors != nullptr)) {
		((*((*(_self_))._field_p))._field_errors).append(_85520_errors);;
		return nullptr;;
	} else if ((_85513_parts.len() > 1LL)) {
		return jule::Any(_1ba8064d7_buildTuple(_self_, &(_85513_parts)), &__jule_any_type80);;
	};
	return _1ba8150a6_build(_self_, _85433_tokens);;
}



inline jule::Ptr<_1b9b1caeb_Expr> _1ba815738_buildFromTokens(_1ba80556e_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _86538_tokens) {
	if ((_86538_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _86913_kind = _1ba8153e7_buildKind(_self_, &(_86538_tokens));;
	if ((_86913_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1b9b1caeb_Expr>(_1b9b1caeb_Expr{._field_Token=_86538_tokens[0LL], ._field_End=_86538_tokens[(_86538_tokens.len() - 1LL)], ._field_Kind=_86913_kind});;
}





std::ostream &operator<<(std::ostream &_Stream, _1ba80556e_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ba817839_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1ba81b2cc_stop(_1ba81aed0_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1ba81b563_stopped(_1ba81aed0_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1ba81b981_pushErr(_1ba81aed0_parser* _self_, jule::Ptr<_1b9b032eb_Token> _23626_token, jule::Str _23641_fmt, jule::Slice<jule::Any> _23654_args) {
	{ jule::Slice<_23d21115a_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1ba81a331_compilerErr(&(_23626_token), &(_23641_fmt), _23654_args)); };
}



inline void _1ba81bce4_pushSuggestion(_1ba81aed0_parser* _self_, jule::Str _24133_fmt, jule::Slice<jule::Any> _24146_args) {
	{
		_1ba81a6c7_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _24133_fmt, _24146_args);
	};
}



inline jule::Ptr<_1b9b1caeb_Expr> _1ba81c135_buildExpr(jule::Ptr<_1ba81aed0_parser> _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _24534_tokens) {
	return _1ba815738_buildFromTokens((*(_self_))._field_ep.ptr(), (*(_24534_tokens)));;
}



inline jule::Ptr<_1b9b17bd4_Directive> _1ba81c476_buildDirective(_1ba81aed0_parser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _24937_tokens) {
	if ((_24937_tokens.len() == 1LL)) {
		_1ba81b981_pushErr(_self_, _24937_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_24937_tokens[1LL]))._field_Column != ((*(_24937_tokens[0LL]))._field_Column + 1LL))) {
		_1ba81b981_pushErr(_self_, _24937_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1b9b17bd4_Directive>(_1b9b17bd4_Directive{._field_Tag=_24937_tokens[1LL], ._field_Args=_24937_tokens.slice(2LL)});;
}



inline void _1ba81c72e_pushDirective(_1ba81aed0_parser* _self_, jule::Ptr<_1b9b17bd4_Directive> _26436_d) {
	if ((_26436_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1caa6c243:;
		if (it != expr_end) {
			jule::Ptr<_1b9b17bd4_Directive> _26916_pd = *it;
			{
				if (((*((*(_26436_d))._field_Tag))._field_Kind == (*((*(_26916_pd))._field_Tag))._field_Kind)) {
					return;;
				};
			}
			_iter_next_1caa6c243:;
			++it;
			goto _iter_begin_1caa6c243;
		}
		_iter_end_1caa6c243:;
	};
	{ jule::Slice<jule::Ptr<_1b9b17bd4_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_26436_d); };
}



inline jule::Ptr<_1b9b287d8_ScopeTree> _1ba81cb2a_buildScope(jule::Ptr<_1ba81aed0_parser> _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _27735_tokens, jule::Ptr<_1b9b032eb_Token> _27757_end) {
	jule::Ptr<_1b9b287d8_ScopeTree> _27813_s = _1ba7e6395_newScope();;
	(*(_27813_s))._field_End=_27757_end;
	_1ba7e7e9b_scopeParser _28013_sp = _1ba7e7e9b_scopeParser{._field_p=_self_, };;
	_1ba804a02_build(&_28013_sp, _27735_tokens, &(_27813_s));
	return _27813_s;;
}



inline __jule_tuple_x_1b9b187b7_TypeDecl__jule_tuple_bool _1ba81d0d1__buildType(jule::Ptr<_1ba81aed0_parser> _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _28742_tokens, jule::I32* _28813_i, jule::Bool _28822_err) {
	__jule_tuple_x_1b9b187b7_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1ba82cd49_typeBuilder _28913_tb = _1ba82cd49_typeBuilder{._field_p=_self_, ._field_tokens=(*(_28742_tokens)), ._field_i=_28813_i, ._field_err=_28822_err};;
	jule::Ptr<_1b9b187b7_TypeDecl> _29513_decl;;
	jule::Bool _29519_ok = false;;
	({
		__jule_tuple_x_1b9b187b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ba830d2a_build(&_28913_tb);
		_29513_decl = __jule_assign_result.__jule_result_arg0;
		_29519_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _29513_decl;
	__jule_func_result.__jule_result_arg1 = _29519_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_1b9b187b7_TypeDecl__jule_tuple_bool _1ba81d587_buildType(jule::Ptr<_1ba81aed0_parser> _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _30041_tokens, jule::I32* _30113_i, jule::Bool _30122_err) {
	__jule_tuple_x_1b9b187b7_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1b9b032eb_Token> _3029_token = (*(_30041_tokens))[(*(_30113_i))];;
	jule::Ptr<_1b9b187b7_TypeDecl> _30313_t;;
	jule::Bool _30316_ok = false;;
	({
		__jule_tuple_x_1b9b187b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ba81d0d1__buildType(_self_, _30041_tokens, _30113_i, _30122_err);
		_30313_t = __jule_assign_result.__jule_result_arg0;
		_30316_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_30122_err && (!(_30316_ok)))) {
		_1ba81b981_pushErr(_self_.ptr(), _3029_token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _30313_t;
	__jule_func_result.__jule_result_arg1 = _30316_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1b9b3012a_TypeAliasDecl> _1ba81d8c8_buildTypeAliasDecl(jule::Ptr<_1ba81aed0_parser> _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _31043_tokens) {
	jule::I32 _31113_i = 1LL;;
	if ((_31113_i >= (*(_31043_tokens)).len())) {
		_1ba81b981_pushErr(_self_.ptr(), (*(_31043_tokens))[(_31113_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b9b3012a_TypeAliasDecl> _31613_tad = jule::new_ptr<_1b9b3012a_TypeAliasDecl>(_1b9b3012a_TypeAliasDecl{._field_Token=(*(_31043_tokens))[1LL], ._field_Ident=(*((*(_31043_tokens))[1LL]))._field_Kind, });;
	jule::Ptr<_1b9b032eb_Token> _32013_token = (*(_31043_tokens))[_31113_i];;
	if (((*(_32013_token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ba81b981_pushErr(_self_.ptr(), _32013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ba81bce4_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_31113_i)++;
	if ((_31113_i >= (*(_31043_tokens)).len())) {
		_1ba81b981_pushErr(_self_.ptr(), (*(_31043_tokens))[(_31113_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _31613_tad;;
	};
	_32013_token=(*(_31043_tokens))[_31113_i];
	if (((*(_32013_token))._field_Id != static_cast<jule::U32>(8LLU))) {
		_1ba81b981_pushErr(_self_.ptr(), (*(_31043_tokens))[(_31113_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ba81bce4_pushSuggestion(_self_.ptr(), jule::Str::lit("expected colon \":\"", 18), jule::Slice<jule::Any>());
		return _31613_tad;;
	};
	(_31113_i)++;
	if ((_31113_i >= (*(_31043_tokens)).len())) {
		_1ba81b981_pushErr(_self_.ptr(), (*(_31043_tokens))[(_31113_i - 1LL)], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return _31613_tad;;
	};
	jule::Ptr<_1b9b187b7_TypeDecl> _34113_t;;
	jule::Bool _34116_ok = false;;
	({
		__jule_tuple_x_1b9b187b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ba81d587_buildType(_self_, _31043_tokens, (&(_31113_i)), true);
		_34113_t = __jule_assign_result.__jule_result_arg0;
		_34116_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_31613_tad))._field_Kind=_34113_t;
	if ((_34116_ok && (_31113_i < (*(_31043_tokens)).len()))) {
		_1ba81b981_pushErr(_self_.ptr(), (*(_31043_tokens))[_31113_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_31613_tad))._field_Public=_1b9bce4b5_IsPub(&((*(_31613_tad))._field_Ident));
	return _31613_tad;;
}



inline void _1ba81dc3b_buildVarTypeAndExpr(jule::Ptr<_1ba81aed0_parser> _self_, jule::Ptr<_1b9b2b555_VarDecl>* _35044_v, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _35062_tokens) {
	jule::I32 _35113_i = 0LL;;
	jule::Ptr<_1b9b032eb_Token> _35213_tok = (*(_35062_tokens))[_35113_i];;
	if (((*(_35213_tok))._field_Id == static_cast<jule::U32>(8LLU))) {
		(_35113_i)++;
		if (((_35113_i >= (*(_35062_tokens)).len()) || ((*((*(_35062_tokens))[_35113_i]))._field_Id == static_cast<jule::U32>(71LLU)))) {
			_1ba81b981_pushErr(_self_.ptr(), _35213_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1b9b187b7_TypeDecl> _35917_t;;
		jule::Bool _35920_ok = false;;
		({
			__jule_tuple_x_1b9b187b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ba81d587_buildType(_self_, _35062_tokens, (&(_35113_i)), true);
			_35917_t = __jule_assign_result.__jule_result_arg0;
			_35920_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_35920_ok) {
			(*((*(_35044_v))))._field_Kind=_35917_t;
			if ((_35113_i >= (*(_35062_tokens)).len())) {
				return;;
			};
			_35213_tok=(*(_35062_tokens))[_35113_i];
		};
	};
	if (((*(_35213_tok))._field_Id != static_cast<jule::U32>(71LLU))) {
		_1ba81b981_pushErr(_self_.ptr(), _35213_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _37413_exprTokens = (*(_35062_tokens)).slice((_35113_i + 1LL));;
	if ((_37413_exprTokens.len() == 0LL)) {
		_1ba81b981_pushErr(_self_.ptr(), _35213_tok, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_35044_v))))._field_Expr=_1ba81c135_buildExpr(_self_, &(_37413_exprTokens));
}



inline void _1ba81e09e_buildVarCommon(jule::Ptr<_1ba81aed0_parser> _self_, jule::Ptr<_1b9b2b555_VarDecl>* _38239_v, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _38256_tokens) {
	(*((*(_38239_v))))._field_Token=_38256_tokens[0LL];
	if (((*((*((*(_38239_v))))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ba81b981_pushErr(_self_.ptr(), (*((*(_38239_v))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ba81bce4_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_38239_v))))._field_Ident=(*((*((*(_38239_v))))._field_Token))._field_Kind;
	(*((*(_38239_v))))._field_Public=_1b9bce4b5_IsPub(&((*((*(_38239_v))))._field_Ident));
	(*((*(_38239_v))))._field_Kind=nullptr;
	if ((_38256_tokens.len() > 1LL)) {
		(_38256_tokens).mut_slice(1LL);;
		_1ba81dc3b_buildVarTypeAndExpr(_self_, _38239_v, &(_38256_tokens));
	};
}



inline void _1ba81e4bc_buildVarBegin(_1ba81aed0_parser* _self_, jule::Ptr<_1b9b2b555_VarDecl>* _39837_v, jule::I32* _39855_i, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _39864_tokens) {
	jule::Ptr<_1b9b032eb_Token> _3999_tok = (*(_39864_tokens))[(*(_39855_i))];;
	{
		auto &_match_expr{ (*(_3999_tok))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_1caa86779:;
			{
				(*((*(_39837_v))))._field_Statically=true;
				goto _case_begin_1caa86c0d;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1caa86c0d:;
			{
				((*(_39855_i)))++;
				if (((*(_39855_i)) >= (*(_39864_tokens)).len())) {
					_1ba81b981_pushErr(_self_, _3999_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				if (((*((*(_39864_tokens))[(*(_39855_i))]))._field_Id == static_cast<jule::U32>(32LLU))) {
					(*((*(_39837_v))))._field_Mutable=true;
					((*(_39855_i)))++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU)) {
			_case_begin_1caa86449:;
			{
				((*(_39855_i)))++;
				(*((*(_39837_v))))._field_Constant=true;
			}
		}
		else {
			_case_begin_1caa863d3:;
			{
				_1ba81b981_pushErr(_self_, _3999_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1caa8637d:;
	};
	if (((*(_39855_i)) >= (*(_39864_tokens)).len())) {
		_1ba81b981_pushErr(_self_, _3999_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1b9b2b555_VarDecl> _1ba81e80d_buildVar(jule::Ptr<_1ba81aed0_parser> _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _42832_tokens) {
	jule::I32 _42913_i = 0LL;;
	jule::Ptr<_1b9b2b555_VarDecl> _43013_v = jule::new_ptr<_1b9b2b555_VarDecl>(_1b9b2b555_VarDecl{._field_Token=_42832_tokens[0LL], });;
	_1ba81e4bc_buildVarBegin(_self_.ptr(), &(_43013_v), &(_42913_i), &(_42832_tokens));
	if ((_42913_i >= _42832_tokens.len())) {
		return nullptr;;
	};
	(_42832_tokens).mut_slice(_42913_i);;
	if (((*(_42832_tokens[0LL]))._field_Id == static_cast<jule::U32>(65LLU))) {
		(*(_43013_v))._field_Reference=true;
		if ((_42832_tokens.len() == 1LL)) {
			return nullptr;;
		};
		(_42832_tokens).mut_slice(1LL);;
	};
	_1ba81e09e_buildVarCommon(_self_, &(_43013_v), _42832_tokens);
	return _43013_v;;
}



inline jule::Ptr<_1b9b259c2_GenericDecl> _1ba81eb4e_buildGeneric(jule::Ptr<_1ba81aed0_parser> _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _45037_tokens) {
	jule::Ptr<_1b9b259c2_GenericDecl> _45113_g = jule::new_ptr<_1b9b259c2_GenericDecl>(_1b9b259c2_GenericDecl{._field_Token=(*(_45037_tokens))[0LL], });;
	if (((*((*(_45113_g))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ba81b981_pushErr(_self_.ptr(), (*(_45113_g))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ba81bce4_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_45113_g))._field_Ident=(*((*(_45113_g))._field_Token))._field_Kind;
	if (((*(_45037_tokens)).len() > 1LL)) {
		if (((*((*(_45037_tokens))[1LL]))._field_Id != static_cast<jule::U32>(8LLU))) {
			_1ba81b981_pushErr(_self_.ptr(), (*(_45037_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_45037_tokens)).len() == 2LL)) {
			_1ba81b981_pushErr(_self_.ptr(), (*(_45037_tokens))[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1b9b032eb_Token>> _46817_constraintTokens = (*(_45037_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>> _46917_parts;;
		jule::Slice<_23d21115a_Log> _46924_errors;;
		({
			__jule_tuple_ssx_1b9b032eb_Token__jule_tuple_s_23d21115a_Log __jule_assign_result = _1ba819b38_parts(&(_46817_constraintTokens), static_cast<jule::U32>(66LLU), true);
			_46917_parts = __jule_assign_result.__jule_result_arg0;
			_46924_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_46924_errors.len() > 0LL)) {
			((*(_self_))._field_errors).append(_46924_errors);;
			return nullptr;;
		};
		(*(_45113_g))._field_Constraint=jule::new_ptr<_1b9b2551b_Constraint>(_1b9b2551b_Constraint{._field_Mask=jule::Slice<jule::Ptr<_1b9b187b7_TypeDecl>>::alloc(0LL, _46917_parts.len())});
		{
			auto expr = &(_46917_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1caa92d5c:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_1b9b032eb_Token>> _47525_part = *it;
				{
					jule::I32 _47621_i = 0LL;;
					jule::Ptr<_1b9b187b7_TypeDecl> _47721_kind;;
					({
						__jule_tuple_x_1b9b187b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ba81d587_buildType(_self_, &(_47525_part), (&(_47621_i)), true);
						_47721_kind = __jule_assign_result.__jule_result_arg0;
					});
					{ jule::Slice<jule::Ptr<_1b9b187b7_TypeDecl>> &__jule_push_dest = (*((*(_45113_g))._field_Constraint))._field_Mask; __jule_push_dest.push(_47721_kind); };
					if ((_47621_i < _47525_part.len())) {
						_1ba81b981_pushErr(_self_.ptr(), _47525_part[_47621_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1caa92d5c:;
				++it;
				goto _iter_begin_1caa92d5c;
			}
			_iter_end_1caa92d5c:;
		};
	};
	return _45113_g;;
}



inline jule::Slice<jule::Ptr<_1b9b259c2_GenericDecl>> _1ba82004a_buildGenerics(jule::Ptr<_1ba81aed0_parser> _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _48738_tokens, jule::Ptr<_1b9b032eb_Token>* _48757_errorToken) {
	if (((*(_48738_tokens)).len() == 0LL)) {
		_1ba81b981_pushErr(_self_.ptr(), (*(_48757_errorToken)), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>> _49313_parts;;
	jule::Slice<_23d21115a_Log> _49320_errors;;
	({
		__jule_tuple_ssx_1b9b032eb_Token__jule_tuple_s_23d21115a_Log __jule_assign_result = _1ba819b38_parts(_48738_tokens, static_cast<jule::U32>(5LLU), true);
		_49313_parts = __jule_assign_result.__jule_result_arg0;
		_49320_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_49320_errors.len() > 0LL)) {
		((*(_self_))._field_errors).append(_49320_errors);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b9b259c2_GenericDecl>> _49913_generics = jule::Slice<jule::Ptr<_1b9b259c2_GenericDecl>>::alloc(0LL, _49313_parts.len());;
	{
		auto expr = &(_49313_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1caa97647:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1b9b032eb_Token>> _50021_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1b9b259c2_GenericDecl>> &__jule_push_dest = _49913_generics; __jule_push_dest.push(_1ba81eb4e_buildGeneric(_self_, &(_50021_part))); };
			}
			_iter_next_1caa97647:;
			++it;
			goto _iter_begin_1caa97647;
		}
		_iter_end_1caa97647:;
	};
	return _49913_generics;;
}



inline jule::Ptr<_1b9b29025_ParamDecl> _1ba82038b_buildSelfParam(_1ba81aed0_parser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _50737_tokens) {
	if ((_50737_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1b9b29025_ParamDecl> _51213_param = jule::new_ptr<_1b9b29025_ParamDecl>();;
	jule::I32 _51513_i = 0LL;;
	if (((*(_50737_tokens[_51513_i]))._field_Id == static_cast<jule::U32>(32LLU))) {
		(*(_51213_param))._field_Mutable=true;
		(_51513_i)++;
		if ((_51513_i >= _50737_tokens.len())) {
			_1ba81b981_pushErr(_self_, _50737_tokens[(_51513_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	_23d16295d_StrBuilder _52513_ident = static__23d162c7c_New(5LL);;
	if (((*(_50737_tokens[_51513_i]))._field_Id == static_cast<jule::U32>(65LLU))) {
		_23d16b604_WriteStr(&_52513_ident, jule::Str::lit("&", 1));
		(_51513_i)++;
		if ((_51513_i >= _50737_tokens.len())) {
			_1ba81b981_pushErr(_self_, _50737_tokens[(_51513_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if (((*(_50737_tokens[_51513_i]))._field_Id == static_cast<jule::U32>(24LLU))) {
		_23d16b604_WriteStr(&_52513_ident, jule::Str::lit("self", 4));
		(*(_51213_param))._field_Token=_50737_tokens[_51513_i];
		(_51513_i)++;
		if ((_51513_i < _50737_tokens.len())) {
			_1ba81b981_pushErr(_self_, _50737_tokens[_51513_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	};
	(*(_51213_param))._field_Ident=_23d16bdeb_Str(&_52513_ident);
	return _51213_param;;
}



inline void _1ba8207a9_paramTypeBegin(_1ba81aed0_parser* _self_, jule::Ptr<_1b9b29025_ParamDecl>* _54938_param, jule::I32* _54962_i, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _54971_tokens) {
	for (; ((*(_54962_i)) < (*(_54971_tokens)).len()); ((*(_54962_i)))++) {
		{
			jule::Ptr<_1b9b032eb_Token> _55113_token = (*(_54971_tokens))[(*(_54962_i))];;
			if (((*(_55113_token))._field_Id != static_cast<jule::U32>(39LLU))) {
				return;;
			};
			if ((*((*(_54938_param))))._field_Variadic) {
				_1ba81b981_pushErr(_self_, _55113_token, jule::Str::lit("define is already variadic", 26), jule::Slice<jule::Any>());
				goto _iter_next_1caaa02ba;
			};
			(*((*(_54938_param))))._field_Variadic=true;
		}
	_iter_next_1caaa02ba:;
	}
	_iter_end_1caaa02ba:;;
}



inline void _1ba820b1c_buildParamType(jule::Ptr<_1ba81aed0_parser> _self_, jule::Ptr<_1b9b29025_ParamDecl>* _56439_param, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _56463_tokens) {
	jule::I32 _56513_i = 0LL;;
	_1ba8207a9_paramTypeBegin(_self_.ptr(), _56439_param, &(_56513_i), _56463_tokens);
	if ((_56513_i >= (*(_56463_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1b9b187b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ba81d587_buildType(_self_, _56463_tokens, (&(_56513_i)), true);
		(*((*(_56439_param))))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_56513_i < (*(_56463_tokens)).len())) {
		_1ba81b981_pushErr(_self_.ptr(), (*(_56463_tokens))[_56513_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1ba820e80_buildParamBody(jule::Ptr<_1ba81aed0_parser> _self_, jule::Ptr<_1b9b29025_ParamDecl>* _57739_param, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _57762_tokens) {
	jule::Ptr<_1b9b032eb_Token> _57813_tok = _57762_tokens[0LL];;
	if ((_57762_tokens.len() == 1LL)) {
		(*((*(_57739_param))))._field_Ident=(*(_57813_tok))._field_Kind;
		return;;
	} else if ((_57762_tokens.len() < 3LL)) {
		_1ba81b981_pushErr(_self_.ptr(), _57813_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_57762_tokens[1LL]))._field_Id != static_cast<jule::U32>(8LLU))) {
		(*((*(_57739_param))))._field_Ident=jule::Str::lit("<anonymous>", 11);
		_1ba820b1c_buildParamType(_self_, _57739_param, &(_57762_tokens));
		return;;
	};
	(*((*(_57739_param))))._field_Ident=(*(_57813_tok))._field_Kind;
	(_57762_tokens).mut_slice(2LL);;
	_1ba820b1c_buildParamType(_self_, _57739_param, &(_57762_tokens));
}



inline jule::Ptr<_1b9b29025_ParamDecl> _1ba8212c1_buildParam(jule::Ptr<_1ba81aed0_parser> _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _59734_tokens) {
	jule::Ptr<_1b9b29025_ParamDecl> _59813_param = jule::new_ptr<_1b9b29025_ParamDecl>(_1b9b29025_ParamDecl{._field_Token=_59734_tokens[0LL], });;
	if (((*((*(_59813_param))._field_Token))._field_Id == static_cast<jule::U32>(32LLU))) {
		(*(_59813_param))._field_Mutable=true;
		if ((_59734_tokens.len() == 1LL)) {
			_1ba81b981_pushErr(_self_.ptr(), _59734_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_59734_tokens).mut_slice(1LL);;
		(*(_59813_param))._field_Token=_59734_tokens[0LL];
	};
	if ((_59734_tokens.len() >= 3LL)) {
		if (((*((*(_59813_param))._field_Token))._field_Id == static_cast<jule::U32>(65LLU))) {
			if ((_59734_tokens.len() == 1LL)) {
				_1ba81b981_pushErr(_self_.ptr(), _59734_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if ((((*(_59734_tokens[1LL]))._field_Id == static_cast<jule::U32>(1LLU)) && ((*(_59734_tokens[2LL]))._field_Id == static_cast<jule::U32>(8LLU)))) {
				(*(_59813_param))._field_Reference=true;
				(_59734_tokens).mut_slice(1LL);;
				(*(_59813_param))._field_Token=_59734_tokens[0LL];
			};
		};
	};
	if (((*((*(_59813_param))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		(*(_59813_param))._field_Ident=jule::Str::lit("<anonymous>", 11);
		_1ba820b1c_buildParamType(_self_, &(_59813_param), &(_59734_tokens));
	} else {
		_1ba820e80_buildParamBody(_self_, &(_59813_param), _59734_tokens);
	};
	return _59813_param;;
}



inline void _1ba821579_checkParams(_1ba81aed0_parser* _self_, jule::Slice<jule::Ptr<_1b9b29025_ParamDecl>>* _64035_params) {
	{
		auto expr = _64035_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1caaaea38:;
		if (it != expr_end) {
			jule::Ptr<_1b9b29025_ParamDecl> _64121_param = *it;
			{
				if ((_1b9b29399_IsSelf(_64121_param.ptr()) || ((*(_64121_param))._field_Kind != nullptr))) {
					goto _iter_next_1caaaea38;
				};
				if (((*(_64121_param))._field_Token == nullptr)) {
					_1ba81b981_pushErr(_self_, (*(_64121_param))._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
				} else {
					(*(_64121_param))._field_Kind=jule::new_ptr<_1b9b187b7_TypeDecl>(_1b9b187b7_TypeDecl{._field_Token=(*(_64121_param))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1b9b18dc2_IdentTypeDecl>(_1b9b18dc2_IdentTypeDecl{._field_Token=(*(_64121_param))._field_Token, ._field_Ident=(*((*(_64121_param))._field_Token))._field_Kind, }), &__jule_any_type20)});
					(*(_64121_param))._field_Ident=jule::Str::lit("<anonymous>", 11);
				};
			}
			_iter_next_1caaaea38:;
			++it;
			goto _iter_begin_1caaaea38;
		}
		_iter_end_1caaaea38:;
	};
}



inline jule::Slice<jule::Ptr<_1b9b29025_ParamDecl>> _1ba821975_buildParams(jule::Ptr<_1ba81aed0_parser> _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _66036_tokens, jule::Bool _66054_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>> _66113_parts;;
	jule::Slice<_23d21115a_Log> _66120_errs;;
	({
		__jule_tuple_ssx_1b9b032eb_Token__jule_tuple_s_23d21115a_Log __jule_assign_result = _1ba819b38_parts(_66036_tokens, static_cast<jule::U32>(5LLU), true);
		_66113_parts = __jule_assign_result.__jule_result_arg0;
		_66120_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*(_self_))._field_errors).append(_66120_errs);;
	if ((_66113_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b9b29025_ParamDecl>> _66717_params = nullptr;;
	if ((_66054_method && (_66113_parts.len() > 0LL))) {
		jule::Ptr<_1b9b29025_ParamDecl> _66917_param = _1ba82038b_buildSelfParam(_self_.ptr(), _66113_parts[0LL]);;
		if (((_66917_param != nullptr) && _1b9b29399_IsSelf(_66917_param.ptr()))) {
			{ jule::Slice<jule::Ptr<_1b9b29025_ParamDecl>> &__jule_push_dest = _66717_params; __jule_push_dest.push(_66917_param); };
			(_66113_parts).mut_slice(1LL);;
		};
	};
	{
		auto expr = &(_66113_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1caab626a:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1b9b032eb_Token>> _67621_part = *it;
			{
				jule::Ptr<_1b9b29025_ParamDecl> _67717_param = _1ba8212c1_buildParam(_self_, _67621_part);;
				if ((_67717_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_1b9b29025_ParamDecl>> &__jule_push_dest = _66717_params; __jule_push_dest.push(_67717_param); };
				};
			}
			_iter_next_1caab626a:;
			++it;
			goto _iter_begin_1caab626a;
		}
		_iter_end_1caab626a:;
	};
	_1ba821579_checkParams(_self_.ptr(), &(_66717_params));
	return _66717_params;;
}



inline __jule_tuple_x_1b9b1b6aa_RetTypeDecl__jule_tuple_bool _1ba821d71_buildMultiRetType(jule::Ptr<_1ba81aed0_parser> _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _68742_tokens, jule::I32* _68765_i) {
	__jule_tuple_x_1b9b1b6aa_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1b9b1b6aa_RetTypeDecl>();
	((*(_68765_i)))++;
	if (((*(_68765_i)) >= (*(_68742_tokens)).len())) {
		((*(_68765_i)))--;
		({
			__jule_tuple_x_1b9b187b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ba81d587_buildType(_self_, _68742_tokens, _68765_i, false);
			(*(__jule_func_result.__jule_result_arg0))._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_68765_i)))--;
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _69713_rangeTokens = _1ba8193b8_range(_68765_i, static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), _68742_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>> _69913_parts;;
	jule::Slice<_23d21115a_Log> _69920_errs;;
	({
		__jule_tuple_ssx_1b9b032eb_Token__jule_tuple_s_23d21115a_Log __jule_assign_result = _1ba819b38_parts(&(_69713_rangeTokens), static_cast<jule::U32>(5LLU), true);
		_69913_parts = __jule_assign_result.__jule_result_arg0;
		_69920_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*(_self_))._field_errors).append(_69920_errs);;
	if ((_69913_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1b9b187b7_TypeDecl>> _70513_types = jule::Slice<jule::Ptr<_1b9b187b7_TypeDecl>>::alloc(0LL, _69913_parts.len());;
	(*(__jule_func_result.__jule_result_arg0))._field_Idents=jule::Slice<jule::Ptr<_1b9b032eb_Token>>::alloc(0LL, _69913_parts.len());
	{
		auto expr = &(_69913_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1caabb47e:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1b9b032eb_Token>> _70721_part = *it;
			{
				jule::Ptr<_1b9b032eb_Token> _70817_token = _70721_part[0LL];;
				jule::I32 _70917_offset = 0LL;;
				if ((_70721_part.len() > 1LL)) {
					_70817_token=_70721_part[1LL];
					if (((*(_70817_token))._field_Id == static_cast<jule::U32>(8LLU))) {
						_70917_offset=2LL;
						if ((_70721_part.len() < 3LL)) {
							_1ba81b981_pushErr(_self_.ptr(), _70817_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							goto _iter_next_1caabb47e;
						};
					};
				};
				_70817_token=_70721_part[0LL];
				if ((_70917_offset != 2LL)) {
					jule::Ptr<_1b9b032eb_Token> _72521_newToken = jule::new_ptr<_1b9b032eb_Token>((*(_70817_token)));;
					(*(_72521_newToken))._field_Kind=jule::Str::lit("<anonymous>", 11);
					{ jule::Slice<jule::Ptr<_1b9b032eb_Token>> &__jule_push_dest = (*(__jule_func_result.__jule_result_arg0))._field_Idents; __jule_push_dest.push(_72521_newToken); };
				} else {
					{ jule::Slice<jule::Ptr<_1b9b032eb_Token>> &__jule_push_dest = (*(__jule_func_result.__jule_result_arg0))._field_Idents; __jule_push_dest.push(_70817_token); };
				};
				jule::Ptr<_1b9b187b7_TypeDecl> _73217_tk;;
				({
					__jule_tuple_x_1b9b187b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ba81d587_buildType(_self_, &(_70721_part), (&(_70917_offset)), true);
					_73217_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_70917_offset < _70721_part.len())) {
					_1ba81b981_pushErr(_self_.ptr(), _70721_part[_70917_offset], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1b9b187b7_TypeDecl>> &__jule_push_dest = _70513_types; __jule_push_dest.push(_73217_tk); };
			}
			_iter_next_1caabb47e:;
			++it;
			goto _iter_begin_1caabb47e;
		}
		_iter_end_1caabb47e:;
	};
	if ((_70513_types.len() > 1LL)) {
		(*(__jule_func_result.__jule_result_arg0))._field_Kind=jule::new_ptr<_1b9b187b7_TypeDecl>(_1b9b187b7_TypeDecl{._field_Token=(*(_68742_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1b9b19ee4_TupleTypeDecl>(_1b9b19ee4_TupleTypeDecl{._field_Types=_70513_types}), &__jule_any_type74)});
	} else {
		(*(__jule_func_result.__jule_result_arg0))._field_Kind=_70513_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1b9b1b6aa_RetTypeDecl__jule_tuple_bool _1ba82226c_buildRetType(jule::Ptr<_1ba81aed0_parser> _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _75537_tokens, jule::I32* _75560_i) {
	__jule_tuple_x_1b9b1b6aa_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1b9b1b6aa_RetTypeDecl>();
	if (((*(_75560_i)) >= (*(_75537_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1b9b032eb_Token> _76113_token = (*(_75537_tokens))[(*(_75560_i))];;
	{
		auto &_match_expr{ (*(_76113_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(72LLU)) {
			_case_begin_1caac470c:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(71LLU)) {
			_case_begin_1caac4784:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(8LLU)) {
			_case_begin_1caac480b:;
			{
				if ((((*(_75560_i)) + 1LL) >= (*(_75537_tokens)).len())) {
					_1ba81b981_pushErr(_self_.ptr(), _76113_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_75560_i)))++;
				_76113_token=(*(_75537_tokens))[(*(_75560_i))];
				{
					auto &_match_expr{ (*(_76113_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1caac6599:;
						{
							({
								__jule_tuple_x_1b9b1b6aa_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1ba821d71_buildMultiRetType(_self_, _75537_tokens, _75560_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1caac6621:;
						{
							_1ba81b981_pushErr(_self_.ptr(), _76113_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_1caac6533:;
				};
				({
					__jule_tuple_x_1b9b187b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ba81d587_buildType(_self_, _75537_tokens, _75560_i, true);
					(*(__jule_func_result.__jule_result_arg0))._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1caac4685:;
	};
	((*(_75560_i)))++;
	_1ba81b981_pushErr(_self_.ptr(), _76113_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1b9b2a477_FnDecl> _1ba822723_buildFnPrototype(jule::Ptr<_1ba81aed0_parser> _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _79441_tokens, jule::I32* _79464_i, jule::Bool _79472_method) {
	jule::Ptr<_1b9b2a477_FnDecl> _79513_f = jule::new_ptr<_1b9b2a477_FnDecl>(_1b9b2a477_FnDecl{._field_Token=(*(_79441_tokens))[(*(_79464_i))], });;
	if (((*((*(_79513_f))._field_Token))._field_Id == static_cast<jule::U32>(34LLU))) {
		(*(_79513_f))._field_Statically=true;
		((*(_79464_i)))++;
		if (((*(_79464_i)) >= (*(_79441_tokens)).len())) {
			_1ba81b981_pushErr(_self_.ptr(), (*(_79513_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*(_79513_f))._field_Token=(*(_79441_tokens))[(*(_79464_i))];
	};
	if (((*((*(_79513_f))._field_Token))._field_Id == static_cast<jule::U32>(31LLU))) {
		(*(_79513_f))._field_Unsafety=true;
		((*(_79464_i)))++;
		if (((*(_79464_i)) >= (*(_79441_tokens)).len())) {
			_1ba81b981_pushErr(_self_.ptr(), (*(_79513_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*(_79513_f))._field_Token=(*(_79441_tokens))[(*(_79464_i))];
	};
	((*(_79464_i)))++;
	if (((*(_79464_i)) >= (*(_79441_tokens)).len())) {
		_1ba81b981_pushErr(_self_.ptr(), (*(_79513_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b9b032eb_Token> _8289_tok = (*(_79441_tokens))[(*(_79464_i))];;
	if (((*(_8289_tok))._field_Id == static_cast<jule::U32>(1LLU))) {
		((*(_79464_i)))++;
		if (((*(_79464_i)) >= (*(_79441_tokens)).len())) {
			_1ba81b981_pushErr(_self_.ptr(), (*(_79513_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*(_79513_f))._field_Ident=(*(_8289_tok))._field_Kind;
	} else {
		(*(_79513_f))._field_Ident=jule::Str::lit("<anonymous>", 11);
	};
	jule::Ptr<_1b9b032eb_Token> _8409_errorToken = (*(_79441_tokens))[(*(_79464_i))];;
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _84113_genericsTokens = _1ba8193b8_range(_79464_i, static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), _79441_tokens);;
	if ((_84113_genericsTokens != nullptr)) {
		(*(_79513_f))._field_Generics=_1ba82004a_buildGenerics(_self_, &(_84113_genericsTokens), &(_8409_errorToken));
	};
	if (((*((*(_79441_tokens))[(*(_79464_i))]))._field_Id != static_cast<jule::U32>(74LLU))) {
		_1ba81b981_pushErr(_self_.ptr(), (*(_79441_tokens))[(*(_79464_i))], jule::Str::lit("missing function parentheses", 28), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _85113_paramsToks = _1ba8193b8_range(_79464_i, static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), _79441_tokens);;
	if ((_85113_paramsToks.len() > 0LL)) {
		(*(_79513_f))._field_Params=_1ba821975_buildParams(_self_, &(_85113_paramsToks), _79472_method);
	};
	if (((*(_79464_i)) < (*(_79441_tokens)).len())) {
		jule::Ptr<_1b9b032eb_Token> _85713_token = (*(_79441_tokens))[(*(_79464_i))];;
		if (((*(_85713_token))._field_Id == static_cast<jule::U32>(68LLU))) {
			(*(_79513_f))._field_Exceptional=true;
			((*(_79464_i)))++;
		};
	};
	(*(_79513_f))._field_Public=_1b9bce4b5_IsPub(&((*(_79513_f))._field_Ident));
	({
		__jule_tuple_x_1b9b1b6aa_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1ba82226c_buildRetType(_self_, _79441_tokens, _79464_i);
		(*(_79513_f))._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _79513_f;;
}



inline jule::Ptr<_1b9b2a477_FnDecl> _1ba822bc9_buildFn(jule::Ptr<_1ba81aed0_parser> _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _87132_tokens, jule::Bool _87150_method, jule::Bool _87164_prototype) {
	jule::I32 _87213_i = 0LL;;
	jule::Ptr<_1b9b2a477_FnDecl> _87313_f = _1ba822723_buildFnPrototype(_self_, _87132_tokens, &(_87213_i), _87150_method);;
	if (_87164_prototype) {
		if ((_87213_i < (*(_87132_tokens)).len())) {
			_1ba81b981_pushErr(_self_.ptr(), (*(_87132_tokens))[(_87213_i + 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		return _87313_f;;
	} else if ((_87313_f == nullptr)) {
		return _87313_f;;
	};
	if ((_87213_i >= (*(_87132_tokens)).len())) {
		_1ba81b2cc_stop(_self_.ptr());
		_1ba81b981_pushErr(_self_.ptr(), (*(_87313_f))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1ba81bce4_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _88913_blockTokens = _1ba8193b8_range(&(_87213_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _87132_tokens);;
	if ((_88913_blockTokens != nullptr)) {
		(*(_87313_f))._field_Scope=_1ba81cb2a_buildScope(_self_, &(_88913_blockTokens), (*(_87132_tokens))[(_87213_i - 1LL)]);
		(*((*(_87313_f))._field_Scope))._field_Unsafety=(*(_87313_f))._field_Unsafety;
		if ((_87213_i < (*(_87132_tokens)).len())) {
			_1ba81b981_pushErr(_self_.ptr(), (*(_87132_tokens))[_87213_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	} else {
		_1ba81b2cc_stop(_self_.ptr());
		_1ba81b981_pushErr(_self_.ptr(), (*(_87313_f))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1ba81bce4_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _87313_f;;
}



inline jule::Slice<jule::Ptr<_1b9b032eb_Token>> _1ba82301a_getUseDeclSelectors(_1ba81aed0_parser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _90542_tokens) {
	jule::I32 _90613_i = 0LL;;
	_90542_tokens=_1ba8193b8_range(&(_90613_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_90542_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>> _90813_parts;;
	jule::Slice<_23d21115a_Log> _90820_errs;;
	({
		__jule_tuple_ssx_1b9b032eb_Token__jule_tuple_s_23d21115a_Log __jule_assign_result = _1ba819b38_parts(&(_90542_tokens), static_cast<jule::U32>(5LLU), true);
		_90813_parts = __jule_assign_result.__jule_result_arg0;
		_90820_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_90820_errs.len() > 0LL)) {
		((*(_self_))._field_errors).append(_90820_errs);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _91413_selectors = jule::Slice<jule::Ptr<_1b9b032eb_Token>>::alloc(0LL, _90813_parts.len());;
	{
		auto expr = &(_90813_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1caae35c7:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1b9b032eb_Token>> _91521_part = *it;
			{
				if ((_91521_part.len() > 1LL)) {
					_1ba81b981_pushErr(_self_, _91521_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1b9b032eb_Token> _91917_tok = _91521_part[0LL];;
				if ((((*(_91917_tok))._field_Id != static_cast<jule::U32>(1LLU)) && ((*(_91917_tok))._field_Id != static_cast<jule::U32>(24LLU)))) {
					_1ba81b981_pushErr(_self_, _91917_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					_1ba81bce4_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					goto _iter_next_1caae35c7;
				};
				{ jule::Slice<jule::Ptr<_1b9b032eb_Token>> &__jule_push_dest = _91413_selectors; __jule_push_dest.push(_91917_tok); };
			}
			_iter_next_1caae35c7:;
			++it;
			goto _iter_begin_1caae35c7;
		}
		_iter_end_1caae35c7:;
	};
	return _91413_selectors;;
}



inline void _1ba82337d_buildBindUseDecl(_1ba81aed0_parser* _self_, jule::Ptr<_1b9b31637_UseDecl>* _93040_decl, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _93057_tokens) {
	if (((*(_93057_tokens)).len() > 1LL)) {
		_1ba81b981_pushErr(_self_, (*(_93057_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b9b032eb_Token> _9349_token = (*(_93057_tokens))[0LL];;
	if ((((*(_9349_token))._field_Id != static_cast<jule::U32>(4LLU)) || (((*(_9349_token))._field_Kind[0LL] != '`') && ((*(_9349_token))._field_Kind[0LL] != '\"')))) {
		_1ba81b981_pushErr(_self_, _9349_token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_93040_decl))))._field_Binded=true;
	(*((*(_93040_decl))))._field_LinkPath=(*(_9349_token))._field_Kind.slice(1LL, ((*(_9349_token))._field_Kind.len() - 1LL));
}



inline void _1ba8236e1_buildStdUseDecl(_1ba81aed0_parser* _self_, jule::Ptr<_1b9b31637_UseDecl>* _94339_decl, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _94359_tokens) {
	(*((*(_94339_decl))))._field_Std=true;
	jule::Ptr<_1b9b032eb_Token> _94613_token = _94359_tokens[0LL];;
	if ((_94359_tokens.len() < 3LL)) {
		_1ba81b981_pushErr(_self_, _94613_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(_94359_tokens).mut_slice(2LL);;
	_94613_token=_94359_tokens[(_94359_tokens.len() - 1LL)];
	{
		auto &_match_expr{ (*(_94613_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_1caaebb41:;
			{
				_1ba81b981_pushErr(_self_, _94613_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_1caaebbb8:;
			{
				jule::Slice<jule::Ptr<_1b9b032eb_Token>> _95921_selectors = nullptr;;
				({
					__jule_tuple_sx_1b9b032eb_Token__jule_tuple_sx_1b9b032eb_Token __jule_assign_result = _1ba819682_rangeLast(&(_94359_tokens));
					_94359_tokens = __jule_assign_result.__jule_result_arg0;
					_95921_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_94339_decl))))._field_Selected=_1ba82301a_getUseDeclSelectors(_self_, _95921_selectors);
				if ((_94359_tokens.len() == 0LL)) {
					_1ba81b981_pushErr(_self_, _94613_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_94613_token=_94359_tokens[(_94359_tokens.len() - 1LL)];
				if (((*(_94613_token))._field_Id != static_cast<jule::U32>(19LLU))) {
					_1ba81b981_pushErr(_self_, _94613_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_94359_tokens).mut_slice(0LL, (_94359_tokens.len() - 1LL));;
				if ((_94359_tokens.len() == 0LL)) {
					_1ba81b981_pushErr(_self_, _94613_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1caaebc40:;
			{
				(_94359_tokens).mut_slice(0LL, (_94359_tokens.len() - 1LL));;
				if ((_94359_tokens.len() == 0LL)) {
					_1ba81b981_pushErr(_self_, _94613_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_94613_token=_94359_tokens[(_94359_tokens.len() - 1LL)];
				if (((*(_94613_token))._field_Id != static_cast<jule::U32>(19LLU))) {
					_1ba81b981_pushErr(_self_, _94613_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_94359_tokens).mut_slice(0LL, (_94359_tokens.len() - 1LL));;
				if ((_94359_tokens.len() == 0LL)) {
					_1ba81b981_pushErr(_self_, _94613_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_94339_decl))))._field_Full=true;
			}
		}
		_match_end_1caaebab9:;
	};
	(*((*(_94339_decl))))._field_LinkPath=(jule::Str::lit("std::", 5) + _1ba81aa6d_tokstoa(&(_94359_tokens)));
}



inline void _1ba823a54_buildIdentUseDecl(_1ba81aed0_parser* _self_, jule::Ptr<_1b9b31637_UseDecl>* _99741_decl, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _99761_tokens) {
	(*((*(_99741_decl))))._field_Std=false;
	jule::Ptr<_1b9b032eb_Token> _100013_token = _99761_tokens[(_99761_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ (*(_100013_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_1cab04473:;
			{
				_1ba81b981_pushErr(_self_, _100013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_1cab05265:;
			{
				jule::Slice<jule::Ptr<_1b9b032eb_Token>> _100621_selectors = nullptr;;
				({
					__jule_tuple_sx_1b9b032eb_Token__jule_tuple_sx_1b9b032eb_Token __jule_assign_result = _1ba819682_rangeLast(&(_99761_tokens));
					_99761_tokens = __jule_assign_result.__jule_result_arg0;
					_100621_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_99741_decl))))._field_Selected=_1ba82301a_getUseDeclSelectors(_self_, _100621_selectors);
				if ((_99761_tokens.len() == 0LL)) {
					_1ba81b981_pushErr(_self_, _100013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100013_token=_99761_tokens[(_99761_tokens.len() - 1LL)];
				if (((*(_100013_token))._field_Id != static_cast<jule::U32>(19LLU))) {
					_1ba81b981_pushErr(_self_, _100013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_99761_tokens).mut_slice(0LL, (_99761_tokens.len() - 1LL));;
				if ((_99761_tokens.len() == 0LL)) {
					_1ba81b981_pushErr(_self_, _100013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1cab052cb:;
			{
				(_99761_tokens).mut_slice(0LL, (_99761_tokens.len() - 1LL));;
				if ((_99761_tokens.len() == 0LL)) {
					_1ba81b981_pushErr(_self_, _100013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100013_token=_99761_tokens[(_99761_tokens.len() - 1LL)];
				if (((*(_100013_token))._field_Id != static_cast<jule::U32>(19LLU))) {
					_1ba81b981_pushErr(_self_, _100013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_99761_tokens).mut_slice(0LL, (_99761_tokens.len() - 1LL));;
				if ((_99761_tokens.len() == 0LL)) {
					_1ba81b981_pushErr(_self_, _100013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_99741_decl))))._field_Full=true;
			}
		}
		_match_end_1cab05155:;
	};
	(*((*(_99741_decl))))._field_LinkPath=_1ba81aa6d_tokstoa(&(_99761_tokens));
}



inline void _1ba823db7_parseUseDecl(_1ba81aed0_parser* _self_, jule::Ptr<_1b9b31637_UseDecl>* _104536_decl, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _104556_tokens) {
	if ((*((*(_104536_decl))))._field_Binded) {
		_1ba82337d_buildBindUseDecl(_self_, _104536_decl, &(_104556_tokens));
		return;;
	};
	jule::Ptr<_1b9b032eb_Token> _105113_token = _104556_tokens[0LL];;
	if (((*(_105113_token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ba81b981_pushErr(_self_, _105113_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ba81bce4_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	if (((_104556_tokens.len() > 2LL) && ((*(_104556_tokens[1LL]))._field_Id == static_cast<jule::U32>(9LLU)))) {
		(*((*(_104536_decl))))._field_Alias=(*(_105113_token))._field_Kind;
		if (((*(_104556_tokens[2LL]))._field_Id != static_cast<jule::U32>(1LLU))) {
			_1ba81b981_pushErr(_self_, _105113_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_1ba81bce4_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			return;;
		};
		(_104556_tokens).mut_slice(2LL);;
		_105113_token=_104556_tokens[0LL];
	};
	;
	{
		
		if ((*(_105113_token))._field_Kind.equal("std", 3)) {
			_case_begin_1cab1200d:;
			{
				_1ba8236e1_buildStdUseDecl(_self_, _104536_decl, _104556_tokens);
			}
		}
		else {
			_case_begin_1cab11a79:;
			{
				_1ba823a54_buildIdentUseDecl(_self_, _104536_decl, _104556_tokens);
			}
		}
		_match_end_1cab11a13:;
	};
}



inline jule::Ptr<_1b9b31637_UseDecl> _1ba8242b3_buildUseDecl(_1ba81aed0_parser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _107935_tokens, jule::Bool _107953_binded) {
	jule::Ptr<_1b9b31637_UseDecl> _108013_decl = jule::new_ptr<_1b9b31637_UseDecl>(_1b9b31637_UseDecl{._field_Token=_107935_tokens[0LL], ._field_Binded=_107953_binded, });;
	if ((_107935_tokens.len() < 2LL)) {
		_1ba81b981_pushErr(_self_, (*(_108013_decl))._field_Token, jule::Str::lit("missing path of use statement", 29), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_107935_tokens).mut_slice(1LL);;
	_1ba823db7_parseUseDecl(_self_, &(_108013_decl), _107935_tokens);
	return _108013_decl;;
}



inline jule::Ptr<_1b9b187b7_TypeDecl> _1ba8246ae_buildTypeEnumItemKind(jule::Ptr<_1ba81aed0_parser> _self_, jule::I32* _109346_i, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _109359_tokens) {
	jule::I32 _109413_braceN = 0LL;;
	jule::I32 _10959_exprStart = (*(_109346_i));;
	for (; ((*(_109346_i)) < (*(_109359_tokens)).len()); ((*(_109346_i)))++) {
		{
			jule::Ptr<_1b9b032eb_Token> _109713_t = (*(_109359_tokens))[(*(_109346_i))];;
			{
				auto &_match_expr{ (*(_109713_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1cab15c37:;
					{
						(_109413_braceN)++;
						goto _iter_next_1cab15198;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1cab15cae:;
					{
						(_109413_braceN)--;
					}
				}
				_match_end_1cab15bc1:;
			};
			if ((_109413_braceN > 0LL)) {
				goto _iter_next_1cab15198;
			};
			if ((((*(_109713_t))._field_Id == static_cast<jule::U32>(5LLU)) || (((*(_109346_i)) + 1LL) >= (*(_109359_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1b9b032eb_Token>> _111325_kindTokens = nullptr;;
				if (((*(_109713_t))._field_Id == static_cast<jule::U32>(5LLU))) {
					_111325_kindTokens=(*(_109359_tokens)).slice(_10959_exprStart, (*(_109346_i)));
				} else {
					_111325_kindTokens=(*(_109359_tokens)).slice(_10959_exprStart);
				};
				jule::I32 _111921_j = 0LL;;
				jule::Ptr<_1b9b187b7_TypeDecl> _112021_kind;;
				({
					__jule_tuple_x_1b9b187b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ba81d587_buildType(_self_, &(_111325_kindTokens), (&(_111921_j)), true);
					_112021_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_111921_j < _111325_kindTokens.len())) {
					_1ba81b981_pushErr(_self_.ptr(), _111325_kindTokens[_111921_j], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				return _112021_kind;;
			};
		}
	_iter_next_1cab15198:;
	}
	_iter_end_1cab15198:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1b9b32ec9_TypeEnumItemDecl>> _1ba824a00_buildTypeEnumItems(jule::Ptr<_1ba81aed0_parser> _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _113043_tokens) {
	jule::Slice<jule::Ptr<_1b9b32ec9_TypeEnumItemDecl>> _113113_items = jule::Slice<jule::Ptr<_1b9b32ec9_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I32 _113213_i = 0LL;;
	for (; (_113213_i < (*(_113043_tokens)).len()); (_113213_i)++) {
		{
			jule::Ptr<_1b9b032eb_Token> _113417_t = (*(_113043_tokens))[_113213_i];;
			jule::Ptr<_1b9b32ec9_TypeEnumItemDecl> _113517_item = jule::new_ptr<_1b9b32ec9_TypeEnumItemDecl>();;
			(*(_113517_item))._field_Token=_113417_t;
			if ((((*((*(_113517_item))._field_Token))._field_Id == static_cast<jule::U32>(1LLU)) && (((*(_113043_tokens)).len() - _113213_i) > 2LL))) {
				_113417_t=(*(_113043_tokens))[(_113213_i + 1LL)];
				if (((*(_113417_t))._field_Id == static_cast<jule::U32>(8LLU))) {
					(*(_113517_item))._field_Ident=(*((*(_113517_item))._field_Token))._field_Kind;
					_113213_i+=2LL;
					if (((_113213_i >= (*(_113043_tokens)).len()) || ((*((*(_113043_tokens))[_113213_i]))._field_Id == static_cast<jule::U32>(5LLU)))) {
						_1ba81b981_pushErr(_self_.ptr(), _113417_t, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
						goto _iter_next_1cab1aa83;
					};
				};
			};
			(*(_113517_item))._field_Kind=_1ba8246ae_buildTypeEnumItemKind(_self_, &(_113213_i), _113043_tokens);
			{ jule::Slice<jule::Ptr<_1b9b32ec9_TypeEnumItemDecl>> &__jule_push_dest = _113113_items; __jule_push_dest.push(_113517_item); };
		}
	_iter_next_1cab1aa83:;
	}
	_iter_end_1cab1aa83:;;
	return _113113_items;;
}



inline jule::Ptr<_1b9b33639_TypeEnumDecl> _1ba824d41_buildTypeEnumDecl(jule::Ptr<_1ba81aed0_parser> _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _115442_tokens) {
	jule::I32 _115513_i = 1LL;;
	jule::Ptr<_1b9b33639_TypeEnumDecl> _115613_e = jule::new_ptr<_1b9b33639_TypeEnumDecl>(_1b9b33639_TypeEnumDecl{._field_Token=(*(_115442_tokens))[_115513_i], });;
	if (((*((*(_115613_e))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ba81b981_pushErr(_self_.ptr(), (*(_115613_e))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ba81bce4_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_115613_e))._field_Ident=(*((*(_115613_e))._field_Token))._field_Kind;
	_115513_i+=3LL;
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _116613_itemTokens = _1ba8193b8_range(&(_115513_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _115442_tokens);;
	if ((_116613_itemTokens == nullptr)) {
		_1ba81b2cc_stop(_self_.ptr());
		_1ba81b981_pushErr(_self_.ptr(), (*(_115613_e))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1ba81bce4_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _115613_e;;
	} else if ((_115513_i < (*(_115442_tokens)).len())) {
		_1ba81b981_pushErr(_self_.ptr(), (*(_115442_tokens))[_115513_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_115613_e))._field_Public=_1b9bce4b5_IsPub(&((*(_115613_e))._field_Ident));
	(*(_115613_e))._field_End=(*(_115442_tokens))[(_115513_i - 1LL)];
	(*(_115613_e))._field_Items=_1ba824a00_buildTypeEnumItems(_self_, &(_116613_itemTokens));
	return _115613_e;;
}



inline jule::Ptr<_1b9b1caeb_Expr> _1ba82523c_buildEnumItemExpr(jule::Ptr<_1ba81aed0_parser> _self_, jule::I32* _118142_i, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _118155_tokens) {
	jule::I32 _118213_braceN = 0LL;;
	jule::I32 _11839_exprStart = (*(_118142_i));;
	for (; ((*(_118142_i)) < (*(_118155_tokens)).len()); ((*(_118142_i)))++) {
		{
			jule::Ptr<_1b9b032eb_Token> _118513_t = (*(_118155_tokens))[(*(_118142_i))];;
			{
				auto &_match_expr{ (*(_118513_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1cab27562:;
					{
						(_118213_braceN)++;
						goto _iter_next_1cab269c3;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1cab275d9:;
					{
						(_118213_braceN)--;
					}
				}
				_match_end_1cab274eb:;
			};
			if ((_118213_braceN > 0LL)) {
				goto _iter_next_1cab269c3;
			};
			if ((((*(_118513_t))._field_Id == static_cast<jule::U32>(5LLU)) || (((*(_118142_i)) + 1LL) >= (*(_118155_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1b9b032eb_Token>> _120125_exprTokens = nullptr;;
				if (((*(_118513_t))._field_Id == static_cast<jule::U32>(5LLU))) {
					_120125_exprTokens=(*(_118155_tokens)).slice(_11839_exprStart, (*(_118142_i)));
				} else {
					_120125_exprTokens=(*(_118155_tokens)).slice(_11839_exprStart);
				};
				return _1ba81c135_buildExpr(_self_, &(_120125_exprTokens));;
			};
		}
	_iter_next_1cab269c3:;
	}
	_iter_end_1cab269c3:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1b9b31add_EnumItemDecl>> _1ba82557d_buildEnumItems(jule::Ptr<_1ba81aed0_parser> _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _121339_tokens) {
	jule::Slice<jule::Ptr<_1b9b31add_EnumItemDecl>> _121413_items = jule::Slice<jule::Ptr<_1b9b31add_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I32 _121513_i = 0LL;;
	for (; (_121513_i < (*(_121339_tokens)).len()); (_121513_i)++) {
		{
			jule::Ptr<_1b9b032eb_Token> _121717_t = (*(_121339_tokens))[_121513_i];;
			jule::Ptr<_1b9b31add_EnumItemDecl> _121817_item = jule::new_ptr<_1b9b31add_EnumItemDecl>();;
			(*(_121817_item))._field_Token=_121717_t;
			if (((*((*(_121817_item))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
				_1ba81b981_pushErr(_self_.ptr(), (*(_121817_item))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1ba81bce4_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			};
			(*(_121817_item))._field_Ident=(*((*(_121817_item))._field_Token))._field_Kind;
			if ((((_121513_i + 1LL) >= (*(_121339_tokens)).len()) || ((*((*(_121339_tokens))[(_121513_i + 1LL)]))._field_Id == static_cast<jule::U32>(5LLU)))) {
				if (((_121513_i + 1LL) < (*(_121339_tokens)).len())) {
					(_121513_i)++;
				};
				{ jule::Slice<jule::Ptr<_1b9b31add_EnumItemDecl>> &__jule_push_dest = _121413_items; __jule_push_dest.push(_121817_item); };
				goto _iter_next_1cab2b27a;
			};
			(_121513_i)++;
			_121717_t=(*(_121339_tokens))[_121513_i];
			(_121513_i)++;
			if (((*(_121717_t))._field_Id != static_cast<jule::U32>(8LLU))) {
				_1ba81b981_pushErr(_self_.ptr(), _121717_t, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1ba81bce4_pushSuggestion(_self_.ptr(), jule::Str::lit("expected colon \":\" for assignment", 33), jule::Slice<jule::Any>());
				goto _iter_next_1cab2b27a;
			};
			if (((_121513_i >= (*(_121339_tokens)).len()) || ((*((*(_121339_tokens))[_121513_i]))._field_Id == static_cast<jule::U32>(5LLU)))) {
				_1ba81b981_pushErr(_self_.ptr(), _121717_t, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
				goto _iter_next_1cab2b27a;
			};
			(*(_121817_item))._field_Expr=_1ba82523c_buildEnumItemExpr(_self_, &(_121513_i), _121339_tokens);
			{ jule::Slice<jule::Ptr<_1b9b31add_EnumItemDecl>> &__jule_push_dest = _121413_items; __jule_push_dest.push(_121817_item); };
		}
	_iter_next_1cab2b27a:;
	}
	_iter_end_1cab2b27a:;;
	return _121413_items;;
}



inline jule::Ptr<_1b9b3269e_EnumDecl> _1ba8258be_buildEnumDecl(jule::Ptr<_1ba81aed0_parser> _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _125038_tokens) {
	if (((*(_125038_tokens)).len() < 3LL)) {
		_1ba81b981_pushErr(_self_.ptr(), (*(_125038_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b9b3269e_EnumDecl> _125513_e = jule::new_ptr<_1b9b3269e_EnumDecl>(_1b9b3269e_EnumDecl{._field_Token=(*(_125038_tokens))[1LL], });;
	if (((*((*(_125513_e))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ba81b981_pushErr(_self_.ptr(), (*(_125513_e))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ba81bce4_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_125513_e))._field_Ident=(*((*(_125513_e))._field_Token))._field_Kind;
	jule::I32 _126313_i = 2LL;;
	if (((*((*(_125038_tokens))[_126313_i]))._field_Id == static_cast<jule::U32>(8LLU))) {
		(_126313_i)++;
		if ((_126313_i >= (*(_125038_tokens)).len())) {
			_1ba81b981_pushErr(_self_.ptr(), (*(_125038_tokens))[(_126313_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return _125513_e;;
		};
		({
			__jule_tuple_x_1b9b187b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ba81d587_buildType(_self_, _125038_tokens, (&(_126313_i)), true);
			(*(_125513_e))._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_126313_i >= (*(_125038_tokens)).len())) {
			_1ba81b2cc_stop(_self_.ptr());
			_1ba81b981_pushErr(_self_.ptr(), (*(_125513_e))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
			_1ba81bce4_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
			return _125513_e;;
		};
	} else {
		(*(_125513_e))._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _128013_itemTokens = _1ba8193b8_range(&(_126313_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _125038_tokens);;
	if ((_128013_itemTokens == nullptr)) {
		_1ba81b2cc_stop(_self_.ptr());
		_1ba81b981_pushErr(_self_.ptr(), (*(_125513_e))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1ba81bce4_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _125513_e;;
	} else if ((_126313_i < (*(_125038_tokens)).len())) {
		_1ba81b981_pushErr(_self_.ptr(), (*(_125038_tokens))[_126313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_125513_e))._field_Public=_1b9bce4b5_IsPub(&((*(_125513_e))._field_Ident));
	(*(_125513_e))._field_End=(*(_125038_tokens))[(_126313_i - 1LL)];
	(*(_125513_e))._field_Items=_1ba82557d_buildEnumItems(_self_, &(_128013_itemTokens));
	return _125513_e;;
}



inline jule::Any _1ba825c10_buildNodeEnumDecl(jule::Ptr<_1ba81aed0_parser> _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _129542_tokens) {
	if ((((*(_129542_tokens)).len() > 3LL) && ((*((*(_129542_tokens))[2LL]))._field_Id == static_cast<jule::U32>(8LLU)))) {
		if (((*((*(_129542_tokens))[3LL]))._field_Id == static_cast<jule::U32>(7LLU))) {
			return jule::Any(_1ba824d41_buildTypeEnumDecl(_self_, _129542_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_1ba8258be_buildEnumDecl(_self_, _129542_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_1b9b33903_FieldDecl> _1ba826051_buildField(jule::Ptr<_1ba81aed0_parser> _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _130434_tokens) {
	jule::Ptr<_1b9b33903_FieldDecl> _130513_f = jule::new_ptr<_1b9b33903_FieldDecl>();;
	(*(_130513_f))._field_Mutable=((*(_130434_tokens[0LL]))._field_Id == static_cast<jule::U32>(32LLU));
	if ((*(_130513_f))._field_Mutable) {
		if ((_130434_tokens.len() == 1LL)) {
			_1ba81b981_pushErr(_self_.ptr(), _130434_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_130434_tokens).mut_slice(1LL);;
	};
	(*(_130513_f))._field_Token=_130434_tokens[0LL];
	if (((*((*(_130513_f))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ba81b981_pushErr(_self_.ptr(), (*(_130513_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ba81bce4_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_130513_f))._field_Ident=(*((*(_130513_f))._field_Token))._field_Kind;
	if ((_130434_tokens.len() == 1LL)) {
		_1ba81b981_pushErr(_self_.ptr(), _130434_tokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_130434_tokens.len() < 3LL) || ((*(_130434_tokens[1LL]))._field_Id != static_cast<jule::U32>(8LLU)))) {
		_1ba81b981_pushErr(_self_.ptr(), _130434_tokens[1LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_130434_tokens).mut_slice(2LL);;
	jule::I32 _133313_i = 0LL;;
	({
		__jule_tuple_x_1b9b187b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ba81d587_buildType(_self_, &(_130434_tokens), (&(_133313_i)), true);
		(*(_130513_f))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_133313_i < _130434_tokens.len())) {
		jule::Ptr<_1b9b032eb_Token> _133613_token = _130434_tokens[_133313_i];;
		if (((*(_133613_token))._field_Id != static_cast<jule::U32>(71LLU))) {
			_1ba81b981_pushErr(_self_.ptr(), _130434_tokens[_133313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_133313_i)++;
		if ((_133313_i >= _130434_tokens.len())) {
			_1ba81b981_pushErr(_self_.ptr(), _133613_token, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_130434_tokens).mut_slice(_133313_i);;
		(*(_130513_f))._field_Default=_1ba81c135_buildExpr(_self_, &(_130434_tokens));
	};
	(*(_130513_f))._field_Public=_1b9bce4b5_IsPub(&((*(_130513_f))._field_Ident));
	return _130513_f;;
}



inline jule::Slice<jule::Ptr<_1b9b33903_FieldDecl>> _1ba826392_buildStructDeclFields(jule::Ptr<_1ba81aed0_parser> _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _135345_tokens) {
	jule::Slice<jule::Ptr<_1b9b33903_FieldDecl>> _135417_fields = nullptr;;
	jule::Slice<jule::Ptr<_1ba7e760a_stmt>> _135513_stmts = _1ba7e79b2_splitStmts(&(_135345_tokens));;
	{
		auto expr = &(_135513_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cab499d5:;
		if (it != expr_end) {
			jule::Ptr<_1ba7e760a_stmt> _135621_stmt = *it;
			{
				_135345_tokens=(*(_135621_stmt))._field_tokens;
				jule::Ptr<_1b9b33903_FieldDecl> _135817_f = _1ba826051_buildField(_self_, _135345_tokens);;
				{ jule::Slice<jule::Ptr<_1b9b33903_FieldDecl>> &__jule_push_dest = _135417_fields; __jule_push_dest.push(_135817_f); };
			}
			_iter_next_1cab499d5:;
			++it;
			goto _iter_begin_1cab499d5;
		}
		_iter_end_1cab499d5:;
	};
	return _135417_fields;;
}



inline jule::Ptr<_1b9b342e9_StructDecl> _1ba8266d3_buildStructDecl(jule::Ptr<_1ba81aed0_parser> _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _136440_tokens) {
	if (((*(_136440_tokens)).len() < 3LL)) {
		_1ba81b981_pushErr(_self_.ptr(), (*(_136440_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I32 _137013_i = 1LL;;
	jule::Ptr<_1b9b342e9_StructDecl> _137113_s = jule::new_ptr<_1b9b342e9_StructDecl>(_1b9b342e9_StructDecl{._field_Token=(*(_136440_tokens))[_137013_i], });;
	if (((*((*(_137113_s))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ba81b981_pushErr(_self_.ptr(), (*(_137113_s))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ba81bce4_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_137013_i)++;
	if ((_137013_i >= (*(_136440_tokens)).len())) {
		_1ba81b981_pushErr(_self_.ptr(), (*(_136440_tokens))[_137013_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _137113_s;;
	};
	(*(_137113_s))._field_Ident=(*((*(_137113_s))._field_Token))._field_Kind;
	jule::Ptr<_1b9b032eb_Token> _13859_errorToken = (*(_136440_tokens))[_137013_i];;
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _138613_genericsTokens = _1ba8193b8_range(&(_137013_i), static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), _136440_tokens);;
	if ((_138613_genericsTokens != nullptr)) {
		(*(_137113_s))._field_Generics=_1ba82004a_buildGenerics(_self_, &(_138613_genericsTokens), &(_13859_errorToken));
	};
	if ((_137013_i >= (*(_136440_tokens)).len())) {
		_1ba81b981_pushErr(_self_.ptr(), (*(_136440_tokens))[(_137013_i - 1LL)], jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1ba81bce4_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _137113_s;;
	};
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _139613_bodyTokens = _1ba8193b8_range(&(_137013_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _136440_tokens);;
	if ((_139613_bodyTokens == nullptr)) {
		_1ba81b2cc_stop(_self_.ptr());
		_1ba81b981_pushErr(_self_.ptr(), (*(_137113_s))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1ba81bce4_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _137113_s;;
	};
	if ((_137013_i < (*(_136440_tokens)).len())) {
		_1ba81b981_pushErr(_self_.ptr(), (*(_136440_tokens))[_137013_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_137113_s))._field_Public=_1b9bce4b5_IsPub(&((*(_137113_s))._field_Ident));
	(*(_137113_s))._field_Fields=_1ba826392_buildStructDeclFields(_self_, _139613_bodyTokens);
	(*(_137113_s))._field_End=(*(_136440_tokens))[(_137013_i - 1LL)];
	return _137113_s;;
}



inline void _1ba82698b_checkMethodReceiver(_1ba81aed0_parser* _self_, jule::Ptr<_1b9b2a477_FnDecl>* _141239_f) {
	if ((*((*(_141239_f))))._field_Statically) {
		if ((((*((*(_141239_f))))._field_Params.len() > 0LL) && _1b9b29399_IsSelf((*((*(_141239_f))))._field_Params[0LL].ptr()))) {
			_1ba81b981_pushErr(_self_, (*((*(_141239_f))))._field_Token, jule::Str::lit("static functions cannot have receiver parameter", 47), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*((*(_141239_f))))._field_Params.len() == 0LL)) {
		_1ba81b981_pushErr(_self_, (*((*(_141239_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b9b29025_ParamDecl> _14249_param = (*((*(_141239_f))))._field_Params[0LL];;
	if ((!(_1b9b29399_IsSelf(_14249_param.ptr())))) {
		_1ba81b981_pushErr(_self_, (*((*(_141239_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1ba826cee_buildTraitBody(jule::Ptr<_1ba81aed0_parser> _self_, jule::Ptr<_1b9b34a36_TraitDecl>* _143139_t, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _143158_tokens) {
	jule::Slice<jule::Ptr<_1ba7e760a_stmt>> _143213_stmts = _1ba7e79b2_splitStmts(&(_143158_tokens));;
	{
		auto expr = &(_143213_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cab59792:;
		if (it != expr_end) {
			jule::Ptr<_1ba7e760a_stmt> _143321_stmt = *it;
			{
				_143158_tokens=(*(_143321_stmt))._field_tokens;
				if ((_143158_tokens.len() == 0LL)) {
					goto _iter_next_1cab59792;
				};
				{
					auto &_match_expr{ (*(_143158_tokens[0LL]))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(29LLU)) {
						_case_begin_1cab5cc4b:;
						{
							jule::Ptr<_1b9b2a477_FnDecl> _144021_f = _1ba822bc9_buildFn(_self_, &(_143158_tokens), true, true);;
							if ((_144021_f == nullptr)) {
								goto _match_end_1cab5aa90;
							};
							_1ba82698b_checkMethodReceiver(_self_.ptr(), &(_144021_f));
							if (((*(_144021_f))._field_Generics.len() > 0LL)) {
								_1ba81b981_pushErr(_self_.ptr(), (*(_144021_f))._field_Token, jule::Str::lit("trait methods cannot have generics", 34), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1b9b2a477_FnDecl>> &__jule_push_dest = (*((*(_143139_t))))._field_Methods; __jule_push_dest.push(_144021_f); };
						}
					}
					else {
						_case_begin_1cab5a364:;
						{
							jule::I32 _145021_i = 0LL;;
							jule::Ptr<_1b9b187b7_TypeDecl> _145121_ti;;
							jule::Bool _145125_ok = false;;
							({
								__jule_tuple_x_1b9b187b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ba81d587_buildType(_self_, &(_143158_tokens), (&(_145021_i)), true);
								_145121_ti = __jule_assign_result.__jule_result_arg0;
								_145125_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_145125_ok))) {
								goto _match_end_1cab5aa90;
							};
							if ((_145021_i < _143158_tokens.len())) {
								_1ba81b981_pushErr(_self_.ptr(), _143158_tokens[_145021_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1b9b187b7_TypeDecl>> &__jule_push_dest = (*((*(_143139_t))))._field_Inherits; __jule_push_dest.push(_145121_ti); };
						}
					}
					_match_end_1cab5aa90:;
				};
			}
			_iter_next_1cab59792:;
			++it;
			goto _iter_begin_1cab59792;
		}
		_iter_end_1cab59792:;
	};
}



inline jule::Ptr<_1b9b34a36_TraitDecl> _1ba827140_buildTraitDecl(jule::Ptr<_1ba81aed0_parser> _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _146339_tokens) {
	if (((*(_146339_tokens)).len() < 3LL)) {
		_1ba81b981_pushErr(_self_.ptr(), (*(_146339_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b9b34a36_TraitDecl> _146813_t = jule::new_ptr<_1b9b34a36_TraitDecl>(_1b9b34a36_TraitDecl{._field_Token=(*(_146339_tokens))[1LL], });;
	if (((*((*(_146813_t))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ba81b981_pushErr(_self_.ptr(), (*(_146813_t))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ba81bce4_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_146813_t))._field_Ident=(*((*(_146813_t))._field_Token))._field_Kind;
	jule::I32 _147613_i = 2LL;;
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _147713_bodyTokens = _1ba8193b8_range(&(_147613_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _146339_tokens);;
	if ((_147713_bodyTokens == nullptr)) {
		_1ba81b2cc_stop(_self_.ptr());
		_1ba81b981_pushErr(_self_.ptr(), (*(_146813_t))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1ba81bce4_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_147613_i < (*(_146339_tokens)).len())) {
		_1ba81b981_pushErr(_self_.ptr(), (*(_146339_tokens))[_147613_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_146813_t))._field_Public=_1b9bce4b5_IsPub(&((*(_146813_t))._field_Ident));
	_1ba826cee_buildTraitBody(_self_, &(_146813_t), _147713_bodyTokens);
	(*(_146813_t))._field_End=(*(_146339_tokens))[(_147613_i - 1LL)];
	return _146813_t;;
}



inline jule::Ptr<_1b9b2a477_FnDecl> _1ba827481_buildBindFn(jule::Ptr<_1ba81aed0_parser> _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _149335_tokens) {
	(_149335_tokens).mut_slice(1LL);;
	jule::Ptr<_1b9b2a477_FnDecl> _149513_f = _1ba822bc9_buildFn(_self_, &(_149335_tokens), false, true);;
	if ((_149513_f != nullptr)) {
		(*(_149513_f))._field_Public=false;
		(*(_149513_f))._field_Binded=true;
	};
	return _149513_f;;
}



inline jule::Ptr<_1b9b2b555_VarDecl> _1ba8277c2_buildBindVar(jule::Ptr<_1ba81aed0_parser> _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _150336_tokens) {
	(_150336_tokens).mut_slice(1LL);;
	jule::Ptr<_1b9b2b555_VarDecl> _150513_v = _1ba81e80d_buildVar(_self_, _150336_tokens);;
	if ((_150513_v != nullptr)) {
		(*(_150513_v))._field_Public=false;
		(*(_150513_v))._field_Binded=true;
		if (((*(_150513_v))._field_Expr != nullptr)) {
			_1ba81b981_pushErr(_self_.ptr(), (*(_150513_v))._field_Token, jule::Str::lit("binded variables cannot have expression", 39), jule::Slice<jule::Any>());
		};
	};
	return _150513_v;;
}



inline jule::Ptr<_1b9b342e9_StructDecl> _1ba827b13_buildBindStruct(jule::Ptr<_1ba81aed0_parser> _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _151639_tokens) {
	(_151639_tokens).mut_slice(1LL);;
	jule::Ptr<_1b9b342e9_StructDecl> _151813_s = _1ba8266d3_buildStructDecl(_self_, &(_151639_tokens));;
	if ((_151813_s != nullptr)) {
		(*(_151813_s))._field_Public=false;
		{
			auto expr = &((*(_151813_s))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1cab6b40d:;
			if (it != expr_end) {
				jule::Ptr<_1b9b33903_FieldDecl> _152125_f = *it;
				{
					(*(_152125_f))._field_Public=true;
				}
				_iter_next_1cab6b40d:;
				++it;
				goto _iter_begin_1cab6b40d;
			}
			_iter_end_1cab6b40d:;
		};
		(*(_151813_s))._field_Binded=true;
	};
	return _151813_s;;
}



inline jule::Ptr<_1b9b3012a_TypeAliasDecl> _1ba827e54_buildBindTypeAlias(jule::Ptr<_1ba81aed0_parser> _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _153042_tokens) {
	(_153042_tokens).mut_slice(1LL);;
	jule::Ptr<_1b9b3012a_TypeAliasDecl> _153213_t = _1ba81d8c8_buildTypeAliasDecl(_self_, &(_153042_tokens));;
	if ((_153213_t != nullptr)) {
		(*(_153213_t))._field_Public=false;
		(*(_153213_t))._field_Binded=true;
	};
	return _153213_t;;
}



inline jule::Ptr<_1b9b31637_UseDecl> _1ba828295_buildBindUse(jule::Ptr<_1ba81aed0_parser> _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _154036_tokens) {
	if ((_154036_tokens.len() == 1LL)) {
		_1ba81b981_pushErr(_self_.ptr(), _154036_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_154036_tokens).mut_slice(1LL);;
	;
	return _1ba8242b3_buildUseDecl(_self_.ptr(), _154036_tokens, true);;
}



inline jule::Any _1ba8285d6_buildBind(jule::Ptr<_1ba81aed0_parser> _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _155134_tokens) {
	jule::Ptr<_1b9b032eb_Token> _155213_token = (*(_155134_tokens))[0LL];;
	if (((*(_155134_tokens)).len() == 1LL)) {
		_1ba81b981_pushErr(_self_.ptr(), _155213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_155213_token=(*(_155134_tokens))[1LL];
	{
		auto &_match_expr{ (*(_155213_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(29LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1cab720d4:;
			{
				return jule::Any(_1ba827481_buildBindFn(_self_, (*(_155134_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU) || _match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1cab71cd7:;
			{
				return jule::Any(_1ba8277c2_buildBindVar(_self_, (*(_155134_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(21LLU)) {
			_case_begin_1cab71d4d:;
			{
				return jule::Any(_1ba827b13_buildBindStruct(_self_, (*(_155134_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1cab71db4:;
			{
				return jule::Any(_1ba827e54_buildBindTypeAlias(_self_, (*(_155134_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_1cab71c71:;
			{
				_1ba81b981_pushErr(_self_.ptr(), _155213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1cab71c1b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b9b2a477_FnDecl> _1ba828927_getMethod(jule::Ptr<_1ba81aed0_parser> _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _157534_tokens) {
	jule::I32 _157613_i = 0LL;;
	jule::Ptr<_1b9b032eb_Token> _157713_token = (*(_157534_tokens))[_157613_i];;
	if (((*(_157713_token))._field_Id == static_cast<jule::U32>(34LLU))) {
		if (((_157613_i + 1LL) >= (*(_157534_tokens)).len())) {
			_1ba81b981_pushErr(_self_.ptr(), _157713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_157613_i)++;
		_157713_token=(*(_157534_tokens))[_157613_i];
	};
	if (((*(_157713_token))._field_Id == static_cast<jule::U32>(31LLU))) {
		if (((_157613_i + 1LL) >= (*(_157534_tokens)).len())) {
			_1ba81b981_pushErr(_self_.ptr(), _157713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_157613_i)++;
		_157713_token=(*(_157534_tokens))[_157613_i];
	};
	if (((*(_157713_token))._field_Id != static_cast<jule::U32>(29LLU))) {
		_1ba81b981_pushErr(_self_.ptr(), _157713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1ba822bc9_buildFn(_self_, _157534_tokens, true, false);;
}



inline void _1ba828c8a_parseImplBody(jule::Ptr<_1ba81aed0_parser> _self_, jule::Ptr<_1b9b35196_Impl>* _160438_ipl, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _160455_tokens) {
	jule::Slice<jule::Ptr<_1ba7e760a_stmt>> _160513_stmts = _1ba7e79b2_splitStmts(_160455_tokens);;
	{
		auto expr = &(_160513_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cab791da:;
		if (it != expr_end) {
			jule::Ptr<_1ba7e760a_stmt> _160621_stmt = *it;
			{
				(*(_160455_tokens))=(*(_160621_stmt))._field_tokens;
				jule::Ptr<_1b9b032eb_Token> _160817_token = (*(_160455_tokens))[0LL];;
				{
					auto &_match_expr{ (*(_160817_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(35LLU)) {
						_case_begin_1cab79839:;
						{
							_1ba81c72e_pushDirective(_self_.ptr(), _1ba81c476_buildDirective(_self_.ptr(), (*(_160455_tokens))));
							goto _iter_next_1cab791da;
						}
					}
					_match_end_1cab7a30c:;
				};
				{
					auto &_match_expr{ (*(_160817_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(6LLU)) {
						_case_begin_1cab7a939:;
						{
							jule::Ptr<_1b9b2b555_VarDecl> _161721_v = _1ba81e80d_buildVar(_self_, (*(_160455_tokens)));;
							if ((_161721_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_1b9b2b555_VarDecl>> &__jule_push_dest = (*((*(_160438_ipl))))._field_Statics; __jule_push_dest.push(_161721_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U32>(34LLU) || _match_expr == static_cast<jule::U32>(29LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
						_case_begin_1cab7a43e:;
						{
							jule::Ptr<_1b9b2a477_FnDecl> _162421_f = _1ba828927_getMethod(_self_, _160455_tokens);;
							if ((_162421_f != nullptr)) {
								_1ba82698b_checkMethodReceiver(_self_.ptr(), &(_162421_f));
								_1ba8296c5_applyFnMeta(_self_.ptr(), &(_162421_f));
								{ jule::Slice<jule::Ptr<_1b9b2a477_FnDecl>> &__jule_push_dest = (*((*(_160438_ipl))))._field_Methods; __jule_push_dest.push(_162421_f); };
							};
						}
					}
					else {
						_case_begin_1cab7a87e:;
						{
							_1ba81b981_pushErr(_self_.ptr(), _160817_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							goto _iter_next_1cab791da;
						}
					}
					_match_end_1cab7a829:;
				};
			}
			_iter_next_1cab791da:;
			++it;
			goto _iter_begin_1cab791da;
		}
		_iter_end_1cab791da:;
	};
}



inline jule::Ptr<_1b9b35196_Impl> _1ba8290cb_buildImpl(jule::Ptr<_1ba81aed0_parser> _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _163733_tokens) {
	jule::Ptr<_1b9b032eb_Token> _163813_token = _163733_tokens[0LL];;
	if ((_163733_tokens.len() < 2LL)) {
		_1ba81b981_pushErr(_self_.ptr(), _163813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I32 _164413_i = 1LL;;
	jule::Ptr<_1b9b187b7_TypeDecl> _164613_base;;
	jule::Bool _164623_ok = false;;
	({
		__jule_tuple_x_1b9b187b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ba81d587_buildType(_self_, &(_163733_tokens), (&(_164413_i)), true);
		_164613_base = __jule_assign_result.__jule_result_arg0;
		_164623_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_164623_ok))) {
		return nullptr;;
	};
	if ((_164413_i >= _163733_tokens.len())) {
		_1ba81b981_pushErr(_self_.ptr(), _163813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b9b35196_Impl> _165513_ipl = jule::new_ptr<_1b9b35196_Impl>(_1b9b35196_Impl{._field_Base=_164613_base, });;
	_163813_token=_163733_tokens[_164413_i];
	if (((*(_163813_token))._field_Id != static_cast<jule::U32>(9LLU))) {
		if (((*(_163813_token))._field_Id == static_cast<jule::U32>(72LLU))) {
			std::swap((*(_165513_ipl))._field_Base, (*(_165513_ipl))._field_Dest);
			goto _julec_label_1cab8800c;
		};
		_1ba81b2cc_stop(_self_.ptr());
		_1ba81b981_pushErr(_self_.ptr(), _163813_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1ba81bce4_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_164413_i)++;
	if ((_164413_i >= _163733_tokens.len())) {
		_1ba81b2cc_stop(_self_.ptr());
		_1ba81b981_pushErr(_self_.ptr(), _163813_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1ba81bce4_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1b9b187b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ba81d587_buildType(_self_, &(_163733_tokens), (&(_164413_i)), true);
		(*(_165513_ipl))._field_Dest = __jule_assign_result.__jule_result_arg0;
		_164623_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_164623_ok))) {
		return nullptr;;
	};
	if ((_164413_i >= _163733_tokens.len())) {
		_1ba81b2cc_stop(_self_.ptr());
		_1ba81b981_pushErr(_self_.ptr(), _163813_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1ba81bce4_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1cab8800c:;
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _169313_bodyTokens = _1ba8193b8_range(&(_164413_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_163733_tokens));;
	if ((_169313_bodyTokens == nullptr)) {
		_1ba81b2cc_stop(_self_.ptr());
		_1ba81b981_pushErr(_self_.ptr(), _163813_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1ba81bce4_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_164413_i < _163733_tokens.len())) {
		_1ba81b981_pushErr(_self_.ptr(), _163733_tokens[_164413_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_165513_ipl))._field_End=_163733_tokens[(_164413_i - 1LL)];
	_1ba828c8a_parseImplBody(_self_, &(_165513_ipl), &(_169313_bodyTokens));
	return _165513_ipl;;
}



inline jule::Any _1ba82941c_buildNodeData(jule::Ptr<_1ba81aed0_parser> _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _170838_tokens) {
	jule::Ptr<_1b9b032eb_Token> _170913_token = (*(_170838_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_170913_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(29LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1cab8c022:;
			{
				jule::Ptr<_1b9b2a477_FnDecl> _171317_f = _1ba822bc9_buildFn(_self_, _170838_tokens, false, false);;
				if ((_171317_f != nullptr)) {
					(*(_171317_f))._field_Global=true;
				};
				return jule::Any(_171317_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(30LLU) || _match_expr == static_cast<jule::U32>(6LLU) || _match_expr == static_cast<jule::U32>(32LLU) || _match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_1cab8b829:;
			{
				return jule::Any(_1ba81e80d_buildVar(_self_, (*(_170838_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1cab8c660:;
			{
				return jule::Any(_1ba81d8c8_buildTypeAliasDecl(_self_, _170838_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(20LLU)) {
			_case_begin_1cab8bbe2:;
			{
				return _1ba825c10_buildNodeEnumDecl(_self_, _170838_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(21LLU)) {
			_case_begin_1cab8bc58:;
			{
				return jule::Any(_1ba8266d3_buildStructDecl(_self_, _170838_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(25LLU)) {
			_case_begin_1cab8bcbe:;
			{
				return jule::Any(_1ba827140_buildTraitDecl(_self_, _170838_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(26LLU)) {
			_case_begin_1cab8bd35:;
			{
				return jule::Any(_1ba8290cb_buildImpl(_self_, (*(_170838_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1cab8c75e:;
			{
				return _1ba8285d6_buildBind(_self_, _170838_tokens);;
			}
		}
		else {
			_case_begin_1cab8bb7b:;
			{
				_1ba81b981_pushErr(_self_.ptr(), _170913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1cab8bb26:;
	};
}



inline void _1ba8296c5_applyFnMeta(_1ba81aed0_parser* _self_, jule::Ptr<_1b9b2a477_FnDecl>* _174135_f) {
	(*((*(_174135_f))))._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1ba82997d_applyMeta(_1ba81aed0_parser* _self_, _1b9b177b6_Node* _174633_node) {
	{
		auto &_match_expr{ (*(_174633_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1cab92d91:;
			{
				jule::Ptr<_1b9b2b555_VarDecl> _174917_v = (*(_174633_node))._field_Data.cast_ptr<_1b9b2b555_VarDecl>(&__jule_any_type16);;
				if ((_174917_v == nullptr)) {
					return;;
				};
				(*(_174917_v))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1cab92e07:;
			{
				jule::Ptr<_1b9b2a477_FnDecl> _175617_f = (*(_174633_node))._field_Data.cast_ptr<_1b9b2a477_FnDecl>(&__jule_any_type14);;
				if ((_175617_f == nullptr)) {
					return;;
				};
				_1ba8296c5_applyFnMeta(_self_, &(_175617_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1cab92e7e:;
			{
				jule::Ptr<_1b9b342e9_StructDecl> _176217_sd = (*(_174633_node))._field_Data.cast_ptr<_1b9b342e9_StructDecl>(&__jule_any_type13);;
				if ((_176217_sd == nullptr)) {
					return;;
				};
				(*(_176217_sd))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1cab92d3b:;
	};
}



inline void _1ba829c36_pushUseDecl(jule::Ptr<_1ba81aed0_parser> _self_, jule::Ptr<_1b9b31637_UseDecl>* _177136_decl) {
	{ jule::Slice<jule::Ptr<_1b9b31637_UseDecl>> &__jule_push_dest = (*((*(_self_))._field_ast))._field_UseDecls; __jule_push_dest.push((*(_177136_decl))); };
	if (((*((*(_self_))._field_ast))._field_Nodes.len() > 0LL)) {
		_1ba81b981_pushErr(_self_.ptr(), (*((*(_177136_decl))))._field_Token, jule::Str::lit("use declarations must declared top of source code", 49), jule::Slice<jule::Any>());
		_1ba81bce4_pushSuggestion(_self_.ptr(), jule::Str::lit("move this use declaration to top of source file", 47), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1ba82a077_pushMetaNodes(jule::Ptr<_1ba81aed0_parser> _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _177938_tokens) {
	{
		auto &_match_expr{ (*((*(_177938_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(16LLU)) {
			_case_begin_1cab98bee:;
			{
				;
				jule::Ptr<_1b9b31637_UseDecl> _178317_decl = _1ba8242b3_buildUseDecl(_self_.ptr(), (*(_177938_tokens)), false);;
				_1ba829c36_pushUseDecl(_self_, &(_178317_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1cab98c76:;
			{
				if ((((*(_177938_tokens)).len() > 1LL) && ((*((*(_177938_tokens))[1LL]))._field_Id == static_cast<jule::U32>(16LLU)))) {
					jule::Ptr<_1b9b31637_UseDecl> _178821_decl = _1ba828295_buildBindUse(_self_, (*(_177938_tokens)));;
					_1ba829c36_pushUseDecl(_self_, &(_178821_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(35LLU)) {
			_case_begin_1cab98ced:;
			{
				_1ba81c72e_pushDirective(_self_.ptr(), _1ba81c476_buildDirective(_self_.ptr(), (*(_177938_tokens))));
				return true;;
			}
		}
		_match_end_1cab98acd:;
	};
	return false;;
}



inline _1b9b177b6_Node _1ba82a3b8_parseNode(jule::Ptr<_1ba81aed0_parser> _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _179934_st) {
	_1b9b177b6_Node _180013_node = _1b9b177b6_Node{._field_Token=(*(_179934_st))[0LL], };;
	if (_1ba82a077_pushMetaNodes(_self_, _179934_st)) {
		return _180013_node;;
	};
	jule::Any _180813_data = _1ba82941c_buildNodeData(_self_, _179934_st);;
	if ((_180813_data == nullptr)) {
		return _180013_node;;
	};
	_180013_node._field_Data=_180813_data;
	_1ba82997d_applyMeta(_self_.ptr(), &(_180013_node));
	if (((*(_self_))._field_directives.len() != 0LL)) {
		_1ba81b981_pushErr(_self_.ptr(), (*((*(_self_))._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
	(*(_self_))._field_directives=nullptr;
	return _180013_node;;
}



inline void _1ba82a671_appendNode(jule::Ptr<_1ba81aed0_parser> _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _182335_st) {
	if (((*(_182335_st)).len() == 0LL)) {
		return;;
	};
	_1b9b177b6_Node _182713_node = _1ba82a3b8_parseNode(_self_, _182335_st);;
	if (((_182713_node._field_Data == nullptr) || _1ba81b563_stopped(_self_.ptr()))) {
		return;;
	};
	{ jule::Slice<_1b9b177b6_Node> &__jule_push_dest = (*((*(_self_))._field_ast))._field_Nodes; __jule_push_dest.push(_182713_node); };
}



inline void _1ba82ab49_removeRange(_1ba81aed0_parser* _self_, jule::I32 _183430_i, jule::U32 _183438_id, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _183452_tokens, jule::Slice<jule::I32>* _183475_ranges) {
	jule::U32 _18359_close = _1ba819e02_getCloseOfBrace(_183438_id);;
	for (; (_183430_i >= 0LL); (_183430_i)--) {
		{
			jule::Ptr<_1b9b032eb_Token> _183713_tok = (*(_183452_tokens))[(*(_183475_ranges))[_183430_i]];;
			if (((*(_183713_tok))._field_Id != _18359_close)) {
				goto _iter_next_1caba31d1;
			};
			(*(_183475_ranges))=jule::append((*(_183475_ranges)).slice(0LL, _183430_i),(*(_183475_ranges)).slice((_183430_i + 1LL)));
			goto _iter_end_1caba31d1;
		}
	_iter_next_1caba31d1:;
	}
	_iter_end_1caba31d1:;;
}



inline void _1ba82b067_pushWrongOrderCloseErr(_1ba81aed0_parser* _self_, jule::Ptr<_1b9b032eb_Token>* _184642_t, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _184654_tokens, jule::Slice<jule::I32>* _184673_ranges) {
	{
		auto &_match_expr{ (*((*(_184654_tokens))[(*(_184673_ranges))[((*(_184673_ranges)).len() - 1LL)]]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(74LLU)) {
			_case_begin_1caba569a:;
			{
				_1ba81b981_pushErr(_self_, (*(_184642_t)), jule::Str::lit("was expected parentheses close", 30), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U32>(72LLU)) {
			_case_begin_1caba5722:;
			{
				_1ba81b981_pushErr(_self_, (*(_184642_t)), jule::Str::lit("was expected brace close", 24), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U32>(76LLU)) {
			_case_begin_1caba5799:;
			{
				_1ba81b981_pushErr(_self_, (*(_184642_t)), jule::Str::lit("was expected bracket close", 26), jule::Slice<jule::Any>());
			}
		}
		_match_end_1caba5579:;
	};
}



inline void _1ba82b540_pushRangeClose(_1ba81aed0_parser* _self_, jule::Ptr<_1b9b032eb_Token> _185733_t, jule::U32 _185744_left, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _185760_tokens, jule::Slice<jule::I32>* _185783_ranges) {
	jule::I32 _18589_n = (*(_185783_ranges)).len();;
	if ((_18589_n == 0LL)) {
		{
			auto &_match_expr{ (*(_185733_t))._field_Id };
			
			if (_match_expr == static_cast<jule::U32>(77LLU)) {
				_case_begin_1caba813c:;
				{
					_1ba81b981_pushErr(_self_, _185733_t, jule::Str::lit("extra closed brackets", 21), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U32>(73LLU)) {
				_case_begin_1caba81b4:;
				{
					_1ba81b981_pushErr(_self_, _185733_t, jule::Str::lit("extra closed braces", 19), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U32>(75LLU)) {
				_case_begin_1caba823b:;
				{
					_1ba81b981_pushErr(_self_, _185733_t, jule::Str::lit("extra closed parentheses", 24), jule::Slice<jule::Any>());
				}
			}
			_match_end_1caba8060:;
		};
		return;;
	} else if (((*((*(_185760_tokens))[(*(_185783_ranges))[(_18589_n - 1LL)]]))._field_Id != _185744_left)) {
		_1ba82b067_pushWrongOrderCloseErr(_self_, &(_185733_t), _185760_tokens, _185783_ranges);
	};
	_1ba82ab49_removeRange(_self_, static_cast<jule::I32>((_18589_n - 1LL)), (*(_185733_t))._field_Id, _185760_tokens, _185783_ranges);
}



inline void _1ba82b7e8_checkRanges(_1ba81aed0_parser* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _187531_tokens) {
	jule::Slice<jule::I32> _187617_ranges = nullptr;;
	{
		auto expr = _187531_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cabab283:;
		if (it != expr_end) {
			jule::I32 _187813_i = it - expr->begin();
			jule::Ptr<_1b9b032eb_Token> *_187816_token = it;
			{
				{
					auto &_match_expr{ (*((*(_187816_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1cabac097:;
						{
							{ jule::Slice<jule::I32> &__jule_push_dest = _187617_ranges; __jule_push_dest.push(_187813_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1cabac11e:;
						{
							_1ba82b540_pushRangeClose(_self_, (*(_187816_token)), static_cast<jule::U32>(74LLU), _187531_tokens, &(_187617_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU)) {
						_case_begin_1cabac196:;
						{
							_1ba82b540_pushRangeClose(_self_, (*(_187816_token)), static_cast<jule::U32>(72LLU), _187531_tokens, &(_187617_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(77LLU)) {
						_case_begin_1cabac21d:;
						{
							_1ba82b540_pushRangeClose(_self_, (*(_187816_token)), static_cast<jule::U32>(76LLU), _187531_tokens, &(_187617_ranges));
						}
					}
					_match_end_1cababea9:;
				};
			}
			_iter_next_1cabab283:;
			++it;
			_187813_i++;
			goto _iter_begin_1cabab283;
		}
		_iter_end_1cabab283:;
	};
	{
		auto expr = &(_187617_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cabab21c:;
		if (it != expr_end) {
			jule::I32 _189316_i = *it;
			{
				jule::Ptr<_1b9b032eb_Token> _189413_token = (*(_187531_tokens))[_189316_i];;
				{
					auto &_match_expr{ (*(_189413_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1cabaeab1:;
						{
							_1ba81b981_pushErr(_self_, _189413_token, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1cabaeb38:;
						{
							_1ba81b981_pushErr(_self_, _189413_token, jule::Str::lit("brace waiting to close", 22), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1cabaebb0:;
						{
							_1ba81b981_pushErr(_self_, _189413_token, jule::Str::lit("bracket are waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					_match_end_1cabaea39:;
				};
			}
			_iter_next_1cabab21c:;
			++it;
			goto _iter_begin_1cabab21c;
		}
		_iter_end_1cabab21c:;
	};
}



inline void _1ba82baa1_parse(jule::Ptr<_1ba81aed0_parser> _self_, jule::Ptr<_1b9b08ab5_File>* _190630_f) {
	(*(_self_))._field_ast=jule::new_ptr<_1b9b1692a_Ast>(_1b9b1692a_Ast{._field_File=(*(_190630_f)), });
	(*(_self_))._field_ep=jule::new_ptr<_1ba80556e_exprBuilder>(_1ba80556e_exprBuilder{._field_p=_self_});
	_1ba82b7e8_checkRanges(_self_.ptr(), &((*((*(_190630_f))))._field_Tokens));
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1ba7e760a_stmt>> _191913_stmts = _1ba7e79b2_splitStmts(&((*((*(_190630_f))))._field_Tokens));;
	jule::I32 _192213_i = 0LL;;
	for (; (_192213_i < _191913_stmts.len()); (_192213_i)++) {
		{
			jule::Ptr<_1ba7e760a_stmt> _192417_stmt = _191913_stmts[_192213_i];;
			if (((*(_192417_stmt))._field_tokens.len() < 2LL)) {
				return;;
			};
			if (((*((*(_192417_stmt))._field_tokens[0LL]))._field_Id != static_cast<jule::U32>(35LLU))) {
				goto _iter_end_1cabb31be;
			};
			if ((!(_23d212dc6_IsTopDirective((*((*(_192417_stmt))._field_tokens[1LL]))._field_Kind)))) {
				goto _iter_end_1cabb31be;
			};
			{ jule::Slice<jule::Ptr<_1b9b17bd4_Directive>> &__jule_push_dest = (*((*(_self_))._field_ast))._field_TopDirectives; __jule_push_dest.push(_1ba81c476_buildDirective(_self_.ptr(), (*(_192417_stmt))._field_tokens)); };
		}
	_iter_next_1cabb31be:;
	}
	_iter_end_1cabb31be:;;
	(*(_self_))._field_errors=nullptr;
	for (; (_192213_i < _191913_stmts.len()); (_192213_i)++) {
		{
			jule::Ptr<_1ba7e760a_stmt> _194117_stmt = _191913_stmts[_192213_i];;
			_1ba82a671_appendNode(_self_, &((*(_194117_stmt))._field_tokens));
			if (_1ba81b563_stopped(_self_.ptr())) {
				goto _iter_end_1cabb59b8;
			};
		}
	_iter_next_1cabb59b8:;
	}
	_iter_end_1cabb59b8:;;
	if (((*(_self_))._field_directives.len() != 0LL)) {
		_1ba81b981_pushErr(_self_.ptr(), (*((*(_self_))._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ba81aed0_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ep:" << _Src._field_ep;
	_Stream << "}";
	return _Stream;
}



inline void _1ba82d3dd_pushErr(_1ba82cd49_typeBuilder* _self_, jule::Ptr<_1b9b032eb_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*(_self_))._field_err) {
		_1ba81b981_pushErr((*(_self_))._field_p.ptr(), _4126_token, _4141_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1ba82d751_pushSuggestion(_1ba82cd49_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*(_self_))._field_err) {
		_1ba81bce4_pushSuggestion((*(_self_))._field_p.ptr(), _4833_fmt, _4846_args);
	};
}



inline jule::Ptr<_1b9b187b7_TypeDecl> _1ba82d9d7_buildNamespace(_1ba82cd49_typeBuilder* _self_) {
	jule::Ptr<_1b9b187b7_TypeDecl> _5513_t = jule::new_ptr<_1b9b187b7_TypeDecl>(_1b9b187b7_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], });;
	jule::Ptr<_1b9b19565_NamespaceTypeDecl> _5913_nst = jule::new_ptr<_1b9b19565_NamespaceTypeDecl>();;
	jule::I32 _6013_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1b9b032eb_Token> _6217_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_6013_n & 1LL) == 0LL)) {
				if (((*(_6217_token))._field_Id != static_cast<jule::U32>(1LLU))) {
					_1ba82d3dd_pushErr(_self_, _6217_token, jule::Str::lit("invalid syntax", 14));
					_1ba82d751_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1b9b032eb_Token>> &__jule_push_dest = (*(_5913_nst))._field_Idents; __jule_push_dest.push(_6217_token); };
			} else if (((*(_6217_token))._field_Id != static_cast<jule::U32>(19LLU))) {
				goto _iter_end_1cabbbc11;
			};
			(_6013_n)++;
		}
	_iter_next_1cabbbc11:;
	}
	_iter_end_1cabbbc11:;;
	(*(_5913_nst))._field_Idents=(*(_5913_nst))._field_Idents.slice(0LL, ((*(_5913_nst))._field_Idents.len() - 1LL));
	((*((*(_self_))._field_i)))--;
	(*(_5913_nst))._field_Kind=_1ba82e28a_buildIdent(_self_);
	(*(_5513_t))._field_Kind=jule::Any(_5913_nst, &__jule_any_type90);
	return _5513_t;;
}



inline jule::Slice<jule::Ptr<_1b9b187b7_TypeDecl>> _1ba82dc6d_buildGenerics(_1ba82cd49_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1b9b032eb_Token> _889_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((*(_889_token))._field_Id != static_cast<jule::U32>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>> _9313_parts = _1ba82e004_identGenerics(_self_);;
	if ((_9313_parts.len() == 0LL)) {
		_1ba82d3dd_pushErr(_self_, _889_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b9b187b7_TypeDecl>> _9913_types = jule::Slice<jule::Ptr<_1b9b187b7_TypeDecl>>::alloc(0LL, _9313_parts.len());;
	{
		auto expr = &(_9313_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cabc3b4c:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1b9b032eb_Token>> _10021_part = *it;
			{
				jule::I32 _10117_j = 0LL;;
				jule::Ptr<_1b9b187b7_TypeDecl> _10217_t;;
				({
					__jule_tuple_x_1b9b187b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ba81d587_buildType((*(_self_))._field_p, &(_10021_part), (&(_10117_j)), true);
					_10217_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_10117_j < _10021_part.len())) {
					_1ba82d3dd_pushErr(_self_, _10021_part[_10117_j], jule::Str::lit("invalid syntax", 14));
				};
				{ jule::Slice<jule::Ptr<_1b9b187b7_TypeDecl>> &__jule_push_dest = _9913_types; __jule_push_dest.push(_10217_t); };
			}
			_iter_next_1cabc3b4c:;
			++it;
			goto _iter_begin_1cabc3b4c;
		}
		_iter_end_1cabc3b4c:;
	};
	return _9913_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>> _1ba82e004_identGenerics(_1ba82cd49_typeBuilder* _self_) {
	jule::I32 _1129_first = (*((*(_self_))._field_i));;
	jule::I32 _11313_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1b9b032eb_Token> _11513_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ (*(_11513_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(76LLU)) {
					_case_begin_1cabc6bd8:;
					{
						(_11313_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(77LLU)) {
					_case_begin_1cabc6c60:;
					{
						(_11313_rangeN)--;
					}
				}
				_match_end_1cabc6b72:;
			};
			if ((_11313_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1cabc5d6e;
			};
		}
	_iter_next_1cabc5d6e:;
	}
	_iter_end_1cabc5d6e:;;
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _12713_tokens = (*(_self_))._field_tokens.slice((_1129_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>> _12813_parts;;
	jule::Slice<_23d21115a_Log> _12820_errors;;
	({
		__jule_tuple_ssx_1b9b032eb_Token__jule_tuple_s_23d21115a_Log __jule_assign_result = _1ba819b38_parts(&(_12713_tokens), static_cast<jule::U32>(5LLU), true);
		_12813_parts = __jule_assign_result.__jule_result_arg0;
		_12820_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		((*((*(_self_))._field_p))._field_errors).append(_12820_errors);;
	};
	return _12813_parts;;
}



inline jule::Ptr<_1b9b187b7_TypeDecl> _1ba82e28a_buildIdent(_1ba82cd49_typeBuilder* _self_) {
	jule::Bool _13613_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_13613_next && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U32>(19LLU)))) {
		return _1ba82d9d7_buildNamespace(_self_);;
	};
	jule::Ptr<_1b9b032eb_Token> _14013_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1b9b18dc2_IdentTypeDecl> _14113_it = jule::new_ptr<_1b9b18dc2_IdentTypeDecl>(_1b9b18dc2_IdentTypeDecl{._field_Token=_14013_token, ._field_Ident=(*(_14013_token))._field_Kind, ._field_Binded=false, });;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1b9b187b7_TypeDecl> _14713_itd = jule::new_ptr<_1b9b187b7_TypeDecl>(_1b9b187b7_TypeDecl{._field_Token=_14013_token, ._field_Kind=jule::Any(_14113_it, &__jule_any_type20)});;
	if (((!(_13613_next)) || ((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U32>(17LLU)))) {
		(*(_14113_it))._field_Generics=_1ba82dc6d_buildGenerics(_self_);
		return _14713_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1ba82d3dd_pushErr(_self_, _14013_token, jule::Str::lit("invalid syntax", 14));
		return _14713_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ba82d3dd_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("invalid syntax", 14));
		return _14713_itd;;
	};
	jule::Ptr<_1b9b191be_SubIdentTypeDecl> _16413_sit = jule::new_ptr<_1b9b191be_SubIdentTypeDecl>();;
	{ jule::Slice<jule::Ptr<_1b9b18dc2_IdentTypeDecl>> &__jule_push_dest = (*(_16413_sit))._field_Idents; __jule_push_dest.push(_14113_it); };
	jule::Ptr<_1b9b187b7_TypeDecl> _16613_ident = _1ba82e28a_buildIdent(_self_);;
	{
		auto &_match_expr{ (*(_16613_ident))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1cabd18c4:;
			{
				{ jule::Slice<jule::Ptr<_1b9b18dc2_IdentTypeDecl>> &__jule_push_dest = (*(_16413_sit))._field_Idents; __jule_push_dest.push((*(_16613_ident))._field_Kind.cast_ptr<_1b9b18dc2_IdentTypeDecl>(&__jule_any_type20)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1cabd193a:;
			{
				((*(_16413_sit))._field_Idents).append((*((*(_16613_ident))._field_Kind.cast_ptr<_1b9b191be_SubIdentTypeDecl>(&__jule_any_type86)))._field_Idents);;
			}
		}
		_match_end_1cabd186e:;
	};
	return jule::new_ptr<_1b9b187b7_TypeDecl>(_1b9b187b7_TypeDecl{._field_Token=_14013_token, ._field_Kind=jule::Any(_16413_sit, &__jule_any_type86)});;
}



inline jule::Ptr<_1b9b187b7_TypeDecl> _1ba82e521_buildCppLink(_1ba82cd49_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id != static_cast<jule::U32>(17LLU)))) {
		_1ba82d3dd_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1b9b187b7_TypeDecl> _18513_t = _1ba82e28a_buildIdent(_self_);;
	(*((*(_18513_t))._field_Kind.cast_ptr<_1b9b18dc2_IdentTypeDecl>(&__jule_any_type20)))._field_Binded=true;
	return _18513_t;;
}



inline jule::Ptr<_1b9b187b7_TypeDecl> _1ba82e7a7_buildFn(_1ba82cd49_typeBuilder* _self_) {
	jule::Ptr<_1b9b032eb_Token> _19113_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1b9b2a477_FnDecl> _19213_f = _1ba822723_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_19213_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1b9b2a7da_IsAnon(_19213_f.ptr())))) {
		_1ba82d3dd_pushErr(_self_, (*(_19213_f))._field_Token, jule::Str::lit("invalid syntax", 14));
	};
	return jule::new_ptr<_1b9b187b7_TypeDecl>(_1b9b187b7_TypeDecl{._field_Token=_19113_token, ._field_Kind=jule::Any(_19213_f, &__jule_any_type14)});;
}



inline jule::Ptr<_1b9b187b7_TypeDecl> _1ba82ea3d_buildPtr(_1ba82cd49_typeBuilder* _self_) {
	jule::Ptr<_1b9b032eb_Token> _20613_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1ba82d3dd_pushErr(_self_, _20613_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id == static_cast<jule::U32>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1b9b187b7_TypeDecl>(_1b9b187b7_TypeDecl{._field_Token=_20613_token, ._field_Kind=jule::Any(jule::new_ptr<_1b9b1a2e1_PtrTypeDecl>(_1b9b1a2e1_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type71)});;
	};
	jule::Ptr<_1b9b187b7_TypeDecl> _22313_elem = _1ba830a94_step(_self_);;
	if ((_22313_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1b9b187b7_TypeDecl>(_1b9b187b7_TypeDecl{._field_Token=_20613_token, ._field_Kind=jule::Any(jule::new_ptr<_1b9b1a2e1_PtrTypeDecl>(_1b9b1a2e1_PtrTypeDecl{._field_Elem=_22313_elem}), &__jule_any_type71)});;
}



inline jule::Ptr<_1b9b187b7_TypeDecl> _1ba82ecc4_buildSptr(_1ba82cd49_typeBuilder* _self_) {
	jule::Ptr<_1b9b032eb_Token> _23713_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1ba82d3dd_pushErr(_self_, _23713_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1b9b187b7_TypeDecl> _24413_elem = _1ba830a94_step(_self_);;
	if ((_24413_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1b9b187b7_TypeDecl>(_1b9b187b7_TypeDecl{._field_Token=_23713_token, ._field_Kind=jule::Any(jule::new_ptr<_1b9b19862_SptrTypeDecl>(_1b9b19862_SptrTypeDecl{._field_Elem=_24413_elem}), &__jule_any_type72)});;
}



inline jule::Ptr<_1b9b187b7_TypeDecl> _1ba83005a_buildSlc(_1ba82cd49_typeBuilder* _self_) {
	jule::Ptr<_1b9b032eb_Token> _25813_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1b9b187b7_TypeDecl> _26013_elem = _1ba830a94_step(_self_);;
	if ((_26013_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1b9b187b7_TypeDecl>(_1b9b187b7_TypeDecl{._field_Token=_25813_token, ._field_Kind=jule::Any(jule::new_ptr<_1b9b19be7_SlcTypeDecl>(_1b9b19be7_SlcTypeDecl{._field_Elem=_26013_elem}), &__jule_any_type70)});;
}



inline jule::Ptr<_1b9b187b7_TypeDecl> _1ba8302e1_buildArr(_1ba82cd49_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _27313_exprTokens = _1ba8193b8_range(&((*((*(_self_))._field_i))), static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1ba82d3dd_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1b9b187b7_TypeDecl> _27913_elem = _1ba830a94_step(_self_);;
	if ((_27913_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b9b1aa83_ArrTypeDecl> _28413_arrt = jule::new_ptr<_1b9b1aa83_ArrTypeDecl>(_1b9b1aa83_ArrTypeDecl{._field_Elem=_27913_elem, });;
	jule::Ptr<_1b9b032eb_Token> _28813_token = _27313_exprTokens[0LL];;
	if (((_27313_exprTokens.len() == 1LL) && ((*(_28813_token))._field_Id == static_cast<jule::U32>(39LLU)))) {
	} else {
		(*(_28413_arrt))._field_Size=_1ba81c135_buildExpr((*(_self_))._field_p, &(_27313_exprTokens));
	};
	return jule::new_ptr<_1b9b187b7_TypeDecl>(_1b9b187b7_TypeDecl{._field_Token=_28813_token, ._field_Kind=jule::Any(_28413_arrt, &__jule_any_type69)});;
}



inline jule::Ptr<_1b9b187b7_TypeDecl> _1ba830577_buildMap(_1ba82cd49_typeBuilder* _self_) {
	jule::Ptr<_1b9b032eb_Token> _30213_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1ba82d3dd_pushErr(_self_, _30213_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _31013_keyTokens = _1ba8193b8_range(&((*((*(_self_))._field_i))), static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1ba82d3dd_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	} else if ((_31013_keyTokens.len() == 0LL)) {
		_1ba82d3dd_pushErr(_self_, _30213_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1b9b1b2d1_MapTypeDecl> _31913_mapt = jule::new_ptr<_1b9b1b2d1_MapTypeDecl>();;
	jule::I32 _32013_j = 0LL;;
	jule::Ptr<_1b9b187b7_TypeDecl> _32113_keyt;;
	jule::Bool _32123_ok = false;;
	({
		__jule_tuple_x_1b9b187b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ba81d587_buildType((*(_self_))._field_p, &(_31013_keyTokens), (&(_32013_j)), (*(_self_))._field_err);
		_32113_keyt = __jule_assign_result.__jule_result_arg0;
		_32123_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32123_ok))) {
		return nullptr;;
	} else if ((_32013_j < _31013_keyTokens.len())) {
		_1ba82d3dd_pushErr(_self_, _31013_keyTokens[_32013_j], jule::Str::lit("invalid syntax", 14));
	};
	(*(_31913_mapt))._field_Key=_32113_keyt;
	jule::Ptr<_1b9b187b7_TypeDecl> _32913_valt;;
	({
		__jule_tuple_x_1b9b187b7_TypeDecl__jule_tuple_bool __jule_assign_result = _1ba81d587_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_32913_valt = __jule_assign_result.__jule_result_arg0;
		_32123_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32123_ok))) {
		return nullptr;;
	};
	(*(_31913_mapt))._field_Val=_32913_valt;
	return jule::new_ptr<_1b9b187b7_TypeDecl>(_1b9b187b7_TypeDecl{._field_Token=_30213_mapToken, ._field_Kind=jule::Any(_31913_mapt, &__jule_any_type73)});;
}



inline jule::Ptr<_1b9b187b7_TypeDecl> _1ba83080d_buildEnumerable(_1ba82cd49_typeBuilder* _self_) {
	jule::Ptr<_1b9b032eb_Token> _34113_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_1ba82d3dd_pushErr(_self_, _34113_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_34113_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((*(_34113_token))._field_Id == static_cast<jule::U32>(77LLU))) {
		return _1ba83005a_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1ba8302e1_buildArr(_self_);;
}



inline jule::Ptr<_1b9b187b7_TypeDecl> _1ba830a94_step(_1ba82cd49_typeBuilder* _self_) {
	jule::Ptr<_1b9b032eb_Token> _3569_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ (*(_3569_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_1cabeeb12:;
			{
				return _1ba82e28a_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1cabeeb78:;
			{
				return _1ba82e521_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1cabee10b:;
			{
				return _1ba82e7a7_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1cabee172:;
			{
				return _1ba82ea3d_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1cabee1d8:;
			{
				return _1ba82ecc4_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1cabee24e:;
			{
				return jule::new_ptr<_1b9b187b7_TypeDecl>(_1b9b187b7_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1b9b19862_SptrTypeDecl>(_1b9b19862_SptrTypeDecl{._field_Elem=_1ba82ecc4_buildSptr(_self_)}), &__jule_any_type72)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(76LLU)) {
			_case_begin_1cabeec11:;
			{
				return _1ba83080d_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(37LLU)) {
			_case_begin_1cabeec77:;
			{
				return _1ba830577_buildMap(_self_);;
			}
		}
		else {
			_case_begin_1cabee095:;
			{
				((*((*(_self_))._field_i)))++;
				_1ba82d3dd_pushErr(_self_, _3569_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1cabee040:;
	};
}



inline __jule_tuple_x_1b9b187b7_TypeDecl__jule_tuple_bool _1ba830d2a_build(_1ba82cd49_typeBuilder* _self_) {
	__jule_tuple_x_1b9b187b7_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1b9b187b7_TypeDecl> _38813_root = _1ba830a94_step(_self_);;
	if ((_38813_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1ba82c596_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _38813_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ba82cd49_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ba099d47_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _1ba09b84e_pushErr(_1ba09b2ee_directiveEval* _self_, jule::Ptr<_1b9b032eb_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	{ jule::Slice<_23d21115a_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_23d21115a_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*(_2126_t))._field_Row, ._field_Column=(*(_2126_t))._field_Column, ._field_Path=(*((*(_2126_t))._field_File))._field_Path, ._field_Text=_23d2115bc_Logf(_2137_fmt, _2150_args), }); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>> _1ba09bc4a_splitOperans(_1ba09b2ee_directiveEval* _self_, jule::U32 _3331_op, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _3349_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>> _3413_parts = jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>>::alloc(0LL, 10LL);;
	jule::I32 _3513_i = 0LL;;
	jule::I32 _3613_rangeN = 0LL;;
	jule::I32 _3713_last = 0LL;;
	for (; (_3513_i < ((*(_3349_tokens)).len() - 1LL)); (_3513_i)++) {
		{
			jule::Ptr<_1b9b032eb_Token> _3913_b = (*(_3349_tokens))[_3513_i];;
			{
				auto &_match_expr{ (*(_3913_b))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1cac2342c:;
					{
						(_3613_rangeN)++;
						goto _iter_next_1cac22849;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1cac234a4:;
					{
						(_3613_rangeN)--;
					}
				}
				_match_end_1cac233b6:;
			};
			if (((_3613_rangeN > 0LL) || ((*(_3913_b))._field_Id != _3331_op))) {
				goto _iter_next_1cac22849;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>> &__jule_push_dest = _3413_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3713_last, _3513_i)); };
			_3713_last=static_cast<jule::I32>((_3513_i + 1LL));
		}
	_iter_next_1cac22849:;
	}
	_iter_end_1cac22849:;;
	if ((_3713_last < (*(_3349_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>> &__jule_push_dest = _3413_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3713_last)); };
	} else {
		_1ba09b84e_pushErr(_self_, (*(_3349_tokens))[(_3713_last - 1LL)], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _3413_parts;;
}



inline jule::Bool _1ba09c08b_evalDirectiveIdent(_1ba09b2ee_directiveEval* _self_, jule::Str _6433_ident) {
	if ((_6433_ident).empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac25d58:;
		if (it != expr_end) {
			jule::Str *_6816_var = it;
			{
				if (((*(_6816_var)) == _6433_ident)) {
					return true;;
				};
			}
			_iter_next_1cac25d58:;
			++it;
			goto _iter_begin_1cac25d58;
		}
		_iter_end_1cac25d58:;
	};
	return false;;
}



inline jule::Bool _1ba09c3cc_evalDirectivePart(_1ba09b2ee_directiveEval* _self_, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _7840_part) {
	jule::Bool _799_logicalNot = ((*(_7840_part[0LL]))._field_Id == static_cast<jule::U32>(68LLU));;
	if (_799_logicalNot) {
		(_7840_part).mut_slice(1LL);;
	};
	if ((_7840_part.len() > 1LL)) {
		_1ba09b84e_pushErr(_self_, _7840_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _8913_result = _1ba09c08b_evalDirectiveIdent(_self_, (*(_7840_part[0LL]))._field_Kind);;
	if (_799_logicalNot) {
		_8913_result=(!(_8913_result));
	};
	return _8913_result;;
}



inline jule::Bool _1ba09c663_eval(_1ba09b2ee_directiveEval* _self_) {
	if (((*((*(_self_))._field_d))._field_Args.len() == 0LL)) {
		_1ba09b84e_pushErr(_self_, (*((*(_self_))._field_d))._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _10213_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>> _10413_logicalOrParts = _1ba09bc4a_splitOperans(_self_, static_cast<jule::U32>(55LLU), &((*((*(_self_))._field_d))._field_Args));;
	if ((_10413_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_10413_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac2b05b:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1b9b032eb_Token>> _10921_part = *it;
			{
				jule::Bool _11017_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>> _11117_logicalAndParts = _1ba09bc4a_splitOperans(_self_, static_cast<jule::U32>(54LLU), &(_10921_part));;
				if ((_11117_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_11117_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cac2c48b:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_1b9b032eb_Token>> _11625_andPart = *it;
						{
							jule::Ptr<_1b9b032eb_Token> _11717_first = _11625_andPart[0LL];;
							if (((*(_11717_first))._field_Id == static_cast<jule::U32>(74LLU))) {
								jule::Ptr<_1b9b032eb_Token> _11921_end = _11625_andPart[(_11625_andPart.len() - 1LL)];;
								if (((*(_11921_end))._field_Id != static_cast<jule::U32>(75LLU))) {
									_1ba09b84e_pushErr(_self_, _11717_first, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
									return false;;
								};
								(_11625_andPart).mut_slice(1LL, (_11625_andPart.len() - 1LL));;
							};
							_11017_and=(_11017_and && _1ba09c3cc_evalDirectivePart(_self_, _11625_andPart));
						}
						_iter_next_1cac2c48b:;
						++it;
						goto _iter_begin_1cac2c48b;
					}
					_iter_end_1cac2c48b:;
				};
				_10213_result=(_10213_result || _11017_and);
			}
			_iter_next_1cac2b05b:;
			++it;
			goto _iter_begin_1cac2b05b;
		}
		_iter_end_1cac2b05b:;
	};
	return _10213_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ba09b2ee_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ba831e80_JuleImporter> static__1ba83237b_New(_1ba099d47_CompileInfo _5819_info) {
	jule::Ptr<_1ba831e80_JuleImporter> _5913_imp = jule::new_ptr<_1ba831e80_JuleImporter>(_1ba831e80_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_23d32248b_PathStdlib}), });;
	_1ba09a6c7_initVars(&((*(_5913_imp))._field_vars), &(_5819_info));
	return _5913_imp;;
}



inline jule::Slice<jule::Ptr<_1b9bb1200_ImportInfo>> _1ba832612_AllPackages(_1ba831e80_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1ba832a52_SetModPath(_1ba831e80_JuleImporter* _self_, jule::Str _7529_path) {
	(*(_self_))._field_mod=_7529_path;
}



inline jule::Str _1ba832cd8_GetModPath(_1ba831e80_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1ba833129_ModById(_1ba831e80_JuleImporter* _self_, jule::I32 _8322_id) {
	return (*(_self_))._field_mods[_8322_id];;
}



inline jule::Ptr<_1b9bb1200_ImportInfo> _1ba83346a_GetImport(_1ba831e80_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac33706:;
		if (it != expr_end) {
			jule::Ptr<_1b9bb1200_ImportInfo> _8821_p = *it;
			{
				if (((*(_8821_p))._field_Path == _8728_path)) {
					return _8821_p;;
				};
			}
			_iter_next_1cac33706:;
			++it;
			goto _iter_begin_1cac33706;
		}
		_iter_end_1cac33706:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1b9b1692a_Ast__jule_tuple_s_23d21115a_Log _1ba833866_ImportPackage(_1ba831e80_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	__jule_tuple_sx_1b9b1692a_Ast__jule_tuple_s_23d21115a_Log __jule_func_result;
	jule::Slice<jule::Ptr<_23bc9be5b_DirEntry>> _9713_dirents = ({
		auto except = static__23d172c8c_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_23d21115a_Log>::make({_1ba831996_flatCompilerErr((jule::Str::lit("connot read package directory: ", 31) + _9632_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_23bc9be5b_DirEntry>>(nullptr);});
	});;
	if (_9643_update_mod) {
		jule::Str _10213_newMod = _1b9bcd6b2_FindModuleFileDeep(_9632_path);;
		if ((_10213_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_10213_newMod;
			jule::Slice<_23d21115a_Log> _10521_errs = _1b9bcd97b_CheckModuleFile(&((*(_self_))._field_mod));;
			if ((_10521_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _10521_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1b9b1692a_Ast>> _11213_asts = jule::Slice<jule::Ptr<_1b9b1692a_Ast>>::alloc(0LL, _9713_dirents.len());;
	{
		auto expr = &(_9713_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac34b25:;
		if (it != expr_end) {
			jule::Ptr<_23bc9be5b_DirEntry> _11316_dirent = *it;
			{
				if ((_23bcaaa5d_IsDir((*(_11316_dirent))._field_Stat.ptr()) || (!(_23d14d394_HasSuffix((*(_11316_dirent))._field_Name, jule::Str::lit(".jule", 5)))))) {
					goto _iter_next_1cac34b25;
				};
				jule::Str _11913__path = _23d16ec56_Join(jule::Slice<jule::Str>::make({_9632_path,(*(_11316_dirent))._field_Name}));;
				jule::Ptr<_1b9b08ab5_File> _12017_file = _1b9b09e5c_NewFileSet(_11913__path);;
				_1b9b08ea0_Fill(_12017_file.ptr(), _1ba8316bb_readBuff((*(_12017_file))._field_Path));
				jule::Slice<_23d21115a_Log> _12217_errors = _1b9b16573_Lex(_12017_file, static_cast<jule::I32>(0LL));;
				if ((_12217_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12217_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1ba79de1e_FileInfo> _12717_finfo = _1ba7e533e_ParseFile(_12017_file);;
				if (((*(_12717_finfo))._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = (*(_12717_finfo))._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1ba098ede_isPassFileAnnotation((*(_11316_dirent))._field_Name)))) {
					goto _iter_next_1cac34b25;
				};
				jule::Bool _13713_r = false;;
				jule::Slice<_23d21115a_Log> _13720_logs;;
				({
					__jule_tuple_bool__jule_tuple_s_23d21115a_Log __jule_assign_result = _1ba83404d_isPassBuildDirectives(_self_, &((*(_12717_finfo))._field_Ast));
					_13713_r = __jule_assign_result.__jule_result_arg0;
					_13720_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13720_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13720_logs;
					return __jule_func_result;;
				};
				if ((!(_13713_r))) {
					goto _iter_next_1cac34b25;
				};
				{ jule::Slice<jule::Ptr<_1b9b1692a_Ast>> &__jule_push_dest = _11213_asts; __jule_push_dest.push((*(_12717_finfo))._field_Ast); };
			}
			_iter_next_1cac34b25:;
			++it;
			goto _iter_begin_1cac34b25;
		}
		_iter_end_1cac34b25:;
	};
	__jule_func_result.__jule_result_arg0 = _11213_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1ba833b1e_Imported(_1ba831e80_JuleImporter* _self_, jule::Ptr<_1b9bb1200_ImportInfo> _15331_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac3d018:;
		if (it != expr_end) {
			jule::Ptr<_1b9bb1200_ImportInfo> _15516_p = *it;
			{
				if ((((*(_15516_p))._field_Binded == (*(_15331_imp))._field_Binded) && ((*(_15516_p))._field_LinkPath == (*(_15331_imp))._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1cac3d018:;
			++it;
			goto _iter_begin_1cac3d018;
		}
		_iter_end_1cac3d018:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1cac442a5:;
			if (it != expr_end) {
				jule::I32 _16217_i = it - expr->begin();
				jule::Str _16220_mod = *it;
				{
					if (((*(_self_))._field_mod == _16220_mod)) {
						(*(_15331_imp))._field_ModId=_16217_i;
						goto _julec_label_1cac45edd;
					};
				}
				_iter_next_1cac442a5:;
				++it;
				_16217_i++;
				goto _iter_begin_1cac442a5;
			}
			_iter_end_1cac442a5:;
		};
		(*(_15331_imp))._field_ModId=static_cast<jule::I32>((*(_self_))._field_mods.len());
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_1cac45edd:;
	};
	{ jule::Slice<jule::Ptr<_1b9bb1200_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_15331_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_23d21115a_Log _1ba83404d_isPassBuildDirectives(_1ba831e80_JuleImporter* _self_, jule::Ptr<_1b9b1692a_Ast>* _17945_file) {
	__jule_tuple_bool__jule_tuple_s_23d21115a_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*((*(_17945_file))))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac4741d:;
		if (it != expr_end) {
			jule::Ptr<_1b9b17bd4_Directive> _18021_td = *it;
			{
				if ((!(*((*(_18021_td))._field_Tag))._field_Kind.equal("build", 5))) {
					goto _iter_next_1cac4741d;
				};
				_1ba09b2ee_directiveEval _18417_de = _1ba09b2ee_directiveEval{._field_d=_18021_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _18813_result = _1ba09c663_eval(&_18417_de);;
				if ((_18417_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _18417_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_18813_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1cac4741d:;
			++it;
			goto _iter_begin_1cac4741d;
		}
		_iter_end_1cac4741d:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ba831e80_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ba837194_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1cac68043_isCommonOrdered(jule::Slice<jule::Ptr<_1b9b393a9_Struct>> _1834_s, jule::Ptr<_1b9b393a9_Struct> _1842_t) {
	{
		auto expr = &((*(_1842_t))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac69088:;
		if (it != expr_end) {
			jule::Ptr<_1b9b393a9_Struct> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cac699d4:;
					if (it != expr_end) {
						jule::Ptr<_1b9b393a9_Struct> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1cac699d4:;
						++it;
						goto _iter_begin_1cac699d4;
					}
					_iter_end_1cac699d4:;
				};
			}
			_iter_next_1cac69088:;
			++it;
			goto _iter_begin_1cac69088;
		}
		_iter_end_1cac69088:;
	};
	return true;;
}

inline jule::Bool _1cac6ca5e_isCommonOrdered(jule::Slice<jule::Ptr<_1b9c09611_Var>> _1834_s, jule::Ptr<_1b9c09611_Var> _1842_t) {
	{
		auto expr = &((*(_1842_t))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac6da60:;
		if (it != expr_end) {
			jule::Ptr<_1b9c09611_Var> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cac6e4ab:;
					if (it != expr_end) {
						jule::Ptr<_1b9c09611_Var> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1cac6e4ab:;
						++it;
						goto _iter_begin_1cac6e4ab;
					}
					_iter_end_1cac6e4ab:;
				};
			}
			_iter_next_1cac6da60:;
			++it;
			goto _iter_begin_1cac6da60;
		}
		_iter_end_1cac6da60:;
	};
	return true;;
}



inline void _1cac64b55_orderCommon(jule::Slice<jule::Ptr<_1b9b393a9_Struct>>* _3135_s) {
	jule::I32 _3213_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac65936:;
		if (it != expr_end) {
			{
				jule::Bool _3417_swapped = false;;
				jule::I32 _3517_k = 0LL;;
				for (; (_3517_k < _3213_n); (_3517_k)++) {
					{
						if ((!(_1cac68043_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3517_k])))) {
							std::swap((*(_3135_s))[_3517_k], (*(_3135_s))[(_3517_k + 1LL)]);
							_3417_swapped=true;
						};
					}
				_iter_next_1cac668b0:;
				}
				_iter_end_1cac668b0:;;
				if ((!(_3417_swapped))) {
					goto _iter_end_1cac65936;
				};
				(_3213_n)--;
			}
			_iter_next_1cac65936:;
			++it;
			goto _iter_begin_1cac65936;
		}
		_iter_end_1cac65936:;
	};
}

inline void _1cac688d4_orderCommon(jule::Slice<jule::Ptr<_1b9c09611_Var>>* _3135_s) {
	jule::I32 _3213_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac6a991:;
		if (it != expr_end) {
			{
				jule::Bool _3417_swapped = false;;
				jule::I32 _3517_k = 0LL;;
				for (; (_3517_k < _3213_n); (_3517_k)++) {
					{
						if ((!(_1cac6ca5e_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3517_k])))) {
							std::swap((*(_3135_s))[_3517_k], (*(_3135_s))[(_3517_k + 1LL)]);
							_3417_swapped=true;
						};
					}
				_iter_next_1cac6b3cb:;
				}
				_iter_end_1cac6b3cb:;;
				if ((!(_3417_swapped))) {
					goto _iter_end_1cac6a991;
				};
				(_3213_n)--;
			}
			_iter_next_1cac6a991:;
			++it;
			goto _iter_begin_1cac6a991;
		}
		_iter_end_1cac6a991:;
	};
}



inline void static__1ba837cee_orderStructures(jule::Slice<jule::Ptr<_1b9b393a9_Struct>>* _5136_structs) {
	_1cac64b55_orderCommon(_5136_structs);
}



inline void static__1ba838030_orderVars(jule::Slice<jule::Ptr<_1b9c09611_Var>>* _5730_vars) {
	_1cac688d4_orderCommon(_5730_vars);
}





std::ostream &operator<<(std::ostream &_Stream, _1ba837408_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ba963974_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1c7661720_optimizeChild(jule::Ptr<_1c7661269_scopeDeadCode> _self_, jule::Ptr<_1b9b8ecc2_Scope>* _3938_s) {
	jule::Ptr<_1c7661269_scopeDeadCode> _4013_sdc = jule::new_ptr<_1c7661269_scopeDeadCode>(_1c7661269_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3938_s)), ._field_stmts=(&((*((*(_3938_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*(_self_))._field_gotos, });;
	{
		_1c766413a_optimizeStmts(_4013_sdc);
	};
}



inline void _1c76619c8_optimizeBodyChildExceptional(jule::Ptr<_1c7661269_scopeDeadCode> _self_, jule::Ptr<_1b9b8ecc2_Scope>* _5053_s) {
	jule::Ptr<_1c7661269_scopeDeadCode> _5113_sdc = jule::new_ptr<_1c7661269_scopeDeadCode>(_1c7661269_scopeDeadCode{._field_s=(*(_5053_s)), ._field_stmts=(&((*((*(_5053_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*(_self_))._field_gotos, ._field_except=true});;
	{
		_1c766413a_optimizeStmts(_5113_sdc);
	};
}



inline void _1c7661c81_optimizeBodyChild(jule::Ptr<_1c7661269_scopeDeadCode> _self_, jule::Ptr<_1b9b8ecc2_Scope>* _6142_s) {
	jule::Ptr<_1c7661269_scopeDeadCode> _6213_sdc = jule::new_ptr<_1c7661269_scopeDeadCode>(_1c7661269_scopeDeadCode{._field_s=(*(_6142_s)), ._field_stmts=(&((*((*(_6142_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*(_self_))._field_gotos, });;
	{
		_1c766413a_optimizeStmts(_6213_sdc);
	};
}



inline void _1c7662039_optimizeExprModel(jule::Ptr<_1c7661269_scopeDeadCode> _self_, jule::Any* _7142_model) {
	_1c76654c1_exprDeadCode _729_edc = static__1c7665b0e_new(&(_self_));;
	_1c766ba38_optimize(&_729_edc, _7142_model);
}



inline void _1c7662237_eliminateFollowed(_1c7661269_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		(*((*(_self_))._field_stmts))=(*((*(_self_))._field_stmts)).slice(0LL, ((*(_self_))._field_i + 1LL));
	};
	jule::Ptr<_1c7661269_scopeDeadCode> _8313_parent = (*(_self_))._field_parent;;
	while ((_8313_parent != nullptr)) {
		{
			{
				(*((*(_8313_parent))._field_stmts))=(*((*(_8313_parent))._field_stmts)).slice(0LL, ((*(_8313_parent))._field_i + 1LL));
			};
			_8313_parent=(*(_8313_parent))._field_parent;
		}
	_iter_next_1cacdee77:;
	}
	_iter_end_1cacdee77:;;
}



inline void _1c76624e0_pushGoto(jule::Ptr<_1c7661269_scopeDeadCode> _self_, jule::Ptr<_1b9b92a3e_GotoSt> _9232_gt) {
	jule::I32 _9313_i = 0LL;;
	for (; (_9313_i < (*((*(_self_))._field_labels)).len()); (_9313_i)++) {
		{
			if (((*(_9232_gt))._field_Ident == (*((*((*(_self_))._field_labels))[_9313_i]))._field_Ident)) {
				return;;
			};
		}
	_iter_next_1cace31bc:;
	}
	_iter_end_1cace31bc:;;
	{ jule::Slice<jule::Ptr<_1b9b92a3e_GotoSt>> &__jule_push_dest = (*((*(_self_))._field_gotos)); __jule_push_dest.push(_9232_gt); };
}



inline void _1c7662798_pushLabel(jule::Ptr<_1c7661269_scopeDeadCode> _self_, jule::Ptr<_1b9b92665_Label> _10233_l) {
	jule::I32 _10313_i = 0LL;;
	while ((_10313_i < (*((*(_self_))._field_gotos)).len())) {
		{
			if (((*(_10233_l))._field_Ident == (*((*((*(_self_))._field_gotos))[_10313_i]))._field_Ident)) {
				jule::copy(((*((*(_self_))._field_gotos)).slice(_10313_i)), ((*((*(_self_))._field_gotos)).slice((_10313_i + 1LL))));
				(*((*(_self_))._field_gotos))=(*((*(_self_))._field_gotos)).slice(0LL, ((*((*(_self_))._field_gotos)).len() - 1LL));
				goto _iter_next_1cace528a;
			};
			(_10313_i)++;
		}
	_iter_next_1cace528a:;
	}
	_iter_end_1cace528a:;;
	{ jule::Slice<jule::Ptr<_1b9b92665_Label>> &__jule_push_dest = (*((*(_self_))._field_labels)); __jule_push_dest.push(_10233_l); };
}



inline void _1c7662a51_optimizeRangeIter(jule::Ptr<_1c7661269_scopeDeadCode> _self_, jule::Ptr<_1b9b91b09_RangeIter> _11541_it) {
	_1c7662039_optimizeExprModel(_self_, &((*((*(_11541_it))._field_Expr))._field_Model));
	_1c7661c81_optimizeBodyChild(_self_, &((*(_11541_it))._field_Scope));
}



inline void _1c7662d09_optimizeWhileIter(jule::Ptr<_1c7661269_scopeDeadCode> _self_, jule::Ptr<_1b9b911ad_WhileIter> _12041_it) {
	_1c7662039_optimizeExprModel(_self_, &((*(_12041_it))._field_Expr));
	if (((*(_12041_it))._field_Next != nullptr)) {
		_1c7663e3c_optimizeStmt(_self_, (*(_12041_it))._field_Next);
	};
	_1c7661c81_optimizeBodyChild(_self_, &((*(_12041_it))._field_Scope));
}



inline void _1c76630b2_optimizeInfIter(jule::Ptr<_1c7661269_scopeDeadCode> _self_, jule::Ptr<_1b9b90c07_InfIter> _12839_it) {
	_1c7661c81_optimizeBodyChild(_self_, &((*(_12839_it))._field_Scope));
}



inline void _1c766336a_optimizeConditional(jule::Ptr<_1c7661269_scopeDeadCode> _self_, jule::Ptr<_1b9b9090a_Conditional> _13243_c) {
	{
		auto expr = &((*(_13243_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cacec11b:;
		if (it != expr_end) {
			jule::Ptr<_1b9b901e0_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1c7662039_optimizeExprModel(_self_, &((*(_13321_case))._field_Expr));
					_1c7661c81_optimizeBodyChild(_self_, &((*(_13321_case))._field_Scope));
				};
			}
			_iter_next_1cacec11b:;
			++it;
			goto _iter_begin_1cacec11b;
		}
		_iter_end_1cacec11b:;
	};
	if (((*(_13243_c))._field_Default != nullptr)) {
		if (((*(_13243_c))._field_Elifs.len() == 0LL)) {
			_1c7661720_optimizeChild(_self_, &((*((*(_13243_c))._field_Default))._field_Scope));
		} else {
			_1c7661c81_optimizeBodyChild(_self_, &((*((*(_13243_c))._field_Default))._field_Scope));
		};
	};
}



inline void _1c7663623_optimizeMatch(jule::Ptr<_1c7661269_scopeDeadCode> _self_, jule::Ptr<_1b9b93e08_Match> _15037_m) {
	{
		auto expr = &((*(_15037_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cad00680:;
		if (it != expr_end) {
			jule::Ptr<_1b9b94a41_Case> _15121_case = *it;
			{
				{
					auto expr = &((*(_15121_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cad010cb:;
					if (it != expr_end) {
						jule::Ptr<_1b9c5d016_Data> _15225_expr = *it;
						{
							_1c7662039_optimizeExprModel(_self_, &((*(_15225_expr))._field_Model));
						}
						_iter_next_1cad010cb:;
						++it;
						goto _iter_begin_1cad010cb;
					}
					_iter_end_1cad010cb:;
				};
				_1c7661c81_optimizeBodyChild(_self_, &((*(_15121_case))._field_Scope));
			}
			_iter_next_1cad00680:;
			++it;
			goto _iter_begin_1cad00680;
		}
		_iter_end_1cad00680:;
	};
	if (((*(_15037_m))._field_Default != nullptr)) {
		if (((*(_15037_m))._field_Cases.len() == 0LL)) {
			_1c7661720_optimizeChild(_self_, &((*((*(_15037_m))._field_Default))._field_Scope));
		} else {
			_1c7661c81_optimizeBodyChild(_self_, &((*((*(_15037_m))._field_Default))._field_Scope));
		};
	};
}



inline void _1c76638cb_optimizeAssign(jule::Ptr<_1c7661269_scopeDeadCode> _self_, jule::Ptr<_1b9b933be_Assign> _16838_assign) {
	_1c7662039_optimizeExprModel(_self_, &((*((*(_16838_assign))._field_L))._field_Model));
	_1c7662039_optimizeExprModel(_self_, &((*((*(_16838_assign))._field_R))._field_Model));
}



inline void _1c7663b84_optimizeMultiAssign(jule::Ptr<_1c7661269_scopeDeadCode> _self_, jule::Ptr<_1b9b93798_MultiAssign> _17343_assign) {
	{
		auto expr = &((*(_17343_assign))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cad054dc:;
		if (it != expr_end) {
			jule::Ptr<_1b9c5d016_Data> _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1c7662039_optimizeExprModel(_self_, &((*(_17421_l))._field_Model));
				};
			}
			_iter_next_1cad054dc:;
			++it;
			goto _iter_begin_1cad054dc;
		}
		_iter_end_1cad054dc:;
	};
	_1c7662039_optimizeExprModel(_self_, &((*(_17343_assign))._field_R));
}



inline void _1c7663e3c_optimizeStmt(jule::Ptr<_1c7661269_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1cad0718c:;
			{
				jule::Ptr<_1b9b8ecc2_Scope> _18517_scope = _18236_st.cast_ptr<_1b9b8ecc2_Scope>(&__jule_any_type22);;
				if ((*(_18517_scope))._field_Deferred) {
					_1c766446a_eliminateDeadCodeOfScope(_18517_scope);
				} else {
					_1c7661720_optimizeChild(_self_, &(_18517_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1cad07203:;
			{
				_1c7662a51_optimizeRangeIter(_self_, _18236_st.cast_ptr<_1b9b91b09_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1cad07269:;
			{
				_1c7662d09_optimizeWhileIter(_self_, _18236_st.cast_ptr<_1b9b911ad_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1cad072e1:;
			{
				_1c76630b2_optimizeInfIter(_self_, _18236_st.cast_ptr<_1b9b90c07_InfIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1cad07368:;
			{
				_1c766336a_optimizeConditional(_self_, _18236_st.cast_ptr<_1b9b9090a_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1cad073e0:;
			{
				_1c7663623_optimizeMatch(_self_, _18236_st.cast_ptr<_1b9b93e08_Match>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1cad07467:;
			{
				_1c76638cb_optimizeAssign(_self_, _18236_st.cast_ptr<_1b9b933be_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1cad074de:;
			{
				_1c7663b84_optimizeMultiAssign(_self_, _18236_st.cast_ptr<_1b9b93798_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1cad07566:;
			{
				jule::Ptr<_1b9c5d016_Data> _20617_d = _18236_st.cast_ptr<_1b9c5d016_Data>(&__jule_any_type24);;
				if ((*(_self_))._field_except) {
					goto _match_end_1cad07049;
				};
				{
					auto &_match_expr{ (*(_20617_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type29) {
						_case_begin_1cad0c7ad:;
						{
							_1c7662237_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_1cad0ce51:;
						{
							_1c7662039_optimizeExprModel(_self_, &((*(_20617_d))._field_Model));
						}
					}
					_match_end_1cad0cdeb:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1cad075dd:;
			{
				_1c7662237_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1cad07665:;
			{
				_1c76624e0_pushGoto(_self_, _18236_st.cast_ptr<_1b9b92a3e_GotoSt>(&__jule_any_type42));
				_1c7662237_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1cad076dc:;
			{
				_1c7662798_pushLabel(_self_, _18236_st.cast_ptr<_1b9b92665_Label>(&__jule_any_type21));
			}
		}
		_match_end_1cad07049:;
	};
}



inline void _1c766413a_optimizeStmts(jule::Ptr<_1c7661269_scopeDeadCode> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*(_self_))._field_i < (*((*(_self_))._field_stmts)).len()); ((*(_self_))._field_i)++) {
		{
			_1c7663e3c_optimizeStmt(_self_, (*((*(_self_))._field_stmts))[(*(_self_))._field_i]);
		}
	_iter_next_1cad10618:;
	}
	_iter_end_1cad10618:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c7661269_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1c76654c1_exprDeadCode static__1c7665b0e_new(jule::Ptr<_1c7661269_scopeDeadCode>* _4824_s) {
	return _1c76654c1_exprDeadCode{._field_s=(*(_4824_s))};;
}



inline void _1c7665db7_binary(_1c76654c1_exprDeadCode* _self_, jule::Ptr<_1b9b41526_BinopExprModel> _5425_m) {
	_1c766ba38_optimize(_self_, &((*((*(_5425_m))._field_Left))._field_Model));
	_1c766ba38_optimize(_self_, &((*((*(_5425_m))._field_Right))._field_Model));
}



inline void _1c7666170_unary(_1c76654c1_exprDeadCode* _self_, jule::Ptr<_1b9b41900_UnaryExprModel> _5924_m) {
	_1c766ba38_optimize(_self_, &((*((*(_5924_m))._field_Expr))._field_Model));
}



inline void _1c7666428_structureLit(_1c76654c1_exprDeadCode* _self_, jule::Ptr<_1b9b422c4_StructLitExprModel> _6331_m) {
	{
		auto expr = &((*(_6331_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cad14199:;
		if (it != expr_end) {
			jule::Ptr<_1b9b41e2d_StructArgExprModel> _6421_arg = *it;
			{
				_1c766ba38_optimize(_self_, &((*((*(_6421_arg))._field_Expr))._field_Model));
			}
			_iter_next_1cad14199:;
			++it;
			goto _iter_begin_1cad14199;
		}
		_iter_end_1cad14199:;
	};
}



inline void _1c76666d1_allocStructure(_1c76654c1_exprDeadCode* _self_, jule::Ptr<_1b9b425c1_AllocStructLitExprModel> _6933_m) {
	_1c7666428_structureLit(_self_, (*(_6933_m))._field_Lit);
}



inline void _1c7666989_casting(_1c76654c1_exprDeadCode* _self_, jule::Ptr<_1b9b42b54_CastingExprModel> _7326_m) {
	_1c766ba38_optimize(_self_, &((*(_7326_m))._field_Expr));
}



inline void _1c7666c42_args(_1c76654c1_exprDeadCode* _self_, jule::Slice<jule::Any>* _7724_args) {
	{
		auto expr = _7724_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cad16630:;
		if (it != expr_end) {
			jule::Any _7821_arg = *it;
			{
				_1c766ba38_optimize(_self_, &(_7821_arg));
			}
			_iter_next_1cad16630:;
			++it;
			goto _iter_begin_1cad16630;
		}
		_iter_end_1cad16630:;
	};
}



inline void _1c7666eea_funcCall(_1c76654c1_exprDeadCode* _self_, jule::Ptr<_1b9b43506_FnCallExprModel> _8327_m) {
	_1c766ba38_optimize(_self_, &((*(_8327_m))._field_Expr));
	_1c7666c42_args(_self_, &((*(_8327_m))._field_Args));
	if (((*(_8327_m))._field_Except != nullptr)) {
		_1c76619c8_optimizeBodyChildExceptional((*(_self_))._field_s, &((*(_8327_m))._field_Except));
	};
}



inline void _1c76672a3_slice(_1c76654c1_exprDeadCode* _self_, jule::Ptr<_1b9b438d0_SliceExprModel> _9124_m) {
	_1c7666c42_args(_self_, &((*(_9124_m))._field_Elems));
}



inline void _1c766755b_array(_1c76654c1_exprDeadCode* _self_, jule::Ptr<_1b9b46927_ArrayExprModel> _9524_m) {
	if ((((*(_9524_m))._field_Elems.len() == 2LL) && ((*(_9524_m))._field_Elems[1LL] == nullptr))) {
		_1c766ba38_optimize(_self_, &((*(_9524_m))._field_Elems[0LL]));
	};
	_1c7666c42_args(_self_, &((*(_9524_m))._field_Elems));
}



inline void _1c7667814_indexing(_1c76654c1_exprDeadCode* _self_, jule::Ptr<_1b9b43d86_IndexingExprModel> _10227_m) {
	_1c766ba38_optimize(_self_, &((*((*(_10227_m))._field_Expr))._field_Model));
	_1c766ba38_optimize(_self_, &((*((*(_10227_m))._field_Index))._field_Model));
}



inline void _1c7667abc_anonFunc(_1c76654c1_exprDeadCode* _self_, jule::Ptr<_1b9b44260_AnonFnExprModel> _10727_m) {
	_1c766446a_eliminateDeadCodeOfScope((*((*(_10727_m))._field_Func))._field_Scope);
}



inline void _1c7667d75_mapExpr(_1c76654c1_exprDeadCode* _self_, jule::Ptr<_1b9b44ae0_MapExprModel> _11126_m) {
	{
		auto expr = &((*(_11126_m))._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cad1ccc9:;
		if (it != expr_end) {
			jule::Ptr<_1b9b44639_KeyValPairExprModel> _11221_pair = *it;
			{
				_1c766ba38_optimize(_self_, &((*(_11221_pair))._field_Key));
				_1c766ba38_optimize(_self_, &((*(_11221_pair))._field_Val));
			}
			_iter_next_1cad1ccc9:;
			++it;
			goto _iter_begin_1cad1ccc9;
		}
		_iter_end_1cad1ccc9:;
	};
}



inline void _1c766812d_slicing(_1c76654c1_exprDeadCode* _self_, jule::Ptr<_1b9b45173_SlicingExprModel> _11826_m) {
	_1c766ba38_optimize(_self_, &((*(_11826_m))._field_Expr));
	_1c766ba38_optimize(_self_, &((*(_11826_m))._field_Left));
	if (((*(_11826_m))._field_Right != nullptr)) {
		_1c766ba38_optimize(_self_, &((*(_11826_m))._field_Right));
	};
}



inline void _1c76683d6_traitSub(_1c76654c1_exprDeadCode* _self_, jule::Ptr<_1b9b45706_TraitSubIdentExprModel> _12627_m) {
	_1c766ba38_optimize(_self_, &((*(_12627_m))._field_Expr));
}



inline void _1c766868e_structureSub(_1c76654c1_exprDeadCode* _self_, jule::Ptr<_1b9b46097_StructSubIdentExprModel> _13031_m) {
	_1c766ba38_optimize(_self_, &((*((*(_13031_m))._field_Expr))._field_Model));
}



inline void _1c7668947_tuple(_1c76654c1_exprDeadCode* _self_, jule::Ptr<_1b9b46c24_TupleExprModel> _13424_m) {
	{
		auto expr = &((*(_13424_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cad21dcc:;
		if (it != expr_end) {
			jule::Ptr<_1b9c5d016_Data> _13521_d = *it;
			{
				_1c766ba38_optimize(_self_, &((*(_13521_d))._field_Model));
			}
			_iter_next_1cad21dcc:;
			++it;
			goto _iter_begin_1cad21dcc;
		}
		_iter_end_1cad21dcc:;
	};
}



inline void _1c7668c00_newCall(_1c76654c1_exprDeadCode* _self_, jule::Ptr<_1b9b478a1_BuiltinNewCallExprModel> _14026_m) {
	if (((*(_14026_m))._field_Init != nullptr)) {
		_1c766ba38_optimize(_self_, &((*(_14026_m))._field_Init));
	};
}



inline void _1c7668ea8_outCall(_1c76654c1_exprDeadCode* _self_, jule::Ptr<_1b9b470ed_BuiltinOutCallExprModel> _14626_m) {
	_1c766ba38_optimize(_self_, &((*(_14626_m))._field_Expr));
}



inline void _1c7669261_outlnCall(_1c76654c1_exprDeadCode* _self_, jule::Ptr<_1b9b474c7_BuiltinOutlnCallExprModel> _15028_m) {
	_1c766ba38_optimize(_self_, &((*(_15028_m))._field_Expr));
}



inline void _1c7669519_panicCall(_1c76654c1_exprDeadCode* _self_, jule::Ptr<_1b9b47c7a_BuiltinPanicCallExprModel> _15428_m) {
	_1c766ba38_optimize(_self_, &((*(_15428_m))._field_Expr));
}



inline void _1c76697c2_assertCall(_1c76654c1_exprDeadCode* _self_, jule::Ptr<_1b9b48231_BuiltinAssertCallExprModel> _15829_m) {
	_1c766ba38_optimize(_self_, &((*(_15829_m))._field_Expr));
}



inline void _1c7669a7a_errorCall(_1c76654c1_exprDeadCode* _self_, jule::Ptr<_1b9b49d37_BuiltinErrorCallExprModel> _16228_m) {
	_1c766ba38_optimize(_self_, &((*((*(_16228_m))._field_Err))._field_Model));
}



inline void _1c7669d33_makeCall(_1c76654c1_exprDeadCode* _self_, jule::Ptr<_1b9b486d7_BuiltinMakeCallExprModel> _16627_m) {
	if (((*(_16627_m))._field_Len != nullptr)) {
		_1c766ba38_optimize(_self_, &((*(_16627_m))._field_Len));
	};
	if (((*(_16627_m))._field_Cap != nullptr)) {
		_1c766ba38_optimize(_self_, &((*(_16627_m))._field_Cap));
	};
}



inline void _1c766a0db_appendCall(_1c76654c1_exprDeadCode* _self_, jule::Ptr<_1b9b48ab1_BuiltinAppendCallExprModel> _17529_m) {
	_1c766ba38_optimize(_self_, &((*(_17529_m))._field_Dest));
	_1c766ba38_optimize(_self_, &((*(_17529_m))._field_Elements));
}



inline void _1c766a394_lenCall(_1c76654c1_exprDeadCode* _self_, jule::Ptr<_1b9b48dad_BuiltinLenCallExprModel> _18026_m) {
	_1c766ba38_optimize(_self_, &((*((*(_18026_m))._field_Expr))._field_Model));
}



inline void _1c766a64c_capCall(_1c76654c1_exprDeadCode* _self_, jule::Ptr<_1b9b491aa_BuiltinCapCallExprModel> _18426_m) {
	_1c766ba38_optimize(_self_, &((*((*(_18426_m))._field_Expr))._field_Model));
}



inline void _1c766a905_deleteCall(_1c76654c1_exprDeadCode* _self_, jule::Ptr<_1b9b49584_BuiltinDeleteCallExprModel> _18829_m) {
	_1c766ba38_optimize(_self_, &((*((*(_18829_m))._field_Dest))._field_Model));
	if (((*(_18829_m))._field_Key != nullptr)) {
		_1c766ba38_optimize(_self_, &((*((*(_18829_m))._field_Key))._field_Model));
	};
}



inline void _1c766abad_sizeof(_1c76654c1_exprDeadCode* _self_, jule::Ptr<_1b9b458e3_SizeofExprModel> _19525_m) {
	_1c766ba38_optimize(_self_, &((*(_19525_m))._field_Expr));
}



inline void _1c766ae66_alignof(_1c76654c1_exprDeadCode* _self_, jule::Ptr<_1b9b4a563_AlignofExprModel> _19926_m) {
	_1c766ba38_optimize(_self_, &((*(_19926_m))._field_Expr));
}



inline void _1c766b21e_integratedToStr(_1c76654c1_exprDeadCode* _self_, jule::Ptr<_1b9b4ab5c_IntegratedToStrExprModel> _20334_m) {
	_1c766ba38_optimize(_self_, &((*(_20334_m))._field_Expr));
}



inline void _1c766b4c7_free(_1c76654c1_exprDeadCode* _self_, jule::Ptr<_1b9b4b333_FreeExprModel> _20723_m) {
	_1c766ba38_optimize(_self_, &((*(_20723_m))._field_Expr));
}



inline void _1c766b780_backendEmit(_1c76654c1_exprDeadCode* _self_, jule::Ptr<_1b9b4b036_BackendEmitExprModel> _21130_m) {
	_1c7666c42_args(_self_, &((*(_21130_m))._field_Exprs));
}



inline void _1c766ba38_optimize(_1c76654c1_exprDeadCode* _self_, jule::Any* _21528_model) {
	{
		auto &_match_expr{ (*(_21528_model)) };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1cad3043a:;
			{
				_1c7665db7_binary(_self_, (*(_21528_model)).cast_ptr<_1b9b41526_BinopExprModel>(&__jule_any_type111));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1cad304a1:;
			{
				_1c7666170_unary(_self_, (*(_21528_model)).cast_ptr<_1b9b41900_UnaryExprModel>(&__jule_any_type110));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1cad30517:;
			{
				_1c7666428_structureLit(_self_, (*(_21528_model)).cast_ptr<_1b9b422c4_StructLitExprModel>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1cad3058e:;
			{
				_1c76666d1_allocStructure(_self_, (*(_21528_model)).cast_ptr<_1b9b425c1_AllocStructLitExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1cad30616:;
			{
				_1c7666989_casting(_self_, (*(_21528_model)).cast_ptr<_1b9b42b54_CastingExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1cad3068d:;
			{
				_1c7666eea_funcCall(_self_, (*(_21528_model)).cast_ptr<_1b9b43506_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1cad30715:;
			{
				_1c76672a3_slice(_self_, (*(_21528_model)).cast_ptr<_1b9b438d0_SliceExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1cad3078c:;
			{
				_1c766755b_array(_self_, (*(_21528_model)).cast_ptr<_1b9b46927_ArrayExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1cad30814:;
			{
				_1c7667814_indexing(_self_, (*(_21528_model)).cast_ptr<_1b9b43d86_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1cad3088b:;
			{
				_1c7667abc_anonFunc(_self_, (*(_21528_model)).cast_ptr<_1b9b44260_AnonFnExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1cad30913:;
			{
				_1c7667d75_mapExpr(_self_, (*(_21528_model)).cast_ptr<_1b9b44ae0_MapExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1cad3098a:;
			{
				_1c766812d_slicing(_self_, (*(_21528_model)).cast_ptr<_1b9b45173_SlicingExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1cad30a12:;
			{
				_1c76683d6_traitSub(_self_, (*(_21528_model)).cast_ptr<_1b9b45706_TraitSubIdentExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1cad30a89:;
			{
				_1c766868e_structureSub(_self_, (*(_21528_model)).cast_ptr<_1b9b46097_StructSubIdentExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1cad30b11:;
			{
				_1c7668947_tuple(_self_, (*(_21528_model)).cast_ptr<_1b9b46c24_TupleExprModel>(&__jule_any_type81));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1cad30b88:;
			{
				_1c7668ea8_outCall(_self_, (*(_21528_model)).cast_ptr<_1b9b470ed_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1cad30c10:;
			{
				_1c7669261_outlnCall(_self_, (*(_21528_model)).cast_ptr<_1b9b474c7_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1cad30c87:;
			{
				_1c7668c00_newCall(_self_, (*(_21528_model)).cast_ptr<_1b9b478a1_BuiltinNewCallExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1cad30d0e:;
			{
				_1c7669519_panicCall(_self_, (*(_21528_model)).cast_ptr<_1b9b47c7a_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1cad30d86:;
			{
				_1c76697c2_assertCall(_self_, (*(_21528_model)).cast_ptr<_1b9b48231_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1cad30e0d:;
			{
				_1c7669a7a_errorCall(_self_, (*(_21528_model)).cast_ptr<_1b9b49d37_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1cad30e85:;
			{
				_1c7669d33_makeCall(_self_, (*(_21528_model)).cast_ptr<_1b9b486d7_BuiltinMakeCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1cad3100c:;
			{
				_1c766a0db_appendCall(_self_, (*(_21528_model)).cast_ptr<_1b9b48ab1_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1cad31084:;
			{
				_1c766a394_lenCall(_self_, (*(_21528_model)).cast_ptr<_1b9b48dad_BuiltinLenCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1cad3110b:;
			{
				_1c766a64c_capCall(_self_, (*(_21528_model)).cast_ptr<_1b9b491aa_BuiltinCapCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1cad31183:;
			{
				_1c766a905_deleteCall(_self_, (*(_21528_model)).cast_ptr<_1b9b49584_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1cad3120a:;
			{
				_1c766abad_sizeof(_self_, (*(_21528_model)).cast_ptr<_1b9b458e3_SizeofExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1cad31282:;
			{
				_1c766ae66_alignof(_self_, (*(_21528_model)).cast_ptr<_1b9b4a563_AlignofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1cad31309:;
			{
				_1c766b21e_integratedToStr(_self_, (*(_21528_model)).cast_ptr<_1b9b4ab5c_IntegratedToStrExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1cad31381:;
			{
				_1c766b4c7_free(_self_, (*(_21528_model)).cast_ptr<_1b9b4b333_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1cad31408:;
			{
				_1c766b780_backendEmit(_self_, (*(_21528_model)).cast_ptr<_1b9b4b036_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_1cad30193:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c76654c1_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9d8b40d_SwapExprModel _Src) {
	_Stream << "SwapExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9d8b7d7_EmptyCompareExprModel _Src) {
	_Stream << "EmptyCompareExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Neg:" << _Src._field_Neg;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9d8bad4_RefExprModel _Src) {
	_Stream << "RefExprModel{";
	_Stream << "Var:" << _Src._field_Var;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9d8c112_StrCompExprModel _Src) {
	_Stream << "StrCompExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "NotEq:" << _Src._field_NotEq;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9d8c695_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9d8c992_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9d8cc8e_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9d8d1bd_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9d8d597_AppendToSliceExprModel _Src) {
	_Stream << "AppendToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Slice:" << _Src._field_Slice;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9d8d894_InlineStdInternalNosafeStobs _Src) {
	_Stream << "InlineStdInternalNosafeStobs{";
	_Stream << "Str:" << _Src._field_Str;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b9d8ea3d_scopeOptimizer> static__1b9d9007c_new(jule::Ptr<_1b9b8ecc2_Scope> _4623_scope) {
	return jule::new_ptr<_1b9d8ea3d_scopeOptimizer>(_1b9d8ea3d_scopeOptimizer{._field_scope=_4623_scope});;
}



inline void _1b9d90335_setCurrentStmt(_1b9d8ea3d_scopeOptimizer* _self_, jule::Any _5237_stmt) {
	(*((*(_self_))._field_scope))._field_Stmts[(*(_self_))._field_i]=(*(((jule::Any*)((&(_5237_stmt))))));
}



inline void _1b9d90533_removeCurrent(_1b9d8ea3d_scopeOptimizer* _self_) {
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*((*(_self_))._field_scope))._field_Stmts.slice(0LL, (*(_self_))._field_i),(*((*(_self_))._field_scope))._field_Stmts.slice(((*(_self_))._field_i + 1LL)));
}



inline void _1b9d907db_optimizeData(_1b9d8ea3d_scopeOptimizer* _self_, jule::Ptr<_1b9c5d016_Data> _6135_d) {
	{
		auto &_match_expr{ (*(_6135_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1cad8940b:;
			{
				jule::Ptr<_1b9b43506_FnCallExprModel> _6417_m = (*(_6135_d))._field_Model.cast_ptr<_1b9b43506_FnCallExprModel>(&__jule_any_type34);;
				if (_22e08143a_Production) {
					if (((!(_1b9b53604_IsBuiltin((*(_6417_m))._field_Func.ptr()))) && _1b9d93d94_isStdPackage(&((*((*((*((*((*(_6417_m))._field_Func))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("debug", 5)))) {
						_1b9d90335_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1cad893a6:;
	};
	static__1b9d96270_optimize(&((*(_6135_d))._field_Model));
}



inline void _1b9d90a94_optimizeVar(_1b9d8ea3d_scopeOptimizer* _self_, jule::Ptr<_1b9c09611_Var> _7634_v) {
	if (((*(_7634_v))._field_Value != nullptr)) {
		static__1b9d96270_optimize(&((*((*((*(_7634_v))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1b9d90d4c_optimizeConditional(_1b9d8ea3d_scopeOptimizer* _self_, jule::Ptr<_1b9b9090a_Conditional> _8242_c) {
	{
		auto expr = &((*(_8242_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cad8db80:;
		if (it != expr_end) {
			jule::Ptr<_1b9b901e0_If> _8321_elif = *it;
			{
				static__1b9d96270_optimize(&((*(_8321_elif))._field_Expr));
				_1b9d93723_optimizeChild(_self_, (*(_8321_elif))._field_Scope);
			}
			_iter_next_1cad8db80:;
			++it;
			goto _iter_begin_1cad8db80;
		}
		_iter_end_1cad8db80:;
	};
	if (((*(_8242_c))._field_Default != nullptr)) {
		_1b9d93723_optimizeChild(_self_, (*((*(_8242_c))._field_Default))._field_Scope);
	};
	if ((!(_1ba83c0ab_Cond))) {
		return;;
	};
	jule::Bool _9513_constCase = false;;
	{
		auto expr = &((*(_8242_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cad90bc6:;
		if (it != expr_end) {
			jule::I32 _9814_i = it - expr->begin();
			jule::Ptr<_1b9b901e0_If> _9821_elif = *it;
			{
				if ((!(_1b9d941a2_isConstantValidConditionalCase(&(_9821_elif))))) {
					goto _iter_next_1cad90bc6;
				};
				_9513_constCase=true;
				(*(_8242_c))._field_Elifs=(*(_8242_c))._field_Elifs.slice(0LL, _9814_i);
				(*(_8242_c))._field_Default=jule::new_ptr<_1b9b904dc_Else>(_1b9b904dc_Else{._field_Scope=(*(_9821_elif))._field_Scope});
				goto _iter_end_1cad90bc6;
			}
			_iter_next_1cad90bc6:;
			++it;
			_9814_i++;
			goto _iter_begin_1cad90bc6;
		}
		_iter_end_1cad90bc6:;
	};
	if (((*(_8242_c))._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1b9b901e0_If>* _11513_i = (&((*(_8242_c))._field_Elifs[0LL]));;
	jule::Ptr<_1b9b901e0_If>* _1169_end = (&((*(_8242_c))._field_Elifs[((*(_8242_c))._field_Elifs.len() - 1LL)]));;
	for (; (_11513_i <= _1169_end); (_11513_i)++) {
		{
			{
				if (_1b9d94a76_isUnreachableConditionalCase(&((*(_11513_i))))) {
					(*(_11513_i))=nullptr;
				};
			};
		}
	_iter_next_1cad94328:;
	}
	_iter_end_1cad94328:;;
	if (((*(_8242_c))._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_9513_constCase))) {
		return;;
	};
	jule::I32 _13413_only = -1LL;;
	{
		auto expr = &((*(_8242_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cad95736:;
		if (it != expr_end) {
			jule::I32 _13513_j = it - expr->begin();
			jule::Ptr<_1b9b901e0_If> _13516_elif = *it;
			{
				if ((_13516_elif != nullptr)) {
					if ((_13413_only != -1LL)) {
						return;;
					};
					_13413_only=_13513_j;
				};
			}
			_iter_next_1cad95736:;
			++it;
			_13513_j++;
			goto _iter_begin_1cad95736;
		}
		_iter_end_1cad95736:;
	};
	if ((_13413_only != -1LL)) {
		_1b9d90335_setCurrentStmt(_self_, jule::Any((*((*(_8242_c))._field_Elifs[_13413_only]))._field_Scope, &__jule_any_type22));
	};
}



inline void _1b9d9126a_buildDefaultConstantTrueCase(_1b9d8ea3d_scopeOptimizer* _self_, jule::Ptr<_1b9b94a41_Case> _15151_case, jule::I32* _15169_i, jule::Ptr<_1b9b93e08_Match>* _15182_m) {
	(*(_15151_case))._field_Exprs=nullptr;
	jule::I32 _1539_start = (*(_15169_i));;
	_julec_label_1cad981b7:;
	for (;;) {
		{
			if (((*((*(_15151_case))._field_Scope))._field_Stmts.len() == 0LL)) {
				goto _iter_end_1cad97c00;
			};
			jule::Any *_15918_stmt = &((*((*(_15151_case))._field_Scope))._field_Stmts[((*((*(_15151_case))._field_Scope))._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_15918_stmt)) };
				
				if (_match_expr.type == &__jule_any_type48) {
					_case_begin_1cad9ee5a:;
					{
						((*(_15169_i)))++;
						if (((*(_15169_i)) >= (*((*(_15182_m))))._field_Cases.len())) {
							(*(_15918_stmt))=jule::Any((*((*((*(_15182_m))))._field_Default))._field_Scope, &__jule_any_type22);
							goto _iter_end_1cad97c00;
						};
						_15151_case=(*((*(_15182_m))))._field_Cases[(*(_15169_i))];
						(*(_15918_stmt))=jule::Any((*(_15151_case))._field_Scope, &__jule_any_type22);
					}
				}
				else {
					_case_begin_1cada00ae:;
					{
						goto _iter_end_1cad97c00;
					}
				}
				_match_end_1cada0059:;
			};
		}
	_iter_next_1cad97c00:;
	}
	_iter_end_1cad97c00:;;
	(*((*(_15182_m))))._field_Default=(*((*(_15182_m))))._field_Cases[_1539_start];
	(*((*(_15182_m))))._field_Cases=(*((*(_15182_m))))._field_Cases.slice(0LL, _1539_start);
}



inline void _1b9d91523_optimizeMatch(_1b9d8ea3d_scopeOptimizer* _self_, jule::Ptr<_1b9b93e08_Match> _17736_m) {
	{
		auto expr = &((*(_17736_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cada2952:;
		if (it != expr_end) {
			jule::Ptr<_1b9b94a41_Case> _17821_case = *it;
			{
				{
					auto expr = &((*(_17821_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cada339d:;
					if (it != expr_end) {
						jule::Ptr<_1b9c5d016_Data> _17925_expr = *it;
						{
							static__1b9d96270_optimize(&((*(_17925_expr))._field_Model));
						}
						_iter_next_1cada339d:;
						++it;
						goto _iter_begin_1cada339d;
					}
					_iter_end_1cada339d:;
				};
				_1b9d93723_optimizeChild(_self_, (*(_17821_case))._field_Scope);
			}
			_iter_next_1cada2952:;
			++it;
			goto _iter_begin_1cada2952;
		}
		_iter_end_1cada2952:;
	};
	if (((*(_17736_m))._field_Default != nullptr)) {
		_1b9d93723_optimizeChild(_self_, (*((*(_17736_m))._field_Default))._field_Scope);
	};
	if ((!(_1ba83c0ab_Cond))) {
		return;;
	};
	jule::Bool _19213_constCase = false;;
	{
		auto expr = &((*(_17736_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cada50d6:;
		if (it != expr_end) {
			jule::I32 _19518_i = it - expr->begin();
			jule::Ptr<_1b9b94a41_Case> _19525_case = *it;
			{
				if ((!(_1b9d947ac_isConstantValidMatchCase(&(_19525_case))))) {
					goto _iter_next_1cada50d6;
				};
				_19213_constCase=true;
				_1b9d9126a_buildDefaultConstantTrueCase(_self_, _19525_case, &(_19518_i), &(_17736_m));
				goto _iter_end_1cada50d6;
			}
			_iter_next_1cada50d6:;
			++it;
			_19518_i++;
			goto _iter_begin_1cada50d6;
		}
		_iter_end_1cada50d6:;
	};
	if (((*(_17736_m))._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1b9b94a41_Case>* _20913_i = (&((*(_17736_m))._field_Cases[0LL]));;
	jule::Ptr<_1b9b94a41_Case>* _2109_end = (&((*(_17736_m))._field_Cases[((*(_17736_m))._field_Cases.len() - 1LL)]));;
	for (; (_20913_i <= _2109_end); (_20913_i)++) {
		{
			{
				if (_1b9d94d40_isUnreachableMatchCase(&((*(_20913_i))))) {
					(*(_20913_i))=nullptr;
				};
			};
		}
	_iter_next_1cada7bdd:;
	}
	_iter_end_1cada7bdd:;;
	if ((!(_19213_constCase))) {
		return;;
	};
	jule::I32 _22413_only = -1LL;;
	{
		auto expr = &((*(_17736_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cada7ea7:;
		if (it != expr_end) {
			jule::I32 _22513_j = it - expr->begin();
			jule::Ptr<_1b9b94a41_Case> _22516_case = *it;
			{
				if ((_22516_case != nullptr)) {
					if ((_22413_only != -1LL)) {
						return;;
					};
					_22413_only=_22513_j;
				};
			}
			_iter_next_1cada7ea7:;
			++it;
			_22513_j++;
			goto _iter_begin_1cada7ea7;
		}
		_iter_end_1cada7ea7:;
	};
	if ((_22413_only != -1LL)) {
		_1b9d90335_setCurrentStmt(_self_, jule::Any((*((*(_17736_m))._field_Cases[_22413_only]))._field_Scope, &__jule_any_type22));
	};
}



inline void _1b9d917cb_optimizeRangeIter(_1b9d8ea3d_scopeOptimizer* _self_, jule::Ptr<_1b9b91b09_RangeIter> _24140_it) {
	static__1b9d96270_optimize(&((*((*(_24140_it))._field_Expr))._field_Model));
	_1b9d93723_optimizeChild(_self_, (*(_24140_it))._field_Scope);
}



inline void _1b9d91a84_optimizeWhileIter(_1b9d8ea3d_scopeOptimizer* _self_, jule::Ptr<_1b9b911ad_WhileIter> _24640_it) {
	static__1b9d96270_optimize(&((*(_24640_it))._field_Expr));
	_1b9d9346a_optimizeStmt(_self_, (*(_24640_it))._field_Next);
	_1b9d93723_optimizeChild(_self_, (*(_24640_it))._field_Scope);
}



inline jule::Bool _1b9d91dc5_substr(_1b9d8ea3d_scopeOptimizer* _self_, jule::Ptr<_1b9b933be_Assign> _25229_a) {
	if (((*((*(_25229_a))._field_Op))._field_Id != static_cast<jule::U32>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_25229_a))._field_R))._field_Model };
		
		if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1cadadac3:;
			{
				jule::Ptr<_1b9b45173_SlicingExprModel> _25817_sem = (*((*(_25229_a))._field_R))._field_Model.cast_ptr<_1b9b45173_SlicingExprModel>(&__jule_any_type91);;
				if (((*(_25817_sem))._field_Expr == (*((*(_25229_a))._field_L))._field_Model)) {
					_1b9d90335_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1b9d8c695_MutSlicingExprModel>(_1b9d8c695_MutSlicingExprModel{._field_Token=(*(_25817_sem))._field_Token, ._field_Expr=(*(_25817_sem))._field_Expr, ._field_Left=(*(_25817_sem))._field_Left, ._field_Right=(*(_25817_sem))._field_Right}), &__jule_any_type120));
					return true;;
				};
			}
		}
		_match_end_1cadada6d:;
	};
	return false;;
}



inline jule::Bool _1b9d92216_strAssign(_1b9d8ea3d_scopeOptimizer* _self_, jule::Ptr<_1b9b933be_Assign> _27232_a) {
	if ((!(_1ba83c375_Str))) {
		return false;;
	};
	jule::Ptr<_1b9c95ca7_Prim> _2769_lp = _1b9c9082e_Prim((*((*(_27232_a))._field_L))._field_Kind.ptr());;
	if (((_2769_lp == nullptr) || (!(_1b9c9923e_IsStr(_2769_lp.ptr()))))) {
		return false;;
	};
	return _1b9d91dc5_substr(_self_, _27232_a);;
}



inline jule::Bool _1b9d92557_sliceAssign(_1b9d8ea3d_scopeOptimizer* _self_, jule::Ptr<_1b9b933be_Assign> _28334_a) {
	if (((!(_1ba83c63e_Slice)) || (_1b9c91885_Slc((*((*(_28334_a))._field_L))._field_Kind.ptr()) == nullptr))) {
		return false;;
	};
	return _1b9d91dc5_substr(_self_, _28334_a);;
}



inline void _1b9d92810_optimizeAssign(_1b9d8ea3d_scopeOptimizer* _self_, jule::Ptr<_1b9b933be_Assign> _29137_assign) {
	if ((((*((*(_29137_assign))._field_Op))._field_Id == static_cast<jule::U32>(71LLU)) && _1b9d8a75e_equalModels((*((*(_29137_assign))._field_L))._field_Model, (*((*(_29137_assign))._field_R))._field_Model))) {
		_1b9d90533_removeCurrent(_self_);
		((*(_self_))._field_i)--;
		return;;
	};
	{
		
		if (_1b9d92216_strAssign(_self_, _29137_assign) || _1b9d92557_sliceAssign(_self_, _29137_assign)) {
			_case_begin_1cadb5b74:;
			{
				return;;
			}
		}
		_match_end_1cadb47cc:;
	};
	static__1b9d96270_optimize(&((*((*(_29137_assign))._field_L))._field_Model));
	static__1b9d96270_optimize(&((*((*(_29137_assign))._field_R))._field_Model));
	{
		auto &_match_expr{ (*((*(_29137_assign))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(43LLU) || _match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1cadb74e4:;
			{
				if ((_1ba83b385_Math && (_1b9c91da2_Struct((*((*(_29137_assign))._field_L))._field_Kind.ptr()) == nullptr))) {
					(*((*(_29137_assign))._field_Op))._field_Kind=(*((*(_29137_assign))._field_Op))._field_Kind.slice(0LL, ((*((*(_29137_assign))._field_Op))._field_Kind.len() - 1LL));
					jule::Any _31321_model = jule::Any(jule::new_ptr<_1b9b41526_BinopExprModel>(_1b9b41526_BinopExprModel{._field_Left=(*(_29137_assign))._field_L, ._field_Right=(*(_29137_assign))._field_R, ._field_Op=(*(_29137_assign))._field_Op}), &__jule_any_type111);;
					static__1b9d96270_optimize(&(_31321_model));
					{
						auto &_match_expr{ _31321_model };
						
						if (_match_expr.type == &__jule_any_type111) {
							_case_begin_1cadba45e:;
							{
								(*(_29137_assign))._field_R=jule::new_ptr<_1b9b4102b_OperandExprModel>((*((*(_29137_assign))._field_R)));
								(*((*(_29137_assign))._field_Op))._field_Id=static_cast<jule::U32>(71LLU);
								(*((*(_29137_assign))._field_Op))._field_Kind=jule::Str::lit("=", 1);
								(*((*(_29137_assign))._field_R))._field_Model=_31321_model;
								return;;
							}
						}
						_match_end_1cadba272:;
					};
					(*((*(_29137_assign))._field_Op))._field_Kind+=jule::Str::lit("=", 1);
					return;;
				};
			}
		}
		_match_end_1cadb748e:;
	};
	if (_1ba83b077_Append) {
		{
			auto &_match_expr{ (*((*(_29137_assign))._field_R))._field_Model };
			
			if (_match_expr.type == &__jule_any_type26) {
				_case_begin_1cadbd20e:;
				{
					jule::Ptr<_1b9b48ab1_BuiltinAppendCallExprModel> _33521_m = (*((*(_29137_assign))._field_R))._field_Model.cast_ptr<_1b9b48ab1_BuiltinAppendCallExprModel>(&__jule_any_type26);;
					if ((!(_1b9d9d365_areSameLvalueExprModel(&((*((*(_29137_assign))._field_L))._field_Model), &((*(_33521_m))._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ (*(_33521_m))._field_Elements };
						
						if (_match_expr.type == &__jule_any_type76) {
							_case_begin_1cadc0321:;
							{
								_1b9d90335_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1b9d8d1bd_PushToSliceExprModel>(_1b9d8d1bd_PushToSliceExprModel{._field_Dest=(*(_33521_m))._field_Dest, ._field_Elems=(*(_33521_m))._field_Elements.cast_ptr<_1b9b438d0_SliceExprModel>(&__jule_any_type76)}), &__jule_any_type121));
							}
						}
						else {
							_case_begin_1cadbee58:;
							{
								_1b9d90335_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1b9d8d597_AppendToSliceExprModel>(_1b9d8d597_AppendToSliceExprModel{._field_Dest=(*((*(_29137_assign))._field_L))._field_Model, ._field_Slice=(*(_33521_m))._field_Elements}), &__jule_any_type122));
							}
						}
						_match_end_1cadbee03:;
					};
				}
			}
			_match_end_1cadbd1a9:;
		};
	};
}



inline jule::Bool _1b9d92b51_tryOptimizeSwap(_1b9d8ea3d_scopeOptimizer* _self_, jule::Ptr<_1b9b93798_MultiAssign>* _35739_assign) {
	if (((!(_1ba83c908_Assign)) || ((*((*(_35739_assign))))._field_L.len() != 2LL))) {
		return false;;
	};
	jule::Ptr<_1b9b46c24_TupleExprModel> _36117_tup;;
	{
		auto &_match_expr{ (*((*(_35739_assign))))._field_R };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1cadc2a93:;
			{
				_36117_tup=(*((*(_35739_assign))))._field_R.cast_ptr<_1b9b46c24_TupleExprModel>(&__jule_any_type81);
			}
		}
		_match_end_1cadc2a3d:;
	};
	if (((_36117_tup == nullptr) || ((*(_36117_tup))._field_Datas.len() != 2LL))) {
		return false;;
	};
	if ((_1b9d8a75e_equalModels((*((*((*(_35739_assign))))._field_L[0LL]))._field_Model, (*((*(_36117_tup))._field_Datas[0LL]))._field_Model) && _1b9d8a75e_equalModels((*((*((*(_35739_assign))))._field_L[1LL]))._field_Model, (*((*(_36117_tup))._field_Datas[1LL]))._field_Model))) {
		_1b9d90533_removeCurrent(_self_);
		((*(_self_))._field_i)--;
		return true;;
	};
	if (((!(_1b9d8a75e_equalModels((*((*((*(_35739_assign))))._field_L[0LL]))._field_Model, (*((*(_36117_tup))._field_Datas[1LL]))._field_Model))) || (!(_1b9d8a75e_equalModels((*((*((*(_35739_assign))))._field_L[1LL]))._field_Model, (*((*(_36117_tup))._field_Datas[0LL]))._field_Model))))) {
		return false;;
	};
	jule::Ptr<_1b9d8b40d_SwapExprModel> _38313_model = jule::new_ptr<_1b9d8b40d_SwapExprModel>(_1b9d8b40d_SwapExprModel{._field_Left=(*((*(_35739_assign))))._field_L[0LL], ._field_Right=(*((*(_35739_assign))))._field_L[1LL]});;
	static__1b9d96270_optimize(&((*((*(_38313_model))._field_Left))._field_Model));
	static__1b9d96270_optimize(&((*((*(_38313_model))._field_Right))._field_Model));
	_1b9d90335_setCurrentStmt(_self_, jule::Any(_38313_model, &__jule_any_type123));
	return true;;
}



inline void _1b9d92e09_optimizeMultiAssign(_1b9d8ea3d_scopeOptimizer* _self_, jule::Ptr<_1b9b93798_MultiAssign> _39342_assign) {
	if (_1b9d92b51_tryOptimizeSwap(_self_, &(_39342_assign))) {
		return;;
	};
	{
		auto expr = &((*(_39342_assign))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cadc9ddb:;
		if (it != expr_end) {
			jule::Ptr<_1b9c5d016_Data> _39821_l = *it;
			{
				if ((_39821_l != nullptr)) {
					static__1b9d96270_optimize(&((*(_39821_l))._field_Model));
				};
			}
			_iter_next_1cadc9ddb:;
			++it;
			goto _iter_begin_1cadc9ddb;
		}
		_iter_end_1cadc9ddb:;
	};
	static__1b9d96270_optimize(&((*(_39342_assign))._field_R));
}



inline void _1b9d931b2_optimizeRet(_1b9d8ea3d_scopeOptimizer* _self_, jule::Ptr<_1b9b954c0_RetSt> _40634_r) {
	static__1b9d96270_optimize(&((*(_40634_r))._field_Expr));
}



inline void _1b9d9346a_optimizeStmt(_1b9d8ea3d_scopeOptimizer* _self_, jule::Any _41035_stmt) {
	{
		auto &_match_expr{ _41035_stmt };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1cadcc020:;
			{
				_1b9d93723_optimizeChild(_self_, _41035_stmt.cast_ptr<_1b9b8ecc2_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1cadcc086:;
			{
				_1b9d907db_optimizeData(_self_, _41035_stmt.cast_ptr<_1b9c5d016_Data>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1cadcc0ec:;
			{
				_1b9d90a94_optimizeVar(_self_, _41035_stmt.cast_ptr<_1b9c09611_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1cadcc174:;
			{
				_1b9d90d4c_optimizeConditional(_self_, _41035_stmt.cast_ptr<_1b9b9090a_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1cadcc1eb:;
			{
				_1b9d917cb_optimizeRangeIter(_self_, _41035_stmt.cast_ptr<_1b9b91b09_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1cadcc273:;
			{
				_1b9d91a84_optimizeWhileIter(_self_, _41035_stmt.cast_ptr<_1b9b911ad_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1cadcc2ea:;
			{
				_1b9d93723_optimizeChild(_self_, (*(_41035_stmt.cast_ptr<_1b9b90c07_InfIter>(&__jule_any_type36)))._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1cadcc372:;
			{
				_1b9d92810_optimizeAssign(_self_, _41035_stmt.cast_ptr<_1b9b933be_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1cadcc3e9:;
			{
				_1b9d92e09_optimizeMultiAssign(_self_, _41035_stmt.cast_ptr<_1b9b93798_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1cadcc471:;
			{
				_1b9d91523_optimizeMatch(_self_, _41035_stmt.cast_ptr<_1b9b93e08_Match>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1cadcc4e8:;
			{
				_1b9d931b2_optimizeRet(_self_, _41035_stmt.cast_ptr<_1b9b954c0_RetSt>(&__jule_any_type50));
			}
		}
		_match_end_1cadcbddd:;
	};
}



inline void _1b9d93723_optimizeChild(_1b9d8ea3d_scopeOptimizer* _self_, jule::Ptr<_1b9b8ecc2_Scope> _43736_child) {
	jule::Ptr<_1b9d8ea3d_scopeOptimizer> _43813_so = static__1b9d9007c_new(_43736_child);;
	_1b9d93921_optimize(_43813_so.ptr());
}



inline void _1b9d93921_optimize(_1b9d8ea3d_scopeOptimizer* _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*(_self_))._field_i < (*((*(_self_))._field_scope))._field_Stmts.len()); ((*(_self_))._field_i)++) {
		{
			_1b9d9346a_optimizeStmt(_self_, (*((*(_self_))._field_scope))._field_Stmts[(*(_self_))._field_i]);
		}
	_iter_next_1cadd2b91:;
	}
	_iter_end_1cadd2b91:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9d8ea3d_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1b9d96270_optimize(jule::Any* _5629_model) {
	if (_1c766c0aa_exprEnabled) {
		jule::Ptr<_1b9d95c20_exprOptimizer> _5917_exop = jule::new_ptr<_1b9d95c20_exprOptimizer>(_1b9d95c20_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)(_5629_model))});;
		_1b9d9ca29_do(_5917_exop.ptr());
	};
}



inline jule::Bool _1b9d965b1_strCond(_1b9d95c20_exprOptimizer* _self_, jule::Ptr<_1b9b41526_BinopExprModel> _6626_m) {
	jule::Ptr<_1b9c95ca7_Prim> _679_lp = _1b9c9082e_Prim((*((*(_6626_m))._field_Left))._field_Kind.ptr());;
	if (((_679_lp == nullptr) || (!(_1b9c9923e_IsStr(_679_lp.ptr()))))) {
		return false;;
	};
	if ((((*((*(_6626_m))._field_Op))._field_Id != static_cast<jule::U32>(50LLU)) && ((*((*(_6626_m))._field_Op))._field_Id != static_cast<jule::U32>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_6626_m))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1cade2c06:;
			{
				std::swap((*(_6626_m))._field_Left, (*(_6626_m))._field_Right);
				goto _julec_label_1cade4620;
			}
		}
		_match_end_1cade2ba1:;
	};
	{
		auto &_match_expr{ (*((*(_6626_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1cade183c:;
			{
				goto _match_end_1cade43bc;
			}
		}
		else {
			_case_begin_1cade4422:;
			{
				return false;;
			}
		}
		_match_end_1cade43bc:;
	};
	_julec_label_1cade4620:;
	jule::Ptr<_1ec682ce3_Const> _8613_c = (*((*(_6626_m))._field_Right))._field_Model.cast_ptr<_1ec682ce3_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ (*((*(_6626_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1cade57ca:;
			{
				if ((_1ec684e6b_ReadStr(_8613_c.ptr())).empty()) {
					jule::Any _9021_model = jule::Any(jule::new_ptr<_1b9d8b7d7_EmptyCompareExprModel>(_1b9d8b7d7_EmptyCompareExprModel{._field_Expr=(*((*(_6626_m))._field_Left))._field_Model, ._field_Neg=false}), &__jule_any_type124);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_9021_model))))));
					goto _match_end_1cade5764;
				};
				jule::Any _9717_model = jule::Any(jule::new_ptr<_1b9d8c112_StrCompExprModel>(_1b9d8c112_StrCompExprModel{._field_Left=(*((*(_6626_m))._field_Left))._field_Model, ._field_Right=_8613_c, ._field_NotEq=false}), &__jule_any_type125);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_9717_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1cade5852:;
			{
				if ((_1ec684e6b_ReadStr(_8613_c.ptr())).empty()) {
					jule::Any _10521_model = jule::Any(jule::new_ptr<_1b9d8b7d7_EmptyCompareExprModel>(_1b9d8b7d7_EmptyCompareExprModel{._field_Expr=(*((*(_6626_m))._field_Left))._field_Model, ._field_Neg=true}), &__jule_any_type124);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_10521_model))))));
					goto _match_end_1cade5764;
				};
				jule::Any _11217_model = jule::Any(jule::new_ptr<_1b9d8c112_StrCompExprModel>(_1b9d8c112_StrCompExprModel{._field_Left=(*((*(_6626_m))._field_Left))._field_Model, ._field_Right=_8613_c, ._field_NotEq=true}), &__jule_any_type125);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_11217_model))))));
			}
		}
		_match_end_1cade5764:;
	};
	return true;;
}



inline void _1b9d96869_binary(_1b9d95c20_exprOptimizer* _self_, jule::Ptr<_1b9b41526_BinopExprModel> _12225_m) {
	static__1b9d96270_optimize(&((*((*(_12225_m))._field_Left))._field_Model));
	static__1b9d96270_optimize(&((*((*(_12225_m))._field_Right))._field_Model));
	{
		auto &_match_expr{ (*((*(_12225_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1cade44ee:;
			{
				goto _match_end_1cadecc33;
			}
		}
		else {
			_case_begin_1cadecc88:;
			{
				return;;
			}
		}
		_match_end_1cadecc33:;
	};
	if ((_1ba83c0ab_Cond && _1b9d965b1_strCond(_self_, _12225_m))) {
		return;;
	};
	if ((!(_1ba83b385_Math))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_12225_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1cadede87:;
			{
				jule::Bool _14213_ok = false;;
				jule::U64 _14217_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1b9d9ce9c_checkForBitShiftOpt(&((*(_12225_m))._field_Left), &((*(_12225_m))._field_Right));
					_14213_ok = __jule_assign_result.__jule_result_arg0;
					_14217_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_14213_ok) {
					(*((*(_12225_m))._field_Op))._field_Id=static_cast<jule::U32>(56LLU);
					(*((*(_12225_m))._field_Op))._field_Kind=jule::Str::lit("<<", 2);
					jule::Ptr<_1ec682ce3_Const> _14621_c = (*((*(_12225_m))._field_Right))._field_Model.cast_ptr<_1ec682ce3_Const>(&__jule_any_type19);;
					_1ec686016_SetU64(_14621_c.ptr(), _14217_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1cadee00e:;
			{
				jule::Bool _15113_ok = false;;
				jule::U64 _15117_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1b9d9ce9c_checkForBitShiftOpt(&((*(_12225_m))._field_Left), &((*(_12225_m))._field_Right));
					_15113_ok = __jule_assign_result.__jule_result_arg0;
					_15117_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_15113_ok) {
					(*((*(_12225_m))._field_Op))._field_Id=static_cast<jule::U32>(57LLU);
					(*((*(_12225_m))._field_Op))._field_Kind=jule::Str::lit(">>", 2);
					jule::Ptr<_1ec682ce3_Const> _15521_c = (*((*(_12225_m))._field_Right))._field_Model.cast_ptr<_1ec682ce3_Const>(&__jule_any_type19);;
					_1ec686016_SetU64(_15521_c.ptr(), _15117_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1cadee086:;
			{
				jule::Ptr<_1ec682ce3_Const> _16017_c = (*((*(_12225_m))._field_Right))._field_Model.cast_ptr<_1ec682ce3_Const>(&__jule_any_type19);;
				jule::F64 _16113_d = _1ec6859a5_AsF64(_16017_c.ptr());;
				if ((_16113_d == 2LL)) {
					(*((*(_12225_m))._field_Op))._field_Id=static_cast<jule::U32>(65LLU);
					(*((*(_12225_m))._field_Op))._field_Kind=jule::Str::lit("&", 1);
					_1ec685c5d_SetI64(_16017_c.ptr(), 1LL);
				};
			}
		}
		_match_end_1cadede10:;
	};
	jule::Any _16813_model = jule::Any(jule::new_ptr<_1b9d8c992_UnsafeBinopExprModel>(_1b9d8c992_UnsafeBinopExprModel{._field_Node=_12225_m}), &__jule_any_type126);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_16813_model))))));
}



inline void _1b9d96b22_unary(_1b9d95c20_exprOptimizer* _self_, jule::Ptr<_1b9b41900_UnaryExprModel> _17224_m) {
	static__1b9d96270_optimize(&((*((*(_17224_m))._field_Expr))._field_Model));
	if ((!(_1ba83bbd2_Ptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_17224_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1cae073ad:;
			{
				{
					auto &_match_expr{ (*((*(_17224_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_1cae08ea3:;
						{
							jule::Ptr<_1b9b41900_UnaryExprModel> _18121_um = (*((*(_17224_m))._field_Expr))._field_Model.cast_ptr<_1b9b41900_UnaryExprModel>(&__jule_any_type110);;
							if (((*((*(_18121_um))._field_Op))._field_Id == static_cast<jule::U32>(65LLU))) {
								(*((*(_self_))._field_model))=(*((*(_18121_um))._field_Expr))._field_Model;
							};
						}
					}
					_match_end_1cae08e4d:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1cae08348:;
			{
				{
					auto &_match_expr{ (*((*(_17224_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1cae0b0c6:;
						{
							jule::Ptr<_1b9c09611_Var> _18921_v = (*((*(_17224_m))._field_Expr))._field_Model.cast_ptr<_1b9c09611_Var>(&__jule_any_type8);;
							if ((*(_18921_v))._field_Reference) {
								jule::Any _19125_model = jule::Any(jule::new_ptr<_1b9d8bad4_RefExprModel>(_1b9d8bad4_RefExprModel{._field_Var=_18921_v}), &__jule_any_type127);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_19125_model))))));
							};
						}
					}
					_match_end_1cae0b071:;
				};
			}
		}
		_match_end_1cae08238:;
	};
}



inline void _1b9d96dca_structureLit(_1b9d95c20_exprOptimizer* _self_, jule::Ptr<_1b9b422c4_StructLitExprModel> _19831_m) {
	{
		auto expr = &((*(_19831_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cae0c9bd:;
		if (it != expr_end) {
			jule::Ptr<_1b9b41e2d_StructArgExprModel> _19921_arg = *it;
			{
				static__1b9d96270_optimize(&((*((*(_19921_arg))._field_Expr))._field_Model));
			}
			_iter_next_1cae0c9bd:;
			++it;
			goto _iter_begin_1cae0c9bd;
		}
		_iter_end_1cae0c9bd:;
	};
}



inline void _1b9d97183_allocStructure(_1b9d95c20_exprOptimizer* _self_, jule::Ptr<_1b9b425c1_AllocStructLitExprModel> _20433_m) {
	_1b9d96dca_structureLit(_self_, (*(_20433_m))._field_Lit);
}



inline void _1b9d9743b_casting(_1b9d95c20_exprOptimizer* _self_, jule::Ptr<_1b9b42b54_CastingExprModel> _20826_m) {
	static__1b9d96270_optimize(&((*(_20826_m))._field_Expr));
}



inline void _1b9d976e4_args(_1b9d95c20_exprOptimizer* _self_, jule::Slice<jule::Any>* _21224_args) {
	{
		auto expr = _21224_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cae0ea69:;
		if (it != expr_end) {
			jule::I32 _21314_i = it - expr->begin();
			jule::Any _21321_arg = *it;
			{
				static__1b9d96270_optimize(&(_21321_arg));
				(*(_21224_args))[_21314_i]=_21321_arg;
			}
			_iter_next_1cae0ea69:;
			++it;
			_21314_i++;
			goto _iter_begin_1cae0ea69;
		}
		_iter_end_1cae0ea69:;
	};
}



inline void _1b9d9799c_scope(_1b9d95c20_exprOptimizer* _self_, jule::Ptr<_1b9b8ecc2_Scope>* _21925_s) {
	jule::Ptr<_1b9d8ea3d_scopeOptimizer> _22013_scopt = static__1b9d9007c_new((*(_21925_s)));;
	_1b9d93921_optimize(_22013_scopt.ptr());
}



inline jule::Bool _1b9d97cdd_optimizeSpecialFuncCalls(_1b9d95c20_exprOptimizer* _self_, jule::Ptr<_1b9b43506_FnCallExprModel>* _22444_m) {
	_1ba838c9a_stdCacheData _2259_data;;
	jule::Bool _22515_ok = false;;
	_1ba8391c9_stdCache.lookup(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*((*(_22444_m))))._field_Func)), &(_2259_data), &(_22515_ok));
	if ((!(_22515_ok))) {
		return false;;
	};
	_2259_data._field_do(_self_, &(_2259_data), _22444_m);
	return true;;
}



inline void _1b9d98096_funcCall(_1b9d95c20_exprOptimizer* _self_, jule::Ptr<_1b9b43506_FnCallExprModel> _23327_m) {
	if ((_1c766c5e9_stdEnabled && _1b9d97cdd_optimizeSpecialFuncCalls(_self_, &(_23327_m)))) {
		return;;
	};
	static__1b9d96270_optimize(&((*(_23327_m))._field_Expr));
	_1b9d976e4_args(_self_, &((*(_23327_m))._field_Args));
	if (((*(_23327_m))._field_Except != nullptr)) {
		_1b9d9799c_scope(_self_, &((*(_23327_m))._field_Except));
	};
}



inline void _1b9d9834e_slice(_1b9d95c20_exprOptimizer* _self_, jule::Ptr<_1b9b438d0_SliceExprModel> _24424_m) {
	_1b9d976e4_args(_self_, &((*(_24424_m))._field_Elems));
}



inline void _1b9d98607_array(_1b9d95c20_exprOptimizer* _self_, jule::Ptr<_1b9b46927_ArrayExprModel> _24824_m) {
	if ((((*(_24824_m))._field_Elems.len() == 2LL) && ((*(_24824_m))._field_Elems[1LL] == nullptr))) {
		jule::Any _25017_elem = (*(_24824_m))._field_Elems[0LL];;
		static__1b9d96270_optimize(&(_25017_elem));
		(*(_24824_m))._field_Elems[0LL]=_25017_elem;
	};
	_1b9d976e4_args(_self_, &((*(_24824_m))._field_Elems));
}



inline void _1b9d988b0_indexing(_1b9d95c20_exprOptimizer* _self_, jule::Ptr<_1b9b43d86_IndexingExprModel> _25727_m) {
	static__1b9d96270_optimize(&((*((*(_25727_m))._field_Expr))._field_Model));
	static__1b9d96270_optimize(&((*((*(_25727_m))._field_Index))._field_Model));
	if ((!(_1ba83b64e_Access))) {
		return;;
	};
	jule::Bool _2639_array = (_1b9c915ee_Arr((*((*(_25727_m))._field_Expr))._field_Kind.ptr()) != nullptr);;
	if ((_2639_array && _1b9c5d8da_IsConst((*(_25727_m))._field_Index.ptr()))) {
		jule::Any _26617_model = jule::Any(jule::new_ptr<_1b9d8cc8e_UnsafeIndexingExprModel>(_1b9d8cc8e_UnsafeIndexingExprModel{._field_Node=_25727_m}), &__jule_any_type128);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_26617_model))))));
		return;;
	};
	{
		auto &_match_expr{ (*((*(_25727_m))._field_Index))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1cae1a239:;
			{
				jule::Ptr<_1b9c09611_Var> _27213_i = (*((*(_25727_m))._field_Index))._field_Model.cast_ptr<_1b9c09611_Var>(&__jule_any_type8);;
				if (((*(_27213_i))._field_Mutable || ((*(_27213_i))._field_IterRelation == nullptr))) {
					goto _match_end_1cae1a1d4;
				};
				{
					auto &_match_expr{ (*((*(_25727_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1cae1bd84:;
						{
							jule::Ptr<_1b9c09611_Var> _27817_r = (*((*(_25727_m))._field_Expr))._field_Model.cast_ptr<_1b9c09611_Var>(&__jule_any_type8);;
							if (((*((*(_27213_i))._field_IterRelation))._field_Range == _27817_r)) {
								jule::Any _28125_model = jule::Any(jule::new_ptr<_1b9d8cc8e_UnsafeIndexingExprModel>(_1b9d8cc8e_UnsafeIndexingExprModel{._field_Node=_25727_m}), &__jule_any_type128);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_28125_model))))));
							};
						}
					}
					_match_end_1cae1bd2e:;
				};
			}
		}
		_match_end_1cae1a1d4:;
	};
}



inline void _1b9d98b68_anonFunc(_1b9d95c20_exprOptimizer* _self_, jule::Ptr<_1b9b44260_AnonFnExprModel> _28827_m) {
	_1b9d9799c_scope(_self_, &((*((*(_28827_m))._field_Func))._field_Scope));
}



inline void _1b9d98e21_mapExpr(_1b9d95c20_exprOptimizer* _self_, jule::Ptr<_1b9b44ae0_MapExprModel> _29226_m) {
	{
		auto expr = &((*(_29226_m))._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cae1e716:;
		if (it != expr_end) {
			jule::Ptr<_1b9b44639_KeyValPairExprModel> _29321_pair = *it;
			{
				static__1b9d96270_optimize(&((*(_29321_pair))._field_Key));
				static__1b9d96270_optimize(&((*(_29321_pair))._field_Val));
			}
			_iter_next_1cae1e716:;
			++it;
			goto _iter_begin_1cae1e716;
		}
		_iter_end_1cae1e716:;
	};
}



inline void _1b9d991c9_slicing(_1b9d95c20_exprOptimizer* _self_, jule::Ptr<_1b9b45173_SlicingExprModel> _29926_m) {
	static__1b9d96270_optimize(&((*(_29926_m))._field_Expr));
	static__1b9d96270_optimize(&((*(_29926_m))._field_Left));
	if (((*(_29926_m))._field_Right != nullptr)) {
		static__1b9d96270_optimize(&((*(_29926_m))._field_Right));
	};
}



inline void _1b9d99482_traitSub(_1b9d95c20_exprOptimizer* _self_, jule::Ptr<_1b9b45706_TraitSubIdentExprModel> _30727_m) {
	static__1b9d96270_optimize(&((*(_30727_m))._field_Expr));
}



inline void _1b9d9973a_structureSub(_1b9d95c20_exprOptimizer* _self_, jule::Ptr<_1b9b46097_StructSubIdentExprModel> _31131_m) {
	static__1b9d96270_optimize(&((*((*(_31131_m))._field_Expr))._field_Model));
}



inline void _1b9d999e3_tuple(_1b9d95c20_exprOptimizer* _self_, jule::Ptr<_1b9b46c24_TupleExprModel> _31524_m) {
	{
		auto expr = &((*(_31524_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cae22a5a:;
		if (it != expr_end) {
			jule::Ptr<_1b9c5d016_Data> _31621_d = *it;
			{
				static__1b9d96270_optimize(&((*(_31621_d))._field_Model));
			}
			_iter_next_1cae22a5a:;
			++it;
			goto _iter_begin_1cae22a5a;
		}
		_iter_end_1cae22a5a:;
	};
}



inline void _1b9d99c9b_newCall(_1b9d95c20_exprOptimizer* _self_, jule::Ptr<_1b9b478a1_BuiltinNewCallExprModel> _32126_m) {
	if (((*(_32126_m))._field_Init != nullptr)) {
		static__1b9d96270_optimize(&((*(_32126_m))._field_Init));
	};
}



inline void _1b9d9a054_outCall(_1b9d95c20_exprOptimizer* _self_, jule::Ptr<_1b9b470ed_BuiltinOutCallExprModel> _32726_m) {
	static__1b9d96270_optimize(&((*(_32726_m))._field_Expr));
}



inline void _1b9d9a30c_outlnCall(_1b9d95c20_exprOptimizer* _self_, jule::Ptr<_1b9b474c7_BuiltinOutlnCallExprModel> _33128_m) {
	static__1b9d96270_optimize(&((*(_33128_m))._field_Expr));
}



inline void _1b9d9a5b5_panicCall(_1b9d95c20_exprOptimizer* _self_, jule::Ptr<_1b9b47c7a_BuiltinPanicCallExprModel> _33528_m) {
	static__1b9d96270_optimize(&((*(_33528_m))._field_Expr));
}



inline void _1b9d9a86d_assertCall(_1b9d95c20_exprOptimizer* _self_, jule::Ptr<_1b9b48231_BuiltinAssertCallExprModel> _33929_m) {
	static__1b9d96270_optimize(&((*(_33929_m))._field_Expr));
}



inline void _1b9d9ab26_errorCall(_1b9d95c20_exprOptimizer* _self_, jule::Ptr<_1b9b49d37_BuiltinErrorCallExprModel> _34328_m) {
	static__1b9d96270_optimize(&((*((*(_34328_m))._field_Err))._field_Model));
}



inline void _1b9d9adce_makeCall(_1b9d95c20_exprOptimizer* _self_, jule::Ptr<_1b9b486d7_BuiltinMakeCallExprModel> _34727_m) {
	if (((*(_34727_m))._field_Len != nullptr)) {
		static__1b9d96270_optimize(&((*(_34727_m))._field_Len));
	};
	if (((*(_34727_m))._field_Cap != nullptr)) {
		static__1b9d96270_optimize(&((*(_34727_m))._field_Cap));
	};
}



inline void _1b9d9b187_appendCall(_1b9d95c20_exprOptimizer* _self_, jule::Ptr<_1b9b48ab1_BuiltinAppendCallExprModel> _35629_m) {
	static__1b9d96270_optimize(&((*(_35629_m))._field_Dest));
	static__1b9d96270_optimize(&((*(_35629_m))._field_Elements));
}



inline void _1b9d9b440_lenCall(_1b9d95c20_exprOptimizer* _self_, jule::Ptr<_1b9b48dad_BuiltinLenCallExprModel> _36126_m) {
	static__1b9d96270_optimize(&((*((*(_36126_m))._field_Expr))._field_Model));
}



inline void _1b9d9b6e8_capCall(_1b9d95c20_exprOptimizer* _self_, jule::Ptr<_1b9b491aa_BuiltinCapCallExprModel> _36526_m) {
	static__1b9d96270_optimize(&((*((*(_36526_m))._field_Expr))._field_Model));
}



inline void _1b9d9b9a1_deleteCall(_1b9d95c20_exprOptimizer* _self_, jule::Ptr<_1b9b49584_BuiltinDeleteCallExprModel> _36929_m) {
	static__1b9d96270_optimize(&((*((*(_36929_m))._field_Dest))._field_Model));
	if (((*(_36929_m))._field_Key != nullptr)) {
		static__1b9d96270_optimize(&((*((*(_36929_m))._field_Key))._field_Model));
	};
}



inline void _1b9d9bc59_sizeof(_1b9d95c20_exprOptimizer* _self_, jule::Ptr<_1b9b458e3_SizeofExprModel> _37625_m) {
	static__1b9d96270_optimize(&((*(_37625_m))._field_Expr));
}



inline void _1b9d9c012_alignof(_1b9d95c20_exprOptimizer* _self_, jule::Ptr<_1b9b4a563_AlignofExprModel> _38026_m) {
	static__1b9d96270_optimize(&((*(_38026_m))._field_Expr));
}



inline void _1b9d9c2ba_integratedToStr(_1b9d95c20_exprOptimizer* _self_, jule::Ptr<_1b9b4ab5c_IntegratedToStrExprModel> _38434_m) {
	static__1b9d96270_optimize(&((*(_38434_m))._field_Expr));
}



inline void _1b9d9c573_free(_1b9d95c20_exprOptimizer* _self_, jule::Ptr<_1b9b4b333_FreeExprModel> _38823_m) {
	static__1b9d96270_optimize(&((*(_38823_m))._field_Expr));
}



inline void _1b9d9c82b_backendEmit(_1b9d95c20_exprOptimizer* _self_, jule::Ptr<_1b9b4b036_BackendEmitExprModel> _39230_m) {
	_1b9d976e4_args(_self_, &((*(_39230_m))._field_Exprs));
}



inline void _1b9d9ca29_do(_1b9d95c20_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_model)) };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1cae2cd40:;
			{
				_1b9d96869_binary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b9b41526_BinopExprModel>(&__jule_any_type111));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1cae2cda6:;
			{
				_1b9d96b22_unary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b9b41900_UnaryExprModel>(&__jule_any_type110));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1cae2ce1c:;
			{
				_1b9d96dca_structureLit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b9b422c4_StructLitExprModel>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1cae2ce94:;
			{
				_1b9d97183_allocStructure(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b9b425c1_AllocStructLitExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1cae2d01b:;
			{
				_1b9d9743b_casting(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b9b42b54_CastingExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1cae2d093:;
			{
				_1b9d98096_funcCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b9b43506_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1cae2d11a:;
			{
				_1b9d9834e_slice(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b9b438d0_SliceExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1cae2d192:;
			{
				_1b9d98607_array(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b9b46927_ArrayExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1cae2d219:;
			{
				_1b9d988b0_indexing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b9b43d86_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1cae2d291:;
			{
				_1b9d98b68_anonFunc(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b9b44260_AnonFnExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1cae2d318:;
			{
				_1b9d98e21_mapExpr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b9b44ae0_MapExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1cae2d390:;
			{
				_1b9d991c9_slicing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b9b45173_SlicingExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1cae2d417:;
			{
				_1b9d99482_traitSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b9b45706_TraitSubIdentExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1cae2d48e:;
			{
				_1b9d9973a_structureSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b9b46097_StructSubIdentExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1cae2d516:;
			{
				_1b9d999e3_tuple(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b9b46c24_TupleExprModel>(&__jule_any_type81));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1cae2d58d:;
			{
				_1b9d9a054_outCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b9b470ed_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1cae2d615:;
			{
				_1b9d9a30c_outlnCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b9b474c7_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1cae2d68c:;
			{
				_1b9d99c9b_newCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b9b478a1_BuiltinNewCallExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1cae2d714:;
			{
				_1b9d9a5b5_panicCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b9b47c7a_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1cae2d78b:;
			{
				_1b9d9a86d_assertCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b9b48231_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1cae2d813:;
			{
				_1b9d9ab26_errorCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b9b49d37_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1cae2d88a:;
			{
				_1b9d9adce_makeCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b9b486d7_BuiltinMakeCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1cae2d912:;
			{
				_1b9d9b187_appendCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b9b48ab1_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1cae2d989:;
			{
				_1b9d9b440_lenCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b9b48dad_BuiltinLenCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1cae2da11:;
			{
				_1b9d9b6e8_capCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b9b491aa_BuiltinCapCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1cae2da88:;
			{
				_1b9d9b9a1_deleteCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b9b49584_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1cae2db10:;
			{
				_1b9d9bc59_sizeof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b9b458e3_SizeofExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1cae2db87:;
			{
				_1b9d9c012_alignof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b9b4a563_AlignofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1cae2dc0e:;
			{
				_1b9d9c2ba_integratedToStr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b9b4ab5c_IntegratedToStrExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1cae2dc86:;
			{
				_1b9d9c573_free(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b9b4b333_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1cae2dd0d:;
			{
				_1b9d9c82b_backendEmit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b9b4b036_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_1cae2ca98:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1b9d95c20_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ba838c9a_stdCacheData _Src) {
	_Stream << "stdCacheData{";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "do:" << _Src._field_do;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c766c880_Optimizer> static__1c766ccc0_New(jule::Ptr<_1ba834944_IR>* _2724_ir) {
	return jule::new_ptr<_1c766c880_Optimizer>(_1c766c880_Optimizer{._field_ir=(*(_2724_ir))});;
}



inline void _1c766d078_optimizeGlobal(_1c766c880_Optimizer* _self_, jule::Ptr<_1b9c09611_Var>* _3338_v) {
	if ((!((*((*(_3338_v))))._field_Binded))) {
		static__1b9d96270_optimize(&((*((*((*((*(_3338_v))))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1c766d331_optimizeFunction(_1c766c880_Optimizer* _self_, jule::Ptr<_1b9b4e26a_Fn>* _3940_func) {
	if ((*((*(_3940_func))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_3940_func))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cae4990b:;
		if (it != expr_end) {
			jule::Ptr<_1b9b5216e_FnIns> _4321_ins = *it;
			{
				jule::Ptr<_1b9d8ea3d_scopeOptimizer> _4417_so = static__1b9d9007c_new((*(_4321_ins))._field_Scope);;
				_1b9d93921_optimize(_4417_so.ptr());
			}
			_iter_next_1cae4990b:;
			++it;
			goto _iter_begin_1cae4990b;
		}
		_iter_end_1cae4990b:;
	};
}



inline void _1c766d5d9_optimizeStruct(_1c766c880_Optimizer* _self_, jule::Ptr<_1b9b393a9_Struct>* _4938_s) {
	if ((*((*(_4938_s))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_4938_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cae4a3bd:;
		if (it != expr_end) {
			jule::Ptr<_1b9b3c137_StructIns> _5321_ins = *it;
			{
				{
					auto expr = &((*(_5321_ins))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cae4b9c9:;
					if (it != expr_end) {
						jule::Ptr<_1b9b3b587_FieldIns> _5425_f = *it;
						{
							if (((*(_5425_f))._field_Default != nullptr)) {
								static__1b9d96270_optimize(&((*((*(_5425_f))._field_Default))._field_Model));
							};
						}
						_iter_next_1cae4b9c9:;
						++it;
						goto _iter_begin_1cae4b9c9;
					}
					_iter_end_1cae4b9c9:;
				};
				{
					auto expr = &((*(_5321_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cae4ce92:;
					if (it != expr_end) {
						jule::Ptr<_1b9b4e26a_Fn> _5925_m = *it;
						{
							_1c766d331_optimizeFunction(_self_, &(_5925_m));
						}
						_iter_next_1cae4ce92:;
						++it;
						goto _iter_begin_1cae4ce92;
					}
					_iter_end_1cae4ce92:;
				};
			}
			_iter_next_1cae4a3bd:;
			++it;
			goto _iter_begin_1cae4a3bd;
		}
		_iter_end_1cae4a3bd:;
	};
}



inline void _1c766d892_optimizeGlobals(_1c766c880_Optimizer* _self_, jule::Ptr<_1b9bb4126_Package>* _6539_p) {
	{
		auto expr = &((*((*(_6539_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cae4d2e4:;
		if (it != expr_end) {
			jule::Ptr<_1b9c57ce1_SymbolTable> _6621_f = *it;
			{
				{
					auto expr = &((*(_6621_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cae4e081:;
					if (it != expr_end) {
						jule::Ptr<_1b9c09611_Var> _6725_v = *it;
						{
							_1c766d078_optimizeGlobal(_self_, &(_6725_v));
						}
						_iter_next_1cae4e081:;
						++it;
						goto _iter_begin_1cae4e081;
					}
					_iter_end_1cae4e081:;
				};
			}
			_iter_next_1cae4d2e4:;
			++it;
			goto _iter_begin_1cae4d2e4;
		}
		_iter_end_1cae4d2e4:;
	};
}



inline void _1c766db4a_optimizeFunctions(_1c766c880_Optimizer* _self_, jule::Ptr<_1b9bb4126_Package>* _7341_p) {
	{
		auto expr = &((*((*(_7341_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cae4e746:;
		if (it != expr_end) {
			jule::Ptr<_1b9c57ce1_SymbolTable> _7421_f = *it;
			{
				{
					auto expr = &((*(_7421_f))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cae504c2:;
					if (it != expr_end) {
						jule::Ptr<_1b9b4e26a_Fn> _7525_func = *it;
						{
							_1c766d331_optimizeFunction(_self_, &(_7525_func));
						}
						_iter_next_1cae504c2:;
						++it;
						goto _iter_begin_1cae504c2;
					}
					_iter_end_1cae504c2:;
				};
			}
			_iter_next_1cae4e746:;
			++it;
			goto _iter_begin_1cae4e746;
		}
		_iter_end_1cae4e746:;
	};
}



inline void _1c766de03_optimizeStructs(_1c766c880_Optimizer* _self_, jule::Ptr<_1b9bb4126_Package>* _8139_p) {
	{
		auto expr = &((*((*(_8139_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cae50b87:;
		if (it != expr_end) {
			jule::Ptr<_1b9c57ce1_SymbolTable> _8221_f = *it;
			{
				{
					auto expr = &((*(_8221_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cae51913:;
					if (it != expr_end) {
						jule::Ptr<_1b9b393a9_Struct> _8325_s = *it;
						{
							_1c766d5d9_optimizeStruct(_self_, &(_8325_s));
						}
						_iter_next_1cae51913:;
						++it;
						goto _iter_begin_1cae51913;
					}
					_iter_end_1cae51913:;
				};
			}
			_iter_next_1cae50b87:;
			++it;
			goto _iter_begin_1cae50b87;
		}
		_iter_end_1cae50b87:;
	};
}



inline void _1c766e1ab_optimizePackage(_1c766c880_Optimizer* _self_, jule::Ptr<_1b9bb4126_Package>* _8939_p) {
	_1c766d892_optimizeGlobals(_self_, _8939_p);
	_1c766db4a_optimizeFunctions(_self_, _8939_p);
	_1c766de03_optimizeStructs(_self_, _8939_p);
}



inline void _1c766e3a9_Optimize(_1c766c880_Optimizer* _self_) {
	_1c766e62e_detectEnabled();
	if (_1c766c5e9_stdEnabled) {
		_1ba83943d_buildCache(&((*(_self_))._field_ir));
	};
	if (_1ba83acad_Deadcode) {
		_1c765e861_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1c766c330_scopeEnabled || _1c766c0aa_exprEnabled)) {
		{
			auto expr = &((*((*(_self_))._field_ir))._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1cae5331b:;
			if (it != expr_end) {
				jule::Ptr<_1b9bb1200_ImportInfo> _10825_u = *it;
				{
					if ((!((*(_10825_u))._field_Binded))) {
						_1c766e1ab_optimizePackage(_self_, &((*(_10825_u))._field_Package));
					};
				}
				_iter_next_1cae5331b:;
				++it;
				goto _iter_begin_1cae5331b;
			}
			_iter_end_1cae5331b:;
		};
		_1c766e1ab_optimizePackage(_self_, &((*((*(_self_))._field_ir))._field_Main));
	};
	if (_1ba83acad_Deadcode) {
		_1c7664e0a_EliminateScopes(&((*(_self_))._field_ir));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c766c880_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1c766ea80_Reset(void) {
	jule::out(jule::Str::lit("\033[0m", 4));
}



inline void static__1c76947b9_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__1c766ea80_Reset();
}





std::ostream &operator<<(std::ostream &_Stream, _1c76958ca_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1c76972c2_LogFlat(_23d21115a_Log* _1424_l) {
	jule::outln((*(_1424_l))._field_Text);
}



inline void static__1c7697503_LogError(_23d21115a_Log* _1925_l) {
	jule::out(jule::Str::lit("\033[31m", 5));
	jule::out(jule::Str::lit("error: ", 7));
	jule::out((*(_1925_l))._field_Text);
	static__1c766ea80_Reset();
	if (((*(_1925_l))._field_Path.len() != 0LL)) {
		jule::out(jule::Str::lit("\n  --> ", 7));
		jule::out((*(_1925_l))._field_Path);
	};
	if ((((*(_1925_l))._field_Row != 0LL) && ((*(_1925_l))._field_Column != 0LL))) {
		jule::out(jule::Str::lit(":", 1));
		jule::out(_1ec6727b6_Itoa((*(_1925_l))._field_Row));
		jule::out(jule::Str::lit(":", 1));
		jule::out(_1ec6727b6_Itoa((*(_1925_l))._field_Column));
	};
	if (((*(_1925_l))._field_Line.len() != 0LL)) {
		jule::Str _3617_line = _23d155324_TrimLeft((*(_1925_l))._field_Line, jule::Str::lit("\r\n\v\b ", 5));;
		jule::I32 _3717_offset = (((*(_1925_l))._field_Line.len() - _3617_line.len()) + 1LL);;
		jule::I32 _3817_oldLen = _3617_line.len();;
		_3617_line=_23d155324_TrimLeft(_3617_line, jule::Str::lit("\t", 1));
		if ((_3817_oldLen != _3617_line.len())) {
			_3717_offset+=((_3817_oldLen - _3617_line.len()) << 3LLU);
		};
		jule::out(jule::Str::lit("\n  ", 3));
		jule::Str _4413_row = _1ec6727b6_Itoa((*(_1925_l))._field_Row);;
		jule::out(_4413_row);
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_3617_line);
		jule::out(jule::Str::lit("\n  ", 3));
		jule::out(_23d14c2a5_Repeat(jule::Str::lit(" ", 1), static_cast<jule::I32>(_4413_row.len())));
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_23d14c2a5_Repeat(jule::Str::lit(" ", 1), static_cast<jule::I32>(((*(_1925_l))._field_Column - _3717_offset))));
		jule::out(jule::Str::lit("^", 1));
		if (((*(_1925_l))._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str::lit("\n  ", 3));
			jule::out(_23d14c2a5_Repeat(jule::Str::lit(" ", 1), static_cast<jule::I32>(_4413_row.len())));
			jule::out(jule::Str::lit(" | ", 3));
			static__1c76947b9_Print(jule::Str::lit("\033[95m", 5), jule::Str::lit("suggestion: ", 12));
			jule::out((*(_1925_l))._field_Suggestion);
		};
	};
	jule::outln(jule::Str::lit("\n", 1));
}



inline void static__1c7697734_Log(_23d21115a_Log* _6520_l) {
	{
		auto &_match_expr{ (*(_6520_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I32>(0LL)) {
			_case_begin_1cae619bc:;
			{
				static__1c76972c2_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I32>(1LL)) {
			_case_begin_1cae61a44:;
			{
				static__1c7697503_LogError(_6520_l);
			}
		}
		_match_end_1cae61934:;
	};
}



inline void static__1c7697965_PrintLogs(jule::Slice<_23d21115a_Log>* _7526_logs) {
	{
		auto expr = _7526_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cae5c6ee:;
		if (it != expr_end) {
			_23d21115a_Log *_7616_l = it;
			{
				static__1c7697734_Log(_7616_l);
			}
			_iter_next_1cae5c6ee:;
			++it;
			goto _iter_begin_1cae5c6ee;
		}
		_iter_end_1cae5c6ee:;
	};
	jule::out(jule::Str::lit("=== ", 4));
	jule::out(_1ec6727b6_Itoa(static_cast<jule::I32>((*(_7526_logs)).len())));
	jule::outln(jule::Str::lit(" error generated ===", 20));
}





std::ostream &operator<<(std::ostream &_Stream, _1c7697008_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c8034e39_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1c8035610_Time static__1c80359b7_Unix(jule::U64 _9120_sec) {
	return _1c8035610_Time{._field_sec=_9120_sec};;
}



inline _1c8035610_Time static__1c8035bc6_Now(void) {
	return static__1c80359b7_Unix(static_cast<jule::U64>(_1c8037700_unix()));;
}



inline _1c8034e39_AbsTime _1c80373ae_Abs(_1c8035610_Time* _self_) {
	jule::U64 _1279_secs = ((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _12813_days = (_1279_secs / 86400LLU);;
	jule::U64 _12913_remSecs = (_1279_secs % 86400LL);;
	if ((_12913_remSecs < 0LLU)) {
		_12913_remSecs+=86400LLU;
		(_12813_days)--;
	};
	jule::U64 _13513_qcCycles = (_12813_days / 146097LLU);;
	jule::U64 _13613_remDays = (_12813_days % 146097LL);;
	if ((_13613_remDays < 0LLU)) {
		_13613_remDays+=146097LLU;
		(_13513_qcCycles)--;
	};
	jule::U64 _14213_cCycles = (_13613_remDays / 36524LLU);;
	if ((_14213_cCycles == 4LLU)) {
		(_14213_cCycles)--;
	};
	_13613_remDays-=(_14213_cCycles * 36524LLU);
	jule::U64 _14813_qCycles = (_13613_remDays / 1461LLU);;
	if ((_14813_qCycles == 25LLU)) {
		(_14813_qCycles)--;
	};
	_13613_remDays-=(_14813_qCycles * 1461LLU);
	jule::U64 _15413_remYears = (_13613_remDays / 365LLU);;
	if ((_15413_remYears == 4LLU)) {
		(_15413_remYears)--;
	};
	_13613_remDays-=(_15413_remYears * 365LLU);
	jule::U64 _16013_leap = static_cast<jule::U64>(0LLU);;
	if (((_15413_remYears == 0LLU) && ((_14813_qCycles > 0LLU) || (_14213_cCycles == 0LLU)))) {
		_16013_leap=1LLU;
	};
	jule::U64 _16413_yDay = (((_13613_remDays + 31LLU) + 28LLU) + _16013_leap);;
	if ((_16413_yDay >= (365LLU + _16013_leap))) {
		_16413_yDay-=(365LLU + _16013_leap);
	};
	jule::U64 _16913_months = static_cast<jule::U64>(0LLU);;
	for (; (_1c8034411_mdays[static_cast<jule::I32>(_16913_months)] <= _13613_remDays); (_16913_months)++) {
		{
			_13613_remDays-=_1c8034411_mdays[static_cast<jule::I32>(_16913_months)];
		}
	_iter_next_1cae90e3b:;
	}
	_iter_end_1cae90e3b:;;
	_1c8034e39_AbsTime _17413_t = _1c8034e39_AbsTime{};;
	_17413_t._field_Year=static_cast<jule::U64>(((((_15413_remYears + (4LLU * _14813_qCycles)) + (100LLU * _14213_cCycles)) + (400LLU * _13513_qcCycles)) + 100LLU));
	_17413_t._field_Month=static_cast<jule::U64>((_16913_months + 2LLU));
	if ((_17413_t._field_Month >= 12LLU)) {
		_17413_t._field_Month-=12LLU;
		(_17413_t._field_Year)++;
	};
	_17413_t._field_Month+=1LLU;
	_17413_t._field_Year+=1900LLU;
	_17413_t._field_Day=static_cast<jule::U64>((_13613_remDays + 1LLU));
	_17413_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12813_days) % 7LL));
	if ((_17413_t._field_WeekDay < 0LLU)) {
		_17413_t._field_WeekDay+=7LLU;
	};
	_17413_t._field_YearDay=_16413_yDay;
	_17413_t._field_Hour=static_cast<jule::U64>((_12913_remSecs / 3600LLU));
	_17413_t._field_Minute=static_cast<jule::U64>(((_12913_remSecs / 60LLU) % 60LL));
	_17413_t._field_Second=static_cast<jule::U64>((_12913_remSecs % 60LL));
	return _17413_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c8035610_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c7e58577_scopeCoder> static__1c7e58b93_new(jule::Ptr<_1c803eaae_ObjectCoder>* _6524_oc) {
	return jule::new_ptr<_1c7e58577_scopeCoder>(_1c7e58577_scopeCoder{._field_oc=(*(_6524_oc))});;
}



inline void _1cb0352dd_iterHead(jule::Ptr<_1c7e58577_scopeCoder> _self_, jule::Ptr<_1b9b91b09_RangeIter>* _7232_it, jule::Bool* _7244_ref, jule::Str* _7256_begin) {
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1c8040461_addIndent((*(_self_))._field_oc);
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1ba83a9a0_Copy && _1c7e5ebcc_isCopyOptimizable(&((*((*(_7232_it))))._field_Expr)))) {
		(*(_7244_ref))=true;
		{
			auto &_match_expr{ (*((*((*(_7232_it))))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1cb0369d7:;
				{
					jule::Ptr<_1b9c09611_Var> _8117_v = (*((*((*(_7232_it))))._field_Expr))._field_Model.cast_ptr<_1b9c09611_Var>(&__jule_any_type8);;
					if ((*(_8117_v))._field_Reference) {
						_1c7e74c14_model((*((*(_self_))._field_oc))._field_ec, (*((*((*(_7232_it))))._field_Expr))._field_Model);
						goto _match_end_1cb038cd6;
					};
					goto _case_begin_1cb038d3b;
				}
			}
			else {
				_case_begin_1cb038d3b:;
				{
					_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1c7e74c14_model((*((*(_self_))._field_oc))._field_ec, (*((*((*(_7232_it))))._field_Expr))._field_Model);
					_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1cb038cd6:;
		};
	} else {
		_1c7e65ad4_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_7232_it))))._field_Expr))._field_Model);
	};
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("auto it = expr", 14));
	if ((*(_7244_ref))) {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("auto expr_end = expr", 20));
	if ((*(_7244_ref))) {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("end();\n", 7));
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, (*(_7256_begin)));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("if (it != expr_end) {\n", 22));
	_1c8040461_addIndent((*(_self_))._field_oc);
	_1c804085c_indent((*(_self_))._field_oc);
}



inline void _1c7e59369_rangeIndexIter(jule::Ptr<_1c7e58577_scopeCoder> _self_, jule::Ptr<_1b9b91b09_RangeIter>* _12139_it) {
	jule::Str _1229_begin = static__1c7e7d4e2_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12139_it)))));;
	jule::Str _1239_next = static__1c7e7da75_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12139_it)))));;
	jule::Bool _12513_ref = false;;
	_1cb0352dd_iterHead(_self_, _12139_it, &(_12513_ref), &(_1229_begin));
	if (((*((*(_12139_it))))._field_KeyA != nullptr)) {
		_1c8047b2d_varInitExpr((*(_self_))._field_oc, &((*((*(_12139_it))))._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			if (_12513_ref) {
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("it - expr->begin()", 18));
			} else {
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("it - expr.begin()", 17));
			};
		}));
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1c804085c_indent((*(_self_))._field_oc);
	};
	if (((*((*(_12139_it))))._field_KeyB != nullptr)) {
		(*((*((*(_12139_it))))._field_KeyB))._field_Reference=(_1ba83a9a0_Copy && _1c7e60095_isIterCopyOptimizable(&((*((*(_12139_it))))._field_Expr), &((*((*(_12139_it))))._field_KeyB)));
		_1c8047b2d_varInitExpr((*(_self_))._field_oc, &((*((*(_12139_it))))._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			{
				if ((*((*((*(_12139_it))))._field_KeyB))._field_Reference) {
					_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				} else {
					_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("*it", 3));
				};
			};
		}));
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1c804085c_indent((*(_self_))._field_oc);
	};
	_1c7e5e55b_scope(_self_, (*((*(_12139_it))))._field_Scope);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, _1239_next);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_1c804085c_indent((*(_self_))._field_oc);
	if (((*((*(_12139_it))))._field_KeyA != nullptr)) {
		_1c8040263_write((*(_self_))._field_oc, static__1c7e7d228_var((*((*(_12139_it))))._field_KeyA));
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1c804085c_indent((*(_self_))._field_oc);
	};
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1c8040263_write((*(_self_))._field_oc, _1229_begin);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1c804065e_doneIndent((*(_self_))._field_oc);
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, static__1c7e7d7ab_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12139_it))))));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1c804065e_doneIndent((*(_self_))._field_oc);
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1c7e59622_rangeHashmapIter(jule::Ptr<_1c7e58577_scopeCoder> _self_, jule::Ptr<_1b9b91b09_RangeIter>* _18441_it) {
	jule::Str _1859_begin = static__1c7e7d4e2_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18441_it)))));;
	jule::Str _1869_next = static__1c7e7da75_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18441_it)))));;
	jule::Bool _18813_ref = false;;
	_1cb0352dd_iterHead(_self_, _18441_it, &(_18813_ref), &(_1859_begin));
	if (((*((*(_18441_it))))._field_KeyA != nullptr)) {
		_1c8047b2d_varInitExpr((*(_self_))._field_oc, &((*((*(_18441_it))))._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("it->first", 9));
		}));
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1c804085c_indent((*(_self_))._field_oc);
	};
	if (((*((*(_18441_it))))._field_KeyB != nullptr)) {
		_1c8047b2d_varInitExpr((*(_self_))._field_oc, &((*((*(_18441_it))))._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("it->second", 10));
		}));
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1c804085c_indent((*(_self_))._field_oc);
	};
	_1c7e5e55b_scope(_self_, (*((*(_18441_it))))._field_Scope);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, _1869_next);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1c8040263_write((*(_self_))._field_oc, _1859_begin);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1c804065e_doneIndent((*(_self_))._field_oc);
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, static__1c7e7d7ab_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18441_it))))));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1c804065e_doneIndent((*(_self_))._field_oc);
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1c7e598ca_ifCase(jule::Ptr<_1c7e58577_scopeCoder> _self_, jule::Ptr<_1b9b901e0_If> _22730_i) {
	if (((*(_22730_i))._field_Expr != nullptr)) {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		_1c7e65ad4_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_22730_i))._field_Expr);
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	};
	_1c7e5e55b_scope(_self_, (*(_22730_i))._field_Scope);
}



inline void _1c7e59b83_conditional(jule::Ptr<_1c7e58577_scopeCoder> _self_, jule::Ptr<_1b9b9090a_Conditional> _23635_c) {
	jule::Bool _23713_writed = false;;
	{
		auto expr = &((*(_23635_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb067b17:;
		if (it != expr_end) {
			jule::Ptr<_1b9b901e0_If> _23821_elif = *it;
			{
				if ((_23821_elif == nullptr)) {
					goto _iter_next_1cb067b17;
				};
				if (_23713_writed) {
					_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
				};
				_23713_writed=true;
				_1c7e598ca_ifCase(_self_, _23821_elif);
			}
			_iter_next_1cb067b17:;
			++it;
			goto _iter_begin_1cb067b17;
		}
		_iter_end_1cb067b17:;
	};
	if (((*(_23635_c))._field_Default != nullptr)) {
		if (_23713_writed) {
			_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
		};
		_1c7e5e55b_scope(_self_, (*((*(_23635_c))._field_Default))._field_Scope);
	};
}



inline void _1c7e59e3b_infIter(jule::Ptr<_1c7e58577_scopeCoder> _self_, jule::Ptr<_1b9b90c07_InfIter> _25631_it) {
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("for (;;) {\n", 11));
	_1c8040461_addIndent((*(_self_))._field_oc);
	_1c804085c_indent((*(_self_))._field_oc);
	_1c7e5e55b_scope(_self_, (*(_25631_it))._field_Scope);
	_1c804065e_doneIndent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, static__1c7e7da75_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25631_it))));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, static__1c7e7d7ab_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25631_it))));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1c7e5a1e4_whileIter(jule::Ptr<_1c7e58577_scopeCoder> _self_, jule::Ptr<_1b9b911ad_WhileIter> _27333_it) {
	if ((((*(_27333_it))._field_Expr != nullptr) && ((*(_27333_it))._field_Next == nullptr))) {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("while (", 7));
		_1c7e65ad4_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_27333_it))._field_Expr);
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(") {\n", 4));
	} else {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
		if (((*(_27333_it))._field_Expr != nullptr)) {
			_1c7e65ad4_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_27333_it))._field_Expr);
		};
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
		if (((*(_27333_it))._field_Next != nullptr)) {
			_1c7e5deea_st(_self_, (*(_27333_it))._field_Next);
		};
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(") {\n", 4));
	};
	_1c8040461_addIndent((*(_self_))._field_oc);
	_1c804085c_indent((*(_self_))._field_oc);
	_1c7e5e55b_scope(_self_, (*(_27333_it))._field_Scope);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1c804065e_doneIndent((*(_self_))._field_oc);
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, static__1c7e7da75_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_27333_it))));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, static__1c7e7d7ab_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_27333_it))));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1c7e5a49c_rangeIter(jule::Ptr<_1c7e58577_scopeCoder> _self_, jule::Ptr<_1b9b91b09_RangeIter> _30633_it) {
	{
		
		if ((_1b9c91885_Slc((*((*(_30633_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb07c269:;
			{
				_1c7e59369_rangeIndexIter(_self_, &(_30633_it));
			}
		}
		else if ((_1b9c915ee_Arr((*((*(_30633_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb07be39:;
			{
				_1c7e59369_rangeIndexIter(_self_, &(_30633_it));
			}
		}
		else if ((_1b9c923be_Map((*((*(_30633_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb07bea0:;
			{
				_1c7e59622_rangeHashmapIter(_self_, &(_30633_it));
			}
		}
		else {
			_case_begin_1cb07bdc3:;
			{
				_1c7e59369_rangeIndexIter(_self_, &(_30633_it));
			}
		}
		_match_end_1cb07bd07:;
	};
}



inline void _1c7e5a755_cont(jule::Ptr<_1c7e58577_scopeCoder> _self_, jule::Ptr<_1b9b91e8e_ContSt> _31924_c) {
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1c8040263_write((*(_self_))._field_oc, static__1c7e7da75_iterNext((*(_31924_c))._field_It));
}



inline void _1c7e5aa0d_label(jule::Ptr<_1c7e58577_scopeCoder> _self_, jule::Ptr<_1b9b92665_Label> _32425_l) {
	_1c8040263_write((*(_self_))._field_oc, static__1c7e7dd3e_label(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_32425_l))));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(":", 1));
}



inline void _1c7e5acb6_gotoSt(jule::Ptr<_1c7e58577_scopeCoder> _self_, jule::Ptr<_1b9b92a3e_GotoSt> _32926_gt) {
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1c8040263_write((*(_self_))._field_oc, static__1c7e7dd3e_label(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_32926_gt))._field_Label))));
}



inline void _1c7e5b06e_postfix(jule::Ptr<_1c7e58577_scopeCoder> _self_, jule::Ptr<_1b9b92e18_Postfix> _33431_p) {
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1c7e65ad4_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_33431_p))._field_Expr);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	_1c8040263_write((*(_self_))._field_oc, (*(_33431_p))._field_Op);
}



inline void _1c7e5b327_assign(jule::Ptr<_1c7e58577_scopeCoder> _self_, jule::Ptr<_1b9b933be_Assign> _34130_a) {
	_1c7e65ad4_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_34130_a))._field_L))._field_Model);
	_1c8040263_write((*(_self_))._field_oc, (*((*(_34130_a))._field_Op))._field_Kind);
	_1c7e65ad4_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_34130_a))._field_R))._field_Model);
}



inline void _1c7e5b5d0_mapLookupAssign(jule::Ptr<_1c7e58577_scopeCoder> _self_, jule::Ptr<_1b9b93798_MultiAssign>* _34740_a) {
	jule::Ptr<_1b9b43d86_IndexingExprModel> _34813_iem = (*((*(_34740_a))))._field_R.cast_ptr<_1b9b43d86_IndexingExprModel>(&__jule_any_type45);;
	_1c7e65ad4_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_34813_iem))._field_Expr))._field_Model);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(".lookup(", 8));
	_1c7e65ad4_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_34813_iem))._field_Index))._field_Model);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_34740_a))))._field_L[0LL] != nullptr)) {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1c7e65ad4_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_34740_a))))._field_L[0LL]))._field_Model);
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
	} else {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("nullptr, ", 9));
	};
	if (((*((*(_34740_a))))._field_L[1LL] != nullptr)) {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1c7e65ad4_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_34740_a))))._field_L[1LL]))._field_Model);
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1c7e5b888_multiAssignTup(jule::Ptr<_1c7e58577_scopeCoder> _self_, jule::Ptr<_1b9b93798_MultiAssign>* _37039_a) {
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1c8040461_addIndent((*(_self_))._field_oc);
	jule::Ptr<_1b9b46c24_TupleExprModel> _37413_tup = (*((*(_37039_a))))._field_R.cast_ptr<_1b9b46c24_TupleExprModel>(&__jule_any_type81);;
	{
		auto expr = &((*(_37413_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb092aba:;
		if (it != expr_end) {
			jule::I32 _37614_i = it - expr->begin();
			jule::Ptr<_1b9c5d016_Data> _37621_r = *it;
			{
				_1c804085c_indent((*(_self_))._field_oc);
				jule::Ptr<_1b9c5d016_Data> _37817_l = (*((*(_37039_a))))._field_L[_37614_i];;
				if ((_37817_l != nullptr)) {
					{
						auto &_match_expr{ (*(_37817_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1cb09575a:;
							{
								jule::Ptr<_1b9c09611_Var> _38225_v = (*(_37817_l))._field_Model.cast_ptr<_1b9c09611_Var>(&__jule_any_type8);;
								if (((*(_38225_v))._field_Reference && (!(_1b9c09996_IsInitialized(_38225_v.ptr()))))) {
									_1c8040263_write((*(_self_))._field_oc, static__1c7e7d228_var(_38225_v));
									_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(" = &(", 5));
									_1c7e65ad4_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_37621_r))._field_Model);
									_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
									(*((*(_37039_a))))._field_L[_37614_i]=nullptr;
									goto _iter_next_1cb092aba;
								};
							}
						}
						_match_end_1cb095705:;
					};
					_1c8040263_write((*(_self_))._field_oc, _1c8054e15_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_37817_l))._field_Kind));
					_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
					_1c8040263_write((*(_self_))._field_oc, static__1c7e7b5bc_toOut(&(_1c7e57e4a_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_37614_i))));
					_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				};
				_1c7e65ad4_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_37621_r))._field_Model);
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1cb092aba:;
			++it;
			_37614_i++;
			goto _iter_begin_1cb092aba;
		}
		_iter_end_1cb092aba:;
	};
	{
		auto expr = &((*((*(_37039_a))))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb09b6b7:;
		if (it != expr_end) {
			jule::I32 _40314_i = it - expr->begin();
			jule::Ptr<_1b9c5d016_Data> _40321_l = *it;
			{
				if ((_40321_l == nullptr)) {
					goto _iter_next_1cb09b6b7;
				};
				_1c804085c_indent((*(_self_))._field_oc);
				_1c7e65ad4_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_40321_l))._field_Model);
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1c8040263_write((*(_self_))._field_oc, static__1c7e7b5bc_toOut(&(_1c7e57e4a_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_40314_i))));
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1cb09b6b7:;
			++it;
			_40314_i++;
			goto _iter_begin_1cb09b6b7;
		}
		_iter_end_1cb09b6b7:;
	};
	_1c804065e_doneIndent((*(_self_))._field_oc);
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1c7e5bb41_multiAssignFn(jule::Ptr<_1c7e58577_scopeCoder> _self_, jule::Ptr<_1b9b93798_MultiAssign>* _41938_a) {
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1c8040461_addIndent((*(_self_))._field_oc);
	_1c804085c_indent((*(_self_))._field_oc);
	jule::Ptr<_1b9b43506_FnCallExprModel> _42413_f = (*((*(_41938_a))))._field_R.cast_ptr<_1b9b43506_FnCallExprModel>(&__jule_any_type34);;
	_1c8059bc8_codeMut1((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), &((*((*(_42413_f))._field_Func))._field_Result));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(" __jule_assign_result = ", 24));
	_1c7e65ad4_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_41938_a))))._field_R);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	{
		auto expr = &((*((*(_41938_a))))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb0a4a77:;
		if (it != expr_end) {
			jule::I32 _43014_i = it - expr->begin();
			jule::Ptr<_1b9c5d016_Data> _43021_l = *it;
			{
				if ((_43021_l != nullptr)) {
					_1c804085c_indent((*(_self_))._field_oc);
					_1c7e65ad4_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_43021_l))._field_Model);
					_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(" = __jule_assign_result.__jule_result_arg", 41));
					_1c8040263_write((*(_self_))._field_oc, _1ec6727b6_Itoa(_43014_i));
					_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				};
			}
			_iter_next_1cb0a4a77:;
			++it;
			_43014_i++;
			goto _iter_begin_1cb0a4a77;
		}
		_iter_end_1cb0a4a77:;
	};
	_1c804065e_doneIndent((*(_self_))._field_oc);
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1c7e5bde9_multiAssign(jule::Ptr<_1c7e58577_scopeCoder> _self_, jule::Ptr<_1b9b93798_MultiAssign> _44535_a) {
	{
		auto &_match_expr{ (*(_44535_a))._field_R };
		
		if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1cb0a9d8a:;
			{
				_1c7e5b5d0_mapLookupAssign(_self_, &(_44535_a));
				return;;
			}
		}
		_match_end_1cb0a9d35:;
	};
	{
		auto &_match_expr{ (*(_44535_a))._field_R };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1cb0aa330:;
			{
				_1c7e5b888_multiAssignTup(_self_, &(_44535_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1cb0a9a05:;
			{
				_1c7e5bb41_multiAssignFn(_self_, &(_44535_a));
			}
		}
		else {
			_case_begin_1cb0aa275:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:459:13"));;
			}
		}
		_match_end_1cb0aa220:;
	};
}



inline jule::Fn<void(void)> _1c7e5c23a_matchExpr(jule::Ptr<_1c7e58577_scopeCoder> _self_, jule::Ptr<_1b9b93e08_Match> _46333_m) {
	if ((!(_1b9c5d8da_IsConst((*(_46333_m))._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
		});;
	};
	if (((!(_1ec6872d1_IsBool((*((*(_46333_m))._field_Expr))._field_Constant.ptr()))) || (!(_1ec684bd5_ReadBool((*((*(_46333_m))._field_Expr))._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1c7e65ad4_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_46333_m))._field_Expr))._field_Model);
		});;
	};
	return nullptr;;
}



inline void _1c7e5c59d_case(jule::Ptr<_1c7e58577_scopeCoder> _self_, jule::Ptr<_1b9b93e08_Match> _47328_m, jule::Ptr<_1b9b94a41_Case> _47343_c) {
	if ((((*(_47343_c))._field_Exprs.len() != 0LL) && (!((*(_47328_m))._field_Comptime)))) {
		if ((((*(_47328_m))._field_Cases.len() > 0LL) && ((*(_47328_m))._field_Cases[0LL] == _47343_c))) {
			_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		} else {
			_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
		};
		{
			auto expr = &((*(_47343_c))._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1cb0b1db4:;
			if (it != expr_end) {
				jule::I32 _48018_i = it - expr->begin();
				jule::Ptr<_1b9c5d016_Data> _48025_expr = *it;
				{
					{
						
						if ((!((*(_47328_m))._field_TypeMatch))) {
							_case_begin_1cb0164bc:;
							{
								jule::Fn<void(void)> _48321_caseExpr = _1c7e5c23a_matchExpr(_self_, _47328_m);;
								if (_1b9c5dc2b_GoodOperand((*(_47328_m))._field_Expr.ptr(), &(_48025_expr))) {
									if ((_48321_caseExpr != nullptr)) {
										_48321_caseExpr();
										_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(" == ", 4));
									};
									_1c7e65ad4_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_48025_expr))._field_Model);
								} else {
									_1c7e65ad4_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_48025_expr))._field_Model);
									if ((_48321_caseExpr != nullptr)) {
										_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(" == ", 4));
										_48321_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1cb0b3899:;
							{
								_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
								jule::Ptr<_1b9c8d1cd_TypeKind> _49925_tk = (*(_48025_expr))._field_Model.cast_ptr<_1b9c8d1cd_TypeKind>(&__jule_any_type83);;
								if ((_1b9c92138_Trait((*((*(_47328_m))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(".type_is(", 9));
									_1c7e631b9_boolean((*((*(_self_))._field_oc))._field_ec, (_1b9c90ab5_Sptr((*(_48025_expr))._field_Kind.ptr()) != nullptr));
									_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
									_1c8040263_write((*(_self_))._field_oc, _1ec6727b6_Itoa(static_cast<jule::I32>(_1c8041d47_findTypeOffset((*(_self_))._field_oc.ptr(), _1b9c92138_Trait((*((*(_47328_m))._field_Expr))._field_Kind.ptr()), (*(_48025_expr))._field_Kind))));
									_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								} else {
									jule::I32 _50725_j = _1c8040ede_pushAnyType((*(_self_))._field_oc, _49925_tk);;
									_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(".type == &__jule_any_type", 25));
									_1c8040263_write((*(_self_))._field_oc, _1ec6727b6_Itoa(_50725_j));
								};
							}
						}
						_match_end_1cb0b37cd:;
					};
					if ((((*(_47343_c))._field_Exprs.len() - _48018_i) > 1LL)) {
						_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(" || ", 4));
					};
				}
				_iter_next_1cb0b1db4:;
				++it;
				_48018_i++;
				goto _iter_begin_1cb0b1db4;
			}
			_iter_end_1cb0b1db4:;
		};
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	} else if ((((*(_47328_m))._field_Default == _47343_c) && ((*(_47328_m))._field_Cases.len() != 0LL))) {
		_1c804085c_indent((*(_self_))._field_oc);
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("else ", 5));
	};
	_1c8040461_addIndent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, static__1c7e7e3c2_caseBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_47343_c))));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	if (((*((*(_47343_c))._field_Scope))._field_Stmts.len() > 0LL)) {
		_1c804085c_indent((*(_self_))._field_oc);
		_1c7e5e55b_scope(_self_, (*(_47343_c))._field_Scope);
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	};
	_1c804065e_doneIndent((*(_self_))._field_oc);
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1c7e5c856_matchSt(jule::Ptr<_1c7e58577_scopeCoder> _self_, jule::Ptr<_1b9b93e08_Match> _54131_m) {
	if ((((*(_54131_m))._field_Cases.len() == 0LL) && ((*(_54131_m))._field_Default == nullptr))) {
		return;;
	};
	if (((*(_54131_m))._field_Comptime && (((*(_54131_m))._field_Default == nullptr) || ((*((*((*(_54131_m))._field_Default))._field_Scope))._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1c8040461_addIndent((*(_self_))._field_oc);
	_1c804085c_indent((*(_self_))._field_oc);
	if (((!((*(_54131_m))._field_Comptime)) && (!(_1b9c5d8da_IsConst((*(_54131_m))._field_Expr.ptr()))))) {
		if ((_1ba83a9a0_Copy && _1c7e5ebcc_isCopyOptimizable(&((*(_54131_m))._field_Expr)))) {
			_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("auto &_match_expr{ ", 19));
		} else {
			_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("auto _match_expr{ ", 18));
		};
		_1c7e65ad4_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_54131_m))._field_Expr))._field_Model);
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(" };\n", 4));
		_1c804085c_indent((*(_self_))._field_oc);
	};
	if (((*(_54131_m))._field_Cases.len() > 0LL)) {
		{
			auto expr = &((*(_54131_m))._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1cb0cce46:;
			if (it != expr_end) {
				jule::Ptr<_1b9b94a41_Case> _56925_c = *it;
				{
					if ((_56925_c == nullptr)) {
						goto _iter_next_1cb0cce46;
					};
					_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1c804085c_indent((*(_self_))._field_oc);
					_1c7e5c59d_case(_self_, _54131_m, _56925_c);
				}
				_iter_next_1cb0cce46:;
				++it;
				goto _iter_begin_1cb0cce46;
			}
			_iter_end_1cb0cce46:;
		};
	};
	if (((*(_54131_m))._field_Default != nullptr)) {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1c7e5c59d_case(_self_, _54131_m, (*(_54131_m))._field_Default);
	};
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, static__1c7e7e108_matchEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_54131_m))));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1c804065e_doneIndent((*(_self_))._field_oc);
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1c7e5cb0e_fallSt(jule::Ptr<_1c7e58577_scopeCoder> _self_, jule::Ptr<_1b9b9513a_FallSt> _59626_f) {
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1c8040263_write((*(_self_))._field_oc, static__1c7e7e3c2_caseBegin((*(_59626_f))._field_DestCase));
}



inline void _1c7e5cdb7_breakSt(jule::Ptr<_1c7e58577_scopeCoder> _self_, jule::Ptr<_1b9b92368_BreakSt> _60127_b) {
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	if (((*(_60127_b))._field_It != 0LLU)) {
		_1c8040263_write((*(_self_))._field_oc, static__1c7e7d7ab_iterEnd((*(_60127_b))._field_It));
	} else {
		_1c8040263_write((*(_self_))._field_oc, static__1c7e7e108_matchEnd((*(_60127_b))._field_Mtch));
	};
}



inline void _1c7e5d170_setResult(jule::Ptr<_1c7e58577_scopeCoder> _self_, jule::Ptr<_1b9b954c0_RetSt> _61033_r) {
	if (((*((*((*((*(_61033_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = ", 21));
		_1c7e65ad4_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_61033_r))._field_Expr);
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		_1c804085c_indent((*(_self_))._field_oc);
		return;;
	};
	jule::Slice<jule::Ptr<_1b9c5d016_Data>> _61813_datas = (*((*(_61033_r))._field_Expr.cast_ptr<_1b9b46c24_TupleExprModel>(&__jule_any_type81)))._field_Datas;;
	{
		auto expr = &(_61813_datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb0dae65:;
		if (it != expr_end) {
			jule::I32 _61913_i = it - expr->begin();
			jule::Ptr<_1b9c5d016_Data> _61916_data = *it;
			{
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
				_1c8040263_write((*(_self_))._field_oc, _1ec6727b6_Itoa(_61913_i));
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1c7e65ad4_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_61916_data))._field_Model);
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				_1c804085c_indent((*(_self_))._field_oc);
			}
			_iter_next_1cb0dae65:;
			++it;
			_61913_i++;
			goto _iter_begin_1cb0dae65;
		}
		_iter_end_1cb0dae65:;
	};
}



inline void _1c7e5d428_retSt(jule::Ptr<_1c7e58577_scopeCoder> _self_, jule::Ptr<_1b9b954c0_RetSt> _62929_r) {
	if (_1b9b4e6dd_IsVoid((*((*(_62929_r))._field_Func))._field_Decl.ptr())) {
		if ((*((*((*(_62929_r))._field_Func))._field_Decl))._field_Exceptional) {
			_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional();", 31));
			return;;
		};
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("return;", 7));
		return;;
	} else if (((*((*((*((*(_62929_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 0LL)) {
		if ((*((*((*(_62929_r))._field_Func))._field_Decl))._field_Exceptional) {
			_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
			_1c8040263_write((*(_self_))._field_oc, _1c8054e15_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*((*(_62929_r))._field_Func))._field_Result));
			_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(">(jule::Any(), ", 15));
			_1c7e65ad4_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_62929_r))._field_Expr);
			_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
		} else {
			_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
			_1c7e65ad4_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_62929_r))._field_Expr);
			_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
		};
		return;;
	};
	if (((*(_62929_r))._field_Expr != nullptr)) {
		_1c7e5d170_setResult(_self_, _62929_r);
	};
	if ((*((*((*(_62929_r))._field_Func))._field_Decl))._field_Exceptional) {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
		_1c8059bc8_codeMut1((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), &((*((*(_62929_r))._field_Func))._field_Result));
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(">(jule::Any(), __jule_func_result);", 35));
	} else {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("return __jule_func_result;", 26));
	};
}



inline void _1c7e5d6d1_var(jule::Ptr<_1c7e58577_scopeCoder> _self_, jule::Ptr<_1b9c09611_Var> _66527_v) {
	if ((!((*(_66527_v))._field_Constant))) {
		_1c8047dd6_var((*(_self_))._field_oc, _66527_v);
	};
}



inline void _1c7e5d989_mutSlicing(jule::Ptr<_1c7e58577_scopeCoder> _self_, jule::Ptr<_1b9d8c695_MutSlicingExprModel> _67134_m) {
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1c7e65ad4_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_67134_m))._field_Expr);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(").mut_slice(", 12));
	if ((!(_22e08143a_Production))) {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1c8042463_locInfo((*(_self_))._field_oc, &((*(_67134_m))._field_Token));
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1c7e65ad4_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_67134_m))._field_Left);
	if (((*(_67134_m))._field_Right != nullptr)) {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1c7e65ad4_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_67134_m))._field_Right);
	};
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1c7e5dc42_swap(jule::Ptr<_1c7e58577_scopeCoder> _self_, jule::Ptr<_1b9d8b40d_SwapExprModel> _68828_m) {
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("std::swap(", 10));
	_1c7e65ad4_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_68828_m))._field_Left))._field_Model);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1c7e65ad4_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_68828_m))._field_Right))._field_Model);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1c7e5deea_st(jule::Ptr<_1c7e58577_scopeCoder> _self_, jule::Any _69726_st) {
	if ((_69726_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _69726_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1cb1058db:;
			{
				_1c7e5e55b_scope(_self_, _69726_st.cast_ptr<_1b9b8ecc2_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1cb10649c:;
			{
				_1c7e5d6d1_var(_self_, _69726_st.cast_ptr<_1b9c09611_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1cb106513:;
			{
				_1c7e74c14_model((*((*(_self_))._field_oc))._field_ec, (*(_69726_st.cast_ptr<_1b9c5d016_Data>(&__jule_any_type24)))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1cb106579:;
			{
				_1c7e59b83_conditional(_self_, _69726_st.cast_ptr<_1b9b9090a_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1cb1065e0:;
			{
				_1c7e59e3b_infIter(_self_, _69726_st.cast_ptr<_1b9b90c07_InfIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1cb106656:;
			{
				_1c7e5a1e4_whileIter(_self_, _69726_st.cast_ptr<_1b9b911ad_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1cb1066bc:;
			{
				_1c7e5a49c_rangeIter(_self_, _69726_st.cast_ptr<_1b9b91b09_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1cb106733:;
			{
				_1c7e5a755_cont(_self_, _69726_st.cast_ptr<_1b9b91e8e_ContSt>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1cb106799:;
			{
				_1c7e5aa0d_label(_self_, _69726_st.cast_ptr<_1b9b92665_Label>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1cb106810:;
			{
				_1c7e5acb6_gotoSt(_self_, _69726_st.cast_ptr<_1b9b92a3e_GotoSt>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1cb106876:;
			{
				_1c7e5b06e_postfix(_self_, _69726_st.cast_ptr<_1b9b92e18_Postfix>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1cb1068dc:;
			{
				_1c7e5b327_assign(_self_, _69726_st.cast_ptr<_1b9b933be_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1cb106953:;
			{
				_1c7e5bde9_multiAssign(_self_, _69726_st.cast_ptr<_1b9b93798_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1cb1069b9:;
			{
				_1c7e5c856_matchSt(_self_, _69726_st.cast_ptr<_1b9b93e08_Match>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1cb106a30:;
			{
				_1c7e5cb0e_fallSt(_self_, _69726_st.cast_ptr<_1b9b9513a_FallSt>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1cb106a96:;
			{
				_1c7e5cdb7_breakSt(_self_, _69726_st.cast_ptr<_1b9b92368_BreakSt>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1cb106b1d:;
			{
				_1c7e5d428_retSt(_self_, _69726_st.cast_ptr<_1b9b954c0_RetSt>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1cb106b95:;
			{
				_1c7e726e5_pushToSlice((*((*(_self_))._field_oc))._field_ec, _69726_st.cast_ptr<_1b9d8d1bd_PushToSliceExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1cb106c1c:;
			{
				_1c7e7299d_appendToSlice((*((*(_self_))._field_oc))._field_ec, _69726_st.cast_ptr<_1b9d8d597_AppendToSliceExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1cb106c94:;
			{
				_1c7e5d989_mutSlicing(_self_, _69726_st.cast_ptr<_1b9d8c695_MutSlicingExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1cb106d1b:;
			{
				_1c7e5dc42_swap(_self_, _69726_st.cast_ptr<_1b9d8b40d_SwapExprModel>(&__jule_any_type123));
			}
		}
		else {
			_case_begin_1cb105996:;
			{
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1cb105545:;
	};
}



inline void _1c7e5e2a3_scopeStmts(jule::Ptr<_1c7e58577_scopeCoder> _self_, jule::Ptr<_1b9b8ecc2_Scope>* _74935_s) {
	{
		auto expr = &((*((*(_74935_s))))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb10834a:;
		if (it != expr_end) {
			jule::Any _75021_st = *it;
			{
				_1c804085c_indent((*(_self_))._field_oc);
				_1c7e5deea_st(_self_, _75021_st);
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1cb10834a:;
			++it;
			goto _iter_begin_1cb10834a;
		}
		_iter_end_1cb10834a:;
	};
}



inline void _1c7e5e55b_scope(jule::Ptr<_1c7e58577_scopeCoder> _self_, jule::Ptr<_1b9b8ecc2_Scope> _75829_s) {
	_1c8040461_addIndent((*(_self_))._field_oc);
	if ((*(_75829_s))._field_Deferred) {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("__JULE_DEFER(", 13));
	};
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1c7e5e2a3_scopeStmts(_self_, &(_75829_s));
	_1c804065e_doneIndent((*(_self_))._field_oc);
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if ((*(_75829_s))._field_Deferred) {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
	};
}



inline void _1c7e5e814_funcScope(jule::Ptr<_1c7e58577_scopeCoder> _self_, jule::Ptr<_1b9b5216e_FnIns> _77433_f) {
	if (((*(_77433_f))._field_Scope == nullptr)) {
		return;;
	};
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1c8040461_addIndent((*(_self_))._field_oc);
	if ((!(_1b9b4e6dd_IsVoid((*(_77433_f))._field_Decl.ptr())))) {
		jule::Ptr<_1b9c9ad9a_Tuple> _78117_tup = _1b9c92655_Tup((*(_77433_f))._field_Result.ptr());;
		if ((_78117_tup != nullptr)) {
			_1c804085c_indent((*(_self_))._field_oc);
			_1c8059502_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), _78117_tup);
			_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result;\n", 21));
			{
				auto expr = &((*(_78117_tup))._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1cb11c271:;
				if (it != expr_end) {
					jule::I32 _78622_i = it - expr->begin();
					jule::Ptr<_1b9c8d1cd_TypeKind> _78629_t = *it;
					{
						if (_1c805c0c6_shouldInitialized(&(_78629_t))) {
							_1c804085c_indent((*(_self_))._field_oc);
							_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1c8040263_write((*(_self_))._field_oc, _1ec6727b6_Itoa(_78622_i));
							_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1c7e74ebc_initExpr((*((*(_self_))._field_oc))._field_ec, _78629_t);
							_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
						};
					}
					_iter_next_1cb11c271:;
					++it;
					_78622_i++;
					goto _iter_begin_1cb11c271;
				}
				_iter_end_1cb11c271:;
			};
		} else if (((*((*((*(_77433_f))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
			_1c804085c_indent((*(_self_))._field_oc);
			_1c8040263_write((*(_self_))._field_oc, _1c8054e15_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_77433_f))._field_Result));
			_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result", 19));
			if (_1c805c0c6_shouldInitialized(&((*(_77433_f))._field_Result))) {
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1c7e74ebc_initExpr((*((*(_self_))._field_oc))._field_ec, (*(_77433_f))._field_Result);
			};
			_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		};
	};
	_1c7e5e2a3_scopeStmts(_self_, &((*(_77433_f))._field_Scope));
	if (((*((*(_77433_f))._field_Decl))._field_Exceptional && _1b9b4e6dd_IsVoid((*(_77433_f))._field_Decl.ptr()))) {
		_1c804085c_indent((*(_self_))._field_oc);
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional();\n", 32));
	};
	_1c804065e_doneIndent((*(_self_))._field_oc);
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}





std::ostream &operator<<(std::ostream &_Stream, _1c7e58577_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c7e62790_exprCoder> static__1c7e62b58_new(jule::Ptr<_1c803eaae_ObjectCoder>* _10724_oc) {
	return jule::new_ptr<_1c7e62790_exprCoder>(_1c7e62790_exprCoder{._field_oc=(*(_10724_oc))});;
}



inline void _1c7e62e11_string(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1ec682ce3_Const>* _11327_c) {
	jule::Str _1149_content = _1ec684e6b_ReadStr((*(_11327_c)).ptr());;
	if ((_1149_content.len() == 0LL)) {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		return;;
	};
	jule::Str _1199_len = _1ec6724ec_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_1149_content.len())), 10LL);;
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("::lit(", 6));
	_1c7e75cae_cstrLit(&((*((*(_self_))._field_oc))._field_Obj), _1149_content);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1c8040263_write((*(_self_))._field_oc, _1199_len);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1c7e631b9_boolean(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Bool _12827_b) {
	if (_12827_b) {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("true", 4));
	} else {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
	};
}



inline void _1c7e633b7_nilLit(jule::Ptr<_1c7e62790_exprCoder> _self_) {
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
}



inline jule::Bool _1c7e63708_ftoaSpecialCases(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::F64* _14037_x) {
	{
		
		if (_1ec626281_IsNaN((*(_14037_x)))) {
			_case_begin_1cb141c68:;
			{
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("NAN", 3));
			}
		}
		else if (_1ec62688b_IsInf((*(_14037_x)), 1LL)) {
			_case_begin_1cb141ce0:;
			{
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("INFINITY", 8));
			}
		}
		else if (_1ec62688b_IsInf((*(_14037_x)), -1LL)) {
			_case_begin_1cb141d67:;
			{
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1cb141b8b:;
			{
				return false;;
			}
		}
		_match_end_1cb141ac0:;
	};
	return true;;
}



inline void _1c7e639b1_float32(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1ec682ce3_Const>* _15428_c) {
	jule::F64 _1559_x = _1ec6859a5_AsF64((*(_15428_c)).ptr());;
	if (_1c7e63708_ftoaSpecialCases(_self_, &(_1559_x))) {
		return;;
	};
	{
		
		if ((_1559_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1cb145244:;
			{
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("jule::MAX_F32", 13));
			}
		}
		else if ((_1559_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1cb144e8b:;
			{
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1cb144e25:;
			{
				_1c7e76155_ftoa(&((*((*(_self_))._field_oc))._field_Obj), _1559_x, 32LL);
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("f", 1));
			}
		}
		_match_end_1cb144be4:;
	};
}



inline void _1c7e63c69_float64(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1ec682ce3_Const>* _17328_c) {
	jule::F64 _1749_x = _1ec6859a5_AsF64((*(_17328_c)).ptr());;
	if (_1c7e63708_ftoaSpecialCases(_self_, &(_1749_x))) {
		return;;
	};
	{
		
		if ((_1749_x == jule::MAX_F64)) {
			_case_begin_1cb148654:;
			{
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("jule::MAX_F64", 13));
			}
		}
		else if ((_1749_x == jule::MIN_F64)) {
			_case_begin_1cb148dd5:;
			{
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1cb148335:;
			{
				_1c7e76155_ftoa(&((*((*(_self_))._field_oc))._field_Obj), _1749_x, 64LL);
			}
		}
		_match_end_1cb148104:;
	};
}



inline void _1c7e64022_constant(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1ec682ce3_Const> _19132_c) {
	{
		
		if (_1ec687567_IsStr(_19132_c.ptr())) {
			_case_begin_1cb14aa1e:;
			{
				_1c7e62e11_string(_self_, &(_19132_c));
			}
		}
		else if (_1ec6872d1_IsBool(_19132_c.ptr())) {
			_case_begin_1cb14a601:;
			{
				_1c7e631b9_boolean(_self_, _1ec684bd5_ReadBool(_19132_c.ptr()));
			}
		}
		else if (_1ec6877ed_IsF64(_19132_c.ptr())) {
			_case_begin_1cb14a667:;
			{
				{
					
					if ((*(_19132_c))._field_Kind.equal("f32", 3)) {
						_case_begin_1cb14d1c5:;
						{
							_1c7e639b1_float32(_self_, &(_19132_c));
						}
					}
					else {
						_case_begin_1cb14cc41:;
						{
							_1c7e63c69_float64(_self_, &(_19132_c));
						}
					}
					_match_end_1cb14cb86:;
				};
			}
		}
		else if (_1ec686cb4_IsI64(_19132_c.ptr())) {
			_case_begin_1cb14a6cd:;
			{
				_1c7e76441_itoa(&((*((*(_self_))._field_oc))._field_Obj), static_cast<jule::I64>(_1ec6846b8_ReadI64(_19132_c.ptr())));
			}
		}
		else if (_1ec68704a_IsU64(_19132_c.ptr())) {
			_case_begin_1cb14a744:;
			{
				_1c7e7672c_utoa(&((*((*(_self_))._field_oc))._field_Obj), static_cast<jule::U64>(_1ec68494e_ReadU64(_19132_c.ptr())));
			}
		}
		else if (_1ec687a84_IsNil(_19132_c.ptr())) {
			_case_begin_1cb14b206:;
			{
				_1c7e633b7_nilLit(_self_);
			}
		}
		else {
			_case_begin_1cb14a58a:;
			{
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1cb14a4be:;
	};
}



inline void _1c7e64440_divByZeroBinary(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b032eb_Token>* _21536_op, jule::Ptr<_1b9b4102b_OperandExprModel>* _21553_l, jule::Ptr<_1b9b4102b_OperandExprModel>* _21580_r) {
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("jule::", 6));
	{
		auto &_match_expr{ (*((*(_21536_op))))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_1cb151daa:;
			{
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("div(", 4));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU) || _match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1cb151e32:;
			{
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("mod(", 4));
			}
		}
		_match_end_1cb151d44:;
	};
	if ((!(_22e08143a_Production))) {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1c8042463_locInfo((*(_self_))._field_oc, _21536_op);
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("\",", 2));
	};
	_1c7e65ad4_possibleRefExpr(_self_, (*((*(_21553_l))))._field_Model);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_1c7e65ad4_possibleRefExpr(_self_, (*((*(_21580_r))))._field_Model);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1c7e646e8_unsafeBinary(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b41526_BinopExprModel> _23736_m) {
	if ((((*((*(_23736_m))._field_Op))._field_Id == static_cast<jule::U32>(50LLU)) || ((*((*(_23736_m))._field_Op))._field_Id == static_cast<jule::U32>(51LLU)))) {
		if (_1c7e77189_isAny(&((*((*(_23736_m))._field_Left))._field_Kind))) {
			if (((!(_1b9c8e2ab_IsNil((*((*(_23736_m))._field_Right))._field_Kind.ptr()))) && (!(_1c7e77189_isAny(&((*((*(_23736_m))._field_Right))._field_Kind)))))) {
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				if (((*((*(_23736_m))._field_Op))._field_Id == static_cast<jule::U32>(51LLU))) {
					_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
				};
				jule::I32 _24721_i = _1c8040ede_pushAnyType((*(_self_))._field_oc, (*((*(_23736_m))._field_Right))._field_Kind);;
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("__jule_any_type", 15));
				_1c8040263_write((*(_self_))._field_oc, _1ec6727b6_Itoa(_24721_i));
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("_compare(", 9));
				_1c7e65ad4_possibleRefExpr(_self_, (*((*(_23736_m))._field_Left))._field_Model);
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1c7e65ad4_possibleRefExpr(_self_, (*((*(_23736_m))._field_Right))._field_Model);
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			};
		};
	};
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1c7e65ad4_possibleRefExpr(_self_, (*((*(_23736_m))._field_Left))._field_Model);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1c8040263_write((*(_self_))._field_oc, (*((*(_23736_m))._field_Op))._field_Kind);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1c7e65ad4_possibleRefExpr(_self_, (*((*(_23736_m))._field_Right))._field_Model);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1c7e649a1_binary(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b41526_BinopExprModel> _26830_m) {
	{
		auto &_match_expr{ (*((*(_26830_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1cb167c17:;
			{
				if ((_1b9c91da2_Struct((*((*(_26830_m))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1c7e64440_divByZeroBinary(_self_, &((*(_26830_m))._field_Op), &((*(_26830_m))._field_Left), &((*(_26830_m))._field_Right));
					return;;
				};
			}
		}
		_match_end_1cb167b5c:;
	};
	_1c7e646e8_unsafeBinary(_self_, _26830_m);
}



inline void _1c7e64c59_var(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9c09611_Var> _28027_m) {
	if ((*(_28027_m))._field_Binded) {
		jule::Ptr<_1b9b17bd4_Directive> _28213_d = _1c805b944_findDirective(&((*(_28027_m))._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_28213_d != nullptr)) {
			_1c8040263_write((*(_self_))._field_oc, _1c804bd52_concatAllParts((*(_28213_d))._field_Args));
			_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	_1c8040263_write((*(_self_))._field_oc, static__1c7e7d228_var(_28027_m));
}



inline void _1c7e65012_structureIns(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b3c137_StructIns> _29136_m) {
	_1c8040263_write((*(_self_))._field_oc, _1c80532ba_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), _29136_m));
}



inline void _1c7e652ba_unary(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b41900_UnaryExprModel> _29529_m) {
	{
		auto &_match_expr{ (*((*(_29529_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1cb16dde9:;
			{
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("(~(", 3));
				_1c7e65ad4_possibleRefExpr(_self_, (*((*(_29529_m))._field_Expr))._field_Model);
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1cb16de71:;
			{
				if ((_22e08143a_Production || (_1b9c90ab5_Sptr((*((*(_29529_m))._field_Expr))._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1cb16dd2d;
				};
				_1c7e65ad4_possibleRefExpr(_self_, (*((*(_29529_m))._field_Expr))._field_Model);
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(".get(\"", 6));
				_1c8042463_locInfo((*(_self_))._field_oc, &((*(_29529_m))._field_Op));
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("\")", 2));
				return;;
			}
		}
		_match_end_1cb16dd2d:;
	};
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1c8040263_write((*(_self_))._field_oc, (*((*(_29529_m))._field_Op))._field_Kind);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1c7e65ad4_possibleRefExpr(_self_, (*((*(_29529_m))._field_Expr))._field_Model);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1c7e65573_structureLit(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b422c4_StructLitExprModel> _31936_m) {
	if ((*((*((*(_31936_m))._field_Strct))._field_Decl))._field_Binded) {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	};
	_1c8040263_write((*(_self_))._field_oc, static__1c7e7cb95_structureIns(&((*(_31936_m))._field_Strct)));
	if ((*((*((*(_31936_m))._field_Strct))._field_Decl))._field_Binded) {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	if (((*(_31936_m))._field_Args.len() > 0LL)) {
		_julec_label_1cb178c39:;
		{
			auto expr = &((*((*(_31936_m))._field_Strct))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1cb178d6b:;
			if (it != expr_end) {
				jule::I32 _33217_i = it - expr->begin();
				jule::Ptr<_1b9b3b587_FieldIns> _33220_f = *it;
				{
					{
						auto expr = &((*(_31936_m))._field_Args);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1cb179be6:;
						if (it != expr_end) {
							jule::Ptr<_1b9b41e2d_StructArgExprModel> _33329_arg = *it;
							{
								if (((*(_33329_arg))._field_Field == _33220_f)) {
									_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
									_1c8040263_write((*(_self_))._field_oc, static__1c7e7ce5e_field(&((*((*(_33329_arg))._field_Field))._field_Decl)));
									_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
									_1c7e65ad4_possibleRefExpr(_self_, (*((*(_33329_arg))._field_Expr))._field_Model);
									if ((((*((*(_31936_m))._field_Strct))._field_Fields.len() - _33217_i) > 1LL)) {
										_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
									};
									goto _iter_next_1cb178d6b;
								};
							}
							_iter_next_1cb179be6:;
							++it;
							goto _iter_begin_1cb179be6;
						}
						_iter_end_1cb179be6:;
					};
				}
				_iter_next_1cb178d6b:;
				++it;
				_33217_i++;
				goto _iter_begin_1cb178d6b;
			}
			_iter_end_1cb178d6b:;
		};
	};
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1c7e6582b_allocStructure(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b425c1_AllocStructLitExprModel> _35038_m) {
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_1c8040263_write((*(_self_))._field_oc, static__1c7e7cb95_structureIns(&((*((*(_35038_m))._field_Lit))._field_Strct)));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1c7e65573_structureLit(_self_, (*(_35038_m))._field_Lit);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1c7e65ad4_possibleRefExpr(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Any _35835_expr) {
	{
		auto &_match_expr{ _35835_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1cb1823b3:;
			{
				jule::Ptr<_1b9c09611_Var> _36113_v = _35835_expr.cast_ptr<_1b9c09611_Var>(&__jule_any_type8);;
				if ((*(_36113_v))._field_Reference) {
					_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("(*(", 3));
					_1c7e74c14_model(_self_, _35835_expr);
					_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
					return;;
				};
			}
		}
		_match_end_1cb18235d:;
	};
	_1c7e74c14_model(_self_, _35835_expr);
}



inline void _1c7e66002_castTraitFromTrait(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b42b54_CastingExprModel>* _37243_m, jule::Ptr<_1b9b62514_Trait> _37269_t1, jule::Ptr<_1b9b62514_Trait> _37285_t2) {
	_1c7e65ad4_possibleRefExpr(_self_, (*((*(_37243_m))))._field_Expr);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(".mask<", 6));
	_1c8040263_write((*(_self_))._field_oc, static__1c7e7c348_traitDecl(_37269_t1));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1c80421aa_pushAndWriteMaskMapper((*(_self_))._field_oc, _37269_t1, _37285_t2);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1c7e662aa_casting(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b42b54_CastingExprModel> _38731_m) {
	{
		
		if (_1c7e77189_isAny(&((*(_38731_m))._field_Kind))) {
			_case_begin_1cb187918:;
			{
				if (_1b9c8e2ab_IsNil((*(_38731_m))._field_ExprKind.ptr())) {
					_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("jule::Any()", 11));
					return;;
				};
				if ((_1b9c91368_TypeEnum((*(_38731_m))._field_ExprKind.ptr()) != nullptr)) {
					_1c7e65ad4_possibleRefExpr(_self_, (*(_38731_m))._field_Expr);
					return;;
				};
				jule::I32 _39813_i = _1c8040ede_pushAnyType((*(_self_))._field_oc, (*(_38731_m))._field_ExprKind);;
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("jule::Any(", 10));
				{
					auto &_match_expr{ (*(_38731_m))._field_Expr };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1cb18a9a4:;
						{
							jule::Ptr<_1b9c95ca7_Prim> _40217_prim = _1b9c9082e_Prim((*(_38731_m))._field_ExprKind.ptr());;
							if (((_40217_prim != nullptr) && _1ec6820de_IsInt((*(_40217_prim))._field_Kind))) {
								_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
								_1c8040263_write((*(_self_))._field_oc, _1c805053c_prim((*((*(_self_))._field_oc))._field_tc.ptr(), _40217_prim));
								_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
								_1c7e65ad4_possibleRefExpr(_self_, (*(_38731_m))._field_Expr);
								_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1cb18b323;
							};
							goto _case_begin_1cb18b378;
						}
					}
					else {
						_case_begin_1cb18b378:;
						{
							_1c7e65ad4_possibleRefExpr(_self_, (*(_38731_m))._field_Expr);
						}
					}
					_match_end_1cb18b323:;
				};
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
				_1c8040263_write((*(_self_))._field_oc, _1ec6727b6_Itoa(_39813_i));
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if (_1c7e77189_isAny(&((*(_38731_m))._field_ExprKind))) {
			_case_begin_1cb187990:;
			{
				_1c7e65ad4_possibleRefExpr(_self_, (*(_38731_m))._field_Expr);
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
				if ((_1b9c90ab5_Sptr((*(_38731_m))._field_Kind.ptr()) != nullptr)) {
					_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1c8040263_write((*(_self_))._field_oc, _1c8054e15_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_1b9c90ab5_Sptr((*(_38731_m))._field_Kind.ptr())))._field_Elem));
				} else {
					_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1c8040263_write((*(_self_))._field_oc, _1c8054e15_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_38731_m))._field_Kind));
				};
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_22e08143a_Production))) {
					_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1c8042463_locInfo((*(_self_))._field_oc, &((*(_38731_m))._field_Token));
					_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("&__jule_any_type", 16));
				_1c8040263_write((*(_self_))._field_oc, _1ec6727b6_Itoa(static_cast<jule::I32>(_1c8040ede_pushAnyType((*(_self_))._field_oc, (*(_38731_m))._field_Kind))));
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1b9c90d4b_Ptr((*(_38731_m))._field_ExprKind.ptr()) != nullptr) || (_1b9c90d4b_Ptr((*(_38731_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb187a17:;
			{
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1c8040263_write((*(_self_))._field_oc, _1c8054e15_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_38731_m))._field_Kind));
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
				_1c7e65ad4_possibleRefExpr(_self_, (*(_38731_m))._field_Expr);
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if ((_1b9c92138_Trait((*(_38731_m))._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1cb187a8e:;
			{
				if ((_1b9c92138_Trait((*(_38731_m))._field_Kind.ptr()) != nullptr)) {
					_1c7e66002_castTraitFromTrait(_self_, &(_38731_m), _1b9c92138_Trait((*(_38731_m))._field_Kind.ptr()), _1b9c92138_Trait((*(_38731_m))._field_ExprKind.ptr()));
					return;;
				};
				_1c7e65ad4_possibleRefExpr(_self_, (*(_38731_m))._field_Expr);
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
				if ((_1b9c90ab5_Sptr((*(_38731_m))._field_Kind.ptr()) != nullptr)) {
					_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1c8040263_write((*(_self_))._field_oc, _1c8054e15_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_1b9c90ab5_Sptr((*(_38731_m))._field_Kind.ptr())))._field_Elem));
				} else {
					_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1c8040263_write((*(_self_))._field_oc, _1c8054e15_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_38731_m))._field_Kind));
				};
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_22e08143a_Production))) {
					_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1c8042463_locInfo((*(_self_))._field_oc, &((*(_38731_m))._field_Token));
					_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1c8040263_write((*(_self_))._field_oc, _1ec6727b6_Itoa(static_cast<jule::I32>(_1c8041d47_findTypeOffset((*(_self_))._field_oc.ptr(), _1b9c92138_Trait((*(_38731_m))._field_ExprKind.ptr()), (*(_38731_m))._field_Kind))));
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1b9c92138_Trait((*(_38731_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb187b16:;
			{
				_1c8040263_write((*(_self_))._field_oc, _1c8054e15_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_38731_m))._field_Kind));
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1c7e65ad4_possibleRefExpr(_self_, (*(_38731_m))._field_Expr);
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1c8040263_write((*(_self_))._field_oc, _1ec6727b6_Itoa(static_cast<jule::I32>(_1c8041d47_findTypeOffset((*(_self_))._field_oc.ptr(), _1b9c92138_Trait((*(_38731_m))._field_Kind.ptr()), (*(_38731_m))._field_ExprKind))));
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1cb1877c5:;
	};
	jule::Ptr<_1b9c95ca7_Prim> _4799_prim = _1b9c9082e_Prim((*(_38731_m))._field_Kind.ptr());;
	jule::Ptr<_1b9c95ca7_Prim> _4809_eprim = _1b9c9082e_Prim((*(_38731_m))._field_ExprKind.ptr());;
	if ((((_4809_eprim != nullptr) && (_4799_prim != nullptr)) && _1b9c9923e_IsStr(_4799_prim.ptr()))) {
		if (_1b9c9769e_IsU8(_4809_eprim.ptr())) {
			_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_byte(", 21));
		} else {
			_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_rune(", 21));
		};
		_1c7e65ad4_possibleRefExpr(_self_, (*(_38731_m))._field_Expr);
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
	_1c8040263_write((*(_self_))._field_oc, _1c8054e15_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_38731_m))._field_Kind));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1c7e65ad4_possibleRefExpr(_self_, (*(_38731_m))._field_Expr);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1c7e66563_models(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Slice<jule::Any> _49830_args) {
	if ((_49830_args.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &(_49830_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb1b31c4:;
		if (it != expr_end) {
			jule::I32 _50214_i = it - expr->begin();
			jule::Any _50221_a = *it;
			{
				_1c7e65ad4_possibleRefExpr(_self_, _50221_a);
				if (((_49830_args.len() - _50214_i) > 1LL)) {
					_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
				};
			}
			_iter_next_1cb1b31c4:;
			++it;
			_50214_i++;
			goto _iter_begin_1cb1b31c4;
		}
		_iter_end_1cb1b31c4:;
	};
}



inline void _1c7e6681b_args(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b43506_FnCallExprModel>* _51029_m) {
	jule::I32 _51113_j = 0LL;;
	if (((((*((*((*(_51029_m))))._field_Func))._field_Owner != nullptr) && (!((*((*((*((*(_51029_m))))._field_Func))._field_Decl))._field_Statically))) || (((*((*((*(_51029_m))))._field_Func))._field_Params.len() > 0LL) && _1b9b4cdb2_IsSelf((*((*((*((*(_51029_m))))._field_Func))._field_Params[0LL]))._field_Decl.ptr())))) {
		(_51113_j)++;
	};
	{
		auto expr = &((*((*(_51029_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb1b5ec9:;
		if (it != expr_end) {
			jule::I32 _51613_i = it - expr->begin();
			jule::Any _51616_arg = *it;
			{
				jule::Ptr<_1b9b511c3_ParamIns> _51713_p = (*((*((*(_51029_m))))._field_Func))._field_Params[_51113_j];;
				if ((((*(_51713_p))._field_Decl != nullptr) && (*((*(_51713_p))._field_Decl))._field_Reference)) {
					{
						auto &_match_expr{ _51616_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1cb1b8b47:;
							{
								jule::Ptr<_1b9c09611_Var> _52121_v = _51616_arg.cast_ptr<_1b9c09611_Var>(&__jule_any_type8);;
								if ((*(_52121_v))._field_Reference) {
									_1c7e74c14_model(_self_, _51616_arg);
									goto _julec_label_1cb1bbe7a;
								};
							}
						}
						_match_end_1cb1b8ae2:;
					};
					_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1c7e74c14_model(_self_, _51616_arg);
					_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
					goto _julec_label_1cb1bbe7a;
				};
				_1c7e65ad4_possibleRefExpr(_self_, _51616_arg);
				_julec_label_1cb1bbe7a:;
				if ((((*((*(_51029_m))))._field_Args.len() - _51613_i) > 1LL)) {
					_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				(_51113_j)++;
			}
			_iter_next_1cb1b5ec9:;
			++it;
			_51613_i++;
			goto _iter_begin_1cb1b5ec9;
		}
		_iter_end_1cb1b5ec9:;
	};
}



inline void _1c7e66ac4_modelForCall(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Any _54136_expr) {
	{
		auto &_match_expr{ _54136_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1cb1bd82d:;
			{
				_1c7e69d08_funcIns(_self_, _54136_expr.cast_ptr<_1b9b5216e_FnIns>(&__jule_any_type7));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1cb1bd8a5:;
			{
				jule::Ptr<_1b9b46097_StructSubIdentExprModel> _54717_ssie = _54136_expr.cast_ptr<_1b9b46097_StructSubIdentExprModel>(&__jule_any_type97);;
				if (((*(_54717_ssie))._field_Method != nullptr)) {
					_1c7e69d08_funcIns(_self_, (*(_54717_ssie))._field_Method);
					return;;
				};
			}
		}
		_match_end_1cb1bd7b7:;
	};
	_1c7e65ad4_possibleRefExpr(_self_, _54136_expr);
}



inline void _1c7e66d7c_pushCallInf(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b43506_FnCallExprModel>* _55632_m) {
	if ((_22e08143a_Production || (!((*((*((*(_55632_m))))._field_Func))._field_Anon)))) {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		return;;
	};
	if ((*((*((*(_55632_m))))._field_Func))._field_Anon) {
		{
			auto &_match_expr{ (*((*(_55632_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1cb1c214a:;
				{
					if ((*((*((*((*((*((*(_55632_m))))._field_Expr.cast_ptr<_1b9b46097_StructSubIdentExprModel>(&__jule_any_type97)))._field_Field))._field_Decl))._field_Owner))._field_Binded) {
						_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
						return;;
					};
				}
			}
			_match_end_1cb1c20e5:;
		};
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(".call", 5));
	};
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("(\"", 2));
	_1c8042463_locInfo((*(_self_))._field_oc, &((*((*(_55632_m))))._field_Token));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	if (((*((*(_55632_m))))._field_Args.len() != 0LL)) {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	};
}



inline jule::Bool _1c7e671bd_isWrapped(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b43506_FnCallExprModel>* _57934_m) {
	if ((((!(_1b9b53604_IsBuiltin((*((*(_57934_m))))._field_Func.ptr()))) && ((*((*((*((*(_57934_m))))._field_Func))._field_Decl))._field_Params.len() > 0LL)) && _1b9b4cdb2_IsSelf((*((*((*((*(_57934_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_57934_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1cb1c6ddb:;
				{
					jule::Ptr<_1b9b46097_StructSubIdentExprModel> _58321_ssie = (*((*(_57934_m))))._field_Expr.cast_ptr<_1b9b46097_StructSubIdentExprModel>(&__jule_any_type97);;
					{
						
						if (_1b9b4d148_IsRef((*((*((*((*(_57934_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()) || (_1b9c90ab5_Sptr((*((*(_58321_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1cb1c887c:;
							{
								goto _match_end_1cb1c7b23;
							}
						}
						else {
							_case_begin_1cb1c7b89:;
							{
								if ((_1b9c91da2_Struct((*((*(_58321_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									if ((!((*((*(_58321_ssie))._field_Expr))._field_Lvalue))) {
										_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("({ auto _wrap_copy = ", 21));
										_1c7e74c14_model(_self_, (*((*(_58321_ssie))._field_Expr))._field_Model);
										_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1cb1c7b23:;
					};
				}
			}
			_match_end_1cb1c6d86:;
		};
	};
	return false;;
}



inline void _1c7e67476_pureFuncCall(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b43506_FnCallExprModel>* _60337_m) {
	jule::Bool _6049_wrapped = _1c7e671bd_isWrapped(_self_, _60337_m);;
	_1c7e66ac4_modelForCall(_self_, (*((*(_60337_m))))._field_Expr);
	if ((!(_1b9b53604_IsBuiltin((*((*(_60337_m))))._field_Func.ptr())))) {
		if (((*((*((*((*(_60337_m))))._field_Func))._field_Decl))._field_Binded && ((*((*((*(_60337_m))))._field_Func))._field_Generics.len() > 0LL))) {
			if ((!(_1c805bd0c_hasDirective(&((*((*((*((*(_60337_m))))._field_Func))._field_Decl))._field_Directives), jule::Str::lit("cdef", 4))))) {
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("<", 1));
				{
					auto expr = &((*((*((*(_60337_m))))._field_Func))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cb1cebe6:;
					if (it != expr_end) {
						jule::I32 _61026_i = it - expr->begin();
						jule::Ptr<_1b9c8b7e7_InsGeneric> _61033_g = *it;
						{
							_1c8040263_write((*(_self_))._field_oc, _1c8054e15_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_61033_g))._field_Kind));
							if ((((*((*((*(_60337_m))))._field_Func))._field_Generics.len() - _61026_i) > 1LL)) {
								_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
							};
						}
						_iter_next_1cb1cebe6:;
						++it;
						_61026_i++;
						goto _iter_begin_1cb1cebe6;
					}
					_iter_end_1cb1cebe6:;
				};
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(">", 1));
			};
		};
	};
	_1c7e66d7c_pushCallInf(_self_, _60337_m);
	jule::Bool _62113_locinfo = false;;
	if ((((!(_1b9b53604_IsBuiltin((*((*(_60337_m))))._field_Func.ptr()))) && ((*((*((*((*(_60337_m))))._field_Func))._field_Decl))._field_Params.len() > 0LL)) && _1b9b4cdb2_IsSelf((*((*((*((*(_60337_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_60337_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1cb1d5405:;
				{
					jule::Ptr<_1b9b46097_StructSubIdentExprModel> _62521_ssie = (*((*(_60337_m))))._field_Expr.cast_ptr<_1b9b46097_StructSubIdentExprModel>(&__jule_any_type97);;
					{
						
						if (_1b9b4d148_IsRef((*((*((*((*(_60337_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr())) {
							_case_begin_1cb1d996a:;
							{
								_1c7e65ad4_possibleRefExpr(_self_, (*((*((*((*(_62521_ssie))._field_Expr))._field_Model.cast_ptr<_1b9b41900_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
							}
						}
						else if ((_1b9c90ab5_Sptr((*((*(_62521_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1cb1d6291:;
							{
								_1c7e65ad4_possibleRefExpr(_self_, (*((*((*((*(_62521_ssie))._field_Expr))._field_Model.cast_ptr<_1b9b41900_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
								_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(".ptr(", 5));
								if ((!(_22e08143a_Production))) {
									_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
									_1c8042463_locInfo((*(_self_))._field_oc, &((*((*(_60337_m))))._field_Token));
									_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
								};
								_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
							}
						}
						else {
							_case_begin_1cb1d622a:;
							{
								if ((_1b9c91da2_Struct((*((*(_62521_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ (*((*(_62521_ssie))._field_Expr))._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_1cb1d6a00:;
											{
												jule::Ptr<_1b9c09611_Var> _64429_v = (*((*(_62521_ssie))._field_Expr))._field_Model.cast_ptr<_1b9c09611_Var>(&__jule_any_type8);;
												if ((*(_64429_v))._field_Reference) {
													goto _match_end_1cb1d701c;
												};
												goto _case_begin_1cb1d7072;
											}
										}
										else {
											_case_begin_1cb1d7072:;
											{
												_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
											}
										}
										_match_end_1cb1d701c:;
									};
								};
								if (_6049_wrapped) {
									_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("_wrap_copy", 10));
								} else if ((_1b9c90d4b_Ptr((*((*(_62521_ssie))._field_Expr))._field_Kind.ptr()) == nullptr)) {
									_1c7e74c14_model(_self_, (*((*(_62521_ssie))._field_Expr))._field_Model);
								} else {
									_1c7e65ad4_possibleRefExpr(_self_, (*((*((*((*(_62521_ssie))._field_Expr))._field_Model.cast_ptr<_1b9b41900_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
								};
							}
						}
						_match_end_1cb1d61b4:;
					};
					if (((*((*(_60337_m))))._field_Args.len() > 0LL)) {
						_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type96) {
				_case_begin_1cb1d547c:;
				{
					_1c7e65ad4_possibleRefExpr(_self_, (*((*((*(_60337_m))))._field_Expr.cast_ptr<_1b9b45706_TraitSubIdentExprModel>(&__jule_any_type96)))._field_Expr);
					if ((!(_22e08143a_Production))) {
						_62113_locinfo=true;
					};
					if (((*((*(_60337_m))))._field_Args.len() > 0LL)) {
						_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			_match_end_1cb1d538e:;
		};
	};
	_1c7e6681b_args(_self_, _60337_m);
	if (_62113_locinfo) {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(", \"", 3));
		_1c8042463_locInfo((*(_self_))._field_oc, &((*((*(_60337_m))))._field_Token));
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if (_6049_wrapped) {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	};
}



inline void _1c7e6772e_coFuncCall(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b43506_FnCallExprModel>* _68935_m) {
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1c8040461_addIndent((*(_self_))._field_oc);
	_23d16295d_StrBuilder _69213_head = static__23d162c7c_New(32LL);;
	_23d16b604_WriteStr(&_69213_head, jule::Str::lit("std::thread([", 13));
	if (((*((*((*(_68935_m))))._field_Func))._field_Owner != nullptr)) {
		_23d16b604_WriteStr(&_69213_head, jule::Str::lit("_self_", 6));
		if (((*((*(_68935_m))))._field_Args.len() > 0LL)) {
			_23d16b604_WriteStr(&_69213_head, jule::Str::lit(", ", 2));
		};
	};
	{
		auto expr = &((*((*(_68935_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb1eaa14:;
		if (it != expr_end) {
			jule::I32 _70013_i = it - expr->begin();
			jule::Any _70016_arg = *it;
			{
				if ((_70013_i > 0LL)) {
					_23d16b604_WriteStr(&_69213_head, jule::Str::lit(", ", 2));
				};
				{
					auto &_match_expr{ _70016_arg };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1cb1ec043:;
						{
							jule::Ptr<_1b9c09611_Var> _70621_v = _70016_arg.cast_ptr<_1b9c09611_Var>(&__jule_any_type8);;
							_23d16b604_WriteStr(&_69213_head, static__1c7e7d228_var(_70621_v));
							goto _iter_next_1cb1eaa14;
						}
					}
					_match_end_1cb1eb7a1:;
				};
				jule::Str _71013_name = (jule::Str::lit("_co_arg_", 8) + _1ec6727b6_Itoa(_70013_i));;
				_23d16b604_WriteStr(&_69213_head, _71013_name);
				_1c804085c_indent((*(_self_))._field_oc);
				_1c8040263_write((*(_self_))._field_oc, _1c8054e15_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*((*((*((*(_68935_m))))._field_Func))._field_Params[_70013_i]))._field_Kind));
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				if ((*((*((*((*((*(_68935_m))))._field_Func))._field_Params[_70013_i]))._field_Decl))._field_Reference) {
					_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
				};
				_1c8040263_write((*(_self_))._field_oc, _71013_name);
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1c7e65ad4_possibleRefExpr(_self_, _70016_arg);
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				jule::Any _72213_argS = jule::Any(_71013_name, &__jule_any_type4);;
				(*((*(_68935_m))))._field_Args[_70013_i]=(*(((jule::Any*)((&(_72213_argS))))));
			}
			_iter_next_1cb1eaa14:;
			++it;
			_70013_i++;
			goto _iter_begin_1cb1eaa14;
		}
		_iter_end_1cb1eaa14:;
	};
	_1c804085c_indent((*(_self_))._field_oc);
	_23d16b34b_Write(&(*((*(_self_))._field_oc))._field_Obj, _23d16c89c_Buf(&_69213_head));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("](void) mutable -> void {\n", 26));
	_1c8040461_addIndent((*(_self_))._field_oc);
	_1c804085c_indent((*(_self_))._field_oc);
	_1c7e67476_pureFuncCall(_self_, _68935_m);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1c804065e_doneIndent((*(_self_))._field_oc);
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("}).detach();\n", 13));
	_1c804065e_doneIndent((*(_self_))._field_oc);
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1c7e67a92_writeUseExpr(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b5216e_FnIns>* _74037_f, jule::Ptr<_1b9c5d016_Data> _74052_d) {
	if ((_1b9c92655_Tup((*(_74052_d))._field_Kind.ptr()) == nullptr)) {
		_1c7e65ad4_possibleRefExpr(_self_, (*(_74052_d))._field_Model);
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
		return;;
	};
	jule::Ptr<_1b9b46c24_TupleExprModel> _74613_tup = (*(_74052_d))._field_Model.cast_ptr<_1b9b46c24_TupleExprModel>(&__jule_any_type81);;
	_1c8059502_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), _1b9c92655_Tup((*((*(_74037_f))))._field_Result.ptr()));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	{
		auto expr = &((*(_74613_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb2086d1:;
		if (it != expr_end) {
			jule::I32 _74913_i = it - expr->begin();
			jule::Ptr<_1b9c5d016_Data> _74916_data = *it;
			{
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
				_1c8040263_write((*(_self_))._field_oc, _1ec6727b6_Itoa(_74913_i));
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
				_1c7e65ad4_possibleRefExpr(_self_, (*(_74916_data))._field_Model);
				if ((((*(_74613_tup))._field_Datas.len() - _74913_i) > 1LL)) {
					_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1cb2086d1:;
			++it;
			_74913_i++;
			goto _iter_begin_1cb2086d1;
		}
		_iter_end_1cb2086d1:;
	};
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
}



inline void _1c7e67d4a_funcCall(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b43506_FnCallExprModel> _76132_m) {
	if ((*(_76132_m))._field_IsCo) {
		_1c7e6772e_coFuncCall(_self_, &(_76132_m));
		return;;
	};
	if (((_1b9b53604_IsBuiltin((*(_76132_m))._field_Func.ptr()) || (!((*((*((*(_76132_m))._field_Func))._field_Decl))._field_Exceptional))) || (((*(_76132_m))._field_Except != nullptr) && ((*((*(_76132_m))._field_Except))._field_Stmts.len() == 0LL)))) {
		_1c7e67476_pureFuncCall(_self_, &(_76132_m));
		return;;
	};
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1c8040461_addIndent((*(_self_))._field_oc);
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("auto except = ", 14));
	_1c7e67476_pureFuncCall(_self_, &(_76132_m));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1c804085c_indent((*(_self_))._field_oc);
	if (((*(_76132_m))._field_Except != nullptr)) {
		if ((((*((*(_76132_m))._field_Func))._field_Result == nullptr) || (!((*(_76132_m))._field_Assigned)))) {
			_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) ", 18));
			_1c7e5e55b_scope((*((*(_self_))._field_oc))._field_sc, (*(_76132_m))._field_Except);
			_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		} else {
			jule::Bool _78717_forwarded = _1c7e76b06_isForwarded(&((*(_76132_m))._field_Except));;
			_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("(except.ok()) ? (except.result) : (", 35));
			if (_78717_forwarded) {
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
			};
			jule::Any _79221_stmt = (*((*(_76132_m))._field_Except))._field_Stmts[((*((*(_76132_m))._field_Except))._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _79221_stmt };
				
				if (_match_expr.type == &__jule_any_type24) {
					_case_begin_1cb218328:;
					{
						(*((*(_76132_m))._field_Except))._field_Stmts=(*((*(_76132_m))._field_Except))._field_Stmts.slice(0LL, ((*((*(_76132_m))._field_Except))._field_Stmts.len() - 1LL));
						_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
						_1c8040461_addIndent((*(_self_))._field_oc);
						_1c7e5e2a3_scopeStmts((*((*(_self_))._field_oc))._field_sc, &((*(_76132_m))._field_Except));
						_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1c804085c_indent((*(_self_))._field_oc);
						_1c7e67a92_writeUseExpr(_self_, &((*(_76132_m))._field_Func), _79221_stmt.cast_ptr<_1b9c5d016_Data>(&__jule_any_type24));
						_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1c804065e_doneIndent((*(_self_))._field_oc);
						_1c804085c_indent((*(_self_))._field_oc);
						_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					}
				}
				else {
					_case_begin_1cb21a1b5:;
					{
						_1c7e5e55b_scope((*((*(_self_))._field_oc))._field_sc, (*(_76132_m))._field_Except);
					}
				}
				_match_end_1cb21a160:;
			};
			if (_78717_forwarded) {
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				_1c7e74ebc_initExpr(_self_, (*((*(_76132_m))._field_Func))._field_Result);
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(";}", 2));
			};
			_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
		};
		_1c804065e_doneIndent((*(_self_))._field_oc);
	} else {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1c8042463_locInfo((*(_self_))._field_oc, &((*(_76132_m))._field_Token));
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("\"));\n", 5));
		if ((!(_1b9b4e6dd_IsVoid((*((*(_76132_m))._field_Func))._field_Decl.ptr())))) {
			_1c804085c_indent((*(_self_))._field_oc);
			_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("(except.result);\n", 17));
		};
		_1c804065e_doneIndent((*(_self_))._field_oc);
	};
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1c7e68103_slice(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b438d0_SliceExprModel> _83229_m) {
	if (((*(_83229_m))._field_Elems.len() == 0LL)) {
		_1c8040263_write((*(_self_))._field_oc, _1c8051d24_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_83229_m))._field_ElemKind));
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1c8040263_write((*(_self_))._field_oc, _1c8051d24_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_83229_m))._field_ElemKind));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("::make({", 8));
	_1c7e66563_models(_self_, (*(_83229_m))._field_Elems);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1c7e683ab_indexing(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b43d86_IndexingExprModel> _84432_m) {
	_1c7e65ad4_possibleRefExpr(_self_, (*((*(_84432_m))._field_Expr))._field_Model);
	{
		
		if (_22e08143a_Production || (_1b9c90d4b_Ptr((*((*(_84432_m))._field_Expr))._field_Kind.ptr()) != nullptr) || (_1b9c923be_Map((*((*(_84432_m))._field_Expr))._field_Kind.ptr()) != nullptr) || _1c7e76dc0_isExprComesFromBind(&((*(_84432_m))._field_Expr))) {
			_case_begin_1cb22b6b0:;
			{
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("[", 1));
				_1c7e65ad4_possibleRefExpr(_self_, (*((*(_84432_m))._field_Index))._field_Model);
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1cb22c12d:;
			{
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(".at(\"", 5));
				_1c8042463_locInfo((*(_self_))._field_oc, &((*(_84432_m))._field_Token));
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				_1c7e65ad4_possibleRefExpr(_self_, (*((*(_84432_m))._field_Index))._field_Model);
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1cb22c0b7:;
	};
}



inline void _1c7e68664_unsafeIndexing(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9d8cc8e_UnsafeIndexingExprModel> _86438_m) {
	_1c7e65ad4_possibleRefExpr(_self_, (*((*((*(_86438_m))._field_Node))._field_Expr))._field_Model);
	{
		
		if (_22e08143a_Production || (_1b9c90d4b_Ptr((*((*((*(_86438_m))._field_Node))._field_Expr))._field_Kind.ptr()) != nullptr) || (_1b9c923be_Map((*((*((*(_86438_m))._field_Node))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1cb2325d9:;
			{
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("[", 1));
				_1c7e65ad4_possibleRefExpr(_self_, (*((*((*(_86438_m))._field_Node))._field_Index))._field_Model);
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1cb233200:;
			{
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(".__at(", 6));
				_1c7e65ad4_possibleRefExpr(_self_, (*((*((*(_86438_m))._field_Node))._field_Index))._field_Model);
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1cb233189:;
	};
}



inline void _1c7e6891c_anonFunc(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b44260_AnonFnExprModel> _88132_m) {
	_1c8040263_write((*(_self_))._field_oc, _1c8054ac4_func((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_88132_m))._field_Func));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("([=]", 4));
	_1c80477ba_paramsIns((*(_self_))._field_oc, &((*((*(_88132_m))._field_Func))._field_Params));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(" mutable -> ", 12));
	_1c8054442_funcInsResult((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), &((*(_88132_m))._field_Func));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1c7e5e814_funcScope((*((*(_self_))._field_oc))._field_sc, (*(_88132_m))._field_Func);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1c7e68bc5_mapExpr(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b44ae0_MapExprModel> _89231_m) {
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("jule::Map<", 10));
	_1c8040263_write((*(_self_))._field_oc, _1c8054e15_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_89231_m))._field_KeyKind));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1c8040263_write((*(_self_))._field_oc, _1c8054e15_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_89231_m))._field_ValKind));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(">({", 3));
	if (((*(_89231_m))._field_Entries.len() > 0LL)) {
		{
			auto expr = &((*(_89231_m))._field_Entries);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1cb2413d9:;
			if (it != expr_end) {
				jule::I32 _89918_i = it - expr->begin();
				jule::Ptr<_1b9b44639_KeyValPairExprModel> _89925_pair = *it;
				{
					_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
					_1c7e65ad4_possibleRefExpr(_self_, (*(_89925_pair))._field_Key);
					_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					_1c7e65ad4_possibleRefExpr(_self_, (*(_89925_pair))._field_Val);
					_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					if ((((*(_89231_m))._field_Entries.len() - _89918_i) > 1LL)) {
						_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1cb2413d9:;
				++it;
				_89918_i++;
				goto _iter_begin_1cb2413d9;
			}
			_iter_end_1cb2413d9:;
		};
	};
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1c7e68e7d_slicing(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b45173_SlicingExprModel> _91331_m) {
	_1c7e65ad4_possibleRefExpr(_self_, (*(_91331_m))._field_Expr);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(".slice(", 7));
	if ((!(_22e08143a_Production))) {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1c8042463_locInfo((*(_self_))._field_oc, &((*(_91331_m))._field_Token));
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1c7e65ad4_possibleRefExpr(_self_, (*(_91331_m))._field_Left);
	if (((*(_91331_m))._field_Right != nullptr)) {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1c7e65ad4_possibleRefExpr(_self_, (*(_91331_m))._field_Right);
	};
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1c7e69236_traitSub(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b45706_TraitSubIdentExprModel> _92932_m) {
	_1c8040263_write((*(_self_))._field_oc, static__1c7e7c348_traitDecl((*(_92932_m))._field_Trt));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("[(", 2));
	_1c7e65ad4_possibleRefExpr(_self_, (*(_92932_m))._field_Expr);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(").type_offset].", 15));
	_1c8040263_write((*(_self_))._field_oc, static__1c7e7bcb5_func(&((*(_92932_m))._field_Method)));
}



inline void _1c7e694de_structureSub(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b46097_StructSubIdentExprModel> _93836_m) {
	_1c7e65ad4_possibleRefExpr(_self_, (*((*(_93836_m))._field_Expr))._field_Model);
	if (((*(_93836_m))._field_Field == nullptr)) {
		return;;
	};
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	_1c8040263_write((*(_self_))._field_oc, static__1c7e7ce5e_field(&((*((*(_93836_m))._field_Field))._field_Decl)));
}



inline void _1c7e69797_array(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b46927_ArrayExprModel> _94729_m) {
	_1c8040263_write((*(_self_))._field_oc, _1c805360b_array((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_94729_m))._field_Kind));
	if (((*(_94729_m))._field_Elems.len() == 0LL)) {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	if ((((*(_94729_m))._field_Elems.len() == 2LL) && ((*(_94729_m))._field_Elems[1LL] == nullptr))) {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1c7e65ad4_possibleRefExpr(_self_, (*(_94729_m))._field_Elems[0LL]);
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("({", 2));
	_1c7e66563_models(_self_, (*(_94729_m))._field_Elems);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
	return;;
}



inline void _1c7e69a50_funcInsCommon(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b5216e_FnIns> _97037_m) {
	_1c8040263_write((*(_self_))._field_oc, _1c8054ac4_func((*((*(_self_))._field_oc))._field_tc.ptr(), _97037_m));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1c7e69d08_funcIns(_self_, _97037_m);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1c7e69d08_funcIns(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b5216e_FnIns> _97731_m) {
	if ((((*(_97731_m))._field_Decl != nullptr) && (*((*(_97731_m))._field_Decl))._field_Binded)) {
		jule::Ptr<_1b9b17bd4_Directive> _97913_d = _1c805b944_findDirective(&((*((*(_97731_m))._field_Decl))._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_97913_d != nullptr)) {
			_1c8040263_write((*(_self_))._field_oc, _1c804bd52_concatAllParts((*(_97913_d))._field_Args));
			_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	_1c8040263_write((*(_self_))._field_oc, static__1c7e7c07e_funcIns(&(_97731_m)));
}



inline void _1c7e6a0b1_tuple(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b46c24_TupleExprModel> _98829_m) {
	{
		auto expr = &((*(_98829_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb25acd8:;
		if (it != expr_end) {
			jule::I32 _98914_i = it - expr->begin();
			jule::Ptr<_1b9c5d016_Data> _98921_d = *it;
			{
				_1c7e65ad4_possibleRefExpr(_self_, (*(_98921_d))._field_Model);
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
				if ((((*(_98829_m))._field_Datas.len() - _98914_i) > 1LL)) {
					_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1c804085c_indent((*(_self_))._field_oc);
				};
			}
			_iter_next_1cb25acd8:;
			++it;
			_98914_i++;
			goto _iter_begin_1cb25acd8;
		}
		_iter_end_1cb25acd8:;
	};
}



inline void _1c7e6a369_newCall(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b478a1_BuiltinNewCallExprModel> _99931_m) {
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_1c8040263_write((*(_self_))._field_oc, _1c8054e15_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_99931_m))._field_Kind));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	if (((*(_99931_m))._field_Init != nullptr)) {
		_1c7e65ad4_possibleRefExpr(_self_, (*(_99931_m))._field_Init);
	};
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1c7e6a622_outCall(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b470ed_BuiltinOutCallExprModel> _100931_m) {
	if (((*(_100931_m))._field_Debug && _22e08143a_Production)) {
		return;;
	};
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("jule::out(", 10));
	_1c7e65ad4_possibleRefExpr(_self_, (*(_100931_m))._field_Expr);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1c7e6a8ca_outlnCall(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b474c7_BuiltinOutlnCallExprModel> _101833_m) {
	if (((*(_101833_m))._field_Debug && _22e08143a_Production)) {
		return;;
	};
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("jule::outln(", 12));
	_1c7e65ad4_possibleRefExpr(_self_, (*(_101833_m))._field_Expr);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1c7e6ab83_panicCall(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b47c7a_BuiltinPanicCallExprModel> _102733_m) {
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("jule::panic(", 12));
	_1c7e65ad4_possibleRefExpr(_self_, (*(_102733_m))._field_Expr);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(" + jule::Str(\"\\nlocation: ", 26));
	_1c8042463_locInfo((*(_self_))._field_oc, &((*(_102733_m))._field_Token));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1c7e6ae3b_assertCall(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b48231_BuiltinAssertCallExprModel> _103534_m) {
	if (_22e08143a_Production) {
		return;;
	};
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("if (!(", 6));
	_1c7e65ad4_possibleRefExpr(_self_, (*(_103534_m))._field_Expr);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")) jule::panic(jule::Str(", 25));
	_1c7e75cae_cstrLit(&((*((*(_self_))._field_oc))._field_Obj), (*(_103534_m))._field_Log);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(") + jule::Str(\"\\nlocation: ", 27));
	_1c8042463_locInfo((*(_self_))._field_oc, &((*(_103534_m))._field_Token));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1c7e6b1e4_errorCall(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b49d37_BuiltinErrorCallExprModel> _104833_m) {
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	if (_1b9b4e6dd_IsVoid((*((*(_104833_m))._field_Func))._field_Decl.ptr())) {
		{
			auto &_match_expr{ (*((*(_104833_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1cb26c668:;
				{
					jule::Ptr<_1b9c09611_Var> _105317_v = (*((*(_104833_m))._field_Err))._field_Model.cast_ptr<_1b9c09611_Var>(&__jule_any_type8);;
					if ((*(_105317_v))._field_Ident.equal("error", 5)) {
						_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional(except.error)", 35));
						return;;
					};
				}
			}
			_match_end_1cb26c613:;
		};
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional(jule::Any(", 32));
	} else {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("jule::Exceptional<", 18));
		_1c8059bc8_codeMut1((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), &((*((*(_104833_m))._field_Func))._field_Result));
		{
			auto &_match_expr{ (*((*(_104833_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1cb27198b:;
				{
					jule::Ptr<_1b9c09611_Var> _106517_v = (*((*(_104833_m))._field_Err))._field_Model.cast_ptr<_1b9c09611_Var>(&__jule_any_type8);;
					if ((*(_106517_v))._field_Ident.equal("error", 5)) {
						_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(">(except.error)", 15));
						return;;
					};
				}
			}
			_match_end_1cb271936:;
		};
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(">(jule::Any(", 12));
	};
	_1c7e65ad4_possibleRefExpr(_self_, (*((*(_104833_m))._field_Err))._field_Model);
	jule::I32 _10749_i = _1c8040ede_pushAnyType((*(_self_))._field_oc, (*((*(_104833_m))._field_Err))._field_Kind);;
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
	_1c8040263_write((*(_self_))._field_oc, _1ec6727b6_Itoa(_10749_i));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1c7e6b49c_copyCall(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b4995d_BuiltinCopyCallExprModel> _108032_m) {
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("jule::copy((", 12));
	_1c7e65ad4_possibleRefExpr(_self_, (*((*(_108032_m))._field_Dest))._field_Model);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((_1b9c9082e_Prim((*((*(_108032_m))._field_Dest))._field_Kind.ptr()) != nullptr)) {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(".fake_slice()", 13));
	};
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(", (", 3));
	_1c7e65ad4_possibleRefExpr(_self_, (*((*(_108032_m))._field_Src))._field_Model);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((_1b9c9082e_Prim((*((*(_108032_m))._field_Src))._field_Kind.ptr()) != nullptr)) {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(".fake_slice()", 13));
	};
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1c7e6b755_lenCall(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b48dad_BuiltinLenCallExprModel> _109631_m) {
	_1c7e65ad4_possibleRefExpr(_self_, (*((*(_109631_m))._field_Expr))._field_Model);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(".len()", 6));
}



inline void _1c7e7189d_capCall(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b491aa_BuiltinCapCallExprModel> _110131_m) {
	_1c7e65ad4_possibleRefExpr(_self_, (*((*(_110131_m))._field_Expr))._field_Model);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(".cap()", 6));
}



inline void _1c7e71b23_deleteCall(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b49584_BuiltinDeleteCallExprModel> _110634_m) {
	_1c7e65ad4_possibleRefExpr(_self_, (*((*(_110634_m))._field_Dest))._field_Model);
	if (((*(_110634_m))._field_Key != nullptr)) {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(".del(", 5));
		_1c7e65ad4_possibleRefExpr(_self_, (*((*(_110634_m))._field_Key))._field_Model);
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(".clear()", 8));
	};
}



inline void _1c7e71dcb_makeCallSlice(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b486d7_BuiltinMakeCallExprModel>* _111738_m) {
	jule::Ptr<_1b9c9a2a6_Slc> _111813_slice = _1b9c91885_Slc((*((*(_111738_m))))._field_Kind.ptr());;
	_1c8040263_write((*(_self_))._field_oc, _1c8054e15_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*((*(_111738_m))))._field_Kind));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1c7e65ad4_possibleRefExpr(_self_, (*((*(_111738_m))))._field_Len);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_111738_m))))._field_Cap != nullptr)) {
		_1c7e65ad4_possibleRefExpr(_self_, (*((*(_111738_m))))._field_Cap);
	} else {
		_1c7e65ad4_possibleRefExpr(_self_, (*((*(_111738_m))))._field_Len);
	};
	if (_1c805c0c6_shouldInitialized(&((*(_111813_slice))._field_Elem))) {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1c7e74ebc_initExpr(_self_, (*(_111813_slice))._field_Elem);
	};
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1c7e72184_makeCallStr(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b486d7_BuiltinMakeCallExprModel>* _113536_m) {
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1c7e65ad4_possibleRefExpr(_self_, (*((*(_113536_m))))._field_Len);
	if (((*((*(_113536_m))))._field_Cap != nullptr)) {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1c7e65ad4_possibleRefExpr(_self_, (*((*(_113536_m))))._field_Cap);
	};
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1c7e7243c_makeCall(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b486d7_BuiltinMakeCallExprModel> _114632_m) {
	if ((_1b9c91885_Slc((*(_114632_m))._field_Kind.ptr()) != nullptr)) {
		_1c7e71dcb_makeCallSlice(_self_, &(_114632_m));
		return;;
	};
	_1c7e72184_makeCallStr(_self_, &(_114632_m));
}



inline void _1c7e726e5_pushToSlice(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9d8d1bd_PushToSliceExprModel> _115435_m) {
	;
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("{ ", 2));
	_1c8040263_write((*(_self_))._field_oc, _1c8051d24_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), (*((*(_115435_m))._field_Elems))._field_ElemKind));
	jule::Bool _116213_ptr = false;;
	{
		auto &_match_expr{ (*(_115435_m))._field_Dest };
		
		if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1cb28bd08:;
			{
				jule::Ptr<_1b9b41900_UnaryExprModel> _116617_u = (*(_115435_m))._field_Dest.cast_ptr<_1b9b41900_UnaryExprModel>(&__jule_any_type110);;
				if ((_1b9c90d4b_Ptr((*((*(_116617_u))._field_Expr))._field_Kind.ptr()) != nullptr)) {
					_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(" *__jule_push_dest = ", 21));
					_1c7e65ad4_possibleRefExpr(_self_, (*((*(_116617_u))._field_Expr))._field_Model);
					_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
					_116213_ptr=true;
					goto _match_end_1cb28da85;
				};
				goto _case_begin_1cb28dada;
			}
		}
		else {
			_case_begin_1cb28dada:;
			{
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(" &__jule_push_dest = ", 21));
				_1c7e65ad4_possibleRefExpr(_self_, (*(_115435_m))._field_Dest);
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
		}
		_match_end_1cb28da85:;
	};
	if (((*((*(_115435_m))._field_Elems))._field_Elems.len() == 1LL)) {
		if (_116213_ptr) {
			_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->push(", 23));
		} else {
			_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.push(", 22));
		};
		_1c7e65ad4_possibleRefExpr(_self_, (*((*(_115435_m))._field_Elems))._field_Elems[0LL]);
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("); }", 4));
		return;;
	};
	if (_116213_ptr) {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.alloc_for_append(", 34));
	};
	_1c8040263_write((*(_self_))._field_oc, _1ec6727b6_Itoa(static_cast<jule::I32>((*((*(_115435_m))._field_Elems))._field_Elems.len())));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
	{
		auto expr = &((*((*(_115435_m))._field_Elems))._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb2966b4:;
		if (it != expr_end) {
			jule::Any _120021_e = *it;
			{
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest", 16));
				if (_116213_ptr) {
					_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("->__push(", 9));
				} else {
					_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(".__push(", 8));
				};
				_1c7e65ad4_possibleRefExpr(_self_, _120021_e);
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_1cb2966b4:;
			++it;
			goto _iter_begin_1cb2966b4;
		}
		_iter_end_1cb2966b4:;
	};
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1c7e7299d_appendToSlice(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9d8d597_AppendToSliceExprModel> _121437_m) {
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1c7e65ad4_possibleRefExpr(_self_, (*(_121437_m))._field_Dest);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(").append(", 9));
	_1c7e65ad4_possibleRefExpr(_self_, (*(_121437_m))._field_Slice);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1c7e72c56_appendCall(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b48ab1_BuiltinAppendCallExprModel> _122234_m) {
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("jule::append(", 13));
	_1c7e65ad4_possibleRefExpr(_self_, (*(_122234_m))._field_Dest);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_1c7e65ad4_possibleRefExpr(_self_, (*(_122234_m))._field_Elements);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1c7e7300e_sizeof(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b458e3_SizeofExprModel> _123030_m) {
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("sizeof(", 7));
	_1c7e65ad4_possibleRefExpr(_self_, (*(_123030_m))._field_Expr);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1c7e732b7_alignof(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b4a563_AlignofExprModel> _123631_m) {
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("alignof(", 8));
	_1c7e65ad4_possibleRefExpr(_self_, (*(_123631_m))._field_Expr);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1c7e73570_runeLit(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b4a860_RuneExprModel> _124227_m) {
	if (((*(_124227_m))._field_Code <= 127LL)) {
		_23d16b8ac_WriteByte(&(*((*(_self_))._field_oc))._field_Obj, '\'');
		jule::Str _124517_b = _1c7e75693_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>((*(_124227_m))._field_Code)));;
		if (_124517_b.equal("'", 1)) {
			_23d16b8ac_WriteByte(&(*((*(_self_))._field_oc))._field_Obj, '\\');
		};
		_23d16b604_WriteStr(&(*((*(_self_))._field_oc))._field_Obj, _124517_b);
		_23d16b8ac_WriteByte(&(*((*(_self_))._field_oc))._field_Obj, '\'');
		return;;
	};
	_1c7e76441_itoa(&((*((*(_self_))._field_oc))._field_Obj), static_cast<jule::I64>(static_cast<jule::I64>((*(_124227_m))._field_Code)));
}



inline void _1c7e73828_structureStatic(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b4654d_StructStaticIdentExprModel> _125639_m) {
	_1c8040263_write((*(_self_))._field_oc, static__1c7e7c07e_funcIns(&((*(_125639_m))._field_Method)));
}



inline void _1c7e73ad1_integratedToStr(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b4ab5c_IntegratedToStrExprModel> _126039_m) {
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("jule::to_str(", 13));
	_1c7e65ad4_possibleRefExpr(_self_, (*(_126039_m))._field_Expr);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1c7e73d89_backendEmit(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b4b036_BackendEmitExprModel> _126635_m) {
	if (((*(_126635_m))._field_Exprs.len() == 0LL)) {
		_1c8040263_write((*(_self_))._field_oc, (*(_126635_m))._field_Code);
		return;;
	};
	jule::I32 _12719_n = _23d16c380_Len(&(*((*(_self_))._field_oc))._field_Obj);;
	jule::Slice<jule::Any> _127213_args = jule::Slice<jule::Any>::alloc((*(_126635_m))._field_Exprs.len(), (*(_126635_m))._field_Exprs.len());;
	{
		auto expr = &((*(_126635_m))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb2a9122:;
		if (it != expr_end) {
			jule::I32 _127314_i = it - expr->begin();
			jule::Any _127321_expr = *it;
			{
				_1c7e65ad4_possibleRefExpr(_self_, _127321_expr);
				jule::Slice<jule::U8> _127517_buf = _23d16c89c_Buf(&(*((*(_self_))._field_oc))._field_Obj);;
				_127213_args[_127314_i]=jule::Any(static_cast<jule::Str>(_127517_buf.slice(_12719_n)), &__jule_any_type4);
				{
					_23d16cb55_SetBuf(&(*((*(_self_))._field_oc))._field_Obj, _127517_buf.slice(0LL, _12719_n));
				};
			}
			_iter_next_1cb2a9122:;
			++it;
			_127314_i++;
			goto _iter_begin_1cb2a9122;
		}
		_iter_end_1cb2a9122:;
	};
	_1c8040263_write((*(_self_))._field_oc, _1b9d78032_Format((*(_126635_m))._field_Code, _127213_args));
}



inline void _1c7e74142_free(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9b4b333_FreeExprModel> _128228_m) {
	_1c7e65ad4_possibleRefExpr(_self_, (*(_128228_m))._field_Expr);
	if (_22e080c97_RC) {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(".dealloc()", 10));
		return;;
	};
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(".__free()", 9));
}



inline void _1c7e743ea_strComp(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9d8c112_StrCompExprModel> _129131_m) {
	if ((*(_129131_m))._field_NotEq) {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("(!", 2));
	};
	jule::Str _12959_s = _1ec684e6b_ReadStr((*(_129131_m))._field_Right.ptr());;
	_1c7e65ad4_possibleRefExpr(_self_, (*(_129131_m))._field_Left);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(".equal(", 7));
	_1c7e75cae_cstrLit(&((*((*(_self_))._field_oc))._field_Obj), _12959_s);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1c8040263_write((*(_self_))._field_oc, _1ec6727b6_Itoa(static_cast<jule::I32>(_12959_s.len())));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((*(_129131_m))._field_NotEq) {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1c7e746a3_inlineStdInternalNosafeStobs(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9d8d894_InlineStdInternalNosafeStobs> _130752_m) {
	_1c7e65ad4_possibleRefExpr(_self_, (*(_130752_m))._field_Str);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(".fake_slice()", 13));
}



inline void _1c7e7495b_emptyCompare(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9d8b7d7_EmptyCompareExprModel> _131236_m) {
	if ((*(_131236_m))._field_Neg) {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
	};
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1c7e65ad4_possibleRefExpr(_self_, (*(_131236_m))._field_Expr);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(").empty()", 9));
}



inline void _1c7e74c14_model(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Any _132129_m) {
	{
		auto &_match_expr{ _132129_m };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1cb2b8890:;
			{
				_1c8040263_write((*(_self_))._field_oc, _132129_m.cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1cb2b832e:;
			{
				_1c8040263_write((*(_self_))._field_oc, _1c8054e15_kind((*((*(_self_))._field_oc))._field_tc.ptr(), _132129_m.cast_ptr<_1b9c8d1cd_TypeKind>(&__jule_any_type83)));
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1cb2b853d:;
			{
				_1c7e64022_constant(_self_, _132129_m.cast_ptr<_1ec682ce3_Const>(&__jule_any_type19));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1cb2b85a4:;
			{
				_1c7e64c59_var(_self_, _132129_m.cast_ptr<_1b9c09611_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1cb2b861a:;
			{
				_1c7e65012_structureIns(_self_, _132129_m.cast_ptr<_1b9b3c137_StructIns>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1cb2b8681:;
			{
				_1c7e69a50_funcInsCommon(_self_, _132129_m.cast_ptr<_1b9b5216e_FnIns>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1cb2b93a7:;
			{
				_1c7e646e8_unsafeBinary(_self_, (*(_132129_m.cast_ptr<_1b9d8c992_UnsafeBinopExprModel>(&__jule_any_type126)))._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1cb2b941d:;
			{
				_1c7e649a1_binary(_self_, _132129_m.cast_ptr<_1b9b41526_BinopExprModel>(&__jule_any_type111));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1cb2b9495:;
			{
				_1c7e652ba_unary(_self_, _132129_m.cast_ptr<_1b9b41900_UnaryExprModel>(&__jule_any_type110));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1cb2b951c:;
			{
				_1c7e65573_structureLit(_self_, _132129_m.cast_ptr<_1b9b422c4_StructLitExprModel>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1cb2b9594:;
			{
				_1c7e6582b_allocStructure(_self_, _132129_m.cast_ptr<_1b9b425c1_AllocStructLitExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1cb2b961b:;
			{
				_1c7e662aa_casting(_self_, _132129_m.cast_ptr<_1b9b42b54_CastingExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1cb2b9693:;
			{
				_1c7e67d4a_funcCall(_self_, _132129_m.cast_ptr<_1b9b43506_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1cb2b971a:;
			{
				_1c7e68103_slice(_self_, _132129_m.cast_ptr<_1b9b438d0_SliceExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1cb2b9792:;
			{
				_1c7e69797_array(_self_, _132129_m.cast_ptr<_1b9b46927_ArrayExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1cb2b9819:;
			{
				_1c7e68664_unsafeIndexing(_self_, _132129_m.cast_ptr<_1b9d8cc8e_UnsafeIndexingExprModel>(&__jule_any_type128));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1cb2b9891:;
			{
				_1c7e683ab_indexing(_self_, _132129_m.cast_ptr<_1b9b43d86_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1cb2b9918:;
			{
				_1c7e6891c_anonFunc(_self_, _132129_m.cast_ptr<_1b9b44260_AnonFnExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1cb2b9990:;
			{
				_1c7e68bc5_mapExpr(_self_, _132129_m.cast_ptr<_1b9b44ae0_MapExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1cb2b9a17:;
			{
				_1c7e68e7d_slicing(_self_, _132129_m.cast_ptr<_1b9b45173_SlicingExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1cb2b9a8e:;
			{
				_1c7e69236_traitSub(_self_, _132129_m.cast_ptr<_1b9b45706_TraitSubIdentExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1cb2b9b16:;
			{
				_1c7e694de_structureSub(_self_, _132129_m.cast_ptr<_1b9b46097_StructSubIdentExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1cb2b9b8d:;
			{
				_1c7e6a0b1_tuple(_self_, _132129_m.cast_ptr<_1b9b46c24_TupleExprModel>(&__jule_any_type81));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1cb2b9c15:;
			{
				_1c7e6a622_outCall(_self_, _132129_m.cast_ptr<_1b9b470ed_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1cb2b9c8c:;
			{
				_1c7e6a8ca_outlnCall(_self_, _132129_m.cast_ptr<_1b9b474c7_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1cb2b9d14:;
			{
				_1c7e6a369_newCall(_self_, _132129_m.cast_ptr<_1b9b478a1_BuiltinNewCallExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1cb2b9d8b:;
			{
				_1c7e6ab83_panicCall(_self_, _132129_m.cast_ptr<_1b9b47c7a_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1cb2b9e13:;
			{
				_1c7e6ae3b_assertCall(_self_, _132129_m.cast_ptr<_1b9b48231_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1cb2b9e8a:;
			{
				_1c7e6b1e4_errorCall(_self_, _132129_m.cast_ptr<_1b9b49d37_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1cb2ba012:;
			{
				_1c7e7243c_makeCall(_self_, _132129_m.cast_ptr<_1b9b486d7_BuiltinMakeCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1cb2ba089:;
			{
				_1c7e72c56_appendCall(_self_, _132129_m.cast_ptr<_1b9b48ab1_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1cb2ba111:;
			{
				_1c7e6b49c_copyCall(_self_, _132129_m.cast_ptr<_1b9b4995d_BuiltinCopyCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1cb2ba188:;
			{
				_1c7e6b755_lenCall(_self_, _132129_m.cast_ptr<_1b9b48dad_BuiltinLenCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1cb2ba210:;
			{
				_1c7e7189d_capCall(_self_, _132129_m.cast_ptr<_1b9b491aa_BuiltinCapCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1cb2ba287:;
			{
				_1c7e71b23_deleteCall(_self_, _132129_m.cast_ptr<_1b9b49584_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1cb2ba30e:;
			{
				_1c7e7300e_sizeof(_self_, _132129_m.cast_ptr<_1b9b458e3_SizeofExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1cb2ba386:;
			{
				_1c7e732b7_alignof(_self_, _132129_m.cast_ptr<_1b9b4a563_AlignofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1cb2ba40d:;
			{
				_1c7e73570_runeLit(_self_, _132129_m.cast_ptr<_1b9b4a860_RuneExprModel>(&__jule_any_type82));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1cb2ba485:;
			{
				_1c7e73828_structureStatic(_self_, _132129_m.cast_ptr<_1b9b4654d_StructStaticIdentExprModel>(&__jule_any_type95));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1cb2ba50c:;
			{
				_1c7e73ad1_integratedToStr(_self_, _132129_m.cast_ptr<_1b9b4ab5c_IntegratedToStrExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1cb2ba584:;
			{
				_1c7e73d89_backendEmit(_self_, _132129_m.cast_ptr<_1b9b4b036_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1cb2ba60b:;
			{
				_1c7e74142_free(_self_, _132129_m.cast_ptr<_1b9b4b333_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1cb2ba683:;
			{
				_1c7e743ea_strComp(_self_, _132129_m.cast_ptr<_1b9d8c112_StrCompExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1cb2ba70a:;
			{
				_1c7e746a3_inlineStdInternalNosafeStobs(_self_, _132129_m.cast_ptr<_1b9d8d894_InlineStdInternalNosafeStobs>(&__jule_any_type129));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1cb2ba782:;
			{
				_1c7e64c59_var(_self_, (*(_132129_m.cast_ptr<_1b9d8bad4_RefExprModel>(&__jule_any_type127)))._field_Var);
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1cb2ba809:;
			{
				_1c7e7495b_emptyCompare(_self_, _132129_m.cast_ptr<_1b9d8b7d7_EmptyCompareExprModel>(&__jule_any_type124));
			}
		}
		else {
			_case_begin_1cb2b84c7:;
			{
				_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1cb2b8472:;
	};
}



inline void _1c7e74ebc_initExpr(jule::Ptr<_1c7e62790_exprCoder> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _142032_t) {
	if (_1b9c9007b_NilCompatible(_142032_t.ptr())) {
		if ((_1b9c90d4b_Ptr(_142032_t.ptr()) != nullptr)) {
			_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		} else {
			_1c8040263_write((*(_self_))._field_oc, _1c8054e15_kind((*((*(_self_))._field_oc))._field_tc.ptr(), _142032_t));
			_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1b9c9ad9a_Tuple> _143013_tup = _1b9c92655_Tup(_142032_t.ptr());;
	if ((_143013_tup != nullptr)) {
		_1c8059502_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), _143013_tup);
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
		{
			auto expr = &((*(_143013_tup))._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1cb2dc3b9:;
			if (it != expr_end) {
				jule::I32 _143418_i = it - expr->begin();
				jule::Ptr<_1b9c8d1cd_TypeKind> _143425_tt = *it;
				{
					if ((!(_1c805c0c6_shouldInitialized(&(_143425_tt))))) {
						goto _iter_next_1cb2dc3b9;
					};
					_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
					_1c8040263_write((*(_self_))._field_oc, _1ec6727b6_Itoa(_143418_i));
					_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1c7e74ebc_initExpr(_self_, _143425_tt);
					if ((((*(_143013_tup))._field_Types.len() - _143418_i) > 1LL)) {
						_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
				_iter_next_1cb2dc3b9:;
				++it;
				_143418_i++;
				goto _iter_begin_1cb2dc3b9;
			}
			_iter_end_1cb2dc3b9:;
		};
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	jule::Ptr<_1b9b64c0e_Enum> _144913_enm = _1b9c910d2_Enum(_142032_t.ptr());;
	if ((_144913_enm != nullptr)) {
		_1c7e74c14_model(_self_, (*((*((*((*(_144913_enm))._field_Items[0LL]))._field_Value))._field_Data))._field_Model);
		return;;
	};
	jule::Ptr<_1b9c95ca7_Prim> _14549_prim = _1b9c9082e_Prim(_142032_t.ptr());;
	if ((_14549_prim != nullptr)) {
		if (_1ec6826e9_IsNum((*(_14549_prim))._field_Kind)) {
			_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("0", 1));
		} else if (_1b9c98ea8_IsBool(_14549_prim.ptr())) {
			_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
		} else if (_1b9c9923e_IsStr(_14549_prim.ptr())) {
			_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		};
		return;;
	};
	if ((_1b9c915ee_Arr(_142032_t.ptr()) != nullptr)) {
		jule::Ptr<_1b9c9c5c7_Arr> _146617_arr = _1b9c915ee_Arr(_142032_t.ptr());;
		_1c8040263_write((*(_self_))._field_oc, _1c8054e15_kind((*((*(_self_))._field_oc))._field_tc.ptr(), _142032_t));
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1c7e74ebc_initExpr(_self_, (*(_146617_arr))._field_Elem);
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	jule::Ptr<_1b9b3c137_StructIns> _147313_s = _1b9c91da2_Struct(_142032_t.ptr());;
	if ((((_147313_s != nullptr) && (*((*(_147313_s))._field_Decl))._field_Binded) && (_1c805b944_findDirective(&((*((*(_147313_s))._field_Decl))._field_Directives), jule::Str::lit("typedef", 7)) == nullptr))) {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1c8040263_write((*(_self_))._field_oc, _1c8054e15_kind((*((*(_self_))._field_oc))._field_tc.ptr(), _142032_t));
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("){}", 3));
		return;;
	};
	_1c8040263_write((*(_self_))._field_oc, _1c8054e15_kind((*((*(_self_))._field_oc))._field_tc.ptr(), _142032_t));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1c7e62790_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c7e78036_TestCoder> static__1c7e78476_New(jule::Ptr<_1c803eaae_ObjectCoder>* _2824_oc) {
	return jule::new_ptr<_1c7e78036_TestCoder>(_1c7e78036_TestCoder{._field_oc=(*(_2824_oc))});;
}



inline jule::Ptr<_1b9bb1200_ImportInfo> _1c7e7870c_findTestingPackage(jule::Ptr<_1c7e78036_TestCoder> _self_) {
	{
		auto expr = &((*((*((*(_self_))._field_oc))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb2ec0dd:;
		if (it != expr_end) {
			jule::Ptr<_1b9bb1200_ImportInfo> _3521_imp = *it;
			{
				if ((*(_3521_imp))._field_LinkPath.equal("std::testing", 12)) {
					return _3521_imp;;
				};
			}
			_iter_next_1cb2ec0dd:;
			++it;
			goto _iter_begin_1cb2ec0dd;
		}
		_iter_end_1cb2ec0dd:;
	};
	return nullptr;;
}



inline void _1c7e789b5_appendTest(jule::Ptr<_1c7e78036_TestCoder> _self_, jule::Ptr<_1b9b5216e_FnIns> _4334_f) {
	_1c804085c_indent((*(_self_))._field_oc);
	_1c7e79202_callTmReset(_self_);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("std::cout << \">>> TEST RUNNING: \" ", 34));
	_1c7e75cae_cstrLit(&((*((*(_self_))._field_oc))._field_Obj), (*((*(_4334_f))._field_Decl))._field_Ident);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(" << std::endl;\n", 15));
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, static__1c7e7c07e_funcIns(&(_4334_f)));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("(_t);\n", 6));
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("post_test();\n", 13));
}



inline void _1c7e78c6d_appendPackageTests(jule::Ptr<_1c7e78036_TestCoder> _self_, jule::Ptr<_1b9bb4126_Package>* _5843_p) {
	{
		auto expr = &((*((*(_5843_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb303a2e:;
		if (it != expr_end) {
			jule::Ptr<_1b9c57ce1_SymbolTable> _5921_file = *it;
			{
				{
					auto expr = &((*(_5921_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cb30447a:;
					if (it != expr_end) {
						jule::Ptr<_1b9b4e26a_Fn> _6025_f = *it;
						{
							if (_1c805bd0c_hasDirective(&((*(_6025_f))._field_Directives), jule::Str::lit("test", 4))) {
								_1c7e789b5_appendTest(_self_, (*(_6025_f))._field_Instances[0LL]);
							};
						}
						_iter_next_1cb30447a:;
						++it;
						goto _iter_begin_1cb30447a;
					}
					_iter_end_1cb30447a:;
				};
			}
			_iter_next_1cb303a2e:;
			++it;
			goto _iter_begin_1cb303a2e;
		}
		_iter_end_1cb303a2e:;
	};
}



inline jule::Bool _1c7e79004_readyTestingPackage(jule::Ptr<_1c7e78036_TestCoder> _self_) {
	jule::Ptr<_1b9bb1200_ImportInfo> _6913_p = _1c7e7870c_findTestingPackage(_self_);;
	if ((_6913_p == nullptr)) {
		return false;;
	};
	(*(_self_))._field_t=(*(_1b9bb23cc_FindStruct(_6913_p.ptr(), jule::Str::lit("T", 1), false)))._field_Instances[0LL];
	(*(_self_))._field_tmReset=_1b9b3d19e_FindMethod((*(_self_))._field_t.ptr(), jule::Str::lit("reset", 5), false);
	(*(_self_))._field_tmFailed=_1b9b3d19e_FindMethod((*(_self_))._field_t.ptr(), jule::Str::lit("Failed", 6), false);
	(*(_self_))._field_tmSkipped=_1b9b3d19e_FindMethod((*(_self_))._field_t.ptr(), jule::Str::lit("Skipped", 7), false);
	return true;;
}



inline void _1c7e79202_callTmReset(jule::Ptr<_1c7e78036_TestCoder> _self_) {
	_1c8040263_write((*(_self_))._field_oc, static__1c7e7bcb5_func(&((*(_self_))._field_tmReset)));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1c7e79400_callTmFailed(jule::Ptr<_1c7e78036_TestCoder> _self_) {
	_1c8040263_write((*(_self_))._field_oc, static__1c7e7bcb5_func(&((*(_self_))._field_tmFailed)));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1c7e795ed_callTmSkipped(jule::Ptr<_1c7e78036_TestCoder> _self_) {
	_1c8040263_write((*(_self_))._field_oc, static__1c7e7bcb5_func(&((*(_self_))._field_tmSkipped)));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1c7e797eb_Serialize(jule::Ptr<_1c7e78036_TestCoder> _self_) {
	_1c804b45b_serializeHead((*(_self_))._field_oc);
	__JULE_DEFER({
		_1c804b25d_end((*(_self_))._field_oc);
	});;
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("\nvoid test_point(void) {\n", 25));
	_1c8040461_addIndent((*(_self_))._field_oc);
	_1c804085c_indent((*(_self_))._field_oc);
	if ((!(_1c7e79004_readyTestingPackage(_self_)))) {
		_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		_1c804065e_doneIndent((*(_self_))._field_oc);
		return;;
	};
	_1c8040263_write((*(_self_))._field_oc, _1c8050bbe_asSptr((*((*(_self_))._field_oc))._field_tc.ptr(), _1c80532ba_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_self_))._field_t)));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(" _t = jule::new_ptr<", 20));
	_1c8040263_write((*(_self_))._field_oc, _1c80532ba_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_self_))._field_t));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(">(); _t.ref = nullptr;\n", 23));
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("auto post_test = [&](void) {\n", 29));
	_1c8040461_addIndent((*(_self_))._field_oc);
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("++total;\n", 9));
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_1c7e79400_callTmFailed(_self_);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
	_1c7e795ed_callTmSkipped(_self_);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1c804065e_doneIndent((*(_self_))._field_oc);
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("};\n", 3));
	_1c7e78c6d_appendPackageTests(_self_, &((*((*((*(_self_))._field_oc))._field_ir))._field_Main));
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("\n\n", 2));
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("if (failed != 0) std::exit(1);\n", 31));
	_1c804065e_doneIndent((*(_self_))._field_oc);
	_1c804085c_indent((*(_self_))._field_oc);
	_1c8040263_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1c7e78036_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline void static__1c7e7b248_writeIdentTo(_23d16295d_StrBuilder* _3333_buf, jule::Str* _3351_ident) {
	{
		auto expr = _3351_ident;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb31e30d:;
		if (it != expr_end) {
			jule::U8 *_3416_b = it;
			{
				if (((*(_3416_b)) >= 128LLU)) {
					goto _julec_label_1cb31e64e;
				};
			}
			_iter_next_1cb31e30d:;
			++it;
			goto _iter_begin_1cb31e30d;
		}
		_iter_end_1cb31e30d:;
	};
	_23d16b604_WriteStr(_3333_buf, (*(_3351_ident)));
	return;;
	_julec_label_1cb31e64e:;
	{
		auto expr = static_cast<jule::Slice<jule::I32>>((*(_3351_ident)));
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1cb3206b6:;
		if (it != expr_end) {
			jule::I32 _4416_r = *it;
			{
				if ((_4416_r < 128LL)) {
					_23d16b8ac_WriteByte(_3333_buf, static_cast<jule::U8>(static_cast<jule::U8>(_4416_r)));
					goto _iter_next_1cb3206b6;
				};
				_23d16b604_WriteStr(_3333_buf, _1ec6724ec_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_4416_r)), 15LL));
			}
			_iter_next_1cb3206b6:;
			++it;
			goto _iter_begin_1cb3206b6;
		}
		_iter_end_1cb3206b6:;
	};
}



inline jule::Str static__1c7e7b5bc_toOut(jule::Str* _6122_ident, jule::Uintptr _6134_addr) {
	if ((_6134_addr != 0LLU)) {
		_23d16295d_StrBuilder _6317_obj = static__23d162c7c_New(40LL);;
		_23d16b8ac_WriteByte(&_6317_obj, '_');
		_23d16b604_WriteStr(&_6317_obj, _1ec672134_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_6134_addr)), 15LL));
		_23d16b8ac_WriteByte(&_6317_obj, '_');
		static__1c7e7b248_writeIdentTo(&(_6317_obj), _6122_ident);
		return _23d16bdeb_Str(&_6317_obj);;
	};
	_23d16295d_StrBuilder _7013_obj = static__23d162c7c_New(static_cast<jule::I32>(((*(_6122_ident)).len() + 1LL)));;
	_23d16b8ac_WriteByte(&_7013_obj, '_');
	static__1c7e7b248_writeIdentTo(&(_7013_obj), _6122_ident);
	return _23d16bdeb_Str(&_7013_obj);;
}



inline jule::Str static__1c7e7b9eb_toLocal(jule::I32 _8223_row, jule::I32 _8233_col, jule::Str* _8244_ident) {
	_23d16295d_StrBuilder _8313_obj = static__23d162c7c_New(40LL);;
	_23d16b8ac_WriteByte(&_8313_obj, '_');
	_23d16b604_WriteStr(&_8313_obj, _1ec6727b6_Itoa(_8223_row));
	_23d16b604_WriteStr(&_8313_obj, _1ec6727b6_Itoa(_8233_col));
	_23d16b8ac_WriteByte(&_8313_obj, '_');
	static__1c7e7b248_writeIdentTo(&(_8313_obj), _8244_ident);
	return _23d16bdeb_Str(&_8313_obj);;
}



inline jule::Str static__1c7e7bcb5_func(jule::Ptr<_1b9b4e26a_Fn>* _9321_f) {
	{
		
		if ((*((*(_9321_f))))._field_Binded) {
			_case_begin_1cb326cd8:;
			{
				return (*((*(_9321_f))))._field_Ident;;
			}
		}
		else if ((*((*(_9321_f))))._field_Ident.equal("main", 4)) {
			_case_begin_1cb326546:;
			{
				return jule::Str::lit("entry_point", 11);;
			}
		}
		else if (_1b9b4e974_IsMethod((*(_9321_f)).ptr())) {
			_case_begin_1cb3265ac:;
			{
				jule::Str _10017_obj = static__1c7e7b5bc_toOut(&((*((*(_9321_f))))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_9321_f)))));;
				if ((*((*(_9321_f))))._field_Statically) {
					_10017_obj=(jule::Str::lit("static_", 7) + _10017_obj);
					return _10017_obj;;
				};
				return _10017_obj;;
			}
		}
		else {
			_case_begin_1cb3264d0:;
			{
				return static__1c7e7b5bc_toOut(&((*((*(_9321_f))))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_9321_f)))));;
			}
		}
		_match_end_1cb3257ba:;
	};
}



inline jule::Str static__1c7e7c07e_funcIns(jule::Ptr<_1b9b5216e_FnIns>* _11224_f) {
	if (_1b9b53604_IsBuiltin((*(_11224_f)).ptr())) {
		return (jule::Str::lit("jule::", 6) + (*((*((*(_11224_f))))._field_Decl))._field_Ident);;
	};
	if (((*((*((*(_11224_f))))._field_Decl))._field_Binded || ((*((*(_11224_f))))._field_Generics.len() == 0LL))) {
		return static__1c7e7bcb5_func(&((*((*(_11224_f))))._field_Decl));;
	};
	return static__1c7e7b5bc_toOut(&((*((*((*(_11224_f))))._field_Decl))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_11224_f)))));;
}



inline jule::Str static__1c7e7c348_traitDecl(jule::Ptr<_1b9b62514_Trait> _12525_t) {
	return static__1c7e7b5bc_toOut(&((*(_12525_t))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12525_t)));;
}



inline jule::Str static__1c7e7c612_param(jule::Ptr<_1b9b4c796_Param>* _13022_p) {
	if ((_1b9b06024_IsAnonIdent((*((*(_13022_p))))._field_Ident) || _1b9b05c5a_IsIgnoreIdent((*((*(_13022_p))))._field_Ident))) {
		return jule::Str();;
	};
	if (_1b9b4cdb2_IsSelf((*(_13022_p)).ptr())) {
		return jule::Str::lit("_self_", 6);;
	};
	if (((*((*(_13022_p))))._field_Token == nullptr)) {
		return static__1c7e7b9eb_toLocal(0LL, 0LL, &((*((*(_13022_p))))._field_Ident));;
	};
	return static__1c7e7b9eb_toLocal((*((*((*(_13022_p))))._field_Token))._field_Row, (*((*((*(_13022_p))))._field_Token))._field_Column, &((*((*(_13022_p))))._field_Ident));;
}



inline jule::Str static__1c7e7c8cb_structure(jule::Ptr<_1b9b393a9_Struct>* _14426_s) {
	if ((*((*(_14426_s))))._field_Binded) {
		if (_1c805bd0c_hasDirective(&((*((*(_14426_s))))._field_Directives), jule::Str::lit("typedef", 7))) {
			return (*((*(_14426_s))))._field_Ident;;
		};
		return (jule::Str::lit("struct ", 7) + (*((*(_14426_s))))._field_Ident);;
	};
	return static__1c7e7b5bc_toOut(&((*((*(_14426_s))))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_14426_s)))));;
}



inline jule::Str static__1c7e7cb95_structureIns(jule::Ptr<_1b9b3c137_StructIns>* _15529_s) {
	if (((*((*((*(_15529_s))))._field_Decl))._field_Binded || ((*((*(_15529_s))))._field_Generics.len() == 0LL))) {
		return static__1c7e7c8cb_structure(&((*((*(_15529_s))))._field_Decl));;
	};
	return static__1c7e7b5bc_toOut(&((*((*((*(_15529_s))))._field_Decl))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_15529_s)))));;
}



inline jule::Str static__1c7e7ce5e_field(jule::Ptr<_1b9b364b6_Field>* _16322_f) {
	if ((*((*((*(_16322_f))))._field_Owner))._field_Binded) {
		return (*((*(_16322_f))))._field_Ident;;
	};
	_23d16295d_StrBuilder _16713_obj = static__23d162c7c_New(static_cast<jule::I32>((7LL + (*((*(_16322_f))))._field_Ident.len())));;
	_23d16b604_WriteStr(&_16713_obj, jule::Str::lit("_field_", 7));
	static__1c7e7b248_writeIdentTo(&(_16713_obj), &((*((*(_16322_f))))._field_Ident));
	return _23d16bdeb_Str(&_16713_obj);;
}



inline jule::Str static__1c7e7d228_var(jule::Ptr<_1b9c09611_Var> _17423_v) {
	{
		
		if ((*(_17423_v))._field_Binded) {
			_case_begin_1cb333e27:;
			{
				return (*(_17423_v))._field_Ident;;
			}
		}
		else if ((*(_17423_v))._field_Ident.equal("error", 5)) {
			_case_begin_1cb333e8d:;
			{
				return jule::Str::lit("except.error", 12);;
			}
		}
		else if ((*(_17423_v))._field_Ident.equal("self", 4)) {
			_case_begin_1cb334004:;
			{
				return jule::Str::lit("_self_", 6);;
			}
		}
		else if (((*(_17423_v))._field_RetOrder == -1LL)) {
			_case_begin_1cb33406a:;
			{
				return jule::Str::lit("__jule_func_result", 18);;
			}
		}
		else if (((*(_17423_v))._field_RetOrder >= 0LL)) {
			_case_begin_1cb334301:;
			{
				return (jule::Str::lit("__jule_func_result.__jule_result_arg", 36) + _1ec6727b6_Itoa((*(_17423_v))._field_RetOrder));;
			}
		}
		else if (((*(_17423_v))._field_Scope != nullptr)) {
			_case_begin_1cb334367:;
			{
				return static__1c7e7b9eb_toLocal((*((*(_17423_v))._field_Token))._field_Row, (*((*(_17423_v))._field_Token))._field_Column, &((*(_17423_v))._field_Ident));;
			}
		}
		else {
			_case_begin_1cb333db1:;
			{
				return static__1c7e7b5bc_toOut(&((*(_17423_v))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_17423_v)));;
			}
		}
		_match_end_1cb333b08:;
	};
}



inline jule::Str static__1c7e7d4e2_iterBegin(jule::Uintptr _19625_it) {
	_23d16295d_StrBuilder _19713_obj = static__23d162c7c_New(30LL);;
	_23d16b604_WriteStr(&_19713_obj, jule::Str::lit("_iter_begin_", 12));
	_23d16b604_WriteStr(&_19713_obj, _1ec672134_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19625_it)), 15LL));
	return _23d16bdeb_Str(&_19713_obj);;
}



inline jule::Str static__1c7e7d7ab_iterEnd(jule::Uintptr _20423_it) {
	_23d16295d_StrBuilder _20513_obj = static__23d162c7c_New(30LL);;
	_23d16b604_WriteStr(&_20513_obj, jule::Str::lit("_iter_end_", 10));
	_23d16b604_WriteStr(&_20513_obj, _1ec672134_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20423_it)), 15LL));
	return _23d16bdeb_Str(&_20513_obj);;
}



inline jule::Str static__1c7e7da75_iterNext(jule::Uintptr _21224_it) {
	_23d16295d_StrBuilder _21313_obj = static__23d162c7c_New(30LL);;
	_23d16b604_WriteStr(&_21313_obj, jule::Str::lit("_iter_next_", 11));
	_23d16b604_WriteStr(&_21313_obj, _1ec672134_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_21224_it)), 15LL));
	return _23d16bdeb_Str(&_21313_obj);;
}



inline jule::Str static__1c7e7dd3e_label(jule::Uintptr _22021_u) {
	_23d16295d_StrBuilder _22113_obj = static__23d162c7c_New(30LL);;
	_23d16b604_WriteStr(&_22113_obj, jule::Str::lit("_julec_label_", 13));
	_23d16b604_WriteStr(&_22113_obj, _1ec672134_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_22021_u)), 15LL));
	return _23d16bdeb_Str(&_22113_obj);;
}



inline jule::Str static__1c7e7e108_matchEnd(jule::Uintptr _22824_m) {
	_23d16295d_StrBuilder _22913_obj = static__23d162c7c_New(30LL);;
	_23d16b604_WriteStr(&_22913_obj, jule::Str::lit("_match_end_", 11));
	_23d16b604_WriteStr(&_22913_obj, _1ec672134_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_22824_m)), 15LL));
	return _23d16bdeb_Str(&_22913_obj);;
}



inline jule::Str static__1c7e7e3c2_caseBegin(jule::Uintptr _23625_c) {
	_23d16295d_StrBuilder _23713_obj = static__23d162c7c_New(30LL);;
	_23d16b604_WriteStr(&_23713_obj, jule::Str::lit("_case_begin_", 12));
	_23d16b604_WriteStr(&_23713_obj, _1ec672134_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_23625_c)), 15LL));
	return _23d16bdeb_Str(&_23713_obj);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c7e7ac1a_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c803d096_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c803d66d_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "ti:" << _Src._field_ti << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c803da47_traitCast _Src) {
	_Stream << "traitCast{";
	_Stream << "t1:" << _Src._field_t1 << ", ";
	_Stream << "t2:" << _Src._field_t2;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c804e0eb_Str(_1c804dc66_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1c804e43c_Equal(jule::Ptr<_1c804dc66_customType> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _4021_k) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c804dc66_customType _Src) {
	_Stream << _1c804e0eb_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1c804e86b_typeCoder> static__1c804edaa_new(jule::Ptr<_1c803eaae_ObjectCoder>* _6424_oc) {
	jule::Ptr<_1c804e86b_typeCoder> _6513_tc = jule::new_ptr<_1c804e86b_typeCoder>(_1c804e86b_typeCoder{._field_oc=(*(_6424_oc)), });;
	(*(_6513_tc))._field_rc=static__1c8057b1b_new(&(_6513_tc));
	return _6513_tc;;
}



inline jule::Str _1c80501eb_toType(_1c804e86b_typeCoder* _self_, jule::Str _7129_id) {
	if ((!_7129_id.equal("uintptr", 7))) {
		_7129_id=_1ec674961_RealKindOf(_7129_id);
	};
	_23d16295d_StrBuilder _7513_obj = static__23d162c7c_New(32LL);;
	_23d16b604_WriteStr(&_7513_obj, jule::Str::lit("jule::", 6));
	if (((97LL <= _7129_id[0LL]) && (_7129_id[0LL] <= 122LLU))) {
		_23d16b8ac_WriteByte(&_7513_obj, static_cast<jule::U8>((_7129_id[0LL] - 32LLU)));
	} else {
		_23d16b8ac_WriteByte(&_7513_obj, _7129_id[0LL]);
	};
	_23d16b604_WriteStr(&_7513_obj, _7129_id.slice(1LL));
	return _23d16bdeb_Str(&_7513_obj);;
}



inline jule::Str _1c805053c_prim(_1c804e86b_typeCoder* _self_, jule::Ptr<_1b9c95ca7_Prim> _8723_p) {
	return _1c80501eb_toType(_self_, _1b9c960e8_Str(_8723_p.ptr()));;
}



inline jule::Str _1c805087d_tuple(_1c804e86b_typeCoder* _self_, jule::Ptr<_1b9c9ad9a_Tuple> _9228_t) {
	_23d16295d_StrBuilder _9313_obj = static__23d162c7c_New(32LL);;
	_23d16b604_WriteStr(&_9313_obj, jule::Str::lit("std::tuple<", 11));
	{
		auto expr = &((*(_9228_t))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb492ad0:;
		if (it != expr_end) {
			jule::I32 _9514_i = it - expr->begin();
			jule::Ptr<_1b9c8d1cd_TypeKind> _9521_tk = *it;
			{
				_23d16b604_WriteStr(&_9313_obj, _1c8054e15_kind(_self_, _9521_tk));
				if ((((*(_9228_t))._field_Types.len() - _9514_i) > 1LL)) {
					_23d16b8ac_WriteByte(&_9313_obj, ',');
				};
			}
			_iter_next_1cb492ad0:;
			++it;
			_9514_i++;
			goto _iter_begin_1cb492ad0;
		}
		_iter_end_1cb492ad0:;
	};
	_23d16b8ac_WriteByte(&_9313_obj, '>');
	return _23d16bdeb_Str(&_9313_obj);;
}



inline jule::Str _1c8050bbe_asSptr(_1c804e86b_typeCoder* _self_, jule::Str _10625_elem) {
	_23d16295d_StrBuilder _10713_obj = static__23d162c7c_New(static_cast<jule::I32>((11LL + _10625_elem.len())));;
	_23d16b604_WriteStr(&_10713_obj, jule::Str::lit("jule::Ptr<", 10));
	_23d16b604_WriteStr(&_10713_obj, _10625_elem);
	_23d16b8ac_WriteByte(&_10713_obj, '>');
	return _23d16bdeb_Str(&_10713_obj);;
}



inline jule::Str _1c8051010_sptr(_1c804e86b_typeCoder* _self_, jule::Ptr<_1b9c997d3_Sptr> _11527_sptr) {
	return _1c8050bbe_asSptr(_self_, _1c8054e15_kind(_self_, (*(_11527_sptr))._field_Elem));;
}



inline jule::Str _1c8051351_ptr(_1c804e86b_typeCoder* _self_, jule::Ptr<_1b9c9d09a_Ptr> _12026_p) {
	;
	if (_1b9c9dad4_IsUnsafe(_12026_p.ptr())) {
		return jule::Str::lit("void*", 5);;
	};
	return (_1c8054e15_kind(_self_, (*(_12026_p))._field_Elem) + jule::Str::lit("*", 1));;
}



inline jule::Str _1c8051692_enumDecl(_1c804e86b_typeCoder* _self_, jule::Ptr<_1b9b64c0e_Enum> _12931_e) {
	return _1c8054e15_kind(_self_, (*((*(_12931_e))._field_Kind))._field_Kind);;
}



inline jule::Str _1c80519d3_typeEnumDecl(_1c804e86b_typeCoder* _self_, jule::Ptr<_1b9b66419_TypeEnum> _13435_e) {
	return jule::Str::lit("jule::Any", 9);;
}



inline jule::Str _1c8051d24_asSlice(_1c804e86b_typeCoder* _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _13830_elem) {
	_23d16295d_StrBuilder _13913_obj = static__23d162c7c_New(45LL);;
	_23d16b604_WriteStr(&_13913_obj, jule::Str::lit("jule::Slice<", 12));
	_23d16b604_WriteStr(&_13913_obj, _1c8054e15_kind(_self_, _13830_elem));
	_23d16b8ac_WriteByte(&_13913_obj, '>');
	return _23d16bdeb_Str(&_13913_obj);;
}



inline jule::Str _1c8052165_slice(_1c804e86b_typeCoder* _self_, jule::Ptr<_1b9c9a2a6_Slc> _14728_s) {
	return _1c8051d24_asSlice(_self_, (*(_14728_s))._field_Elem);;
}



inline jule::Str _1c80524a6_mapType(_1c804e86b_typeCoder* _self_, jule::Ptr<_1b9c9b94a_Map> _15230_m) {
	_23d16295d_StrBuilder _15313_obj = static__23d162c7c_New(43LL);;
	_23d16b604_WriteStr(&_15313_obj, jule::Str::lit("jule::Map<", 10));
	_23d16b604_WriteStr(&_15313_obj, _1c8054e15_kind(_self_, (*(_15230_m))._field_Key));
	_23d16b8ac_WriteByte(&_15313_obj, ',');
	_23d16b604_WriteStr(&_15313_obj, _1c8054e15_kind(_self_, (*(_15230_m))._field_Val));
	_23d16b8ac_WriteByte(&_15313_obj, '>');
	return _23d16bdeb_Str(&_15313_obj);;
}



inline jule::Str _1c80527e7_traitIdent(_1c804e86b_typeCoder* _self_, jule::Str _16229_ident) {
	_23d16295d_StrBuilder _16313_obj = static__23d162c7c_New(static_cast<jule::I32>((13LL + _16229_ident.len())));;
	_23d16b604_WriteStr(&_16313_obj, jule::Str::lit("jule::Trait<", 12));
	_23d16b604_WriteStr(&_16313_obj, _16229_ident);
	_23d16b8ac_WriteByte(&_16313_obj, '>');
	return _23d16bdeb_Str(&_16313_obj);;
}



inline jule::Str _1c8052b38_traitDecl(_1c804e86b_typeCoder* _self_, jule::Ptr<_1b9b62514_Trait> _17128_t) {
	return _1c80527e7_traitIdent(_self_, static__1c7e7c348_traitDecl(_17128_t));;
}



inline jule::Str _1c8052e79_structure(_1c804e86b_typeCoder* _self_, jule::Ptr<_1b9b393a9_Struct> _17628_s) {
	_23d16295d_StrBuilder _17713_rep = static__23d162c7c_New(32LL);;
	if (((*(_17628_s))._field_Binded && (!(_1c805bd0c_hasDirective(&((*(_17628_s))._field_Directives), jule::Str::lit("typedef", 7)))))) {
		_23d16b604_WriteStr(&_17713_rep, jule::Str::lit("struct ", 7));
	};
	_23d16b604_WriteStr(&_17713_rep, static__1c7e7c8cb_structure(&(_17628_s)));
	return _23d16bdeb_Str(&_17713_rep);;
}



inline jule::Str _1c80532ba_structureIns(_1c804e86b_typeCoder* _self_, jule::Ptr<_1b9b3c137_StructIns> _18635_s) {
	if ((*((*(_18635_s))._field_Decl))._field_Binded) {
		_23d16295d_StrBuilder _18817_ident = static__23d162c7c_New(32LL);;
		_23d16b604_WriteStr(&_18817_ident, static__1c7e7cb95_structureIns(&(_18635_s)));
		if (((*(_18635_s))._field_Generics.len() > 0LL)) {
			_23d16b8ac_WriteByte(&_18817_ident, '<');
			{
				auto expr = &((*(_18635_s))._field_Generics);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1cb4a244c:;
				if (it != expr_end) {
					jule::I32 _19222_i = it - expr->begin();
					jule::Ptr<_1b9c8b7e7_InsGeneric> _19229_g = *it;
					{
						_23d16b604_WriteStr(&_18817_ident, _1c8054e15_kind(_self_, (*(_19229_g))._field_Kind));
						if ((((*(_18635_s))._field_Generics.len() - _19222_i) > 1LL)) {
							_23d16b8ac_WriteByte(&_18817_ident, ',');
						};
					}
					_iter_next_1cb4a244c:;
					++it;
					_19222_i++;
					goto _iter_begin_1cb4a244c;
				}
				_iter_end_1cb4a244c:;
			};
			_23d16b8ac_WriteByte(&_18817_ident, '>');
		};
		jule::Ptr<_1b9b17bd4_Directive> _20013_d = _1c805b944_findDirective(&((*((*(_18635_s))._field_Decl))._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_20013_d != nullptr)) {
			jule::Str _20221_buf = _23d16bdeb_Str(&_18817_ident);;
			_23d16c0e9_Clear(&_18817_ident);
			_23d16b604_WriteStr(&_18817_ident, _1c804bd52_concatAllParts((*(_20013_d))._field_Args));
			_23d16b604_WriteStr(&_18817_ident, jule::Str::lit("::", 2));
			_23d16b604_WriteStr(&_18817_ident, _20221_buf);
		};
		return _23d16bdeb_Str(&_18817_ident);;
	};
	return static__1c7e7cb95_structureIns(&(_18635_s));;
}



inline jule::Str _1c805360b_array(_1c804e86b_typeCoder* _self_, jule::Ptr<_1b9c9c5c7_Arr> _21428_a) {
	_23d16295d_StrBuilder _21513_obj = static__23d162c7c_New(45LL);;
	_23d16b604_WriteStr(&_21513_obj, jule::Str::lit("jule::Array<", 12));
	_23d16b604_WriteStr(&_21513_obj, _1c8054e15_kind(_self_, (*(_21428_a))._field_Elem));
	_23d16b8ac_WriteByte(&_21513_obj, ',');
	_23d16b604_WriteStr(&_21513_obj, _1ec6727b6_Itoa((*(_21428_a))._field_N));
	_23d16b8ac_WriteByte(&_21513_obj, '>');
	return _23d16bdeb_Str(&_21513_obj);;
}



inline jule::Str _1c8053c8d_paramIns(_1c804e86b_typeCoder* _self_, jule::Ptr<_1b9b511c3_ParamIns>* _24132_p) {
	_23d16295d_StrBuilder _24213_obj = static__23d162c7c_New(32LL);;
	if ((*((*((*(_24132_p))))._field_Decl))._field_Variadic) {
		_23d16b604_WriteStr(&_24213_obj, jule::Str::lit("jule::Slice<", 12));
		_23d16b604_WriteStr(&_24213_obj, _1c8054e15_kind(_self_, (*((*(_24132_p))))._field_Kind));
		_23d16b8ac_WriteByte(&_24213_obj, '>');
	} else {
		_23d16b604_WriteStr(&_24213_obj, _1c8054e15_kind(_self_, (*((*(_24132_p))))._field_Kind));
	};
	if ((*((*((*(_24132_p))))._field_Decl))._field_Reference) {
		_23d16b8ac_WriteByte(&_24213_obj, '*');
	};
	return _23d16bdeb_Str(&_24213_obj);;
}



inline void _1c8054442_funcInsResult(_1c804e86b_typeCoder* _self_, _23d16295d_StrBuilder* _27137_s, jule::Ptr<_1b9b5216e_FnIns>* _27157_f) {
	if (_1b9b4e6dd_IsVoid((*((*(_27157_f))))._field_Decl.ptr())) {
		if ((*((*((*(_27157_f))))._field_Decl))._field_Exceptional) {
			_23d16b604_WriteStr(_27137_s, jule::Str::lit("jule::VoidExceptional", 21));
		} else {
			_23d16b604_WriteStr(_27137_s, jule::Str::lit("void", 4));
		};
		return;;
	};
	if ((*((*((*(_27157_f))))._field_Decl))._field_Exceptional) {
		_23d16b604_WriteStr(_27137_s, jule::Str::lit("jule::Exceptional<", 18));
		_1c8059bc8_codeMut1((*(_self_))._field_rc.ptr(), _27137_s, &((*((*(_27157_f))))._field_Result));
		_23d16b8ac_WriteByte(_27137_s, '>');
		return;;
	};
	_1c8059bc8_codeMut1((*(_self_))._field_rc.ptr(), _27137_s, &((*((*(_27157_f))))._field_Result));
}



inline jule::Str _1c8054783_anonFunc(_1c804e86b_typeCoder* _self_, jule::Ptr<_1b9b5216e_FnIns> _28931_f) {
	if ((((*(_28931_f))._field_Result != nullptr) && (_1b9c92655_Tup((*(_28931_f))._field_Result.ptr()) != nullptr))) {
		_1c8041297_pushResultIns((*(_self_))._field_oc, &(_28931_f));
	};
	_23d16295d_StrBuilder _29313_decl = static__23d162c7c_New(20LL);;
	_1c8054442_funcInsResult(_self_, &(_29313_decl), &(_28931_f));
	_23d16b8ac_WriteByte(&_29313_decl, '(');
	if (((*(_28931_f))._field_Params.len() > 0LL)) {
		{
			auto expr = &((*(_28931_f))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1cb4b70bb:;
			if (it != expr_end) {
				jule::I32 _29718_i = it - expr->begin();
				jule::Ptr<_1b9b511c3_ParamIns> _29725_param = *it;
				{
					if (_1b9b4cdb2_IsSelf((*(_29725_param))._field_Decl.ptr())) {
						goto _iter_next_1cb4b70bb;
					};
					_23d16b604_WriteStr(&_29313_decl, _1c8053c8d_paramIns(_self_, &(_29725_param)));
					if ((((*(_28931_f))._field_Params.len() - _29718_i) > 1LL)) {
						_23d16b8ac_WriteByte(&_29313_decl, ',');
					};
				}
				_iter_next_1cb4b70bb:;
				++it;
				_29718_i++;
				goto _iter_begin_1cb4b70bb;
			}
			_iter_end_1cb4b70bb:;
		};
	} else {
		_23d16b604_WriteStr(&_29313_decl, jule::Str::lit("void", 4));
	};
	_23d16b8ac_WriteByte(&_29313_decl, ')');
	return _23d16bdeb_Str(&_29313_decl);;
}



inline jule::Str _1c8054ac4_func(_1c804e86b_typeCoder* _self_, jule::Ptr<_1b9b5216e_FnIns> _31427_f) {
	_23d16295d_StrBuilder _31513_obj = static__23d162c7c_New(42LL);;
	_23d16b604_WriteStr(&_31513_obj, jule::Str::lit("jule::Fn<", 9));
	_23d16b604_WriteStr(&_31513_obj, _1c8054783_anonFunc(_self_, _31427_f));
	_23d16b8ac_WriteByte(&_31513_obj, '>');
	return _23d16bdeb_Str(&_31513_obj);;
}



inline jule::Str _1c8054e15_kind(_1c804e86b_typeCoder* _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _32327_k) {
	{
		
		if ((_1b9c91da2_Struct(_32327_k.ptr()) != nullptr)) {
			_case_begin_1cb4bb697:;
			{
				return _1c80532ba_structureIns(_self_, _1b9c91da2_Struct(_32327_k.ptr()));;
			}
		}
		else if (_1b9c8e025_Binded(_32327_k.ptr())) {
			_case_begin_1cb4bb71e:;
			{
				return (*(_32327_k))._field_BindIdent;;
			}
		}
		else if ((_1b9c9082e_Prim(_32327_k.ptr()) != nullptr)) {
			_case_begin_1cb4bb796:;
			{
				return _1c805053c_prim(_self_, _1b9c9082e_Prim(_32327_k.ptr()));;
			}
		}
		else if ((_1b9c92655_Tup(_32327_k.ptr()) != nullptr)) {
			_case_begin_1cb4bb81d:;
			{
				return _1c805087d_tuple(_self_, _1b9c92655_Tup(_32327_k.ptr()));;
			}
		}
		else if ((_1b9c90ab5_Sptr(_32327_k.ptr()) != nullptr)) {
			_case_begin_1cb4bb895:;
			{
				return _1c8051010_sptr(_self_, _1b9c90ab5_Sptr(_32327_k.ptr()));;
			}
		}
		else if ((_1b9c90d4b_Ptr(_32327_k.ptr()) != nullptr)) {
			_case_begin_1cb4bb91c:;
			{
				return _1c8051351_ptr(_self_, _1b9c90d4b_Ptr(_32327_k.ptr()));;
			}
		}
		else if ((_1b9c910d2_Enum(_32327_k.ptr()) != nullptr)) {
			_case_begin_1cb4bb994:;
			{
				return _1c8051692_enumDecl(_self_, _1b9c910d2_Enum(_32327_k.ptr()));;
			}
		}
		else if ((_1b9c91368_TypeEnum(_32327_k.ptr()) != nullptr)) {
			_case_begin_1cb4bba1b:;
			{
				return _1c80519d3_typeEnumDecl(_self_, _1b9c91368_TypeEnum(_32327_k.ptr()));;
			}
		}
		else if ((_1b9c91885_Slc(_32327_k.ptr()) != nullptr)) {
			_case_begin_1cb4bba93:;
			{
				return _1c8052165_slice(_self_, _1b9c91885_Slc(_32327_k.ptr()));;
			}
		}
		else if ((_1b9c923be_Map(_32327_k.ptr()) != nullptr)) {
			_case_begin_1cb4bbb1a:;
			{
				return _1c80524a6_mapType(_self_, _1b9c923be_Map(_32327_k.ptr()));;
			}
		}
		else if ((_1b9c92138_Trait(_32327_k.ptr()) != nullptr)) {
			_case_begin_1cb4bbb92:;
			{
				return _1c8052b38_traitDecl(_self_, _1b9c92138_Trait(_32327_k.ptr()));;
			}
		}
		else if ((_1b9c915ee_Arr(_32327_k.ptr()) != nullptr)) {
			_case_begin_1cb4bbc19:;
			{
				return _1c805360b_array(_self_, _1b9c915ee_Arr(_32327_k.ptr()));;
			}
		}
		else if ((_1b9c91b1b_Fn(_32327_k.ptr()) != nullptr)) {
			_case_begin_1cb4bbc91:;
			{
				return _1c8054ac4_func(_self_, _1b9c91b1b_Fn(_32327_k.ptr()));;
			}
		}
		_match_end_1cb4bb4bb:;
	};
	{
		auto &_match_expr{ (*(_32327_k))._field_Kind };
		
		if (_match_expr.type_is(true, 27)) {
			_case_begin_1cb4bbd4b:;
			{
				return (*((*(_32327_k))._field_Kind.cast_ptr<_1c804dc66_customType>(27)))._field_kind;;
			}
		}
		else {
			_case_begin_1cb4c4da9:;
			{
				return jule::Str::lit("[<unimplemented_type_kind>]", 27);;
			}
		}
		_match_end_1cb4c4d54:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c804e86b_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c8057643_resultCoder> static__1c8057b1b_new(jule::Ptr<_1c804e86b_typeCoder>* _37724_tc) {
	return jule::new_ptr<_1c8057643_resultCoder>(_1c8057643_resultCoder{._field_tc=(*(_37724_tc))});;
}



inline void _1c8057e7e_ptr(_1c8057643_resultCoder* _self_, _23d16295d_StrBuilder* _38127_s, jule::Ptr<_1b9c9d09a_Ptr> _38146_p) {
	_23d16b604_WriteStr(_38127_s, jule::Str::lit("p", 1));
	_1c8059865_codeMut(_self_, _38127_s, &((*(_38146_p))._field_Elem));
}



inline void _1c80582e2_sptr(_1c8057643_resultCoder* _self_, _23d16295d_StrBuilder* _38628_s, jule::Ptr<_1b9c997d3_Sptr> _38647_p) {
	_23d16b604_WriteStr(_38628_s, jule::Str::lit("x", 1));
	_1c8059865_codeMut(_self_, _38628_s, &((*(_38647_p))._field_Elem));
}



inline void _1c8058655_mapType(_1c8057643_resultCoder* _self_, _23d16295d_StrBuilder* _39131_s, jule::Ptr<_1b9c9b94a_Map> _39150_p) {
	_23d16b604_WriteStr(_39131_s, jule::Str::lit("m", 1));
	_1c8059865_codeMut(_self_, _39131_s, &((*(_39150_p))._field_Key));
	_1c8059865_codeMut(_self_, _39131_s, &((*(_39150_p))._field_Val));
}



inline void _1c80589b8_slice(_1c8057643_resultCoder* _self_, _23d16295d_StrBuilder* _39729_s, jule::Ptr<_1b9c9a2a6_Slc> _39748_slc) {
	_23d16b604_WriteStr(_39729_s, jule::Str::lit("s", 1));
	_1c8059865_codeMut(_self_, _39729_s, &((*(_39748_slc))._field_Elem));
}



inline void _1c8058d2b_arr(_1c8057643_resultCoder* _self_, _23d16295d_StrBuilder* _40227_s, jule::Ptr<_1b9c9c5c7_Arr> _40246_arr) {
	_23d16b604_WriteStr(_40227_s, jule::Str::lit("a", 1));
	_23d16b604_WriteStr(_40227_s, _1ec6724ec_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>((*(_40246_arr))._field_N)), 16LL));
	_1c8059865_codeMut(_self_, _40227_s, &((*(_40246_arr))._field_Elem));
}



inline void _1c805918e_func(_1c8057643_resultCoder* _self_, _23d16295d_StrBuilder* _40828_s, jule::Ptr<_1b9b5216e_FnIns> _40847_f) {
	_23d16b604_WriteStr(_40828_s, jule::Str::lit("f", 1));
	{
		auto expr = &((*(_40847_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb4cbee3:;
		if (it != expr_end) {
			jule::Ptr<_1b9b511c3_ParamIns> _41021_p = *it;
			{
				if ((*((*(_41021_p))._field_Decl))._field_Reference) {
					_23d16b604_WriteStr(_40828_s, jule::Str::lit("r", 1));
				};
				_1c8059865_codeMut(_self_, _40828_s, &((*(_41021_p))._field_Kind));
			}
			_iter_next_1cb4cbee3:;
			++it;
			goto _iter_begin_1cb4cbee3;
		}
		_iter_end_1cb4cbee3:;
	};
	if (((*(_40847_f))._field_Result != nullptr)) {
		_1c8059865_codeMut(_self_, _40828_s, &((*(_40847_f))._field_Result));
	};
}



inline void _1c8059502_tup(_1c8057643_resultCoder* _self_, _23d16295d_StrBuilder* _42127_s, jule::Ptr<_1b9c9ad9a_Tuple> _42146_tup) {
	{
		auto expr = &((*(_42146_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb4ce688:;
		if (it != expr_end) {
			jule::Ptr<_1b9c8d1cd_TypeKind> _42221_t = *it;
			{
				_23d16b604_WriteStr(_42127_s, jule::Str::lit("__jule_tuple_", 13));
				_1c8059865_codeMut(_self_, _42127_s, &(_42221_t));
			}
			_iter_next_1cb4ce688:;
			++it;
			goto _iter_begin_1cb4ce688;
		}
		_iter_end_1cb4ce688:;
	};
}



inline void _1c8059865_codeMut(_1c8057643_resultCoder* _self_, _23d16295d_StrBuilder* _42831_s, jule::Ptr<_1b9c8d1cd_TypeKind>* _42851_t) {
	{
		auto &_match_expr{ (*((*(_42851_t))))._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_1cb4d08ed:;
			{
				_1c8057e7e_ptr(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_1b9c9d09a_Ptr>(26));
			}
		}
		else if (_match_expr.type_is(true, 21)) {
			_case_begin_1cb4d0cb6:;
			{
				_1c80582e2_sptr(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_1b9c997d3_Sptr>(21));
			}
		}
		else if (_match_expr.type_is(true, 24)) {
			_case_begin_1cb4d0d2c:;
			{
				_1c8058655_mapType(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_1b9c9b94a_Map>(24));
			}
		}
		else if (_match_expr.type_is(true, 22)) {
			_case_begin_1cb4d0d93:;
			{
				_1c80589b8_slice(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_1b9c9a2a6_Slc>(22));
			}
		}
		else if (_match_expr.type_is(true, 25)) {
			_case_begin_1cb4d0e1a:;
			{
				_1c8058d2b_arr(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_1b9c9c5c7_Arr>(25));
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1cb4d139e:;
			{
				_1c805918e_func(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_1b9b5216e_FnIns>(1));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1cb4d1426:;
			{
				jule::Ptr<_1b9b64c0e_Enum> _44313_te = (*((*(_42851_t))))._field_Kind.cast_ptr<_1b9b64c0e_Enum>(3);;
				_23d16b604_WriteStr(_42831_s, static__1c7e7b5bc_toOut(&((*(_44313_te))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_44313_te))));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1cb4d149d:;
			{
				jule::Ptr<_1b9b66419_TypeEnum> _44613_te = (*((*(_42851_t))))._field_Kind.cast_ptr<_1b9b66419_TypeEnum>(4);;
				_23d16b604_WriteStr(_42831_s, static__1c7e7b5bc_toOut(&((*(_44613_te))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_44613_te))));
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1cb4d1525:;
			{
				jule::Ptr<_1b9b3c137_StructIns> _44917_si = (*((*(_42851_t))))._field_Kind.cast_ptr<_1b9b3c137_StructIns>(0);;
				_23d16b604_WriteStr(_42831_s, static__1c7e7cb95_structureIns(&(_44917_si)));
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1cb4d159c:;
			{
				jule::Ptr<_1b9b62514_Trait> _45217_trt = (*((*(_42851_t))))._field_Kind.cast_ptr<_1b9b62514_Trait>(2);;
				_23d16b604_WriteStr(_42831_s, static__1c7e7c348_traitDecl(_45217_trt));
			}
		}
		else if (_match_expr.type_is(true, 20)) {
			_case_begin_1cb4d1624:;
			{
				_23d16b604_WriteStr(_42831_s, (*((*((*(_42851_t))))._field_Kind.cast_ptr<_1b9c95ca7_Prim>(20)))._field_Kind);
			}
		}
		else if (_match_expr.type_is(true, 23)) {
			_case_begin_1cb4d169b:;
			{
				_1c8059502_tup(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_1b9c9ad9a_Tuple>(23));
			}
		}
		else {
			_case_begin_1cb4d0c50:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:459:13"));;
			}
		}
		_match_end_1cb4d0bea:;
	};
}



inline void _1c8059bc8_codeMut1(_1c8057643_resultCoder* _self_, _23d16295d_StrBuilder* _46332_s, jule::Ptr<_1b9c8d1cd_TypeKind>* _46352_t) {
	jule::Ptr<_1b9c9ad9a_Tuple> _46413_tup = _1b9c92655_Tup((*(_46352_t)).ptr());;
	if ((_46413_tup != nullptr)) {
		_1c8059502_tup(_self_, _46332_s, _46413_tup);
	} else {
		_23d16b604_WriteStr(_46332_s, _1c8054e15_kind((*(_self_))._field_tc.ptr(), (*(_46352_t))));
	};
}



inline jule::Str _1c8059ed6_code(_1c8057643_resultCoder* _self_, jule::Ptr<_1b9c8d1cd_TypeKind>* _47228_t) {
	_23d16295d_StrBuilder _47313_s = static__23d162c7c_New(20LL);;
	_1c8059865_codeMut(_self_, &(_47313_s), _47228_t);
	return _23d16bdeb_Str(&_47313_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c8057643_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1cb4dc0ad_Name(_1cb4dbb90_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1cb4dc212_What(_1cb4dbb90_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1cb4dc366_Reset(_1cb4dbb90_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1cb4dc4ba_Short(_1cb4dbb90_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1cb4dbb90_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1cb4e0424_Name(_1cb4e07dc_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1cb4e0567_What(_1cb4e07dc_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1cb4e0ac8_Reset(_1cb4e07dc_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1cb4e0c1b_Short(_1cb4e07dc_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1cb4e07dc_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1cb4e3b20_Name(_1cb4e3ed8_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1cb4e3c63_What(_1cb4e3ed8_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1cb4e42c4_Reset(_1cb4e3ed8_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1cb4e4417_Short(_1cb4e3ed8_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1cb4e3ed8_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1cb4e7360_Name(_1cb4e7728_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1cb4e74a3_What(_1cb4e7728_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1cb4e7a14_Reset(_1cb4e7728_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1cb4e7b57_Short(_1cb4e7728_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1cb4e7728_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1cb4eaa5b_Name(_1cb4eae24_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1cb4eab9e_What(_1cb4eae24_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1cb4eb210_Reset(_1cb4eae24_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1cb4eb353_Short(_1cb4eae24_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1cb4eae24_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c80c44c3_FlagSet> static__1c80c47ae_New(void) {
	return jule::new_ptr<_1c80c44c3_FlagSet>(_1c80c44c3_FlagSet{._field_flags=jule::Slice<jule::Trait<_1c80c2922_CommonFlag>>::alloc(0LL, 20LL)});;
}



inline jule::Trait<_1c80c2922_CommonFlag> _1c80c4c32_FindFlag(_1c80c44c3_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb5056ae:;
		if (it != expr_end) {
			jule::Trait<_1c80c2922_CommonFlag> _7221_flag = *it;
			{
				if ((_1c80c2922_CommonFlag_mptr_data[(_7221_flag).type_offset]._1c80907e1_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;;
				};
			}
			_iter_next_1cb5056ae:;
			++it;
			goto _iter_begin_1cb5056ae;
		}
		_iter_end_1cb5056ae:;
	};
	return nullptr;;
}



inline jule::Trait<_1c80c2922_CommonFlag> _1c80c5073_FindFlagShort(_1c80c44c3_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb506eb8:;
		if (it != expr_end) {
			jule::Trait<_1c80c2922_CommonFlag> _8221_flag = *it;
			{
				if ((_1c80c2922_CommonFlag_mptr_data[(_8221_flag).type_offset]._1c8090989_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;;
				};
			}
			_iter_next_1cb506eb8:;
			++it;
			goto _iter_begin_1cb506eb8;
		}
		_iter_end_1cb506eb8:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1c80c564a_Parse(_1c80c44c3_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_1c80c6e54_argParser _11613_ap = _1c80c6e54_argParser{._field_set=(*(_self_)), ._field_args=_11524_args, };;
	({
		auto except = _1c80cd2ac_parse(&_11613_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(), _11613_ap._field_content);;
}



inline jule::Ptr<_1cb4eae24_Flag> _1cb563574_addFlagCommon(_1c80c44c3_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1cb564d39:;
			{
				goto _match_end_1cb564cc3;
			}
		}
		_match_end_1cb564cc3:;
	};
	if ((_1c80c4c32_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1c80c5073_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1cb4eae24_Flag> _14813_flag = jule::new_ptr<_1cb4eae24_Flag>(_1cb4eae24_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_1c80c2922_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_1c80c2922_CommonFlag>(_14813_flag, 4)); };
	return _14813_flag;;
}

inline jule::Ptr<_1cb4e7728_Flag> _1cb56b88a_addFlagCommon(_1c80c44c3_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1cb56d10b:;
			{
				goto _match_end_1cb56d095;
			}
		}
		_match_end_1cb56d095:;
	};
	if ((_1c80c4c32_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1c80c5073_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1cb4e7728_Flag> _14813_flag = jule::new_ptr<_1cb4e7728_Flag>(_1cb4e7728_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_1c80c2922_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_1c80c2922_CommonFlag>(_14813_flag, 3)); };
	return _14813_flag;;
}



inline void _1cb5617b4_AddVar(_1c80c44c3_FlagSet* _self_, jule::Ptr<jule::Str> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1cb4eae24_Flag> _17613_flag = _1cb563574_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	(*(_17613_flag))._field_default=(*(_17532_var));
	(*(_17613_flag))._field_data=_17532_var;
}

inline void _1cb569b1e_AddVar(_1c80c44c3_FlagSet* _self_, jule::Ptr<jule::Bool> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1cb4e7728_Flag> _17613_flag = _1cb56b88a_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	(*(_17613_flag))._field_default=(*(_17532_var));
	(*(_17613_flag))._field_data=_17532_var;
}





std::ostream &operator<<(std::ostream &_Stream, _1c80c44c3_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _1cb50d7c7_parseInteger(_1c80c6e54_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I32)> _19039_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_19031_s))).empty()) {
			_case_begin_1cb51127a:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_23d14ca9c_HasPrefix((*(_19031_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1cb5117ec:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_23d14ca9c_HasPrefix((*(_19031_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1cb5115cc:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_23d14ca9c_HasPrefix((*(_19031_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1cb511643:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_1cb510e4a:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1cb510dd4:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1cb510d18:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1cb51600a_parseInteger(_1c80c6e54_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I32)> _19039_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_19031_s))).empty()) {
			_case_begin_1cb518969:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_23d14ca9c_HasPrefix((*(_19031_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1cb518edb:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_23d14ca9c_HasPrefix((*(_19031_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1cb518cbb:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_23d14ca9c_HasPrefix((*(_19031_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1cb518d32:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_1cb518639:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1cb5185c3:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1cb518507:;
	};
	return __jule_func_result;;
}



inline jule::Str _1c80cc5ca_getData(_1c80c6e54_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1c80cc850_processFlag(_1c80c6e54_argParser* _self_, jule::Trait<_1c80c2922_CommonFlag>* _21735_flag) {
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1cb50ae67:;
			{
				jule::Ptr<_1cb4e7728_Flag> _22017_bf = (*(_21735_flag)).cast_ptr<_1cb4e7728_Flag>(3);;
				(*((*(_22017_bf))._field_data))=(!((*(_22017_bf))._field_default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1cb50ae12:;
	};
	jule::Str _2259_data = _1c80cc5ca_getData(_self_);;
	if ((_2259_data).empty()) {
		return jule::VoidExceptional(jule::Any(((jule::Str::lit("--", 2) + _1c80c2922_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1c80907e1_Name((*(_21735_flag)))) + jule::Str::lit(": expression missing", 20)), &__jule_any_type4));
	};
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1cb50ca4b:;
			{
				jule::Ptr<_1cb4dbb90_Flag> _23217_intf = (*(_21735_flag)).cast_ptr<_1cb4dbb90_Flag>(0);;
				jule::Bool _23327_ok = false;;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1cb50d7c7_parseInteger(_self_, &(_2259_data), jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I32)>([=](jule::Str _23365_s, jule::I32 _23373_base) mutable -> __jule_tuple_i64__jule_tuple_bool {
						__jule_tuple_i64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::I64>(({
							auto except = _1ec660e47_ParseInt(_23365_s, _23373_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LL;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*((*(_23217_intf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23327_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23327_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str::lit("--", 2) + _1c80c2922_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1c80907e1_Name((*(_21735_flag)))) + jule::Str::lit(": expression must be valid signed integer", 41)), &__jule_any_type4));
				};
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1cb50cab2:;
			{
				jule::Ptr<_1cb4e07dc_Flag> _24017_uintf = (*(_21735_flag)).cast_ptr<_1cb4e07dc_Flag>(1);;
				jule::Bool _24128_ok = false;;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1cb51600a_parseInteger(_self_, &(_2259_data), jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I32)>([=](jule::Str _24166_s, jule::I32 _24174_base) mutable -> __jule_tuple_u64__jule_tuple_bool {
						__jule_tuple_u64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(({
							auto except = _1ec660991_ParseUint(_24166_s, _24174_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LLU;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*((*(_24017_uintf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_24128_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_24128_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str::lit("--", 2) + _1c80c2922_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1c80907e1_Name((*(_21735_flag)))) + jule::Str::lit(": expression must be valid unsigned integer", 43)), &__jule_any_type4));
				};
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1cb50cb28:;
			{
				jule::Ptr<_1cb4e3ed8_Flag> _24817_ff = (*(_21735_flag)).cast_ptr<_1cb4e3ed8_Flag>(2);;
				(*((*(_24817_ff))._field_data))=static_cast<jule::F64>(({
					auto except = _1ec667899_ParseFloat(_2259_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional(jule::Any(((jule::Str::lit("--", 2) + _1c80c2922_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1c80907e1_Name((*(_21735_flag)))) + jule::Str::lit(": expression must be valid floating-point", 41)), &__jule_any_type4));
					} 0;});
				}));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1cb50cb8e:;
			{
				(*((*((*(_21735_flag)).cast_ptr<_1cb4eae24_Flag>(4)))._field_data))=_2259_data;
			}
		}
		_match_end_1cb50c232:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1c80ccb08_singleDash(_1c80c6e54_argParser* _self_, jule::Str* _25730_arg) {
	if (((*(_25730_arg)).len() == 1LL)) {
		return jule::VoidExceptional(jule::Any(((*(_25730_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4));
	};
	jule::Slice<jule::I32> _2619_rarg = static_cast<jule::Slice<jule::I32>>((*(_25730_arg))).slice(1LL);;
	{
		auto expr = &(_2619_rarg);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb5204dc:;
		if (it != expr_end) {
			jule::I32 *_26216_r = it;
			{
				jule::Trait<_1c80c2922_CommonFlag> _26317_flag = _1c80c5073_FindFlagShort(&(*(_self_))._field_set, (*(_26216_r)));;
				if ((_26317_flag == nullptr)) {
					return jule::VoidExceptional(jule::Any((((*(_25730_arg)) + jule::Str::lit(": flag is not exist: ", 21)) + jule::Str::from_rune((*(_26216_r)))), &__jule_any_type4));
				};
				({
					auto except = _1c80cc850_processFlag(_self_, &(_26317_flag));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1cb5204dc:;
			++it;
			goto _iter_begin_1cb5204dc;
		}
		_iter_end_1cb5204dc:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1c80ccdb1_doubleDash(_1c80c6e54_argParser* _self_, jule::Str* _27230_arg) {
	if (((*(_27230_arg)).len() == 2LL)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4));
	};
	jule::Trait<_1c80c2922_CommonFlag> _27613_flag = _1c80c4c32_FindFlag(&(*(_self_))._field_set, (*(_27230_arg)).slice(2LL));;
	if ((_27613_flag == nullptr)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str::lit(": flag is not exist", 19)), &__jule_any_type4));
	};
	({
		auto except = _1c80cc850_processFlag(_self_, &(_27613_flag));
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1c80cd0ae_tryArg(_1c80c6e54_argParser* _self_) {
	jule::Str _2849_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_2849_arg[0LL] == '-')) {
		if (((_2849_arg.len() > 1LL) && (_2849_arg[1LL] == '-'))) {
			({
				auto except = _1c80ccdb1_doubleDash(_self_, &(_2849_arg));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1c80ccb08_singleDash(_self_, &(_2849_arg));
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_2849_arg); };
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1c80cd2ac_parse(_1c80c6e54_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1c80cd0ae_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1cb526bdb:;
	}
	_iter_end_1cb526bdb:;;
	return jule::VoidExceptional();
}





std::ostream &operator<<(std::ostream &_Stream, _1c80c6e54_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c803eaae_ObjectCoder> static__1c803eeaa_New(jule::Ptr<_1ba834944_IR>* _9324_ir, _1c803d096_SerializationInfo _9333_info) {
	jule::Ptr<_1c803eaae_ObjectCoder> _9413_oc = jule::new_ptr<_1c803eaae_ObjectCoder>(_1c803eaae_ObjectCoder{._field_ir=(*(_9324_ir)), ._field_info=_9333_info, });;
	(*(_9413_oc))._field_ec=static__1c7e62b58_new(&(_9413_oc));
	(*(_9413_oc))._field_sc=static__1c7e58b93_new(&(_9413_oc));
	(*(_9413_oc))._field_tc=static__1c804edaa_new(&(_9413_oc));
	return _9413_oc;;
}



inline void _1c8040263_write(jule::Ptr<_1c803eaae_ObjectCoder> _self_, jule::Str _10425_s) {
	_23d16b604_WriteStr(&(*(_self_))._field_Obj, _10425_s);
}



inline void _1c8040461_addIndent(jule::Ptr<_1c803eaae_ObjectCoder> _self_) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_indentBuffer; __jule_push_dest.push(9LLU); };
}



inline void _1c804065e_doneIndent(jule::Ptr<_1c803eaae_ObjectCoder> _self_) {
	(*(_self_))._field_indentBuffer=(*(_self_))._field_indentBuffer.slice(0LL, ((*(_self_))._field_indentBuffer.len() - 1LL));
}



inline void _1c804085c_indent(jule::Ptr<_1c803eaae_ObjectCoder> _self_) {
	_23d16b34b_Write(&(*(_self_))._field_Obj, (*(_self_))._field_indentBuffer);
}



inline jule::I32 _1c8040b9d_findAnyType(jule::Ptr<_1c803eaae_ObjectCoder> _self_, jule::Ptr<_1b9c8d1cd_TypeKind>* _12336_t) {
	{
		auto expr = &((*(_self_))._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb358dd6:;
		if (it != expr_end) {
			jule::I32 _12414_i = it - expr->begin();
			jule::Ptr<_1b9c8d1cd_TypeKind> _12421_at = *it;
			{
				if (_1b9c8d8d7_Equal(_12421_at, (*(_12336_t)))) {
					return _12414_i;;
				};
			}
			_iter_next_1cb358dd6:;
			++it;
			_12414_i++;
			goto _iter_begin_1cb358dd6;
		}
		_iter_end_1cb358dd6:;
	};
	return -1LL;;
}



inline jule::I32 _1c8040ede_pushAnyType(jule::Ptr<_1c803eaae_ObjectCoder> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _13235_t) {
	if ((_1b9c910d2_Enum(_13235_t.ptr()) != nullptr)) {
		_13235_t=(*((*(_1b9c910d2_Enum(_13235_t.ptr())))._field_Kind))._field_Kind;
	};
	jule::I32 _13613_i = _1c8040b9d_findAnyType(_self_, &(_13235_t));;
	if ((_13613_i != -1LL)) {
		return _13613_i;;
	};
	_13613_i=static_cast<jule::I32>((*(_self_))._field_anyTypeMap.len());
	{ jule::Slice<jule::Ptr<_1b9c8d1cd_TypeKind>> &__jule_push_dest = (*(_self_))._field_anyTypeMap; __jule_push_dest.push(_13235_t); };
	jule::Str _1429_si = _1ec6727b6_Itoa(_13613_i);;
	if ((_1b9c90ab5_Sptr(_13235_t.ptr()) != nullptr)) {
		jule::Str _14413_elem_kind = _1c8054e15_kind((*(_self_))._field_tc.ptr(), (*(_1b9c90ab5_Sptr(_13235_t.ptr())))._field_Elem);;
		jule::Str _14513_kind = _1c8050bbe_asSptr((*(_self_))._field_tc.ptr(), _14413_elem_kind);;
		_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("void __jule_any_type", 20));
		_23d16b604_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64));
		_23d16b604_WriteStr(&(*(_self_))._field_anyObj, _14413_elem_kind);
		_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(">().dealloc(); }\n", 17));
		_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_23d16b604_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("{.dealloc=__jule_any_type", 25));
		_23d16b604_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 58));
		_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
		_23d16b604_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
		_23d16b604_WriteStr(&(*(_self_))._field_anyObj, _14513_kind);
		_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
		_23d16b604_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52));
	} else {
		jule::Bool _17113_comparable = _1b9c8e7c8_Comparable(_13235_t.ptr());;
		jule::Str _17213_kind = _1c8054e15_kind((*(_self_))._field_tc.ptr(), _13235_t);;
		if (_17213_kind.equal("[<unimplemented_type_kind>]", 27)) {
			jule::outln(_1b9c8d596_Str(_13235_t.ptr()));
		};
		_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("void __jule_any_type", 20));
		_23d16b604_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64));
		_23d16b604_WriteStr(&(*(_self_))._field_anyObj, _17213_kind);
		_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(">().dealloc(); }\n", 17));
		if (_17113_comparable) {
			_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_23d16b604_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
			_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<", 66));
			_23d16b604_WriteStr(&(*(_self_))._field_anyObj, _17213_kind);
			_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("*>(alloc) == *reinterpret_cast<", 31));
			_23d16b604_WriteStr(&(*(_self_))._field_anyObj, _17213_kind);
			_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("*>(other); }\n", 13));
		};
		_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Str __jule_any_type", 25));
		_23d16b604_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<", 76));
		if ((_1b9c90d4b_Ptr(_13235_t.ptr()) == nullptr)) {
			_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("const ", 6));
			_23d16b604_WriteStr(&(*(_self_))._field_anyObj, _17213_kind);
		} else {
			_23d16b604_WriteStr(&(*(_self_))._field_anyObj, _17213_kind);
			_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("* const", 7));
		};
		_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("*>(alloc)); }\n", 14));
		_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_23d16b604_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("{.dealloc=__jule_any_type", 25));
		_23d16b604_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_dealloc, ", 10));
		if (_17113_comparable) {
			_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(".eq=__jule_any_type", 19));
			_23d16b604_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
			_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_eq, ", 5));
		};
		_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(".to_str=__jule_any_type", 23));
		_23d16b604_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_to_str};\n", 10));
		if (_17113_comparable) {
			_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_23d16b604_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
			_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
			_23d16b604_WriteStr(&(*(_self_))._field_anyObj, _17213_kind);
			_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
			_23d16b604_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
			_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" && __jule_any_type", 19));
			_23d16b604_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
			_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_eq(any.data.alloc, (void*)&other); }\n", 38));
		};
	};
	return _13613_i;;
}



inline void _1c8041297_pushResultIns(jule::Ptr<_1c803eaae_ObjectCoder> _self_, jule::Ptr<_1b9b5216e_FnIns>* _24038_f) {
	jule::Str _2419_s = _1c8059ed6_code((*((*(_self_))._field_tc))._field_rc.ptr(), &((*((*(_24038_f))))._field_Result));;
	jule::Bool _24212_ok = false;;
	(*(_self_))._field_resultMap.lookup(_2419_s, nullptr, &(_24212_ok));
	if (_24212_ok) {
		return;;
	};
	(*(_self_))._field_resultMap[_2419_s]=false;
	_23d16b604_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit("struct ", 7));
	_23d16b604_WriteStr(&(*(_self_))._field_resultDecls, _2419_s);
	_23d16b604_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit(" {\n", 3));
	{
		auto expr = &((*(_1b9c92655_Tup((*((*(_24038_f))))._field_Result.ptr())))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb378730:;
		if (it != expr_end) {
			jule::I32 _25014_i = it - expr->begin();
			jule::Ptr<_1b9c8d1cd_TypeKind> _25021_t = *it;
			{
				_23d16b8ac_WriteByte(&(*(_self_))._field_resultDecls, 9LLU);
				_23d16b604_WriteStr(&(*(_self_))._field_resultDecls, _1c8054e15_kind((*(_self_))._field_tc.ptr(), _25021_t));
				_23d16b8ac_WriteByte(&(*(_self_))._field_resultDecls, ' ');
				_23d16b604_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit("__jule_result_arg", 17));
				_23d16b604_WriteStr(&(*(_self_))._field_resultDecls, _1ec6727b6_Itoa(_25014_i));
				_23d16b604_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit(";\n", 2));
			}
			_iter_next_1cb378730:;
			++it;
			_25014_i++;
			goto _iter_begin_1cb378730;
		}
		_iter_end_1cb378730:;
	};
	_23d16b604_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit("};\n", 3));
}



inline void _1c8041550_pushResult(jule::Ptr<_1c803eaae_ObjectCoder> _self_, jule::Ptr<_1b9b4e26a_Fn>* _26135_f) {
	if ((_1b9b4e6dd_IsVoid((*(_26135_f)).ptr()) || ((*((*((*(_26135_f))))._field_Result))._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I32 _26513_n = (*((*(_26135_f))))._field_Instances.len();;
	if (((*((*(_26135_f))))._field_Generics.len() == 0LL)) {
		_26513_n=1LL;
	};
	{
		auto expr = (*((*(_26135_f))))._field_Instances.slice(0LL, _26513_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1cb37d9bb:;
		if (it != expr_end) {
			jule::Ptr<_1b9b5216e_FnIns> _26921_ins = *it;
			{
				_1c8041297_pushResultIns(_self_, &(_26921_ins));
			}
			_iter_next_1cb37d9bb:;
			++it;
			goto _iter_begin_1cb37d9bb;
		}
		_iter_end_1cb37d9bb:;
	};
}



inline jule::I32 _1c804194b_findTypeOffsetS(_1c803eaae_ObjectCoder* _self_, jule::Ptr<_1b9b62514_Trait> _27430_t, jule::Ptr<_1b9b3c137_StructIns> _27445_s) {
	if (((*(_27430_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb37eea6:;
		if (it != expr_end) {
			jule::Ptr<_1c803d66d_traitHash> *_27816_hash = it;
			{
				if ((((*((*(_27816_hash))))._field_t == _27430_t) && ((*((*(_27816_hash))))._field_s == _27445_s))) {
					return (*((*(_27816_hash))))._field_i;;
				};
			}
			_iter_next_1cb37eea6:;
			++it;
			goto _iter_begin_1cb37eea6;
		}
		_iter_end_1cb37eea6:;
	};
	return -1LL;;
}



inline jule::I32 _1c8041d47_findTypeOffset(_1c803eaae_ObjectCoder* _self_, jule::Ptr<_1b9b62514_Trait> _28629_t, jule::Ptr<_1b9c8d1cd_TypeKind> _28644_k) {
	if (((*(_28629_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1b9b3c137_StructIns> _29017_s = nullptr;;
	if ((_1b9c90ab5_Sptr(_28644_k.ptr()) != nullptr)) {
		_28644_k=(*(_1b9c90ab5_Sptr(_28644_k.ptr())))._field_Elem;
	};
	_29017_s=_1b9c91da2_Struct(_28644_k.ptr());
	if ((_29017_s == nullptr)) {
		return -1LL;;
	};
	return static_cast<jule::I32>(_1c804194b_findTypeOffsetS(_self_, _28629_t, _29017_s));;
}



inline void _1c80421aa_pushAndWriteMaskMapper(jule::Ptr<_1c803eaae_ObjectCoder> _self_, jule::Ptr<_1b9b62514_Trait> _30146_t1, jule::Ptr<_1b9b62514_Trait> _30162_t2) {
	_23d16295d_StrBuilder _30213_ident = static__23d162c7c_New(32LL);;
	_23d16b604_WriteStr(&_30213_ident, jule::Str::lit("__jule_trait_offset_mapper_", 27));
	_23d16b604_WriteStr(&_30213_ident, _1ec672134_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30162_t2))), 15LL));
	_23d16b604_WriteStr(&_30213_ident, jule::Str::lit("_to_", 4));
	_23d16b604_WriteStr(&_30213_ident, _1ec672134_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30146_t1))), 15LL));
	_23d16b34b_Write(&(*(_self_))._field_Obj, _23d16c89c_Buf(&_30213_ident));
	{
		auto expr = &((*(_self_))._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb385473:;
		if (it != expr_end) {
			_1c803da47_traitCast _31016_m = *it;
			{
				if (((_31016_m._field_t1 == _30146_t1) && (_31016_m._field_t2 == _30162_t2))) {
					return;;
				};
			}
			_iter_next_1cb385473:;
			++it;
			goto _iter_begin_1cb385473;
		}
		_iter_end_1cb385473:;
	};
	{ jule::Slice<_1c803da47_traitCast> &__jule_push_dest = (*(_self_))._field_traitCastMap; __jule_push_dest.push(_1c803da47_traitCast{._field_t1=_30146_t1, ._field_t2=_30162_t2}); };
	;
	_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Int", 9));
	_23d16b8ac_WriteByte(&(*(_self_))._field_anyObj, ' ');
	_23d16b34b_Write(&(*(_self_))._field_anyObj, _23d16c89c_Buf(&_30213_ident));
	_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("(const jule::Int offset) noexcept { ", 36));
	{
		auto expr = &((*(_30146_t1))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb388eb0:;
		if (it != expr_end) {
			jule::Ptr<_1b9b393a9_Struct> _32921_s1 = *it;
			{
				{
					auto expr = &((*(_30162_t2))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cb3897eb:;
					if (it != expr_end) {
						jule::Ptr<_1b9b393a9_Struct> _33020_s2 = *it;
						{
							if ((_32921_s1 == _33020_s2)) {
								{
									auto expr = &((*(_32921_s1))._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1cb38a654:;
									if (it != expr_end) {
										jule::Ptr<_1b9b3c137_StructIns> _33233_s1i = *it;
										{
											jule::I32 _33325_i1 = _1c804194b_findTypeOffsetS(_self_.ptr(), _30146_t1, _33233_s1i);;
											jule::I32 _33425_i2 = _1c804194b_findTypeOffsetS(_self_.ptr(), _30162_t2, _33233_s1i);;
											_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("if (offset == ", 14));
											_23d16b604_WriteStr(&(*(_self_))._field_anyObj, _1ec6727b6_Itoa(_33425_i2));
											_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(") return ", 9));
											_23d16b604_WriteStr(&(*(_self_))._field_anyObj, _1ec6727b6_Itoa(_33325_i1));
											_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("; ", 2));
										}
										_iter_next_1cb38a654:;
										++it;
										goto _iter_begin_1cb38a654;
									}
									_iter_end_1cb38a654:;
								};
							};
						}
						_iter_next_1cb3897eb:;
						++it;
						goto _iter_begin_1cb3897eb;
					}
					_iter_end_1cb3897eb:;
				};
			}
			_iter_next_1cb388eb0:;
			++it;
			goto _iter_begin_1cb388eb0;
		}
		_iter_end_1cb388eb0:;
	};
	_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" return ", 8));
	_23d16b604_WriteStr(&(*(_self_))._field_anyObj, _1ec6727b6_Itoa(0LL));
	_23d16b604_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("; }\n", 4));
}



inline void _1c8042463_locInfo(jule::Ptr<_1c803eaae_ObjectCoder> _self_, jule::Ptr<_1b9b032eb_Token>* _35028_t) {
	jule::Str *_35110_loc = &((*((*((*(_35028_t))))._field_File))._field_Path);;
	if (_22e08143a_Production) {
		{
			
			if (_23d14ca9c_HasPrefix((*(_35110_loc)), _23d32248b_PathStdlib)) {
				_case_begin_1cb390516:;
				{
					_1c7e7597e_cstrBytes(&((*(_self_))._field_Obj), (*(_35110_loc)).slice((_23d170949_Dir(_23d32248b_PathStdlib).len() + 1LL)));
				}
			}
			else if (_23d14ca9c_HasPrefix((*(_35110_loc)), (*((*(_self_))._field_ir))._field_Root)) {
				_case_begin_1cb39057c:;
				{
					_1c7e7597e_cstrBytes(&((*(_self_))._field_Obj), (*(_35110_loc)).slice((_23d170949_Dir((*((*(_self_))._field_ir))._field_Root).len() + 1LL)));
				}
			}
			else {
				_case_begin_1cb390082:;
				{
					_1c7e7597e_cstrBytes(&((*(_self_))._field_Obj), (*(_35110_loc)));
				}
			}
			_match_end_1cb38eeb6:;
		};
	} else {
		_1c7e7597e_cstrBytes(&((*(_self_))._field_Obj), (*(_35110_loc)));
	};
	_1c8040263_write(_self_, jule::Str::lit(":", 1));
	_1c8040263_write(_self_, _1ec6727b6_Itoa((*((*(_35028_t))))._field_Row));
	_1c8040263_write(_self_, jule::Str::lit(":", 1));
	_1c8040263_write(_self_, _1ec6727b6_Itoa((*((*(_35028_t))))._field_Column));
}



inline void _1c8042661_head(jule::Ptr<_1c803eaae_ObjectCoder> _self_) {
	_1c8035610_Time _3779_time = static__1c8035bc6_Now();;
	_1c8034e39_AbsTime _3789_abs = _1c80373ae_Abs(&_3779_time);;
	_1c8040263_write(_self_, jule::Str::lit("// Auto generated by JuleC.\n", 28));
	_1c8040263_write(_self_, jule::Str::lit("// JuleC version: ", 18));
	_1c8040263_write(_self_, jule::Str::lit("jule0.0.15 @master", 18));
	_1c8040263_write(_self_, jule::Str::lit("\n", 1));
	_1c8040263_write(_self_, jule::Str::lit("// Date: ", 9));
	_1c8040263_write(_self_, _1ec672134_FmtUint(_3789_abs._field_Day, 10LL));
	_1c8040263_write(_self_, jule::Str::lit("/", 1));
	_1c8040263_write(_self_, _1ec672134_FmtUint(_3789_abs._field_Month, 10LL));
	_1c8040263_write(_self_, jule::Str::lit("/", 1));
	_1c8040263_write(_self_, _1ec672134_FmtUint(_3789_abs._field_Year, 10LL));
	_1c8040263_write(_self_, jule::Str::lit(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1c8040263_write(_self_, (*(_self_))._field_info._field_Compiler);
	_1c8040263_write(_self_, jule::Str::lit(" ", 1));
	_1c8040263_write(_self_, (*(_self_))._field_info._field_CompilerCommand);
	_1c8040263_write(_self_, jule::Str::lit("\n\n", 2));
	if (_22e08143a_Production) {
		_1c8040263_write(_self_, jule::Str::lit("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_22e080c97_RC))) {
		_1c8040263_write(_self_, jule::Str::lit("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_22e081171_Safety))) {
		_1c8040263_write(_self_, jule::Str::lit("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1c804285e_links(_self_);
	_1c8040263_write(_self_, jule::Str::lit("\n\n#include \"", 12));
	_1c8040263_write(_self_, _23d322ca5_PathApi);
	_1c8040263_write(_self_, jule::Str::lit("\"\n\n", 3));
}



inline void _1c804285e_links(jule::Ptr<_1c803eaae_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb39b91d:;
		if (it != expr_end) {
			jule::Ptr<_1b9bb1200_ImportInfo> _41516_used = *it;
			{
				{
					
					if ((!((*(_41516_used))._field_Binded))) {
						_case_begin_1cb39c6cc:;
						{
							goto _iter_next_1cb39b91d;
						}
					}
					else if (_23d203ee9_IsStdHeaderPath((*(_41516_used))._field_Path)) {
						_case_begin_1cb39c754:;
						{
							_1c8040263_write(_self_, jule::Str::lit("#include ", 9));
							_1c8040263_write(_self_, (*(_41516_used))._field_Path);
							_1c8040263_write(_self_, jule::Str::lit("\n", 1));
						}
					}
					else if (_23d2042a2_IsValidHeaderExt(_23d170020_Ext((*(_41516_used))._field_Path))) {
						_case_begin_1cb39c7cb:;
						{
							_1c8040263_write(_self_, jule::Str::lit("#include \"", 10));
							_1c8040263_write(_self_, (*(_41516_used))._field_Path);
							_1c8040263_write(_self_, jule::Str::lit("\"\n", 2));
						}
					}
					_match_end_1cb39c5ab:;
				};
			}
			_iter_next_1cb39b91d:;
			++it;
			goto _iter_begin_1cb39b91d;
		}
		_iter_end_1cb39b91d:;
	};
}



inline void _1c8042b17_prepareStructure(_1c803eaae_ObjectCoder* _self_, jule::Ptr<_1b9b393a9_Struct>* _43140_s) {
	{
		auto expr = &((*((*(_43140_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb39e965:;
		if (it != expr_end) {
			jule::Ptr<_1b9b3c137_StructIns> _43221_ins = *it;
			{
				{
					auto expr = &((*(_43221_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cb3a1082:;
					if (it != expr_end) {
						jule::Ptr<_1b9b4e26a_Fn> _43325_m = *it;
						{
							if ((*(_43325_m))._field_Statically) {
								goto _iter_next_1cb3a1082;
							};
							{
								auto expr = &((*(_43325_m))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1cb3a1e40:;
								if (it != expr_end) {
									jule::Ptr<_1b9b5216e_FnIns> _43729_mins = *it;
									{
										jule::Ptr<_1b9b511c3_ParamIns> _43825_p = (*(_43729_mins))._field_Params[0LL];;
										if ((!(_1b9b4d148_IsRef((*(_43825_p))._field_Decl.ptr())))) {
											(*(_43825_p))._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(jule::new_ptr<_1c804dc66_customType>(_1c804dc66_customType{._field_kind=(_1c8054e15_kind((*(_self_))._field_tc.ptr(), (*(_43825_p))._field_Kind) + jule::Str::lit("*", 1))}), 27)});
										} else {
											(*(_43825_p))._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(jule::new_ptr<_1c804dc66_customType>(_1c804dc66_customType{._field_kind=_1c8054e15_kind((*(_self_))._field_tc.ptr(), (*(_43825_p))._field_Kind)}), 27)});
										};
									}
									_iter_next_1cb3a1e40:;
									++it;
									goto _iter_begin_1cb3a1e40;
								}
								_iter_end_1cb3a1e40:;
							};
						}
						_iter_next_1cb3a1082:;
						++it;
						goto _iter_begin_1cb3a1082;
					}
					_iter_end_1cb3a1082:;
				};
			}
			_iter_next_1cb39e965:;
			++it;
			goto _iter_begin_1cb39e965;
		}
		_iter_end_1cb39e965:;
	};
}



inline void _1c8042d15_prepareStructures(jule::Ptr<_1c803eaae_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb3a2627:;
		if (it != expr_end) {
			jule::Ptr<_1b9b393a9_Struct> _45821_s = *it;
			{
				if (((*(_45821_s))._field_Token != nullptr)) {
					_1c8042b17_prepareStructure(_self_.ptr(), &(_45821_s));
				};
			}
			_iter_next_1cb3a2627:;
			++it;
			goto _iter_begin_1cb3a2627;
		}
		_iter_end_1cb3a2627:;
	};
}



inline void _1c80430bd_iterPackages(jule::Ptr<_1c803eaae_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1b9bb4126_Package>*)> _46532_f) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb3a4959:;
		if (it != expr_end) {
			jule::Ptr<_1b9bb1200_ImportInfo> _46621_used = *it;
			{
				if ((!((*(_46621_used))._field_Binded))) {
					_46532_f(&((*(_46621_used))._field_Package));
				};
			}
			_iter_next_1cb3a4959:;
			++it;
			goto _iter_begin_1cb3a4959;
		}
		_iter_end_1cb3a4959:;
	};
	_46532_f(&((*((*(_self_))._field_ir))._field_Main));
}



inline void _1c80432bb_buildTraitMap(jule::Ptr<_1c803eaae_ObjectCoder> _self_) {
	_1c80430bd_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1b9bb4126_Package>*)>([=](jule::Ptr<_1b9bb4126_Package>* _47535_pkg) mutable -> void {
		_1c804ba44_iterFiles(_47535_pkg, jule::Fn<void(jule::Ptr<_1b9c57ce1_SymbolTable>*)>([=](jule::Ptr<_1b9c57ce1_SymbolTable>* _47636_file) mutable -> void {
			{
				auto expr = &((*((*(_47636_file))))._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1cb3aa047:;
				if (it != expr_end) {
					jule::Ptr<_1b9b62514_Trait> _47729_t = *it;
					{
						if (((*(_47729_t))._field_Token == nullptr)) {
							return;;
						};
						if (((*(_47729_t))._field_Implemented.len() == 0LL)) {
							jule::Ptr<_1c803d66d_traitHash> _48229_hash = jule::new_ptr<_1c803d66d_traitHash>(_1c803d66d_traitHash{._field_t=_47729_t, ._field_s=nullptr, ._field_i=0LL});;
							_23d16295d_StrBuilder _48729_b = static__23d162c7c_New(static_cast<jule::I32>((*(_47729_t))._field_Ident.len()));;
							static__1c7e7b248_writeIdentTo(&(_48729_b), &((*(_47729_t))._field_Ident));
							(*(_48229_hash))._field_ti=_23d16bdeb_Str(&_48729_b);
							{ jule::Slice<jule::Ptr<_1c803d66d_traitHash>> &__jule_push_dest = (*(_self_))._field_tmap; __jule_push_dest.push(_48229_hash); };
							goto _iter_next_1cb3aa047;
						};
						jule::I32 _49325_i = 0LL;;
						{
							auto expr = &((*(_47729_t))._field_Implemented);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1cb3aa94e:;
							if (it != expr_end) {
								jule::Ptr<_1b9b393a9_Struct> _49433_s = *it;
								{
									{
										auto expr = &((*(_49433_s))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1cb3ae06d:;
										if (it != expr_end) {
											jule::Ptr<_1b9b3c137_StructIns> _49537_ins = *it;
											{
												jule::Ptr<_1c803d66d_traitHash> _49633_hash = jule::new_ptr<_1c803d66d_traitHash>(_1c803d66d_traitHash{._field_t=_47729_t, ._field_s=_49537_ins, ._field_i=_49325_i});;
												_23d16295d_StrBuilder _50133_b = static__23d162c7c_New(static_cast<jule::I32>((*(_47729_t))._field_Ident.len()));;
												static__1c7e7b248_writeIdentTo(&(_50133_b), &((*(_47729_t))._field_Ident));
												(*(_49633_hash))._field_ti=_23d16bdeb_Str(&_50133_b);
												{ jule::Slice<jule::Ptr<_1c803d66d_traitHash>> &__jule_push_dest = (*(_self_))._field_tmap; __jule_push_dest.push(_49633_hash); };
												(_49325_i)++;
											}
											_iter_next_1cb3ae06d:;
											++it;
											goto _iter_begin_1cb3ae06d;
										}
										_iter_end_1cb3ae06d:;
									};
								}
								_iter_next_1cb3aa94e:;
								++it;
								goto _iter_begin_1cb3aa94e;
							}
							_iter_end_1cb3aa94e:;
						};
						_1c804c7e2_pushMethodsFromInherits(&(_47729_t), &(_47729_t));
					}
					_iter_next_1cb3aa047:;
					++it;
					goto _iter_begin_1cb3aa047;
				}
				_iter_end_1cb3aa047:;
			};
		}));
	}));
}



inline void _1c80434b9_traitDecls(jule::Ptr<_1c803eaae_ObjectCoder> _self_) {
	_1c80430bd_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1b9bb4126_Package>*)>([=](jule::Ptr<_1b9bb4126_Package>* _51735_pkg) mutable -> void {
		_1c804ba44_iterFiles(_51735_pkg, jule::Fn<void(jule::Ptr<_1b9c57ce1_SymbolTable>*)>([=](jule::Ptr<_1b9c57ce1_SymbolTable>* _51836_file) mutable -> void {
			{
				auto expr = &((*((*(_51836_file))))._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1cb3b2989:;
				if (it != expr_end) {
					jule::Ptr<_1b9b62514_Trait> _51929_t = *it;
					{
						if (((*(_51929_t))._field_Token == nullptr)) {
							return;;
						};
						_1c804085c_indent(_self_);
						_1c8040263_write(_self_, jule::Str::lit("struct ", 7));
						_1c8040263_write(_self_, static__1c7e7c348_traitDecl(_51929_t));
						_1c8040263_write(_self_, jule::Str::lit("{};\n", 4));
					}
					_iter_next_1cb3b2989:;
					++it;
					goto _iter_begin_1cb3b2989;
				}
				_iter_end_1cb3b2989:;
			};
		}));
	}));
}



inline void _1c8043772_structurePlainDecl(jule::Ptr<_1c803eaae_ObjectCoder> _self_, jule::Ptr<_1b9b393a9_Struct>* _53243_s) {
	{
		auto expr = &((*((*(_53243_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb3aa861:;
		if (it != expr_end) {
			jule::Ptr<_1b9b3c137_StructIns> _53321_ins = *it;
			{
				_1c8040263_write(_self_, jule::Str::lit("struct ", 7));
				_1c8040263_write(_self_, static__1c7e7cb95_structureIns(&(_53321_ins)));
				_1c8040263_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1cb3aa861:;
			++it;
			goto _iter_begin_1cb3aa861;
		}
		_iter_end_1cb3aa861:;
	};
}



inline void _1c8043970_structurePlainDecls(jule::Ptr<_1c803eaae_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb3b4d65:;
		if (it != expr_end) {
			jule::Ptr<_1b9b393a9_Struct> _54121_s = *it;
			{
				if (((*(_54121_s))._field_Token != nullptr)) {
					_1c8043772_structurePlainDecl(_self_, &(_54121_s));
				};
			}
			_iter_next_1cb3b4d65:;
			++it;
			goto _iter_begin_1cb3b4d65;
		}
		_iter_end_1cb3b4d65:;
	};
}



inline void _1c8043c28_fieldDecl(jule::Ptr<_1c803eaae_ObjectCoder> _self_, jule::Ptr<_1b9b3b587_FieldIns>* _54834_f) {
	_1c8040263_write(_self_, _1c8054e15_kind((*(_self_))._field_tc.ptr(), (*((*(_54834_f))))._field_Kind));
	_1c8040263_write(_self_, jule::Str::lit(" ", 1));
	_1c8040263_write(_self_, static__1c7e7ce5e_field(&((*((*(_54834_f))))._field_Decl)));
	if (((*((*(_54834_f))))._field_Default == nullptr)) {
		if (_1c805c0c6_shouldInitialized(&((*((*(_54834_f))))._field_Kind))) {
			_1c8040263_write(_self_, jule::Str::lit(" = ", 3));
			_1c7e74ebc_initExpr((*(_self_))._field_ec, (*((*(_54834_f))))._field_Kind);
		};
	} else {
		_1c8040263_write(_self_, jule::Str::lit(" = ", 3));
		_1c7e65ad4_possibleRefExpr((*(_self_))._field_ec, (*((*((*(_54834_f))))._field_Default))._field_Model);
	};
	_1c8040263_write(_self_, jule::Str::lit(";", 1));
}



inline void _1c8043ed1_structureDestructor(jule::Ptr<_1c803eaae_ObjectCoder> _self_, jule::Ptr<_1b9b3c137_StructIns>* _56644_s) {
	;
	jule::Ptr<_1b9b4e26a_Fn> _5699_disposeMethod = _1b9b3d19e_FindMethod((*(_56644_s)).ptr(), jule::Str::lit("Dispose", 7), false);;
	jule::Bool _57013_disposed = static__1b9c0aa63_Dispose(_5699_disposeMethod);;
	if ((!(_57013_disposed))) {
		return;;
	};
	_1c8040263_write(_self_, jule::Str::lit("~", 1));
	_1c8040263_write(_self_, static__1c7e7cb95_structureIns(_56644_s));
	_1c8040263_write(_self_, jule::Str::lit("(void) { ", 9));
	_1c8040263_write(_self_, static__1c7e7bcb5_func(&(_5699_disposeMethod)));
	_1c8040263_write(_self_, jule::Str::lit("(this); }", 9));
}



inline void _1c8044344_structureOperatorEq(jule::Ptr<_1c803eaae_ObjectCoder> _self_, jule::Str* _58240_ident, jule::Ptr<_1b9b3c137_StructIns>* _58257_s) {
	if ((!((*((*(_58257_s))))._field_Comparable))) {
		return;;
	};
	if (((*((*(_58257_s))))._field_Operators._field_Eq != nullptr)) {
		_1c8044ac5_structureOperator(_self_, _58240_ident, &((*((*(_58257_s))))._field_Operators._field_Eq), jule::Str::lit("==", 2));
		return;;
	};
	_1c804085c_indent(_self_);
	if (_1ba83b918_Inline) {
		_1c8040263_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1c8040263_write(_self_, jule::Str::lit("bool operator==(", 16));
	_1c8040263_write(_self_, (*(_58240_ident)));
	_1c8040263_write(_self_, jule::Str::lit(" _other) {", 10));
	if (((*((*(_58257_s))))._field_Fields.len() > 0LL)) {
		_1c8040461_addIndent(_self_);
		_1c8040263_write(_self_, jule::Str::lit("\n", 1));
		_1c804085c_indent(_self_);
		_1c8040263_write(_self_, jule::Str::lit("return ", 7));
		_1c8040461_addIndent(_self_);
		jule::Bool _60517_writed = false;;
		{
			auto expr = &((*((*(_58257_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1cb3c3dda:;
			if (it != expr_end) {
				jule::Ptr<_1b9b3b587_FieldIns> _60625_f = *it;
				{
					jule::Ptr<_1b9b3c137_StructIns> _60817_strct = _1b9c91da2_Struct((*(_60625_f))._field_Kind.ptr());;
					if ((((_60817_strct != nullptr) && ((*(_60817_strct))._field_Decl != nullptr)) && (*((*(_60817_strct))._field_Decl))._field_Binded)) {
						goto _iter_next_1cb3c3dda;
					};
					if (_60517_writed) {
						_1c8040263_write(_self_, jule::Str::lit(" &&", 3));
					};
					_60517_writed=true;
					_1c8040263_write(_self_, jule::Str::lit("\n", 1));
					_1c804085c_indent(_self_);
					_1c8040263_write(_self_, jule::Str::lit("this->", 6));
					jule::Str _61917_fIdent = static__1c7e7ce5e_field(&((*(_60625_f))._field_Decl));;
					_1c8040263_write(_self_, _61917_fIdent);
					_1c8040263_write(_self_, jule::Str::lit(" == _other.", 11));
					_1c8040263_write(_self_, _61917_fIdent);
				}
				_iter_next_1cb3c3dda:;
				++it;
				goto _iter_begin_1cb3c3dda;
			}
			_iter_end_1cb3c3dda:;
		};
		_1c804065e_doneIndent(_self_);
		if ((!(_60517_writed))) {
			_1c8040263_write(_self_, jule::Str::lit("true", 4));
		};
		_1c8040263_write(_self_, jule::Str::lit(";\n", 2));
		_1c804065e_doneIndent(_self_);
		_1c804085c_indent(_self_);
		_1c8040263_write(_self_, jule::Str::lit("}", 1));
	} else {
		_1c8040263_write(_self_, jule::Str::lit(" return true; }", 15));
	};
	_1c8040263_write(_self_, jule::Str::lit("\n\n", 2));
}



inline void _1c80446a7_structureOperatorNotEq(jule::Ptr<_1c803eaae_ObjectCoder> _self_, jule::Str* _63843_ident, jule::Ptr<_1b9b3c137_StructIns>* _63860_s) {
	if ((!((*((*(_63860_s))))._field_Comparable))) {
		return;;
	};
	_1c804085c_indent(_self_);
	if (_1ba83b918_Inline) {
		_1c8040263_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1c8040263_write(_self_, jule::Str::lit("bool operator!=(", 16));
	_1c8040263_write(_self_, (*(_63843_ident)));
	_1c8040263_write(_self_, jule::Str::lit(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1c8044ac5_structureOperator(jule::Ptr<_1c803eaae_ObjectCoder> _self_, jule::Str* _65238_ident, jule::Ptr<_1b9b5216e_FnIns>* _65255_f, jule::Str _65266_op) {
	if (((*(_65255_f)) == nullptr)) {
		return;;
	};
	jule::Bool _6579_unary = ((*((*(_65255_f))))._field_Params.len() == 1LL);;
	jule::Bool _6589_assignment = _1b9b4e6dd_IsVoid((*((*(_65255_f))))._field_Decl.ptr());;
	_1c804085c_indent(_self_);
	if (_1ba83b918_Inline) {
		_1c8040263_write(_self_, jule::Str::lit("inline ", 7));
	};
	if (_6589_assignment) {
		_1c8040263_write(_self_, (*(_65238_ident)));
		_1c8040263_write(_self_, jule::Str::lit("&", 1));
	} else {
		if ((_1b9c9082e_Prim((*((*(_65255_f))))._field_Result.ptr()) == nullptr)) {
			_1c8040263_write(_self_, (*(_65238_ident)));
		} else {
			_1c8040263_write(_self_, jule::Str::lit("jule::Bool", 10));
		};
	};
	_1c8040263_write(_self_, jule::Str::lit(" operator", 9));
	_1c8040263_write(_self_, _65266_op);
	_1c8040263_write(_self_, jule::Str::lit("(", 1));
	if ((!(_6579_unary))) {
		jule::Ptr<_1b9b511c3_ParamIns> _68017_p = (*((*(_65255_f))))._field_Params[1LL];;
		_1c8040263_write(_self_, _1c8053c8d_paramIns((*(_self_))._field_tc.ptr(), &(_68017_p)));
		_1c8040263_write(_self_, jule::Str::lit(" _other", 7));
	};
	_1c8040263_write(_self_, jule::Str::lit(") { ", 4));
	if ((!(_6589_assignment))) {
		_1c8040263_write(_self_, jule::Str::lit("return ", 7));
	};
	_1c8040263_write(_self_, static__1c7e7c07e_funcIns(_65255_f));
	if ((!(_6579_unary))) {
		_1c8040263_write(_self_, jule::Str::lit("(this, _other); ", 16));
		if (_6589_assignment) {
			_1c8040263_write(_self_, jule::Str::lit("return *this; ", 14));
		};
		_1c8040263_write(_self_, jule::Str::lit("}", 1));
	} else {
		_1c8040263_write(_self_, jule::Str::lit("(this); }", 9));
	};
	_1c8040263_write(_self_, jule::Str::lit("\n\n", 2));
}



inline void _1c8044d7d_structureOperators(jule::Ptr<_1c803eaae_ObjectCoder> _self_, jule::Ptr<_1b9b3c137_StructIns>* _70143_s) {
	jule::Str _7029_ident = static__1c7e7cb95_structureIns(_70143_s);;
	_1c8044344_structureOperatorEq(_self_, &(_7029_ident), _70143_s);
	_1c80446a7_structureOperatorNotEq(_self_, &(_7029_ident), _70143_s);
	_1c8044ac5_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Gt), jule::Str::lit(">", 1));
	_1c8044ac5_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_GtEq), jule::Str::lit(">=", 2));
	_1c8044ac5_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Lt), jule::Str::lit("<", 1));
	_1c8044ac5_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_LtEq), jule::Str::lit("<=", 2));
	_1c8044ac5_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Shl), jule::Str::lit("<<", 2));
	_1c8044ac5_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Shr), jule::Str::lit(">>", 2));
	_1c8044ac5_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Add), jule::Str::lit("+", 1));
	_1c8044ac5_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Sub), jule::Str::lit("-", 1));
	_1c8044ac5_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Div), jule::Str::lit("/", 1));
	_1c8044ac5_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Mul), jule::Str::lit("*", 1));
	_1c8044ac5_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Mod), jule::Str::lit("%", 1));
	_1c8044ac5_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_BitAnd), jule::Str::lit("&", 1));
	_1c8044ac5_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_BitOr), jule::Str::lit("|", 1));
	_1c8044ac5_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_BitXor), jule::Str::lit("^", 1));
	_1c8044ac5_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Neg), jule::Str::lit("-", 1));
	_1c8044ac5_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Pos), jule::Str::lit("+", 1));
	_1c8044ac5_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_BitNot), jule::Str::lit("~", 1));
	_1c8044ac5_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_AddAssign), jule::Str::lit("+=", 2));
	_1c8044ac5_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_SubAssign), jule::Str::lit("-=", 2));
	_1c8044ac5_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_DivAssign), jule::Str::lit("/=", 2));
	_1c8044ac5_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_MulAssign), jule::Str::lit("*=", 2));
	_1c8044ac5_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_ModAssign), jule::Str::lit("%=", 2));
	_1c8044ac5_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_ShlAssign), jule::Str::lit("<<=", 3));
	_1c8044ac5_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_ShrAssign), jule::Str::lit(">>=", 3));
	_1c8044ac5_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_BitOrAssign), jule::Str::lit("|=", 2));
	_1c8044ac5_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_BitAndAssign), jule::Str::lit("&=", 2));
	_1c8044ac5_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_BitXorAssign), jule::Str::lit("^=", 2));
}



inline void _1c8045136_structureInsDecl(jule::Ptr<_1c803eaae_ObjectCoder> _self_, jule::Ptr<_1b9b3c137_StructIns>* _74041_s) {
	{
		auto expr = &((*((*(_74041_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb3e5c42:;
		if (it != expr_end) {
			jule::Ptr<_1b9b4e26a_Fn> _74121_m = *it;
			{
				if (_1c804cd75_isHeadDecl(&(_74121_m))) {
					_1c80465cc_funcDecl(_self_, &(_74121_m), false);
				};
			}
			_iter_next_1cb3e5c42:;
			++it;
			goto _iter_begin_1cb3e5c42;
		}
		_iter_end_1cb3e5c42:;
	};
	_1c8040263_write(_self_, jule::Str::lit("struct ", 7));
	jule::Str _7489_outIdent = static__1c7e7cb95_structureIns(_74041_s);;
	_1c8040263_write(_self_, _7489_outIdent);
	_1c8040263_write(_self_, jule::Str::lit(" {\n", 3));
	_1c8040461_addIndent(_self_);
	{
		auto expr = &((*((*(_74041_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb3e7969:;
		if (it != expr_end) {
			jule::Ptr<_1b9b3b587_FieldIns> _75421_f = *it;
			{
				_1c804085c_indent(_self_);
				_1c8043c28_fieldDecl(_self_, &(_75421_f));
				_1c8040263_write(_self_, jule::Str::lit("\n", 1));
			}
			_iter_next_1cb3e7969:;
			++it;
			goto _iter_begin_1cb3e7969;
		}
		_iter_end_1cb3e7969:;
	};
	_1c804085c_indent(_self_);
	_1c8043ed1_structureDestructor(_self_, _74041_s);
	_1c8040263_write(_self_, jule::Str::lit("\n\n", 2));
	_1c8044d7d_structureOperators(_self_, _74041_s);
	_1c8040263_write(_self_, jule::Str::lit("\n", 1));
	_1c804065e_doneIndent(_self_);
	_1c804085c_indent(_self_);
	_1c8040263_write(_self_, jule::Str::lit("};", 2));
}



inline void _1c80453de_structureDecl(jule::Ptr<_1c803eaae_ObjectCoder> _self_, jule::Ptr<_1b9b393a9_Struct>* _77238_s) {
	{
		auto expr = &((*((*(_77238_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb3eb6a4:;
		if (it != expr_end) {
			jule::Ptr<_1b9b3c137_StructIns> _77321_ins = *it;
			{
				_1c8045136_structureInsDecl(_self_, &(_77321_ins));
			}
			_iter_next_1cb3eb6a4:;
			++it;
			goto _iter_begin_1cb3eb6a4;
		}
		_iter_end_1cb3eb6a4:;
	};
}



inline void _1c80455dc_structureDecls(jule::Ptr<_1c803eaae_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb3ec012:;
		if (it != expr_end) {
			jule::Ptr<_1b9b393a9_Struct> _77921_s = *it;
			{
				if (((*(_77921_s))._field_Token != nullptr)) {
					_1c80453de_structureDecl(_self_, &(_77921_s));
					_1c8040263_write(_self_, jule::Str::lit("\n", 1));
				};
			}
			_iter_next_1cb3ec012:;
			++it;
			goto _iter_begin_1cb3ec012;
		}
		_iter_end_1cb3ec012:;
	};
}



inline void _1c80457da_structureMethodDecls(jule::Ptr<_1c803eaae_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb3ecead:;
		if (it != expr_end) {
			jule::Ptr<_1b9b393a9_Struct> _78821_s = *it;
			{
				if (((*(_78821_s))._field_Token != nullptr)) {
					{
						auto expr = &((*(_78821_s))._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1cb400004:;
						if (it != expr_end) {
							jule::Ptr<_1b9b3c137_StructIns> _79029_ins = *it;
							{
								{
									auto expr = &((*(_79029_ins))._field_Methods);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1cb400950:;
									if (it != expr_end) {
										jule::Ptr<_1b9b4e26a_Fn> _79133_m = *it;
										{
											if ((!(_1c804cd75_isHeadDecl(&(_79133_m))))) {
												_1c8041550_pushResult(_self_, &(_79133_m));
												_1c80465cc_funcDecl(_self_, &(_79133_m), false);
											};
										}
										_iter_next_1cb400950:;
										++it;
										goto _iter_begin_1cb400950;
									}
									_iter_end_1cb400950:;
								};
							}
							_iter_next_1cb400004:;
							++it;
							goto _iter_begin_1cb400004;
						}
						_iter_end_1cb400004:;
					};
				};
			}
			_iter_next_1cb3ecead:;
			++it;
			goto _iter_begin_1cb3ecead;
		}
		_iter_end_1cb3ecead:;
	};
}



inline void _1c8045a93_paramsDecls(jule::Ptr<_1c803eaae_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1b9b511c3_ParamIns>>* _80336_params) {
	if (((*(_80336_params)).len() == 0LL)) {
		_1c8040263_write(_self_, jule::Str::lit("(void)", 6));
		return;;
	};
	_1c8040263_write(_self_, jule::Str::lit("(", 1));
	{
		auto expr = _80336_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb400752:;
		if (it != expr_end) {
			jule::I32 _81014_i = it - expr->begin();
			jule::Ptr<_1b9b511c3_ParamIns> _81021_p = *it;
			{
				_1c8040263_write(_self_, _1c8053c8d_paramIns((*(_self_))._field_tc.ptr(), &(_81021_p)));
				if ((((*(_80336_params)).len() - _81014_i) > 1LL)) {
					_1c8040263_write(_self_, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1cb400752:;
			++it;
			_81014_i++;
			goto _iter_begin_1cb400752;
		}
		_iter_end_1cb400752:;
	};
	_1c8040263_write(_self_, jule::Str::lit(")", 1));
}



inline void _1c8045e06_funcHead(jule::Ptr<_1c803eaae_ObjectCoder> _self_, jule::Ptr<_1b9b5216e_FnIns>* _82033_f, jule::Bool _82044_ptr) {
	if ((((!(_82044_ptr)) && _1ba83b918_Inline) && (!(_1b9b4ec0a_IsEntryPoint((*((*(_82033_f))))._field_Decl.ptr()))))) {
		_1c8040263_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1c8054442_funcInsResult((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Obj), _82033_f);
	if (_82044_ptr) {
		_1c8040263_write(_self_, jule::Str::lit("(*", 2));
		_1c8040263_write(_self_, static__1c7e7c07e_funcIns(_82033_f));
		_1c8040263_write(_self_, jule::Str::lit(")", 1));
	} else {
		_1c8040263_write(_self_, jule::Str::lit(" ", 1));
		_1c8040263_write(_self_, static__1c7e7c07e_funcIns(_82033_f));
	};
}



inline void _1c8046269_funcDeclIns(jule::Ptr<_1c803eaae_ObjectCoder> _self_, jule::Ptr<_1b9b5216e_FnIns>* _83536_f, jule::Bool _83547_ptr) {
	_1c804085c_indent(_self_);
	_1c8045e06_funcHead(_self_, _83536_f, _83547_ptr);
	_1c8045a93_paramsDecls(_self_, &((*((*(_83536_f))))._field_Params));
	_1c8040263_write(_self_, jule::Str::lit(";\n", 2));
}



inline void _1c80465cc_funcDecl(jule::Ptr<_1c803eaae_ObjectCoder> _self_, jule::Ptr<_1b9b4e26a_Fn>* _84233_f, jule::Bool _84241_ptr) {
	{
		auto expr = &((*((*(_84233_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb409dee:;
		if (it != expr_end) {
			jule::Ptr<_1b9b5216e_FnIns> _84321_c = *it;
			{
				_1c8046269_funcDeclIns(_self_, &(_84321_c), _84241_ptr);
			}
			_iter_next_1cb409dee:;
			++it;
			goto _iter_begin_1cb409dee;
		}
		_iter_end_1cb409dee:;
	};
}



inline void _1c80469ea_funcDeclTrait(jule::Ptr<_1c803eaae_ObjectCoder> _self_, jule::Ptr<_1b9b62514_Trait>* _84838_t, jule::Ptr<_1b9b4e26a_Fn>* _84854_f, jule::Bool _84862_ptr) {
	{
		auto expr = &((*((*(_84854_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb40b285:;
		if (it != expr_end) {
			jule::Ptr<_1b9b5216e_FnIns> _84921_c = *it;
			{
				jule::Ptr<_1b9c8d1cd_TypeKind> _85017_k = (*((*(_84921_c))._field_Params[0LL]))._field_Kind;;
				(*((*(_84921_c))._field_Params[0LL]))._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>((*(_84838_t)), 2)});
				_1c8046269_funcDeclIns(_self_, &(_84921_c), _84862_ptr);
				(*((*(_84921_c))._field_Params[0LL]))._field_Kind=_85017_k;
			}
			_iter_next_1cb40b285:;
			++it;
			goto _iter_begin_1cb40b285;
		}
		_iter_end_1cb40b285:;
	};
}



inline void _1c8046be8_funcDecls(jule::Ptr<_1c803eaae_ObjectCoder> _self_) {
	_1c80430bd_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1b9bb4126_Package>*)>([=](jule::Ptr<_1b9bb4126_Package>* _85835_pkg) mutable -> void {
		_1c804ba44_iterFiles(_85835_pkg, jule::Fn<void(jule::Ptr<_1b9c57ce1_SymbolTable>*)>([=](jule::Ptr<_1b9c57ce1_SymbolTable>* _85936_file) mutable -> void {
			{
				auto expr = &((*((*(_85936_file))))._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1cb4107c8:;
				if (it != expr_end) {
					jule::Ptr<_1b9b4e26a_Fn> _86029_f = *it;
					{
						if (((!((*(_86029_f))._field_Binded)) && ((*(_86029_f))._field_Token != nullptr))) {
							_1c8041550_pushResult(_self_, &(_86029_f));
							_1c80465cc_funcDecl(_self_, &(_86029_f), false);
						};
					}
					_iter_next_1cb4107c8:;
					++it;
					goto _iter_begin_1cb4107c8;
				}
				_iter_end_1cb4107c8:;
			};
		}));
	}));
}



inline void _1c804705b_traitDataTypeMethods(jule::Ptr<_1c803eaae_ObjectCoder> _self_, jule::Ptr<_1b9b62514_Trait>* _87045_owner, jule::Ptr<_1b9b62514_Trait>* _87065_t) {
	{
		auto expr = &((*((*(_87065_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb410476:;
		if (it != expr_end) {
			jule::Ptr<_1b9b4e26a_Fn> _87121_m = *it;
			{
				jule::Ptr<_1b9b5216e_FnIns> _87217_ins = (*(_87121_m))._field_Instances[0LL];;
				jule::Ptr<_1b9b511c3_ParamIns> _87317_p = (*(_87217_ins))._field_Params[0LL];;
				(*(_87317_p))._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>((*(_87065_t)), 2)});
				{
					auto expr = (*(_87217_ins))._field_Params.slice(1LL);
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_1cb413e6e:;
					if (it != expr_end) {
						jule::I32 _87718_i = it - expr.begin();
						jule::Ptr<_1b9b511c3_ParamIns> _87725_ip = *it;
						{
							if (_1b9b06024_IsAnonIdent((*((*(_87725_ip))._field_Decl))._field_Ident)) {
								(*((*(_87725_ip))._field_Decl))._field_Ident=(jule::Str::lit("_", 1) + _1ec6727b6_Itoa(_87718_i));
							};
						}
						_iter_next_1cb413e6e:;
						++it;
						_87718_i++;
						goto _iter_begin_1cb413e6e;
					}
					_iter_end_1cb413e6e:;
				};
				if ((!(_22e08143a_Production))) {
					jule::Ptr<_1b9b511c3_ParamIns> _88321_lp = (*(_87217_ins))._field_Params[((*(_87217_ins))._field_Params.len() - 1LL)];;
					{
						auto &_match_expr{ (*((*(_88321_lp))._field_Kind))._field_Kind };
						
						if (_match_expr.type_is(true, 27)) {
							_case_begin_1cb41858e:;
							{
								goto _match_end_1cb416867;
							}
						}
						else {
							_case_begin_1cb4168bc:;
							{
								{ jule::Slice<jule::Ptr<_1b9b511c3_ParamIns>> &__jule_push_dest = (*(_87217_ins))._field_Params; __jule_push_dest.push(jule::new_ptr<_1b9b511c3_ParamIns>(_1b9b511c3_ParamIns{._field_Decl=jule::new_ptr<_1b9b4c796_Param>(_1b9b4c796_Param{._field_Ident=jule::Str::lit("__file", 6)}), ._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(jule::new_ptr<_1c804dc66_customType>(_1c804dc66_customType{._field_kind=jule::Str::lit("const char*", 11)}), 27)})})); };
							}
						}
						_match_end_1cb416867:;
					};
				};
				_1c8041550_pushResult(_self_, &(_87121_m));
				_1c80469ea_funcDeclTrait(_self_, _87045_owner, &(_87121_m), true);
			}
			_iter_next_1cb410476:;
			++it;
			goto _iter_begin_1cb410476;
		}
		_iter_end_1cb410476:;
	};
}



inline void _1c8047259_traitDataTypes(jule::Ptr<_1c803eaae_ObjectCoder> _self_) {
	_1c80430bd_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1b9bb4126_Package>*)>([=](jule::Ptr<_1b9bb4126_Package>* _90635_pkg) mutable -> void {
		_1c804ba44_iterFiles(_90635_pkg, jule::Fn<void(jule::Ptr<_1b9c57ce1_SymbolTable>*)>([=](jule::Ptr<_1b9c57ce1_SymbolTable>* _90736_file) mutable -> void {
			{
				auto expr = &((*((*(_90736_file))))._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1cb41a519:;
				if (it != expr_end) {
					jule::Ptr<_1b9b62514_Trait> _90829_t = *it;
					{
						if (((*(_90829_t))._field_Token == nullptr)) {
							return;;
						};
						if (((*(_90829_t))._field_Methods.len() == 0LL)) {
							goto _iter_next_1cb41a519;
						};
						_1c8040263_write(_self_, jule::Str::lit("struct ", 7));
						_1c8040263_write(_self_, static__1c7e7c348_traitDecl(_90829_t));
						_1c8040263_write(_self_, jule::Str::lit("MptrData", 8));
						_1c8040263_write(_self_, jule::Str::lit(" {\n", 3));
						_1c8040461_addIndent(_self_);
						_1c804705b_traitDataTypeMethods(_self_, &(_90829_t), &(_90829_t));
						_1c804065e_doneIndent(_self_);
						_1c804085c_indent(_self_);
						_1c8040263_write(_self_, jule::Str::lit("};\n\n", 4));
					}
					_iter_next_1cb41a519:;
					++it;
					goto _iter_begin_1cb41a519;
				}
				_iter_end_1cb41a519:;
			};
		}));
	}));
}



inline void _1c8047512_paramIns(jule::Ptr<_1c803eaae_ObjectCoder> _self_, jule::Ptr<_1b9b511c3_ParamIns>* _92933_p) {
	_1c8040263_write(_self_, _1c8053c8d_paramIns((*(_self_))._field_tc.ptr(), _92933_p));
	_1c8040263_write(_self_, jule::Str::lit(" ", 1));
	_1c8040263_write(_self_, static__1c7e7c612_param(&((*((*(_92933_p))))._field_Decl)));
}



inline void _1c80477ba_paramsIns(jule::Ptr<_1c803eaae_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1b9b511c3_ParamIns>>* _93534_params) {
	if (((*(_93534_params)).len() == 0LL)) {
		_1c8040263_write(_self_, jule::Str::lit("(void)", 6));
		return;;
	};
	_1c8040263_write(_self_, jule::Str::lit("(", 1));
	{
		auto expr = _93534_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb420684:;
		if (it != expr_end) {
			jule::I32 _94114_i = it - expr->begin();
			jule::Ptr<_1b9b511c3_ParamIns> _94121_p = *it;
			{
				_1c8047512_paramIns(_self_, &(_94121_p));
				if ((((*(_93534_params)).len() - _94114_i) > 1LL)) {
					_1c8040263_write(_self_, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1cb420684:;
			++it;
			_94114_i++;
			goto _iter_begin_1cb420684;
		}
		_iter_end_1cb420684:;
	};
	_1c8040263_write(_self_, jule::Str::lit(")", 1));
}



inline void _1c8047b2d_varInitExpr(jule::Ptr<_1c803eaae_ObjectCoder> _self_, jule::Ptr<_1b9c09611_Var>* _95036_v, jule::Fn<void(void)> _95045_init) {
	if ((*((*(_95036_v))))._field_Statically) {
		_1c8040263_write(_self_, jule::Str::lit("static ", 7));
	};
	_1c8040263_write(_self_, _1c8054e15_kind((*(_self_))._field_tc.ptr(), (*((*((*(_95036_v))))._field_Kind))._field_Kind));
	_1c8040263_write(_self_, jule::Str::lit(" ", 1));
	if ((*((*(_95036_v))))._field_Reference) {
		_1c8040263_write(_self_, jule::Str::lit("*", 1));
	};
	_1c8040263_write(_self_, static__1c7e7d228_var((*(_95036_v))));
	if ((_95045_init != nullptr)) {
		_1c8040263_write(_self_, jule::Str::lit(" = ", 3));
		_95045_init();
	};
	_1c8040263_write(_self_, jule::Str::lit(";", 1));
}



inline void _1c8047dd6_var(jule::Ptr<_1c803eaae_ObjectCoder> _self_, jule::Ptr<_1b9c09611_Var> _96827_v) {
	if (_1b9b05c5a_IsIgnoreIdent((*(_96827_v))._field_Ident)) {
		return;;
	};
	if ((((*(_96827_v))._field_Value != nullptr) && ((*((*(_96827_v))._field_Value))._field_Expr != nullptr))) {
		if (((*((*((*(_96827_v))._field_Value))._field_Data))._field_Model != nullptr)) {
			if ((*(_96827_v))._field_Reference) {
				_1c8047b2d_varInitExpr(_self_, &(_96827_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1c8040263_write(_self_, jule::Str::lit("&(", 2));
					_1c7e74c14_model((*(_self_))._field_ec, (*((*((*(_96827_v))._field_Value))._field_Data))._field_Model);
					_1c8040263_write(_self_, jule::Str::lit(")", 1));
				}));
			} else {
				_1c8047b2d_varInitExpr(_self_, &(_96827_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1c7e65ad4_possibleRefExpr((*(_self_))._field_ec, (*((*((*(_96827_v))._field_Value))._field_Data))._field_Model);
				}));
			};
			return;;
		};
		_1c8047b2d_varInitExpr(_self_, &(_96827_v), nullptr);
		return;;
	};
	if ((*(_96827_v))._field_Reference) {
		_1c8047b2d_varInitExpr(_self_, &(_96827_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1c8040263_write(_self_, jule::Str::lit("nullptr", 7));
		}));
		return;;
	};
	if (_1c805c0c6_shouldInitialized(&((*((*(_96827_v))._field_Kind))._field_Kind))) {
		_1c8047b2d_varInitExpr(_self_, &(_96827_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1c7e74ebc_initExpr((*(_self_))._field_ec, (*((*(_96827_v))._field_Kind))._field_Kind);
		}));
		return;;
	};
	_1c8047b2d_varInitExpr(_self_, &(_96827_v), nullptr);
}



inline void _1c804818e_funcIns(jule::Ptr<_1c803eaae_ObjectCoder> _self_, jule::Ptr<_1b9b5216e_FnIns>* _99932_f) {
	_1c8045e06_funcHead(_self_, _99932_f, false);
	_1c80477ba_paramsIns(_self_, &((*((*(_99932_f))))._field_Params));
	_1c8040263_write(_self_, jule::Str::lit(" ", 1));
	_1c7e5e814_funcScope((*(_self_))._field_sc, (*(_99932_f)));
	if (((*((*(_99932_f))))._field_Scope != nullptr)) {
		_1c8040263_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1c8048447_func(jule::Ptr<_1c803eaae_ObjectCoder> _self_, jule::Ptr<_1b9b4e26a_Fn>* _100929_f) {
	{
		auto expr = &((*((*(_100929_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb437877:;
		if (it != expr_end) {
			jule::Ptr<_1b9b5216e_FnIns> _101021_ins = *it;
			{
				_1c804818e_funcIns(_self_, &(_101021_ins));
			}
			_iter_next_1cb437877:;
			++it;
			goto _iter_begin_1cb437877;
		}
		_iter_end_1cb437877:;
	};
}



inline void _1c80487aa_funcTrait(jule::Ptr<_1c803eaae_ObjectCoder> _self_, jule::Ptr<_1c803d66d_traitHash>* _101534_hash, jule::Ptr<_1b9b4e26a_Fn>* _101557_f) {
	jule::Str _10169_ident = (*((*(_101557_f))))._field_Ident;;
	{
		auto expr = &((*((*(_101557_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb438a21:;
		if (it != expr_end) {
			jule::Ptr<_1b9b5216e_FnIns> _101721_ins = *it;
			{
				(*(_101721_ins))._field_Scope=nullptr;
				_23d16295d_StrBuilder _102017_s = static__23d162c7c_New(static_cast<jule::I32>((((((*((*(_101557_f))))._field_Ident.len() + _10169_ident.len()) + (*((*(_101534_hash))))._field_ti.len()) + 2LL) + 4LLU)));;
				_23d16b604_WriteStr(&_102017_s, _10169_ident);
				_23d16b8ac_WriteByte(&_102017_s, '_');
				_23d16b604_WriteStr(&_102017_s, (*((*(_101534_hash))))._field_ti);
				_23d16b8ac_WriteByte(&_102017_s, '_');
				_23d16b604_WriteStr(&_102017_s, _1ec6727b6_Itoa((*((*(_101534_hash))))._field_i));
				(*((*(_101557_f))))._field_Ident=_23d16bdeb_Str(&_102017_s);
				jule::Ptr<_1b9c8d1cd_TypeKind> _102917_k = (*((*(_101721_ins))._field_Params[0LL]))._field_Kind;;
				(*((*(_101721_ins))._field_Params[0LL]))._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>((*((*(_101534_hash))))._field_t, 2)});
				_1c804818e_funcIns(_self_, &(_101721_ins));
				(*((*(_101721_ins))._field_Params[0LL]))._field_Kind=_102917_k;
			}
			_iter_next_1cb438a21:;
			++it;
			goto _iter_begin_1cb438a21;
		}
		_iter_end_1cb438a21:;
	};
	(*((*(_101557_f))))._field_Ident=_10169_ident;
}



inline void _1c8048b1d_traitWrapper(jule::Ptr<_1c803eaae_ObjectCoder> _self_, jule::Ptr<_1b9b4e26a_Fn>* _103737_m, jule::Ptr<_1c803d66d_traitHash>* _103750_hash) {
	_1c80487aa_funcTrait(_self_, _103750_hash, _103737_m);
	if (((*((*(_103750_hash))))._field_s == nullptr)) {
		if (_22e08143a_Production) {
			_1c8040263_write(_self_, jule::Str::lit(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
		} else {
			_1c8040263_write(_self_, jule::Str::lit(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
		};
		return;;
	};
	jule::Bool _10499_ptr = (!(_1b9b4d148_IsRef((*((*(_103737_m))))._field_Params[0LL].ptr())));;
	jule::Ptr<_1b9b4e26a_Fn> _105113_sm = _1b9b3d19e_FindMethod((*((*(_103750_hash))))._field_s.ptr(), (*((*(_103737_m))))._field_Ident, false);;
	if (((_105113_sm == nullptr) || ((*(_105113_sm))._field_Instances.len() == 0LL))) {
		return;;
	};
	_1c8040461_addIndent(_self_);
	_1c8040263_write(_self_, jule::Str::lit("{\n", 2));
	_1c804085c_indent(_self_);
	if (((*(_105113_sm))._field_Exceptional || (!(_1b9b4e6dd_IsVoid(_105113_sm.ptr()))))) {
		_1c8040263_write(_self_, jule::Str::lit("return ", 7));
	};
	_1c8040263_write(_self_, static__1c7e7bcb5_func(&(_105113_sm)));
	_1c8040263_write(_self_, jule::Str::lit("(", 1));
	if (_10499_ptr) {
		_1c8040263_write(_self_, jule::Str::lit("_self_.safe_ptr<", 16));
		_1c8040263_write(_self_, _1c80532ba_structureIns((*(_self_))._field_tc.ptr(), (*((*(_103750_hash))))._field_s));
		_1c8040263_write(_self_, jule::Str::lit(">(", 2));
		if ((!(_22e08143a_Production))) {
			_1c8040263_write(_self_, jule::Str::lit("_00___file", 10));
		};
		_1c8040263_write(_self_, jule::Str::lit(")", 1));
	} else {
		_1c8040263_write(_self_, jule::Str::lit("_self_.data.as<", 15));
		_1c8040263_write(_self_, _1c8052e79_structure((*(_self_))._field_tc.ptr(), (*(_105113_sm))._field_Owner));
		_1c8040263_write(_self_, jule::Str::lit(">()", 3));
	};
	{
		auto expr = (*((*(_103737_m))))._field_Params.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1cb444e39:;
		if (it != expr_end) {
			jule::Ptr<_1b9b4c796_Param> _107716_mp = *it;
			{
				_1c8040263_write(_self_, jule::Str::lit(", ", 2));
				_1c8040263_write(_self_, static__1c7e7c612_param(&(_107716_mp)));
			}
			_iter_next_1cb444e39:;
			++it;
			goto _iter_begin_1cb444e39;
		}
		_iter_end_1cb444e39:;
	};
	_1c8040263_write(_self_, jule::Str::lit(");\n}\n", 5));
	_1c804065e_doneIndent(_self_);
}



inline void _1c8048d1b_traitWrappers(jule::Ptr<_1c803eaae_ObjectCoder> _self_) {
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb449e61:;
		if (it != expr_end) {
			jule::Ptr<_1c803d66d_traitHash> _108621_hash = *it;
			{
				{
					auto expr = &((*((*(_108621_hash))._field_t))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cb44a88a:;
					if (it != expr_end) {
						jule::Ptr<_1b9b4e26a_Fn> _108725_m = *it;
						{
							_1c8048b1d_traitWrapper(_self_, &(_108725_m), &(_108621_hash));
						}
						_iter_next_1cb44a88a:;
						++it;
						goto _iter_begin_1cb44a88a;
					}
					_iter_end_1cb44a88a:;
				};
			}
			_iter_next_1cb449e61:;
			++it;
			goto _iter_begin_1cb449e61;
		}
		_iter_end_1cb449e61:;
	};
}



inline void _1c804917e_traitDataMethods(jule::Ptr<_1c803eaae_ObjectCoder> _self_, jule::Ptr<_1b9b62514_Trait>* _109341_t, jule::Ptr<_1c803d66d_traitHash>* _109353_hash) {
	{
		auto expr = &((*((*(_109341_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb44b47e:;
		if (it != expr_end) {
			jule::Ptr<_1b9b4e26a_Fn> _109421_m = *it;
			{
				jule::Str _109513_mIdent = static__1c7e7bcb5_func(&(_109421_m));;
				_1c804085c_indent(_self_);
				_1c8040263_write(_self_, jule::Str::lit(".", 1));
				_1c8040263_write(_self_, _109513_mIdent);
				_1c8040263_write(_self_, jule::Str::lit("=", 1));
				_1c8040263_write(_self_, _109513_mIdent);
				_1c8040263_write(_self_, jule::Str::lit("_", 1));
				_1c8040263_write(_self_, (*((*(_109353_hash))))._field_ti);
				_1c8040263_write(_self_, jule::Str::lit("_", 1));
				_1c8040263_write(_self_, _1ec6727b6_Itoa((*((*(_109353_hash))))._field_i));
				_1c8040263_write(_self_, jule::Str::lit(",\n", 2));
			}
			_iter_next_1cb44b47e:;
			++it;
			goto _iter_begin_1cb44b47e;
		}
		_iter_end_1cb44b47e:;
	};
}



inline void _1c80494e2_traitData(jule::Ptr<_1c803eaae_ObjectCoder> _self_, jule::Ptr<_1c803d66d_traitHash>* _110934_hash, jule::Ptr<_1b9b62514_Trait>* _110957_old) {
	if (((*((*((*(_110934_hash))))._field_t))._field_Methods.len() == 0LL)) {
		return;;
	};
	jule::Str _11139_ident = static__1c7e7c348_traitDecl((*((*(_110934_hash))))._field_t);;
	if (((*((*(_110934_hash))))._field_t != (*(_110957_old)))) {
		if (((*(_110957_old)) != nullptr)) {
			_1c804065e_doneIndent(_self_);
			_1c804085c_indent(_self_);
			_1c8040263_write(_self_, jule::Str::lit("};\n", 3));
		};
		_1c8040263_write(_self_, jule::Str::lit("static ", 7));
		_1c8040263_write(_self_, _11139_ident);
		_1c8040263_write(_self_, jule::Str::lit("MptrData ", 9));
		_1c8040263_write(_self_, _11139_ident);
		_1c8040263_write(_self_, jule::Str::lit("_mptr_data[] = {\n", 17));
		(*(_110957_old))=(*((*(_110934_hash))))._field_t;
		_1c8040461_addIndent(_self_);
	};
	_1c804085c_indent(_self_);
	_1c8040263_write(_self_, jule::Str::lit("{\n", 2));
	_1c8040461_addIndent(_self_);
	_1c804917e_traitDataMethods(_self_, &((*((*(_110934_hash))))._field_t), _110934_hash);
	_1c804065e_doneIndent(_self_);
	_1c804085c_indent(_self_);
	_1c8040263_write(_self_, jule::Str::lit("},\n", 3));
}



inline void _1c80496e0_traitDatas(jule::Ptr<_1c803eaae_ObjectCoder> _self_) {
	jule::Ptr<_1b9b62514_Trait> _113817_old = nullptr;;
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb4567b9:;
		if (it != expr_end) {
			jule::Ptr<_1c803d66d_traitHash> _113921_hash = *it;
			{
				_1c80494e2_traitData(_self_, &(_113921_hash), &(_113817_old));
			}
			_iter_next_1cb4567b9:;
			++it;
			goto _iter_begin_1cb4567b9;
		}
		_iter_end_1cb4567b9:;
	};
	if ((_113817_old != nullptr)) {
		_1c804065e_doneIndent(_self_);
		_1c804085c_indent(_self_);
		_1c8040263_write(_self_, jule::Str::lit("};\n", 3));
	};
}



inline void _1c80498dd_globals(jule::Ptr<_1c803eaae_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb458634:;
		if (it != expr_end) {
			jule::Ptr<_1b9c09611_Var> _115021_v = *it;
			{
				_1c8040263_write(_self_, _1c8054e15_kind((*(_self_))._field_tc.ptr(), (*((*(_115021_v))._field_Kind))._field_Kind));
				_1c8040263_write(_self_, jule::Str::lit(" ", 1));
				_1c8040263_write(_self_, static__1c7e7d228_var(_115021_v));
				_1c8040263_write(_self_, jule::Str::lit(" = ", 3));
				_1c7e74c14_model((*(_self_))._field_ec, (*((*((*(_115021_v))._field_Value))._field_Data))._field_Model);
				_1c8040263_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1cb458634:;
			++it;
			goto _iter_begin_1cb458634;
		}
		_iter_end_1cb458634:;
	};
}



inline void _1c8049adb_decls(jule::Ptr<_1c803eaae_ObjectCoder> _self_) {
	_1c80434b9_traitDecls(_self_);
	_1c8043970_structurePlainDecls(_self_);
	_1c80455dc_structureDecls(_self_);
	(*(_self_))._field_headPos=static_cast<jule::I32>(_23d16c380_Len(&(*(_self_))._field_Obj));
	_1c80457da_structureMethodDecls(_self_);
	_1c8046be8_funcDecls(_self_);
	_1c8040263_write(_self_, jule::Str::lit("\n\n", 2));
	_1c8047259_traitDataTypes(_self_);
	_1c8040263_write(_self_, jule::Str::lit("\n\n", 2));
	_1c8048d1b_traitWrappers(_self_);
	_1c8040263_write(_self_, jule::Str::lit("\n\n", 2));
	_1c80496e0_traitDatas(_self_);
	_1c8040263_write(_self_, jule::Str::lit("\n\n", 2));
	(*(_self_))._field_declPos=static_cast<jule::I32>(_23d16c380_Len(&(*(_self_))._field_Obj));
	_1c80498dd_globals(_self_);
}



inline void _1c8049d94_structureMethods(jule::Ptr<_1c803eaae_ObjectCoder> _self_, jule::Ptr<_1b9b3c137_StructIns>* _117841_s) {
	{
		auto expr = &((*((*(_117841_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb461472:;
		if (it != expr_end) {
			jule::Ptr<_1b9b4e26a_Fn> _117921_f = *it;
			{
				_1c8048447_func(_self_, &(_117921_f));
				_1c8040263_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1cb461472:;
			++it;
			goto _iter_begin_1cb461472;
		}
		_iter_end_1cb461472:;
	};
}



inline void _1c804a14c_structureOstream(jule::Ptr<_1c803eaae_ObjectCoder> _self_, jule::Ptr<_1b9b3c137_StructIns>* _118541_s) {
	_1c804085c_indent(_self_);
	_1c8040263_write(_self_, jule::Str::lit("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_1c8040263_write(_self_, static__1c7e7cb95_structureIns(_118541_s));
	_1c8040263_write(_self_, jule::Str::lit(" _Src) {\n", 9));
	_1c8040461_addIndent(_self_);
	_1c804085c_indent(_self_);
	jule::Ptr<_1b9b4e26a_Fn> _119313_fts = _1b9b3d19e_FindMethod((*(_118541_s)).ptr(), jule::Str::lit("Str", 3), false);;
	if (static__1b9c0ad2c_Str(_119313_fts)) {
		_1c8040263_write(_self_, jule::Str::lit("_Stream << ", 11));
		_1c8040263_write(_self_, static__1c7e7bcb5_func(&(_119313_fts)));
		_1c8040263_write(_self_, jule::Str::lit("(&_Src);\n", 9));
	} else {
		_1c8040263_write(_self_, jule::Str::lit("_Stream << \"", 12));
		_1c7e7597e_cstrBytes(&((*(_self_))._field_Obj), (*((*((*(_118541_s))))._field_Decl))._field_Ident);
		_1c8040263_write(_self_, jule::Str::lit("{\";\n", 4));
		{
			auto expr = &((*((*(_118541_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1cb466048:;
			if (it != expr_end) {
				jule::I32 _120318_i = it - expr->begin();
				jule::Ptr<_1b9b3b587_FieldIns> _120325_f = *it;
				{
					_1c804085c_indent(_self_);
					_1c8040263_write(_self_, jule::Str::lit("_Stream << \"", 12));
					_1c7e7597e_cstrBytes(&((*(_self_))._field_Obj), (*((*(_120325_f))._field_Decl))._field_Ident);
					_1c8040263_write(_self_, jule::Str::lit(":", 1));
					jule::Ptr<_1b9b3c137_StructIns> _121017_strct = _1b9c91da2_Struct((*(_120325_f))._field_Kind.ptr());;
					if ((((_121017_strct != nullptr) && ((*(_121017_strct))._field_Decl != nullptr)) && (*((*(_121017_strct))._field_Decl))._field_Binded)) {
						_1c8040263_write(_self_, jule::Str::lit(" cpp.", 5));
						_1c8040263_write(_self_, static__1c7e7ce5e_field(&((*(_120325_f))._field_Decl)));
						_1c8040263_write(_self_, jule::Str::lit("\"", 1));
					} else {
						_1c8040263_write(_self_, jule::Str::lit("\" << _Src.", 10));
						_1c8040263_write(_self_, static__1c7e7ce5e_field(&((*(_120325_f))._field_Decl)));
					};
					if (((_120318_i + 1LL) < (*((*(_118541_s))))._field_Fields.len())) {
						_1c8040263_write(_self_, jule::Str::lit(" << \", \"", 8));
					};
					_1c8040263_write(_self_, jule::Str::lit(";\n", 2));
				}
				_iter_next_1cb466048:;
				++it;
				_120318_i++;
				goto _iter_begin_1cb466048;
			}
			_iter_end_1cb466048:;
		};
		_1c804085c_indent(_self_);
		_1c8040263_write(_self_, jule::Str::lit("_Stream << \"}\";\n", 16));
	};
	_1c804085c_indent(_self_);
	_1c8040263_write(_self_, jule::Str::lit("return _Stream;\n", 16));
	_1c804065e_doneIndent(_self_);
	_1c8040263_write(_self_, jule::Str::lit("}", 1));
}



inline void _1c804a405_structureIns(jule::Ptr<_1c803eaae_ObjectCoder> _self_, jule::Ptr<_1b9b3c137_StructIns>* _123637_s) {
	_1c8049d94_structureMethods(_self_, _123637_s);
	_1c8040263_write(_self_, jule::Str::lit("\n\n", 2));
	_1c804a14c_structureOstream(_self_, _123637_s);
}



inline void _1c804a6ad_structure(jule::Ptr<_1c803eaae_ObjectCoder> _self_, jule::Ptr<_1b9b393a9_Struct>* _124234_s) {
	{
		auto expr = &((*((*(_124234_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb4706c3:;
		if (it != expr_end) {
			jule::Ptr<_1b9b3c137_StructIns> _124321_ins = *it;
			{
				_1c804a405_structureIns(_self_, &(_124321_ins));
				_1c8040263_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1cb4706c3:;
			++it;
			goto _iter_begin_1cb4706c3;
		}
		_iter_end_1cb4706c3:;
	};
}



inline void _1c804a8ab_structures(jule::Ptr<_1c803eaae_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb471020:;
		if (it != expr_end) {
			jule::Ptr<_1b9b393a9_Struct> _125021_s = *it;
			{
				if (((*(_125021_s))._field_Token != nullptr)) {
					_1c804a6ad_structure(_self_, &(_125021_s));
					_1c8040263_write(_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1cb471020:;
			++it;
			goto _iter_begin_1cb471020;
		}
		_iter_end_1cb471020:;
	};
}



inline void _1c804aaa9_funcs(jule::Ptr<_1c803eaae_ObjectCoder> _self_) {
	_1c80430bd_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1b9bb4126_Package>*)>([=](jule::Ptr<_1b9bb4126_Package>* _125935_pkg) mutable -> void {
		_1c804ba44_iterFiles(_125935_pkg, jule::Fn<void(jule::Ptr<_1b9c57ce1_SymbolTable>*)>([=](jule::Ptr<_1b9c57ce1_SymbolTable>* _126036_file) mutable -> void {
			{
				auto expr = &((*((*(_126036_file))))._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1cb475288:;
				if (it != expr_end) {
					jule::Ptr<_1b9b4e26a_Fn> _126129_f = *it;
					{
						if (((!(_22e0809cd_Test)) && _1c805bd0c_hasDirective(&((*(_126129_f))._field_Directives), jule::Str::lit("test", 4)))) {
							goto _iter_next_1cb475288;
						};
						if (((!((*(_126129_f))._field_Binded)) && ((*(_126129_f))._field_Token != nullptr))) {
							_1c8048447_func(_self_, &(_126129_f));
							_1c8040263_write(_self_, jule::Str::lit("\n\n", 2));
						};
					}
					_iter_next_1cb475288:;
					++it;
					goto _iter_begin_1cb475288;
				}
				_iter_end_1cb475288:;
			};
		}));
	}));
}



inline void _1c804ad62_pushInit(jule::Ptr<_1c803eaae_ObjectCoder> _self_, jule::Ptr<_1b9bb4126_Package>* _127433_pkg) {
	_1c804ba44_iterFiles(_127433_pkg, jule::Fn<void(jule::Ptr<_1b9c57ce1_SymbolTable>*)>([=](jule::Ptr<_1b9c57ce1_SymbolTable>* _127532_file) mutable -> void {
		{
			auto expr = &((*((*(_127532_file))))._field_Funcs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1cb477d29:;
			if (it != expr_end) {
				jule::Ptr<_1b9b4e26a_Fn> _127620_f = *it;
				{
					if ((*(_127620_f))._field_Ident.equal("init", 4)) {
						_1c804085c_indent(_self_);
						_1c8040263_write(_self_, static__1c7e7bcb5_func(&(_127620_f)));
						_1c8040263_write(_self_, jule::Str::lit("();\n", 4));
					};
				}
				_iter_next_1cb477d29:;
				++it;
				goto _iter_begin_1cb477d29;
			}
			_iter_end_1cb477d29:;
		};
	}));
}



inline void _1c804b060_initCaller(jule::Ptr<_1c803eaae_ObjectCoder> _self_) {
	_1c8040263_write(_self_, jule::Str::lit("void __jule_call_initializers(void) {\n", 38));
	_1c8040461_addIndent(_self_);
	_1c80430bd_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1b9bb4126_Package>*)>([=](jule::Ptr<_1b9bb4126_Package>* _128935_pkg) mutable -> void {
		_1c804ad62_pushInit(_self_, _128935_pkg);
	}));
	_1c804065e_doneIndent(_self_);
	_1c8040263_write(_self_, jule::Str::lit("\n}", 2));
}



inline void _1c804b25d_end(jule::Ptr<_1c803eaae_ObjectCoder> _self_) {
	_1c8040263_write(_self_, jule::Str::lit("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_22e0809cd_Test) {
		_1c8040263_write(_self_, jule::Str::lit("test_point();", 13));
	} else {
		_1c8040263_write(_self_, jule::Str::lit("entry_point();", 14));
	};
	_1c8040263_write(_self_, jule::Str::lit("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1c804b45b_serializeHead(jule::Ptr<_1c803eaae_ObjectCoder> _self_) {
	_1c8042d15_prepareStructures(_self_);
	_1c80432bb_buildTraitMap(_self_);
	_1c8042661_head(_self_);
	_1c8040263_write(_self_, jule::Str::lit("\n", 1));
	_1c8049adb_decls(_self_);
	if ((_23d16c380_Len(&(*(_self_))._field_resultDecls) > 0LL)) {
		jule::Slice<jule::U8> _132417_head = jule::append(jule::Slice<jule::U8>::alloc(0LL, 0LL, 0),_23d16c89c_Buf(&(*(_self_))._field_Obj).slice(0LL, (*(_self_))._field_headPos));;
		(_132417_head).append(_23d16c89c_Buf(&(*(_self_))._field_resultDecls));;
		(*(_self_))._field_declPos+=_23d16c380_Len(&(*(_self_))._field_resultDecls);
		(_132417_head).append(_23d16c89c_Buf(&(*(_self_))._field_Obj).slice((*(_self_))._field_headPos));;
		{
			_23d16cb55_SetBuf(&(*(_self_))._field_Obj, _132417_head);
		};
	};
	_1c8040263_write(_self_, jule::Str::lit("\n", 1));
	_1c804a8ab_structures(_self_);
	_1c804aaa9_funcs(_self_);
	_1c804b060_initCaller(_self_);
	_1c8040263_write(_self_, jule::Str::lit("\n\n", 2));
	if ((_23d16c380_Len(&(*(_self_))._field_anyObj) > 0LL)) {
		jule::Slice<jule::U8> _133817_head = jule::append(jule::Slice<jule::U8>::alloc(0LL, 0LL, 0),_23d16c89c_Buf(&(*(_self_))._field_Obj).slice(0LL, (*(_self_))._field_declPos));;
		(_133817_head).append(_23d16c89c_Buf(&(*(_self_))._field_anyObj));;
		(_133817_head).append(_23d16c89c_Buf(&(*(_self_))._field_Obj).slice((*(_self_))._field_declPos));;
		{
			_23d16cb55_SetBuf(&(*(_self_))._field_Obj, _133817_head);
		};
	};
}



inline void _1c804b659_Serialize(jule::Ptr<_1c803eaae_ObjectCoder> _self_) {
	_1c804b45b_serializeHead(_self_);
	_1c804b25d_end(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1c803eaae_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Obj:" << _Src._field_Obj << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "traitCastMap:" << _Src._field_traitCastMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ba963d5e_ObjectDeadCode> static__1ba964304_new(jule::Ptr<_1ba834944_IR>* _3424_ir) {
	return jule::new_ptr<_1ba963d5e_ObjectDeadCode>(_1ba963d5e_ObjectDeadCode{._field_ir=(*(_3424_ir))});;
}



inline jule::Bool _1cac952c3_isLive(jule::Ptr<_1ba963d5e_ObjectDeadCode> _self_, jule::Ptr<_1b9b62514_Trait>* _4030_t) {
	jule::Slice<jule::Ptr<_1b9b62514_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1cac9703e:;
			{
				_4117_live=(*(_self_))._field_live._field_traits;
			}
		}
		_match_end_1cac96d41:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac970a5:;
		if (it != expr_end) {
			jule::I32 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1cac970a5:;
			++it;
			_5213_i++;
			goto _iter_begin_1cac970a5;
		}
		_iter_end_1cac970a5:;
	};
	return false;;
}

inline jule::Bool _1cac9ad23_isLive(jule::Ptr<_1ba963d5e_ObjectDeadCode> _self_, jule::Ptr<_1b9b5216e_FnIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1b9b5216e_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1cac9c8c4:;
			{
				_4117_live=(*(_self_))._field_live._field_fns;
			}
		}
		_match_end_1cac9c819:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac9d5d9:;
		if (it != expr_end) {
			jule::I32 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1cac9d5d9:;
			++it;
			_5213_i++;
			goto _iter_begin_1cac9d5d9;
		}
		_iter_end_1cac9d5d9:;
	};
	return false;;
}

inline jule::Bool _1caca2236_isLive(jule::Ptr<_1ba963d5e_ObjectDeadCode> _self_, jule::Ptr<_1b9b3c137_StructIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1b9b3c137_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1caca6bb9:;
			{
				_4117_live=(*(_self_))._field_live._field_structs;
			}
		}
		_match_end_1caca6a32:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1caca6c96:;
		if (it != expr_end) {
			jule::I32 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1caca6c96:;
			++it;
			_5213_i++;
			goto _iter_begin_1caca6c96;
		}
		_iter_end_1caca6c96:;
	};
	return false;;
}

inline jule::Bool _1caca9a57_isLive(jule::Ptr<_1ba963d5e_ObjectDeadCode> _self_, jule::Ptr<_1b9c09611_Var>* _4030_t) {
	jule::Slice<jule::Ptr<_1b9c09611_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1cacab6a2:;
			{
				_4117_live=(*(_self_))._field_live._field_vars;
			}
		}
		_match_end_1cacab581:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cacab63b:;
		if (it != expr_end) {
			jule::I32 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1cacab63b:;
			++it;
			_5213_i++;
			goto _iter_begin_1cacab63b;
		}
		_iter_end_1cacab63b:;
	};
	return false;;
}



inline void _1cac9568b_pushLive(jule::Ptr<_1ba963d5e_ObjectDeadCode> _self_, jule::Ptr<_1b9b62514_Trait> _6035_t) {
	{
		
{
			_case_begin_1cac99250:;
			{
				{ jule::Slice<jule::Ptr<_1b9b62514_Trait>> &__jule_push_dest = (*(_self_))._field_live._field_traits; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1cac99052:;
	};
}

inline void _1cac9b1a8_pushLive(jule::Ptr<_1ba963d5e_ObjectDeadCode> _self_, jule::Ptr<_1b9b5216e_FnIns> _6035_t) {
	{
		
{
			_case_begin_1caca0267:;
			{
				{ jule::Slice<jule::Ptr<_1b9b5216e_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1caca0146:;
	};
}

inline void _1caca27b9_pushLive(jule::Ptr<_1ba963d5e_ObjectDeadCode> _self_, jule::Ptr<_1b9b3c137_StructIns> _6035_t) {
	{
		
{
			_case_begin_1caca406d:;
			{
				{ jule::Slice<jule::Ptr<_1b9b3c137_StructIns>> &__jule_push_dest = (*(_self_))._field_live._field_structs; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1caca3dd6:;
	};
}

inline void _1caca9e20_pushLive(jule::Ptr<_1ba963d5e_ObjectDeadCode> _self_, jule::Ptr<_1b9c09611_Var> _6035_t) {
	{
		
{
			_case_begin_1cacadc48:;
			{
				{ jule::Slice<jule::Ptr<_1b9c09611_Var>> &__jule_push_dest = (*(_self_))._field_live._field_vars; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1cacadb8d:;
	};
}



inline void _1c765c793_setReferencesAsLive(jule::Ptr<_1ba963d5e_ObjectDeadCode> _self_, jule::Ptr<_1b9b5531a_ReferenceStack>* _7344_rs) {
	if (((*(_7344_rs)) == nullptr)) {
		return;;
	};
	jule::I32 _7713_i = 0LL;;
	for (; (_7713_i < _1b9b55a13_Len((*(_7344_rs)).ptr())); (_7713_i)++) {
		{
			jule::Any _7917_ref = _1b9b55d54_At((*(_7344_rs)).ptr(), _7713_i);;
			{
				auto &_match_expr{ _7917_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_1cac9415c:;
					{
						jule::Ptr<_1b9b62514_Trait> _8221_t = _7917_ref.cast_ptr<_1b9b62514_Trait>(&__jule_any_type10);;
						if (_1cac952c3_isLive(_self_, &(_8221_t))) {
							goto _iter_next_1cac93546;
						};
						_1cac9568b_pushLive(_self_, _8221_t);
						{
							auto expr = &((*(_8221_t))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1cac9658d:;
							if (it != expr_end) {
								jule::Ptr<_1b9b4e26a_Fn> _8729_ins = *it;
								{
									{
										auto expr = &((*(_8729_ins))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1cac98cbb:;
										if (it != expr_end) {
											jule::Ptr<_1b9b5216e_FnIns> _8833_mins = *it;
											{
												if (_1cac9ad23_isLive(_self_, &(_8833_mins))) {
													goto _iter_next_1cac98cbb;
												};
												_1cac9b1a8_pushLive(_self_, _8833_mins);
												_1c765c793_setReferencesAsLive(_self_, &((*(_8833_mins))._field_Refers));
											}
											_iter_next_1cac98cbb:;
											++it;
											goto _iter_begin_1cac98cbb;
										}
										_iter_end_1cac98cbb:;
									};
								}
								_iter_next_1cac9658d:;
								++it;
								goto _iter_begin_1cac9658d;
							}
							_iter_end_1cac9658d:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1cac941c3:;
					{
						jule::Ptr<_1b9b5216e_FnIns> _9721_f = _7917_ref.cast_ptr<_1b9b5216e_FnIns>(&__jule_any_type7);;
						if (_1cac9ad23_isLive(_self_, &(_9721_f))) {
							goto _match_end_1cac938ed;
						};
						if ((((*(_9721_f))._field_Owner != nullptr) && (!((*((*(_9721_f))._field_Decl))._field_Statically)))) {
							if ((!(_1caca2236_isLive(_self_, &((*(_9721_f))._field_Owner))))) {
								_1caca27b9_pushLive(_self_, (*(_9721_f))._field_Owner);
								_1c765c793_setReferencesAsLive(_self_, &((*((*(_9721_f))._field_Owner))._field_Refers));
							};
						};
						_1cac9b1a8_pushLive(_self_, _9721_f);
						_1c765c793_setReferencesAsLive(_self_, &((*(_9721_f))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_1cac94239:;
					{
						jule::Ptr<_1b9c09611_Var> _11021_v = _7917_ref.cast_ptr<_1b9c09611_Var>(&__jule_any_type8);;
						if (_1caca9a57_isLive(_self_, &(_11021_v))) {
							goto _match_end_1cac938ed;
						};
						_1caca9e20_pushLive(_self_, _11021_v);
						_1c765c793_setReferencesAsLive(_self_, &((*(_11021_v))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_1cac942b1:;
					{
						jule::Ptr<_1b9b3c137_StructIns> _11721_s = _7917_ref.cast_ptr<_1b9b3c137_StructIns>(&__jule_any_type9);;
						if (_1caca2236_isLive(_self_, &(_11721_s))) {
							goto _match_end_1cac938ed;
						};
						_1caca27b9_pushLive(_self_, _11721_s);
						_1c765c793_setReferencesAsLive(_self_, &((*(_11721_s))._field_Refers));
						{
							auto expr = &((*(_11721_s))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1cacaed8c:;
							if (it != expr_end) {
								jule::Ptr<_1b9b4e26a_Fn> _12329_m = *it;
								{
									{
										auto expr = &((*(_12329_m))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1cacb291c:;
										if (it != expr_end) {
											jule::Ptr<_1b9b5216e_FnIns> _12433_ins = *it;
											{
												if (_1cac9ad23_isLive(_self_, &(_12433_ins))) {
													goto _iter_next_1cacb291c;
												};
												if (_1c7660466_isTraitMethod(&(_11721_s), &(_12433_ins))) {
													_1cac9b1a8_pushLive(_self_, _12433_ins);
													_1c765c793_setReferencesAsLive(_self_, &((*(_12433_ins))._field_Refers));
												};
											}
											_iter_next_1cacb291c:;
											++it;
											goto _iter_begin_1cacb291c;
										}
										_iter_end_1cacb291c:;
									};
								}
								_iter_next_1cacaed8c:;
								++it;
								goto _iter_begin_1cacaed8c;
							}
							_iter_end_1cacaed8c:;
						};
					}
				}
				_match_end_1cac938ed:;
			};
		}
	_iter_next_1cac93546:;
	}
	_iter_end_1cac93546:;;
}



inline void _1c765ca4b_inits(jule::Ptr<_1ba963d5e_ObjectDeadCode> _self_, jule::Ptr<_1b9bb4126_Package>* _14130_pkg) {
	{
		auto expr = &((*((*(_14130_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1caca91d8:;
		if (it != expr_end) {
			jule::Ptr<_1b9c57ce1_SymbolTable> _14221_file = *it;
			{
				{
					auto expr = &((*(_14221_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cacb3269:;
					if (it != expr_end) {
						jule::Ptr<_1b9b4e26a_Fn> _14325_f = *it;
						{
							if ((*(_14325_f))._field_Ident.equal("init", 4)) {
								jule::Ptr<_1b9b5216e_FnIns> _14525_ins = (*(_14325_f))._field_Instances[0LL];;
								{ jule::Slice<jule::Ptr<_1b9b5216e_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_14525_ins); };
								_1c765c793_setReferencesAsLive(_self_, &((*(_14525_ins))._field_Refers));
							};
						}
						_iter_next_1cacb3269:;
						++it;
						goto _iter_begin_1cacb3269;
					}
					_iter_end_1cacb3269:;
				};
			}
			_iter_next_1caca91d8:;
			++it;
			goto _iter_begin_1caca91d8;
		}
		_iter_end_1caca91d8:;
	};
}



inline void _1c765cd04_collectLivePackage(jule::Ptr<_1ba963d5e_ObjectDeadCode> _self_, jule::Ptr<_1b9bb4126_Package>* _15343_pkg) {
	_1c765ca4b_inits(_self_, _15343_pkg);
	if (_22e0809cd_Test) {
		{
			auto expr = &((*((*(_15343_pkg))))._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1cacb7e2d:;
			if (it != expr_end) {
				jule::Ptr<_1b9c57ce1_SymbolTable> _15925_file = *it;
				{
					{
						auto expr = &((*(_15925_file))._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1cacb8879:;
						if (it != expr_end) {
							jule::Ptr<_1b9b4e26a_Fn> _16029_f = *it;
							{
								if (_1c766009d_hasDirective(&((*(_16029_f))._field_Directives), jule::Str::lit("test", 4))) {
									jule::Ptr<_1b9b5216e_FnIns> _16229_ins = (*(_16029_f))._field_Instances[0LL];;
									{ jule::Slice<jule::Ptr<_1b9b5216e_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_16229_ins); };
									_1c765c793_setReferencesAsLive(_self_, &((*(_16229_ins))._field_Refers));
								};
							}
							_iter_next_1cacb8879:;
							++it;
							goto _iter_begin_1cacb8879;
						}
						_iter_end_1cacb8879:;
					};
				}
				_iter_next_1cacb7e2d:;
				++it;
				goto _iter_begin_1cacb7e2d;
			}
			_iter_end_1cacb7e2d:;
		};
	};
}



inline void _1c765d002_collectLive(jule::Ptr<_1ba963d5e_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cacb9539:;
		if (it != expr_end) {
			jule::Ptr<_1b9bb1200_ImportInfo> _17221_used = *it;
			{
				if ((!((*(_17221_used))._field_Binded))) {
					_1c765cd04_collectLivePackage(_self_, &((*(_17221_used))._field_Package));
				};
			}
			_iter_next_1cacb9539:;
			++it;
			goto _iter_begin_1cacb9539;
		}
		_iter_end_1cacb9539:;
	};
	_1c765cd04_collectLivePackage(_self_, &((*((*(_self_))._field_ir))._field_Main));
	jule::Ptr<_1b9b4e26a_Fn> _18013_main = _1b9bb56aa_FindFn((*((*(_self_))._field_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);;
	jule::Ptr<_1b9b5216e_FnIns> _18113_ins = (*(_18013_main))._field_Instances[0LL];;
	{ jule::Slice<jule::Ptr<_1b9b5216e_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_18113_ins); };
	_1c765c793_setReferencesAsLive(_self_, &((*(_18113_ins))._field_Refers));
}



inline void _1c765d2aa_removeDeadGlobals(jule::Ptr<_1ba963d5e_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1b9c09611_Var>>* _18642_vars) {
	jule::I32 _18713_i = 0LL;;
	while ((_18713_i < (*(_18642_vars)).len())) {
		{
			jule::Ptr<_1b9c09611_Var> _18913_v = (*(_18642_vars))[_18713_i];;
			if (_1caca9a57_isLive(_self_, &(_18913_v))) {
				(_18713_i)++;
				goto _iter_next_1cacbe62c;
			};
			(*(_18642_vars))=jule::append((*(_18642_vars)).slice(0LL, _18713_i),(*(_18642_vars)).slice((_18713_i + 1LL)));
		}
	_iter_next_1cacbe62c:;
	}
	_iter_end_1cacbe62c:;;
}



inline void _1c765d563_removeDeadFns(jule::Ptr<_1ba963d5e_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1b9b4e26a_Fn>>* _19838_funcs) {
	jule::I32 _19913_i = 0LL;;
	while ((_19913_i < (*(_19838_funcs)).len())) {
		{
			jule::Ptr<_1b9b4e26a_Fn> _20117_f = (*(_19838_funcs))[_19913_i];;
			jule::I32 _20217_j = 0LL;;
			while ((_20217_j < (*(_20117_f))._field_Instances.len())) {
				{
					jule::Ptr<_1b9b5216e_FnIns> _20417_ins = (*(_20117_f))._field_Instances[_20217_j];;
					if (_1cac9ad23_isLive(_self_, &(_20417_ins))) {
						(_20217_j)++;
						goto _iter_next_1cacc2135;
					};
					(*(_20117_f))._field_Instances=jule::append((*(_20117_f))._field_Instances.slice(0LL, _20217_j),(*(_20117_f))._field_Instances.slice((_20217_j + 1LL)));
				}
			_iter_next_1cacc2135:;
			}
			_iter_end_1cacc2135:;;
			if (((*(_20117_f))._field_Instances.len() == 0LL)) {
				(*(_19838_funcs))=jule::append((*(_19838_funcs)).slice(0LL, _19913_i),(*(_19838_funcs)).slice((_19913_i + 1LL)));
				goto _iter_next_1cacbe891;
			};
			(_19913_i)++;
		}
	_iter_next_1cacbe891:;
	}
	_iter_end_1cacbe891:;;
}



inline void _1c765d81b_removeDeadStructs(jule::Ptr<_1ba963d5e_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1b9b393a9_Struct>>* _21942_structs) {
	jule::I32 _22013_i = 0LL;;
	while ((_22013_i < (*(_21942_structs)).len())) {
		{
			jule::Ptr<_1b9b393a9_Struct> _22217_s = (*(_21942_structs))[_22013_i];;
			jule::I32 _22317_j = 0LL;;
			while ((_22317_j < (*(_22217_s))._field_Instances.len())) {
				{
					jule::Ptr<_1b9b3c137_StructIns> _22521_ins = (*(_22217_s))._field_Instances[_22317_j];;
					_1c765d563_removeDeadFns(_self_, &((*(_22521_ins))._field_Methods));
					if ((((*(_22521_ins))._field_Methods.len() != 0LL) || _1caca2236_isLive(_self_, &(_22521_ins)))) {
						(_22317_j)++;
						goto _iter_next_1cacc5ee6;
					};
					(*(_22217_s))._field_Instances=jule::append((*(_22217_s))._field_Instances.slice(0LL, _22317_j),(*(_22217_s))._field_Instances.slice((_22317_j + 1LL)));
				}
			_iter_next_1cacc5ee6:;
			}
			_iter_end_1cacc5ee6:;;
			if (((*(_22217_s))._field_Instances.len() == 0LL)) {
				(*(_21942_structs))=jule::append((*(_21942_structs)).slice(0LL, _22013_i),(*(_21942_structs)).slice((_22013_i + 1LL)));
				goto _iter_next_1cacc54e0;
			};
			(_22013_i)++;
		}
	_iter_next_1cacc54e0:;
	}
	_iter_end_1cacc54e0:;;
}



inline void _1c765dac4_removeDeadTraits(jule::Ptr<_1ba963d5e_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1b9b62514_Trait>>* _24141_traits) {
	jule::I32 _24213_i = 0LL;;
	while ((_24213_i < (*(_24141_traits)).len())) {
		{
			jule::Ptr<_1b9b62514_Trait> _24417_t = (*(_24141_traits))[_24213_i];;
			if ((!(_1cac952c3_isLive(_self_, &(_24417_t))))) {
				(*(_24141_traits))=jule::append((*(_24141_traits)).slice(0LL, _24213_i),(*(_24141_traits)).slice((_24213_i + 1LL)));
				goto _iter_next_1cacc9e0c;
			};
			jule::I32 _24917_j = 0LL;;
			while ((_24917_j < (*(_24417_t))._field_Implemented.len())) {
				{
					jule::Ptr<_1b9b393a9_Struct> _25117_s = (*(_24417_t))._field_Implemented[_24917_j];;
					if (((*(_25117_s))._field_Instances.len() > 0LL)) {
						(_24917_j)++;
						goto _iter_next_1cacca605;
					};
					(*(_24417_t))._field_Implemented=jule::append((*(_24417_t))._field_Implemented.slice(0LL, _24917_j),(*(_24417_t))._field_Implemented.slice((_24917_j + 1LL)));
				}
			_iter_next_1cacca605:;
			}
			_iter_end_1cacca605:;;
			(_24213_i)++;
		}
	_iter_next_1cacc9e0c:;
	}
	_iter_end_1cacc9e0c:;;
}



inline void _1c765dd7c_removeDeadsFile(jule::Ptr<_1ba963d5e_ObjectDeadCode> _self_, jule::Ptr<_1b9c57ce1_SymbolTable>* _26240_file) {
	_1c765d563_removeDeadFns(_self_, &((*((*(_26240_file))))._field_Funcs));
	_1c765d81b_removeDeadStructs(_self_, &((*((*(_26240_file))))._field_Structs));
	_1c765dac4_removeDeadTraits(_self_, &((*((*(_26240_file))))._field_Traits));
	_1c765d2aa_removeDeadGlobals(_self_, &((*((*(_26240_file))))._field_Vars));
}



inline void _1c765e135_removeDeadsPackage(jule::Ptr<_1ba963d5e_ObjectDeadCode> _self_, jule::Ptr<_1b9bb4126_Package>* _26943_pkg) {
	{
		auto expr = &((*((*(_26943_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cacd075e:;
		if (it != expr_end) {
			jule::Ptr<_1b9c57ce1_SymbolTable> _27021_file = *it;
			{
				_1c765dd7c_removeDeadsFile(_self_, &(_27021_file));
			}
			_iter_next_1cacd075e:;
			++it;
			goto _iter_begin_1cacd075e;
		}
		_iter_end_1cacd075e:;
	};
}



inline void _1c765e333_removeDeads(jule::Ptr<_1ba963d5e_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cacd10bc:;
		if (it != expr_end) {
			jule::Ptr<_1b9bb1200_ImportInfo> _27621_used = *it;
			{
				if ((!((*(_27621_used))._field_Binded))) {
					_1c765e135_removeDeadsPackage(_self_, &((*(_27621_used))._field_Package));
				};
			}
			_iter_next_1cacd10bc:;
			++it;
			goto _iter_begin_1cacd10bc;
		}
		_iter_end_1cacd10bc:;
	};
	_1c765e135_removeDeadsPackage(_self_, &((*((*(_self_))._field_ir))._field_Main));
}



inline void _1c765e531_elimanate(jule::Ptr<_1ba963d5e_ObjectDeadCode> _self_) {
	_1c765d002_collectLive(_self_);
	_1c765e333_removeDeads(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1ba963d5e_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_1ba834944_IR__jule_tuple_s_23d21115a_Log static__1ba834da6_Build(jule::Str _2721_path, jule::I32 _2732_flags) {
	__jule_tuple_x_1ba834944_IR__jule_tuple_s_23d21115a_Log __jule_func_result;
	jule::Ptr<_1ba831e80_JuleImporter> _2813_importer = static__1ba83237b_New(_1ba83688b_buildCompileInfo());;
	jule::Slice<jule::Ptr<_1b9b1692a_Ast>> _2913_files;;
	jule::Slice<_23d21115a_Log> _2924_logs;;
	({
		__jule_tuple_sx_1b9b1692a_Ast__jule_tuple_s_23d21115a_Log __jule_assign_result = _1ba833866_ImportPackage(_2813_importer.ptr(), _2721_path, true);
		_2913_files = __jule_assign_result.__jule_result_arg0;
		_2924_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2924_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2924_logs;
		return __jule_func_result;;
	};
	jule::Str _339_root = _2721_path;;
	if ((_2913_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1b9bb4126_Package> _3913_pkg;;
	({
		__jule_tuple_x_1b9bb4126_Package__jule_tuple_s_23d21115a_Log __jule_assign_result = _1b9cae3a8_AnalyzePackage(_2913_files, jule::Trait<_1b9bad2da_Importer>(_2813_importer, 0), _2732_flags);
		_3913_pkg = __jule_assign_result.__jule_result_arg0;
		_2924_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2924_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2924_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1ba834944_IR> _4413_ir = jule::new_ptr<_1ba834944_IR>(_1ba834944_IR{._field_Root=_339_root, ._field_Main=_3913_pkg, ._field_Used=_1ba832612_AllPackages(_2813_importer.ptr()), });;
	(*(_4413_ir))._field_Passes=_1ba83667c_getAllUniquePasses(&((*(_4413_ir))._field_Main), (*(_4413_ir))._field_Used);
	__jule_func_result.__jule_result_arg0 = _4413_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1ba835390_appendStructs(_1ba834944_IR* _self_, jule::Ptr<_1b9bb4126_Package>* _5633_p, jule::Slice<jule::Ptr<_1b9b393a9_Struct>>* _5657_buffer) {
	{
		auto expr = &((*((*(_5633_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac5bb4c:;
		if (it != expr_end) {
			jule::Ptr<_1b9c57ce1_SymbolTable> _5721_f = *it;
			{
				{
					auto expr = &((*(_5721_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cac5c565:;
					if (it != expr_end) {
						jule::Ptr<_1b9b393a9_Struct> _5825_s = *it;
						{
							if ((!((*(_5825_s))._field_Binded))) {
								{ jule::Slice<jule::Ptr<_1b9b393a9_Struct>> &__jule_push_dest = (*(_5657_buffer)); __jule_push_dest.push(_5825_s); };
							};
						}
						_iter_next_1cac5c565:;
						++it;
						goto _iter_begin_1cac5c565;
					}
					_iter_end_1cac5c565:;
				};
			}
			_iter_next_1cac5bb4c:;
			++it;
			goto _iter_begin_1cac5bb4c;
		}
		_iter_end_1cac5bb4c:;
	};
}



inline jule::Slice<jule::Ptr<_1b9b393a9_Struct>> _1ba835626_GetAllStructures(_1ba834944_IR* _self_) {
	jule::Slice<jule::Ptr<_1b9b393a9_Struct>> _6917_buffer = nullptr;;
	_1ba835390_appendStructs(_self_, &((*(_self_))._field_Main), &(_6917_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac5d577:;
		if (it != expr_end) {
			jule::Ptr<_1b9bb1200_ImportInfo> _7121_u = *it;
			{
				if ((!((*(_7121_u))._field_Binded))) {
					_1ba835390_appendStructs(_self_, &((*(_7121_u))._field_Package), &(_6917_buffer));
				};
			}
			_iter_next_1cac5d577:;
			++it;
			goto _iter_begin_1cac5d577;
		}
		_iter_end_1cac5d577:;
	};
	return _6917_buffer;;
}



inline void _1ba835989_appendGlobals(_1ba834944_IR* _self_, jule::Ptr<_1b9bb4126_Package>* _7933_p, jule::Slice<jule::Ptr<_1b9c09611_Var>>* _7957_buffer) {
	{
		auto expr = &((*((*(_7933_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac5ee2a:;
		if (it != expr_end) {
			jule::Ptr<_1b9c57ce1_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &((*(_8021_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cac60843:;
					if (it != expr_end) {
						jule::Ptr<_1b9c09611_Var> _8125_v = *it;
						{
							if (((((*(_8125_v))._field_Token != nullptr) && (!((*(_8125_v))._field_Binded))) && (!((*(_8125_v))._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_1b9c09611_Var>> &__jule_push_dest = (*(_7957_buffer)); __jule_push_dest.push(_8125_v); };
							};
						}
						_iter_next_1cac60843:;
						++it;
						goto _iter_begin_1cac60843;
					}
					_iter_end_1cac60843:;
				};
			}
			_iter_next_1cac5ee2a:;
			++it;
			goto _iter_begin_1cac5ee2a;
		}
		_iter_end_1cac5ee2a:;
	};
}



inline jule::Slice<jule::Ptr<_1b9c09611_Var>> _1ba835c20_GetAllGlobals(_1ba834944_IR* _self_) {
	jule::Slice<jule::Ptr<_1b9c09611_Var>> _9217_buffer = nullptr;;
	_1ba835989_appendGlobals(_self_, &((*(_self_))._field_Main), &(_9217_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac610b3:;
		if (it != expr_end) {
			jule::Ptr<_1b9bb1200_ImportInfo> _9421_u = *it;
			{
				if ((!((*(_9421_u))._field_Binded))) {
					_1ba835989_appendGlobals(_self_, &((*(_9421_u))._field_Package), &(_9217_buffer));
				};
			}
			_iter_next_1cac610b3:;
			++it;
			goto _iter_begin_1cac610b3;
		}
		_iter_end_1cac610b3:;
	};
	return _9217_buffer;;
}



inline void _1ba835e1d_Order(_1ba834944_IR* _self_) {
	(*(_self_))._field_Ordered._field_Structs=_1ba835626_GetAllStructures(_self_);
	(*(_self_))._field_Ordered._field_Globals=_1ba835c20_GetAllGlobals(_self_);
	static__1ba837cee_orderStructures(&((*(_self_))._field_Ordered._field_Structs));
	static__1ba838030_orderVars(&((*(_self_))._field_Ordered._field_Globals));
}





std::ostream &operator<<(std::ostream &_Stream, _1ba834944_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b9b3c4ab_Str(_1b9b3c137_StructIns* _self_) {
	_23d16295d_StrBuilder _23913_kind = static__23d162c7c_New(32LL);;
	_23d16b604_WriteStr(&_23913_kind, (*((*(_self_))._field_Decl))._field_Ident);
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		_23d16b8ac_WriteByte(&_23913_kind, '[');
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c98a846a:;
			if (it != expr_end) {
				jule::I32 _24317_i = it - expr->begin();
				jule::Ptr<_1b9c8b7e7_InsGeneric> *_24320_g = it;
				{
					_23d16b604_WriteStr(&_23913_kind, _1b9c8d596_Str((*((*(_24320_g))))._field_Kind.ptr()));
					if ((_24317_i < ((*(_self_))._field_Generics.len() - 1LL))) {
						_23d16b8ac_WriteByte(&_23913_kind, ',');
					};
				}
				_iter_next_1c98a846a:;
				++it;
				_24317_i++;
				goto _iter_begin_1c98a846a;
			}
			_iter_end_1c98a846a:;
		};
		_23d16b8ac_WriteByte(&_23913_kind, ']');
	};
	return _23d16bdeb_Str(&_23913_kind);;
}



inline jule::Bool _1b9b3c7ec_Equal(jule::Ptr<_1b9b3c137_StructIns> _self_, jule::Ptr<_1b9c8d1cd_TypeKind> _25521_other) {
	jule::Ptr<_1b9b3c137_StructIns> _2569_s = _1b9c91da2_Struct(_25521_other.ptr());;
	if ((_2569_s == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Decl != (*(_2569_s))._field_Decl)) {
		return false;;
	};
	if (((*(_self_))._field_Generics.len() != (*(_2569_s))._field_Generics.len())) {
		return false;;
	};
	jule::I32 _26913_i = 0LL;;
	for (; (_26913_i < (*(_self_))._field_Generics.len()); (_26913_i)++) {
		{
			if ((!(_1b9c8d8d7_Equal((*((*(_self_))._field_Generics[_26913_i]))._field_Kind, (*((*(_2569_s))._field_Generics[_26913_i]))._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1c98ac5b2:;
	}
	_iter_end_1c98ac5b2:;;
	return true;;
}



inline jule::Bool _1b9b3cca3_Same(_1b9b3c137_StructIns* _self_, jule::Ptr<_1b9b3c137_StructIns> _28319_s) {
	if ((((*(_self_))._field_Decl != (*(_28319_s))._field_Decl) || ((*(_28319_s))._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c98ae42c:;
		if (it != expr_end) {
			jule::I32 _28713_i = it - expr->begin();
			jule::Ptr<_1b9c8b7e7_InsGeneric> *_28716_g = it;
			{
				jule::Ptr<_1b9c8b7e7_InsGeneric> _28813_g2 = (*(_28319_s))._field_Generics[_28713_i];;
				if ((((*((*((*(_28716_g))))._field_Kind))._field_BindIdent != (*((*(_28813_g2))._field_Kind))._field_BindIdent) || (!(_1b9c8d8d7_Equal((*((*(_28716_g))))._field_Kind, (*(_28813_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1c98ae42c:;
			++it;
			_28713_i++;
			goto _iter_begin_1c98ae42c;
		}
		_iter_end_1c98ae42c:;
	};
	return true;;
}



inline jule::Ptr<_1b9b4e26a_Fn> _1b9b3d19e_FindMethod(_1b9b3c137_StructIns* _self_, jule::Str _29829_ident, jule::Bool _29841_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c98b27d7:;
		if (it != expr_end) {
			jule::Ptr<_1b9b4e26a_Fn> _29921_f = *it;
			{
				if ((((*(_29921_f))._field_Statically == _29841_statically) && ((*(_29921_f))._field_Ident == _29829_ident))) {
					return _29921_f;;
				};
			}
			_iter_next_1c98b27d7:;
			++it;
			goto _iter_begin_1c98b27d7;
		}
		_iter_end_1c98b27d7:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b9b3b587_FieldIns> _1b9b3d4e0_FindField(_1b9b3c137_StructIns* _self_, jule::Str _30928_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c98b3b07:;
		if (it != expr_end) {
			jule::Ptr<_1b9b3b587_FieldIns> _31021_f = *it;
			{
				if (((*((*(_31021_f))._field_Decl))._field_Ident == _30928_ident)) {
					return _31021_f;;
				};
			}
			_iter_next_1c98b3b07:;
			++it;
			goto _iter_begin_1c98b3b07;
		}
		_iter_end_1c98b3b07:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b9c09611_Var> _1b9b3d831_FindStatic(_1b9b3c137_StructIns* _self_, jule::Str _32029_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c98b4d28:;
		if (it != expr_end) {
			jule::Ptr<_1b9c09611_Var> _32121_v = *it;
			{
				if (((*(_32121_v))._field_Ident == _32029_ident)) {
					return _32121_v;;
				};
			}
			_iter_next_1c98b4d28:;
			++it;
			goto _iter_begin_1c98b4d28;
		}
		_iter_end_1c98b4d28:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9b3c137_StructIns _Src) {
	_Stream << _1b9b3c4ab_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_23d2c02e6_Cmd> static__23d2c0714_New(jule::Str _2619_path) {
	return jule::new_ptr<_23d2c02e6_Cmd>(_23d2c02e6_Cmd{._field_path=_2619_path, });;
}



inline jule::VoidExceptional _23d2c0912_Spawn(_23d2c02e6_Cmd* _self_) {
	({
		auto except = _23d3206dc_spawn(_self_);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I32> _23d2c0d96_Wait(_23d2c02e6_Cmd* _self_) {
	return jule::Exceptional<jule::I32>(jule::Any(), static_cast<jule::I32>(({
		auto except = _23d320b71_wait(_self_);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I32>(except.error);
		} 0;});
	})));;
}



inline jule::VoidExceptional _23d3206dc_spawn(_23d2c02e6_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid != -1LL)) {
		jule::panic(jule::Str::lit("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_unix.jule:78:13"));;
	};
	jule::Str _809_path = (*(_self_))._field_path;;
	jule::Array<signed,2> _8113_pipe = jule::Array<signed,2>(0);;
	if ((pipe((&(_8113_pipe[0LL]))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(static_cast<jule::I32>(3LL), &__jule_any_type0));
	};
	if ((_23bc67883_Fcntl(static_cast<jule::I32>(static_cast<jule::I32>(_8113_pipe[1LL])), F_SETFD, static_cast<jule::I32>((fcntl(static_cast<jule::I32>(static_cast<jule::I32>(_8113_pipe[1LL])), F_GETFD) | FD_CLOEXEC))) == -1LL)) {
		_23bc9510d_Close(static_cast<jule::I32>(static_cast<jule::I32>(_8113_pipe[0LL])));
		_23bc9510d_Close(static_cast<jule::I32>(static_cast<jule::I32>(_8113_pipe[1LL])));
		return jule::VoidExceptional(jule::Any(static_cast<jule::I32>(3LL), &__jule_any_type0));
	};
	(*(_self_))._field_attrs._field_pid=static_cast<jule::I32>(fork());
	{
		auto &_match_expr{ (*(_self_))._field_attrs._field_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_1c787c683:;
			{
				return jule::VoidExceptional(jule::Any(static_cast<jule::I32>(3LL), &__jule_any_type0));
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1c787baa0:;
			{
				_23bc9510d_Close(static_cast<jule::I32>(static_cast<jule::I32>(_8113_pipe[0LL])));
				jule::Slice<jule::Str> _9617_args = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len()));;
				_9617_args[0LL]=_809_path;
				(_9617_args).append((*(_self_))._field_Args);;
				({
					auto except = _23d320489_setenv(&((*(_self_))._field_Env));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
				_23d320258_execvp(&(_809_path), &(_9617_args));
				jule::Str _10113_code = _23d31b573_Itoa(static_cast<jule::I32>(_22e0817e2_GetLastErrno()));;
				{
					_23bc9553c_Write(static_cast<jule::I32>(static_cast<jule::I32>(_8113_pipe[1LL])), (&(_10113_code[0LL])), static_cast<jule::U32>(static_cast<jule::U32>(_10113_code.len())));
				};
				_23bc9510d_Close(static_cast<jule::I32>(static_cast<jule::I32>(_8113_pipe[1LL])));
				_23d321e80_Exit(1LL);
			}
		}
		else {
			_case_begin_1c787742a:;
			{
				_23bc9510d_Close(static_cast<jule::I32>(static_cast<jule::I32>(_8113_pipe[1LL])));
				jule::Array<jule::U8,16> _10721_buf = jule::Array<jule::U8,16>(0);;
				jule::I32 _10813_n = _23bc94c67_Read(static_cast<jule::I32>(static_cast<jule::I32>(_8113_pipe[0LL])), (&(_10721_buf[0LL])), 16LLU);;
				_23bc9510d_Close(static_cast<jule::I32>(static_cast<jule::I32>(_8113_pipe[0LL])));
				if ((_10813_n != 0LL)) {
					(*(_self_))._field_attrs._field_pid=-1LL;
					jule::I32 _11217_code = 0;;
					({
						__jule_tuple_int__jule_tuple_bool __jule_assign_result = _23d2c1b99_AtoiBp((&(_10721_buf[0LL])), _10813_n);
						_11217_code = __jule_assign_result.__jule_result_arg0;
					});
					return jule::VoidExceptional(jule::Any(_23d321413_processErrorFromCode(_11217_code), &__jule_any_type0));
				};
			}
		}
		_match_end_1c78799c1:;
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I32> _23d320b71_wait(_23d2c02e6_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid == -1LL)) {
		jule::panic(jule::Str::lit("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_unix.jule:130:13"));;
	};
	jule::I32 _13213_stat = 0LL;;
	{
		if ((waitpid((*(_self_))._field_attrs._field_pid, ((signed*)((&(_13213_stat)))), 0LL) == -1LL)) {
			return jule::Exceptional<jule::I32>(jule::Any(_23d321666_getLastProcessError(), &__jule_any_type0));
		};
	};
	(*(_self_))._field_attrs._field_pid=-1LL;
	return jule::Exceptional<jule::I32>(jule::Any(), static_cast<jule::I32>(WEXITSTATUS(_13213_stat)));;
}





std::ostream &operator<<(std::ostream &_Stream, _23d2c02e6_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "attrs:" << _Src._field_attrs << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}



inline void _23bc27205_Free(void* _4520_ptr) {
	free(_4520_ptr);
}



inline jule::Str _23bc580b0_BytePtrToStr(jule::U8* _6924_s) {
	if ((_6924_s == nullptr)) {
		return jule::Str();;
	};
	jule::I32 _739_n = 0LL;;
	{
		for (; (_6924_s[_739_n] != 0LLU); (_739_n)++) {
			{
			}
		_iter_next_1c8105856:;
		}
		_iter_end_1c8105856:;;
	};
	if ((_739_n == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _809_buf = jule::Slice<jule::U8>::alloc(_739_n, _739_n, 0);;
	_739_n=0LL;
	{
		for (; (_6924_s[_739_n] != 0LLU); (_739_n)++) {
			{
				_809_buf[_739_n]=_6924_s[_739_n];
			}
		_iter_next_1c8105ca7:;
		}
		_iter_end_1c8105ca7:;;
	};
	return static_cast<jule::Str>(_809_buf);;
}



inline jule::I32 _22e0817e2_GetLastErrno(void) {
	return errno;;
}



inline jule::I32 _23bc67883_Fcntl(jule::I32 _5410_handle, jule::I32 _5423_cmd, jule::I32 _5433_arg) {
	return static_cast<jule::I32>(fcntl(_5410_handle, _5423_cmd, _5433_arg));;
}



inline jule::I32 _23bc67c07_Stat(jule::U8* _5916_path, struct stat* _5933_stat) {
	return static_cast<jule::I32>(stat(((char*)(_5916_path)), _5933_stat));;
}



inline jule::I32 _23bc68136_Open(jule::U8* _6416_path, jule::I32 _6429_flag, jule::I32 _6440_mode) {
	return static_cast<jule::I32>(open(((char*)(_6416_path)), _6429_flag, _6440_mode));;
}



inline jule::U8* _23bc684aa_Getcwd(jule::U8* _7018_buff, jule::U32 _7031_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_7018_buff)), _7031_bufflen)));;
}



inline DIR* _23bc689a5_Opendir(jule::U8* _7519_path) {
	return opendir(((char*)(_7519_path)));;
}



inline struct dirent* _23bc68c6e_Readdir(DIR* _7823_dir) {
	return readdir(_7823_dir);;
}



inline jule::I32 _23bc69038_Closedir(DIR* _8124_dir) {
	return static_cast<jule::I32>(closedir(_8124_dir));;
}



inline jule::I32 _23bc69940_Mkdir(jule::U8* _9017_path, jule::I32 _9030_mode) {
	return static_cast<jule::I32>(mkdir(((char*)(_9017_path)), _9030_mode));;
}



inline jule::I32 _23bc69c09_Rmdir(jule::U8* _9517_path) {
	return static_cast<jule::I32>(rmdir(((char*)(_9517_path))));;
}



inline jule::I32 _23bc69ec3_Unlink(jule::U8* _9818_path) {
	return static_cast<jule::I32>(unlink(((char*)(_9818_path))));;
}



inline jule::I32 _23bc94c67_Read(jule::I32 _2016_handle, void* _2033_buff, jule::U32 _2048_n) {
	return static_cast<jule::I32>(read(_2016_handle, _2033_buff, _2048_n));;
}



inline jule::I32 _23bc9510d_Close(jule::I32 _2510_handle) {
	return static_cast<jule::I32>(close(_2510_handle));;
}



inline jule::I32 _23bc9553c_Write(jule::I32 _2817_handle, void* _2830_buff, jule::U32 _2845_n) {
	return static_cast<jule::I32>(write(_2817_handle, _2830_buff, _2845_n));;
}



inline void _23bc9576d_Exit(jule::I32 _339_code) {
	exit(_339_code);
}



inline jule::Slice<jule::U8> _23bca314e_Stobs(jule::Str* _911_s) {
	return (*(_911_s)).fake_slice();;
}



inline jule::I32 _23bd4e77d_getLastOsError(void) {
	jule::I32 _305_err = _22e0817e2_GetLastErrno();;
	{
		auto &_match_expr{ _305_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1c7bd6723:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1c7bd60d5:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1c7bd615c:;
			{
				return static_cast<jule::I32>(2LL);;
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1c7bd61d4:;
			{
				return static_cast<jule::I32>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1c7bd6448:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1c7bd64ae:;
			{
				return static_cast<jule::I32>(5LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1c7bd6525:;
			{
				return static_cast<jule::I32>(6LL);;
			}
		}
		else {
			_case_begin_1c7bd605d:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		_match_end_1c7bd6008:;
	};
}



inline jule::Slice<jule::Str> _23bd7d7e0_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _23bd7dc85_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(), ({
		auto except = _23bd7e6c0_getwd();
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));;
}



inline jule::Exceptional<jule::Str> _23bd7e6c0_getwd(void) {
	jule::U8* _119_buff = _23bc684aa_Getcwd(nullptr, 0LLU);;
	if ((_119_buff == nullptr)) {
		return jule::Exceptional<jule::Str>(jule::Any(_23bd4e77d_getLastOsError(), &__jule_any_type0));
	};
	jule::Str _155_pwd = _23bc580b0_BytePtrToStr(_119_buff);;
	{
		_23bc27205_Free(_119_buff);
	};
	return jule::Exceptional<jule::Str>(jule::Any(), _155_pwd);;
}



inline jule::Bool _23ce87145_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_23cee7282__PROPERTIES[static_cast<jule::I32>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _23d000884_isExcludingLatin(_23ce913a2_Letter, _7613_r);;
}



inline jule::Bool _23ceeec07_is16(jule::Slice<_23ceece69_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c8c7610d:;
			if (it != expr_end) {
				jule::I32 _19313_i = it - expr->begin();
				{
					_23ceece69_Range16* _19413_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < (*(_19413_range))._field_Lo)) {
							return false;;
						};
						if ((_19128_r <= (*(_19413_range))._field_Hi)) {
							return (((*(_19413_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_19413_range))._field_Lo),(*(_19413_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1c8c7610d:;
				++it;
				_19313_i++;
				goto _iter_begin_1c8c7610d;
			}
			_iter_end_1c8c7610d:;
		};
		return false;;
	};
	jule::I32 _2089_lo = 0LL;;
	jule::I32 _2099_hi = _1919_ranges.len();;
	while ((_2089_lo < _2099_hi)) {
		{
			jule::I32 _2119_m = (_2089_lo + ((_2099_hi - _2089_lo) >> 1LLU));;
			_23ceece69_Range16* _2129_range = (&(_1919_ranges[_2119_m]));;
			{
				if ((((*(_2129_range))._field_Lo <= _19128_r) && (_19128_r <= (*(_2129_range))._field_Hi))) {
					return (((*(_2129_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_2129_range))._field_Lo),(*(_2129_range))._field_Stride) == 0LLU));;
				};
				if ((_19128_r < (*(_2129_range))._field_Lo)) {
					_2099_hi=_2119_m;
				} else {
					_2089_lo=static_cast<jule::I32>((_2119_m + 1LL));
				};
			};
		}
	_iter_next_1c8c74d98:;
	}
	_iter_end_1c8c74d98:;;
	return false;;
}



inline jule::Bool _23d00007b_is32(jule::Slice<_23ceed497_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c8c7c103:;
			if (it != expr_end) {
				jule::I32 _23013_i = it - expr->begin();
				{
					_23ceed497_Range32* _23113_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < (*(_23113_range))._field_Lo)) {
							return false;;
						};
						if ((_22828_r <= (*(_23113_range))._field_Hi)) {
							return (((*(_23113_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_23113_range))._field_Lo),(*(_23113_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1c8c7c103:;
				++it;
				_23013_i++;
				goto _iter_begin_1c8c7c103;
			}
			_iter_end_1c8c7c103:;
		};
		return false;;
	};
	jule::I32 _2459_lo = 0LL;;
	jule::I32 _2469_hi = _2289_ranges.len();;
	while ((_2459_lo < _2469_hi)) {
		{
			jule::I32 _2489_m = (_2459_lo + ((_2469_hi - _2459_lo) >> 1LLU));;
			_23ceed497_Range32* _2499_range = (&(_2289_ranges[_2489_m]));;
			{
				if ((((*(_2499_range))._field_Lo <= _22828_r) && (_22828_r <= (*(_2499_range))._field_Hi))) {
					return (((*(_2499_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_2499_range))._field_Lo),(*(_2499_range))._field_Stride) == 0LLU));;
				};
				if ((_22828_r < (*(_2499_range))._field_Lo)) {
					_2469_hi=_2489_m;
				} else {
					_2459_lo=static_cast<jule::I32>((_2489_m + 1LL));
				};
			};
		}
	_iter_next_1c8c78c6a:;
	}
	_iter_end_1c8c78c6a:;;
	return false;;
}



inline jule::Bool _23d000884_isExcludingLatin(jule::Ptr<_23ceed94d_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_23ceece69_Range16> *_28010_R16 = &((*(_27821_rangeTab))._field_R16);;
		jule::I32 _2829_off = (*(_27821_rangeTab))._field_LatinOffset;;
		if ((((*(_28010_R16)).len() > _2829_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_28010_R16))[((*(_28010_R16)).len() - 1LL)]._field_Hi)))) {
			return _23ceeec07_is16((*(_28010_R16)).slice(_2829_off), static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));;
		};
	};
	jule::Slice<_23ceed497_Range32> *_2876_R32 = &((*(_27821_rangeTab))._field_R32);;
	if ((((*(_2876_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_2876_R32))[0LL]._field_Lo)))) {
		return _23d00007b_is32((*(_2876_R32)), static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));;
	};
	return false;;
}



inline jule::Bool _23d000b4d_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_23cee7282__PROPERTIES[static_cast<jule::I32>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _23d000884_isExcludingLatin(_23ce97908_Upper, _29512_r);;
}



inline __jule_tuple_i32__jule_tuple_int _23d10b4ea_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1865_p0 = _18215_p[0LL];;
	jule::U8 _1875_x = _23d10a351_first[static_cast<jule::I32>(_1865_p0)];;
	if ((_1875_x >= 240LLU)) {
		jule::I32 _1929_mask = static_cast<jule::I32>(((_1875_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_18215_p[0LL]) & (~(_1929_mask))) | (65533LL & _1929_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _1955_sz = static_cast<jule::I32>((_1875_x & 7LLU));;
	_23d10a8d4_acceptRange _1965_accept = _23d10abe2_acceptRanges[static_cast<jule::I32>((_1875_x >> 4LLU))];;
	if ((_18215_p.len() < _1955_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2005_b1 = _18215_p[1LL];;
	if (((_2005_b1 < _1965_accept._field_lo) || (_1965_accept._field_hi < _2005_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1955_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_1865_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2005_b1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2075_b2 = _18215_p[2LL];;
	if (((_2075_b2 < 128LLU) || (191LL < _2075_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1955_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_1865_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2005_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2075_b2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2145_b3 = _18215_p[3LL];;
	if (((_2145_b3 < 128LLU) || (191LL < _2145_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_1865_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2005_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2075_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2145_b3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _23d10bb05_DecodeLastRune(jule::Slice<jule::U8> _27619_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_27619_p.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I32 _2805_end = _27619_p.len();;
	jule::I32 _2819_start = (_2805_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(static_cast<jule::I32>(_27619_p[_2819_start]));
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _2899_lim = (_2805_end - 4LL);;
	if ((_2899_lim < 0LL)) {
		_2899_lim=0LL;
	};
	(_2819_start)--;
	for (; (_2819_start >= _2899_lim); (_2819_start)--) {
		{
			if (_23d10d62e_RuneStart(_27619_p[_2819_start])) {
				goto _iter_end_1c8cbc50b;
			};
		}
	_iter_next_1c8cbc50b:;
	}
	_iter_end_1c8cbc50b:;;
	if ((_2819_start < 0LL)) {
		_2819_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _23d10b4ea_DecodeRune(_27619_p.slice(_2819_start, _2805_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_2819_start + __jule_func_result.__jule_result_arg1) != _2805_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::Slice<jule::U8> _23d10c95d_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40530_r))}));;
	};
	return _23d10ccd2_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _23d10ccd2_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4145_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4145_i <= 2047LLU)) {
			_case_begin_1c8cd0e04:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else if ((_4145_i > 1114111LLU) || ((55296LL <= _4145_i) && (_4145_i <= 57343LLU))) {
			_case_begin_1c8cd1223:;
			{
				_41242_r=128LL;
				goto _case_begin_1c8ccdd8b;
			}
		}
		else if ((_4145_i <= 65535LLU)) {
			_case_begin_1c8ccdd8b:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else {
			_case_begin_1c8ccdd25:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		_match_end_1c8ccdcae:;
	};
}



inline jule::I32 _23d10d365_RuneCountStr(jule::Str _47317_s) {
	jule::I32 __jule_func_result = 0;
	jule::I32 _4749_i = 0LL;;
	for (; (_4749_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _47613_c = _47317_s[_4749_i];;
			if ((_47613_c < 128LLU)) {
				(_4749_i)++;
				goto _iter_next_1c8cd888a;
			};
			jule::U8 _4829_x = _23d10a351_first[static_cast<jule::I32>(_47613_c)];;
			if ((_4829_x == 241LLU)) {
				(_4749_i)++;
				goto _iter_next_1c8cd888a;
			};
			jule::I32 _48713_size = static_cast<jule::I32>((_4829_x & 7LLU));;
			if (((_4749_i + _48713_size) > _47317_s.len())) {
				(_4749_i)++;
				goto _iter_next_1c8cd888a;
			};
			_23d10a8d4_acceptRange _4929_accept = _23d10abe2_acceptRanges[static_cast<jule::I32>((_4829_x >> 4LLU))];;
			_47613_c=_47317_s[(_4749_i + 1LL)];
			if (((_47613_c < _4929_accept._field_lo) || (_4929_accept._field_hi < _47613_c))) {
				_48713_size=1LL;
			} else if ((_48713_size == 2LL)) {
			} else {
				_47613_c=_47317_s[(_4749_i + 2LL)];
				if (((_47613_c < 128LLU) || (191LL < _47613_c))) {
					_48713_size=1LL;
				} else if ((_48713_size == 3LL)) {
				} else {
					_47613_c=_47317_s[(_4749_i + 3LL)];
					if (((_47613_c < 128LLU) || (191LL < _47613_c))) {
						_48713_size=1LL;
					};
				};
			};
			_4749_i+=_48713_size;
		}
	_iter_next_1c8cd888a:;
	}
	_iter_end_1c8cd888a:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _23d10d62e_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I32 _23d138cec_FindByte(jule::Slice<jule::U8> _3713_s, jule::U8 _3724_b) {
	{
		auto expr = &(_3713_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c8d076bc:;
		if (it != expr_end) {
			jule::I32 _399_i = it - expr->begin();
			jule::U8 *_3912_se = it;
			{
				if (((*(_3912_se)) == _3724_b)) {
					return _399_i;;
				};
			}
			_iter_next_1c8d076bc:;
			++it;
			_399_i++;
			goto _iter_begin_1c8d076bc;
		}
		_iter_end_1c8d076bc:;
	};
	return -1LL;;
}



inline jule::I32 _23d14b617_FindLastByte(jule::Slice<jule::U8> _5017_s, jule::U8 _5028_b) {
	if ((_5017_s.len() == 0LL)) {
		return -1LL;;
	};
	jule::U8* _545_first = (&(_5017_s[0LL]));;
	jule::U8* _559_it = (&(_5017_s[(_5017_s.len() - 1LL)]));;
	for (; (_559_it >= _545_first); (_559_it)--) {
		{
			{
				if (((*(_559_it)) == _5028_b)) {
					return static_cast<jule::I32>(((jule::I32)((_559_it - _545_first))));;
				};
			};
		}
	_iter_next_1c8d0913b:;
	}
	_iter_end_1c8d0913b:;;
	return -1LL;;
}



inline jule::I32 _23d14b9be_FindByteStr(jule::Str* _6717_s, jule::U8 _6725_b) {
	return static_cast<jule::I32>(_23d138cec_FindByte(_23bca314e_Stobs(_6717_s), _6725_b));;
}



inline jule::I32 _23d14bd43_FindLastByteStr(jule::Str* _7221_s, jule::U8 _7229_b) {
	return static_cast<jule::I32>(_23d14b617_FindLastByte(_23bca314e_Stobs(_7221_s), _7229_b));;
}



inline jule::Str _23d14c2a5_Repeat(jule::Str _1211_s, jule::I32 _1223_n) {
	if ((_1223_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1211_s.len() > jule::div(2147483647LL,_1223_n))) {
		jule::panic(jule::Str::lit("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:17:9"));;
	};
	_23d16295d_StrBuilder _209_ss = static__23d162c7c_New(static_cast<jule::I32>((_1211_s.len() * _1223_n)));;
	for (; (_1223_n > 0LL); (_1223_n)--) {
		{
			_23d16b604_WriteStr(&_209_ss, _1211_s);
		}
	_iter_next_1c8d27d19:;
	}
	_iter_end_1c8d27d19:;;
	return _23d16bdeb_Str(&_209_ss);;
}



inline jule::Bool _23d14c728_hasPrefix(jule::Str* _2715_s, jule::Str* _2724_sub, jule::I32 _2738_start) {
	if ((((*(_2724_sub)).len() == 0LL) || (((*(_2715_s)).len() - _2738_start) < (*(_2724_sub)).len()))) {
		return false;;
	};
	jule::I32 _329_i = 0LL;;
	for (; (_329_i < (*(_2724_sub)).len()); ({
		jule::I32 ___jule_assign_arg = static_cast<jule::I32>((_329_i + 1LL));
		jule::I32 _1___jule_assign_arg = static_cast<jule::I32>((_2738_start + 1LL));
		_329_i = ___jule_assign_arg;
		_2738_start = _1___jule_assign_arg;
	})) {
		{
			if (((*(_2715_s))[_2738_start] != (*(_2724_sub))[_329_i])) {
				return false;;
			};
		}
	_iter_next_1c8d2a8bb:;
	}
	_iter_end_1c8d2a8bb:;;
	return true;;
}



inline jule::Bool _23d14ca9c_HasPrefix(jule::Str _4214_s, jule::Str _4222_sub) {
	return _23d14c728_hasPrefix(&(_4214_s), &(_4222_sub), 0LL);;
}



inline jule::Bool _23d14d053_hasSuffix(jule::Str* _4615_s, jule::Str* _4624_sub, jule::I32 _4638_start) {
	if ((((*(_4624_sub)).len() == 0LL) || (((*(_4615_s)).len() - _4638_start) < (*(_4624_sub)).len()))) {
		return false;;
	};
	_4638_start=static_cast<jule::I32>(((*(_4615_s)).len() - _4638_start));
	jule::I32 _529_i = 0LL;;
	for (; (_529_i < (*(_4624_sub)).len()); (_529_i)++) {
		{
			if (((*(_4615_s))[((_4638_start - _529_i) - 1LL)] != (*(_4624_sub))[(((*(_4624_sub)).len() - _529_i) - 1LL)])) {
				return false;;
			};
		}
	_iter_next_1c8d2c714:;
	}
	_iter_end_1c8d2c714:;;
	return true;;
}



inline jule::Bool _23d14d394_HasSuffix(jule::Str _6214_s, jule::Str _6222_sub) {
	return _23d14d053_hasSuffix(&(_6214_s), &(_6222_sub), 0LL);;
}



inline jule::I32 _23d14d7c3_FindAt(jule::Str _7011_s, jule::Str _7019_sub, jule::I32 _7033_i) {
	if ((((_7033_i < 0LL) || (_7011_s.len() < _7019_sub.len())) || (_7019_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_7033_i < _7011_s.len()); (_7033_i)++) {
		{
			if (_23d14c728_hasPrefix(&(_7011_s), &(_7019_sub), _7033_i)) {
				return _7033_i;;
			};
		}
	_iter_next_1c8d30470:;
	}
	_iter_end_1c8d30470:;;
	return -1LL;;
}



inline jule::I32 _23d14e186_FindLastAt(jule::Str _9315_s, jule::Str _9323_sub, jule::I32 _9333_i) {
	jule::I32 _949_j = ((_9333_i - _9323_sub.len()) + 1LL);;
	if (((((_9323_sub.len() == 0LL) || (_9333_i < 0LL)) || (_9333_i >= _9315_s.len())) || (_949_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_1c8d3361b:;
	for (; (_949_j >= 0LL); (_949_j)--) {
		{
			jule::I32 _10013_k = _949_j;;
			jule::I32 _10113_z = 0LL;;
			for (; (_10113_z < _9323_sub.len()); ({
				jule::I32 ___jule_assign_arg = static_cast<jule::I32>((_10013_k + 1LL));
				jule::I32 _1___jule_assign_arg = static_cast<jule::I32>((_10113_z + 1LL));
				_10013_k = ___jule_assign_arg;
				_10113_z = _1___jule_assign_arg;
			})) {
				{
					if ((_9315_s[_10013_k] != _9323_sub[_10113_z])) {
						goto _iter_next_1c8d33264;
					};
				}
			_iter_next_1c8d34111:;
			}
			_iter_end_1c8d34111:;;
			return _949_j;;
		}
	_iter_next_1c8d33264:;
	}
	_iter_end_1c8d33264:;;
	return -1LL;;
}



inline jule::I32 _23d14e50a_FindLast(jule::Str _11513_s, jule::Str _11521_sub) {
	return static_cast<jule::I32>(_23d14e186_FindLastAt(_11513_s, _11521_sub, static_cast<jule::I32>((_11513_s.len() - 1LL))));;
}



inline jule::I32 _23d1508d5_findRune(jule::Slice<jule::U8>* _17114_s, jule::I32 _17125_r) {
	jule::I32 _1729_i = 0LL;;
	while ((_1729_i < (*(_17114_s)).len())) {
		{
			jule::I32 _1749_br = 0;;
			jule::I32 _17413_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _23d10b4ea_DecodeRune((*(_17114_s)).slice(_1729_i));
				_1749_br = __jule_assign_result.__jule_result_arg0;
				_17413_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_17125_r == _1749_br)) {
				return _1729_i;;
			};
			_1729_i+=_17413_n;
		}
	_iter_next_1c8d3b2b1:;
	}
	_iter_end_1c8d3b2b1:;;
	return -1LL;;
}



inline jule::I32 _23d151287_FindLastByte(jule::Str _19317_s, jule::U8 _19325_b) {
	return static_cast<jule::I32>(_23d14bd43_FindLastByteStr(&(_19317_s), _19325_b));;
}



inline jule::I32 _23d152178_FindAny(jule::Str _22812_s, jule::Str _22820_runes) {
	jule::Slice<jule::U8> _2295_sb = _23bca314e_Stobs(&(_22812_s));;
	jule::Slice<jule::U8> _2309_rb = _23bca314e_Stobs(&(_22820_runes));;
	jule::I32 _2319_i = 0LL;;
	while ((_2319_i < _2295_sb.len())) {
		{
			jule::I32 _2339_r = 0;;
			jule::I32 _23312_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _23d10b4ea_DecodeRune(_2295_sb.slice(_2319_i));
				_2339_r = __jule_assign_result.__jule_result_arg0;
				_23312_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_23d1508d5_findRune(&(_2309_rb), _2339_r) != -1LL)) {
				return _2319_i;;
			};
			_2319_i+=_23312_n;
		}
	_iter_next_1c8d45b39:;
	}
	_iter_end_1c8d45b39:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _23d15292b_Split(jule::Str _26210_s, jule::Str _26218_sub, jule::I32 _26232_n) {
	jule::I32 _2639_cap = _26232_n;;
	if ((_26232_n < 0LL)) {
		_2639_cap=16LLU;
	};
	jule::Slice<jule::Str> _2679_parts = jule::Slice<jule::Str>::alloc(0LL, _2639_cap);;
	if ((_26232_n == 0LL)) {
		return _2679_parts;;
	};
	if ((_26232_n < 0LL)) {
		_26232_n=static_cast<jule::I32>(_26210_s.len());
	};
	jule::I32 _2749_i = 0LL;;
	for (; (_26232_n > 0LL); (_26232_n)--) {
		{
			jule::I32 _2769_j = _23d14d7c3_FindAt(_26210_s, _26218_sub, _2749_i);;
			if ((_2769_j == -1LL)) {
				goto _iter_end_23ced8e88;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _2679_parts; __jule_push_dest.push(_26210_s.slice(_2749_i, _2769_j)); };
			_2749_i=static_cast<jule::I32>((_2769_j + _26218_sub.len()));
		}
	_iter_next_23ced8e88:;
	}
	_iter_end_23ced8e88:;;
	if (((_26232_n > 0LL) && (_2749_i < _26210_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _2679_parts; __jule_push_dest.push(_26210_s.slice(_2749_i)); };
	};
	return _2679_parts;;
}



inline jule::Bool _23d152ca0_Contains(jule::Str _29013_s, jule::Str _29021_sub) {
	return (_23d14d7c3_FindAt(_29013_s, _29021_sub, 0LL) != -1LL);;
}



inline jule::Bool _23d15381c_ContainsAny(jule::Str _30616_s, jule::Str _30624_runes) {
	return (_23d152178_FindAny(_30616_s, _30624_runes) != -1LL);;
}



inline jule::I32 _23d153b91_Count(jule::Str _31210_s, jule::Str _31218_sub) {
	if ((_31218_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _3169_n = 0LL;;
	jule::I32 _3179_i = 0LL;;
	for (;;) {
		{
			jule::I32 _3199_j = _23d14d7c3_FindAt(_31210_s, _31218_sub, _3179_i);;
			if ((_3199_j == -1LL)) {
				goto _iter_end_1c77e7d18;
			};
			(_3169_n)++;
			_3179_i=static_cast<jule::I32>((_3199_j + _31218_sub.len()));
		}
	_iter_next_1c77e7d18:;
	}
	_iter_end_1c77e7d18:;;
	return _3169_n;;
}



inline jule::Str _23d15417a_Replace(jule::Str _33212_s, jule::Str _33220_sub, jule::Str _33230_new, jule::I32 _33244_n) {
	if (((_33244_n == 0LL) || (_33220_sub == _33230_new))) {
		return _33212_s;;
	};
	jule::I32 _3375_m = _23d153b91_Count(_33212_s, _33220_sub);;
	if ((_3375_m == 0LL)) {
		return _33212_s;;
	};
	if (((_33244_n < 0LL) || (_3375_m < _33244_n))) {
		_33244_n=_3375_m;
	};
	_23d16295d_StrBuilder _3459_ss = static__23d162c7c_New(static_cast<jule::I32>((_33212_s.len() + (_33244_n * (_33230_new.len() - _33220_sub.len())))));;
	jule::I32 _3469_i = 0LL;;
	for (; (_33244_n > 0LL); (_33244_n)--) {
		{
			jule::I32 _3489_j = _23d14d7c3_FindAt(_33212_s, _33220_sub, _3469_i);;
			if ((_3489_j == -1LL)) {
				goto _iter_end_1c77eb190;
			};
			_23d16b604_WriteStr(&_3459_ss, _33212_s.slice(_3469_i, _3489_j));
			_23d16b604_WriteStr(&_3459_ss, _33230_new);
			_3469_i=static_cast<jule::I32>((_3489_j + _33220_sub.len()));
		}
	_iter_next_1c77eb190:;
	}
	_iter_end_1c77eb190:;;
	_23d16b604_WriteStr(&_3459_ss, _33212_s.slice(_3469_i));
	return _23d16bdeb_Str(&_3459_ss);;
}



inline void _23d150e24_trimLeft(jule::Slice<jule::U8>* _38818_s, jule::Slice<jule::U8>* _38830_cutset) {
	jule::I32 _3899_i = 0LL;;
	while ((_3899_i < (*(_38818_s)).len())) {
		{
			jule::I32 _3919_r = 0;;
			jule::I32 _39112_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _23d10b4ea_DecodeRune((*(_38818_s)).slice(_3899_i));
				_3919_r = __jule_assign_result.__jule_result_arg0;
				_39112_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_23d1508d5_findRune(_38830_cutset, _3919_r) == -1LL)) {
				((*(_38818_s))).mut_slice(_3899_i);;
				return;;
			};
			_3899_i+=_39112_n;
		}
	_iter_next_1c7800c11:;
	}
	_iter_end_1c7800c11:;;
	(*(_38818_s))=nullptr;
}



inline jule::Str _23d155324_TrimLeft(jule::Str _40313_s, jule::Str _40321_cutset) {
	jule::Slice<jule::U8> _4049_bytes = _23bca314e_Stobs(&(_40313_s));;
	jule::Slice<jule::U8> _4055_bcutset = _23bca314e_Stobs(&(_40321_cutset));;
	_23d150e24_trimLeft(&(_4049_bytes), &(_4055_bcutset));
	return static_cast<jule::Str>(_4049_bytes);;
}



inline void _23d155610_trimRight(jule::Slice<jule::U8>* _41019_s, jule::Slice<jule::U8>* _41031_cutset) {
	jule::I32 _4119_i = (*(_41019_s)).len();;
	while ((_4119_i > 0LL)) {
		{
			jule::I32 _4139_r = 0;;
			jule::I32 _41312_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _23d10bb05_DecodeLastRune((*(_41019_s)).slice(0LL, _4119_i));
				_4139_r = __jule_assign_result.__jule_result_arg0;
				_41312_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_23d1508d5_findRune(_41031_cutset, _4139_r) == -1LL)) {
				((*(_41019_s))).mut_slice(0LL, _4119_i);;
				return;;
			};
			_4119_i-=_41312_n;
		}
	_iter_next_1c78033d9:;
	}
	_iter_end_1c78033d9:;;
	(*(_41019_s))=nullptr;
}



inline jule::Str _23d155d08_Trim(jule::Str _4349_s, jule::Str _43417_cutset) {
	jule::Slice<jule::U8> _4359_bytes = _23bca314e_Stobs(&(_4349_s));;
	jule::Slice<jule::U8> _4365_bcutset = _23bca314e_Stobs(&(_43417_cutset));;
	_23d150e24_trimLeft(&(_4359_bytes), &(_4365_bcutset));
	_23d155610_trimRight(&(_4359_bytes), &(_4365_bcutset));
	return static_cast<jule::Str>(_4359_bytes);;
}



inline jule::Str _23d15617c_Join(jule::Slice<jule::Str> _4449_parts, jule::Str _44423_sep) {
	{
		auto _match_expr{ _4449_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1c7806a5d:;
			{
				return jule::Str();;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1c7806ad5:;
			{
				return _4449_parts[0LL];;
			}
		}
		_match_end_1c7806871:;
	};
	jule::I32 _4519_n = 0LL;;
	{
		auto expr = &(_4449_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7806d6b:;
		if (it != expr_end) {
			jule::Str *_45212_part = it;
			{
				_4519_n+=(*(_45212_part)).len();
				(_4519_n)++;
			}
			_iter_next_1c7806d6b:;
			++it;
			goto _iter_begin_1c7806d6b;
		}
		_iter_end_1c7806d6b:;
	};
	_23d16295d_StrBuilder _4569_s = static__23d162c7c_New(_4519_n);;
	_23d16b604_WriteStr(&_4569_s, _4449_parts[0LL]);
	{
		auto expr = _4449_parts.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c7807a3c:;
		if (it != expr_end) {
			jule::Str *_45812_part = it;
			{
				_23d16b604_WriteStr(&_4569_s, _44423_sep);
				_23d16b604_WriteStr(&_4569_s, (*(_45812_part)));
			}
			_iter_next_1c7807a3c:;
			++it;
			goto _iter_begin_1c7807a3c;
		}
		_iter_end_1c7807a3c:;
	};
	return _23d16bdeb_Str(&_4569_s);;
}



inline jule::Str _23d16e33d_Clean(jule::Str _10914_path) {
	jule::Str _1105_originalPath = _10914_path;;
	jule::I32 _1115_volLen = _23d172132_volumeNameLen(_10914_path);;
	(_10914_path).mut_slice(_1115_volLen);;
	if ((_10914_path).empty()) {
		if ((((_1115_volLen > 1LL) && _23d171a5a_IsPathSep(_1105_originalPath[0LL])) && _23d171a5a_IsPathSep(_1105_originalPath[1LL]))) {
			return _23d16e915_FromSlash(_1105_originalPath);;
		};
		return (_1105_originalPath + jule::Str::lit(".", 1));;
	};
	jule::Bool _1205_rooted = _23d171a5a_IsPathSep(_10914_path[0LL]);;
	jule::I32 _1275_n = _10914_path.len();;
	_23d16d4d5_lazyBuff _1289_out = _23d16d4d5_lazyBuff{._field_path=_23bca314e_Stobs(&(_10914_path)), ._field_volAndPath=_1105_originalPath, ._field_volLen=_1115_volLen};;
	jule::I32 _1339_r = 0;;
	jule::I32 _13316_dotdot = 0;;
	({
		jule::I32 ___jule_assign_arg = 0LL;
		jule::I32 _1___jule_assign_arg = 0LL;
		_1339_r = ___jule_assign_arg;
		_13316_dotdot = _1___jule_assign_arg;
	});
	if (_1205_rooted) {
		_23d16dbde_append(&_1289_out, 47LLU);
		({
			jule::I32 ___jule_assign_arg = 1LL;
			jule::I32 _1___jule_assign_arg = 1LL;
			_1339_r = ___jule_assign_arg;
			_13316_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_1339_r < _1275_n)) {
		{
			{
				
				if (_23d171a5a_IsPathSep(_10914_path[_1339_r])) {
					_case_begin_1c7818ce5:;
					{
						(_1339_r)++;
					}
				}
				else if (((_10914_path[_1339_r] == '.') && (((_1339_r + 1LL) == _1275_n) || _23d171a5a_IsPathSep(_10914_path[(_1339_r + 1LL)])))) {
					_case_begin_1c78159a1:;
					{
						(_1339_r)++;
					}
				}
				else if ((((_10914_path[_1339_r] == '.') && (_10914_path[(_1339_r + 1LL)] == '.')) && (((_1339_r + 2LL) == _1275_n) || _23d171a5a_IsPathSep(_10914_path[(_1339_r + 2LL)])))) {
					_case_begin_1c7815a17:;
					{
						_1339_r+=2LL;
						{
							
							if ((_1289_out._field_w > _13316_dotdot)) {
								_case_begin_1c781ba62:;
								{
									(_1289_out._field_w)--;
									while (((_1289_out._field_w > _13316_dotdot) && (!(_23d171a5a_IsPathSep(static_cast<jule::U8>(_23d16d936_index(&_1289_out, _1289_out._field_w))))))) {
										{
											(_1289_out._field_w)--;
										}
									_iter_next_1c781c5e0:;
									}
									_iter_end_1c781c5e0:;;
								}
							}
							else if ((!(_1205_rooted))) {
								_case_begin_1c781be08:;
								{
									if ((_1289_out._field_w > 0LL)) {
										_23d16dbde_append(&_1289_out, 47LLU);
									};
									_23d16dbde_append(&_1289_out, '.');
									_23d16dbde_append(&_1289_out, '.');
									_13316_dotdot=_1289_out._field_w;
								}
							}
							_match_end_1c781bd92:;
						};
					}
				}
				else {
					_case_begin_1c781593a:;
					{
						if (((_1205_rooted && (_1289_out._field_w != 1LL)) || ((!(_1205_rooted)) && (_1289_out._field_w != 0LL)))) {
							_23d16dbde_append(&_1289_out, 47LLU);
						};
						;
						for (; ((_1339_r < _1275_n) && (!(_23d171a5a_IsPathSep(_10914_path[_1339_r])))); (_1339_r)++) {
							{
								_23d16dbde_append(&_1289_out, _10914_path[_1339_r]);
							}
						_iter_next_1c78187d9:;
						}
						_iter_end_1c78187d9:;;
					}
				}
				_match_end_1c781560a:;
			};
		}
	_iter_next_1c7815055:;
	}
	_iter_end_1c7815055:;;
	if ((_1289_out._field_w == 0LL)) {
		_23d16dbde_append(&_1289_out, '.');
	};
	return _23d16e915_FromSlash(_23d16de75_string(&_1289_out));;
}



inline jule::Str _23d16e915_FromSlash(jule::Str _21214_path) {
	{
		return _21214_path;;
	};
}



inline jule::Str _23d16ec56_Join(jule::Slice<jule::Str> _2269_elem) {
	return _23d17273c_join(_2269_elem);;
}



inline jule::Str _23d170020_Ext(jule::Str _2318_path) {
	jule::I32 _2329_i = (_2318_path.len() - 1LL);;
	for (; ((_2329_i >= 0LL) && (!(_23d171a5a_IsPathSep(_2318_path[_2329_i])))); (_2329_i)--) {
		{
			if ((_2318_path[_2329_i] == '.')) {
				return _2318_path.slice(_2329_i);;
			};
		}
	_iter_next_1c78207ad:;
	}
	_iter_end_1c78207ad:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _23d1702d9_Abs(jule::Str _2468_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Str _2475_abs_path;;
	jule::Bool _24715_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _23d172473_abs(_2468_path);
		_2475_abs_path = __jule_assign_result.__jule_result_arg0;
		_24715_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _2475_abs_path;
	__jule_func_result.__jule_result_arg1 = _24715_ok;
	return __jule_func_result;;
}



inline jule::Str _23d1705a3_Base(jule::Str _25513_path) {
	if ((_25513_path).empty()) {
		return jule::Str::lit(".", 1);;
	};
	while (((_25513_path.len() > 0LL) && _23d171a5a_IsPathSep(_25513_path[(_25513_path.len() - 1LL)]))) {
		{
			(_25513_path).mut_slice(0LL, (_25513_path.len() - 1LL));;
		}
	_iter_next_1c7822e20:;
	}
	_iter_end_1c7822e20:;;
	(_25513_path).mut_slice(_23d170c13_VolumeName(_25513_path).len());;
	jule::I32 _2669_i = (_25513_path.len() - 1LL);;
	while (((_2669_i >= 0LL) && (!(_23d171a5a_IsPathSep(_25513_path[_2669_i]))))) {
		{
			(_2669_i)--;
		}
	_iter_next_1c782443d:;
	}
	_iter_end_1c782443d:;;
	if ((_2669_i >= 0LL)) {
		(_25513_path).mut_slice((_2669_i + 1LL));;
	};
	if ((_25513_path).empty()) {
		return jule::Str::lit("/", 1);;
	};
	return _25513_path;;
}



inline jule::Str _23d170949_Dir(jule::Str _2868_path) {
	jule::Str _2875_vol = _23d170c13_VolumeName(_2868_path);;
	jule::I32 _2889_i = (_2868_path.len() - 1LL);;
	while (((_2889_i >= _2875_vol.len()) && (!(_23d171a5a_IsPathSep(_2868_path[_2889_i]))))) {
		{
			(_2889_i)--;
		}
	_iter_next_1c782620e:;
	}
	_iter_end_1c782620e:;;
	jule::Str _2925_dir = _23d16e33d_Clean(_2868_path.slice(_2875_vol.len(), (_2889_i + 1LL)));;
	if ((_2925_dir.equal(".", 1) && (_2875_vol.len() > 2LL))) {
		return _2875_vol;;
	};
	return (_2875_vol + _2925_dir);;
}



inline jule::Str _23d170c13_VolumeName(jule::Str _30415_path) {
	return _23d16e915_FromSlash(_30415_path.slice(0LL, _23d172132_volumeNameLen(_30415_path)));;
}



inline jule::Bool _23d171a5a_IsPathSep(jule::U8 _4814_c) {
	return (47LL == _4814_c);;
}



inline jule::Bool _23d171d68_IsAbs(jule::Str _5310_path) {
	return _23d14ca9c_HasPrefix(_5310_path, jule::Str::lit("/", 1));;
}



inline jule::I32 _23d172132_volumeNameLen(jule::Str _5918_path) {
	return 0LL;;
}



inline __jule_tuple_str__jule_tuple_bool _23d172473_abs(jule::Str _638_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_23d171d68_IsAbs(_638_path)) {
		__jule_func_result.__jule_result_arg0 = _23d16e33d_Clean(_638_path);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Str _675_wd = ({
		auto except = _23bd7dc85_WorkingDir();
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = jule::Str();
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} jule::Str();});
	});;
	__jule_func_result.__jule_result_arg0 = _23d17273c_join(jule::Slice<jule::Str>::make({_675_wd,_638_path}));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _23d17273c_join(jule::Slice<jule::Str> _739_elem) {
	{
		auto expr = &(_739_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c782e58b:;
		if (it != expr_end) {
			jule::I32 _749_i = it - expr->begin();
			jule::Str *_7412_e = it;
			{
				if (!((*(_7412_e))).empty()) {
					return _23d16e33d_Clean(_23d15617c_Join(_739_elem.slice(_749_i), jule::Str::lit("/", 1)));;
				};
			}
			_iter_next_1c782e58b:;
			++it;
			_749_i++;
			goto _iter_begin_1c782e58b;
		}
		_iter_end_1c782e58b:;
	};
	return jule::Str();;
}



inline jule::I32 _23bc9a4dc_getLastFsError(void) {
	jule::I32 _725_err = _22e0817e2_GetLastErrno();;
	{
		auto &_match_expr{ _725_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1c783c863:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1c783c016:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1c783c214:;
			{
				return static_cast<jule::I32>(2LL);;
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1c783c27a:;
			{
				return static_cast<jule::I32>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1c783c2e1:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1c783c357:;
			{
				return static_cast<jule::I32>(5LL);;
			}
		}
		else if (_match_expr == 75LL) {
			_case_begin_1c783c995:;
			{
				return static_cast<jule::I32>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1c783ca0b:;
			{
				return static_cast<jule::I32>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1c783ca72:;
			{
				return static_cast<jule::I32>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1c783cad8:;
			{
				return static_cast<jule::I32>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1c783cb60:;
			{
				return static_cast<jule::I32>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1c783cbd7:;
			{
				return static_cast<jule::I32>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1c783cc5e:;
			{
				return static_cast<jule::I32>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1c783ccd6:;
			{
				return static_cast<jule::I32>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1c783cd5d:;
			{
				return static_cast<jule::I32>(14LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1c783cdd5:;
			{
				return static_cast<jule::I32>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1c783ce5c:;
			{
				return static_cast<jule::I32>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1c783ced4:;
			{
				return static_cast<jule::I32>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1c783d05b:;
			{
				return static_cast<jule::I32>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1c783d0d3:;
			{
				return static_cast<jule::I32>(19LL);;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1c783d15a:;
			{
				return static_cast<jule::I32>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1c783d1d2:;
			{
				return static_cast<jule::I32>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1c783d259:;
			{
				return static_cast<jule::I32>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1c783d2d1:;
			{
				return static_cast<jule::I32>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1c783d358:;
			{
				return static_cast<jule::I32>(24LL);;
			}
		}
		else if (_match_expr == 105LL) {
			_case_begin_1c783d3d0:;
			{
				return static_cast<jule::I32>(25LL);;
			}
		}
		else if (_match_expr == 74LL) {
			_case_begin_1c783d457:;
			{
				return static_cast<jule::I32>(26LL);;
			}
		}
		else if (_match_expr == 39LL) {
			_case_begin_1c783d4ce:;
			{
				return static_cast<jule::I32>(27LL);;
			}
		}
		else {
			_case_begin_1c783c19d:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		_match_end_1c783c148:;
	};
}



inline __jule_tuple_int__jule_tuple_bool _23d2c1b99_AtoiBp(jule::U8* _922_b, jule::I32 _936_n) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Bool _109_neg = ((*(_922_b)) == '-');;
	if (_109_neg) {
		if ((_936_n == 1LL)) {
			return __jule_func_result;;
		};
		(_936_n)--;
		(_922_b)++;
	};
	for (; (_936_n > 0LL); (_936_n)--) {
		{
			if ((('0' <= (*(_922_b))) && ((*(_922_b)) <= '9'))) {
				__jule_func_result.__jule_result_arg0*=10LL;
				__jule_func_result.__jule_result_arg0+=static_cast<jule::I32>(((*(_922_b)) - '0'));
			} else {
				return __jule_func_result;;
			};
			(_922_b)++;
		}
	_iter_next_1c78623e3:;
	}
	_iter_end_1c78623e3:;;
	__jule_func_result.__jule_result_arg1=true;
	if (_109_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::I32>((-(__jule_func_result.__jule_result_arg0)));
	};
	return __jule_func_result;;
}



inline jule::Str _23d31b573_Itoa(jule::I32 _69_x) {
	if ((_69_x < 0LL)) {
		return (jule::Str::lit("-", 1) + _23d31b881_Utoa(static_cast<jule::U32>(static_cast<jule::U32>((-(_69_x))))));;
	};
	return _23d31b881_Utoa(static_cast<jule::U32>(static_cast<jule::U32>(_69_x)));;
}



inline jule::Str _23d31b881_Utoa(jule::U32 _1413_x) {
	if ((_1413_x == 0LLU)) {
		return jule::Str::lit("0", 1);;
	};
	jule::Slice<jule::U8> _189_buf = jule::Slice<jule::U8>::alloc(20LL, 20LL, 0);;
	jule::I32 _199_i = (_189_buf.len() - 1LL);;
	while ((_1413_x >= 10LLU)) {
		{
			jule::U32 _219_q = (_1413_x / 10LLU);;
			_189_buf[_199_i]=static_cast<jule::U8>(static_cast<jule::U8>((('0' + _1413_x) - (_219_q * 10LLU))));
			(_199_i)--;
			_1413_x=_219_q;
		}
	_iter_next_1c78690a9:;
	}
	_iter_end_1c78690a9:;;
	_189_buf[_199_i]=static_cast<jule::U8>(static_cast<jule::U8>(('0' + _1413_x)));
	(_189_buf).mut_slice(_199_i);;
	return static_cast<jule::Str>(_189_buf);;
}



inline jule::Slice<char*> _23d31edd4_strSliceToCstrSlice(jule::Slice<jule::Str>* _3525_s) {
	jule::Slice<char*> _369_cs = jule::Slice<char*>::alloc(((*(_3525_s)).len() + 1LL), ((*(_3525_s)).len() + 1LL), nullptr);;
	{
		auto expr = _3525_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7885d95:;
		if (it != expr_end) {
			jule::I32 _379_i = it - expr->begin();
			{
				_369_cs[_379_i]=((char*)((&((*(_3525_s))[_379_i][0LL]))));
			}
			_iter_next_1c7885d95:;
			++it;
			_379_i++;
			goto _iter_begin_1c7885d95;
		}
		_iter_end_1c7885d95:;
	};
	_369_cs[(_369_cs.len() - 1LL)]=nullptr;
	return _369_cs;;
}



inline jule::I32 _23d320258_execvp(jule::Str* _4412_file, jule::Slice<jule::Str>* _4424_argv) {
	jule::Slice<char*> _455_cargv = _23d31edd4_strSliceToCstrSlice(_4424_argv);;
	{
		return static_cast<jule::I32>(execvp(((char*)((&((*(_4412_file))[0LL])))), (char*const*)(&(_455_cargv[0LL]))));;
	};
}



inline jule::VoidExceptional _23d320489_setenv(jule::Slice<jule::Str>* _5112_envv) {
	;
	{
		auto expr = _5112_envv;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7888969:;
		if (it != expr_end) {
			jule::Str *_5312_env = it;
			{
				jule::I32 _549_i = _23d14b9be_FindByteStr(_5312_env, '=');;
				if ((_549_i == -1LL)) {
					return jule::VoidExceptional(jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0));
				};
				{
					jule::Str _5913_key = (*(_5312_env)).slice(0LL, _549_i);;
					if ((((*(_5312_env)).len() - _549_i) == 1LL)) {
						jule::Str _6117_val = jule::Str::lit("\x00", 1);;
						if ((setenv(((char*)((&(_5913_key[0LL])))), ((char*)((&(_6117_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional(jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0));
						};
					} else {
						jule::Str _6617_val = (*(_5312_env)).slice((_549_i + 1LL));;
						if ((setenv(((char*)((&(_5913_key[0LL])))), ((char*)((&(_6617_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional(jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0));
						};
					};
				};
			}
			_iter_next_1c7888969:;
			++it;
			goto _iter_begin_1c7888969;
		}
		_iter_end_1c7888969:;
	};
	return jule::VoidExceptional();
}



inline jule::I32 _23d321413_processErrorFromCode(jule::I32 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 13LL) {
			_case_begin_1c788cd14:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1c7888c66:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else {
			_case_begin_1c7889c78:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		_match_end_1c788ca4a:;
	};
}



inline jule::I32 _23d321666_getLastProcessError(void) {
	return _23d321413_processErrorFromCode(static_cast<jule::I32>(_22e0817e2_GetLastErrno()));;
}



inline void _23d321e80_Exit(jule::I32 _129_code) {
	_23bc9576d_Exit(_129_code);
}



inline jule::Str _23d32218e_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _23d203ee9_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _23d2042a2_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_23d202b30_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c78b505b:;
		if (it != expr_end) {
			jule::Str *_3212_validExt = it;
			{
				if ((_3121_ext == (*(_3212_validExt)))) {
					return true;;
				};
			}
			_iter_next_1c78b505b:;
			++it;
			goto _iter_begin_1c78b505b;
		}
		_iter_end_1c78b505b:;
	};
	return false;;
}



inline jule::Bool _23d20456b_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_23d20225b_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c78b65ac:;
		if (it != expr_end) {
			jule::Str *_4512_e = it;
			{
				if ((_4118_ext == (*(_4512_e)))) {
					return true;;
				};
			}
			_iter_next_1c78b65ac:;
			++it;
			goto _iter_begin_1c78b65ac;
		}
		_iter_end_1c78b65ac:;
	};
	{
		auto expr = &(_23d203dea_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c78b64e1:;
		if (it != expr_end) {
			jule::Str *_5012_e = it;
			{
				if ((_4118_ext == (*(_5012_e)))) {
					return true;;
				};
			}
			_iter_next_1c78b64e1:;
			++it;
			goto _iter_begin_1c78b64e1;
		}
		_iter_end_1c78b64e1:;
	};
	return false;;
}



inline jule::Str _23d2115bc_Logf(jule::Str _3159_fmt, jule::Slice<jule::Any> _31522_args) {
	return _23d21205c_applyFmt(_3159_fmt, _31522_args);;
}



inline jule::Str _23d2118ca_argToStr(jule::Any _31913_arg) {
	{
		auto &_match_expr{ _31913_arg };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1c78b6c50:;
			{
				return _31913_arg.cast<jule::Str>(&__jule_any_type4);;
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1c78b86e1:;
			{
				return jule::Str::from_byte(_31913_arg.cast<jule::U8>(&__jule_any_type130));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1c78b8757:;
			{
				return jule::Str::from_rune(_31913_arg.cast<jule::I32>(&__jule_any_type6));;
			}
		}
		else {
			_case_begin_1c78b8119:;
			{
				return jule::Str::lit("<fmt?>", 6);;
			}
		}
		_match_end_1c78b80b4:;
	};
}



inline jule::I32 _23d211b94_findNextFmt(jule::Str _33216_fmt) {
	{
		auto expr = &(_33216_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c78b94c2:;
		if (it != expr_end) {
			jule::I32 _3339_i = it - expr->begin();
			jule::U8 *_33312_b = it;
			{
				if (((*(_33312_b)) == '@')) {
					return _3339_i;;
				};
			}
			_iter_next_1c78b94c2:;
			++it;
			_3339_i++;
			goto _iter_begin_1c78b94c2;
		}
		_iter_end_1c78b94c2:;
	};
	return -1LL;;
}



inline jule::Str _23d21205c_applyFmt(jule::Str _34117_fmt, jule::Slice<jule::Any> _34127_args) {
	_23d16295d_StrBuilder _3429_s = static__23d162c7c_New(32LL);;
	{
		auto expr = &(_34127_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c78b9e1d:;
		if (it != expr_end) {
			jule::Any *_34312_arg = it;
			{
				jule::I32 _3449_i = _23d211b94_findNextFmt(_34117_fmt);;
				if ((_3449_i == -1LL)) {
					goto _iter_end_1c78b9e1d;
				};
				_23d16b604_WriteStr(&_3429_s, _34117_fmt.slice(0LL, _3449_i));
				_23d16b604_WriteStr(&_3429_s, _23d2118ca_argToStr((*(_34312_arg))));
				(_34117_fmt).mut_slice((_3449_i + 1LL));;
			}
			_iter_next_1c78b9e1d:;
			++it;
			goto _iter_begin_1c78b9e1d;
		}
		_iter_end_1c78b9e1d:;
	};
	_23d16b604_WriteStr(&_3429_s, _34117_fmt);
	return _23d16bdeb_Str(&_3429_s);;
}



inline jule::Bool _23d212dc6_IsTopDirective(jule::Str _2219_directive) {
	return (_2219_directive.equal("pass", 4) || _2219_directive.equal("build", 5));;
}



inline jule::Bool _23d214328_IsWindows(jule::Str _3714_os) {
	return _3714_os.equal("windows", 7);;
}



inline jule::Bool _23d214603_IsDarwin(jule::Str _4013_os) {
	return _4013_os.equal("darwin", 6);;
}



inline jule::Bool _23d2148bc_IsLinux(jule::Str _4312_os) {
	return _4312_os.equal("linux", 5);;
}



inline jule::Bool _23d214c0d_IsI386(jule::Str _4611_arch) {
	return _4611_arch.equal("i386", 4);;
}



inline jule::Bool _23d214ec7_IsAmd64(jule::Str _4912_arch) {
	return _4912_arch.equal("amd64", 5);;
}



inline jule::Bool _23d215291_IsArm64(jule::Str _5212_arch) {
	return _5212_arch.equal("arm64", 5);;
}



inline jule::Bool _23d21555a_IsUnix(jule::Str _5511_os) {
	return (_23d214603_IsDarwin(_5511_os) || _23d2148bc_IsLinux(_5511_os));;
}



inline jule::Bool _23d215901_Is32Bit(jule::Str _5812_arch) {
	return _23d214c0d_IsI386(_5812_arch);;
}



inline jule::Bool _23d215bba_Is64Bit(jule::Str _6112_arch) {
	return (_23d214ec7_IsAmd64(_6112_arch) || _23d215291_IsArm64(_6112_arch));;
}



inline void _23d32346a_init(void) {
	jule::Str _259_path = _23d32218e_Executable();;
	if ((_259_path).empty()) {
		jule::panic(jule::Str::lit("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_23d322997_PathWd=({
			auto except = _23bd7dc85_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str::lit("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_23d3226de_PathExec=_23d170949_Dir(_259_path);
		_23d32248b_PathStdlib=_23d16ec56_Join(jule::Slice<jule::Str>::make({_23d3226de_PathExec,jule::Str::lit("..", 2),jule::Str::lit("std", 3)}));
		_23d322ca5_PathApi=_23d16ec56_Join(jule::Slice<jule::Str>::make({_23d3226de_PathExec,jule::Str::lit("..", 2),jule::Str::lit("api", 3),jule::Str::lit("jule.hpp", 8)}));
	};
}



inline jule::I32 _1ec613bdb_LeadingZeros64(jule::U64 _6119_x) {
	return static_cast<jule::I32>((64LL - _1ec61b5d9_Len64(_6119_x)));;
}



inline jule::I32 _1ec614b43_TrailingZeros(jule::U32 _8318_x) {
	;
	return static_cast<jule::I32>(_1ec615869_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8318_x))));;
}



inline jule::I32 _1ec6155a0_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I32>(static_cast<jule::I32>(_1ec614307__DE_BRUIJN32_TAB[static_cast<jule::I32>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]));;
}



inline jule::I32 _1ec615869_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I32>(static_cast<jule::I32>(_1ec6148bd__DE_BRUIJN64_TAB[static_cast<jule::I32>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]));;
}



inline jule::I32 _1ec61b320_Len32(jule::U32 _35214_x) {
	jule::I32 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I32>((__jule_func_result + static_cast<jule::I32>(jule::Str::lit("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I32>(_35214_x)])));
	return __jule_func_result;;
}



inline jule::I32 _1ec61b5d9_Len64(jule::U64 _36614_x) {
	jule::I32 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I32>((__jule_func_result + static_cast<jule::I32>(jule::Str::lit("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I32>(_36614_x)])));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1ec61c376_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>(((_41510_x + _41518_y) + _41526_carry));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1ec61db80_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5015_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5025_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5035_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5045_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5055_w0 = (_5015_x0 * _5035_y0);;
	jule::U64 _5065_t = ((_5025_x1 * _5035_y0) + (_5055_w0 >> 32LLU));;
	jule::U64 _5079_w1 = (_5065_t & 4294967295LLU);;
	jule::U64 _5085_w2 = (_5065_t >> 32LLU);;
	_5079_w1+=(_5015_x0 * _5045_y1);
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>((((_5025_x1 * _5045_y1) + _5085_w2) + (_5079_w1 >> 32LLU)));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((_49910_x * _49918_y));
	return __jule_func_result;;
}



inline jule::U32 _1ec51dd8d_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _1ec51e19b_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _1ec51e465_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _1ec51e7a6_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _1ec521d5d_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1c905c3d3:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1ec62688b_IsInf(_4714_f, 0LL) || _1ec626281_IsNaN(_4714_f)) {
			_case_begin_1c905c45a:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1c905c306:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1ec626b55_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _569_x = _1ec51e465_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I32>(((_569_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_569_x=static_cast<jule::U64>((_569_x & 9227875636482146303LLU));
	_569_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1ec51e7a6_F64FromBits(_569_x));
	return __jule_func_result;;
}



inline jule::F64 _1ec625e73_NaN(void) {
	return static_cast<jule::F64>(_1ec51e7a6_F64FromBits(9221120237041090561LLU));;
}



inline jule::Bool _1ec626281_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);;
}



inline jule::F64 _1ec62654a_Inf(jule::I32 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return static_cast<jule::F64>(_1ec51e7a6_F64FromBits(9218868437227405312LLU));;
	};
	return static_cast<jule::F64>(_1ec51e7a6_F64FromBits(18442240474082181120LLU));;
}



inline jule::Bool _1ec62688b_IsInf(jule::F64 _7210_f, jule::I32 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1ec626b55_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1ec62900e_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((_8214_x * 4503599627370496LLU));
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1ec628629_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1ec626281_IsNaN(_1118_x) || _1ec62688b_IsInf(_1118_x, 1LL)) {
			_case_begin_1c9098ad4:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1c9098b5b:;
			{
				return static_cast<jule::F64>(_1ec625e73_NaN());;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1c9098bd3:;
			{
				return static_cast<jule::F64>(_1ec62654a_Inf(-1LL));;
			}
		}
		_match_end_1c9098a18:;
	};
	jule::F64 _1339_f1 = 0;;
	jule::I32 _13317_ki = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1ec521d5d_Frexp(_1118_x);
		_1339_f1 = __jule_assign_result.__jule_result_arg0;
		_13317_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1339_f1 < 0.7071067811865476)) {
		_1339_f1*=2LL;
		(_13317_ki)--;
	};
	jule::F64 _1385_f = (_1339_f1 - 1LL);;
	jule::F64 _1395_k = static_cast<jule::F64>(_13317_ki);;
	jule::F64 _1425_s = jule::div(_1385_f,(2LL + _1385_f));;
	jule::F64 _1435_s2 = (_1425_s * _1425_s);;
	jule::F64 _1445_s4 = (_1435_s2 * _1435_s2);;
	jule::F64 _1455_t1 = (_1435_s2 * (0.6666666666666735 + (_1445_s4 * (0.2857142874366239 + (_1445_s4 * (0.1818357216161805 + (_1445_s4 * 0.14798198605116586)))))));;
	jule::F64 _1465_t2 = (_1445_s4 * (0.3999999999940942 + (_1445_s4 * (0.22222198432149784 + (_1445_s4 * 0.15313837699209373)))));;
	jule::F64 _1475_R = (_1455_t1 + _1465_t2);;
	jule::F64 _1485_hfsq = ((0.5 * _1385_f) * _1385_f);;
	return static_cast<jule::F64>(((_1395_k * 0.6931471803691238) - ((_1485_hfsq - ((_1425_s * (_1485_hfsq + _1475_R)) + (_1395_k * 0.00000000019082149292705877))) - _1385_f)));;
}



inline jule::F64 _1ec62900e_Abs(jule::F64 _438_x) {
	return static_cast<jule::F64>(_1ec51e7a6_F64FromBits(static_cast<jule::U64>((_1ec51e465_F64Bits(_438_x) & 9223372036854775807LLU))));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1ec630c08_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _465_absF = _1ec62900e_Abs(_449_f);;
	jule::F64 _479_i = 0LL;;
	if ((_465_absF > 4503599627370496LL)) {
		_479_i=_449_f;
	} else {
		_479_i=static_cast<jule::F64>((_465_absF + 4503599627370496LL));
		_479_i-=4503599627370496LL;
		while ((_479_i > _465_absF)) {
			{
				(_479_i)--;
			}
		_iter_next_1c910d1ba:;
		}
		_iter_end_1c910d1ba:;;
		if ((_449_f < 0LL)) {
			_479_i=static_cast<jule::F64>((-(_479_i)));
		};
	};
	__jule_func_result.__jule_result_arg0 = _479_i;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::F64>((_449_f - _479_i));
	return __jule_func_result;;
}



inline jule::F64 _1ec631511_Log2(jule::F64 _449_x) {
	jule::F64 _455_frac = 0;;
	jule::I32 _4511_exp = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1ec521d5d_Frexp(_449_x);
		_455_frac = __jule_assign_result.__jule_result_arg0;
		_4511_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_455_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4511_exp - 1LL)));;
	};
	return static_cast<jule::F64>(((_1ec628629_Log(_455_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4511_exp)));;
}



inline jule::Str _1ec65aa79_FmtFloat(jule::F64 _7813_f, jule::U8 _7821_fmt, jule::I32 _7832_prec, jule::I32 _7843_bit_size) {
	return static_cast<jule::Str>(_1ec65b162_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _1ec65e594_max(static_cast<jule::I32>((_7832_prec + 4LL)), 24LL), 0), _7813_f, _7821_fmt, _7832_prec, _7843_bit_size));;
}



inline jule::Slice<jule::U8> _1ec65b162_genericFtoa(jule::Slice<jule::U8> _8220_dst, jule::F64 _8233_val, jule::U8 _8243_fmt, jule::I32 _8258_prec, jule::I32 _8269_bit_size) {
	jule::U64 _839_bits = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1ec65998a_floatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8269_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1c92ee257:;
			{
				_839_bits=static_cast<jule::U64>(static_cast<jule::U64>(_1ec51dd8d_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8233_val)))));
				_8413_flt=((jule::Ptr<_1ec65998a_floatInfo>)((&(_1ec659c98_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1c92ede9e:;
			{
				_839_bits=static_cast<jule::U64>(_1ec51e465_F64Bits(_8233_val));
				_8413_flt=((jule::Ptr<_1ec65998a_floatInfo>)((&(_1ec65a051_f64info))));
			}
		}
		else {
			_case_begin_1c92edac5:;
			{
				jule::panic(jule::Str::lit("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1c92eda70:;
	};
	jule::Bool _965_neg = ((_839_bits >> ((*(_8413_flt))._field_expbits + (*(_8413_flt))._field_mantbits)) != 0LLU);;
	jule::I32 _979_exp = (static_cast<jule::I32>((_839_bits >> (*(_8413_flt))._field_mantbits)) & static_cast<jule::I32>(((1LL << (*(_8413_flt))._field_expbits) - 1LL)));;
	jule::U64 _989_mant = (_839_bits & ((static_cast<jule::U64>(1LLU) << (*(_8413_flt))._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _979_exp };
		
		if (_match_expr == static_cast<jule::I32>(static_cast<jule::I32>(((1LL << (*(_8413_flt))._field_expbits) - 1LL)))) {
			_case_begin_1c9302b2e:;
			{
				{
					
					if ((_989_mant != 0LLU)) {
						_case_begin_1c9304b75:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'n','a','n'}));;
						}
					}
					else if (_965_neg) {
						_case_begin_1c9303beb:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));;
						}
					}
					else {
						_case_begin_1c9303b85:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));;
						}
					}
					_match_end_1c9303ab9:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1c9302c1c:;
			{
				(_979_exp)++;
			}
		}
		else {
			_case_begin_1c92ee015:;
			{
				_989_mant|=(static_cast<jule::U64>(1LLU) << (*(_8413_flt))._field_mantbits);
			}
		}
		_match_end_1c9302645:;
	};
	_979_exp+=(*(_8413_flt))._field_bias;
	if ((_8243_fmt == 'b')) {
		return _1ec65d692_fmtB(_8220_dst, _965_neg, _989_mant, _979_exp, &((*(_8413_flt))));;
	};
	if (((_8243_fmt == 'x') || (_8243_fmt == 'X'))) {
		return _1ec65dd9b_fmtX(_8220_dst, _8258_prec, _8243_fmt, _965_neg, _989_mant, _979_exp, &((*(_8413_flt))));;
	};
	;
	_1ec65a4e6_decimalSlice _1329_digs = _1ec65a4e6_decimalSlice{};;
	jule::Bool _1339_ok = false;;
	jule::Bool _1355_shortest = (_8258_prec < 0LL);;
	if (_1355_shortest) {
		_1329_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_1ec66946c_ryuFtoaShortest(&(_1329_digs), _989_mant, static_cast<jule::I32>((_979_exp - static_cast<jule::I32>((*(_8413_flt))._field_mantbits))), &((*(_8413_flt))));
		_1339_ok=true;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c9307d65:;
				{
					_8258_prec=static_cast<jule::I32>(_1ec65e594_max(static_cast<jule::I32>((_1329_digs._field_nd - 1LL)), 0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1c9307dcb:;
				{
					_8258_prec=static_cast<jule::I32>(_1ec65e594_max(static_cast<jule::I32>((_1329_digs._field_nd - _1329_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c9307e42:;
				{
					_8258_prec=_1329_digs._field_nd;
				}
			}
			_match_end_1c9306e0d:;
		};
	} else if ((_8243_fmt != 'f')) {
		jule::I32 _15213_digits = _8258_prec;;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c9309e22:;
				{
					(_15213_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c930974b:;
				{
					if ((_8258_prec == 0LL)) {
						_8258_prec=1LL;
					};
					_15213_digits=_8258_prec;
				}
			}
			else {
				_case_begin_1c9309a7b:;
				{
					_15213_digits=1LL;
				}
			}
			_match_end_1c930984a:;
		};
		if (((_8269_bit_size == 32LL) && (_15213_digits <= 9LL))) {
			_1329_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1ec6681a2_ryuFtoaFixed32(&(_1329_digs), static_cast<jule::U32>(static_cast<jule::U32>(_989_mant)), static_cast<jule::I32>((_979_exp - static_cast<jule::I32>((*(_8413_flt))._field_mantbits))), _15213_digits);
			_1339_ok=true;
		} else if ((_15213_digits <= 18LL)) {
			_1329_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1ec668647_ryuFtoaFixed64(&(_1329_digs), _989_mant, static_cast<jule::I32>((_979_exp - static_cast<jule::I32>((*(_8413_flt))._field_mantbits))), _15213_digits);
			_1339_ok=true;
		};
	};
	if ((!(_1339_ok))) {
		return _1ec65b86b_bigFtoa(_8220_dst, _8258_prec, _8243_fmt, _965_neg, _989_mant, _979_exp, &((*(_8413_flt))));;
	};
	return _1ec65c042_fmtDigits(_8220_dst, _1355_shortest, _965_neg, _1329_digs, _8258_prec, _8243_fmt);;
}



inline jule::Slice<jule::U8> _1ec65b86b_bigFtoa(jule::Slice<jule::U8> _18216_dst, jule::I32 _18233_prec, jule::U8 _18244_fmt, jule::Bool _18255_neg, jule::U64 _1835_mant, jule::I32 _18316_exp, _1ec65998a_floatInfo* _18327_flt) {
	_1ec66d284_decimal _1849_d = _1ec66d284_decimal{};;
	_1ec66d63b_assign(&_1849_d, _1835_mant);
	_1ec66d8e4_shift(&_1849_d, static_cast<jule::I32>((_18316_exp - static_cast<jule::I32>((*(_18327_flt))._field_mantbits))));
	_1ec65a4e6_decimalSlice _1879_digs = _1ec65a4e6_decimalSlice{};;
	jule::Bool _1885_shortest = (_18233_prec < 0LL);;
	if (_1885_shortest) {
		_1ec65c493_roundShortest(&(_1849_d), _1835_mant, _18316_exp, _18327_flt);
		_1879_digs=_1ec65a4e6_decimalSlice{._field_d=_1849_d._field_d.slice(0LL), ._field_nd=_1849_d._field_nd, ._field_dp=_1849_d._field_dp, };
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c931093e:;
				{
					_18233_prec=static_cast<jule::I32>((_1879_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1c9311720:;
				{
					_18233_prec=static_cast<jule::I32>(_1ec65e594_max(static_cast<jule::I32>((_1879_digs._field_nd - _1879_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c9311786:;
				{
					_18233_prec=_1879_digs._field_nd;
				}
			}
			_match_end_1c93115bb:;
		};
	} else {
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c9312d92:;
				{
					_1ec66e20d_round(&_1849_d, static_cast<jule::I32>((_18233_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1c9312e19:;
				{
					_1ec66e20d_round(&_1849_d, static_cast<jule::I32>((_1849_d._field_dp + _18233_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c9312e91:;
				{
					if ((_18233_prec == 0LL)) {
						_18233_prec=1LL;
					};
					_1ec66e20d_round(&_1849_d, _18233_prec);
				}
			}
			_match_end_1c9312ce8:;
		};
		_1879_digs=_1ec65a4e6_decimalSlice{._field_d=_1849_d._field_d.slice(0LL), ._field_nd=_1849_d._field_nd, ._field_dp=_1849_d._field_dp, };
	};
	return _1ec65c042_fmtDigits(_18216_dst, _1885_shortest, _18255_neg, _1879_digs, _18233_prec, _18244_fmt);;
}



inline jule::Slice<jule::U8> _1ec65c042_fmtDigits(jule::Slice<jule::U8> _21918_dst, jule::Bool _21931_shortest, jule::Bool _21947_neg, _1ec65a4e6_decimalSlice _2205_digs, jule::I32 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1c931625d:;
			{
				return _1ec65ca37_fmtE(_21918_dst, _21947_neg, _2205_digs, _22029_prec, _22040_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1c93162c4:;
			{
				return _1ec65d021_fmtF(_21918_dst, _21947_neg, _2205_digs, _22029_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1c931633a:;
			{
				jule::I32 _22813_eprec = _22029_prec;;
				if (((_22813_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22813_eprec=_2205_digs._field_nd;
				};
				if (_21931_shortest) {
					_22813_eprec=6LL;
				};
				jule::I32 _2389_exp = (_2205_digs._field_dp - 1LL);;
				if (((_2389_exp < -4LL) || (_2389_exp >= _22813_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _1ec65ca37_fmtE(_21918_dst, _21947_neg, _2205_digs, static_cast<jule::I32>((_22029_prec - 1LL)), static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));;
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _1ec65d021_fmtF(_21918_dst, _21947_neg, _2205_digs, static_cast<jule::I32>(_1ec65e594_max(static_cast<jule::I32>((_22029_prec - _2205_digs._field_dp)), 0LL)));;
			}
		}
		_match_end_1c9316170:;
	};
	return jule::append(_21918_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));;
}



inline void _1ec65c493_roundShortest(_1ec66d284_decimal* _25723_d, jule::U64 _25735_mant, jule::I32 _25746_exp, _1ec65998a_floatInfo* _25757_flt) {
	if ((_25735_mant == 0LLU)) {
		(*(_25723_d))._field_nd=0LL;
		return;;
	};
	jule::I32 _2785_minexp = ((*(_25757_flt))._field_bias + 1LL);;
	if (((_25746_exp > _2785_minexp) && ((332LL * ((*(_25723_d))._field_dp - (*(_25723_d))._field_nd)) >= (100LL * (_25746_exp - static_cast<jule::I32>((*(_25757_flt))._field_mantbits)))))) {
		return;;
	};
	_1ec66d284_decimal _2879_upper = _1ec66d284_decimal{};;
	_1ec66d63b_assign(&_2879_upper, static_cast<jule::U64>(((_25735_mant << 1LLU) + 1LLU)));
	_1ec66d8e4_shift(&_2879_upper, static_cast<jule::I32>(((_25746_exp - static_cast<jule::I32>((*(_25757_flt))._field_mantbits)) - 1LL)));
	jule::U64 _2979_mantlo = static_cast<jule::U64>(0LLU);;
	jule::I32 _2989_explo = 0LL;;
	if (((_25735_mant > (1LLU << (*(_25757_flt))._field_mantbits)) || (_25746_exp == _2785_minexp))) {
		_2979_mantlo=static_cast<jule::U64>((_25735_mant - 1LLU));
		_2989_explo=_25746_exp;
	} else {
		_2979_mantlo=static_cast<jule::U64>(((_25735_mant << 1LLU) - 1LLU));
		_2989_explo=static_cast<jule::I32>((_25746_exp - 1LL));
	};
	_1ec66d284_decimal _3069_lower = _1ec66d284_decimal{};;
	_1ec66d63b_assign(&_3069_lower, static_cast<jule::U64>(((_2979_mantlo << 1LLU) + 1LLU)));
	_1ec66d8e4_shift(&_3069_lower, static_cast<jule::I32>(((_2989_explo - static_cast<jule::I32>((*(_25757_flt))._field_mantbits)) - 1LL)));
	jule::Bool _3135_inclusive = ((_25735_mant & 1LL) == 0LLU);;
	jule::U8 _3269_upperdelta = static_cast<jule::U8>(0LLU);;
	jule::I32 _3309_ui = 0LL;;
	for (; ; (_3309_ui)++) {
		{
			jule::I32 _3359_mi = ((_3309_ui - _2879_upper._field_dp) + (*(_25723_d))._field_dp);;
			if ((_3359_mi >= (*(_25723_d))._field_nd)) {
				goto _iter_end_1c9321e7d;
			};
			jule::I32 _3399_li = ((_3309_ui - _2879_upper._field_dp) + _3069_lower._field_dp);;
			jule::U8 _34013_l = static_cast<jule::U8>(48LLU);;
			if (((_3399_li >= 0LL) && (_3399_li < _3069_lower._field_nd))) {
				_34013_l=_3069_lower._field_d[_3399_li];
			};
			jule::U8 _34413_m = static_cast<jule::U8>(48LLU);;
			if ((_3359_mi >= 0LL)) {
				_34413_m=(*(_25723_d))._field_d[_3359_mi];
			};
			jule::U8 _34813_u = static_cast<jule::U8>(48LLU);;
			if ((_3309_ui < _2879_upper._field_nd)) {
				_34813_u=_2879_upper._field_d[_3309_ui];
			};
			jule::Bool _3569_okdown = ((_34013_l != _34413_m) || (_3135_inclusive && ((_3399_li + 1LL) == _3069_lower._field_nd)));;
			{
				
				if (((_3269_upperdelta == 0LLU) && ((_34413_m + 1LLU) < _34813_u))) {
					_case_begin_1c9326108:;
					{
						_3269_upperdelta=2LLU;
					}
				}
				else if (((_3269_upperdelta == 0LLU) && (_34413_m != _34813_u))) {
					_case_begin_1c9326180:;
					{
						_3269_upperdelta=1LLU;
					}
				}
				else if (((_3269_upperdelta == 1LLU) && ((_34413_m != '9') || (_34813_u != '0')))) {
					_case_begin_1c9326207:;
					{
						_3269_upperdelta=2LLU;
					}
				}
				_match_end_1c932603c:;
			};
			jule::Bool _3779_okup = ((_3269_upperdelta > 0LLU) && ((_3135_inclusive || (_3269_upperdelta > 1LLU)) || ((_3309_ui + 1LL) < _2879_upper._field_nd)));;
			{
				
				if ((_3569_okdown && _3779_okup)) {
					_case_begin_1c9328a67:;
					{
						_1ec66e20d_round(_25723_d, static_cast<jule::I32>((_3359_mi + 1LL)));
						return;;
					}
				}
				else if (_3569_okdown) {
					_case_begin_1c9328ade:;
					{
						_1ec66db9c_roundDown(_25723_d, static_cast<jule::I32>((_3359_mi + 1LL)));
						return;;
					}
				}
				else if (_3779_okup) {
					_case_begin_1c9328b66:;
					{
						_1ec66de55_roundUp(_25723_d, static_cast<jule::I32>((_3359_mi + 1LL)));
						return;;
					}
				}
				_match_end_1c9328a01:;
			};
		}
	_iter_next_1c9321e7d:;
	}
	_iter_end_1c9321e7d:;;
}



inline jule::Slice<jule::U8> _1ec65ca37_fmtE(jule::Slice<jule::U8> _39613_dst, jule::Bool _39626_neg, _1ec65a4e6_decimalSlice _39637_d, jule::I32 _39654_prec, jule::U8 _39665_fmt) {
	if (_39626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _4039_ch = '0';;
	if ((_39637_d._field_nd != 0LL)) {
		_4039_ch=_39637_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push(_4039_ch); };
	if ((_39654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push('.'); };
		jule::I32 _41213_i = 1LL;;
		jule::I32 _4139_m = _1ec65e220_min(_39637_d._field_nd, static_cast<jule::I32>((_39654_prec + 1LL)));;
		if ((_41213_i < _4139_m)) {
			(_39613_dst).append(_39637_d._field_d.slice(_41213_i, _4139_m));;
			_41213_i=_4139_m;
		};
		for (; (_41213_i <= _39654_prec); (_41213_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1c932bdde:;
		}
		_iter_end_1c932bdde:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push(_39665_fmt); };
	jule::I32 _4259_exp = (_39637_d._field_dp - 1LL);;
	if ((_39637_d._field_nd == 0LL)) {
		_4259_exp=0LL;
	};
	if ((_4259_exp < 0LL)) {
		_4039_ch='-';
		_4259_exp=static_cast<jule::I32>((-(_4259_exp)));
	} else {
		_4039_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push(_4039_ch); };
	{
		
		if ((_4259_exp < 10LL)) {
			_case_begin_1c9330596:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(_4259_exp) + '0'))); };
			}
		}
		else if ((_4259_exp < 100LL)) {
			_case_begin_1c9330046:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_4259_exp / 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_4259_exp % 10LL)) + '0'))); };
			}
		}
		else {
			_case_begin_1c932eae5:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_4259_exp / 100LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_4259_exp / 10LL)) % 10LL) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_4259_exp % 10LL)) + '0'))); };
			}
		}
		_match_end_1c932e364:;
	};
	return _39613_dst;;
}



inline jule::Slice<jule::U8> _1ec65d021_fmtF(jule::Slice<jule::U8> _45113_dst, jule::Bool _45126_neg, _1ec65a4e6_decimalSlice _45137_d, jule::I32 _45154_prec) {
	if (_45126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('-'); };
	};
	if ((_45137_d._field_dp > 0LL)) {
		jule::I32 _45913_m = _1ec65e220_min(_45137_d._field_nd, _45137_d._field_dp);;
		(_45113_dst).append(_45137_d._field_d.slice(0LL, _45913_m));;
		for (; (_45913_m < _45137_d._field_dp); (_45913_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1c9333c09:;
		}
		_iter_end_1c9333c09:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('0'); };
	};
	if ((_45154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('.'); };
		jule::I32 _47013_i = 0LL;;
		for (; (_47013_i < _45154_prec); (_47013_i)++) {
			{
				jule::U8 _47217_ch = static_cast<jule::U8>(48LLU);;
				jule::I32 _47313_j = (_45137_d._field_dp + _47013_i);;
				if (((0LL <= _47313_j) && (_47313_j < _45137_d._field_nd))) {
					_47217_ch=_45137_d._field_d[_47313_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push(_47217_ch); };
			}
		_iter_next_1c93350c3:;
		}
		_iter_end_1c93350c3:;;
	};
	return _45113_dst;;
}



inline jule::Slice<jule::U8> _1ec65d692_fmtB(jule::Slice<jule::U8> _48413_dst, jule::Bool _48426_neg, jule::U64 _48437_mant, jule::I32 _48452_exp, _1ec65998a_floatInfo* _48463_flt) {
	if (_48426_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48413_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1ec673465_fmtBits(_48413_dst, _48437_mant, 10LL, false, true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48413_dst; __jule_push_dest.push('p'); };
	_48452_exp-=static_cast<jule::I32>((*(_48463_flt))._field_mantbits);
	if ((_48452_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48413_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1ec673465_fmtBits(_48413_dst, static_cast<jule::U64>(static_cast<jule::U64>(_48452_exp)), 10LL, (_48452_exp < 0LL), true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48413_dst;;
}



inline jule::Slice<jule::U8> _1ec65dd9b_fmtX(jule::Slice<jule::U8> _50613_dst, jule::I32 _50626_prec, jule::U8 _50637_fmt, jule::Bool _50648_neg, jule::U64 _5079_mant, jule::I32 _50724_exp, _1ec65998a_floatInfo* _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - (*(_50735_flt))._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_1c93388ce:;
	}
	_iter_end_1c93388ce:;;
	if (((_50626_prec >= 0LL) && (_50626_prec < 15LL))) {
		jule::U32 _5219_shift = static_cast<jule::U32>((_50626_prec << 2LLU));;
		jule::U64 _5229_extra = ((_5079_mant << _5219_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _5219_shift);
		if (((_5229_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _5219_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _5359_hex = jule::Str();;
	if ((_50637_fmt == 'X')) {
		_5359_hex=jule::Str::lit("0123456789ABCDEF", 16);
	} else {
		_5359_hex=jule::Str::lit("0123456789abcdef", 16);
	};
	if (_50648_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_50637_fmt); __jule_push_dest.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU))))); };
	_5079_mant<<=4LLU;
	if (((_50626_prec < 0LL) && (_5079_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push('.'); };
		while ((_5079_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_5359_hex[static_cast<jule::I32>(((_5079_mant >> 60LLU) & 15LLU))]); };
				_5079_mant<<=4LLU;
			}
		_iter_next_1c9340430:;
		}
		_iter_end_1c9340430:;;
	} else if ((_50626_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push('.'); };
		jule::I32 _55813_i = 0LL;;
		for (; (_55813_i < _50626_prec); (_55813_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_5359_hex[static_cast<jule::I32>(((_5079_mant >> 60LLU) & 15LLU))]); };
				_5079_mant<<=4LLU;
			}
		_iter_next_1c933e143:;
		}
		_iter_end_1c933e143:;;
	};
	jule::U8 _5669_ch = static_cast<jule::U8>(80LLU);;
	if ((_50637_fmt == _1ec6600de_lower(_50637_fmt))) {
		_5669_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_5669_ch); };
	if ((_50724_exp < 0LL)) {
		_5669_ch='-';
		_50724_exp=static_cast<jule::I32>((-(_50724_exp)));
	} else {
		_5669_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_5669_ch); };
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_1c933da8d:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0'))); };
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_1c933db04:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0'))); };
			}
		}
		else {
			_case_begin_1c9343bc5:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0'))); };
			}
		}
		_match_end_1c9341be5:;
	};
	return _50613_dst;;
}



inline jule::I32 _1ec65e220_min(jule::I32 _5918_a, jule::I32 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;;
	};
	return _59116_b;;
}



inline jule::I32 _1ec65e594_max(jule::I32 _5988_a, jule::I32 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;;
	};
	return _59816_b;;
}



inline jule::U8 _1ec6600de_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | 32LL));;
}



inline __jule_tuple_u64__jule_tuple__1ebe8a0bd_ConvError _1ec660562_parseUint(jule::Str* _5119_s, jule::I32 _5131_base, jule::I32 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__1ebe8a0bd_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (((*(_5119_s))).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_1c9349ed9:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_1c9349dda:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_1ec6600de_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_1c934b936:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1ec6600de_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_1c934b859:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1ec6600de_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_1c934b529:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1c934b4b3:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_1c934b3e7:;
					};
				};
			}
		}
		else {
			_case_begin_1c934936d:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1c93496c0:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=64LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _909_cutoff = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1c93506c6:;
			{
				_909_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1c934e719:;
			{
				_909_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1c93502ec:;
			{
				_909_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5131_base)) + 1LLU));
			}
		}
		_match_end_1c9350231:;
	};
	jule::U64 _1009_maxVal = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1c9350e79:;
			{
				_1009_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1c9350374:;
			{
				_1009_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1c9350e24:;
	};
	jule::U64 _1089_n = static_cast<jule::U64>(0LLU);;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9351b8e:;
		if (it != expr_end) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11013_d = static_cast<jule::U8>(0LLU);;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1c9353498:;
						{
							_11013_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _1ec6600de_lower(_10912_c)) && (_1ec6600de_lower(_10912_c) <= 'z'))) {
						_case_begin_1c9353388:;
						{
							_11013_d=static_cast<jule::U8>(((_1ec6600de_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1c9352eae:;
						{
							goto _iter_next_1c9351b8e;
						}
					}
					else {
						_case_begin_1c9352e48:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1c9352dd2:;
				};
				if ((_11013_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
					return __jule_func_result;;
				};
				if ((_1089_n >= _909_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _1009_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(1LL);
					return __jule_func_result;;
				};
				_1089_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _1329_n1 = (_1089_n + static_cast<jule::U64>(_11013_d));;
				if (((_1329_n1 < _1089_n) || (_1329_n1 > _1009_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _1009_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(1LL);
					return __jule_func_result;;
				};
				_1089_n=_1329_n1;
			}
			_iter_next_1c9351b8e:;
			++it;
			goto _iter_begin_1c9351b8e;
		}
		_iter_end_1c9351b8e:;
	};
	__jule_func_result.__jule_result_arg0 = _1089_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1ec660991_ParseUint(jule::Str _14618_s, jule::I32 _14630_base, jule::I32 _14645_bit_size) {
	jule::U64 _1475_un = 0;;
	jule::I32 _1479_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__1ebe8a0bd_ConvError __jule_assign_result = _1ec660562_parseUint(&(_14618_s), _14630_base, _14645_bit_size);
		_1475_un = __jule_assign_result.__jule_result_arg0;
		_1479_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1479_err != static_cast<jule::I32>(0LL))) {
		return jule::Exceptional<jule::U64>(jule::Any(_1479_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::U64>(jule::Any(), _1475_un);;
}



inline jule::Exceptional<jule::I64> _1ec660e47_ParseInt(jule::Str _17217_s, jule::I32 _17225_base, jule::I32 _17240_bitSize) {
	if ((_17217_s).empty()) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0));
	};
	jule::Bool _1789_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_1789_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _1879_un = 0;;
	jule::I32 _18713_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__1ebe8a0bd_ConvError __jule_assign_result = _1ec660562_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_1879_un = __jule_assign_result.__jule_result_arg0;
		_18713_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18713_err != static_cast<jule::I32>(0LL)) && (_18713_err != static_cast<jule::I32>(1LL)))) {
		return jule::Exceptional<jule::I64>(jule::Any(_18713_err, &__jule_any_type0));
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1965_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U32>((_17240_bitSize - 1LL))));;
	if (((!(_1789_neg)) && (_1879_un >= _1965_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type0));
	};
	if ((_1789_neg && (_1879_un > _1965_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type0));
	};
	jule::I64 _2039_n = static_cast<jule::I64>(_1879_un);;
	if (_1789_neg) {
		_2039_n=static_cast<jule::I64>((-(_2039_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _2039_n);;
}



inline __jule_tuple_f64__jule_tuple_bool _1ec661b3a_eiselLemire64(jule::U64 _4122_man, jule::I32 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1ec51e7a6_F64FromBits(9223372036854775808LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I32 _575_clz = _1ec613bdb_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U32>(_575_clz);
	;
	jule::U64 _609_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_575_clz));;
	jule::U64 _639_xHi = 0;;
	jule::U64 _6318_xLo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1ec61db80_Mul64(_4122_man, _1ec662993_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_639_xHi = __jule_assign_result.__jule_result_arg0;
		_6318_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_639_xHi & 511LLU) == 511LLU) && ((_6318_xLo + _4122_man) < _4122_man))) {
		jule::U64 _679_yHi = 0;;
		jule::U64 _6714_yLo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1ec61db80_Mul64(_4122_man, _1ec662993_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_679_yHi = __jule_assign_result.__jule_result_arg0;
			_6714_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _6813_mergedHi = 0;;
		jule::U64 _6823_mergedLo = 0;;
		({
			jule::U64 ___jule_assign_arg = _639_xHi;
			jule::U64 _1___jule_assign_arg = (_6318_xLo + _679_yHi);
			_6813_mergedHi = ___jule_assign_arg;
			_6823_mergedLo = _1___jule_assign_arg;
		});
		if ((_6823_mergedLo < _6318_xLo)) {
			(_6813_mergedHi)++;
		};
		if (((((_6813_mergedHi & 511LLU) == 511LLU) && ((_6823_mergedLo + 1LLU) == 0LLU)) && ((_6714_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _6813_mergedHi;
			jule::U64 _1___jule_assign_arg = _6823_mergedLo;
			_639_xHi = ___jule_assign_arg;
			_6318_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _795_msb = (_639_xHi >> 63LLU);;
	jule::U64 _809_retMantissa = (_639_xHi >> (_795_msb + 9LLU));;
	_609_retExp2-=(1LLU ^ _795_msb);
	if ((((_6318_xLo == 0LLU) && ((_639_xHi & 511LLU) == 0LLU)) && ((_809_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_809_retMantissa+=(_809_retMantissa & 1LLU);
	_809_retMantissa>>=1LLU;
	if (((_809_retMantissa >> 53LLU) > 0LLU)) {
		_809_retMantissa>>=1LLU;
		_609_retExp2+=1LLU;
	};
	if (((_609_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1039_retBits = ((_609_retExp2 << 52LLU) | (_809_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_1039_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1ec51e7a6_F64FromBits(_1039_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1ec66207a_eiselLemire32(jule::U64 _11022_man, jule::I32 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_1ec51e19b_F32FromBits(2147483648LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I32 _1325_clz = _1ec613bdb_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U32>(_1325_clz);
	;
	jule::U64 _1359_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1325_clz));;
	jule::U64 _1389_x_hi = 0;;
	jule::U64 _13819_x_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1ec61db80_Mul64(_11022_man, _1ec662993_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_1389_x_hi = __jule_assign_result.__jule_result_arg0;
		_13819_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_1389_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13819_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _1429_y_hi = 0;;
		jule::U64 _14215_y_lo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1ec61db80_Mul64(_11022_man, _1ec662993_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_1429_y_hi = __jule_assign_result.__jule_result_arg0;
			_14215_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _14313_merged_hi = 0;;
		jule::U64 _14324_merged_lo = 0;;
		({
			jule::U64 ___jule_assign_arg = _1389_x_hi;
			jule::U64 _1___jule_assign_arg = (_13819_x_lo + _1429_y_hi);
			_14313_merged_hi = ___jule_assign_arg;
			_14324_merged_lo = _1___jule_assign_arg;
		});
		if ((_14324_merged_lo < _13819_x_lo)) {
			(_14313_merged_hi)++;
		};
		if (((((_14313_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14324_merged_lo + 1LLU) == 0LLU)) && ((_14215_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _14313_merged_hi;
			jule::U64 _1___jule_assign_arg = _14324_merged_lo;
			_1389_x_hi = ___jule_assign_arg;
			_13819_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1545_msb = (_1389_x_hi >> 63LLU);;
	jule::U64 _1559_retMantissa = (_1389_x_hi >> (_1545_msb + 38LLU));;
	_1359_retExp2-=(1LLU ^ _1545_msb);
	if ((((_13819_x_lo == 0LLU) && ((_1389_x_hi & 274877906943LLU) == 0LLU)) && ((_1559_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_1559_retMantissa+=(_1559_retMantissa & 1LLU);
	_1559_retMantissa>>=1LLU;
	if (((_1559_retMantissa >> 24LLU) > 0LLU)) {
		_1559_retMantissa>>=1LLU;
		_1359_retExp2+=1LLU;
	};
	if (((_1359_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1789_retBits = ((_1359_retExp2 << 23LLU) | (_1559_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_1789_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_1ec51e19b_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_1789_retBits))));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I32 _1ec663dd4_commonPrefixLenIgnoreCase(jule::Slice<jule::U8>* _4631_s, jule::Str _4642_prefix) {
	jule::I32 _479_n = _4642_prefix.len();;
	if ((_479_n > (*(_4631_s)).len())) {
		_479_n=static_cast<jule::I32>((*(_4631_s)).len());
	};
	jule::I32 _519_i = 0LL;;
	for (; (_519_i < _479_n); (_519_i)++) {
		{
			jule::U8 _5313_c = (*(_4631_s))[_519_i];;
			if ((('A' <= _5313_c) && (_5313_c <= 'Z'))) {
				_5313_c+=32LL;
			};
			if ((_5313_c != _4642_prefix[_519_i])) {
				return _519_i;;
			};
		}
	_iter_next_1c937570c:;
	}
	_iter_end_1c937570c:;;
	return _479_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1ec6641e2_special(jule::Slice<jule::U8> _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I32 _739_sign = 1LL;;
	jule::I32 _749_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1c9378a40:;
			{
				if ((_6912_s[0LL] == '-')) {
					_739_sign=-1LL;
				};
				_749_nsign=1LL;
				{
					jule::Slice<jule::U8>* _8317_sp = (&(_6912_s));;
					(*(_8317_sp))=(*(_8317_sp)).slice(1LL);
				};
				goto _case_begin_1c9378ab7;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1c9378ab7:;
			{
				jule::I32 _8813_caseN = _1ec663dd4_commonPrefixLenIgnoreCase(&(_6912_s), jule::Str::lit("infinity", 8));;
				if (((3LL < _8813_caseN) && (_8813_caseN < 8LL))) {
					_8813_caseN=3LL;
				};
				if (((_8813_caseN == 3LL) || (_8813_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1ec62654a_Inf(_739_sign));
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>((_749_nsign + __jule_func_result.__jule_result_arg1));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1c9378b3e:;
			{
				if ((_1ec663dd4_commonPrefixLenIgnoreCase(&(_6912_s), jule::Str::lit("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1ec625e73_NaN());
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1c9378974:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1ec6644ab_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1c937dd0e:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1c937e084:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1c937deb8:;
	};
	jule::U64 _1229_base = static_cast<jule::U64>(10LLU);;
	jule::I32 _1239_maxMantDigits = 19LL;;
	jule::U8 _1249_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_1ec6600de_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_1229_base=16LLU;
		_1239_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_1249_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _1329_sawdot = false;;
	jule::Bool _1339_sawdigits = false;;
	jule::I32 _1349_nd = 0LL;;
	jule::I32 _1359_ndMant = 0LL;;
	jule::I32 _1369_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _1389_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_1389_c == '_')) {
					_case_begin_1c9383231:;
					{
						goto _iter_next_1c937d7c0;
					}
				}
				else if ((_1389_c == '.')) {
					_case_begin_1c93832a8:;
					{
						if (_1329_sawdot) {
							goto _julec_label_1c9387ad7;
						};
						_1329_sawdot=true;
						_1369_dp=_1349_nd;
						goto _iter_next_1c937d7c0;
					}
				}
				else if ((('0' <= _1389_c) && (_1389_c <= '9'))) {
					_case_begin_1c9383330:;
					{
						_1339_sawdigits=true;
						if (((_1389_c == '0') && (_1349_nd == 0LL))) {
							(_1369_dp)--;
							goto _iter_next_1c937d7c0;
						};
						(_1349_nd)++;
						if ((_1359_ndMant < _1239_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_1229_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_1389_c - '0'));
							(_1359_ndMant)++;
						} else if ((_1389_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1c937d7c0;
					}
				}
				else if ((((_1229_base == 16LLU) && ('a' <= _1ec6600de_lower(_1389_c))) && (_1ec6600de_lower(_1389_c) <= 'f'))) {
					_case_begin_1c93833a7:;
					{
						_1339_sawdigits=true;
						(_1349_nd)++;
						if ((_1359_ndMant < _1239_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_1ec6600de_lower(_1389_c) - 'a') + 10LLU));
							(_1359_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1c937d7c0;
					}
				}
				_match_end_1c9383154:;
			};
			goto _iter_end_1c937d7c0;
		}
	_iter_next_1c937d7c0:;
	}
	_iter_end_1c937d7c0:;;
	_julec_label_1c9387ad7:;
	if ((!(_1339_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_1329_sawdot))) {
		_1369_dp=_1349_nd;
	};
	if ((_1229_base == 16LLU)) {
		_1369_dp*=4LL;
		_1359_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_1ec6600de_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _1249_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I32 _20113_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_20113_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I32 _21113_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1c938aa41;
				};
				if ((_21113_e < 10000LL)) {
					_21113_e=static_cast<jule::I32>((((_21113_e * 10LL) + static_cast<jule::I32>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0'));
				};
			}
		_iter_next_1c938aa41:;
		}
		_iter_end_1c938aa41:;;
		_1369_dp+=(_21113_e * _20113_esign);
	} else if ((_1229_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=static_cast<jule::I32>((_1369_dp - _1359_ndMant));
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1ec66603a_atof64exact(jule::U64 _48616_mantissa, jule::I32 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48616_mantissa >> _1ec65a051_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(static_cast<jule::F64>(_48616_mantissa));
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F64>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_1c9394374:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_1c93943eb:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1ec6653d0_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((__jule_func_result.__jule_result_arg0 * _1ec6653d0_f64pow10[_48635_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_1c9394473:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(jule::div(__jule_func_result.__jule_result_arg0,_1ec6653d0_f64pow10[(-(_48635_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1c9393d24:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1ec666469_atof32exact(jule::U64 _52016_mantissa, jule::I32 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_52016_mantissa >> _1ec659c98_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(static_cast<jule::F32>(_52016_mantissa));
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F32>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_1c9398763:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_1c93987da:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1ec665721_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>((__jule_func_result.__jule_result_arg0 * _1ec665721_f32pow10[_52035_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_1c9398862:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(jule::div(__jule_func_result.__jule_result_arg0,_1ec665721_f32pow10[(-(_52035_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1c9398213:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__1ebe8a0bd_ConvError _1ec666a0d_atofHex(_1ec65998a_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I32 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__1ebe8a0bd_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I32 _5575_maxExp = ((static_cast<jule::I32>((1LL << (*(_55613_flt))._field_expbits)) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I32 _5585_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I32>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && ((_55633_mantissa >> ((*(_55613_flt))._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55633_mantissa<<=1LLU;
			(_55652_exp)--;
		}
	_iter_next_1c939d504:;
	}
	_iter_end_1c939d504:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while (((_55633_mantissa >> ((1LLU + (*(_55613_flt))._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55633_mantissa=static_cast<jule::U64>(((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU)));
			(_55652_exp)++;
		}
	_iter_next_1c939e648:;
	}
	_iter_end_1c939e648:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5585_minExp - 2LL)))) {
		{
			_55633_mantissa=static_cast<jule::U64>(((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU)));
			(_55652_exp)++;
		}
	_iter_next_1c939e44a:;
	}
	_iter_end_1c939e44a:;;
	jule::U64 _5889_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa>>=2LLU;
	_5889_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_5889_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == (1LLU << (1LLU + (*(_55613_flt))._field_mantbits)))) {
			_55633_mantissa>>=1LLU;
			(_55652_exp)++;
		};
	};
	if (((_55633_mantissa >> (*(_55613_flt))._field_mantbits) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I32 _6039_err = static_cast<jule::I32>(0LL);;
	if ((_55652_exp > _5575_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << (*(_55613_flt))._field_mantbits)));
		_55652_exp=static_cast<jule::I32>((_5575_maxExp + 1LL));
		_6039_err=static_cast<jule::I32>(1LL);
	};
	jule::U64 _6109_bits = (_55633_mantissa & ((1LLU << (*(_55613_flt))._field_mantbits) - 1LLU));;
	_6109_bits|=(static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & static_cast<jule::I32>(((1LL << (*(_55613_flt))._field_expbits) - 1LL)))) << (*(_55613_flt))._field_mantbits);
	if (_55662_neg) {
		_6109_bits|=((1LLU << (*(_55613_flt))._field_mantbits) << (*(_55613_flt))._field_expbits);
	};
	if (((*(_55613_flt)) == _1ec659c98_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_1ec51e19b_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_6109_bits)))));
		__jule_func_result.__jule_result_arg1 = _6039_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1ec51e7a6_F64FromBits(_6109_bits));
	__jule_func_result.__jule_result_arg1 = _6039_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1ebe8a0bd_ConvError _1ec666dd7_atof32(jule::Str* _62112_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__1ebe8a0bd_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6239_val = 0;;
		jule::I32 _62314__n = 0;;
		jule::Bool _62318_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ec6641e2_special(_23bca314e_Stobs(_62112_s));
			_6239_val = __jule_assign_result.__jule_result_arg0;
			_62314__n = __jule_assign_result.__jule_result_arg1;
			_62318_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62318_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_6239_val));
			__jule_func_result.__jule_result_arg1 = _62314__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6295_mantissa = 0;;
	jule::I32 _62915_exp = 0;;
	jule::Bool _62920_neg = false;;
	jule::Bool _62925_trunc = false;;
	jule::Bool _62932_hex = false;;
	jule::I32 _62937__n = 0;;
	jule::Bool _62945_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ec6644ab_readFloat(_62112_s);
		_6295_mantissa = __jule_assign_result.__jule_result_arg0;
		_62915_exp = __jule_assign_result.__jule_result_arg1;
		_62920_neg = __jule_assign_result.__jule_result_arg2;
		_62925_trunc = __jule_assign_result.__jule_result_arg3;
		_62932_hex = __jule_assign_result.__jule_result_arg4;
		_62937__n = __jule_assign_result.__jule_result_arg5;
		_62945_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62937__n;
	if ((!(_62945_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	if (_62932_hex) {
		jule::F64 _63613_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__1ebe8a0bd_ConvError __jule_assign_result = _1ec666a0d_atofHex(&(_1ec659c98_f32info), _6295_mantissa, _62915_exp, _62920_neg, _62925_trunc);
			_63613_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_63613_ff));
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62925_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1ec666469_atof32exact(_6295_mantissa, _62915_exp, _62920_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62945_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62945_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1ec66207a_eiselLemire32(_6295_mantissa, _62915_exp, _62920_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62945_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62945_ok) {
			if ((!(_62925_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _65817_fUp = static_cast<jule::F32>(0.0f);;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1ec66207a_eiselLemire32(static_cast<jule::U64>((_6295_mantissa + 1LLU)), _62915_exp, _62920_neg);
				_65817_fUp = __jule_assign_result.__jule_result_arg0;
				_62945_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62945_ok && (__jule_func_result.__jule_result_arg0 == _65817_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1ec66d284_decimal _6679_d = _1ec66d284_decimal{};;
	if ((!(_1ec664b4e_set(&_6679_d, _23bca314e_Stobs(_62112_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _6715_b = 0;;
	jule::Bool _6718_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1ec664e90_floatBits(&_6679_d, &(_1ec659c98_f32info));
		_6715_b = __jule_assign_result.__jule_result_arg0;
		_6718_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_1ec51e19b_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_6715_b))));
	if (_6718_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I32>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1ebe8a0bd_ConvError _1ec6671a1_atof64(jule::Str* _67912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1ebe8a0bd_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6819_val = 0;;
		jule::I32 _68114__n = 0;;
		jule::Bool _68118_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ec6641e2_special(_23bca314e_Stobs(_67912_s));
			_6819_val = __jule_assign_result.__jule_result_arg0;
			_68114__n = __jule_assign_result.__jule_result_arg1;
			_68118_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68118_ok) {
			__jule_func_result.__jule_result_arg0 = _6819_val;
			__jule_func_result.__jule_result_arg1 = _68114__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6875_mantissa = 0;;
	jule::I32 _68715_exp = 0;;
	jule::Bool _68720_neg = false;;
	jule::Bool _68725_trunc = false;;
	jule::Bool _68732_hex = false;;
	jule::I32 _68737__n = 0;;
	jule::Bool _68745_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ec6644ab_readFloat(_67912_s);
		_6875_mantissa = __jule_assign_result.__jule_result_arg0;
		_68715_exp = __jule_assign_result.__jule_result_arg1;
		_68720_neg = __jule_assign_result.__jule_result_arg2;
		_68725_trunc = __jule_assign_result.__jule_result_arg3;
		_68732_hex = __jule_assign_result.__jule_result_arg4;
		_68737__n = __jule_assign_result.__jule_result_arg5;
		_68745_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68737__n;
	if ((!(_68745_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	if (_68732_hex) {
		({
			__jule_tuple_f64__jule_tuple__1ebe8a0bd_ConvError __jule_assign_result = _1ec666a0d_atofHex(&(_1ec65a051_f64info), _6875_mantissa, _68715_exp, _68720_neg, _68725_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68725_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1ec66603a_atof64exact(_6875_mantissa, _68715_exp, _68720_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68745_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68745_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1ec661b3a_eiselLemire64(_6875_mantissa, _68715_exp, _68720_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68745_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68745_ok) {
			if ((!(_68725_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _71517_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1ec661b3a_eiselLemire64(static_cast<jule::U64>((_6875_mantissa + 1LLU)), _68715_exp, _68720_neg);
				_71517_fUp = __jule_assign_result.__jule_result_arg0;
				_68745_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68745_ok && (__jule_func_result.__jule_result_arg0 == _71517_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1ec66d284_decimal _7249_d = _1ec66d284_decimal{};;
	if ((!(_1ec664b4e_set(&_7249_d, _23bca314e_Stobs(_67912_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _7285_b = 0;;
	jule::Bool _7288_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1ec664e90_floatBits(&_7249_d, &(_1ec65a051_f64info));
		_7285_b = __jule_assign_result.__jule_result_arg0;
		_7288_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1ec51e7a6_F64FromBits(_7285_b));
	if (_7288_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I32>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1ebe8a0bd_ConvError _1ec667525_parseFloatPrefix(jule::Str* _73622_s, jule::I32 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1ebe8a0bd_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _7389_f = 0;;
		jule::I32 _73812_n = 0;;
		jule::I32 _73815_err = 0LL;;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__1ebe8a0bd_ConvError __jule_assign_result = _1ec666dd7_atof32(_73622_s);
			_7389_f = __jule_assign_result.__jule_result_arg0;
			_73812_n = __jule_assign_result.__jule_result_arg1;
			_73815_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_7389_f));
		__jule_func_result.__jule_result_arg1 = _73812_n;
		__jule_func_result.__jule_result_arg2 = _73815_err;
		return __jule_func_result;;
	};
	jule::F64 _7415_f = 0;;
	jule::I32 _7418_n = 0;;
	jule::I32 _74111_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1ebe8a0bd_ConvError __jule_assign_result = _1ec6671a1_atof64(_73622_s);
		_7415_f = __jule_assign_result.__jule_result_arg0;
		_7418_n = __jule_assign_result.__jule_result_arg1;
		_74111_err = __jule_assign_result.__jule_result_arg2;
	});
	__jule_func_result.__jule_result_arg0 = _7415_f;
	__jule_func_result.__jule_result_arg1 = _7418_n;
	__jule_func_result.__jule_result_arg2 = _74111_err;
	return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1ec667899_ParseFloat(jule::Str _76915_s, jule::I32 _76923_bitSize) {
	jule::F64 _7705_f = 0;;
	jule::I32 _7708_n = 0;;
	jule::I32 _77011_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1ebe8a0bd_ConvError __jule_assign_result = _1ec667525_parseFloatPrefix(&(_76915_s), _76923_bitSize);
		_7705_f = __jule_assign_result.__jule_result_arg0;
		_7708_n = __jule_assign_result.__jule_result_arg1;
		_77011_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_7708_n != _76915_s.len()) && ((_77011_err == static_cast<jule::I32>(0LL)) || (_77011_err != static_cast<jule::I32>(2LL))))) {
		return jule::Exceptional<jule::F64>(jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0));
	};
	if ((_77011_err != static_cast<jule::I32>(0LL))) {
		return jule::Exceptional<jule::F64>(jule::Any(_77011_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::F64>(jule::Any(), _7705_f);;
}



inline void _1ec6681a2_ryuFtoaFixed32(_1ec65a4e6_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I32 _4956_exp, jule::I32 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I32 _629_e2 = _4956_exp;;
	jule::I32 _635_b = _1ec61b320_Len32(_4945_mant);;
	if ((_635_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U32>((25LL - _635_b));
		_629_e2+=(static_cast<jule::I32>(_635_b) - 25LL);
	};
	jule::I32 _745_q = (((-(_1ec669736_mulByLog2Log10(static_cast<jule::I32>((_629_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _799_exact = ((_745_q <= 27LL) && (_745_q >= 0LL));;
	jule::U32 _819_di = 0;;
	jule::I32 _8113_dexp2 = 0;;
	jule::Bool _8124_d0 = false;;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ec66b0ea_mult64bitPow10(_4945_mant, _629_e2, _745_q);
		_819_di = __jule_assign_result.__jule_result_arg0;
		_8113_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8124_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8113_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_745_q < 0LL) && (_745_q >= -10LL)) && _1ec66b89d_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)), static_cast<jule::I32>((-(_745_q)))))) {
		_799_exact=true;
		_8124_d0=true;
	};
	jule::U32 _945_extra = static_cast<jule::U32>((-(_8113_dexp2)));;
	jule::U32 _955_extraMask = static_cast<jule::U32>(((1LL << _945_extra) - 1LL));;
	jule::U32 _979_dfrac = static_cast<jule::U32>(0LLU);;
	({
		jule::U32 ___jule_assign_arg = static_cast<jule::U32>((_819_di >> _945_extra));
		jule::U32 _1___jule_assign_arg = static_cast<jule::U32>((_819_di & _955_extraMask));
		_819_di = ___jule_assign_arg;
		_979_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _999_roundUp = false;;
	if (_799_exact) {
		_999_roundUp=(((_979_dfrac > (1LLU << (_945_extra - 1LLU))) || ((_979_dfrac == (1LLU << (_945_extra - 1LLU))) && (!(_8124_d0)))) || (((_979_dfrac == (1LLU << (_945_extra - 1LLU))) && _8124_d0) && ((_819_di & 1LLU) == 1LLU)));
	} else {
		_999_roundUp=((_979_dfrac >> (_945_extra - 1LLU)) == 1LLU);
	};
	if ((_979_dfrac != 0LLU)) {
		_8124_d0=false;
	};
	_1ec668e94_formatDecimal(_4924_d, static_cast<jule::U64>(static_cast<jule::U64>(_819_di)), (!(_8124_d0)), _999_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_745_q;
}



inline void _1ec668647_ryuFtoaFixed64(_1ec65a4e6_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I32 _12156_exp, jule::I32 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I32 _1319_e2 = _12156_exp;;
	jule::I32 _1325_b = _1ec61b5d9_Len64(_12145_mant);;
	if ((_1325_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U32>((55LL - _1325_b))));
		_1319_e2+=(static_cast<jule::I32>(_1325_b) - 55LL);
	};
	jule::I32 _1465_q = (((-(_1ec669736_mulByLog2Log10(static_cast<jule::I32>((_1319_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _1519_exact = ((_1465_q <= 55LL) && (_1465_q >= 0LL));;
	jule::U64 _1539_di = 0;;
	jule::I32 _15313_dexp2 = 0;;
	jule::Bool _15324_d0 = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ec66b529_mult128bitPow10(_12145_mant, _1319_e2, _1465_q);
		_1539_di = __jule_assign_result.__jule_result_arg0;
		_15313_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15324_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15313_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1465_q < 0LL) && (_1465_q >= -22LL)) && _1ec66b89d_divisibleByPow5(_12145_mant, static_cast<jule::I32>((-(_1465_q)))))) {
		_1519_exact=true;
		_15324_d0=true;
	};
	jule::U32 _1665_extra = static_cast<jule::U32>((-(_15313_dexp2)));;
	jule::U64 _1675_extraMask = static_cast<jule::U64>(((1LL << _1665_extra) - 1LL));;
	jule::U64 _1699_dfrac = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_1539_di >> _1665_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_1539_di & _1675_extraMask));
		_1539_di = ___jule_assign_arg;
		_1699_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _1719_roundUp = false;;
	if (_1519_exact) {
		_1719_roundUp=(((_1699_dfrac > (1LLU << (_1665_extra - 1LLU))) || ((_1699_dfrac == (1LLU << (_1665_extra - 1LLU))) && (!(_15324_d0)))) || (((_1699_dfrac == (1LLU << (_1665_extra - 1LLU))) && _15324_d0) && ((_1539_di & 1LLU) == 1LLU)));
	} else {
		_1719_roundUp=((_1699_dfrac >> (_1665_extra - 1LLU)) == 1LLU);
	};
	if ((_1699_dfrac != 0LLU)) {
		_15324_d0=false;
	};
	_1ec668e94_formatDecimal(_12124_d, _1539_di, (!(_15324_d0)), _1719_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1465_q;
}



inline void _1ec668e94_formatDecimal(_1ec65a4e6_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I32 _20088_prec) {
	jule::U64 _2015_max = _1ec668988_u64pow10[_20088_prec];;
	jule::I32 _2029_trimmed = 0LL;;
	while ((_20044_m >= _2015_max)) {
		{
			jule::U64 _2049_a = 0;;
			jule::U64 _20412_b = 0;;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_2049_a = ___jule_assign_arg;
				_20412_b = _1___jule_assign_arg;
			});
			_20044_m=_2049_a;
			(_2029_trimmed)++;
			if ((_20412_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20412_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20412_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1c93d6680:;
	}
	_iter_end_1c93d6680:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2015_max)) {
		_20044_m/=10LLU;
		(_2029_trimmed)++;
	};
	jule::U32 _2299_n = static_cast<jule::U32>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I32>(static_cast<jule::I32>(_20088_prec));
	jule::U64 _2319_v = _20044_m;;
	while ((_2319_v >= 100LLU)) {
		{
			jule::U64 _23313_v1 = static_cast<jule::U64>(0LLU);;
			jule::U64 _23413_v2 = static_cast<jule::U64>(0LLU);;
			if (((_2319_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_2319_v) / 100LLU)));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_2319_v) % 100LL)));
					_23313_v1 = ___jule_assign_arg;
					_23413_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_2319_v / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_2319_v % 100LL));
					_23313_v1 = ___jule_assign_arg;
					_23413_v2 = _1___jule_assign_arg;
				});
			};
			_2299_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I32>((_2299_n + 1LLU))]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _23413_v2) + 1LLU))];
			(*(_20023_d))._field_d[static_cast<jule::I32>((_2299_n + 0LLU))]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _23413_v2) + 0LLU))];
			_2319_v=_23313_v1;
		}
	_iter_next_1c93d67e5:;
	}
	_iter_end_1c93d67e5:;;
	if ((_2319_v > 0LLU)) {
		(_2299_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I32>(_2299_n)]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _2319_v) + 1LLU))];
	};
	if ((_2319_v >= 10LLU)) {
		(_2299_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I32>(_2299_n)]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>((2LL * _2319_v))];
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_2029_trimmed)++;
		}
	_iter_next_1c93dec4e:;
	}
	_iter_end_1c93dec4e:;;
	(*(_20023_d))._field_dp=static_cast<jule::I32>(((*(_20023_d))._field_nd + _2029_trimmed));
}



inline void _1ec66946c_ryuFtoaShortest(_1ec65a4e6_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I32 _26157_exp, _1ec65998a_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1ec615869_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U32>((-(_26157_exp)));
		_1ec66a54a_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _2735_ml = 0;;
	jule::U64 _2739_mc = 0;;
	jule::U64 _27313_mu = 0;;
	jule::I32 _27321_e2 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1ec669e2e_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_2735_ml = __jule_assign_result.__jule_result_arg0;
		_2739_mc = __jule_assign_result.__jule_result_arg1;
		_27313_mu = __jule_assign_result.__jule_result_arg2;
		_27321_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27321_e2 == 0LL)) {
		_1ec66a54a_ryuDigits(_26125_d, _2735_ml, _2739_mc, _27313_mu, true, false);
		return;;
	};
	jule::I32 _2795_q = (_1ec669736_mulByLog2Log10(static_cast<jule::I32>((-(_27321_e2)))) + 1LL);;
	jule::U64 _2839_dl = static_cast<jule::U64>(0LLU);;
	jule::U64 _2849_dc = static_cast<jule::U64>(0LLU);;
	jule::U64 _2859_du = static_cast<jule::U64>(0LLU);;
	jule::Bool _2869_dl0 = false;;
	jule::Bool _2879_dc0 = false;;
	jule::Bool _2889_du0 = false;;
	if (((*(_26168_flt)) == _1ec659c98_f32info)) {
		jule::U32 _29013_dl32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _29113_dc32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _29213_du32 = static_cast<jule::U32>(0LLU);;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ec66b0ea_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_2735_ml)), _27321_e2, _2795_q);
			_29013_dl32 = __jule_assign_result.__jule_result_arg0;
			_2869_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ec66b0ea_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_2739_mc)), _27321_e2, _2795_q);
			_29113_dc32 = __jule_assign_result.__jule_result_arg0;
			_2879_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ec66b0ea_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27313_mu)), _27321_e2, _2795_q);
			_29213_du32 = __jule_assign_result.__jule_result_arg0;
			_27321_e2 = __jule_assign_result.__jule_result_arg1;
			_2889_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29013_dl32));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29113_dc32));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29213_du32));
			_2839_dl = ___jule_assign_arg;
			_2849_dc = _1___jule_assign_arg;
			_2859_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ec66b529_mult128bitPow10(_2735_ml, _27321_e2, _2795_q);
			_2839_dl = __jule_assign_result.__jule_result_arg0;
			_2869_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ec66b529_mult128bitPow10(_2739_mc, _27321_e2, _2795_q);
			_2849_dc = __jule_assign_result.__jule_result_arg0;
			_2879_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ec66b529_mult128bitPow10(_27313_mu, _27321_e2, _2795_q);
			_2859_du = __jule_assign_result.__jule_result_arg0;
			_27321_e2 = __jule_assign_result.__jule_result_arg1;
			_2889_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27321_e2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2795_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_2869_dl0 = ___jule_assign_arg;
			_2879_dc0 = _1___jule_assign_arg;
			_2889_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2795_q < 0LL) && (_2795_q >= -24LL))) {
		if (_1ec66b89d_divisibleByPow5(_2735_ml, static_cast<jule::I32>((-(_2795_q))))) {
			_2869_dl0=true;
		};
		if (_1ec66b89d_divisibleByPow5(_2739_mc, static_cast<jule::I32>((-(_2795_q))))) {
			_2879_dc0=true;
		};
		if (_1ec66b89d_divisibleByPow5(_27313_mu, static_cast<jule::I32>((-(_2795_q))))) {
			_2889_du0=true;
		};
	};
	jule::U32 _3255_extra = static_cast<jule::U32>((-(_27321_e2)));;
	jule::U64 _3265_extraMask = static_cast<jule::U64>(((1LL << _3255_extra) - 1LL));;
	jule::U64 _3289_fracl = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_2839_dl >> _3255_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_2839_dl & _3265_extraMask));
		_2839_dl = ___jule_assign_arg;
		_3289_fracl = _1___jule_assign_arg;
	});
	jule::U64 _3309_fracc = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_2849_dc >> _3255_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_2849_dc & _3265_extraMask));
		_2849_dc = ___jule_assign_arg;
		_3309_fracc = _1___jule_assign_arg;
	});
	jule::U64 _3329_fracu = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_2859_du >> _3255_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_2859_du & _3265_extraMask));
		_2859_du = ___jule_assign_arg;
		_3329_fracu = _1___jule_assign_arg;
	});
	jule::Bool _3389_uok = ((!(_2889_du0)) || (_3329_fracu > 0LLU));;
	if ((_2889_du0 && (_3329_fracu == 0LLU))) {
		_3389_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_3389_uok))) {
		(_2859_du)--;
	};
	jule::Bool _3479_cup = false;;
	if (_2879_dc0) {
		_3479_cup=((_3309_fracc > (1LLU << (_3255_extra - 1LLU))) || ((_3309_fracc == (1LLU << (_3255_extra - 1LLU))) && ((_2849_dc & 1LLU) == 1LLU)));
	} else {
		_3479_cup=((_3309_fracc >> (_3255_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3615_lok = ((_2869_dl0 && (_3289_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3615_lok))) {
		(_2839_dl)++;
	};
	jule::Bool _3665_c0 = (_2879_dc0 && (_3309_fracc == 0LLU));;
	_1ec66a54a_ryuDigits(_26125_d, _2839_dl, _2849_dc, _2859_du, _3665_c0, _3479_cup);
	(*(_26125_d))._field_dp-=_2795_q;
}



inline jule::I32 _1ec669736_mulByLog2Log10(jule::I32 _37719_x) {
	return static_cast<jule::I32>(((_37719_x * 78913LL) >> 18LL));;
}



inline jule::I32 _1ec669a00_mulByLog10Log2(jule::I32 _38719_x) {
	return static_cast<jule::I32>(((_38719_x * 108853LL) >> 15LL));;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1ec669e2e_computeBounds(jule::U64 _39518_mant, jule::I32 _39529_exp, _1ec65998a_floatInfo* _3966_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << (*(_3966_flt))._field_mantbits)) || (_39529_exp == (((*(_3966_flt))._field_bias + 1LL) - static_cast<jule::I32>((*(_3966_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((2LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) + 1LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I32>((_39529_exp - 1LL));
	} else {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((4LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) + 2LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I32>((_39529_exp - 2LL));
	};
	return __jule_func_result;;
}



inline void _1ec66a54a_ryuDigits(_1ec65a4e6_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _4109_lhi = 0;;
	jule::U32 _41014_llo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1ec66bb67_divmod1e9(_40936_lower);
		_4109_lhi = __jule_assign_result.__jule_result_arg0;
		_41014_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4115_chi = 0;;
	jule::U32 _41110_clo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1ec66bb67_divmod1e9(_40948_central);
		_4115_chi = __jule_assign_result.__jule_result_arg0;
		_41110_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4125_uhi = 0;;
	jule::U32 _41210_ulo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1ec66bb67_divmod1e9(_40962_upper);
		_4125_uhi = __jule_assign_result.__jule_result_arg0;
		_41210_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4125_uhi == 0LLU)) {
		_1ec66abbb_ryuDigits32(_40919_d, _41014_llo, _41110_clo, _41210_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_4109_lhi < _4125_uhi)) {
		if ((_41014_llo != 0LLU)) {
			(_4109_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41110_clo == 0LLU));
		_40992_cup=((_41110_clo > 500000000LL) || ((_41110_clo == 500000000LL) && _40992_cup));
		_1ec66abbb_ryuDigits32(_40919_d, _4109_lhi, _4115_chi, _4125_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U32 _42813_n = static_cast<jule::U32>(9LLU);;
		jule::U32 _42913_v = _4115_chi;;
		while ((_42913_v > 0LLU)) {
			{
				jule::U32 _43113_v1 = 0;;
				jule::U32 _43117_v2 = 0;;
				({
					jule::U32 ___jule_assign_arg = (_42913_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_42913_v % 10LL);
					_43113_v1 = ___jule_assign_arg;
					_43117_v2 = _1___jule_assign_arg;
				});
				_42913_v=_43113_v1;
				(_42813_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I32>(_42813_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43117_v2 + '0')));
			}
		_iter_next_1c940b0de:;
		}
		_iter_end_1c940b0de:;;
		(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(static_cast<jule::I32>(_42813_n));
		(*(_40919_d))._field_nd=static_cast<jule::I32>(static_cast<jule::I32>((9LL - _42813_n)));
		_1ec66abbb_ryuDigits32(_40919_d, _41014_llo, _41110_clo, _41210_ulo, _40978_c0, _40992_cup, static_cast<jule::I32>(((*(_40919_d))._field_nd + 8LL)));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1c940d850:;
	}
	_iter_end_1c940d850:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(1LL);
		}
	_iter_next_1c940e367:;
	}
	_iter_end_1c940e367:;;
}



inline void _1ec66abbb_ryuDigits32(_1ec65a4e6_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I32 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		(*(_45421_d))._field_dp=static_cast<jule::I32>((_45554_endindex + 1LL));
		return;;
	};
	jule::I32 _4609_trimmed = 0LL;;
	jule::I32 _4639_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _4709_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47113_c = 0;;
			jule::U32 _47120_cdigit = 0;;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_47113_c = ___jule_assign_arg;
				_47120_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _4729_u = (_4559_upper / 10LLU);;
			if ((_4709_l > _4729_u)) {
				goto _iter_end_1c941117c;
			};
			if (((_4709_l == (_47113_c + 1LLU)) && (_47113_c < _4729_u))) {
				(_47113_c)++;
				_47120_cdigit=0LLU;
				_45539_cup=false;
			};
			(_4609_trimmed)++;
			_45525_c0=(_45525_c0 && (_4639_cNextDigit == 0LL));
			_4639_cNextDigit=static_cast<jule::I32>(static_cast<jule::I32>(_47120_cdigit));
			({
				jule::U32 ___jule_assign_arg = _4709_l;
				jule::U32 _1___jule_assign_arg = _47113_c;
				jule::U32 _2___jule_assign_arg = _4729_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4559_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1c941117c:;
	}
	_iter_end_1c941117c:;;
	if ((_4609_trimmed > 0LL)) {
		_45539_cup=(((_4639_cNextDigit > 5LL) || ((_4639_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_4639_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_4609_trimmed;
	jule::U32 _5099_v = _45458_central;;
	jule::I32 _5109_n = _45554_endindex;;
	while ((_5109_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _5129_v1 = 0;;
			jule::U32 _51213_v2 = 0;;
			({
				jule::U32 ___jule_assign_arg = (_5099_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_5099_v % 100LL);
				_5129_v1 = ___jule_assign_arg;
				_51213_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_5109_n]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _51213_v2) + 1LLU))];
			(*(_45421_d))._field_d[(_5109_n - 1LL)]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _51213_v2) + 0LLU))];
			_5109_n-=2LL;
			_5099_v=_5129_v1;
		}
	_iter_next_1c9411e19:;
	}
	_iter_end_1c9411e19:;;
	if ((_5109_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_5109_n]=static_cast<jule::U8>(static_cast<jule::U8>((_5099_v + '0')));
	};
	(*(_45421_d))._field_nd=static_cast<jule::I32>((_45554_endindex + 1LL));
	(*(_45421_d))._field_dp=static_cast<jule::I32>(((*(_45421_d))._field_nd + _4609_trimmed));
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1ec66b0ea_mult64bitPow10(jule::U32 _53419_m, jule::I32 _53431_e2, jule::I32 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_53419_m << 6LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>((_53431_e2 - 6LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str::lit("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _5439_pow = _1ec662993_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_5439_pow+=1LLU;
	};
	jule::U64 _5485_hi = 0;;
	jule::U64 _5489_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1ec61db80_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)), _5439_pow);
		_5485_hi = __jule_assign_result.__jule_result_arg0;
		_5489_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1ec669a00_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>(((_5485_hi << 7LLU) | (_5489_lo >> 57LLU))));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_5489_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1ec66b529_mult128bitPow10(jule::U64 _56220_m, jule::I32 _56232_e2, jule::I32 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>((_56220_m << 8LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>((_56232_e2 - 8LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str::lit("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _5719_pow = _1ec662993_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_5719_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1ec669a00_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _5795_l1 = 0;;
	jule::U64 _5799_l0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1ec61db80_Mul64(_56220_m, _5719_pow[0LL]);
		_5795_l1 = __jule_assign_result.__jule_result_arg0;
		_5799_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5809_h1 = 0;;
	jule::U64 _58013_h0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1ec61db80_Mul64(_56220_m, _5719_pow[1LL]);
		_5809_h1 = __jule_assign_result.__jule_result_arg0;
		_58013_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5815_mid = 0;;
	jule::U64 _58110_carry = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1ec61c376_Add64(_5795_l1, _58013_h0, 0LLU);
		_5815_mid = __jule_assign_result.__jule_result_arg0;
		_58110_carry = __jule_assign_result.__jule_result_arg1;
	});
	_5809_h1+=_58110_carry;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_5809_h1 << 9LLU) | (_5815_mid >> 55LLU)));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_5815_mid << 9LLU) == 0LLU) && (_5799_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1ec66b89d_divisibleByPow5(jule::U64 _58624_m, jule::I32 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I32 _5909_i = 0LL;;
	for (; (_5909_i < _58632_k); (_5909_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1c9424b1e:;
	}
	_iter_end_1c9424b1e:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1ec66bb67_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL)));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL)));
		return __jule_func_result;;
	};
}



inline void _1ec66ead2_trim(_1ec66d284_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_1c9428183:;
	}
	_iter_end_1c9428183:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _1ec66edbd_rightShift(_1ec66d284_decimal* _28420_a, jule::U32 _28432_k) {
	jule::I32 _2859_r = 0LL;;
	jule::I32 _2869_w = 0LL;;
	jule::U32 _2899_n = static_cast<jule::U32>(0LLU);;
	for (; ((_2899_n >> _28432_k) == 0LLU); (_2859_r)++) {
		{
			if ((_2859_r >= (*(_28420_a))._field_nd)) {
				if ((_2899_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while (((_2899_n >> _28432_k) == 0LLU)) {
					{
						_2899_n=static_cast<jule::U32>((_2899_n * 10LLU));
						(_2859_r)++;
					}
				_iter_next_1c942b483:;
				}
				_iter_end_1c942b483:;;
				goto _iter_end_1c9429bce;
			};
			jule::U32 _3039_c = static_cast<jule::U32>((*(_28420_a))._field_d[_2859_r]);;
			_2899_n=static_cast<jule::U32>((((_2899_n * 10LLU) + _3039_c) - '0'));
		}
	_iter_next_1c9429bce:;
	}
	_iter_end_1c9429bce:;;
	(*(_28420_a))._field_dp-=(_2859_r - 1LL);
	jule::U32 _3085_mask = (static_cast<jule::U32>((1LL << _28432_k)) - 1LLU);;
	for (; (_2859_r < (*(_28420_a))._field_nd); (_2859_r)++) {
		{
			jule::U32 _3129_c = static_cast<jule::U32>((*(_28420_a))._field_d[_2859_r]);;
			jule::U32 _3139_dig = (_2899_n >> _28432_k);;
			_2899_n&=_3085_mask;
			(*(_28420_a))._field_d[_2869_w]=static_cast<jule::U8>(static_cast<jule::U8>((_3139_dig + '0')));
			(_2869_w)++;
			_2899_n=static_cast<jule::U32>((((_2899_n * 10LLU) + _3129_c) - '0'));
		}
	_iter_next_1c942ce68:;
	}
	_iter_end_1c942ce68:;;
	while ((_2899_n > 0LLU)) {
		{
			jule::U32 _3229_dig = (_2899_n >> _28432_k);;
			_2899_n&=_3085_mask;
			if ((_2869_w < 800LL)) {
				(*(_28420_a))._field_d[_2869_w]=static_cast<jule::U8>(static_cast<jule::U8>((_3229_dig + '0')));
				(_2869_w)++;
			} else if ((_3229_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_2899_n=static_cast<jule::U32>((_2899_n * 10LLU));
		}
	_iter_next_1c942d1ee:;
	}
	_iter_end_1c942d1ee:;;
	(*(_28420_a))._field_nd=_2869_w;
	_1ec66ead2_trim(_28420_a);
}



inline jule::Bool _1ec670374_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I32 _33835_end, jule::Str* _33846_s) {
	jule::I32 _3399_i = 0LL;;
	for (; (_3399_i < (*(_33846_s)).len()); (_3399_i)++) {
		{
			if ((_3399_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_3399_i] != (*(_33846_s))[_3399_i])) {
				return (_33821_b[_3399_i] < (*(_33846_s))[_3399_i]);;
			};
		}
	_iter_next_1c9431972:;
	}
	_iter_end_1c9431972:;;
	return false;;
}



inline void _1ec67062c_leftShift(_1ec66d284_decimal* _35219_a, jule::U32 _35231_k) {
	jule::I32 _3539_delta = _1ec66cb8a_leftCheats[static_cast<jule::I32>(_35231_k)]._field_delta;;
	if (_1ec670374_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &(_1ec66cb8a_leftCheats[static_cast<jule::I32>(_35231_k)]._field_cutoff))) {
		(_3539_delta)--;
	};
	jule::I32 _3589_r = (*(_35219_a))._field_nd;;
	jule::I32 _3599_w = ((*(_35219_a))._field_nd + _3539_delta);;
	jule::U32 _3629_n = static_cast<jule::U32>(0LLU);;
	(_3589_r)--;
	for (; (_3589_r >= 0LL); (_3589_r)--) {
		{
			_3629_n+=((static_cast<jule::U32>((*(_35219_a))._field_d[_3589_r]) - '0') << _35231_k);
			jule::U32 _3669_quo = (_3629_n / 10LLU);;
			jule::U32 _3679_rem = (_3629_n - (10LLU * _3669_quo));;
			(_3599_w)--;
			if ((_3599_w < 800LL)) {
				(*(_35219_a))._field_d[_3599_w]=static_cast<jule::U8>(static_cast<jule::U8>((_3679_rem + '0')));
			} else if ((_3679_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3629_n=_3669_quo;
		}
	_iter_next_1c9433985:;
	}
	_iter_end_1c9433985:;;
	while ((_3629_n > 0LLU)) {
		{
			jule::U32 _3799_quo = (_3629_n / 10LLU);;
			jule::U32 _3809_rem = (_3629_n - (10LLU * _3799_quo));;
			(_3599_w)--;
			if ((_3599_w < 800LL)) {
				(*(_35219_a))._field_d[_3599_w]=static_cast<jule::U8>(static_cast<jule::U8>((_3809_rem + '0')));
			} else if ((_3809_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3629_n=_3799_quo;
		}
	_iter_next_1c9434da4:;
	}
	_iter_end_1c9434da4:;;
	(*(_35219_a))._field_nd+=_3539_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_3539_delta;
	_1ec66ead2_trim(_35219_a);
}



inline jule::Bool _1ec6709a1_shouldRoundUp(_1ec66d284_decimal* _39919_a, jule::I32 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && ((((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _1ec672134_FmtUint(jule::U64 _6012_i, jule::I32 _6020_base) {
	if (((true && (_6012_i < 100LLU)) && (_6020_base == 10LL))) {
		return _1ec672b07_small(static_cast<jule::I32>(static_cast<jule::I32>(_6012_i)));;
	};
	jule::Str _648_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1ec673465_fmtBits(nullptr, _6012_i, _6020_base, false, false);
		_648_s = __jule_assign_result.__jule_result_arg1;
	});
	return _648_s;;
}



inline jule::Str _1ec6724ec_FmtInt(jule::I64 _7111_i, jule::I32 _7119_base) {
	if ((((true && (0LL <= _7111_i)) && (_7111_i < 100LL)) && (_7119_base == 10LL))) {
		return _1ec672b07_small(static_cast<jule::I32>(static_cast<jule::I32>(_7111_i)));;
	};
	jule::Str _758_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1ec673465_fmtBits(nullptr, static_cast<jule::U64>(static_cast<jule::U64>(_7111_i)), _7119_base, (_7111_i < 0LL), false);
		_758_s = __jule_assign_result.__jule_result_arg1;
	});
	return _758_s;;
}



inline jule::Str _1ec6727b6_Itoa(jule::I32 _809_i) {
	return _1ec6724ec_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_809_i)), 10LL);;
}



inline jule::Str _1ec672b07_small(jule::I32 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str::lit("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i, (_8510_i + 1LL));;
	};
	return jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU), ((_8510_i << 1LLU) + 2LL));;
}



inline jule::Bool _1ec672dc1_isPowerOfTwo(jule::I32 _9217_x) {
	return ((_9217_x & (_9217_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _1ec673465_fmtBits(jule::Slice<jule::U8> _10116_dst, jule::U64 _10133_u, jule::I32 _10141_base, jule::Bool _10152_neg, jule::Bool _10163_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10141_base < 2LL) || (_10141_base > 36LL))) {
		jule::panic(jule::Str::lit("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _1079_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I32 _1089_i = _1079_a.len();;
	if (_10152_neg) {
		_10133_u=static_cast<jule::U64>((-(_10133_u)));
	};
	if ((_10141_base == 10LL)) {
		;
		jule::U32 _14913_us = static_cast<jule::U32>(_10133_u);;
		while ((_14913_us >= 100LLU)) {
			{
				jule::U32 _15113_is = ((_14913_us % 100LL) << 1LLU);;
				_14913_us/=100LLU;
				_1089_i-=2LL;
				_1079_a[(_1089_i + 1LL)]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>((_15113_is + 1LLU))];
				_1079_a[(_1089_i + 0LL)]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>((_15113_is + 0LLU))];
			}
		_iter_next_1c946bbcc:;
		}
		_iter_end_1c946bbcc:;;
		jule::U32 _1599_is = (_14913_us << 1LLU);;
		(_1089_i)--;
		_1079_a[_1089_i]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>((_1599_is + 1LLU))];
		if ((_14913_us >= 10LLU)) {
			(_1089_i)--;
			_1079_a[_1089_i]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(_1599_is)];
		};
	} else if (_1ec672dc1_isPowerOfTwo(_10141_base)) {
		jule::U32 _1749_shift = (static_cast<jule::U32>(_1ec614b43_TrailingZeros(static_cast<jule::U32>(static_cast<jule::U32>(_10141_base)))) & 7LLU);;
		jule::U64 _1759_b = static_cast<jule::U64>(_10141_base);;
		jule::U32 _1769_m = (static_cast<jule::U32>(_10141_base) - 1LLU);;
		while ((_10133_u >= _1759_b)) {
			{
				(_1089_i)--;
				_1079_a[_1089_i]=jule::Str::lit("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I32>((static_cast<jule::U32>(_10133_u) & _1769_m))];
				_10133_u>>=_1749_shift;
			}
		_iter_next_1c9473c5b:;
		}
		_iter_end_1c9473c5b:;;
		(_1089_i)--;
		_1079_a[_1089_i]=jule::Str::lit("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I32>(static_cast<jule::U32>(_10133_u))];
	} else {
		jule::U64 _1879_b = static_cast<jule::U64>(_10141_base);;
		while ((_10133_u >= _1879_b)) {
			{
				(_1089_i)--;
				jule::U64 _19313_q = jule::div(_10133_u,_1879_b);;
				_1079_a[_1089_i]=jule::Str::lit("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I32>(static_cast<jule::U32>((_10133_u - (_19313_q * _1879_b))))];
				_10133_u=_19313_q;
			}
		_iter_next_1c9475972:;
		}
		_iter_end_1c9475972:;;
		(_1089_i)--;
		_1079_a[_1089_i]=jule::Str::lit("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I32>(static_cast<jule::U32>(_10133_u))];
	};
	if (_10152_neg) {
		(_1089_i)--;
		_1079_a[_1089_i]='-';
	};
	if (_10163_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10116_dst,_1079_a.slice(_1089_i));
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::Str>(_1079_a.slice(_1089_i));
	return __jule_func_result;;
}



inline jule::Str _1ec674961_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1c948ca99:;
			{
				return _1ec673e5a_SysInt;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1c948cb10:;
			{
				return _1ec674224_SysUint;;
			}
		}
		else {
			_case_begin_1c948c55a:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1c9489c83:;
	};
}



inline jule::I32 _1ec674c2a_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str::lit("i8", 2) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1c948dc10:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3) || _match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1c948dd42:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3) || _match_expr == jule::Str::lit("u32", 3) || _match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1c948dda8:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3) || _match_expr == jule::Str::lit("u64", 3) || _match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1c948de1e:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("int", 3) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1c948de85:;
			{
				return _1ec673b4c_BitSize;;
			}
		}
		else {
			_case_begin_1c948d825:;
			{
				return -1LL;;
			}
		}
		_match_end_1c948d7ae:;
	};
}



inline jule::Str _1ec67506b_IntFromBits(jule::I32 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1c94908c1:;
			{
				return jule::Str::lit("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1c94912c8:;
			{
				return jule::Str::lit("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1c949133e:;
			{
				return jule::Str::lit("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1c94913a5:;
			{
				return jule::Str::lit("i64", 3);;
			}
		}
		else {
			_case_begin_1c9490d66:;
			{
				return jule::Str();;
			}
		}
		_match_end_1c9490d00:;
	};
}



inline jule::Str _1ec675335_UintFromBits(jule::I32 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1c949165d:;
			{
				return jule::Str::lit("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1c949254e:;
			{
				return jule::Str::lit("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1c94925b5:;
			{
				return jule::Str::lit("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1c949262b:;
			{
				return jule::Str::lit("u64", 3);;
			}
		}
		else {
			_case_begin_1c9491eee:;
			{
				return jule::Str();;
			}
		}
		_match_end_1c9491e88:;
	};
}



inline jule::Str _1ec6755ee_FloatFromBits(jule::I32 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1c94928e5:;
			{
				return jule::Str::lit("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1c94937d6:;
			{
				return jule::Str::lit("f64", 3);;
			}
		}
		else {
			_case_begin_1c9493286:;
			{
				return jule::Str();;
			}
		}
		_match_end_1c9493220:;
	};
}



inline jule::Bool _1ec676248_CheckBitFloat(jule::Str _15118_val, jule::I32 _15128_bit) {
	({
		auto except = _1ec667899_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I32 _1ec676512_BitsizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1c9498698:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1c94980b0:;
			{
				return 64LLU;;
			}
		}
		_match_end_1c9496ba2:;
	};
}



inline jule::I32 _1ec6767cb_BitsizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1c9499435:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1c94994e0:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1c9499556:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1c9498973:;
			{
				return 64LLU;;
			}
		}
		_match_end_1c9498ee5:;
	};
}



inline jule::I32 _1ec676a95_BitsizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1c949ae92:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1c949b04c:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1c949b0b3:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1c949a953:;
			{
				return 64LLU;;
			}
		}
		_match_end_1c949a546:;
	};
}



inline void _1ec676c1b_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _23d323338_Arch };
			
			if (_match_expr == jule::Str::lit("arm64", 5) || _match_expr == jule::Str::lit("amd64", 5)) {
				_case_begin_1c949be0a:;
				{
					_1ec673b4c_BitSize=64LLU;
					_1ec673e5a_SysInt=jule::Str::lit("i64", 3);
					_1ec674224_SysUint=jule::Str::lit("u64", 3);
				}
			}
			else if (_match_expr == jule::Str::lit("i386", 4)) {
				_case_begin_1c949be93:;
				{
					_1ec673b4c_BitSize=32LLU;
					_1ec673e5a_SysInt=jule::Str::lit("i32", 3);
					_1ec674224_SysUint=jule::Str::lit("u32", 3);
				}
			}
			_match_end_1c949bd83:;
		};
	};
}



inline void _1ec676d92_init(void) {
	_1ec676c1b_UpdateTarget();
}



inline jule::I64 _1ec67abed_MinI(jule::Str _6113_k) {
	_6113_k=_1ec674961_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1c949b239:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1c949e0e9:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1c949e160:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1c949e1c6:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1c949b36b:;
			{
				return 0LL;;
			}
		}
		_match_end_1c949b316:;
	};
}



inline jule::I64 _1ec67b00b_MaxI(jule::Str _7913_k) {
	_7913_k=_1ec674961_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1c949e46d:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1c94a0705:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1c94a076b:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1c94a07d2:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1c949ed86:;
			{
				return 0LL;;
			}
		}
		_match_end_1c94a0590:;
	};
}



inline jule::U64 _1ec67b2c5_MaxU(jule::Str _9713_k) {
	_9713_k=_1ec674961_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1c94a0a79:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1c94a1d11:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1c94a1d77:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1c94a1ddd:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1c94a1492:;
			{
				return 0LLU;;
			}
		}
		_match_end_1c94a1b9b:;
	};
}



inline jule::F64 _1ec67b506_Min(jule::Str _11512_k) {
	_11512_k=_1ec674961_RealKindOf(_11512_k);
	jule::I64 _1175_i = _1ec67abed_MinI(_11512_k);;
	if ((_1175_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1175_i));;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1c94a4341:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1c94a3c7a:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1c94a3719:;
			{
				return 0LL;;
			}
		}
		_match_end_1c94a39d3:;
	};
}



inline jule::F64 _1ec67b7c0_Max(jule::Str _13312_k) {
	_13312_k=_1ec674961_RealKindOf(_13312_k);
	jule::I64 _1355_i = _1ec67b00b_MaxI(_13312_k);;
	if ((_1355_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1355_i));;
	};
	jule::U64 _1395_u = _1ec67b2c5_MaxU(_13312_k);;
	if ((_1395_u != 0LLU)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1395_u));;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1c94a63a9:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1c94a5ce3:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1c94a56d8:;
			{
				return 0LL;;
			}
		}
		_match_end_1c94a5a29:;
	};
}



inline jule::Bool _1ec67bc43_IsI8Compatible(jule::Str _623_k) {
	return _623_k.equal("i8", 2);;
}



inline jule::Bool _1ec67c051_IsI16Compatible(jule::Str _1124_k) {
	return (_1124_k.equal("i8", 2) || _1124_k.equal("i16", 3));;
}



inline jule::Bool _1ec67c31a_IsI32Compatible(jule::Str _1724_k) {
	return (((_1724_k.equal("i8", 2) || _1724_k.equal("i16", 3)) || _1724_k.equal("i32", 3)) || _1724_k.equal("u8", 2));;
}



inline jule::Bool _1ec67c65b_IsI64Compatible(jule::Str _2524_k) {
	return (((_2524_k.equal("i8", 2) || _2524_k.equal("i16", 3)) || _2524_k.equal("i32", 3)) || _2524_k.equal("i64", 3));;
}



inline jule::Bool _1ec67c925_IsU8Compatible(jule::Str _3323_k) {
	return _3323_k.equal("u8", 2);;
}



inline jule::Bool _1ec67cbde_IsU16Compatible(jule::Str _3824_k) {
	return (_3824_k.equal("u8", 2) || _3824_k.equal("u16", 3));;
}



inline jule::Bool _1ec67cea8_IsU32Compatible(jule::Str _4324_k) {
	return ((_4324_k.equal("u8", 2) || _4324_k.equal("u16", 3)) || _4324_k.equal("u32", 3));;
}



inline jule::Bool _1ec67d34e_IsU64Compatible(jule::Str _5024_k) {
	return (((_5024_k.equal("u8", 2) || _5024_k.equal("u16", 3)) || _5024_k.equal("u32", 3)) || _5024_k.equal("u64", 3));;
}



inline jule::Bool _1ec67d618_IsF32Compatible(jule::Str _5824_k) {
	return _5824_k.equal("f32", 3);;
}



inline jule::Bool _1ec67d8d2_IsF64Compatible(jule::Str _6324_k) {
	return _6324_k.equal("f64", 3);;
}



inline jule::Bool _1ec67dc56_TypesAreCompatible(jule::Str _7027_k1, jule::Str _7036_k2) {
	{
		auto &_match_expr{ _7027_k1 };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1c94ab8cb:;
			{
				return true;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1c94abbd9:;
			{
				return _7036_k2.equal("int", 3);;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1c94abe5e:;
			{
				return _7036_k2.equal("uintptr", 7);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1c94abec5:;
			{
				return _7036_k2.equal("uint", 4);;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1c94ac03b:;
			{
				return _1ec67bc43_IsI8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1c94ac0a2:;
			{
				return _1ec67c051_IsI16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1c94ac1b2:;
			{
				return _1ec67c31a_IsI32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1c94ac228:;
			{
				return _1ec67c65b_IsI64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1c94ac28e:;
			{
				return _1ec67c925_IsU8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1c94ac305:;
			{
				return _1ec67cbde_IsU16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1c94ac37c:;
			{
				return _1ec67cea8_IsU32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1c94ac404:;
			{
				return _1ec67d34e_IsU64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1c94ac47b:;
			{
				return _1ec67d618_IsF32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1c94ac503:;
			{
				return _1ec67d8d2_IsF64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_1c94ac57a:;
			{
				return _7036_k2.equal("bool", 4);;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_1c94ac602:;
			{
				return _7036_k2.equal("str", 3);;
			}
		}
		else {
			_case_begin_1c94aba41:;
			{
				return false;;
			}
		}
		_match_end_1c94a6772:;
	};
}



inline jule::Bool _1ec67e020_IsI16Greater(jule::Str _11021_k) {
	return _11021_k.equal("i8", 2);;
}



inline jule::Bool _1ec67e2d9_IsI32Greater(jule::Str _11521_k) {
	return (_11521_k.equal("i8", 2) || _11521_k.equal("i16", 3));;
}



inline jule::Bool _1ec67e5a3_IsI64Greater(jule::Str _12021_k) {
	return ((_12021_k.equal("i8", 2) || _12021_k.equal("i16", 3)) || _12021_k.equal("i32", 3));;
}



inline jule::Bool _1ec67e86c_IsU16Greater(jule::Str _12721_k) {
	return _12721_k.equal("u8", 2);;
}



inline jule::Bool _1ec67ece0_IsU32Greater(jule::Str _13221_k) {
	return (_13221_k.equal("u8", 2) || _13221_k.equal("u16", 3));;
}



inline jule::Bool _1ec6800a9_IsU64Greater(jule::Str _13821_k) {
	return ((_13821_k.equal("u8", 2) || _13821_k.equal("u16", 3)) || _13821_k.equal("u32", 3));;
}



inline jule::Bool _1ec680373_IsF32Greater(jule::Str _14517_k) {
	return (!_14517_k.equal("f64", 3));;
}



inline jule::Bool _1ec68063c_IsF64Greater(jule::Str _15017_k) {
	return true;;
}



inline jule::Bool _1ec6809b1_IsGreater(jule::Str _15518_k1, jule::Str _15527_k2) {
	{
		auto &_match_expr{ _15518_k1 };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1c94b46b4:;
			{
				return _1ec681a17_IsSigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1c94b4a27:;
			{
				return _1ec681d25_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1c94b4a9e:;
			{
				return _1ec681d25_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1c94b4d02:;
			{
				return _1ec67e020_IsI16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1c94b4d79:;
			{
				return _1ec67e2d9_IsI32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1c94b4e01:;
			{
				return _1ec67e5a3_IsI64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1c94b4e78:;
			{
				return _1ec67e86c_IsU16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1c94b5055:;
			{
				return _1ec67ece0_IsU32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1c94b50cc:;
			{
				return _1ec6800a9_IsU64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1c94b5154:;
			{
				return _1ec680373_IsF32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1c94b51cb:;
			{
				return _1ec68063c_IsF64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1c94b5253:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c94b48b2:;
			{
				return false;;
			}
		}
		_match_end_1c94b483a:;
	};
}



inline jule::Bool _1ec681a17_IsSigInt(jule::Str _2717_k) {
	return ((((_2717_k.equal("i8", 2) || _2717_k.equal("i16", 3)) || _2717_k.equal("i32", 3)) || _2717_k.equal("i64", 3)) || _2717_k.equal("int", 3));;
}



inline jule::Bool _1ec681d25_IsUnsigInt(jule::Str _3619_k) {
	return (((((_3619_k.equal("u8", 2) || _3619_k.equal("u16", 3)) || _3619_k.equal("u32", 3)) || _3619_k.equal("u64", 3)) || _3619_k.equal("uint", 4)) || _3619_k.equal("uintptr", 7));;
}



inline jule::Bool _1ec6820de_IsInt(jule::Str _4610_k) {
	return (_1ec681a17_IsSigInt(_4610_k) || _1ec681d25_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1ec682430_IsFloat(jule::Str _5112_k) {
	return (_5112_k.equal("f32", 3) || _5112_k.equal("f64", 3));;
}



inline jule::Bool _1ec6826e9_IsNum(jule::Str _5610_k) {
	return (_1ec6820de_IsInt(_5610_k) || _1ec682430_IsFloat(_5610_k));;
}



inline jule::Bool _1ec6829b3_IsSigNum(jule::Str _6113_k) {
	return (_1ec681a17_IsSigInt(_6113_k) || _1ec682430_IsFloat(_6113_k));;
}



inline void _1ec68bd0d_lshiftUnsig(_1ec682ce3_Const* _59021_c, _1ec682ce3_Const* _59032_x) {
	jule::U64 _5915_l = _1ec68571e_AsU64(_59021_c);;
	jule::U64 _5925_r = _1ec68571e_AsU64(_59032_x);;
	_1ec686016_SetU64(_59021_c, static_cast<jule::U64>((_5915_l << _5925_r)));
}



inline void _1ec68c13d_rshiftUnsig(_1ec682ce3_Const* _59621_c, _1ec682ce3_Const* _59632_x) {
	jule::U64 _5975_l = _1ec68571e_AsU64(_59621_c);;
	jule::U64 _5985_r = _1ec68571e_AsU64(_59632_x);;
	_1ec686016_SetU64(_59621_c, static_cast<jule::U64>((_5975_l >> _5985_r)));
}



inline jule::Bool _1b9b03a38_IsUnaryOp(jule::U32 _33414_id) {
	{
		auto expr = &(_1e293a35d_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9570a39:;
		if (it != expr_end) {
			jule::U32 *_33512_op = it;
			{
				if ((_33414_id == (*(_33512_op)))) {
					return true;;
				};
			}
			_iter_next_1c9570a39:;
			++it;
			goto _iter_begin_1c9570a39;
		}
		_iter_end_1c9570a39:;
	};
	return false;;
}



inline jule::Bool _1b9b03d46_IsBinOp(jule::U32 _34412_id) {
	{
		auto expr = &(_1e293a605_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9570d9c:;
		if (it != expr_end) {
			jule::U32 *_34512_op = it;
			{
				if ((_34412_id == (*(_34512_op)))) {
					return true;;
				};
			}
			_iter_next_1c9570d9c:;
			++it;
			goto _iter_begin_1c9570d9c;
		}
		_iter_end_1c9570d9c:;
	};
	return false;;
}



inline jule::Bool _1b9b04451_IsStr(jule::Str _36410_k) {
	return (!(_36410_k).empty() && ((_36410_k[0LL] == '\"') || _1b9b0471a_IsRawStr(_36410_k)));;
}



inline jule::Bool _1b9b0471a_IsRawStr(jule::Str _36713_k) {
	return (!(_36713_k).empty() && (_36713_k[0LL] == '`'));;
}



inline jule::Bool _1b9b049d4_IsRune(jule::Str _37111_k) {
	return (!(_37111_k).empty() && (_37111_k[0LL] == '\''));;
}



inline jule::Bool _1b9b0540d_IsFloat(jule::Str _38012_k) {
	if (_23d14ca9c_HasPrefix(_38012_k, jule::Str::lit("0x", 2))) {
		return _23d15381c_ContainsAny(_38012_k, jule::Str::lit(".pP", 3));;
	};
	return _23d15381c_ContainsAny(_38012_k, jule::Str::lit(".eE", 3));;
}



inline jule::Bool _1b9b056c7_IsNum(jule::Str _38810_k) {
	if ((_38810_k).empty()) {
		return false;;
	};
	jule::U8 _3935_b = _38810_k[0LL];;
	return ((_3935_b == '.') || (('0' <= _3935_b) && (_3935_b <= '9')));;
}



inline jule::Bool _1b9b05c5a_IsIgnoreIdent(jule::Str _40318_ident) {
	return _40318_ident.equal("_", 1);;
}



inline jule::Bool _1b9b06024_IsAnonIdent(jule::Str _40616_ident) {
	return _40616_ident.equal("<anonymous>", 11);;
}



inline jule::Bool _1b9b065a7_IsSpace(jule::I32 _41912_r) {
	{
		auto expr = &(_1e293a13d_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9578305:;
		if (it != expr_end) {
			jule::I32 *_42012_cr = it;
			{
				if ((_41912_r == (*(_42012_cr)))) {
					return true;;
				};
			}
			_iter_next_1c9578305:;
			++it;
			goto _iter_begin_1c9578305;
		}
		_iter_end_1c9578305:;
	};
	return false;;
}



inline jule::Bool _1b9b06a2a_IsLetter(jule::I32 _42913_r) {
	return _23ce87145_IsLetter(_42913_r);;
}



inline jule::Bool _1b9b070ad_IsDecimal(jule::U8 _44914_b) {
	return (('0' <= _44914_b) && (_44914_b <= '9'));;
}



inline jule::Bool _1b9b07377_IsBinary(jule::U8 _45213_b) {
	return ((_45213_b == '0') || (_45213_b == '1'));;
}



inline jule::Bool _1b9b07641_IsOctal(jule::U8 _45512_b) {
	return (('0' <= _45512_b) && (_45512_b <= '7'));;
}



inline jule::Bool _1b9b0790a_IsHex(jule::U8 _45810_b) {
	{
		
		if ((('0' <= _45810_b) && (_45810_b <= '9'))) {
			_case_begin_1c957c02e:;
			{
				return true;;
			}
		}
		else if ((('a' <= _45810_b) && (_45810_b <= 'f'))) {
			_case_begin_1c957c0a6:;
			{
				return true;;
			}
		}
		else if ((('A' <= _45810_b) && (_45810_b <= 'F'))) {
			_case_begin_1c957c12d:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c957be63:;
			{
				return false;;
			}
		}
		_match_end_1c957adb8:;
	};
}



inline jule::Bool _1b9b07bc4_IsAssign(jule::U32 _47313_id) {
	return ((((((((_47313_id == static_cast<jule::U32>(1LLU)) || (_47313_id == static_cast<jule::U32>(27LLU))) || (_47313_id == static_cast<jule::U32>(30LLU))) || (_47313_id == static_cast<jule::U32>(32LLU))) || (_47313_id == static_cast<jule::U32>(24LLU))) || (_47313_id == static_cast<jule::U32>(74LLU))) || (_47313_id == static_cast<jule::U32>(62LLU))) || (_47313_id == static_cast<jule::U32>(65LLU)));;
}



inline jule::Bool _1b9b07e8d_IsPostfixOp(jule::U32 _48516_id) {
	{
		auto expr = &(_1b9aec7ac_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c957d937:;
		if (it != expr_end) {
			jule::U32 *_48612_op = it;
			{
				if ((_48516_id == (*(_48612_op)))) {
					return true;;
				};
			}
			_iter_next_1c957d937:;
			++it;
			goto _iter_begin_1c957d937;
		}
		_iter_end_1c957d937:;
	};
	return false;;
}



inline jule::Bool _1b9b08257_IsAssignOp(jule::U32 _49515_id) {
	if (_1b9b07e8d_IsPostfixOp(_49515_id)) {
		return true;;
	};
	{
		auto expr = &(_1b9aecaa9_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9580c25:;
		if (it != expr_end) {
			jule::U32 *_49912_op = it;
			{
				if ((_49515_id == (*(_49912_op)))) {
					return true;;
				};
			}
			_iter_next_1c9580c25:;
			++it;
			goto _iter_begin_1c9580c25;
		}
		_iter_end_1c9580c25:;
	};
	return false;;
}



inline jule::Ptr<_1b9b08ab5_File> _1b9b09e5c_NewFileSet(jule::Str _5715_path) {
	return jule::new_ptr<_1b9b08ab5_File>(_1b9b08ab5_File{._field_Path=_5715_path, });;
}



inline _23d21115a_Log _1b9b0b9a8_makeErr(jule::I32 _10012_row, jule::I32 _10022_col, jule::Ptr<_1b9b08ab5_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args) {
	return _23d21115a_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_10012_row, ._field_Column=_10022_col, ._field_Path=(*((*(_10033_f))))._field_Path, ._field_Text=_23d2115bc_Logf(_10043_fmt, _10056_args), };;
}



inline jule::Bool _1b9b0bd71_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix) {
	if (((*(_11020_bytes)).len() < _11035_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11035_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c958a6e1:;
		if (it != expr_end) {
			jule::I32 _1149_i = it - expr->begin();
			{
				if (((*(_11020_bytes))[_1149_i] != _11035_prefix[_1149_i])) {
					return false;;
				};
			}
			_iter_next_1c958a6e1:;
			++it;
			_1149_i++;
			goto _iter_begin_1c958a6e1;
		}
		_iter_end_1c958a6e1:;
	};
	return true;;
}



inline jule::Str _1b9b0c1e5_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I32 _12232_i) {
	jule::Str __jule_func_result;
	(_12232_i)++;
	if ((_12232_i >= (*(_12215_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _1289_b = (*(_12215_txt))[_12232_i];;
	if ((_1289_b == '_')) {
		return __jule_func_result;;
	};
	if (((_1289_b == '+') || (_1289_b == '-'))) {
		(_12232_i)++;
		if ((_12232_i >= (*(_12215_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12215_txt))[_12232_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I32 _1425_first = _12232_i;;
	for (; (_12232_i < (*(_12215_txt)).len()); (_12232_i)++) {
		{
			_1289_b=(*(_12215_txt))[_12232_i];
			if (((_1289_b != '_') && (!(_1b9b070ad_IsDecimal(_1289_b))))) {
				goto _iter_end_1c958c14e;
			};
		}
	_iter_next_1c958c14e:;
	}
	_iter_end_1c958c14e:;;
	if ((_12232_i == _1425_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_12215_txt)).slice(0LL, _12232_i));
	return __jule_func_result;;
}



inline jule::Str _1b9b0c5ad_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I32 _15628_i) {
	return _1b9b0c1e5_floatFmtE(_15615_txt, _15628_i);;
}



inline jule::Str _1b9b0c932_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I32 _16036_i) {
	if (((*(_16019_txt))[_16036_i] != '.')) {
		return jule::Str();;
	};
	(_16036_i)++;
	_julec_label_1c959021d:;
	for (; (_16036_i < (*(_16019_txt)).len()); (_16036_i)++) {
		{
			jule::U8 _1689_b = (*(_16019_txt))[_16036_i];;
			{
				
				if ((_1689_b == '_') || _1b9b070ad_IsDecimal(_1689_b)) {
					_case_begin_1c9590b58:;
					{
						goto _iter_next_1c9590163;
					}
				}
				else if (_1b9b0e33a_isFloatFmtP(_1689_b, _16036_i)) {
					_case_begin_1c9590bd0:;
					{
						return _1b9b0c5ad_floatFmtP(_16019_txt, _16036_i);;
					}
				}
				else {
					_case_begin_1c9590a8c:;
					{
						goto _iter_end_1c9590163;
					}
				}
				_match_end_1c9590a26:;
			};
		}
	_iter_next_1c9590163:;
	}
	_iter_end_1c9590163:;;
	return jule::Str();;
}



inline jule::Str _1b9b0cca6_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I32 _18136_i) {
	_18136_i+=2LL;
	return _1b9b0c1e5_floatFmtE(_18119_txt, _18136_i);;
}



inline jule::Str _1b9b0d12a_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I32 _18635_i) {
	(_18635_i)++;
	return _1b9b0c1e5_floatFmtE(_18618_txt, _18635_i);;
}



inline jule::Str _1b9b0d5ae_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I32 _19131_i) {
	jule::Str __jule_func_result;
	(_19131_i)++;
	if ((_19131_i >= (*(_19114_txt)).len())) {
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)));
		return __jule_func_result;;
	};
	if (((*(_19114_txt))[_19131_i] == '_')) {
		(_19131_i)--;
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
		return __jule_func_result;;
	};
	for (; (_19131_i < (*(_19114_txt)).len()); (_19131_i)++) {
		{
			jule::U8 _2019_b = (*(_19114_txt))[_19131_i];;
			if (((_19131_i > 1LL) && ((_2019_b == 'e') || (_2019_b == 'E')))) {
				__jule_func_result = _1b9b0c1e5_floatFmtE(_19114_txt, _19131_i);
				return __jule_func_result;;
			};
			if (((_2019_b != '_') && (!(_1b9b070ad_IsDecimal(_2019_b))))) {
				goto _iter_end_1c9593aa1;
			};
		}
	_iter_next_1c9593aa1:;
	}
	_iter_end_1c9593aa1:;;
	if ((_19131_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
	return __jule_func_result;;
}



inline jule::Str _1b9b0d878_commonNum(jule::Slice<jule::U8>* _21615_txt) {
	jule::Str __jule_func_result;
	jule::I32 _2179_i = 0LL;;
	_julec_label_1c9595487:;
	for (; (_2179_i < (*(_21615_txt)).len()); (_2179_i)++) {
		{
			jule::U8 _2209_b = (*(_21615_txt))[_2179_i];;
			{
				
				if ((_2209_b == '.')) {
					_case_begin_1c9596532:;
					{
						__jule_func_result = _1b9b0d5ae_floatNum(_21615_txt, _2179_i);
						return __jule_func_result;;
					}
				}
				else if ((_2209_b == '_')) {
					_case_begin_1c95965a9:;
					{
						goto _iter_next_1c9595630;
					}
				}
				else if (_1b9b0deb6_isFloatFmtE(_2209_b, _2179_i)) {
					_case_begin_1c9596631:;
					{
						__jule_func_result = _1b9b0c1e5_floatFmtE(_21615_txt, _2179_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1b9b070ad_IsDecimal(_2209_b)))) {
					_case_begin_1c95966a8:;
					{
						goto _iter_end_1c9595630;
					}
				}
				_match_end_1c9596455:;
			};
		}
	_iter_next_1c9595630:;
	}
	_iter_end_1c9595630:;;
	if ((_2179_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_21615_txt)).slice(0LL, _2179_i));
	return __jule_func_result;;
}



inline jule::Str _1b9b0db42_binaryNum(jule::Slice<jule::U8>* _23915_txt) {
	jule::Str __jule_func_result;
	if ((!(_1b9b0bd71_bytesHasPrefix(_23915_txt, jule::Str::lit("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_23915_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I32 _2489_i = 2LL;;
	for (; (_2489_i < (*(_23915_txt)).len()); (_2489_i)++) {
		{
			if ((((*(_23915_txt))[_2489_i] != '_') && (!(_1b9b07377_IsBinary((*(_23915_txt))[_2489_i]))))) {
				goto _iter_end_1c95993c0;
			};
		}
	_iter_next_1c95993c0:;
	}
	_iter_end_1c95993c0:;;
	if ((_2489_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_23915_txt)).slice(0LL, _2489_i));
	return __jule_func_result;;
}



inline jule::Bool _1b9b0deb6_isFloatFmtE(jule::U8 _26116_b, jule::I32 _26125_i) {
	return ((_26125_i > 0LL) && ((_26116_b == 'e') || (_26116_b == 'E')));;
}



inline jule::Bool _1b9b0e33a_isFloatFmtP(jule::U8 _26516_b, jule::I32 _26525_i) {
	return ((_26525_i > 0LL) && ((_26516_b == 'p') || (_26516_b == 'P')));;
}



inline jule::Bool _1b9b0e6ae_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I32 _26938_i) {
	if (((*(_26921_txt))[_26938_i] != '.')) {
		return false;;
	};
	(_26938_i)++;
	_julec_label_1c959c02c:;
	for (; (_26938_i < (*(_26921_txt)).len()); (_26938_i)++) {
		{
			jule::U8 _2769_b = (*(_26921_txt))[_26938_i];;
			{
				
				if ((_2769_b == '_') || _1b9b070ad_IsDecimal(_2769_b)) {
					_case_begin_1c959cc64:;
					{
						goto _iter_next_1c959c15e;
					}
				}
				else if (_1b9b0e33a_isFloatFmtP(_2769_b, _26938_i)) {
					_case_begin_1c959ccdb:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1c959cb98:;
					{
						goto _iter_end_1c959c15e;
					}
				}
				_match_end_1c959cb32:;
			};
		}
	_iter_next_1c959c15e:;
	}
	_iter_end_1c959c15e:;;
	return false;;
}



inline jule::Bool _1b9b0ea33_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I32 _29033_i) {
	{
		
		if (((*(_29020_txt)).len() < 3LL)) {
			_case_begin_1c959e095:;
			{
				goto _case_begin_1c959e11c;
			}
		}
		else if (((*(_29020_txt))[_29033_i] != '.')) {
			_case_begin_1c959e11c:;
			{
				goto _case_begin_1c959e194;
			}
		}
		else if ((((*(_29020_txt))[(_29033_i + 1LL)] != 'p') && ((*(_29020_txt))[(_29033_i + 1LL)] != 'P'))) {
			_case_begin_1c959e194:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1c959deb8:;
			{
				return true;;
			}
		}
		_match_end_1c959ddec:;
	};
}



inline jule::Bool _1b9b0eda7_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I32 _30334_i) {
	{
		
		if (((*(_30321_txt)).len() < 4LL)) {
			_case_begin_1c95a0d11:;
			{
				goto _case_begin_1c95a0d88;
			}
		}
		else if (((*(_30321_txt))[_30334_i] != '.')) {
			_case_begin_1c95a0d88:;
			{
				goto _case_begin_1c95a0e10;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 1LL)] != 'f') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'F'))) {
			_case_begin_1c95a0e10:;
			{
				goto _case_begin_1c95a1163;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 2LL)] != 'p') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'P'))) {
			_case_begin_1c95a1163:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1c95a0904:;
			{
				return true;;
			}
		}
		_match_end_1c95a0838:;
	};
}



inline jule::Str _1b9b1032a_octalNum(jule::Slice<jule::U8>* _31814_txt) {
	jule::Str __jule_func_result;
	if (((*(_31814_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31814_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I32 _3269_octalStart = 1LL;;
	jule::Bool _3289_o = false;;
	if (((*(_31814_txt))[1LL] == 'o')) {
		if (((*(_31814_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_3269_octalStart)++;
		_3289_o=true;
	};
	jule::I32 _3379_i = _3269_octalStart;;
	for (; (_3379_i < (*(_31814_txt)).len()); (_3379_i)++) {
		{
			jule::U8 _3399_b = (*(_31814_txt))[_3379_i];;
			if ((_3399_b == '.')) {
				if (_3289_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1b9b0d5ae_floatNum(_31814_txt, _3379_i);
				return __jule_func_result;;
			};
			if (_1b9b0deb6_isFloatFmtE(_3399_b, _3379_i)) {
				__jule_func_result = _1b9b0c1e5_floatFmtE(_31814_txt, _3379_i);
				return __jule_func_result;;
			};
			if (((_3399_b != '_') && (!(_1b9b07641_IsOctal(_3399_b))))) {
				goto _iter_end_1c95a4595;
			};
		}
	_iter_next_1c95a4595:;
	}
	_iter_end_1c95a4595:;;
	if ((_3379_i == _3269_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_31814_txt)).slice(0LL, _3379_i));
	return __jule_func_result;;
}



inline jule::Str _1b9b105e4_hexNum(jule::Slice<jule::U8>* _36012_txt) {
	jule::Str __jule_func_result;
	if (((*(_36012_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36012_txt))[0LL] != '0') || (((*(_36012_txt))[1LL] != 'x') && ((*(_36012_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I32 _3699_i = 2LL;;
	_julec_label_1c95a8643:;
	for (; (_3699_i < (*(_36012_txt)).len()); (_3699_i)++) {
		{
			jule::U8 _3729_b = (*(_36012_txt))[_3699_i];;
			{
				
				if (_1b9b0ea33_isFloatFmtDotp(_36012_txt, _3699_i)) {
					_case_begin_1c95a929d:;
					{
						__jule_func_result = _1b9b0d12a_floatFmtDotp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1b9b0eda7_isFloatFmtDotfp(_36012_txt, _3699_i)) {
					_case_begin_1c95a9325:;
					{
						__jule_func_result = _1b9b0cca6_floatFmtDotfp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1b9b0e33a_isFloatFmtP(_3729_b, _3699_i)) {
					_case_begin_1c95a939c:;
					{
						__jule_func_result = _1b9b0c5ad_floatFmtP(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1b9b0e6ae_isFloatFmtDotnp(_36012_txt, _3699_i)) {
					_case_begin_1c95a9424:;
					{
						__jule_func_result = _1b9b0c932_floatFmtDotnp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (((_3729_b != '_') && (!(_1b9b0790a_IsHex(_3729_b))))) {
					_case_begin_1c95a949b:;
					{
						goto _iter_end_1c95a8885;
					}
				}
				_match_end_1c95a91b0:;
			};
		}
	_iter_next_1c95a8885:;
	}
	_iter_end_1c95a8885:;;
	if ((_3699_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_36012_txt)).slice(0LL, _3699_i));
	return __jule_func_result;;
}



inline jule::Str _1b9b10968_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I32 _39328_n) {
	jule::Str __jule_func_result;
	if (((*(_39315_txt)).len() < _39328_n)) {
		return __jule_func_result;;
	};
	;
	jule::I32 _3999_i = 2LL;;
	for (; (_3999_i < _39328_n); (_3999_i)++) {
		{
			if ((!(_1b9b0790a_IsHex((*(_39315_txt))[_3999_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1c95aba20:;
	}
	_iter_end_1c95aba20:;;
	__jule_func_result=static_cast<jule::Str>((*(_39315_txt)).slice(0LL, _39328_n));
	return __jule_func_result;;
}



inline jule::Str _1b9b10c32_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt) {
	return _1b9b10968_hexEscape(_41127_txt, 10LL);;
}



inline jule::Str _1b9b10eeb_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt) {
	return _1b9b10968_hexEscape(_41630_txt, 6LL);;
}



inline jule::Str _1b9b112b5_hexByteEscape(jule::Slice<jule::U8>* _42119_txt) {
	return _1b9b10968_hexEscape(_42119_txt, 4LL);;
}



inline jule::Str _1b9b1157e_byteEscape(jule::Slice<jule::U8>* _42616_txt) {
	jule::Str __jule_func_result;
	if (((*(_42616_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1b9b07641_IsOctal((*(_42616_txt))[1LL]))) || (!(_1b9b07641_IsOctal((*(_42616_txt))[2LL])))) || (!(_1b9b07641_IsOctal((*(_42616_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_42616_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_23d21115a_Log> _1b9b16573_Lex(jule::Ptr<_1b9b08ab5_File> _80912_f, jule::I32 _80922_mode) {
	if ((_80912_f == nullptr)) {
		return nullptr;;
	};
	_1b9b11cee_lex _8149_lex = _1b9b11cee_lex{._field_mode=_80922_mode, ._field_file=_80912_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_1b9b14b15_newLine(&_8149_lex);
	_1b9b128e3_lex(&_8149_lex);
	if ((_8149_lex._field_errors.len() > 0LL)) {
		return _8149_lex._field_errors;;
	};
	(*(_80912_f))._field_Tokens=_8149_lex._field_tokens;
	return nullptr;;
}



inline jule::Bool _1b9bcd3d7_FindModuleFile(jule::Slice<jule::Ptr<_23bc9be5b_DirEntry>>* _1220_dirents) {
	{
		auto expr = _1220_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c8194a7c:;
		if (it != expr_end) {
			jule::Ptr<_23bc9be5b_DirEntry> *_1312_d = it;
			{
				if (((!(_23bcaaa5d_IsDir((*((*(_1312_d))))._field_Stat.ptr()))) && (*((*(_1312_d))))._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1c8194a7c:;
			++it;
			goto _iter_begin_1c8194a7c;
		}
		_iter_end_1c8194a7c:;
	};
	return false;;
}



inline jule::Str _1b9bcd6b2_FindModuleFileDeep(jule::Str _2427_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_23bc9be5b_DirEntry>> _2613_dirents = ({
				auto except = static__23d172c8c_Read(_2427_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1c8195b5a;
				} jule::Slice<jule::Ptr<_23bc9be5b_DirEntry>>(nullptr);});
			});;
			jule::Bool _309_exist = _1b9bcd3d7_FindModuleFile(&(_2613_dirents));;
			if (_309_exist) {
				return _2427_path;;
			};
			jule::I32 _359_n = _2427_path.len();;
			_2427_path=_23d170949_Dir(_2427_path);
			if ((_2427_path.len() == _359_n)) {
				goto _iter_end_1c8195b5a;
			};
		}
	_iter_next_1c8195b5a:;
	}
	_iter_end_1c8195b5a:;;
	return jule::Str();;
}



inline jule::Slice<_23d21115a_Log> _1b9bcd97b_CheckModuleFile(jule::Str* _4621_path) {
	jule::Slice<jule::U8> _475_bytes = ({
		auto except = static__23bca884c_Read(_23d16ec56_Join(jule::Slice<jule::Str>::make({(*(_4621_path)),jule::Str::lit("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_23d21115a_Log>::make({_23d21115a_Log{._field_Kind=static_cast<jule::I32>(0LL), ._field_Text=jule::Str::lit("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _535_s = _23d155d08_Trim(static_cast<jule::Str>(_475_bytes), jule::Str::lit(" \n\r\t\v", 5));;
	if ((_535_s.len() != 0LL)) {
		return jule::Slice<_23d21115a_Log>::make({_23d21115a_Log{._field_Kind=static_cast<jule::I32>(0LL), ._field_Text=jule::Str::lit("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Bool _1b9bce4b5_IsPub(jule::Str* _1011_ident) {
	if (((*(_1011_ident))[0LL] < 128LLU)) {
		jule::U8 _129_b = (*(_1011_ident))[0LL];;
		return (('A' <= _129_b) && (_129_b <= 'Z'));;
	};
	jule::I32 _155_r = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _23d10b4ea_DecodeRune(_23bca314e_Stobs(_1011_ident));
		_155_r = __jule_assign_result.__jule_result_arg0;
	});
	return _23d000b4d_IsUpper(_155_r);;
}



inline jule::Bool _1b9c28a3c_IsAscii(jule::I32 _1012_r) {
	;
	return (_1012_r <= 127LL);;
}



inline jule::I32 _1b9c421d7_ToRune(jule::Slice<jule::U8> _1811_bytes) {
	if ((_1811_bytes.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _239_r = static_cast<jule::I32>(0LL);;
	if (((_1811_bytes[0LL] == '\\') && (_1811_bytes.len() > 1LL))) {
		jule::I32 _2513_i = 0LL;;
		_239_r=static_cast<jule::I32>(_1b9c42cdc_runeFromEsqSeq(_1811_bytes, &(_2513_i)));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _23d10b4ea_DecodeRune(_1811_bytes);
			_239_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _239_r;;
}



inline jule::Str _1b9c42391_ToRawStr(jule::Slice<jule::U8> _3713_bytes) {
	return static_cast<jule::Str>(_3713_bytes);;
}



inline jule::Str _1b9c426d2_ToStr(jule::Slice<jule::U8> _4210_bytes) {
	if ((_4210_bytes.len() == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _479_s = jule::Slice<jule::U8>::alloc(0LL, _4210_bytes.len(), 0);;
	jule::I32 _489_i = 0LL;;
	while ((_489_i < _4210_bytes.len())) {
		{
			jule::U8 _509_b = _4210_bytes[_489_i];;
			if ((_509_b == '\\')) {
				(_479_s).append(_1b9c43161_strEsqSeq(_4210_bytes, &(_489_i)));;
			} else {
				jule::I32 _5413_r = 0;;
				jule::I32 _5416_size = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _23d10b4ea_DecodeRune(_4210_bytes.slice(_489_i));
					_5413_r = __jule_assign_result.__jule_result_arg0;
					_5416_size = __jule_assign_result.__jule_result_arg1;
				});
				_489_i+=_5416_size;
				_479_s=_23d10c95d_AppendRune(_479_s, _5413_r);
			};
		}
	_iter_next_1c81a0956:;
	}
	_iter_end_1c81a0956:;;
	return static_cast<jule::Str>(_479_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1b9c4299b_tryBtoaCommonEsq(jule::Slice<jule::U8> _6221_bytes) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_6221_bytes.len() < 2LL) || (_6221_bytes[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _6221_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1c81a40ec:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1c81a4174:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1c81a41eb:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1c81a4273:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1c81a42ea:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1c81a4372:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1c81a43e9:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1c81a4471:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1c81a44e8:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1c81a4570:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1c81a3ea9:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1b9c42cdc_runeFromEsqSeq(jule::Slice<jule::U8> _9219_bytes, jule::I32* _9239_i) {
	jule::U8 _935_b = 0;;
	jule::Bool _938_ok = false;;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1b9c4299b_tryBtoaCommonEsq(_9219_bytes.slice((*(_9239_i))));
		_935_b = __jule_assign_result.__jule_result_arg0;
		_938_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_9239_i)))++;
	if (_938_ok) {
		((*(_9239_i)))++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_935_b));;
	};
	{
		auto &_match_expr{ _9219_bytes[(*(_9239_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1c81a82aa:;
			{
				;
				jule::I32 _1039_r = static_cast<jule::I32>(({
					auto except = _1ec660991_ParseUint(static_cast<jule::Str>(_9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 5LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:103:19"));
					(except.result);
				}));;
				(*(_9239_i))+=5LL;
				return _1039_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1c81a8b07:;
			{
				;
				jule::I32 _1089_r = static_cast<jule::I32>(({
					auto except = _1ec660991_ParseUint(static_cast<jule::Str>(_9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 9LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:108:19"));
					(except.result);
				}));;
				(*(_9239_i))+=9LL;
				return _1089_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1c81a8b6d:;
			{
				;
				jule::Slice<jule::U8> _1139_seq = _9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 3LL));;
				(*(_9239_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1ec660991_ParseUint(static_cast<jule::Str>(_1139_seq), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:115:18"));
					(except.result);
				})));;
			}
		}
		else {
			_case_begin_1c81a7672:;
			{
				;
				jule::Slice<jule::U8> _1189_seq = _9219_bytes.slice((*(_9239_i)), ((*(_9239_i)) + 3LL));;
				(*(_9239_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1ec660991_ParseUint(static_cast<jule::Str>(_1189_seq.slice(1LL)), 8LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:120:18"));
					(except.result);
				})));;
			}
		}
		_match_end_1c81a761c:;
	};
}



inline jule::Slice<jule::U8> _1b9c43161_strEsqSeq(jule::Slice<jule::U8> _12414_bytes, jule::I32* _12434_i) {
	jule::I32 _1255_r = _1b9c42cdc_runeFromEsqSeq(_12414_bytes, _12434_i);;
	if ((_1255_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1255_r))});;
	};
	return static_cast<jule::Slice<jule::U8>>(jule::Str::from_rune(_1255_r));;
}



inline jule::I32 _1b9d74b77_findFormatPrefix(jule::Slice<jule::U8>* _1122_bytes, jule::I32* _1138_start) {
	jule::I32 _129_i = (*(_1138_start));;
	while ((_129_i < (*(_1122_bytes)).len())) {
		{
			jule::I32 _149_r = 0;;
			jule::I32 _1412_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _23d10b4ea_DecodeRune((*(_1122_bytes)).slice(_129_i));
				_149_r = __jule_assign_result.__jule_result_arg0;
				_1412_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_149_r == '{')) {
				return _129_i;;
			};
			_129_i+=_1412_size;
		}
	_iter_next_1c81d80cb:;
	}
	_iter_end_1c81d80cb:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1b9d7500c_getFormatRange(jule::I32* _2824_i, jule::Slice<jule::U8>* _2837_bytes) {
	jule::I32 _295_start = (*(_2824_i));;
	jule::I32 _309_braces = 0LL;;
	while (((*(_2824_i)) < (*(_2837_bytes)).len())) {
		{
			jule::I32 _329_r = 0;;
			jule::I32 _3212_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _23d10b4ea_DecodeRune((*(_2837_bytes)).slice((*(_2824_i))));
				_329_r = __jule_assign_result.__jule_result_arg0;
				_3212_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2824_i))+=_3212_size;
			{
				auto &_match_expr{ _329_r };
				
				if (_match_expr == '{') {
					_case_begin_1c81da584:;
					{
						(_309_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1c81da661:;
					{
						(_309_braces)--;
						if ((_309_braces == 0LL)) {
							return (*(_2837_bytes)).slice(_295_start, (*(_2824_i)));;
						};
					}
				}
				_match_end_1c81d9eac:;
			};
		}
	_iter_next_1c81d97e7:;
	}
	_iter_end_1c81d97e7:;;
	return nullptr;;
}



inline void _1b9d752e8_FmtByDefault(_23d16295d_StrBuilder* _4822_buf, jule::Any* _4840_arg) {
	if (((*(_4840_arg)) == nullptr)) {
		_23d16b604_WriteStr(_4822_buf, jule::Str::lit("<nil>", 5));
		return;;
	};
	{
		auto &_match_expr{ (*(_4840_arg)) };
		
		if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1c81dbab3:;
			{
				_23d16b604_WriteStr(_4822_buf, _1ec65aa79_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>((*(_4840_arg)).cast<jule::F32>(&__jule_any_type131))), 'g', -1LL, 32LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1c81dc29a:;
			{
				_23d16b604_WriteStr(_4822_buf, _1ec65aa79_FmtFloat(static_cast<jule::F64>((*(_4840_arg)).cast<jule::F64>(&__jule_any_type5)), 'g', -1LL, 64LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1c81dbc5b:;
			{
				_23d16b604_WriteStr(_4822_buf, _1ec6724ec_FmtInt(static_cast<jule::I64>((*(_4840_arg)).cast<jule::I8>(&__jule_any_type132)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1c81dbcc2:;
			{
				_23d16b604_WriteStr(_4822_buf, _1ec6724ec_FmtInt(static_cast<jule::I64>((*(_4840_arg)).cast<jule::I16>(&__jule_any_type133)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1c81dc3cc:;
			{
				_23d16b604_WriteStr(_4822_buf, _1ec6724ec_FmtInt(static_cast<jule::I64>((*(_4840_arg)).cast<jule::I32>(&__jule_any_type6)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1c81dc443:;
			{
				_23d16b604_WriteStr(_4822_buf, _1ec6724ec_FmtInt(static_cast<jule::I64>((*(_4840_arg)).cast<jule::I64>(&__jule_any_type1)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1c81dc4a9:;
			{
				_23d16b604_WriteStr(_4822_buf, _1ec672134_FmtUint(static_cast<jule::U64>((*(_4840_arg)).cast<jule::U8>(&__jule_any_type130)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1c81dc520:;
			{
				_23d16b604_WriteStr(_4822_buf, _1ec672134_FmtUint(static_cast<jule::U64>((*(_4840_arg)).cast<jule::U16>(&__jule_any_type134)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1c81dc586:;
			{
				_23d16b604_WriteStr(_4822_buf, _1ec672134_FmtUint(static_cast<jule::U64>((*(_4840_arg)).cast<jule::U32>(&__jule_any_type135)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1c81dc5ec:;
			{
				_23d16b604_WriteStr(_4822_buf, _1ec672134_FmtUint(static_cast<jule::U64>((*(_4840_arg)).cast<jule::U64>(&__jule_any_type2)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1c81dc663:;
			{
				_23d16b604_WriteStr(_4822_buf, (*(_4840_arg)).cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1c81dc6c9:;
			{
				if ((*(_4840_arg)).cast<jule::Bool>(&__jule_any_type3)) {
					_23d16b604_WriteStr(_4822_buf, jule::Str::lit("true", 4));
				} else {
					_23d16b604_WriteStr(_4822_buf, jule::Str::lit("false", 5));
				};
			}
		}
		else {
			_case_begin_1c81db5a7:;
			{
				_23d16b604_WriteStr(_4822_buf, jule::to_str((*(_4840_arg))));
			}
		}
		_match_end_1c81da980:;
	};
}



inline void _1b9d75716_applyFmtByDefault(_23d16295d_StrBuilder* _8727_buf, jule::I32* _8749_j, jule::Slice<jule::Any> _8757_args) {
	jule::Any _885_arg = _8757_args[(*(_8749_j))];;
	((*(_8749_j)))++;
	_1b9d752e8_FmtByDefault(_8727_buf, &(_885_arg));
}



inline void _1b9d75b67_applyFmt(jule::Slice<jule::U8>* _9518_fmt, _23d16295d_StrBuilder* _9536_buf, jule::I32* _9558_j, jule::Slice<jule::Any> _9566_args) {
	if (((*(_9518_fmt)).len() == 2LL)) {
		_1b9d75716_applyFmtByDefault(_9536_buf, _9558_j, _9566_args);
		return;;
	};
	if (((((((*(_9518_fmt)).len() == 4LL) && ((*(_9518_fmt))[0LL] == '{')) && ((*(_9518_fmt))[1LL] == '{')) && ((*(_9518_fmt))[2LL] == '}')) && ((*(_9518_fmt))[3LL] == '}'))) {
		_23d16b604_WriteStr(_9536_buf, jule::Str::lit("{}", 2));
		return;;
	};
	_23d16b34b_Write(_9536_buf, (*(_9518_fmt)));
}



inline jule::Str _1b9d75ea8_Format(jule::Str* _11412_fmt, jule::Slice<jule::Any> _11422_args) {
	if ((_11422_args.len() == 0LL)) {
		return (*(_11412_fmt));;
	};
	jule::Slice<jule::U8> _1189_fmtBytes = _23bca314e_Stobs(_11412_fmt);;
	_23d16295d_StrBuilder _1199_buf = static__23d162c7c_New(static_cast<jule::I32>((*(_11412_fmt)).len()));;
	jule::I32 _1209_j = 0LL;;
	jule::I32 _1219_last = 0LL;;
	jule::I32 _1229_i = _1b9d74b77_findFormatPrefix(&(_1189_fmtBytes), &(_1219_last));;
	for (; (_1229_i != -1LL); _1229_i=static_cast<jule::I32>(_1b9d74b77_findFormatPrefix(&(_1189_fmtBytes), &(_1229_i)))) {
		{
			_23d16b34b_Write(&_1199_buf, _1189_fmtBytes.slice(_1219_last, _1229_i));
			jule::Slice<jule::U8> _12513_format = _1b9d7500c_getFormatRange(&(_1229_i), &(_1189_fmtBytes));;
			if ((_12513_format == nullptr)) {
				goto _iter_next_1c81e83c7;
			};
			_1b9d75b67_applyFmt(&(_12513_format), &(_1199_buf), &(_1209_j), _11422_args);
			if ((_1209_j >= _11422_args.len())) {
				_23d16b34b_Write(&_1199_buf, _1189_fmtBytes.slice(_1229_i));
				_1219_last=static_cast<jule::I32>(_1189_fmtBytes.len());
				goto _iter_end_1c81e83c7;
			};
			_1219_last=_1229_i;
		}
	_iter_next_1c81e83c7:;
	}
	_iter_end_1c81e83c7:;;
	if ((_1219_last < _1189_fmtBytes.len())) {
		_23d16b34b_Write(&_1199_buf, _1189_fmtBytes.slice(_1219_last));
	};
	return _23d16bdeb_Str(&_1199_buf);;
}



inline jule::Str _1b9d78032_Format(jule::Str _3011_fmt, jule::Slice<jule::Any> _3021_args) {
	return _1b9d75ea8_Format(&(_3011_fmt), _3021_args);;
}



inline jule::Bool _1b9b5444b_parameterUsesGenerics(jule::Ptr<_1b9b511c3_ParamIns>* _38431_p, jule::Slice<jule::Ptr<_1b9b259c2_GenericDecl>>* _38446_generics) {
	if (_1b9b4cdb2_IsSelf((*((*(_38431_p))))._field_Decl.ptr())) {
		return false;;
	};
	return _1b9ca8935_kindUsesGenerics(&((*((*(_38431_p))))._field_Kind), _38446_generics);;
}



inline jule::Ptr<_1b9c953a0_TypeSymbol> _1b9b56b9b_buildType(jule::Ptr<_1b9b187b7_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1b9c953a0_TypeSymbol>(_1b9c953a0_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_1b9c5e15a_Value> _1b9b56ea9_buildExpr(jule::Ptr<_1b9b1caeb_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1b9c5e15a_Value>(_1b9c5e15a_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_1b9c8c3db_TypeAlias> _1b9b57273_buildTypeAlias(jule::Ptr<_1b9b3012a_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1b9c8c3db_TypeAlias>(_1b9c8c3db_TypeAlias{._field_Scope=(*(_11223_decl))._field_Scope, ._field_Public=(*(_11223_decl))._field_Public, ._field_Binded=(*(_11223_decl))._field_Binded, ._field_Token=(*(_11223_decl))._field_Token, ._field_Ident=(*(_11223_decl))._field_Ident, ._field_Kind=_1b9b56b9b_buildType((*(_11223_decl))._field_Kind), });;
}



inline jule::Ptr<_1b9b364b6_Field> _1b9b575b4_buildField(jule::Ptr<_1b9b33903_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1b9b364b6_Field>(_1b9b364b6_Field{._field_Token=(*(_12319_decl))._field_Token, ._field_Public=(*(_12319_decl))._field_Public, ._field_Mutable=(*(_12319_decl))._field_Mutable, ._field_Ident=(*(_12319_decl))._field_Ident, ._field_Kind=_1b9b56b9b_buildType((*(_12319_decl))._field_Kind), ._field_Default=(*(_12319_decl))._field_Default});;
}



inline jule::Slice<jule::Ptr<_1b9b364b6_Field>> _1b9b5787d_buildFields(jule::Slice<jule::Ptr<_1b9b33903_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_1b9b364b6_Field>> _1359_fields = jule::Slice<jule::Ptr<_1b9b364b6_Field>>::alloc(0LL, (*(_13421_decls)).len());;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c98e8bd6:;
		if (it != expr_end) {
			jule::Ptr<_1b9b33903_FieldDecl> _13617_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1b9b364b6_Field>> &__jule_push_dest = _1359_fields; __jule_push_dest.push(_1b9b575b4_buildField(_13617_decl)); };
			}
			_iter_next_1c98e8bd6:;
			++it;
			goto _iter_begin_1c98e8bd6;
		}
		_iter_end_1c98e8bd6:;
	};
	return _1359_fields;;
}



inline jule::Ptr<_1b9b393a9_Struct> _1b9b57b47_buildStruct(jule::Ptr<_1b9b342e9_StructDecl> _14220_decl) {
	return jule::new_ptr<_1b9b393a9_Struct>(_1b9b393a9_Struct{._field_Token=(*(_14220_decl))._field_Token, ._field_Ident=(*(_14220_decl))._field_Ident, ._field_Fields=_1b9b5787d_buildFields(&((*(_14220_decl))._field_Fields)), ._field_Public=(*(_14220_decl))._field_Public, ._field_Binded=(*(_14220_decl))._field_Binded, ._field_Directives=(*(_14220_decl))._field_Directives, ._field_Generics=(*(_14220_decl))._field_Generics, });;
}



inline jule::Ptr<_1b9b4c796_Param> _1b9b57e11_buildParam(jule::Ptr<_1b9b29025_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1b9b4c796_Param>(_1b9b4c796_Param{._field_Token=(*(_15419_decl))._field_Token, ._field_Mutable=(*(_15419_decl))._field_Mutable, ._field_Variadic=(*(_15419_decl))._field_Variadic, ._field_Reference=(*(_15419_decl))._field_Reference, ._field_Kind=_1b9b56b9b_buildType((*(_15419_decl))._field_Kind), ._field_Ident=(*(_15419_decl))._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1b9b4c796_Param>> _1b9b582a7_buildParams(jule::Slice<jule::Ptr<_1b9b29025_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_1b9b4c796_Param>> _1669_params = jule::Slice<jule::Ptr<_1b9b4c796_Param>>::alloc(0LL, (*(_16521_decls)).len());;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c98ecadb:;
		if (it != expr_end) {
			jule::Ptr<_1b9b29025_ParamDecl> _16717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1b9b4c796_Param>> &__jule_push_dest = _1669_params; __jule_push_dest.push(_1b9b57e11_buildParam(_16717_decl)); };
			}
			_iter_next_1c98ecadb:;
			++it;
			goto _iter_begin_1c98ecadb;
		}
		_iter_end_1c98ecadb:;
	};
	return _1669_params;;
}



inline jule::Ptr<_1b9b4c015_RetType> _1b9b58571_buildRetType(jule::Ptr<_1b9b1b6aa_RetTypeDecl> _17321_decl) {
	if ((((*(_17321_decl))._field_Idents == nullptr) && ((*(_17321_decl))._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1b9b4c015_RetType>(_1b9b4c015_RetType{._field_Kind=_1b9b56b9b_buildType((*(_17321_decl))._field_Kind), ._field_Idents=(*(_17321_decl))._field_Idents});;
}



inline jule::Ptr<_1b9b4e26a_Fn> _1b9b5883a_buildFunc(jule::Ptr<_1b9b2a477_FnDecl> _18318_decl) {
	return jule::new_ptr<_1b9b4e26a_Fn>(_1b9b4e26a_Fn{._field_Token=(*(_18318_decl))._field_Token, ._field_Global=(*(_18318_decl))._field_Global, ._field_Unsafety=(*(_18318_decl))._field_Unsafety, ._field_Public=(*(_18318_decl))._field_Public, ._field_Binded=(*(_18318_decl))._field_Binded, ._field_Statically=(*(_18318_decl))._field_Statically, ._field_Exceptional=(*(_18318_decl))._field_Exceptional, ._field_Ident=(*(_18318_decl))._field_Ident, ._field_Directives=(*(_18318_decl))._field_Directives, ._field_Scope=(*(_18318_decl))._field_Scope, ._field_Generics=(*(_18318_decl))._field_Generics, ._field_Result=_1b9b58571_buildRetType((*(_18318_decl))._field_Result), ._field_Params=_1b9b582a7_buildParams(&((*(_18318_decl))._field_Params)), });;
}



inline jule::Slice<jule::Ptr<_1b9b4e26a_Fn>> _1b9b58b04_buildMethods(jule::Slice<jule::Ptr<_1b9b2a477_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_1b9b4e26a_Fn>> _2029_methods = jule::Slice<jule::Ptr<_1b9b4e26a_Fn>>::alloc(0LL, (*(_20122_decls)).len());;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9902a36:;
		if (it != expr_end) {
			jule::Ptr<_1b9b2a477_FnDecl> _20317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1b9b4e26a_Fn>> &__jule_push_dest = _2029_methods; __jule_push_dest.push(_1b9b5883a_buildFunc(_20317_decl)); };
			}
			_iter_next_1c9902a36:;
			++it;
			goto _iter_begin_1c9902a36;
		}
		_iter_end_1c9902a36:;
	};
	return _2029_methods;;
}



inline jule::Slice<jule::Ptr<_1b9c953a0_TypeSymbol>> _1b9b58dbd_buildTraitInherits(jule::Slice<jule::Ptr<_1b9b187b7_TypeDecl>>* _20928_inherits) {
	jule::Slice<jule::Ptr<_1b9c953a0_TypeSymbol>> _2109_symbols = jule::Slice<jule::Ptr<_1b9c953a0_TypeSymbol>>::alloc(0LL, (*(_20928_inherits)).len());;
	{
		auto expr = _20928_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9903718:;
		if (it != expr_end) {
			jule::Ptr<_1b9b187b7_TypeDecl> _21117_it = *it;
			{
				{ jule::Slice<jule::Ptr<_1b9c953a0_TypeSymbol>> &__jule_push_dest = _2109_symbols; __jule_push_dest.push(_1b9b56b9b_buildType(_21117_it)); };
			}
			_iter_next_1c9903718:;
			++it;
			goto _iter_begin_1c9903718;
		}
		_iter_end_1c9903718:;
	};
	return _2109_symbols;;
}



inline jule::Ptr<_1b9b62514_Trait> _1b9b59187_buildTrait(jule::Ptr<_1b9b34a36_TraitDecl> _21719_decl) {
	return jule::new_ptr<_1b9b62514_Trait>(_1b9b62514_Trait{._field_Token=(*(_21719_decl))._field_Token, ._field_Ident=(*(_21719_decl))._field_Ident, ._field_Public=(*(_21719_decl))._field_Public, ._field_Inherits=_1b9b58dbd_buildTraitInherits(&((*(_21719_decl))._field_Inherits)), ._field_Methods=_1b9b58b04_buildMethods(&((*(_21719_decl))._field_Methods)), });;
}



inline jule::Ptr<_1b9b64192_EnumItem> _1b9b59451_buildEnumItem(jule::Ptr<_1b9b31add_EnumItemDecl> _22722_decl) {
	return jule::new_ptr<_1b9b64192_EnumItem>(_1b9b64192_EnumItem{._field_Token=(*(_22722_decl))._field_Token, ._field_Ident=(*(_22722_decl))._field_Ident, ._field_Value=_1b9b56ea9_buildExpr((*(_22722_decl))._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1b9b64192_EnumItem>> _1b9b5971a_buildEnumItems(jule::Slice<jule::Ptr<_1b9b31add_EnumItemDecl>>* _23524_decls) {
	jule::Slice<jule::Ptr<_1b9b64192_EnumItem>> _2369_items = jule::Slice<jule::Ptr<_1b9b64192_EnumItem>>::alloc(0LL, (*(_23524_decls)).len());;
	{
		auto expr = _23524_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9906b7d:;
		if (it != expr_end) {
			jule::Ptr<_1b9b31add_EnumItemDecl> _23717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1b9b64192_EnumItem>> &__jule_push_dest = _2369_items; __jule_push_dest.push(_1b9b59451_buildEnumItem(_23717_decl)); };
			}
			_iter_next_1c9906b7d:;
			++it;
			goto _iter_begin_1c9906b7d;
		}
		_iter_end_1c9906b7d:;
	};
	return _2369_items;;
}



inline jule::Ptr<_1b9b64c0e_Enum> _1b9b59b8d_buildEnum(jule::Ptr<_1b9b3269e_EnumDecl> _24318_decl) {
	return jule::new_ptr<_1b9b64c0e_Enum>(_1b9b64c0e_Enum{._field_Token=(*(_24318_decl))._field_Token, ._field_Public=(*(_24318_decl))._field_Public, ._field_Ident=(*(_24318_decl))._field_Ident, ._field_Kind=_1b9b56b9b_buildType((*(_24318_decl))._field_Kind), ._field_Items=_1b9b5971a_buildEnumItems(&((*(_24318_decl))._field_Items))});;
}



inline jule::Ptr<_1b9b65d42_TypeEnumItem> _1b9b59e57_buildTypeEnumItem(jule::Ptr<_1b9b32ec9_TypeEnumItemDecl> _25326_decl) {
	return jule::new_ptr<_1b9b65d42_TypeEnumItem>(_1b9b65d42_TypeEnumItem{._field_Token=(*(_25326_decl))._field_Token, ._field_Ident=(*(_25326_decl))._field_Ident, ._field_Kind=_1b9b56b9b_buildType((*(_25326_decl))._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1b9b65d42_TypeEnumItem>> _1b9b5a221_buildTypeEnumItems(jule::Slice<jule::Ptr<_1b9b32ec9_TypeEnumItemDecl>>* _26128_decls) {
	jule::Slice<jule::Ptr<_1b9b65d42_TypeEnumItem>> _2629_items = jule::Slice<jule::Ptr<_1b9b65d42_TypeEnumItem>>::alloc(0LL, (*(_26128_decls)).len());;
	{
		auto expr = _26128_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9909cc4:;
		if (it != expr_end) {
			jule::Ptr<_1b9b32ec9_TypeEnumItemDecl> _26317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1b9b65d42_TypeEnumItem>> &__jule_push_dest = _2629_items; __jule_push_dest.push(_1b9b59e57_buildTypeEnumItem(_26317_decl)); };
			}
			_iter_next_1c9909cc4:;
			++it;
			goto _iter_begin_1c9909cc4;
		}
		_iter_end_1c9909cc4:;
	};
	return _2629_items;;
}



inline jule::Ptr<_1b9b66419_TypeEnum> _1b9b5a4da_buildTypeEnum(jule::Ptr<_1b9b33639_TypeEnumDecl> _26922_decl) {
	return jule::new_ptr<_1b9b66419_TypeEnum>(_1b9b66419_TypeEnum{._field_Token=(*(_26922_decl))._field_Token, ._field_Public=(*(_26922_decl))._field_Public, ._field_Ident=(*(_26922_decl))._field_Ident, ._field_Items=_1b9b5a221_buildTypeEnumItems(&((*(_26922_decl))._field_Items))});;
}



inline jule::Ptr<_1b9c09611_Var> _1b9b5a7a4_buildVar(jule::Ptr<_1b9b2b555_VarDecl> _27817_decl) {
	return jule::new_ptr<_1b9c09611_Var>(_1b9c09611_Var{._field_Token=(*(_27817_decl))._field_Token, ._field_Ident=(*(_27817_decl))._field_Ident, ._field_Binded=(*(_27817_decl))._field_Binded, ._field_Constant=(*(_27817_decl))._field_Constant, ._field_Mutable=(*(_27817_decl))._field_Mutable, ._field_Public=(*(_27817_decl))._field_Public, ._field_Statically=(*(_27817_decl))._field_Statically, ._field_Reference=(*(_27817_decl))._field_Reference, ._field_Kind=_1b9b56b9b_buildType((*(_27817_decl))._field_Kind), ._field_Value=_1b9b56ea9_buildExpr((*(_27817_decl))._field_Expr), ._field_Refers=static__1b9b55617_new(), ._field_Directives=(*(_27817_decl))._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_1b9c09611_Var>> _1b9b5aa6d_buildVars(jule::Slice<jule::Ptr<_1b9b2b555_VarDecl>> _29518_decls) {
	jule::Slice<jule::Ptr<_1b9c09611_Var>> _2969_vars = jule::Slice<jule::Ptr<_1b9c09611_Var>>::alloc(0LL, _29518_decls.len());;
	{
		auto expr = &(_29518_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c990e4c1:;
		if (it != expr_end) {
			jule::Ptr<_1b9b2b555_VarDecl> _29717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1b9c09611_Var>> &__jule_push_dest = _2969_vars; __jule_push_dest.push(_1b9b5a7a4_buildVar(_29717_decl)); };
			}
			_iter_next_1c990e4c1:;
			++it;
			goto _iter_begin_1c990e4c1;
		}
		_iter_end_1c990e4c1:;
	};
	return _2969_vars;;
}



inline jule::Ptr<_1b9b8988d_Impl> _1b9b5ad37_buildImpl(jule::Ptr<_1b9b35196_Impl> _30318_decl) {
	return jule::new_ptr<_1b9b8988d_Impl>(_1b9b8988d_Impl{._field_Base=(*(_30318_decl))._field_Base, ._field_Dest=(*(_30318_decl))._field_Dest, ._field_Methods=_1b9b58b04_buildMethods(&((*(_30318_decl))._field_Methods)), ._field_Statics=_1b9b5aa6d_buildVars((*(_30318_decl))._field_Statics)});;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b8537d_buildAsComptimeMethodData(jule::Ptr<_1b9b5216e_FnIns>* _141635_f) {
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>((*(_141635_f)), 1)}), });;
}



inline jule::Ptr<_1b9bb1200_ImportInfo> _1b9b8568b_findComptimePackage(jule::Ptr<_1b9bd23b9_Sema>* _142429_s) {
	return _1b9bd285e_SelectPackage((*(_142429_s)).ptr(), jule::Fn<jule::Bool(jule::Ptr<_1b9bb1200_ImportInfo>)>([=](jule::Ptr<_1b9bb1200_ImportInfo> _142528_pkg) mutable -> jule::Bool {
		return (*(_142528_pkg))._field_LinkPath.equal("std::comptime", 13);;
	}));;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b85a10_buildComptimeTypeInfoData(jule::Ptr<_1b9bd23b9_Sema>* _143035_s, jule::Ptr<_1b9c8d1cd_TypeKind>* _143050_t) {
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(_1b9bd1c04_pushComptimeTypeInfo((*((*(_143035_s))))._field_meta.ptr(), _143050_t), 15)}), });;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9b85c41_buildComptimeValue(jule::Ptr<_1b9c5d016_Data>* _143828_d) {
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(jule::new_ptr<_1b9b7e795_comptimeValue>(_1b9b7e795_comptimeValue{._field_data=(*(_143828_d))}), 16)}), });;
}



inline jule::Bool _1b9b88c11_matchConstraint(jule::Str* _14221_c, jule::Ptr<_1b9c8d1cd_TypeKind>* _14234_g) {
	{
		auto &_match_expr{ (*(_14221_c)) };
		
		if (_match_expr == jule::Str::lit("signed", 6)) {
			_case_begin_1c9bd02a8:;
			{
				jule::Ptr<_1b9c95ca7_Prim> _1459_prim = _1b9c9082e_Prim((*(_14234_g)).ptr());;
				if ((_1459_prim == nullptr)) {
					return false;;
				};
				return _1ec6829b3_IsSigNum((*(_1459_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("unsigned", 8)) {
			_case_begin_1c9bd5ed4:;
			{
				jule::Ptr<_1b9c95ca7_Prim> _1519_prim = _1b9c9082e_Prim((*(_14234_g)).ptr());;
				if ((_1519_prim == nullptr)) {
					return false;;
				};
				return _1ec681d25_IsUnsigInt((*(_1519_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("float", 5)) {
			_case_begin_1c9bd604a:;
			{
				jule::Ptr<_1b9c95ca7_Prim> _1579_prim = _1b9c9082e_Prim((*(_14234_g)).ptr());;
				if ((_1579_prim == nullptr)) {
					return false;;
				};
				return _1ec682430_IsFloat((*(_1579_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("numeric", 7)) {
			_case_begin_1c9bd61b0:;
			{
				jule::Ptr<_1b9c95ca7_Prim> _1639_prim = _1b9c9082e_Prim((*(_14234_g)).ptr());;
				if ((_1639_prim == nullptr)) {
					return false;;
				};
				return _1ec6826e9_IsNum((*(_1639_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("mutable", 7)) {
			_case_begin_1c9bd6226:;
			{
				return _1b9c8ea5e_Mutable((*(_14234_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("immutable", 9)) {
			_case_begin_1c9bd628c:;
			{
				return (!(_1b9c8ea5e_Mutable((*(_14234_g)).ptr())));;
			}
		}
		else if (_match_expr == jule::Str::lit("comparable", 10)) {
			_case_begin_1c9bd6303:;
			{
				return _1b9c8e7c8_Comparable((*(_14234_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("ordered", 7)) {
			_case_begin_1c9bd6413:;
			{
				return _1b9c8ece5_Ordered((*(_14234_g)).ptr());;
			}
		}
		else {
			_case_begin_1c9bd4da1:;
			{
				return false;;
			}
		}
		_match_end_1c9bd4d4b:;
	};
}



inline jule::Bool _1b9b8901e_isBuiltinConstraint(jule::Str* _18125_ident) {
	{
		auto expr = &(_1b9b8700b_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9bdb638:;
		if (it != expr_end) {
			jule::Str *_18212_bc = it;
			{
				if (((*(_18125_ident)) == (*(_18212_bc)))) {
					return true;;
				};
			}
			_iter_next_1c9bdb638:;
			++it;
			goto _iter_begin_1c9bdb638;
		}
		_iter_end_1c9bdb638:;
	};
	return false;;
}



inline jule::Ptr<_1b9b970c6_scopeChecker> _1b9b8ba9e_newScopeCheckerBase(jule::Ptr<_1b9bd23b9_Sema>* _5829_s, jule::Ptr<_1b9b5216e_FnIns> _5843_owner) {
	return jule::new_ptr<_1b9b970c6_scopeChecker>(_1b9b970c6_scopeChecker{._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_1b9c57ce1_SymbolTable>(), });;
}



inline jule::Ptr<_1b9b970c6_scopeChecker> _1b9b8be67_newScopeChecker(jule::Ptr<_1b9bd23b9_Sema>* _6625_s, jule::Ptr<_1b9b5216e_FnIns> _6639_owner) {
	jule::Ptr<_1b9b970c6_scopeChecker> _679_base = _1b9b8ba9e_newScopeCheckerBase(_6625_s, _6639_owner);;
	(*(_679_base))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1b9b95b30_scopeLabel>>>(nullptr);
	(*(_679_base))._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1b9b961b3_scopeGoto>>>(nullptr);
	return _679_base;;
}



inline jule::Ptr<_1b9b95b30_scopeLabel> _1b9b8c2db_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_1b9b970c6_scopeChecker> _7637_scope) {
	jule::Ptr<_1b9b95b30_scopeLabel> _779_label = _1b9b9aad0_findLabelScope(_7637_scope, _7621_ident);;
	while ((_779_label == nullptr)) {
		{
			if ((((*(_7637_scope))._field_parent == nullptr) || ((*(_7637_scope))._field_owner != nullptr))) {
				return nullptr;;
			};
			_7637_scope=(*(_7637_scope))._field_parent;
			_779_label=_1b9b9aad0_findLabelScope(_7637_scope, _7621_ident);
		}
	_iter_next_1c9c04c17:;
	}
	_iter_end_1c9c04c17:;;
	return _779_label;;
}



inline jule::Bool _1b9b8c6a4_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1b9b8ecc2_Scope>* _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1c9c066a8:;
			{
				jule::Ptr<_1b9b43506_FnCallExprModel> _939_fcem = _9021_Model.cast_ptr<_1b9b43506_FnCallExprModel>(&__jule_any_type34);;
				if (((*(_939_fcem))._field_Except == (*(_9034_sc)))) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1c9c0671e:;
			{
				jule::Ptr<_1b9c5d016_Data> _989_d = _9021_Model.cast_ptr<_1b9c5d016_Data>(&__jule_any_type24);;
				return _1b9b8c6a4_modelIsGotoScope((*(_989_d))._field_Model, _9034_sc);;
			}
		}
		_match_end_1c9c06653:;
	};
	return false;;
}



inline jule::Bool _1b9b8ca28_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_1b9b8ecc2_Scope>* _10434_sc) {
	{
		auto &_match_expr{ (*(_10421_stmt)) };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1c9c08413:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1b9b8ecc2_Scope>(&__jule_any_type22) == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1c9c08479:;
			{
				return ((*((*(_10421_stmt)).cast_ptr<_1b9b90c07_InfIter>(&__jule_any_type36)))._field_Scope == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1c9c08501:;
			{
				jule::Ptr<_1b9b91b09_RangeIter> _1119_it = (*(_10421_stmt)).cast_ptr<_1b9b91b09_RangeIter>(&__jule_any_type40);;
				return (((*(_1119_it))._field_Scope == (*(_10434_sc))) || _1b9b8c6a4_modelIsGotoScope((*((*(_1119_it))._field_Expr))._field_Model, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1c9c08578:;
			{
				jule::Ptr<_1b9b911ad_WhileIter> _1149_it = (*(_10421_stmt)).cast_ptr<_1b9b911ad_WhileIter>(&__jule_any_type38);;
				return ((((*(_1149_it))._field_Scope == (*(_10434_sc))) || _1b9b8c6a4_modelIsGotoScope((*(_1149_it))._field_Expr, _10434_sc)) || _1b9b8c6a4_modelIsGotoScope((*(_1149_it))._field_Next, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1c9c08798:;
			{
				jule::Ptr<_1b9b93e08_Match> _1199_m = (*(_10421_stmt)).cast_ptr<_1b9b93e08_Match>(&__jule_any_type47);;
				{
					auto expr = &((*(_1199_m))._field_Cases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c9c0b0c5:;
					if (it != expr_end) {
						jule::Ptr<_1b9b94a41_Case> *_12016_c = it;
						{
							if (((*((*(_12016_c))))._field_Scope == (*(_10434_sc)))) {
								return true;;
							};
							{
								auto expr = &((*((*(_12016_c))))._field_Exprs);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c9c0d34c:;
								if (it != expr_end) {
									jule::Ptr<_1b9c5d016_Data> *_12420_expr = it;
									{
										if (_1b9b8c6a4_modelIsGotoScope((*((*(_12420_expr))))._field_Model, _10434_sc)) {
											return true;;
										};
									}
									_iter_next_1c9c0d34c:;
									++it;
									goto _iter_begin_1c9c0d34c;
								}
								_iter_end_1c9c0d34c:;
							};
						}
						_iter_next_1c9c0b0c5:;
						++it;
						goto _iter_begin_1c9c0b0c5;
					}
					_iter_end_1c9c0b0c5:;
				};
				return (((*(_1199_m))._field_Default != nullptr) && ((*((*(_1199_m))._field_Default))._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1c9c08820:;
			{
				jule::Ptr<_1b9b9090a_Conditional> _1329_c = (*(_10421_stmt)).cast_ptr<_1b9b9090a_Conditional>(&__jule_any_type35);;
				{
					auto expr = &((*(_1329_c))._field_Elifs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c9c0c901:;
					if (it != expr_end) {
						jule::Ptr<_1b9b901e0_If> *_13316_elif = it;
						{
							if ((((*((*(_13316_elif))))._field_Scope == (*(_10434_sc))) || _1b9b8c6a4_modelIsGotoScope((*((*(_13316_elif))))._field_Expr, _10434_sc))) {
								return true;;
							};
						}
						_iter_next_1c9c0c901:;
						++it;
						goto _iter_begin_1c9c0c901;
					}
					_iter_end_1c9c0c901:;
				};
				return (((*(_1329_c))._field_Default != nullptr) && ((*((*(_1329_c))._field_Default))._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1c9c08897:;
			{
				jule::Ptr<_1b9c5d016_Data> _1409_d = (*(_10421_stmt)).cast_ptr<_1b9c5d016_Data>(&__jule_any_type24);;
				return _1b9b8c6a4_modelIsGotoScope((*(_1409_d))._field_Model, _10434_sc);;
			}
		}
		else {
			_case_begin_1c9becb77:;
			{
				return false;;
			}
		}
		_match_end_1c9c080a0:;
	};
}



inline jule::I32 _1b9b8cd9c_countMatchType(jule::Ptr<_1b9b93e08_Match>* _14720_m, jule::Ptr<_1b9c8d1cd_TypeKind>* _14732_t) {
	jule::I32 _1489_n = 0LL;;
	jule::Str _1495_kind = _1b9c8d596_Str((*(_14732_t)).ptr());;
	_julec_label_1c9c17510:;
	{
		auto expr = &((*((*(_14720_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9c171e1:;
		if (it != expr_end) {
			jule::Ptr<_1b9b94a41_Case> *_15112_c = it;
			{
				if (((*(_15112_c)) == nullptr)) {
					goto _iter_next_1c9c171e1;
				};
				{
					auto expr = &((*((*(_15112_c))))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c9c18346:;
					if (it != expr_end) {
						jule::Ptr<_1b9c5d016_Data> *_15616_expr = it;
						{
							if (((*(_15616_expr)) == nullptr)) {
								goto _iter_end_1c9c171e1;
							};
							if ((_1495_kind == _1b9c8d596_Str((*((*(_15616_expr))))._field_Model.cast_ptr<_1b9c8d1cd_TypeKind>(&__jule_any_type83).ptr()))) {
								(_1489_n)++;
							};
						}
						_iter_next_1c9c18346:;
						++it;
						goto _iter_begin_1c9c18346;
					}
					_iter_end_1c9c18346:;
				};
			}
			_iter_next_1c9c171e1:;
			++it;
			goto _iter_begin_1c9c171e1;
		}
		_iter_end_1c9c171e1:;
	};
	return _1489_n;;
}



inline jule::Slice<jule::Ptr<_1b9c5d016_Data>> _1b9b8d166_getDatasFromTupleData(jule::Ptr<_1b9c5d016_Data>* _17131_d) {
	if ((_1b9c92655_Tup((*((*(_17131_d))))._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_17131_d))))._field_Model };
			
			if (_match_expr.type == &__jule_any_type81) {
				_case_begin_1c9c1c812:;
				{
					return (*((*((*(_17131_d))))._field_Model.cast_ptr<_1b9b46c24_TupleExprModel>(&__jule_any_type81)))._field_Datas;;
				}
			}
			else {
				_case_begin_1c9c1a2c1:;
				{
					jule::Ptr<_1b9c9ad9a_Tuple> _17717_t = _1b9c92655_Tup((*((*(_17131_d))))._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_1b9c5d016_Data>> _17817_r = jule::Slice<jule::Ptr<_1b9c5d016_Data>>::alloc(0LL, (*(_17717_t))._field_Types.len());;
					{
						auto expr = &((*(_17717_t))._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c9c1b1c3:;
						if (it != expr_end) {
							jule::Ptr<_1b9c8d1cd_TypeKind> _17925_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_1b9c5d016_Data>> &__jule_push_dest = _17817_r; __jule_push_dest.push(jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_17925_kind, ._field_Mutable=true, })); };
							}
							_iter_next_1c9c1b1c3:;
							++it;
							goto _iter_begin_1c9c1b1c3;
						}
						_iter_end_1c9c1b1c3:;
					};
					return _17817_r;;
				}
			}
			_match_end_1c9c1a26b:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1b9c5d016_Data>>::make({(*(_17131_d))});;
	};
}



inline jule::Bool _1b9b8da29_checkMut(jule::Ptr<_1b9bd23b9_Sema>* _20618_s, jule::Ptr<_1b9c5d016_Data>* _20629_left, jule::Ptr<_1b9c5d016_Data> _20646_right, jule::Ptr<_1b9b032eb_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*((*(_20629_left))))._field_Mutable))) {
			_case_begin_1c9c20815:;
			{
				_1b9bd5004_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("cannot assign to immutable storage", 34), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!((*(_20646_right))._field_Mutable))) && _1b9c8ea5e_Mutable((*(_20646_right))._field_Kind.ptr()))) {
			_case_begin_1c9c2088c:;
			{
				if ((((*(_20660_op))._field_Id != static_cast<jule::U32>(71LLU)) && (_1b9c91da2_Struct((*(_20646_right))._field_Kind.ptr()) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1b9bd5004_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_20646_right))._field_Kind.ptr()), &__jule_any_type4)}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c9c20749:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1c9c2068e:;
	};
}



inline jule::Bool _1b9b8e013_checkAssign(jule::Ptr<_1b9bd23b9_Sema>* _22521_s, jule::Ptr<_1b9c5d016_Data>* _22536_left, jule::Ptr<_1b9c5d016_Data> _22553_right, jule::Ptr<_1b9b032eb_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b9b5216e_FnIns> _2265_f = _1b9c91b1b_Fn((*((*(_22536_left))))._field_Kind.ptr());;
	if ((((_2265_f != nullptr) && ((*(_2265_f))._field_Decl != nullptr)) && (*((*(_2265_f))._field_Decl))._field_Global)) {
		_1b9bd5004_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("type is not support assignment", 30), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1b9c5d8da_IsConst((*(_22536_left)).ptr())) {
			_case_begin_1c9c25d04:;
			{
				_1b9bd5004_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("constants is can't assign", 25), jule::Slice<jule::Any>());
				_1b9bd5367_pushSuggestion((*(_22521_s)).ptr(), jule::Str::lit("remove constant qualifer if you need to assign", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*((*(_22536_left))))._field_Lvalue))) {
			_case_begin_1c9c25d7b:;
			{
				_1b9bd5004_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("invalid expression: expected lvalue for assignment", 50), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1b9b8da29_checkMut(_22521_s, _22536_left, _22553_right, _22567_op)))) {
			_case_begin_1c9c25e03:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c9c25c38:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1c9c253a8:;
	};
}



inline jule::Bool _1b9b8e2cc_isValidAstStForNextSt(jule::Any* _24731_n) {
	{
		auto &_match_expr{ (*(_24731_n)) };
		
		if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1c9c26145:;
			{
				return (!((*((*(_24731_n)).cast_ptr<_1b9b27265_AssignSt>(&__jule_any_type58)))._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1c9c28323:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c9c26596:;
			{
				return false;;
			}
		}
		_match_end_1c9c27e6b:;
	};
}



inline jule::Bool _1b9b8e596_isValidStForNextSt(jule::Any* _25824_st) {
	{
		auto &_match_expr{ (*(_25824_st)) };
		
		if (_match_expr.type == &__jule_any_type43 || _match_expr.type == &__jule_any_type44 || _match_expr.type == &__jule_any_type46) {
			_case_begin_1c9c291ae:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1c9c29225:;
			{
				{
					auto &_match_expr{ (*((*(_25824_st)).cast_ptr<_1b9c5d016_Data>(&__jule_any_type24)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type34) {
						_case_begin_1c9c2a413:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1c9c2a39c:;
						{
							return false;;
						}
					}
					_match_end_1c9c2a347:;
				};
			}
		}
		else {
			_case_begin_1c9c28e8e:;
			{
				return false;;
			}
		}
		_match_end_1c9c28e39:;
	};
}



inline jule::Bool _1b9b8e860_stmtIsDef(jule::Any* _27615_st) {
	{
		auto &_match_expr{ (*(_27615_st)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c9c2a567:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c9c29a61:;
			{
				return false;;
			}
		}
		_match_end_1c9c29a0b:;
	};
}



inline jule::U32 _1b9ba9193_removeEqFromOp(jule::U32 _213819_op) {
	{
		auto &_match_expr{ _213819_op };
		
		if (_match_expr == static_cast<jule::U32>(40LLU)) {
			_case_begin_1c9c2abe9:;
			{
				return static_cast<jule::U32>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(41LLU)) {
			_case_begin_1c9c2b612:;
			{
				return static_cast<jule::U32>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(42LLU)) {
			_case_begin_1c9c2b678:;
			{
				return static_cast<jule::U32>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_1c9c2b799:;
			{
				return static_cast<jule::U32>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1c9c2b810:;
			{
				return static_cast<jule::U32>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(45LLU)) {
			_case_begin_1c9c2b876:;
			{
				return static_cast<jule::U32>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(46LLU)) {
			_case_begin_1c9c2b8ed:;
			{
				return static_cast<jule::U32>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(47LLU)) {
			_case_begin_1c9c2b975:;
			{
				return static_cast<jule::U32>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(48LLU)) {
			_case_begin_1c9c2ba41:;
			{
				return static_cast<jule::U32>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(49LLU)) {
			_case_begin_1c9c2baa7:;
			{
				return static_cast<jule::U32>(66LLU);;
			}
		}
		else {
			_case_begin_1c9c2b326:;
			{
				return _213819_op;;
			}
		}
		_match_end_1c9c2b2c1:;
	};
}



inline jule::Ptr<_1b9c09611_Var> _1b9bad6d6_findVarInPackage(jule::Slice<jule::Ptr<_1b9c57ce1_SymbolTable>>* _4626_files, jule::Str* _4650_ident, jule::Bool _4662_binded) {
	{
		auto expr = _4626_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9a59b27:;
		if (it != expr_end) {
			jule::Ptr<_1b9c57ce1_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1b9c09611_Var> _4813_v = _1b9c586c6_FindVar(_4717_f.ptr(), (*(_4650_ident)), _4662_binded);;
				if ((_4813_v != nullptr)) {
					return _4813_v;;
				};
			}
			_iter_next_1c9a59b27:;
			++it;
			goto _iter_begin_1c9a59b27;
		}
		_iter_end_1c9a59b27:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b9c8c3db_TypeAlias> _1b9badb59_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1b9c57ce1_SymbolTable>>* _5832_files, jule::Str* _5856_ident, jule::Bool _5868_binded) {
	{
		auto expr = _5832_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9a5b013:;
		if (it != expr_end) {
			jule::Ptr<_1b9c57ce1_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1b9c8c3db_TypeAlias> _6013_ta = _1b9c58ac2_FindTypeAlias(_5917_f.ptr(), (*(_5856_ident)), _5868_binded);;
				if ((_6013_ta != nullptr)) {
					return _6013_ta;;
				};
			}
			_iter_next_1c9a5b013:;
			++it;
			goto _iter_begin_1c9a5b013;
		}
		_iter_end_1c9a5b013:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b9b393a9_Struct> _1b9bae088_findStructInPackage(jule::Slice<jule::Ptr<_1b9c57ce1_SymbolTable>>* _7029_files, jule::Str* _7053_ident, jule::Bool _7065_binded) {
	{
		auto expr = _7029_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9a5c3ee:;
		if (it != expr_end) {
			jule::Ptr<_1b9c57ce1_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1b9b393a9_Struct> _7213_s = _1b9c58ebd_FindStruct(_7117_f.ptr(), (*(_7053_ident)), _7065_binded);;
				if ((_7213_s != nullptr)) {
					return _7213_s;;
				};
			}
			_iter_next_1c9a5c3ee:;
			++it;
			goto _iter_begin_1c9a5c3ee;
		}
		_iter_end_1c9a5c3ee:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b9b4e26a_Fn> _1b9bae53e_findFnInPackage(jule::Slice<jule::Ptr<_1b9c57ce1_SymbolTable>>* _8225_files, jule::Str* _8249_ident, jule::Bool _8261_binded) {
	{
		auto expr = _8225_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9a5d7da:;
		if (it != expr_end) {
			jule::Ptr<_1b9c57ce1_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1b9b4e26a_Fn> _8413_f = _1b9c593b9_FindFn(_8317_file.ptr(), (*(_8249_ident)), _8261_binded);;
				if ((_8413_f != nullptr)) {
					return _8413_f;;
				};
			}
			_iter_next_1c9a5d7da:;
			++it;
			goto _iter_begin_1c9a5d7da;
		}
		_iter_end_1c9a5d7da:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b9b62514_Trait> _1b9bae880_findTraitInPackage(jule::Slice<jule::Ptr<_1b9c57ce1_SymbolTable>>* _9428_files, jule::Str* _9452_ident) {
	{
		auto expr = _9428_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9a5ddd4:;
		if (it != expr_end) {
			jule::Ptr<_1b9c57ce1_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1b9b62514_Trait> _9613_t = _1b9c5970a_FindTrait(_9517_f.ptr(), (*(_9452_ident)));;
				if ((_9613_t != nullptr)) {
					return _9613_t;;
				};
			}
			_iter_next_1c9a5ddd4:;
			++it;
			goto _iter_begin_1c9a5ddd4;
		}
		_iter_end_1c9a5ddd4:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b9b64c0e_Enum> _1b9baec04_findEnumInPackage(jule::Slice<jule::Ptr<_1b9c57ce1_SymbolTable>>* _10627_files, jule::Str* _10651_ident) {
	{
		auto expr = _10627_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9a60b94:;
		if (it != expr_end) {
			jule::Ptr<_1b9c57ce1_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1b9b64c0e_Enum> _10813_e = _1b9c59a4b_FindEnum(_10717_f.ptr(), (*(_10651_ident)));;
				if ((_10813_e != nullptr)) {
					return _10813_e;;
				};
			}
			_iter_next_1c9a60b94:;
			++it;
			goto _iter_begin_1c9a60b94;
		}
		_iter_end_1c9a60b94:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b9b66419_TypeEnum> _1b9bb0078_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1b9c57ce1_SymbolTable>>* _11831_files, jule::Str* _11855_ident) {
	{
		auto expr = _11831_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9a61d93:;
		if (it != expr_end) {
			jule::Ptr<_1b9c57ce1_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1b9b66419_TypeEnum> _12013_e = _1b9c59d8c_FindTypeEnum(_11917_f.ptr(), (*(_11855_ident)));;
				if ((_12013_e != nullptr)) {
					return _12013_e;;
				};
			}
			_iter_next_1c9a61d93:;
			++it;
			goto _iter_begin_1c9a61d93;
		}
		_iter_end_1c9a61d93:;
	};
	return nullptr;;
}



inline jule::Any _1b9bb05b7_defByIdentPackage(jule::Slice<jule::Ptr<_1b9c57ce1_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_binded) {
	{
		auto expr = _12927_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9a632d4:;
		if (it != expr_end) {
			jule::Ptr<_1b9c57ce1_SymbolTable> _13017_file = *it;
			{
				jule::Any _13113_def = _1b9c5ad5a_defByIdent(_13017_file.ptr(), _12951_ident, _12963_binded);;
				if ((_13113_def != nullptr)) {
					return _13113_def;;
				};
			}
			_iter_next_1c9a632d4:;
			++it;
			goto _iter_begin_1c9a632d4;
		}
		_iter_end_1c9a632d4:;
	};
	return nullptr;;
}



inline jule::Bool _1b9bb6601_isStdPackage(jule::Str* _35518_f, jule::Str _35526_p) {
	return _23d14ca9c_HasPrefix((*(_35518_f)), _23d16ec56_Join(jule::Slice<jule::Str>::make({_23d32248b_PathStdlib,_35526_p})));;
}



inline jule::Bool _1b9bcea59_isValidModelForRef(jule::Any* _1328_m) {
	{
		auto &_match_expr{ (*(_1328_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c9a73cc8:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1c9a73d3e:;
			{
				jule::Ptr<_1b9b46097_StructSubIdentExprModel> _1813_model = (*(_1328_m)).cast_ptr<_1b9b46097_StructSubIdentExprModel>(&__jule_any_type97);;
				return _1b9bcea59_isValidModelForRef(&((*((*(_1813_model))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1c9a73da5:;
			{
				jule::Ptr<_1b9b45706_TraitSubIdentExprModel> _2113_model = (*(_1328_m)).cast_ptr<_1b9b45706_TraitSubIdentExprModel>(&__jule_any_type96);;
				return _1b9bcea59_isValidModelForRef(&((*(_2113_model))._field_Expr));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1c9a73e2c:;
			{
				jule::Ptr<_1b9b41900_UnaryExprModel> _2413_unary = (*(_1328_m)).cast_ptr<_1b9b41900_UnaryExprModel>(&__jule_any_type110);;
				if (((*((*(_2413_unary))._field_Op))._field_Id != static_cast<jule::U32>(62LLU))) {
					return false;;
				};
				if ((_1b9c90d4b_Ptr((*((*(_2413_unary))._field_Expr))._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1b9c90ab5_Sptr((*((*(_2413_unary))._field_Expr))._field_Kind.ptr()) == nullptr)) {
					return false;;
				};
				return _1b9bcea59_isValidModelForRef(&((*((*(_2413_unary))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1c9a74119:;
			{
				jule::Ptr<_1b9b43d86_IndexingExprModel> _3813_indexing = (*(_1328_m)).cast_ptr<_1b9b43d86_IndexingExprModel>(&__jule_any_type45);;
				return _1b9bcea59_isValidModelForRef(&((*((*(_3813_indexing))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1c9a73c62:;
			{
				return false;;
			}
		}
		_match_end_1c9a73800:;
	};
}



inline _23d21115a_Log _1b9bd0087_compilerErr(jule::Ptr<_1b9b032eb_Token>* _4517_token, jule::Bool _4532_line, jule::Str _4544_fmt, jule::Slice<jule::Any> _4557_args) {
	_23d21115a_Log _469_log = _23d21115a_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*((*(_4517_token))))._field_Row, ._field_Column=(*((*(_4517_token))))._field_Column, ._field_Path=(*((*((*(_4517_token))))._field_File))._field_Path, ._field_Text=_23d2115bc_Logf(_4544_fmt, _4557_args), };;
	if (_4532_line) {
		_469_log._field_Line=_1b9b09a94_GetRow((*((*(_4517_token))))._field_File.ptr(), (*((*(_4517_token))))._field_Row);
	};
	return _469_log;;
}



inline jule::Bool _1b9bd040b_impIsLookupable(jule::Ptr<_1b9bb1200_ImportInfo>* _5921_i, jule::Str* _5938_ident) {
	if ((*((*(_5921_i))))._field_Binded) {
		return false;;
	};
	if ((!((*((*(_5921_i))))._field_ImportAll))) {
		if (((*((*(_5921_i))))._field_Selected.len() > 0LL)) {
			return _1b9bb3a82_existIdent((*(_5921_i)).ptr(), (*(_5938_ident)));;
		};
	};
	return (*((*(_5921_i))))._field_ImportAll;;
}



inline void _1b9bd06b4_appendRetVars(jule::Slice<jule::Ptr<_1b9c09611_Var>>* _7123_dest, jule::Ptr<_1b9b5216e_FnIns>* _7142_f) {
	if ((_1b9b4e6dd_IsVoid((*((*(_7142_f))))._field_Decl.ptr()) || ((*((*(_7142_f))))._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1b9c8d1cd_TypeKind>> _769_types = _1b9b5336d_Types((*(_7142_f)).ptr());;
	{
		auto expr = &((*((*((*((*(_7142_f))))._field_Decl))._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9a7e432:;
		if (it != expr_end) {
			jule::I32 _7710_i = it - expr->begin();
			jule::Ptr<_1b9b032eb_Token> _7717_ident = *it;
			{
				if ((_1b9b05c5a_IsIgnoreIdent((*(_7717_ident))._field_Kind) || _1b9b06024_IsAnonIdent((*(_7717_ident))._field_Kind))) {
					goto _iter_next_1c9a7e432;
				};
				{ jule::Slice<jule::Ptr<_1b9c09611_Var>> &__jule_push_dest = (*(_7123_dest)); __jule_push_dest.push(jule::new_ptr<_1b9c09611_Var>(_1b9c09611_Var{._field_Scope=(*((*(_7142_f))))._field_Scope, ._field_Token=_7717_ident, ._field_Ident=(*(_7717_ident))._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_1b9c953a0_TypeSymbol>(_1b9c953a0_TypeSymbol{._field_Kind=_769_types[_7710_i]}), ._field_Value=jule::new_ptr<_1b9c5e15a_Value>(_1b9c5e15a_Value{._field_Data=jule::new_ptr<_1b9c5d016_Data>()}), ._field_RetOrder=_7710_i, })); };
			}
			_iter_next_1c9a7e432:;
			++it;
			_7710_i++;
			goto _iter_begin_1c9a7e432;
		}
		_iter_end_1c9a7e432:;
	};
	if ((((*((*((*((*(_7142_f))))._field_Decl))._field_Result))._field_Idents.len() == 1LL) && ((*(_7123_dest)).len() == 1LL))) {
		(*((*(_7123_dest))[((*(_7123_dest)).len() - 1LL)]))._field_RetOrder=-1LL;
	};
}



inline void _1b9bd09a0_appendParamVars(jule::Slice<jule::Ptr<_1b9c09611_Var>>* _10125_dest, jule::Ptr<_1b9b5216e_FnIns>* _10144_f) {
	if (((*((*(_10144_f))))._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_10144_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9a83b1d:;
		if (it != expr_end) {
			jule::Ptr<_1b9b511c3_ParamIns> _10617_p = *it;
			{
				if ((_1b9b05c5a_IsIgnoreIdent((*((*(_10617_p))._field_Decl))._field_Ident) || _1b9b06024_IsAnonIdent((*((*(_10617_p))._field_Decl))._field_Ident))) {
					goto _iter_next_1c9a83b1d;
				};
				jule::Ptr<_1b9c09611_Var> _11113_v = jule::new_ptr<_1b9c09611_Var>(_1b9c09611_Var{._field_Scope=(*((*(_10144_f))))._field_Scope, ._field_Token=(*((*(_10617_p))._field_Decl))._field_Token, ._field_Ident=(*((*(_10617_p))._field_Decl))._field_Ident, ._field_Mutable=(*((*(_10617_p))._field_Decl))._field_Mutable, ._field_Used=true, ._field_Reference=(*((*(_10617_p))._field_Decl))._field_Reference, ._field_Kind=jule::new_ptr<_1b9c953a0_TypeSymbol>(), ._field_Value=jule::new_ptr<_1b9c5e15a_Value>(_1b9c5e15a_Value{._field_Data=jule::new_ptr<_1b9c5d016_Data>()}), });;
				{
					
					if (_1b9b4cdb2_IsSelf((*(_10617_p))._field_Decl.ptr())) {
						_case_begin_1c9a8868e:;
						{
							(*((*(_11113_v))._field_Kind))._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1b9c8cc27_Kind>((*((*(_10144_f))))._field_Owner, 0)});
							(*(_11113_v))._field_Reference=(!(_1b9b4d148_IsRef((*(_10617_p))._field_Decl.ptr())));
							if (_1b9b4d148_IsRef((*(_10617_p))._field_Decl.ptr())) {
								(*(_11113_v))._field_Ident=(*(_11113_v))._field_Ident.slice(1LL);
								(*((*((*(_11113_v))._field_Kind))._field_Kind))._field_Kind=jule::Trait<_1b9c8cc27_Kind>(jule::new_ptr<_1b9c997d3_Sptr>(_1b9c997d3_Sptr{._field_Elem=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_BindIdent=(*((*((*(_11113_v))._field_Kind))._field_Kind))._field_BindIdent, ._field_Kind=(*((*((*(_11113_v))._field_Kind))._field_Kind))._field_Kind})}), 21);
							};
						}
					}
					else if ((*((*(_10617_p))._field_Decl))._field_Variadic) {
						_case_begin_1c9a88161:;
						{
							(*((*(_11113_v))._field_Kind))._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1b9c8cc27_Kind>(jule::new_ptr<_1b9c9a2a6_Slc>(_1b9c9a2a6_Slc{._field_Elem=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_BindIdent=(*((*(_10617_p))._field_Kind))._field_BindIdent, ._field_Kind=(*((*(_10617_p))._field_Kind))._field_Kind})}), 22)});
						}
					}
					else {
						_case_begin_1c9a87d0e:;
						{
							(*((*(_11113_v))._field_Kind))._field_Kind=(*(_10617_p))._field_Kind;
						}
					}
					_match_end_1c9a87bdd:;
				};
				{ jule::Slice<jule::Ptr<_1b9c09611_Var>> &__jule_push_dest = (*(_10125_dest)); __jule_push_dest.push(_11113_v); };
			}
			_iter_next_1c9a83b1d:;
			++it;
			goto _iter_begin_1c9a83b1d;
		}
		_iter_end_1c9a83b1d:;
	};
}



inline void _1b9bd0c8b_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1b9c8c3db_TypeAlias>>* _16134_dest, jule::Ptr<_1b9b5216e_FnIns>* _16159_f) {
	jule::I32 _1629_size = (*((*(_16159_f))))._field_Generics.len();;
	if (((*((*((*(_16159_f))))._field_Decl))._field_Owner != nullptr)) {
		_1629_size+=(*((*((*((*(_16159_f))))._field_Decl))._field_Owner))._field_Generics.len();
	};
	if ((_1629_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_16159_f))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9a90e27:;
		if (it != expr_end) {
			jule::I32 _17110_i = it - expr->begin();
			jule::Ptr<_1b9c8b7e7_InsGeneric> _17117_g = *it;
			{
				jule::Ptr<_1b9b259c2_GenericDecl> _17213_decl = (*((*((*(_16159_f))))._field_Decl))._field_Generics[_17110_i];;
				{ jule::Slice<jule::Ptr<_1b9c8c3db_TypeAlias>> &__jule_push_dest = (*(_16134_dest)); __jule_push_dest.push(jule::new_ptr<_1b9c8c3db_TypeAlias>(_1b9c8c3db_TypeAlias{._field_Scope=(*((*((*(_16159_f))))._field_Decl))._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*(_17213_decl))._field_Token, ._field_Ident=(*(_17213_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1b9c953a0_TypeSymbol>(_1b9c953a0_TypeSymbol{._field_Kind=(*(_17117_g))._field_Kind}), })); };
			}
			_iter_next_1c9a90e27:;
			++it;
			_17110_i++;
			goto _iter_begin_1c9a90e27;
		}
		_iter_end_1c9a90e27:;
	};
	if (((*((*((*(_16159_f))))._field_Decl))._field_Owner != nullptr)) {
		jule::Ptr<_1b9b3c137_StructIns> _18413_owner = (*((*(_16159_f))))._field_Owner;;
		{
			auto expr = &((*(_18413_owner))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c9a92a3e:;
			if (it != expr_end) {
				jule::I32 _18514_i = it - expr->begin();
				jule::Ptr<_1b9c8b7e7_InsGeneric> _18521_g = *it;
				{
					jule::Ptr<_1b9b259c2_GenericDecl> _18617_decl = (*((*(_18413_owner))._field_Decl))._field_Generics[_18514_i];;
					{ jule::Slice<jule::Ptr<_1b9c8c3db_TypeAlias>> &__jule_push_dest = (*(_16134_dest)); __jule_push_dest.push(jule::new_ptr<_1b9c8c3db_TypeAlias>(_1b9c8c3db_TypeAlias{._field_Scope=(*((*((*(_16159_f))))._field_Decl))._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*(_18617_decl))._field_Token, ._field_Ident=(*(_18617_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1b9c953a0_TypeSymbol>(_1b9c953a0_TypeSymbol{._field_Kind=(*(_18521_g))._field_Kind}), })); };
				}
				_iter_next_1c9a92a3e:;
				++it;
				_18514_i++;
				goto _iter_begin_1c9a92a3e;
			}
			_iter_end_1c9a92a3e:;
		};
	};
}



inline jule::Ptr<_1b9c57ce1_SymbolTable> _1b9bd1110_findFile(jule::Slice<jule::Ptr<_1b9c57ce1_SymbolTable>>* _19918_files, jule::Ptr<_1b9b08ab5_File>* _19942_handler) {
	{
		auto expr = _19918_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9a956ac:;
		if (it != expr_end) {
			jule::Ptr<_1b9c57ce1_SymbolTable> _20017_fl = *it;
			{
				if (((*(_20017_fl))._field_File == (*(_19942_handler)))) {
					return _20017_fl;;
				};
			}
			_iter_next_1c9a956ac:;
			++it;
			goto _iter_begin_1c9a956ac;
		}
		_iter_end_1c9a956ac:;
	};
	return nullptr;;
}



inline void _1b9bd15b6_pushSuggestion(_23d21115a_Log* _20830_log, jule::Str _20841_fmt, jule::Slice<jule::Any> _20854_args) {
	(*(_20830_log))._field_Suggestion=_23d2115bc_Logf(_20841_fmt, _20854_args);
}



inline void _1b9c078ea_pushImplemented(jule::Ptr<_1b9b62514_Trait> _285624_t, jule::Ptr<_1b9b393a9_Struct>* _285640_d) {
	_julec_label_1c9a9856c:;
	{
		
		if (((*(_285624_t))._field_Implemented.len() > 0LL)) {
			_case_begin_1c9a98c87:;
			{
				{
					auto expr = &((*(_285624_t))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c9a99a46:;
					if (it != expr_end) {
						jule::Ptr<_1b9b393a9_Struct> _286016_s = *it;
						{
							if ((_286016_s == (*(_285640_d)))) {
								goto _match_end_1c9a9878c;
							};
						}
						_iter_next_1c9a99a46:;
						++it;
						goto _iter_begin_1c9a99a46;
					}
					_iter_end_1c9a99a46:;
				};
				goto _case_begin_1c9a98803;
			}
		}
		else {
			_case_begin_1c9a98803:;
			{
				{ jule::Slice<jule::Ptr<_1b9b393a9_Struct>> &__jule_push_dest = (*(_285624_t))._field_Implemented; __jule_push_dest.push((*(_285640_d))); };
			}
		}
		_match_end_1c9a9878c:;
	};
	{
		auto expr = &((*(_285624_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9a9a492:;
		if (it != expr_end) {
			jule::Ptr<_1b9c953a0_TypeSymbol> _286917_i = *it;
			{
				_1b9c078ea_pushImplemented(_1b9c92138_Trait((*(_286917_i))._field_Kind.ptr()), _285640_d);
			}
			_iter_next_1c9a9a492:;
			++it;
			goto _iter_begin_1c9a9a492;
		}
		_iter_end_1c9a9a492:;
	};
}



inline void _1b9c07bd6_pushImplements(jule::Ptr<_1b9b393a9_Struct>* _287424_s, jule::Ptr<_1b9b62514_Trait> _287440_t) {
	_julec_label_1c9a9b52b:;
	{
		
		if (((*((*(_287424_s))))._field_Implements.len() > 0LL)) {
			_case_begin_1c9a9bc46:;
			{
				{
					auto expr = &((*((*(_287424_s))))._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c9a9ca05:;
					if (it != expr_end) {
						jule::Ptr<_1b9b62514_Trait> _287816_b = *it;
						{
							if ((_287816_b == _287440_t)) {
								goto _match_end_1c9a9b74b;
							};
						}
						_iter_next_1c9a9ca05:;
						++it;
						goto _iter_begin_1c9a9ca05;
					}
					_iter_end_1c9a9ca05:;
				};
				goto _case_begin_1c9a9b7b2;
			}
		}
		else {
			_case_begin_1c9a9b7b2:;
			{
				{ jule::Slice<jule::Ptr<_1b9b62514_Trait>> &__jule_push_dest = (*((*(_287424_s))))._field_Implements; __jule_push_dest.push(_287440_t); };
			}
		}
		_match_end_1c9a9b74b:;
	};
	{
		auto expr = &((*(_287440_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c9a9d451:;
		if (it != expr_end) {
			jule::Ptr<_1b9c953a0_TypeSymbol> _288717_i = *it;
			{
				_1b9c07bd6_pushImplements(_287424_s, _1b9c92138_Trait((*(_288717_i))._field_Kind.ptr()));
			}
			_iter_next_1c9a9d451:;
			++it;
			goto _iter_begin_1c9a9d451;
		}
		_iter_end_1c9a9d451:;
	};
}



inline jule::Bool _1b9c43903_traitHasReferenceReceiver(jule::Ptr<_1b9b62514_Trait>* _2731_t) {
	{
		auto expr = &((*((*(_2731_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca0e6e50:;
		if (it != expr_end) {
			jule::Ptr<_1b9b4e26a_Fn> *_2812_f = it;
			{
				if ((*((*(_2812_f))))._field_Statically) {
					goto _iter_next_1ca0e6e50;
				};
				jule::Ptr<_1b9b4c796_Param> _349_p = (*((*(_2812_f))))._field_Params[0LL];;
				if ((_1b9b4d148_IsRef(_349_p.ptr()) && _1b9b4cdb2_IsSelf(_349_p.ptr()))) {
					return true;;
				};
			}
			_iter_next_1ca0e6e50:;
			++it;
			goto _iter_begin_1ca0e6e50;
		}
		_iter_end_1ca0e6e50:;
	};
	return false;;
}



inline jule::Bool _1b9c43c88_floatAssignable(jule::Str* _4221_kind, jule::Ptr<_1b9c5d016_Data>* _4233_d) {
	jule::Str _435_value = _1ec65aa79_FmtFloat(static_cast<jule::F64>(_1ec6859a5_AsF64((*((*(_4233_d))))._field_Constant.ptr())), 'g', -1LL, 64LL);;
	return _1ec676248_CheckBitFloat(_435_value, static_cast<jule::I32>(_1ec674c2a_BitsizeOf((*(_4221_kind)))));;
}



inline jule::Bool _1b9c4410c_sigAssignable(jule::Str _4718_kind, jule::Ptr<_1b9c5d016_Data>* _4730_d) {
	jule::F64 _485_min = _1ec67b506_Min(_4718_kind);;
	jule::F64 _495_max = _1ec67b7c0_Max(_4718_kind);;
	{
		
		if (_1ec6877ed_IsF64((*((*(_4730_d))))._field_Constant.ptr())) {
			_case_begin_1ca0eaa58:;
			{
				jule::F64 _529_x = _1ec685202_ReadF64((*((*(_4730_d))))._field_Constant.ptr());;
				jule::F64 _539_i = 0;;
				jule::F64 _5312_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1ec630c08_Modf(_529_x);
					_539_i = __jule_assign_result.__jule_result_arg0;
					_5312_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_5312_frac != 0LL)) {
					return false;;
				};
				return ((_539_i >= _485_min) && (_539_i <= _495_max));;
			}
		}
		else if (_1ec68704a_IsU64((*((*(_4730_d))))._field_Constant.ptr())) {
			_case_begin_1ca0eaad0:;
			{
				jule::F64 _599_x = _1ec6859a5_AsF64((*((*(_4730_d))))._field_Constant.ptr());;
				if ((_599_x <= _495_max)) {
					return true;;
				};
			}
		}
		else if (_1ec686cb4_IsI64((*((*(_4730_d))))._field_Constant.ptr())) {
			_case_begin_1ca0eab57:;
			{
				jule::F64 _649_x = _1ec6859a5_AsF64((*((*(_4730_d))))._field_Constant.ptr());;
				return ((_485_min <= _649_x) && (_649_x <= _495_max));;
			}
		}
		_match_end_1ca0ea926:;
	};
	return false;;
}



inline jule::Bool _1b9c444c5_unsigAssignable(jule::Str _7020_kind, jule::Ptr<_1b9c5d016_Data>* _7032_d) {
	jule::F64 _715_max = _1ec67b7c0_Max(_7020_kind);;
	if (((*((*(_7032_d))))._field_IsRune && _7020_kind.equal("u8", 2))) {
		return _1b9c28a3c_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_1ec6846b8_ReadI64((*((*(_7032_d))))._field_Constant.ptr()))));;
	};
	{
		
		if (_1ec6877ed_IsF64((*((*(_7032_d))))._field_Constant.ptr())) {
			_case_begin_1ca100ec0:;
			{
				jule::F64 _789_x = _1ec685202_ReadF64((*((*(_7032_d))))._field_Constant.ptr());;
				if ((_789_x < 0LL)) {
					return false;;
				};
				jule::F64 _829_i = 0;;
				jule::F64 _8212_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1ec630c08_Modf(_789_x);
					_829_i = __jule_assign_result.__jule_result_arg0;
					_8212_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_8212_frac != 0LL)) {
					return false;;
				};
				return (_829_i <= _715_max);;
			}
		}
		else if (_1ec68704a_IsU64((*((*(_7032_d))))._field_Constant.ptr())) {
			_case_begin_1ca101036:;
			{
				jule::F64 _889_x = _1ec6859a5_AsF64((*((*(_7032_d))))._field_Constant.ptr());;
				if ((_889_x <= _715_max)) {
					return true;;
				};
			}
		}
		else if (_1ec686cb4_IsI64((*((*(_7032_d))))._field_Constant.ptr())) {
			_case_begin_1ca10109c:;
			{
				jule::F64 _939_x = _1ec6859a5_AsF64((*((*(_7032_d))))._field_Constant.ptr());;
				return ((0LL <= _939_x) && (_939_x <= _715_max));;
			}
		}
		_match_end_1ca100684:;
	};
	return false;;
}



inline jule::Bool _1b9c44849_intAssignable(jule::Str _9918_kind, jule::Ptr<_1b9c5d016_Data>* _9930_d) {
	{
		
		if (_1ec681a17_IsSigInt(_9918_kind)) {
			_case_begin_1ca105711:;
			{
				return _1b9c4410c_sigAssignable(_9918_kind, _9930_d);;
			}
		}
		else if (_1ec681d25_IsUnsigInt(_9918_kind)) {
			_case_begin_1ca105788:;
			{
				return _1b9c444c5_unsigAssignable(_9918_kind, _9930_d);;
			}
		}
		else {
			_case_begin_1ca10516c:;
			{
				return false;;
			}
		}
		_match_end_1ca10480e:;
	};
}



inline void _1b9c51009_checkMutRiskOfStructLit(jule::Ptr<_1b9bd23b9_Sema>* _94433_s, jule::Ptr<_1b9b422c4_StructLitExprModel>* _94444_m) {
	{
		auto expr = &((*((*(_94444_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca10606e:;
		if (it != expr_end) {
			jule::Ptr<_1b9b41e2d_StructArgExprModel> *_94512_arg = it;
			{
				if ((*((*((*((*(_94512_arg))))._field_Field))._field_Decl))._field_Mutable) {
					goto _iter_next_1ca10606e;
				};
				if (((!((*((*((*(_94512_arg))))._field_Expr))._field_Mutable)) && _1b9c8ea5e_Mutable((*((*((*(_94512_arg))))._field_Expr))._field_Kind.ptr()))) {
					_1b9bd5004_pushErr((*(_94433_s)).ptr(), (*((*(_94512_arg))))._field_Token, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*((*((*(_94512_arg))))._field_Expr))._field_Kind.ptr()), &__jule_any_type4)}));
				};
			}
			_iter_next_1ca10606e:;
			++it;
			goto _iter_begin_1ca10606e;
		}
		_iter_end_1ca10606e:;
	};
}



inline jule::Ptr<_1b9c8d1cd_TypeKind> _1b9c56a9d_lenKind(void) {
	return _1b9d7a6d8_primInt;;
}



inline jule::Bool _1b9c56e00_isGoodValueToInfer(jule::Ptr<_1b9c5d016_Data>* _140824_d) {
	return (!(_1b9c5d3bd_IsNil((*(_140824_d)).ptr())));;
}



inline jule::Ptr<_1b9b17bd4_Directive> _1b9c865e4_findDirective(jule::Slice<jule::Ptr<_1b9b17bd4_Directive>>* _419523_directives, jule::Str _419554_d) {
	{
		auto expr = _419523_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca234a0a:;
		if (it != expr_end) {
			jule::Ptr<_1b9b17bd4_Directive> _419617_dr = *it;
			{
				if (((*((*(_419617_dr))._field_Tag))._field_Kind == _419554_d)) {
					return _419617_dr;;
				};
			}
			_iter_next_1ca234a0a:;
			++it;
			goto _iter_begin_1ca234a0a;
		}
		_iter_end_1ca234a0a:;
	};
	return nullptr;;
}



inline jule::Any _1b9c869ac_findBuiltinsImport(jule::Str* _420424_ident, jule::Ptr<_1b9bb1200_ImportInfo> _420436_imp) {
	return _1b9d7de39_findPackageBuiltinDef(&((*(_420436_imp))._field_LinkPath), _420424_ident);;
}



inline void _1b9c86bdd_fitBitsize(jule::Ptr<_1b9c5d016_Data>* _421120_d) {
	jule::Ptr<_1b9c95ca7_Prim> _42129_prim = _1b9c9082e_Prim((*((*(_421120_d))))._field_Kind.ptr());;
	jule::I32 _42135_z = _1ec674c2a_BitsizeOf(_1b9c960e8_Str(_42129_prim.ptr()));;
	if ((_42135_z == 64LLU)) {
		return;;
	};
	jule::I32 _42189_k = 0LL;;
	{
		
		if (_1ec686cb4_IsI64((*((*(_421120_d))))._field_Constant.ptr())) {
			_case_begin_1ca2380b3:;
			{
				_42189_k=static_cast<jule::I32>(_1ec6767cb_BitsizeOfInt(static_cast<jule::I64>(_1ec6846b8_ReadI64((*((*(_421120_d))))._field_Constant.ptr()))));
				if ((_42189_k > _42135_z)) {
					(*((*((*(_421120_d))))._field_Constant))._field_Kind=_1ec67506b_IntFromBits(_42189_k);
					(*((*(_421120_d))))._field_Kind=(*((*(_1b9d7cb08_findBuiltinTypeAlias((*((*((*(_421120_d))))._field_Constant))._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1ec68704a_IsU64((*((*(_421120_d))))._field_Constant.ptr())) {
			_case_begin_1ca23813a:;
			{
				_42189_k=static_cast<jule::I32>(_1ec676a95_BitsizeOfUint(static_cast<jule::U64>(_1ec68494e_ReadU64((*((*(_421120_d))))._field_Constant.ptr()))));
				if ((_42189_k > _42135_z)) {
					(*((*((*(_421120_d))))._field_Constant))._field_Kind=_1ec675335_UintFromBits(_42189_k);
					(*((*(_421120_d))))._field_Kind=(*((*(_1b9d7cb08_findBuiltinTypeAlias((*((*((*(_421120_d))))._field_Constant))._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1ec6877ed_IsF64((*((*(_421120_d))))._field_Constant.ptr())) {
			_case_begin_1ca2381b2:;
			{
				_42189_k=static_cast<jule::I32>(_1ec676512_BitsizeOfFloat(static_cast<jule::F64>(_1ec685202_ReadF64((*((*(_421120_d))))._field_Constant.ptr()))));
				if ((_42189_k > _42135_z)) {
					(*((*((*(_421120_d))))._field_Constant))._field_Kind=_1ec6755ee_FloatFromBits(_42189_k);
					(*((*(_421120_d))))._field_Kind=(*((*(_1b9d7cb08_findBuiltinTypeAlias((*((*((*(_421120_d))))._field_Constant))._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		_match_end_1ca237ee7:;
	};
}



inline void _1b9c8701d_makeStructLitAlloc(jule::Ptr<_1b9c5d016_Data>* _424128_d, jule::Ptr<_1b9b422c4_StructLitExprModel>* _424143_lit) {
	(*((*(_424128_d))))._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(jule::new_ptr<_1b9c997d3_Sptr>(_1b9c997d3_Sptr{._field_Elem=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>((*((*(_424143_lit))))._field_Strct, 0)})}), 21)});
	(*((*(_424128_d))))._field_Model=jule::Any(jule::new_ptr<_1b9b425c1_AllocStructLitExprModel>(_1b9b425c1_AllocStructLitExprModel{._field_Lit=(*(_424143_lit))}), &__jule_any_type112);
}



inline jule::Ptr<_1b9c09611_Var> _1b9c87392_buildErrorVar(jule::Ptr<_1b9b8ecc2_Scope>* _425223_s, jule::Ptr<_1b9b21825_FnCallExpr>* _425239_fc) {
	return jule::new_ptr<_1b9c09611_Var>(_1b9c09611_Var{._field_Scope=(*(_425223_s)), ._field_Token=(*((*(_425239_fc))))._field_Token, ._field_Ident=jule::Str::lit("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=(*(_1b9d7cb08_findBuiltinTypeAlias(jule::Str::lit("any", 3))))._field_Kind, ._field_Value=jule::new_ptr<_1b9c5e15a_Value>(_1b9c5e15a_Value{._field_Data=jule::new_ptr<_1b9c5d016_Data>()}), });;
}



inline jule::Any _1b9c87716_findBuiltinsSema(jule::Str* _426722_ident, jule::Ptr<_1b9bd23b9_Sema> _426738_s) {
	{
		auto expr = &((*((*(_426738_s))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca243101:;
		if (it != expr_end) {
			jule::Ptr<_1b9bb1200_ImportInfo> _426817_imp = *it;
			{
				if (((*(_426817_imp))._field_ImportAll || _1b9bb3a82_existIdent(_426817_imp.ptr(), (*(_426722_ident))))) {
					jule::Any _427017_def = _1b9c869ac_findBuiltinsImport(_426722_ident, _426817_imp);;
					if ((_427017_def != nullptr)) {
						return _427017_def;;
					};
				};
			}
			_iter_next_1ca243101:;
			++it;
			goto _iter_begin_1ca243101;
		}
		_iter_end_1ca243101:;
	};
	jule::Str _42789_ppath = _1b9b09236_Dir((*((*(_426738_s))._field_file))._field_File.ptr());;
	if (_23d14ca9c_HasPrefix(_42789_ppath, _23d32248b_PathStdlib)) {
		(_42789_ppath).mut_slice(_23d32248b_PathStdlib.len());;
		_42789_ppath=(jule::Str::lit("std", 3) + _23d15417a_Replace(_42789_ppath, jule::Str::lit("/", 1), jule::Str::lit("::", 2), -1LL));
		return _1b9d7de39_findPackageBuiltinDef(&(_42789_ppath), _426722_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1b9c879d0_isOkForShifting(jule::Ptr<_1b9c5d016_Data>* _429225_d) {
	if (_1b9c5d8da_IsConst((*(_429225_d)).ptr())) {
		{
			
			if (_1ec686cb4_IsI64((*((*(_429225_d))))._field_Constant.ptr())) {
				_case_begin_1ca2466cb:;
				{
					return (_1ec6846b8_ReadI64((*((*(_429225_d))))._field_Constant.ptr()) >= 0LL);;
				}
			}
			else if (_1ec68704a_IsU64((*((*(_429225_d))))._field_Constant.ptr())) {
				_case_begin_1ca246753:;
				{
					return true;;
				}
			}
			else if (_1ec6877ed_IsF64((*((*(_429225_d))))._field_Constant.ptr())) {
				_case_begin_1ca2467ca:;
				{
					return (_1ec685202_ReadF64((*((*(_429225_d))))._field_Constant.ptr()) >= 0LL);;
				}
			}
			else {
				_case_begin_1ca2465ee:;
				{
					return false;;
				}
			}
			_match_end_1ca246544:;
		};
	};
	jule::Ptr<_1b9c95ca7_Prim> _43055_prim = _1b9c9082e_Prim((*((*(_429225_d))))._field_Kind.ptr());;
	return ((_43055_prim != nullptr) && _1ec6820de_IsInt(_1b9c960e8_Str(_43055_prim.ptr())));;
}



inline jule::Bool _1b9c87da9_isInstancedStruct(jule::Ptr<_1b9b3c137_StructIns> _430922_s) {
	return ((*((*(_430922_s))._field_Decl))._field_Generics.len() == (*(_430922_s))._field_Generics.len());;
}



inline jule::Bool _1b9c8822d_isPtrArithmeticCompatible(jule::Ptr<_1b9c5d016_Data>* _431335_l, jule::Ptr<_1b9c5d016_Data>* _431350_r) {
	jule::Ptr<_1b9c9d09a_Ptr> _43145_ptr = _1b9c90d4b_Ptr((*((*(_431350_r))))._field_Kind.ptr());;
	if ((_43145_ptr != nullptr)) {
		return _1b9c8d8d7_Equal((*(_1b9c90d4b_Ptr((*((*(_431335_l))))._field_Kind.ptr())))._field_Elem, (*(_43145_ptr))._field_Elem);;
	};
	if (_1b9c5d8da_IsConst((*(_431350_r)).ptr())) {
		return _1b9c44849_intAssignable(jule::Str::lit("int", 3), _431350_r);;
	};
	_1b9c44d33_typeCompatibilityChecker _43219_tcc = _1b9c44d33_typeCompatibilityChecker{._field_dest=_1b9d7a6d8_primInt, ._field_src=(*((*(_431350_r))))._field_Kind, };;
	return _1b9c464e9_check(&_43219_tcc);;
}



inline void _1b9c88519_applyCastKindModel(jule::Ptr<_1b9c5d016_Data>* _432828_d, jule::Ptr<_1b9c8d1cd_TypeKind>* _432843_t) {
	(*((*(_432828_d))))._field_Model=jule::Any(jule::new_ptr<_1b9b42b54_CastingExprModel>(_1b9b42b54_CastingExprModel{._field_Expr=(*((*(_432828_d))))._field_Model, ._field_Kind=(*(_432843_t)), ._field_ExprKind=(*((*(_432828_d))))._field_Kind}), &__jule_any_type92);
}



inline void _1b9c88805_applyCastKind(jule::Ptr<_1b9c5d016_Data>* _433623_d, jule::Ptr<_1b9c8d1cd_TypeKind>* _433638_t) {
	_1b9c88519_applyCastKindModel(_433623_d, _433638_t);
	(*((*(_433623_d))))._field_Kind=(*(_433638_t));
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c88a14_buildVoidData(void) {
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d793da_primVoid, });;
}



inline jule::Str _1b9c88ccd_checkDataForIntegerIndexing(jule::Ptr<_1b9c5d016_Data>* _434737_d) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_434737_d)) == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_1b9c9082e_Prim((*((*(_434737_d))))._field_Kind.ptr()) == nullptr)) {
			_case_begin_1ca25033e:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_1ec6820de_IsInt(_1b9c960e8_Str(_1b9c9082e_Prim((*((*(_434737_d))))._field_Kind.ptr()).ptr()))))) {
			_case_begin_1ca2503a5:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_1b9c5d8da_IsConst((*(_434737_d)).ptr())) {
			_case_begin_1ca25041b:;
			{
				if ((_1ec6859a5_AsF64((*((*(_434737_d))))._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str::lit("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_1b9c9082e_Prim((*((*(_434737_d))))._field_Kind.ptr()) == nullptr) || _1b9c5d8da_IsConst((*(_434737_d)).ptr()) || (_1ec674961_RealKindOf(_1b9c960e8_Str(_1b9c9082e_Prim((*((*(_434737_d))))._field_Kind.ptr()).ptr())) != _1ec674961_RealKindOf(jule::Str::lit("int", 3)))) {
			_case_begin_1ca250493:;
			{
				_1b9c88805_applyCastKind(_434737_d, &(_1b9d7a6d8_primInt));
			}
		}
		_match_end_1ca24eedc:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _1b9c890b9_applyCastModelByEnum(jule::Ptr<_1b9c5d016_Data>* _437230_d, jule::Ptr<_1b9b64c0e_Enum> _437244_e) {
	if ((_437244_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1b9c95ca7_Prim> _43765_p = _1b9c9082e_Prim((*((*(_437244_e))._field_Kind))._field_Kind.ptr());;
	if (_1b9c9923e_IsStr(_43765_p.ptr())) {
		return;;
	};
	_1b9c88519_applyCastKindModel(_437230_d, &((*((*(_437244_e))._field_Kind))._field_Kind));
}



inline void _1b9c893a5_castConstByType(jule::Str* _438321_t, jule::Ptr<_1b9c5d016_Data>* _438334_d) {
	{
		
		if (_1ec681a17_IsSigInt((*(_438321_t)))) {
			_case_begin_1ca255e27:;
			{
				{
					auto _match_expr{ _1ec674c2a_BitsizeOf(_1ec674961_RealKindOf((*(_438321_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1ca256a82:;
						{
							_1ec685c5d_SetI64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::I64>(_1ec685488_AsI64((*((*(_438334_d))))._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1ca256ae8:;
						{
							_1ec685c5d_SetI64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_1ec685488_AsI64((*((*(_438334_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1ca256b5e:;
						{
							_1ec685c5d_SetI64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_1ec685488_AsI64((*((*(_438334_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1ca256bc5:;
						{
							_1ec685c5d_SetI64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_1ec685488_AsI64((*((*(_438334_d))))._field_Constant.ptr())))));
						}
					}
					_match_end_1ca256741:;
				};
			}
		}
		else if (_1ec681d25_IsUnsigInt((*(_438321_t)))) {
			_case_begin_1ca255e9e:;
			{
				{
					auto _match_expr{ _1ec674c2a_BitsizeOf(_1ec674961_RealKindOf((*(_438321_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1ca25ab52:;
						{
							_1ec686016_SetU64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::U64>(_1ec68571e_AsU64((*((*(_438334_d))))._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1ca25abb8:;
						{
							_1ec686016_SetU64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_1ec68571e_AsU64((*((*(_438334_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1ca25ac2e:;
						{
							_1ec686016_SetU64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_1ec68571e_AsU64((*((*(_438334_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1ca25ac95:;
						{
							_1ec686016_SetU64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_1ec68571e_AsU64((*((*(_438334_d))))._field_Constant.ptr())))));
						}
					}
					_match_end_1ca2564cc:;
				};
			}
		}
		else if (_1ec682430_IsFloat((*(_438321_t)))) {
			_case_begin_1ca256026:;
			{
				{
					auto _match_expr{ _1ec674c2a_BitsizeOf(_1ec674961_RealKindOf((*(_438321_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1ca25ebbc:;
						{
							_1ec686830_SetF64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::F64>(_1ec6859a5_AsF64((*((*(_438334_d))))._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1ca25ec44:;
						{
							_1ec686830_SetF64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_1ec6859a5_AsF64((*((*(_438334_d))))._field_Constant.ptr())))));
						}
					}
					_match_end_1ca25b14c:;
				};
			}
		}
		_match_end_1ca255d06:;
	};
}



inline void _1b9c8984a_updateModelToGenericIns(jule::Any* _441733_m, jule::Ptr<_1b9b5216e_FnIns>* _441752_f) {
	{
		auto &_match_expr{ (*(_441733_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ca25dbee:;
			{
				(*(_441733_m))=jule::Any((*(_441752_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1ca260063:;
			{
				(*((*(_441733_m)).cast_ptr<_1b9b46097_StructSubIdentExprModel>(&__jule_any_type97)))._field_Method=(*(_441752_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1ca2600c9:;
			{
				(*((*(_441733_m)).cast_ptr<_1b9b4654d_StructStaticIdentExprModel>(&__jule_any_type95)))._field_Method=(*(_441752_f));
			}
		}
		_match_end_1ca25db99:;
	};
}



inline jule::Bool _1b9c89bbe_pushSubIdentFromExpr(jule::Any _442829_expr, jule::Ptr<_1b9b191be_SubIdentTypeDecl>* _442850_t) {
	{
		auto &_match_expr{ _442829_expr };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ca263550:;
			{
				jule::Ptr<_1b9b1e526_IdentExpr> _443113_e = _442829_expr.cast_ptr<_1b9b1e526_IdentExpr>(&__jule_any_type79);;
				{ jule::Slice<jule::Ptr<_1b9b18dc2_IdentTypeDecl>> &__jule_push_dest = (*((*(_442850_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1b9b18dc2_IdentTypeDecl>(_1b9b18dc2_IdentTypeDecl{._field_Token=(*(_443113_e))._field_Token, ._field_Ident=(*(_443113_e))._field_Ident, })); };
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1ca2635b6:;
			{
				jule::Ptr<_1b9b20c0e_SubIdentExpr> _443713_e = _442829_expr.cast_ptr<_1b9b20c0e_SubIdentExpr>(&__jule_any_type85);;
				if ((!(_1b9c89bbe_pushSubIdentFromExpr((*((*(_443713_e))._field_Expr))._field_Kind, _442850_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_1b9b18dc2_IdentTypeDecl>> &__jule_push_dest = (*((*(_442850_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1b9b18dc2_IdentTypeDecl>(_1b9b18dc2_IdentTypeDecl{._field_Token=(*(_443713_e))._field_Ident, ._field_Ident=(*((*(_443713_e))._field_Ident))._field_Kind, })); };
			}
		}
		else {
			_case_begin_1ca2634d9:;
			{
				return false;;
			}
		}
		_match_end_1ca262692:;
	};
	return true;;
}



inline jule::Str _1b9c89e88_constoa(jule::Ptr<_1ec682ce3_Const>* _445113_c) {
	{
		
		if (_1ec686cb4_IsI64((*(_445113_c)).ptr())) {
			_case_begin_1ca2673cd:;
			{
				return _1ec6724ec_FmtInt(static_cast<jule::I64>(_1ec6846b8_ReadI64((*(_445113_c)).ptr())), 10LL);;
			}
		}
		else if (_1ec68704a_IsU64((*(_445113_c)).ptr())) {
			_case_begin_1ca263b38:;
			{
				return _1ec672134_FmtUint(static_cast<jule::U64>(_1ec68494e_ReadU64((*(_445113_c)).ptr())), 10LL);;
			}
		}
		else {
			_case_begin_1ca26375e:;
			{
				return jule::Str();;
			}
		}
		_match_end_1ca267356:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9c8a30c_evalEnumStatic(jule::Ptr<_1b9b64c0e_Enum>* _446224_enm, jule::Ptr<_1b9b64192_EnumItem>* _446241_item) {
	jule::Ptr<_1b9c5d016_Data> _44639_d = jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>((*(_446224_enm)), 3)}), });;
	if (((*(_446241_item)) != nullptr)) {
		(*(_44639_d))._field_Constant=jule::new_ptr<_1ec682ce3_Const>((*((*((*((*((*(_446241_item))))._field_Value))._field_Data))._field_Constant)));
		(*(_44639_d))._field_Model=jule::Any((*(_44639_d))._field_Constant, &__jule_any_type19);
		_1b9c890b9_applyCastModelByEnum(&(_44639_d), (*(_446224_enm)));
	};
	return _44639_d;;
}



inline jule::Ptr<_1b9b422c4_StructLitExprModel> _1b9c8a5c6_isLitBased(jule::Any* _447920_m) {
	{
		auto &_match_expr{ (*(_447920_m)) };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1ca26a931:;
			{
				return (*(_447920_m)).cast_ptr<_1b9b422c4_StructLitExprModel>(&__jule_any_type94);;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1ca26a997:;
			{
				return (*((*(_447920_m)).cast_ptr<_1b9b425c1_AllocStructLitExprModel>(&__jule_any_type112)))._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1ca26aa0d:;
			{
				jule::Ptr<_1b9b46097_StructSubIdentExprModel> _448613_ssi = (*(_447920_m)).cast_ptr<_1b9b46097_StructSubIdentExprModel>(&__jule_any_type97);;
				return _1b9c8a5c6_isLitBased(&((*((*(_448613_ssi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1ca26aa74:;
			{
				jule::Ptr<_1b9b42b54_CastingExprModel> _448913_c = (*(_447920_m)).cast_ptr<_1b9b42b54_CastingExprModel>(&__jule_any_type92);;
				return _1b9c8a5c6_isLitBased(&((*(_448913_c))._field_Expr));;
			}
		}
		else {
			_case_begin_1ca26a766:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca269248:;
	};
}



inline void _1b9c8a8b2_makeImplicitDeref(jule::Ptr<_1b9c5d016_Data>* _449627_d, jule::Ptr<_1b9b032eb_Token> _449641_baseToken) {
	jule::Ptr<_1b9b41900_UnaryExprModel> _44979_unary = jule::new_ptr<_1b9b41900_UnaryExprModel>(_1b9b41900_UnaryExprModel{._field_Expr=jule::new_ptr<_1b9c5d016_Data>((*((*(_449627_d))))), ._field_Op=jule::new_ptr<_1b9b032eb_Token>((*(_449641_baseToken)))});;
	(*((*(_44979_unary))._field_Op))._field_Id=static_cast<jule::U32>(62LLU);
	(*((*(_44979_unary))._field_Op))._field_Kind=jule::Str::lit("*", 1);
	(*((*(_449627_d))))._field_Model=jule::Any(_44979_unary, &__jule_any_type110);
}



inline jule::Bool _1b9ca8935_kindUsesGenerics(jule::Ptr<_1b9c8d1cd_TypeKind>* _171026_k, jule::Slice<jule::Ptr<_1b9b259c2_GenericDecl>>* _171041_generics) {
	{
		auto expr = _171041_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca629c13:;
		if (it != expr_end) {
			jule::Ptr<_1b9b259c2_GenericDecl> *_171112_g = it;
			{
				if (static__1b9ca8506_exist(&((*((*(_171112_g))))._field_Ident), _171026_k)) {
					return true;;
				};
			}
			_iter_next_1ca629c13:;
			++it;
			goto _iter_begin_1ca629c13;
		}
		_iter_end_1ca629c13:;
	};
	return false;;
}



inline jule::Bool _1b9ca8ced_hasDirective(jule::Slice<jule::Ptr<_1b9b17bd4_Directive>>* _172022_directives, jule::Str _172053_tag) {
	{
		auto expr = _172022_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca62a0dc:;
		if (it != expr_end) {
			jule::Ptr<_1b9b17bd4_Directive> _172117_dr = *it;
			{
				if (((*((*(_172117_dr))._field_Tag))._field_Kind == _172053_tag)) {
					return true;;
				};
			}
			_iter_next_1ca62a0dc:;
			++it;
			goto _iter_begin_1ca62a0dc;
		}
		_iter_end_1ca62a0dc:;
	};
	return false;;
}



inline jule::Bool _1b9ca90b7_canGetPtr(jule::Ptr<_1b9c5d016_Data>* _172919_d) {
	{
		
		if ((!((*((*(_172919_d))))._field_Lvalue)) || _1b9c5d8da_IsConst((*(_172919_d)).ptr())) {
			_case_begin_1ca62bc9d:;
			{
				return false;;
			}
		}
		else if ((_1b9c91b1b_Fn((*((*(_172919_d))))._field_Kind.ptr()) != nullptr) || (_1b9c910d2_Enum((*((*(_172919_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca62bd25:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1ca62b099:;
			{
				return true;;
			}
		}
		_match_end_1ca62b2ca:;
	};
}



inline jule::Bool _1b9ca9408_isValidForSptrType(jule::Ptr<_1b9c8d1cd_TypeKind>* _174128_t) {
	jule::Ptr<_1b9b3c137_StructIns> _17429_s = _1b9c91da2_Struct((*(_174128_t)).ptr());;
	if ((((_17429_s != nullptr) && ((*(_17429_s))._field_Decl != nullptr)) && (*((*(_17429_s))._field_Decl))._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1b9ca96c2_isValidForRef(jule::Ptr<_1b9c8d1cd_TypeKind>* _175023_t) {
	return (_1b9c91b1b_Fn((*(_175023_t)).ptr()) == nullptr);;
}



inline jule::Bool _1b9ca998b_isBuiltinStrConvertable(jule::Ptr<_1b9c8d1cd_TypeKind>* _175333_t) {
	return ((((!(_1b9c8e542_Void((*(_175333_t)).ptr()))) && (_1b9c91b1b_Fn((*(_175333_t)).ptr()) == nullptr)) && (_1b9c92655_Tup((*(_175333_t)).ptr()) == nullptr)) && (!(_1b9c928db_comptime((*(_175333_t)).ptr()))));;
}



inline jule::Str _1b9ca9c55_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _175727_tokens) {
	jule::I32 _17589_n = 0LL;;
	{
		auto expr = _175727_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca630048:;
		if (it != expr_end) {
			jule::Ptr<_1b9b032eb_Token> *_175912_token = it;
			{
				_17589_n+=(*((*(_175912_token))))._field_Kind.len();
				_17589_n+=2LL;
			}
			_iter_next_1ca630048:;
			++it;
			goto _iter_begin_1ca630048;
		}
		_iter_end_1ca630048:;
	};
	_23d16295d_StrBuilder _17639_s = static__23d162c7c_New(_17589_n);;
	{
		auto expr = _175727_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca632468:;
		if (it != expr_end) {
			jule::I32 _17649_i = it - expr->begin();
			jule::Ptr<_1b9b032eb_Token> *_176412_token = it;
			{
				_23d16b604_WriteStr(&_17639_s, (*((*(_176412_token))))._field_Kind);
				if ((((*(_175727_tokens)).len() - _17649_i) > 1LL)) {
					_23d16b604_WriteStr(&_17639_s, jule::Str::lit("::", 2));
				};
			}
			_iter_next_1ca632468:;
			++it;
			_17649_i++;
			goto _iter_begin_1ca632468;
		}
		_iter_end_1ca632468:;
	};
	return _23d16bdeb_Str(&_17639_s);;
}



inline jule::Ptr<_1b9c95ca7_Prim> _1b9caa0eb_buildPrimType(jule::Str _177318_kind) {
	return jule::new_ptr<_1b9c95ca7_Prim>(_1b9c95ca7_Prim{._field_Kind=_177318_kind});;
}



inline void _1b9caa6a1_applyImplicitCast(jule::Ptr<_1b9c8d1cd_TypeKind>* _180127_dest, jule::Ptr<_1b9c5d016_Data>* _180149_d) {
	if (_1b9c8e2ab_IsNil((*((*(_180149_d))))._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1b9c95ca7_Prim> _18055_destPrim = _1b9c9082e_Prim((*(_180127_dest)).ptr());;
	jule::Ptr<_1b9c95ca7_Prim> _18065_prim = _1b9c9082e_Prim((*((*(_180149_d))))._field_Kind.ptr());;
	if ((_18055_destPrim != nullptr)) {
		if (_1b9c994c5_IsAny(_18055_destPrim.ptr())) {
			if (((_18065_prim == nullptr) || (!(_1b9c994c5_IsAny(_18065_prim.ptr()))))) {
				_1b9c88805_applyCastKind(_180149_d, _180127_dest);
			};
			return;;
		};
		if (((((((!(_1b9c8e025_Binded((*((*(_180149_d))))._field_Kind.ptr()))) && (!((*((*((*(_180149_d))))._field_Kind))._field_Variadic))) && (!((*((*(_180149_d))))._field_Lvalue))) && (!(_1b9c5d8da_IsConst((*(_180149_d)).ptr())))) && (_18065_prim != nullptr)) && _1ec6826e9_IsNum((*(_18065_prim))._field_Kind))) {
			_1b9c88805_applyCastKind(_180149_d, _180127_dest);
		};
		return;;
	};
	jule::Ptr<_1b9b62514_Trait> _18255_dt = _1b9c92138_Trait((*(_180127_dest)).ptr());;
	if ((_18255_dt != nullptr)) {
		jule::Ptr<_1b9b62514_Trait> _18279_bt = _1b9c92138_Trait((*((*(_180149_d))))._field_Kind.ptr());;
		if (((_18279_bt == nullptr) || (_18279_bt != _18255_dt))) {
			_1b9c88519_applyCastKindModel(_180149_d, _180127_dest);
			return;;
		};
	};
	if (((_1b9c91368_TypeEnum((*(_180127_dest)).ptr()) != nullptr) && (_1b9c91368_TypeEnum((*((*(_180149_d))))._field_Kind.ptr()) == nullptr))) {
		_1b9c88519_applyCastKindModel(_180149_d, _180127_dest);
		return;;
	};
}



inline jule::Bool _1b9caa96a_validTypeForXof(jule::Ptr<_1b9c8d1cd_TypeKind>* _184025_t) {
	return ((!(_1b9c8e542_Void((*(_184025_t)).ptr()))) && (_1b9c91b1b_Fn((*(_184025_t)).ptr()) == nullptr));;
}



inline __jule_tuple_x_1b9c57ce1_SymbolTable__jule_tuple_s_23d21115a_Log _1b9cada06_buildSymbols(jule::Ptr<_1b9b1692a_Ast>* _1622_ast, jule::Trait<_1b9bad2da_Importer>* _1638_importer, jule::Ptr<_1b9b5b3ed_symbolBuilder> _1662_owner) {
	__jule_tuple_x_1b9c57ce1_SymbolTable__jule_tuple_s_23d21115a_Log __jule_func_result;
	jule::Ptr<_1b9b5b3ed_symbolBuilder> _179_sb = jule::new_ptr<_1b9b5b3ed_symbolBuilder>(_1b9b5b3ed_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_ast=(*(_1622_ast)), });;
	_1b9b618dc_build(_179_sb);
	if (((*(_179_sb))._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_179_sb))._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = (*(_179_sb))._field_errors;
	return __jule_func_result;;
}



inline __jule_tuple_x_1b9bb4126_Package__jule_tuple_s_23d21115a_Log _1b9cade79_analyzePackage(jule::Slice<jule::Ptr<_1b9b1692a_Ast>>* _3024_files, jule::Trait<_1b9bad2da_Importer>* _3044_importer, jule::I32* _3065_flags) {
	__jule_tuple_x_1b9bb4126_Package__jule_tuple_s_23d21115a_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1b9c57ce1_SymbolTable>> _329_tables = jule::Slice<jule::Ptr<_1b9c57ce1_SymbolTable>>::alloc(0LL, (*(_3024_files)).len());;
	{
		auto expr = _3024_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca74b230:;
		if (it != expr_end) {
			jule::Ptr<_1b9b1692a_Ast> _3317_f = *it;
			{
				jule::Ptr<_1b9c57ce1_SymbolTable> _3413_table;;
				jule::Slice<_23d21115a_Log> _3424_errors;;
				({
					__jule_tuple_x_1b9c57ce1_SymbolTable__jule_tuple_s_23d21115a_Log __jule_assign_result = _1b9cada06_buildSymbols(&(_3317_f), _3044_importer, nullptr);
					_3413_table = __jule_assign_result.__jule_result_arg0;
					_3424_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_3424_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _3424_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_1b9c57ce1_SymbolTable>> &__jule_push_dest = _329_tables; __jule_push_dest.push(_3413_table); };
			}
			_iter_next_1ca74b230:;
			++it;
			goto _iter_begin_1ca74b230;
		}
		_iter_end_1ca74b230:;
	};
	jule::Ptr<_1b9bd23b9_Sema> _419_sema = jule::new_ptr<_1b9bd23b9_Sema>(_1b9bd23b9_Sema{._field_flags=(*(_3065_flags)), ._field_meta=jule::new_ptr<_1b9bd1792_commonSemaMeta>()});;
	_1b9c05b3a_check(_419_sema, &(_329_tables));
	if (((*(_419_sema))._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = (*(_419_sema))._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1b9bb4126_Package> _509_pkg = jule::new_ptr<_1b9bb4126_Package>(_1b9bb4126_Package{._field_Files=(*(_419_sema))._field_files});;
	__jule_func_result.__jule_result_arg0 = _509_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1b9bb4126_Package__jule_tuple_s_23d21115a_Log _1b9cae3a8_AnalyzePackage(jule::Slice<jule::Ptr<_1b9b1692a_Ast>> _7423_files, jule::Trait<_1b9bad2da_Importer> _7442_importer, jule::I32 _7462_flags) {
	__jule_tuple_x_1b9bb4126_Package__jule_tuple_s_23d21115a_Log __jule_func_result;
	if ((_7423_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1b9bb4126_Package> _789_package;;
	jule::Slice<_23d21115a_Log> _7822_logs;;
	({
		__jule_tuple_x_1b9bb4126_Package__jule_tuple_s_23d21115a_Log __jule_assign_result = _1b9cade79_analyzePackage(&(_7423_files), &(_7442_importer), &(_7462_flags));
		_789_package = __jule_assign_result.__jule_result_arg0;
		_7822_logs = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _789_package;
	__jule_func_result.__jule_result_arg1 = _7822_logs;
	return __jule_func_result;;
}



inline jule::Ptr<_1b9b5216e_FnIns> _1b9d789b1_findBuiltinFunc(jule::Str* _2521_ident) {
	{
		auto &_match_expr{ (*(_2521_ident)) };
		
		if (_match_expr == jule::Str::lit("out", 3)) {
			_case_begin_1ca754d93:;
			{
				static jule::Ptr<_1b9b5216e_FnIns> _2820_f = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>(_1b9d7eb1b_builtinCallerOut), });;
				return _2820_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("outln", 5)) {
			_case_begin_1ca75504c:;
			{
				static jule::Ptr<_1b9b5216e_FnIns> _3120_f = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>(_1b9d8004a_builtinCallerOutln), });;
				return _3120_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("new", 3)) {
			_case_begin_1ca7550c4:;
			{
				static jule::Ptr<_1b9b5216e_FnIns> _3420_f = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>(_1b9d80479_builtinCallerNew), });;
				return _3420_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("panic", 5)) {
			_case_begin_1ca75514b:;
			{
				static jule::Ptr<_1b9b5216e_FnIns> _3720_f = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>(_1b9d80a62_builtinCallerPanic), });;
				return _3720_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("make", 4)) {
			_case_begin_1ca7551c3:;
			{
				static jule::Ptr<_1b9b5216e_FnIns> _4020_f = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>(_1b9d80e91_builtinCallerMake), });;
				return _4020_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("append", 6)) {
			_case_begin_1ca755426:;
			{
				static jule::Ptr<_1b9b5216e_FnIns> _4320_f = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>(_1b9d813c0_builtinCallerAppend), });;
				return _4320_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("copy", 4)) {
			_case_begin_1ca75549d:;
			{
				static jule::Ptr<_1b9b5216e_FnIns> _4620_f = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>(_1b9d81cd8_builtinCallerCopy), });;
				return _4620_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("len", 3)) {
			_case_begin_1ca755525:;
			{
				static jule::Ptr<_1b9b5216e_FnIns> _4920_f = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>(_1b9d8347c_builtinCallerLen), });;
				return _4920_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("cap", 3)) {
			_case_begin_1ca75559c:;
			{
				static jule::Ptr<_1b9b5216e_FnIns> _5220_f = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>(_1b9d83c30_builtinCallerCap), });;
				return _5220_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("delete", 6)) {
			_case_begin_1ca755679:;
			{
				static jule::Ptr<_1b9b5216e_FnIns> _5520_f = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>(_1b9d84648_builtinCallerDelete), });;
				return _5520_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("assert", 6)) {
			_case_begin_1ca755701:;
			{
				static jule::Ptr<_1b9b5216e_FnIns> _5820_f = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>(_1b9d84a77_builtinCallerAssert), });;
				return _5820_f;;
			}
		}
		else {
			_case_begin_1ca754ec5:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca7525cc:;
	};
}



inline jule::Ptr<_1b9c8c3db_TypeAlias> _1b9d78cbe_primTypeAlias(jule::Ptr<_1b9c8d1cd_TypeKind>* _6523_k) {
	return jule::new_ptr<_1b9c8c3db_TypeAlias>(_1b9c8c3db_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1b9c953a0_TypeSymbol>(_1b9c953a0_TypeSymbol{._field_Kind=(*(_6523_k))}), });;
}



inline jule::Ptr<_1b9c09611_Var> _1b9d7c8c7_findBuiltinVar(jule::Str* _9320_ident) {
	{
		auto &_match_expr{ (*(_9320_ident)) };
		
		if (_match_expr == jule::Str::lit("nil", 3)) {
			_case_begin_1ca75cb48:;
			{
				static jule::Ptr<_1b9c09611_Var> _9620_v = jule::new_ptr<_1b9c09611_Var>(_1b9c09611_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=jule::new_ptr<_1b9c953a0_TypeSymbol>(_1b9c953a0_TypeSymbol{._field_Kind=_1b9d790cc_primNil}), ._field_Value=jule::new_ptr<_1b9c5e15a_Value>(_1b9c5e15a_Value{._field_Data=jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Constant=static__1ec684058_NewNil()})}), });;
				return _9620_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("true", 4)) {
			_case_begin_1ca75cbae:;
			{
				static jule::Ptr<_1b9c09611_Var> _11120_v = jule::new_ptr<_1b9c09611_Var>(_1b9c09611_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_1b9d7cb08_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1b9c5e15a_Value>(_1b9c5e15a_Value{._field_Data=jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Constant=static__1ec6837b6_NewBool(true)})}), });;
				return _11120_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("false", 5)) {
			_case_begin_1ca75cc25:;
			{
				static jule::Ptr<_1b9c09611_Var> _12420_v = jule::new_ptr<_1b9c09611_Var>(_1b9c09611_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_1b9d7cb08_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1b9c5e15a_Value>(_1b9c5e15a_Value{._field_Data=jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Constant=static__1ec6837b6_NewBool(false)})}), });;
				return _12420_v;;
			}
		}
		else {
			_case_begin_1ca75cad2:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca75bb36:;
	};
}



inline jule::Ptr<_1b9c8c3db_TypeAlias> _1b9d7cb08_findBuiltinTypeAlias(jule::Str _14125_ident) {
	{
		auto &_match_expr{ _14125_ident };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1ca761212:;
			{
				static jule::Ptr<_1b9c8c3db_TypeAlias> _14420_t = _1b9d78cbe_primTypeAlias(&(_1b9d796a4_primAny));;
				return _14420_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_1ca762a71:;
			{
				static jule::Ptr<_1b9c8c3db_TypeAlias> _14720_t = _1b9d78cbe_primTypeAlias(&(_1b9d799b2_primStr));;
				return _14720_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_1ca762d18:;
			{
				static jule::Ptr<_1b9c8c3db_TypeAlias> _15020_t = _1b9d78cbe_primTypeAlias(&(_1b9d79c7b_primBool));;
				return _15020_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1ca762d7e:;
			{
				static jule::Ptr<_1b9c8c3db_TypeAlias> _15320_t = _1b9d78cbe_primTypeAlias(&(_1b9d7a045_primUintptr));;
				return _15320_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1ca762de5:;
			{
				static jule::Ptr<_1b9c8c3db_TypeAlias> _15620_t = _1b9d78cbe_primTypeAlias(&(_1b9d7a30e_primUint));;
				return _15620_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1ca762e5b:;
			{
				static jule::Ptr<_1b9c8c3db_TypeAlias> _15920_t = _1b9d78cbe_primTypeAlias(&(_1b9d7a6d8_primInt));;
				return _15920_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1ca76305a:;
			{
				static jule::Ptr<_1b9c8c3db_TypeAlias> _16220_t = _1b9d78cbe_primTypeAlias(&(_1b9d7a9a2_primI8));;
				return _16220_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1ca7630c1:;
			{
				static jule::Ptr<_1b9c8c3db_TypeAlias> _16520_t = _1b9d78cbe_primTypeAlias(&(_1b9d7ac6b_primI16));;
				return _16520_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1ca763137:;
			{
				static jule::Ptr<_1b9c8c3db_TypeAlias> _16820_t = _1b9d78cbe_primTypeAlias(&(_1b9d7b2ee_primI64));;
				return _16820_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1ca76319d:;
			{
				static jule::Ptr<_1b9c8c3db_TypeAlias> _17120_t = _1b9d78cbe_primTypeAlias(&(_1b9d7b882_primU16));;
				return _17120_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1ca763225:;
			{
				static jule::Ptr<_1b9c8c3db_TypeAlias> _17420_t = _1b9d78cbe_primTypeAlias(&(_1b9d7bb4b_primU32));;
				return _17420_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1ca76329c:;
			{
				static jule::Ptr<_1b9c8c3db_TypeAlias> _17720_t = _1b9d78cbe_primTypeAlias(&(_1b9d7c0be_primU64));;
				return _17720_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1ca763324:;
			{
				static jule::Ptr<_1b9c8c3db_TypeAlias> _18020_t = _1b9d78cbe_primTypeAlias(&(_1b9d7c388_primF32));;
				return _18020_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1ca76339b:;
			{
				static jule::Ptr<_1b9c8c3db_TypeAlias> _18320_t = _1b9d78cbe_primTypeAlias(&(_1b9d7c652_primF64));;
				return _18320_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("byte", 4) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1ca763423:;
			{
				static jule::Ptr<_1b9c8c3db_TypeAlias> _18620_t = _1b9d78cbe_primTypeAlias(&(_1b9d7b5b8_primU8));;
				return _18620_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("rune", 4) || _match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1ca76349a:;
			{
				static jule::Ptr<_1b9c8c3db_TypeAlias> _18920_t = _1b9d78cbe_primTypeAlias(&(_1b9d7b035_primI32));;
				return _18920_t;;
			}
		}
		else {
			_case_begin_1ca7628c8:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca761344:;
	};
}



inline jule::Any _1b9d7cdc2_findBuiltinDef(jule::Str* _19620_ident) {
	jule::Ptr<_1b9c09611_Var> _1979_v = _1b9d7c8c7_findBuiltinVar(_19620_ident);;
	if ((_1979_v != nullptr)) {
		return jule::Any(_1979_v, &__jule_any_type8);;
	};
	jule::Ptr<_1b9b5216e_FnIns> _2019_f = _1b9d789b1_findBuiltinFunc(_19620_ident);;
	if ((_2019_f != nullptr)) {
		return jule::Any(_2019_f, &__jule_any_type7);;
	};
	jule::Ptr<_1b9c8c3db_TypeAlias> _2059_ta = _1b9d7cb08_findBuiltinTypeAlias((*(_19620_ident)));;
	if ((_2059_ta != nullptr)) {
		return jule::Any(_2059_ta, &__jule_any_type66);;
	};
	return nullptr;;
}



inline jule::Any _1b9d7d18b_findBuiltinDefStdDebug(jule::Str* _21228_ident) {
	{
		auto &_match_expr{ (*(_21228_ident)) };
		
		if (_match_expr == jule::Str::lit("Out", 3)) {
			_case_begin_1ca76c8a0:;
			{
				static jule::Ptr<_1b9b5216e_FnIns> _21520_f = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>(_1b9d88905_builtinCallerStdDebugOut), });;
				return jule::Any(_21520_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Outln", 5)) {
			_case_begin_1ca76c916:;
			{
				static jule::Ptr<_1b9b5216e_FnIns> _21820_f = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>(_1b9d88d34_builtinCallerStdDebugOutln), });;
				return jule::Any(_21820_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1ca76c284:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca76b33d:;
	};
}



inline jule::Any _1b9d7d455_findBuiltinDefStdMem(jule::Str* _22526_ident) {
	{
		auto &_match_expr{ (*(_22526_ident)) };
		
		if (_match_expr == jule::Str::lit("SizeOf", 6)) {
			_case_begin_1ca76e2a8:;
			{
				static jule::Ptr<_1b9b5216e_FnIns> _22820_f = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>(_1b9d8730a_builtinCallerStdMemSizeOf), });;
				return jule::Any(_22820_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("AlignOf", 7)) {
			_case_begin_1ca76e31e:;
			{
				static jule::Ptr<_1b9b5216e_FnIns> _23120_f = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>(_1b9d87739_builtinCallerStdMemAlignOf), });;
				return jule::Any(_23120_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Free", 4)) {
			_case_begin_1ca76e385:;
			{
				static jule::Ptr<_1b9b5216e_FnIns> _23420_f = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>(_1b9d87b68_builtinCallerStdMemFree), });;
				return jule::Any(_23420_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1ca76e242:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca76cdcd:;
	};
}



inline jule::Any _1b9d7d7eb_findBuiltinDefStdComptime(jule::Str* _24131_ident) {
	{
		auto &_match_expr{ (*(_24131_ident)) };
		
		if (_match_expr == jule::Str::lit("TypeOf", 6)) {
			_case_begin_1ca7716c8:;
			{
				static jule::Ptr<_1b9b5216e_FnIns> _24420_f = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>(_1b9d8514e_builtinCallerStdComptimeTypeOf), });;
				return jule::Any(_24420_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("ValueOf", 7)) {
			_case_begin_1ca771750:;
			{
				static jule::Ptr<_1b9b5216e_FnIns> _24720_f = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>(_1b9d85517_builtinCallerStdComptimeValueOf), });;
				return jule::Any(_24720_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Range", 5)) {
			_case_begin_1ca7717c7:;
			{
				static jule::Ptr<_1b9b5216e_FnIns> _25020_f = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>(_1b9d85c10_builtinCallerStdComptimeRange), });;
				return jule::Any(_25020_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Line", 4)) {
			_case_begin_1ca771b07:;
			{
				static jule::Ptr<_1b9b5216e_FnIns> _25320_f = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>(_1b9d8613e_builtinCallerStdComptimeLine), });;
				return jule::Any(_25320_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("File", 4)) {
			_case_begin_1ca771b6d:;
			{
				static jule::Ptr<_1b9b5216e_FnIns> _25620_f = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>(_1b9d8656d_builtinCallerStdComptimeFile), });;
				return jule::Any(_25620_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Files", 5)) {
			_case_begin_1ca771bd4:;
			{
				static jule::Ptr<_1b9b5216e_FnIns> _25920_f = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>(_1b9d8699c_builtinCallerStdComptimeFiles), });;
				return jule::Any(_25920_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("TypeAlias", 9)) {
			_case_begin_1ca771c4a:;
			{
				static jule::Ptr<_1b9b5216e_FnIns> _26220_f = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>(_1b9d86dcb_builtinCallerStdComptimeTypeAlias), });;
				return jule::Any(_26220_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1ca771662:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca770c9e:;
	};
}



inline jule::Any _1b9d7dab5_findBuiltinDefStdJuleIntegrated(jule::Str* _26937_ident) {
	{
		auto &_match_expr{ (*(_26937_ident)) };
		
		if (_match_expr == jule::Str::lit("ToStr", 5)) {
			_case_begin_1ca77649c:;
			{
				static jule::Ptr<_1b9b5216e_FnIns> _27220_f = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>(_1b9d88097_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_27220_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Emit", 4)) {
			_case_begin_1ca776513:;
			{
				static jule::Ptr<_1b9b5216e_FnIns> _27520_f = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_Decl=jule::new_ptr<_1b9b4e26a_Fn>(_1b9b4e26a_Fn{._field_Generics=jule::Slice<jule::Ptr<_1b9b259c2_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>(_1b9d884c6_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_27520_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1ca776436:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca772157:;
	};
}



inline jule::Any _1b9d7de39_findPackageBuiltinDef(jule::Str* _28727_linkPath, jule::Str* _28743_ident) {
	{
		auto &_match_expr{ (*(_28727_linkPath)) };
		
		if (_match_expr == jule::Str::lit("std::comptime", 13)) {
			_case_begin_1ca7787bd:;
			{
				return _1b9d7d7eb_findBuiltinDefStdComptime(_28743_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::debug", 10)) {
			_case_begin_1ca778834:;
			{
				return _1b9d7d18b_findBuiltinDefStdDebug(_28743_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::mem", 8)) {
			_case_begin_1ca77889a:;
			{
				return _1b9d7d455_findBuiltinDefStdMem(_28743_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::jule::integrated", 21)) {
			_case_begin_1ca778911:;
			{
				return _1b9d7dab5_findBuiltinDefStdJuleIntegrated(_28743_ident);;
			}
		}
		else {
			_case_begin_1ca7785e2:;
			{
				return nullptr;;
			}
		}
		_match_end_1ca777514:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9d7e368_builtinCallerCommonPlain(jule::Ptr<_1b9c5ec0a_Eval>* _30234_e, jule::Ptr<_1b9b21825_FnCallExpr>* _30249_fc, jule::Ptr<_1b9c5d016_Data>* _30271_d) {
	jule::Ptr<_1b9b5216e_FnIns> _3039_f = _1b9c91b1b_Fn((*((*(_30271_d))))._field_Kind.ptr());;
	_1b9c4d5ab_fnCallArgChecker _3059_fcac = _1b9c4d5ab_fnCallArgChecker{._field_e=(*(_30234_e)), ._field_args=(*((*(_30249_fc))))._field_Args, ._field_errorToken=(*((*(_30249_fc))))._field_Token, ._field_f=_3039_f, ._field_dynamicAnnotation=false, };;
	if ((!(_1b9c50b63_check(&_3059_fcac)))) {
		return nullptr;;
	};
	jule::Ptr<_1b9b43506_FnCallExprModel> _3169_model = jule::new_ptr<_1b9b43506_FnCallExprModel>(_1b9b43506_FnCallExprModel{._field_Token=(*((*(_30249_fc))))._field_Token, ._field_Func=_3039_f, ._field_Expr=(*((*(_30271_d))))._field_Model, ._field_Args=_3059_fcac._field_argModels, });;
	if (((*(_3039_f))._field_Result == nullptr)) {
		(*(_30271_d))=_1b9c88a14_buildVoidData();
	} else {
		(*(_30271_d))=jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=(*(_3039_f))._field_Result, });
	};
	(*((*(_30271_d))))._field_Model=jule::Any(_3169_model, &__jule_any_type34);
	return (*(_30271_d));;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9d7e6dc_builtinCallerError(jule::Ptr<_1b9c5ec0a_Eval>* _33528_e, jule::Ptr<_1b9b21825_FnCallExpr>* _33543_fc) {
	if (((*((*(_33543_fc))))._field_Args.len() < 1LL)) {
		_1b9c6025a_pushErr((*(_33528_e)).ptr(), (*((*(_33543_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("err", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_33543_fc))))._field_Args.len() > 1LL)) {
		_1b9c6025a_pushErr((*(_33528_e)).ptr(), (*((*((*(_33543_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("error", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1b9c5d016_Data> _3439_expr = _1b9c7cbd4_evalExpr((*(_33528_e)), (*((*(_33543_fc))))._field_Args[0LL]);;
	if ((_3439_expr == nullptr)) {
		return nullptr;;
	};
	if (_1b9c5d3bd_IsNil(_3439_expr.ptr())) {
		_1b9c6025a_pushErr((*(_33528_e)).ptr(), (*((*((*(_33543_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("you cannot call error function with nil", 39), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b9c5d016_Data> _3529_d = _1b9c88a14_buildVoidData();;
	(*(_3529_d))._field_Model=jule::Any(jule::new_ptr<_1b9b49d37_BuiltinErrorCallExprModel>(_1b9b49d37_BuiltinErrorCallExprModel{._field_Err=_3439_expr}), &__jule_any_type23);
	return _3529_d;;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9d7eb1b_builtinCallerOut(jule::Ptr<_1b9c5ec0a_Eval>* _35726_e, jule::Ptr<_1b9b21825_FnCallExpr>* _35741_fc, jule::Ptr<_1b9c5d016_Data>* ) {
	if (((*((*(_35741_fc))))._field_Args.len() < 1LL)) {
		_1b9c6025a_pushErr((*(_35726_e)).ptr(), (*((*(_35741_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("v", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_35741_fc))))._field_Args.len() > 1LL)) {
		_1b9c6025a_pushErr((*(_35726_e)).ptr(), (*((*((*(_35741_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("out", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1b9c5d016_Data> _3669_expr = _1b9c7cbd4_evalExpr((*(_35726_e)), (*((*(_35741_fc))))._field_Args[0LL]);;
	if ((_3669_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1b9ca998b_isBuiltinStrConvertable(&((*(_3669_expr))._field_Kind))))) {
		_1b9c6025a_pushErr((*(_35726_e)).ptr(), (*((*((*(_35741_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b9c5d016_Data> _3769_d = _1b9c88a14_buildVoidData();;
	(*(_3769_d))._field_Model=jule::Any(jule::new_ptr<_1b9b470ed_BuiltinOutCallExprModel>(_1b9b470ed_BuiltinOutCallExprModel{._field_Expr=(*(_3669_expr))._field_Model, }), &__jule_any_type27);
	return _3769_d;;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9d8004a_builtinCallerOutln(jule::Ptr<_1b9c5ec0a_Eval>* _38128_e, jule::Ptr<_1b9b21825_FnCallExpr>* _38143_fc, jule::Ptr<_1b9c5d016_Data>* _38165_d) {
	(*(_38165_d))=_1b9d7eb1b_builtinCallerOut(_38128_e, _38143_fc, _38165_d);
	if (((*(_38165_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*(_38165_d))))._field_Model=jule::Any(jule::new_ptr<_1b9b474c7_BuiltinOutlnCallExprModel>(_1b9b474c7_BuiltinOutlnCallExprModel{._field_Expr=(*((*((*(_38165_d))))._field_Model.cast_ptr<_1b9b470ed_BuiltinOutCallExprModel>(&__jule_any_type27)))._field_Expr, }), &__jule_any_type28);
	return (*(_38165_d));;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9d80479_builtinCallerNew(jule::Ptr<_1b9c5ec0a_Eval>* _39326_e, jule::Ptr<_1b9b21825_FnCallExpr>* _39341_fc, jule::Ptr<_1b9c5d016_Data>* _39363_d) {
	if (((*((*(_39341_fc))))._field_Args.len() < 1LL)) {
		_1b9c6025a_pushErr((*(_39326_e)).ptr(), (*((*(_39341_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_39341_fc))))._field_Args.len() > 2LL)) {
		_1b9c6025a_pushErr((*(_39326_e)).ptr(), (*((*((*(_39341_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("new", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1b9c5d016_Data> _4029_t = _1b9c7bdc0_evalExprKind((*(_39326_e)), (*((*((*(_39341_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4029_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4029_t))._field_Decl))) {
		_1b9c6025a_pushErr((*(_39326_e)).ptr(), (*((*((*(_39341_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1b9ca9408_isValidForSptrType(&((*(_4029_t))._field_Kind))))) {
		jule::Ptr<_1b9b3c137_StructIns> _41313_s = _1b9c91da2_Struct((*(_4029_t))._field_Kind.ptr());;
		if ((((_41313_s != nullptr) && ((*(_41313_s))._field_Decl != nullptr)) && (*((*(_41313_s))._field_Decl))._field_Binded)) {
			_1b9c6025a_pushErr((*(_39326_e)).ptr(), (*((*((*(_39341_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*((*(_39363_d))))._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(jule::new_ptr<_1b9c997d3_Sptr>(_1b9c997d3_Sptr{._field_Elem=(*(_4029_t))._field_Kind}), 21)});
	if (((*((*(_39341_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1b9c8d1cd_TypeKind> _42713_old = (*((*(_39326_e))))._field_prefix;;
		(*((*(_39326_e))))._field_prefix=(*(_4029_t))._field_Kind;
		jule::Ptr<_1b9c5d016_Data> _43013_init = _1b9c7cbd4_evalExpr((*(_39326_e)), (*((*(_39341_fc))))._field_Args[1LL]);;
		(*((*(_39326_e))))._field_prefix=_42713_old;
		if ((_43013_init != nullptr)) {
			jule::Ptr<_1b9b032eb_Token> _43517_token = (*((*((*(_39341_fc))))._field_Args[1LL]))._field_Token;;
			;
			_1b9be1021_checkValidityForInitExpr((*((*(_39326_e))))._field_s, (!((*((*(_39326_e))))._field_immutable)), false, &((*(_4029_t))._field_Kind), &(_43013_init), &(_43517_token));
			_1b9bdca12_checkAssignType((*((*(_39326_e))))._field_s, false, &((*(_4029_t))._field_Kind), &(_43013_init), _43517_token);
			(*((*(_39363_d))))._field_Model=jule::Any(jule::new_ptr<_1b9b478a1_BuiltinNewCallExprModel>(_1b9b478a1_BuiltinNewCallExprModel{._field_Kind=(*(_4029_t))._field_Kind, ._field_Init=(*(_43013_init))._field_Model}), &__jule_any_type113);
		};
	} else {
		(*((*(_39363_d))))._field_Model=jule::Any(jule::new_ptr<_1b9b478a1_BuiltinNewCallExprModel>(_1b9b478a1_BuiltinNewCallExprModel{._field_Kind=(*(_4029_t))._field_Kind, }), &__jule_any_type113);
	};
	return (*(_39363_d));;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9d80a62_builtinCallerPanic(jule::Ptr<_1b9c5ec0a_Eval>* _45528_e, jule::Ptr<_1b9b21825_FnCallExpr>* _45543_fc, jule::Ptr<_1b9c5d016_Data>* ) {
	if (((*((*(_45543_fc))))._field_Args.len() < 1LL)) {
		_1b9c6025a_pushErr((*(_45528_e)).ptr(), (*((*(_45543_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("message", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_45543_fc))))._field_Args.len() > 1LL)) {
		_1b9c6025a_pushErr((*(_45528_e)).ptr(), (*((*((*(_45543_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("panic", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1b9c5d016_Data> _4649_expr = _1b9c7cbd4_evalExpr((*(_45528_e)), (*((*(_45543_fc))))._field_Args[0LL]);;
	if ((_4649_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1b9c9082e_Prim((*(_4649_expr))._field_Kind.ptr()) == nullptr) || (!(_1b9c9923e_IsStr(_1b9c9082e_Prim((*(_4649_expr))._field_Kind.ptr()).ptr()))))) {
		_1b9c6025a_pushErr((*(_45528_e)).ptr(), (*((*(_45543_fc))))._field_Token, jule::Str::lit("panic function only accepts strings", 35), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b9c5d016_Data> _4739_d = _1b9c88a14_buildVoidData();;
	(*(_4739_d))._field_Model=jule::Any(jule::new_ptr<_1b9b47c7a_BuiltinPanicCallExprModel>(_1b9b47c7a_BuiltinPanicCallExprModel{._field_Token=(*((*(_45543_fc))))._field_Token, ._field_Expr=(*(_4649_expr))._field_Model}), &__jule_any_type29);
	return _4739_d;;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9d80e91_builtinCallerMake(jule::Ptr<_1b9c5ec0a_Eval>* _48127_e, jule::Ptr<_1b9b21825_FnCallExpr>* _48142_fc, jule::Ptr<_1b9c5d016_Data>* _48164_d) {
	if (((*((*(_48142_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_48142_fc))))._field_Args.len() == 1LL)) {
			_1b9c6025a_pushErr((*(_48127_e)).ptr(), (*((*(_48142_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("size", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		_1b9c6025a_pushErr((*(_48127_e)).ptr(), (*((*(_48142_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type, size", 10), &__jule_any_type4)}));
		return nullptr;;
	} else if (((*((*(_48142_fc))))._field_Args.len() > 3LL)) {
		_1b9c6025a_pushErr((*(_48127_e)).ptr(), (*((*((*(_48142_fc))))._field_Args[3LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9c5d016_Data> _4949_t = _1b9c7bdc0_evalExprKind((*(_48127_e)), (*((*((*(_48142_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4949_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4949_t))._field_Decl))) {
		_1b9c6025a_pushErr((*(_48127_e)).ptr(), (*((*((*(_48142_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_1b9c91885_Slc((*(_4949_t))._field_Kind.ptr()) == nullptr)) {
		_1b9c6025a_pushErr((*(_48127_e)).ptr(), (*((*((*(_48142_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_4949_t))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_48164_d))))._field_Kind=(*(_4949_t))._field_Kind;
	jule::Ptr<_1b9c5d016_Data> _5099_lenExpr = _1b9c7cbd4_evalExpr(_1b9bdc160_evalp((*((*(_48127_e))))._field_s, (*((*(_48127_e))))._field_lookup, (*(_4949_t))._field_Kind), (*((*(_48142_fc))))._field_Args[1LL]);;
	if ((_5099_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1b9c68bae_checkIntegerIndexingByData((*(_48127_e)).ptr(), &(_5099_lenExpr), (*((*((*(_48142_fc))))._field_Args[1LL]))._field_Token);
	jule::Ptr<_1b9b486d7_BuiltinMakeCallExprModel> _5169_model = jule::new_ptr<_1b9b486d7_BuiltinMakeCallExprModel>(_1b9b486d7_BuiltinMakeCallExprModel{._field_Kind=(*(_4949_t))._field_Kind, ._field_Len=(*(_5099_lenExpr))._field_Model, });;
	(*((*(_48164_d))))._field_Model=jule::Any(_5169_model, &__jule_any_type114);
	if (((*((*(_48142_fc))))._field_Args.len() == 3LL)) {
		jule::Ptr<_1b9c5d016_Data> _52213_capExpr = _1b9c7cbd4_evalExpr(_1b9bdc160_evalp((*((*(_48127_e))))._field_s, (*((*(_48127_e))))._field_lookup, (*(_4949_t))._field_Kind), (*((*(_48142_fc))))._field_Args[2LL]);;
		if ((_52213_capExpr == nullptr)) {
			return (*(_48164_d));;
		};
		_1b9c68bae_checkIntegerIndexingByData((*(_48127_e)).ptr(), &(_52213_capExpr), (*((*((*(_48142_fc))))._field_Args[2LL]))._field_Token);
		(*(_5169_model))._field_Cap=(*(_52213_capExpr))._field_Model;
	};
	return (*(_48164_d));;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9d813c0_builtinCallerAppend(jule::Ptr<_1b9c5ec0a_Eval>* _53229_e, jule::Ptr<_1b9b21825_FnCallExpr>* _53244_fc, jule::Ptr<_1b9c5d016_Data>* _53266_d) {
	if (((*((*(_53244_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_53244_fc))))._field_Args.len() == 1LL)) {
			_1b9c6025a_pushErr((*(_53229_e)).ptr(), (*((*(_53244_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src", 3), &__jule_any_type4)}));
			return nullptr;;
		};
		_1b9c6025a_pushErr((*(_53229_e)).ptr(), (*((*(_53244_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9c5d016_Data> _5429_t = _1b9c7cbd4_evalExpr((*(_53229_e)), (*((*(_53244_fc))))._field_Args[0LL]);;
	if ((_5429_t == nullptr)) {
		return nullptr;;
	};
	if ((_1b9c91885_Slc((*(_5429_t))._field_Kind.ptr()) == nullptr)) {
		_1b9c6025a_pushErr((*(_53229_e)).ptr(), (*((*((*(_53244_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b9b5216e_FnIns> _5529_f = jule::new_ptr<_1b9b5216e_FnIns>(_1b9b5216e_FnIns{._field_Params=jule::Slice<jule::Ptr<_1b9b511c3_ParamIns>>::make({jule::new_ptr<_1b9b511c3_ParamIns>(_1b9b511c3_ParamIns{._field_Decl=jule::new_ptr<_1b9b4c796_Param>(_1b9b4c796_Param{._field_Mutable=true, }), ._field_Kind=(*(_5429_t))._field_Kind}),jule::new_ptr<_1b9b511c3_ParamIns>(_1b9b511c3_ParamIns{._field_Decl=jule::new_ptr<_1b9b4c796_Param>(_1b9b4c796_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=(*(_1b9c91885_Slc((*(_5429_t))._field_Kind.ptr())))._field_Elem})}), ._field_Result=(*(_5429_t))._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_1b9c5d016_Data>(jule::Ptr<_1b9c5ec0a_Eval>*,jule::Ptr<_1b9b21825_FnCallExpr>*,jule::Ptr<_1b9c5d016_Data>*)>(_1b9d7e368_builtinCallerCommonPlain), });;
	(*((*(_53266_d))))._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(_5529_f, 1)});
	(*(_53266_d))=_1b9d7e368_builtinCallerCommonPlain(_53229_e, _53244_fc, _53266_d);
	if (((*(_53266_d)) != nullptr)) {
		jule::Ptr<_1b9b43506_FnCallExprModel> _57613_model = (*((*(_53266_d))))._field_Model.cast_ptr<_1b9b43506_FnCallExprModel>(&__jule_any_type34);;
		(*((*(_53266_d))))._field_Model=jule::Any(jule::new_ptr<_1b9b48ab1_BuiltinAppendCallExprModel>(_1b9b48ab1_BuiltinAppendCallExprModel{._field_Dest=(*(_57613_model))._field_Args[0LL], ._field_Elements=(*(_57613_model))._field_Args[1LL]}), &__jule_any_type26);
	};
	return (*(_53266_d));;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9d818a9_callerCopySlice(jule::Ptr<_1b9c5d016_Data>* _58525_dest, jule::Ptr<_1b9c5ec0a_Eval>* _58543_e, jule::Ptr<_1b9b21825_FnCallExpr>* _58558_fc, jule::Ptr<_1b9c5d016_Data>* _58580_d) {
	if ((!((*((*(_58525_dest))))._field_Mutable))) {
		_1b9c6025a_pushErr((*(_58543_e)).ptr(), (*((*((*(_58558_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b9c5d016_Data> _5909_src = _1b9c7cbd4_evalExpr((*(_58543_e)), (*((*(_58558_fc))))._field_Args[1LL]);;
	if ((_5909_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b9c9a2a6_Slc> _5949_slc = _1b9c91885_Slc((*(_5909_src))._field_Kind.ptr());;
	if ((_5949_slc != nullptr)) {
		if (((!((*(_5909_src))._field_Mutable)) && _1b9c8ea5e_Mutable((*(_5949_slc))._field_Elem.ptr()))) {
			_1b9c6025a_pushErr((*(_58543_e)).ptr(), (*((*((*(_58558_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		};
		if ((!(_1b9c8d8d7_Equal((*((*(_58525_dest))))._field_Kind, (*(_5909_src))._field_Kind)))) {
			_1b9c6025a_pushErr((*(_58543_e)).ptr(), (*((*((*(_58558_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*((*(_58525_dest))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1b9c8d596_Str((*(_5909_src))._field_Kind.ptr()), &__jule_any_type4)}));
		};
	} else {
		jule::Ptr<_1b9c95ca7_Prim> _6049_destPrim = _1b9c9082e_Prim((*(_1b9c91885_Slc((*((*(_58525_dest))))._field_Kind.ptr())))._field_Elem.ptr());;
		jule::Ptr<_1b9c95ca7_Prim> _6059_prim = _1b9c9082e_Prim((*(_5909_src))._field_Kind.ptr());;
		if (((((_6049_destPrim == nullptr) || (_6059_prim == nullptr)) || (!(_1b9c9923e_IsStr(_6059_prim.ptr())))) || (!(_1b9c9769e_IsU8(_6049_destPrim.ptr()))))) {
			_1b9c6025a_pushErr((*(_58543_e)).ptr(), (*((*((*(_58558_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*((*(_58525_dest))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1b9c8d596_Str((*(_5909_src))._field_Kind.ptr()), &__jule_any_type4)}));
		};
	};
	(*((*(_58580_d))))._field_Kind=_1b9c56a9d_lenKind();
	(*((*(_58580_d))))._field_Model=jule::Any(jule::new_ptr<_1b9b4995d_BuiltinCopyCallExprModel>(_1b9b4995d_BuiltinCopyCallExprModel{._field_Dest=(*(_58525_dest)), ._field_Src=_5909_src}), &__jule_any_type31);
	return (*(_58580_d));;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9d81cd8_builtinCallerCopy(jule::Ptr<_1b9c5ec0a_Eval>* _61927_e, jule::Ptr<_1b9b21825_FnCallExpr>* _61942_fc, jule::Ptr<_1b9c5d016_Data>* _61964_d) {
	if (((*((*(_61942_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_61942_fc))))._field_Args.len() == 1LL)) {
			_1b9c6025a_pushErr((*(_61927_e)).ptr(), (*((*(_61942_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src", 3), &__jule_any_type4)}));
			return nullptr;;
		};
		_1b9c6025a_pushErr((*(_61927_e)).ptr(), (*((*(_61942_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_61942_fc))))._field_Args.len() > 2LL)) {
		_1b9c6025a_pushErr((*(_61927_e)).ptr(), (*((*((*(_61942_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("copy", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1b9c5d016_Data> _6329_dest = _1b9c7cbd4_evalExpr((*(_61927_e)), (*((*(_61942_fc))))._field_Args[0LL]);;
	{
		
		if ((_6329_dest == nullptr)) {
			_case_begin_1ca7c4385:;
			{
				return nullptr;;
			}
		}
		else if ((_1b9c91885_Slc((*(_6329_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca7c5056:;
			{
				return _1b9d818a9_callerCopySlice(&(_6329_dest), _61927_e, _61942_fc, _61964_d);;
			}
		}
		else {
			_case_begin_1ca7c4000:;
			{
				_1b9c6025a_pushErr((*(_61927_e)).ptr(), (*((*((*(_61942_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ca7c3e9a:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9d8215c_callerLenSlice(jule::Ptr<_1b9c5d016_Data>* _64424_expr, jule::Ptr<_1b9c5d016_Data>* _64442_d) {
	(*((*(_64442_d))))._field_Kind=_1b9c56a9d_lenKind();
	(*((*(_64442_d))))._field_Model=jule::Any(jule::new_ptr<_1b9b48dad_BuiltinLenCallExprModel>(_1b9b48dad_BuiltinLenCallExprModel{._field_Expr=(*(_64424_expr))}), &__jule_any_type115);
	return (*(_64442_d));;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9d824d1_callerLenMap(jule::Ptr<_1b9c5d016_Data>* _65222_expr, jule::Ptr<_1b9c5d016_Data>* _65240_d) {
	(*((*(_65240_d))))._field_Kind=_1b9c56a9d_lenKind();
	(*((*(_65240_d))))._field_Model=jule::Any(jule::new_ptr<_1b9b48dad_BuiltinLenCallExprModel>(_1b9b48dad_BuiltinLenCallExprModel{._field_Expr=(*(_65222_expr))}), &__jule_any_type115);
	return (*(_65240_d));;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9d82855_callerLenArr(jule::Ptr<_1b9c5d016_Data>* _66022_expr, jule::Ptr<_1b9c5d016_Data>* _66040_d) {
	(*((*(_66040_d))))._field_Kind=_1b9c56a9d_lenKind();
	(*((*(_66040_d))))._field_Constant=static__1ec683233_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_1b9c915ee_Arr((*((*(_66022_expr))))._field_Kind.ptr())))._field_N)));
	(*((*(_66040_d))))._field_Model=jule::Any((*((*(_66040_d))))._field_Constant, &__jule_any_type19);
	return (*(_66040_d));;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9d82bc9_callerLenStr(jule::Ptr<_1b9c5d016_Data>* _66722_expr, jule::Ptr<_1b9c5d016_Data>* _66740_d) {
	(*((*(_66740_d))))._field_Kind=_1b9c56a9d_lenKind();
	if (_1b9c5d8da_IsConst((*(_66722_expr)).ptr())) {
		(*((*(_66740_d))))._field_Constant=static__1ec683233_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1ec684e6b_ReadStr((*((*(_66722_expr))))._field_Constant.ptr()).len())));
		(*((*(_66740_d))))._field_Model=jule::Any((*((*(_66740_d))))._field_Constant, &__jule_any_type19);
	} else {
		(*((*(_66740_d))))._field_Model=jule::Any(jule::new_ptr<_1b9b48dad_BuiltinLenCallExprModel>(_1b9b48dad_BuiltinLenCallExprModel{._field_Expr=(*(_66722_expr))}), &__jule_any_type115);
	};
	return (*(_66740_d));;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9d8304d_callerLenComptime(jule::Ptr<_1b9c5d016_Data>* _68027_d, jule::I32 _68037_n) {
	(*((*(_68027_d))))._field_Kind=_1b9c56a9d_lenKind();
	(*((*(_68027_d))))._field_Constant=static__1ec683233_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_68037_n)));
	(*((*(_68027_d))))._field_Model=jule::Any((*((*(_68027_d))))._field_Constant, &__jule_any_type19);
	return (*(_68027_d));;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9d8347c_builtinCallerLen(jule::Ptr<_1b9c5ec0a_Eval>* _68726_e, jule::Ptr<_1b9b21825_FnCallExpr>* _68741_fc, jule::Ptr<_1b9c5d016_Data>* _68763_d) {
	if (((*((*(_68741_fc))))._field_Args.len() < 1LL)) {
		_1b9c6025a_pushErr((*(_68726_e)).ptr(), (*((*(_68741_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_68741_fc))))._field_Args.len() > 1LL)) {
		_1b9c6025a_pushErr((*(_68726_e)).ptr(), (*((*((*(_68741_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("len", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1b9c5d016_Data> _6959_dest = _1b9c7c893_evalExpr1((*(_68726_e)), (*((*(_68741_fc))))._field_Args[0LL]);;
	{
		
		if ((_6959_dest == nullptr)) {
			_case_begin_1ca7d132b:;
			{
				return nullptr;;
			}
		}
		else if ((_1b9c91885_Slc((*(_6959_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca7d1eec:;
			{
				return _1b9d8215c_callerLenSlice(&(_6959_dest), _68763_d);;
			}
		}
		else if ((_1b9c915ee_Arr((*(_6959_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca7d2063:;
			{
				return _1b9d82855_callerLenArr(&(_6959_dest), _68763_d);;
			}
		}
		else if ((_1b9c923be_Map((*(_6959_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca7d20c9:;
			{
				return _1b9d824d1_callerLenMap(&(_6959_dest), _68763_d);;
			}
		}
		else if (((_1b9c9082e_Prim((*(_6959_dest))._field_Kind.ptr()) != nullptr) && _1b9c9923e_IsStr(_1b9c9082e_Prim((*(_6959_dest))._field_Kind.ptr()).ptr()))) {
			_case_begin_1ca7d100c:;
			{
				return _1b9d82bc9_callerLenStr(&(_6959_dest), _68763_d);;
			}
		}
		else if ((_1b9c92b72_comptimeStructFields((*(_6959_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca7d1073:;
			{
				return _1b9d8304d_callerLenComptime(_68763_d, static_cast<jule::I32>((*(_1b9c92b72_comptimeStructFields((*(_6959_dest))._field_Kind.ptr())))._field_fields.len()));;
			}
		}
		else if ((_1b9c9318e_comptimeEnumFields((*(_6959_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca7d10d9:;
			{
				return _1b9d8304d_callerLenComptime(_68763_d, static_cast<jule::I32>((*(_1b9c9318e_comptimeEnumFields((*(_6959_dest))._field_Kind.ptr())))._field_fields.len()));;
			}
		}
		else if ((_1b9c93e5e_comptimeTypeInfos((*(_6959_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca7d1150:;
			{
				return _1b9d8304d_callerLenComptime(_68763_d, static_cast<jule::I32>((*(_1b9c93e5e_comptimeTypeInfos((*(_6959_dest))._field_Kind.ptr())))._field_types.len()));;
			}
		}
		else if ((_1b9c936ab_comptimeParams((*(_6959_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca7d2195:;
			{
				return _1b9d8304d_callerLenComptime(_68763_d, static_cast<jule::I32>((*(_1b9c936ab_comptimeParams((*(_6959_dest))._field_Kind.ptr())))._field_params.len()));;
			}
		}
		else if ((_1b9c9447b_comptimeStatics((*(_6959_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca7d220b:;
			{
				return _1b9d8304d_callerLenComptime(_68763_d, static_cast<jule::I32>((*(_1b9c9447b_comptimeStatics((*(_6959_dest))._field_Kind.ptr())))._field_fields.len()));;
			}
		}
		else if ((_1b9c94eb5_comptimeFiles((*(_6959_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca7d2272:;
			{
				return _1b9d8304d_callerLenComptime(_68763_d, static_cast<jule::I32>((*(_1b9c94eb5_comptimeFiles((*(_6959_dest))._field_Kind.ptr())))._field_files.len()));;
			}
		}
		else {
			_case_begin_1ca7d0e96:;
			{
				_1b9c6025a_pushErr((*(_68726_e)).ptr(), (*((*((*(_68741_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ca7d0e41:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9d83801_callerCapSlice(jule::Ptr<_1b9c5d016_Data>* _72524_expr, jule::Ptr<_1b9c5d016_Data>* _72542_d) {
	(*((*(_72542_d))))._field_Kind=_1b9c56a9d_lenKind();
	(*((*(_72542_d))))._field_Model=jule::Any(jule::new_ptr<_1b9b491aa_BuiltinCapCallExprModel>(_1b9b491aa_BuiltinCapCallExprModel{._field_Expr=(*(_72524_expr))}), &__jule_any_type116);
	return (*(_72542_d));;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9d83c30_builtinCallerCap(jule::Ptr<_1b9c5ec0a_Eval>* _73326_e, jule::Ptr<_1b9b21825_FnCallExpr>* _73341_fc, jule::Ptr<_1b9c5d016_Data>* _73363_d) {
	if (((*((*(_73341_fc))))._field_Args.len() < 1LL)) {
		_1b9c6025a_pushErr((*(_73326_e)).ptr(), (*((*(_73341_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_73341_fc))))._field_Args.len() > 1LL)) {
		_1b9c6025a_pushErr((*(_73326_e)).ptr(), (*((*((*(_73341_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("cap", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1b9c5d016_Data> _7419_dest = _1b9c7cbd4_evalExpr((*(_73326_e)), (*((*(_73341_fc))))._field_Args[0LL]);;
	{
		
		if ((_7419_dest == nullptr)) {
			_case_begin_1ca7e0d41:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7419_dest))._field_Decl) {
			_case_begin_1ca7e1a12:;
			{
				_1b9c6025a_pushErr((*(_73326_e)).ptr(), (*((*((*(_73341_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1b9c91885_Slc((*(_7419_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca7e1a78:;
			{
				return _1b9d83801_callerCapSlice(&(_7419_dest), _73363_d);;
			}
		}
		else {
			_case_begin_1ca7e09ab:;
			{
				_1b9c6025a_pushErr((*(_73326_e)).ptr(), (*((*((*(_73341_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ca7e0956:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9d84219_callerDeleteMap(jule::Ptr<_1b9c5ec0a_Eval>* _75625_e, jule::Ptr<_1b9b21825_FnCallExpr>* _75640_fc, jule::Ptr<_1b9c5d016_Data>* _75662_expr, jule::Ptr<_1b9c5d016_Data>* _75680_d) {
	if ((!((*((*(_75662_expr))))._field_Mutable))) {
		_1b9c6025a_pushErr((*(_75625_e)).ptr(), (*((*((*(_75640_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	(*(_75680_d))=_1b9c88a14_buildVoidData();
	jule::Ptr<_1b9b49584_BuiltinDeleteCallExprModel> _7619_model = jule::new_ptr<_1b9b49584_BuiltinDeleteCallExprModel>(_1b9b49584_BuiltinDeleteCallExprModel{._field_Dest=(*(_75662_expr)), });;
	if (((*((*(_75640_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1b9c5d016_Data> _76513_key = _1b9c7cbd4_evalExpr((*(_75625_e)), (*((*(_75640_fc))))._field_Args[1LL]);;
		{
			
			if ((_76513_key == nullptr)) {
				_case_begin_1ca7e7452:;
				{
					return nullptr;;
				}
			}
			else if ((*(_76513_key))._field_Decl) {
				_case_begin_1ca7e61ba:;
				{
					_1b9c6025a_pushErr((*(_75625_e)).ptr(), (*((*((*(_75640_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1ca7e6154:;
				{
					;
					jule::Ptr<_1b9c8d1cd_TypeKind> _77417_keyType = (*(_1b9c923be_Map((*((*(_75662_expr))))._field_Kind.ptr())))._field_Key;;
					if ((!(_1b9bdca12_checkAssignType((*((*(_75625_e))))._field_s, false, &(_77417_keyType), &(_76513_key), (*((*((*(_75640_fc))))._field_Args[1LL]))._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_1ca7e60dd:;
		};
		(*(_7619_model))._field_Key=_76513_key;
	};
	(*((*(_75680_d))))._field_Model=jule::Any(_7619_model, &__jule_any_type32);
	return (*(_75680_d));;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9d84648_builtinCallerDelete(jule::Ptr<_1b9c5ec0a_Eval>* _78529_e, jule::Ptr<_1b9b21825_FnCallExpr>* _78544_fc, jule::Ptr<_1b9c5d016_Data>* _78566_d) {
	if (((*((*(_78544_fc))))._field_Args.len() < 1LL)) {
		_1b9c6025a_pushErr((*(_78529_e)).ptr(), (*((*(_78544_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("map", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_78544_fc))))._field_Args.len() > 2LL)) {
		_1b9c6025a_pushErr((*(_78529_e)).ptr(), (*((*((*(_78544_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("delete", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1b9c5d016_Data> _7939_dest = _1b9c7cbd4_evalExpr((*(_78529_e)), (*((*(_78544_fc))))._field_Args[0LL]);;
	{
		
		if ((_7939_dest == nullptr)) {
			_case_begin_1ca7ed216:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7939_dest))._field_Decl) {
			_case_begin_1ca7eddd7:;
			{
				_1b9c6025a_pushErr((*(_78529_e)).ptr(), (*((*((*(_78544_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1b9c923be_Map((*(_7939_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca7ede4d:;
			{
				return _1b9d84219_callerDeleteMap(_78529_e, _78544_fc, &(_7939_dest), _78566_d);;
			}
		}
		else {
			_case_begin_1ca7ecd81:;
			{
				_1b9c6025a_pushErr((*(_78529_e)).ptr(), (*((*((*(_78544_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ca7ecd2b:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9d84a77_builtinCallerAssert(jule::Ptr<_1b9c5ec0a_Eval>* _80829_e, jule::Ptr<_1b9b21825_FnCallExpr>* _80844_fc, jule::Ptr<_1b9c5d016_Data>* ) {
	if (((*((*(_80844_fc))))._field_Args.len() < 1LL)) {
		_1b9c6025a_pushErr((*(_80829_e)).ptr(), (*((*(_80844_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_80844_fc))))._field_Args.len() > 2LL)) {
		_1b9c6025a_pushErr((*(_80829_e)).ptr(), (*((*((*(_80844_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("assert", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1b9c5d016_Data> _8179_expr = _1b9c7cbd4_evalExpr((*(_80829_e)), (*((*(_80844_fc))))._field_Args[0LL]);;
	if ((_8179_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1b9c9082e_Prim((*(_8179_expr))._field_Kind.ptr()) == nullptr) || (!(_1b9c98ea8_IsBool(_1b9c9082e_Prim((*(_8179_expr))._field_Kind.ptr()).ptr()))))) {
		_1b9c6025a_pushErr((*(_80829_e)).ptr(), (*((*(_80844_fc))))._field_Token, jule::Str::lit("assertion requires boolean expression", 37), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b9b48231_BuiltinAssertCallExprModel> _8269_model = jule::new_ptr<_1b9b48231_BuiltinAssertCallExprModel>(_1b9b48231_BuiltinAssertCallExprModel{._field_Token=(*((*(_80844_fc))))._field_Token, ._field_Expr=(*(_8179_expr))._field_Model, ._field_Log=jule::Str::lit("assertion failed", 16)});;
	if (((*((*(_80844_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1b9c5d016_Data> _83413_log = _1b9c7cbd4_evalExpr((*(_80829_e)), (*((*(_80844_fc))))._field_Args[1LL]);;
		if ((_83413_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_1b9c5d8da_IsConst(_83413_log.ptr()))) || (_1b9c9082e_Prim((*(_83413_log))._field_Kind.ptr()) == nullptr)) || (!(_1b9c9923e_IsStr(_1b9c9082e_Prim((*(_83413_log))._field_Kind.ptr()).ptr()))))) {
			_1b9c6025a_pushErr((*(_80829_e)).ptr(), (*((*((*(_80844_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("const str", 9), &__jule_any_type4),jule::Any(_1b9c8d596_Str((*(_83413_log))._field_Kind.ptr()), &__jule_any_type4)}));
			return nullptr;;
		};
		(*(_8269_model))._field_Log=_1ec684e6b_ReadStr((*(_83413_log))._field_Constant.ptr());
	};
	jule::Ptr<_1b9c5d016_Data> _8479_d = _1b9c88a14_buildVoidData();;
	(*(_8479_d))._field_Model=jule::Any(_8269_model, &__jule_any_type30);
	return _8479_d;;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9d8514e_builtinCallerStdComptimeTypeOf(jule::Ptr<_1b9c5ec0a_Eval>* _85240_e, jule::Ptr<_1b9b21825_FnCallExpr>* _85255_fc, jule::Ptr<_1b9c5d016_Data>* ) {
	if (((*((*(_85255_fc))))._field_Args.len() < 1LL)) {
		_1b9c6025a_pushErr((*(_85240_e)).ptr(), (*((*(_85255_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_85255_fc))))._field_Args.len() > 1LL)) {
		_1b9c6025a_pushErr((*(_85240_e)).ptr(), (*((*((*(_85255_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1b9c5d016_Data> _8619_d = _1b9c7bdc0_evalExprKind((*(_85240_e)), (*((*((*(_85255_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_8619_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b9b5216e_FnIns> _8655_f = _1b9c91b1b_Fn((*(_8619_d))._field_Kind.ptr());;
	if ((_8655_f != nullptr)) {
		if (_1b9b53604_IsBuiltin(_8655_f.ptr())) {
			_1b9c6025a_pushErr((*(_85240_e)).ptr(), (*((*((*(_85255_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("<built-in fn>", 13), &__jule_any_type4)}));
			return nullptr;;
		};
		if (((*(_8655_f))._field_Generics.len() != (*((*(_8655_f))._field_Decl))._field_Generics.len())) {
			_1b9c6025a_pushErr((*(_85240_e)).ptr(), (*((*((*(_85255_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1b9b3c137_StructIns> _8765_s = _1b9c91da2_Struct((*(_8619_d))._field_Kind.ptr());;
	if (((_8765_s != nullptr) && ((*(_8765_s))._field_Generics.len() != (*((*(_8765_s))._field_Decl))._field_Generics.len()))) {
		_1b9c6025a_pushErr((*(_85240_e)).ptr(), (*((*((*(_85255_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_1b9c928db_comptime((*(_8619_d))._field_Kind.ptr())) {
		_1b9c6025a_pushErr((*(_85240_e)).ptr(), (*((*((*(_85255_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_8619_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1b9b85a10_buildComptimeTypeInfoData(&((*((*(_85240_e))))._field_s), &((*(_8619_d))._field_Kind));;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9d85517_builtinCallerStdComptimeValueOf(jule::Ptr<_1b9c5ec0a_Eval>* _88841_e, jule::Ptr<_1b9b21825_FnCallExpr>* _88856_fc, jule::Ptr<_1b9c5d016_Data>* ) {
	if (((*((*(_88856_fc))))._field_Args.len() < 1LL)) {
		_1b9c6025a_pushErr((*(_88841_e)).ptr(), (*((*(_88856_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_88856_fc))))._field_Args.len() > 1LL)) {
		_1b9c6025a_pushErr((*(_88841_e)).ptr(), (*((*((*(_88856_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_1b9c5d016_Data> _8969_d = _1b9c7cbd4_evalExpr((*(_88841_e)), (*((*(_88856_fc))))._field_Args[0LL]);;
	if ((_8969_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1b9c56e00_isGoodValueToInfer(&(_8969_d))))) {
		_1b9c6025a_pushErr((*(_88841_e)).ptr(), (*((*((*(_88856_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_8969_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1b9b85c41_buildComptimeValue(&(_8969_d));;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9d857d1_rangeData(jule::Trait<_1b9b685c5_comptimeRangeKind> _90818_kind) {
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(jule::new_ptr<_1b9b687b2_comptimeRange>(_1b9b687b2_comptimeRange{._field_kind=_90818_kind}), 5)}), });;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9d85c10_builtinCallerStdComptimeRange(jule::Ptr<_1b9c5ec0a_Eval>* _91839_e, jule::Ptr<_1b9b21825_FnCallExpr>* _91854_fc, jule::Ptr<_1b9c5d016_Data>* ) {
	if (((*((*(_91854_fc))))._field_Args.len() < 1LL)) {
		_1b9c6025a_pushErr((*(_91839_e)).ptr(), (*((*(_91854_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_91854_fc))))._field_Args.len() > 1LL)) {
		_1b9c6025a_pushErr((*(_91839_e)).ptr(), (*((*((*(_91854_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Range", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1b9c5d016_Data> _9279_d = _1b9c7bdc0_evalExprKind((*(_91839_e)), (*((*((*(_91854_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_9279_d == nullptr)) {
		return nullptr;;
	};
	{
		
		if ((_1b9c92b72_comptimeStructFields((*(_9279_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca8259d0:;
			{
				return _1b9d857d1_rangeData(jule::Trait<_1b9b685c5_comptimeRangeKind>(_1b9c92b72_comptimeStructFields((*(_9279_d))._field_Kind.ptr()), 0));;
			}
		}
		else if ((_1b9c9318e_comptimeEnumFields((*(_9279_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca82498a:;
			{
				return _1b9d857d1_rangeData(jule::Trait<_1b9b685c5_comptimeRangeKind>(_1b9c9318e_comptimeEnumFields((*(_9279_d))._field_Kind.ptr()), 2));;
			}
		}
		else if ((_1b9c93e5e_comptimeTypeInfos((*(_9279_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca824a01:;
			{
				return _1b9d857d1_rangeData(jule::Trait<_1b9b685c5_comptimeRangeKind>(_1b9c93e5e_comptimeTypeInfos((*(_9279_d))._field_Kind.ptr()), 4));;
			}
		}
		else if ((_1b9c936ab_comptimeParams((*(_9279_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca824a67:;
			{
				return _1b9d857d1_rangeData(jule::Trait<_1b9b685c5_comptimeRangeKind>(_1b9c936ab_comptimeParams((*(_9279_d))._field_Kind.ptr()), 3));;
			}
		}
		else if ((_1b9c9447b_comptimeStatics((*(_9279_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca824627:;
			{
				return _1b9d857d1_rangeData(jule::Trait<_1b9b685c5_comptimeRangeKind>(_1b9c9447b_comptimeStatics((*(_9279_d))._field_Kind.ptr()), 1));;
			}
		}
		else if ((_1b9c94eb5_comptimeFiles((*(_9279_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ca82468d:;
			{
				return _1b9d857d1_rangeData(jule::Trait<_1b9b685c5_comptimeRangeKind>(_1b9c94eb5_comptimeFiles((*(_9279_d))._field_Kind.ptr()), 5));;
			}
		}
		else {
			_case_begin_1ca8245b1:;
			{
				_1b9c6025a_pushErr((*(_91839_e)).ptr(), (*((*(_91854_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_9279_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Range", 5), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ca824308:;
	};
}



inline jule::Ptr<_1b9c5d016_Data> _1b9d8613e_builtinCallerStdComptimeLine(jule::Ptr<_1b9c5ec0a_Eval>* _95038_e, jule::Ptr<_1b9b21825_FnCallExpr>* _95053_fc, jule::Ptr<_1b9c5d016_Data>* ) {
	if (((*((*(_95053_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_95038_e)).ptr(), (*((*((*(_95053_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Line", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1ec682ce3_Const> _9549_constant = static__1ec683233_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*((*((*(_95053_fc))))._field_Token))._field_Row)));;
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d7a6d8_primInt, ._field_Model=jule::Any(_9549_constant, &__jule_any_type19), ._field_Constant=_9549_constant});;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9d8656d_builtinCallerStdComptimeFile(jule::Ptr<_1b9c5ec0a_Eval>* _96238_e, jule::Ptr<_1b9b21825_FnCallExpr>* _96253_fc, jule::Ptr<_1b9c5d016_Data>* ) {
	if (((*((*(_96253_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_96238_e)).ptr(), (*((*((*(_96253_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("File", 4), &__jule_any_type4)}));
	};
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(jule::new_ptr<_1b9b836de_comptimeFile>(_1b9b836de_comptimeFile{._field_file=(*((*((*(_96238_e))))._field_s))._field_file}), 18)}), });;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9d8699c_builtinCallerStdComptimeFiles(jule::Ptr<_1b9c5ec0a_Eval>* _97539_e, jule::Ptr<_1b9b21825_FnCallExpr>* _97554_fc, jule::Ptr<_1b9c5d016_Data>* ) {
	if (((*((*(_97554_fc))))._field_Args.len() > 0LL)) {
		_1b9c6025a_pushErr((*(_97539_e)).ptr(), (*((*((*(_97554_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Files", 5), &__jule_any_type4)}));
	};
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=jule::new_ptr<_1b9c8d1cd_TypeKind>(_1b9c8d1cd_TypeKind{._field_Kind=jule::Trait<_1b9c8cc27_Kind>(jule::new_ptr<_1b9b820e4_comptimeFiles>(_1b9b820e4_comptimeFiles{._field_files=(*((*((*(_97539_e))))._field_s))._field_files}), 17)}), });;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9d86dcb_builtinCallerStdComptimeTypeAlias(jule::Ptr<_1b9c5ec0a_Eval>* _98843_e, jule::Ptr<_1b9b21825_FnCallExpr>* _98858_fc, jule::Ptr<_1b9c5d016_Data>* ) {
	if (((*((*(_98858_fc))))._field_Args.len() > 2LL)) {
		_1b9c6025a_pushErr((*(_98843_e)).ptr(), (*((*((*(_98858_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_98858_fc))))._field_Args.len() == 0LL)) {
		_1b9c6025a_pushErr((*(_98843_e)).ptr(), (*((*(_98858_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ident, type", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_98858_fc))))._field_Args.len() == 1LL)) {
		_1b9c6025a_pushErr((*(_98843_e)).ptr(), (*((*(_98858_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_98858_fc))))._field_Args[0LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ca837b57:;
			{
				goto _match_end_1ca83665b;
			}
		}
		else {
			_case_begin_1ca8366c2:;
			{
				_1b9c6025a_pushErr((*(_98843_e)).ptr(), (*((*((*(_98858_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1b9c605bd_pushSuggestion((*(_98843_e)).ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ca83665b:;
	};
	jule::Ptr<_1b9b032eb_Token> _10099_ident = (*((*((*((*(_98858_fc))))._field_Args[0LL]))._field_Kind.cast_ptr<_1b9b1e526_IdentExpr>(&__jule_any_type79)))._field_Token;;
	{
		auto &_match_expr{ (*((*(_98843_e))))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1ca838e11:;
			{
				goto _match_end_1ca838a37;
			}
		}
		else {
			_case_begin_1ca838a8c:;
			{
				_1b9c6025a_pushErr((*(_98843_e)).ptr(), (*((*(_98858_fc))))._field_Token, jule::Str::lit("you can call @ function in the scopes only", 42), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ca838a37:;
	};
	jule::Ptr<_1b9b970c6_scopeChecker> _10189_sc = (*((*(_98843_e))))._field_lookup.cast_ptr<_1b9b970c6_scopeChecker>(0);;
	jule::Ptr<_1b9c8c3db_TypeAlias> _10199_alias = jule::new_ptr<_1b9c8c3db_TypeAlias>(_1b9c8c3db_TypeAlias{._field_Scope=(*(_10189_sc))._field_tree, ._field_Public=_1b9bce4b5_IsPub(&((*(_10099_ident))._field_Kind)), ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=_10099_ident, ._field_Ident=(*(_10099_ident))._field_Kind, ._field_Kind=jule::new_ptr<_1b9c953a0_TypeSymbol>(), });;
	jule::Ptr<_1b9c5d016_Data> _10299_t = _1b9c7c211_eval1((*(_98843_e)), (*((*(_98858_fc))))._field_Args[1LL]);;
	if ((_10299_t == nullptr)) {
		return nullptr;;
	};
	if ((*(_10299_t))._field_Decl) {
		(*((*(_10199_alias))._field_Kind))._field_Kind=(*(_10299_t))._field_Kind;
	} else {
		jule::Ptr<_1b9b78283_comptimeTypeInfo> _103613_cti = _1b9c941e5_comptimeTypeInfo((*(_10299_t))._field_Kind.ptr());;
		if ((_103613_cti == nullptr)) {
			_1b9c6025a_pushErr((*(_98843_e)).ptr(), (*((*((*(_98858_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_1b9c605bd_pushSuggestion((*(_98843_e)).ptr(), jule::Str::lit("expected type declaration", 25), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*((*(_10199_alias))._field_Kind))._field_Kind=(*(_103613_cti))._field_base;
	};
	_1b9b9b87d_checkTypeAlias(_10189_sc, &(_10199_alias));
	return _1b9c88a14_buildVoidData();;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9d8730a_builtinCallerStdMemSizeOf(jule::Ptr<_1b9c5ec0a_Eval>* _104835_e, jule::Ptr<_1b9b21825_FnCallExpr>* _104850_fc, jule::Ptr<_1b9c5d016_Data>* ) {
	jule::Ptr<_1b9c5d016_Data> _10499_result = jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d7a30e_primUint, });;
	if (((*((*(_104850_fc))))._field_Args.len() < 1LL)) {
		_1b9c6025a_pushErr((*(_104835_e)).ptr(), (*((*(_104850_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return _10499_result;;
	};
	if (((*((*(_104850_fc))))._field_Args.len() > 1LL)) {
		_1b9c6025a_pushErr((*(_104835_e)).ptr(), (*((*((*(_104850_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1b9c5d016_Data> _10619_d = _1b9c7bdc0_evalExprKind((*(_104835_e)), (*((*((*(_104850_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10619_d == nullptr)) {
		return _10499_result;;
	};
	if ((!(_1b9caa96a_validTypeForXof(&((*(_10619_d))._field_Kind))))) {
		_1b9c6025a_pushErr((*(_104835_e)).ptr(), (*((*((*(_104850_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_10619_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4)}));
	};
	(*(_10499_result))._field_Model=jule::Any(jule::new_ptr<_1b9b458e3_SizeofExprModel>(_1b9b458e3_SizeofExprModel{._field_Expr=(*(_10619_d))._field_Model}), &__jule_any_type117);
	return _10499_result;;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9d87739_builtinCallerStdMemAlignOf(jule::Ptr<_1b9c5ec0a_Eval>* _107336_e, jule::Ptr<_1b9b21825_FnCallExpr>* _107351_fc, jule::Ptr<_1b9c5d016_Data>* ) {
	jule::Ptr<_1b9c5d016_Data> _10749_result = jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d7a30e_primUint, });;
	if (((*((*(_107351_fc))))._field_Args.len() < 1LL)) {
		_1b9c6025a_pushErr((*(_107336_e)).ptr(), (*((*(_107351_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return _10749_result;;
	};
	if (((*((*(_107351_fc))))._field_Args.len() > 1LL)) {
		_1b9c6025a_pushErr((*(_107336_e)).ptr(), (*((*((*(_107351_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_1b9c5d016_Data> _10869_d = _1b9c7bdc0_evalExprKind((*(_107336_e)), (*((*((*(_107351_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10869_d == nullptr)) {
		return _10749_result;;
	};
	if ((!(_1b9caa96a_validTypeForXof(&((*(_10869_d))._field_Kind))))) {
		_1b9c6025a_pushErr((*(_107336_e)).ptr(), (*((*((*(_107351_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b9c8d596_Str((*(_10869_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4)}));
	};
	(*(_10749_result))._field_Model=jule::Any(jule::new_ptr<_1b9b4a563_AlignofExprModel>(_1b9b4a563_AlignofExprModel{._field_Expr=(*(_10869_d))._field_Model}), &__jule_any_type118);
	return _10749_result;;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9d87b68_builtinCallerStdMemFree(jule::Ptr<_1b9c5ec0a_Eval>* _109833_e, jule::Ptr<_1b9b21825_FnCallExpr>* _109848_fc, jule::Ptr<_1b9c5d016_Data>* ) {
	if (((*((*(_109848_fc))))._field_Args.len() < 1LL)) {
		_1b9c6025a_pushErr((*(_109833_e)).ptr(), (*((*(_109848_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("h", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_109848_fc))))._field_Args.len() > 1LL)) {
		_1b9c6025a_pushErr((*(_109833_e)).ptr(), (*((*((*(_109848_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Free", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1b9c5d016_Data> _11079_d = _1b9c7cbd4_evalExpr((*(_109833_e)), (*((*(_109848_fc))))._field_Args[0LL]);;
	if ((_11079_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1b9c90312_PerformsRC((*(_11079_d))._field_Kind.ptr())))) {
		_1b9c6025a_pushErr((*(_109833_e)).ptr(), (*((*((*(_109848_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b9c5d016_Data> _11169_result = _1b9c88a14_buildVoidData();;
	(*(_11169_result))._field_Model=jule::Any(jule::new_ptr<_1b9b4b333_FreeExprModel>(_1b9b4b333_FreeExprModel{._field_Expr=(*(_11079_d))._field_Model}), &__jule_any_type33);
	return _11169_result;;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9d88097_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1b9c5ec0a_Eval>* _112145_e, jule::Ptr<_1b9b21825_FnCallExpr>* _112160_fc, jule::Ptr<_1b9c5d016_Data>* ) {
	if (((*((*(_112160_fc))))._field_Args.len() < 1LL)) {
		_1b9c6025a_pushErr((*(_112145_e)).ptr(), (*((*(_112160_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_112160_fc))))._field_Args.len() > 1LL)) {
		_1b9c6025a_pushErr((*(_112145_e)).ptr(), (*((*((*(_112160_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ToStr", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1b9c5d016_Data> _11309_d = _1b9c7cbd4_evalExpr((*(_112145_e)), (*((*(_112160_fc))))._field_Args[0LL]);;
	if ((_11309_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1b9ca998b_isBuiltinStrConvertable(&((*(_11309_d))._field_Kind))))) {
		_1b9c6025a_pushErr((*(_112145_e)).ptr(), (*((*((*(_112160_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1b9c5d016_Data>(_1b9c5d016_Data{._field_Kind=_1b9d799b2_primStr, ._field_Model=jule::Any(jule::new_ptr<_1b9b4ab5c_IntegratedToStrExprModel>(_1b9b4ab5c_IntegratedToStrExprModel{._field_Expr=(*(_11309_d))._field_Model}), &__jule_any_type119), });;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9d884c6_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1b9c5ec0a_Eval>* _114844_e, jule::Ptr<_1b9b21825_FnCallExpr>* _114859_fc, jule::Ptr<_1b9c5d016_Data>* _114881_d) {
	if ((!(_1b9c60c50_isUnsafe((*(_114844_e)).ptr())))) {
		_1b9c6025a_pushErr((*(_114844_e)).ptr(), (*((*(_114859_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	if (((*((*(_114859_fc))))._field_Args.len() < 1LL)) {
		_1b9c6025a_pushErr((*(_114844_e)).ptr(), (*((*(_114859_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("code", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9c5d016_Data> _11589_argd = _1b9c7cbd4_evalExpr((*(_114844_e)), (*((*(_114859_fc))))._field_Args[0LL]);;
	if ((_11589_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1b9c9082e_Prim((*(_11589_argd))._field_Kind.ptr()) == nullptr) || (!(_1b9c9923e_IsStr(_1b9c9082e_Prim((*(_11589_argd))._field_Kind.ptr()).ptr()))))) {
		_1b9c6025a_pushErr((*(_114844_e)).ptr(), (*((*((*(_114859_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1b9c8d596_Str((*(_11589_argd))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!(_1b9c5d8da_IsConst(_11589_argd.ptr()))) || (!(_1ec687567_IsStr((*(_11589_argd))._field_Constant.ptr()))))) {
		_1b9c6025a_pushErr((*(_114844_e)).ptr(), (*((*((*(_114859_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b9c5d016_Data> _11739_r = _1b9c88a14_buildVoidData();;
	jule::Ptr<_1b9b5216e_FnIns> _11759_f = _1b9c91b1b_Fn((*((*(_114881_d))))._field_Kind.ptr());;
	if (((*(_11759_f))._field_Generics.len() > 0LL)) {
		(*(_11739_r))._field_Kind=(*((*(_11759_f))._field_Generics[0LL]))._field_Kind;
	};
	jule::Ptr<_1b9b4b036_BackendEmitExprModel> _11809_model = jule::new_ptr<_1b9b4b036_BackendEmitExprModel>(_1b9b4b036_BackendEmitExprModel{._field_Code=_1ec684e6b_ReadStr((*(_11589_argd))._field_Constant.ptr()), });;
	if (((*((*(_114859_fc))))._field_Args.len() > 1LL)) {
		(*(_11809_model))._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, ((*((*(_114859_fc))))._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = (*((*(_114859_fc))))._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1ca8611ad:;
			if (it != expr_end) {
				jule::Ptr<_1b9b1caeb_Expr> _118621_arg = *it;
				{
					_11589_argd=_1b9c7c211_eval1((*(_114844_e)), _118621_arg);
					if ((_11589_argd == nullptr)) {
						return nullptr;;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = (*(_11809_model))._field_Exprs; __jule_push_dest.push((*(_11589_argd))._field_Model); };
				}
				_iter_next_1ca8611ad:;
				++it;
				goto _iter_begin_1ca8611ad;
			}
			_iter_end_1ca8611ad:;
		};
	};
	(*(_11739_r))._field_Model=jule::Any(_11809_model, &__jule_any_type25);
	return _11739_r;;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9d88905_builtinCallerStdDebugOut(jule::Ptr<_1b9c5ec0a_Eval>* _119934_e, jule::Ptr<_1b9b21825_FnCallExpr>* _119949_fc, jule::Ptr<_1b9c5d016_Data>* _119971_d) {
	(*(_119971_d))=_1b9d7eb1b_builtinCallerOut(_119934_e, _119949_fc, _119971_d);
	if (((*(_119971_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_119971_d))))._field_Model.cast_ptr<_1b9b470ed_BuiltinOutCallExprModel>(&__jule_any_type27)))._field_Debug=true;
	return (*(_119971_d));;
}



inline jule::Ptr<_1b9c5d016_Data> _1b9d88d34_builtinCallerStdDebugOutln(jule::Ptr<_1b9c5ec0a_Eval>* _120836_e, jule::Ptr<_1b9b21825_FnCallExpr>* _120851_fc, jule::Ptr<_1b9c5d016_Data>* _120873_d) {
	(*(_120873_d))=_1b9d8004a_builtinCallerOutln(_120836_e, _120851_fc, _120873_d);
	if (((*(_120873_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_120873_d))))._field_Model.cast_ptr<_1b9b474c7_BuiltinOutlnCallExprModel>(&__jule_any_type28)))._field_Debug=true;
	return (*(_120873_d));;
}



inline jule::Ptr<_1ba79de1e_FileInfo> _1ba7e533e_ParseFile(jule::Ptr<_1b9b08ab5_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ba79de1e_FileInfo> _279_finf = jule::new_ptr<_1ba79de1e_FileInfo>();;
	({
		__jule_tuple_x_1b9b1692a_Ast__jule_tuple_s_23d21115a_Log __jule_assign_result = _1ba7e5916_parseFileset(_2318_f);
		(*(_279_finf))._field_Ast = __jule_assign_result.__jule_result_arg0;
		(*(_279_finf))._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if (((*(_279_finf))._field_Errors.len() > 0LL)) {
		(*(_279_finf))._field_Ast=nullptr;
	};
	return _279_finf;;
}



inline __jule_tuple_x_1b9b1692a_Ast__jule_tuple_s_23d21115a_Log _1ba7e5916_parseFileset(jule::Ptr<_1b9b08ab5_File> _5521_f) {
	__jule_tuple_x_1b9b1692a_Ast__jule_tuple_s_23d21115a_Log __jule_func_result;
	jule::Ptr<_1ba81aed0_parser> _569_p = jule::new_ptr<_1ba81aed0_parser>();;
	_1ba82baa1_parse(_569_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = (*(_569_p))._field_ast;
	__jule_func_result.__jule_result_arg1 = (*(_569_p))._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1b9b287d8_ScopeTree> _1ba7e6395_newScope(void) {
	return jule::new_ptr<_1b9b287d8_ScopeTree>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1ba7e6719_isSt(jule::Ptr<_1b9b032eb_Token> _499_current, jule::Ptr<_1b9b032eb_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=(((*(_499_current))._field_Id == static_cast<jule::U32>(3LLU)) || ((*(_4926_prev))._field_Row < (*(_499_current))._field_Row));
	__jule_func_result.__jule_result_arg1=((*(_499_current))._field_Id == static_cast<jule::U32>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _1ba7e6a8d_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _5526_tokens, jule::I32* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*((*(_5526_tokens))[((*(_5545_i)) - 2LL)]))._field_Id == static_cast<jule::U32>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1b9b032eb_Token> _619_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return (((*(_619_prev))._field_Id == static_cast<jule::U32>(17LLU)) || (_1b9b03d46_IsBinOp((*(_619_prev))._field_Id) && ((*(_619_prev))._field_Row < (*((*(_5526_tokens))[(*(_5545_i))]))._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1ba7e6e56_nextStPos(jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _6815_tokens, jule::I32 _6833_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _699_braceN = 0LL;;
	jule::I32 _709_i = _6833_start;;
	for (; (_709_i < (*(_6815_tokens)).len()); (_709_i)++) {
		{
			jule::Bool _7213_ok = false;;
			jule::Bool _7313_terminated = false;;
			jule::Ptr<_1b9b032eb_Token> _749_tok = (*(_6815_tokens))[_709_i];;
			{
				auto &_match_expr{ (*(_749_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1ca8dce82:;
					{
						if (((_699_braceN == 0LL) && (_709_i > _6833_start))) {
							if ((!(_1ba7e6a8d_prevIsIncompleteExpr(_6815_tokens, &(_709_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ba7e6719_isSt(_749_tok, (*(_6815_tokens))[(_709_i - 1LL)]);
									_7213_ok = __jule_assign_result.__jule_result_arg0;
									_7313_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_7213_ok) {
									goto _julec_label_1ca8dcb0d;
								};
							};
						};
						(_699_braceN)++;
						goto _iter_next_1ca8dbc83;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1ca8dd009:;
					{
						(_699_braceN)--;
						if (((_699_braceN == 0LL) && ((_709_i + 1LL) < (*(_6815_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ba7e6719_isSt((*(_6815_tokens))[(_709_i + 1LL)], _749_tok);
								_7213_ok = __jule_assign_result.__jule_result_arg0;
								_7313_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_7213_ok) {
								(_709_i)++;
								goto _julec_label_1ca8dcb0d;
							};
						};
						goto _iter_next_1ca8dbc83;
					}
				}
				_match_end_1ca8dce1b:;
			};
			if ((_699_braceN != 0LL)) {
				goto _iter_next_1ca8dbc83;
			};
			if ((_709_i > _6833_start)) {
				if (_1ba7e6a8d_prevIsIncompleteExpr(_6815_tokens, &(_709_i))) {
					goto _iter_next_1ca8dbc83;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ba7e6719_isSt(_749_tok, (*(_6815_tokens))[(_709_i - 1LL)]);
					_7213_ok = __jule_assign_result.__jule_result_arg0;
					_7313_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ba7e6719_isSt(_749_tok, _749_tok);
					_7213_ok = __jule_assign_result.__jule_result_arg0;
					_7313_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_7213_ok))) {
				goto _iter_next_1ca8dbc83;
			};
			_julec_label_1ca8dcb0d:;
			if (_7313_terminated) {
				(_709_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _709_i;
			__jule_func_result.__jule_result_arg1 = _7313_terminated;
			return __jule_func_result;;
		}
	_iter_next_1ca8dbc83:;
	}
	_iter_end_1ca8dbc83:;;
	__jule_func_result.__jule_result_arg0 = _709_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1b9b032eb_Token__jule_tuple_bool _1ba7e72ca_skipSt(jule::I32* _13016_i, jule::Slice<jule::Ptr<_1b9b032eb_Token>> _13028_tokens) {
	__jule_tuple_sx_1b9b032eb_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _1315_start = (*(_13016_i));;
	jule::Bool _1329_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ba7e6e56_nextStPos(&(_13028_tokens), _1315_start);
		(*(_13016_i)) = __jule_assign_result.__jule_result_arg0;
		_1329_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1b9b032eb_Token>> _1349_stTokens = _13028_tokens.slice(_1315_start, (*(_13016_i)));;
	if (_1329_terminated) {
		if ((_1349_stTokens.len() == 1LL)) {
			({
				__jule_tuple_sx_1b9b032eb_Token__jule_tuple_bool __jule_assign_result = _1ba7e72ca_skipSt(_13016_i, _13028_tokens);
				_1349_stTokens = __jule_assign_result.__jule_result_arg0;
				_1329_terminated = __jule_assign_result.__jule_result_arg1;
			});
			__jule_func_result.__jule_result_arg0 = _1349_stTokens;
			__jule_func_result.__jule_result_arg1 = _1329_terminated;
			return __jule_func_result;;
		};
		(_1349_stTokens).mut_slice(0LL, (_1349_stTokens.len() - 1LL));;
	};
	__jule_func_result.__jule_result_arg0 = _1349_stTokens;
	__jule_func_result.__jule_result_arg1 = _1329_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1ba7e760a_stmt>> _1ba7e79b2_splitStmts(jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _15220_tokens) {
	jule::Slice<jule::Ptr<_1ba7e760a_stmt>> _1539_stmts = jule::Slice<jule::Ptr<_1ba7e760a_stmt>>::alloc(0LL, 20LL);;
	jule::I32 _1549_pos = 0LL;;
	while ((_1549_pos < (*(_15220_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_1b9b032eb_Token>> _15613_stmt;;
			jule::Bool _15619_terminated = false;;
			({
				__jule_tuple_sx_1b9b032eb_Token__jule_tuple_bool __jule_assign_result = _1ba7e72ca_skipSt(&(_1549_pos), (*(_15220_tokens)));
				_15613_stmt = __jule_assign_result.__jule_result_arg0;
				_15619_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_1ba7e760a_stmt>> &__jule_push_dest = _1539_stmts; __jule_push_dest.push(jule::new_ptr<_1ba7e760a_stmt>(_1ba7e760a_stmt{._field_tokens=_15613_stmt, ._field_terminated=_15619_terminated})); };
		}
	_iter_next_1ca8e7211:;
	}
	_iter_end_1ca8e7211:;;
	return _1539_stmts;;
}



inline jule::Bool _1ba815b01_isTypeOp(jule::U32* _88214_id) {
	return ((((*(_88214_id)) == static_cast<jule::U32>(65LLU)) || ((*(_88214_id)) == static_cast<jule::U32>(54LLU))) || ((*(_88214_id)) == static_cast<jule::U32>(62LLU)));;
}



inline jule::Bool _1ba815e0e_isTypeRange(jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _88921_tokens) {
	jule::Bool _8909_op = false;;
	{
		auto expr = _88921_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca9a1342:;
		if (it != expr_end) {
			jule::I32 _8919_i = it - expr->begin();
			jule::Ptr<_1b9b032eb_Token> _89112_token = *it;
			{
				if (((*(_89112_token))._field_Id == static_cast<jule::U32>(76LLU))) {
					if (_8909_op) {
						return true;;
					};
					jule::I32 _89617_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_1b9b032eb_Token>> _89717_lTokens = (*(_88921_tokens)).slice(_8919_i);;
					{
						auto expr = &(_89717_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ca9a4037:;
						if (it != expr_end) {
							jule::Ptr<_1b9b032eb_Token> _89820_lToken = *it;
							{
								{
									auto &_match_expr{ (*(_89820_lToken))._field_Id };
									
									if (_match_expr == static_cast<jule::U32>(76LLU)) {
										_case_begin_1ca9a4d07:;
										{
											(_89617_rangeN)++;
											goto _iter_next_1ca9a4037;
										}
									}
									else if (_match_expr == static_cast<jule::U32>(77LLU)) {
										_case_begin_1ca9a4d7e:;
										{
											(_89617_rangeN)--;
											goto _iter_next_1ca9a4037;
										}
									}
									_match_end_1ca9a4c3b:;
								};
								if ((_89617_rangeN == 0LL)) {
									return _1ba815b01_isTypeOp(&((*(_89820_lToken))._field_Id));;
								};
							}
							_iter_next_1ca9a4037:;
							++it;
							goto _iter_begin_1ca9a4037;
						}
						_iter_end_1ca9a4037:;
					};
					return true;;
				};
				if ((!(_1ba815b01_isTypeOp(&((*(_89112_token))._field_Id))))) {
					return false;;
				};
				_8909_op=true;
			}
			_iter_next_1ca9a1342:;
			++it;
			_8919_i++;
			goto _iter_begin_1ca9a1342;
		}
		_iter_end_1ca9a1342:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1b9b032eb_Token>> _1ba8161c8_getBlockExpr(jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _92222_tokens) {
	jule::I32 _9239_braceN = 0LL;;
	jule::I32 _9249_skipToNextBraceClose = 0LL;;
	{
		auto expr = _92222_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca9a67a9:;
		if (it != expr_end) {
			jule::I32 _9259_i = it - expr->begin();
			jule::Ptr<_1b9b032eb_Token> _92512_tok = *it;
			{
				{
					auto &_match_expr{ (*(_92512_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(13LLU) || _match_expr == static_cast<jule::U32>(14LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
						_case_begin_1ca9a76bc:;
						{
							(_9249_skipToNextBraceClose)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1ca9a7744:;
						{
							if (((_9239_braceN > 0LL) || (_9249_skipToNextBraceClose > 0LL))) {
								if ((_9249_skipToNextBraceClose > 0LL)) {
									(_9249_skipToNextBraceClose)--;
								};
								(_9239_braceN)++;
								goto _match_end_1ca9a75ce;
							};
							return (*(_92222_tokens)).slice(0LL, _9259_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1ca9a77bb:;
						{
							(_9239_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1ca9a7843:;
						{
							(_9239_braceN)--;
						}
					}
					_match_end_1ca9a75ce:;
				};
			}
			_iter_next_1ca9a67a9:;
			++it;
			_9259_i++;
			goto _iter_begin_1ca9a67a9;
		}
		_iter_end_1ca9a67a9:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1b9b032eb_Token__jule_tuple_sx_1b9b032eb_Token _1ba816591_splitDelim(jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _95220_tokens, jule::U32 _95238_delim) {
	__jule_tuple_sx_1b9b032eb_Token__jule_tuple_sx_1b9b032eb_Token __jule_func_result;
	jule::I32 _9539_rangeN = 0LL;;
	{
		auto expr = _95220_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca9a9ed8:;
		if (it != expr_end) {
			jule::I32 _9549_i = it - expr->begin();
			jule::Ptr<_1b9b032eb_Token> _95412_token = *it;
			{
				{
					auto &_match_expr{ (*(_95412_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1ca9aacca:;
						{
							(_9539_rangeN)++;
							goto _iter_next_1ca9a9ed8;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1ca9aad52:;
						{
							(_9539_rangeN)--;
						}
					}
					else if (_match_expr == _95238_delim) {
						_case_begin_1ca9aadc9:;
						{
							if ((_9539_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_1b9b032eb_Token>> _96721_l = (*(_95220_tokens)).slice(0LL, _9549_i);;
								jule::Slice<jule::Ptr<_1b9b032eb_Token>> _96821_r = (*(_95220_tokens)).slice((_9549_i + 1LL));;
								__jule_func_result.__jule_result_arg0 = _96721_l;
								__jule_func_result.__jule_result_arg1 = _96821_r;
								return __jule_func_result;;
							};
						}
					}
					_match_end_1ca9aabed:;
				};
			}
			_iter_next_1ca9a9ed8:;
			++it;
			_9549_i++;
			goto _iter_begin_1ca9a9ed8;
		}
		_iter_end_1ca9a9ed8:;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I32 _1ba81685a_findLowestPrecOp(jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _97822_tokens) {
	jule::U8 _9839_prec = 255LLU;;
	jule::I32 _9849_precPos = -1LL;;
	jule::I32 _9869_braceN = 0LL;;
	jule::Bool _9879_skipToNextBraceOpen = false;;
	{
		auto expr = _97822_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ca9ad805:;
		if (it != expr_end) {
			jule::I32 _9889_i = it - expr->begin();
			jule::Ptr<_1b9b032eb_Token> *_98812_token = it;
			{
				{
					auto &_match_expr{ (*((*(_98812_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1ca9ae64c:;
						{
							_9879_skipToNextBraceOpen=false;
							goto _case_begin_1ca9ae6c4;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1ca9ae6c4:;
						{
							(_9869_braceN)++;
							goto _iter_next_1ca9ad805;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(75LLU) || _match_expr == static_cast<jule::U32>(77LLU)) {
						_case_begin_1ca9ae74b:;
						{
							(_9869_braceN)--;
							goto _iter_next_1ca9ad805;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(13LLU)) {
						_case_begin_1ca9ae7c3:;
						{
							_9879_skipToNextBraceOpen=true;
							goto _iter_next_1ca9ad805;
						}
					}
					_match_end_1ca9ae55e:;
				};
				{
					
					if (_9879_skipToNextBraceOpen) {
						_case_begin_1ca9b0c36:;
						{
							goto _iter_next_1ca9ad805;
						}
					}
					else if ((_9889_i == 0LL)) {
						_case_begin_1ca9b0cad:;
						{
							goto _iter_next_1ca9ad805;
						}
					}
					else if ((_9869_braceN > 0LL)) {
						_case_begin_1ca9b0d35:;
						{
							goto _iter_next_1ca9ad805;
						}
					}
					else if ((!(_1b9b03d46_IsBinOp((*((*(_98812_token))))._field_Id)))) {
						_case_begin_1ca9b0dac:;
						{
							goto _iter_next_1ca9ad805;
						}
					}
					_match_end_1ca9b09d3:;
				};
				jule::Ptr<_1b9b032eb_Token> _10179_left = (*(_97822_tokens))[(_9889_i - 1LL)];;
				if ((_1b9b03a38_IsUnaryOp((*(_10179_left))._field_Id) || ((*(_10179_left))._field_Id == static_cast<jule::U32>(8LLU)))) {
					goto _iter_next_1ca9ad805;
				};
				if (((_9889_i > 1LL) && ((*(_10179_left))._field_Id == static_cast<jule::U32>(77LLU)))) {
					jule::Ptr<_1b9b032eb_Token> _102513_lleft = (*(_97822_tokens))[(_9889_i - 2LL)];;
					if (((*(_102513_lleft))._field_Id == static_cast<jule::U32>(76LLU))) {
						if ((((*((*(_98812_token))))._field_Id == static_cast<jule::U32>(65LLU)) || ((*((*(_98812_token))))._field_Id == static_cast<jule::U32>(62LLU)))) {
							goto _iter_next_1ca9ad805;
						};
					};
				};
				jule::U8 _10349_p = _1b9b03670_Prec((*(_98812_token)).ptr());;
				if (((_10349_p != 0LLU) && (_10349_p <= _9839_prec))) {
					_9839_prec=_10349_p;
					_9849_precPos=_9889_i;
				};
			}
			_iter_next_1ca9ad805:;
			++it;
			_9889_i++;
			goto _iter_begin_1ca9ad805;
		}
		_iter_end_1ca9ad805:;
	};
	return _9849_precPos;;
}



inline jule::Ptr<_1b9b1e526_IdentExpr> _1ba816b24_buildIdentExpr(jule::Ptr<_1b9b032eb_Token>* _104324_token) {
	return jule::new_ptr<_1b9b1e526_IdentExpr>(_1b9b1e526_IdentExpr{._field_Token=(*(_104324_token)), ._field_Ident=(*((*(_104324_token))))._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_1b9b032eb_Token__jule_tuple_int _1ba816ddd_getRangeExprTokens(jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _105128_tokens) {
	__jule_tuple_sx_1b9b032eb_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I32 _10529_rangeN = 0LL;;
	jule::I32 _10539_i = ((*(_105128_tokens)).len() - 1LL);;
	for (; (_10539_i >= 0LL); (_10539_i)--) {
		{
			jule::Ptr<_1b9b032eb_Token> _10559_tok = (*(_105128_tokens))[_10539_i];;
			{
				auto &_match_expr{ (*(_10559_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1ca9b7501:;
					{
						(_10529_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1ca9b7578:;
					{
						(_10529_rangeN)--;
					}
				}
				_match_end_1ca9b748a:;
			};
			if ((_10529_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_105128_tokens)).slice(0LL, _10539_i);
				__jule_func_result.__jule_result_arg1 = _10529_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1ca9b68da:;
	}
	_iter_end_1ca9b68da:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _10529_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1ba817be1_checkAssignTokens(jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1b9b07bc4_IsAssign((*((*(_1623_tokens))[0LL]))._field_Id))))) {
		return false;;
	};
	jule::I32 _209_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1caa4c476:;
		if (it != expr_end) {
			jule::Ptr<_1b9b032eb_Token> *_2112_t = it;
			{
				{
					auto &_match_expr{ (*((*(_2112_t))))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1caa4d059:;
						{
							(_209_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1caa4d0d1:;
						{
							(_209_braceN)--;
						}
					}
					_match_end_1caa4ce8d:;
				};
				{
					
					if ((_209_braceN < 0LL)) {
						_case_begin_1caa4de6c:;
						{
							return false;;
						}
					}
					else if ((_209_braceN > 0LL)) {
						_case_begin_1caa4ded3:;
						{
							goto _iter_next_1caa4c476;
						}
					}
					else if (_1b9b08257_IsAssignOp((*((*(_2112_t))))._field_Id) || ((*((*(_2112_t))))._field_Id == static_cast<jule::U32>(38LLU))) {
						_case_begin_1caa4e05a:;
						{
							return true;;
						}
					}
					_match_end_1caa4ddc3:;
				};
			}
			_iter_next_1caa4c476:;
			++it;
			goto _iter_begin_1caa4c476;
		}
		_iter_end_1caa4c476:;
	};
	return false;;
}



inline _23d21115a_Log _1ba818dbd_makeErr(jule::I32 _5112_row, jule::I32 _5122_col, jule::Ptr<_1b9b08ab5_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args) {
	return _23d21115a_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_5112_row, ._field_Column=_5122_col, ._field_Path=(*((*(_5133_f))))._field_Path, ._field_Text=_23d2115bc_Logf(_5143_fmt, _5156_args), };;
}



inline jule::Slice<jule::Ptr<_1b9b032eb_Token>> _1ba8193b8_range(jule::I32* _6915_i, jule::U32 _6923_open, jule::U32 _6938_close, jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _6959_tokens) {
	if (((*(_6915_i)) >= (*(_6959_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_1b9b032eb_Token> _735_tok = (*(_6959_tokens))[(*(_6915_i))];;
	if (((*(_735_tok))._field_Id != _6923_open)) {
		return nullptr;;
	};
	((*(_6915_i)))++;
	jule::I32 _789_rangeN = 1LL;;
	jule::I32 _795_start = (*(_6915_i));;
	for (; ((_789_rangeN != 0LL) && ((*(_6915_i)) < (*(_6959_tokens)).len())); ((*(_6915_i)))++) {
		{
			jule::Ptr<_1b9b032eb_Token> _819_token = (*(_6959_tokens))[(*(_6915_i))];;
			{
				auto &_match_expr{ (*(_819_token))._field_Id };
				
				if (_match_expr == _6923_open) {
					_case_begin_1caa53cc9:;
					{
						(_789_rangeN)++;
					}
				}
				else if (_match_expr == _6938_close) {
					_case_begin_1caa53d51:;
					{
						(_789_rangeN)--;
					}
				}
				_match_end_1caa53c63:;
			};
		}
	_iter_next_1caa5313b:;
	}
	_iter_end_1caa5313b:;;
	return (*(_6959_tokens)).slice(_795_start, ((*(_6915_i)) - 1LL));;
}



inline __jule_tuple_sx_1b9b032eb_Token__jule_tuple_sx_1b9b032eb_Token _1ba819682_rangeLast(jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _9919_tokens) {
	__jule_tuple_sx_1b9b032eb_Token__jule_tuple_sx_1b9b032eb_Token __jule_func_result;
	if (((*(_9919_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U32 _1035_first = (*((*(_9919_tokens))[((*(_9919_tokens)).len() - 1LL)]))._field_Id;;
	if ((((_1035_first != static_cast<jule::U32>(73LLU)) && (_1035_first != static_cast<jule::U32>(76LLU))) && (_1035_first != static_cast<jule::U32>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I32 _1099_braceN = 0LL;;
	jule::I32 _1109_i = ((*(_9919_tokens)).len() - 1LL);;
	for (; (_1109_i >= 0LL); (_1109_i)--) {
		{
			jule::Ptr<_1b9b032eb_Token> _1129_token = (*(_9919_tokens))[_1109_i];;
			{
				auto &_match_expr{ (*(_1129_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1caa578d2:;
					{
						(_1099_braceN)++;
						goto _iter_next_1caa56d87;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1caa57959:;
					{
						(_1099_braceN)--;
					}
				}
				_match_end_1caa5786b:;
			};
			if ((_1099_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_9919_tokens)).slice(0LL, _1109_i);
				__jule_func_result.__jule_result_arg1 = (*(_9919_tokens)).slice(_1109_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1caa56d87:;
	}
	_iter_end_1caa56d87:;;
	__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1b9b032eb_Token__jule_tuple_s_23d21115a_Log _1ba819b38_parts(jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _13715_tokens, jule::U32 _13733_id, jule::Bool _13746_exprMust) {
	__jule_tuple_ssx_1b9b032eb_Token__jule_tuple_s_23d21115a_Log __jule_func_result;
	if (((*(_13715_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>> _14213_parts = nullptr;;
	jule::Slice<_23d21115a_Log> _14313_errors = nullptr;;
	jule::I32 _1459_rangeN = 0LL;;
	jule::I32 _1469_last = 0LL;;
	{
		auto expr = _13715_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1caa55a34:;
		if (it != expr_end) {
			jule::I32 _1479_i = it - expr->begin();
			jule::Ptr<_1b9b032eb_Token> _14712_token = *it;
			{
				{
					auto &_match_expr{ (*(_14712_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1caa5b9c4:;
						{
							(_1459_rangeN)++;
							goto _iter_next_1caa55a34;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1caa5ba4b:;
						{
							(_1459_rangeN)--;
						}
					}
					_match_end_1caa5b908:;
				};
				if ((_1459_rangeN > 0LL)) {
					goto _iter_next_1caa55a34;
				};
				if (((*(_14712_token))._field_Id == _13733_id)) {
					if ((_13746_exprMust && ((_1479_i - _1469_last) <= 0LL))) {
						_23d21115a_Log _16617_err = _1ba818dbd_makeErr((*(_14712_token))._field_Row, (*(_14712_token))._field_Column, &((*(_14712_token))._field_File), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());;
						{ jule::Slice<_23d21115a_Log> &__jule_push_dest = _14313_errors; __jule_push_dest.push(_16617_err); };
					};
					{ jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>> &__jule_push_dest = _14213_parts; __jule_push_dest.push((*(_13715_tokens)).slice(_1469_last, _1479_i)); };
					_1469_last=static_cast<jule::I32>((_1479_i + 1LL));
				};
			}
			_iter_next_1caa55a34:;
			++it;
			_1479_i++;
			goto _iter_begin_1caa55a34;
		}
		_iter_end_1caa55a34:;
	};
	if ((_1469_last < (*(_13715_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>> &__jule_push_dest = _14213_parts; __jule_push_dest.push((*(_13715_tokens)).slice(_1469_last)); };
	} else if ((!(_13746_exprMust))) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1b9b032eb_Token>>> &__jule_push_dest = _14213_parts; __jule_push_dest.push(jule::Slice<jule::Ptr<_1b9b032eb_Token>>()); };
	};
	__jule_func_result.__jule_result_arg0 = _14213_parts;
	__jule_func_result.__jule_result_arg1 = _14313_errors;
	return __jule_func_result;;
}



inline jule::U32 _1ba819e02_getCloseOfBrace(jule::U32 _18320_left) {
	{
		auto &_match_expr{ _18320_left };
		
		if (_match_expr == static_cast<jule::U32>(75LLU)) {
			_case_begin_1caa5eb92:;
			{
				return static_cast<jule::U32>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_1caa5ec08:;
			{
				return static_cast<jule::U32>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(77LLU)) {
			_case_begin_1caa5ec6e:;
			{
				return static_cast<jule::U32>(76LLU);;
			}
		}
		else {
			_case_begin_1caa5eb2b:;
			{
				return _18320_left;;
			}
		}
		_match_end_1caa5abd2:;
	};
}



inline _23d21115a_Log _1ba81a331_compilerErr(jule::Ptr<_1b9b032eb_Token>* _19617_token, jule::Str* _19633_fmt, jule::Slice<jule::Any> _19646_args) {
	return _23d21115a_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*((*(_19617_token))))._field_Row, ._field_Column=(*((*(_19617_token))))._field_Column, ._field_Path=(*((*((*(_19617_token))))._field_File))._field_Path, ._field_Text=_23d2115bc_Logf((*(_19633_fmt)), _19646_args), ._field_Line=_1b9b09a94_GetRow((*((*(_19617_token))))._field_File.ptr(), (*((*(_19617_token))))._field_Row), };;
}



inline void _1ba81a6c7_pushSuggestion(_23d21115a_Log* _20730_log, jule::Str _20741_fmt, jule::Slice<jule::Any> _20754_args) {
	(*(_20730_log))._field_Suggestion=_23d2115bc_Logf(_20741_fmt, _20754_args);
}



inline jule::Str _1ba81aa6d_tokstoa(jule::Slice<jule::Ptr<_1b9b032eb_Token>>* _21113_tokens) {
	jule::I32 _2129_n = 0LL;;
	{
		auto expr = _21113_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1caa63ed7:;
		if (it != expr_end) {
			jule::Ptr<_1b9b032eb_Token> *_21312_token = it;
			{
				_2129_n+=(*((*(_21312_token))))._field_Kind.len();
			}
			_iter_next_1caa63ed7:;
			++it;
			goto _iter_begin_1caa63ed7;
		}
		_iter_end_1caa63ed7:;
	};
	_23d16295d_StrBuilder _2169_s = static__23d162c7c_New(_2129_n);;
	{
		auto expr = _21113_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1caa64d73:;
		if (it != expr_end) {
			jule::Ptr<_1b9b032eb_Token> *_21712_token = it;
			{
				_23d16b604_WriteStr(&_2169_s, (*((*(_21712_token))))._field_Kind);
			}
			_iter_next_1caa64d73:;
			++it;
			goto _iter_begin_1caa64d73;
		}
		_iter_end_1caa64d73:;
	};
	return _23d16bdeb_Str(&_2169_s);;
}



inline jule::Ptr<_1b9b187b7_TypeDecl> _1ba82c596_buildVoidType(void) {
	return jule::new_ptr<_1b9b187b7_TypeDecl>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1ba07d8ec_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str::lit("windows", 7)) {
			_case_begin_1cac1010b:;
			{
				__jule_func_result.__jule_result_arg0=_23d214328_IsWindows(_23d32306e_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("darwin", 6)) {
			_case_begin_1cac10172:;
			{
				__jule_func_result.__jule_result_arg0=_23d214603_IsDarwin(_23d32306e_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("linux", 5)) {
			_case_begin_1cac0ed53:;
			{
				__jule_func_result.__jule_result_arg0=_23d2148bc_IsLinux(_23d32306e_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("unix", 4)) {
			_case_begin_1cac0edb9:;
			{
				__jule_func_result.__jule_result_arg0=_23d21555a_IsUnix(_23d32306e_Os);
			}
		}
		else {
			_case_begin_1cac0e803:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1cac0ec43:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1ba07da40_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str::lit("i386", 4)) {
			_case_begin_1cac12383:;
			{
				__jule_func_result.__jule_result_arg0=_23d214c0d_IsI386(_23d323338_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("amd64", 5)) {
			_case_begin_1cac12064:;
			{
				__jule_func_result.__jule_result_arg0=_23d214ec7_IsAmd64(_23d323338_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("arm64", 5)) {
			_case_begin_1cac120ca:;
			{
				__jule_func_result.__jule_result_arg0=_23d215291_IsArm64(_23d323338_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x64", 3)) {
			_case_begin_1cac12141:;
			{
				__jule_func_result.__jule_result_arg0=_23d215bba_Is64Bit(_23d323338_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x32", 3)) {
			_case_begin_1cac121a7:;
			{
				__jule_func_result.__jule_result_arg0=_23d215901_Is32Bit(_23d323338_Arch);
			}
		}
		else {
			_case_begin_1cac11a14:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1cac11e54:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ba098ede_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_23d1705a3_Base(_5029_p);
	jule::I32 _525_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_525_n - _23d170020_Ext(_5029_p).len()));;
	jule::Str _589_a1 = jule::Str();;
	jule::Str _619_a2 = jule::Str();;
	jule::I32 _649_i = _23d151287_FindLastByte(_5029_p, '_');;
	if ((_649_i == -1LL)) {
		jule::Bool _6713_ok = false;;
		jule::Bool _6721_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ba07d8ec_checkOs(_5029_p);
			_6713_ok = __jule_assign_result.__jule_result_arg0;
			_6721_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6721_exist) {
			return _6713_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ba07da40_checkArch(_5029_p);
			_6713_ok = __jule_assign_result.__jule_result_arg0;
			_6721_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6721_exist)) || _6713_ok);;
	};
	if (((_649_i + 1LL) >= _525_n)) {
		return true;;
	};
	_589_a1=_5029_p.slice((_649_i + 1LL));
	(_5029_p).mut_slice(0LL, _649_i);;
	_649_i=static_cast<jule::I32>(_23d151287_FindLastByte(_5029_p, '_'));
	if ((_649_i != -1LL)) {
		_619_a2=_5029_p.slice((_649_i + 1LL));
	};
	if ((_619_a2).empty()) {
		jule::Bool _8813_ok = false;;
		jule::Bool _8821_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ba07d8ec_checkOs(_589_a1);
			_8813_ok = __jule_assign_result.__jule_result_arg0;
			_8821_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8821_exist) {
			return _8813_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ba07da40_checkArch(_589_a1);
			_8813_ok = __jule_assign_result.__jule_result_arg0;
			_8821_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8821_exist)) || _8813_ok);;
	};
	jule::Bool _969_ok = false;;
	jule::Bool _9617_exist = false;;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ba07da40_checkArch(_589_a1);
		_969_ok = __jule_assign_result.__jule_result_arg0;
		_9617_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9617_exist) {
		if ((!(_969_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ba07d8ec_checkOs(_619_a2);
			_969_ok = __jule_assign_result.__jule_result_arg0;
			_9617_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9617_exist)) || _969_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ba07d8ec_checkOs(_589_a1);
		_969_ok = __jule_assign_result.__jule_result_arg0;
		_9617_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9617_exist)) || _969_ok);;
}



inline void _1ba09a166_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_23d32306e_Os); };
	if (_23d21555a_IsUnix(_23d32306e_Os)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str::lit("unix", 4)); };
	};
}



inline void _1ba09a3db_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_23d323338_Arch); };
	if (_23d215bba_Is64Bit(_23d323338_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x64", 3)); };
	};
	if (_23d215901_Is32Bit(_23d323338_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x32", 3)); };
	};
}



inline void _1ba09a6c7_initVars(jule::Slice<jule::Str>* _5518_vars, _1ba099d47_CompileInfo* _5532_info) {
	_1ba09a166_setOsVars(_5518_vars);
	_1ba09a3db_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1cac1bdb5:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("clang", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1cac1be2b:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("gcc", 3)); };
			}
		}
		_match_end_1cac1bd60:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1cac1d092:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp14", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1cac1d108:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp17", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1cac1d16e:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp20", 5)); };
			}
		}
		_match_end_1cac1d2b2:;
	};
}



inline jule::Slice<jule::U8> _1ba8316bb_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__23bca884c_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str::lit("error: file cannot read", 23));
			;
			_23d321e80_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _23d21115a_Log _1ba831996_flatCompilerErr(jule::Str _4120_text) {
	return _23d21115a_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Text=_4120_text, };;
}



inline void _1ba8362b4_pushPasses(jule::Ptr<_1b9bb4126_Package>* _11120_p, jule::Slice<jule::Str>* _11144_passes) {
	{
		auto expr = &((*((*(_11120_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac5134a:;
		if (it != expr_end) {
			jule::Ptr<_1b9c57ce1_SymbolTable> _11217_f = *it;
			{
				_julec_label_1cac51c0d:;
				{
					auto expr = &((*(_11217_f))._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cac51dc8:;
					if (it != expr_end) {
						_1b9b56838_Pass _11416_pass = *it;
						{
							if ((_11416_pass._field_Text).empty()) {
								goto _iter_next_1cac51dc8;
							};
							{
								auto expr = _11144_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1cac528e0:;
								if (it != expr_end) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_1cac51dc8;
										};
									}
									_iter_next_1cac528e0:;
									++it;
									goto _iter_begin_1cac528e0;
								}
								_iter_end_1cac528e0:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_11144_passes)); __jule_push_dest.push(_11416_pass._field_Text); };
						}
						_iter_next_1cac51dc8:;
						++it;
						goto _iter_begin_1cac51dc8;
					}
					_iter_end_1cac51dc8:;
				};
			}
			_iter_next_1cac5134a:;
			++it;
			goto _iter_begin_1cac5134a;
		}
		_iter_end_1cac5134a:;
	};
}



inline jule::Slice<jule::Str> _1ba83667c_getAllUniquePasses(jule::Ptr<_1b9bb4126_Package>* _12828_pkg, jule::Slice<jule::Ptr<_1b9bb1200_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_1ba8362b4_pushPasses(_12828_pkg, &(_12913_passes));
	{
		auto expr = &(_12853_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac5445d:;
		if (it != expr_end) {
			jule::Ptr<_1b9bb1200_ImportInfo> _13217_u = *it;
			{
				if ((!((*(_13217_u))._field_Binded))) {
					_1ba8362b4_pushPasses(&((*(_13217_u))._field_Package), &(_12913_passes));
				};
			}
			_iter_next_1cac5445d:;
			++it;
			goto _iter_begin_1cac5445d;
		}
		_iter_end_1cac5445d:;
	};
	return _12913_passes;;
}



inline _1ba099d47_CompileInfo _1ba83688b_buildCompileInfo(void) {
	_1ba099d47_CompileInfo _1429_info = _1ba099d47_CompileInfo{._field_Prod=_22e08143a_Production, ._field_Test=_22e0809cd_Test, };;
	{
		auto &_match_expr{ _22e07ed40_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1cac55739:;
			{
				_1429_info._field_Compiler=jule::Str::lit("clang", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1cac557e4:;
			{
				_1429_info._field_Compiler=jule::Str::lit("gcc", 3);
			}
		}
		_match_end_1cac540c8:;
	};
	{
		auto &_match_expr{ _22e080280_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1cac563a5:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1cac54abd:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1cac55b79:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp20", 5);
			}
		}
		_match_end_1cac565e7:;
	};
	return _1429_info;;
}



inline void _1c765e861_EliminateDefines(jule::Ptr<_1ba834944_IR>* _29026_ir) {
	jule::Ptr<_1ba963d5e_ObjectDeadCode> _2919_ocd = static__1ba964304_new(_29026_ir);;
	_1c765e531_elimanate(_2919_ocd);
}



inline jule::Ptr<_1b9b17bd4_Directive> _1c765ec29_findDirective(jule::Slice<jule::Ptr<_1b9b17bd4_Directive>>* _29623_directives, jule::Str _29654_tag) {
	{
		auto expr = _29623_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac8e70c:;
		if (it != expr_end) {
			jule::Ptr<_1b9b17bd4_Directive> _29717_dr = *it;
			{
				if (((*((*(_29717_dr))._field_Tag))._field_Kind == _29654_tag)) {
					return _29717_dr;;
				};
			}
			_iter_next_1cac8e70c:;
			++it;
			goto _iter_begin_1cac8e70c;
		}
		_iter_end_1cac8e70c:;
	};
	return nullptr;;
}



inline jule::Bool _1c766009d_hasDirective(jule::Slice<jule::Ptr<_1b9b17bd4_Directive>>* _30618_directives, jule::Str _30649_tag) {
	return (_1c765ec29_findDirective(&((*(_30618_directives))), _30649_tag) != nullptr);;
}



inline jule::Bool _1c7660466_isTraitMethod(jule::Ptr<_1b9b3c137_StructIns>* _31123_owner, jule::Ptr<_1b9b5216e_FnIns>* _31143_f) {
	{
		auto expr = &((*((*((*(_31123_owner))))._field_Decl))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cac90950:;
		if (it != expr_end) {
			jule::Ptr<_1b9b62514_Trait> _31217_t = *it;
			{
				if ((_1b9b631b3_FindMethod(_31217_t.ptr(), (*((*((*(_31143_f))))._field_Decl))._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_1cac90950:;
			++it;
			goto _iter_begin_1cac90950;
		}
		_iter_end_1cac90950:;
	};
	return false;;
}



inline void _1c766446a_eliminateDeadCodeOfScope(jule::Ptr<_1b9b8ecc2_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_1b9b92665_Label>> _2425_labels = jule::Slice<jule::Ptr<_1b9b92665_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_1b9b92a3e_GotoSt>> _2435_gotos = jule::Slice<jule::Ptr<_1b9b92a3e_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_1c7661269_scopeDeadCode> _2449_sdc = jule::new_ptr<_1c7661269_scopeDeadCode>(_1c7661269_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&((*(_24133_s))._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1b9b92665_Label>>>)((&(_2425_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1b9b92a3e_GotoSt>>>)((&(_2435_gotos)))), });;
	{
		_1c766413a_optimizeStmts(_2449_sdc);
	};
}



inline void _1c76646e0_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1b9b4e26a_Fn>>* _25433_funcs) {
	{
		auto expr = _25433_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cacd3b08:;
		if (it != expr_end) {
			jule::Ptr<_1b9b4e26a_Fn> _25517_func = *it;
			{
				{
					auto expr = &((*(_25517_func))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1cacd6754:;
					if (it != expr_end) {
						jule::Ptr<_1b9b5216e_FnIns> _25621_ins = *it;
						{
							_1c766446a_eliminateDeadCodeOfScope((*(_25621_ins))._field_Scope);
						}
						_iter_next_1cacd6754:;
						++it;
						goto _iter_begin_1cacd6754;
					}
					_iter_end_1cacd6754:;
				};
			}
			_iter_next_1cacd3b08:;
			++it;
			goto _iter_begin_1cacd3b08;
		}
		_iter_end_1cacd3b08:;
	};
}



inline void _1c7664921_eliminateFunctionsScopePackage(jule::Ptr<_1b9bb4126_Package>* _26240_pkg) {
	{
		auto expr = &((*((*(_26240_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cacd6578:;
		if (it != expr_end) {
			jule::Ptr<_1b9c57ce1_SymbolTable> _26317_f = *it;
			{
				_1c76646e0_eliminateScopeFunctions(&((*(_26317_f))._field_Funcs));
			}
			_iter_next_1cacd6578:;
			++it;
			goto _iter_begin_1cacd6578;
		}
		_iter_end_1cacd6578:;
	};
}



inline void _1c7664bc9_eliminateScopePackage(jule::Ptr<_1b9bb4126_Package>* _26831_pkg) {
	_1c7664921_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _1c7664e0a_EliminateScopes(jule::Ptr<_1ba834944_IR>* _27325_ir) {
	jule::I32 _2749_i = ((*((*(_27325_ir))))._field_Used.len() - 1LL);;
	for (; (_2749_i >= 0LL); (_2749_i)--) {
		{
			jule::Ptr<_1b9bb1200_ImportInfo> _27613_u = (*((*(_27325_ir))))._field_Used[_2749_i];;
			if ((!((*(_27613_u))._field_Binded))) {
				_1c7664bc9_eliminateScopePackage(&((*(_27613_u))._field_Package));
			};
		}
	_iter_next_1cacd815c:;
	}
	_iter_end_1cacd815c:;;
	_1c7664bc9_eliminateScopePackage(&((*((*(_27325_ir))))._field_Main));
}



inline jule::Uintptr _1b9d89175_typeData(jule::Any* _1714_m) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(((*(_1714_m))).type)));;
}



inline jule::Bool _1b9d8953d_equalConst(jule::Ptr<_1ec682ce3_Const> _2115_l, jule::Ptr<_1ec682ce3_Const> _2126_r) {
	{
		
		if (_1ec686cb4_IsI64(_2115_l.ptr())) {
			_case_begin_1cad6b2bc:;
			{
				return (_1ec686cb4_IsI64(_2126_r.ptr()) && (_1ec6846b8_ReadI64(_2115_l.ptr()) == _1ec6846b8_ReadI64(_2126_r.ptr())));;
			}
		}
		else if (_1ec68704a_IsU64(_2115_l.ptr())) {
			_case_begin_1cad6b344:;
			{
				return (_1ec68704a_IsU64(_2126_r.ptr()) && (_1ec68494e_ReadU64(_2115_l.ptr()) == _1ec68494e_ReadU64(_2126_r.ptr())));;
			}
		}
		else if (_1ec6877ed_IsF64(_2115_l.ptr())) {
			_case_begin_1cad6b5ec:;
			{
				return (_1ec6877ed_IsF64(_2126_r.ptr()) && (_1ec685202_ReadF64(_2115_l.ptr()) == _1ec685202_ReadF64(_2126_r.ptr())));;
			}
		}
		else if (_1ec687567_IsStr(_2115_l.ptr())) {
			_case_begin_1cad6b663:;
			{
				return (_1ec687567_IsStr(_2126_r.ptr()) && (_1ec684e6b_ReadStr(_2115_l.ptr()) == _1ec684e6b_ReadStr(_2126_r.ptr())));;
			}
		}
		else if (_1ec6872d1_IsBool(_2115_l.ptr())) {
			_case_begin_1cad6b6c9:;
			{
				return (_1ec6872d1_IsBool(_2126_r.ptr()) && (_1ec684bd5_ReadBool(_2115_l.ptr()) == _1ec684bd5_ReadBool(_2126_r.ptr())));;
			}
		}
		else if (_1ec687a84_IsNil(_2115_l.ptr())) {
			_case_begin_1cad6b740:;
			{
				return _1ec687a84_IsNil(_2126_r.ptr());;
			}
		}
		else {
			_case_begin_1cad6b1bd:;
			{
				return false;;
			}
		}
		_match_end_1cad6b124:;
	};
}



inline jule::Bool _1b9d898b2_equalCasting(jule::Ptr<_1b9b42b54_CastingExprModel> _4017_l, jule::Ptr<_1b9b42b54_CastingExprModel> _4039_r) {
	if ((!(_1b9c8d8d7_Equal((*(_4017_l))._field_Kind, (*(_4039_r))._field_Kind)))) {
		return false;;
	};
	return _1b9d8a75e_equalModels((*(_4017_l))._field_Expr, (*(_4039_r))._field_Expr);;
}



inline jule::Bool _1b9d89be2_equalUnary(jule::Ptr<_1b9b41900_UnaryExprModel> _4715_l, jule::Ptr<_1b9b41900_UnaryExprModel> _4735_r) {
	if ((((*((*(_4715_l))._field_Op))._field_Id != (*((*(_4735_r))._field_Op))._field_Id) || ((*((*(_4715_l))._field_Op))._field_Kind != (*((*(_4735_r))._field_Op))._field_Kind))) {
		return false;;
	};
	return _1b9d8a75e_equalModels((*((*(_4715_l))._field_Expr))._field_Model, (*((*(_4735_r))._field_Expr))._field_Model);;
}



inline jule::Bool _1b9d8a066_equalIndexing(jule::Ptr<_1b9b43d86_IndexingExprModel> _5418_l, jule::Ptr<_1b9b43d86_IndexingExprModel> _5441_r) {
	return (_1b9d8a75e_equalModels((*((*(_5418_l))._field_Expr))._field_Model, (*((*(_5441_r))._field_Expr))._field_Model) && _1b9d8a75e_equalModels((*((*(_5418_l))._field_Index))._field_Model, (*((*(_5441_r))._field_Index))._field_Model));;
}



inline jule::Bool _1b9d8a3da_equalBinary(jule::Ptr<_1b9b41526_BinopExprModel> _5916_l, jule::Ptr<_1b9b41526_BinopExprModel> _5936_r) {
	if ((((*((*(_5916_l))._field_Op))._field_Id != (*((*(_5936_r))._field_Op))._field_Id) || ((*((*(_5916_l))._field_Op))._field_Kind != (*((*(_5936_r))._field_Op))._field_Kind))) {
		return false;;
	};
	return (_1b9d8a75e_equalModels((*((*(_5916_l))._field_Left))._field_Model, (*((*(_5936_r))._field_Left))._field_Model) && _1b9d8a75e_equalModels((*((*(_5916_l))._field_Right))._field_Model, (*((*(_5936_r))._field_Right))._field_Model));;
}



inline jule::Bool _1b9d8a75e_equalModels(jule::Any _7016_l, jule::Any _7030_r) {
	if ((_1b9d89175_typeData(&(_7016_l)) != _1b9d89175_typeData(&(_7030_r)))) {
		return false;;
	};
	{
		auto &_match_expr{ _7016_l };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1cad7a298:;
			{
				return (_7016_l.cast_ptr<_1b9c09611_Var>(&__jule_any_type8) == _7030_r.cast_ptr<_1b9c09611_Var>(&__jule_any_type8));;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1cad7a320:;
			{
				jule::Ptr<_1b9b46097_StructSubIdentExprModel> _789_li = _7016_l.cast_ptr<_1b9b46097_StructSubIdentExprModel>(&__jule_any_type97);;
				jule::Ptr<_1b9b46097_StructSubIdentExprModel> _799_ri = _7030_r.cast_ptr<_1b9b46097_StructSubIdentExprModel>(&__jule_any_type97);;
				return (((*(_789_li))._field_Field == (*(_799_ri))._field_Field) && _1b9d8a75e_equalModels((*((*(_789_li))._field_Expr))._field_Model, (*((*(_799_ri))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1cad7a397:;
			{
				return _1b9d8953d_equalConst(_7016_l.cast_ptr<_1ec682ce3_Const>(&__jule_any_type19), _7030_r.cast_ptr<_1ec682ce3_Const>(&__jule_any_type19));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1cad7a5a6:;
			{
				return _1b9d898b2_equalCasting(_7016_l.cast_ptr<_1b9b42b54_CastingExprModel>(&__jule_any_type92), _7030_r.cast_ptr<_1b9b42b54_CastingExprModel>(&__jule_any_type92));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1cad7a61c:;
			{
				return _1b9d89be2_equalUnary(_7016_l.cast_ptr<_1b9b41900_UnaryExprModel>(&__jule_any_type110), _7030_r.cast_ptr<_1b9b41900_UnaryExprModel>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1cad7a683:;
			{
				return _1b9d8a066_equalIndexing(_7016_l.cast_ptr<_1b9b43d86_IndexingExprModel>(&__jule_any_type45), _7030_r.cast_ptr<_1b9b43d86_IndexingExprModel>(&__jule_any_type45));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1cad7a6e9:;
			{
				return _1b9d8a3da_equalBinary(_7016_l.cast_ptr<_1b9b41526_BinopExprModel>(&__jule_any_type111), _7030_r.cast_ptr<_1b9b41526_BinopExprModel>(&__jule_any_type111));;
			}
		}
		else {
			_case_begin_1cad7a232:;
			{
				return false;;
			}
		}
		_match_end_1cad7a133:;
	};
}



inline jule::Bool _1b9d93d94_isStdPackage(jule::Str* _45118_f, jule::Str _45126_p) {
	return _23d14ca9c_HasPrefix((*(_45118_f)), _23d16ec56_Join(jule::Slice<jule::Str>::make({_23d32248b_PathStdlib,_45126_p})));;
}



inline jule::Bool _1b9d941a2_isConstantValidConditionalCase(jule::Ptr<_1b9b901e0_If>* _45536_i) {
	{
		auto &_match_expr{ (*((*(_45536_i))))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1cad80886:;
			{
				jule::Ptr<_1ec682ce3_Const> _4589_c = (*((*(_45536_i))))._field_Expr.cast_ptr<_1ec682ce3_Const>(&__jule_any_type19);;
				return (_1ec6872d1_IsBool(_4589_c.ptr()) && _1ec684bd5_ReadBool(_4589_c.ptr()));;
			}
		}
		_match_end_1cad80831:;
	};
	return false;;
}



inline jule::Bool _1b9d9446b_isUnreachableExpr(jule::Any* _46423_expr) {
	{
		auto &_match_expr{ (*(_46423_expr)) };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1cad80c4e:;
			{
				jule::Ptr<_1ec682ce3_Const> _4679_c = (*(_46423_expr)).cast_ptr<_1ec682ce3_Const>(&__jule_any_type19);;
				return (_1ec6872d1_IsBool(_4679_c.ptr()) && (!(_1ec684bd5_ReadBool(_4679_c.ptr()))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1cad80cb5:;
			{
				jule::Ptr<_1b9b41526_BinopExprModel> _4709_m = (*(_46423_expr)).cast_ptr<_1b9b41526_BinopExprModel>(&__jule_any_type111);;
				if (((*((*(_4709_m))._field_Op))._field_Id == static_cast<jule::U32>(54LLU))) {
					return (_1b9d9446b_isUnreachableExpr(&((*((*(_4709_m))._field_Left))._field_Model)) || _1b9d9446b_isUnreachableExpr(&((*((*(_4709_m))._field_Right))._field_Model)));;
				};
			}
		}
		_match_end_1cad80be9:;
	};
	return false;;
}



inline jule::Bool _1b9d947ac_isConstantValidMatchCase(jule::Ptr<_1b9b94a41_Case>* _47930_case) {
	{
		auto expr = &((*((*(_47930_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cad821c3:;
		if (it != expr_end) {
			jule::Ptr<_1b9c5d016_Data> *_48012_expr = it;
			{
				if (((_1b9c5d8da_IsConst((*(_48012_expr)).ptr()) && _1ec6872d1_IsBool((*((*(_48012_expr))))._field_Constant.ptr())) && _1ec684bd5_ReadBool((*((*(_48012_expr))))._field_Constant.ptr()))) {
					return true;;
				};
			}
			_iter_next_1cad821c3:;
			++it;
			goto _iter_begin_1cad821c3;
		}
		_iter_end_1cad821c3:;
	};
	return false;;
}



inline jule::Bool _1b9d94a76_isUnreachableConditionalCase(jule::Ptr<_1b9b901e0_If>* _48834_i) {
	return _1b9d9446b_isUnreachableExpr(&((*((*(_48834_i))))._field_Expr));;
}



inline jule::Bool _1b9d94d40_isUnreachableMatchCase(jule::Ptr<_1b9b94a41_Case>* _49228_case) {
	{
		auto expr = &((*((*(_49228_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cad86507:;
		if (it != expr_end) {
			jule::Ptr<_1b9c5d016_Data> *_49312_expr = it;
			{
				if ((!(_1b9d9446b_isUnreachableExpr(&((*((*(_49312_expr))))._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1cad86507:;
			++it;
			goto _iter_begin_1cad86507;
		}
		_iter_end_1cad86507:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1b9d9ce9c_checkForBitShiftOpt(jule::Ptr<_1b9b4102b_OperandExprModel>* _47325_l, jule::Ptr<_1b9b4102b_OperandExprModel>* _47348_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_1ec6820de_IsInt(_1b9c8d596_Str((*((*(_47325_l))))._field_Kind.ptr())))) || (!(_1ec6820de_IsInt(_1b9c8d596_Str((*((*(_47348_r))))._field_Kind.ptr())))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_47348_r))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1cadd4c4d:;
			{
				goto _match_end_1cadd5cb5;
			}
		}
		else {
			_case_begin_1cadd5d1a:;
			{
				__jule_func_result.__jule_result_arg0 = false;
				__jule_func_result.__jule_result_arg1 = 0LLU;
				return __jule_func_result;;
			}
		}
		_match_end_1cadd5cb5:;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>(_1ec68571e_AsU64((*((*(_47348_r))))._field_Model.cast_ptr<_1ec682ce3_Const>(&__jule_any_type19).ptr()));
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _4875_j = _1ec631511_Log2(static_cast<jule::F64>(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1)));;
	jule::U64 _4885_z = static_cast<jule::U64>(_4875_j);;
	if ((static_cast<jule::F64>(_4885_z) != _4875_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _4885_z;
	return __jule_func_result;;
}



inline jule::Bool _1b9d9d365_areSameLvalueExprModel(jule::Any* _49628_l, jule::Any* _49643_r) {
	{
		auto &_match_expr{ (*(_49628_l)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1cadd8cb8:;
			{
				return ((*(_49643_r)) == (*(_49628_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1cadd8d2e:;
			{
				{
					auto &_match_expr{ (*(_49643_r)) };
					
					if (_match_expr.type == &__jule_any_type97) {
						_case_begin_1cadd96c0:;
						{
							goto _match_end_1cadd9967;
						}
					}
					else {
						_case_begin_1cadd99bc:;
						{
							return false;;
						}
					}
					_match_end_1cadd9967:;
				};
				jule::Ptr<_1b9b46097_StructSubIdentExprModel> _5099_lsi = (*(_49628_l)).cast_ptr<_1b9b46097_StructSubIdentExprModel>(&__jule_any_type97);;
				jule::Ptr<_1b9b46097_StructSubIdentExprModel> _5109_rsi = (*(_49643_r)).cast_ptr<_1b9b46097_StructSubIdentExprModel>(&__jule_any_type97);;
				if (((*(_5099_lsi))._field_Field != (*(_5109_rsi))._field_Field)) {
					return false;;
				};
				return _1b9d9d365_areSameLvalueExprModel(&((*((*(_5099_lsi))._field_Expr))._field_Model), &((*((*(_5109_rsi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1cadd8d95:;
			{
				{
					auto &_match_expr{ (*(_49643_r)) };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_1caddbaac:;
						{
							jule::Ptr<_1b9b41900_UnaryExprModel> _52213_ul = (*(_49628_l)).cast_ptr<_1b9b41900_UnaryExprModel>(&__jule_any_type110);;
							jule::Ptr<_1b9b41900_UnaryExprModel> _52313_ur = (*(_49643_r)).cast_ptr<_1b9b41900_UnaryExprModel>(&__jule_any_type110);;
							if ((((*((*(_52213_ul))._field_Op))._field_Id != (*((*(_52313_ur))._field_Op))._field_Id) || ((*((*(_52213_ul))._field_Op))._field_Kind != (*((*(_52313_ur))._field_Op))._field_Kind))) {
								return false;;
							};
							return _1b9d9d365_areSameLvalueExprModel(&((*((*(_52213_ul))._field_Expr))._field_Model), &((*((*(_52313_ur))._field_Expr))._field_Model));;
						}
					}
					_match_end_1caddba57:;
				};
			}
		}
		_match_end_1cadd8669:;
	};
	return false;;
}



inline void _1b9d9daa2_doInternalNosafeStobs(_1b9d95c20_exprOptimizer* _727_op, _1ba838c9a_stdCacheData* _747_data, jule::Ptr<_1b9b43506_FnCallExprModel>* _772_m) {
	jule::Any _89_model = jule::Any(jule::new_ptr<_1b9d8d894_InlineStdInternalNosafeStobs>(_1b9d8d894_InlineStdInternalNosafeStobs{._field_Str=(*((*(_772_m))))._field_Args[0LL]}), &__jule_any_type129);;
	{
		(*((*(_727_op))._field_model))=(*(((jule::Any*)((&(_89_model))))));
	};
}



inline void _1ba83943d_buildCache(jule::Ptr<_1ba834944_IR>* _2720_ir) {
	_1ba839680_buildStdInternalNosafeCache(_2720_ir);
}



inline void _1ba839680_buildStdInternalNosafeCache(jule::Ptr<_1ba834944_IR>* _3137_ir) {
	jule::Ptr<_1b9bb4126_Package> _329_p = _1ba83a263_getPackage(_3137_ir, &(_1ba83885a_stdPackageInternalNosafe));;
	if ((_329_p == nullptr)) {
		return;;
	};
	_1ba839a26_pushCache(&(_329_p), jule::Str::lit("Stobs", 5), jule::Fn<void(_1b9d95c20_exprOptimizer*,_1ba838c9a_stdCacheData*,jule::Ptr<_1b9b43506_FnCallExprModel>*)>(_1b9d9daa2_doInternalNosafeStobs));
}



inline void _1ba839a26_pushCache(jule::Ptr<_1b9bb4126_Package>* _4119_p, jule::Str _4132_ident, jule::Fn<void(_1b9d95c20_exprOptimizer*,_1ba838c9a_stdCacheData*,jule::Ptr<_1b9b43506_FnCallExprModel>*)> _4144_do) {
	jule::Ptr<_1b9b5216e_FnIns> _429_f = _1ba839dde_getFunc(_4119_p, &(_4132_ident));;
	_1ba8391c9_stdCache[static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_429_f))]=_1ba838c9a_stdCacheData{._field_f=_429_f, ._field_do=_4144_do};
}



inline jule::Ptr<_1b9b5216e_FnIns> _1ba839dde_getFunc(jule::Ptr<_1b9bb4126_Package>* _5017_p, jule::Str* _5031_ident) {
	;
	jule::Ptr<_1b9b4e26a_Fn> _529_f = _1b9bb56aa_FindFn((*(_5017_p)).ptr(), (*(_5031_ident)), false);;
	if ((_529_f == nullptr)) {
		return nullptr;;
	};
	return (*(_529_f))._field_Instances[0LL];;
}



inline jule::Ptr<_1b9bb4126_Package> _1ba83a263_getPackage(jule::Ptr<_1ba834944_IR>* _5920_ir, jule::Str* _5930_path) {
	{
		auto expr = &((*((*(_5920_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cae4472a:;
		if (it != expr_end) {
			jule::Ptr<_1b9bb1200_ImportInfo> _6017_u = *it;
			{
				if (((*(_6017_u))._field_Std && ((*(_6017_u))._field_LinkPath == (*(_5930_path))))) {
					return (*(_6017_u))._field_Package;;
				};
			}
			_iter_next_1cae4472a:;
			++it;
			goto _iter_begin_1cae4472a;
		}
		_iter_end_1cae4472a:;
	};
	return nullptr;;
}



inline void _1ba83cdae_PushOptLevel(jule::I32 _3417_level) {
	jule::Bool _355_l1 = (_3417_level >= static_cast<jule::I32>(1LL));;
	jule::Bool _365_l2 = (_3417_level >= static_cast<jule::I32>(2LL));;
	_1ba83a9a0_Copy=_355_l1;
	_1ba83acad_Deadcode=_355_l1;
	_1ba83b077_Append=_355_l1;
	_1ba83b385_Math=_355_l1;
	_1ba83b64e_Access=_355_l1;
	_1ba83b918_Inline=_355_l1;
	_1ba83bbd2_Ptr=_355_l1;
	_1ba83c0ab_Cond=_355_l1;
	_1ba83c375_Str=_355_l1;
	_1ba83c63e_Slice=_355_l1;
	_1ba83c908_Assign=_355_l1;
	_1ba83cbc2_StdInternalNosafe=_365_l2;
}



inline void _1c766e62e_detectEnabled(void) {
	_1c766c0aa_exprEnabled=((((_1ba83bbd2_Ptr || _1ba83b385_Math) || _1ba83b64e_Access) || _1ba83c0ab_Cond) || _1ba83cbc2_StdInternalNosafe);
	_1c766c330_scopeEnabled=(((((_1ba83c0ab_Cond || _1ba83b077_Append) || _1ba83a9a0_Copy) || _1ba83c375_Str) || _1ba83c63e_Slice) || _1ba83c908_Assign);
	_1c766c5e9_stdEnabled=_1ba83cbc2_StdInternalNosafe;
}



inline void _1c7698438_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_23d321e80_Exit(1LL);
}



inline jule::U64 _1c8037700_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));;
}



inline jule::Bool _1c7e5ebcc_isCopyOptimizable(jule::Ptr<_1b9c5d016_Data>* _82323_expr) {
	if ((!((*((*(_82323_expr))))._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_82323_expr))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1cb031c24:;
			{
				return false;;
			}
		}
		_match_end_1cb031bbe:;
	};
	return true;;
}



inline jule::Bool _1c7e60095_isIterCopyOptimizable(jule::Ptr<_1b9c5d016_Data>* _83427_expr, jule::Ptr<_1b9c09611_Var>* _83441_v) {
	if (((!((*((*(_83427_expr))))._field_Lvalue)) && (!(_1b9c8ea5e_Mutable((*((*(_83427_expr))))._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*((*(_83441_v))))._field_Mutable)) && (!((*((*(_83427_expr))))._field_Mutable)));;
}



inline jule::Str _1c7e75385_decomposeCommonEsq(jule::U8 _148523_b) {
	{
		auto &_match_expr{ _148523_b };
		
		if (_match_expr == '\\') {
			_case_begin_1cb1277dc:;
			{
				return jule::Str::lit("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1cb127e4c:;
			{
				return jule::Str::lit("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1cb1279a7:;
			{
				return jule::Str::lit("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1cb127a1d:;
			{
				return jule::Str::lit("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1cb127a84:;
			{
				return jule::Str::lit("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1cb127aea:;
			{
				return jule::Str::lit("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1cb128117:;
			{
				return jule::Str::lit("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1cb12817d:;
			{
				return jule::Str::lit("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1cb1281e4:;
			{
				return jule::Str::lit("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1cb12825a:;
			{
				return jule::Str::lit("\\v", 2);;
			}
		}
		else {
			_case_begin_1cb127941:;
			{
				return jule::Str();;
			}
		}
		_match_end_1cb11d23e:;
	};
}



inline jule::Str _1c7e75693_sbtoa(jule::U8 _151210_b) {
	if ((_151210_b == 0LLU)) {
		return jule::Str::lit("\\x00", 4);;
	};
	if ((_151210_b < 128LLU)) {
		jule::Str _15179_seq = _1c7e75385_decomposeCommonEsq(_151210_b);;
		if (!(_15179_seq).empty()) {
			return _15179_seq;;
		};
		if (((32LL <= _151210_b) && (_151210_b <= 126LLU))) {
			return jule::Str::from_byte(_151210_b);;
		};
	};
	jule::Str _15255_seq = _1ec672134_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_151210_b)), 8LL);;
	if ((_15255_seq.len() == 2LL)) {
		return (jule::Str::lit("\\0", 2) + _15255_seq);;
	};
	return (jule::Str::lit("\\", 1) + _15255_seq);;
}



inline void _1c7e7597e_cstrBytes(_23d16295d_StrBuilder* _153219_s, jule::Str _153234_ctx) {
	{
		auto expr = &(_153234_ctx);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb12c160:;
		if (it != expr_end) {
			jule::U8 *_153312_b = it;
			{
				_23d16b604_WriteStr(_153219_s, _1c7e75693_sbtoa((*(_153312_b))));
			}
			_iter_next_1cb12c160:;
			++it;
			goto _iter_begin_1cb12c160;
		}
		_iter_end_1cb12c160:;
	};
}



inline void _1c7e75cae_cstrLit(_23d16295d_StrBuilder* _153817_s, jule::Str _153832_ctx) {
	_23d16b8ac_WriteByte(_153817_s, '\"');
	_1c7e7597e_cstrBytes(_153817_s, _153832_ctx);
	_23d16b8ac_WriteByte(_153817_s, '\"');
}



inline void _1c7e76155_ftoa(_23d16295d_StrBuilder* _154414_s, jule::F64 _154429_f, jule::I32 _154437_bitsize) {
	if ((_154437_bitsize != 32LL)) {
		if ((_154429_f == static_cast<jule::F64>(static_cast<jule::I64>(_154429_f)))) {
			_1c7e76441_itoa(_154414_s, static_cast<jule::I64>(static_cast<jule::I64>(_154429_f)));
			return;;
		};
		if ((_154429_f == static_cast<jule::F64>(static_cast<jule::U64>(_154429_f)))) {
			_1c7e7672c_utoa(_154414_s, static_cast<jule::U64>(static_cast<jule::U64>(_154429_f)));
			return;;
		};
	};
	jule::Str _15555_m = _1ec65aa79_FmtFloat(_154429_f, 'f', -1LL, _154437_bitsize);;
	_23d16b604_WriteStr(_154414_s, _15555_m);
	if ((!(_23d152ca0_Contains(_15555_m, jule::Str::lit(".", 1))))) {
		_23d16b604_WriteStr(_154414_s, jule::Str::lit(".0", 2));
	};
}



inline void _1c7e76441_itoa(_23d16295d_StrBuilder* _156214_s, jule::I64 _156229_x) {
	{
		
		if ((_156229_x == jule::MAX_I64)) {
			_case_begin_1cb131ce1:;
			{
				_23d16b604_WriteStr(_156214_s, jule::Str::lit("jule::MAX_I64", 13));
				return;;
			}
		}
		else if ((_156229_x == jule::MIN_I64)) {
			_case_begin_1cb131d68:;
			{
				_23d16b604_WriteStr(_156214_s, jule::Str::lit("jule::MIN_I64", 13));
				return;;
			}
		}
		_match_end_1cb131bd1:;
	};
	_23d16b604_WriteStr(_156214_s, _1ec6724ec_FmtInt(_156229_x, 10LL));
	if (_23d215bba_Is64Bit(jule::Str::lit("i386", 4))) {
		_23d16b8ac_WriteByte(_156214_s, 'L');
	};
	_23d16b8ac_WriteByte(_156214_s, 'L');
}



inline void _1c7e7672c_utoa(_23d16295d_StrBuilder* _157914_s, jule::U64 _157929_x) {
	{
		
		if ((_157929_x == jule::MAX_U64)) {
			_case_begin_1cb133e69:;
			{
				_23d16b604_WriteStr(_157914_s, jule::Str::lit("jule::MAX_U64", 13));
				return;;
			}
		}
		_match_end_1cb133d6a:;
	};
	_23d16b604_WriteStr(_157914_s, _1ec672134_FmtUint(_157929_x, 10LL));
	if (_23d215bba_Is64Bit(jule::Str::lit("i386", 4))) {
		_23d16b8ac_WriteByte(_157914_s, 'L');
	};
	_23d16b604_WriteStr(_157914_s, jule::Str::lit("LU", 2));
}



inline jule::Bool _1c7e76b06_isForwarded(jule::Ptr<_1b9b8ecc2_Scope>* _159317_s) {
	jule::Any _15945_last = (*((*(_159317_s))))._field_Stmts[((*((*(_159317_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _15945_last };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1cb136103:;
			{
				{
					auto &_match_expr{ (*(_15945_last.cast_ptr<_1b9c5d016_Data>(&__jule_any_type24)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1cb136e6c:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1cb136e06:;
						{
							return false;;
						}
					}
					_match_end_1cb136da1:;
				};
			}
		}
		else {
			_case_begin_1cb136202:;
			{
				return true;;
			}
		}
		_match_end_1cb135630:;
	};
}



inline jule::Bool _1c7e76dc0_isExprComesFromBind(jule::Ptr<_1b9c5d016_Data>* _160825_d) {
	{
		auto &_match_expr{ (*((*(_160825_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1cb137665:;
			{
				return (*((*((*(_160825_d))))._field_Model.cast_ptr<_1b9c09611_Var>(&__jule_any_type8)))._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1cb1376cb:;
			{
				return (*((*((*((*((*(_160825_d))))._field_Model.cast_ptr<_1b9b46097_StructSubIdentExprModel>(&__jule_any_type97)))._field_Owner))._field_Decl))._field_Binded;;
			}
		}
		else {
			_case_begin_1cb1375ee:;
			{
				return false;;
			}
		}
		_match_end_1cb137599:;
	};
}



inline jule::Bool _1c7e77189_isAny(jule::Ptr<_1b9c8d1cd_TypeKind>* _162015_t) {
	if ((_1b9c91368_TypeEnum((*(_162015_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1b9c95ca7_Prim> _16245_prim = _1b9c9082e_Prim((*(_162015_t)).ptr());;
	return ((_16245_prim != nullptr) && _1b9c994c5_IsAny(_16245_prim.ptr()));;
}



inline void _1c804ba44_iterFiles(jule::Ptr<_1b9bb4126_Package>* _135119_pkg, jule::Fn<void(jule::Ptr<_1b9c57ce1_SymbolTable>*)> _135134_f) {
	{
		auto expr = &((*((*(_135119_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb33e54d:;
		if (it != expr_end) {
			jule::Ptr<_1b9c57ce1_SymbolTable> _135217_file = *it;
			{
				_135134_f(&(_135217_file));
			}
			_iter_next_1cb33e54d:;
			++it;
			goto _iter_begin_1cb33e54d;
		}
		_iter_end_1cb33e54d:;
	};
}



inline jule::Str _1c804bd52_concatAllParts(jule::Slice<jule::Ptr<_1b9b032eb_Token>> _135819_parts) {
	jule::I32 _13599_n = 0LL;;
	{
		auto expr = &(_135819_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb340252:;
		if (it != expr_end) {
			jule::Ptr<_1b9b032eb_Token> *_136012_part = it;
			{
				_13599_n+=(*((*(_136012_part))))._field_Kind.len();
			}
			_iter_next_1cb340252:;
			++it;
			goto _iter_begin_1cb340252;
		}
		_iter_end_1cb340252:;
	};
	if ((_13599_n == 0LL)) {
		return jule::Str();;
	};
	_23d16295d_StrBuilder _13669_s = static__23d162c7c_New(_13599_n);;
	{
		auto expr = &(_135819_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb3401ec:;
		if (it != expr_end) {
			jule::Ptr<_1b9b032eb_Token> *_136712_p = it;
			{
				_23d16b604_WriteStr(&_13669_s, (*((*(_136712_p))))._field_Kind);
			}
			_iter_next_1cb3401ec:;
			++it;
			goto _iter_begin_1cb3401ec;
		}
		_iter_end_1cb3401ec:;
	};
	return _23d16bdeb_Str(&_13669_s);;
}



inline jule::Bool _1c804c1c6_containsTraitMethod(jule::Ptr<_1b9b62514_Trait>* _137429_t, jule::Str* _137441_ident) {
	{
		auto expr = &((*((*(_137429_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb3427c6:;
		if (it != expr_end) {
			jule::Ptr<_1b9b4e26a_Fn> _137512_m = *it;
			{
				if (((*(_137512_m))._field_Ident == (*(_137441_ident)))) {
					return true;;
				};
			}
			_iter_next_1cb3427c6:;
			++it;
			goto _iter_begin_1cb3427c6;
		}
		_iter_end_1cb3427c6:;
	};
	return false;;
}



inline void _1c804c506_pushMethodsFromInherit(jule::Ptr<_1b9b62514_Trait>* _138632_dest, jule::Ptr<_1b9b62514_Trait>* _138651_src) {
	_1c804c7e2_pushMethodsFromInherits(_138632_dest, _138651_src);
	{
		auto expr = &((*((*(_138651_src))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb343299:;
		if (it != expr_end) {
			jule::Ptr<_1b9b4e26a_Fn> _138817_m = *it;
			{
				if ((!(_1c804c1c6_containsTraitMethod(_138632_dest, &((*(_138817_m))._field_Ident))))) {
					{ jule::Slice<jule::Ptr<_1b9b4e26a_Fn>> &__jule_push_dest = (*((*(_138632_dest))))._field_Methods; __jule_push_dest.push(_138817_m); };
				};
			}
			_iter_next_1cb343299:;
			++it;
			goto _iter_begin_1cb343299;
		}
		_iter_end_1cb343299:;
	};
}



inline void _1c804c7e2_pushMethodsFromInherits(jule::Ptr<_1b9b62514_Trait>* _139733_dest, jule::Ptr<_1b9b62514_Trait>* _139752_src) {
	{
		auto expr = &((*((*(_139752_src))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb344388:;
		if (it != expr_end) {
			jule::Ptr<_1b9c953a0_TypeSymbol> _139817_inh = *it;
			{
				jule::Ptr<_1b9b62514_Trait> _139913_t2 = _1b9c92138_Trait((*(_139817_inh))._field_Kind.ptr());;
				_1c804c506_pushMethodsFromInherit(_139733_dest, &(_139913_t2));
			}
			_iter_next_1cb344388:;
			++it;
			goto _iter_begin_1cb344388;
		}
		_iter_end_1cb344388:;
	};
}



inline jule::Bool _1c804caab_isOpMethod(jule::Ptr<_1b9b4e26a_Fn>* _140516_m) {
	if ((((*((*(_140516_m))))._field_Generics.len() > 0LL) || ((*((*(_140516_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	jule::Ptr<_1b9b5216e_FnIns> _14095_mi = (*((*(_140516_m))))._field_Instances[0LL];;
	;
	;
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Eq)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Gt)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_GtEq)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Lt)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_LtEq)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Shl)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Shr)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Add)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Sub)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Div)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Mul)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Mod)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_BitAnd)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_BitOr)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_BitXor)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Neg)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Pos)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_BitNot)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_AddAssign)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_SubAssign)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_DivAssign)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_MulAssign)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_ModAssign)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_ShlAssign)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_ShrAssign)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_BitOrAssign)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_BitAndAssign)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_BitXorAssign)) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1c804cd75_isHeadDecl(jule::Ptr<_1b9b4e26a_Fn>* _142120_m) {
	if ((((*((*(_142120_m))))._field_Generics.len() > 0LL) || ((*((*(_142120_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	if (_1c804caab_isOpMethod(_142120_m)) {
		return true;;
	};
	jule::Ptr<_1b9b5216e_FnIns> _14289_mi = (*((*(_142120_m))))._field_Instances[0LL];;
	;
	return static__1b9c0aa63_Dispose(_1b9b3d19e_FindMethod((*(_14289_mi))._field_Owner.ptr(), jule::Str::lit("Dispose", 7), false));;
}



inline jule::Ptr<_1b9b17bd4_Directive> _1c805b944_findDirective(jule::Slice<jule::Ptr<_1b9b17bd4_Directive>>* _48023_directives, jule::Str _48054_tag) {
	{
		auto expr = _48023_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb4867c7:;
		if (it != expr_end) {
			jule::Ptr<_1b9b17bd4_Directive> _48117_dr = *it;
			{
				if (((*((*(_48117_dr))._field_Tag))._field_Kind == _48054_tag)) {
					return _48117_dr;;
				};
			}
			_iter_next_1cb4867c7:;
			++it;
			goto _iter_begin_1cb4867c7;
		}
		_iter_end_1cb4867c7:;
	};
	return nullptr;;
}



inline jule::Bool _1c805bd0c_hasDirective(jule::Slice<jule::Ptr<_1b9b17bd4_Directive>>* _49018_directives, jule::Str _49049_tag) {
	return (_1c805b944_findDirective(&((*(_49018_directives))), _49049_tag) != nullptr);;
}



inline jule::Bool _1c805c0c6_shouldInitialized(jule::Ptr<_1b9c8d1cd_TypeKind>* _49727_t) {
	jule::Ptr<_1b9c95ca7_Prim> _4985_prim = _1b9c9082e_Prim((*(_49727_t)).ptr());;
	if ((_4985_prim != nullptr)) {
		return ((!(_1b9c994c5_IsAny(_4985_prim.ptr()))) && (!(_1b9c9923e_IsStr(_4985_prim.ptr()))));;
	};
	{
		
		if ((_1b9c90ab5_Sptr((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1cb489478:;
			{
				return false;;
			}
		}
		else if ((_1b9c923be_Map((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1cb4894de:;
			{
				return false;;
			}
		}
		else if ((_1b9c91885_Slc((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1cb489566:;
			{
				return false;;
			}
		}
		else if ((_1b9c92138_Trait((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1cb4895dd:;
			{
				return false;;
			}
		}
		else if ((_1b9c91b1b_Fn((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1cb489665:;
			{
				return false;;
			}
		}
		else if ((_1b9c915ee_Arr((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1cb4896dc:;
			{
				jule::Ptr<_1b9c9c5c7_Arr> _51413_arr = _1b9c915ee_Arr((*(_49727_t)).ptr());;
				return _1c805c0c6_shouldInitialized(&((*(_51413_arr))._field_Elem));;
			}
		}
		else if ((_1b9c91da2_Struct((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1cb489764:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1cb48871e:;
			{
				return true;;
			}
		}
		_match_end_1cb4884ee:;
	};
}



inline void _23d32647e_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _23d326704_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_23d32647e_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I32 _419_max = _23d326292_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_23d326292_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb534358:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_4212_k = it;
			{
				jule::I32 _439_n = (*(_4212_k))[0LL].len();;
				if ((_439_n > _419_max)) {
					_419_max=_439_n;
				};
			}
			_iter_next_1cb534358:;
			++it;
			goto _iter_begin_1cb534358;
		}
		_iter_end_1cb534358:;
	};
	_23d16295d_StrBuilder _499_s = static__23d162c7c_New(32LL);;
	;
	{
		auto expr = &(_23d326292_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb535865:;
		if (it != expr_end) {
			jule::I32 _519_i = it - expr->begin();
			jule::Array<jule::Str,2> *_5112_part = it;
			{
				_23d16b604_WriteStr(&_499_s, (*(_5112_part))[0LL]);
				_23d16b604_WriteStr(&_499_s, _23d14c2a5_Repeat(jule::Str::lit(" ", 1), static_cast<jule::I32>(((_419_max - (*(_5112_part))[0LL].len()) + 5LL))));
				_23d16b604_WriteStr(&_499_s, (*(_5112_part))[1LL]);
				if (((_519_i + 1LL) < 5LL)) {
					_23d16b8ac_WriteByte(&_499_s, '\n');
				};
			}
			_iter_next_1cb535865:;
			++it;
			_519_i++;
			goto _iter_begin_1cb535865;
		}
		_iter_end_1cb535865:;
	};
	jule::outln(_499_s);
}



inline void _23d326935_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_23d32647e_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("jule0.0.15 @master", 18));
}



inline void _23d326b33_toolDistos(void) {
	jule::out(jule::Str::lit("supported operating systems:\n ", 30));
	jule::out(jule::Str::lit("windows", 7));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("linux", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("darwin", 6));
	jule::outln(jule::Str());
}



inline void _23d326ca9_toolDistarch(void) {
	jule::out(jule::Str::lit("supported architects:\n ", 23));
	jule::out(jule::Str::lit("amd64", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("i386", 4));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("arm64", 5));
	jule::outln(jule::Str());
}



inline void _23d326eda_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_23d32647e_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1055_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1055_cmd };
		
		if (_match_expr == jule::Str::lit("distos", 6)) {
			_case_begin_1cb53b89e:;
			{
				_23d326b33_toolDistos();
			}
		}
		else if (_match_expr == jule::Str::lit("distarch", 8)) {
			_case_begin_1cb53b7c2:;
			{
				_23d326ca9_toolDistarch();
			}
		}
		else {
			_case_begin_1cb53b0a7:;
			{
				_23d32647e_printErrorMessage((jule::Str::lit("undefined command: ", 19) + _1055_cmd));
			}
		}
		_match_end_1cb53b382:;
	};
}



inline void _23d32721b_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_23d32647e_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("julec version: jule0.0.15 @master", 33));
	jule::outln(jule::Str::lit("architecture: i386", 18));
	jule::outln(jule::Str::lit("operating system: linux", 23));
	jule::outln((jule::Str::lit("default compiler: ", 18) + _22e07ed40_Compiler));
	jule::outln((jule::Str::lit("default C++ standard: ", 22) + _22e080280_CppStd));
}



inline void _23d327529_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("command is not given, try julec mod init", 40));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_23d32647e_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str::lit("init", 4)) {
			_case_begin_1cb5400ab:;
			{
				({
					auto except = static__23bca8be3_Write(jule::Str::lit("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_23d32647e_printErrorMessage(jule::Str::lit("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1cb53e9a1:;
			{
				_23d32647e_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1cb53eb05:;
	};
}



inline jule::Bool _23d3277e3_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str::lit("help", 4)) {
			_case_begin_1cb541640:;
			{
				_23d326704_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("version", 7)) {
			_case_begin_1cb5416a6:;
			{
				_23d326935_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("tool", 4)) {
			_case_begin_1cb54171c:;
			{
				_23d326eda_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("julenv", 6)) {
			_case_begin_1cb541783:;
			{
				_23d32721b_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("mod", 3)) {
			_case_begin_1cb540e7a:;
			{
				_23d327529_mod(_15320_args);
			}
		}
		else {
			_case_begin_1cb540e14:;
			{
				return false;;
			}
		}
		_match_end_1cb540809:;
	};
	return true;;
}



inline void _23d327969_showInfo(void) {
	jule::outln(jule::Str::lit("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307));
}



void entry_point(void) {
	jule::Slice<jule::Str> _1899_args = _23bd7d7e0_Args();;
	if ((_1899_args.len() < 2LL)) {
		_23d327969_showInfo();
		return;;
	};
	if (_23d3277e3_processCommand(&(_1899_args))) {
		return;;
	};
	_1c80d2c84_compileCommand(&(_1899_args));
}



inline void _1c80cea83_init(void) {
	_22e07ed40_Compiler=jule::Str::lit("clang", 5);
}



inline jule::Ptr<_23bca7d8a_File> _1c80ced5d_openOutput(jule::Str* _4316_path) {
	jule::Str _445_dir = _23d170949_Dir((*(_4316_path)));;
	({
		auto except = static__23bc9c940_Of(_445_dir);
		if (!except.ok()) {
			({
				auto except = static__23d172ebd_Create(_445_dir);
				if (!except.ok()) {
					_1c7698438_Throw(jule::Str::lit("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__23bca8583_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_1c7698438_Throw(jule::Str::lit("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1c80ceed4_clearObjects(void) {
	({
		auto except = static__23bc9b0ae_Remove(_1c80d11d3_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str::lit("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__23d1731ee_Remove(_1c80ce335_OutDir);
}



inline void _1c80d0314_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_23d2c02e6_Cmd> _739_cmd = static__23d2c0714_New(_7214_compiler);;
	(*(_739_cmd))._field_Args=_23d15292b_Split(_7229_compilerCmd, jule::Str::lit(" ", 1), -1LL);
	({
		auto except = _23d2c0912_Spawn(_739_cmd.ptr());
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1cb54769b:;
					{
						static__1c76947b9_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I32>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1cb546cc7:;
					{
						static__1c76947b9_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1cb546ed6:;
					{
						static__1c76947b9_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1cb546e3c:;
			};
			_1c7698438_Throw(jule::Str());
		}
	});
	jule::I32 _865_status = ({
		auto except = _23d2c0d96_Wait(_739_cmd.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:15"));
		(except.result);
	});;
	if ((_865_status != 0LL)) {
		jule::Str _889_errorMessage = ((jule::Str::lit("\n>>> your backend compiler (", 28) + _22e07ed40_Compiler) + jule::Str::lit(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1c76947b9_Print(jule::Str::lit("\033[31m", 5), _889_errorMessage);
		_1c7698438_Throw(jule::Str());
	};
	_1c80ceed4_clearObjects();
}



inline jule::Bool _1c80d05cd_isCppSourceFile(jule::Str _9920_path) {
	jule::I32 _1005_offset = _23d151287_FindLastByte(_9920_path, '.');;
	if ((_1005_offset == -1LL)) {
		return false;;
	};
	return _23d20456b_IsValidCppExt(_9920_path.slice(_1005_offset));;
}



inline void _1c80d080e_pushCompCmdClang(_23d16295d_StrBuilder* _10726_cmd) {
	_23d16b604_WriteStr(_10726_cmd, jule::Str::lit("-Wno-everything ", 16));
	_23d16b604_WriteStr(_10726_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _22e080280_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1cb549b10:;
			{
				_23d16b604_WriteStr(_10726_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1cb54ab88:;
			{
				_23d16b604_WriteStr(_10726_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1cb54abee:;
			{
				_23d16b604_WriteStr(_10726_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1cb54a1d7:;
	};
	_23d16b8ac_WriteByte(_10726_cmd, ' ');
	if (_22e08143a_Production) {
		_23d16b604_WriteStr(_10726_cmd, jule::Str::lit("-O3 ", 4));
		_23d16b604_WriteStr(_10726_cmd, jule::Str::lit("-flto ", 6));
		_23d16b604_WriteStr(_10726_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_23d16b604_WriteStr(_10726_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_23d16b604_WriteStr(_10726_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline void _1c80d0a40_pushCompCmdGcc(_23d16295d_StrBuilder* _13324_cmd) {
	_23d16b604_WriteStr(_13324_cmd, jule::Str::lit("-w ", 3));
	_23d16b604_WriteStr(_13324_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _22e080280_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1cb54dcce:;
			{
				_23d16b604_WriteStr(_13324_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1cb54c31b:;
			{
				_23d16b604_WriteStr(_13324_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1cb54c382:;
			{
				_23d16b604_WriteStr(_13324_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1cb54dc79:;
	};
	_23d16b8ac_WriteByte(_13324_cmd, ' ');
	if (_22e08143a_Production) {
		_23d16b604_WriteStr(_13324_cmd, jule::Str::lit("-O3 ", 4));
		_23d16b604_WriteStr(_13324_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_23d16b604_WriteStr(_13324_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_23d16b604_WriteStr(_13324_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline __jule_tuple_str__jule_tuple_str _1c80d0ec4_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1ba834944_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_1606_compiler = &(_22e080060_CompilerPath);;
	_23d16295d_StrBuilder _1619_cmd = static__23d162c7c_New(64LL);;
	{
		auto &_match_expr{ _22e07ed40_Compiler };
		
		if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1cb551892:;
			{
				_1c80d0a40_pushCompCmdGcc(&(_1619_cmd));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1cb551ebe:;
			{
				_1c80d080e_pushCompCmdClang(&(_1619_cmd));
			}
		}
		_match_end_1cb551a5c:;
	};
	{
		auto expr = &((*((*(_15936_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb5521de:;
		if (it != expr_end) {
			jule::Ptr<_1b9bb1200_ImportInfo> *_17112_u = it;
			{
				if (((*((*(_17112_u))))._field_Binded && _1c80d05cd_isCppSourceFile((*((*(_17112_u))))._field_Path))) {
					_23d16b604_WriteStr(&_1619_cmd, (*((*(_17112_u))))._field_Path);
					_23d16b8ac_WriteByte(&_1619_cmd, ' ');
				};
			}
			_iter_next_1cb5521de:;
			++it;
			goto _iter_begin_1cb5521de;
		}
		_iter_end_1cb5521de:;
	};
	if (!(_1c80ce8c9_Out).empty()) {
		_23d16b604_WriteStr(&_1619_cmd, jule::Str::lit("-o ", 3));
		_23d16b604_WriteStr(&_1619_cmd, _1c80ce8c9_Out);
		_23d16b8ac_WriteByte(&_1619_cmd, ' ');
	};
	_23d16b604_WriteStr(&_1619_cmd, _15918_sourcePath);
	{
		auto expr = &((*((*(_15936_ir))))._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1cb554cb3:;
		if (it != expr_end) {
			jule::Str *_18612_pass = it;
			{
				_23d16b8ac_WriteByte(&_1619_cmd, ' ');
				_23d16b604_WriteStr(&_1619_cmd, (*(_18612_pass)));
			}
			_iter_next_1cb554cb3:;
			++it;
			goto _iter_begin_1cb554cb3;
		}
		_iter_end_1cb554cb3:;
	};
	if (_23d32306e_Os.equal("windows", 7)) {
		_23d16b604_WriteStr(&_1619_cmd, jule::Str::lit(" -lshell32", 10));
	};
	__jule_func_result.__jule_result_arg0 = (*(_1606_compiler));
	__jule_func_result.__jule_result_arg1 = _23d16bdeb_Str(&_1619_cmd);
	return __jule_func_result;;
}



inline jule::Str _1c80d11d3_getCompilePath(void) {
	return _23d16ec56_Join(jule::Slice<jule::Str>::make({_1c80ce335_OutDir,_1c80ce610_OutName}));;
}



inline void _1c80d1414_applyTargetIndependentOptimizations(jule::Ptr<_1ba834944_IR>* _20545_ir) {
	jule::Ptr<_1c766c880_Optimizer> _2069_opt = static__1c766ccc0_New(_20545_ir);;
	_1c766e3a9_Optimize(_2069_opt.ptr());
}



inline void _1c80d158a_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _22e07ed40_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1cb5560a0:;
			{
				_1c7698438_Throw(jule::Str::lit("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1cb557304:;
			{
				if ((_22e080060_CompilerPath).empty()) {
					_22e080060_CompilerPath=jule::Str::lit("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1cb556ed5:;
			{
				if ((_22e080060_CompilerPath).empty()) {
					_22e080060_CompilerPath=jule::Str::lit("g++", 3);
				};
			}
		}
		else {
			_case_begin_1cb556e6e:;
			{
				_1c7698438_Throw((jule::Str::lit("invalid option value for --compiler: ", 37) + _22e07ed40_Compiler));
			}
		}
		_match_end_1cb556a84:;
	};
}



inline void _1c80d17bb_checkTargetArch(jule::Str _22720_arch) {
	if ((((!_22720_arch.equal("amd64", 5)) && (!_22720_arch.equal("arm64", 5))) && (!_22720_arch.equal("i386", 4)))) {
		_1c7698438_Throw((jule::Str::lit("--target: unsupported/undefined architecture: ", 46) + _22720_arch));
	};
}



inline void _1c80d19ec_checkTargetOs(jule::Str _23518_os) {
	if ((((!_23518_os.equal("windows", 7)) && (!_23518_os.equal("linux", 5))) && (!_23518_os.equal("darwin", 6)))) {
		_1c7698438_Throw((jule::Str::lit("--target: unsupported/undefined operating system: ", 50) + _23518_os));
	};
}



inline void _1c80d1c2d_checkTargetFlag(jule::Str* _24321_target) {
	if (((*(_24321_target))).empty()) {
		_1c7698438_Throw(jule::Str::lit("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2485_parts = _23d15292b_Split((*(_24321_target)), jule::Str::lit("-", 1), -1LL);;
	if ((_2485_parts.len() != 2LL)) {
		_1c7698438_Throw((jule::Str::lit("--target: undefined platform target format: ", 44) + (*(_24321_target))));
	};
	jule::Str _2535_os;;
	jule::Str _2539_arch;;
	({
		jule::Str ___jule_assign_arg = _2485_parts[0LL];
		jule::Str _1___jule_assign_arg = _2485_parts[1LL];
		_2535_os = ___jule_assign_arg;
		_2539_arch = _1___jule_assign_arg;
	});
	if ((!_2535_os.equal("native", 6))) {
		_1c80d19ec_checkTargetOs(_2535_os);
		_23d32306e_Os=_2535_os;
	};
	if ((!_2539_arch.equal("native", 6))) {
		_1c80d17bb_checkTargetArch(_2539_arch);
		_23d323338_Arch=_2539_arch;
	};
	_1ec676c1b_UpdateTarget();
}



inline void _1c80d1e5e_checkOptFlag(jule::Str* _26618_opt) {
	if (((*(_26618_opt))).empty()) {
		_1c7698438_Throw(jule::Str::lit("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26618_opt)) };
		
		if (_match_expr == jule::Str::lit("L0", 2)) {
			_case_begin_1cb55d629:;
			{
				goto _match_end_1cb55d6b2;
			}
		}
		else if (_match_expr == jule::Str::lit("L1", 2)) {
			_case_begin_1cb55da9c:;
			{
				_1ba83cdae_PushOptLevel(static_cast<jule::I32>(1LL));
			}
		}
		else if (_match_expr == jule::Str::lit("L2", 2)) {
			_case_begin_1cb55db13:;
			{
				_1ba83cdae_PushOptLevel(static_cast<jule::I32>(2LL));
			}
		}
		else {
			_case_begin_1cb55da36:;
			{
				_1c7698438_Throw((jule::Str::lit("--opt: invalid optimization level: ", 35) + (*(_26618_opt))));
			}
		}
		_match_end_1cb55d6b2:;
	};
}



inline void _1c80d22e4_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _22e080280_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5) || _match_expr == jule::Str::lit("cpp17", 5) || _match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1cb55db79:;
			{
				goto _match_end_1cb55ec57;
			}
		}
		else {
			_case_begin_1cb55e938:;
			{
				_1c7698438_Throw((jule::Str::lit("--cppstd: invalid cpp standard: ", 32) + _22e080280_CppStd));
			}
		}
		_match_end_1cb55ec57:;
	};
}



inline jule::Slice<jule::Str> _1c80d2558_checkFlags(jule::Slice<jule::Str>* _29416_args) {
	jule::Str _2959_opt = jule::Str::lit("L0", 2);;
	jule::Str _2969_target = jule::Str::lit("native-native", 13);;
	jule::Ptr<_1c80c44c3_FlagSet> _2989_fs = static__1c80c47ae_New();;
	_1cb5617b4_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2959_opt)))), jule::Str::lit("opt", 3), 0LL, jule::Str::lit("Optimization level", 18));
	_1cb5617b4_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2969_target)))), jule::Str::lit("target", 6), 0LL, jule::Str::lit("Target system", 13));
	_1cb5617b4_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1c80ce8c9_Out)))), jule::Str::lit("out", 3), 'o', jule::Str::lit("Output identifier", 17));
	_1cb569b1e_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_22e0804a0_Shadowing)))), jule::Str::lit("shadowing", 9), 0LL, jule::Str::lit("Allow shadowing", 15));
	_1cb569b1e_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_22e080714_Transpilation)))), jule::Str::lit("transpile", 9), 't', jule::Str::lit("Transpile code", 14));
	_1cb5617b4_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_22e07ed40_Compiler)))), jule::Str::lit("compiler", 8), 0LL, jule::Str::lit("Backend compiler", 16));
	_1cb5617b4_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_22e080060_CompilerPath)))), jule::Str::lit("compiler-path", 13), 0LL, jule::Str::lit("Path of backend compiler", 24));
	_1cb569b1e_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_22e08143a_Production)))), jule::Str::lit("production", 10), 'p', jule::Str::lit("Compile for production", 22));
	_1cb569b1e_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_22e080c97_RC)))), jule::Str::lit("disable-rc", 10), 0LL, jule::Str::lit("Disable reference counting", 26));
	_1cb569b1e_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_22e081171_Safety)))), jule::Str::lit("disable-safety", 14), 0LL, jule::Str::lit("Disable safety", 14));
	_1cb5617b4_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_22e080280_CppStd)))), jule::Str::lit("cppstd", 6), 0LL, jule::Str::lit("C++ standard", 12));
	_1cb569b1e_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ba83a9a0_Copy)))), jule::Str::lit("opt-copy", 8), 0LL, jule::Str::lit("Copy optimization", 17));
	_1cb569b1e_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ba83acad_Deadcode)))), jule::Str::lit("opt-deadcode", 12), 0LL, jule::Str::lit("Deadcode optimization", 21));
	_1cb569b1e_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ba83b077_Append)))), jule::Str::lit("opt-append", 10), 0LL, jule::Str::lit("Append optimization", 19));
	_1cb569b1e_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ba83b385_Math)))), jule::Str::lit("opt-math", 8), 0LL, jule::Str::lit("Math optimization", 17));
	_1cb569b1e_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ba83b64e_Access)))), jule::Str::lit("opt-access", 10), 0LL, jule::Str::lit("Access optimization", 19));
	_1cb569b1e_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ba83b918_Inline)))), jule::Str::lit("opt-inline", 10), 0LL, jule::Str::lit("Inline optimization", 19));
	_1cb569b1e_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ba83bbd2_Ptr)))), jule::Str::lit("opt-ptr", 7), 0LL, jule::Str::lit("Pointer optimizations", 21));
	_1cb569b1e_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ba83c0ab_Cond)))), jule::Str::lit("opt-cond", 8), 0LL, jule::Str::lit("Conditional optimizations", 25));
	_1cb569b1e_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ba83c375_Str)))), jule::Str::lit("opt-str", 7), 0LL, jule::Str::lit("String optimizations", 20));
	_1cb569b1e_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ba83c63e_Slice)))), jule::Str::lit("opt-slice", 9), 0LL, jule::Str::lit("Slice optimizations", 19));
	_1cb569b1e_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ba83c908_Assign)))), jule::Str::lit("opt-assign", 10), 0LL, jule::Str::lit("Assignment optimizations", 24));
	_1cb569b1e_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ba83cbc2_StdInternalNosafe)))), jule::Str::lit("opt-internal-nosafe", 19), 0LL, jule::Str::lit("Special optimizations for std::internal::nosafe", 47));
	jule::Slice<jule::Str> _3249_content = ({
		auto except = _1c80c564a_Parse(_2989_fs.ptr(), (*(_29416_args)));
		(except.ok()) ? (except.result) : ({
			_1c7698438_Throw(except.error.cast<jule::Str>(&__jule_any_type4));

			nullptr;
		});
	});;
	_1c80d158a_checkCompilerFlag();
	_1c80d22e4_checkCppStdFlag();
	_1c80d1c2d_checkTargetFlag(&(_2969_target));
	_1c80d1e5e_checkOptFlag(&(_2959_opt));
	return _3249_content;;
}



inline void _1c80d2789_setupSemaFlags(jule::I32* _33724_flags) {
	if (_22e0804a0_Shadowing) {
		(*(_33724_flags))|=static_cast<jule::I32>(1LL);
	};
}



inline jule::Ptr<_1ba834944_IR> _1c80d2a53_buildIr(jule::Slice<jule::Str>* _34313_args) {
	jule::Slice<jule::Str> _3445_content = _1c80d2558_checkFlags(_34313_args);;
	jule::I32 _3469_semaFlags = static_cast<jule::I32>(0LL);;
	_1c80d2789_setupSemaFlags(&(_3469_semaFlags));
	if ((_3445_content.len() == 0LL)) {
		_1c7698438_Throw(_23d2115bc_Logf(jule::Str::lit("missing compile path", 20), jule::Slice<jule::Any>()));
	} else if ((_3445_content.len() > 1LL)) {
		_1c7698438_Throw((jule::Str::lit("undefined content: ", 19) + _3445_content[1LL]));
	};
	jule::Str _3549_path;;
	jule::Bool _35415_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _23d1702d9_Abs(_3445_content[0LL]);
		_3549_path = __jule_assign_result.__jule_result_arg0;
		_35415_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_35415_ok))) {
		_1c7698438_Throw(jule::Str::lit("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_23bcaa684_Status> _3605_inf = ({
		auto except = static__23bc9c940_Of(_23d32248b_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1c7698438_Throw(_23d2115bc_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_23bcaa684_Status>(nullptr);});
	});;
	if ((!(_23bcaaa5d_IsDir(_3605_inf.ptr())))) {
		_1c7698438_Throw(_23d2115bc_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1ba834944_IR> _3689_ir;;
	jule::Slice<_23d21115a_Log> _36813_logs;;
	({
		__jule_tuple_x_1ba834944_IR__jule_tuple_s_23d21115a_Log __jule_assign_result = static__1ba834da6_Build(_3549_path, _3469_semaFlags);
		_3689_ir = __jule_assign_result.__jule_result_arg0;
		_36813_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3689_ir == nullptr) && (_36813_logs == nullptr))) {
		_1c7698438_Throw(_23d2115bc_Logf(jule::Str::lit("there is no Jule source code in package: @", 42), jule::Slice<jule::Any>::make({jule::Any(_3549_path, &__jule_any_type4)})));
	};
	if ((_36813_logs != nullptr)) {
		static__1c7697965_PrintLogs(&(_36813_logs));
		_1c7698438_Throw(jule::Str());
	};
	return _3689_ir;;
}



inline void _1c80d2c84_compileCommand(jule::Slice<jule::Str>* _38324_args) {
	((*(_38324_args))).mut_slice(1LL);;
	if ((*(_38324_args))[0LL].equal("test", 4)) {
		_22e0809cd_Test=true;
		((*(_38324_args))).mut_slice(1LL);;
	};
	jule::Ptr<_1ba834944_IR> _3899_ir = _1c80d2a53_buildIr(_38324_args);;
	;
	if ((!(_22e0809cd_Test))) {
		jule::Ptr<_1b9b4e26a_Fn> _39413_main = _1b9bb56aa_FindFn((*(_3899_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);;
		if ((_39413_main == nullptr)) {
			_1c7698438_Throw(_23d2115bc_Logf(jule::Str::lit("missing entry point: entry point (main) function is not defined", 63), jule::Slice<jule::Any>()));
		};
	};
	_1c80d1414_applyTargetIndependentOptimizations(&(_3899_ir));
	_1ba835e1d_Order(_3899_ir.ptr());
	jule::Str _4055_compPath = _1c80d11d3_getCompilePath();;
	jule::Str _4065_compiler;;
	jule::Str _40615_compilerCmd;;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1c80d0ec4_genCompileCmd(_4055_compPath, &(_3899_ir));
		_4065_compiler = __jule_assign_result.__jule_result_arg0;
		_40615_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1c803eaae_ObjectCoder> _4089_oc = static__1c803eeaa_New(&(_3899_ir), _1c803d096_SerializationInfo{._field_Compiler=_4065_compiler, ._field_CompilerCommand=_40615_compilerCmd});;
	if (_22e0809cd_Test) {
		jule::Ptr<_1c7e78036_TestCoder> _41313_tc = static__1c7e78476_New(&(_4089_oc));;
		_1c7e797eb_Serialize(_41313_tc);
	} else {
		_1c804b659_Serialize(_4089_oc);
	};
	jule::Ptr<_23bca7d8a_File> _4199_file = _1c80ced5d_openOutput(&(_4055_compPath));;
	({
		auto except = _23bc9b543_Write(_4199_file.ptr(), _23d16c89c_Buf(&(*(_4089_oc))._field_Obj));
		if (!except.ok()) {
			_1c7698438_Throw(jule::Str::lit("object code could not write", 27));
		}
	});
	({
		auto except = _23bca9b28_Close(_4199_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:423:5"));
	});
	if ((!(_22e080714_Transpilation))) {
		_1c80d0314_compileIr(_4065_compiler, _40615_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_23d32346a_init();
	_1ec676d92_init();
	_1c80cea83_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}